###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           20/Mar/2013  07:53:40 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-          #
#                    14.03.2013\Framework\WizFi.c                             #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\Framework\WizFi.c" -D AT91SAM7S256 -D         #
#                    AT91SAM7SEK -D iH -D __ALARM -D __WIFI_MODULE -D S300i   #
#                    -D _TESTER_ -lC "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.3 BETA- 14.03.2013\TESTER S300i\List\"                #
#                    --diag_suppress Pa082 -o "D:\Zeuron\Projekty\S300\S300-p #
#                    rogram v1.3 BETA- 14.03.2013\TESTER S300i\Obj\"          #
#                    --no_unroll --no_inline --no_tbaa --no_scheduling        #
#                    --debug --endian little --cpu ARM7TDMI -e --fpu None     #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 5.0\ARM\INC\DLib_Config_Norma #
#                    l.h" -I "D:\Zeuron\Projekty\S300\S300-program v1.3       #
#                    BETA- 14.03.2013\lib\AT91SAM7S256\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.3 BETA- 14.03.2013\cdc\" -I                           #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\core\" -I "D:\Zeuron\Projekty\S300\S300-progr #
#                    am v1.3 BETA- 14.03.2013\startup\" -I                    #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\Framework\" -I "D:\Zeuron\Projekty\S300\S300- #
#                    program v1.3 BETA- 14.03.2013\Framework\Configuration\"  #
#                    -I "C:\Program Files (x86)\IAR Systems\Embedded          #
#                    Workbench 5.0\ARM\INC\" --section .text=Debug.txt        #
#                    --interwork --cpu_mode thumb -Om                         #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-          #
#                    14.03.2013\TESTER S300i\List\WizFi.lst                   #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-          #
#                    14.03.2013\TESTER S300i\Obj\WizFi.o                      #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v1.3 BETA- 14.03.2013\Framework\WizFi.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                 CEURON                                                   *//
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : WizFi.c                                 *//
      7          //*  Opis                         : Obs³uga modu³u WizFi                      *//
      8          //*  Autor                        : Pawe³ Narwojsz                           *//
      9          //*  Data utrzorzenia             : 31.01.2012                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*//
     19          //****************************************************************************//
     20          
     21          #include "WizFi.h"

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v1.3 BETA- 14.03.2013\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline

   
   ^
"D:\Zeuron\Projekty\S300\S300-program v1.3 BETA- 14.03.2013\Framework\WizFi.h",171  Warning[Pe001]: 
          last line of file ends without a newline
     22          #include "Framework.h"
     23          #include "core/device.h"                                                        //aduje bibliotreki dla odpowiedniego procesora
     24          #include "main_H.h" 
     25          #include "string.h"

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __intrinsic __code __interwork char *strstr(char const *, char const *)
   \                     strstr:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   ........           BL       __iar_Strstr
   \   00000006   08BC               POP      {R3}
   \   00000008   02BC               POP      {R1}
   \   0000000A   0847               BX       R1               ;; return
     26          #include "WizFiCommand.h"
     27          
     28          
     29          
     30          
     31          
     32          /*
     33            extern char Variables[]; 
     34            extern BYTE Buff_TX_1[];
     35            extern short int VariablesAnal[];
     36            extern unsigned long long  g_counter;
     37            long long WiFi_TimeOut_Counter;
     38            
     39            
     40            
     41                  
     42           _WiFi WiFi;
     43           _WiFiStatus  WiFiStat;
     44           _HTTP  HTTP;
     45           //_SSID   g_SSID_List[20];
     46          */ 
     47          
     48          
     49          extern unsigned long long  g_counter;                                              //globalny licznik milisekundowy od w³¹czenia/restartu sterownika
     50          extern char Variables[];    //zmienne
     51          extern short int VariablesAnal[];    //zmienne
     52          extern _ProgramTab gProg;
     53          extern _MainStage  MainStage; 
     54          
     55            //
     56          //funkcja CheckVarChangeHTTP --------------------------------
     57          //funkcja sprawdza czy zmieni³y siê zmienne sprawdzane przez strone web. Je¿eli tak to wyœlij zmiany

   \                                 In section Debug.txt, align 4, keep-with-next
     58          void CheckVarChangeHTTP(char *SendBuff,  AT91PS_USART USART, _Net *Net)
     59          {
   \                     CheckVarChangeHTTP:
   \   00000000   75B5               PUSH     {R0,R2,R4-R6,LR}
     60          
     61            static long long AnalogPeriod;
     62            
     63            if (Net->Status.HostLink==CONNECTED)
   \   00000002   1000               MOVS     R0,R2
   \   00000004   401C               ADDS     R0,R0,#+1
   \   00000006   0090               STR      R0,[SP, #+0]
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0328               CMP      R0,#+3
   \   0000000C   00D0               BEQ      .+4
   \   0000000E   A1E0               B        ??CheckVarChangeHTTP_0
     64            {
     65               char Zmiana=0;
   \   00000010   0024               MOVS     R4,#+0
   \   00000012   2500               MOVS     R5,R4
     66               for (char IDX=0; IDX<Net->HTTP.VarSetCount; IDX++)
   \   00000014   19E0               B        ??CheckVarChangeHTTP_1
     67               {  
     68                 switch (Net->HTTP.NetNodeSet[IDX].NetDataType)
     69                 {                  
     70                    case 'b': 
     71                         if (((Variables[Net->HTTP.NetNodeSet[IDX].VarNr/8]>>(Net->HTTP.NetNodeSet[IDX].VarNr%8))&0x1) != (Net->HTTP.NetNodeSet[IDX].Value)) {Zmiana++;}
     72                    break;
     73                    case 'a': 
     74                      if (AnalogPeriod<g_counter) {Zmiana++; AnalogPeriod=g_counter+30000;}
     75                    break;  
     76                    case 'c': 
     77                      if (AnalogPeriod<g_counter) {Zmiana++; AnalogPeriod=g_counter+30000;}
     78                    break; 
     79                    
     80                    case 'd': 
     81                      if (GetSpecialBinarVar(Net->HTTP.NetNodeSet[IDX].NodeNr)!=Net->HTTP.NetNodeSet[IDX].Value) Zmiana++;
                                 ^
Warning[Pe223]: function "GetSpecialBinarVar" declared implicitly
     82                    break; 
     83                    
     84                    case 'i': 
     85                       if ( (PortStageRead(MainStage.StageI[Net->HTTP.NetNodeSet[IDX].NodeNr].Port, Net->HTTP.NetNodeSet[IDX].PortNr)) != (Net->HTTP.NetNodeSet[IDX].Value)) {Zmiana++;}
     86                    break; 
     87                    
     88                    case 'q': 
     89                       if ( (PortStageRead(MainStage.StageQ[Net->HTTP.NetNodeSet[IDX].NodeNr].Port, Net->HTTP.NetNodeSet[IDX].PortNr)) != (Net->HTTP.NetNodeSet[IDX].Value)) {Zmiana++;}
   \                     ??CheckVarChangeHTTP_2:
   \   00000016   8178               LDRB     R1,[R0, #+2]
   \   00000018   504A               LDR      R2,??CheckVarChangeHTTP_3  ;; 0x3a2
   \   0000001A   4078               LDRB     R0,[R0, #+1]
   \   0000001C   1623               MOVS     R3,#+22
   \   0000001E   5843               MULS     R0,R3,R0
   \   00000020   4F4B               LDR      R3,??CheckVarChangeHTTP_3+0x4  ;; MainStage
   \   00000022   1818               ADDS     R0,R3,R0
   \   00000024   805A               LDRH     R0,[R0, R2]
   \   00000026   0004               LSLS     R0,R0,#+16
   \   00000028   0014               ASRS     R0,R0,#+16
   \   0000002A   ........           BL       PortStageRead
   \   0000002E   F936               ADDS     R6,R6,#+249
   \   00000030   3278               LDRB     R2,[R6, #+0]
   \   00000032   7178               LDRB     R1,[R6, #+1]
   \   00000034   0906               LSLS     R1,R1,#+24
   \   00000036   0914               ASRS     R1,R1,#+16
   \   00000038   0A43               ORRS     R2,R2,R1
   \   0000003A   9042               CMP      R0,R2
   \   0000003C   02D0               BEQ      ??CheckVarChangeHTTP_4
   \   0000003E   6D1C               ADDS     R5,R5,#+1
   \   00000040   2D06               LSLS     R5,R5,#+24
   \   00000042   2D0E               LSRS     R5,R5,#+24
   \                     ??CheckVarChangeHTTP_4:
   \   00000044   641C               ADDS     R4,R4,#+1
   \   00000046   2406               LSLS     R4,R4,#+24
   \   00000048   240E               LSRS     R4,R4,#+24
   \                     ??CheckVarChangeHTTP_1:
   \   0000004A   2000               MOVS     R0,R4
   \   0000004C   0199               LDR      R1,[SP, #+4]
   \   0000004E   F231               ADDS     R1,R1,#+242
   \   00000050   0978               LDRB     R1,[R1, #+0]
   \   00000052   8842               CMP      R0,R1
   \   00000054   69D2               BCS      ??CheckVarChangeHTTP_5
   \   00000056   0521               MOVS     R1,#+5
   \   00000058   4843               MULS     R0,R1,R0
   \   0000005A   0199               LDR      R1,[SP, #+4]
   \   0000005C   0E18               ADDS     R6,R1,R0
   \   0000005E   3000               MOVS     R0,R6
   \   00000060   F630               ADDS     R0,R0,#+246
   \   00000062   0178               LDRB     R1,[R0, #+0]
   \   00000064   6129               CMP      R1,#+97
   \   00000066   24D0               BEQ      ??CheckVarChangeHTTP_6
   \   00000068   6229               CMP      R1,#+98
   \   0000006A   08D0               BEQ      ??CheckVarChangeHTTP_7
   \   0000006C   6329               CMP      R1,#+99
   \   0000006E   20D0               BEQ      ??CheckVarChangeHTTP_6
   \   00000070   6429               CMP      R1,#+100
   \   00000072   33D0               BEQ      ??CheckVarChangeHTTP_8
   \   00000074   6929               CMP      R1,#+105
   \   00000076   40D0               BEQ      ??CheckVarChangeHTTP_9
   \   00000078   7129               CMP      R1,#+113
   \   0000007A   CCD0               BEQ      ??CheckVarChangeHTTP_2
   \   0000007C   E2E7               B        ??CheckVarChangeHTTP_4
   \                     ??CheckVarChangeHTTP_7:
   \   0000007E   F936               ADDS     R6,R6,#+249
   \   00000080   3178               LDRB     R1,[R6, #+0]
   \   00000082   7278               LDRB     R2,[R6, #+1]
   \   00000084   1206               LSLS     R2,R2,#+24
   \   00000086   1214               ASRS     R2,R2,#+16
   \   00000088   1143               ORRS     R1,R1,R2
   \   0000008A   4278               LDRB     R2,[R0, #+1]
   \   0000008C   D210               ASRS     R2,R2,#+3
   \   0000008E   354B               LDR      R3,??CheckVarChangeHTTP_3+0x8  ;; Variables
   \   00000090   9B5C               LDRB     R3,[R3, R2]
   \   00000092   4278               LDRB     R2,[R0, #+1]
   \   00000094   1000               MOVS     R0,R2
   \   00000096   C008               LSRS     R0,R0,#+3
   \   00000098   C000               LSLS     R0,R0,#+3
   \   0000009A   101A               SUBS     R0,R2,R0
   \   0000009C   0341               ASRS     R3,R3,R0
   \   0000009E   0120               MOVS     R0,#+1
   \   000000A0   1840               ANDS     R0,R0,R3
   \   000000A2   0904               LSLS     R1,R1,#+16
   \   000000A4   0914               ASRS     R1,R1,#+16
   \   000000A6   8842               CMP      R0,R1
   \   000000A8   CCD0               BEQ      ??CheckVarChangeHTTP_4
   \   000000AA   6D1C               ADDS     R5,R5,#+1
   \   000000AC   2D06               LSLS     R5,R5,#+24
   \   000000AE   2D0E               LSRS     R5,R5,#+24
   \   000000B0   C8E7               B        ??CheckVarChangeHTTP_4
   \                     ??CheckVarChangeHTTP_6:
   \   000000B2   ....               LDR      R0,??DataTable4  ;; g_counter
   \   000000B4   03C8               LDM      R0!,{R0,R1}
   \   000000B6   2C4E               LDR      R6,??CheckVarChangeHTTP_3+0xC  ;; ??AnalogPeriod
   \   000000B8   0CCE               LDM      R6!,{R2,R3}
   \   000000BA   083E               SUBS     R6,R6,#+8
   \   000000BC   8B42               CMP      R3,R1
   \   000000BE   C1D8               BHI      ??CheckVarChangeHTTP_4
   \   000000C0   01D3               BCC      ??CheckVarChangeHTTP_10
   \   000000C2   8242               CMP      R2,R0
   \   000000C4   BED2               BCS      ??CheckVarChangeHTTP_4
   \                     ??CheckVarChangeHTTP_10:
   \   000000C6   6D1C               ADDS     R5,R5,#+1
   \   000000C8   2D06               LSLS     R5,R5,#+24
   \   000000CA   2D0E               LSRS     R5,R5,#+24
   \   000000CC   0200               MOVS     R2,R0
   \   000000CE   0B00               MOVS     R3,R1
   \   000000D0   2648               LDR      R0,??CheckVarChangeHTTP_3+0x10  ;; 0x7530
   \   000000D2   0021               MOVS     R1,#+0
   \   000000D4   8018               ADDS     R0,R0,R2
   \   000000D6   5941               ADCS     R1,R1,R3
   \   000000D8   03C6               STM      R6!,{R0,R1}
   \   000000DA   B3E7               B        ??CheckVarChangeHTTP_4
   \                     ??CheckVarChangeHTTP_8:
   \   000000DC   4078               LDRB     R0,[R0, #+1]
   \   000000DE   ........           BL       GetSpecialBinarVar
   \   000000E2   F936               ADDS     R6,R6,#+249
   \   000000E4   3278               LDRB     R2,[R6, #+0]
   \   000000E6   7178               LDRB     R1,[R6, #+1]
   \   000000E8   0906               LSLS     R1,R1,#+24
   \   000000EA   0914               ASRS     R1,R1,#+16
   \   000000EC   0A43               ORRS     R2,R2,R1
   \   000000EE   9042               CMP      R0,R2
   \   000000F0   A8D0               BEQ      ??CheckVarChangeHTTP_4
   \   000000F2   6D1C               ADDS     R5,R5,#+1
   \   000000F4   2D06               LSLS     R5,R5,#+24
   \   000000F6   2D0E               LSRS     R5,R5,#+24
   \   000000F8   A4E7               B        ??CheckVarChangeHTTP_4
   \                     ??CheckVarChangeHTTP_9:
   \   000000FA   8178               LDRB     R1,[R0, #+2]
   \   000000FC   4078               LDRB     R0,[R0, #+1]
   \   000000FE   1622               MOVS     R2,#+22
   \   00000100   5043               MULS     R0,R2,R0
   \   00000102   174A               LDR      R2,??CheckVarChangeHTTP_3+0x4  ;; MainStage
   \   00000104   1018               ADDS     R0,R2,R0
   \   00000106   A030               ADDS     R0,R0,#+160
   \   00000108   0088               LDRH     R0,[R0, #+0]
   \   0000010A   0004               LSLS     R0,R0,#+16
   \   0000010C   0014               ASRS     R0,R0,#+16
   \   0000010E   ........           BL       PortStageRead
   \   00000112   F936               ADDS     R6,R6,#+249
   \   00000114   3278               LDRB     R2,[R6, #+0]
   \   00000116   7178               LDRB     R1,[R6, #+1]
   \   00000118   0906               LSLS     R1,R1,#+24
   \   0000011A   0914               ASRS     R1,R1,#+16
   \   0000011C   0A43               ORRS     R2,R2,R1
   \   0000011E   9042               CMP      R0,R2
   \   00000120   90D0               BEQ      ??CheckVarChangeHTTP_4
   \   00000122   6D1C               ADDS     R5,R5,#+1
   \   00000124   2D06               LSLS     R5,R5,#+24
   \   00000126   2D0E               LSRS     R5,R5,#+24
   \   00000128   8CE7               B        ??CheckVarChangeHTTP_4
     90                    break; 
     91                    
     92                    
     93                 }   
     94               }
     95             
     96               if (Zmiana>0) 
   \                     ??CheckVarChangeHTTP_5:
   \   0000012A   002D               CMP      R5,#+0
   \   0000012C   12D0               BEQ      ??CheckVarChangeHTTP_0
     97               {
     98                 if (Net->Status.HttpNextQueryTime>g_counter+100) Net->Status.HttpNextQueryTime=g_counter+100;  //przyœpieszenie wys³ania danych
   \   0000012E   ....               LDR      R0,??DataTable4  ;; g_counter
   \   00000130   03C8               LDM      R0!,{R0,R1}
   \   00000132   0022               MOVS     R2,#+0
   \   00000134   6430               ADDS     R0,R0,#+100
   \   00000136   5141               ADCS     R1,R1,R2
   \   00000138   019A               LDR      R2,[SP, #+4]
   \   0000013A   3032               ADDS     R2,R2,#+48
   \   0000013C   0CCA               LDM      R2!,{R2,R3}
   \   0000013E   9942               CMP      R1,R3
   \   00000140   05D8               BHI      ??CheckVarChangeHTTP_11
   \   00000142   01D3               BCC      ??CheckVarChangeHTTP_12
   \   00000144   9042               CMP      R0,R2
   \   00000146   02D2               BCS      ??CheckVarChangeHTTP_11
   \                     ??CheckVarChangeHTTP_12:
   \   00000148   019A               LDR      R2,[SP, #+4]
   \   0000014A   3032               ADDS     R2,R2,#+48
   \   0000014C   03C2               STM      R2!,{R0,R1}
     99                 Net->Status.NextHttpOrder=HTTP_POST;
   \                     ??CheckVarChangeHTTP_11:
   \   0000014E   0098               LDR      R0,[SP, #+0]
   \   00000150   1121               MOVS     R1,#+17
   \   00000152   8170               STRB     R1,[R0, #+2]
    100               }
    101            }
    102          
    103          }
   \                     ??CheckVarChangeHTTP_0:
   \   00000154   7CBC               POP      {R2-R6}
   \   00000156   01BC               POP      {R0}
   \   00000158   0047               BX       R0               ;; return
   \   0000015A   C046               Nop      
   \                     ??CheckVarChangeHTTP_3:
   \   0000015C   A2030000           DC32     0x3a2
   \   00000160   ........           DC32     MainStage
   \   00000164   ........           DC32     Variables
   \   00000168   ........           DC32     ??AnalogPeriod
   \   0000016C   30750000           DC32     0x7530

   \                                 In section .bss, align 8
   \                     ??AnalogPeriod:
   \   00000000                      DS8 8
    104          
    105          
    106          
    107              
    108              

   \                                 In section .bss, align 4
    109          char *pt1;    
   \                     pt1:
   \   00000000                      DS8 4
    110          char *pt2;
   \                     pt2:
   \   00000004                      DS8 4

   \                                 In section Debug.txt, align 4, keep-with-next
    111          void InitWizFi(AT91PS_USART USART, _Net *Net)
    112          {
   \                     InitWizFi:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0C00               MOVS     R4,R1
    113            //Net->WiFi.HttpQueryPeriod=5000;    //[ms] okres odpytywania hosta
    114            Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000004   2500               MOVS     R5,R4
   \   00000006   3835               ADDS     R5,R5,#+56
   \   00000008   ....               LDR      R0,??DataTable4  ;; g_counter
   \   0000000A   0CC8               LDM      R0!,{R2,R3}
   \   0000000C   ....               LDR      R0,??DataTable3  ;; 0x2710
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   8018               ADDS     R0,R0,R2
   \   00000012   5941               ADCS     R1,R1,R3
   \   00000014   03C5               STM      R5!,{R0,R1}
   \   00000016   083D               SUBS     R5,R5,#+8
    115               
    116             pt1=(char*)&Net->WiFi;
   \   00000018   1348               LDR      R0,??InitWizFi_0  ;; pt1
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   5031               ADDS     R1,R1,#+80
   \   0000001E   0160               STR      R1,[R0, #+0]
    117             pt2=(char*)(&AT91C_IFLASH_MEM->Config.WiFi);
   \   00000020   1249               LDR      R1,??InitWizFi_0+0x4  ;; 0x13d8b8
   \   00000022   4160               STR      R1,[R0, #+4]
    118            for (short i=0; i<sizeof(_WiFi); i++) pt1[i]=pt2[i];
   \   00000024   0022               MOVS     R2,#+0
   \   00000026   06E0               B        ??InitWizFi_1
   \                     ??InitWizFi_2:
   \   00000028   0368               LDR      R3,[R0, #+0]
   \   0000002A   4668               LDR      R6,[R0, #+4]
   \   0000002C   B65C               LDRB     R6,[R6, R2]
   \   0000002E   9E54               STRB     R6,[R3, R2]
   \   00000030   521C               ADDS     R2,R2,#+1
   \   00000032   1204               LSLS     R2,R2,#+16
   \   00000034   1214               ASRS     R2,R2,#+16
   \                     ??InitWizFi_1:
   \   00000036   1300               MOVS     R3,R2
   \   00000038   1B04               LSLS     R3,R3,#+16
   \   0000003A   1B0C               LSRS     R3,R3,#+16
   \   0000003C   A22B               CMP      R3,#+162
   \   0000003E   F3D3               BCC      ??InitWizFi_2
    119            
    120            
    121            Net->WiFi.On=AT91C_IFLASH_MEM->Config.WiFi.On;
   \   00000040   0878               LDRB     R0,[R1, #+0]
   \   00000042   2876               STRB     R0,[R5, #+24]
    122            Net->WiFi.HttpQueryPeriod=AT91C_IFLASH_MEM->Config.WiFi.HttpQueryPeriod;
   \   00000044   EE34               ADDS     R4,R4,#+238
   \   00000046   0A48               LDR      R0,??InitWizFi_0+0x8  ;; 0x13d956
   \   00000048   0088               LDRH     R0,[R0, #+0]
   \   0000004A   2080               STRH     R0,[R4, #+0]
    123            if ((Net->WiFi.HttpQueryPeriod==0) || (Net->WiFi.HttpQueryPeriod>60)) Net->WiFi.HttpQueryPeriod=8;              //je¿eli 0 to ustaw 8 czyli 800ms   
   \   0000004C   0020               MOVS     R0,#+0
   \   0000004E   205E               LDRSH    R0,[R4, R0]
   \   00000050   0028               CMP      R0,#+0
   \   00000052   03D0               BEQ      ??InitWizFi_3
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   205E               LDRSH    R0,[R4, R0]
   \   00000058   3D28               CMP      R0,#+61
   \   0000005A   01DB               BLT      ??InitWizFi_4
   \                     ??InitWizFi_3:
   \   0000005C   0820               MOVS     R0,#+8
   \   0000005E   2080               STRH     R0,[R4, #+0]
    124          }   
   \                     ??InitWizFi_4:
   \   00000060   70BC               POP      {R4-R6}
   \   00000062   01BC               POP      {R0}
   \   00000064   0047               BX       R0               ;; return
   \   00000066   C046               Nop      
   \                     ??InitWizFi_0:
   \   00000068   ........           DC32     pt1
   \   0000006C   B8D81300           DC32     0x13d8b8
   \   00000070   56D91300           DC32     0x13d956
    125          
    126          
    127           
    128          
    129          //G³ówna funkcja WiFi
    130          //Funkcja wywo³ywania ci¹gle w pêtli g³ównej programu

   \                                 In section Debug.txt, align 4, keep-with-next
    131          void WiFi(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    132          {
   \                     WiFi:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0F00               MOVS     R7,R1
   \   00000006   1600               MOVS     R6,R2
   \   00000008   1D00               MOVS     R5,R3
    133               if (Net->Status.Error>3)    //przekroczenie dopuszczalnej iloœci b³êdów
   \   0000000A   687D               LDRB     R0,[R5, #+21]
   \   0000000C   0428               CMP      R0,#+4
   \   0000000E   0CD3               BCC      ??WiFi_0
    134               {
    135                  Net->Status.Error=0;
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   0100               MOVS     R1,R0
   \   00000014   6975               STRB     R1,[R5, #+21]
    136                  Net->Status.HostLink=DISCONNECTED;
   \   00000016   6970               STRB     R1,[R5, #+1]
    137                  Net->Status.AccesPointAssociate=DISCONNECTED;
   \   00000018   2870               STRB     R0,[R5, #+0]
    138                  Net->Status.Timeout=0;
   \   0000001A   2A00               MOVS     R2,R5
   \   0000001C   3832               ADDS     R2,R2,#+56
   \   0000001E   03C2               STM      R2!,{R0,R1}
    139                  Net->Status.HttpNextQueryTime=0;
   \   00000020   2A00               MOVS     R2,R5
   \   00000022   3032               ADDS     R2,R2,#+48
   \   00000024   03C2               STM      R2!,{R0,R1}
    140                  Net->Status.FreezTime=0;
   \   00000026   2864               STR      R0,[R5, #+64]
   \   00000028   6964               STR      R1,[R5, #+68]
    141               }
    142            
    143            
    144               //sprawdzenie Timeoutu
    145               if ((Net->Status.FreezTime==0) || (Net->Status.FreezTime<g_counter))
   \                     ??WiFi_0:
   \   0000002A   6A46               MOV      R2,SP
   \   0000002C   ....               LDR      R0,??DataTable4  ;; g_counter
   \   0000002E   03C8               LDM      R0!,{R0,R1}
   \   00000030   03C2               STM      R2!,{R0,R1}
   \   00000032   286C               LDR      R0,[R5, #+64]
   \   00000034   696C               LDR      R1,[R5, #+68]
   \   00000036   0029               CMP      R1,#+0
   \   00000038   01D1               BNE      ??WiFi_1
   \   0000003A   0028               CMP      R0,#+0
   \   0000003C   08D0               BEQ      ??WiFi_2
   \                     ??WiFi_1:
   \   0000003E   0200               MOVS     R2,R0
   \   00000040   0B00               MOVS     R3,R1
   \   00000042   6846               MOV      R0,SP
   \   00000044   03C8               LDM      R0!,{R0,R1}
   \   00000046   8B42               CMP      R3,R1
   \   00000048   67D8               BHI      ??WiFi_3
   \   0000004A   01D3               BCC      ??WiFi_2
   \   0000004C   8242               CMP      R2,R0
   \   0000004E   64D2               BCS      ??WiFi_3
    146               {  
    147                   if ((Net->Status.Timeout<g_counter) && (Net->Status.Timeout>0))
   \                     ??WiFi_2:
   \   00000050   2800               MOVS     R0,R5
   \   00000052   3830               ADDS     R0,R0,#+56
   \   00000054   0CC8               LDM      R0!,{R2,R3}
   \   00000056   6846               MOV      R0,SP
   \   00000058   03C8               LDM      R0!,{R0,R1}
   \   0000005A   8B42               CMP      R3,R1
   \   0000005C   29D8               BHI      ??WiFi_4
   \   0000005E   01D3               BCC      ??WiFi_5
   \   00000060   8242               CMP      R2,R0
   \   00000062   26D2               BCS      ??WiFi_4
   \                     ??WiFi_5:
   \   00000064   2800               MOVS     R0,R5
   \   00000066   3830               ADDS     R0,R0,#+56
   \   00000068   03C8               LDM      R0!,{R0,R1}
   \   0000006A   0029               CMP      R1,#+0
   \   0000006C   01D1               BNE      ??WiFi_6
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   1FD0               BEQ      ??WiFi_4
    148                   {//Timeout przekroczony
    149                     
    150                      Net->Status.CurrentOrder=WizFi_NC;
   \                     ??WiFi_6:
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0100               MOVS     R1,R0
   \   00000076   A970               STRB     R1,[R5, #+2]
    151                      Net->Status.RepeatOrder=0; 
   \   00000078   6971               STRB     R1,[R5, #+5]
    152                     
    153                      //je¿eli utracono po³¹czenie z hostem
    154                      if (Net->Status.AccesPointAssociate==CONNECTED)                             //je¿eli brak po³¹czenia z serwerem hosta
   \   0000007A   2978               LDRB     R1,[R5, #+0]
   \   0000007C   0329               CMP      R1,#+3
   \   0000007E   0DD1               BNE      ??WiFi_7
    155                          {
    156                             Net->Status.HostLink=DISCONNECTED;
   \   00000080   6870               STRB     R0,[R5, #+1]
    157                             Net->Status.Timeout=0;
   \   00000082   0100               MOVS     R1,R0
   \   00000084   2A00               MOVS     R2,R5
   \   00000086   3832               ADDS     R2,R2,#+56
   \   00000088   03C2               STM      R2!,{R0,R1}
    158                             Net->Status.HttpNextQueryTime=0;
   \   0000008A   2A00               MOVS     R2,R5
   \   0000008C   3032               ADDS     R2,R2,#+48
   \   0000008E   03C2               STM      R2!,{R0,R1}
    159                             Net->Status.FreezTime=0;
   \   00000090   2864               STR      R0,[R5, #+64]
   \   00000092   6964               STR      R1,[R5, #+68]
    160                             Net->Status.Error++;
   \   00000094   687D               LDRB     R0,[R5, #+21]
   \   00000096   401C               ADDS     R0,R0,#+1
   \   00000098   6875               STRB     R0,[R5, #+21]
   \   0000009A   3EE0               B        ??WiFi_3
    161                          }else{
    162                             Net->Status.AccesPointAssociate=DISCONNECTED;
   \                     ??WiFi_7:
   \   0000009C   2870               STRB     R0,[R5, #+0]
    163                             Net->Status.Timeout=0;
   \   0000009E   0100               MOVS     R1,R0
   \   000000A0   2A00               MOVS     R2,R5
   \   000000A2   3832               ADDS     R2,R2,#+56
   \   000000A4   03C2               STM      R2!,{R0,R1}
    164                             Net->Status.HttpNextQueryTime=0;
   \   000000A6   2A00               MOVS     R2,R5
   \   000000A8   3032               ADDS     R2,R2,#+48
   \   000000AA   03C2               STM      R2!,{R0,R1}
    165                             Net->Status.FreezTime=0;
   \   000000AC   4035               ADDS     R5,R5,#+64
   \   000000AE   03C5               STM      R5!,{R0,R1}
   \   000000B0   33E0               B        ??WiFi_3
    166                          }
    167                   }else{
    168                      if (Net->Status.AccesPointAssociate==DISCONNECTED)                      //je¿eli brak po³¹czenia z acces pointem to zainicjalizuj ³¹czenie
   \                     ??WiFi_4:
   \   000000B2   2878               LDRB     R0,[R5, #+0]
   \   000000B4   0028               CMP      R0,#+0
   \   000000B6   19D1               BNE      ??WiFi_8
    169                      {
    170                          for (short i=0; i<sizeof(Buff_RX); i++) Buff_RX[i]=0;
   \   000000B8   0100               MOVS     R1,R0
   \   000000BA   04E0               B        ??WiFi_9
   \                     ??WiFi_10:
   \   000000BC   0200               MOVS     R2,R0
   \   000000BE   6254               STRB     R2,[R4, R1]
   \   000000C0   491C               ADDS     R1,R1,#+1
   \   000000C2   0904               LSLS     R1,R1,#+16
   \   000000C4   0914               ASRS     R1,R1,#+16
   \                     ??WiFi_9:
   \   000000C6   0A00               MOVS     R2,R1
   \   000000C8   1204               LSLS     R2,R2,#+16
   \   000000CA   120C               LSRS     R2,R2,#+16
   \   000000CC   042A               CMP      R2,#+4
   \   000000CE   F5D3               BCC      ??WiFi_10
    171                          Net->Status.AccesPointAssociate=CONNECTING;                         //zmiana statusu RouterAssociate na ³¹czenie 
   \   000000D0   0221               MOVS     R1,#+2
   \   000000D2   2970               STRB     R1,[R5, #+0]
    172                          Net->Status.HostLink=DISCONNECTED;                                  //reset flagi stanu po³¹czenie z hostem
   \   000000D4   0100               MOVS     R1,R0
   \   000000D6   6970               STRB     R1,[R5, #+1]
    173                          Net->Status.CurrentOrder=WizFi_NC;                                  //reset flagi rozkazu
   \   000000D8   A970               STRB     R1,[R5, #+2]
    174                          Net->Status.RepeatOrder=0;
   \   000000DA   6971               STRB     R1,[R5, #+5]
    175                          Net->Status.NextHttpOrder=WizFi_NC;                                 //reset flagi oczekuj¹cego rozkazu
   \   000000DC   E870               STRB     R0,[R5, #+3]
    176                          
    177                          AP_Associate(Buff_RX, Buff_TX,USART,Net);                                    //inicjalizacja po³¹czenie z acces point'em                                                                                                         
   \   000000DE   2B00               MOVS     R3,R5
   \   000000E0   3200               MOVS     R2,R6
   \   000000E2   3900               MOVS     R1,R7
   \   000000E4   2000               MOVS     R0,R4
   \   000000E6   ........           BL       AP_Associate
   \   000000EA   16E0               B        ??WiFi_3
    178                      }else if (Net->Status.AccesPointAssociate==CONNECTED) 
   \                     ??WiFi_8:
   \   000000EC   0328               CMP      R0,#+3
   \   000000EE   14D1               BNE      ??WiFi_3
    179                      {
    180                        if (Net->Status.HostLink==DISCONNECTED)                               //je¿eli brak po³¹czenia z serwerem hosta
   \   000000F0   6878               LDRB     R0,[R5, #+1]
   \   000000F2   0028               CMP      R0,#+0
   \   000000F4   06D1               BNE      ??WiFi_11
    181                          {
    182                             WizFiCommand_AT_NCTCP(Buff_RX, Buff_TX,USART, Net); 
                                    ^
Warning[Pe223]: function "WizFiCommand_AT_NCTCP" declared implicitly
   \   000000F6   2B00               MOVS     R3,R5
   \   000000F8   3200               MOVS     R2,R6
   \   000000FA   3900               MOVS     R1,R7
   \   000000FC   2000               MOVS     R0,R4
   \   000000FE   ........           BL       WizFiCommand_AT_NCTCP
   \   00000102   0AE0               B        ??WiFi_3
    183                          }else if (Net->Status.HostLink==CONNECTED)                          //je¿eli po³¹czony z serwerem hosta
   \                     ??WiFi_11:
   \   00000104   0328               CMP      R0,#+3
   \   00000106   08D1               BNE      ??WiFi_3
    184                          {
    185                             if( Net->Status.CurrentOrder==WizFi_NC)                          //je¿eli brak bierz¹cych zadañ
   \   00000108   A878               LDRB     R0,[R5, #+2]
   \   0000010A   0028               CMP      R0,#+0
   \   0000010C   05D1               BNE      ??WiFi_3
    186                             {
    187                               //if ((Net->Status.HttpNextQueryTime<g_counter) || (Net->Status.HttpNextQueryTime==0))   //je¿eli spe³niony wymagany czas pomiêdzy odpytywaniami
    188                               //{
    189                                                                                              //HTTP_CheckConnection(Buff_TX,  USART, Net);
    190                                  HTTP_Task(Buff_RX, Buff_TX,USART, Net);                                //wykonaj kolejne zadanie HTTP
   \   0000010E   2B00               MOVS     R3,R5
   \   00000110   3200               MOVS     R2,R6
   \   00000112   3900               MOVS     R1,R7
   \   00000114   2000               MOVS     R0,R4
   \   00000116   ........           BL       HTTP_Task
    191                               //}
    192                             }
    193                          }
    194                      }
    195                     
    196                   } //koniec: if ((Net->Status.Timeout<g_counter) && (Net->Status.Timeout>0))
    197               } //koniec: if ((Net->Status.FreezTime==0) || (Net->Status.FreezTime<g_counter))
    198            
    199          }
   \                     ??WiFi_3:
   \   0000011A   FEBC               POP      {R1-R7}
   \   0000011C   01BC               POP      {R0}
   \   0000011E   0047               BX       R0               ;; return
    200          
    201          
    202          
    203           extern long long FuseLastWiFiDataIn;  //zabezpieczenie przed blokad¹ DMA USART. FuseLastWiFiDataIn zawiera czas ostatniej odpowiedzi od usarta. Je¿eli WiFi jest w³¹czone a USART milczy od 30s to restartuj mikroprocesor
    204                        
    205          
    206          //G³ówna funkcja interpretacji odpowiedzi

   \                                 In section Debug.txt, align 4, keep-with-next
    207          void WizFiResponseInterpreter(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    208          {
   \                     WizFiResponseInterpreter:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0F00               MOVS     R7,R1
   \   00000006   1500               MOVS     R5,R2
   \   00000008   1E00               MOVS     R6,R3
   \   0000000A   4C4A               LDR      R2,??WizFiResponseInterpreter_0  ;; FuseLastWiFiDataIn
   \   0000000C   4C48               LDR      R0,??WizFiResponseInterpreter_0+0x4  ;; g_counter
   \   0000000E   03C8               LDM      R0!,{R0,R1}
   \   00000010   03C2               STM      R2!,{R0,R1}
   \   00000012   4C49               LDR      R1,??WizFiResponseInterpreter_0+0x8  ;; `?<Constant "[DISCONNECT">` + 52
   \   00000014   2000               MOVS     R0,R4
    209                char *pTxt;
    210          
    211                FuseLastWiFiDataIn=g_counter;
    212                
    213                if ((strstr(Buff_RX, "[DISASSOCIATED]")!=NULL) || (strstr(Buff_RX, "[ERROR]")!=NULL))
   \   00000016   ........           BL       strstr
   \   0000001A   0028               CMP      R0,#+0
   \   0000001C   05D1               BNE      ??WizFiResponseInterpreter_1
   \   0000001E   4A49               LDR      R1,??WizFiResponseInterpreter_0+0xC  ;; `?<Constant "[DISCONNECT">` + 68
   \   00000020   2000               MOVS     R0,R4
   \   00000022   ........           BL       strstr
   \   00000026   0028               CMP      R0,#+0
   \   00000028   0BD0               BEQ      ??WizFiResponseInterpreter_2
    214                {
    215             
    216                   Net->Status.AccesPointAssociate=DISCONNECTED;
   \                     ??WizFiResponseInterpreter_1:
   \   0000002A   0022               MOVS     R2,#+0
   \   0000002C   1000               MOVS     R0,R2
   \   0000002E   3070               STRB     R0,[R6, #+0]
    217                   Net->Status.HostLink=DISCONNECTED; 
   \   00000030   7070               STRB     R0,[R6, #+1]
    218                   Net->Status.FreezTime=0;
   \   00000032   0100               MOVS     R1,R0
   \   00000034   3064               STR      R0,[R6, #+64]
   \   00000036   7164               STR      R1,[R6, #+68]
    219                   Net->Status.Timeout=0;
   \   00000038   3300               MOVS     R3,R6
   \   0000003A   3833               ADDS     R3,R3,#+56
   \   0000003C   03C3               STM      R3!,{R0,R1}
    220                   Net->Status.CurrentOrder=WizFi_NC;
   \   0000003E   B270               STRB     R2,[R6, #+2]
   \   00000040   79E0               B        ??WizFiResponseInterpreter_3
    221                   
    222                }
    223                
    224                
    225          
    226                else if (Net->Status.AccesPointAssociate==CONNECTING)
   \                     ??WizFiResponseInterpreter_2:
   \   00000042   3078               LDRB     R0,[R6, #+0]
   \   00000044   0228               CMP      R0,#+2
   \   00000046   06D1               BNE      ??WizFiResponseInterpreter_4
    227                {
    228                   AP_AssociateResponseInterpreter(Buff_RX,Buff_TX,USART, Net);           //odpowiedz dla zadania 
   \   00000048   3300               MOVS     R3,R6
   \   0000004A   2A00               MOVS     R2,R5
   \   0000004C   3900               MOVS     R1,R7
   \   0000004E   2000               MOVS     R0,R4
   \   00000050   ........           BL       AP_AssociateResponseInterpreter
   \   00000054   6FE0               B        ??WizFiResponseInterpreter_3
    229                }else if (Net->Status.AccesPointAssociate==CONNECTED) 
   \                     ??WizFiResponseInterpreter_4:
   \   00000056   0328               CMP      R0,#+3
   \   00000058   6DD1               BNE      ??WizFiResponseInterpreter_3
    230                {
    231                    if (strstr(Buff_RX, "send() failed:")!=NULL)
   \   0000005A   3C49               LDR      R1,??WizFiResponseInterpreter_0+0x10  ;; `?<Constant "[DISCONNECT">` + 36
   \   0000005C   2000               MOVS     R0,R4
   \   0000005E   ........           BL       strstr
   \   00000062   0028               CMP      R0,#+0
   \   00000064   0BD0               BEQ      ??WizFiResponseInterpreter_5
    232                    {
    233                      //for (short i=0; i<sizeof(Buff_RX); i++) Buff_RX[i]=0;
    234                      Net->Status.CurrentOrder=WizFi_NC;
   \   00000066   0022               MOVS     R2,#+0
   \   00000068   1000               MOVS     R0,R2
   \   0000006A   B070               STRB     R0,[R6, #+2]
    235                      Net->Status.FreezTime=0;
   \   0000006C   0100               MOVS     R1,R0
   \   0000006E   3064               STR      R0,[R6, #+64]
   \   00000070   7164               STR      R1,[R6, #+68]
    236                      Net->Status.Timeout=0;
   \   00000072   3300               MOVS     R3,R6
   \   00000074   3833               ADDS     R3,R3,#+56
   \   00000076   03C3               STM      R3!,{R0,R1}
    237                      Net->Status.NextHttpOrder=0;
                                                      ^
Warning[Pe188]: enumerated type mixed with another type
   \   00000078   F070               STRB     R0,[R6, #+3]
    238                      Net->Status.HostLink=DISCONNECTED; 
   \   0000007A   7270               STRB     R2,[R6, #+1]
   \   0000007C   5BE0               B        ??WizFiResponseInterpreter_3
    239                    }
    240                    else if (Net->Status.HostLink==CONNECTING)                            //je¿eli ³¹czenie z hostem
   \                     ??WizFiResponseInterpreter_5:
   \   0000007E   7078               LDRB     R0,[R6, #+1]
   \   00000080   0228               CMP      R0,#+2
   \   00000082   06D1               BNE      ??WizFiResponseInterpreter_6
    241                    {
    242                      WizFiResponseCommand_AT_NCTCP(Buff_RX,Buff_TX,USART, Net);          //odpowiedz dla zadania 
                             ^
Warning[Pe223]: function "WizFiResponseCommand_AT_NCTCP" declared implicitly
   \   00000084   3300               MOVS     R3,R6
   \   00000086   2A00               MOVS     R2,R5
   \   00000088   3900               MOVS     R1,R7
   \   0000008A   2000               MOVS     R0,R4
   \   0000008C   ........           BL       WizFiResponseCommand_AT_NCTCP
   \   00000090   51E0               B        ??WizFiResponseInterpreter_3
    243                      
    244                    }
    245                    else if (Net->Status.HostLink==CONNECTED)                             //je¿eli po³¹czono z hostem
   \                     ??WizFiResponseInterpreter_6:
   \   00000092   0328               CMP      R0,#+3
   \   00000094   47D1               BNE      ??WizFiResponseInterpreter_7
    246                    {
    247                       pTxt=strstr(Buff_RX, "[DISCONNECT");                               //jê¿eli porzysz³a informacja o roz³¹czeniu
   \   00000096   2E49               LDR      R1,??WizFiResponseInterpreter_0+0x14  ;; `?<Constant "[DISCONNECT">`
   \   00000098   2000               MOVS     R0,R4
   \   0000009A   ........           BL       strstr
    248                       if ((pTxt!=NULL) && (Net->Status.HostLink==CONNECTED))
   \   0000009E   0028               CMP      R0,#+0
   \   000000A0   1BD0               BEQ      ??WizFiResponseInterpreter_8
   \   000000A2   7178               LDRB     R1,[R6, #+1]
   \   000000A4   0329               CMP      R1,#+3
   \   000000A6   18D1               BNE      ??WizFiResponseInterpreter_8
    249                       {
    250                          if(pTxt[12]==Net->Status.HostChannel) 
   \   000000A8   007B               LDRB     R0,[R0, #+12]
   \   000000AA   B17D               LDRB     R1,[R6, #+22]
   \   000000AC   8842               CMP      R0,R1
   \   000000AE   14D1               BNE      ??WizFiResponseInterpreter_8
    251                           {
    252                             for (short i=0; i<sizeof(Buff_RX); i++) Buff_RX[i]=0; 
   \   000000B0   0022               MOVS     R2,#+0
   \   000000B2   1000               MOVS     R0,R2
   \   000000B4   04E0               B        ??WizFiResponseInterpreter_9
   \                     ??WizFiResponseInterpreter_10:
   \   000000B6   1100               MOVS     R1,R2
   \   000000B8   2154               STRB     R1,[R4, R0]
   \   000000BA   401C               ADDS     R0,R0,#+1
   \   000000BC   0004               LSLS     R0,R0,#+16
   \   000000BE   0014               ASRS     R0,R0,#+16
   \                     ??WizFiResponseInterpreter_9:
   \   000000C0   0100               MOVS     R1,R0
   \   000000C2   0904               LSLS     R1,R1,#+16
   \   000000C4   090C               LSRS     R1,R1,#+16
   \   000000C6   0429               CMP      R1,#+4
   \   000000C8   F5D3               BCC      ??WizFiResponseInterpreter_10
    253                             Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   000000CA   1D48               LDR      R0,??WizFiResponseInterpreter_0+0x4  ;; g_counter
   \   000000CC   03C8               LDM      R0!,{R0,R1}
   \   000000CE   0023               MOVS     R3,#+0
   \   000000D0   3230               ADDS     R0,R0,#+50
   \   000000D2   5941               ADCS     R1,R1,R3
   \   000000D4   3064               STR      R0,[R6, #+64]
   \   000000D6   7164               STR      R1,[R6, #+68]
    254                             Net->Status.HostLink=DISCONNECTED;                           //Roz³¹czenie
   \   000000D8   7270               STRB     R2,[R6, #+1]
    255                           }
    256                        }
    257                       
    258                       
    259                       if (strstr(Buff_RX, "[ERROR: INVALID INPUT]")!=NULL)        //jê¿eli porzysz³a informacja o b³edzie
   \                     ??WizFiResponseInterpreter_8:
   \   000000DA   1E49               LDR      R1,??WizFiResponseInterpreter_0+0x18  ;; `?<Constant "[DISCONNECT">` + 12
   \   000000DC   2000               MOVS     R0,R4
   \   000000DE   ........           BL       strstr
   \   000000E2   0028               CMP      R0,#+0
   \   000000E4   18D0               BEQ      ??WizFiResponseInterpreter_11
    260                        {
    261                            for (short i=0; i<sizeof(Buff_RX); i++) Buff_RX[i]=0;
   \   000000E6   0022               MOVS     R2,#+0
   \   000000E8   1000               MOVS     R0,R2
   \   000000EA   04E0               B        ??WizFiResponseInterpreter_12
   \                     ??WizFiResponseInterpreter_13:
   \   000000EC   1100               MOVS     R1,R2
   \   000000EE   2154               STRB     R1,[R4, R0]
   \   000000F0   401C               ADDS     R0,R0,#+1
   \   000000F2   0004               LSLS     R0,R0,#+16
   \   000000F4   0014               ASRS     R0,R0,#+16
   \                     ??WizFiResponseInterpreter_12:
   \   000000F6   0100               MOVS     R1,R0
   \   000000F8   0904               LSLS     R1,R1,#+16
   \   000000FA   090C               LSRS     R1,R1,#+16
   \   000000FC   0429               CMP      R1,#+4
   \   000000FE   F5D3               BCC      ??WizFiResponseInterpreter_13
    262                            Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   00000100   0F48               LDR      R0,??WizFiResponseInterpreter_0+0x4  ;; g_counter
   \   00000102   03C8               LDM      R0!,{R0,R1}
   \   00000104   0023               MOVS     R3,#+0
   \   00000106   3230               ADDS     R0,R0,#+50
   \   00000108   5941               ADCS     R1,R1,R3
   \   0000010A   3064               STR      R0,[R6, #+64]
   \   0000010C   7164               STR      R1,[R6, #+68]
    263                            Net->Status.HostLink=DISCONNECTED;                            //Roz³¹czenie
   \   0000010E   7270               STRB     R2,[R6, #+1]
    264                            Net->Status.Error++;
   \   00000110   707D               LDRB     R0,[R6, #+21]
   \   00000112   401C               ADDS     R0,R0,#+1
   \   00000114   7075               STRB     R0,[R6, #+21]
   \   00000116   0EE0               B        ??WizFiResponseInterpreter_3
    265                        }
    266                        else
    267                        {
    268                            HTTP_QueryResponse(Buff_RX,Buff_TX,USART, Net); 
   \                     ??WizFiResponseInterpreter_11:
   \   00000118   3300               MOVS     R3,R6
   \   0000011A   2A00               MOVS     R2,R5
   \   0000011C   3900               MOVS     R1,R7
   \   0000011E   2000               MOVS     R0,R4
   \   00000120   ........           BL       HTTP_QueryResponse
   \   00000124   07E0               B        ??WizFiResponseInterpreter_3
    269                        }
    270                                                                                          //if (Net->Status.CurrentOrder==WizFi_AT_CID)
    271                                                                                          //{
    272                                                                                          //   HTTP_CheckConnectionResponse(Buff_RX,Buff_TX,USART, Net);         
    273                                                                                          //}else{
    274                                                                                          //     HTTP_QueryResponse(Buff_RX,Buff_TX,USART, Net); 
    275                                                                                          //}
    276                    }
    277                    else if (Net->Status.HostLink==DISCONNECTING)
   \                     ??WizFiResponseInterpreter_7:
   \   00000126   0128               CMP      R0,#+1
   \   00000128   05D1               BNE      ??WizFiResponseInterpreter_3
    278                    {
    279                       WizFiResponseCommand_AT_NCLOSEALL0(Buff_RX,Buff_TX,USART, Net);
   \   0000012A   3300               MOVS     R3,R6
   \   0000012C   2A00               MOVS     R2,R5
   \   0000012E   3900               MOVS     R1,R7
   \   00000130   2000               MOVS     R0,R4
   \   00000132   ........           BL       WizFiResponseCommand_AT_NCLOSEALL0
    280                    }
    281                }                                                                         //koniec: else if (Net->Status.AccesPointAssociate==CONNECTED) 
    282          }
   \                     ??WizFiResponseInterpreter_3:
   \   00000136   F8BC               POP      {R3-R7}
   \   00000138   01BC               POP      {R0}
   \   0000013A   0047               BX       R0               ;; return
   \                     ??WizFiResponseInterpreter_0:
   \   0000013C   ........           DC32     FuseLastWiFiDataIn
   \   00000140   ........           DC32     g_counter
   \   00000144   ........           DC32     `?<Constant "[DISCONNECT">` + 52
   \   00000148   ........           DC32     `?<Constant "[DISCONNECT">` + 68
   \   0000014C   ........           DC32     `?<Constant "[DISCONNECT">` + 36
   \   00000150   ........           DC32     `?<Constant "[DISCONNECT">`
   \   00000154   ........           DC32     `?<Constant "[DISCONNECT">` + 12
    283          
    284          
    285          
    286          
    287          
    288          
    289          
    290          //funkcja ³¹czenia z acces point'em

   \                                 In section Debug.txt, align 4, keep-with-next
    291          void AP_Associate(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    292          {
   \                     AP_Associate:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    293                Net->Status.AccesPointAssociate=CONNECTING;                          //zmiana statusu RouterAssociate na ³¹czenie 
   \   00000002   0224               MOVS     R4,#+2
   \   00000004   1C70               STRB     R4,[R3, #+0]
    294                
    295                
    296                switch (Net->Status.CurrentOrder)
   \   00000006   9C78               LDRB     R4,[R3, #+2]
   \   00000008   0B2C               CMP      R4,#+11
   \   0000000A   29D8               BHI      ??AP_Associate_1
   \   0000000C   01A5               ADR      R5,??AP_Associate_0
   \   0000000E   2D5D               LDRB     R5,[R5, R4]
   \   00000010   AF44               ADD      PC,PC,R5
   \   00000012   C046               Nop      
   \                     ??AP_Associate_0:
   \   00000014   0C0C1218           DC8      +12,+12,+18,+24
   \   00000018   1E242A30           DC8      +30,+36,+42,+48
   \   0000001C   363C4248           DC8      +54,+60,+66,+72
    297                {
    298                  case WizFi_NC:           WizFiCommand_AT(Buff_RX, Buff_TX,USART, Net);   break;           //kolejny rozkaz
   \                     ??AP_Associate_2:
   \   00000020   ........           BL       WizFiCommand_AT
   \   00000024   1CE0               B        ??AP_Associate_1
    299                  case WizFi_AT:           WizFiCommand_AT(Buff_RX, Buff_TX,USART, Net);   break;           //kolejny rozkaz
    300                  case WizFi_AT_VER:       WizFiCommand_AT_VER(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
                                                  ^
Warning[Pe223]: function "WizFiCommand_AT_VER" declared implicitly
   \                     ??AP_Associate_3:
   \   00000026   ........           BL       WizFiCommand_AT_VER
   \   0000002A   19E0               B        ??AP_Associate_1
    301                  case WizFi_ATI2:         WizFiCommand_ATI2(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
                                                  ^
Warning[Pe223]: function "WizFiCommand_ATI2" declared implicitly
   \                     ??AP_Associate_4:
   \   0000002C   ........           BL       WizFiCommand_ATI2
   \   00000030   16E0               B        ??AP_Associate_1
    302                  case WizFi_AT_XDUM0:     WizFiCommand_AT_XDUM0(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_5:
   \   00000032   ........           BL       WizFiCommand_AT_XDUM0
   \   00000036   13E0               B        ??AP_Associate_1
    303                  case WizFi_AT_WD:        WizFiCommand_AT_WD(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_6:
   \   00000038   ........           BL       WizFiCommand_AT_WD
   \   0000003C   10E0               B        ??AP_Associate_1
    304                  case WizFi_AT_NSET:      WizFiCommand_AT_NSET(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
                                                  ^
Warning[Pe223]: function "WizFiCommand_AT_NSET" declared implicitly
   \                     ??AP_Associate_7:
   \   0000003E   ........           BL       WizFiCommand_AT_NSET
   \   00000042   0DE0               B        ??AP_Associate_1
    305                  case WizFi_AT_NDHCP:     WizFiCommand_AT_NDHCP(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
                                                  ^
Warning[Pe223]: function "WizFiCommand_AT_NDHCP" declared implicitly
   \                     ??AP_Associate_8:
   \   00000044   ........           BL       WizFiCommand_AT_NDHCP
   \   00000048   0AE0               B        ??AP_Associate_1
    306                  case WizFi_AT_WWEP1:     WizFiCommand_AT_WWEP1(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_9:
   \   0000004A   ........           BL       WizFiCommand_AT_WWEP1
   \   0000004E   07E0               B        ??AP_Associate_1
    307                  case WizFi_AT_WWPA:      WizFiCommand_AT_WWPA(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_10:
   \   00000050   ........           BL       WizFiCommand_AT_WWPA
   \   00000054   04E0               B        ??AP_Associate_1
    308                  case WizFi_AT_WA:        WizFiCommand_AT_WA(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_11:
   \   00000056   ........           BL       WizFiCommand_AT_WA
   \   0000005A   01E0               B        ??AP_Associate_1
    309                  case WizFi_AT_DNSLOOKUP: WizFiCommand_AT_DNSLOOKUP(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_12:
   \   0000005C   ........           BL       WizFiCommand_AT_DNSLOOKUP
    310                }
    311                
    312                
    313          }
   \                     ??AP_Associate_1:
   \   00000060   38BC               POP      {R3-R5}
   \   00000062   01BC               POP      {R0}
   \   00000064   0047               BX       R0               ;; return
    314          
    315                    
    316          
    317          
    318          
    319          

   \                                 In section Debug.txt, align 4, keep-with-next
    320          void AP_AssociateResponseInterpreter(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    321          {
   \                     AP_AssociateResponseInterpreter:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0F00               MOVS     R7,R1
   \   00000006   1500               MOVS     R5,R2
   \   00000008   1E00               MOVS     R6,R3
   \   0000000A   5748               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   0000000C   03C8               LDM      R0!,{R0,R1}
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   3230               ADDS     R0,R0,#+50
   \   00000012   5141               ADCS     R1,R1,R2
   \   00000014   3064               STR      R0,[R6, #+64]
   \   00000016   7164               STR      R1,[R6, #+68]
   \   00000018   1000               MOVS     R0,R2
    322                Net->Status.FreezTime=g_counter+FREEZ_TIME;
    323                char Odp=0;
    324                switch (Net->Status.CurrentOrder)
   \   0000001A   B178               LDRB     R1,[R6, #+2]
   \   0000001C   491E               SUBS     R1,R1,#+1
   \   0000001E   0A29               CMP      R1,#+10
   \   00000020   49D8               BHI      ??AP_AssociateResponseInterpreter_2
   \   00000022   01A2               ADR      R2,??AP_AssociateResponseInterpreter_0
   \   00000024   525C               LDRB     R2,[R2, R1]
   \   00000026   9744               ADD      PC,PC,R2
   \                     ??AP_AssociateResponseInterpreter_0:
   \   00000028   0A16222E           DC8      +10,+22,+34,+46
   \   0000002C   3A46525E           DC8      +58,+70,+82,+94
   \   00000030   6A768200           DC8      +106,+118,+130,+0
    325                {
    326                  case WizFi_AT:            Odp=WizFiResponseCommand_AT(Buff_RX,Buff_TX,USART, Net);   break;        //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_3:
   \   00000034   2A00               MOVS     R2,R5
   \   00000036   3900               MOVS     R1,R7
   \   00000038   2000               MOVS     R0,R4
   \   0000003A   ........           BL       WizFiResponseCommand_AT
   \   0000003E   3AE0               B        ??AP_AssociateResponseInterpreter_2
    327                  case WizFi_AT_VER:        Odp=WizFiResponseCommand_AT_VER(Buff_RX,Buff_TX,USART, Net);   break;        //odpowiedz dla zadania 
                                                       ^
Warning[Pe223]: function "WizFiResponseCommand_AT_VER" declared implicitly
   \                     ??AP_AssociateResponseInterpreter_4:
   \   00000040   2A00               MOVS     R2,R5
   \   00000042   3900               MOVS     R1,R7
   \   00000044   2000               MOVS     R0,R4
   \   00000046   ........           BL       WizFiResponseCommand_AT_VER
   \   0000004A   34E0               B        ??AP_AssociateResponseInterpreter_2
    328                  case WizFi_ATI2:          Odp=WizFiResponseCommand_ATI2(Buff_RX,Buff_TX,USART, Net);   break;        //odpowiedz dla zadania 
                                                       ^
Warning[Pe223]: function "WizFiResponseCommand_ATI2" declared implicitly
   \                     ??AP_AssociateResponseInterpreter_5:
   \   0000004C   2A00               MOVS     R2,R5
   \   0000004E   3900               MOVS     R1,R7
   \   00000050   2000               MOVS     R0,R4
   \   00000052   ........           BL       WizFiResponseCommand_ATI2
   \   00000056   2EE0               B        ??AP_AssociateResponseInterpreter_2
    329                  case WizFi_AT_XDUM0:      Odp=WizFiResponseCommand_AT_XDUM0(Buff_RX,Buff_TX,USART, Net);   break;        //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_6:
   \   00000058   2A00               MOVS     R2,R5
   \   0000005A   3900               MOVS     R1,R7
   \   0000005C   2000               MOVS     R0,R4
   \   0000005E   ........           BL       WizFiResponseCommand_AT_XDUM0
   \   00000062   28E0               B        ??AP_AssociateResponseInterpreter_2
    330                  case WizFi_AT_WD:         Odp=WizFiResponseCommand_AT_WD(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_7:
   \   00000064   2A00               MOVS     R2,R5
   \   00000066   3900               MOVS     R1,R7
   \   00000068   2000               MOVS     R0,R4
   \   0000006A   ........           BL       WizFiResponseCommand_AT_WD
   \   0000006E   22E0               B        ??AP_AssociateResponseInterpreter_2
    331                  case WizFi_AT_NSET:       Odp=WizFiResponseCommand_AT_NSET(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
                                                       ^
Warning[Pe223]: function "WizFiResponseCommand_AT_NSET" declared implicitly
   \                     ??AP_AssociateResponseInterpreter_8:
   \   00000070   2A00               MOVS     R2,R5
   \   00000072   3900               MOVS     R1,R7
   \   00000074   2000               MOVS     R0,R4
   \   00000076   ........           BL       WizFiResponseCommand_AT_NSET
   \   0000007A   1CE0               B        ??AP_AssociateResponseInterpreter_2
    332                  case WizFi_AT_NDHCP:      Odp=WizFiResponseCommand_AT_NDHCP(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
                                                       ^
Warning[Pe223]: function "WizFiResponseCommand_AT_NDHCP" declared implicitly
   \                     ??AP_AssociateResponseInterpreter_9:
   \   0000007C   2A00               MOVS     R2,R5
   \   0000007E   3900               MOVS     R1,R7
   \   00000080   2000               MOVS     R0,R4
   \   00000082   ........           BL       WizFiResponseCommand_AT_NDHCP
   \   00000086   16E0               B        ??AP_AssociateResponseInterpreter_2
    333                  case WizFi_AT_WWEP1:      Odp=WizFiResponseCommand_AT_WWEP1(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_10:
   \   00000088   2A00               MOVS     R2,R5
   \   0000008A   3900               MOVS     R1,R7
   \   0000008C   2000               MOVS     R0,R4
   \   0000008E   ........           BL       WizFiResponseCommand_AT_WWEP1
   \   00000092   10E0               B        ??AP_AssociateResponseInterpreter_2
    334                  case WizFi_AT_WWPA:       Odp=WizFiResponseCommand_AT_WWPA(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_11:
   \   00000094   2A00               MOVS     R2,R5
   \   00000096   3900               MOVS     R1,R7
   \   00000098   2000               MOVS     R0,R4
   \   0000009A   ........           BL       WizFiResponseCommand_AT_WWPA
   \   0000009E   0AE0               B        ??AP_AssociateResponseInterpreter_2
    335                  case WizFi_AT_WA:         Odp=WizFiResponseCommand_AT_WA(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_12:
   \   000000A0   2A00               MOVS     R2,R5
   \   000000A2   3900               MOVS     R1,R7
   \   000000A4   2000               MOVS     R0,R4
   \   000000A6   ........           BL       WizFiResponseCommand_AT_WA
   \   000000AA   04E0               B        ??AP_AssociateResponseInterpreter_2
    336                  case WizFi_AT_DNSLOOKUP:  Odp=WizFiResponseCommand_AT_DNSLOOKUP(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_13:
   \   000000AC   2A00               MOVS     R2,R5
   \   000000AE   3900               MOVS     R1,R7
   \   000000B0   2000               MOVS     R0,R4
   \   000000B2   ........           BL       WizFiResponseCommand_AT_DNSLOOKUP
    337                }
    338                   
    339                
    340                //je¿eli poprawna odpowiedŸ 
    341                if (Odp==1)
   \                     ??AP_AssociateResponseInterpreter_2:
   \   000000B6   0006               LSLS     R0,R0,#+24
   \   000000B8   000E               LSRS     R0,R0,#+24
   \   000000BA   0128               CMP      R0,#+1
   \   000000BC   18D1               BNE      ??AP_AssociateResponseInterpreter_14
    342                {
    343                  Net->Status.RepeatOrder=0;
   \   000000BE   0020               MOVS     R0,#+0
   \   000000C0   7071               STRB     R0,[R6, #+5]
    344                  if ((Net->Status.CurrentOrder<WizFi_AT_DNSLOOKUP) && (Net->Status.CurrentOrder!=WizFi_NC))
   \   000000C2   B078               LDRB     R0,[R6, #+2]
   \   000000C4   0B28               CMP      R0,#+11
   \   000000C6   4BD2               BCS      ??AP_AssociateResponseInterpreter_15
   \   000000C8   0028               CMP      R0,#+0
   \   000000CA   49D0               BEQ      ??AP_AssociateResponseInterpreter_15
    345                  {
    346                     
    347                     Net->Status.CurrentOrder++;
   \   000000CC   401C               ADDS     R0,R0,#+1
   \   000000CE   B070               STRB     R0,[R6, #+2]
    348                     
    349                     if ((Net->WiFi.IpNotAuto==0) &&  (Net->Status.CurrentOrder==WizFi_AT_NSET))
   \   000000D0   5120               MOVS     R0,#+81
   \   000000D2   305C               LDRB     R0,[R6, R0]
   \   000000D4   0028               CMP      R0,#+0
   \   000000D6   04D1               BNE      ??AP_AssociateResponseInterpreter_16
   \   000000D8   B078               LDRB     R0,[R6, #+2]
   \   000000DA   0628               CMP      R0,#+6
   \   000000DC   01D1               BNE      ??AP_AssociateResponseInterpreter_16
    350                      { 
    351                        Net->Status.CurrentOrder++;
   \   000000DE   401C               ADDS     R0,R0,#+1
   \   000000E0   B070               STRB     R0,[R6, #+2]
    352                      }
    353                     
    354                     AP_Associate(Buff_RX, Buff_TX,  USART, Net);
   \                     ??AP_AssociateResponseInterpreter_16:
   \   000000E2   3300               MOVS     R3,R6
   \   000000E4   2A00               MOVS     R2,R5
   \   000000E6   3900               MOVS     R1,R7
   \   000000E8   2000               MOVS     R0,R4
   \   000000EA   ........           BL       AP_Associate
   \   000000EE   37E0               B        ??AP_AssociateResponseInterpreter_15
    355                     
    356                  }
    357                }else{
    358                  if(strstr(Buff_RX, "[ERROR")!=NULL)
   \                     ??AP_AssociateResponseInterpreter_14:
   \   000000F0   1E49               LDR      R1,??AP_AssociateResponseInterpreter_1+0x4  ;; `?<Constant "[ERROR">`
   \   000000F2   2000               MOVS     R0,R4
   \   000000F4   ........           BL       strstr
   \   000000F8   0028               CMP      R0,#+0
   \   000000FA   31D0               BEQ      ??AP_AssociateResponseInterpreter_15
    359                  {
    360                      if (Net->Status.RepeatOrder<10)      //powtórz rozkaz
   \   000000FC   7079               LDRB     R0,[R6, #+5]
   \   000000FE   0A28               CMP      R0,#+10
   \   00000100   18D2               BCS      ??AP_AssociateResponseInterpreter_17
    361                      {
    362                         Net->Status.RepeatOrder++;
   \   00000102   401C               ADDS     R0,R0,#+1
   \   00000104   7071               STRB     R0,[R6, #+5]
    363                         AP_Associate(Buff_RX, Buff_TX,  USART, Net);
   \   00000106   3300               MOVS     R3,R6
   \   00000108   2A00               MOVS     R2,R5
   \   0000010A   3900               MOVS     R1,R7
   \   0000010C   2000               MOVS     R0,R4
   \   0000010E   ........           BL       AP_Associate
    364                         Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000112   3400               MOVS     R4,R6
   \   00000114   3834               ADDS     R4,R4,#+56
   \   00000116   1448               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   00000118   0CC8               LDM      R0!,{R2,R3}
   \   0000011A   1548               LDR      R0,??AP_AssociateResponseInterpreter_1+0x8  ;; 0x2710
   \   0000011C   0021               MOVS     R1,#+0
   \   0000011E   8018               ADDS     R0,R0,R2
   \   00000120   5941               ADCS     R1,R1,R3
   \   00000122   03C4               STM      R4!,{R0,R1}
    365                         Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   00000124   4036               ADDS     R6,R6,#+64
   \   00000126   1048               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   00000128   03C8               LDM      R0!,{R0,R1}
   \   0000012A   0022               MOVS     R2,#+0
   \   0000012C   3230               ADDS     R0,R0,#+50
   \   0000012E   5141               ADCS     R1,R1,R2
   \   00000130   03C6               STM      R6!,{R0,R1}
   \   00000132   15E0               B        ??AP_AssociateResponseInterpreter_15
    366                      }else{
    367                         //ponowne po³¹czenie
    368                         Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \                     ??AP_AssociateResponseInterpreter_17:
   \   00000134   0C48               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   00000136   03C8               LDM      R0!,{R0,R1}
   \   00000138   0022               MOVS     R2,#+0
   \   0000013A   3230               ADDS     R0,R0,#+50
   \   0000013C   5141               ADCS     R1,R1,R2
   \   0000013E   3064               STR      R0,[R6, #+64]
   \   00000140   7164               STR      R1,[R6, #+68]
    369                         Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000142   3400               MOVS     R4,R6
   \   00000144   3834               ADDS     R4,R4,#+56
   \   00000146   0848               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   00000148   0CC8               LDM      R0!,{R2,R3}
   \   0000014A   0948               LDR      R0,??AP_AssociateResponseInterpreter_1+0x8  ;; 0x2710
   \   0000014C   0021               MOVS     R1,#+0
   \   0000014E   8018               ADDS     R0,R0,R2
   \   00000150   5941               ADCS     R1,R1,R3
   \   00000152   03C4               STM      R4!,{R0,R1}
    370                         Net->Status.CurrentOrder=WizFi_NC;
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   B070               STRB     R0,[R6, #+2]
    371                         Net->Status.NextHttpOrder=WizFi_NC;
   \   00000158   F070               STRB     R0,[R6, #+3]
    372                         Net->Status.RepeatOrder=0;  
   \   0000015A   7071               STRB     R0,[R6, #+5]
    373                         Net->Status.HostLink=DISCONNECTED; 
   \   0000015C   7070               STRB     R0,[R6, #+1]
    374                         Net->Status.AccesPointAssociate=DISCONNECTED;
   \   0000015E   3070               STRB     R0,[R6, #+0]
    375                      }
    376                    
    377                  }
    378                }  
    379                
    380          }
   \                     ??AP_AssociateResponseInterpreter_15:
   \   00000160   F8BC               POP      {R3-R7}
   \   00000162   01BC               POP      {R0}
   \   00000164   0047               BX       R0               ;; return
   \   00000166   C046               Nop      
   \                     ??AP_AssociateResponseInterpreter_1:
   \   00000168   ........           DC32     g_counter
   \   0000016C   ........           DC32     `?<Constant "[ERROR">`
   \   00000170   10270000           DC32     0x2710
    381                      
    382          
    383          
    384          
    385          
    386          
    387          //funkcja wykonywania zadañ HTTP

   \                                 In section Debug.txt, align 4, keep-with-next
    388          void HTTP_Task(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    389          {
   \                     HTTP_Task:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   0E00               MOVS     R6,R1
   \   00000006   1400               MOVS     R4,R2
   \   00000008   1D00               MOVS     R5,R3
    390              if ((Net->Status.HttpNextQueryTime<g_counter) || (Net->Status.HttpNextQueryTime==0))   //je¿eli spe³niony wymagany czas pomiêdzy odpytywaniami
   \   0000000A   2800               MOVS     R0,R5
   \   0000000C   3030               ADDS     R0,R0,#+48
   \   0000000E   0CC8               LDM      R0!,{R2,R3}
   \   00000010   0F48               LDR      R0,??HTTP_Task_0  ;; g_counter
   \   00000012   03C8               LDM      R0!,{R0,R1}
   \   00000014   8B42               CMP      R3,R1
   \   00000016   09D3               BCC      ??HTTP_Task_1
   \   00000018   01D8               BHI      ??HTTP_Task_2
   \   0000001A   8242               CMP      R2,R0
   \   0000001C   06D3               BCC      ??HTTP_Task_1
   \                     ??HTTP_Task_2:
   \   0000001E   2800               MOVS     R0,R5
   \   00000020   3030               ADDS     R0,R0,#+48
   \   00000022   03C8               LDM      R0!,{R0,R1}
   \   00000024   0029               CMP      R1,#+0
   \   00000026   10D1               BNE      ??HTTP_Task_3
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0ED1               BNE      ??HTTP_Task_3
    391              {
    392                  if (Net->Status.NextHttpOrder!=WizFi_NC)                                    //je¿eli jest oczekuj¹ce zadanie
   \                     ??HTTP_Task_1:
   \   0000002C   E878               LDRB     R0,[R5, #+3]
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   03D0               BEQ      ??HTTP_Task_4
    393                  {
    394                      Net->Status.CurrentOrder=Net->Status.NextHttpOrder;
   \   00000032   A870               STRB     R0,[R5, #+2]
    395                      Net->Status.NextHttpOrder=WizFi_NC;
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   E870               STRB     R0,[R5, #+3]
   \   00000038   01E0               B        ??HTTP_Task_5
    396                  }else{
    397                      Net->Status.CurrentOrder=HTTP_GET;
   \                     ??HTTP_Task_4:
   \   0000003A   1220               MOVS     R0,#+18
   \   0000003C   A870               STRB     R0,[R5, #+2]
    398                  }
    399                  
    400                  HTTP_Query(Buff_RX, Buff_TX,  USART, Net);  
   \                     ??HTTP_Task_5:
   \   0000003E   2B00               MOVS     R3,R5
   \   00000040   2200               MOVS     R2,R4
   \   00000042   3100               MOVS     R1,R6
   \   00000044   3800               MOVS     R0,R7
   \   00000046   ........           BL       HTTP_Query
    401                  
    402                  
    403              }
    404              
    405          }
   \                     ??HTTP_Task_3:
   \   0000004A   F8BC               POP      {R3-R7}
   \   0000004C   01BC               POP      {R0}
   \   0000004E   0047               BX       R0               ;; return
   \                     ??HTTP_Task_0:
   \   00000050   ........           DC32     g_counter

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   10270000           DC32     0x2710

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     g_counter

   \                                 In section .rodata, align 4
   \                     `?<Constant "[DISCONNECT">`:
   \   00000000   5B444953434F       DC8 "[DISCONNECT"
   \              4E4E45435400
   \   0000000C   5B4552524F52       DC8 "[ERROR: INVALID INPUT]"
   \              3A20494E5641
   \              4C494420494E
   \              5055545D00  
   \   00000023   00                 DC8 0
   \   00000024   73656E642829       DC8 "send() failed:"
   \              206661696C65
   \              643A00      
   \   00000033   00                 DC8 0
   \   00000034   5B4449534153       DC8 "[DISASSOCIATED]"
   \              534F43494154
   \              45445D00    
   \   00000044   5B4552524F52       DC8 "[ERROR]"
   \              5D00        

   \                                 In section .rodata, align 4
   \                     `?<Constant "[ERROR">`:
   \   00000000   5B4552524F52       DC8 "[ERROR"
   \              00          
   \   00000007   00                 DC8 0
    406          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     AP_Associate                       16
     AP_AssociateResponseInterpreter
                                        24
     CheckVarChangeHTTP                 24
     HTTP_Task                          24
     InitWizFi                          16
     WiFi                               32
     WizFiResponseInterpreter           24
     strstr                              8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     strstr                           12
     CheckVarChangeHTTP              368
     AnalogPeriod                      8
     pt1                               8
     InitWizFi                       116
     WiFi                            288
     WizFiResponseInterpreter        344
     AP_Associate                    102
     AP_AssociateResponseInterpreter
                                     372
     HTTP_Task                        84
     ??DataTable3                      4
     ??DataTable4                      4
     ?<Constant "[DISCONNECT">        76
     ?<Constant "[ERROR">              8

 
    16 bytes in section .bss
    84 bytes in section .rodata
 1 694 bytes in section Debug.txt
 
 1 682 bytes of CODE  memory (+ 12 bytes shared)
    84 bytes of CONST memory
    16 bytes of DATA  memory

Errors: none
Warnings: 14
