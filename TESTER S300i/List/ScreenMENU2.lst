###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           20/Mar/2013  07:53:39 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-          #
#                    14.03.2013\Framework\ScreenMENU2.c                       #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\Framework\ScreenMENU2.c" -D AT91SAM7S256 -D   #
#                    AT91SAM7SEK -D iH -D __ALARM -D __WIFI_MODULE -D S300i   #
#                    -D _TESTER_ -lC "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.3 BETA- 14.03.2013\TESTER S300i\List\"                #
#                    --diag_suppress Pa082 -o "D:\Zeuron\Projekty\S300\S300-p #
#                    rogram v1.3 BETA- 14.03.2013\TESTER S300i\Obj\"          #
#                    --no_unroll --no_inline --no_tbaa --no_scheduling        #
#                    --debug --endian little --cpu ARM7TDMI -e --fpu None     #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 5.0\ARM\INC\DLib_Config_Norma #
#                    l.h" -I "D:\Zeuron\Projekty\S300\S300-program v1.3       #
#                    BETA- 14.03.2013\lib\AT91SAM7S256\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.3 BETA- 14.03.2013\cdc\" -I                           #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\core\" -I "D:\Zeuron\Projekty\S300\S300-progr #
#                    am v1.3 BETA- 14.03.2013\startup\" -I                    #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-         #
#                    14.03.2013\Framework\" -I "D:\Zeuron\Projekty\S300\S300- #
#                    program v1.3 BETA- 14.03.2013\Framework\Configuration\"  #
#                    -I "C:\Program Files (x86)\IAR Systems\Embedded          #
#                    Workbench 5.0\ARM\INC\" --section .text=Debug.txt        #
#                    --interwork --cpu_mode thumb -Om                         #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-          #
#                    14.03.2013\TESTER S300i\List\ScreenMENU2.lst             #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v1.3 BETA-          #
#                    14.03.2013\TESTER S300i\Obj\ScreenMENU2.o                #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v1.3 BETA- 14.03.2013\Framework\ScreenMENU2.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                                 CEURON                                   *//                       
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : Prog.Screen.c                                 *//
      7          //*  Opis                         : Obsluga grafiki i ekranu dotykowego      *//
      8          //*  Autor                        : Pawe³ Narwojsz                           */F/
      9          //*  Data utrzorzenia             : 19.09.2007                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*// 
     19          //****************************************************************************//
     20          //****************************************************************************//
     21          
     22          
     23          
     24          #include "ScreenMENU2.h"
     25          #include "Framework.h "
     26          #include "Language.h"
     27          #include "core/device.h"                                                        //³aduje bibliotreki dla odpowiedniego procesora
     28          #include "LCD.h"
     29          #include "Application_prog.h"
     30          #include <intrinsics.h>
     31          #include "Animation.c"
     32          #include "ScreenSorce.h"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0, 0, 0, 0, 0, 0}>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   char const __data ProcSt_graf[3][8]
   \                     ProcSt_graf:
   \   00000008   1818181F1F18       DC8 24, 24, 24, 31, 31, 24, 24, 24, 96, 96, 96, 224, 224, 96, 96, 96, 0
   \              1818606060E0
   \              E060606000  
   \   00000019   000007070000       DC8 0, 0, 7, 7, 0, 0, 0
   \              00          
   \   char const __data ProcWOUTC_graf[3][9]
   \                     ProcWOUTC_graf:
   \   00000020   08CC26272726       DC8 8, 204, 38, 39, 39, 38, 204, 8, 0, 0, 115, 17, 82, 82, 66, 113, 0
   \              CC0800007311
   \              5252427100  
   \   00000031   000103060606       DC8 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              0603010000  
   \   char const __data ProcSPK_graf[3][9]
   \                     ProcSPK_graf:
   \   0000003C   00C0407F7F40       DC8 0, 192, 64, 127, 127, 64, 192, 0, 0, 152, 85, 18, 81, 17, 82, 21
   \              C00000985512
   \              51115215    
   \   0000004C   588000000001       DC8 88, 128, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0
   \              000100000000
   \   char const __data ProcTime_graf[3][8]
   \                     ProcTime_graf:
   \   00000058   D050509F1F90       DC8 208, 80, 80, 159, 31, 144, 80, 208, 23, 21, 20, 242, 241, 18, 20
   \              50D0171514F2
   \              F11214      
   \   00000067   170000000707       DC8 23, 0, 0, 0, 7, 7, 0, 0, 0
   \              000000      
   \   char const __data ProcClock_graf[3][8]
   \                     ProcClock_graf:
   \   00000070   A848282F2F48       DC8 168, 72, 40, 47, 47, 72, 168, 200, 43, 36, 40, 235, 233, 36, 43, 38
   \              A8C82B2428EB
   \              E9242B26    
   \   00000080   000000070700       DC8 0, 0, 0, 7, 7, 0, 0, 0
   \              0000        
   \   char const __data ProcDay_graf[3][8]
   \                     ProcDay_graf:
   \   00000088   FC0434575734       DC8 252, 4, 52, 87, 87, 52, 4, 252, 255, 0, 37, 39, 85, 82, 0, 255, 1
   \              04FCFF002527
   \              555200FF01  
   \   00000099   010107070101       DC8 1, 1, 7, 7, 1, 1, 1
   \              01          
   \   char const __data ProcToggleRS_graf[3][19]
   \                     ProcToggleRS_graf:
   \   000000A0   00F808684F2F       DC8 0, 248, 8, 104, 79, 47, 104, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              680808080808
   \              080808F80000
   \              00          
   \   000000B3   00FF80B89494       DC8 0, 255, 128, 184, 148, 148, 136, 128, 128, 128, 133, 131, 133, 131
   \              888080808583
   \              8583        
   \   000000C1   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000070700
   \              000000000000
   \              000000      
   \   000000D6   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   char const __data ProcToggleT_graf[3][19]
   \                     ProcToggleT_graf:
   \   000000DC   00F808484F4F       DC8 0, 248, 8, 72, 79, 79, 232, 8, 8, 104, 200, 8, 104, 200, 8, 248, 0
   \              E8080868C808
   \              68C808F800  
   \   000000ED   000000FF80B8       DC8 0, 0, 0, 255, 128, 184, 148, 148, 136, 128, 128, 188, 135, 128, 183
   \              9494888080BC
   \              8780B7      
   \   000000FC   9D80FF000000       DC8 157, 128, 255, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000707
   \              000000000000
   \              000000      
   \   00000111   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
   \   char const __data ProcTLI1_graf[3][19]
   \                     ProcTLI1_graf:
   \   00000118   00F808080F8F       DC8 0, 248, 8, 8, 15, 143, 8, 8, 8, 168, 72, 8, 104, 200, 8, 248, 0, 0
   \              080808A84808
   \              68C808F80000
   \   0000012A   0000FF808282       DC8 0, 0, 255, 128, 130, 130, 130, 131, 130, 128, 187, 132, 128, 183
   \              82838280BB84
   \              80B7        
   \   00000138   9D80FF000000       DC8 157, 128, 255, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000707
   \              000000000000
   \              000000      
   \   0000014D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
   \   char const __data ProcLim_graf[3][18]
   \                     ProcLim_graf:
   \   00000154   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0, 255
   \              080808080808
   \              0808F8000000
   \              FF          
   \   00000167   80B894948881       DC8 128, 184, 148, 148, 136, 129, 130, 129, 140, 132, 136, 140, 128
   \              82818C84888C
   \              80          
   \   00000174   FF0303030000       DC8 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000707000000
   \              000000000000
   \              00000000    
   \   0000018A   0000               DC8 0, 0
   \   char const __data ProcEven_graf[3][18]
   \                     ProcEven_graf:
   \   0000018C   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0, 255
   \              080808080808
   \              0808F8000000
   \              FF          
   \   0000019F   80B894948883       DC8 128, 184, 148, 148, 136, 131, 128, 131, 152, 136, 144, 152, 128
   \              808398889098
   \              80          
   \   000001AC   FF0303030000       DC8 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000707000000
   \              000000000000
   \              00000000    
   \   000001C2   0000               DC8 0, 0
   \   char const __data ProcPlus_graf[3][18]
   \                     ProcPlus_graf:
   \   000001C4   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808080808
   \              0808F8000000
   \   000001D6   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 129, 131, 129, 140, 132, 136, 140
   \              8183818C8488
   \              8C          
   \   000001E3   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   000001F8   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcMinus_graf[3][18]
   \                     ProcMinus_graf:
   \   000001FC   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808080808
   \              0808F8000000
   \   0000020E   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 131, 128, 140, 132, 136, 140
   \              8083808C8488
   \              8C          
   \   0000021B   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000230   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcMul_graf[3][18]
   \                     ProcMul_graf:
   \   00000234   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 136, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808880808
   \              0808F8000000
   \   00000246   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 130, 129, 154, 136, 144, 152
   \              8082819A8890
   \              98          
   \   00000253   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000268   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcDiv_graf[3][18]
   \                     ProcDiv_graf:
   \   0000026C   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 72, 136, 8, 8, 8, 248, 0, 0, 0
   \              080808488808
   \              0808F8000000
   \   0000027E   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 128, 128, 152, 136, 145, 154
   \              808080988891
   \              9A          
   \   0000028B   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   000002A0   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcNot_graf[3][8]
   \                     ProcNot_graf:
   \   000002A4   024A6A6B5B5A       DC8 2, 74, 106, 107, 91, 90, 74, 2, 0, 102, 41, 41, 41, 118, 32, 0, 1
   \              4A0200662929
   \              2976200001  
   \   000002B5   010107070101       DC8 1, 1, 7, 7, 1, 1, 1
   \              01          
   \   char const __data ProcGetAnal_graf[3][17]
   \                     ProcGetAnal_graf:
   \   000002BC   FE0000000000       DC8 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 236, 42, 106, 34, 236, 255
   \              00000000FE00
   \              EC2A6A22ECFF
   \   000002CE   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 132, 132, 132, 132, 142, 3, 6, 4
   \              000000FF0084
   \              8484848E0306
   \              04          
   \   000002E1   040404040404       DC8 4, 4, 4, 4, 4, 4, 6, 3, 0, 2, 2, 1, 2, 1, 0
   \              060300020201
   \              020100      
   \   char const __data ProcSetAnal_graf[3][17]
   \                     ProcSetAnal_graf:
   \   000002F0   FE0301010101       DC8 254, 3, 1, 1, 1, 1, 1, 1, 1, 3, 254, 0, 230, 40, 110, 34, 236, 255
   \              01010103FE00
   \              E6286E22ECFF
   \   00000302   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 132, 132, 132, 132, 142, 3, 0, 0
   \              000000FF0084
   \              8484848E0300
   \              00          
   \   00000315   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 2, 1, 2, 1, 0
   \              000300020201
   \              020100      
   \   char const __data ProcSt_Button[3][6]
   \                     ProcSt_Button:
   \   00000324   3F3F00F8F0F0       DC8 63, 63, 0, 248, 240, 240, 240, 240, 0, 127, 63, 63, 7, 7, 0, 0, 0
   \              F0F0007F3F3F
   \              0707000000  
   \   00000335   000000             DC8 0, 0, 0
   \   char const __data ShortDate[7][3]
   \                     ShortDate:
   \   00000338   4D3A00443A00       DC8 77, 58, 0, 68, 58, 0, 104, 58, 0, 109, 58, 0, 115, 58, 0
   \              683A006D3A00
   \              733A00      
   \   00000347   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   436F6E73742E       DC8 "Const. "
   \              2000        
   \   00000014   476574207265       DC8 "Get reg."
   \              672E00      
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   536574207265       DC8 "Set reg."
   \              672E00      
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   313E3220513D       DC8 "1>2 Q=1"
   \              3100        
   \   00000034   313D3220513D       DC8 "1=2 Q=1"
   \              3100        
   \   0000003C   513D312B3200       DC8 "Q=1+2"
   \   00000042   0000               DC8 0, 0
   \   00000044   513D312D3200       DC8 "Q=1-2"
   \   0000004A   0000               DC8 0, 0
   \   0000004C   513D31783200       DC8 "Q=1x2"
   \   00000052   0000               DC8 0, 0
   \   00000054   513D312F3200       DC8 "Q=1/2"
   \   0000005A   0000               DC8 0, 0
   \   0000005C   5265673A00         DC8 "Reg:"
   \   00000061   000000             DC8 0, 0, 0
   \   00000064   4163746F7200       DC8 "Actor"
   \   0000006A   0000               DC8 0, 0
   \   0000006C   54656D657065       DC8 "Temeper."
   \              722E00      
   \   00000075   000000             DC8 0, 0, 0
   \   00000078   4E6F64652049       DC8 "Node ID:"
   \              443A00      
   \   00000081   000000             DC8 0, 0, 0
   \   00000084   546865726D6F       DC8 "Thermo"
   \              00          
   \   0000008B   00                 DC8 0
   \   char const __data ProcSet_graf[3][9]
   \                     ProcSet_graf:
   \   0000008C   10180C0F0F0C       DC8 16, 24, 12, 15, 15, 12, 24, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3
   \              181000000000
   \              000000000000
   \              0103        
   \   000000A0   060606060301       DC8 6, 6, 6, 6, 3, 1, 0, 0
   \              0000        
   \   char const __data ProcWOUTS_graf[3][9]
   \                     ProcWOUTS_graf:
   \   000000A8   D0188C4F4F4C       DC8 208, 24, 140, 79, 79, 76, 88, 144, 0, 31, 16, 23, 18, 20, 20, 20
   \              5890001F1017
   \              12141414    
   \   000000B8   730001030606       DC8 115, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000
   \   char const __data ProcWOUTR_graf[3][9]
   \                     ProcWOUTR_graf:
   \   000000C4   90584C4F4F8C       DC8 144, 88, 76, 79, 79, 140, 24, 208, 0, 119, 18, 20, 20, 20, 19, 16
   \              18D000771214
   \              14141310    
   \   000000D4   1F0001030606       DC8 31, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000
   \   char const __data ProcSt_iko[2][8]
   \                     ProcSt_iko:
   \   000000E0   1818181F1F18       DC8 24, 24, 24, 31, 31, 24, 24, 24, 6, 6, 6, 62, 62, 6, 6, 6
   \              18180606063E
   \              3E060606    
   \   char const __data ProcSet_iko[2][8]
   \                     ProcSet_iko:
   \   000000F0   6030181F1F18       DC8 96, 48, 24, 31, 31, 24, 48, 96, 3, 6, 12, 12, 12, 12, 6, 3
   \              306003060C0C
   \              0C0C0603    
   \   char const __data ProcTime_iko[2][12]
   \                     ProcTime_iko:
   \   00000100   E018040202C1       DC8 224, 24, 4, 2, 2, 193, 65, 66, 66, 68, 24, 224, 0, 3, 4, 8, 8, 17
   \              4142424418E0
   \              000304080811
   \   00000112   100808040300       DC8 16, 8, 8, 4, 3, 0
   \   char const __data ProcLog_iko[2][8]
   \                     ProcLog_iko:
   \   00000118   00006F919191       DC8 0, 0, 111, 145, 145, 145, 97, 1, 12, 18, 92, 18, 18, 18, 28, 0
   \              61010C125C12
   \              12121C00    
   \   char const __data ProcAnl_iko[2][8]
   \                     ProcAnl_iko:
   \   00000128   0029292FE909       DC8 0, 41, 41, 47, 233, 9, 6, 0, 0, 93, 5, 5, 4, 4, 4, 0
   \              0600005D0505
   \              04040400    
   \   char const __data SPK_1[4][2][5]
   \                     SPK_1:
   \   00000138   3F202020E000       DC8 63, 32, 32, 32, 224, 0, 0, 0, 0, 255, 143, 136, 136, 136, 248, 143
   \              000000FF8F88
   \              8888F88F    
   \   00000148   888888F8E718       DC8 136, 136, 136, 248, 231, 24, 24, 24, 24, 207, 48, 48, 48, 48, 215
   \              181818CF3030
   \              3030D7      
   \   00000157   28282828AF50       DC8 40, 40, 40, 40, 175, 80, 80, 80, 80
   \              505050      
   \   char const __data DeyOfWeekStr[2][8][2]
   \                     DeyOfWeekStr:
   \   00000160   4572506E5774       DC8 69, 114, 80, 110, 87, 116, 83, 114, 67, 122, 80, 116, 83, 111, 78
   \              5372437A5074
   \              536F4E      
   \   0000016F   6445724D6F54       DC8 100, 69, 114, 77, 111, 84, 117, 87, 101, 84, 104, 70, 114, 83, 97
   \              755765546846
   \              725361      
   \   0000017E   5375               DC8 83, 117

   \                                 In section .rodata, align 4
   \   char const __data ProcTMRS_graf[3][9]
   \                     ProcTMRS_graf:
   \   00000000   10180C0F0FCC       DC8 16, 24, 12, 15, 15, 204, 24, 208, 0, 113, 17, 17, 17, 17, 23, 16
   \              18D000711111
   \              11111710    
   \   00000010   1F0001030606       DC8 31, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000

   \                                 In section .rodata, align 4
   \   char const __data ProcConstAnal_graf[3][18]
   \                     ProcConstAnal_graf:
   \   00000000   FE0202020202       DC8 254, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 254, 0, 255, 0, 0
   \              020202020202
   \              02020202FE00
   \              FF0000      
   \   00000015   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 3, 2, 6, 4, 4, 6, 2
   \              000000000000
   \              00FF00030206
   \              04040602    
   \   0000002B   020202020202       DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0
   \              020202030000
   \              00          

   \                                 In section .rodata, align 4
   \   char const __data BateriaWyladowana[1][9]
   \                     BateriaWyladowana:
   \   00000000   3F3131292925       DC8 63, 49, 49, 41, 41, 37, 37, 51, 30, 0, 0, 0
   \              25331E000000

   \                                 In section .rodata, align 4
   \                     `?<Constant "Reason:">`:
   \   00000000   526561736F6E       DC8 "Reason:"
   \              3A00        
   \   00000008   556E72656C69       DC8 "Unreliable"
   \              61626C6500  
   \   00000013   00                 DC8 0
   \   00000014   646174612E00       DC8 "data."
   \   0000001A   0000               DC8 0, 0
   \   char const __data Frame[2][11]
   \                     Frame:
   \   0000001C   FE0101010101       DC8 254, 1, 1, 1, 1, 1, 1, 1, 1, 1, 254, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4
   \              01010101FE03
   \              040404040404
   \              040404      
   \   00000031   030000             DC8 3, 0, 0
     33          #include "RF_Exe.h"
     34          #include "spi_main.h"
     35           #include "WizFi.h"                            

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v1.3 BETA- 14.03.2013\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline

   
   ^
"D:\Zeuron\Projekty\S300\S300-program v1.3 BETA- 14.03.2013\Framework\WizFi.h",171  Warning[Pe001]: 
          last line of file ends without a newline
     36          
     37          
     38          
     39          extern _Correct korekta_Y;
     40          extern _Correct korekta_X;
     41          extern char Arial_7[100][10];
     42          
     43          extern char LCD_Canvas[8][128];
     44          extern unsigned int CyklPerSek;
     45          extern char g_level;
     46          extern char g_Password_1[8];
     47          extern char g_Password_2[8];
     48          extern int g_Message;
     49          extern char g_US0_Connect_OK;
     50          extern char g_US1_Connect_OK;
     51          extern char g_Stop_Program;
     52          extern RAM ram;
     53          extern _RF_Status RF_Status;
     54          extern _DateTime DateTime;
     55          extern volatile char SlaveMode;
     56          extern char g_SlaveConnect;
     57          extern unsigned long long  g_counter;
     58          extern volatile char Busy_program;
     59          extern char g_NeedPass;
     60          extern _TransQuality TransQuality; //tablica informacyjna jakoci po³¹czenia pola odpowiadaj¹ polom _ProgramTab.NeuronsIdTab
     61          extern const char identyfikacja;
     62          extern const char system;
     63          extern char AlarmOn;
     64          extern int g_info;

   \                                 In section .bss, align 1
     65          char MainSide_puls=0;
   \                     MainSide_puls:
   \   00000000                      DS8 1
     66          extern _RF_TaskTab  RF_TaskTab;
     67          extern signed char           RF_CurrentTask;
     68          int volatile MenuLevel=0;      //poziom menu
     69          extern unsigned long long g_NextTimeProgram;
     70          extern char ekran_komunikacja[8][128];
     71          extern signed short X_down;
     72          extern signed short Y_down;
     73          extern signed short X_up;
     74          extern signed short Y_up;
     75          extern int  g_leng;
     76          extern LangTab Speech[2];
     77          extern char g_PC_Connected;
     78          extern _ProgramTab gProg;
     79          extern char NumberScene;
     80          extern _NeuronsListUnit NeuronsList[NumberNeurons];
     81          extern char Label (char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw);
     82          extern char FloToStr (float Value, char Vstring[8],char ill) ;
     83          extern _MainStage  MainStage; 
     84          extern _TransQuality TransQuality;
     85          extern _RF_NodeTest  RF_NodeTest; 
     86          extern char Variables[];    //zmienne
     87           extern _Net NET; 
     88          extern char WypMaxJasnosci;                                                        //jasnoc ekranu przy aktywnym ekranie
     89          extern char WypMinJasnosci;                                                        //jasnoc ekranu przy nieaktywnym ekranie
     90          extern char gWypMinJasnosciTest;
     91          extern short int VariablesAnal[]; 

   \                                 In section .bss, align 4
     92          float wartosc_tmp;
   \                     wartosc_tmp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     93          char text_label_tmp[10];
   \                     text_label_tmp:
   \   00000000                      DS8 12
     94          
     95          extern char SceneBefOff;
     96          

   \                                 In section .bss, align 1
     97          char Label_move = 0;
   \                     Label_move:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     98          int Suw_poz_IO=0;
   \                     Suw_poz_IO:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     99          int Suw_poz_analog=0;
   \                     Suw_poz_analog:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    100          int Suw_poz_dwustan=0;
   \                     Suw_poz_dwustan:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    101          int Suw_poz_monit=0;
   \                     Suw_poz_monit:
   \   00000000                      DS8 4
    102          int ScrollMenu_poz=-1;
    103          int ScrollMenu_Paint_exist=-1;
    104          int Rej_poz=0;

   \                                 In section .bss, align 1
    105          char CyklMonit=0;
   \                     CyklMonit:
   \   00000000                      DS8 1
    106          char *TextToChange=0;
    107          char TextToChangeLength=0;
    108          char TextToChangeMaxPixSize=0;
    109          volatile _ButtonGraph *ButtonToChange=0;
    110          char CurentChartModyfi;
    111          int NeuronIdToChange;
    112          int NeuronIdAfterChange;
    113          char NeuronNrChange=0;
    114          
    115          signed short int *ValueChange=0;
    116          int *NeuronIdChange=0;
    117          
    118          
    119          
    120          _Analog *AnalogToChange;
    121          
    122          char CurrentSheet=0;
    123          char CurModifSheet=0;
    124          char NeuronsListLine=0;
    125          
    126          char SheetHistoryIndex=0;
    127          char SheetHistory[20];
    128          
    129          
    130          extern _ProgramTab gProg;
    131          extern int PtogTime;
    132          
    133          
    134          
    135          
    136          

   \                                 In section .bss, align 4
    137          int Monitoring_array[30][2]; //tablica monitoringu 1 kol - adres, 2 kol- typ (0 analog, 1 dwustan, 2 IO)
   \                     Monitoring_array:
   \   00000000                      DS8 240

   \                                 In section .bss, align 4
    138          int Monit_Size_scroll=0;
   \                     Monit_Size_scroll:
   \   00000000                      DS8 4
    139          char SetupTimeCarPoz=1; 
    140          extern char ProgramChange=0;      //Je¿eli 1 - zmiana programu przez u¿ytkownika 
    141          //*-----------------------------------------------------------------------------
    142          //* Nazwa funkcji :    ScreenEvent
    143          //* Funkcja wrysowania menu ekranowego
    144          //*-----------------------------------------------------------------------------
    145          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    146          //*-----------------------------------------------------------------------------
    147          
    148          
    149          
    150          
    151          char TmpFlg=0;

   \                                 In section Debug.txt, align 4, keep-with-next
    152          void MenuPaint(void)
    153          {
   \                     MenuPaint:
   \   00000000   01B5               PUSH     {R0,LR}
    154            
    155            
    156              if (TmpFlg==0)
   \   00000002   BA48               LDR      R0,??MenuPaint_0  ;; TextToChangeLength
   \   00000004   417A               LDRB     R1,[R0, #+9]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   01D1               BNE      ??MenuPaint_1
    157            {
    158              TmpFlg=1;
   \   0000000A   0121               MOVS     R1,#+1
   \   0000000C   4172               STRB     R1,[R0, #+9]
    159          
    160            }
    161          
    162            if (g_Message==0) 
   \                     ??MenuPaint_1:
   \   0000000E   B849               LDR      R1,??MenuPaint_0+0x4  ;; g_Message
   \   00000010   0968               LDR      R1,[R1, #+0]
   \   00000012   0029               CMP      R1,#+0
   \   00000014   00D0               BEQ      .+4
   \   00000016   62E2               B        ??MenuPaint_2
    163            switch (MenuLevel)
   \   00000018   016D               LDR      R1,[R0, #+80]
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   00D1               BNE      .+4
   \   0000001E   11E1               B        ??MenuPaint_3
   \   00000020   491E               SUBS     R1,R1,#+1
   \   00000022   00D1               BNE      .+4
   \   00000024   11E1               B        ??MenuPaint_4
   \   00000026   891E               SUBS     R1,R1,#+2
   \   00000028   00D1               BNE      .+4
   \   0000002A   18E1               B        ??MenuPaint_5
   \   0000002C   491E               SUBS     R1,R1,#+1
   \   0000002E   00D1               BNE      .+4
   \   00000030   18E1               B        ??MenuPaint_6
   \   00000032   491E               SUBS     R1,R1,#+1
   \   00000034   00D1               BNE      .+4
   \   00000036   18E1               B        ??MenuPaint_7
   \   00000038   491F               SUBS     R1,R1,#+5
   \   0000003A   00D1               BNE      .+4
   \   0000003C   28E1               B        ??MenuPaint_8
   \   0000003E   491E               SUBS     R1,R1,#+1
   \   00000040   00D1               BNE      .+4
   \   00000042   29E1               B        ??MenuPaint_9
   \   00000044   491E               SUBS     R1,R1,#+1
   \   00000046   00D1               BNE      .+4
   \   00000048   2AE2               B        ??MenuPaint_10
   \   0000004A   491E               SUBS     R1,R1,#+1
   \   0000004C   00D1               BNE      .+4
   \   0000004E   3CE2               B        ??MenuPaint_11
   \   00000050   491E               SUBS     R1,R1,#+1
   \   00000052   00D1               BNE      .+4
   \   00000054   3CE2               B        ??MenuPaint_12
   \   00000056   491E               SUBS     R1,R1,#+1
   \   00000058   00D1               BNE      .+4
   \   0000005A   3DE2               B        ??MenuPaint_13
   \   0000005C   2439               SUBS     R1,R1,#+36
   \   0000005E   00D1               BNE      .+4
   \   00000060   06E1               B        ??MenuPaint_14
   \   00000062   3C39               SUBS     R1,R1,#+60
   \   00000064   00D1               BNE      .+4
   \   00000066   1AE1               B        ??MenuPaint_15
   \   00000068   491E               SUBS     R1,R1,#+1
   \   0000006A   00D1               BNE      .+4
   \   0000006C   46E1               B        ??MenuPaint_16
   \   0000006E   491E               SUBS     R1,R1,#+1
   \   00000070   00D1               BNE      .+4
   \   00000072   93E1               B        ??MenuPaint_17
   \   00000074   491E               SUBS     R1,R1,#+1
   \   00000076   00D1               BNE      .+4
   \   00000078   C4E1               B        ??MenuPaint_18
   \   0000007A   491E               SUBS     R1,R1,#+1
   \   0000007C   00D1               BNE      .+4
   \   0000007E   E2E1               B        ??MenuPaint_19
   \   00000080   491E               SUBS     R1,R1,#+1
   \   00000082   00D1               BNE      .+4
   \   00000084   EEE1               B        ??MenuPaint_20
   \   00000086   491E               SUBS     R1,R1,#+1
   \   00000088   00D1               BNE      .+4
   \   0000008A   EEE1               B        ??MenuPaint_21
   \   0000008C   C91E               SUBS     R1,R1,#+3
   \   0000008E   00D1               BNE      .+4
   \   00000090   08E1               B        ??MenuPaint_22
   \   00000092   491E               SUBS     R1,R1,#+1
   \   00000094   00D1               BNE      .+4
   \   00000096   0DE2               B        ??MenuPaint_23
   \   00000098   964A               LDR      R2,??MenuPaint_0+0x8  ;; 0x3dd
   \   0000009A   891A               SUBS     R1,R1,R2
   \   0000009C   00D1               BNE      .+4
   \   0000009E   01E1               B        ??MenuPaint_22
   \   000000A0   491E               SUBS     R1,R1,#+1
   \   000000A2   00D1               BNE      .+4
   \   000000A4   0CE1               B        ??MenuPaint_24
   \   000000A6   491E               SUBS     R1,R1,#+1
   \   000000A8   00D1               BNE      .+4
   \   000000AA   18E1               B        ??MenuPaint_25
   \   000000AC   0839               SUBS     R1,R1,#+8
   \   000000AE   00D1               BNE      .+4
   \   000000B0   F8E0               B        ??MenuPaint_22
   \   000000B2   491E               SUBS     R1,R1,#+1
   \   000000B4   00D1               BNE      .+4
   \   000000B6   2BE1               B        ??MenuPaint_26
   \   000000B8   491E               SUBS     R1,R1,#+1
   \   000000BA   00D1               BNE      .+4
   \   000000BC   50E1               B        ??MenuPaint_27
   \   000000BE   491E               SUBS     R1,R1,#+1
   \   000000C0   00D1               BNE      .+4
   \   000000C2   57E1               B        ??MenuPaint_28
   \   000000C4   491E               SUBS     R1,R1,#+1
   \   000000C6   00D1               BNE      .+4
   \   000000C8   5EE1               B        ??MenuPaint_29
   \   000000CA   C91F               SUBS     R1,R1,#+7
   \   000000CC   00D1               BNE      .+4
   \   000000CE   68E1               B        ??MenuPaint_30
   \   000000D0   891E               SUBS     R1,R1,#+2
   \   000000D2   00D1               BNE      .+4
   \   000000D4   73E1               B        ??MenuPaint_31
   \   000000D6   491E               SUBS     R1,R1,#+1
   \   000000D8   00D1               BNE      .+4
   \   000000DA   79E1               B        ??MenuPaint_32
   \   000000DC   491E               SUBS     R1,R1,#+1
   \   000000DE   00D1               BNE      .+4
   \   000000E0   8AE1               B        ??MenuPaint_33
   \   000000E2   891F               SUBS     R1,R1,#+6
   \   000000E4   00D1               BNE      .+4
   \   000000E6   90E1               B        ??MenuPaint_34
   \   000000E8   491E               SUBS     R1,R1,#+1
   \   000000EA   00D1               BNE      .+4
   \   000000EC   90E1               B        ??MenuPaint_35
   \   000000EE   491E               SUBS     R1,R1,#+1
   \   000000F0   00D1               BNE      .+4
   \   000000F2   90E1               B        ??MenuPaint_36
   \   000000F4   491E               SUBS     R1,R1,#+1
   \   000000F6   00D1               BNE      .+4
   \   000000F8   96E1               B        ??MenuPaint_37
   \   000000FA   891E               SUBS     R1,R1,#+2
   \   000000FC   00D1               BNE      .+4
   \   000000FE   9CE1               B        ??MenuPaint_38
   \   00000100   491E               SUBS     R1,R1,#+1
   \   00000102   00D1               BNE      .+4
   \   00000104   9CE1               B        ??MenuPaint_39
   \   00000106   C91E               SUBS     R1,R1,#+3
   \   00000108   00D1               BNE      .+4
   \   0000010A   CBE0               B        ??MenuPaint_22
   \   0000010C   491E               SUBS     R1,R1,#+1
   \   0000010E   00D1               BNE      .+4
   \   00000110   62E1               B        ??MenuPaint_40
   \   00000112   491E               SUBS     R1,R1,#+1
   \   00000114   00D1               BNE      .+4
   \   00000116   0FE1               B        ??MenuPaint_41
   \   00000118   491E               SUBS     R1,R1,#+1
   \   0000011A   00D1               BNE      .+4
   \   0000011C   96E1               B        ??MenuPaint_42
   \   0000011E   1239               SUBS     R1,R1,#+18
   \   00000120   00D1               BNE      .+4
   \   00000122   A5E1               B        ??MenuPaint_43
   \   00000124   491E               SUBS     R1,R1,#+1
   \   00000126   00D1               BNE      .+4
   \   00000128   B1E1               B        ??MenuPaint_44
   \   0000012A   491E               SUBS     R1,R1,#+1
   \   0000012C   00D1               BNE      .+4
   \   0000012E   B1E1               B        ??MenuPaint_45
   \   00000130   491E               SUBS     R1,R1,#+1
   \   00000132   00D1               BNE      .+4
   \   00000134   B1E1               B        ??MenuPaint_46
   \   00000136   704A               LDR      R2,??MenuPaint_0+0xC  ;; 0x26d1
   \   00000138   891A               SUBS     R1,R1,R2
   \   0000013A   00D1               BNE      .+4
   \   0000013C   C3E0               B        ??MenuPaint_47
   \   0000013E   0B39               SUBS     R1,R1,#+11
   \   00000140   00D1               BNE      .+4
   \   00000142   CFE0               B        ??MenuPaint_48
   \   00000144   5939               SUBS     R1,R1,#+89
   \   00000146   00D1               BNE      .+4
   \   00000148   ECE0               B        ??MenuPaint_49
   \   0000014A   491E               SUBS     R1,R1,#+1
   \   0000014C   00D1               BNE      .+4
   \   0000014E   F3E0               B        ??MenuPaint_41
   \   00000150   491E               SUBS     R1,R1,#+1
   \   00000152   00D1               BNE      .+4
   \   00000154   F5E0               B        ??MenuPaint_50
   \   00000156   491E               SUBS     R1,R1,#+1
   \   00000158   00D1               BNE      .+4
   \   0000015A   F6E0               B        ??MenuPaint_51
   \   0000015C   491E               SUBS     R1,R1,#+1
   \   0000015E   00D1               BNE      .+4
   \   00000160   FBE0               B        ??MenuPaint_52
   \   00000162   0939               SUBS     R1,R1,#+9
   \   00000164   00D1               BNE      .+4
   \   00000166   F0E0               B        ??MenuPaint_51
   \   00000168   6B39               SUBS     R1,R1,#+107
   \   0000016A   00D1               BNE      .+4
   \   0000016C   2AE1               B        ??MenuPaint_53
   \   0000016E   491E               SUBS     R1,R1,#+1
   \   00000170   00D1               BNE      .+4
   \   00000172   2AE1               B        ??MenuPaint_54
   \   00000174   0939               SUBS     R1,R1,#+9
   \   00000176   00D1               BNE      .+4
   \   00000178   2EE1               B        ??MenuPaint_40
   \   0000017A   C91E               SUBS     R1,R1,#+3
   \   0000017C   00D1               BNE      .+4
   \   0000017E   37E1               B        ??MenuPaint_55
   \   00000180   C91F               SUBS     R1,R1,#+7
   \   00000182   00D1               BNE      .+4
   \   00000184   28E1               B        ??MenuPaint_40
   \   00000186   5039               SUBS     R1,R1,#+80
   \   00000188   0129               CMP      R1,#+1
   \   0000018A   00D8               BHI      .+4
   \   0000018C   46E1               B        ??MenuPaint_56
   \   0000018E   0A39               SUBS     R1,R1,#+10
   \   00000190   00D1               BNE      .+4
   \   00000192   4CE1               B        ??MenuPaint_57
   \   00000194   491E               SUBS     R1,R1,#+1
   \   00000196   00D1               BNE      .+4
   \   00000198   4CE1               B        ??MenuPaint_58
   \   0000019A   491E               SUBS     R1,R1,#+1
   \   0000019C   62D0               BEQ      ??MenuPaint_6
   \   0000019E   5839               SUBS     R1,R1,#+88
   \   000001A0   00D1               BNE      .+4
   \   000001A2   19E1               B        ??MenuPaint_40
   \   000001A4   C91E               SUBS     R1,R1,#+3
   \   000001A6   00D1               BNE      .+4
   \   000001A8   54E1               B        ??MenuPaint_59
   \   000001AA   491E               SUBS     R1,R1,#+1
   \   000001AC   00D1               BNE      .+4
   \   000001AE   17E1               B        ??MenuPaint_60
   \   000001B0   491E               SUBS     R1,R1,#+1
   \   000001B2   00D1               BNE      .+4
   \   000001B4   18E1               B        ??MenuPaint_61
   \   000001B6   491E               SUBS     R1,R1,#+1
   \   000001B8   00D1               BNE      .+4
   \   000001BA   4FE1               B        ??MenuPaint_62
   \   000001BC   AE39               SUBS     R1,R1,#+174
   \   000001BE   00D1               BNE      .+4
   \   000001C0   59E1               B        ??MenuPaint_63
   \   000001C2   491E               SUBS     R1,R1,#+1
   \   000001C4   00D1               BNE      .+4
   \   000001C6   5CE1               B        ??MenuPaint_64
   \   000001C8   0939               SUBS     R1,R1,#+9
   \   000001CA   00D1               BNE      .+4
   \   000001CC   B4E0               B        ??MenuPaint_41
   \   000001CE   C54A               LDR      R2,??MenuPaint_65  ;; 0x1843e
   \   000001D0   891A               SUBS     R1,R1,R2
   \   000001D2   7CD0               BEQ      ??MenuPaint_66
   \   000001D4   FA22               MOVS     R2,#+250
   \   000001D6   9200               LSLS     R2,R2,#+2        ;; #+1000
   \   000001D8   891A               SUBS     R1,R1,R2
   \   000001DA   00D1               BNE      .+4
   \   000001DC   ACE0               B        ??MenuPaint_41
   \   000001DE   491E               SUBS     R1,R1,#+1
   \   000001E0   00D1               BNE      .+4
   \   000001E2   AEE0               B        ??MenuPaint_50
   \   000001E4   1339               SUBS     R1,R1,#+19
   \   000001E6   00D1               BNE      .+4
   \   000001E8   A6E0               B        ??MenuPaint_41
   \   000001EA   0A39               SUBS     R1,R1,#+10
   \   000001EC   00D1               BNE      .+4
   \   000001EE   A3E0               B        ??MenuPaint_41
   \   000001F0   491E               SUBS     R1,R1,#+1
   \   000001F2   00D1               BNE      .+4
   \   000001F4   ADE0               B        ??MenuPaint_67
   \   000001F6   6339               SUBS     R1,R1,#+99
   \   000001F8   00D1               BNE      .+4
   \   000001FA   9DE0               B        ??MenuPaint_41
   \   000001FC   491E               SUBS     R1,R1,#+1
   \   000001FE   00D1               BNE      .+4
   \   00000200   A7E0               B        ??MenuPaint_67
   \   00000202   B332               ADDS     R2,R2,#+179
   \   00000204   891A               SUBS     R1,R1,R2
   \   00000206   00D1               BNE      .+4
   \   00000208   EAE0               B        ??MenuPaint_60
   \   0000020A   0A39               SUBS     R1,R1,#+10
   \   0000020C   00D1               BNE      .+4
   \   0000020E   EBE0               B        ??MenuPaint_61
   \   00000210   DC22               MOVS     R2,#+220
   \   00000212   9200               LSLS     R2,R2,#+2        ;; #+880
   \   00000214   891A               SUBS     R1,R1,R2
   \   00000216   00D1               BNE      .+4
   \   00000218   03E1               B        ??MenuPaint_68
   \   0000021A   0A39               SUBS     R1,R1,#+10
   \   0000021C   00D1               BNE      .+4
   \   0000021E   00E1               B        ??MenuPaint_68
   \   00000220   ....               LDR      R2,??DataTable0  ;; 0xae6
   \   00000222   891A               SUBS     R1,R1,R2
   \   00000224   00D1               BNE      .+4
   \   00000226   87E0               B        ??MenuPaint_41
   \   00000228   491E               SUBS     R1,R1,#+1
   \   0000022A   00D1               BNE      .+4
   \   0000022C   26E1               B        ??MenuPaint_69
   \   0000022E   0A39               SUBS     R1,R1,#+10
   \   00000230   00D1               BNE      .+4
   \   00000232   29E1               B        ??MenuPaint_70
   \   00000234   ....               LDR      R2,??DataTable1  ;; 0xf51df
   \   00000236   891A               SUBS     R1,R1,R2
   \   00000238   00D1               BNE      .+4
   \   0000023A   7DE0               B        ??MenuPaint_41
   \   0000023C   ....               LDR      R2,??DataTable2  ;; 0xc3b4
   \   0000023E   891A               SUBS     R1,R1,R2
   \   00000240   7AD0               BEQ      ??MenuPaint_41
   \   00000242   4CE1               B        ??MenuPaint_2
    164            {
    165              case 0        : StartAnimation_Paint();         break;
   \                     ??MenuPaint_3:
   \   00000244   ........           BL       StartAnimation_Paint
   \   00000248   49E1               B        ??MenuPaint_2
    166              case 1        : MainSide_Paint(&gProg.Screen[CurrentSheet]);         break;
   \                     ??MenuPaint_4:
   \   0000024A   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   0000024C   0079               LDRB     R0,[R0, #+4]
   \   0000024E   A022               MOVS     R2,#+160
   \   00000250   5043               MULS     R0,R2,R0
   \   00000252   ....               LDR      R2,??DataTable33  ;; gProg
   \   00000254   1018               ADDS     R0,R2,R0
   \   00000256   4018               ADDS     R0,R0,R1
   \   00000258   ........           BL       MainSide_Paint
   \   0000025C   3FE1               B        ??MenuPaint_2
    167              case 3        : CheckChannel();         break;
   \                     ??MenuPaint_5:
   \   0000025E   ........           BL       CheckChannel
   \   00000262   3CE1               B        ??MenuPaint_2
    168              case 4        : SetTouchScreen_Paint();  break;
   \                     ??MenuPaint_6:
   \   00000264   ........           BL       SetTouchScreen_Paint
   \   00000268   39E1               B        ??MenuPaint_2
    169              case 5        : AdvanceSet_Paint();  break;
   \                     ??MenuPaint_7:
   \   0000026A   ........           BL       AdvanceSet_Paint
   \   0000026E   36E1               B        ??MenuPaint_2
    170                case 51     : Ask_Paint(Speech[g_leng].Czysc_pamiec,Speech[g_leng].Potwierdz,"");  break;
   \                     ??MenuPaint_14:
   \   00000270   ....               LDR      R0,??DataTable26  ;; g_leng
   \   00000272   0068               LDR      R0,[R0, #+0]
   \   00000274   ....               LDR      R1,??DataTable27  ;; 0xa7d
   \   00000276   4843               MULS     R0,R1,R0
   \   00000278   ....               LDR      R1,??DataTable28  ;; Speech
   \   0000027A   0818               ADDS     R0,R1,R0
   \   0000027C   9AA2               ADR      R2,??MenuPaint_65+0x4  ;; 0x00, 0x00, 0x00, 0x00
   \   0000027E   FF21               MOVS     R1,#+255
   \   00000280   F031               ADDS     R1,R1,#+240      ;; #+495
   \   00000282   4118               ADDS     R1,R0,R1
   \   00000284   F023               MOVS     R3,#+240
   \   00000286   DB00               LSLS     R3,R3,#+3        ;; #+1920
   \   00000288   C018               ADDS     R0,R0,R3
   \   0000028A   ........           BL       Ask_Paint
   \   0000028E   26E1               B        ??MenuPaint_2
    171                
    172                case 10     : MenuAccessPass_Paint(1);  break; 
   \                     ??MenuPaint_8:
   \   00000290   0120               MOVS     R0,#+1
   \   00000292   ........           BL       MenuAccessPass_Paint
   \   00000296   22E1               B        ??MenuPaint_2
    173                case 11     : MenuSide_Paint();         break; 
   \                     ??MenuPaint_9:
   \   00000298   ........           BL       MenuSide_Paint
   \   0000029C   1FE1               B        ??MenuPaint_2
    174                      case 111   : Lader_Paint();        break;
   \                     ??MenuPaint_15:
   \   0000029E   ........           BL       Lader_Paint
   \   000002A2   1CE1               B        ??MenuPaint_2
    175                          case 1110 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
   \                     ??MenuPaint_22:
   \   000002A4   ....               LDR      R0,??DataTable26  ;; g_leng
   \   000002A6   0068               LDR      R0,[R0, #+0]
   \   000002A8   ....               LDR      R1,??DataTable27  ;; 0xa7d
   \   000002AA   4843               MULS     R0,R1,R0
   \   000002AC   ....               LDR      R1,??DataTable28  ;; Speech
   \   000002AE   0818               ADDS     R0,R1,R0
   \   000002B0   8E49               LDR      R1,??MenuPaint_65+0x8  ;; 0x456
   \   000002B2   4218               ADDS     R2,R0,R1
   \   000002B4   0F39               SUBS     R1,R1,#+15
   \   000002B6   4118               ADDS     R1,R0,R1
   \   000002B8   ....               LDR      R0,??DataTable12  ;; `?<Constant "Info ">`
   \   000002BA   ........           BL       Ask_Paint
   \   000002BE   0EE1               B        ??MenuPaint_2
    176                          case 1111: Procedure_Paint();  break;
   \                     ??MenuPaint_24:
   \   000002C0   ........           BL       Procedure_Paint
   \   000002C4   0BE1               B        ??MenuPaint_2
    177                            case 11111: ValueChange_Paint(ValueChange);  break;
   \                     ??MenuPaint_47:
   \   000002C6   406E               LDR      R0,[R0, #+100]
   \   000002C8   ........           BL       ValueChange_Paint
   \   000002CC   07E1               B        ??MenuPaint_2
    178                            case 111111 : Message("Max=", "+/- 3000 ",11111);  break;
   \                     ??MenuPaint_66:
   \   000002CE   ....               LDR      R0,??DataTable12  ;; `?<Constant "Info ">`
   \   000002D0   ....               LDR      R2,??DataTable13  ;; 0x2b67
   \   000002D2   0100               MOVS     R1,R0
   \   000002D4   1031               ADDS     R1,R1,#+16
   \   000002D6   0830               ADDS     R0,R0,#+8
   \   000002D8   ........           BL       Message
   \   000002DC   FFE0               B        ??MenuPaint_2
    179                          case 1112: LaderChange_Paint();  break;
   \                     ??MenuPaint_25:
   \   000002DE   ........           BL       LaderChange_Paint
   \   000002E2   FCE0               B        ??MenuPaint_2
    180                            case 11122: RemRow_Paint();  break;         
   \                     ??MenuPaint_48:
   \   000002E4   ........           BL       RemRow_Paint
   \   000002E8   F9E0               B        ??MenuPaint_2
   \   000002EA   C046               Nop      
   \                     ??MenuPaint_0:
   \   000002EC   ........           DC32     TextToChangeLength
   \   000002F0   ........           DC32     g_Message
   \   000002F4   DD030000           DC32     0x3dd
   \   000002F8   D1260000           DC32     0x26d1
    181                      case 112  : ScreenSet_Paint(&gProg.Screen[CurModifSheet]);        break;   
   \                     ??MenuPaint_16:
   \   000002FC   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   000002FE   4079               LDRB     R0,[R0, #+5]
   \   00000300   A022               MOVS     R2,#+160
   \   00000302   5043               MULS     R0,R2,R0
   \   00000304   ....               LDR      R2,??DataTable33  ;; gProg
   \   00000306   1018               ADDS     R0,R2,R0
   \   00000308   4018               ADDS     R0,R0,R1
   \   0000030A   ........           BL       ScreenSet_Paint
   \   0000030E   E6E0               B        ??MenuPaint_2
    182                          case 1120 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
    183                          case 1121  : ScreenDesign1_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_26:
   \   00000310   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   00000312   4079               LDRB     R0,[R0, #+5]
   \   00000314   A022               MOVS     R2,#+160
   \   00000316   5043               MULS     R0,R2,R0
   \   00000318   ....               LDR      R2,??DataTable33  ;; gProg
   \   0000031A   1018               ADDS     R0,R2,R0
   \   0000031C   4018               ADDS     R0,R0,R1
   \   0000031E   ........           BL       ScreenDesign1_Paint
   \   00000322   DCE0               B        ??MenuPaint_2
    184                              case 11211  : ZoneGraph_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_49:
   \   00000324   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   00000326   4079               LDRB     R0,[R0, #+5]
   \   00000328   A022               MOVS     R2,#+160
   \   0000032A   5043               MULS     R0,R2,R0
   \   0000032C   ....               LDR      R2,??DataTable33  ;; gProg
   \   0000032E   1018               ADDS     R0,R2,R0
   \   00000330   4018               ADDS     R0,R0,R1
   \   00000332   ........           BL       ZoneGraph_Paint
   \   00000336   D2E0               B        ??MenuPaint_2
    185                                  case 112111  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_41:
   \   00000338   0100               MOVS     R1,R0
   \   0000033A   806D               LDR      R0,[R0, #+88]
   \   0000033C   ........           BL       TextChange_Paint
   \   00000340   CDE0               B        ??MenuPaint_2
    186                                  case 112112  :  AnalogGraph_Paint(AnalogToChange);break;
   \                     ??MenuPaint_50:
   \   00000342   C06E               LDR      R0,[R0, #+108]
   \   00000344   ........           BL       AnalogGraph_Paint
   \   00000348   C9E0               B        ??MenuPaint_2
    187                                    case 1121121  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    188                              case 11212  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    189                              case 11213  :  AnalogGraph_Paint(AnalogToChange);break;
    190                                case 112131  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    191                              case 11214  :  ButtonOptions_Paint(ButtonToChange); break;
   \                     ??MenuPaint_51:
   \   0000034A   C06D               LDR      R0,[R0, #+92]
   \   0000034C   ........           BL       ButtonOptions_Paint
   \   00000350   C5E0               B        ??MenuPaint_2
    192                                case 112141  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    193                                case 112142  :  ButtonAction_Paint(ButtonToChange); break;
   \                     ??MenuPaint_67:
   \   00000352   C06D               LDR      R0,[R0, #+92]
   \   00000354   ........           BL       ButtonAction_Paint
   \   00000358   C1E0               B        ??MenuPaint_2
    194                              case 11215  :  BigTemperLabel_Paint(); break;
   \                     ??MenuPaint_52:
   \   0000035A   ........           BL       BigTemperLabel_Paint
   \   0000035E   BEE0               B        ??MenuPaint_2
    195                          case 1122  :  ThermostatSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_27:
   \   00000360   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   00000362   4079               LDRB     R0,[R0, #+5]
   \   00000364   A022               MOVS     R2,#+160
   \   00000366   5043               MULS     R0,R2,R0
   \   00000368   ....               LDR      R2,??DataTable33  ;; gProg
   \   0000036A   1018               ADDS     R0,R2,R0
   \   0000036C   4018               ADDS     R0,R0,R1
   \   0000036E   ........           BL       ThermostatSet_Paint
   \   00000372   B4E0               B        ??MenuPaint_2
    196                                case 11224   :  ButtonOptions_Paint(ButtonToChange); break;
    197                                case 112241  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    198                                case 112242  :  ButtonAction_Paint(ButtonToChange); break;
    199                          case 1123  :  ScreenTimetableSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_28:
   \   00000374   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   00000376   4079               LDRB     R0,[R0, #+5]
   \   00000378   A022               MOVS     R2,#+160
   \   0000037A   5043               MULS     R0,R2,R0
   \   0000037C   ....               LDR      R2,??DataTable33  ;; gProg
   \   0000037E   1018               ADDS     R0,R2,R0
   \   00000380   4018               ADDS     R0,R0,R1
   \   00000382   ........           BL       ScreenTimetableSet_Paint
   \   00000386   AAE0               B        ??MenuPaint_2
    200                          case 1124  :  ScreenAlarmSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_29:
   \   00000388   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   0000038A   4079               LDRB     R0,[R0, #+5]
   \   0000038C   A022               MOVS     R2,#+160
   \   0000038E   5043               MULS     R0,R2,R0
   \   00000390   ....               LDR      R2,??DataTable33  ;; gProg
   \   00000392   1018               ADDS     R0,R2,R0
   \   00000394   4018               ADDS     R0,R0,R1
   \   00000396   ........           BL       ScreenAlarmSet_Paint
   \   0000039A   A0E0               B        ??MenuPaint_2
    201                      case 113   : Options_Paint();          break;  
   \                     ??MenuPaint_17:
   \   0000039C   ........           BL       Options_Paint
   \   000003A0   9DE0               B        ??MenuPaint_2
    202                          case 1131 : Ask_Paint("Restart",Speech[g_leng].Potwierdz,"");  break;
   \                     ??MenuPaint_30:
   \   000003A2   51A2               ADR      R2,??MenuPaint_65+0x4  ;; 0x00, 0x00, 0x00, 0x00
   \   000003A4   FF20               MOVS     R0,#+255
   \   000003A6   F030               ADDS     R0,R0,#+240      ;; #+495
   \   000003A8   ....               LDR      R1,??DataTable26  ;; g_leng
   \   000003AA   0968               LDR      R1,[R1, #+0]
   \   000003AC   ....               LDR      R3,??DataTable27  ;; 0xa7d
   \   000003AE   5943               MULS     R1,R3,R1
   \   000003B0   ....               LDR      R3,??DataTable28  ;; Speech
   \   000003B2   5918               ADDS     R1,R3,R1
   \   000003B4   0918               ADDS     R1,R1,R0
   \   000003B6   ....               LDR      R0,??DataTable29  ;; `?<Constant "Info ">` + 28
   \   000003B8   ........           BL       Ask_Paint
   \   000003BC   8FE0               B        ??MenuPaint_2
    203                          case 1133 :  Zmienne_Paint();  break;
   \                     ??MenuPaint_31:
   \   000003BE   ........           BL       Zmienne_Paint
   \   000003C2   8CE0               B        ??MenuPaint_2
    204                                  case 11331 :  ZmienneDwustanowe_Paint();  break;
   \                     ??MenuPaint_53:
   \   000003C4   ........           BL       ZmienneDwustanowe_Paint
   \   000003C8   89E0               B        ??MenuPaint_2
    205                                  case 11332 :  ZmienneAnalogowe_Paint();  break;
   \                     ??MenuPaint_54:
   \   000003CA   ........           BL       ZmienneAnalogowe_Paint
   \   000003CE   86E0               B        ??MenuPaint_2
    206                          case 1134 : CheckingModule_Paint(&NeuronIdToChange);  break;
   \                     ??MenuPaint_32:
   \   000003D0   6030               ADDS     R0,R0,#+96
   \   000003D2   ........           BL       CheckingModule_Paint
   \   000003D6   82E0               B        ??MenuPaint_2
    207                                case 11341 : NeuronNrChange_Paint(NeuronIdChange);  break;  
   \                     ??MenuPaint_40:
   \   000003D8   806E               LDR      R0,[R0, #+104]
   \   000003DA   ........           BL       NeuronNrChange_Paint
   \   000003DE   7EE0               B        ??MenuPaint_2
    208                                case 113421 : NodeStanIO_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_60:
   \   000003E0   C078               LDRB     R0,[R0, #+3]
   \   000003E2   ........           BL       NodeStanIO_Paint
   \   000003E6   7AE0               B        ??MenuPaint_2
    209                                case 113431 : NodeWeAnalog_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_61:
   \   000003E8   C078               LDRB     R0,[R0, #+3]
   \   000003EA   ........           BL       NodeWeAnalog_Paint
   \   000003EE   76E0               B        ??MenuPaint_2
    210                                case 11344 : Tester_MG1_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_55:
   \   000003F0   C078               LDRB     R0,[R0, #+3]
   \   000003F2   ........           BL       Tester_MG1_Paint
   \   000003F6   72E0               B        ??MenuPaint_2
    211                          case 1135 : ChangeID_Paint(&NeuronIdToChange, &NeuronIdAfterChange);  break;
   \                     ??MenuPaint_33:
   \   000003F8   0100               MOVS     R1,R0
   \   000003FA   8431               ADDS     R1,R1,#+132
   \   000003FC   6030               ADDS     R0,R0,#+96
   \   000003FE   ........           BL       ChangeID_Paint
   \   00000402   6CE0               B        ??MenuPaint_2
    212                                case 11351 : NeuronNrChange_Paint(NeuronIdChange);  break;      
    213                      case 114   : Setup_Paint();            break;
   \                     ??MenuPaint_18:
   \   00000404   ........           BL       Setup_Paint
   \   00000408   69E0               B        ??MenuPaint_2
    214                          case 1141 : SetupLang_Paint();         break;
   \                     ??MenuPaint_34:
   \   0000040A   ........           BL       SetupLang_Paint
   \   0000040E   66E0               B        ??MenuPaint_2
    215                          case 1142 : SetupTime_Paint();        break;  
   \                     ??MenuPaint_35:
   \   00000410   ........           BL       SetupTime_Paint
   \   00000414   63E0               B        ??MenuPaint_2
    216                          case 1143 : SetupPass_Paint();         break;
   \                     ??MenuPaint_36:
   \   00000416   ........           BL       SetupPass_Paint
   \   0000041A   60E0               B        ??MenuPaint_2
    217                              case 11431 : SetupOldPass_Paint();         break;
   \                     ??MenuPaint_56:
   \   0000041C   ........           BL       SetupOldPass_Paint
   \   00000420   5DE0               B        ??MenuPaint_2
    218                                  case 114311 : SetupNewPass_Paint();         break;
   \                     ??MenuPaint_68:
   \   00000422   ........           BL       SetupNewPass_Paint
   \   00000426   5AE0               B        ??MenuPaint_2
    219                              case 11432 : SetupOldPass_Paint();         break;
    220                                  case 114321 : SetupNewPass_Paint();         break; 
    221                          case 1144 : ScreenSetup_Paint();  break;    
   \                     ??MenuPaint_37:
   \   00000428   ........           BL       ScreenSetup_Paint
   \   0000042C   57E0               B        ??MenuPaint_2
    222                              case 11441 : ScreenBrightness_Paint();  break;
   \                     ??MenuPaint_57:
   \   0000042E   ........           BL       ScreenBrightness_Paint
   \   00000432   54E0               B        ??MenuPaint_2
    223                              case 11442 : ScreenSever_Paint();  break;
   \                     ??MenuPaint_58:
   \   00000434   ........           BL       ScreenSever_Paint
   \   00000438   51E0               B        ??MenuPaint_2
    224                              case 11443 : SetTouchScreen_Paint();  break;
    225                          case 1146 : MasterSlave_Paint();  break;
   \                     ??MenuPaint_38:
   \   0000043A   ........           BL       MasterSlave_Paint
   \   0000043E   4EE0               B        ??MenuPaint_2
    226                          case 1147 : RF_Channel_Paint();  break;
   \                     ??MenuPaint_39:
   \   00000440   ........           BL       RF_Channel_Paint
   \   00000444   4BE0               B        ??MenuPaint_2
    227                      case 115  : NeuronsList_Paint();    break;
   \                     ??MenuPaint_19:
   \   00000446   ........           BL       NeuronsList_Paint
   \   0000044A   48E0               B        ??MenuPaint_2
    228                         case 1150 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
    229                         case 1151 : NeuronNrChange_Paint(NeuronIdChange);  break;
    230                         case 1152 :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    231                         case 1153 :  Node_Paint(NeuronNrChange); break;
   \                     ??MenuPaint_42:
   \   0000044C   C078               LDRB     R0,[R0, #+3]
   \   0000044E   ........           BL       Node_Paint
   \   00000452   44E0               B        ??MenuPaint_2
    232                            case 11531 : NeuronNrChange_Paint(NeuronIdChange);  break;
    233                            case 11534 : NodeTestTrans_Paint(NeuronNrChange);  break;     //uwaga numer MenuLevel u¿ywany w StartAnimation jako startowy dla TESTERa
   \                     ??MenuPaint_59:
   \   00000454   C078               LDRB     R0,[R0, #+3]
   \   00000456   ........           BL       NodeTestTrans_Paint
   \   0000045A   40E0               B        ??MenuPaint_2
    234                            case 11535 : NodeStanIO_Paint(NeuronNrChange);  break;
    235                            case 11536 : NodeWeAnalog_Paint(NeuronNrChange);  break;
    236                            case 11537 : NodeInfo_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_62:
   \   0000045C   C078               LDRB     R0,[R0, #+3]
   \   0000045E   ........           BL       NodeInfo_Paint
   \   00000462   3CE0               B        ??MenuPaint_2
    237                      case 116  : Info_Paint();    break;
   \                     ??MenuPaint_20:
   \   00000464   ........           BL       Info_Paint
   \   00000468   39E0               B        ??MenuPaint_2
    238                      case 117  : Net_Paint();     break;
   \                     ??MenuPaint_21:
   \   0000046A   ........           BL       Net_Paint
   \   0000046E   36E0               B        ??MenuPaint_2
    239                         case 1171  : UstawSiec_Paint();     break;
   \                     ??MenuPaint_43:
   \   00000470   ........           BL       UstawSiec_Paint
   \   00000474   33E0               B        ??MenuPaint_2
    240                            case 11711  : Punkt_dostepuWiFi_Paint();     break;
   \                     ??MenuPaint_63:
   \   00000476   ........           BL       Punkt_dostepuWiFi_Paint
   \   0000047A   30E0               B        ??MenuPaint_2
    241                              case 117111  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    242                              case 117112 :  WiFiConecting_Paint(); break;
   \                     ??MenuPaint_69:
   \   0000047C   ........           BL       WiFiConecting_Paint
   \   00000480   2DE0               B        ??MenuPaint_2
    243                            case 11712  : IpTCP_Paint(); break;
   \                     ??MenuPaint_64:
   \   00000482   ........           BL       IpTCP_Paint
   \   00000486   2AE0               B        ??MenuPaint_2
    244                              case 117122 : IpConfig_Paint(); break;
   \                     ??MenuPaint_70:
   \   00000488   ........           BL       IpConfig_Paint
   \   0000048C   27E0               B        ??MenuPaint_2
    245                                case 1171221  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    246                         case 1172 :  Host_WiFi_Paint(); break;
   \                     ??MenuPaint_44:
   \   0000048E   ........           BL       Host_WiFi_Paint
   \   00000492   24E0               B        ??MenuPaint_2
    247                            case 11721  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    248                         case 1173 : NetPeriodicity_Paint(); break;  
   \                     ??MenuPaint_45:
   \   00000494   ........           BL       NetPeriodicity_Paint
   \   00000498   21E0               B        ??MenuPaint_2
    249                         case 1174 : NetInfo_Paint(); break; 
   \                     ??MenuPaint_46:
   \   0000049A   ........           BL       NetInfo_Paint
   \   0000049E   1EE0               B        ??MenuPaint_2
    250                case 12     : ThermostatAutoSet_Paint(&gProg.Screen[CurrentSheet]);         break;  
   \                     ??MenuPaint_10:
   \   000004A0   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   000004A2   0079               LDRB     R0,[R0, #+4]
   \   000004A4   A022               MOVS     R2,#+160
   \   000004A6   5043               MULS     R0,R2,R0
   \   000004A8   ....               LDR      R2,??DataTable33  ;; gProg
   \   000004AA   1018               ADDS     R0,R2,R0
   \   000004AC   4018               ADDS     R0,R0,R1
   \   000004AE   ........           BL       ThermostatAutoSet_Paint
   \   000004B2   14E0               B        ??MenuPaint_2
    251                      case 120 :   Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
    252                      case 121     : ThermostatChartSet_Paint(&gProg.Screen[CurrentSheet], CurentChartModyfi);         break;  
   \                     ??MenuPaint_23:
   \   000004B4   8178               LDRB     R1,[R0, #+2]
   \   000004B6   ....               LDR      R2,??DataTable32  ;; 0xbb98
   \   000004B8   0079               LDRB     R0,[R0, #+4]
   \   000004BA   A023               MOVS     R3,#+160
   \   000004BC   5843               MULS     R0,R3,R0
   \   000004BE   ....               LDR      R3,??DataTable33  ;; gProg
   \   000004C0   1818               ADDS     R0,R3,R0
   \   000004C2   8018               ADDS     R0,R0,R2
   \   000004C4   ........           BL       ThermostatChartSet_Paint
   \   000004C8   09E0               B        ??MenuPaint_2
    253                case 13     : TimetableSet_Paint();         break;   
   \                     ??MenuPaint_11:
   \   000004CA   ........           BL       TimetableSet_Paint
   \   000004CE   06E0               B        ??MenuPaint_2
    254                case 14     : AlarmPass_Paint(CurrentSheet);         break;   
   \                     ??MenuPaint_12:
   \   000004D0   0079               LDRB     R0,[R0, #+4]
   \   000004D2   ........           BL       AlarmPass_Paint
   \   000004D6   02E0               B        ??MenuPaint_2
    255                case 15     : AlarmPassChange_Paint(CurrentSheet);         break;  
   \                     ??MenuPaint_13:
   \   000004D8   0079               LDRB     R0,[R0, #+4]
   \   000004DA   ........           BL       AlarmPassChange_Paint
    256          
    257                             
    258            }
    259             
    260          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \                     ??MenuPaint_2:
   \   000004DE   08BC               POP      {R3}
   \   000004E0   01BC               POP      {R0}
   \   000004E2   0047               BX       R0               ;; return
   \                     ??MenuPaint_65:
   \   000004E4   3E840100           DC32     0x1843e
   \   000004E8   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000004EC   56040000           DC32     0x456
    261          
    262          
    263          
    264          
    265          
    266          //*-----------------------------------------------------------------------------
    267          //* Nazwa funkcji :    ScreenEvent
    268          //* Funkcja obs³ugi zdarzenia menu ekranowego
    269          //*-----------------------------------------------------------------------------
    270          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    271          //*-----------------------------------------------------------------------------
    272          
    273          

   \                                 In section Debug.txt, align 4, keep-with-next
    274          void ScreenEvent(void)
    275          {
   \                     ScreenEvent:
   \   00000000   01B5               PUSH     {R0,LR}
    276            
    277          
    278            
    279            if (g_Message==0)
   \   00000002   BA48               LDR      R0,??ScreenEvent_0  ;; g_Message
   \   00000004   0168               LDR      R1,[R0, #+0]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   00D0               BEQ      .+4
   \   0000000A   3EE2               B        ??ScreenEvent_1
    280            {
    281            switch (MenuLevel)
   \   0000000C   B848               LDR      R0,??ScreenEvent_0+0x4  ;; TextToChangeLength
   \   0000000E   016D               LDR      R1,[R0, #+80]
   \   00000010   0029               CMP      R1,#+0
   \   00000012   00D1               BNE      .+4
   \   00000014   08E1               B        ??ScreenEvent_2
   \   00000016   491E               SUBS     R1,R1,#+1
   \   00000018   00D1               BNE      .+4
   \   0000001A   08E1               B        ??ScreenEvent_3
   \   0000001C   C91E               SUBS     R1,R1,#+3
   \   0000001E   00D1               BNE      .+4
   \   00000020   0FE1               B        ??ScreenEvent_4
   \   00000022   491E               SUBS     R1,R1,#+1
   \   00000024   00D1               BNE      .+4
   \   00000026   0FE1               B        ??ScreenEvent_5
   \   00000028   491F               SUBS     R1,R1,#+5
   \   0000002A   00D1               BNE      .+4
   \   0000002C   12E1               B        ??ScreenEvent_6
   \   0000002E   491E               SUBS     R1,R1,#+1
   \   00000030   00D1               BNE      .+4
   \   00000032   13E1               B        ??ScreenEvent_7
   \   00000034   491E               SUBS     R1,R1,#+1
   \   00000036   00D1               BNE      .+4
   \   00000038   07E2               B        ??ScreenEvent_8
   \   0000003A   491E               SUBS     R1,R1,#+1
   \   0000003C   00D1               BNE      .+4
   \   0000003E   19E2               B        ??ScreenEvent_9
   \   00000040   491E               SUBS     R1,R1,#+1
   \   00000042   00D1               BNE      .+4
   \   00000044   19E2               B        ??ScreenEvent_10
   \   00000046   491E               SUBS     R1,R1,#+1
   \   00000048   00D1               BNE      .+4
   \   0000004A   1AE2               B        ??ScreenEvent_11
   \   0000004C   2439               SUBS     R1,R1,#+36
   \   0000004E   00D1               BNE      .+4
   \   00000050   FDE0               B        ??ScreenEvent_12
   \   00000052   3C39               SUBS     R1,R1,#+60
   \   00000054   00D1               BNE      .+4
   \   00000056   04E1               B        ??ScreenEvent_13
   \   00000058   491E               SUBS     R1,R1,#+1
   \   0000005A   00D1               BNE      .+4
   \   0000005C   1CE1               B        ??ScreenEvent_14
   \   0000005E   491E               SUBS     R1,R1,#+1
   \   00000060   00D1               BNE      .+4
   \   00000062   74E1               B        ??ScreenEvent_15
   \   00000064   491E               SUBS     R1,R1,#+1
   \   00000066   00D1               BNE      .+4
   \   00000068   9AE1               B        ??ScreenEvent_16
   \   0000006A   491E               SUBS     R1,R1,#+1
   \   0000006C   00D1               BNE      .+4
   \   0000006E   C2E1               B        ??ScreenEvent_17
   \   00000070   491E               SUBS     R1,R1,#+1
   \   00000072   00D1               BNE      .+4
   \   00000074   CEE1               B        ??ScreenEvent_18
   \   00000076   491E               SUBS     R1,R1,#+1
   \   00000078   00D1               BNE      .+4
   \   0000007A   CEE1               B        ??ScreenEvent_19
   \   0000007C   C91E               SUBS     R1,R1,#+3
   \   0000007E   00D1               BNE      .+4
   \   00000080   F2E0               B        ??ScreenEvent_20
   \   00000082   491E               SUBS     R1,R1,#+1
   \   00000084   00D1               BNE      .+4
   \   00000086   EAE1               B        ??ScreenEvent_21
   \   00000088   9A4A               LDR      R2,??ScreenEvent_0+0x8  ;; 0x3dd
   \   0000008A   891A               SUBS     R1,R1,R2
   \   0000008C   00D1               BNE      .+4
   \   0000008E   EBE0               B        ??ScreenEvent_20
   \   00000090   491E               SUBS     R1,R1,#+1
   \   00000092   00D1               BNE      .+4
   \   00000094   EBE0               B        ??ScreenEvent_22
   \   00000096   491E               SUBS     R1,R1,#+1
   \   00000098   00D1               BNE      .+4
   \   0000009A   F7E0               B        ??ScreenEvent_23
   \   0000009C   0839               SUBS     R1,R1,#+8
   \   0000009E   00D1               BNE      .+4
   \   000000A0   E2E0               B        ??ScreenEvent_20
   \   000000A2   491E               SUBS     R1,R1,#+1
   \   000000A4   00D1               BNE      .+4
   \   000000A6   01E1               B        ??ScreenEvent_24
   \   000000A8   491E               SUBS     R1,R1,#+1
   \   000000AA   00D1               BNE      .+4
   \   000000AC   31E1               B        ??ScreenEvent_25
   \   000000AE   491E               SUBS     R1,R1,#+1
   \   000000B0   00D1               BNE      .+4
   \   000000B2   38E1               B        ??ScreenEvent_26
   \   000000B4   491E               SUBS     R1,R1,#+1
   \   000000B6   00D1               BNE      .+4
   \   000000B8   3FE1               B        ??ScreenEvent_27
   \   000000BA   C91F               SUBS     R1,R1,#+7
   \   000000BC   00D1               BNE      .+4
   \   000000BE   49E1               B        ??ScreenEvent_28
   \   000000C0   891E               SUBS     R1,R1,#+2
   \   000000C2   00D1               BNE      .+4
   \   000000C4   49E1               B        ??ScreenEvent_29
   \   000000C6   491E               SUBS     R1,R1,#+1
   \   000000C8   00D1               BNE      .+4
   \   000000CA   4FE1               B        ??ScreenEvent_30
   \   000000CC   491E               SUBS     R1,R1,#+1
   \   000000CE   00D1               BNE      .+4
   \   000000D0   60E1               B        ??ScreenEvent_31
   \   000000D2   891F               SUBS     R1,R1,#+6
   \   000000D4   00D1               BNE      .+4
   \   000000D6   66E1               B        ??ScreenEvent_32
   \   000000D8   491E               SUBS     R1,R1,#+1
   \   000000DA   00D1               BNE      .+4
   \   000000DC   66E1               B        ??ScreenEvent_33
   \   000000DE   491E               SUBS     R1,R1,#+1
   \   000000E0   00D1               BNE      .+4
   \   000000E2   66E1               B        ??ScreenEvent_34
   \   000000E4   491E               SUBS     R1,R1,#+1
   \   000000E6   00D1               BNE      .+4
   \   000000E8   76E1               B        ??ScreenEvent_35
   \   000000EA   891E               SUBS     R1,R1,#+2
   \   000000EC   00D1               BNE      .+4
   \   000000EE   7CE1               B        ??ScreenEvent_36
   \   000000F0   491E               SUBS     R1,R1,#+1
   \   000000F2   00D1               BNE      .+4
   \   000000F4   7CE1               B        ??ScreenEvent_37
   \   000000F6   C91E               SUBS     R1,R1,#+3
   \   000000F8   00D1               BNE      .+4
   \   000000FA   B5E0               B        ??ScreenEvent_20
   \   000000FC   491E               SUBS     R1,R1,#+1
   \   000000FE   00D1               BNE      .+4
   \   00000100   38E1               B        ??ScreenEvent_38
   \   00000102   491E               SUBS     R1,R1,#+1
   \   00000104   00D1               BNE      .+4
   \   00000106   E5E0               B        ??ScreenEvent_39
   \   00000108   491E               SUBS     R1,R1,#+1
   \   0000010A   00D1               BNE      .+4
   \   0000010C   76E1               B        ??ScreenEvent_40
   \   0000010E   1239               SUBS     R1,R1,#+18
   \   00000110   00D1               BNE      .+4
   \   00000112   85E1               B        ??ScreenEvent_41
   \   00000114   491E               SUBS     R1,R1,#+1
   \   00000116   00D1               BNE      .+4
   \   00000118   8EE1               B        ??ScreenEvent_42
   \   0000011A   491E               SUBS     R1,R1,#+1
   \   0000011C   00D1               BNE      .+4
   \   0000011E   8EE1               B        ??ScreenEvent_43
   \   00000120   491E               SUBS     R1,R1,#+1
   \   00000122   00D1               BNE      .+4
   \   00000124   8EE1               B        ??ScreenEvent_44
   \   00000126   744A               LDR      R2,??ScreenEvent_0+0xC  ;; 0x26d1
   \   00000128   891A               SUBS     R1,R1,R2
   \   0000012A   00D1               BNE      .+4
   \   0000012C   A2E0               B        ??ScreenEvent_45
   \   0000012E   0B39               SUBS     R1,R1,#+11
   \   00000130   00D1               BNE      .+4
   \   00000132   AEE0               B        ??ScreenEvent_46
   \   00000134   5939               SUBS     R1,R1,#+89
   \   00000136   00D1               BNE      .+4
   \   00000138   C2E0               B        ??ScreenEvent_47
   \   0000013A   491E               SUBS     R1,R1,#+1
   \   0000013C   00D1               BNE      .+4
   \   0000013E   C9E0               B        ??ScreenEvent_39
   \   00000140   491E               SUBS     R1,R1,#+1
   \   00000142   00D1               BNE      .+4
   \   00000144   CDE0               B        ??ScreenEvent_48
   \   00000146   491E               SUBS     R1,R1,#+1
   \   00000148   00D1               BNE      .+4
   \   0000014A   D7E0               B        ??ScreenEvent_49
   \   0000014C   491E               SUBS     R1,R1,#+1
   \   0000014E   00D1               BNE      .+4
   \   00000150   DCE0               B        ??ScreenEvent_50
   \   00000152   0939               SUBS     R1,R1,#+9
   \   00000154   00D1               BNE      .+4
   \   00000156   D1E0               B        ??ScreenEvent_49
   \   00000158   6B39               SUBS     R1,R1,#+107
   \   0000015A   00D1               BNE      .+4
   \   0000015C   00E1               B        ??ScreenEvent_51
   \   0000015E   491E               SUBS     R1,R1,#+1
   \   00000160   00D1               BNE      .+4
   \   00000162   00E1               B        ??ScreenEvent_52
   \   00000164   0939               SUBS     R1,R1,#+9
   \   00000166   00D1               BNE      .+4
   \   00000168   04E1               B        ??ScreenEvent_38
   \   0000016A   C91E               SUBS     R1,R1,#+3
   \   0000016C   00D1               BNE      .+4
   \   0000016E   0DE1               B        ??ScreenEvent_53
   \   00000170   C91F               SUBS     R1,R1,#+7
   \   00000172   00D1               BNE      .+4
   \   00000174   FEE0               B        ??ScreenEvent_38
   \   00000176   5039               SUBS     R1,R1,#+80
   \   00000178   00D1               BNE      .+4
   \   0000017A   1DE1               B        ??ScreenEvent_54
   \   0000017C   491E               SUBS     R1,R1,#+1
   \   0000017E   00D1               BNE      .+4
   \   00000180   22E1               B        ??ScreenEvent_55
   \   00000182   0939               SUBS     R1,R1,#+9
   \   00000184   00D1               BNE      .+4
   \   00000186   2AE1               B        ??ScreenEvent_56
   \   00000188   491E               SUBS     R1,R1,#+1
   \   0000018A   00D1               BNE      .+4
   \   0000018C   2AE1               B        ??ScreenEvent_57
   \   0000018E   491E               SUBS     R1,R1,#+1
   \   00000190   57D0               BEQ      ??ScreenEvent_4
   \   00000192   5839               SUBS     R1,R1,#+88
   \   00000194   00D1               BNE      .+4
   \   00000196   EDE0               B        ??ScreenEvent_38
   \   00000198   C91E               SUBS     R1,R1,#+3
   \   0000019A   00D1               BNE      .+4
   \   0000019C   32E1               B        ??ScreenEvent_58
   \   0000019E   491E               SUBS     R1,R1,#+1
   \   000001A0   00D1               BNE      .+4
   \   000001A2   EBE0               B        ??ScreenEvent_59
   \   000001A4   491E               SUBS     R1,R1,#+1
   \   000001A6   00D1               BNE      .+4
   \   000001A8   ECE0               B        ??ScreenEvent_60
   \   000001AA   491E               SUBS     R1,R1,#+1
   \   000001AC   00D1               BNE      .+4
   \   000001AE   2DE1               B        ??ScreenEvent_61
   \   000001B0   AE39               SUBS     R1,R1,#+174
   \   000001B2   00D1               BNE      .+4
   \   000001B4   37E1               B        ??ScreenEvent_62
   \   000001B6   491E               SUBS     R1,R1,#+1
   \   000001B8   00D1               BNE      .+4
   \   000001BA   37E1               B        ??ScreenEvent_63
   \   000001BC   0939               SUBS     R1,R1,#+9
   \   000001BE   00D1               BNE      .+4
   \   000001C0   88E0               B        ??ScreenEvent_39
   \   000001C2   BE4A               LDR      R2,??ScreenEvent_64  ;; 0x1843e
   \   000001C4   891A               SUBS     R1,R1,R2
   \   000001C6   59D0               BEQ      ??ScreenEvent_65
   \   000001C8   FA22               MOVS     R2,#+250
   \   000001CA   9200               LSLS     R2,R2,#+2        ;; #+1000
   \   000001CC   891A               SUBS     R1,R1,R2
   \   000001CE   00D1               BNE      .+4
   \   000001D0   80E0               B        ??ScreenEvent_39
   \   000001D2   491E               SUBS     R1,R1,#+1
   \   000001D4   00D1               BNE      .+4
   \   000001D6   84E0               B        ??ScreenEvent_48
   \   000001D8   1339               SUBS     R1,R1,#+19
   \   000001DA   7BD0               BEQ      ??ScreenEvent_39
   \   000001DC   0A39               SUBS     R1,R1,#+10
   \   000001DE   79D0               BEQ      ??ScreenEvent_39
   \   000001E0   491E               SUBS     R1,R1,#+1
   \   000001E2   00D1               BNE      .+4
   \   000001E4   8EE0               B        ??ScreenEvent_66
   \   000001E6   6339               SUBS     R1,R1,#+99
   \   000001E8   74D0               BEQ      ??ScreenEvent_39
   \   000001EA   491E               SUBS     R1,R1,#+1
   \   000001EC   00D1               BNE      .+4
   \   000001EE   89E0               B        ??ScreenEvent_66
   \   000001F0   B332               ADDS     R2,R2,#+179
   \   000001F2   891A               SUBS     R1,R1,R2
   \   000001F4   00D1               BNE      .+4
   \   000001F6   C1E0               B        ??ScreenEvent_59
   \   000001F8   0A39               SUBS     R1,R1,#+10
   \   000001FA   00D1               BNE      .+4
   \   000001FC   C2E0               B        ??ScreenEvent_60
   \   000001FE   DC22               MOVS     R2,#+220
   \   00000200   9200               LSLS     R2,R2,#+2        ;; #+880
   \   00000202   891A               SUBS     R1,R1,R2
   \   00000204   00D1               BNE      .+4
   \   00000206   DBE0               B        ??ScreenEvent_67
   \   00000208   0A39               SUBS     R1,R1,#+10
   \   0000020A   00D1               BNE      .+4
   \   0000020C   E0E0               B        ??ScreenEvent_68
   \   0000020E   AC4A               LDR      R2,??ScreenEvent_64+0x4  ;; 0xae6
   \   00000210   891A               SUBS     R1,R1,R2
   \   00000212   5FD0               BEQ      ??ScreenEvent_39
   \   00000214   0B39               SUBS     R1,R1,#+11
   \   00000216   00D1               BNE      .+4
   \   00000218   0BE1               B        ??ScreenEvent_69
   \   0000021A   AA4A               LDR      R2,??ScreenEvent_64+0x8  ;; 0xf51df
   \   0000021C   891A               SUBS     R1,R1,R2
   \   0000021E   59D0               BEQ      ??ScreenEvent_39
   \   00000220   A94A               LDR      R2,??ScreenEvent_64+0xC  ;; 0xc3b4
   \   00000222   891A               SUBS     R1,R1,R2
   \   00000224   56D0               BEQ      ??ScreenEvent_39
   \   00000226   3FE1               B        ??ScreenEvent_70
    282            {
    283              case 0     : StartAnimation_Event();  break;
   \                     ??ScreenEvent_2:
   \   00000228   ........           BL       StartAnimation_Event
   \   0000022C   3CE1               B        ??ScreenEvent_70
    284              case 1     : MainSide_Event(&gProg.Screen[CurrentSheet]);              break;
   \                     ??ScreenEvent_3:
   \   0000022E   A749               LDR      R1,??ScreenEvent_64+0x10  ;; 0xbb98
   \   00000230   0079               LDRB     R0,[R0, #+4]
   \   00000232   A022               MOVS     R2,#+160
   \   00000234   5043               MULS     R0,R2,R0
   \   00000236   A64A               LDR      R2,??ScreenEvent_64+0x14  ;; gProg
   \   00000238   1018               ADDS     R0,R2,R0
   \   0000023A   4018               ADDS     R0,R0,R1
   \   0000023C   ........           BL       MainSide_Event
   \   00000240   32E1               B        ??ScreenEvent_70
    285              case 4     : SetTouchScreen_Event();  break; 
   \                     ??ScreenEvent_4:
   \   00000242   ........           BL       SetTouchScreen_Event
   \   00000246   2FE1               B        ??ScreenEvent_70
    286              case 5     : AdvanceSet_Event();  break;
   \                     ??ScreenEvent_5:
   \   00000248   ........           BL       AdvanceSet_Event
   \   0000024C   2CE1               B        ??ScreenEvent_70
    287              case 51    : CleanAll_Event();          break; 
   \                     ??ScreenEvent_12:
   \   0000024E   ........           BL       CleanAll_Event
   \   00000252   29E1               B        ??ScreenEvent_70
    288              case 10: MenuAccessPass_Event(1);  break;
   \                     ??ScreenEvent_6:
   \   00000254   0120               MOVS     R0,#+1
   \   00000256   ........           BL       MenuAccessPass_Event
   \   0000025A   25E1               B        ??ScreenEvent_70
    289                case 11: MenuSide_Event(); break;
   \                     ??ScreenEvent_7:
   \   0000025C   ........           BL       MenuSide_Event
   \   00000260   22E1               B        ??ScreenEvent_70
    290                
    291                      case 111  : Lader_Event();        break;
   \                     ??ScreenEvent_13:
   \   00000262   ........           BL       Lader_Event
   \   00000266   1FE1               B        ??ScreenEvent_70
    292                            case 1110 : SaveChanges_Evant(); break;
   \                     ??ScreenEvent_20:
   \   00000268   ........           BL       SaveChanges_Evant
   \   0000026C   1CE1               B        ??ScreenEvent_70
    293                            case 1111: Procedure_Event(); break;
   \                     ??ScreenEvent_22:
   \   0000026E   ........           BL       Procedure_Event
   \   00000272   19E1               B        ??ScreenEvent_70
    294                              case 11111: ValueChange_Evant(ValueChange);  break;
   \                     ??ScreenEvent_45:
   \   00000274   406E               LDR      R0,[R0, #+100]
   \   00000276   ........           BL       ValueChange_Evant
   \   0000027A   15E1               B        ??ScreenEvent_70
    295                                case 111111 : Message("Max=", "+/- 3000 ",11111);  break;
   \                     ??ScreenEvent_65:
   \   0000027C   9548               LDR      R0,??ScreenEvent_64+0x18  ;; `?<Constant "Info ">`
   \   0000027E   964A               LDR      R2,??ScreenEvent_64+0x1C  ;; 0x2b67
   \   00000280   0100               MOVS     R1,R0
   \   00000282   1031               ADDS     R1,R1,#+16
   \   00000284   0830               ADDS     R0,R0,#+8
   \   00000286   ........           BL       Message
   \   0000028A   0DE1               B        ??ScreenEvent_70
    296                            case 1112: LaderChange_Event();  break;
   \                     ??ScreenEvent_23:
   \   0000028C   ........           BL       LaderChange_Event
   \   00000290   0AE1               B        ??ScreenEvent_70
    297                              case 11122: RemRow_Event();  break;
   \                     ??ScreenEvent_46:
   \   00000292   ........           BL       RemRow_Event
   \   00000296   07E1               B        ??ScreenEvent_70
    298                            
    299                      case 112  : ScreenSet_Event(&gProg.Screen[CurModifSheet]);        break;
   \                     ??ScreenEvent_14:
   \   00000298   8C49               LDR      R1,??ScreenEvent_64+0x10  ;; 0xbb98
   \   0000029A   4079               LDRB     R0,[R0, #+5]
   \   0000029C   A022               MOVS     R2,#+160
   \   0000029E   5043               MULS     R0,R2,R0
   \   000002A0   8B4A               LDR      R2,??ScreenEvent_64+0x14  ;; gProg
   \   000002A2   1018               ADDS     R0,R2,R0
   \   000002A4   4018               ADDS     R0,R0,R1
   \   000002A6   ........           BL       ScreenSet_Event
   \   000002AA   FDE0               B        ??ScreenEvent_70
    300                            case 1120 : SaveChanges_Evant(); break;
    301                            case 1121  : ScreenDesign1_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_24:
   \   000002AC   8749               LDR      R1,??ScreenEvent_64+0x10  ;; 0xbb98
   \   000002AE   4079               LDRB     R0,[R0, #+5]
   \   000002B0   A022               MOVS     R2,#+160
   \   000002B2   5043               MULS     R0,R2,R0
   \   000002B4   864A               LDR      R2,??ScreenEvent_64+0x14  ;; gProg
   \   000002B6   1018               ADDS     R0,R2,R0
   \   000002B8   4018               ADDS     R0,R0,R1
   \   000002BA   ........           BL       ScreenDesign1_Event
   \   000002BE   F3E0               B        ??ScreenEvent_70
    302                                case 11211  : ZoneGraph_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_47:
   \   000002C0   8249               LDR      R1,??ScreenEvent_64+0x10  ;; 0xbb98
   \   000002C2   4079               LDRB     R0,[R0, #+5]
   \   000002C4   A022               MOVS     R2,#+160
   \   000002C6   5043               MULS     R0,R2,R0
   \   000002C8   814A               LDR      R2,??ScreenEvent_64+0x14  ;; gProg
   \   000002CA   1018               ADDS     R0,R2,R0
   \   000002CC   4018               ADDS     R0,R0,R1
   \   000002CE   ........           BL       ZoneGraph_Event
   \   000002D2   E9E0               B        ??ScreenEvent_70
    303                                    case 112111  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_39:
   \   000002D4   0200               MOVS     R2,R0
   \   000002D6   521C               ADDS     R2,R2,#+1
   \   000002D8   0100               MOVS     R1,R0
   \   000002DA   806D               LDR      R0,[R0, #+88]
   \   000002DC   ........           BL       TextChange_Evant
   \   000002E0   E2E0               B        ??ScreenEvent_70
    304                                    case 112112  :  AnalogGraph_Event(AnalogToChange);break;
   \                     ??ScreenEvent_48:
   \   000002E2   C06E               LDR      R0,[R0, #+108]
   \   000002E4   ........           BL       AnalogGraph_Event
   \   000002E8   DEE0               B        ??ScreenEvent_70
   \   000002EA   C046               Nop      
   \                     ??ScreenEvent_0:
   \   000002EC   ........           DC32     g_Message
   \   000002F0   ........           DC32     TextToChangeLength
   \   000002F4   DD030000           DC32     0x3dd
   \   000002F8   D1260000           DC32     0x26d1
    305                                      case 1121121  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    306                                case 11212  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    307                                case 11213  :  AnalogGraph_Event(AnalogToChange);break;
    308                                    case 112131  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    309                                case 11214   :  ButtonOptions_Event(ButtonToChange); break;
   \                     ??ScreenEvent_49:
   \   000002FC   C06D               LDR      R0,[R0, #+92]
   \   000002FE   ........           BL       ButtonOptions_Event
   \   00000302   D1E0               B        ??ScreenEvent_70
    310                                case 112141  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    311                                case 112142  :  ButtonAction_Event(ButtonToChange); break;
   \                     ??ScreenEvent_66:
   \   00000304   C06D               LDR      R0,[R0, #+92]
   \   00000306   ........           BL       ButtonAction_Event
   \   0000030A   CDE0               B        ??ScreenEvent_70
    312                                case 11215   :  BigTemperLabel_Event(); break;
   \                     ??ScreenEvent_50:
   \   0000030C   ........           BL       BigTemperLabel_Event
   \   00000310   CAE0               B        ??ScreenEvent_70
    313                             case 1122  :  ThermostatSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_25:
   \   00000312   6E49               LDR      R1,??ScreenEvent_64+0x10  ;; 0xbb98
   \   00000314   4079               LDRB     R0,[R0, #+5]
   \   00000316   A022               MOVS     R2,#+160
   \   00000318   5043               MULS     R0,R2,R0
   \   0000031A   6D4A               LDR      R2,??ScreenEvent_64+0x14  ;; gProg
   \   0000031C   1018               ADDS     R0,R2,R0
   \   0000031E   4018               ADDS     R0,R0,R1
   \   00000320   ........           BL       ThermostatSet_Event
   \   00000324   C0E0               B        ??ScreenEvent_70
    314                                case 11224   :  ButtonOptions_Event(ButtonToChange); break;
    315                                case 112241  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    316                                case 112242  :  ButtonAction_Event(ButtonToChange); break;
    317                             case 1123  :  ScreenTimetableSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_26:
   \   00000326   6949               LDR      R1,??ScreenEvent_64+0x10  ;; 0xbb98
   \   00000328   4079               LDRB     R0,[R0, #+5]
   \   0000032A   A022               MOVS     R2,#+160
   \   0000032C   5043               MULS     R0,R2,R0
   \   0000032E   684A               LDR      R2,??ScreenEvent_64+0x14  ;; gProg
   \   00000330   1018               ADDS     R0,R2,R0
   \   00000332   4018               ADDS     R0,R0,R1
   \   00000334   ........           BL       ScreenTimetableSet_Event
   \   00000338   B6E0               B        ??ScreenEvent_70
    318                             case 1124  :  ScreenAlarmSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_27:
   \   0000033A   6449               LDR      R1,??ScreenEvent_64+0x10  ;; 0xbb98
   \   0000033C   4079               LDRB     R0,[R0, #+5]
   \   0000033E   A022               MOVS     R2,#+160
   \   00000340   5043               MULS     R0,R2,R0
   \   00000342   634A               LDR      R2,??ScreenEvent_64+0x14  ;; gProg
   \   00000344   1018               ADDS     R0,R2,R0
   \   00000346   4018               ADDS     R0,R0,R1
   \   00000348   ........           BL       ScreenAlarmSet_Event
   \   0000034C   ACE0               B        ??ScreenEvent_70
    319                      case 113  : Options_Event();          break; 
   \                     ??ScreenEvent_15:
   \   0000034E   ........           BL       Options_Event
   \   00000352   A9E0               B        ??ScreenEvent_70
    320                            case 1131 : Restart_Event();          break; 
   \                     ??ScreenEvent_28:
   \   00000354   ........           BL       Restart_Event
   \   00000358   A6E0               B        ??ScreenEvent_70
    321                            case 1133 :  Zmienne_Event();  break;
   \                     ??ScreenEvent_29:
   \   0000035A   ........           BL       Zmienne_Event
   \   0000035E   A3E0               B        ??ScreenEvent_70
    322                                  case 11331 :  ZmienneDwustanowe_Event();  break;
   \                     ??ScreenEvent_51:
   \   00000360   ........           BL       ZmienneDwustanowe_Event
   \   00000364   A0E0               B        ??ScreenEvent_70
    323                                  case 11332 :  ZmienneAnalogowe_Event();  break;
   \                     ??ScreenEvent_52:
   \   00000366   ........           BL       ZmienneAnalogowe_Event
   \   0000036A   9DE0               B        ??ScreenEvent_70
    324                            case 1134 : CheckingModule_Event(&NeuronIdToChange);  break;
   \                     ??ScreenEvent_30:
   \   0000036C   6030               ADDS     R0,R0,#+96
   \   0000036E   ........           BL       CheckingModule_Event
   \   00000372   99E0               B        ??ScreenEvent_70
    325                                  case 11341: NeuronNrChange_Evant(NeuronIdChange);  break;
   \                     ??ScreenEvent_38:
   \   00000374   806E               LDR      R0,[R0, #+104]
   \   00000376   ........           BL       NeuronNrChange_Evant
   \   0000037A   95E0               B        ??ScreenEvent_70
    326                                  case 113421 : NodeStanIO_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_59:
   \   0000037C   C078               LDRB     R0,[R0, #+3]
   \   0000037E   ........           BL       NodeStanIO_Event
   \   00000382   91E0               B        ??ScreenEvent_70
    327                                  case 113431 : NodeWeAnalog_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_60:
   \   00000384   C078               LDRB     R0,[R0, #+3]
   \   00000386   ........           BL       NodeWeAnalog_Event
   \   0000038A   8DE0               B        ??ScreenEvent_70
    328                                  case 11344 : Tester_MG1_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_53:
   \   0000038C   C078               LDRB     R0,[R0, #+3]
   \   0000038E   ........           BL       Tester_MG1_Event
   \   00000392   89E0               B        ??ScreenEvent_70
    329                            case 1135 : ChangeID_Event(&NeuronIdToChange, &NeuronIdAfterChange);  break;
   \                     ??ScreenEvent_31:
   \   00000394   0100               MOVS     R1,R0
   \   00000396   8431               ADDS     R1,R1,#+132
   \   00000398   6030               ADDS     R0,R0,#+96
   \   0000039A   ........           BL       ChangeID_Event
   \   0000039E   83E0               B        ??ScreenEvent_70
    330                                  case 11351: NeuronNrChange_Evant(NeuronIdChange);  break;      
    331                      case 114  : Setup_Event();            break; 
   \                     ??ScreenEvent_16:
   \   000003A0   ........           BL       Setup_Event
   \   000003A4   80E0               B        ??ScreenEvent_70
    332                            case 1141 : SetupLang_Event();         break;
   \                     ??ScreenEvent_32:
   \   000003A6   ........           BL       SetupLang_Event
   \   000003AA   7DE0               B        ??ScreenEvent_70
    333                            case 1142 : SetupTime_Event();        break;
   \                     ??ScreenEvent_33:
   \   000003AC   ........           BL       SetupTime_Event
   \   000003B0   7AE0               B        ??ScreenEvent_70
    334                            case 1143 : SetupPass_Event();         break;   
   \                     ??ScreenEvent_34:
   \   000003B2   ........           BL       SetupPass_Event
   \   000003B6   77E0               B        ??ScreenEvent_70
    335                                  case 11431 : SetupOldPass_Event(1);         break;
   \                     ??ScreenEvent_54:
   \   000003B8   0120               MOVS     R0,#+1
   \   000003BA   ........           BL       SetupOldPass_Event
   \   000003BE   73E0               B        ??ScreenEvent_70
    336                                       case 114311 : SetupNewPass_Event(1);         break;
   \                     ??ScreenEvent_67:
   \   000003C0   0120               MOVS     R0,#+1
   \   000003C2   ........           BL       SetupNewPass_Event
   \   000003C6   6FE0               B        ??ScreenEvent_70
    337                                  case 11432 : SetupOldPass_Event(2);         break;
   \                     ??ScreenEvent_55:
   \   000003C8   0220               MOVS     R0,#+2
   \   000003CA   ........           BL       SetupOldPass_Event
   \   000003CE   6BE0               B        ??ScreenEvent_70
    338                                       case 114321 : SetupNewPass_Event(2);         break;
   \                     ??ScreenEvent_68:
   \   000003D0   0220               MOVS     R0,#+2
   \   000003D2   ........           BL       SetupNewPass_Event
   \   000003D6   67E0               B        ??ScreenEvent_70
    339                            case 1144 : ScreenSetup_Event();  break;           
   \                     ??ScreenEvent_35:
   \   000003D8   ........           BL       ScreenSetup_Event
   \   000003DC   64E0               B        ??ScreenEvent_70
    340                              case 11441 : ScreenBrightness_Event();  break;
   \                     ??ScreenEvent_56:
   \   000003DE   ........           BL       ScreenBrightness_Event
   \   000003E2   61E0               B        ??ScreenEvent_70
    341                              case 11442 : ScreenSever_Event();  break;
   \                     ??ScreenEvent_57:
   \   000003E4   ........           BL       ScreenSever_Event
   \   000003E8   5EE0               B        ??ScreenEvent_70
    342                              case 11443 : SetTouchScreen_Event();  break;
    343                            case 1146 : MasterSlave_Event();  break;
   \                     ??ScreenEvent_36:
   \   000003EA   ........           BL       MasterSlave_Event
   \   000003EE   5BE0               B        ??ScreenEvent_70
    344                            case 1147 : RF_Channel_Event();  break;
   \                     ??ScreenEvent_37:
   \   000003F0   ........           BL       RF_Channel_Event
   \   000003F4   58E0               B        ??ScreenEvent_70
    345                      case 115  : NeuronsList_Event();  break;
   \                     ??ScreenEvent_17:
   \   000003F6   ........           BL       NeuronsList_Event
   \   000003FA   55E0               B        ??ScreenEvent_70
    346                            case 1150 : SaveChanges_Evant(); break;
    347                            case 1151: NeuronNrChange_Evant(NeuronIdChange);  break;
    348                            case 1152  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    349                            case 1153 :  Node_Event(NeuronNrChange); break;
   \                     ??ScreenEvent_40:
   \   000003FC   C078               LDRB     R0,[R0, #+3]
   \   000003FE   ........           BL       Node_Event
   \   00000402   51E0               B        ??ScreenEvent_70
    350                                case 11531 : NeuronNrChange_Evant(NeuronIdChange);  break;
    351                                case 11534 : NodeTestTrans_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_58:
   \   00000404   C078               LDRB     R0,[R0, #+3]
   \   00000406   ........           BL       NodeTestTrans_Event
   \   0000040A   4DE0               B        ??ScreenEvent_70
    352                                case 11535 : NodeStanIO_Event(NeuronNrChange);  break;
    353                                case 11536 : NodeWeAnalog_Event(NeuronNrChange);  break;
    354                                case 11537 : NodeInfo_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_61:
   \   0000040C   C078               LDRB     R0,[R0, #+3]
   \   0000040E   ........           BL       NodeInfo_Event
   \   00000412   49E0               B        ??ScreenEvent_70
    355                      case 116  : Info_Event();    break;
   \                     ??ScreenEvent_18:
   \   00000414   ........           BL       Info_Event
   \   00000418   46E0               B        ??ScreenEvent_70
    356                      case 117  : Net_Event();     break;
   \                     ??ScreenEvent_19:
   \   0000041A   ........           BL       Net_Event
   \   0000041E   43E0               B        ??ScreenEvent_70
    357                            case 1171  : UstawSiec_Event();     break;
   \                     ??ScreenEvent_41:
   \   00000420   ........           BL       UstawSiec_Event
   \   00000424   40E0               B        ??ScreenEvent_70
    358                                case 11711  : Punkt_dostepuWiFi_Event();     break;
   \                     ??ScreenEvent_62:
   \   00000426   ........           BL       Punkt_dostepuWiFi_Event
   \   0000042A   3DE0               B        ??ScreenEvent_70
    359                                  case 117111  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    360                                case 11712  : IpTCP_Event(); break;
   \                     ??ScreenEvent_63:
   \   0000042C   ........           BL       IpTCP_Event
   \   00000430   3AE0               B        ??ScreenEvent_70
    361                                  case 117122 : IpConfig_Event(); break;
   \                     ??ScreenEvent_69:
   \   00000432   ........           BL       IpConfig_Event
   \   00000436   37E0               B        ??ScreenEvent_70
    362                                    case 1171221  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    363                            case 1172 : Host_WiFi_Event(); break;  
   \                     ??ScreenEvent_42:
   \   00000438   ........           BL       Host_WiFi_Event
   \   0000043C   34E0               B        ??ScreenEvent_70
    364                                case 11721  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    365                            case 1173 : NetPeriodicity_Event(); break; 
   \                     ??ScreenEvent_43:
   \   0000043E   ........           BL       NetPeriodicity_Event
   \   00000442   31E0               B        ??ScreenEvent_70
    366                            case 1174 : NetInfo_Event(); break; 
   \                     ??ScreenEvent_44:
   \   00000444   ........           BL       NetInfo_Event
   \   00000448   2EE0               B        ??ScreenEvent_70
    367                    case 12     : ThermostatAutoSet_Event(&gProg.Screen[CurrentSheet]);         break;  
   \                     ??ScreenEvent_8:
   \   0000044A   2049               LDR      R1,??ScreenEvent_64+0x10  ;; 0xbb98
   \   0000044C   0079               LDRB     R0,[R0, #+4]
   \   0000044E   A022               MOVS     R2,#+160
   \   00000450   5043               MULS     R0,R2,R0
   \   00000452   1F4A               LDR      R2,??ScreenEvent_64+0x14  ;; gProg
   \   00000454   1018               ADDS     R0,R2,R0
   \   00000456   4018               ADDS     R0,R0,R1
   \   00000458   ........           BL       ThermostatAutoSet_Event
   \   0000045C   24E0               B        ??ScreenEvent_70
    368                      case 120      : SaveChanges_Evant(); break;
    369                      case 121      : ThermostatChartSet_Event(&gProg.Screen[CurrentSheet], CurentChartModyfi);         break;  
   \                     ??ScreenEvent_21:
   \   0000045E   8178               LDRB     R1,[R0, #+2]
   \   00000460   1A4A               LDR      R2,??ScreenEvent_64+0x10  ;; 0xbb98
   \   00000462   0079               LDRB     R0,[R0, #+4]
   \   00000464   A023               MOVS     R3,#+160
   \   00000466   5843               MULS     R0,R3,R0
   \   00000468   194B               LDR      R3,??ScreenEvent_64+0x14  ;; gProg
   \   0000046A   1818               ADDS     R0,R3,R0
   \   0000046C   8018               ADDS     R0,R0,R2
   \   0000046E   ........           BL       ThermostatChartSet_Event
   \   00000472   19E0               B        ??ScreenEvent_70
    370                    case 13     : TimetableSet_Event();         break;   
   \                     ??ScreenEvent_9:
   \   00000474   ........           BL       TimetableSet_Event
   \   00000478   16E0               B        ??ScreenEvent_70
    371                    case 14     : AlarmPass_Event(CurrentSheet);         break; 
   \                     ??ScreenEvent_10:
   \   0000047A   0079               LDRB     R0,[R0, #+4]
   \   0000047C   ........           BL       AlarmPass_Event
   \   00000480   12E0               B        ??ScreenEvent_70
    372                    case 15     : AlarmPassChange_Event(CurrentSheet);         break;  
   \                     ??ScreenEvent_11:
   \   00000482   0079               LDRB     R0,[R0, #+4]
   \   00000484   ........           BL       AlarmPassChange_Event
   \   00000488   0EE0               B        ??ScreenEvent_70
    373            } 
    374            }
    375            else
    376            {
    377              if ((X_up>0) && (Y_up>0)  )
   \                     ??ScreenEvent_1:
   \   0000048A   1449               LDR      R1,??ScreenEvent_64+0x20  ;; X_up
   \   0000048C   0022               MOVS     R2,#+0
   \   0000048E   895E               LDRSH    R1,[R1, R2]
   \   00000490   0129               CMP      R1,#+1
   \   00000492   09DB               BLT      ??ScreenEvent_70
   \   00000494   1249               LDR      R1,??ScreenEvent_64+0x24  ;; Y_up
   \   00000496   895E               LDRSH    R1,[R1, R2]
   \   00000498   0129               CMP      R1,#+1
   \   0000049A   05DB               BLT      ??ScreenEvent_70
    378              {
    379                  g_Message=0;
   \   0000049C   1100               MOVS     R1,R2
   \   0000049E   0160               STR      R1,[R0, #+0]
    380                  g_info=0;
   \   000004A0   1048               LDR      R0,??ScreenEvent_64+0x28  ;; g_info
   \   000004A2   0160               STR      R1,[R0, #+0]
    381                  MenuPaint();
   \   000004A4   ........           BL       MenuPaint
    382              }
    383            }
    384            
    385             X_up=-1;
   \                     ??ScreenEvent_70:
   \   000004A8   0020               MOVS     R0,#+0
   \   000004AA   C043               MVNS     R0,R0            ;; #-1
   \   000004AC   0B49               LDR      R1,??ScreenEvent_64+0x20  ;; X_up
   \   000004AE   0880               STRH     R0,[R1, #+0]
    386           Y_up=-1;
   \   000004B0   0B49               LDR      R1,??ScreenEvent_64+0x24  ;; Y_up
   \   000004B2   0880               STRH     R0,[R1, #+0]
    387          
    388          
    389          
    390          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \   000004B4   08BC               POP      {R3}
   \   000004B6   01BC               POP      {R0}
   \   000004B8   0047               BX       R0               ;; return
   \   000004BA   C046               Nop      
   \                     ??ScreenEvent_64:
   \   000004BC   3E840100           DC32     0x1843e
   \   000004C0   E60A0000           DC32     0xae6
   \   000004C4   DF510F00           DC32     0xf51df
   \   000004C8   B4C30000           DC32     0xc3b4
   \   000004CC   98BB0000           DC32     0xbb98
   \   000004D0   ........           DC32     gProg
   \   000004D4   ........           DC32     `?<Constant "Info ">`
   \   000004D8   672B0000           DC32     0x2b67
   \   000004DC   ........           DC32     X_up
   \   000004E0   ........           DC32     Y_up
   \   000004E4   ........           DC32     g_info
    391          
    392          
    393          
    394          
    395          
    396          //*-----------------------------------------------------------------------------
    397          //* Nazwa funkcji :    ScreenEvent
    398          //* Funkcja wrysowania menu ekranowego
    399          //*-----------------------------------------------------------------------------
    400          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    401          //*-----------------------------------------------------------------------------
    402          _DispWait DispWait=0; 
                                    ^
Warning[Pe188]: enumerated type mixed with another type

   \                                 In section Debug.txt, align 4, keep-with-next
    403          void MenuRefresh(Void)
    404          {
   \                     MenuRefresh:
   \   00000000   70B5               PUSH     {R4-R6,LR}
    405            
    406           if (g_info==0)
   \   00000002   8148               LDR      R0,??MenuRefresh_0  ;; g_info
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   00D0               BEQ      .+4
   \   0000000A   F9E0               B        ??MenuRefresh_1
    407            {
    408            static char Message;
    409            
    410            if ((g_counter>g_Message) && (!Message)) 
   \   0000000C   7F4D               LDR      R5,??MenuRefresh_0+0x4  ;; g_counter
   \   0000000E   804C               LDR      R4,??MenuRefresh_0+0x8  ;; g_Message
   \   00000010   2268               LDR      R2,[R4, #+0]
   \   00000012   D317               ASRS     R3,R2,#+31
   \   00000014   03CD               LDM      R5!,{R0,R1}
   \   00000016   083D               SUBS     R5,R5,#+8
   \   00000018   8B42               CMP      R3,R1
   \   0000001A   00D9               BLS      .+4
   \   0000001C   C4E0               B        ??MenuRefresh_2
   \   0000001E   02D3               BCC      ??MenuRefresh_3
   \   00000020   8242               CMP      R2,R0
   \   00000022   00D3               BCC      .+4
   \   00000024   C0E0               B        ??MenuRefresh_2
   \                     ??MenuRefresh_3:
   \   00000026   7B4E               LDR      R6,??MenuRefresh_0+0xC  ;; TextToChangeLength
   \   00000028   F07A               LDRB     R0,[R6, #+11]
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   00D0               BEQ      .+4
   \   0000002E   BBE0               B        ??MenuRefresh_2
    411            {    
    412              if (DispWait==DispWaitNoActive)      //tryb wyswietlania menu
   \   00000030   B07A               LDRB     R0,[R6, #+10]
   \   00000032   0028               CMP      R0,#+0
   \   00000034   00D0               BEQ      .+4
   \   00000036   A5E0               B        ??MenuRefresh_4
    413              {
    414                switch (MenuLevel)
   \   00000038   306D               LDR      R0,[R6, #+80]
   \   0000003A   0028               CMP      R0,#+0
   \   0000003C   47D0               BEQ      ??MenuRefresh_5
   \   0000003E   401E               SUBS     R0,R0,#+1
   \   00000040   48D0               BEQ      ??MenuRefresh_6
   \   00000042   801E               SUBS     R0,R0,#+2
   \   00000044   50D0               BEQ      ??MenuRefresh_7
   \   00000046   0B38               SUBS     R0,R0,#+11
   \   00000048   51D0               BEQ      ??MenuRefresh_8
   \   0000004A   6538               SUBS     R0,R0,#+101
   \   0000004C   7BD0               BEQ      ??MenuRefresh_9
   \   0000004E   401E               SUBS     R0,R0,#+1
   \   00000050   00D1               BNE      .+4
   \   00000052   83E0               B        ??MenuRefresh_10
   \   00000054   401F               SUBS     R0,R0,#+5
   \   00000056   00D1               BNE      .+4
   \   00000058   89E0               B        ??MenuRefresh_11
   \   0000005A   6F49               LDR      R1,??MenuRefresh_0+0x10  ;; 0x3f5
   \   0000005C   401A               SUBS     R0,R0,R1
   \   0000005E   5AD0               BEQ      ??MenuRefresh_12
   \   00000060   401E               SUBS     R0,R0,#+1
   \   00000062   69D0               BEQ      ??MenuRefresh_13
   \   00000064   C01F               SUBS     R0,R0,#+7
   \   00000066   4AD0               BEQ      ??MenuRefresh_14
   \   00000068   801F               SUBS     R0,R0,#+6
   \   0000006A   4BD0               BEQ      ??MenuRefresh_15
   \   0000006C   001F               SUBS     R0,R0,#+4
   \   0000006E   41D0               BEQ      ??MenuRefresh_16
   \   00000070   1638               SUBS     R0,R0,#+22
   \   00000072   76D0               BEQ      ??MenuRefresh_17
   \   00000074   6949               LDR      R1,??MenuRefresh_0+0x14  ;; 0x2736
   \   00000076   401A               SUBS     R0,R0,R1
   \   00000078   3CD0               BEQ      ??MenuRefresh_16
   \   0000007A   7738               SUBS     R0,R0,#+119
   \   0000007C   45D0               BEQ      ??MenuRefresh_18
   \   0000007E   401E               SUBS     R0,R0,#+1
   \   00000080   46D0               BEQ      ??MenuRefresh_19
   \   00000082   0C38               SUBS     R0,R0,#+12
   \   00000084   54D0               BEQ      ??MenuRefresh_20
   \   00000086   BE38               SUBS     R0,R0,#+190
   \   00000088   60D0               BEQ      ??MenuRefresh_21
   \   0000008A   401E               SUBS     R0,R0,#+1
   \   0000008C   48D0               BEQ      ??MenuRefresh_22
   \   0000008E   401E               SUBS     R0,R0,#+1
   \   00000090   4AD0               BEQ      ??MenuRefresh_23
   \   00000092   401E               SUBS     R0,R0,#+1
   \   00000094   5ED0               BEQ      ??MenuRefresh_24
   \   00000096   B838               SUBS     R0,R0,#+184
   \   00000098   2CD0               BEQ      ??MenuRefresh_16
   \   0000009A   6149               LDR      R1,??MenuRefresh_0+0x18  ;; 0x18826
   \   0000009C   401A               SUBS     R0,R0,R1
   \   0000009E   29D0               BEQ      ??MenuRefresh_16
   \   000000A0   1438               SUBS     R0,R0,#+20
   \   000000A2   27D0               BEQ      ??MenuRefresh_16
   \   000000A4   0A38               SUBS     R0,R0,#+10
   \   000000A6   25D0               BEQ      ??MenuRefresh_16
   \   000000A8   A021               MOVS     R1,#+160
   \   000000AA   C900               LSLS     R1,R1,#+3        ;; #+1280
   \   000000AC   401A               SUBS     R0,R0,R1
   \   000000AE   37D0               BEQ      ??MenuRefresh_22
   \   000000B0   0A38               SUBS     R0,R0,#+10
   \   000000B2   39D0               BEQ      ??MenuRefresh_23
   \   000000B4   E621               MOVS     R1,#+230
   \   000000B6   0901               LSLS     R1,R1,#+4        ;; #+3680
   \   000000B8   401A               SUBS     R0,R0,R1
   \   000000BA   1BD0               BEQ      ??MenuRefresh_16
   \   000000BC   401E               SUBS     R0,R0,#+1
   \   000000BE   53D0               BEQ      ??MenuRefresh_25
   \   000000C0   5849               LDR      R1,??MenuRefresh_0+0x1C  ;; 0xf51e9
   \   000000C2   401A               SUBS     R0,R0,R1
   \   000000C4   16D0               BEQ      ??MenuRefresh_16
   \   000000C6   5849               LDR      R1,??MenuRefresh_0+0x20  ;; 0xc3b4
   \   000000C8   401A               SUBS     R0,R0,R1
   \   000000CA   13D0               BEQ      ??MenuRefresh_16
   \   000000CC   6CE0               B        ??MenuRefresh_2
    415                {
    416                  case 0        : StartAnimation_Paint();         break;
   \                     ??MenuRefresh_5:
   \   000000CE   ........           BL       StartAnimation_Paint
   \   000000D2   69E0               B        ??MenuRefresh_2
    417                  case 1        : MainSide_Refresh(&gProg.Screen[CurrentSheet]);         break;
   \                     ??MenuRefresh_6:
   \   000000D4   5548               LDR      R0,??MenuRefresh_0+0x24  ;; 0xbb98
   \   000000D6   3179               LDRB     R1,[R6, #+4]
   \   000000D8   A022               MOVS     R2,#+160
   \   000000DA   5143               MULS     R1,R2,R1
   \   000000DC   544A               LDR      R2,??MenuRefresh_0+0x28  ;; gProg
   \   000000DE   5118               ADDS     R1,R2,R1
   \   000000E0   0818               ADDS     R0,R1,R0
   \   000000E2   ........           BL       MainSide_Refresh
   \   000000E6   5FE0               B        ??MenuRefresh_2
    418                  case 3        : CheckChannel();         break;
   \                     ??MenuRefresh_7:
   \   000000E8   ........           BL       CheckChannel
   \   000000EC   5CE0               B        ??MenuRefresh_2
    419                  case 14       : AlarmPass_Refresh();break;
   \                     ??MenuRefresh_8:
   \   000000EE   ........           BL       AlarmPass_Refresh
   \   000000F2   59E0               B        ??MenuRefresh_2
    420                      case 112111  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_16:
   \   000000F4   3100               MOVS     R1,R6
   \   000000F6   B06D               LDR      R0,[R6, #+88]
   \   000000F8   ........           BL       TextChange_Refresh
   \   000000FC   54E0               B        ??MenuRefresh_2
    421                      case 1121121  : TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    422                      case 11212  :   TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    423                      case 112131  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    424                      case 112141  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    425                      case 1142    : SetupTime_Refresh();        break;
   \                     ??MenuRefresh_14:
   \   000000FE   ........           BL       SetupTime_Refresh
   \   00000102   51E0               B        ??MenuRefresh_2
    426                      case 1148    : RF_Channel_Refresh();  break;
   \                     ??MenuRefresh_15:
   \   00000104   ........           BL       RF_Channel_Refresh
   \   00000108   4EE0               B        ??MenuRefresh_2
    427                      
    428                      case 11331 :  ZmienneDwustanowe_Repaint();  break;
   \                     ??MenuRefresh_18:
   \   0000010A   ........           BL       ZmienneDwustanowe_Repaint
   \   0000010E   4BE0               B        ??MenuRefresh_2
    429                      case 11332 :  ZmienneAnalogowe_Repaint();  break;
   \                     ??MenuRefresh_19:
   \   00000110   ........           BL       ZmienneAnalogowe_Repaint
   \   00000114   48E0               B        ??MenuRefresh_2
    430                      case 1134 : CheckingModule_Refresh(&NeuronIdToChange);  break;
   \                     ??MenuRefresh_12:
   \   00000116   6036               ADDS     R6,R6,#+96
   \   00000118   3000               MOVS     R0,R6
   \   0000011A   ........           BL       CheckingModule_Refresh
   \   0000011E   43E0               B        ??MenuRefresh_2
    431                        case 113421 : NodeStanIO_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_22:
   \   00000120   F078               LDRB     R0,[R6, #+3]
   \   00000122   ........           BL       NodeStanIO_Refresh
   \   00000126   3FE0               B        ??MenuRefresh_2
    432                        case 113431 : NodeWeAnalog_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_23:
   \   00000128   F078               LDRB     R0,[R6, #+3]
   \   0000012A   ........           BL       NodeWeAnalog_Refresh
   \   0000012E   3BE0               B        ??MenuRefresh_2
    433                        case 11344 : Tester_MG1_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_20:
   \   00000130   F078               LDRB     R0,[R6, #+3]
   \   00000132   ........           BL       Tester_MG1_Refresh
   \   00000136   37E0               B        ??MenuRefresh_2
    434                      case 1135 : ChangeID_Refresh(&NeuronIdToChange, &NeuronIdAfterChange);  break;
   \                     ??MenuRefresh_13:
   \   00000138   3100               MOVS     R1,R6
   \   0000013A   8431               ADDS     R1,R1,#+132
   \   0000013C   6036               ADDS     R6,R6,#+96
   \   0000013E   3000               MOVS     R0,R6
   \   00000140   ........           BL       ChangeID_Refresh
   \   00000144   30E0               B        ??MenuRefresh_2
    435                        
    436                        
    437                   case 115  : NeuronsList_Refresh();  break;
   \                     ??MenuRefresh_9:
   \   00000146   ........           BL       NeuronsList_Refresh
   \   0000014A   2DE0               B        ??MenuRefresh_2
    438                        case 1152    : TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    439                        case 11534   : NodeTestTrans_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_21:
   \   0000014C   F078               LDRB     R0,[R6, #+3]
   \   0000014E   ........           BL       NodeTestTrans_Refresh
   \   00000152   29E0               B        ??MenuRefresh_2
    440                        case 11535   : NodeStanIO_Refresh(NeuronNrChange);  break;
    441                        case 11536   : NodeWeAnalog_Refresh(NeuronNrChange);  break;
    442                        case 11537   : NodeInfo_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_24:
   \   00000154   F078               LDRB     R0,[R6, #+3]
   \   00000156   ........           BL       NodeInfo_Refresh
   \   0000015A   25E0               B        ??MenuRefresh_2
    443                  
    444                      
    445                  case 116  : Info_Refresh();    break;
   \                     ??MenuRefresh_10:
   \   0000015C   ........           BL       Info_Refresh
   \   00000160   22E0               B        ??MenuRefresh_2
    446                       case 1174 : NetInfo_Refresh(); break; 
   \                     ??MenuRefresh_17:
   \   00000162   ........           BL       NetInfo_Refresh
   \   00000166   1FE0               B        ??MenuRefresh_2
    447                          
    448                       
    449                       case 117111  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    450                       case 117112 :  WiFiConecting_Refresh(); break;
   \                     ??MenuRefresh_25:
   \   00000168   ........           BL       WiFiConecting_Refresh
   \   0000016C   1CE0               B        ??MenuRefresh_2
    451                       case 11721  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    452                       case 1171221  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    453                       
    454                       
    455                  
    456                  case 121     : ThermostatChartSet_Refresh(&gProg.Screen[CurrentSheet], CurentChartModyfi);  break;   
   \                     ??MenuRefresh_11:
   \   0000016E   B178               LDRB     R1,[R6, #+2]
   \   00000170   2E48               LDR      R0,??MenuRefresh_0+0x24  ;; 0xbb98
   \   00000172   3279               LDRB     R2,[R6, #+4]
   \   00000174   A023               MOVS     R3,#+160
   \   00000176   5A43               MULS     R2,R3,R2
   \   00000178   2D4B               LDR      R3,??MenuRefresh_0+0x28  ;; gProg
   \   0000017A   9A18               ADDS     R2,R3,R2
   \   0000017C   1018               ADDS     R0,R2,R0
   \   0000017E   ........           BL       ThermostatChartSet_Refresh
   \   00000182   11E0               B        ??MenuRefresh_2
    457                  
    458                }
    459              }
    460              else if(DispWait==DispWaitOn)
   \                     ??MenuRefresh_4:
   \   00000184   0128               CMP      R0,#+1
   \   00000186   02D1               BNE      ??MenuRefresh_26
    461              {
    462                Wait_Paint();
   \   00000188   ........           BL       Wait_Paint
   \   0000018C   0CE0               B        ??MenuRefresh_2
    463              }
    464              else if(DispWait==DispWaitOn2)
   \                     ??MenuRefresh_26:
   \   0000018E   0228               CMP      R0,#+2
   \   00000190   04D1               BNE      ??MenuRefresh_27
    465              {
    466                Wait_Paint();
   \   00000192   ........           BL       Wait_Paint
    467                DispWait=DispWaitActive;
   \   00000196   0320               MOVS     R0,#+3
   \   00000198   B072               STRB     R0,[R6, #+10]
   \   0000019A   05E0               B        ??MenuRefresh_2
    468              }
    469              else if(DispWait==DispWaitOff)
   \                     ??MenuRefresh_27:
   \   0000019C   0428               CMP      R0,#+4
   \   0000019E   03D1               BNE      ??MenuRefresh_2
    470              {
    471                DispWait=DispWaitNoActive;
   \   000001A0   0020               MOVS     R0,#+0
   \   000001A2   B072               STRB     R0,[R6, #+10]
    472                MenuPaint();
   \   000001A4   ........           BL       MenuPaint
    473              }
    474              
    475          
    476              
    477              
    478            }
    479            
    480            
    481              if ((g_counter>g_Message) && (Message)){Message=0; g_Message=0; MenuPaint();}
   \                     ??MenuRefresh_2:
   \   000001A8   2268               LDR      R2,[R4, #+0]
   \   000001AA   D317               ASRS     R3,R2,#+31
   \   000001AC   03CD               LDM      R5!,{R0,R1}
   \   000001AE   083D               SUBS     R5,R5,#+8
   \   000001B0   8B42               CMP      R3,R1
   \   000001B2   0CD8               BHI      ??MenuRefresh_28
   \   000001B4   01D3               BCC      ??MenuRefresh_29
   \   000001B6   8242               CMP      R2,R0
   \   000001B8   09D2               BCS      ??MenuRefresh_28
   \                     ??MenuRefresh_29:
   \   000001BA   164E               LDR      R6,??MenuRefresh_0+0xC  ;; TextToChangeLength
   \   000001BC   F07A               LDRB     R0,[R6, #+11]
   \   000001BE   0028               CMP      R0,#+0
   \   000001C0   05D0               BEQ      ??MenuRefresh_28
   \   000001C2   0020               MOVS     R0,#+0
   \   000001C4   0100               MOVS     R1,R0
   \   000001C6   F172               STRB     R1,[R6, #+11]
   \   000001C8   2060               STR      R0,[R4, #+0]
   \   000001CA   ........           BL       MenuPaint
   \                     ??MenuRefresh_28:
   \   000001CE   2268               LDR      R2,[R4, #+0]
   \   000001D0   D317               ASRS     R3,R2,#+31
   \   000001D2   03CD               LDM      R5!,{R0,R1}
   \   000001D4   9942               CMP      R1,R3
   \   000001D6   08D8               BHI      ??MenuRefresh_30
   \   000001D8   01D3               BCC      ??MenuRefresh_31
   \   000001DA   9042               CMP      R0,R2
   \   000001DC   05D2               BCS      ??MenuRefresh_30
   \                     ??MenuRefresh_31:
   \   000001DE   0D4E               LDR      R6,??MenuRefresh_0+0xC  ;; TextToChangeLength
   \   000001E0   F47A               LDRB     R4,[R6, #+11]
   \   000001E2   002C               CMP      R4,#+0
   \   000001E4   01D1               BNE      ??MenuRefresh_30
    482            if ((g_counter<g_Message) && (!Message)){Message=1;}
   \   000001E6   0124               MOVS     R4,#+1
   \   000001E8   F472               STRB     R4,[R6, #+11]
    483            if ((g_counter<g_Message) && (MenuLevel<2)) { MESSAGE_Refresh();}
   \                     ??MenuRefresh_30:
   \   000001EA   9942               CMP      R1,R3
   \   000001EC   08D8               BHI      ??MenuRefresh_1
   \   000001EE   01D3               BCC      ??MenuRefresh_32
   \   000001F0   9042               CMP      R0,R2
   \   000001F2   05D2               BCS      ??MenuRefresh_1
   \                     ??MenuRefresh_32:
   \   000001F4   0F48               LDR      R0,??MenuRefresh_0+0x2C  ;; TextToChangeLength + 80
   \   000001F6   0068               LDR      R0,[R0, #+0]
   \   000001F8   0228               CMP      R0,#+2
   \   000001FA   01DA               BGE      ??MenuRefresh_1
   \   000001FC   ........           BL       MESSAGE_Refresh
    484            
    485            } 
    486          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \                     ??MenuRefresh_1:
   \   00000200   70BC               POP      {R4-R6}
   \   00000202   01BC               POP      {R0}
   \   00000204   0047               BX       R0               ;; return
   \   00000206   C046               Nop      
   \                     ??MenuRefresh_0:
   \   00000208   ........           DC32     g_info
   \   0000020C   ........           DC32     g_counter
   \   00000210   ........           DC32     g_Message
   \   00000214   ........           DC32     TextToChangeLength
   \   00000218   F5030000           DC32     0x3f5
   \   0000021C   36270000           DC32     0x2736
   \   00000220   26880100           DC32     0x18826
   \   00000224   E9510F00           DC32     0xf51e9
   \   00000228   B4C30000           DC32     0xc3b4
   \   0000022C   98BB0000           DC32     0xbb98
   \   00000230   ........           DC32     gProg
   \   00000234   ........           DC32     TextToChangeLength + 80
    487          
    488          
    489          
    490          
    491          extern char Animation_tab[11][8][15];
    492          

   \                                 In section .bss, align 1
    493          char InitPointer=0;
   \                     InitPointer:
   \   00000000                      DS8 1
    494          char CCKier=0;
   \                     CCKier:
   \   00000001                      DS8 1
    495          
    496          //*-----------------------------------------------------------------------------
    497          //* Nazwa funkcji :    MainSide_Paint
    498          //* Funkcja strony g³ównej menu
    499          //*-----------------------------------------------------------------------------
    500          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    501          //*-----------------------------------------------------------------------------
    502          char AnimationNr=0;
   \                     AnimationNr:
   \   00000002                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
    503          void StartAnimation_Paint(void)
    504          {
   \                     StartAnimation_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    505            CleanCanvas();
   \   00000002   ........           BL       CleanCanvas
    506            
    507            CopyToCanvasPoint((char*)Logo_Ceuron, 0, 70, 64,16);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000006   544D               LDR      R5,??StartAnimation_Paint_0  ;; `?<Constant "Firmware: ">`
   \   00000008   82B0               SUB      SP,SP,#+8
   \   0000000A   1020               MOVS     R0,#+16
   \   0000000C   0090               STR      R0,[SP, #+0]
   \   0000000E   4023               MOVS     R3,#+64
   \   00000010   4622               MOVS     R2,#+70
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   2800               MOVS     R0,R5
   \   00000016   2030               ADDS     R0,R0,#+32
   \   00000018   ........           BL       CopyToCanvasPoint
   \   0000001C   02B0               ADD      SP,SP,#+8
    508          
    509          
    510            
    511            Label((char*)&identyfikacja,2,0,52,15,63,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000001E   82B0               SUB      SP,SP,#+8
   \   00000020   0020               MOVS     R0,#+0
   \   00000022   0090               STR      R0,[SP, #+0]
   \   00000024   7821               MOVS     R1,#+120
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3F21               MOVS     R1,#+63
   \   0000002A   0F20               MOVS     R0,#+15
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3423               MOVS     R3,#+52
   \   00000030   0022               MOVS     R2,#+0
   \   00000032   0221               MOVS     R1,#+2
   \   00000034   4948               LDR      R0,??StartAnimation_Paint_0+0x4  ;; identyfikacja
   \   00000036   ........           BL       Label
   \   0000003A   06B0               ADD      SP,SP,#+24
    512            Label("Firmware: ",0,5,5,15,63,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   7821               MOVS     R1,#+120
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   3F21               MOVS     R1,#+63
   \   00000048   0F20               MOVS     R0,#+15
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   0523               MOVS     R3,#+5
   \   0000004E   1A00               MOVS     R2,R3
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   2800               MOVS     R0,R5
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
    513            Label((char*)&system,0,48,5,4,14,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7821               MOVS     R1,#+120
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   0E21               MOVS     R1,#+14
   \   00000066   0420               MOVS     R0,#+4
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   0523               MOVS     R3,#+5
   \   0000006C   3022               MOVS     R2,#+48
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   3B48               LDR      R0,??StartAnimation_Paint_0+0x8  ;; system
   \   00000072   ........           BL       Label
   \   00000076   06B0               ADD      SP,SP,#+24
    514           
    515            //wskanik postêpu
    516            H_line(InitPointer+5,48,24,1); // (char X, int Y, char lenght, char typ)
   \   00000078   3A4C               LDR      R4,??StartAnimation_Paint_0+0xC  ;; InitPointer
   \   0000007A   0123               MOVS     R3,#+1
   \   0000007C   1822               MOVS     R2,#+24
   \   0000007E   3021               MOVS     R1,#+48
   \   00000080   2078               LDRB     R0,[R4, #+0]
   \   00000082   401D               ADDS     R0,R0,#+5
   \   00000084   0006               LSLS     R0,R0,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   ........           BL       H_line
    517            H_line(InitPointer+4,49,26,1); // (char X, int Y, char lenght, char typ)
   \   0000008C   0123               MOVS     R3,#+1
   \   0000008E   1A22               MOVS     R2,#+26
   \   00000090   3121               MOVS     R1,#+49
   \   00000092   2078               LDRB     R0,[R4, #+0]
   \   00000094   001D               ADDS     R0,R0,#+4
   \   00000096   0006               LSLS     R0,R0,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   ........           BL       H_line
    518            H_line(InitPointer+5,50,24,1); // (char X, int Y, char lenght, char typ)
   \   0000009E   0123               MOVS     R3,#+1
   \   000000A0   1822               MOVS     R2,#+24
   \   000000A2   3221               MOVS     R1,#+50
   \   000000A4   2078               LDRB     R0,[R4, #+0]
   \   000000A6   401D               ADDS     R0,R0,#+5
   \   000000A8   0006               LSLS     R0,R0,#+24
   \   000000AA   000E               LSRS     R0,R0,#+24
   \   000000AC   ........           BL       H_line
    519            if ((InitPointer<30) && (CCKier==0)) {InitPointer+=2;}else{CCKier=1;}
   \   000000B0   2078               LDRB     R0,[R4, #+0]
   \   000000B2   1E28               CMP      R0,#+30
   \   000000B4   05D2               BCS      ??StartAnimation_Paint_1
   \   000000B6   6178               LDRB     R1,[R4, #+1]
   \   000000B8   0029               CMP      R1,#+0
   \   000000BA   02D1               BNE      ??StartAnimation_Paint_1
   \   000000BC   801C               ADDS     R0,R0,#+2
   \   000000BE   2070               STRB     R0,[R4, #+0]
   \   000000C0   01E0               B        ??StartAnimation_Paint_2
   \                     ??StartAnimation_Paint_1:
   \   000000C2   0120               MOVS     R0,#+1
   \   000000C4   6070               STRB     R0,[R4, #+1]
    520            if ((InitPointer>0) && (CCKier==1)) {InitPointer-=2;}else{CCKier=0;}
   \                     ??StartAnimation_Paint_2:
   \   000000C6   2078               LDRB     R0,[R4, #+0]
   \   000000C8   0028               CMP      R0,#+0
   \   000000CA   05D0               BEQ      ??StartAnimation_Paint_3
   \   000000CC   6178               LDRB     R1,[R4, #+1]
   \   000000CE   0129               CMP      R1,#+1
   \   000000D0   02D1               BNE      ??StartAnimation_Paint_3
   \   000000D2   801E               SUBS     R0,R0,#+2
   \   000000D4   2070               STRB     R0,[R4, #+0]
   \   000000D6   01E0               B        ??StartAnimation_Paint_4
   \                     ??StartAnimation_Paint_3:
   \   000000D8   0020               MOVS     R0,#+0
   \   000000DA   6070               STRB     R0,[R4, #+1]
    521            
    522            
    523            #ifdef _ADMINISTRATOR_ 
    524              Label("Administrator",2,0,115,15,63,0,128,1);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
    525            #endif   
    526            
    527            #ifdef _TESTER_ 
    528              Label("TESTER",2,0,115,15,63,0,128,1);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??StartAnimation_Paint_4:
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0120               MOVS     R0,#+1
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   8021               MOVS     R1,#+128
   \   000000E4   0020               MOVS     R0,#+0
   \   000000E6   03B4               PUSH     {R0,R1}
   \   000000E8   3F21               MOVS     R1,#+63
   \   000000EA   0F20               MOVS     R0,#+15
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   7323               MOVS     R3,#+115
   \   000000F0   0022               MOVS     R2,#+0
   \   000000F2   0221               MOVS     R1,#+2
   \   000000F4   0C35               ADDS     R5,R5,#+12
   \   000000F6   2800               MOVS     R0,R5
   \   000000F8   ........           BL       Label
   \   000000FC   06B0               ADD      SP,SP,#+24
    529            #endif    
    530              
    531              
    532            
    533            
    534            if ((AnimationNr==14) || (SlaveMode))
   \   000000FE   A278               LDRB     R2,[R4, #+2]
   \   00000100   0E2A               CMP      R2,#+14
   \   00000102   03D0               BEQ      ??StartAnimation_Paint_5
   \   00000104   1848               LDR      R0,??StartAnimation_Paint_0+0x10  ;; SlaveMode
   \   00000106   0078               LDRB     R0,[R0, #+0]
   \   00000108   0028               CMP      R0,#+0
   \   0000010A   20D0               BEQ      ??StartAnimation_Paint_6
    535            {
    536                korekta_X.A=AT91C_IFLASH_MEM->Config.Cor_X.A;
   \                     ??StartAnimation_Paint_5:
   \   0000010C   1748               LDR      R0,??StartAnimation_Paint_0+0x14  ;; korekta_X
   \   0000010E   1849               LDR      R1,??StartAnimation_Paint_0+0x18  ;; 0x13d828
   \   00000110   0968               LDR      R1,[R1, #+0]
   \   00000112   0160               STR      R1,[R0, #+0]
    537                korekta_X.B=AT91C_IFLASH_MEM->Config.Cor_X.B;
   \   00000114   1749               LDR      R1,??StartAnimation_Paint_0+0x1C  ;; 0x13d82c
   \   00000116   0968               LDR      R1,[R1, #+0]
   \   00000118   4160               STR      R1,[R0, #+4]
    538                korekta_Y.A=AT91C_IFLASH_MEM->Config.Cor_Y.A;
   \   0000011A   174B               LDR      R3,??StartAnimation_Paint_0+0x20  ;; korekta_Y
   \   0000011C   1749               LDR      R1,??StartAnimation_Paint_0+0x24  ;; 0x13d820
   \   0000011E   0968               LDR      R1,[R1, #+0]
   \   00000120   1960               STR      R1,[R3, #+0]
    539                korekta_Y.B=AT91C_IFLASH_MEM->Config.Cor_Y.B;
   \   00000122   1749               LDR      R1,??StartAnimation_Paint_0+0x28  ;; 0x13d824
   \   00000124   0968               LDR      R1,[R1, #+0]
   \   00000126   5960               STR      R1,[R3, #+4]
    540                
    541                //je¿eli brak korekt to ustaw korekty
    542                if ((korekta_X.A==0)||(korekta_Y.A==0))
   \   00000128   0068               LDR      R0,[R0, #+0]
   \   0000012A   0021               MOVS     R1,#+0
   \   0000012C   ........           BL       __aeabi_cfcmpeq
   \   00000130   03D0               BEQ      ??StartAnimation_Paint_7
   \   00000132   1868               LDR      R0,[R3, #+0]
   \   00000134   ........           BL       __aeabi_cfcmpeq
   \   00000138   04D1               BNE      ??StartAnimation_Paint_8
    543                {
    544                  MenuLevel=4;
   \                     ??StartAnimation_Paint_7:
   \   0000013A   1248               LDR      R0,??StartAnimation_Paint_0+0x2C  ;; TextToChangeLength
   \   0000013C   0421               MOVS     R1,#+4
   \   0000013E   0165               STR      R1,[R0, #+80]
    545                  
    546                  #ifdef _TESTER_ 
    547                    MenuLevel=11534;
   \   00000140   1149               LDR      R1,??StartAnimation_Paint_0+0x30  ;; 0x2d0e
   \   00000142   0165               STR      R1,[R0, #+80]
    548                  #endif    
    549              
    550                }else{
    551                 // MenuLevel=1;
    552                }
    553                AnimationNr++;
   \                     ??StartAnimation_Paint_8:
   \   00000144   521C               ADDS     R2,R2,#+1
   \   00000146   A270               STRB     R2,[R4, #+2]
    554                MenuPaint();
   \   00000148   ........           BL       MenuPaint
   \   0000014C   01E0               B        ??StartAnimation_Paint_9
    555            }else{
    556               AnimationNr++; 
   \                     ??StartAnimation_Paint_6:
   \   0000014E   521C               ADDS     R2,R2,#+1
   \   00000150   A270               STRB     R2,[R4, #+2]
    557            }
    558              
    559          
    560          
    561          }
   \                     ??StartAnimation_Paint_9:
   \   00000152   38BC               POP      {R3-R5}
   \   00000154   01BC               POP      {R0}
   \   00000156   0047               BX       R0               ;; return
   \                     ??StartAnimation_Paint_0:
   \   00000158   ........           DC32     `?<Constant "Firmware: ">`
   \   0000015C   ........           DC32     identyfikacja
   \   00000160   ........           DC32     system
   \   00000164   ........           DC32     InitPointer
   \   00000168   ........           DC32     SlaveMode
   \   0000016C   ........           DC32     korekta_X
   \   00000170   28D81300           DC32     0x13d828
   \   00000174   2CD81300           DC32     0x13d82c
   \   00000178   ........           DC32     korekta_Y
   \   0000017C   20D81300           DC32     0x13d820
   \   00000180   24D81300           DC32     0x13d824
   \   00000184   ........           DC32     TextToChangeLength
   \   00000188   0E2D0000           DC32     0x2d0e
    562          
    563          
    564          //*-----------------------------------------------------------------------------
    565          //* Nazwa funkcji :    StartAnimation_Event
    566          //* Funkcja strony g³ównej menu
    567          //*-----------------------------------------------------------------------------
    568          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    569          //*-----------------------------------------------------------------------------
    570          char StartAdvance=0;

   \                                 In section Debug.txt, align 4, keep-with-next
    571          void StartAnimation_Event(void)
    572          {
   \                     StartAnimation_Event:
   \   00000000   01B5               PUSH     {R0,LR}
    573          
    574              if ((X_up>0) && (Y_up>0))
   \   00000002   0A48               LDR      R0,??StartAnimation_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   0128               CMP      R0,#+1
   \   0000000A   0BDB               BLT      ??StartAnimation_Event_1
   \   0000000C   0848               LDR      R0,??StartAnimation_Event_0+0x4  ;; Y_up
   \   0000000E   405E               LDRSH    R0,[R0, R1]
   \   00000010   0128               CMP      R0,#+1
   \   00000012   07DB               BLT      ??StartAnimation_Event_1
    575              {
    576                MenuLevel=4;
   \   00000014   0748               LDR      R0,??StartAnimation_Event_0+0x8  ;; TextToChangeLength + 80
   \   00000016   0421               MOVS     R1,#+4
   \   00000018   0160               STR      R1,[R0, #+0]
    577                StartAdvance=1;
   \   0000001A   0748               LDR      R0,??StartAnimation_Event_0+0xC  ;; StartAdvance
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   0170               STRB     R1,[R0, #+0]
    578                MenuPaint();
   \   00000020   ........           BL       MenuPaint
    579              }
    580              
    581              
    582               
    583          }//_______________________ Koniec funkcji StartAnimation_Event __________________________
   \                     ??StartAnimation_Event_1:
   \   00000024   08BC               POP      {R3}
   \   00000026   01BC               POP      {R0}
   \   00000028   0047               BX       R0               ;; return
   \   0000002A   C046               Nop      
   \                     ??StartAnimation_Event_0:
   \   0000002C   ........           DC32     X_up
   \   00000030   ........           DC32     Y_up
   \   00000034   ........           DC32     TextToChangeLength + 80
   \   00000038   ........           DC32     StartAdvance
    584          
    585          
    586          
    587          
    588          
    589          //*-----------------------------------------------------------------------------
    590          //* Nazwa funkcji :    MainSide_Paint
    591          //* Funkcja strony g³ównej menu
    592          //*-----------------------------------------------------------------------------
    593          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    594          //*-----------------------------------------------------------------------------
    595          

   \                                 In section Debug.txt, align 4, keep-with-next
    596          void CheckChannel(void)
    597          {
   \                     CheckChannel:
   \   00000000   10B5               PUSH     {R4,LR}
    598          
    599            CleanCanvas();
   \   00000002   ........           BL       CleanCanvas
    600          
    601               Label("Checking Wi-Fi",0,1,60,14,6,0,120,0);
   \   00000006   82B0               SUB      SP,SP,#+8
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   0090               STR      R0,[SP, #+0]
   \   0000000C   7821               MOVS     R1,#+120
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0621               MOVS     R1,#+6
   \   00000012   0E20               MOVS     R0,#+14
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   3C23               MOVS     R3,#+60
   \   00000018   0122               MOVS     R2,#+1
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   1C48               LDR      R0,??CheckChannel_0  ;; `?<Constant "Checking Wi-Fi">`
   \   0000001E   ........           BL       Label
   \   00000022   06B0               ADD      SP,SP,#+24
    602          
    603                H_line(InitPointer+5,48,24,1); // (char X, int Y, char lenght, char typ)
   \   00000024   1B4C               LDR      R4,??CheckChannel_0+0x4  ;; InitPointer
   \   00000026   0123               MOVS     R3,#+1
   \   00000028   1822               MOVS     R2,#+24
   \   0000002A   3021               MOVS     R1,#+48
   \   0000002C   2078               LDRB     R0,[R4, #+0]
   \   0000002E   401D               ADDS     R0,R0,#+5
   \   00000030   0006               LSLS     R0,R0,#+24
   \   00000032   000E               LSRS     R0,R0,#+24
   \   00000034   ........           BL       H_line
    604                H_line(InitPointer+4,49,26,1); // (char X, int Y, char lenght, char typ)
   \   00000038   0123               MOVS     R3,#+1
   \   0000003A   1A22               MOVS     R2,#+26
   \   0000003C   3121               MOVS     R1,#+49
   \   0000003E   2078               LDRB     R0,[R4, #+0]
   \   00000040   001D               ADDS     R0,R0,#+4
   \   00000042   0006               LSLS     R0,R0,#+24
   \   00000044   000E               LSRS     R0,R0,#+24
   \   00000046   ........           BL       H_line
    605                H_line(InitPointer+5,50,24,1); // (char X, int Y, char lenght, char typ)
   \   0000004A   0123               MOVS     R3,#+1
   \   0000004C   1822               MOVS     R2,#+24
   \   0000004E   3221               MOVS     R1,#+50
   \   00000050   2078               LDRB     R0,[R4, #+0]
   \   00000052   401D               ADDS     R0,R0,#+5
   \   00000054   0006               LSLS     R0,R0,#+24
   \   00000056   000E               LSRS     R0,R0,#+24
   \   00000058   ........           BL       H_line
    606                if ((InitPointer<30) && (CCKier==0)) {InitPointer+=2;}else{CCKier=1;}
   \   0000005C   2078               LDRB     R0,[R4, #+0]
   \   0000005E   1E28               CMP      R0,#+30
   \   00000060   05D2               BCS      ??CheckChannel_1
   \   00000062   6178               LDRB     R1,[R4, #+1]
   \   00000064   0029               CMP      R1,#+0
   \   00000066   02D1               BNE      ??CheckChannel_1
   \   00000068   801C               ADDS     R0,R0,#+2
   \   0000006A   2070               STRB     R0,[R4, #+0]
   \   0000006C   01E0               B        ??CheckChannel_2
   \                     ??CheckChannel_1:
   \   0000006E   0120               MOVS     R0,#+1
   \   00000070   6070               STRB     R0,[R4, #+1]
    607                if ((InitPointer>0) && (CCKier==1)) {InitPointer-=2;}else{CCKier=0;}
   \                     ??CheckChannel_2:
   \   00000072   2078               LDRB     R0,[R4, #+0]
   \   00000074   0028               CMP      R0,#+0
   \   00000076   05D0               BEQ      ??CheckChannel_3
   \   00000078   6178               LDRB     R1,[R4, #+1]
   \   0000007A   0129               CMP      R1,#+1
   \   0000007C   02D1               BNE      ??CheckChannel_3
   \   0000007E   801E               SUBS     R0,R0,#+2
   \   00000080   2070               STRB     R0,[R4, #+0]
   \   00000082   01E0               B        ??CheckChannel_4
   \                     ??CheckChannel_3:
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   6070               STRB     R0,[R4, #+1]
    608                
    609          }
   \                     ??CheckChannel_4:
   \   00000088   10BC               POP      {R4}
   \   0000008A   01BC               POP      {R0}
   \   0000008C   0047               BX       R0               ;; return
   \   0000008E   C046               Nop      
   \                     ??CheckChannel_0:
   \   00000090   ........           DC32     `?<Constant "Checking Wi-Fi">`
   \   00000094   ........           DC32     InitPointer
    610          
    611          
    612          
    613          
    614          
    615          char ekran_komunikacja[8][128] = {
    616                            {0,0,0,0,0,0,0,0,0,0,28,34,2,2,2,34,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,8,232,232,232,104,104,104,104,104,104,104,104,104,104,104,104,232,232,232,8,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,248,24,6,6,6,3,3,3,3,6,6,12,60,240,192,0,0,0,0,0},
    617                            {0,0,0,0,0,0,0,0,0,0,30,33,33,33,33,33,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,255,255,192,192,192,192,192,192,192,192,192,192,192,192,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,48,24,0,0,0,255,255,0,0,24,24,96,224,128,0,0,0,0,0},
    618                            {0,0,0,0,0,0,0,0,0,0,145,153,153,149,147,147,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,2,10,18,34,66,66,130,130,2,2,2,2,2,2,2,2,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,195,225,112,48,48,48,48,48,48,48,48,48,48,48,51,3,0,0,0,0,0},
    619                            {0,0,0,0,0,0,0,0,0,0,200,76,76,202,73,73,200,0,0,0,4,4,4,60,68,68,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,0,0,0,1,1,1,130,194,164,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,14,28,24,24,24,24,24,24,24,24,24,24,24,152,128,0,0,0,0,0},
    620                            {0,0,0,0,0,0,0,0,0,0,199,32,32,39,32,32,199,0,0,0,28,34,2,2,2,34,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,1,2,84,168,80,33,206,14,206,67,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,48,48,24,24,12,12,28,28,96,96,96,96,48,63,15,0,0,0,0,0},
    621                            {0,0,0,0,0,0,0,0,0,0,65,66,64,64,64,66,241,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,62,124,85,170,85,0,255,126,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,220,142,6,6,6,6,6,6,6,6,6,6,140,252,112,0,0,0,0,0},
    622                            {0,0,0,0,0,0,0,0,0,0,248,8,8,248,8,8,249,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,127,255,192,128,81,162,85,0,255,248,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,51,51,51,51,51,51,51,51,51,51,51,49,97,192,0,0,0,0,0},
    623                            {0,0,0,0,0,0,0,0,0,0,28,36,68,68,68,36,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,7,14,29,24,31,1,31,16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,16,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,108,198,198,198,198,198,198,198,198,198,198,198,198,195,1,0,0,0,0,0},
    624                            };
    625          
    626          
    627          
    628          
    629          //*-----------------------------------------------------------------------------
    630          //* Nazwa funkcji :    MainSide_Paint
    631          //* Funkcja strony g³ównej menu
    632          //*-----------------------------------------------------------------------------
    633          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    634          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    635          void MainSide_Paint(_Screen* ScreenLokal)
    636          {
   \                     MainSide_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
    637            //Komunikacja z komputerem
    638            if (g_PC_Connected==1)
   \   00000004   AB48               LDR      R0,??MainSide_Paint_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0128               CMP      R0,#+1
   \   0000000A   03D1               BNE      ??MainSide_Paint_1
    639            {
    640              CopyToCanvas(ekran_komunikacja);
   \   0000000C   AA48               LDR      R0,??MainSide_Paint_0+0x4  ;; TextToChangeLength + 136
   \   0000000E   ........           BL       CopyToCanvas
   \   00000012   4BE1               B        ??MainSide_Paint_2
    641            }
    642            else
    643            {
    644            
    645                  char PaternDesign=ScreenLokal->PaternDesign;
   \                     ??MainSide_Paint_1:
   \   00000014   0698               LDR      R0,[SP, #+24]
   \   00000016   0478               LDRB     R4,[R0, #+0]
    646                  
    647                  CleanCanvas();
   \   00000018   ........           BL       CleanCanvas
    648                   char txt[10];
    649                 
    650              
    651                //CleanCanvas(); 
    652                
    653                
    654                SheetHistory[0]=0;
   \   0000001C   A749               LDR      R1,??MainSide_Paint_0+0x8  ;; TextToChangeLength
   \   0000001E   2020               MOVS     R0,#+32
   \   00000020   0022               MOVS     R2,#+0
   \   00000022   0A54               STRB     R2,[R1, R0]
    655                
    656                if ((SheetHistory[SheetHistoryIndex]!=CurrentSheet) && (CurrentSheet<sizeof(SheetHistory)-1))
   \   00000024   0879               LDRB     R0,[R1, #+4]
   \   00000026   CA79               LDRB     R2,[R1, #+7]
   \   00000028   8B18               ADDS     R3,R1,R2
   \   0000002A   2033               ADDS     R3,R3,#+32
   \   0000002C   1B78               LDRB     R3,[R3, #+0]
   \   0000002E   8342               CMP      R3,R0
   \   00000030   08D0               BEQ      ??MainSide_Paint_3
   \   00000032   1328               CMP      R0,#+19
   \   00000034   06D2               BCS      ??MainSide_Paint_3
    657                {
    658                    SheetHistory[++SheetHistoryIndex]=CurrentSheet;
   \   00000036   521C               ADDS     R2,R2,#+1
   \   00000038   CA71               STRB     R2,[R1, #+7]
   \   0000003A   1206               LSLS     R2,R2,#+24
   \   0000003C   120E               LSRS     R2,R2,#+24
   \   0000003E   8918               ADDS     R1,R1,R2
   \   00000040   2031               ADDS     R1,R1,#+32
   \   00000042   0870               STRB     R0,[R1, #+0]
    659                }
    660                  
    661                
    662                if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Paint(ScreenLokal);}
   \                     ??MainSide_Paint_3:
   \   00000044   0028               CMP      R0,#+0
   \   00000046   06D1               BNE      ??MainSide_Paint_4
   \   00000048   2100               MOVS     R1,R4
   \   0000004A   0829               CMP      R1,#+8
   \   0000004C   03D1               BNE      ??MainSide_Paint_4
   \                     ??MainSide_Paint_5:
   \   0000004E   0698               LDR      R0,[SP, #+24]
   \   00000050   ........           BL       Termostat_Paint
   \   00000054   2AE1               B        ??MainSide_Paint_2
    663                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Paint(ScreenLokal);}
   \                     ??MainSide_Paint_4:
   \   00000056   0028               CMP      R0,#+0
   \   00000058   02D0               BEQ      ??MainSide_Paint_6
   \   0000005A   2100               MOVS     R1,R4
   \   0000005C   0529               CMP      R1,#+5
   \   0000005E   F6D0               BEQ      ??MainSide_Paint_5
    664                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {Timetable_Paint(CurrentSheet);}
   \                     ??MainSide_Paint_6:
   \   00000060   0028               CMP      R0,#+0
   \   00000062   05D1               BNE      ??MainSide_Paint_7
   \   00000064   2100               MOVS     R1,R4
   \   00000066   0929               CMP      R1,#+9
   \   00000068   02D1               BNE      ??MainSide_Paint_7
   \   0000006A   ........           BL       Timetable_Paint
   \   0000006E   1DE1               B        ??MainSide_Paint_2
    665                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {Timetable_Paint(CurrentSheet);}  
   \                     ??MainSide_Paint_7:
   \   00000070   0028               CMP      R0,#+0
   \   00000072   05D0               BEQ      ??MainSide_Paint_8
   \   00000074   2100               MOVS     R1,R4
   \   00000076   0629               CMP      R1,#+6
   \   00000078   02D1               BNE      ??MainSide_Paint_8
   \   0000007A   ........           BL       Timetable_Paint
   \   0000007E   15E1               B        ??MainSide_Paint_2
    666                #ifdef __ALARM      
    667                      else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Paint(CurrentSheet);}
   \                     ??MainSide_Paint_8:
   \   00000080   0028               CMP      R0,#+0
   \   00000082   05D1               BNE      ??MainSide_Paint_9
   \   00000084   2100               MOVS     R1,R4
   \   00000086   0A29               CMP      R1,#+10
   \   00000088   02D1               BNE      ??MainSide_Paint_9
   \   0000008A   ........           BL       Alarm_Paint
   \   0000008E   0DE1               B        ??MainSide_Paint_2
    668                      else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Paint(CurrentSheet);} 
   \                     ??MainSide_Paint_9:
   \   00000090   0028               CMP      R0,#+0
   \   00000092   05D0               BEQ      ??MainSide_Paint_10
   \   00000094   2100               MOVS     R1,R4
   \   00000096   0729               CMP      R1,#+7
   \   00000098   02D1               BNE      ??MainSide_Paint_10
   \   0000009A   ........           BL       Alarm_Paint
   \   0000009E   05E1               B        ??MainSide_Paint_2
    669                #endif
    670                else  
    671                { 
    672                      
    673                      const _ScreenPaternDesign *ScreenPaternDesign;
    674                      if (CurrentSheet==0) 
   \                     ??MainSide_Paint_10:
   \   000000A0   0028               CMP      R0,#+0
   \   000000A2   02D1               BNE      ??MainSide_Paint_11
    675                      {
    676                        ScreenPaternDesign=ScreenSetTab_0;
   \   000000A4   8648               LDR      R0,??MainSide_Paint_0+0xC  ;; `?<Constant {129, 0}>` + 24
   \   000000A6   0090               STR      R0,[SP, #+0]
   \   000000A8   13E0               B        ??MainSide_Paint_12
    677                      }else{
    678                        ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Paint_11:
   \   000000AA   8648               LDR      R0,??MainSide_Paint_0+0x10  ;; `?<Constant {129, 0}>` + 992
   \   000000AC   0090               STR      R0,[SP, #+0]
    679                        List_Paint(ScreenLokal->Label,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   0800               MOVS     R0,R1
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   03B4               PUSH     {R0,R1}
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   83A0               ADR      R0,??MainSide_Paint_0+0x14  ;; 0x20, 0x00, 0x00, 0x00
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   0321               MOVS     R1,#+3
   \   000000BE   0020               MOVS     R0,#+0
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   0300               MOVS     R3,R0
   \   000000C4   6C22               MOVS     R2,#+108
   \   000000C6   0121               MOVS     R1,#+1
   \   000000C8   1098               LDR      R0,[SP, #+64]
   \   000000CA   401C               ADDS     R0,R0,#+1
   \   000000CC   ........           BL       List_Paint
   \   000000D0   0AB0               ADD      SP,SP,#+40
    680                    
    681                      }  
    682                      
    683                      
    684                      
    685                      //grafika  i text
    686                      for (char i=0; i<ScrenGraphNr; i++)
   \                     ??MainSide_Paint_12:
   \   000000D2   0025               MOVS     R5,#+0
   \   000000D4   1CE0               B        ??MainSide_Paint_13
    687                      {
    688                        if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??MainSide_Paint_14:
   \   000000D6   2000               MOVS     R0,R4
   \   000000D8   5821               MOVS     R1,#+88
   \   000000DA   4843               MULS     R0,R1,R0
   \   000000DC   0099               LDR      R1,[SP, #+0]
   \   000000DE   0818               ADDS     R0,R1,R0
   \   000000E0   2900               MOVS     R1,R5
   \   000000E2   8A00               LSLS     R2,R1,#+2
   \   000000E4   8018               ADDS     R0,R0,R2
   \   000000E6   2430               ADDS     R0,R0,#+36
   \   000000E8   8278               LDRB     R2,[R0, #+2]
   \   000000EA   002A               CMP      R2,#+0
   \   000000EC   0DD0               BEQ      ??MainSide_Paint_15
    689                        {
    690                                ScreenGraph(//(char poz_X , char poz_Y ,char width, char height,_Graph *Graph)
    691                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
    692                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
    693                                ScreenPaternDesign[PaternDesign].Graph[i].Width,
    694                                ScreenPaternDesign[PaternDesign].Graph[i].Height,
    695                                &(ScreenLokal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000000EE   82B0               SUB      SP,SP,#+8
   \   000000F0   0722               MOVS     R2,#+7
   \   000000F2   5143               MULS     R1,R2,R1
   \   000000F4   089A               LDR      R2,[SP, #+32]
   \   000000F6   5118               ADDS     R1,R2,R1
   \   000000F8   5331               ADDS     R1,R1,#+83
   \   000000FA   0091               STR      R1,[SP, #+0]
   \   000000FC   C378               LDRB     R3,[R0, #+3]
   \   000000FE   8278               LDRB     R2,[R0, #+2]
   \   00000100   4178               LDRB     R1,[R0, #+1]
   \   00000102   0078               LDRB     R0,[R0, #+0]
   \   00000104   ........           BL       ScreenGraph
   \   00000108   02B0               ADD      SP,SP,#+8
    696                        
    697                        }
    698                       }
   \                     ??MainSide_Paint_15:
   \   0000010A   6D1C               ADDS     R5,R5,#+1
   \   0000010C   2D06               LSLS     R5,R5,#+24
   \   0000010E   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_13:
   \   00000110   2800               MOVS     R0,R5
   \   00000112   0428               CMP      R0,#+4
   \   00000114   DFD3               BCC      ??MainSide_Paint_14
    699                      
    700                      
    701          
    702                    
    703          
    704                      
    705                      
    706                        //Analogi
    707                      char IlLiter=0;
    708                      signed short Value;
    709                      for (char i=0; i<ScrenAnalogNr; i++)
   \   00000116   0025               MOVS     R5,#+0
   \   00000118   2FE0               B        ??MainSide_Paint_16
    710                      {
    711                        if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
    712                        {         
    713                               if ((ScreenLokal->Analog[i].Nr>0) || ((ScreenLokal->Analog[i].Nr==0)&&(ScreenLokal->Analog[i].Reg>0)))
    714                               {
    715                               IlLiter=0;
    716                               Value=MainStage.StageI[ScreenLokal->Analog[i].Nr].Value[ScreenLokal->Analog[i].Reg];
    717          
    718                               if (Value&0x8000) //je¿eli sygna³ niewiarygodny
    719                               {
    720                                 txt[0]='-'; txt[1]='?';txt[2]='?';txt[3]='?'; txt[4]='-'; IlLiter+=5;
    721                               }else{ //je¿eli sygna³ wiarygodny
    722                                   if (ScreenLokal->Analog[i].Flip)
    723                                   {
    724                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
    725                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {txt[IlLiter++]=ScreenLokal->Analog[i].Text[k];}  
    726                                   }else{
    727                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {IlLiter++; txt[k]=ScreenLokal->Analog[i].Text[k];}  
   \                     ??MainSide_Paint_17:
   \   0000011A   1700               MOVS     R7,R2
   \   0000011C   029B               LDR      R3,[SP, #+8]
   \   0000011E   DB19               ADDS     R3,R3,R7
   \   00000120   7026               MOVS     R6,#+112
   \   00000122   9E5D               LDRB     R6,[R3, R6]
   \   00000124   002E               CMP      R6,#+0
   \   00000126   06D0               BEQ      ??MainSide_Paint_18
   \   00000128   491C               ADDS     R1,R1,#+1
   \   0000012A   0906               LSLS     R1,R1,#+24
   \   0000012C   090E               LSRS     R1,R1,#+24
   \   0000012E   03AE               ADD      R6,SP,#+12
   \   00000130   7033               ADDS     R3,R3,#+112
   \   00000132   1B78               LDRB     R3,[R3, #+0]
   \   00000134   F355               STRB     R3,[R6, R7]
   \                     ??MainSide_Paint_18:
   \   00000136   521C               ADDS     R2,R2,#+1
   \   00000138   1206               LSLS     R2,R2,#+24
   \   0000013A   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Paint_19:
   \   0000013C   1300               MOVS     R3,R2
   \   0000013E   032B               CMP      R3,#+3
   \   00000140   EBD3               BCC      ??MainSide_Paint_17
    728                                       IlLiter+=sIntToStr(Value, &(txt[IlLiter])); //(char Value, char *Vstring, char ill);
   \   00000142   0E00               MOVS     R6,R1
   \   00000144   03AA               ADD      R2,SP,#+12
   \   00000146   5118               ADDS     R1,R2,R1
   \   00000148   ........           BL       sIntToStr
   \   0000014C   3218               ADDS     R2,R6,R0
   \   0000014E   1206               LSLS     R2,R2,#+24
   \   00000150   120E               LSRS     R2,R2,#+24
    729                                   }
    730                               }  
    731                                   Label(txt,0,
    732                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.x, 
    733                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.y,IlLiter,
    734                                         ScreenPaternDesign[PaternDesign].Value[i].Width,
    735                                         0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Paint_20:
   \   00000152   82B0               SUB      SP,SP,#+8
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   0090               STR      R0,[SP, #+0]
   \   00000158   7821               MOVS     R1,#+120
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   0598               LDR      R0,[SP, #+20]
   \   0000015E   8178               LDRB     R1,[R0, #+2]
   \   00000160   1000               MOVS     R0,R2
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   0798               LDR      R0,[SP, #+28]
   \   00000166   4378               LDRB     R3,[R0, #+1]
   \   00000168   0278               LDRB     R2,[R0, #+0]
   \   0000016A   0021               MOVS     R1,#+0
   \   0000016C   09A8               ADD      R0,SP,#+36
   \   0000016E   ........           BL       Label
   \   00000172   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Paint_21:
   \   00000174   6D1C               ADDS     R5,R5,#+1
   \   00000176   2D06               LSLS     R5,R5,#+24
   \   00000178   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_16:
   \   0000017A   2800               MOVS     R0,R5
   \   0000017C   0428               CMP      R0,#+4
   \   0000017E   4ED2               BCS      ??MainSide_Paint_22
   \   00000180   2000               MOVS     R0,R4
   \   00000182   5821               MOVS     R1,#+88
   \   00000184   4843               MULS     R0,R1,R0
   \   00000186   0099               LDR      R1,[SP, #+0]
   \   00000188   0818               ADDS     R0,R1,R0
   \   0000018A   2900               MOVS     R1,R5
   \   0000018C   8A00               LSLS     R2,R1,#+2
   \   0000018E   8018               ADDS     R0,R0,R2
   \   00000190   3430               ADDS     R0,R0,#+52
   \   00000192   0190               STR      R0,[SP, #+4]
   \   00000194   8078               LDRB     R0,[R0, #+2]
   \   00000196   0028               CMP      R0,#+0
   \   00000198   ECD0               BEQ      ??MainSide_Paint_21
   \   0000019A   0720               MOVS     R0,#+7
   \   0000019C   4143               MULS     R1,R0,R1
   \   0000019E   0698               LDR      R0,[SP, #+24]
   \   000001A0   4018               ADDS     R0,R0,R1
   \   000001A2   0290               STR      R0,[SP, #+8]
   \   000001A4   0200               MOVS     R2,R0
   \   000001A6   7332               ADDS     R2,R2,#+115
   \   000001A8   1078               LDRB     R0,[R2, #+0]
   \   000001AA   0028               CMP      R0,#+0
   \   000001AC   03D1               BNE      ??MainSide_Paint_23
   \   000001AE   E1D1               BNE      ??MainSide_Paint_21
   \   000001B0   5078               LDRB     R0,[R2, #+1]
   \   000001B2   0028               CMP      R0,#+0
   \   000001B4   DED0               BEQ      ??MainSide_Paint_21
   \                     ??MainSide_Paint_23:
   \   000001B6   0021               MOVS     R1,#+0
   \   000001B8   A020               MOVS     R0,#+160
   \   000001BA   5378               LDRB     R3,[R2, #+1]
   \   000001BC   5B00               LSLS     R3,R3,#+1
   \   000001BE   1678               LDRB     R6,[R2, #+0]
   \   000001C0   1627               MOVS     R7,#+22
   \   000001C2   7E43               MULS     R6,R7,R6
   \   000001C4   414F               LDR      R7,??MainSide_Paint_0+0x18  ;; MainStage
   \   000001C6   BE19               ADDS     R6,R7,R6
   \   000001C8   F318               ADDS     R3,R6,R3
   \   000001CA   185E               LDRSH    R0,[R3, R0]
   \   000001CC   0304               LSLS     R3,R0,#+16
   \   000001CE   09D5               BPL      ??MainSide_Paint_24
   \   000001D0   2D20               MOVS     R0,#+45
   \   000001D2   03A9               ADD      R1,SP,#+12
   \   000001D4   0870               STRB     R0,[R1, #+0]
   \   000001D6   3F22               MOVS     R2,#+63
   \   000001D8   4A70               STRB     R2,[R1, #+1]
   \   000001DA   8A70               STRB     R2,[R1, #+2]
   \   000001DC   CA70               STRB     R2,[R1, #+3]
   \   000001DE   0871               STRB     R0,[R1, #+4]
   \   000001E0   0522               MOVS     R2,#+5
   \   000001E2   B6E7               B        ??MainSide_Paint_20
   \                     ??MainSide_Paint_24:
   \   000001E4   9278               LDRB     R2,[R2, #+2]
   \   000001E6   002A               CMP      R2,#+0
   \   000001E8   A8D0               BEQ      ??MainSide_Paint_19
   \   000001EA   03A9               ADD      R1,SP,#+12
   \   000001EC   ........           BL       sIntToStr
   \   000001F0   0200               MOVS     R2,R0
   \   000001F2   0020               MOVS     R0,#+0
   \                     ??MainSide_Paint_25:
   \   000001F4   0100               MOVS     R1,R0
   \   000001F6   0329               CMP      R1,#+3
   \   000001F8   ABD2               BCS      ??MainSide_Paint_20
   \   000001FA   029B               LDR      R3,[SP, #+8]
   \   000001FC   5918               ADDS     R1,R3,R1
   \   000001FE   7023               MOVS     R3,#+112
   \   00000200   CB5C               LDRB     R3,[R1, R3]
   \   00000202   002B               CMP      R3,#+0
   \   00000204   07D0               BEQ      ??MainSide_Paint_26
   \   00000206   1300               MOVS     R3,R2
   \   00000208   03AE               ADD      R6,SP,#+12
   \   0000020A   7031               ADDS     R1,R1,#+112
   \   0000020C   0978               LDRB     R1,[R1, #+0]
   \   0000020E   F154               STRB     R1,[R6, R3]
   \   00000210   521C               ADDS     R2,R2,#+1
   \   00000212   1206               LSLS     R2,R2,#+24
   \   00000214   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Paint_26:
   \   00000216   401C               ADDS     R0,R0,#+1
   \   00000218   0006               LSLS     R0,R0,#+24
   \   0000021A   000E               LSRS     R0,R0,#+24
   \   0000021C   EAE7               B        ??MainSide_Paint_25
    736                               
    737                               }
    738                       }
    739                      }
    740                    
    741                       //Linie
    742                       for (char i=0; i<ScrenLineNr; i++)
   \                     ??MainSide_Paint_22:
   \   0000021E   0025               MOVS     R5,#+0
   \   00000220   08E0               B        ??MainSide_Paint_27
    743                       {
    744                        if (ScreenPaternDesign[PaternDesign].Line[i].Width>0)
    745                        {
    746                            if (ScreenPaternDesign[PaternDesign].Line[i].Width>ScreenPaternDesign[PaternDesign].Line[i].Height)
    747                            {
    748                                H_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Width,1); // (char X, int Y, char lenght, char typ)
    749                            }else{
    750                                V_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Height,1); // (char X, int Y, char lenght, char typ)
   \                     ??MainSide_Paint_28:
   \   00000222   0123               MOVS     R3,#+1
   \   00000224   0A00               MOVS     R2,R1
   \   00000226   4178               LDRB     R1,[R0, #+1]
   \   00000228   0078               LDRB     R0,[R0, #+0]
   \   0000022A   ........           BL       V_line
    751                        
    752                            }
   \                     ??MainSide_Paint_29:
   \   0000022E   6D1C               ADDS     R5,R5,#+1
   \   00000230   2D06               LSLS     R5,R5,#+24
   \   00000232   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_27:
   \   00000234   2800               MOVS     R0,R5
   \   00000236   0228               CMP      R0,#+2
   \   00000238   15D2               BCS      ??MainSide_Paint_30
   \   0000023A   2000               MOVS     R0,R4
   \   0000023C   5821               MOVS     R1,#+88
   \   0000023E   4843               MULS     R0,R1,R0
   \   00000240   0099               LDR      R1,[SP, #+0]
   \   00000242   0818               ADDS     R0,R1,R0
   \   00000244   2900               MOVS     R1,R5
   \   00000246   8900               LSLS     R1,R1,#+2
   \   00000248   4018               ADDS     R0,R0,R1
   \   0000024A   4430               ADDS     R0,R0,#+68
   \   0000024C   8178               LDRB     R1,[R0, #+2]
   \   0000024E   0029               CMP      R1,#+0
   \   00000250   EDD0               BEQ      ??MainSide_Paint_29
   \   00000252   C178               LDRB     R1,[R0, #+3]
   \   00000254   8278               LDRB     R2,[R0, #+2]
   \   00000256   9142               CMP      R1,R2
   \   00000258   E3D2               BCS      ??MainSide_Paint_28
   \   0000025A   0123               MOVS     R3,#+1
   \   0000025C   4178               LDRB     R1,[R0, #+1]
   \   0000025E   0078               LDRB     R0,[R0, #+0]
   \   00000260   ........           BL       H_line
   \   00000264   E3E7               B        ??MainSide_Paint_29
    753                        }
    754                       }
    755                      
    756                                  
    757                         //przyciski
    758                      for (char i=0; i<ScrenButtonNr; i++)
   \                     ??MainSide_Paint_30:
   \   00000266   0025               MOVS     R5,#+0
   \   00000268   1DE0               B        ??MainSide_Paint_31
    759                      {
    760                        if ((ScreenPaternDesign[PaternDesign].Button[i].Width>0) && (ScreenLokal->Button[i].Hide==0))
   \                     ??MainSide_Paint_32:
   \   0000026A   2000               MOVS     R0,R4
   \   0000026C   5821               MOVS     R1,#+88
   \   0000026E   4843               MULS     R0,R1,R0
   \   00000270   0099               LDR      R1,[SP, #+0]
   \   00000272   0818               ADDS     R0,R1,R0
   \   00000274   2A00               MOVS     R2,R5
   \   00000276   9100               LSLS     R1,R2,#+2
   \   00000278   4118               ADDS     R1,R0,R1
   \   0000027A   8878               LDRB     R0,[R1, #+2]
   \   0000027C   0028               CMP      R0,#+0
   \   0000027E   0FD0               BEQ      ??MainSide_Paint_33
   \   00000280   D000               LSLS     R0,R2,#+3
   \   00000282   069A               LDR      R2,[SP, #+24]
   \   00000284   1018               ADDS     R0,R2,R0
   \   00000286   827C               LDRB     R2,[R0, #+18]
   \   00000288   D206               LSLS     R2,R2,#+27
   \   0000028A   09D4               BMI      ??MainSide_Paint_33
    761                        {
    762                                Button(ScreenLokal->Button[i].Text,
    763                                ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
    764                                ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
    765                                ScreenPaternDesign[PaternDesign].Button[i].Width,
    766                                ScreenPaternDesign[PaternDesign].Button[i].Height); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000028C   82B0               SUB      SP,SP,#+8
   \   0000028E   CA78               LDRB     R2,[R1, #+3]
   \   00000290   0092               STR      R2,[SP, #+0]
   \   00000292   8B78               LDRB     R3,[R1, #+2]
   \   00000294   4A78               LDRB     R2,[R1, #+1]
   \   00000296   0978               LDRB     R1,[R1, #+0]
   \   00000298   0B30               ADDS     R0,R0,#+11
   \   0000029A   ........           BL       Button
   \   0000029E   02B0               ADD      SP,SP,#+8
    767                       
    768                        }
    769                       }
   \                     ??MainSide_Paint_33:
   \   000002A0   6D1C               ADDS     R5,R5,#+1
   \   000002A2   2D06               LSLS     R5,R5,#+24
   \   000002A4   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_31:
   \   000002A6   2800               MOVS     R0,R5
   \   000002A8   0928               CMP      R0,#+9
   \   000002AA   DED3               BCC      ??MainSide_Paint_32
    770                      
    771                      
    772                      //Du¿a temperatura
    773          
    774                
    775                  
    776                }
    777            }
    778          }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??MainSide_Paint_2:
   \   000002AC   07B0               ADD      SP,SP,#+28
   \   000002AE   F0BC               POP      {R4-R7}
   \   000002B0   01BC               POP      {R0}
   \   000002B2   0047               BX       R0               ;; return
   \                     ??MainSide_Paint_0:
   \   000002B4   ........           DC32     g_PC_Connected
   \   000002B8   ........           DC32     TextToChangeLength + 136
   \   000002BC   ........           DC32     TextToChangeLength
   \   000002C0   ........           DC32     `?<Constant {129, 0}>` + 24
   \   000002C4   ........           DC32     `?<Constant {129, 0}>` + 992
   \   000002C8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002CC   ........           DC32     MainStage
    779          
    780          
    781          
    782          
    783          //*-----------------------------------------------------------------------------
    784          //* Nazwa funkcji :    Message
    785          //* Funkcja wywietlenia wiadomoci   
    786          //*-----------------------------------------------------------------------------
    787          //*  String   - wskanik na tekst
    788          //*  StringLength - d³ugoæ tekstu
    789          //*-----------------------------------------------------------------------------
    790          #define MAX_LITER_W_LINI   14

   \                                 In section Debug.txt, align 4, keep-with-next
    791          void MESSAGE(char *String)
    792          {
   \                     MESSAGE:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   9EB0               SUB      SP,SP,#+120
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   02E0               B        ??MESSAGE_0
    793            
    794               char StrTmp[8][15];
    795               char StringLength=0;
    796               
    797               while ((String[StringLength]>0) && (StringLength<250)) StringLength++;                             //okrelenie d³ugoci stringu         
   \                     ??MESSAGE_1:
   \   00000008   401C               ADDS     R0,R0,#+1
   \   0000000A   0006               LSLS     R0,R0,#+24
   \   0000000C   000E               LSRS     R0,R0,#+24
   \                     ??MESSAGE_0:
   \   0000000E   0100               MOVS     R1,R0
   \   00000010   1E9A               LDR      R2,[SP, #+120]
   \   00000012   515C               LDRB     R1,[R2, R1]
   \   00000014   0029               CMP      R1,#+0
   \   00000016   02D0               BEQ      ??MESSAGE_2
   \   00000018   0100               MOVS     R1,R0
   \   0000001A   FA29               CMP      R1,#+250
   \   0000001C   F4D3               BCC      ??MESSAGE_1
    798               if (StringLength>250) StringLength=250;
   \                     ??MESSAGE_2:
   \   0000001E   0100               MOVS     R1,R0
   \   00000020   FB29               CMP      R1,#+251
   \   00000022   00D3               BCC      ??MESSAGE_3
   \   00000024   FA20               MOVS     R0,#+250
    799              char znak=0;
   \                     ??MESSAGE_3:
   \   00000026   0021               MOVS     R1,#+0
    800              char ZWL=0; //znak w linii
    801              char SPC=0; //spacja
    802              char Wiersz=0;
   \   00000028   0C00               MOVS     R4,R1
   \   0000002A   3DE0               B        ??MESSAGE_4
    803              while (znak<StringLength)
    804              {
    805                 ZWL=0;
    806                 SPC=znak;
    807                 while ((ZWL<MAX_LITER_W_LINI+1) && (znak+ZWL<=StringLength))
    808                 {
    809                     if (String[znak+ZWL]=='\n')     //je¿eli nastêpna linia
    810                     {
    811                       SPC=znak+ZWL;
    812                       break; 
    813                     }else if((String[znak+ZWL]==0) || (String[znak+ZWL]==' ') || ((String[znak+ZWL]=='.') && (String[znak+ZWL+1]!=' ')))     //je¿eli spacja lub kropka bez spacji na koñcu linii
    814                     {  
    815                        SPC=znak+ZWL;
    816                     }  
    817                     ZWL++;
    818                 }
    819                 if(znak+ZWL>=StringLength) SPC=StringLength;
    820                 
    821                 ZWL=0;
    822                 char ZWL=0;
    823                 while ((znak<SPC) && (ZWL<MAX_LITER_W_LINI))  
    824                 {
    825                   StrTmp[Wiersz][ZWL++]=String[znak++];
   \                     ??MESSAGE_5:
   \   0000002C   1700               MOVS     R7,R2
   \   0000002E   2500               MOVS     R5,R4
   \   00000030   0F26               MOVS     R6,#+15
   \   00000032   7543               MULS     R5,R6,R5
   \   00000034   6E46               MOV      R6,SP
   \   00000036   7619               ADDS     R6,R6,R5
   \   00000038   B446               MOV      R12,R6
   \   0000003A   0E00               MOVS     R6,R1
   \   0000003C   1E9D               LDR      R5,[SP, #+120]
   \   0000003E   AD5D               LDRB     R5,[R5, R6]
   \   00000040   6646               MOV      R6,R12
   \   00000042   F555               STRB     R5,[R6, R7]
   \   00000044   491C               ADDS     R1,R1,#+1
   \   00000046   0906               LSLS     R1,R1,#+24
   \   00000048   090E               LSRS     R1,R1,#+24
   \   0000004A   521C               ADDS     R2,R2,#+1
   \   0000004C   1206               LSLS     R2,R2,#+24
   \   0000004E   120E               LSRS     R2,R2,#+24
    826                 }
   \                     ??MESSAGE_6:
   \   00000050   0D00               MOVS     R5,R1
   \   00000052   1B06               LSLS     R3,R3,#+24
   \   00000054   1B0E               LSRS     R3,R3,#+24
   \   00000056   9D42               CMP      R5,R3
   \   00000058   02D2               BCS      ??MESSAGE_7
   \   0000005A   1500               MOVS     R5,R2
   \   0000005C   0E2D               CMP      R5,#+14
   \   0000005E   E5D3               BCC      ??MESSAGE_5
    827                 StrTmp[Wiersz][ZWL]=0;
   \                     ??MESSAGE_7:
   \   00000060   2300               MOVS     R3,R4
   \   00000062   0F25               MOVS     R5,#+15
   \   00000064   6B43               MULS     R3,R5,R3
   \   00000066   6D46               MOV      R5,SP
   \   00000068   EB18               ADDS     R3,R5,R3
   \   0000006A   0025               MOVS     R5,#+0
   \   0000006C   9D54               STRB     R5,[R3, R2]
    828                 if (String[znak]==' ') znak++;
   \   0000006E   0A00               MOVS     R2,R1
   \   00000070   1E9B               LDR      R3,[SP, #+120]
   \   00000072   9A5C               LDRB     R2,[R3, R2]
   \   00000074   202A               CMP      R2,#+32
   \   00000076   02D1               BNE      ??MESSAGE_8
   \   00000078   491C               ADDS     R1,R1,#+1
   \   0000007A   0906               LSLS     R1,R1,#+24
   \   0000007C   090E               LSRS     R1,R1,#+24
    829                 if (String[znak]=='\n') znak++;
   \                     ??MESSAGE_8:
   \   0000007E   0A00               MOVS     R2,R1
   \   00000080   9A5C               LDRB     R2,[R3, R2]
   \   00000082   0A2A               CMP      R2,#+10
   \   00000084   02D1               BNE      ??MESSAGE_9
   \   00000086   491C               ADDS     R1,R1,#+1
   \   00000088   0906               LSLS     R1,R1,#+24
   \   0000008A   090E               LSRS     R1,R1,#+24
    830                 if (String[znak]==' ') znak++;
   \                     ??MESSAGE_9:
   \   0000008C   0A00               MOVS     R2,R1
   \   0000008E   9A5C               LDRB     R2,[R3, R2]
   \   00000090   202A               CMP      R2,#+32
   \   00000092   02D1               BNE      ??MESSAGE_10
   \   00000094   491C               ADDS     R1,R1,#+1
   \   00000096   0906               LSLS     R1,R1,#+24
   \   00000098   090E               LSRS     R1,R1,#+24
    831                 
    832                 
    833                 
    834                 if (znak<StringLength)Wiersz++;
   \                     ??MESSAGE_10:
   \   0000009A   0A00               MOVS     R2,R1
   \   0000009C   0300               MOVS     R3,R0
   \   0000009E   9A42               CMP      R2,R3
   \   000000A0   02D2               BCS      ??MESSAGE_4
   \   000000A2   641C               ADDS     R4,R4,#+1
   \   000000A4   2406               LSLS     R4,R4,#+24
   \   000000A6   240E               LSRS     R4,R4,#+24
   \                     ??MESSAGE_4:
   \   000000A8   0A00               MOVS     R2,R1
   \   000000AA   0300               MOVS     R3,R0
   \   000000AC   9A42               CMP      R2,R3
   \   000000AE   27D2               BCS      ??MESSAGE_11
   \   000000B0   0022               MOVS     R2,#+0
   \   000000B2   0B00               MOVS     R3,R1
   \   000000B4   0EE0               B        ??MESSAGE_12
   \                     ??MESSAGE_13:
   \   000000B6   3E00               MOVS     R6,R7
   \   000000B8   06D0               BEQ      ??MESSAGE_14
   \   000000BA   202E               CMP      R6,#+32
   \   000000BC   04D0               BEQ      ??MESSAGE_14
   \   000000BE   2E2E               CMP      R6,#+46
   \   000000C0   05D1               BNE      ??MESSAGE_15
   \   000000C2   6D78               LDRB     R5,[R5, #+1]
   \   000000C4   202D               CMP      R5,#+32
   \   000000C6   02D0               BEQ      ??MESSAGE_15
   \                     ??MESSAGE_14:
   \   000000C8   0B00               MOVS     R3,R1
   \   000000CA   1500               MOVS     R5,R2
   \   000000CC   5B19               ADDS     R3,R3,R5
   \                     ??MESSAGE_15:
   \   000000CE   521C               ADDS     R2,R2,#+1
   \   000000D0   1206               LSLS     R2,R2,#+24
   \   000000D2   120E               LSRS     R2,R2,#+24
   \                     ??MESSAGE_12:
   \   000000D4   0D00               MOVS     R5,R1
   \   000000D6   1600               MOVS     R6,R2
   \   000000D8   AE19               ADDS     R6,R5,R6
   \   000000DA   1500               MOVS     R5,R2
   \   000000DC   0F2D               CMP      R5,#+15
   \   000000DE   09D2               BCS      ??MESSAGE_16
   \   000000E0   0500               MOVS     R5,R0
   \   000000E2   B542               CMP      R5,R6
   \   000000E4   06DB               BLT      ??MESSAGE_16
   \   000000E6   1E9D               LDR      R5,[SP, #+120]
   \   000000E8   AD19               ADDS     R5,R5,R6
   \   000000EA   2F78               LDRB     R7,[R5, #+0]
   \   000000EC   0A2F               CMP      R7,#+10
   \   000000EE   E2D1               BNE      ??MESSAGE_13
   \   000000F0   0B00               MOVS     R3,R1
   \   000000F2   9B18               ADDS     R3,R3,R2
   \                     ??MESSAGE_16:
   \   000000F4   0200               MOVS     R2,R0
   \   000000F6   9642               CMP      R6,R2
   \   000000F8   00DB               BLT      ??MESSAGE_17
   \   000000FA   0300               MOVS     R3,R0
   \                     ??MESSAGE_17:
   \   000000FC   0022               MOVS     R2,#+0
   \   000000FE   A7E7               B        ??MESSAGE_6
    835              }
    836               
    837               
    838          
    839              CleanCanvas();
   \                     ??MESSAGE_11:
   \   00000100   ........           BL       CleanCanvas
    840              
    841              char BazeY=56+10*(Wiersz/2);
   \   00000104   2000               MOVS     R0,R4
   \   00000106   0500               MOVS     R5,R0
   \   00000108   2D06               LSLS     R5,R5,#+24
   \   0000010A   2D0E               LSRS     R5,R5,#+24
   \   0000010C   6D08               LSRS     R5,R5,#+1
   \   0000010E   0A26               MOVS     R6,#+10
   \   00000110   6E43               MULS     R6,R5,R6
   \   00000112   3836               ADDS     R6,R6,#+56
   \   00000114   3606               LSLS     R6,R6,#+24
   \   00000116   360E               LSRS     R6,R6,#+24
    842             
    843               Label(" INFO ",2,2,BazeY+17,15,59,0,127,1);      //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   0120               MOVS     R0,#+1
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   7F21               MOVS     R1,#+127
   \   00000120   0020               MOVS     R0,#+0
   \   00000122   03B4               PUSH     {R0,R1}
   \   00000124   3B21               MOVS     R1,#+59
   \   00000126   0F20               MOVS     R0,#+15
   \   00000128   03B4               PUSH     {R0,R1}
   \   0000012A   3300               MOVS     R3,R6
   \   0000012C   1133               ADDS     R3,R3,#+17
   \   0000012E   0222               MOVS     R2,#+2
   \   00000130   1100               MOVS     R1,R2
   \   00000132   3348               LDR      R0,??MESSAGE_18  ;; `?<Constant " INFO ">`
   \   00000134   ........           BL       Label
   \   00000138   06B0               ADD      SP,SP,#+24
    844              
    845               
    846               
    847              for (char i=0; i<=Wiersz; i++)
   \   0000013A   0027               MOVS     R7,#+0
   \   0000013C   1AE0               B        ??MESSAGE_19
    848              {
    849                  Label(StrTmp[i],0,2,BazeY,15,56,0,127,0);      //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??MESSAGE_20:
   \   0000013E   82B0               SUB      SP,SP,#+8
   \   00000140   0020               MOVS     R0,#+0
   \   00000142   0090               STR      R0,[SP, #+0]
   \   00000144   7F21               MOVS     R1,#+127
   \   00000146   03B4               PUSH     {R0,R1}
   \   00000148   3821               MOVS     R1,#+56
   \   0000014A   0F20               MOVS     R0,#+15
   \   0000014C   03B4               PUSH     {R0,R1}
   \   0000014E   3300               MOVS     R3,R6
   \   00000150   0222               MOVS     R2,#+2
   \   00000152   0021               MOVS     R1,#+0
   \   00000154   8C46               MOV      R12,R1
   \   00000156   3800               MOVS     R0,R7
   \   00000158   0F21               MOVS     R1,#+15
   \   0000015A   4843               MULS     R0,R1,R0
   \   0000015C   06A9               ADD      R1,SP,#+24
   \   0000015E   0818               ADDS     R0,R1,R0
   \   00000160   6146               MOV      R1,R12
   \   00000162   ........           BL       Label
   \   00000166   06B0               ADD      SP,SP,#+24
    850                  BazeY=BazeY-10;
   \   00000168   0A3E               SUBS     R6,R6,#+10
   \   0000016A   3606               LSLS     R6,R6,#+24
   \   0000016C   360E               LSRS     R6,R6,#+24
    851              }
   \   0000016E   7F1C               ADDS     R7,R7,#+1
   \   00000170   3F06               LSLS     R7,R7,#+24
   \   00000172   3F0E               LSRS     R7,R7,#+24
   \                     ??MESSAGE_19:
   \   00000174   2000               MOVS     R0,R4
   \   00000176   3900               MOVS     R1,R7
   \   00000178   8842               CMP      R0,R1
   \   0000017A   E0D2               BCS      ??MESSAGE_20
    852             
    853              
    854              
    855              char PozD=BazeY+3; 
   \   0000017C   3000               MOVS     R0,R6
   \   0000017E   C01C               ADDS     R0,R0,#+3
   \   00000180   0006               LSLS     R0,R0,#+24
   \   00000182   000E               LSRS     R0,R0,#+24
    856              char PozG=BazeY+10*(Wiersz+1)+15; 
   \   00000184   0A21               MOVS     R1,#+10
   \   00000186   4C43               MULS     R4,R1,R4
   \   00000188   3419               ADDS     R4,R6,R4
   \   0000018A   1934               ADDS     R4,R4,#+25
   \   0000018C   2406               LSLS     R4,R4,#+24
   \   0000018E   240E               LSRS     R4,R4,#+24
    857              char Wys=PozG-PozD;
   \   00000190   2100               MOVS     R1,R4
   \   00000192   0200               MOVS     R2,R0
   \   00000194   8F1A               SUBS     R7,R1,R2
   \   00000196   3F06               LSLS     R7,R7,#+24
   \   00000198   3F0E               LSRS     R7,R7,#+24
    858              V_line(0,PozD-2,Wys+14,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   0000019A   801E               SUBS     R0,R0,#+2
   \   0000019C   0600               MOVS     R6,R0
   \   0000019E   0E37               ADDS     R7,R7,#+14
   \   000001A0   0123               MOVS     R3,#+1
   \   000001A2   3A00               MOVS     R2,R7
   \   000001A4   1206               LSLS     R2,R2,#+24
   \   000001A6   120E               LSRS     R2,R2,#+24
   \   000001A8   3100               MOVS     R1,R6
   \   000001AA   0020               MOVS     R0,#+0
   \   000001AC   ........           BL       V_line
    859              V_line(63,PozD-2,Wys+14,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001B0   0123               MOVS     R3,#+1
   \   000001B2   3A00               MOVS     R2,R7
   \   000001B4   1206               LSLS     R2,R2,#+24
   \   000001B6   120E               LSRS     R2,R2,#+24
   \   000001B8   3100               MOVS     R1,R6
   \   000001BA   3F20               MOVS     R0,#+63
   \   000001BC   ........           BL       V_line
    860              H_line(0,PozG+12,74,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001C0   0123               MOVS     R3,#+1
   \   000001C2   4A22               MOVS     R2,#+74
   \   000001C4   2100               MOVS     R1,R4
   \   000001C6   0C31               ADDS     R1,R1,#+12
   \   000001C8   0020               MOVS     R0,#+0
   \   000001CA   ........           BL       H_line
    861              H_line(2,PozG,60,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001CE   0123               MOVS     R3,#+1
   \   000001D0   3C22               MOVS     R2,#+60
   \   000001D2   2100               MOVS     R1,R4
   \   000001D4   0220               MOVS     R0,#+2
   \   000001D6   ........           BL       H_line
    862              H_line(0,PozD-2,64,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001DA   0123               MOVS     R3,#+1
   \   000001DC   4022               MOVS     R2,#+64
   \   000001DE   3100               MOVS     R1,R6
   \   000001E0   0020               MOVS     R0,#+0
   \   000001E2   ........           BL       H_line
    863          
    864              
    865              g_Message=g_counter+(5+(Wiersz/2))*700;         //czas wywietlania wiadomoci (jednostka- ms)
   \   000001E6   074A               LDR      R2,??MESSAGE_18+0x4  ;; g_Message
   \   000001E8   0748               LDR      R0,??MESSAGE_18+0x8  ;; g_counter
   \   000001EA   03C8               LDM      R0!,{R0,R1}
   \   000001EC   6D1D               ADDS     R5,R5,#+5
   \   000001EE   AF21               MOVS     R1,#+175
   \   000001F0   8900               LSLS     R1,R1,#+2        ;; #+700
   \   000001F2   4D43               MULS     R5,R1,R5
   \   000001F4   4019               ADDS     R0,R0,R5
   \   000001F6   1060               STR      R0,[R2, #+0]
    866          }
   \   000001F8   1FB0               ADD      SP,SP,#+124
   \   000001FA   F0BC               POP      {R4-R7}
   \   000001FC   01BC               POP      {R0}
   \   000001FE   0047               BX       R0               ;; return
   \                     ??MESSAGE_18:
   \   00000200   ........           DC32     `?<Constant " INFO ">`
   \   00000204   ........           DC32     g_Message
   \   00000208   ........           DC32     g_counter
    867          
    868          
    869          
    870          
    871          
    872          
    873          
    874          
    875          
    876          
    877          //*-----------------------------------------------------------------------------
    878          //* Nazwa funkcji :    MainSide_Refresh
    879          //* Funkcja strony g³ównej menu
    880          //*-----------------------------------------------------------------------------
    881          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    882          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    883          void MESSAGE_Refresh(void)
    884          {
   \                     MESSAGE_Refresh:
   \   00000000   30B5               PUSH     {R4,R5,LR}
   \   00000002   87B0               SUB      SP,SP,#+28
    885          
    886             
    887             if ((MainSide_puls==0) || (MainSide_puls>1))
   \   00000004   214C               LDR      R4,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   00000006   2578               LDRB     R5,[R4, #+0]
   \   00000008   002D               CMP      R5,#+0
   \   0000000A   01D0               BEQ      ??MESSAGE_Refresh_1
   \   0000000C   022D               CMP      R5,#+2
   \   0000000E   17D3               BCC      ??MESSAGE_Refresh_2
    888              { 
    889                char ekran1[2][13] = {
    890                           {0,0,224,24,232,244,244,244,232,24,224,0,0},
    891                            {0,0,0,3,2,5,5,5,2,3,0,0,0}
    892                            };
   \                     ??MESSAGE_Refresh_1:
   \   00000010   6846               MOV      R0,SP
   \   00000012   1F49               LDR      R1,??MESSAGE_Refresh_0+0x4  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`
   \   00000014   1C22               MOVS     R2,#+28
   \   00000016   ........           BL       __aeabi_memcpy4
    893                
    894                for (char i=0; i<=12; i++)
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   0DE0               B        ??MESSAGE_Refresh_3
    895                {
    896                   
    897                    LCD_Canvas[0][i]=ekran1[0][i];
   \                     ??MESSAGE_Refresh_4:
   \   0000001E   0A00               MOVS     R2,R1
   \   00000020   1C48               LDR      R0,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   00000022   6B46               MOV      R3,SP
   \   00000024   9B5C               LDRB     R3,[R3, R2]
   \   00000026   8354               STRB     R3,[R0, R2]
    898                    LCD_Canvas[1][i]=ekran1[1][i];
   \   00000028   8018               ADDS     R0,R0,R2
   \   0000002A   8030               ADDS     R0,R0,#+128
   \   0000002C   6B46               MOV      R3,SP
   \   0000002E   9A18               ADDS     R2,R3,R2
   \   00000030   527B               LDRB     R2,[R2, #+13]
   \   00000032   0270               STRB     R2,[R0, #+0]
    899                }
   \   00000034   491C               ADDS     R1,R1,#+1
   \   00000036   0906               LSLS     R1,R1,#+24
   \   00000038   090E               LSRS     R1,R1,#+24
   \                     ??MESSAGE_Refresh_3:
   \   0000003A   0800               MOVS     R0,R1
   \   0000003C   0D28               CMP      R0,#+13
   \   0000003E   EED3               BCC      ??MESSAGE_Refresh_4
    900                
    901              }
    902              if ((MainSide_puls==1))
   \                     ??MESSAGE_Refresh_2:
   \   00000040   012D               CMP      R5,#+1
   \   00000042   17D1               BNE      ??MESSAGE_Refresh_5
    903              {
    904                
    905                
    906                char ekran2[2][13] = {
    907                            {240,28,230,250,251,253,253,253,251,250,230,28,240},
    908                            {1,7,12,11,27,23,23,23,27,11,12,7,1},
    909                            };
   \   00000044   6846               MOV      R0,SP
   \   00000046   1449               LDR      R1,??MESSAGE_Refresh_0+0xC  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244` + 28
   \   00000048   1C22               MOVS     R2,#+28
   \   0000004A   ........           BL       __aeabi_memcpy4
    910                
    911                for (char i=0; i<=12; i++)
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   0DE0               B        ??MESSAGE_Refresh_6
    912                {
    913                   
    914                    LCD_Canvas[0][i]=ekran2[0][i];
   \                     ??MESSAGE_Refresh_7:
   \   00000052   0A00               MOVS     R2,R1
   \   00000054   0F48               LDR      R0,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   00000056   6B46               MOV      R3,SP
   \   00000058   9B5C               LDRB     R3,[R3, R2]
   \   0000005A   8354               STRB     R3,[R0, R2]
    915                    LCD_Canvas[1][i]=ekran2[1][i];
   \   0000005C   8018               ADDS     R0,R0,R2
   \   0000005E   8030               ADDS     R0,R0,#+128
   \   00000060   6B46               MOV      R3,SP
   \   00000062   9A18               ADDS     R2,R3,R2
   \   00000064   527B               LDRB     R2,[R2, #+13]
   \   00000066   0270               STRB     R2,[R0, #+0]
    916                }         
   \   00000068   491C               ADDS     R1,R1,#+1
   \   0000006A   0906               LSLS     R1,R1,#+24
   \   0000006C   090E               LSRS     R1,R1,#+24
   \                     ??MESSAGE_Refresh_6:
   \   0000006E   0800               MOVS     R0,R1
   \   00000070   0D28               CMP      R0,#+13
   \   00000072   EED3               BCC      ??MESSAGE_Refresh_7
    917              }
    918               
    919              if (MainSide_puls>3) {MainSide_puls=0;} else {MainSide_puls++;} 
   \                     ??MESSAGE_Refresh_5:
   \   00000074   042D               CMP      R5,#+4
   \   00000076   02D3               BCC      ??MESSAGE_Refresh_8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   2070               STRB     R0,[R4, #+0]
   \   0000007C   01E0               B        ??MESSAGE_Refresh_9
   \                     ??MESSAGE_Refresh_8:
   \   0000007E   6D1C               ADDS     R5,R5,#+1
   \   00000080   2570               STRB     R5,[R4, #+0]
    920            
    921          }//_______________________ Koniec funkcji MainSide_Refresh __________________________
   \                     ??MESSAGE_Refresh_9:
   \   00000082   07B0               ADD      SP,SP,#+28
   \   00000084   30BC               POP      {R4,R5}
   \   00000086   01BC               POP      {R0}
   \   00000088   0047               BX       R0               ;; return
   \   0000008A   C046               Nop      
   \                     ??MESSAGE_Refresh_0:
   \   0000008C   ........           DC32     MainSide_puls
   \   00000090   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`
   \   00000094   ........           DC32     LCD_Canvas
   \   00000098   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244` + 28
    922          
    923          
    924          
    925          
    926          
    927          
    928          
    929          
    930          
    931          
    932          //*-----------------------------------------------------------------------------
    933          //* Nazwa funkcji :    MainSide_Paint
    934          //* Funkcja strony g³ównej menu
    935          //*-----------------------------------------------------------------------------
    936          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    937          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    938          void MainSide_Event(_Screen* ScreenLokal)
    939          {
   \                     MainSide_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
    940            signed char BODP=-1;
    941            
    942            if (!g_PC_Connected)
   \   00000004   9048               LDR      R0,??MainSide_Event_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   69D1               BNE      ??MainSide_Event_1
   \   0000000C   0025               MOVS     R5,#+0
    943            {
    944            char ChangeSheet=0;
    945            char MenuPaintExecute=0;
   \   0000000E   6846               MOV      R0,SP
   \   00000010   2900               MOVS     R1,R5
   \   00000012   0171               STRB     R1,[R0, #+4]
    946            static char Xdown=0;
    947            
    948            char PaternDesign=(ScreenLokal->PaternDesign);
   \   00000014   0498               LDR      R0,[SP, #+16]
   \   00000016   0078               LDRB     R0,[R0, #+0]
   \   00000018   0090               STR      R0,[SP, #+0]
    949            
    950            const _ScreenPaternDesign *ScreenPaternDesign;
    951            if (CurrentSheet==0) 
   \   0000001A   8C4C               LDR      R4,??MainSide_Event_0+0x4  ;; TextToChangeLength
   \   0000001C   2079               LDRB     R0,[R4, #+4]
   \   0000001E   0028               CMP      R0,#+0
   \   00000020   02D1               BNE      ??MainSide_Event_2
    952            {
    953              ScreenPaternDesign=ScreenSetTab_0;
   \   00000022   8B48               LDR      R0,??MainSide_Event_0+0x8  ;; `?<Constant {129, 0}>` + 24
   \   00000024   0290               STR      R0,[SP, #+8]
   \   00000026   25E0               B        ??MainSide_Event_3
    954            }else{
    955              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Event_2:
   \   00000028   8A48               LDR      R0,??MainSide_Event_0+0xC  ;; `?<Constant {129, 0}>` + 992
   \   0000002A   0290               STR      R0,[SP, #+8]
    956              if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1)
   \   0000002C   0800               MOVS     R0,R1
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0F21               MOVS     R1,#+15
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   8848               LDR      R0,??MainSide_Event_0+0x10  ;; Y_down
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   435E               LDRSH    R3,[R0, R1]
   \   0000003A   8848               LDR      R0,??MainSide_Event_0+0x14  ;; X_down
   \   0000003C   425E               LDRSH    R2,[R0, R1]
   \   0000003E   8848               LDR      R0,??MainSide_Event_0+0x18  ;; Y_up
   \   00000040   415E               LDRSH    R1,[R0, R1]
   \   00000042   8848               LDR      R0,??MainSide_Event_0+0x1C  ;; X_up
   \   00000044   0026               MOVS     R6,#+0
   \   00000046   805F               LDRSH    R0,[R0, R6]
   \   00000048   ........           BL       List_Event
   \   0000004C   04B0               ADD      SP,SP,#+16
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   C943               MVNS     R1,R1            ;; #-1
   \   00000052   8842               CMP      R0,R1
   \   00000054   0ED1               BNE      ??MainSide_Event_3
    957              {
    958                   if (SheetHistoryIndex>0)
   \   00000056   E079               LDRB     R0,[R4, #+7]
   \   00000058   0028               CMP      R0,#+0
   \   0000005A   07D0               BEQ      ??MainSide_Event_4
    959                    {
    960                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000005C   401E               SUBS     R0,R0,#+1
   \   0000005E   E071               STRB     R0,[R4, #+7]
   \   00000060   0006               LSLS     R0,R0,#+24
   \   00000062   000E               LSRS     R0,R0,#+24
   \   00000064   2018               ADDS     R0,R4,R0
   \   00000066   2030               ADDS     R0,R0,#+32
   \   00000068   0078               LDRB     R0,[R0, #+0]
   \   0000006A   2071               STRB     R0,[R4, #+4]
    961                    } 
    962                   ChangeSheet=1;
   \                     ??MainSide_Event_4:
   \   0000006C   0121               MOVS     R1,#+1
   \   0000006E   0D00               MOVS     R5,R1
    963                   MenuPaintExecute=1;
   \   00000070   6846               MOV      R0,SP
   \   00000072   0171               STRB     R1,[R0, #+4]
    964              }
    965            }  
    966            
    967            
    968            
    969            if (ChangeSheet==0)
   \                     ??MainSide_Event_3:
   \   00000074   002D               CMP      R5,#+0
   \   00000076   2DD1               BNE      ??MainSide_Event_5
   \   00000078   7A48               LDR      R0,??MainSide_Event_0+0x1C  ;; X_up
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   405E               LDRSH    R0,[R0, R1]
   \   0000007E   0228               CMP      R0,#+2
   \   00000080   32DB               BLT      ??MainSide_Event_6
   \   00000082   0F28               CMP      R0,#+15
   \   00000084   30DA               BGE      ??MainSide_Event_6
   \   00000086   7648               LDR      R0,??MainSide_Event_0+0x18  ;; Y_up
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   7428               CMP      R0,#+116
   \   0000008C   2CDB               BLT      ??MainSide_Event_6
   \   0000008E   8028               CMP      R0,#+128
   \   00000090   2ADA               BGE      ??MainSide_Event_6
    970            {
    971            
    972            
    973              //akcja przycisku menu
    974              if ((X_up>1) && (X_up<15) && (Y_up>115) && (Y_up<128))
    975              {
    976                #ifdef  NOPASS
    977                  MenuLevel=11;
    978                #else
    979                  if ((g_level==0) && (g_NeedPass==1))
   \   00000092   7548               LDR      R0,??MainSide_Event_0+0x20  ;; g_level
   \   00000094   0078               LDRB     R0,[R0, #+0]
   \   00000096   0028               CMP      R0,#+0
   \   00000098   06D1               BNE      ??MainSide_Event_7
   \   0000009A   7448               LDR      R0,??MainSide_Event_0+0x24  ;; g_NeedPass
   \   0000009C   0078               LDRB     R0,[R0, #+0]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   02D1               BNE      ??MainSide_Event_7
    980                  {
    981                    MenuLevel=10;
   \   000000A2   0A20               MOVS     R0,#+10
   \   000000A4   2065               STR      R0,[R4, #+80]
   \   000000A6   01E0               B        ??MainSide_Event_8
    982                  }else{
    983                    MenuLevel=11;
   \                     ??MainSide_Event_7:
   \   000000A8   0B20               MOVS     R0,#+11
   \   000000AA   2065               STR      R0,[R4, #+80]
    984                  }
    985                #endif
    986                
    987                MenuPaintExecute=1;
   \                     ??MainSide_Event_8:
   \   000000AC   6846               MOV      R0,SP
   \   000000AE   0121               MOVS     R1,#+1
   \   000000B0   0171               STRB     R1,[R0, #+4]
    988                  
    989                if ((!(AT91C_IFLASH_MEM->Config.SoundOff))) {
   \   000000B2   6F48               LDR      R0,??MainSide_Event_0+0x28  ;; 0x13d7e9
   \   000000B4   0078               LDRB     R0,[R0, #+0]
   \   000000B6   0028               CMP      R0,#+0
   \   000000B8   0AD1               BNE      ??MainSide_Event_9
    990                  ButtonBipCounter=g_counter+8;
   \   000000BA   6E4A               LDR      R2,??MainSide_Event_0+0x2C  ;; ButtonBipCounter
   \   000000BC   6E48               LDR      R0,??MainSide_Event_0+0x30  ;; g_counter
   \   000000BE   03C8               LDM      R0!,{R0,R1}
   \   000000C0   0023               MOVS     R3,#+0
   \   000000C2   0830               ADDS     R0,R0,#+8
   \   000000C4   5941               ADCS     R1,R1,R3
   \   000000C6   03C2               STM      R2!,{R0,R1}
    991                    AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;
                                                      ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000C8   6C48               LDR      R0,??MainSide_Event_0+0x34  ;; 0xfffff430
   \   000000CA   8021               MOVS     R1,#+128
   \   000000CC   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000CE   0160               STR      R1,[R0, #+0]
    992                  } 
    993                Xdown=0;
   \                     ??MainSide_Event_9:
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   2073               STRB     R0,[R4, #+12]
    994              }
    995              else  if ((X_down>1) && (X_down<15) && (Y_down>115) && (Y_down<128))
    996              {
    997                 if ((!(AT91C_IFLASH_MEM->Config.SoundOff)) && (Xdown==0)) {
    998                  ButtonBipCounter=g_counter+8;
    999                    AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;
                                                      ^
Warning[Pe068]: integer conversion resulted in a change of sign
   1000                  } 
   1001                 Xdown=1;
   1002              }
   1003              else
   1004              {
   1005          
   1006                Xdown=0;
   1007                
   1008              //STREFY przycisków
   1009                if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Event(ScreenLokal);}
   1010                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Event(ScreenLokal);}
   1011                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {Timetable_Event(CurrentSheet);}
   1012                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {Timetable_Event(CurrentSheet);}    
   1013                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Event(CurrentSheet);}
   1014                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Event(CurrentSheet);}   
   1015                else {  
   1016                
   1017                
   1018                    for (char i=0; i<ScrenButtonNr; i++)
   1019                    {
   1020                      
   1021                      if ((ScreenPaternDesign[PaternDesign].Button[i].Width>0) && (ScreenLokal->Button[i].Hide==0))
   1022                      {
   1023                      
   1024                            BODP=Button(ScreenLokal->Button[i].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1025                            ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   1026                            ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   1027                            ScreenPaternDesign[PaternDesign].Button[i].Width,
   1028                            ScreenPaternDesign[PaternDesign].Button[i].Height
   1029                            );
   1030                         
   1031                          MenuPaintExecute=1;  
   1032                         if (BODP==1)
   1033                           {   
   1034                            //je¿eli ustawiona akcja otwarcia strony 
   1035                            if (ScreenLokal->Button[i].OpenPage) 
   1036                             {
   1037                               CurrentSheet=ScreenLokal->Button[i].OpenPage-1;
   1038                               
   1039                             }
   1040                           }
   1041                          if (BODP==2)
   1042                           {
   1043                             if (MainStage.StageButton[i+1+(10*CurrentSheet)]==0) 
   1044                             {
   1045                               MainStage.StageButton[i+1+(10*CurrentSheet)]=1;
   1046                               g_NextTimeProgram=g_counter+ProgramPeriod;
   1047                               Program(&gProg);
   1048                             }
   1049                            
   1050                             
   1051                           }else{
   1052                             MainStage.StageButton[i+1+(10*CurrentSheet)]=0;
   1053                             
   1054                           }
   1055                      }
   1056                    }
   1057                }
   1058              }
   1059          
   1060            
   1061            }
   1062            
   1063            if (MenuPaintExecute) MenuPaint();
   \                     ??MainSide_Event_5:
   \   000000D4   6846               MOV      R0,SP
   \   000000D6   0079               LDRB     R0,[R0, #+4]
   \   000000D8   0028               CMP      R0,#+0
   \   000000DA   01D0               BEQ      ??MainSide_Event_1
   \   000000DC   ........           BL       MenuPaint
   1064              
   1065            }
   1066          }//_______________________ Koniec funkcji MainSide_Event __________________________
   \                     ??MainSide_Event_1:
   \   000000E0   05B0               ADD      SP,SP,#+20
   \   000000E2   F0BC               POP      {R4-R7}
   \   000000E4   01BC               POP      {R0}
   \   000000E6   0047               BX       R0               ;; return
   \                     ??MainSide_Event_6:
   \   000000E8   5C48               LDR      R0,??MainSide_Event_0+0x14  ;; X_down
   \   000000EA   405E               LDRSH    R0,[R0, R1]
   \   000000EC   0228               CMP      R0,#+2
   \   000000EE   1ADB               BLT      ??MainSide_Event_10
   \   000000F0   0F28               CMP      R0,#+15
   \   000000F2   18DA               BGE      ??MainSide_Event_10
   \   000000F4   5848               LDR      R0,??MainSide_Event_0+0x10  ;; Y_down
   \   000000F6   405E               LDRSH    R0,[R0, R1]
   \   000000F8   7428               CMP      R0,#+116
   \   000000FA   14DB               BLT      ??MainSide_Event_10
   \   000000FC   8028               CMP      R0,#+128
   \   000000FE   12DA               BGE      ??MainSide_Event_10
   \   00000100   5B48               LDR      R0,??MainSide_Event_0+0x28  ;; 0x13d7e9
   \   00000102   0078               LDRB     R0,[R0, #+0]
   \   00000104   217B               LDRB     R1,[R4, #+12]
   \   00000106   0143               ORRS     R1,R1,R0
   \   00000108   0AD1               BNE      ??MainSide_Event_11
   \   0000010A   5A4A               LDR      R2,??MainSide_Event_0+0x2C  ;; ButtonBipCounter
   \   0000010C   5A48               LDR      R0,??MainSide_Event_0+0x30  ;; g_counter
   \   0000010E   03C8               LDM      R0!,{R0,R1}
   \   00000110   0023               MOVS     R3,#+0
   \   00000112   0830               ADDS     R0,R0,#+8
   \   00000114   5941               ADCS     R1,R1,R3
   \   00000116   03C2               STM      R2!,{R0,R1}
   \   00000118   5848               LDR      R0,??MainSide_Event_0+0x34  ;; 0xfffff430
   \   0000011A   8021               MOVS     R1,#+128
   \   0000011C   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000011E   0160               STR      R1,[R0, #+0]
   \                     ??MainSide_Event_11:
   \   00000120   0120               MOVS     R0,#+1
   \   00000122   2073               STRB     R0,[R4, #+12]
   \   00000124   D6E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_10:
   \   00000126   0800               MOVS     R0,R1
   \   00000128   2073               STRB     R0,[R4, #+12]
   \   0000012A   2079               LDRB     R0,[R4, #+4]
   \   0000012C   0028               CMP      R0,#+0
   \   0000012E   08D1               BNE      ??MainSide_Event_12
   \   00000130   0099               LDR      R1,[SP, #+0]
   \   00000132   0906               LSLS     R1,R1,#+24
   \   00000134   090E               LSRS     R1,R1,#+24
   \   00000136   0829               CMP      R1,#+8
   \   00000138   03D1               BNE      ??MainSide_Event_12
   \                     ??MainSide_Event_13:
   \   0000013A   0498               LDR      R0,[SP, #+16]
   \   0000013C   ........           BL       Termostat_Event
   \   00000140   C8E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_12:
   \   00000142   0028               CMP      R0,#+0
   \   00000144   04D0               BEQ      ??MainSide_Event_14
   \   00000146   0099               LDR      R1,[SP, #+0]
   \   00000148   0906               LSLS     R1,R1,#+24
   \   0000014A   090E               LSRS     R1,R1,#+24
   \   0000014C   0529               CMP      R1,#+5
   \   0000014E   F4D0               BEQ      ??MainSide_Event_13
   \                     ??MainSide_Event_14:
   \   00000150   0028               CMP      R0,#+0
   \   00000152   07D1               BNE      ??MainSide_Event_15
   \   00000154   0099               LDR      R1,[SP, #+0]
   \   00000156   0906               LSLS     R1,R1,#+24
   \   00000158   090E               LSRS     R1,R1,#+24
   \   0000015A   0929               CMP      R1,#+9
   \   0000015C   02D1               BNE      ??MainSide_Event_15
   \   0000015E   ........           BL       Timetable_Event
   \   00000162   B7E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_15:
   \   00000164   0028               CMP      R0,#+0
   \   00000166   07D0               BEQ      ??MainSide_Event_16
   \   00000168   0099               LDR      R1,[SP, #+0]
   \   0000016A   0906               LSLS     R1,R1,#+24
   \   0000016C   090E               LSRS     R1,R1,#+24
   \   0000016E   0629               CMP      R1,#+6
   \   00000170   02D1               BNE      ??MainSide_Event_16
   \   00000172   ........           BL       Timetable_Event
   \   00000176   ADE7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_16:
   \   00000178   0028               CMP      R0,#+0
   \   0000017A   07D1               BNE      ??MainSide_Event_17
   \   0000017C   0099               LDR      R1,[SP, #+0]
   \   0000017E   0906               LSLS     R1,R1,#+24
   \   00000180   090E               LSRS     R1,R1,#+24
   \   00000182   0A29               CMP      R1,#+10
   \   00000184   02D1               BNE      ??MainSide_Event_17
   \   00000186   ........           BL       Alarm_Event
   \   0000018A   A3E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_17:
   \   0000018C   0028               CMP      R0,#+0
   \   0000018E   11D0               BEQ      ??MainSide_Event_18
   \   00000190   0099               LDR      R1,[SP, #+0]
   \   00000192   0906               LSLS     R1,R1,#+24
   \   00000194   090E               LSRS     R1,R1,#+24
   \   00000196   0729               CMP      R1,#+7
   \   00000198   0CD1               BNE      ??MainSide_Event_18
   \   0000019A   ........           BL       Alarm_Event
   \   0000019E   99E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_19:
   \   000001A0   0A21               MOVS     R1,#+10
   \   000001A2   4843               MULS     R0,R1,R0
   \   000001A4   3018               ADDS     R0,R6,R0
   \   000001A6   3649               LDR      R1,??MainSide_Event_0+0x38  ;; MainStage
   \   000001A8   0818               ADDS     R0,R1,R0
   \   000001AA   0021               MOVS     R1,#+0
   \   000001AC   4170               STRB     R1,[R0, #+1]
   \                     ??MainSide_Event_20:
   \   000001AE   6D1C               ADDS     R5,R5,#+1
   \   000001B0   2D06               LSLS     R5,R5,#+24
   \   000001B2   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Event_18:
   \   000001B4   2800               MOVS     R0,R5
   \   000001B6   0928               CMP      R0,#+9
   \   000001B8   8CD2               BCS      ??MainSide_Event_5
   \   000001BA   2E00               MOVS     R6,R5
   \   000001BC   B000               LSLS     R0,R6,#+2
   \   000001BE   0099               LDR      R1,[SP, #+0]
   \   000001C0   0906               LSLS     R1,R1,#+24
   \   000001C2   090E               LSRS     R1,R1,#+24
   \   000001C4   5822               MOVS     R2,#+88
   \   000001C6   5143               MULS     R1,R2,R1
   \   000001C8   029A               LDR      R2,[SP, #+8]
   \   000001CA   5118               ADDS     R1,R2,R1
   \   000001CC   0818               ADDS     R0,R1,R0
   \   000001CE   8178               LDRB     R1,[R0, #+2]
   \   000001D0   0029               CMP      R1,#+0
   \   000001D2   ECD0               BEQ      ??MainSide_Event_20
   \   000001D4   F100               LSLS     R1,R6,#+3
   \   000001D6   049A               LDR      R2,[SP, #+16]
   \   000001D8   5718               ADDS     R7,R2,R1
   \   000001DA   B97C               LDRB     R1,[R7, #+18]
   \   000001DC   C906               LSLS     R1,R1,#+27
   \   000001DE   E6D4               BMI      ??MainSide_Event_20
   \   000001E0   82B0               SUB      SP,SP,#+8
   \   000001E2   C178               LDRB     R1,[R0, #+3]
   \   000001E4   0091               STR      R1,[SP, #+0]
   \   000001E6   8378               LDRB     R3,[R0, #+2]
   \   000001E8   4278               LDRB     R2,[R0, #+1]
   \   000001EA   0178               LDRB     R1,[R0, #+0]
   \   000001EC   3800               MOVS     R0,R7
   \   000001EE   0B30               ADDS     R0,R0,#+11
   \   000001F0   ........           BL       Button
   \   000001F4   02B0               ADD      SP,SP,#+8
   \   000001F6   0006               LSLS     R0,R0,#+24
   \   000001F8   0016               ASRS     R0,R0,#+24
   \   000001FA   0121               MOVS     R1,#+1
   \   000001FC   6A46               MOV      R2,SP
   \   000001FE   0B00               MOVS     R3,R1
   \   00000200   1371               STRB     R3,[R2, #+4]
   \   00000202   0128               CMP      R0,#+1
   \   00000204   06D1               BNE      ??MainSide_Event_21
   \   00000206   0F22               MOVS     R2,#+15
   \   00000208   BB7C               LDRB     R3,[R7, #+18]
   \   0000020A   1342               TST      R3,R2
   \   0000020C   02D0               BEQ      ??MainSide_Event_21
   \   0000020E   1A40               ANDS     R2,R2,R3
   \   00000210   521E               SUBS     R2,R2,#+1
   \   00000212   2271               STRB     R2,[R4, #+4]
   \                     ??MainSide_Event_21:
   \   00000214   0228               CMP      R0,#+2
   \   00000216   2079               LDRB     R0,[R4, #+4]
   \   00000218   C2D1               BNE      ??MainSide_Event_19
   \   0000021A   0A22               MOVS     R2,#+10
   \   0000021C   5043               MULS     R0,R2,R0
   \   0000021E   3018               ADDS     R0,R6,R0
   \   00000220   174A               LDR      R2,??MainSide_Event_0+0x38  ;; MainStage
   \   00000222   1018               ADDS     R0,R2,R0
   \   00000224   4278               LDRB     R2,[R0, #+1]
   \   00000226   002A               CMP      R2,#+0
   \   00000228   C1D1               BNE      ??MainSide_Event_20
   \   0000022A   4170               STRB     R1,[R0, #+1]
   \   0000022C   154E               LDR      R6,??MainSide_Event_0+0x3C  ;; g_NextTimeProgram
   \   0000022E   1248               LDR      R0,??MainSide_Event_0+0x30  ;; g_counter
   \   00000230   0CC8               LDM      R0!,{R2,R3}
   \   00000232   AF20               MOVS     R0,#+175
   \   00000234   4000               LSLS     R0,R0,#+1        ;; #+350
   \   00000236   0021               MOVS     R1,#+0
   \   00000238   8018               ADDS     R0,R0,R2
   \   0000023A   5941               ADCS     R1,R1,R3
   \   0000023C   03C6               STM      R6!,{R0,R1}
   \   0000023E   1248               LDR      R0,??MainSide_Event_0+0x40  ;; gProg
   \   00000240   ........           BL       Program
   \   00000244   B3E7               B        ??MainSide_Event_20
   \   00000246   C046               Nop      
   \                     ??MainSide_Event_0:
   \   00000248   ........           DC32     g_PC_Connected
   \   0000024C   ........           DC32     TextToChangeLength
   \   00000250   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000254   ........           DC32     `?<Constant {129, 0}>` + 992
   \   00000258   ........           DC32     Y_down
   \   0000025C   ........           DC32     X_down
   \   00000260   ........           DC32     Y_up
   \   00000264   ........           DC32     X_up
   \   00000268   ........           DC32     g_level
   \   0000026C   ........           DC32     g_NeedPass
   \   00000270   E9D71300           DC32     0x13d7e9
   \   00000274   ........           DC32     ButtonBipCounter
   \   00000278   ........           DC32     g_counter
   \   0000027C   30F4FFFF           DC32     0xfffff430
   \   00000280   ........           DC32     MainStage
   \   00000284   ........           DC32     g_NextTimeProgram
   \   00000288   ........           DC32     gProg
   1067          
   1068          
   1069          
   1070          
   1071          
   1072          //*-----------------------------------------------------------------------------
   1073          //* Nazwa funkcji :    MainSide_Refresh
   1074          //* Funkcja strony g³ównej menu
   1075          //*-----------------------------------------------------------------------------
   1076          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   1077          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1078          void MainSide_Refresh(_Screen* ScreenLokal)
   1079          {
   \                     MainSide_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   98B0               SUB      SP,SP,#+96
   1080            if (!g_PC_Connected)
   \   00000004   C748               LDR      R0,??MainSide_Refresh_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   00D0               BEQ      .+4
   \   0000000C   E3E2               B        ??MainSide_Refresh_1
   1081            {
   1082            
   1083            char PaternDesign=(ScreenLokal->PaternDesign);
   \   0000000E   1898               LDR      R0,[SP, #+96]
   \   00000010   0478               LDRB     R4,[R0, #+0]
   \   00000012   C548               LDR      R0,??MainSide_Refresh_0+0x4  ;; TextToChangeLength + 4
   \   00000014   0078               LDRB     R0,[R0, #+0]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   02D1               BNE      ??MainSide_Refresh_2
   1084            
   1085            
   1086            const _ScreenPaternDesign *ScreenPaternDesign;
   1087            if (CurrentSheet==0) 
   1088            {
   1089              ScreenPaternDesign=ScreenSetTab_0;
   \   0000001A   C449               LDR      R1,??MainSide_Refresh_0+0x8  ;; `?<Constant {129, 0}>` + 24
   \   0000001C   0091               STR      R1,[SP, #+0]
   \   0000001E   01E0               B        ??MainSide_Refresh_3
   1090            }else{
   1091              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Refresh_2:
   \   00000020   C349               LDR      R1,??MainSide_Refresh_0+0xC  ;; `?<Constant {129, 0}>` + 992
   \   00000022   0091               STR      R1,[SP, #+0]
   1092            }  
   1093            
   1094          
   1095                   
   1096                
   1097            if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Refresh(ScreenLokal);}
   \                     ??MainSide_Refresh_3:
   \   00000024   06D1               BNE      ??MainSide_Refresh_4
   \   00000026   2100               MOVS     R1,R4
   \   00000028   0829               CMP      R1,#+8
   \   0000002A   03D1               BNE      ??MainSide_Refresh_4
   \                     ??MainSide_Refresh_5:
   \   0000002C   1898               LDR      R0,[SP, #+96]
   \   0000002E   ........           BL       Termostat_Refresh
   \   00000032   5AE2               B        ??MainSide_Refresh_6
   1098            else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Refresh(ScreenLokal);}
   \                     ??MainSide_Refresh_4:
   \   00000034   0028               CMP      R0,#+0
   \   00000036   02D0               BEQ      ??MainSide_Refresh_7
   \   00000038   2100               MOVS     R1,R4
   \   0000003A   0529               CMP      R1,#+5
   \   0000003C   F6D0               BEQ      ??MainSide_Refresh_5
   1099                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {  }
   \                     ??MainSide_Refresh_7:
   \   0000003E   0028               CMP      R0,#+0
   \   00000040   03D1               BNE      ??MainSide_Refresh_8
   \   00000042   2100               MOVS     R1,R4
   \   00000044   0929               CMP      R1,#+9
   \   00000046   00D1               BNE      .+4
   \   00000048   4FE2               B        ??MainSide_Refresh_6
   1100                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {  }    
   \                     ??MainSide_Refresh_8:
   \   0000004A   0028               CMP      R0,#+0
   \   0000004C   03D0               BEQ      ??MainSide_Refresh_9
   \   0000004E   2100               MOVS     R1,R4
   \   00000050   0629               CMP      R1,#+6
   \   00000052   00D1               BNE      .+4
   \   00000054   49E2               B        ??MainSide_Refresh_6
   1101                #ifdef __ALARM
   1102                  else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Refresh(CurrentSheet);}
   \                     ??MainSide_Refresh_9:
   \   00000056   0028               CMP      R0,#+0
   \   00000058   05D1               BNE      ??MainSide_Refresh_10
   \   0000005A   2100               MOVS     R1,R4
   \   0000005C   0A29               CMP      R1,#+10
   \   0000005E   02D1               BNE      ??MainSide_Refresh_10
   \   00000060   ........           BL       Alarm_Refresh
   \   00000064   41E2               B        ??MainSide_Refresh_6
   1103                  else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Refresh(CurrentSheet);} 
   \                     ??MainSide_Refresh_10:
   \   00000066   0028               CMP      R0,#+0
   \   00000068   05D0               BEQ      ??MainSide_Refresh_11
   \   0000006A   2100               MOVS     R1,R4
   \   0000006C   0729               CMP      R1,#+7
   \   0000006E   02D1               BNE      ??MainSide_Refresh_11
   \   00000070   ........           BL       Alarm_Refresh
   \   00000074   39E2               B        ??MainSide_Refresh_6
   \                     ??MainSide_Refresh_11:
   \   00000076   0025               MOVS     R5,#+0
   \   00000078   1DE0               B        ??MainSide_Refresh_12
   1104                #endif
   1105                else   
   1106                {  
   1107            
   1108                       char val;
   1109                     
   1110                    //on/off
   1111                      for (char i=0; i<ScrenGraphNr; i++)
   1112                      {
   1113                          if ((ScreenLokal->Graph[i].Type==GraphOnOff)&& (ScreenLokal->Graph[i].PlusOnOff==0) && (ScreenPaternDesign[PaternDesign].Graph[i].Width>0))
   1114                          {
   1115                            //je¿eli wejcie
   1116                            if ((ScreenLokal->Graph[i].Nr>=0) && (ScreenLokal->Graph[i].Nr!=0xFF))
                                                                ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   1117                            {
   1118                               val=(PortStageRead(MainStage.StageI[ScreenLokal->Graph[i].Nr].Port, ScreenLokal->Graph[i].Port));
   1119                            }//je¿eli zmienna
   1120                            else
   1121                            {
   1122                               val=(Variables[ScreenLokal->Graph[i].Port/8]>>(ScreenLokal->Graph[i].Port%8)) & 0x1;
   1123                            }
   1124                            
   1125                            
   1126                            if (val)
   1127                             {
   1128                                Label(Speech[g_leng].Wl,2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-3,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1129                             }else{
   1130                                Label(Speech[g_leng].Wyl,2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-3,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1131                             }
   1132                          }else if ((((ScreenLokal->Graph[i].Type==GraphText)  && (ScreenLokal->Graph[i].PlusOnOff==1)) || (ScreenLokal->Graph[i].Type==GraphOnOff)) && (ScreenPaternDesign[PaternDesign].Graph[i].Width>0))
   1133                          {
   1134                             //je¿eli wejcie
   1135                            if ((ScreenLokal->Graph[i].Nr>=0) && (ScreenLokal->Graph[i].Nr!=0xFF))
                                                                ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   1136                            {
   1137                               val=(PortStageRead(MainStage.StageI[ScreenLokal->Graph[i].Nr].Port, ScreenLokal->Graph[i].Port));
   1138                            }//je¿eli zmienna
   1139                            else
   1140                            {
   1141                               val=(Variables[ScreenLokal->Graph[i].Port/8]>>(ScreenLokal->Graph[i].Port%8)) & 0x1;
   1142                            }
   1143                            
   1144                            
   1145                             if (val)
   1146                             {
   1147                                Label(Speech[g_leng].Wl,2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-7,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1148                             }else{
   1149                                Label(Speech[g_leng].Wyl,2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-7,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Refresh_13:
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   B178               LDRB     R1,[R6, #+2]
   \   00000086   0320               MOVS     R0,#+3
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   7078               LDRB     R0,[R6, #+1]
   \   0000008C   F178               LDRB     R1,[R6, #+3]
   \   0000008E   4908               LSRS     R1,R1,#+1
   \   00000090   4318               ADDS     R3,R0,R1
   \   00000092   DB1F               SUBS     R3,R3,#+7
   \   00000094   3278               LDRB     R2,[R6, #+0]
   \   00000096   0221               MOVS     R1,#+2
   \   00000098   C320               MOVS     R0,#+195
   \   0000009A   C000               LSLS     R0,R0,#+3        ;; #+1560
   \   0000009C   A54E               LDR      R6,??MainSide_Refresh_0+0x10  ;; g_leng
   \   0000009E   3668               LDR      R6,[R6, #+0]
   \   000000A0   A54F               LDR      R7,??MainSide_Refresh_0+0x14  ;; 0xa7d
   \   000000A2   7E43               MULS     R6,R7,R6
   \   000000A4   A54F               LDR      R7,??MainSide_Refresh_0+0x18  ;; Speech
   \   000000A6   BE19               ADDS     R6,R7,R6
   \   000000A8   3018               ADDS     R0,R6,R0
   \   000000AA   ........           BL       Label
   \   000000AE   06B0               ADD      SP,SP,#+24
   1150                             }
   \                     ??MainSide_Refresh_14:
   \   000000B0   6D1C               ADDS     R5,R5,#+1
   \   000000B2   2D06               LSLS     R5,R5,#+24
   \   000000B4   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Refresh_12:
   \   000000B6   2800               MOVS     R0,R5
   \   000000B8   0428               CMP      R0,#+4
   \   000000BA   00D3               BCC      .+4
   \   000000BC   BAE0               B        ??MainSide_Refresh_15
   \   000000BE   2900               MOVS     R1,R5
   \   000000C0   0720               MOVS     R0,#+7
   \   000000C2   4843               MULS     R0,R1,R0
   \   000000C4   189A               LDR      R2,[SP, #+96]
   \   000000C6   1218               ADDS     R2,R2,R0
   \   000000C8   5332               ADDS     R2,R2,#+83
   \   000000CA   1078               LDRB     R0,[R2, #+0]
   \   000000CC   0B28               CMP      R0,#+11
   \   000000CE   62D1               BNE      ??MainSide_Refresh_16
   \   000000D0   9079               LDRB     R0,[R2, #+6]
   \   000000D2   C007               LSLS     R0,R0,#+31
   \   000000D4   5FD4               BMI      ??MainSide_Refresh_16
   \   000000D6   2000               MOVS     R0,R4
   \   000000D8   5823               MOVS     R3,#+88
   \   000000DA   5843               MULS     R0,R3,R0
   \   000000DC   009B               LDR      R3,[SP, #+0]
   \   000000DE   1818               ADDS     R0,R3,R0
   \   000000E0   8B00               LSLS     R3,R1,#+2
   \   000000E2   C618               ADDS     R6,R0,R3
   \   000000E4   2436               ADDS     R6,R6,#+36
   \   000000E6   B078               LDRB     R0,[R6, #+2]
   \   000000E8   0028               CMP      R0,#+0
   \   000000EA   54D0               BEQ      ??MainSide_Refresh_16
   \   000000EC   1079               LDRB     R0,[R2, #+4]
   \   000000EE   FF28               CMP      R0,#+255
   \   000000F0   0BD0               BEQ      ??MainSide_Refresh_17
   \   000000F2   5179               LDRB     R1,[R2, #+5]
   \   000000F4   1622               MOVS     R2,#+22
   \   000000F6   5043               MULS     R0,R2,R0
   \   000000F8   914A               LDR      R2,??MainSide_Refresh_0+0x1C  ;; MainStage
   \   000000FA   1018               ADDS     R0,R2,R0
   \   000000FC   A030               ADDS     R0,R0,#+160
   \   000000FE   0088               LDRH     R0,[R0, #+0]
   \   00000100   0004               LSLS     R0,R0,#+16
   \   00000102   0014               ASRS     R0,R0,#+16
   \   00000104   ........           BL       PortStageRead
   \   00000108   0BE0               B        ??MainSide_Refresh_18
   \                     ??MainSide_Refresh_17:
   \   0000010A   5079               LDRB     R0,[R2, #+5]
   \   0000010C   C010               ASRS     R0,R0,#+3
   \   0000010E   8D49               LDR      R1,??MainSide_Refresh_0+0x20  ;; Variables
   \   00000110   095C               LDRB     R1,[R1, R0]
   \   00000112   5079               LDRB     R0,[R2, #+5]
   \   00000114   0200               MOVS     R2,R0
   \   00000116   D208               LSRS     R2,R2,#+3
   \   00000118   D200               LSLS     R2,R2,#+3
   \   0000011A   801A               SUBS     R0,R0,R2
   \   0000011C   0141               ASRS     R1,R1,R0
   \   0000011E   0120               MOVS     R0,#+1
   \   00000120   0840               ANDS     R0,R0,R1
   \                     ??MainSide_Refresh_18:
   \   00000122   0028               CMP      R0,#+0
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   1AD0               BEQ      ??MainSide_Refresh_19
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   0090               STR      R0,[SP, #+0]
   \   0000012C   7F21               MOVS     R1,#+127
   \   0000012E   0120               MOVS     R0,#+1
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   B178               LDRB     R1,[R6, #+2]
   \   00000134   0320               MOVS     R0,#+3
   \   00000136   03B4               PUSH     {R0,R1}
   \   00000138   7078               LDRB     R0,[R6, #+1]
   \   0000013A   F178               LDRB     R1,[R6, #+3]
   \   0000013C   4908               LSRS     R1,R1,#+1
   \   0000013E   4318               ADDS     R3,R0,R1
   \   00000140   DB1E               SUBS     R3,R3,#+3
   \   00000142   3278               LDRB     R2,[R6, #+0]
   \   00000144   0221               MOVS     R1,#+2
   \   00000146   8048               LDR      R0,??MainSide_Refresh_0+0x24  ;; 0x627
   \   00000148   7A4E               LDR      R6,??MainSide_Refresh_0+0x10  ;; g_leng
   \   0000014A   3668               LDR      R6,[R6, #+0]
   \   0000014C   7A4F               LDR      R7,??MainSide_Refresh_0+0x14  ;; 0xa7d
   \   0000014E   7E43               MULS     R6,R7,R6
   \   00000150   7A4F               LDR      R7,??MainSide_Refresh_0+0x18  ;; Speech
   \   00000152   BE19               ADDS     R6,R7,R6
   \   00000154   3018               ADDS     R0,R6,R0
   \   00000156   ........           BL       Label
   \   0000015A   06B0               ADD      SP,SP,#+24
   \   0000015C   A8E7               B        ??MainSide_Refresh_14
   \                     ??MainSide_Refresh_19:
   \   0000015E   0020               MOVS     R0,#+0
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   7F21               MOVS     R1,#+127
   \   00000164   0120               MOVS     R0,#+1
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   B178               LDRB     R1,[R6, #+2]
   \   0000016A   0320               MOVS     R0,#+3
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   7078               LDRB     R0,[R6, #+1]
   \   00000170   F178               LDRB     R1,[R6, #+3]
   \   00000172   4908               LSRS     R1,R1,#+1
   \   00000174   4318               ADDS     R3,R0,R1
   \   00000176   DB1E               SUBS     R3,R3,#+3
   \   00000178   3278               LDRB     R2,[R6, #+0]
   \   0000017A   0221               MOVS     R1,#+2
   \   0000017C   C320               MOVS     R0,#+195
   \   0000017E   C000               LSLS     R0,R0,#+3        ;; #+1560
   \   00000180   6C4E               LDR      R6,??MainSide_Refresh_0+0x10  ;; g_leng
   \   00000182   3668               LDR      R6,[R6, #+0]
   \   00000184   6C4F               LDR      R7,??MainSide_Refresh_0+0x14  ;; 0xa7d
   \   00000186   7E43               MULS     R6,R7,R6
   \   00000188   6C4F               LDR      R7,??MainSide_Refresh_0+0x18  ;; Speech
   \   0000018A   BE19               ADDS     R6,R7,R6
   \   0000018C   3018               ADDS     R0,R6,R0
   \   0000018E   ........           BL       Label
   \   00000192   06B0               ADD      SP,SP,#+24
   \   00000194   8CE7               B        ??MainSide_Refresh_14
   \                     ??MainSide_Refresh_16:
   \   00000196   1078               LDRB     R0,[R2, #+0]
   \   00000198   0828               CMP      R0,#+8
   \   0000019A   02D1               BNE      ??MainSide_Refresh_20
   \   0000019C   9079               LDRB     R0,[R2, #+6]
   \   0000019E   C007               LSLS     R0,R0,#+31
   \   000001A0   02D4               BMI      ??MainSide_Refresh_21
   \                     ??MainSide_Refresh_20:
   \   000001A2   1078               LDRB     R0,[R2, #+0]
   \   000001A4   0B28               CMP      R0,#+11
   \   000001A6   83D1               BNE      ??MainSide_Refresh_14
   \                     ??MainSide_Refresh_21:
   \   000001A8   2000               MOVS     R0,R4
   \   000001AA   5823               MOVS     R3,#+88
   \   000001AC   5843               MULS     R0,R3,R0
   \   000001AE   009B               LDR      R3,[SP, #+0]
   \   000001B0   1818               ADDS     R0,R3,R0
   \   000001B2   8900               LSLS     R1,R1,#+2
   \   000001B4   4618               ADDS     R6,R0,R1
   \   000001B6   2436               ADDS     R6,R6,#+36
   \   000001B8   B078               LDRB     R0,[R6, #+2]
   \   000001BA   0028               CMP      R0,#+0
   \   000001BC   00D1               BNE      .+4
   \   000001BE   77E7               B        ??MainSide_Refresh_14
   \   000001C0   1079               LDRB     R0,[R2, #+4]
   \   000001C2   FF28               CMP      R0,#+255
   \   000001C4   0BD0               BEQ      ??MainSide_Refresh_22
   \   000001C6   5179               LDRB     R1,[R2, #+5]
   \   000001C8   1622               MOVS     R2,#+22
   \   000001CA   5043               MULS     R0,R2,R0
   \   000001CC   5C4A               LDR      R2,??MainSide_Refresh_0+0x1C  ;; MainStage
   \   000001CE   1018               ADDS     R0,R2,R0
   \   000001D0   A030               ADDS     R0,R0,#+160
   \   000001D2   0088               LDRH     R0,[R0, #+0]
   \   000001D4   0004               LSLS     R0,R0,#+16
   \   000001D6   0014               ASRS     R0,R0,#+16
   \   000001D8   ........           BL       PortStageRead
   \   000001DC   0BE0               B        ??MainSide_Refresh_23
   \                     ??MainSide_Refresh_22:
   \   000001DE   5079               LDRB     R0,[R2, #+5]
   \   000001E0   C010               ASRS     R0,R0,#+3
   \   000001E2   5849               LDR      R1,??MainSide_Refresh_0+0x20  ;; Variables
   \   000001E4   095C               LDRB     R1,[R1, R0]
   \   000001E6   5079               LDRB     R0,[R2, #+5]
   \   000001E8   0200               MOVS     R2,R0
   \   000001EA   D208               LSRS     R2,R2,#+3
   \   000001EC   D200               LSLS     R2,R2,#+3
   \   000001EE   801A               SUBS     R0,R0,R2
   \   000001F0   0141               ASRS     R1,R1,R0
   \   000001F2   0120               MOVS     R0,#+1
   \   000001F4   0840               ANDS     R0,R0,R1
   \                     ??MainSide_Refresh_23:
   \   000001F6   0028               CMP      R0,#+0
   \   000001F8   82B0               SUB      SP,SP,#+8
   \   000001FA   00D1               BNE      .+4
   \   000001FC   3DE7               B        ??MainSide_Refresh_13
   \   000001FE   0020               MOVS     R0,#+0
   \   00000200   0090               STR      R0,[SP, #+0]
   \   00000202   7F21               MOVS     R1,#+127
   \   00000204   0120               MOVS     R0,#+1
   \   00000206   03B4               PUSH     {R0,R1}
   \   00000208   B178               LDRB     R1,[R6, #+2]
   \   0000020A   0320               MOVS     R0,#+3
   \   0000020C   03B4               PUSH     {R0,R1}
   \   0000020E   7078               LDRB     R0,[R6, #+1]
   \   00000210   F178               LDRB     R1,[R6, #+3]
   \   00000212   4908               LSRS     R1,R1,#+1
   \   00000214   4318               ADDS     R3,R0,R1
   \   00000216   DB1F               SUBS     R3,R3,#+7
   \   00000218   3278               LDRB     R2,[R6, #+0]
   \   0000021A   0221               MOVS     R1,#+2
   \   0000021C   4A48               LDR      R0,??MainSide_Refresh_0+0x24  ;; 0x627
   \   0000021E   454E               LDR      R6,??MainSide_Refresh_0+0x10  ;; g_leng
   \   00000220   3668               LDR      R6,[R6, #+0]
   \   00000222   454F               LDR      R7,??MainSide_Refresh_0+0x14  ;; 0xa7d
   \   00000224   7E43               MULS     R6,R7,R6
   \   00000226   454F               LDR      R7,??MainSide_Refresh_0+0x18  ;; Speech
   \   00000228   BE19               ADDS     R6,R7,R6
   \   0000022A   3018               ADDS     R0,R6,R0
   \   0000022C   ........           BL       Label
   \   00000230   06B0               ADD      SP,SP,#+24
   \   00000232   3DE7               B        ??MainSide_Refresh_14
   1151                          }
   1152                       }
   1153                    
   1154                      
   1155           
   1156                            
   1157                  //analogi
   1158                    char IlLiter=0;
   1159                    char txt[10]={0,0,0,0,0,0,0,0,0,0};
   \                     ??MainSide_Refresh_15:
   \   00000234   02A8               ADD      R0,SP,#+8
   \   00000236   0C21               MOVS     R1,#+12
   \   00000238   ........           BL       __aeabi_memclr4
   1160                    signed short Value;         
   1161                    for (char i=0; i<ScrenAnalogNr; i++)
   \   0000023C   0025               MOVS     R5,#+0
   \   0000023E   2FE0               B        ??MainSide_Refresh_24
   1162                    {
   1163                      if ((ScreenPaternDesign[PaternDesign].Value[i].Width>0)  & ((ScreenLokal->Analog[i].Nr>0) || ((ScreenLokal->Analog[i].Nr==0)&&(ScreenLokal->Analog[i].Reg>0))))
   1164                               {
   1165                               IlLiter=0;
   1166                               Value=MainStage.StageI[ScreenLokal->Analog[i].Nr].Value[ScreenLokal->Analog[i].Reg];
   1167          
   1168                               if (Value==(signed short)0x8AAA)  //je¿eli sygna³ niewiarygodny
   1169                               {
   1170                                 txt[0]='-'; txt[1]='?';txt[2]='?';txt[3]='?'; txt[4]='-'; IlLiter+=5;
   1171                               }else{ //je¿eli sygna³ wiarygodny
   1172                                   if (ScreenLokal->Analog[i].Flip)
   1173                                   {
   1174                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   1175                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {txt[IlLiter++]=ScreenLokal->Analog[i].Text[k];}  
   1176                                   }else{
   1177                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {IlLiter++; txt[k]=ScreenLokal->Analog[i].Text[k];}  
   \                     ??MainSide_Refresh_25:
   \   00000240   1700               MOVS     R7,R2
   \   00000242   059B               LDR      R3,[SP, #+20]
   \   00000244   DB19               ADDS     R3,R3,R7
   \   00000246   7026               MOVS     R6,#+112
   \   00000248   9E5D               LDRB     R6,[R3, R6]
   \   0000024A   002E               CMP      R6,#+0
   \   0000024C   06D0               BEQ      ??MainSide_Refresh_26
   \   0000024E   491C               ADDS     R1,R1,#+1
   \   00000250   0906               LSLS     R1,R1,#+24
   \   00000252   090E               LSRS     R1,R1,#+24
   \   00000254   02AE               ADD      R6,SP,#+8
   \   00000256   7033               ADDS     R3,R3,#+112
   \   00000258   1B78               LDRB     R3,[R3, #+0]
   \   0000025A   F355               STRB     R3,[R6, R7]
   \                     ??MainSide_Refresh_26:
   \   0000025C   521C               ADDS     R2,R2,#+1
   \   0000025E   1206               LSLS     R2,R2,#+24
   \   00000260   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Refresh_27:
   \   00000262   1300               MOVS     R3,R2
   \   00000264   032B               CMP      R3,#+3
   \   00000266   EBD3               BCC      ??MainSide_Refresh_25
   1178                                       IlLiter+=sIntToStr(Value, &(txt[IlLiter])); //(char Value, char *Vstring, char ill);
   \   00000268   0E00               MOVS     R6,R1
   \   0000026A   02AA               ADD      R2,SP,#+8
   \   0000026C   5118               ADDS     R1,R2,R1
   \   0000026E   ........           BL       sIntToStr
   \   00000272   3218               ADDS     R2,R6,R0
   \   00000274   1206               LSLS     R2,R2,#+24
   \   00000276   120E               LSRS     R2,R2,#+24
   1179                                   }
   1180                               }   
   1181                                   Label(txt,0,
   1182                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.x, 
   1183                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.y,IlLiter,
   1184                                         ScreenPaternDesign[PaternDesign].Value[i].Width,
   1185                                         0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Refresh_28:
   \   00000278   82B0               SUB      SP,SP,#+8
   \   0000027A   0020               MOVS     R0,#+0
   \   0000027C   0090               STR      R0,[SP, #+0]
   \   0000027E   7821               MOVS     R1,#+120
   \   00000280   03B4               PUSH     {R0,R1}
   \   00000282   0598               LDR      R0,[SP, #+20]
   \   00000284   8178               LDRB     R1,[R0, #+2]
   \   00000286   1000               MOVS     R0,R2
   \   00000288   03B4               PUSH     {R0,R1}
   \   0000028A   0798               LDR      R0,[SP, #+28]
   \   0000028C   4378               LDRB     R3,[R0, #+1]
   \   0000028E   0278               LDRB     R2,[R0, #+0]
   \   00000290   0021               MOVS     R1,#+0
   \   00000292   08A8               ADD      R0,SP,#+32
   \   00000294   ........           BL       Label
   \   00000298   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Refresh_29:
   \   0000029A   6D1C               ADDS     R5,R5,#+1
   \   0000029C   2D06               LSLS     R5,R5,#+24
   \   0000029E   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Refresh_24:
   \   000002A0   2800               MOVS     R0,R5
   \   000002A2   0428               CMP      R0,#+4
   \   000002A4   6FD2               BCS      ??MainSide_Refresh_30
   \   000002A6   2000               MOVS     R0,R4
   \   000002A8   5821               MOVS     R1,#+88
   \   000002AA   4843               MULS     R0,R1,R0
   \   000002AC   0099               LDR      R1,[SP, #+0]
   \   000002AE   0818               ADDS     R0,R1,R0
   \   000002B0   2900               MOVS     R1,R5
   \   000002B2   8A00               LSLS     R2,R1,#+2
   \   000002B4   8018               ADDS     R0,R0,R2
   \   000002B6   3430               ADDS     R0,R0,#+52
   \   000002B8   0190               STR      R0,[SP, #+4]
   \   000002BA   8278               LDRB     R2,[R0, #+2]
   \   000002BC   501E               SUBS     R0,R2,#+1
   \   000002BE   8041               SBCS     R0,R0,R0
   \   000002C0   C043               MVNS     R0,R0
   \   000002C2   C00F               LSRS     R0,R0,#+31
   \   000002C4   0722               MOVS     R2,#+7
   \   000002C6   5143               MULS     R1,R2,R1
   \   000002C8   189A               LDR      R2,[SP, #+96]
   \   000002CA   5118               ADDS     R1,R2,R1
   \   000002CC   0591               STR      R1,[SP, #+20]
   \   000002CE   0A00               MOVS     R2,R1
   \   000002D0   7332               ADDS     R2,R2,#+115
   \   000002D2   1178               LDRB     R1,[R2, #+0]
   \   000002D4   0029               CMP      R1,#+0
   \   000002D6   06D1               BNE      ??MainSide_Refresh_31
   \   000002D8   07D1               BNE      ??MainSide_Refresh_32
   \   000002DA   5378               LDRB     R3,[R2, #+1]
   \   000002DC   591E               SUBS     R1,R3,#+1
   \   000002DE   8941               SBCS     R1,R1,R1
   \   000002E0   C943               MVNS     R1,R1
   \   000002E2   C90F               LSRS     R1,R1,#+31
   \   000002E4   04E0               B        ??MainSide_Refresh_33
   \                     ??MainSide_Refresh_31:
   \   000002E6   0121               MOVS     R1,#+1
   \   000002E8   02E0               B        ??MainSide_Refresh_33
   \                     ??MainSide_Refresh_32:
   \   000002EA   0023               MOVS     R3,#+0
   \   000002EC   0121               MOVS     R1,#+1
   \   000002EE   1940               ANDS     R1,R1,R3
   \                     ??MainSide_Refresh_33:
   \   000002F0   0842               TST      R0,R1
   \   000002F2   D2D0               BEQ      ??MainSide_Refresh_29
   \   000002F4   0021               MOVS     R1,#+0
   \   000002F6   A020               MOVS     R0,#+160
   \   000002F8   5378               LDRB     R3,[R2, #+1]
   \   000002FA   5B00               LSLS     R3,R3,#+1
   \   000002FC   1678               LDRB     R6,[R2, #+0]
   \   000002FE   1627               MOVS     R7,#+22
   \   00000300   7E43               MULS     R6,R7,R6
   \   00000302   0F4F               LDR      R7,??MainSide_Refresh_0+0x1C  ;; MainStage
   \   00000304   BE19               ADDS     R6,R7,R6
   \   00000306   F318               ADDS     R3,R6,R3
   \   00000308   185E               LDRSH    R0,[R3, R0]
   \   0000030A   B54B               LDR      R3,??MainSide_Refresh_34  ;; 0xffff8aaa
   \   0000030C   9842               CMP      R0,R3
   \   0000030E   1DD1               BNE      ??MainSide_Refresh_35
   \   00000310   2D21               MOVS     R1,#+45
   \   00000312   02A8               ADD      R0,SP,#+8
   \   00000314   0170               STRB     R1,[R0, #+0]
   \   00000316   3F22               MOVS     R2,#+63
   \   00000318   4270               STRB     R2,[R0, #+1]
   \   0000031A   8270               STRB     R2,[R0, #+2]
   \   0000031C   C270               STRB     R2,[R0, #+3]
   \   0000031E   0171               STRB     R1,[R0, #+4]
   \   00000320   0522               MOVS     R2,#+5
   \   00000322   A9E7               B        ??MainSide_Refresh_28
   \                     ??MainSide_Refresh_0:
   \   00000324   ........           DC32     g_PC_Connected
   \   00000328   ........           DC32     TextToChangeLength + 4
   \   0000032C   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000330   ........           DC32     `?<Constant {129, 0}>` + 992
   \   00000334   ........           DC32     g_leng
   \   00000338   7D0A0000           DC32     0xa7d
   \   0000033C   ........           DC32     Speech
   \   00000340   ........           DC32     MainStage
   \   00000344   ........           DC32     Variables
   \   00000348   27060000           DC32     0x627
   \                     ??MainSide_Refresh_35:
   \   0000034C   9278               LDRB     R2,[R2, #+2]
   \   0000034E   002A               CMP      R2,#+0
   \   00000350   87D0               BEQ      ??MainSide_Refresh_27
   \   00000352   02A9               ADD      R1,SP,#+8
   \   00000354   ........           BL       sIntToStr
   \   00000358   0200               MOVS     R2,R0
   \   0000035A   0020               MOVS     R0,#+0
   \                     ??MainSide_Refresh_36:
   \   0000035C   0100               MOVS     R1,R0
   \   0000035E   0329               CMP      R1,#+3
   \   00000360   8AD2               BCS      ??MainSide_Refresh_28
   \   00000362   059B               LDR      R3,[SP, #+20]
   \   00000364   5918               ADDS     R1,R3,R1
   \   00000366   7023               MOVS     R3,#+112
   \   00000368   CB5C               LDRB     R3,[R1, R3]
   \   0000036A   002B               CMP      R3,#+0
   \   0000036C   07D0               BEQ      ??MainSide_Refresh_37
   \   0000036E   1300               MOVS     R3,R2
   \   00000370   02AE               ADD      R6,SP,#+8
   \   00000372   7031               ADDS     R1,R1,#+112
   \   00000374   0978               LDRB     R1,[R1, #+0]
   \   00000376   F154               STRB     R1,[R6, R3]
   \   00000378   521C               ADDS     R2,R2,#+1
   \   0000037A   1206               LSLS     R2,R2,#+24
   \   0000037C   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Refresh_37:
   \   0000037E   401C               ADDS     R0,R0,#+1
   \   00000380   0006               LSLS     R0,R0,#+24
   \   00000382   000E               LSRS     R0,R0,#+24
   \   00000384   EAE7               B        ??MainSide_Refresh_36
   1186                                   
   1187                               }
   1188                    }
   1189                    
   1190                     
   1191                    
   1192                    //grafika
   1193                      for (char i=0; i<ScrenGraphNr; i++)
   \                     ??MainSide_Refresh_30:
   \   00000386   0025               MOVS     R5,#+0
   \   00000388   20E0               B        ??MainSide_Refresh_38
   1194                      {
   1195                        if (ScreenLokal->Graph[i].Type==GraphWartosc)
   \                     ??MainSide_Refresh_39:
   \   0000038A   2900               MOVS     R1,R5
   \   0000038C   0720               MOVS     R0,#+7
   \   0000038E   4843               MULS     R0,R1,R0
   \   00000390   189A               LDR      R2,[SP, #+96]
   \   00000392   1218               ADDS     R2,R2,R0
   \   00000394   5320               MOVS     R0,#+83
   \   00000396   105C               LDRB     R0,[R2, R0]
   \   00000398   0A28               CMP      R0,#+10
   \   0000039A   14D1               BNE      ??MainSide_Refresh_40
   1196                        if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \   0000039C   2000               MOVS     R0,R4
   \   0000039E   5823               MOVS     R3,#+88
   \   000003A0   5843               MULS     R0,R3,R0
   \   000003A2   009B               LDR      R3,[SP, #+0]
   \   000003A4   1818               ADDS     R0,R3,R0
   \   000003A6   8900               LSLS     R1,R1,#+2
   \   000003A8   4018               ADDS     R0,R0,R1
   \   000003AA   2430               ADDS     R0,R0,#+36
   \   000003AC   8178               LDRB     R1,[R0, #+2]
   \   000003AE   0029               CMP      R1,#+0
   \   000003B0   09D0               BEQ      ??MainSide_Refresh_40
   1197                        {
   1198                                ScreenGraph(//(char poz_X , char poz_Y ,char width, char height,_Graph *Graph)
   1199                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   1200                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   1201                                ScreenPaternDesign[PaternDesign].Graph[i].Width,
   1202                                ScreenPaternDesign[PaternDesign].Graph[i].Height,
   1203                                &(ScreenLokal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000003B2   82B0               SUB      SP,SP,#+8
   \   000003B4   5332               ADDS     R2,R2,#+83
   \   000003B6   0092               STR      R2,[SP, #+0]
   \   000003B8   C378               LDRB     R3,[R0, #+3]
   \   000003BA   8278               LDRB     R2,[R0, #+2]
   \   000003BC   4178               LDRB     R1,[R0, #+1]
   \   000003BE   0078               LDRB     R0,[R0, #+0]
   \   000003C0   ........           BL       ScreenGraph
   \   000003C4   02B0               ADD      SP,SP,#+8
   1204                        
   1205                        }
   1206                       }
   \                     ??MainSide_Refresh_40:
   \   000003C6   6D1C               ADDS     R5,R5,#+1
   \   000003C8   2D06               LSLS     R5,R5,#+24
   \   000003CA   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Refresh_38:
   \   000003CC   2800               MOVS     R0,R5
   \   000003CE   0428               CMP      R0,#+4
   \   000003D0   DBD3               BCC      ??MainSide_Refresh_39
   1207                   
   1208                    
   1209                    
   1210                  
   1211                      //Du¿a temperatura
   1212                      if ((ScreenPaternDesign[PaternDesign].Temperature.Width>0))
   \   000003D2   5820               MOVS     R0,#+88
   \   000003D4   4443               MULS     R4,R0,R4
   \   000003D6   0098               LDR      R0,[SP, #+0]
   \   000003D8   0019               ADDS     R0,R0,R4
   \   000003DA   4D30               ADDS     R0,R0,#+77
   \   000003DC   0400               MOVS     R4,R0
   \   000003DE   6078               LDRB     R0,[R4, #+1]
   \   000003E0   0028               CMP      R0,#+0
   \   000003E2   48D0               BEQ      ??MainSide_Refresh_41
   1213                        {
   1214                            char dl=0;
   1215                            signed short Value=MainStage.StageI[ScreenLokal->Analog[0].Nr].Value[ScreenLokal->Analog[0].Reg];
   \   000003E4   1899               LDR      R1,[SP, #+96]
   \   000003E6   7331               ADDS     R1,R1,#+115
   \   000003E8   A020               MOVS     R0,#+160
   \   000003EA   4A78               LDRB     R2,[R1, #+1]
   \   000003EC   5200               LSLS     R2,R2,#+1
   \   000003EE   0978               LDRB     R1,[R1, #+0]
   \   000003F0   1623               MOVS     R3,#+22
   \   000003F2   5943               MULS     R1,R3,R1
   \   000003F4   7B4B               LDR      R3,??MainSide_Refresh_34+0x4  ;; MainStage
   \   000003F6   5918               ADDS     R1,R3,R1
   \   000003F8   8918               ADDS     R1,R1,R2
   \   000003FA   085E               LDRSH    R0,[R1, R0]
   1216                            
   1217                            //je¿eli sygna³ nie wiarygodny
   1218                            if  ((Value)==(signed short)0x8AAA)          
   \   000003FC   7849               LDR      R1,??MainSide_Refresh_34  ;; 0xffff8aaa
   \   000003FE   8842               CMP      R0,R1
   \   00000400   0CD1               BNE      ??MainSide_Refresh_42
   1219                            { 
   1220                              txt[0]='-';txt[1]=' ';txt[2]='?'; txt[3]=' ';txt[4]='-'; txt[5]=0;
   \   00000402   2D21               MOVS     R1,#+45
   \   00000404   02A8               ADD      R0,SP,#+8
   \   00000406   0170               STRB     R1,[R0, #+0]
   \   00000408   2022               MOVS     R2,#+32
   \   0000040A   4270               STRB     R2,[R0, #+1]
   \   0000040C   3F23               MOVS     R3,#+63
   \   0000040E   8370               STRB     R3,[R0, #+2]
   \   00000410   C270               STRB     R2,[R0, #+3]
   \   00000412   0171               STRB     R1,[R0, #+4]
   \   00000414   0021               MOVS     R1,#+0
   \   00000416   4171               STRB     R1,[R0, #+5]
   1221                              dl=5;                    
   \   00000418   0522               MOVS     R2,#+5
   \   0000041A   1BE0               B        ??MainSide_Refresh_43
   1222                            }//je¿eli s³aba bateria
   1223                            else if  ((Value)&(signed short)0x8000)          
   \                     ??MainSide_Refresh_42:
   \   0000041C   7249               LDR      R1,??MainSide_Refresh_34+0x8  ;; 0xffff8000
   \   0000041E   0140               ANDS     R1,R1,R0
   \   00000420   10D0               BEQ      ??MainSide_Refresh_44
   1224                            { 
   1225                              txt[0]='B';txt[1]='A';txt[2]='T'; txt[3]='E';txt[4]='R'; txt[5]='Y'; txt[5]=0;
   \   00000422   02A8               ADD      R0,SP,#+8
   \   00000424   4221               MOVS     R1,#+66
   \   00000426   0170               STRB     R1,[R0, #+0]
   \   00000428   4121               MOVS     R1,#+65
   \   0000042A   4170               STRB     R1,[R0, #+1]
   \   0000042C   5421               MOVS     R1,#+84
   \   0000042E   8170               STRB     R1,[R0, #+2]
   \   00000430   4521               MOVS     R1,#+69
   \   00000432   C170               STRB     R1,[R0, #+3]
   \   00000434   5221               MOVS     R1,#+82
   \   00000436   0171               STRB     R1,[R0, #+4]
   \   00000438   5921               MOVS     R1,#+89
   \   0000043A   4171               STRB     R1,[R0, #+5]
   \   0000043C   0021               MOVS     R1,#+0
   \   0000043E   4171               STRB     R1,[R0, #+5]
   1226                              dl=6;    
   \   00000440   0622               MOVS     R2,#+6
   \   00000442   07E0               B        ??MainSide_Refresh_43
   1227                            }else{
   1228                              
   1229                              dl=sIntToStr(Value,txt);
   \                     ??MainSide_Refresh_44:
   \   00000444   02A9               ADD      R1,SP,#+8
   \   00000446   ........           BL       sIntToStr
   \   0000044A   0200               MOVS     R2,R0
   1230                              txt[dl++]=127;
   \   0000044C   02A8               ADD      R0,SP,#+8
   \   0000044E   7F21               MOVS     R1,#+127
   \   00000450   8154               STRB     R1,[R0, R2]
   \   00000452   521C               ADDS     R2,R2,#+1
   1231                            }
   1232                            Label20(txt,2,0,ScreenPaternDesign[PaternDesign].Temperature.Poz.y,dl,60,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                                   ^
Warning[Pe223]: function "Label20" declared implicitly
   \                     ??MainSide_Refresh_43:
   \   00000454   82B0               SUB      SP,SP,#+8
   \   00000456   0020               MOVS     R0,#+0
   \   00000458   0090               STR      R0,[SP, #+0]
   \   0000045A   6921               MOVS     R1,#+105
   \   0000045C   03B4               PUSH     {R0,R1}
   \   0000045E   3C21               MOVS     R1,#+60
   \   00000460   1206               LSLS     R2,R2,#+24
   \   00000462   120E               LSRS     R2,R2,#+24
   \   00000464   1000               MOVS     R0,R2
   \   00000466   03B4               PUSH     {R0,R1}
   \   00000468   2378               LDRB     R3,[R4, #+0]
   \   0000046A   0022               MOVS     R2,#+0
   \   0000046C   0221               MOVS     R1,#+2
   \   0000046E   08A8               ADD      R0,SP,#+32
   \   00000470   ........           BL       Label20
   \   00000474   06B0               ADD      SP,SP,#+24
   1233          
   1234                        }
   1235                        
   1236                     char time_char[9];
   1237                      //Czas
   1238                      if ((ScreenPaternDesign[PaternDesign].Time.Width>0))
   \                     ??MainSide_Refresh_41:
   \   00000476   6079               LDRB     R0,[R4, #+5]
   \   00000478   0028               CMP      R0,#+0
   \   0000047A   19D0               BEQ      ??MainSide_Refresh_45
   1239                        {                  
   1240                            
   1241                            TimeToStr(DateTime.Hour,DateTime.Minute,DateTime.Second,time_char);
   \   0000047C   5B48               LDR      R0,??MainSide_Refresh_34+0xC  ;; DateTime
   \   0000047E   06AB               ADD      R3,SP,#+24
   \   00000480   4279               LDRB     R2,[R0, #+5]
   \   00000482   0179               LDRB     R1,[R0, #+4]
   \   00000484   C078               LDRB     R0,[R0, #+3]
   \   00000486   ........           BL       TimeToStr
   1242                            time_char[8]=0;
   \   0000048A   06A8               ADD      R0,SP,#+24
   \   0000048C   0021               MOVS     R1,#+0
   \   0000048E   0172               STRB     R1,[R0, #+8]
   1243                            Label(time_char,0,
   1244                                  ScreenPaternDesign[PaternDesign].Time.Poz.x,
   1245                                  ScreenPaternDesign[PaternDesign].Time.Poz.y,8,43,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000490   82B0               SUB      SP,SP,#+8
   \   00000492   0800               MOVS     R0,R1
   \   00000494   0090               STR      R0,[SP, #+0]
   \   00000496   7F21               MOVS     R1,#+127
   \   00000498   0120               MOVS     R0,#+1
   \   0000049A   03B4               PUSH     {R0,R1}
   \   0000049C   2B21               MOVS     R1,#+43
   \   0000049E   0820               MOVS     R0,#+8
   \   000004A0   03B4               PUSH     {R0,R1}
   \   000004A2   2379               LDRB     R3,[R4, #+4]
   \   000004A4   E278               LDRB     R2,[R4, #+3]
   \   000004A6   0021               MOVS     R1,#+0
   \   000004A8   0CA8               ADD      R0,SP,#+48
   \   000004AA   ........           BL       Label
   \   000004AE   06B0               ADD      SP,SP,#+24
   1246                        }
   1247                    
   1248                      //Date
   1249                      if ((ScreenPaternDesign[PaternDesign].Date.Width>0))
   \                     ??MainSide_Refresh_45:
   \   000004B0   607A               LDRB     R0,[R4, #+9]
   \   000004B2   0028               CMP      R0,#+0
   \   000004B4   19D0               BEQ      ??MainSide_Refresh_6
   1250                        {                  
   1251                            DateToStr(DateTime.Day,DateTime.Mounth,DateTime.Year,time_char);//(char dzin, char mies, char rok, char Vstring[8])
   \   000004B6   4D48               LDR      R0,??MainSide_Refresh_34+0xC  ;; DateTime
   \   000004B8   06AB               ADD      R3,SP,#+24
   \   000004BA   0278               LDRB     R2,[R0, #+0]
   \   000004BC   4178               LDRB     R1,[R0, #+1]
   \   000004BE   8078               LDRB     R0,[R0, #+2]
   \   000004C0   ........           BL       DateToStr
   1252                            time_char[8]=0;
   \   000004C4   06A8               ADD      R0,SP,#+24
   \   000004C6   0021               MOVS     R1,#+0
   \   000004C8   0172               STRB     R1,[R0, #+8]
   1253                            Label(time_char,0,
   1254                                  ScreenPaternDesign[PaternDesign].Date.Poz.x,
   1255                                  ScreenPaternDesign[PaternDesign].Date.Poz.y,
   1256                                  8,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000004CA   82B0               SUB      SP,SP,#+8
   \   000004CC   0800               MOVS     R0,R1
   \   000004CE   0090               STR      R0,[SP, #+0]
   \   000004D0   7F21               MOVS     R1,#+127
   \   000004D2   0120               MOVS     R0,#+1
   \   000004D4   03B4               PUSH     {R0,R1}
   \   000004D6   2121               MOVS     R1,#+33
   \   000004D8   0820               MOVS     R0,#+8
   \   000004DA   03B4               PUSH     {R0,R1}
   \   000004DC   237A               LDRB     R3,[R4, #+8]
   \   000004DE   E279               LDRB     R2,[R4, #+7]
   \   000004E0   0021               MOVS     R1,#+0
   \   000004E2   0CA8               ADD      R0,SP,#+48
   \   000004E4   ........           BL       Label
   \   000004E8   06B0               ADD      SP,SP,#+24
   1257                        }          
   1258              
   1259                } 
   1260                      //wskanik ¿ycia
   1261                    if (CurrentSheet==0) 
   \                     ??MainSide_Refresh_6:
   \   000004EA   4148               LDR      R0,??MainSide_Refresh_34+0x10  ;; TextToChangeLength + 4
   \   000004EC   0078               LDRB     R0,[R0, #+0]
   \   000004EE   0028               CMP      R0,#+0
   \   000004F0   71D1               BNE      ??MainSide_Refresh_1
   1262                    {
   1263                    
   1264                      if ((MainSide_puls==0) || (MainSide_puls>3))
   \   000004F2   404C               LDR      R4,??MainSide_Refresh_34+0x14  ;; MainSide_puls
   \   000004F4   2578               LDRB     R5,[R4, #+0]
   \   000004F6   002D               CMP      R5,#+0
   \   000004F8   01D0               BEQ      ??MainSide_Refresh_46
   \   000004FA   042D               CMP      R5,#+4
   \   000004FC   3AD3               BCC      ??MainSide_Refresh_47
   1265                      { 
   1266                        
   1267                        char ekran1[2][13] = {
   1268                                   {0,0,224,24,232,244,244,244,232,24,224,0,0},
   1269                                    {0,0,0,3,2,5,5,5,2,3,0,0,0}
   1270                                    };
   \                     ??MainSide_Refresh_46:
   \   000004FE   3E4E               LDR      R6,??MainSide_Refresh_34+0x18  ;; `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>`
   \   00000500   09A8               ADD      R0,SP,#+36
   \   00000502   3100               MOVS     R1,R6
   \   00000504   0C31               ADDS     R1,R1,#+12
   \   00000506   1C22               MOVS     R2,#+28
   \   00000508   ........           BL       __aeabi_memcpy4
   1271                  
   1272                        char ekranSlave[2][13] = {
   1273                                    {0,0,224,248,152,124,180,220,56,248,224,0,0},
   1274                                    {0,0,0,3,3,7,5,7,3,3,0,0,0},
   1275                                    };
   \   0000050C   10A8               ADD      R0,SP,#+64
   \   0000050E   2836               ADDS     R6,R6,#+40
   \   00000510   3100               MOVS     R1,R6
   \   00000512   1C22               MOVS     R2,#+28
   \   00000514   ........           BL       __aeabi_memcpy4
   1276                        
   1277                        if ((SlaveMode) )//je¿eli tryb slave
   \   00000518   3848               LDR      R0,??MainSide_Refresh_34+0x1C  ;; SlaveMode
   \   0000051A   0078               LDRB     R0,[R0, #+0]
   \   0000051C   0028               CMP      R0,#+0
   \   0000051E   14D0               BEQ      ??MainSide_Refresh_48
   1278                        {
   1279                              for (char i=0; i<=12; i++)
   \   00000520   0021               MOVS     R1,#+0
   \                     ??MainSide_Refresh_49:
   \   00000522   0800               MOVS     R0,R1
   \   00000524   0D28               CMP      R0,#+13
   \   00000526   25D2               BCS      ??MainSide_Refresh_47
   1280                              {
   1281                           
   1282                              LCD_Canvas[0][i+115]=ekranSlave[0][i];
   \   00000528   0A00               MOVS     R2,R1
   \   0000052A   3548               LDR      R0,??MainSide_Refresh_34+0x20  ;; LCD_Canvas
   \   0000052C   8318               ADDS     R3,R0,R2
   \   0000052E   7333               ADDS     R3,R3,#+115
   \   00000530   10AE               ADD      R6,SP,#+64
   \   00000532   B65C               LDRB     R6,[R6, R2]
   \   00000534   1E70               STRB     R6,[R3, #+0]
   1283                              LCD_Canvas[1][i+115]=ekranSlave[1][i];
   \   00000536   8018               ADDS     R0,R0,R2
   \   00000538   F330               ADDS     R0,R0,#+243
   \   0000053A   10AB               ADD      R3,SP,#+64
   \   0000053C   9A18               ADDS     R2,R3,R2
   \   0000053E   527B               LDRB     R2,[R2, #+13]
   \   00000540   0270               STRB     R2,[R0, #+0]
   1284                              }
   \   00000542   491C               ADDS     R1,R1,#+1
   \   00000544   0906               LSLS     R1,R1,#+24
   \   00000546   090E               LSRS     R1,R1,#+24
   \   00000548   EBE7               B        ??MainSide_Refresh_49
   1285                        }else{
   1286                          
   1287                            for (char i=0; i<=12; i++)
   \                     ??MainSide_Refresh_48:
   \   0000054A   0021               MOVS     R1,#+0
   \   0000054C   0FE0               B        ??MainSide_Refresh_50
   1288                            {
   1289                           
   1290                              LCD_Canvas[0][i+115]=ekran1[0][i];
   \                     ??MainSide_Refresh_51:
   \   0000054E   0A00               MOVS     R2,R1
   \   00000550   2B48               LDR      R0,??MainSide_Refresh_34+0x20  ;; LCD_Canvas
   \   00000552   8318               ADDS     R3,R0,R2
   \   00000554   7333               ADDS     R3,R3,#+115
   \   00000556   09AE               ADD      R6,SP,#+36
   \   00000558   B65C               LDRB     R6,[R6, R2]
   \   0000055A   1E70               STRB     R6,[R3, #+0]
   1291                              LCD_Canvas[1][i+115]=ekran1[1][i];
   \   0000055C   8018               ADDS     R0,R0,R2
   \   0000055E   F330               ADDS     R0,R0,#+243
   \   00000560   09AB               ADD      R3,SP,#+36
   \   00000562   9A18               ADDS     R2,R3,R2
   \   00000564   527B               LDRB     R2,[R2, #+13]
   \   00000566   0270               STRB     R2,[R0, #+0]
   1292                            }
   \   00000568   491C               ADDS     R1,R1,#+1
   \   0000056A   0906               LSLS     R1,R1,#+24
   \   0000056C   090E               LSRS     R1,R1,#+24
   \                     ??MainSide_Refresh_50:
   \   0000056E   0800               MOVS     R0,R1
   \   00000570   0D28               CMP      R0,#+13
   \   00000572   ECD3               BCC      ??MainSide_Refresh_51
   1293                          }
   1294                       //if ((!g_SlaveConnect) && (SlaveMode)) H_line(2,121,7,0);
   1295                      }
   1296                      if ((MainSide_puls==1) )
   \                     ??MainSide_Refresh_47:
   \   00000574   012D               CMP      R5,#+1
   \   00000576   21D1               BNE      ??MainSide_Refresh_52
   1297                      {
   1298                        
   1299                        if ((g_SlaveConnect) || (!SlaveMode))
   \   00000578   2248               LDR      R0,??MainSide_Refresh_34+0x24  ;; g_SlaveConnect
   \   0000057A   0078               LDRB     R0,[R0, #+0]
   \   0000057C   0028               CMP      R0,#+0
   \   0000057E   03D1               BNE      ??MainSide_Refresh_53
   \   00000580   1E48               LDR      R0,??MainSide_Refresh_34+0x1C  ;; SlaveMode
   \   00000582   0078               LDRB     R0,[R0, #+0]
   \   00000584   0028               CMP      R0,#+0
   \   00000586   19D1               BNE      ??MainSide_Refresh_52
   1300                        {
   1301                          char ekran2[2][13] = {
   1302                                    {240,28,230,250,251,253,253,253,251,250,230,28,240},
   1303                                    {1,7,12,11,27,23,23,23,27,11,12,7,1},
   1304                                    };
   \                     ??MainSide_Refresh_53:
   \   00000588   09A8               ADD      R0,SP,#+36
   \   0000058A   1F49               LDR      R1,??MainSide_Refresh_34+0x28  ;; `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>` + 68
   \   0000058C   1C22               MOVS     R2,#+28
   \   0000058E   ........           BL       __aeabi_memcpy4
   1305                        
   1306                          for (char i=0; i<=12; i++)
   \   00000592   0021               MOVS     R1,#+0
   \   00000594   0FE0               B        ??MainSide_Refresh_54
   1307                          {
   1308                           
   1309                            LCD_Canvas[0][i+115]=ekran2[0][i];
   \                     ??MainSide_Refresh_55:
   \   00000596   0A00               MOVS     R2,R1
   \   00000598   1948               LDR      R0,??MainSide_Refresh_34+0x20  ;; LCD_Canvas
   \   0000059A   8318               ADDS     R3,R0,R2
   \   0000059C   7333               ADDS     R3,R3,#+115
   \   0000059E   09AE               ADD      R6,SP,#+36
   \   000005A0   B65C               LDRB     R6,[R6, R2]
   \   000005A2   1E70               STRB     R6,[R3, #+0]
   1310                            LCD_Canvas[1][i+115]=ekran2[1][i];
   \   000005A4   8018               ADDS     R0,R0,R2
   \   000005A6   F330               ADDS     R0,R0,#+243
   \   000005A8   09AB               ADD      R3,SP,#+36
   \   000005AA   9A18               ADDS     R2,R3,R2
   \   000005AC   527B               LDRB     R2,[R2, #+13]
   \   000005AE   0270               STRB     R2,[R0, #+0]
   1311                          }
   \   000005B0   491C               ADDS     R1,R1,#+1
   \   000005B2   0906               LSLS     R1,R1,#+24
   \   000005B4   090E               LSRS     R1,R1,#+24
   \                     ??MainSide_Refresh_54:
   \   000005B6   0800               MOVS     R0,R1
   \   000005B8   0D28               CMP      R0,#+13
   \   000005BA   ECD3               BCC      ??MainSide_Refresh_55
   1312                        }
   1313                  
   1314                      }
   1315                       
   1316                  
   1317                    if (g_Stop_Program==0)
   \                     ??MainSide_Refresh_52:
   \   000005BC   1348               LDR      R0,??MainSide_Refresh_34+0x2C  ;; g_Stop_Program
   \   000005BE   0078               LDRB     R0,[R0, #+0]
   \   000005C0   0028               CMP      R0,#+0
   \   000005C2   06D1               BNE      ??MainSide_Refresh_56
   1318                    {  
   1319                     if (MainSide_puls>7) {MainSide_puls=0;} else {MainSide_puls++;}    
   \   000005C4   082D               CMP      R5,#+8
   \   000005C6   01D3               BCC      ??MainSide_Refresh_57
   \   000005C8   2070               STRB     R0,[R4, #+0]
   \   000005CA   04E0               B        ??MainSide_Refresh_1
   \                     ??MainSide_Refresh_57:
   \   000005CC   6D1C               ADDS     R5,R5,#+1
   \   000005CE   2570               STRB     R5,[R4, #+0]
   \   000005D0   01E0               B        ??MainSide_Refresh_1
   1320                    }else{
   1321                      MainSide_puls=7; 
   \                     ??MainSide_Refresh_56:
   \   000005D2   0720               MOVS     R0,#+7
   \   000005D4   2070               STRB     R0,[R4, #+0]
   1322                    }
   1323                     
   1324                    }
   1325                    
   1326                  
   1327                    
   1328          
   1329                
   1330            
   1331            }  
   1332          }//_______________________ Koniec funkcji MainSide_Refresh __________________________
   \                     ??MainSide_Refresh_1:
   \   000005D6   19B0               ADD      SP,SP,#+100
   \   000005D8   F0BC               POP      {R4-R7}
   \   000005DA   01BC               POP      {R0}
   \   000005DC   0047               BX       R0               ;; return
   \   000005DE   C046               Nop      
   \                     ??MainSide_Refresh_34:
   \   000005E0   AA8AFFFF           DC32     0xffff8aaa
   \   000005E4   ........           DC32     MainStage
   \   000005E8   0080FFFF           DC32     0xffff8000
   \   000005EC   ........           DC32     DateTime
   \   000005F0   ........           DC32     TextToChangeLength + 4
   \   000005F4   ........           DC32     MainSide_puls
   \   000005F8   ........           DC32     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>`
   \   000005FC   ........           DC32     SlaveMode
   \   00000600   ........           DC32     LCD_Canvas
   \   00000604   ........           DC32     g_SlaveConnect
   \   00000608   ........           DC32     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>` + 68
   \   0000060C   ........           DC32     g_Stop_Program
   1333          
   1334          
   1335          
   1336          
   1337          
   1338          
   1339          
   1340          
   1341          //*-----------------------------------------------------------------------------
   1342          //* Nazwa funkcji :    Termostat_Paint
   1343          //* Funkcja strony g³ównej menu
   1344          //*-----------------------------------------------------------------------------
   1345          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   1346          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1347          void Termostat_Paint(_Screen* ScreenLokal)
   1348          {
   \                     Termostat_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   91B0               SUB      SP,SP,#+68
   \   00000004   0400               MOVS     R4,R0
   1349            if (CurrentSheet!=0)  List_Paint(Speech[g_leng].Termo_,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   7F4D               LDR      R5,??Termostat_Paint_0  ;; TextToChangeLength
   \   00000008   2879               LDRB     R0,[R5, #+4]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   17D0               BEQ      ??Termostat_Paint_1
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   7BA0               ADR      R0,??Termostat_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0300               MOVS     R3,R0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   7848               LDR      R0,??Termostat_Paint_0+0x8  ;; 0x744
   \   0000002A   794E               LDR      R6,??Termostat_Paint_0+0xC  ;; g_leng
   \   0000002C   3668               LDR      R6,[R6, #+0]
   \   0000002E   794F               LDR      R7,??Termostat_Paint_0+0x10  ;; 0xa7d
   \   00000030   7E43               MULS     R6,R7,R6
   \   00000032   794F               LDR      R7,??Termostat_Paint_0+0x14  ;; Speech
   \   00000034   BE19               ADDS     R6,R7,R6
   \   00000036   3018               ADDS     R0,R6,R0
   \   00000038   ........           BL       List_Paint
   \   0000003C   0AB0               ADD      SP,SP,#+40
   1350                    
   1351            char txt[7];
   1352          
   1353            H_line(0,70,65,1);
   \                     ??Termostat_Paint_1:
   \   0000003E   0123               MOVS     R3,#+1
   \   00000040   4122               MOVS     R2,#+65
   \   00000042   4621               MOVS     R1,#+70
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   ........           BL       H_line
   1354            char GraphTermometr[3][18] = 
   1355                              { 
   1356                               {128,192,192,128,128,224,128,224,128,224,128,128,128,128,128,128,128,0},
   1357                               {3,7,7,3,3,3,3,3,2,2,2,14,2,14,2,14,2,1},
   1358                               {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
   1359                            };
   \   0000004A   744E               LDR      R6,??Termostat_Paint_0+0x18  ;; `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   0000004C   03A8               ADD      R0,SP,#+12
   \   0000004E   3100               MOVS     R1,R6
   \   00000050   3822               MOVS     R2,#+56
   \   00000052   ........           BL       __aeabi_memcpy4
   1360            
   1361            CopyToCanvasPoint(GraphTermometr[0], 1, 33, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000056   82B0               SUB      SP,SP,#+8
   \   00000058   1220               MOVS     R0,#+18
   \   0000005A   0090               STR      R0,[SP, #+0]
   \   0000005C   0300               MOVS     R3,R0
   \   0000005E   2122               MOVS     R2,#+33
   \   00000060   0121               MOVS     R1,#+1
   \   00000062   05A8               ADD      R0,SP,#+20
   \   00000064   ........           BL       CopyToCanvasPoint
   \   00000068   02B0               ADD      SP,SP,#+8
   1362          
   1363            
   1364            if (ScreenLokal->Thermo.AutoOn==1)
   \   0000006A   2700               MOVS     R7,R4
   \   0000006C   8E37               ADDS     R7,R7,#+142
   \   0000006E   3878               LDRB     R0,[R7, #+0]
   \   00000070   0128               CMP      R0,#+1
   \   00000072   6BD1               BNE      ??Termostat_Paint_2
   1365            {
   1366                      
   1367                Label("Auto",0,17,52,6,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   6921               MOVS     R1,#+105
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   1421               MOVS     R1,#+20
   \   00000080   0620               MOVS     R0,#+6
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   3423               MOVS     R3,#+52
   \   00000086   1122               MOVS     R2,#+17
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   3000               MOVS     R0,R6
   \   0000008C   3830               ADDS     R0,R0,#+56
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
   1368                
   1369                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \   00000094   6946               MOV      R1,SP
   \   00000096   0820               MOVS     R0,#+8
   \   00000098   385E               LDRSH    R0,[R7, R0]
   \   0000009A   ........           BL       sIntToStr
   \   0000009E   0200               MOVS     R2,R0
   1370                txt[dl++]=127;
   \   000000A0   1300               MOVS     R3,R2
   \   000000A2   6846               MOV      R0,SP
   \   000000A4   7F21               MOVS     R1,#+127
   \   000000A6   C154               STRB     R1,[R0, R3]
   1371                Label(txt,0,17,43,dl,30,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000A8   82B0               SUB      SP,SP,#+8
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   0090               STR      R0,[SP, #+0]
   \   000000AE   6921               MOVS     R1,#+105
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   1E21               MOVS     R1,#+30
   \   000000B4   521C               ADDS     R2,R2,#+1
   \   000000B6   1000               MOVS     R0,R2
   \   000000B8   0006               LSLS     R0,R0,#+24
   \   000000BA   000E               LSRS     R0,R0,#+24
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   2B23               MOVS     R3,#+43
   \   000000C0   1122               MOVS     R2,#+17
   \   000000C2   0021               MOVS     R1,#+0
   \   000000C4   06A8               ADD      R0,SP,#+24
   \   000000C6   ........           BL       Label
   \   000000CA   06B0               ADD      SP,SP,#+24
   1372                char txt[2]; txt[1]=0; 
   \   000000CC   02A8               ADD      R0,SP,#+8
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   4170               STRB     R1,[R0, #+1]
   1373                
   1374                
   1375                char MaxTmp;
   1376                if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \   000000D2   0621               MOVS     R1,#+6
   \   000000D4   795E               LDRSH    R1,[R7, R1]
   \   000000D6   0422               MOVS     R2,#+4
   \   000000D8   BA5E               LDRSH    R2,[R7, R2]
   \   000000DA   9142               CMP      R1,R2
   \   000000DC   01DA               BGE      ??Termostat_Paint_3
   1377                {
   1378                  MaxTmp=ScreenLokal->Thermo.Temperature[0]; 
   \   000000DE   B988               LDRH     R1,[R7, #+4]
   \   000000E0   00E0               B        ??Termostat_Paint_4
   1379                }else{
   1380                  MaxTmp=ScreenLokal->Thermo.Temperature[1];
   \                     ??Termostat_Paint_3:
   \   000000E2   F988               LDRH     R1,[R7, #+6]
   1381                }
   1382                
   1383                if (ScreenLokal->Thermo.SetTemperature==MaxTmp)
   \                     ??Termostat_Paint_4:
   \   000000E4   0822               MOVS     R2,#+8
   \   000000E6   BA5E               LDRSH    R2,[R7, R2]
   \   000000E8   0906               LSLS     R1,R1,#+24
   \   000000EA   090E               LSRS     R1,R1,#+24
   \   000000EC   8A42               CMP      R2,R1
   \   000000EE   02D1               BNE      ??Termostat_Paint_5
   1384                {
   1385                 txt[0]=31; 
   \   000000F0   1F21               MOVS     R1,#+31
   \   000000F2   0170               STRB     R1,[R0, #+0]
   \   000000F4   01E0               B        ??Termostat_Paint_6
   1386                }else{
   1387                 txt[0]=30;       
   \                     ??Termostat_Paint_5:
   \   000000F6   1E21               MOVS     R1,#+30
   \   000000F8   0170               STRB     R1,[R0, #+0]
   1388                }
   1389                
   1390                Button(txt,45,44,15,17);
   \                     ??Termostat_Paint_6:
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   1120               MOVS     R0,#+17
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   0F23               MOVS     R3,#+15
   \   00000102   2C22               MOVS     R2,#+44
   \   00000104   2D21               MOVS     R1,#+45
   \   00000106   04A8               ADD      R0,SP,#+16
   \   00000108   ........           BL       Button
   \   0000010C   02B0               ADD      SP,SP,#+8
   1391                Button(Speech[g_leng].Ustaw,17,26,43,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   0D20               MOVS     R0,#+13
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   2B23               MOVS     R3,#+43
   \   00000116   1A22               MOVS     R2,#+26
   \   00000118   1121               MOVS     R1,#+17
   \   0000011A   8C46               MOV      R12,R1
   \   0000011C   4049               LDR      R1,??Termostat_Paint_0+0x1C  ;; 0x735
   \   0000011E   3C48               LDR      R0,??Termostat_Paint_0+0xC  ;; g_leng
   \   00000120   0068               LDR      R0,[R0, #+0]
   \   00000122   3C4F               LDR      R7,??Termostat_Paint_0+0x10  ;; 0xa7d
   \   00000124   7843               MULS     R0,R7,R0
   \   00000126   3C4F               LDR      R7,??Termostat_Paint_0+0x14  ;; Speech
   \   00000128   3818               ADDS     R0,R7,R0
   \   0000012A   4018               ADDS     R0,R0,R1
   \   0000012C   6146               MOV      R1,R12
   \   0000012E   ........           BL       Button
   \   00000132   02B0               ADD      SP,SP,#+8
   1392                Button("Auto off",4,3,56,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000134   82B0               SUB      SP,SP,#+8
   \   00000136   0D20               MOVS     R0,#+13
   \   00000138   0090               STR      R0,[SP, #+0]
   \   0000013A   3823               MOVS     R3,#+56
   \   0000013C   0322               MOVS     R2,#+3
   \   0000013E   0421               MOVS     R1,#+4
   \   00000140   4036               ADDS     R6,R6,#+64
   \   00000142   3000               MOVS     R0,R6
   \   00000144   ........           BL       Button
   \   00000148   02B0               ADD      SP,SP,#+8
   \   0000014A   45E0               B        ??Termostat_Paint_7
   1393          
   1394          }else{
   1395          
   1396                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \                     ??Termostat_Paint_2:
   \   0000014C   6946               MOV      R1,SP
   \   0000014E   0820               MOVS     R0,#+8
   \   00000150   385E               LDRSH    R0,[R7, R0]
   \   00000152   ........           BL       sIntToStr
   \   00000156   0200               MOVS     R2,R0
   1397                txt[dl++]=' ';
   \   00000158   6F46               MOV      R7,SP
   \   0000015A   2021               MOVS     R1,#+32
   \   0000015C   3954               STRB     R1,[R7, R0]
   \   0000015E   521C               ADDS     R2,R2,#+1
   \   00000160   1206               LSLS     R2,R2,#+24
   \   00000162   120E               LSRS     R2,R2,#+24
   1398                txt[dl++]=127;
   \   00000164   1000               MOVS     R0,R2
   \   00000166   7F21               MOVS     R1,#+127
   \   00000168   3954               STRB     R1,[R7, R0]
   1399                Label(txt,2,20,39,dl,40,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000016A   82B0               SUB      SP,SP,#+8
   \   0000016C   0020               MOVS     R0,#+0
   \   0000016E   0090               STR      R0,[SP, #+0]
   \   00000170   6921               MOVS     R1,#+105
   \   00000172   03B4               PUSH     {R0,R1}
   \   00000174   2821               MOVS     R1,#+40
   \   00000176   521C               ADDS     R2,R2,#+1
   \   00000178   1000               MOVS     R0,R2
   \   0000017A   0006               LSLS     R0,R0,#+24
   \   0000017C   000E               LSRS     R0,R0,#+24
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   2723               MOVS     R3,#+39
   \   00000182   1422               MOVS     R2,#+20
   \   00000184   0221               MOVS     R1,#+2
   \   00000186   06A8               ADD      R0,SP,#+24
   \   00000188   ........           BL       Label
   \   0000018C   06B0               ADD      SP,SP,#+24
   1400                txt[1]=0; txt[0]=30;
   \   0000018E   0020               MOVS     R0,#+0
   \   00000190   7870               STRB     R0,[R7, #+1]
   \   00000192   1E20               MOVS     R0,#+30
   \   00000194   3870               STRB     R0,[R7, #+0]
   1401                Button(txt,19,48,41,18);
   \   00000196   82B0               SUB      SP,SP,#+8
   \   00000198   1220               MOVS     R0,#+18
   \   0000019A   0090               STR      R0,[SP, #+0]
   \   0000019C   2923               MOVS     R3,#+41
   \   0000019E   3022               MOVS     R2,#+48
   \   000001A0   1321               MOVS     R1,#+19
   \   000001A2   02A8               ADD      R0,SP,#+8
   \   000001A4   ........           BL       Button
   \   000001A8   02B0               ADD      SP,SP,#+8
   1402                txt[0]=31;
   \   000001AA   1F20               MOVS     R0,#+31
   \   000001AC   3870               STRB     R0,[R7, #+0]
   1403                Button(txt,19,21,41,18);
   \   000001AE   82B0               SUB      SP,SP,#+8
   \   000001B0   1220               MOVS     R0,#+18
   \   000001B2   0090               STR      R0,[SP, #+0]
   \   000001B4   2923               MOVS     R3,#+41
   \   000001B6   1522               MOVS     R2,#+21
   \   000001B8   1321               MOVS     R1,#+19
   \   000001BA   02A8               ADD      R0,SP,#+8
   \   000001BC   ........           BL       Button
   \   000001C0   02B0               ADD      SP,SP,#+8
   1404                Button("Auto on",4,3,56,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height) 
   \   000001C2   82B0               SUB      SP,SP,#+8
   \   000001C4   0D20               MOVS     R0,#+13
   \   000001C6   0090               STR      R0,[SP, #+0]
   \   000001C8   3823               MOVS     R3,#+56
   \   000001CA   0322               MOVS     R2,#+3
   \   000001CC   0421               MOVS     R1,#+4
   \   000001CE   4C36               ADDS     R6,R6,#+76
   \   000001D0   3000               MOVS     R0,R6
   \   000001D2   ........           BL       Button
   \   000001D6   02B0               ADD      SP,SP,#+8
   1405            }
   1406            
   1407            if ((ScreenLokal->Button[0].Hide==0) && (CurrentSheet==0))
   \                     ??Termostat_Paint_7:
   \   000001D8   A07C               LDRB     R0,[R4, #+18]
   \   000001DA   C006               LSLS     R0,R0,#+27
   \   000001DC   0DD4               BMI      ??Termostat_Paint_8
   \   000001DE   2879               LDRB     R0,[R5, #+4]
   \   000001E0   0028               CMP      R0,#+0
   \   000001E2   0AD1               BNE      ??Termostat_Paint_8
   1408            {
   1409              Button(ScreenLokal->Button[0].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1410                            25,103,39,22 // X,Y,Width,Height
   1411                            );
   \   000001E4   82B0               SUB      SP,SP,#+8
   \   000001E6   1620               MOVS     R0,#+22
   \   000001E8   0090               STR      R0,[SP, #+0]
   \   000001EA   2723               MOVS     R3,#+39
   \   000001EC   6722               MOVS     R2,#+103
   \   000001EE   1921               MOVS     R1,#+25
   \   000001F0   0B34               ADDS     R4,R4,#+11
   \   000001F2   2000               MOVS     R0,R4
   \   000001F4   ........           BL       Button
   \   000001F8   02B0               ADD      SP,SP,#+8
   1412            }
   1413          }//_______________________ Koniec funkcji Termostat_Paint __________________________
   \                     ??Termostat_Paint_8:
   \   000001FA   11B0               ADD      SP,SP,#+68
   \   000001FC   F0BC               POP      {R4-R7}
   \   000001FE   01BC               POP      {R0}
   \   00000200   0047               BX       R0               ;; return
   \   00000202   C046               Nop      
   \                     ??Termostat_Paint_0:
   \   00000204   ........           DC32     TextToChangeLength
   \   00000208   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000020C   44070000           DC32     0x744
   \   00000210   ........           DC32     g_leng
   \   00000214   7D0A0000           DC32     0xa7d
   \   00000218   ........           DC32     Speech
   \   0000021C   ........           DC32     `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   00000220   35070000           DC32     0x735
   1414            
   1415          
   1416          
   1417          //sprawdzenie czy zmienne specjalne termostatu s¹ odczytywane przez serwer. Je¿eli tak to przypieszenie wys³ania danych;

   \                                 In section Debug.txt, align 4, keep-with-next
   1418          void ExecuteSpecialThermVar(void)
   1419          {
   \                     ExecuteSpecialThermVar:
   \   00000000   01B5               PUSH     {R0,LR}
   1420             for (char IDX=0; IDX<NET.HTTP.VarSetCount; IDX++)
   \   00000002   0020               MOVS     R0,#+0
   \   00000004   02E0               B        ??ExecuteSpecialThermVar_0
   \                     ??ExecuteSpecialThermVar_1:
   \   00000006   401C               ADDS     R0,R0,#+1
   \   00000008   0006               LSLS     R0,R0,#+24
   \   0000000A   000E               LSRS     R0,R0,#+24
   \                     ??ExecuteSpecialThermVar_0:
   \   0000000C   0949               LDR      R1,??ExecuteSpecialThermVar_2  ;; NET
   \   0000000E   0200               MOVS     R2,R0
   \   00000010   F223               MOVS     R3,#+242
   \   00000012   CB5C               LDRB     R3,[R1, R3]
   \   00000014   9A42               CMP      R2,R3
   \   00000016   0AD2               BCS      ??ExecuteSpecialThermVar_3
   \   00000018   0523               MOVS     R3,#+5
   \   0000001A   5A43               MULS     R2,R3,R2
   \   0000001C   8A18               ADDS     R2,R1,R2
   \   0000001E   F632               ADDS     R2,R2,#+246
   \   00000020   1278               LDRB     R2,[R2, #+0]
   \   00000022   632A               CMP      R2,#+99
   \   00000024   01D0               BEQ      ??ExecuteSpecialThermVar_4
   \   00000026   642A               CMP      R2,#+100
   \   00000028   EDD1               BNE      ??ExecuteSpecialThermVar_1
   1421               {  
   1422                 if ((NET.HTTP.NetNodeSet[IDX].NetDataType=='c') || (NET.HTTP.NetNodeSet[IDX].NetDataType=='d'))
   1423                 {
   1424                   NET.Status.NextHttpOrder=HTTP_POST;
   \                     ??ExecuteSpecialThermVar_4:
   \   0000002A   1120               MOVS     R0,#+17
   \   0000002C   C870               STRB     R0,[R1, #+3]
   1425                   break;
   1426                 } 
   1427               }
   1428          }
   \                     ??ExecuteSpecialThermVar_3:
   \   0000002E   08BC               POP      {R3}
   \   00000030   01BC               POP      {R0}
   \   00000032   0047               BX       R0               ;; return
   \                     ??ExecuteSpecialThermVar_2:
   \   00000034   ........           DC32     NET
   1429          
   1430          
   1431          //*-----------------------------------------------------------------------------
   1432          //* Nazwa funkcji :    Termostat_Event
   1433          //* Funkcja strony g³ównej menu
   1434          //*-----------------------------------------------------------------------------
   1435          //*-----------------------------------------------------------------------------
   1436          
   1437          

   \                                 In section Debug.txt, align 4, keep-with-next
   1438          void Termostat_Event(_Screen* ScreenLokal)
   1439          {
   \                     Termostat_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   \   00000004   0026               MOVS     R6,#+0
   1440            char Repaint=0;
   1441            char WriteTmp;
   1442            char txt[5];
   1443            char txt2[5];
   1444          
   1445           if ((CurrentSheet>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000006   C04C               LDR      R4,??Termostat_Event_0  ;; TextToChangeLength
   \   00000008   2079               LDRB     R0,[R4, #+4]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   22D0               BEQ      ??Termostat_Event_1
   \   0000000E   3100               MOVS     R1,R6
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0F21               MOVS     R1,#+15
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   BC48               LDR      R0,??Termostat_Event_0+0x4  ;; Y_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   435E               LDRSH    R3,[R0, R1]
   \   0000001E   BC48               LDR      R0,??Termostat_Event_0+0x8  ;; X_down
   \   00000020   425E               LDRSH    R2,[R0, R1]
   \   00000022   BC48               LDR      R0,??Termostat_Event_0+0xC  ;; Y_up
   \   00000024   415E               LDRSH    R1,[R0, R1]
   \   00000026   BC48               LDR      R0,??Termostat_Event_0+0x10  ;; X_up
   \   00000028   0025               MOVS     R5,#+0
   \   0000002A   405F               LDRSH    R0,[R0, R5]
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   C943               MVNS     R1,R1            ;; #-1
   \   00000036   8842               CMP      R0,R1
   \   00000038   0CD1               BNE      ??Termostat_Event_1
   1446              {
   1447                 if (SheetHistoryIndex>0)
   \   0000003A   E079               LDRB     R0,[R4, #+7]
   \   0000003C   0028               CMP      R0,#+0
   \   0000003E   07D0               BEQ      ??Termostat_Event_2
   1448                    {
   1449                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   00000040   401E               SUBS     R0,R0,#+1
   \   00000042   E071               STRB     R0,[R4, #+7]
   \   00000044   0006               LSLS     R0,R0,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   2018               ADDS     R0,R4,R0
   \   0000004A   2030               ADDS     R0,R0,#+32
   \   0000004C   0078               LDRB     R0,[R0, #+0]
   \   0000004E   2071               STRB     R0,[R4, #+4]
   1450                    } 
   1451                   Repaint=1; 
   \                     ??Termostat_Event_2:
   \   00000050   0126               MOVS     R6,#+1
   \   00000052   4BE1               B        ??Termostat_Event_3
   1452              }else{
   1453            
   1454                      //przycisk opcjonalny
   1455                          if ((ScreenLokal->Button[0].Hide==0) && (CurrentSheet==0))
   \                     ??Termostat_Event_1:
   \   00000054   0698               LDR      R0,[SP, #+24]
   \   00000056   807C               LDRB     R0,[R0, #+18]
   \   00000058   C006               LSLS     R0,R0,#+27
   \   0000005A   21D4               BMI      ??Termostat_Event_4
   \   0000005C   2079               LDRB     R0,[R4, #+4]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   1ED1               BNE      ??Termostat_Event_4
   1456                          {
   1457                             if (Button(ScreenLokal->Button[0].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1458                                      25,103,39,22 // X,Y,Width,Height
   1459                                      )==1)
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   1620               MOVS     R0,#+22
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   2723               MOVS     R3,#+39
   \   0000006A   6722               MOVS     R2,#+103
   \   0000006C   1921               MOVS     R1,#+25
   \   0000006E   0898               LDR      R0,[SP, #+32]
   \   00000070   0B30               ADDS     R0,R0,#+11
   \   00000072   ........           BL       Button
   \   00000076   02B0               ADD      SP,SP,#+8
   \   00000078   0128               CMP      R0,#+1
   \   0000007A   11D1               BNE      ??Termostat_Event_4
   1460                                 {
   1461                                   MainStage.StageButton[1+(10*CurrentSheet)]=1;
   \   0000007C   2179               LDRB     R1,[R4, #+4]
   \   0000007E   0A22               MOVS     R2,#+10
   \   00000080   5143               MULS     R1,R2,R1
   \   00000082   A64A               LDR      R2,??Termostat_Event_0+0x14  ;; MainStage
   \   00000084   5118               ADDS     R1,R2,R1
   \   00000086   0200               MOVS     R2,R0
   \   00000088   4A70               STRB     R2,[R1, #+1]
   1462                                   
   1463                                   //je¿eli ustawiona akcja otwarcia strony
   1464                                   if (ScreenLokal->Button[0].OpenPage) 
   \   0000008A   0F21               MOVS     R1,#+15
   \   0000008C   069A               LDR      R2,[SP, #+24]
   \   0000008E   927C               LDRB     R2,[R2, #+18]
   \   00000090   0A42               TST      R2,R1
   \   00000092   05D0               BEQ      ??Termostat_Event_4
   1465                                   {
   1466                                     CurrentSheet=ScreenLokal->Button[0].OpenPage-1;
   \   00000094   069A               LDR      R2,[SP, #+24]
   \   00000096   927C               LDRB     R2,[R2, #+18]
   \   00000098   1140               ANDS     R1,R1,R2
   \   0000009A   491E               SUBS     R1,R1,#+1
   \   0000009C   2171               STRB     R1,[R4, #+4]
   1467                                     Repaint=1;
   \   0000009E   0600               MOVS     R6,R0
   1468                                   }
   1469                                   
   1470                                 }
   1471                          }
   1472                
   1473                          
   1474                          
   1475                
   1476                      _ProgramTab *pProgramTab=(_ProgramTab*)((AT91C_IFLASH_MEM->FlashProgram));
   1477                      
   1478                      
   1479                      //je¿eli AutoOn
   1480                      if (ScreenLokal->Thermo.AutoOn==1)
   \                     ??Termostat_Event_4:
   \   000000A0   069D               LDR      R5,[SP, #+24]
   \   000000A2   8E35               ADDS     R5,R5,#+142
   \   000000A4   9E48               LDR      R0,??Termostat_Event_0+0x18  ;; `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   000000A6   2978               LDRB     R1,[R5, #+0]
   \   000000A8   0129               CMP      R1,#+1
   \   000000AA   00D0               BEQ      .+4
   \   000000AC   80E0               B        ??Termostat_Event_5
   1481                      {
   1482                          txt[1]=0; txt[0]=31;
   \   000000AE   01AF               ADD      R7,SP,#+4
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   7970               STRB     R1,[R7, #+1]
   \   000000B4   1F21               MOVS     R1,#+31
   \   000000B6   3970               STRB     R1,[R7, #+0]
   1483                      
   1484                          if (Button("Auto off",4,3,56,13)==1)  //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   0D21               MOVS     R1,#+13
   \   000000BC   0091               STR      R1,[SP, #+0]
   \   000000BE   3823               MOVS     R3,#+56
   \   000000C0   0322               MOVS     R2,#+3
   \   000000C2   0421               MOVS     R1,#+4
   \   000000C4   4030               ADDS     R0,R0,#+64
   \   000000C6   ........           BL       Button
   \   000000CA   02B0               ADD      SP,SP,#+8
   \   000000CC   0128               CMP      R0,#+1
   \   000000CE   27D1               BNE      ??Termostat_Event_6
   1485                              {
   1486                              Repaint=1; 
   \   000000D0   0126               MOVS     R6,#+1
   1487                                          
   1488                                //zapis do flash
   1489                                  WriteTmp=0;
   \   000000D2   6846               MOV      R0,SP
   \   000000D4   0021               MOVS     R1,#+0
   \   000000D6   0170               STRB     R1,[R0, #+0]
   1490                                  ScreenLokal->Thermo.AutoOn=WriteTmp;
   \   000000D8   0800               MOVS     R0,R1
   \   000000DA   2870               STRB     R0,[R5, #+0]
   1491                                  unsigned int Save = __get_interrupt_state();  
   \   000000DC   ........           BL       __iar_get_interrupt_state
   \   000000E0   0590               STR      R0,[SP, #+20]
   1492                                  __disable_interrupt();
   \   000000E2   ........           BL       __iar_disable_interrupt
   1493                                  FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.AutoOn),&WriteTmp,1);
                                         ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000E6   3200               MOVS     R2,R6
   \   000000E8   6946               MOV      R1,SP
   \   000000EA   8C46               MOV      R12,R1
   \   000000EC   8D49               LDR      R1,??Termostat_Event_0+0x1C  ;; 0xbc26
   \   000000EE   2079               LDRB     R0,[R4, #+4]
   \   000000F0   A023               MOVS     R3,#+160
   \   000000F2   5843               MULS     R0,R3,R0
   \   000000F4   8C4B               LDR      R3,??Termostat_Event_0+0x20  ;; 0x130100
   \   000000F6   1818               ADDS     R0,R3,R0
   \   000000F8   4018               ADDS     R0,R0,R1
   \   000000FA   6146               MOV      R1,R12
   \   000000FC   ........           BL       FlashWrite
   1494                                  __set_interrupt_state(Save);
   \   00000100   0598               LDR      R0,[SP, #+20]
   \   00000102   ........           BL       __iar_set_interrupt_state
   1495                                  //koniec zapisu do flash
   1496                                  
   1497                                  gProg.Screen[CurrentSheet].Thermo.SetTemperature=pProgramTab->Screen[CurrentSheet].Thermo.SetTemperature;
   \   00000106   2179               LDRB     R1,[R4, #+4]
   \   00000108   A020               MOVS     R0,#+160
   \   0000010A   4143               MULS     R1,R0,R1
   \   0000010C   874A               LDR      R2,??Termostat_Event_0+0x24  ;; 0xbc2e
   \   0000010E   8848               LDR      R0,??Termostat_Event_0+0x28  ;; gProg
   \   00000110   4318               ADDS     R3,R0,R1
   \   00000112   1000               MOVS     R0,R2
   \   00000114   8446               MOV      R12,R0
   \   00000116   8448               LDR      R0,??Termostat_Event_0+0x20  ;; 0x130100
   \   00000118   4018               ADDS     R0,R0,R1
   \   0000011A   6146               MOV      R1,R12
   \   0000011C   405A               LDRH     R0,[R0, R1]
   \   0000011E   9852               STRH     R0,[R3, R2]
   1498                             }
   1499                          
   1500                          if (Button(Speech[g_leng].Ustaw,17,26,43,13)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??Termostat_Event_6:
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0D20               MOVS     R0,#+13
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   2B23               MOVS     R3,#+43
   \   00000128   1A22               MOVS     R2,#+26
   \   0000012A   1121               MOVS     R1,#+17
   \   0000012C   02B5               PUSH     {R1,LR}
   \   0000012E   9446               MOV      R12,R2
   \   00000130   8049               LDR      R1,??Termostat_Event_0+0x2C  ;; 0x735
   \   00000132   8148               LDR      R0,??Termostat_Event_0+0x30  ;; g_leng
   \   00000134   0068               LDR      R0,[R0, #+0]
   \   00000136   814A               LDR      R2,??Termostat_Event_0+0x34  ;; 0xa7d
   \   00000138   5043               MULS     R0,R2,R0
   \   0000013A   814A               LDR      R2,??Termostat_Event_0+0x38  ;; Speech
   \   0000013C   1018               ADDS     R0,R2,R0
   \   0000013E   4018               ADDS     R0,R0,R1
   \   00000140   6246               MOV      R2,R12
   \   00000142   0099               LDR      R1,[SP, #0]
   \   00000144   02B0               ADD      SP,SP,#+8
   \   00000146   ........           BL       Button
   \   0000014A   02B0               ADD      SP,SP,#+8
   \   0000014C   0128               CMP      R0,#+1
   \   0000014E   02D1               BNE      ??Termostat_Event_7
   1501                          {
   1502                            MenuLevel=12;
   \   00000150   0C20               MOVS     R0,#+12
   \   00000152   2065               STR      R0,[R4, #+80]
   1503                            Repaint=1; 
   \   00000154   0126               MOVS     R6,#+1
   1504                          }
   1505                          
   1506                          
   1507                          //prze³¹czenie temperatur w trybie auto
   1508                          signed   short H_Tmp;
   1509                          if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \                     ??Termostat_Event_7:
   \   00000156   0620               MOVS     R0,#+6
   \   00000158   285E               LDRSH    R0,[R5, R0]
   \   0000015A   0421               MOVS     R1,#+4
   \   0000015C   695E               LDRSH    R1,[R5, R1]
   \   0000015E   8842               CMP      R0,R1
   \   00000160   00DA               BGE      ??Termostat_Event_8
   \   00000162   0800               MOVS     R0,R1
   1510                          {
   1511                            H_Tmp=ScreenLokal->Thermo.Temperature[0]; 
   1512                          }else{
   1513                            H_Tmp=ScreenLokal->Thermo.Temperature[1];
   1514                          }
   1515                          
   1516                          
   1517                          if (ScreenLokal->Thermo.SetTemperature==H_Tmp)
   \                     ??Termostat_Event_8:
   \   00000164   0821               MOVS     R1,#+8
   \   00000166   695E               LDRSH    R1,[R5, R1]
   \   00000168   8142               CMP      R1,R0
   \   0000016A   02D1               BNE      ??Termostat_Event_9
   1518                          {
   1519                           txt[0]=31; 
   \   0000016C   1F20               MOVS     R0,#+31
   \   0000016E   3870               STRB     R0,[R7, #+0]
   \   00000170   01E0               B        ??Termostat_Event_10
   1520                          }else{
   1521                           txt[0]=30;
   \                     ??Termostat_Event_9:
   \   00000172   1E20               MOVS     R0,#+30
   \   00000174   3870               STRB     R0,[R7, #+0]
   1522                          }
   1523                          txt[1]=0;
   \                     ??Termostat_Event_10:
   \   00000176   0020               MOVS     R0,#+0
   \   00000178   7870               STRB     R0,[R7, #+1]
   1524                          
   1525                          
   1526                          if (Button(txt,45,44,15,17)==1)
   \   0000017A   82B0               SUB      SP,SP,#+8
   \   0000017C   1120               MOVS     R0,#+17
   \   0000017E   0090               STR      R0,[SP, #+0]
   \   00000180   0F23               MOVS     R3,#+15
   \   00000182   2C22               MOVS     R2,#+44
   \   00000184   2D21               MOVS     R1,#+45
   \   00000186   03A8               ADD      R0,SP,#+12
   \   00000188   ........           BL       Button
   \   0000018C   02B0               ADD      SP,SP,#+8
   \   0000018E   0128               CMP      R0,#+1
   \   00000190   00D0               BEQ      .+4
   \   00000192   ABE0               B        ??Termostat_Event_3
   1527                            {
   1528                                if (ScreenLokal->Thermo.SetTemperature==ScreenLokal->Thermo.Temperature[0])
   \   00000194   0820               MOVS     R0,#+8
   \   00000196   285E               LDRSH    R0,[R5, R0]
   \   00000198   0421               MOVS     R1,#+4
   \   0000019A   695E               LDRSH    R1,[R5, R1]
   \   0000019C   8842               CMP      R0,R1
   \   0000019E   03D1               BNE      ??Termostat_Event_11
   1529                                {      
   1530                                    ScreenLokal->Thermo.SetTemperature=ScreenLokal->Thermo.Temperature[1];
   \   000001A0   E888               LDRH     R0,[R5, #+6]
   \   000001A2   2881               STRH     R0,[R5, #+8]
   1531                                    Repaint=1;
   \   000001A4   0126               MOVS     R6,#+1
   \   000001A6   A1E0               B        ??Termostat_Event_3
   1532                                  
   1533                                }else{
   1534                                    ScreenLokal->Thermo.SetTemperature=ScreenLokal->Thermo.Temperature[0];
   \                     ??Termostat_Event_11:
   \   000001A8   A888               LDRH     R0,[R5, #+4]
   \   000001AA   2881               STRH     R0,[R5, #+8]
   1535                                    Repaint=1;
   \   000001AC   0126               MOVS     R6,#+1
   \   000001AE   9DE0               B        ??Termostat_Event_3
   1536                                }
   1537                                
   1538                            }
   1539                            
   1540                          
   1541                      }
   1542                      else
   1543                      {
   1544                   
   1545                          if (Button("Auto on",4,3,56,13)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height) 
   \                     ??Termostat_Event_5:
   \   000001B0   82B0               SUB      SP,SP,#+8
   \   000001B2   0D21               MOVS     R1,#+13
   \   000001B4   0091               STR      R1,[SP, #+0]
   \   000001B6   3823               MOVS     R3,#+56
   \   000001B8   0322               MOVS     R2,#+3
   \   000001BA   0421               MOVS     R1,#+4
   \   000001BC   4C30               ADDS     R0,R0,#+76
   \   000001BE   ........           BL       Button
   \   000001C2   02B0               ADD      SP,SP,#+8
   \   000001C4   0128               CMP      R0,#+1
   \   000001C6   2FD1               BNE      ??Termostat_Event_12
   1546                            {
   1547                              Repaint=1; 
   \   000001C8   0600               MOVS     R6,R0
   1548                                          
   1549                                //zapis do flash
   1550                                  WriteTmp=1;
   \   000001CA   6946               MOV      R1,SP
   \   000001CC   0200               MOVS     R2,R0
   \   000001CE   0A70               STRB     R2,[R1, #+0]
   1551                                  ScreenLokal->Thermo.AutoOn=WriteTmp;
   \   000001D0   2870               STRB     R0,[R5, #+0]
   1552                                  unsigned int Save = __get_interrupt_state();  
   \   000001D2   ........           BL       __iar_get_interrupt_state
   \   000001D6   0700               MOVS     R7,R0
   1553                                  __disable_interrupt();
   \   000001D8   ........           BL       __iar_disable_interrupt
   1554                                  FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.AutoOn),&WriteTmp,1);
                                         ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000001DC   8C46               MOV      R12,R1
   \   000001DE   5149               LDR      R1,??Termostat_Event_0+0x1C  ;; 0xbc26
   \   000001E0   2079               LDRB     R0,[R4, #+4]
   \   000001E2   A023               MOVS     R3,#+160
   \   000001E4   5843               MULS     R0,R3,R0
   \   000001E6   504B               LDR      R3,??Termostat_Event_0+0x20  ;; 0x130100
   \   000001E8   1818               ADDS     R0,R3,R0
   \   000001EA   4018               ADDS     R0,R0,R1
   \   000001EC   6146               MOV      R1,R12
   \   000001EE   ........           BL       FlashWrite
   1555                                  __set_interrupt_state(Save);
   \   000001F2   3800               MOVS     R0,R7
   \   000001F4   ........           BL       __iar_set_interrupt_state
   \   000001F8   2079               LDRB     R0,[R4, #+4]
   \   000001FA   A021               MOVS     R1,#+160
   \   000001FC   4843               MULS     R0,R1,R0
   \   000001FE   4C49               LDR      R1,??Termostat_Event_0+0x28  ;; gProg
   \   00000200   0818               ADDS     R0,R1,R0
   \   00000202   5049               LDR      R1,??Termostat_Event_0+0x3C  ;; DateTime
   \   00000204   504A               LDR      R2,??Termostat_Event_0+0x40  ;; 0xbc30
   \   00000206   8B79               LDRB     R3,[R1, #+6]
   \   00000208   9B00               LSLS     R3,R3,#+2
   \   0000020A   C318               ADDS     R3,R0,R3
   \   0000020C   9A58               LDR      R2,[R3, R2]
   \   0000020E   C978               LDRB     R1,[R1, #+3]
   \   00000210   CA40               LSRS     R2,R2,R1
   \   00000212   D107               LSLS     R1,R2,#+31
   \   00000214   04D5               BPL      ??Termostat_Event_13
   1556                                  //koniec zapisu do flash
   1557                                  
   1558                                  if (((gProg.Screen[CurrentSheet].Thermo.Chart[DateTime.DayOfWeek]>>DateTime.Hour) & 0x1)==1)
   1559                                  {
   1560                                    gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[0]; 
   \   00000216   4D49               LDR      R1,??Termostat_Event_0+0x44  ;; 0xbc2a
   \   00000218   4018               ADDS     R0,R0,R1
   \   0000021A   0188               LDRH     R1,[R0, #+0]
   \   0000021C   8180               STRH     R1,[R0, #+4]
   \   0000021E   03E0               B        ??Termostat_Event_12
   1561                                  }else{
   1562                                    gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[1]; 
   \                     ??Termostat_Event_13:
   \   00000220   4A49               LDR      R1,??Termostat_Event_0+0x44  ;; 0xbc2a
   \   00000222   4018               ADDS     R0,R0,R1
   \   00000224   4188               LDRH     R1,[R0, #+2]
   \   00000226   8180               STRH     R1,[R0, #+4]
   1563                                  }
   1564          
   1565                             }
   1566                                  
   1567                      
   1568                          txt[1]=0; txt[0]=30;
   \                     ??Termostat_Event_12:
   \   00000228   01AF               ADD      R7,SP,#+4
   \   0000022A   0020               MOVS     R0,#+0
   \   0000022C   7870               STRB     R0,[R7, #+1]
   \   0000022E   1E20               MOVS     R0,#+30
   \   00000230   3870               STRB     R0,[R7, #+0]
   1569                          if ((Button(txt,19,48,41,18)==2)  && ((ScreenLokal->Thermo.SetTemperature)<500)) {((ScreenLokal->Thermo.SetTemperature))++;  Repaint=1; }  //w górê
   \   00000232   82B0               SUB      SP,SP,#+8
   \   00000234   1220               MOVS     R0,#+18
   \   00000236   0090               STR      R0,[SP, #+0]
   \   00000238   2923               MOVS     R3,#+41
   \   0000023A   3022               MOVS     R2,#+48
   \   0000023C   1321               MOVS     R1,#+19
   \   0000023E   03A8               ADD      R0,SP,#+12
   \   00000240   ........           BL       Button
   \   00000244   02B0               ADD      SP,SP,#+8
   \   00000246   0228               CMP      R0,#+2
   \   00000248   0AD1               BNE      ??Termostat_Event_14
   \   0000024A   0820               MOVS     R0,#+8
   \   0000024C   285E               LDRSH    R0,[R5, R0]
   \   0000024E   FA21               MOVS     R1,#+250
   \   00000250   4900               LSLS     R1,R1,#+1        ;; #+500
   \   00000252   8842               CMP      R0,R1
   \   00000254   04DA               BGE      ??Termostat_Event_14
   \   00000256   0820               MOVS     R0,#+8
   \   00000258   285E               LDRSH    R0,[R5, R0]
   \   0000025A   401C               ADDS     R0,R0,#+1
   \   0000025C   2881               STRH     R0,[R5, #+8]
   \   0000025E   0126               MOVS     R6,#+1
   1570                      
   1571                          txt2[0]=31; txt2[1]=0;
   \                     ??Termostat_Event_14:
   \   00000260   03A8               ADD      R0,SP,#+12
   \   00000262   1F21               MOVS     R1,#+31
   \   00000264   0170               STRB     R1,[R0, #+0]
   \   00000266   0021               MOVS     R1,#+0
   \   00000268   4170               STRB     R1,[R0, #+1]
   1572                          if ((Button(txt2,19,21,41,18)==2) && ((ScreenLokal->Thermo.SetTemperature)>0)) {((ScreenLokal->Thermo.SetTemperature))--; Repaint=1; }   //w dó³
   \   0000026A   82B0               SUB      SP,SP,#+8
   \   0000026C   1220               MOVS     R0,#+18
   \   0000026E   0090               STR      R0,[SP, #+0]
   \   00000270   2923               MOVS     R3,#+41
   \   00000272   1522               MOVS     R2,#+21
   \   00000274   1321               MOVS     R1,#+19
   \   00000276   05A8               ADD      R0,SP,#+20
   \   00000278   ........           BL       Button
   \   0000027C   02B0               ADD      SP,SP,#+8
   \   0000027E   0228               CMP      R0,#+2
   \   00000280   08D1               BNE      ??Termostat_Event_15
   \   00000282   0820               MOVS     R0,#+8
   \   00000284   285E               LDRSH    R0,[R5, R0]
   \   00000286   0128               CMP      R0,#+1
   \   00000288   04DB               BLT      ??Termostat_Event_15
   \   0000028A   0820               MOVS     R0,#+8
   \   0000028C   285E               LDRSH    R0,[R5, R0]
   \   0000028E   401E               SUBS     R0,R0,#+1
   \   00000290   2881               STRH     R0,[R5, #+8]
   \   00000292   0126               MOVS     R6,#+1
   1573                      
   1574                           //zapis zmiany temperatury zadanej w trybie manualnym
   1575                           if ((Button(txt,19,48,41,18)==1) || (Button(txt2,19,21,41,18)==1))
   \                     ??Termostat_Event_15:
   \   00000294   82B0               SUB      SP,SP,#+8
   \   00000296   1220               MOVS     R0,#+18
   \   00000298   0090               STR      R0,[SP, #+0]
   \   0000029A   2923               MOVS     R3,#+41
   \   0000029C   3022               MOVS     R2,#+48
   \   0000029E   1321               MOVS     R1,#+19
   \   000002A0   03A8               ADD      R0,SP,#+12
   \   000002A2   ........           BL       Button
   \   000002A6   02B0               ADD      SP,SP,#+8
   \   000002A8   0128               CMP      R0,#+1
   \   000002AA   0BD0               BEQ      ??Termostat_Event_16
   \   000002AC   82B0               SUB      SP,SP,#+8
   \   000002AE   1220               MOVS     R0,#+18
   \   000002B0   0090               STR      R0,[SP, #+0]
   \   000002B2   2923               MOVS     R3,#+41
   \   000002B4   1522               MOVS     R2,#+21
   \   000002B6   1321               MOVS     R1,#+19
   \   000002B8   05A8               ADD      R0,SP,#+20
   \   000002BA   ........           BL       Button
   \   000002BE   02B0               ADD      SP,SP,#+8
   \   000002C0   0128               CMP      R0,#+1
   \   000002C2   13D1               BNE      ??Termostat_Event_3
   1576                           {
   1577                                //zapis do flash
   1578                                  unsigned int Save = __get_interrupt_state();  
   \                     ??Termostat_Event_16:
   \   000002C4   ........           BL       __iar_get_interrupt_state
   \   000002C8   0500               MOVS     R5,R0
   1579                                  __disable_interrupt();
   \   000002CA   ........           BL       __iar_disable_interrupt
   1580                                    FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.SetTemperature),&ScreenLokal->Thermo.SetTemperature,1);
                                           ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000002CE   0122               MOVS     R2,#+1
   \   000002D0   0699               LDR      R1,[SP, #+24]
   \   000002D2   9631               ADDS     R1,R1,#+150
   \   000002D4   1548               LDR      R0,??Termostat_Event_0+0x24  ;; 0xbc2e
   \   000002D6   2379               LDRB     R3,[R4, #+4]
   \   000002D8   A024               MOVS     R4,#+160
   \   000002DA   6343               MULS     R3,R4,R3
   \   000002DC   124C               LDR      R4,??Termostat_Event_0+0x20  ;; 0x130100
   \   000002DE   E318               ADDS     R3,R4,R3
   \   000002E0   1818               ADDS     R0,R3,R0
   \   000002E2   ........           BL       FlashWrite
   1581                                  __set_interrupt_state(Save);
   \   000002E6   2800               MOVS     R0,R5
   \   000002E8   ........           BL       __iar_set_interrupt_state
   1582                                  //koniec zapisu do flash
   1583                           }
   1584          
   1585                      }
   1586                      
   1587                      
   1588          
   1589                      
   1590              }
   1591           
   1592           
   1593          
   1594           
   1595           if (Repaint==1) 
   \                     ??Termostat_Event_3:
   \   000002EC   012E               CMP      R6,#+1
   \   000002EE   07D1               BNE      ??Termostat_Event_17
   1596           {
   1597             ThermostatsTimeChartExecute(); 
   \   000002F0   ........           BL       ThermostatsTimeChartExecute
   1598             ThermostatsExecute();
   \   000002F4   ........           BL       ThermostatsExecute
   1599             MenuPaint();
   \   000002F8   ........           BL       MenuPaint
   1600             ExecuteSpecialThermVar();
   \   000002FC   ........           BL       ExecuteSpecialThermVar
   1601           }
   1602          }//_______________________ Koniec funkcji Termostat_Event __________________________
   \                     ??Termostat_Event_17:
   \   00000300   07B0               ADD      SP,SP,#+28
   \   00000302   F0BC               POP      {R4-R7}
   \   00000304   01BC               POP      {R0}
   \   00000306   0047               BX       R0               ;; return
   \                     ??Termostat_Event_0:
   \   00000308   ........           DC32     TextToChangeLength
   \   0000030C   ........           DC32     Y_down
   \   00000310   ........           DC32     X_down
   \   00000314   ........           DC32     Y_up
   \   00000318   ........           DC32     X_up
   \   0000031C   ........           DC32     MainStage
   \   00000320   ........           DC32     `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   00000324   26BC0000           DC32     0xbc26
   \   00000328   00011300           DC32     0x130100
   \   0000032C   2EBC0000           DC32     0xbc2e
   \   00000330   ........           DC32     gProg
   \   00000334   35070000           DC32     0x735
   \   00000338   ........           DC32     g_leng
   \   0000033C   7D0A0000           DC32     0xa7d
   \   00000340   ........           DC32     Speech
   \   00000344   ........           DC32     DateTime
   \   00000348   30BC0000           DC32     0xbc30
   \   0000034C   2ABC0000           DC32     0xbc2a
   1603            
   1604          
   1605          
   1606          
   1607          
   1608          //*-----------------------------------------------------------------------------
   1609          //* Nazwa funkcji :    Termostat_Refresh
   1610          //* Funkcja strony g³ównej menu
   1611          //*-----------------------------------------------------------------------------
   1612          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1613          void Termostat_Refresh(_Screen* ScreenLokal)
   1614          {
   \                     Termostat_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   1615          
   1616            char dl;
   1617            char txt[6];
   1618            signed short Value=MainStage.StageI[ScreenLokal->Thermo.SensorNode].Value[ScreenLokal->Thermo.SensorReg];
   \   00000004   0400               MOVS     R4,R0
   \   00000006   8C34               ADDS     R4,R4,#+140
   \   00000008   A020               MOVS     R0,#+160
   \   0000000A   2179               LDRB     R1,[R4, #+4]
   \   0000000C   4900               LSLS     R1,R1,#+1
   \   0000000E   0322               MOVS     R2,#+3
   \   00000010   A256               LDRSB    R2,[R4, R2]
   \   00000012   1623               MOVS     R3,#+22
   \   00000014   5A43               MULS     R2,R3,R2
   \   00000016   734B               LDR      R3,??Termostat_Refresh_0  ;; MainStage
   \   00000018   9A18               ADDS     R2,R3,R2
   \   0000001A   5118               ADDS     R1,R2,R1
   \   0000001C   0D5E               LDRSH    R5,[R1, R0]
   1619            
   1620             if (ScreenLokal->Thermo.AutoOn==1)
   \   0000001E   A078               LDRB     R0,[R4, #+2]
   \   00000020   0128               CMP      R0,#+1
   \   00000022   1AD1               BNE      ??Termostat_Refresh_1
   1621            {
   1622                     
   1623                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \   00000024   6946               MOV      R1,SP
   \   00000026   0A20               MOVS     R0,#+10
   \   00000028   205E               LDRSH    R0,[R4, R0]
   \   0000002A   ........           BL       sIntToStr
   \   0000002E   0200               MOVS     R2,R0
   1624                txt[dl++]=127;
   \   00000030   6946               MOV      R1,SP
   \   00000032   7F23               MOVS     R3,#+127
   \   00000034   0B54               STRB     R3,[R1, R0]
   1625                Label(txt,0,17,43,dl,27,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000036   82B0               SUB      SP,SP,#+8
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0090               STR      R0,[SP, #+0]
   \   0000003C   6921               MOVS     R1,#+105
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   1B21               MOVS     R1,#+27
   \   00000042   521C               ADDS     R2,R2,#+1
   \   00000044   1000               MOVS     R0,R2
   \   00000046   0006               LSLS     R0,R0,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   2B23               MOVS     R3,#+43
   \   0000004E   1122               MOVS     R2,#+17
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   06A8               ADD      R0,SP,#+24
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
   \                     ??Termostat_Refresh_1:
   \   0000005A   6348               LDR      R0,??Termostat_Refresh_0+0x4  ;; 0xffff8aaa
   \   0000005C   8542               CMP      R5,R0
   \   0000005E   15D0               BEQ      ??Termostat_Refresh_2
   1626                
   1627            }
   1628            
   1629            
   1630             if  ((Value)!=(signed short)0x8AAA)          
   1631            { 
   1632              
   1633              dl=sIntToStr((MainStage.StageI[ScreenLokal->Thermo.SensorNode].Value[ScreenLokal->Thermo.SensorReg]),txt);
   \   00000060   6946               MOV      R1,SP
   \   00000062   A020               MOVS     R0,#+160
   \   00000064   2279               LDRB     R2,[R4, #+4]
   \   00000066   5200               LSLS     R2,R2,#+1
   \   00000068   0323               MOVS     R3,#+3
   \   0000006A   E356               LDRSB    R3,[R4, R3]
   \   0000006C   1626               MOVS     R6,#+22
   \   0000006E   7343               MULS     R3,R6,R3
   \   00000070   5C4E               LDR      R6,??Termostat_Refresh_0  ;; MainStage
   \   00000072   F318               ADDS     R3,R6,R3
   \   00000074   9A18               ADDS     R2,R3,R2
   \   00000076   105E               LDRSH    R0,[R2, R0]
   \   00000078   ........           BL       sIntToStr
   \   0000007C   0200               MOVS     R2,R0
   1634              txt[dl++]=127;
   \   0000007E   6946               MOV      R1,SP
   \   00000080   7F23               MOVS     R3,#+127
   \   00000082   0B54               STRB     R3,[R1, R0]
   \   00000084   521C               ADDS     R2,R2,#+1
   \   00000086   1206               LSLS     R2,R2,#+24
   \   00000088   120E               LSRS     R2,R2,#+24
   \   0000008A   0BE0               B        ??Termostat_Refresh_3
   1635            }else{
   1636              txt[0]='-';txt[1]=' ';txt[2]='?'; txt[3]=' ';txt[4]='-'; txt[5]=0;
   \                     ??Termostat_Refresh_2:
   \   0000008C   2D20               MOVS     R0,#+45
   \   0000008E   6946               MOV      R1,SP
   \   00000090   0870               STRB     R0,[R1, #+0]
   \   00000092   2022               MOVS     R2,#+32
   \   00000094   4A70               STRB     R2,[R1, #+1]
   \   00000096   3F23               MOVS     R3,#+63
   \   00000098   8B70               STRB     R3,[R1, #+2]
   \   0000009A   CA70               STRB     R2,[R1, #+3]
   \   0000009C   0871               STRB     R0,[R1, #+4]
   \   0000009E   0020               MOVS     R0,#+0
   \   000000A0   4871               STRB     R0,[R1, #+5]
   1637              dl=5;
   \   000000A2   0522               MOVS     R2,#+5
   1638            }
   1639          
   1640            char Ypoz=81;
   \                     ??Termostat_Refresh_3:
   \   000000A4   5127               MOVS     R7,#+81
   1641            if ((ScreenLokal->Button[0].Hide==0) || (CurrentSheet>0))
   \   000000A6   0298               LDR      R0,[SP, #+8]
   \   000000A8   807C               LDRB     R0,[R0, #+18]
   \   000000AA   C006               LSLS     R0,R0,#+27
   \   000000AC   03D5               BPL      ??Termostat_Refresh_4
   \   000000AE   4F48               LDR      R0,??Termostat_Refresh_0+0x8  ;; TextToChangeLength + 4
   \   000000B0   0078               LDRB     R0,[R0, #+0]
   \   000000B2   0028               CMP      R0,#+0
   \   000000B4   00D0               BEQ      ??Termostat_Refresh_5
   1642            {
   1643              Ypoz=73;
   \                     ??Termostat_Refresh_4:
   \   000000B6   4927               MOVS     R7,#+73
   1644            }
   1645            
   1646            
   1647            static DzielBat;
                          ^
Warning[Pe260]: explicit type is missing ("int" assumed)
   1648            
   1649            
   1650            if (DzielBat<20) {DzielBat++;} else {DzielBat=0;} 
   \                     ??Termostat_Refresh_5:
   \   000000B8   4D4E               LDR      R6,??Termostat_Refresh_0+0xC  ;; ??LastTemp
   \   000000BA   7068               LDR      R0,[R6, #+4]
   \   000000BC   1428               CMP      R0,#+20
   \   000000BE   02DA               BGE      ??Termostat_Refresh_6
   \   000000C0   401C               ADDS     R0,R0,#+1
   \   000000C2   7060               STR      R0,[R6, #+4]
   \   000000C4   01E0               B        ??Termostat_Refresh_7
   \                     ??Termostat_Refresh_6:
   \   000000C6   0020               MOVS     R0,#+0
   \   000000C8   7060               STR      R0,[R6, #+4]
   1651            
   1652            if((MainStage.StageI[ScreenLokal->Thermo.SensorNode].Port & 0x8000) && (DzielBat>12) && ((Value)!=(signed short)0x8AAA))
   \                     ??Termostat_Refresh_7:
   \   000000CA   0320               MOVS     R0,#+3
   \   000000CC   2056               LDRSB    R0,[R4, R0]
   \   000000CE   1621               MOVS     R1,#+22
   \   000000D0   4843               MULS     R0,R1,R0
   \   000000D2   4449               LDR      R1,??Termostat_Refresh_0  ;; MainStage
   \   000000D4   0818               ADDS     R0,R1,R0
   \   000000D6   A030               ADDS     R0,R0,#+160
   \   000000D8   0088               LDRH     R0,[R0, #+0]
   \   000000DA   0004               LSLS     R0,R0,#+16
   \   000000DC   21D5               BPL      ??Termostat_Refresh_8
   \   000000DE   7068               LDR      R0,[R6, #+4]
   \   000000E0   0D28               CMP      R0,#+13
   \   000000E2   1EDB               BLT      ??Termostat_Refresh_8
   \   000000E4   4048               LDR      R0,??Termostat_Refresh_0+0x4  ;; 0xffff8aaa
   \   000000E6   8542               CMP      R5,R0
   \   000000E8   1BD0               BEQ      ??Termostat_Refresh_8
   1653            {
   1654              Label20(0,2,0,Ypoz,0,64,0,105,0);
                     ^
Warning[Pe223]: function "Label20" declared implicitly
   \   000000EA   82B0               SUB      SP,SP,#+8
   \   000000EC   0020               MOVS     R0,#+0
   \   000000EE   0090               STR      R0,[SP, #+0]
   \   000000F0   6921               MOVS     R1,#+105
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   4021               MOVS     R1,#+64
   \   000000F6   03B4               PUSH     {R0,R1}
   \   000000F8   3B00               MOVS     R3,R7
   \   000000FA   0200               MOVS     R2,R0
   \   000000FC   0221               MOVS     R1,#+2
   \   000000FE   ........           BL       Label20
   \   00000102   06B0               ADD      SP,SP,#+24
   1655              CopyToCanvasPoint((char*)BateriaWyladowanaDuza, 24, Ypoz+10, 19,8);
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0820               MOVS     R0,#+8
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   1323               MOVS     R3,#+19
   \   0000010C   0A37               ADDS     R7,R7,#+10
   \   0000010E   3A00               MOVS     R2,R7
   \   00000110   1206               LSLS     R2,R2,#+24
   \   00000112   120E               LSRS     R2,R2,#+24
   \   00000114   1821               MOVS     R1,#+24
   \   00000116   3000               MOVS     R0,R6
   \   00000118   0C30               ADDS     R0,R0,#+12
   \   0000011A   ........           BL       CopyToCanvasPoint
   \   0000011E   02B0               ADD      SP,SP,#+8
   \   00000120   0EE0               B        ??Termostat_Refresh_9
   1656            }  
   1657            else
   1658            {  
   1659              Label20(txt,2,1,Ypoz,dl,60,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                     ^
Warning[Pe223]: function "Label20" declared implicitly
   \                     ??Termostat_Refresh_8:
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   0020               MOVS     R0,#+0
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   6921               MOVS     R1,#+105
   \   0000012A   03B4               PUSH     {R0,R1}
   \   0000012C   3C21               MOVS     R1,#+60
   \   0000012E   1000               MOVS     R0,R2
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   3B00               MOVS     R3,R7
   \   00000134   0122               MOVS     R2,#+1
   \   00000136   0221               MOVS     R1,#+2
   \   00000138   06A8               ADD      R0,SP,#+24
   \   0000013A   ........           BL       Label20
   \   0000013E   06B0               ADD      SP,SP,#+24
   1660            }
   1661            
   1662            
   1663            
   1664            V_line(9,36,12,0);
   \                     ??Termostat_Refresh_9:
   \   00000140   0023               MOVS     R3,#+0
   \   00000142   0C22               MOVS     R2,#+12
   \   00000144   2421               MOVS     R1,#+36
   \   00000146   0920               MOVS     R0,#+9
   \   00000148   ........           BL       V_line
   1665            
   1666            static int TermAmionation;
   1667            
   1668            TermAmionation++;
   \   0000014C   B068               LDR      R0,[R6, #+8]
   \   0000014E   401C               ADDS     R0,R0,#+1
   \   00000150   B060               STR      R0,[R6, #+8]
   1669            if (TermAmionation>12) TermAmionation=1;
   \   00000152   0D28               CMP      R0,#+13
   \   00000154   01DB               BLT      ??Termostat_Refresh_10
   \   00000156   0120               MOVS     R0,#+1
   \   00000158   B060               STR      R0,[R6, #+8]
   1670            if ((PortStageRead(MainStage.StageQ[ScreenLokal->Thermo.ActorNode].Port , ScreenLokal->Thermo.ActorPort))==0) TermAmionation=4;
   \                     ??Termostat_Refresh_10:
   \   0000015A   6178               LDRB     R1,[R4, #+1]
   \   0000015C   2548               LDR      R0,??Termostat_Refresh_0+0x10  ;; 0x3a2
   \   0000015E   0022               MOVS     R2,#+0
   \   00000160   A256               LDRSB    R2,[R4, R2]
   \   00000162   1623               MOVS     R3,#+22
   \   00000164   5A43               MULS     R2,R3,R2
   \   00000166   1F4B               LDR      R3,??Termostat_Refresh_0  ;; MainStage
   \   00000168   9A18               ADDS     R2,R3,R2
   \   0000016A   105A               LDRH     R0,[R2, R0]
   \   0000016C   0004               LSLS     R0,R0,#+16
   \   0000016E   0014               ASRS     R0,R0,#+16
   \   00000170   ........           BL       PortStageRead
   \   00000174   0028               CMP      R0,#+0
   \   00000176   01D1               BNE      ??Termostat_Refresh_11
   \   00000178   0420               MOVS     R0,#+4
   \   0000017A   B060               STR      R0,[R6, #+8]
   1671          
   1672            V_line(9,36,TermAmionation,1);
   \                     ??Termostat_Refresh_11:
   \   0000017C   0123               MOVS     R3,#+1
   \   0000017E   B268               LDR      R2,[R6, #+8]
   \   00000180   1206               LSLS     R2,R2,#+24
   \   00000182   120E               LSRS     R2,R2,#+24
   \   00000184   2421               MOVS     R1,#+36
   \   00000186   0920               MOVS     R0,#+9
   \   00000188   ........           BL       V_line
   1673          
   1674            static short int LastTemp;
   1675            
   1676            if (LastTemp!=ScreenLokal->Thermo.SetTemperature)
   \   0000018C   0020               MOVS     R0,#+0
   \   0000018E   305E               LDRSH    R0,[R6, R0]
   \   00000190   0A21               MOVS     R1,#+10
   \   00000192   615E               LDRSH    R1,[R4, R1]
   \   00000194   8842               CMP      R0,R1
   \   00000196   21D0               BEQ      ??Termostat_Refresh_12
   1677            {  
   1678          
   1679                  signed   short H_Tmp;
   1680                if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \   00000198   0820               MOVS     R0,#+8
   \   0000019A   205E               LDRSH    R0,[R4, R0]
   \   0000019C   0621               MOVS     R1,#+6
   \   0000019E   615E               LDRSH    R1,[R4, R1]
   \   000001A0   8842               CMP      R0,R1
   \   000001A2   00DA               BGE      ??Termostat_Refresh_13
   \   000001A4   0800               MOVS     R0,R1
   1681                {
   1682                  H_Tmp=ScreenLokal->Thermo.Temperature[0]; 
   1683                }else{
   1684                  H_Tmp=ScreenLokal->Thermo.Temperature[1];
   1685                }
   1686                
   1687                if (ScreenLokal->Thermo.AutoOn==1)
   \                     ??Termostat_Refresh_13:
   \   000001A6   A178               LDRB     R1,[R4, #+2]
   \   000001A8   0129               CMP      R1,#+1
   \   000001AA   15D1               BNE      ??Termostat_Refresh_14
   1688                {
   1689                  if (ScreenLokal->Thermo.SetTemperature==H_Tmp)
   \   000001AC   0A21               MOVS     R1,#+10
   \   000001AE   615E               LDRSH    R1,[R4, R1]
   \   000001B0   8142               CMP      R1,R0
   \   000001B2   6846               MOV      R0,SP
   \   000001B4   02D1               BNE      ??Termostat_Refresh_15
   1690                  {
   1691                   txt[0]=31; 
   \   000001B6   1F21               MOVS     R1,#+31
   \   000001B8   0170               STRB     R1,[R0, #+0]
   \   000001BA   01E0               B        ??Termostat_Refresh_16
   1692                  }else{
   1693                   txt[0]=30;       
   \                     ??Termostat_Refresh_15:
   \   000001BC   1E21               MOVS     R1,#+30
   \   000001BE   0170               STRB     R1,[R0, #+0]
   1694                  }
   1695                  txt[1]=0; 
   \                     ??Termostat_Refresh_16:
   \   000001C0   0021               MOVS     R1,#+0
   \   000001C2   4170               STRB     R1,[R0, #+1]
   1696                  
   1697                  Button(txt,45,44,15,17);
   \   000001C4   82B0               SUB      SP,SP,#+8
   \   000001C6   1120               MOVS     R0,#+17
   \   000001C8   0090               STR      R0,[SP, #+0]
   \   000001CA   0F23               MOVS     R3,#+15
   \   000001CC   2C22               MOVS     R2,#+44
   \   000001CE   2D21               MOVS     R1,#+45
   \   000001D0   02A8               ADD      R0,SP,#+8
   \   000001D2   ........           BL       Button
   \   000001D6   02B0               ADD      SP,SP,#+8
   1698                }
   1699                LastTemp=ScreenLokal->Thermo.SetTemperature;
   \                     ??Termostat_Refresh_14:
   \   000001D8   6089               LDRH     R0,[R4, #+10]
   \   000001DA   3080               STRH     R0,[R6, #+0]
   1700            }
   1701          
   1702            
   1703          }//_______________________ Koniec funkcji Termostat_Refresh __________________________
   \                     ??Termostat_Refresh_12:
   \   000001DC   FEBC               POP      {R1-R7}
   \   000001DE   01BC               POP      {R0}
   \   000001E0   0047               BX       R0               ;; return
   \   000001E2   C046               Nop      
   \                     ??Termostat_Refresh_0:
   \   000001E4   ........           DC32     MainStage
   \   000001E8   AA8AFFFF           DC32     0xffff8aaa
   \   000001EC   ........           DC32     TextToChangeLength + 4
   \   000001F0   ........           DC32     ??LastTemp
   \   000001F4   A2030000           DC32     0x3a2

   \                                 In section .data, align 4
   \                     ??LastTemp:
   \   00000000   0000               DC8 0, 0
   \   00000002   0000               DC8 0, 0
   \   00000004   00000000           DC8 0, 0, 0, 0
   \   00000008   00000000           DC8 0, 0, 0, 0
   \   char __data BateriaWyladowanaDuza[3][8]
   \                     BateriaWyladowanaDuza:
   \   0000000C   FC0407050507       DC8 252, 4, 7, 5, 5, 7, 4, 252, 255, 1, 226, 196, 136, 16, 32, 255, 7
   \              04FCFF01E2C4
   \              881020FF07  
   \   0000001D   040505050504       DC8 4, 5, 5, 5, 5, 4, 7
   \              07          
   1704            
   1705          
   1706          
   1707          
   1708          
   1709          
   1710          

   \                                 In section Debug.txt, align 4, keep-with-next
   1711          void Timetable_Paint(char Screen)
   1712          {         
   \                     Timetable_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   89B0               SUB      SP,SP,#+36
   \   00000004   0400               MOVS     R4,R0
   1713            
   1714               if(Screen) List_Paint(Speech[g_leng].Terminarz,0,1,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   17D0               BEQ      ??Timetable_Paint_0
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   89A0               ADR      R0,??Timetable_Paint_1  ;; 0x20, 0x00, 0x00, 0x00
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0321               MOVS     R1,#+3
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   0122               MOVS     R2,#+1
   \   00000020   0100               MOVS     R1,R0
   \   00000022   8648               LDR      R0,??Timetable_Paint_1+0x4  ;; 0x762
   \   00000024   864D               LDR      R5,??Timetable_Paint_1+0x8  ;; g_leng
   \   00000026   2D68               LDR      R5,[R5, #+0]
   \   00000028   864E               LDR      R6,??Timetable_Paint_1+0xC  ;; 0xa7d
   \   0000002A   7543               MULS     R5,R6,R5
   \   0000002C   864E               LDR      R6,??Timetable_Paint_1+0x10  ;; Speech
   \   0000002E   7519               ADDS     R5,R6,R5
   \   00000030   2818               ADDS     R0,R5,R0
   \   00000032   ........           BL       List_Paint
   \   00000036   0AB0               ADD      SP,SP,#+40
   1715          
   1716          
   1717              char L_TaskAmount;
   1718            
   1719              L_TaskAmount=AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount;
   \                     ??Timetable_Paint_0:
   \   00000038   1120               MOVS     R0,#+17
   \   0000003A   4443               MULS     R4,R0,R4
   \   0000003C   8348               LDR      R0,??Timetable_Paint_1+0x14  ;; 0x13d830
   \   0000003E   0019               ADDS     R0,R0,R4
   \   00000040   0290               STR      R0,[SP, #+8]
   \   00000042   6846               MOV      R0,SP
   \   00000044   0299               LDR      R1,[SP, #+8]
   \   00000046   0978               LDRB     R1,[R1, #+0]
   \   00000048   0170               STRB     R1,[R0, #+0]
   1720              if (L_TaskAmount>4) L_TaskAmount=4;
   \   0000004A   0800               MOVS     R0,R1
   \   0000004C   0528               CMP      R0,#+5
   \   0000004E   02D3               BCC      ??Timetable_Paint_2
   \   00000050   6846               MOV      R0,SP
   \   00000052   0421               MOVS     R1,#+4
   \   00000054   0170               STRB     R1,[R0, #+0]
   1721              char *ptTaskAmount=&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount);
   \                     ??Timetable_Paint_2:
   \   00000056   029B               LDR      R3,[SP, #+8]
   1722              if (L_TaskAmount==0)
   \   00000058   6846               MOV      R0,SP
   \   0000005A   0078               LDRB     R0,[R0, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   11D1               BNE      ??Timetable_Paint_3
   1723              {
   1724                L_TaskAmount=1;
   \   00000060   6846               MOV      R0,SP
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   0170               STRB     R1,[R0, #+0]
   1725                
   1726                        //zapis do flash
   1727                    unsigned int Save = __get_interrupt_state();  
   \   00000066   ........           BL       __iar_get_interrupt_state
   \   0000006A   0400               MOVS     R4,R0
   1728                    __disable_interrupt();
   \   0000006C   ........           BL       __iar_disable_interrupt
   1729                    //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)),0, &L_TaskAmount,1);
   1730                    FlashWrite(ptTaskAmount, &L_TaskAmount, 1);
                           ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000070   0A00               MOVS     R2,R1
   \   00000072   6946               MOV      R1,SP
   \   00000074   1800               MOVS     R0,R3
   \   00000076   ........           BL       FlashWrite
   1731                    __set_interrupt_state(Save);
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   ........           BL       __iar_set_interrupt_state
   1732                    __enable_interrupt();
   \   00000080   ........           BL       __iar_enable_interrupt
   1733                    //koniec zapisu do flash
   1734            
   1735              }
   1736             
   1737                
   1738                
   1739                char Ychart=108;
   \                     ??Timetable_Paint_3:
   \   00000084   6C24               MOVS     R4,#+108
   \   00000086   05A8               ADD      R0,SP,#+20
   \   00000088   7149               LDR      R1,??Timetable_Paint_1+0x18  ;; `?<Constant {130, 0}>`
   \   0000008A   0A68               LDR      R2,[R1, #0]
   \   0000008C   0260               STR      R2,[R0, #0]
   \   0000008E   03A8               ADD      R0,SP,#+12
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   4171               STRB     R1,[R0, #+5]
   1740                char CharOnOff[]={130,0};
   1741                char TimeString[6];
   1742                TimeString[5]=0;
   1743                for (char TN=0; TN<L_TaskAmount; TN++)
   \   00000094   0D00               MOVS     R5,R1
   \   00000096   48E0               B        ??Timetable_Paint_4
   1744                {
   1745                    
   1746                    H_line(1,Ychart,62,1);  
   1747                    H_line(1,Ychart-1,62,1);  
   1748                    H_line(1,Ychart-27,62,1);   
   1749                    V_line(0,Ychart-26,26,1); 
   1750                    V_line(63,Ychart-26,26,1); 
   1751                    
   1752                    
   1753                    Button(CharOnOff,2,Ychart-15,13,13);
   1754                    if ((TN>0) && (TN==L_TaskAmount-1)) Button("-",53,Ychart-13,11,14);
   1755                    
   1756                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   1757                    char LabelNeg=0;
   1758                    if (AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable) 
   1759                    {
   1760                     CopyToCanvasPoint((char *)ekran_tab,44,Ychart-13,8,10);   
   1761                     LabelNeg=1;
   1762                    }
   1763                    
   1764                    CharToStr2(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Hour, TimeString); //(char Value, char *Vstring, char ill);
                           ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   1765                    TimeString[2]=':';
   1766                    CharToStr2(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Minute, &(TimeString[3])); //(char Value, char *Vstring, char ill);
   1767                    Label(TimeString,2,17,Ychart-13,5,25,0,128,LabelNeg);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   1768                 
   1769                          
   1770                    for (char i=0; i<7; i++)
   1771                    {
   1772                      Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart-25,1,6,0,128,((AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Week>>i) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??Timetable_Paint_5:
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   0398               LDR      R0,[SP, #+12]
   \   0000009C   8078               LDRB     R0,[R0, #+2]
   \   0000009E   3041               ASRS     R0,R0,R6
   \   000000A0   0121               MOVS     R1,#+1
   \   000000A2   0140               ANDS     R1,R1,R0
   \   000000A4   0091               STR      R1,[SP, #+0]
   \   000000A6   8021               MOVS     R1,#+128
   \   000000A8   0020               MOVS     R0,#+0
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   0621               MOVS     R1,#+6
   \   000000AE   0120               MOVS     R0,#+1
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   3B00               MOVS     R3,R7
   \   000000B4   193B               SUBS     R3,R3,#+25
   \   000000B6   F200               LSLS     R2,R6,#+3
   \   000000B8   121D               ADDS     R2,R2,#+4
   \   000000BA   1206               LSLS     R2,R2,#+24
   \   000000BC   120E               LSRS     R2,R2,#+24
   \   000000BE   0221               MOVS     R1,#+2
   \   000000C0   02B5               PUSH     {R1,LR}
   \   000000C2   0192               STR      R2,[SP, #+4]
   \   000000C4   9C46               MOV      R12,R3
   \   000000C6   6349               LDR      R1,??Timetable_Paint_1+0x1C  ;; 0x6ea
   \   000000C8   3200               MOVS     R2,R6
   \   000000CA   5D48               LDR      R0,??Timetable_Paint_1+0x8  ;; g_leng
   \   000000CC   0068               LDR      R0,[R0, #+0]
   \   000000CE   5D4B               LDR      R3,??Timetable_Paint_1+0xC  ;; 0xa7d
   \   000000D0   5843               MULS     R0,R3,R0
   \   000000D2   5D4B               LDR      R3,??Timetable_Paint_1+0x10  ;; Speech
   \   000000D4   1818               ADDS     R0,R3,R0
   \   000000D6   8018               ADDS     R0,R0,R2
   \   000000D8   4018               ADDS     R0,R0,R1
   \   000000DA   6346               MOV      R3,R12
   \   000000DC   019A               LDR      R2,[SP, #+4]
   \   000000DE   0099               LDR      R1,[SP, #0]
   \   000000E0   02B0               ADD      SP,SP,#+8
   \   000000E2   ........           BL       Label
   \   000000E6   06B0               ADD      SP,SP,#+24
   1773                    }
   \   000000E8   761C               ADDS     R6,R6,#+1
   \   000000EA   3606               LSLS     R6,R6,#+24
   \   000000EC   360E               LSRS     R6,R6,#+24
   \                     ??Timetable_Paint_6:
   \   000000EE   3000               MOVS     R0,R6
   \   000000F0   0728               CMP      R0,#+7
   \   000000F2   D1D3               BCC      ??Timetable_Paint_5
   1774                    
   1775          
   1776                    
   1777                    Ychart=Ychart-27;
   \   000000F4   1B3C               SUBS     R4,R4,#+27
   \   000000F6   2406               LSLS     R4,R4,#+24
   \   000000F8   240E               LSRS     R4,R4,#+24
   1778                    
   1779                    if ((TN==L_TaskAmount-1)&& (TN<3)) Button("+",53,Ychart-13,11,14);
   \   000000FA   2800               MOVS     R0,R5
   \   000000FC   6946               MOV      R1,SP
   \   000000FE   0978               LDRB     R1,[R1, #+0]
   \   00000100   491E               SUBS     R1,R1,#+1
   \   00000102   8842               CMP      R0,R1
   \   00000104   0ED1               BNE      ??Timetable_Paint_7
   \   00000106   0328               CMP      R0,#+3
   \   00000108   0CD2               BCS      ??Timetable_Paint_7
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0E20               MOVS     R0,#+14
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   0B23               MOVS     R3,#+11
   \   00000112   2200               MOVS     R2,R4
   \   00000114   0D3A               SUBS     R2,R2,#+13
   \   00000116   1206               LSLS     R2,R2,#+24
   \   00000118   120E               LSRS     R2,R2,#+24
   \   0000011A   3521               MOVS     R1,#+53
   \   0000011C   4EA0               ADR      R0,??Timetable_Paint_1+0x20  ;; 0x2B, 0x00, 0x00, 0x00
   \   0000011E   ........           BL       Button
   \   00000122   02B0               ADD      SP,SP,#+8
   \                     ??Timetable_Paint_7:
   \   00000124   6D1C               ADDS     R5,R5,#+1
   \   00000126   2D06               LSLS     R5,R5,#+24
   \   00000128   2D0E               LSRS     R5,R5,#+24
   \                     ??Timetable_Paint_4:
   \   0000012A   2800               MOVS     R0,R5
   \   0000012C   6946               MOV      R1,SP
   \   0000012E   0978               LDRB     R1,[R1, #+0]
   \   00000130   8842               CMP      R0,R1
   \   00000132   7DD2               BCS      ??Timetable_Paint_8
   \   00000134   2700               MOVS     R7,R4
   \   00000136   0123               MOVS     R3,#+1
   \   00000138   3E22               MOVS     R2,#+62
   \   0000013A   3900               MOVS     R1,R7
   \   0000013C   1800               MOVS     R0,R3
   \   0000013E   ........           BL       H_line
   \   00000142   0123               MOVS     R3,#+1
   \   00000144   3E22               MOVS     R2,#+62
   \   00000146   791E               SUBS     R1,R7,#+1
   \   00000148   1800               MOVS     R0,R3
   \   0000014A   ........           BL       H_line
   \   0000014E   0123               MOVS     R3,#+1
   \   00000150   3E22               MOVS     R2,#+62
   \   00000152   3900               MOVS     R1,R7
   \   00000154   1B39               SUBS     R1,R1,#+27
   \   00000156   1800               MOVS     R0,R3
   \   00000158   ........           BL       H_line
   \   0000015C   3E00               MOVS     R6,R7
   \   0000015E   1A3E               SUBS     R6,R6,#+26
   \   00000160   0123               MOVS     R3,#+1
   \   00000162   1A22               MOVS     R2,#+26
   \   00000164   3100               MOVS     R1,R6
   \   00000166   0020               MOVS     R0,#+0
   \   00000168   ........           BL       V_line
   \   0000016C   0123               MOVS     R3,#+1
   \   0000016E   1A22               MOVS     R2,#+26
   \   00000170   3100               MOVS     R1,R6
   \   00000172   3F20               MOVS     R0,#+63
   \   00000174   ........           BL       V_line
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   0D20               MOVS     R0,#+13
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   0300               MOVS     R3,R0
   \   00000180   2200               MOVS     R2,R4
   \   00000182   0F3A               SUBS     R2,R2,#+15
   \   00000184   1206               LSLS     R2,R2,#+24
   \   00000186   120E               LSRS     R2,R2,#+24
   \   00000188   0221               MOVS     R1,#+2
   \   0000018A   07A8               ADD      R0,SP,#+28
   \   0000018C   ........           BL       Button
   \   00000190   02B0               ADD      SP,SP,#+8
   \   00000192   2800               MOVS     R0,R5
   \   00000194   11D0               BEQ      ??Timetable_Paint_9
   \   00000196   6946               MOV      R1,SP
   \   00000198   0978               LDRB     R1,[R1, #+0]
   \   0000019A   491E               SUBS     R1,R1,#+1
   \   0000019C   8842               CMP      R0,R1
   \   0000019E   0CD1               BNE      ??Timetable_Paint_9
   \   000001A0   82B0               SUB      SP,SP,#+8
   \   000001A2   0E20               MOVS     R0,#+14
   \   000001A4   0090               STR      R0,[SP, #+0]
   \   000001A6   0B23               MOVS     R3,#+11
   \   000001A8   2200               MOVS     R2,R4
   \   000001AA   0D3A               SUBS     R2,R2,#+13
   \   000001AC   1206               LSLS     R2,R2,#+24
   \   000001AE   120E               LSRS     R2,R2,#+24
   \   000001B0   3521               MOVS     R1,#+53
   \   000001B2   2AA0               ADR      R0,??Timetable_Paint_1+0x24  ;; 0x2D, 0x00, 0x00, 0x00
   \   000001B4   ........           BL       Button
   \   000001B8   02B0               ADD      SP,SP,#+8
   \                     ??Timetable_Paint_9:
   \   000001BA   06A8               ADD      R0,SP,#+24
   \   000001BC   2849               LDR      R1,??Timetable_Paint_1+0x28  ;; `?<Constant {130, 0}>` + 4
   \   000001BE   4CC9               LDM      R1!,{R2,R3,R6}
   \   000001C0   4CC0               STM      R0!,{R2,R3,R6}
   \   000001C2   0026               MOVS     R6,#+0
   \   000001C4   2800               MOVS     R0,R5
   \   000001C6   8000               LSLS     R0,R0,#+2
   \   000001C8   0299               LDR      R1,[SP, #+8]
   \   000001CA   0818               ADDS     R0,R1,R0
   \   000001CC   0190               STR      R0,[SP, #+4]
   \   000001CE   4078               LDRB     R0,[R0, #+1]
   \   000001D0   0028               CMP      R0,#+0
   \   000001D2   0DD0               BEQ      ??Timetable_Paint_10
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   0A20               MOVS     R0,#+10
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   0823               MOVS     R3,#+8
   \   000001DC   2200               MOVS     R2,R4
   \   000001DE   0D3A               SUBS     R2,R2,#+13
   \   000001E0   1206               LSLS     R2,R2,#+24
   \   000001E2   120E               LSRS     R2,R2,#+24
   \   000001E4   2C21               MOVS     R1,#+44
   \   000001E6   08A8               ADD      R0,SP,#+32
   \   000001E8   ........           BL       CopyToCanvasPoint
   \   000001EC   02B0               ADD      SP,SP,#+8
   \   000001EE   0126               MOVS     R6,#+1
   \                     ??Timetable_Paint_10:
   \   000001F0   03A9               ADD      R1,SP,#+12
   \   000001F2   0198               LDR      R0,[SP, #+4]
   \   000001F4   C078               LDRB     R0,[R0, #+3]
   \   000001F6   ........           BL       CharToStr2
   \   000001FA   03A8               ADD      R0,SP,#+12
   \   000001FC   3A21               MOVS     R1,#+58
   \   000001FE   8170               STRB     R1,[R0, #+2]
   \   00000200   03A9               ADD      R1,SP,#+12
   \   00000202   C91C               ADDS     R1,R1,#+3
   \   00000204   0198               LDR      R0,[SP, #+4]
   \   00000206   0079               LDRB     R0,[R0, #+4]
   \   00000208   ........           BL       CharToStr2
   \   0000020C   82B0               SUB      SP,SP,#+8
   \   0000020E   0096               STR      R6,[SP, #+0]
   \   00000210   8021               MOVS     R1,#+128
   \   00000212   0020               MOVS     R0,#+0
   \   00000214   03B4               PUSH     {R0,R1}
   \   00000216   1921               MOVS     R1,#+25
   \   00000218   0520               MOVS     R0,#+5
   \   0000021A   03B4               PUSH     {R0,R1}
   \   0000021C   3B00               MOVS     R3,R7
   \   0000021E   0D3B               SUBS     R3,R3,#+13
   \   00000220   1122               MOVS     R2,#+17
   \   00000222   0221               MOVS     R1,#+2
   \   00000224   09A8               ADD      R0,SP,#+36
   \   00000226   ........           BL       Label
   \   0000022A   06B0               ADD      SP,SP,#+24
   \   0000022C   0026               MOVS     R6,#+0
   \   0000022E   5EE7               B        ??Timetable_Paint_6
   1780           
   1781                }
   1782                
   1783              
   1784          
   1785                
   1786          
   1787          }//________________________________________________________________________
   \                     ??Timetable_Paint_8:
   \   00000230   09B0               ADD      SP,SP,#+36
   \   00000232   F0BC               POP      {R4-R7}
   \   00000234   01BC               POP      {R0}
   \   00000236   0047               BX       R0               ;; return
   \                     ??Timetable_Paint_1:
   \   00000238   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000023C   62070000           DC32     0x762
   \   00000240   ........           DC32     g_leng
   \   00000244   7D0A0000           DC32     0xa7d
   \   00000248   ........           DC32     Speech
   \   0000024C   30D81300           DC32     0x13d830
   \   00000250   ........           DC32     `?<Constant {130, 0}>`
   \   00000254   EA060000           DC32     0x6ea
   \   00000258   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   0000025C   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000260   ........           DC32     `?<Constant {130, 0}>` + 4
   1788          
   1789          
   1790          
   1791          __Task *TaskToChange;
   1792          char TimetableSet_Hour;
   1793          char TimetableSet_Minute;
   1794          char TimetableSet_Week;

   \                                 In section Debug.txt, align 4, keep-with-next
   1795          void Timetable_Event(char Screen)
   1796          {      
   \                     Timetable_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   87B0               SUB      SP,SP,#+28
   \   00000004   0026               MOVS     R6,#+0
   1797             char Repaint=0;
   1798             char CharToSave=0;
   \   00000006   6946               MOV      R1,SP
   \   00000008   3200               MOVS     R2,R6
   \   0000000A   8A70               STRB     R2,[R1, #+2]
   1799             char TaskAmount=AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount;
   \   0000000C   1121               MOVS     R1,#+17
   \   0000000E   4843               MULS     R0,R1,R0
   \   00000010   C949               LDR      R1,??Timetable_Event_0  ;; 0x13d830
   \   00000012   0818               ADDS     R0,R1,R0
   \   00000014   0390               STR      R0,[SP, #+12]
   \   00000016   6846               MOV      R0,SP
   \   00000018   0399               LDR      R1,[SP, #+12]
   \   0000001A   0978               LDRB     R1,[R1, #+0]
   \   0000001C   0170               STRB     R1,[R0, #+0]
   1800          
   1801             if (TaskAmount>4) TaskAmount=4;
   \   0000001E   0800               MOVS     R0,R1
   \   00000020   0528               CMP      R0,#+5
   \   00000022   02D3               BCC      ??Timetable_Event_1
   \   00000024   6846               MOV      R0,SP
   \   00000026   0421               MOVS     R1,#+4
   \   00000028   0170               STRB     R1,[R0, #+0]
   \                     ??Timetable_Event_1:
   \   0000002A   1100               MOVS     R1,R2
   \   0000002C   0800               MOVS     R0,R1
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0F21               MOVS     R1,#+15
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   C148               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   435E               LDRSH    R3,[R0, R1]
   \   0000003A   C148               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   0000003C   425E               LDRSH    R2,[R0, R1]
   \   0000003E   C148               LDR      R0,??Timetable_Event_0+0xC  ;; Y_up
   \   00000040   415E               LDRSH    R1,[R0, R1]
   \   00000042   C148               LDR      R0,??Timetable_Event_0+0x10  ;; X_up
   \   00000044   0024               MOVS     R4,#+0
   \   00000046   005F               LDRSH    R0,[R0, R4]
   1802             
   1803             if ((ScreenNr>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000048   ........           BL       List_Event
   \   0000004C   04B0               ADD      SP,SP,#+16
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   C943               MVNS     R1,R1            ;; #-1
   \   00000052   8842               CMP      R0,R1
   \   00000054   14D1               BNE      ??Timetable_Event_2
   1804              {
   1805                 if (SheetHistoryIndex>0)
   \   00000056   BD48               LDR      R0,??Timetable_Event_0+0x14  ;; TextToChangeLength
   \   00000058   C179               LDRB     R1,[R0, #+7]
   \   0000005A   0029               CMP      R1,#+0
   \   0000005C   07D0               BEQ      ??Timetable_Event_3
   1806                    {
   1807                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000005E   491E               SUBS     R1,R1,#+1
   \   00000060   C171               STRB     R1,[R0, #+7]
   \   00000062   0906               LSLS     R1,R1,#+24
   \   00000064   090E               LSRS     R1,R1,#+24
   \   00000066   4118               ADDS     R1,R0,R1
   \   00000068   2031               ADDS     R1,R1,#+32
   \   0000006A   0978               LDRB     R1,[R1, #+0]
   \   0000006C   0171               STRB     R1,[R0, #+4]
   1808                    } 
   1809                   Repaint=1; 
   \                     ??Timetable_Event_3:
   \   0000006E   0126               MOVS     R6,#+1
   1810              }else{
   1811                      
   1812                char Ychart=108;
   1813               
   1814                if ((X_down>1) && (X_down<63) && (Y_down>108)&& (Y_down<128)) Repaint=1;
   1815                
   1816               char PlusMinButton=0;  
   1817                
   1818                char CharOnOff[]={130,0};
   1819                char ButtonRes;
   1820                for (char TN=0; TN<TaskAmount; TN++)
   1821                {
   1822                  if ((TN==TaskAmount-1)&& (TN<3)) 
   1823                  {
   1824                      ButtonRes=Button("+",53,Ychart-13-27,11,14);
   1825                      if (ButtonRes==1)
   1826                      {
   1827                        TaskAmount++;
   1828                        //zapis do flash
   1829                        unsigned int Save = __get_interrupt_state();  
   1830                        __disable_interrupt();
   1831                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)), (char*) (&(TaskAmount)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1832                        __set_interrupt_state(Save);
   1833                        __enable_interrupt();
   1834                        //koniec zapisu do flash
   1835                        Repaint=1; 
   1836                        PlusMinButton=1;
   1837                      }
   1838                      if (ButtonRes==2)
   1839                      {
   1840                        PlusMinButton=1;
   1841                      }
   1842                  }
   1843                  
   1844                  if ((PlusMinButton==0) && (TN>0) && (TN==TaskAmount-1)) 
   1845                  {
   1846                    ButtonRes=Button("-",53,Ychart-13,11,14);
   1847                    if (ButtonRes==1)
   1848                    {
   1849                        TaskAmount--;
   1850                        //zapis do flash
   1851                        unsigned int Save = __get_interrupt_state();  
   1852                        __disable_interrupt();
   1853                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)), (char*) (&(TaskAmount)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1854                        __set_interrupt_state(Save);
   1855                        __enable_interrupt();
   1856                        //koniec zapisu do flash
   1857                        Repaint=1; 
   1858                        PlusMinButton=1;
   1859                    }
   1860                    if (ButtonRes==2)
   1861                    {
   1862                        PlusMinButton=1;
   1863                    }
   1864                     
   1865                  }
   1866                  
   1867                  if (AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable) 
   1868                  {
   1869                      if (Button(CharOnOff,2,Ychart-15,13,13)==1)
   1870                      {
   1871                         CharToSave=0;
   1872                        //zapis do flash
   1873                          unsigned int Save = __get_interrupt_state();  
   1874                          __disable_interrupt();
   1875                          FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable)), (char*) (&(CharToSave)), 1);
                                 ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1876                          __set_interrupt_state(Save);
   1877                          __enable_interrupt();
   1878                          //koniec zapisu do flash
   1879                          Repaint=1; 
   1880                      } 
   1881                   }else{
   1882                        if(Button(CharOnOff,2,Ychart-15,13,13)==1)
   1883                        {
   1884                           CharToSave=1;
   1885                          //zapis do flash
   1886                            unsigned int Save = __get_interrupt_state();  
   1887                            __disable_interrupt();
   1888                            FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable)), (char*) (&(CharToSave)), 1);
                                   ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1889                            __set_interrupt_state(Save);
   1890                            __enable_interrupt();
   1891                            //koniec zapisu do flash
   1892                            Repaint=1; 
   1893                        }
   1894                      }
   1895                      
   1896                      //wybór strefy 
   1897                      if ((Button(CharOnOff,2,Ychart-15,13,13)==0) && (PlusMinButton==0) && (X_down>1) && (X_down<63) && (Y_down>Ychart-27)&& (Y_down<Ychart))
   1898                      {
   1899                        MenuPaint();
   1900                        H_line(1,Ychart-2,62,1);  
   1901                        H_line(1,Ychart-26,62,1);   
   1902                        V_line(1,Ychart-26,24,1); 
   1903                        V_line(62,Ychart-26,26,1); 
   1904                      }
   1905                  
   1906                      //edycja strefy 
   1907                      if ((Button(CharOnOff,2,Ychart-15,13,13)==0) && (PlusMinButton==0) && (X_up>1) && (X_up<63) && (Y_up>Ychart-27)&& (Y_up<Ychart))
   1908                      {
   1909                          TaskToChange=&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN]);
   1910                          TimetableSet_Hour=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Hour;
   1911                          TimetableSet_Minute=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Minute;
   1912                          TimetableSet_Week=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Week;
   1913                          MenuLevel=13;
   1914                          Repaint=1; 
   1915                      }
   1916                  
   1917                      
   1918                  
   1919                    Ychart=Ychart-27;
   1920          
   1921                  }//koniec for (TN)
   1922                
   1923                
   1924            
   1925              }
   1926             if (Repaint) MenuPaint();
   \                     ??Timetable_Event_4:
   \   00000070   002E               CMP      R6,#+0
   \   00000072   01D0               BEQ      ??Timetable_Event_5
   \   00000074   ........           BL       MenuPaint
   1927          }
   \                     ??Timetable_Event_5:
   \   00000078   07B0               ADD      SP,SP,#+28
   \   0000007A   F0BC               POP      {R4-R7}
   \   0000007C   01BC               POP      {R0}
   \   0000007E   0047               BX       R0               ;; return
   \                     ??Timetable_Event_2:
   \   00000080   6C24               MOVS     R4,#+108
   \   00000082   AF48               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   405E               LDRSH    R0,[R0, R1]
   \   00000088   0228               CMP      R0,#+2
   \   0000008A   08DB               BLT      ??Timetable_Event_6
   \   0000008C   3F28               CMP      R0,#+63
   \   0000008E   06DA               BGE      ??Timetable_Event_6
   \   00000090   AA48               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   6D28               CMP      R0,#+109
   \   00000096   02DB               BLT      ??Timetable_Event_6
   \   00000098   8028               CMP      R0,#+128
   \   0000009A   00DA               BGE      ??Timetable_Event_6
   \   0000009C   0126               MOVS     R6,#+1
   \                     ??Timetable_Event_6:
   \   0000009E   6846               MOV      R0,SP
   \   000000A0   4170               STRB     R1,[R0, #+1]
   \   000000A2   04A8               ADD      R0,SP,#+16
   \   000000A4   AA49               LDR      R1,??Timetable_Event_0+0x18  ;; `?<Constant {130, 0}>_1`
   \   000000A6   0A68               LDR      R2,[R1, #0]
   \   000000A8   0260               STR      R2,[R0, #0]
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   0290               STR      R0,[SP, #+8]
   \   000000AE   96E0               B        ??Timetable_Event_7
   \                     ??Timetable_Event_8:
   \   000000B0   0D20               MOVS     R0,#+13
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   0300               MOVS     R3,R0
   \   000000B6   2A00               MOVS     R2,R5
   \   000000B8   1206               LSLS     R2,R2,#+24
   \   000000BA   120E               LSRS     R2,R2,#+24
   \   000000BC   0221               MOVS     R1,#+2
   \   000000BE   06A8               ADD      R0,SP,#+24
   \   000000C0   ........           BL       Button
   \   000000C4   02B0               ADD      SP,SP,#+8
   \   000000C6   0128               CMP      R0,#+1
   \   000000C8   15D1               BNE      ??Timetable_Event_9
   \   000000CA   0127               MOVS     R7,#+1
   \   000000CC   6846               MOV      R0,SP
   \   000000CE   3900               MOVS     R1,R7
   \   000000D0   8170               STRB     R1,[R0, #+2]
   \   000000D2   ........           BL       __iar_get_interrupt_state
   \   000000D6   0600               MOVS     R6,R0
   \   000000D8   ........           BL       __iar_disable_interrupt
   \   000000DC   0A00               MOVS     R2,R1
   \   000000DE   00A9               ADD      R1,SP,#+0
   \   000000E0   891C               ADDS     R1,R1,#+2
   \   000000E2   0198               LDR      R0,[SP, #+4]
   \   000000E4   401C               ADDS     R0,R0,#+1
   \   000000E6   ........           BL       FlashWrite
   \   000000EA   3000               MOVS     R0,R6
   \   000000EC   ........           BL       __iar_set_interrupt_state
   \   000000F0   ........           BL       __iar_enable_interrupt
   \   000000F4   3E00               MOVS     R6,R7
   \                     ??Timetable_Event_9:
   \   000000F6   82B0               SUB      SP,SP,#+8
   \   000000F8   0D20               MOVS     R0,#+13
   \   000000FA   0090               STR      R0,[SP, #+0]
   \   000000FC   0300               MOVS     R3,R0
   \   000000FE   2A00               MOVS     R2,R5
   \   00000100   1206               LSLS     R2,R2,#+24
   \   00000102   120E               LSRS     R2,R2,#+24
   \   00000104   0221               MOVS     R1,#+2
   \   00000106   06A8               ADD      R0,SP,#+24
   \   00000108   ........           BL       Button
   \   0000010C   02B0               ADD      SP,SP,#+8
   \   0000010E   6946               MOV      R1,SP
   \   00000110   4978               LDRB     R1,[R1, #+1]
   \   00000112   0143               ORRS     R1,R1,R0
   \   00000114   2BD1               BNE      ??Timetable_Event_10
   \   00000116   8A48               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   00000118   0021               MOVS     R1,#+0
   \   0000011A   405E               LDRSH    R0,[R0, R1]
   \   0000011C   0228               CMP      R0,#+2
   \   0000011E   26DB               BLT      ??Timetable_Event_10
   \   00000120   3F28               CMP      R0,#+63
   \   00000122   24DA               BGE      ??Timetable_Event_10
   \   00000124   2700               MOVS     R7,R4
   \   00000126   8548               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000128   405E               LDRSH    R0,[R0, R1]
   \   0000012A   3900               MOVS     R1,R7
   \   0000012C   1B39               SUBS     R1,R1,#+27
   \   0000012E   8142               CMP      R1,R0
   \   00000130   1DDA               BGE      ??Timetable_Event_10
   \   00000132   2100               MOVS     R1,R4
   \   00000134   8842               CMP      R0,R1
   \   00000136   1ADA               BGE      ??Timetable_Event_10
   \   00000138   ........           BL       MenuPaint
   \   0000013C   0123               MOVS     R3,#+1
   \   0000013E   3E22               MOVS     R2,#+62
   \   00000140   B91E               SUBS     R1,R7,#+2
   \   00000142   1800               MOVS     R0,R3
   \   00000144   ........           BL       H_line
   \   00000148   1A3F               SUBS     R7,R7,#+26
   \   0000014A   0123               MOVS     R3,#+1
   \   0000014C   3E22               MOVS     R2,#+62
   \   0000014E   3900               MOVS     R1,R7
   \   00000150   1800               MOVS     R0,R3
   \   00000152   ........           BL       H_line
   \   00000156   0123               MOVS     R3,#+1
   \   00000158   1822               MOVS     R2,#+24
   \   0000015A   3900               MOVS     R1,R7
   \   0000015C   1800               MOVS     R0,R3
   \   0000015E   ........           BL       V_line
   \   00000162   0123               MOVS     R3,#+1
   \   00000164   1A22               MOVS     R2,#+26
   \   00000166   3900               MOVS     R1,R7
   \   00000168   3E20               MOVS     R0,#+62
   \   0000016A   ........           BL       V_line
   \                     ??Timetable_Event_10:
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   0D20               MOVS     R0,#+13
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   0300               MOVS     R3,R0
   \   00000176   2A00               MOVS     R2,R5
   \   00000178   1206               LSLS     R2,R2,#+24
   \   0000017A   120E               LSRS     R2,R2,#+24
   \   0000017C   0221               MOVS     R1,#+2
   \   0000017E   06A8               ADD      R0,SP,#+24
   \   00000180   ........           BL       Button
   \   00000184   02B0               ADD      SP,SP,#+8
   \   00000186   6946               MOV      R1,SP
   \   00000188   4978               LDRB     R1,[R1, #+1]
   \   0000018A   0143               ORRS     R1,R1,R0
   \   0000018C   1FD1               BNE      ??Timetable_Event_11
   \   0000018E   6E48               LDR      R0,??Timetable_Event_0+0x10  ;; X_up
   \   00000190   0021               MOVS     R1,#+0
   \   00000192   405E               LDRSH    R0,[R0, R1]
   \   00000194   0228               CMP      R0,#+2
   \   00000196   1ADB               BLT      ??Timetable_Event_11
   \   00000198   3F28               CMP      R0,#+63
   \   0000019A   18DA               BGE      ??Timetable_Event_11
   \   0000019C   6948               LDR      R0,??Timetable_Event_0+0xC  ;; Y_up
   \   0000019E   405E               LDRSH    R0,[R0, R1]
   \   000001A0   2100               MOVS     R1,R4
   \   000001A2   1B39               SUBS     R1,R1,#+27
   \   000001A4   8142               CMP      R1,R0
   \   000001A6   12DA               BGE      ??Timetable_Event_11
   \   000001A8   2100               MOVS     R1,R4
   \   000001AA   8842               CMP      R0,R1
   \   000001AC   0FDA               BGE      ??Timetable_Event_11
   \   000001AE   6748               LDR      R0,??Timetable_Event_0+0x14  ;; TextToChangeLength
   \   000001B0   0199               LDR      R1,[SP, #+4]
   \   000001B2   491C               ADDS     R1,R1,#+1
   \   000001B4   0167               STR      R1,[R0, #+112]
   \   000001B6   0199               LDR      R1,[SP, #+4]
   \   000001B8   C978               LDRB     R1,[R1, #+3]
   \   000001BA   4173               STRB     R1,[R0, #+13]
   \   000001BC   0199               LDR      R1,[SP, #+4]
   \   000001BE   0979               LDRB     R1,[R1, #+4]
   \   000001C0   8173               STRB     R1,[R0, #+14]
   \   000001C2   0199               LDR      R1,[SP, #+4]
   \   000001C4   8978               LDRB     R1,[R1, #+2]
   \   000001C6   C173               STRB     R1,[R0, #+15]
   \   000001C8   0D21               MOVS     R1,#+13
   \   000001CA   0165               STR      R1,[R0, #+80]
   \   000001CC   0126               MOVS     R6,#+1
   \                     ??Timetable_Event_11:
   \   000001CE   1B3C               SUBS     R4,R4,#+27
   \   000001D0   2406               LSLS     R4,R4,#+24
   \   000001D2   240E               LSRS     R4,R4,#+24
   \   000001D4   0298               LDR      R0,[SP, #+8]
   \   000001D6   401C               ADDS     R0,R0,#+1
   \   000001D8   0006               LSLS     R0,R0,#+24
   \   000001DA   000E               LSRS     R0,R0,#+24
   \   000001DC   0290               STR      R0,[SP, #+8]
   \                     ??Timetable_Event_7:
   \   000001DE   0298               LDR      R0,[SP, #+8]
   \   000001E0   6946               MOV      R1,SP
   \   000001E2   0978               LDRB     R1,[R1, #+0]
   \   000001E4   0006               LSLS     R0,R0,#+24
   \   000001E6   000E               LSRS     R0,R0,#+24
   \   000001E8   8842               CMP      R0,R1
   \   000001EA   00D3               BCC      .+4
   \   000001EC   40E7               B        ??Timetable_Event_4
   \   000001EE   0298               LDR      R0,[SP, #+8]
   \   000001F0   0006               LSLS     R0,R0,#+24
   \   000001F2   000E               LSRS     R0,R0,#+24
   \   000001F4   0590               STR      R0,[SP, #+20]
   \   000001F6   6946               MOV      R1,SP
   \   000001F8   0978               LDRB     R1,[R1, #+0]
   \   000001FA   491E               SUBS     R1,R1,#+1
   \   000001FC   8842               CMP      R0,R1
   \   000001FE   31D1               BNE      ??Timetable_Event_12
   \   00000200   0298               LDR      R0,[SP, #+8]
   \   00000202   0006               LSLS     R0,R0,#+24
   \   00000204   000E               LSRS     R0,R0,#+24
   \   00000206   0328               CMP      R0,#+3
   \   00000208   2CD2               BCS      ??Timetable_Event_12
   \   0000020A   82B0               SUB      SP,SP,#+8
   \   0000020C   0E20               MOVS     R0,#+14
   \   0000020E   0090               STR      R0,[SP, #+0]
   \   00000210   0B23               MOVS     R3,#+11
   \   00000212   2200               MOVS     R2,R4
   \   00000214   283A               SUBS     R2,R2,#+40
   \   00000216   1206               LSLS     R2,R2,#+24
   \   00000218   120E               LSRS     R2,R2,#+24
   \   0000021A   3521               MOVS     R1,#+53
   \   0000021C   4DA0               ADR      R0,??Timetable_Event_0+0x1C  ;; 0x2B, 0x00, 0x00, 0x00
   \   0000021E   ........           BL       Button
   \   00000222   02B0               ADD      SP,SP,#+8
   \   00000224   0500               MOVS     R5,R0
   \   00000226   0128               CMP      R0,#+1
   \   00000228   17D1               BNE      ??Timetable_Event_13
   \   0000022A   6846               MOV      R0,SP
   \   0000022C   6946               MOV      R1,SP
   \   0000022E   0978               LDRB     R1,[R1, #+0]
   \   00000230   491C               ADDS     R1,R1,#+1
   \   00000232   0170               STRB     R1,[R0, #+0]
   \   00000234   ........           BL       __iar_get_interrupt_state
   \   00000238   0600               MOVS     R6,R0
   \   0000023A   ........           BL       __iar_disable_interrupt
   \   0000023E   0122               MOVS     R2,#+1
   \   00000240   6946               MOV      R1,SP
   \   00000242   0398               LDR      R0,[SP, #+12]
   \   00000244   ........           BL       FlashWrite
   \   00000248   3000               MOVS     R0,R6
   \   0000024A   ........           BL       __iar_set_interrupt_state
   \   0000024E   ........           BL       __iar_enable_interrupt
   \   00000252   0127               MOVS     R7,#+1
   \   00000254   3E00               MOVS     R6,R7
   \   00000256   6846               MOV      R0,SP
   \   00000258   4770               STRB     R7,[R0, #+1]
   \                     ??Timetable_Event_13:
   \   0000025A   022D               CMP      R5,#+2
   \   0000025C   02D1               BNE      ??Timetable_Event_12
   \   0000025E   6846               MOV      R0,SP
   \   00000260   0121               MOVS     R1,#+1
   \   00000262   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_12:
   \   00000264   6846               MOV      R0,SP
   \   00000266   4078               LDRB     R0,[R0, #+1]
   \   00000268   0028               CMP      R0,#+0
   \   0000026A   35D1               BNE      ??Timetable_Event_14
   \   0000026C   0298               LDR      R0,[SP, #+8]
   \   0000026E   0006               LSLS     R0,R0,#+24
   \   00000270   32D0               BEQ      ??Timetable_Event_14
   \   00000272   0598               LDR      R0,[SP, #+20]
   \   00000274   6946               MOV      R1,SP
   \   00000276   0978               LDRB     R1,[R1, #+0]
   \   00000278   491E               SUBS     R1,R1,#+1
   \   0000027A   8842               CMP      R0,R1
   \   0000027C   2CD1               BNE      ??Timetable_Event_14
   \   0000027E   82B0               SUB      SP,SP,#+8
   \   00000280   0E20               MOVS     R0,#+14
   \   00000282   0090               STR      R0,[SP, #+0]
   \   00000284   0B23               MOVS     R3,#+11
   \   00000286   2200               MOVS     R2,R4
   \   00000288   0D3A               SUBS     R2,R2,#+13
   \   0000028A   1206               LSLS     R2,R2,#+24
   \   0000028C   120E               LSRS     R2,R2,#+24
   \   0000028E   3521               MOVS     R1,#+53
   \   00000290   31A0               ADR      R0,??Timetable_Event_0+0x20  ;; 0x2D, 0x00, 0x00, 0x00
   \   00000292   ........           BL       Button
   \   00000296   02B0               ADD      SP,SP,#+8
   \   00000298   0500               MOVS     R5,R0
   \   0000029A   0128               CMP      R0,#+1
   \   0000029C   17D1               BNE      ??Timetable_Event_15
   \   0000029E   6846               MOV      R0,SP
   \   000002A0   6946               MOV      R1,SP
   \   000002A2   0978               LDRB     R1,[R1, #+0]
   \   000002A4   491E               SUBS     R1,R1,#+1
   \   000002A6   0170               STRB     R1,[R0, #+0]
   \   000002A8   ........           BL       __iar_get_interrupt_state
   \   000002AC   0600               MOVS     R6,R0
   \   000002AE   ........           BL       __iar_disable_interrupt
   \   000002B2   0122               MOVS     R2,#+1
   \   000002B4   6946               MOV      R1,SP
   \   000002B6   0398               LDR      R0,[SP, #+12]
   \   000002B8   ........           BL       FlashWrite
   \   000002BC   3000               MOVS     R0,R6
   \   000002BE   ........           BL       __iar_set_interrupt_state
   \   000002C2   ........           BL       __iar_enable_interrupt
   \   000002C6   0127               MOVS     R7,#+1
   \   000002C8   3E00               MOVS     R6,R7
   \   000002CA   6846               MOV      R0,SP
   \   000002CC   4770               STRB     R7,[R0, #+1]
   \                     ??Timetable_Event_15:
   \   000002CE   022D               CMP      R5,#+2
   \   000002D0   02D1               BNE      ??Timetable_Event_14
   \   000002D2   6846               MOV      R0,SP
   \   000002D4   0121               MOVS     R1,#+1
   \   000002D6   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_14:
   \   000002D8   0598               LDR      R0,[SP, #+20]
   \   000002DA   8000               LSLS     R0,R0,#+2
   \   000002DC   0399               LDR      R1,[SP, #+12]
   \   000002DE   0818               ADDS     R0,R1,R0
   \   000002E0   0190               STR      R0,[SP, #+4]
   \   000002E2   2500               MOVS     R5,R4
   \   000002E4   0F3D               SUBS     R5,R5,#+15
   \   000002E6   4078               LDRB     R0,[R0, #+1]
   \   000002E8   0028               CMP      R0,#+0
   \   000002EA   82B0               SUB      SP,SP,#+8
   \   000002EC   00D1               BNE      .+4
   \   000002EE   DFE6               B        ??Timetable_Event_8
   \   000002F0   0D20               MOVS     R0,#+13
   \   000002F2   0090               STR      R0,[SP, #+0]
   \   000002F4   0300               MOVS     R3,R0
   \   000002F6   2A00               MOVS     R2,R5
   \   000002F8   1206               LSLS     R2,R2,#+24
   \   000002FA   120E               LSRS     R2,R2,#+24
   \   000002FC   0221               MOVS     R1,#+2
   \   000002FE   06A8               ADD      R0,SP,#+24
   \   00000300   ........           BL       Button
   \   00000304   02B0               ADD      SP,SP,#+8
   \   00000306   0128               CMP      R0,#+1
   \   00000308   00D0               BEQ      .+4
   \   0000030A   F4E6               B        ??Timetable_Event_9
   \   0000030C   6846               MOV      R0,SP
   \   0000030E   0021               MOVS     R1,#+0
   \   00000310   8170               STRB     R1,[R0, #+2]
   \   00000312   ........           BL       __iar_get_interrupt_state
   \   00000316   0600               MOVS     R6,R0
   \   00000318   ........           BL       __iar_disable_interrupt
   \   0000031C   0122               MOVS     R2,#+1
   \   0000031E   00A9               ADD      R1,SP,#+0
   \   00000320   891C               ADDS     R1,R1,#+2
   \   00000322   0198               LDR      R0,[SP, #+4]
   \   00000324   401C               ADDS     R0,R0,#+1
   \   00000326   ........           BL       FlashWrite
   \   0000032A   3000               MOVS     R0,R6
   \   0000032C   ........           BL       __iar_set_interrupt_state
   \   00000330   ........           BL       __iar_enable_interrupt
   \   00000334   0126               MOVS     R6,#+1
   \   00000336   DEE6               B        ??Timetable_Event_9
   \                     ??Timetable_Event_0:
   \   00000338   30D81300           DC32     0x13d830
   \   0000033C   ........           DC32     Y_down
   \   00000340   ........           DC32     X_down
   \   00000344   ........           DC32     Y_up
   \   00000348   ........           DC32     X_up
   \   0000034C   ........           DC32     TextToChangeLength
   \   00000350   ........           DC32     `?<Constant {130, 0}>_1`
   \   00000354   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   00000358   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   1928          
   1929          
   1930          
   1931          
   1932          
   1933          

   \                                 In section Debug.txt, align 4, keep-with-next
   1934          void TimetableSet_Paint(void)
   1935          {          
   \                     TimetableSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   88A0               ADR      R0,??TimetableSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   8548               LDR      R0,??TimetableSet_Paint_0+0x4  ;; 0x762
   \   00000020   854C               LDR      R4,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   00000022   2468               LDR      R4,[R4, #+0]
   \   00000024   854D               LDR      R5,??TimetableSet_Paint_0+0xC  ;; 0xa7d
   \   00000026   6C43               MULS     R4,R5,R4
   \   00000028   854D               LDR      R5,??TimetableSet_Paint_0+0x10  ;; Speech
   \   0000002A   2C19               ADDS     R4,R5,R4
   \   0000002C   2018               ADDS     R0,R4,R0
   1936                 List_Paint(Speech[g_leng].Terminarz,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   \   00000034   0025               MOVS     R5,#+0
   1937                
   1938                char day=0;
   1939                char hlight=0;
   1940          
   1941                for (char row=0; row<3; row++)
   \   00000036   2800               MOVS     R0,R5
   \   00000038   0190               STR      R0,[SP, #+4]
   \   0000003A   6BE0               B        ??TimetableSet_Paint_1
   1942                for (char col=0; col<3; col++)
   1943                { 
   1944                  if (++day<8)
   \                     ??TimetableSet_Paint_2:
   \   0000003C   6D1C               ADDS     R5,R5,#+1
   \   0000003E   2D06               LSLS     R5,R5,#+24
   \   00000040   2D0E               LSRS     R5,R5,#+24
   \   00000042   2800               MOVS     R0,R5
   \   00000044   0828               CMP      R0,#+8
   \   00000046   5AD2               BCS      ??TimetableSet_Paint_3
   1945                  {
   1946                      H_line(4+col*18,105-row*14,19,1);
   \   00000048   2600               MOVS     R6,R4
   \   0000004A   1220               MOVS     R0,#+18
   \   0000004C   4643               MULS     R6,R0,R6
   \   0000004E   019F               LDR      R7,[SP, #+4]
   \   00000050   3F06               LSLS     R7,R7,#+24
   \   00000052   3F0E               LSRS     R7,R7,#+24
   \   00000054   0123               MOVS     R3,#+1
   \   00000056   1322               MOVS     R2,#+19
   \   00000058   6920               MOVS     R0,#+105
   \   0000005A   0E21               MOVS     R1,#+14
   \   0000005C   7943               MULS     R1,R7,R1
   \   0000005E   411A               SUBS     R1,R0,R1
   \   00000060   3000               MOVS     R0,R6
   \   00000062   001D               ADDS     R0,R0,#+4
   \   00000064   0006               LSLS     R0,R0,#+24
   \   00000066   000E               LSRS     R0,R0,#+24
   \   00000068   ........           BL       H_line
   1947                      H_line(4+col*18,105-(row+1)*14,19,1);
   \   0000006C   7F1C               ADDS     R7,R7,#+1
   \   0000006E   0E20               MOVS     R0,#+14
   \   00000070   4743               MULS     R7,R0,R7
   \   00000072   0397               STR      R7,[SP, #+12]
   \   00000074   6920               MOVS     R0,#+105
   \   00000076   3900               MOVS     R1,R7
   \   00000078   471A               SUBS     R7,R0,R1
   \   0000007A   0123               MOVS     R3,#+1
   \   0000007C   1322               MOVS     R2,#+19
   \   0000007E   3900               MOVS     R1,R7
   \   00000080   3000               MOVS     R0,R6
   \   00000082   001D               ADDS     R0,R0,#+4
   \   00000084   0006               LSLS     R0,R0,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   ........           BL       H_line
   1948                      V_line(4+col*18,105-(row+1)*14,14,1);
   \   0000008C   0123               MOVS     R3,#+1
   \   0000008E   0E22               MOVS     R2,#+14
   \   00000090   3900               MOVS     R1,R7
   \   00000092   3000               MOVS     R0,R6
   \   00000094   001D               ADDS     R0,R0,#+4
   \   00000096   0006               LSLS     R0,R0,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   ........           BL       V_line
   1949                      V_line(4+(col+1)*18,105-(row+1)*14,14,1);
   \   0000009E   0123               MOVS     R3,#+1
   \   000000A0   0E22               MOVS     R2,#+14
   \   000000A2   3900               MOVS     R1,R7
   \   000000A4   3000               MOVS     R0,R6
   \   000000A6   1630               ADDS     R0,R0,#+22
   \   000000A8   0006               LSLS     R0,R0,#+24
   \   000000AA   000E               LSRS     R0,R0,#+24
   \   000000AC   ........           BL       V_line
   1950                      
   1951                      hlight=(((TimetableSet_Week>>(day-1))) &0x1);
   1952                      Label((char*)DeyOfWeekStr[g_leng][day],2,6+col*18 ,105-(row+1)*14+3,2,14,0,128,hlight);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   6448               LDR      R0,??TimetableSet_Paint_0+0x14  ;; TextToChangeLength + 15
   \   000000B4   0078               LDRB     R0,[R0, #+0]
   \   000000B6   2900               MOVS     R1,R5
   \   000000B8   491E               SUBS     R1,R1,#+1
   \   000000BA   0841               ASRS     R0,R0,R1
   \   000000BC   0121               MOVS     R1,#+1
   \   000000BE   0140               ANDS     R1,R1,R0
   \   000000C0   0091               STR      R1,[SP, #+0]
   \   000000C2   8021               MOVS     R1,#+128
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   03B4               PUSH     {R0,R1}
   \   000000C8   0E21               MOVS     R1,#+14
   \   000000CA   0220               MOVS     R0,#+2
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   6C20               MOVS     R0,#+108
   \   000000D0   0999               LDR      R1,[SP, #+36]
   \   000000D2   431A               SUBS     R3,R0,R1
   \   000000D4   B61D               ADDS     R6,R6,#+6
   \   000000D6   3200               MOVS     R2,R6
   \   000000D8   1206               LSLS     R2,R2,#+24
   \   000000DA   120E               LSRS     R2,R2,#+24
   \   000000DC   0221               MOVS     R1,#+2
   \   000000DE   B027               MOVS     R7,#+176
   \   000000E0   7F00               LSLS     R7,R7,#+1        ;; #+352
   \   000000E2   2800               MOVS     R0,R5
   \   000000E4   4600               LSLS     R6,R0,#+1
   \   000000E6   B446               MOV      R12,R6
   \   000000E8   5348               LDR      R0,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   000000EA   0068               LDR      R0,[R0, #+0]
   \   000000EC   0601               LSLS     R6,R0,#+4
   \   000000EE   5648               LDR      R0,??TimetableSet_Paint_0+0x18  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   000000F0   8019               ADDS     R0,R0,R6
   \   000000F2   6646               MOV      R6,R12
   \   000000F4   8019               ADDS     R0,R0,R6
   \   000000F6   C019               ADDS     R0,R0,R7
   \   000000F8   ........           BL       Label
   \   000000FC   06B0               ADD      SP,SP,#+24
   1953          
   1954                  }
   1955                }
   \                     ??TimetableSet_Paint_3:
   \   000000FE   641C               ADDS     R4,R4,#+1
   \   00000100   2406               LSLS     R4,R4,#+24
   \   00000102   240E               LSRS     R4,R4,#+24
   \                     ??TimetableSet_Paint_4:
   \   00000104   2000               MOVS     R0,R4
   \   00000106   0328               CMP      R0,#+3
   \   00000108   98D3               BCC      ??TimetableSet_Paint_2
   \   0000010A   0198               LDR      R0,[SP, #+4]
   \   0000010C   401C               ADDS     R0,R0,#+1
   \   0000010E   0006               LSLS     R0,R0,#+24
   \   00000110   000E               LSRS     R0,R0,#+24
   \   00000112   0190               STR      R0,[SP, #+4]
   \                     ??TimetableSet_Paint_1:
   \   00000114   0198               LDR      R0,[SP, #+4]
   \   00000116   0006               LSLS     R0,R0,#+24
   \   00000118   000E               LSRS     R0,R0,#+24
   \   0000011A   0328               CMP      R0,#+3
   \   0000011C   01D2               BCS      ??TimetableSet_Paint_5
   \   0000011E   0024               MOVS     R4,#+0
   \   00000120   F0E7               B        ??TimetableSet_Paint_4
   1956                
   1957                 Label(Speech[g_leng].Godzina,0,5,51,12,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??TimetableSet_Paint_5:
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   0020               MOVS     R0,#+0
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   7F21               MOVS     R1,#+127
   \   0000012A   0120               MOVS     R0,#+1
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   2821               MOVS     R1,#+40
   \   00000130   0C20               MOVS     R0,#+12
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   3323               MOVS     R3,#+51
   \   00000136   0522               MOVS     R2,#+5
   \   00000138   0021               MOVS     R1,#+0
   \   0000013A   B420               MOVS     R0,#+180
   \   0000013C   C000               LSLS     R0,R0,#+3        ;; #+1440
   \   0000013E   3E4C               LDR      R4,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   00000140   2468               LDR      R4,[R4, #+0]
   \   00000142   3E4D               LDR      R5,??TimetableSet_Paint_0+0xC  ;; 0xa7d
   \   00000144   6C43               MULS     R4,R5,R4
   \   00000146   3E4D               LDR      R5,??TimetableSet_Paint_0+0x10  ;; Speech
   \   00000148   2C19               ADDS     R4,R5,R4
   \   0000014A   2018               ADDS     R0,R4,R0
   \   0000014C   ........           BL       Label
   \   00000150   06B0               ADD      SP,SP,#+24
   1958                        
   1959                char LabelButt[2];
   1960                  
   1961                LabelButt[1]=0;
   \   00000152   6C46               MOV      R4,SP
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   6070               STRB     R0,[R4, #+1]
   1962                LabelButt[0]=30; //góra - godzina
   \   00000158   1E25               MOVS     R5,#+30
   \   0000015A   2570               STRB     R5,[R4, #+0]
   1963                Button(LabelButt,5,35,26,15);
   \   0000015C   82B0               SUB      SP,SP,#+8
   \   0000015E   0F20               MOVS     R0,#+15
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   1A23               MOVS     R3,#+26
   \   00000164   2322               MOVS     R2,#+35
   \   00000166   0521               MOVS     R1,#+5
   \   00000168   02A8               ADD      R0,SP,#+8
   \   0000016A   ........           BL       Button
   \   0000016E   02B0               ADD      SP,SP,#+8
   1964                LabelButt[0]=30; //góra- minuta
   \   00000170   2570               STRB     R5,[R4, #+0]
   1965                Button(LabelButt,34,35,26,15);
   \   00000172   82B0               SUB      SP,SP,#+8
   \   00000174   0F20               MOVS     R0,#+15
   \   00000176   0090               STR      R0,[SP, #+0]
   \   00000178   1A23               MOVS     R3,#+26
   \   0000017A   2322               MOVS     R2,#+35
   \   0000017C   2221               MOVS     R1,#+34
   \   0000017E   02A8               ADD      R0,SP,#+8
   \   00000180   ........           BL       Button
   \   00000184   02B0               ADD      SP,SP,#+8
   1966                
   1967                char time_char[2];
   1968                
   1969                 CharToStr2(TimetableSet_Hour, time_char); //(char Value, char *Vstring, char ill);
                        ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   \   00000186   314D               LDR      R5,??TimetableSet_Paint_0+0x1C  ;; TextToChangeLength
   \   00000188   02A9               ADD      R1,SP,#+8
   \   0000018A   687B               LDRB     R0,[R5, #+13]
   \   0000018C   ........           BL       CharToStr2
   1970                 Label(time_char,1,29,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000190   82B0               SUB      SP,SP,#+8
   \   00000192   0020               MOVS     R0,#+0
   \   00000194   0090               STR      R0,[SP, #+0]
   \   00000196   7F21               MOVS     R1,#+127
   \   00000198   0120               MOVS     R0,#+1
   \   0000019A   03B4               PUSH     {R0,R1}
   \   0000019C   0F21               MOVS     R1,#+15
   \   0000019E   0220               MOVS     R0,#+2
   \   000001A0   03B4               PUSH     {R0,R1}
   \   000001A2   1923               MOVS     R3,#+25
   \   000001A4   1D22               MOVS     R2,#+29
   \   000001A6   0121               MOVS     R1,#+1
   \   000001A8   08A8               ADD      R0,SP,#+32
   \   000001AA   ........           BL       Label
   \   000001AE   06B0               ADD      SP,SP,#+24
   1971                 
   1972                 Label(":",0,32,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001B0   82B0               SUB      SP,SP,#+8
   \   000001B2   0020               MOVS     R0,#+0
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   7F21               MOVS     R1,#+127
   \   000001B8   0120               MOVS     R0,#+1
   \   000001BA   03B4               PUSH     {R0,R1}
   \   000001BC   0F21               MOVS     R1,#+15
   \   000001BE   0220               MOVS     R0,#+2
   \   000001C0   03B4               PUSH     {R0,R1}
   \   000001C2   1923               MOVS     R3,#+25
   \   000001C4   2022               MOVS     R2,#+32
   \   000001C6   0021               MOVS     R1,#+0
   \   000001C8   21A0               ADR      R0,??TimetableSet_Paint_0+0x20  ;; 0x3A, 0x00, 0x00, 0x00
   \   000001CA   ........           BL       Label
   \   000001CE   06B0               ADD      SP,SP,#+24
   1973                 
   1974                 CharToStr2(TimetableSet_Minute, time_char); //(char Value, char *Vstring, char ill);
   \   000001D0   02A9               ADD      R1,SP,#+8
   \   000001D2   A87B               LDRB     R0,[R5, #+14]
   \   000001D4   ........           BL       CharToStr2
   1975                 Label(time_char,0,36,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001D8   82B0               SUB      SP,SP,#+8
   \   000001DA   0020               MOVS     R0,#+0
   \   000001DC   0090               STR      R0,[SP, #+0]
   \   000001DE   7F21               MOVS     R1,#+127
   \   000001E0   0120               MOVS     R0,#+1
   \   000001E2   03B4               PUSH     {R0,R1}
   \   000001E4   0F21               MOVS     R1,#+15
   \   000001E6   0220               MOVS     R0,#+2
   \   000001E8   03B4               PUSH     {R0,R1}
   \   000001EA   1923               MOVS     R3,#+25
   \   000001EC   2422               MOVS     R2,#+36
   \   000001EE   0021               MOVS     R1,#+0
   \   000001F0   08A8               ADD      R0,SP,#+32
   \   000001F2   ........           BL       Label
   \   000001F6   06B0               ADD      SP,SP,#+24
   1976                        
   1977                
   1978          
   1979                LabelButt[0]=31; //dó³ godzina
   \   000001F8   1F25               MOVS     R5,#+31
   \   000001FA   2570               STRB     R5,[R4, #+0]
   1980                Button(LabelButt,5, 9,26,15);
   \   000001FC   82B0               SUB      SP,SP,#+8
   \   000001FE   0F20               MOVS     R0,#+15
   \   00000200   0090               STR      R0,[SP, #+0]
   \   00000202   1A23               MOVS     R3,#+26
   \   00000204   0922               MOVS     R2,#+9
   \   00000206   0521               MOVS     R1,#+5
   \   00000208   02A8               ADD      R0,SP,#+8
   \   0000020A   ........           BL       Button
   \   0000020E   02B0               ADD      SP,SP,#+8
   1981                LabelButt[0]=31; //dó³ minuta
   \   00000210   2570               STRB     R5,[R4, #+0]
   1982                Button(LabelButt,34, 9,26,15);
   \   00000212   82B0               SUB      SP,SP,#+8
   \   00000214   0F20               MOVS     R0,#+15
   \   00000216   0090               STR      R0,[SP, #+0]
   \   00000218   1A23               MOVS     R3,#+26
   \   0000021A   0922               MOVS     R2,#+9
   \   0000021C   2221               MOVS     R1,#+34
   \   0000021E   02A8               ADD      R0,SP,#+8
   \   00000220   ........           BL       Button
   \   00000224   02B0               ADD      SP,SP,#+8
   1983                 
   1984          
   1985                 
   1986          }//________________________________________________________________________
   \   00000226   05B0               ADD      SP,SP,#+20
   \   00000228   F0BC               POP      {R4-R7}
   \   0000022A   01BC               POP      {R0}
   \   0000022C   0047               BX       R0               ;; return
   \   0000022E   C046               Nop      
   \                     ??TimetableSet_Paint_0:
   \   00000230   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000234   62070000           DC32     0x762
   \   00000238   ........           DC32     g_leng
   \   0000023C   7D0A0000           DC32     0xa7d
   \   00000240   ........           DC32     Speech
   \   00000244   ........           DC32     TextToChangeLength + 15
   \   00000248   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   0000024C   ........           DC32     TextToChangeLength
   \   00000250   3A000000           DC8      0x3A, 0x00, 0x00, 0x00
   1987          
   1988              
   1989          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1990          void TimetableSet_Event(void)
   1991                {
   \                     TimetableSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   814D               LDR      R5,??TimetableSet_Event_0  ;; Y_down
   \   00000006   2100               MOVS     R1,R4
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   7F48               LDR      R0,??TimetableSet_Event_0+0x4  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   7E48               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   7E48               LDR      R0,??TimetableSet_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   1992          
   1993                   char Repaint=0;
   1994                  
   1995            
   1996                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   27D5               BPL      ??TimetableSet_Event_1
   1997                  {
   1998                     //zapis do flash
   1999                            unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0400               MOVS     R4,R0
   2000                            __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
   2001                            FlashWrite((char*)(&(TaskToChange->Hour)), (char*) (&(TimetableSet_Hour)), 1);
                                   ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   794D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000038   0122               MOVS     R2,#+1
   \   0000003A   2900               MOVS     R1,R5
   \   0000003C   0D31               ADDS     R1,R1,#+13
   \   0000003E   286F               LDR      R0,[R5, #+112]
   \   00000040   801C               ADDS     R0,R0,#+2
   \   00000042   ........           BL       FlashWrite
   2002                            FlashWrite((char*)(&(TaskToChange->Minute)), (char*) (&(TimetableSet_Minute)), 1);
   \   00000046   0122               MOVS     R2,#+1
   \   00000048   2900               MOVS     R1,R5
   \   0000004A   0E31               ADDS     R1,R1,#+14
   \   0000004C   286F               LDR      R0,[R5, #+112]
   \   0000004E   C01C               ADDS     R0,R0,#+3
   \   00000050   ........           BL       FlashWrite
   2003                            FlashWrite((char*)(&(TaskToChange->Week)), (char*) (&(TimetableSet_Week)), 1);
   \   00000054   0122               MOVS     R2,#+1
   \   00000056   2900               MOVS     R1,R5
   \   00000058   0F31               ADDS     R1,R1,#+15
   \   0000005A   286F               LDR      R0,[R5, #+112]
   \   0000005C   401C               ADDS     R0,R0,#+1
   \   0000005E   ........           BL       FlashWrite
   2004                            __set_interrupt_state(Save);
   \   00000062   2000               MOVS     R0,R4
   \   00000064   ........           BL       __iar_set_interrupt_state
   2005                            __enable_interrupt();
   \   00000068   ........           BL       __iar_enable_interrupt
   2006                            //koniec zapisu do flash
   2007                    
   2008                    
   2009                    MenuLevel=(MenuLevel/10);
   \   0000006C   286D               LDR      R0,[R5, #+80]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   2865               STR      R0,[R5, #+80]
   2010                    MenuPaint();
   \   00000076   ........           BL       MenuPaint
   \   0000007A   C3E0               B        ??TimetableSet_Event_2
   2011                  } else if ((Y_down<112)  || (Y_up<112))
   \                     ??TimetableSet_Event_1:
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   285E               LDRSH    R0,[R5, R0]
   \   00000080   7028               CMP      R0,#+112
   \   00000082   05DB               BLT      ??TimetableSet_Event_3
   \   00000084   6348               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   00000086   0021               MOVS     R1,#+0
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   7028               CMP      R0,#+112
   \   0000008C   00DB               BLT      .+4
   \   0000008E   B9E0               B        ??TimetableSet_Event_2
   2012                  {  
   2013                      char day;
   2014                      day=0;
   2015                      for (char row=0; row<3; row++)
   \                     ??TimetableSet_Event_3:
   \   00000090   2200               MOVS     R2,R4
   \   00000092   02E0               B        ??TimetableSet_Event_4
   \                     ??TimetableSet_Event_5:
   \   00000094   521C               ADDS     R2,R2,#+1
   \   00000096   1206               LSLS     R2,R2,#+24
   \   00000098   120E               LSRS     R2,R2,#+24
   \                     ??TimetableSet_Event_4:
   \   0000009A   1000               MOVS     R0,R2
   \   0000009C   0328               CMP      R0,#+3
   \   0000009E   4CD2               BCS      ??TimetableSet_Event_6
   2016                      for (char col=0; col<3; col++)
   \   000000A0   0023               MOVS     R3,#+0
   \   000000A2   07E0               B        ??TimetableSet_Event_7
   2017                      { 
   2018                        if (++day<8)
   2019                        {
   2020                            if ((X_up>4+col*18) && (X_up<4+(col+1)*18) && (Y_up<105-row*14) && (Y_up>105-(row+1)*14))
   2021                            {
   2022                              if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                           ^
Warning[Pe068]: integer conversion resulted in a change of sign
   2023                              if ((TimetableSet_Week>>(day-1)) & 0x1)  //jezeli dzieñ aktywny to wy³acz je¿eli nie to w³¹cz
   2024                              {
   2025                                 TimetableSet_Week &= ~(1<<(day-1));
   2026                              }else{
   2027                                 TimetableSet_Week |= (1<<(day-1));
   \                     ??TimetableSet_Event_8:
   \   000000A4   0124               MOVS     R4,#+1
   \   000000A6   8440               LSLS     R4,R4,R0
   \   000000A8   0C43               ORRS     R4,R4,R1
   \   000000AA   EC73               STRB     R4,[R5, #+15]
   2028                              }
   2029          
   2030                              Repaint=1;
   \                     ??TimetableSet_Event_9:
   \   000000AC   0124               MOVS     R4,#+1
   \                     ??TimetableSet_Event_10:
   \   000000AE   5B1C               ADDS     R3,R3,#+1
   \   000000B0   1B06               LSLS     R3,R3,#+24
   \   000000B2   1B0E               LSRS     R3,R3,#+24
   \                     ??TimetableSet_Event_7:
   \   000000B4   1800               MOVS     R0,R3
   \   000000B6   0328               CMP      R0,#+3
   \   000000B8   ECD2               BCS      ??TimetableSet_Event_5
   \   000000BA   761C               ADDS     R6,R6,#+1
   \   000000BC   3606               LSLS     R6,R6,#+24
   \   000000BE   360E               LSRS     R6,R6,#+24
   \   000000C0   3000               MOVS     R0,R6
   \   000000C2   0828               CMP      R0,#+8
   \   000000C4   F3D2               BCS      ??TimetableSet_Event_10
   \   000000C6   1800               MOVS     R0,R3
   \   000000C8   1221               MOVS     R1,#+18
   \   000000CA   4843               MULS     R0,R1,R0
   \   000000CC   5249               LDR      R1,??TimetableSet_Event_0+0xC  ;; X_up
   \   000000CE   0025               MOVS     R5,#+0
   \   000000D0   495F               LDRSH    R1,[R1, R5]
   \   000000D2   0500               MOVS     R5,R0
   \   000000D4   2D1D               ADDS     R5,R5,#+4
   \   000000D6   8D42               CMP      R5,R1
   \   000000D8   E9DA               BGE      ??TimetableSet_Event_10
   \   000000DA   1630               ADDS     R0,R0,#+22
   \   000000DC   8142               CMP      R1,R0
   \   000000DE   E6DA               BGE      ??TimetableSet_Event_10
   \   000000E0   1100               MOVS     R1,R2
   \   000000E2   4C48               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   000000E4   0025               MOVS     R5,#+0
   \   000000E6   455F               LDRSH    R5,[R0, R5]
   \   000000E8   6920               MOVS     R0,#+105
   \   000000EA   0E27               MOVS     R7,#+14
   \   000000EC   4F43               MULS     R7,R1,R7
   \   000000EE   C01B               SUBS     R0,R0,R7
   \   000000F0   8542               CMP      R5,R0
   \   000000F2   DCDA               BGE      ??TimetableSet_Event_10
   \   000000F4   6920               MOVS     R0,#+105
   \   000000F6   491C               ADDS     R1,R1,#+1
   \   000000F8   0E27               MOVS     R7,#+14
   \   000000FA   7943               MULS     R1,R7,R1
   \   000000FC   401A               SUBS     R0,R0,R1
   \   000000FE   A842               CMP      R0,R5
   \   00000100   D5DA               BGE      ??TimetableSet_Event_10
   \   00000102   4748               LDR      R0,??TimetableSet_Event_0+0x14  ;; 0x13d7e9
   \   00000104   0078               LDRB     R0,[R0, #+0]
   \   00000106   0028               CMP      R0,#+0
   \   00000108   0AD1               BNE      ??TimetableSet_Event_11
   \   0000010A   4648               LDR      R0,??TimetableSet_Event_0+0x18  ;; 0xfffff430
   \   0000010C   8021               MOVS     R1,#+128
   \   0000010E   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000110   0160               STR      R1,[R0, #+0]
   \   00000112   454C               LDR      R4,??TimetableSet_Event_0+0x1C  ;; ButtonBipCounter
   \   00000114   4548               LDR      R0,??TimetableSet_Event_0+0x20  ;; g_counter
   \   00000116   03C8               LDM      R0!,{R0,R1}
   \   00000118   0025               MOVS     R5,#+0
   \   0000011A   0830               ADDS     R0,R0,#+8
   \   0000011C   6941               ADCS     R1,R1,R5
   \   0000011E   03C4               STM      R4!,{R0,R1}
   \                     ??TimetableSet_Event_11:
   \   00000120   3000               MOVS     R0,R6
   \   00000122   401E               SUBS     R0,R0,#+1
   \   00000124   3D4D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000126   E97B               LDRB     R1,[R5, #+15]
   \   00000128   0C00               MOVS     R4,R1
   \   0000012A   0441               ASRS     R4,R4,R0
   \   0000012C   E407               LSLS     R4,R4,#+31
   \   0000012E   B9D5               BPL      ??TimetableSet_Event_8
   \   00000130   0124               MOVS     R4,#+1
   \   00000132   8440               LSLS     R4,R4,R0
   \   00000134   A143               BICS     R1,R1,R4
   \   00000136   E973               STRB     R1,[R5, #+15]
   \   00000138   B8E7               B        ??TimetableSet_Event_9
   2031                  
   2032                            }
   2033          
   2034                        }
   2035                      }
   2036                      
   2037                      
   2038                            char LabelButt[2];
   2039                  
   2040                      
   2041                      LabelButt[1]=0;
   \                     ??TimetableSet_Event_6:
   \   0000013A   6E46               MOV      R6,SP
   \   0000013C   0020               MOVS     R0,#+0
   \   0000013E   7070               STRB     R0,[R6, #+1]
   2042                      LabelButt[0]=30; //góra - godzina
   \   00000140   1E27               MOVS     R7,#+30
   \   00000142   3770               STRB     R7,[R6, #+0]
   2043                      if (Button(LabelButt,5,35,26,15)==2){Repaint=1; if (TimetableSet_Hour<23) TimetableSet_Hour++; else TimetableSet_Hour=0; }
   \   00000144   82B0               SUB      SP,SP,#+8
   \   00000146   0F20               MOVS     R0,#+15
   \   00000148   0090               STR      R0,[SP, #+0]
   \   0000014A   1A23               MOVS     R3,#+26
   \   0000014C   2322               MOVS     R2,#+35
   \   0000014E   0521               MOVS     R1,#+5
   \   00000150   02A8               ADD      R0,SP,#+8
   \   00000152   ........           BL       Button
   \   00000156   02B0               ADD      SP,SP,#+8
   \   00000158   0228               CMP      R0,#+2
   \   0000015A   09D1               BNE      ??TimetableSet_Event_12
   \   0000015C   0124               MOVS     R4,#+1
   \   0000015E   2F4D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000160   687B               LDRB     R0,[R5, #+13]
   \   00000162   1728               CMP      R0,#+23
   \   00000164   02D2               BCS      ??TimetableSet_Event_13
   \   00000166   401C               ADDS     R0,R0,#+1
   \   00000168   6873               STRB     R0,[R5, #+13]
   \   0000016A   01E0               B        ??TimetableSet_Event_12
   \                     ??TimetableSet_Event_13:
   \   0000016C   0020               MOVS     R0,#+0
   \   0000016E   6873               STRB     R0,[R5, #+13]
   2044                      LabelButt[0]=30; //góra- minuta
   \                     ??TimetableSet_Event_12:
   \   00000170   3770               STRB     R7,[R6, #+0]
   2045                      if (Button(LabelButt,34,35,26,15)==2){Repaint=1; if (TimetableSet_Minute<59) TimetableSet_Minute++; else TimetableSet_Minute=0;}
   \   00000172   82B0               SUB      SP,SP,#+8
   \   00000174   0F20               MOVS     R0,#+15
   \   00000176   0090               STR      R0,[SP, #+0]
   \   00000178   1A23               MOVS     R3,#+26
   \   0000017A   2322               MOVS     R2,#+35
   \   0000017C   2221               MOVS     R1,#+34
   \   0000017E   02A8               ADD      R0,SP,#+8
   \   00000180   ........           BL       Button
   \   00000184   02B0               ADD      SP,SP,#+8
   \   00000186   0228               CMP      R0,#+2
   \   00000188   09D1               BNE      ??TimetableSet_Event_14
   \   0000018A   0124               MOVS     R4,#+1
   \   0000018C   234D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   0000018E   A87B               LDRB     R0,[R5, #+14]
   \   00000190   3B28               CMP      R0,#+59
   \   00000192   02D2               BCS      ??TimetableSet_Event_15
   \   00000194   401C               ADDS     R0,R0,#+1
   \   00000196   A873               STRB     R0,[R5, #+14]
   \   00000198   01E0               B        ??TimetableSet_Event_14
   \                     ??TimetableSet_Event_15:
   \   0000019A   0020               MOVS     R0,#+0
   \   0000019C   A873               STRB     R0,[R5, #+14]
   2046                      
   2047                
   2048                      LabelButt[0]=31; //dó³ godzina
   \                     ??TimetableSet_Event_14:
   \   0000019E   1F27               MOVS     R7,#+31
   \   000001A0   3770               STRB     R7,[R6, #+0]
   2049                      if (Button(LabelButt,5, 9,26,15)==2){Repaint=1; if (TimetableSet_Hour>0) TimetableSet_Hour--; else TimetableSet_Hour=23;}
   \   000001A2   82B0               SUB      SP,SP,#+8
   \   000001A4   0F20               MOVS     R0,#+15
   \   000001A6   0090               STR      R0,[SP, #+0]
   \   000001A8   1A23               MOVS     R3,#+26
   \   000001AA   0922               MOVS     R2,#+9
   \   000001AC   0521               MOVS     R1,#+5
   \   000001AE   02A8               ADD      R0,SP,#+8
   \   000001B0   ........           BL       Button
   \   000001B4   02B0               ADD      SP,SP,#+8
   \   000001B6   0228               CMP      R0,#+2
   \   000001B8   09D1               BNE      ??TimetableSet_Event_16
   \   000001BA   0124               MOVS     R4,#+1
   \   000001BC   174D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   000001BE   687B               LDRB     R0,[R5, #+13]
   \   000001C0   0028               CMP      R0,#+0
   \   000001C2   02D0               BEQ      ??TimetableSet_Event_17
   \   000001C4   401E               SUBS     R0,R0,#+1
   \   000001C6   6873               STRB     R0,[R5, #+13]
   \   000001C8   01E0               B        ??TimetableSet_Event_16
   \                     ??TimetableSet_Event_17:
   \   000001CA   1720               MOVS     R0,#+23
   \   000001CC   6873               STRB     R0,[R5, #+13]
   2050                      LabelButt[0]=31; //dó³ minuta
   \                     ??TimetableSet_Event_16:
   \   000001CE   3770               STRB     R7,[R6, #+0]
   2051                      if (Button(LabelButt,34, 9,26,15)==2){Repaint=1; if (TimetableSet_Minute>0) TimetableSet_Minute--; else TimetableSet_Minute=59;}
   \   000001D0   82B0               SUB      SP,SP,#+8
   \   000001D2   0F20               MOVS     R0,#+15
   \   000001D4   0090               STR      R0,[SP, #+0]
   \   000001D6   1A23               MOVS     R3,#+26
   \   000001D8   0922               MOVS     R2,#+9
   \   000001DA   2221               MOVS     R1,#+34
   \   000001DC   02A8               ADD      R0,SP,#+8
   \   000001DE   ........           BL       Button
   \   000001E2   02B0               ADD      SP,SP,#+8
   \   000001E4   0228               CMP      R0,#+2
   \   000001E6   09D1               BNE      ??TimetableSet_Event_18
   \   000001E8   0124               MOVS     R4,#+1
   \   000001EA   0C4D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   000001EC   A87B               LDRB     R0,[R5, #+14]
   \   000001EE   0028               CMP      R0,#+0
   \   000001F0   02D0               BEQ      ??TimetableSet_Event_19
   \   000001F2   401E               SUBS     R0,R0,#+1
   \   000001F4   A873               STRB     R0,[R5, #+14]
   \   000001F6   01E0               B        ??TimetableSet_Event_18
   \                     ??TimetableSet_Event_19:
   \   000001F8   3B20               MOVS     R0,#+59
   \   000001FA   A873               STRB     R0,[R5, #+14]
   2052                          
   2053                     
   2054                     
   2055                     if (Repaint==1) MenuPaint();      
   \                     ??TimetableSet_Event_18:
   \   000001FC   012C               CMP      R4,#+1
   \   000001FE   01D1               BNE      ??TimetableSet_Event_2
   \   00000200   ........           BL       MenuPaint
   2056                    
   2057                  }
   2058          }//________________________________________________________________________
   \                     ??TimetableSet_Event_2:
   \   00000204   F8BC               POP      {R3-R7}
   \   00000206   01BC               POP      {R0}
   \   00000208   0047               BX       R0               ;; return
   \   0000020A   C046               Nop      
   \                     ??TimetableSet_Event_0:
   \   0000020C   ........           DC32     Y_down
   \   00000210   ........           DC32     X_down
   \   00000214   ........           DC32     Y_up
   \   00000218   ........           DC32     X_up
   \   0000021C   ........           DC32     TextToChangeLength
   \   00000220   E9D71300           DC32     0x13d7e9
   \   00000224   30F4FFFF           DC32     0xfffff430
   \   00000228   ........           DC32     ButtonBipCounter
   \   0000022C   ........           DC32     g_counter
   2059              
   2060          
   2061          
   2062          
   2063          
   2064          
   2065          
   2066          
   2067          
   2068          
   2069          
   2070          
   2071          
   2072          
   2073          
   2074          //*-----------------------------------------------------------------------------
   2075          //* Nazwa funkcji :    Wait_Paint
   2076          //* Funkcja strony g³ównej menu
   2077          //*-----------------------------------------------------------------------------
   2078          //* Efekt widoczny po odwierzeniu LCD (Wait_Paint)
   2079          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2080          void Wait_Paint(void)
   2081          {
   \                     Wait_Paint:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   AFB0               SUB      SP,SP,#+188
   2082              CleanCanvas(); 
   \   00000004   ........           BL       CleanCanvas
   2083              
   2084              char ekran_tab[4][46] = {
   2085                            {0,240,252,127,143,243,251,251,251,227,131,3,7,15,14,30,60,120,240,224,192,128,0,0,0,128,192,224,240,112,56,156,206,239,119,3,3,3,227,255,255,31,7,31,254,252},
   2086                            {252,255,255,0,255,255,255,255,255,255,255,254,248,48,48,0,0,0,0,1,3,39,183,182,183,183,123,253,254,254,255,255,255,1,0,0,0,0,255,255,0,0,0,0,255,255},
   2087                            {1,63,255,248,199,63,127,127,127,31,7,1,128,128,192,224,240,120,60,30,15,7,3,3,3,7,15,30,61,123,247,239,223,158,176,0,0,0,31,255,252,192,128,224,255,255},
   2088                            {0,0,1,3,3,7,7,7,7,7,7,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,7,7,7,7,7,7,3,1,0},
   2089                            };
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0A49               LDR      R1,??Wait_Paint_0  ;; `?<Constant {{0, 240, 252, 127, 143, 243, 251, `
   \   0000000C   B822               MOVS     R2,#+184
   \   0000000E   ........           BL       __aeabi_memcpy4
   2090              
   2091          
   2092              CopyToCanvasPoint((char*)ekran_tab, 20, 40, 32,46);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   2E20               MOVS     R0,#+46
   \   00000016   0090               STR      R0,[SP, #+0]
   \   00000018   2023               MOVS     R3,#+32
   \   0000001A   2822               MOVS     R2,#+40
   \   0000001C   1421               MOVS     R1,#+20
   \   0000001E   02A8               ADD      R0,SP,#+8
   \   00000020   ........           BL       CopyToCanvasPoint
   \   00000024   02B0               ADD      SP,SP,#+8
   2093          
   2094           
   2095              RepaintLCD();
   \   00000026   ........           BL       RepaintLCD
   2096              RepaintLCD();
   \   0000002A   ........           BL       RepaintLCD
   2097          }//_______________________ Koniec funkcji Wait_Paint __________________________
   \   0000002E   2FB0               ADD      SP,SP,#+188
   \   00000030   01BC               POP      {R0}
   \   00000032   0047               BX       R0               ;; return
   \                     ??Wait_Paint_0:
   \   00000034   ........           DC32     `?<Constant {{0, 240, 252, 127, 143, 243, 251, `
   2098          
   2099          
   2100          
   2101          
   2102          
   2103          
   2104          
   2105          
   2106          
   2107          //******************************************************************************************************************************
   2108          //******************************************************************************************************************************
   2109          //******************************************************************************************************************************
   2110          //******************************************************************************************************************************
   2111          //******************************************************************************************************************************
   2112          
   2113          
   2114          
   2115          
   2116          
   2117          //*-----------------------------------------------------------------------------
   2118          //* Nazwa funkcji :    MainSide_Paint
   2119          //* Funkcja strony g³ównej menu
   2120          //*-----------------------------------------------------------------------------
   2121          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   2122          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2123          void Animation_Event(void)
   2124          {
   \                     Animation_Event:
   \   00000000   01B5               PUSH     {R0,LR}
   2125            
   2126              //akcja przycisku menu
   2127              if ((X_up>1) && (X_up<60) && (Y_up>1) && (Y_up<128))
   \   00000002   0A48               LDR      R0,??Animation_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   0228               CMP      R0,#+2
   \   0000000A   0CDB               BLT      ??Animation_Event_1
   \   0000000C   3C28               CMP      R0,#+60
   \   0000000E   0ADA               BGE      ??Animation_Event_1
   \   00000010   0748               LDR      R0,??Animation_Event_0+0x4  ;; Y_up
   \   00000012   405E               LDRSH    R0,[R0, R1]
   \   00000014   0228               CMP      R0,#+2
   \   00000016   06DB               BLT      ??Animation_Event_1
   \   00000018   8028               CMP      R0,#+128
   \   0000001A   04DA               BGE      ??Animation_Event_1
   2128              {
   2129                MenuLevel=4;
   \   0000001C   0548               LDR      R0,??Animation_Event_0+0x8  ;; TextToChangeLength + 80
   \   0000001E   0421               MOVS     R1,#+4
   \   00000020   0160               STR      R1,[R0, #+0]
   2130                MenuPaint();
   \   00000022   ........           BL       MenuPaint
   2131              }
   2132          }//_______________________ Koniec funkcji MainSide_Event __________________________
   \                     ??Animation_Event_1:
   \   00000026   08BC               POP      {R3}
   \   00000028   01BC               POP      {R0}
   \   0000002A   0047               BX       R0               ;; return
   \                     ??Animation_Event_0:
   \   0000002C   ........           DC32     X_up
   \   00000030   ........           DC32     Y_up
   \   00000034   ........           DC32     TextToChangeLength + 80
   2133          
   2134          
   2135          
   2136          
   2137          
   2138          
   2139          
   2140          
   2141                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2142                void AdvanceSet_Paint(void)
   2143                {
   \                     AdvanceSet_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   2144                  
   2145                  List_Paint(Speech[g_leng].Serwis,3,15,15,0,3, "Restart", Speech[g_leng].Czysc_pamiec, Speech[g_leng].Wyjdz , 0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0F48               LDR      R0,??AdvanceSet_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0F49               LDR      R1,??AdvanceSet_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   0F49               LDR      R1,??AdvanceSet_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0D48               LDR      R0,??AdvanceSet_Paint_0+0xC  ;; 0x78f
   \   00000018   2018               ADDS     R0,R4,R0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   F020               MOVS     R0,#+240
   \   0000001E   C000               LSLS     R0,R0,#+3        ;; #+1920
   \   00000020   2118               ADDS     R1,R4,R0
   \   00000022   0B48               LDR      R0,??AdvanceSet_Paint_0+0x10  ;; `?<Constant "Info ">` + 28
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0321               MOVS     R1,#+3
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0F23               MOVS     R3,#+15
   \   0000002E   1A00               MOVS     R2,R3
   \   00000030   0848               LDR      R0,??AdvanceSet_Paint_0+0x14  ;; 0x771
   \   00000032   2018               ADDS     R0,R4,R0
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   2146          
   2147                  
   2148                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000003A   10BC               POP      {R4}
   \   0000003C   01BC               POP      {R0}
   \   0000003E   0047               BX       R0               ;; return
   \                     ??AdvanceSet_Paint_0:
   \   00000040   ........           DC32     g_leng
   \   00000044   7D0A0000           DC32     0xa7d
   \   00000048   ........           DC32     Speech
   \   0000004C   8F070000           DC32     0x78f
   \   00000050   ........           DC32     `?<Constant "Info ">` + 28
   \   00000054   71070000           DC32     0x771
   2149          
   2150          
   2151                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2152                void AdvanceSet_Event(void)
   2153                {
   \                     AdvanceSet_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   2154                  //char podswietl=0;
   2155                  int ans;
   2156                  
   2157                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,15); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0F21               MOVS     R1,#+15
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0320               MOVS     R0,#+3
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   1348               LDR      R0,??AdvanceSet_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   1348               LDR      R0,??AdvanceSet_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   1348               LDR      R0,??AdvanceSet_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   1348               LDR      R0,??AdvanceSet_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   2158            
   2159                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   15D0               BEQ      ??AdvanceSet_Event_1
   2160                    {
   2161                      if (ans==1) 
   \   0000002A   0128               CMP      R0,#+1
   \   0000002C   02D1               BNE      ??AdvanceSet_Event_2
   2162                      {
   2163                        //restart
   2164                        
   2165                        AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   0000002E   0F49               LDR      R1,??AdvanceSet_Event_0+0x10  ;; 0xfffffd00
   \   00000030   0F4A               LDR      R2,??AdvanceSet_Event_0+0x14  ;; 0xa5000005
   \   00000032   0A60               STR      R2,[R1, #+0]
   2166                      }
   2167                      if (ans==2) 
   \                     ??AdvanceSet_Event_2:
   \   00000034   0228               CMP      R0,#+2
   \   00000036   05D1               BNE      ??AdvanceSet_Event_3
   2168                      {
   2169                        MenuLevel=(MenuLevel*10+1);
   \   00000038   0E49               LDR      R1,??AdvanceSet_Event_0+0x18  ;; TextToChangeLength
   \   0000003A   0A6D               LDR      R2,[R1, #+80]
   \   0000003C   0A23               MOVS     R3,#+10
   \   0000003E   5A43               MULS     R2,R3,R2
   \   00000040   521C               ADDS     R2,R2,#+1
   \   00000042   0A65               STR      R2,[R1, #+80]
   2170                        //czyæ wczystko
   2171                        
   2172                      }
   2173                      
   2174                    if ((ans<0) || (ans==3)) MenuLevel=1;
   \                     ??AdvanceSet_Event_3:
   \   00000044   0028               CMP      R0,#+0
   \   00000046   01D4               BMI      ??AdvanceSet_Event_4
   \   00000048   0328               CMP      R0,#+3
   \   0000004A   02D1               BNE      ??AdvanceSet_Event_5
   \                     ??AdvanceSet_Event_4:
   \   0000004C   0A48               LDR      R0,??AdvanceSet_Event_0+0x1C  ;; TextToChangeLength + 80
   \   0000004E   0121               MOVS     R1,#+1
   \   00000050   0160               STR      R1,[R0, #+0]
   2175                    MenuPaint();
   \                     ??AdvanceSet_Event_5:
   \   00000052   ........           BL       MenuPaint
   2176                    } 
   2177                }//_______________________________________________________________________
   \                     ??AdvanceSet_Event_1:
   \   00000056   10BC               POP      {R4}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??AdvanceSet_Event_0:
   \   0000005C   ........           DC32     Y_down
   \   00000060   ........           DC32     X_down
   \   00000064   ........           DC32     Y_up
   \   00000068   ........           DC32     X_up
   \   0000006C   00FDFFFF           DC32     0xfffffd00
   \   00000070   050000A5           DC32     0xa5000005
   \   00000074   ........           DC32     TextToChangeLength
   \   00000078   ........           DC32     TextToChangeLength + 80
   2178          
   2179          
   2180             
   2181              //Wyczyæ wsyzstko
   2182                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2183                void CleanAll_Event(void)
   2184                {
   \                     CleanAll_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   2185                  AT91S_RSTC  g_AT91S_RSTC;
   2186                  int ans;
   2187           
   2188                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   2648               LDR      R0,??CleanAll_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   2548               LDR      R0,??CleanAll_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   2548               LDR      R0,??CleanAll_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   2548               LDR      R0,??CleanAll_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   2189            
   2190                  if (ans)
   \   0000001C   3AD0               BEQ      ??CleanAll_Event_1
   2191                    {
   2192                    if (ans==2) 
   \   0000001E   022C               CMP      R4,#+2
   \   00000020   2CD1               BNE      ??CleanAll_Event_2
   2193                    {
   2194                            korekta_X.A=AT91C_IFLASH_MEM->Config.Cor_X.A;
   \   00000022   224D               LDR      R5,??CleanAll_Event_0+0x10  ;; korekta_X
   \   00000024   2248               LDR      R0,??CleanAll_Event_0+0x14  ;; 0x13d828
   \   00000026   0068               LDR      R0,[R0, #+0]
   \   00000028   2860               STR      R0,[R5, #+0]
   2195                            korekta_X.B=AT91C_IFLASH_MEM->Config.Cor_X.B;
   \   0000002A   2248               LDR      R0,??CleanAll_Event_0+0x18  ;; 0x13d82c
   \   0000002C   0068               LDR      R0,[R0, #+0]
   \   0000002E   6860               STR      R0,[R5, #+4]
   2196                            korekta_Y.A=AT91C_IFLASH_MEM->Config.Cor_Y.A;
   \   00000030   214E               LDR      R6,??CleanAll_Event_0+0x1C  ;; korekta_Y
   \   00000032   2248               LDR      R0,??CleanAll_Event_0+0x20  ;; 0x13d820
   \   00000034   0068               LDR      R0,[R0, #+0]
   \   00000036   3060               STR      R0,[R6, #+0]
   2197                            korekta_Y.B=AT91C_IFLASH_MEM->Config.Cor_Y.B;
   \   00000038   2148               LDR      R0,??CleanAll_Event_0+0x24  ;; 0x13d824
   \   0000003A   0068               LDR      R0,[R0, #+0]
   \   0000003C   7060               STR      R0,[R6, #+4]
   2198                      
   2199                      //czyæ wszystko 
   2200                            unsigned int Save = __get_interrupt_state();  
   \   0000003E   ........           BL       __iar_get_interrupt_state
   \   00000042   0700               MOVS     R7,R0
   2201                            __disable_interrupt();
   \   00000044   ........           BL       __iar_disable_interrupt
   2202                             CleanFlash((char*)(AT91C_IFLASH_MEM),64+sizeof(AT91S_MEM)+sizeof(_Config));
                                    ^
Warning[Pe223]: function "CleanFlash" declared implicitly
   \   00000048   1E49               LDR      R1,??CleanAll_Event_0+0x28  ;; 0xdb20
   \   0000004A   9820               MOVS     R0,#+152
   \   0000004C   4003               LSLS     R0,R0,#+13       ;; #+1245184
   \   0000004E   ........           BL       CleanFlash
   2203                                               
   2204                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_X)), (char*) (&(korekta_X.A)), sizeof(korekta_X));
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000052   0822               MOVS     R2,#+8
   \   00000054   2900               MOVS     R1,R5
   \   00000056   1648               LDR      R0,??CleanAll_Event_0+0x14  ;; 0x13d828
   \   00000058   ........           BL       FlashWrite
   2205                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_Y)), (char*) (&(korekta_Y.A)), sizeof(korekta_Y));
   \   0000005C   0822               MOVS     R2,#+8
   \   0000005E   3100               MOVS     R1,R6
   \   00000060   1648               LDR      R0,??CleanAll_Event_0+0x20  ;; 0x13d820
   \   00000062   ........           BL       FlashWrite
   2206                            __set_interrupt_state(Save);
   \   00000066   3800               MOVS     R0,R7
   \   00000068   ........           BL       __iar_set_interrupt_state
   2207                            __enable_interrupt();
   \   0000006C   ........           BL       __iar_enable_interrupt
   2208                            
   2209                                //restar
   2210                            AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   00000070   1548               LDR      R0,??CleanAll_Event_0+0x2C  ;; 0xfffffd00
   \   00000072   1649               LDR      R1,??CleanAll_Event_0+0x30  ;; 0xa5000005
   \   00000074   0160               STR      R1,[R0, #+0]
   2211          
   2212          
   2213                          __set_interrupt_state(Save);
   \   00000076   3800               MOVS     R0,R7
   \   00000078   ........           BL       __iar_set_interrupt_state
   2214                          //koniec zapisu do flash
   2215                          
   2216                    }
   2217                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??CleanAll_Event_2:
   \   0000007C   002C               CMP      R4,#+0
   \   0000007E   01D4               BMI      ??CleanAll_Event_3
   \   00000080   012C               CMP      R4,#+1
   \   00000082   05D1               BNE      ??CleanAll_Event_4
   \                     ??CleanAll_Event_3:
   \   00000084   124C               LDR      R4,??CleanAll_Event_0+0x34  ;; TextToChangeLength
   \   00000086   206D               LDR      R0,[R4, #+80]
   \   00000088   0A21               MOVS     R1,#+10
   \   0000008A   ........           BL       __aeabi_idivmod
   \   0000008E   2065               STR      R0,[R4, #+80]
   2218                    MenuPaint();
   \                     ??CleanAll_Event_4:
   \   00000090   ........           BL       MenuPaint
   2219                    } 
   2220                }//_______________________________________________________________________
   \                     ??CleanAll_Event_1:
   \   00000094   F8BC               POP      {R3-R7}
   \   00000096   01BC               POP      {R0}
   \   00000098   0047               BX       R0               ;; return
   \   0000009A   C046               Nop      
   \                     ??CleanAll_Event_0:
   \   0000009C   ........           DC32     Y_down
   \   000000A0   ........           DC32     X_down
   \   000000A4   ........           DC32     Y_up
   \   000000A8   ........           DC32     X_up
   \   000000AC   ........           DC32     korekta_X
   \   000000B0   28D81300           DC32     0x13d828
   \   000000B4   2CD81300           DC32     0x13d82c
   \   000000B8   ........           DC32     korekta_Y
   \   000000BC   20D81300           DC32     0x13d820
   \   000000C0   24D81300           DC32     0x13d824
   \   000000C4   20DB0000           DC32     0xdb20
   \   000000C8   00FDFFFF           DC32     0xfffffd00
   \   000000CC   050000A5           DC32     0xa5000005
   \   000000D0   ........           DC32     TextToChangeLength
   2221              
   2222              
   2223          
   2224          
   2225          //Lista MENU ******************************************************************************************************************
   2226          
   2227          
   2228                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2229                void MenuSide_Paint(void)
   2230                {
   \                     MenuSide_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   2231                  
   2232                  #ifdef __WIFI_MODULE   
   2233                    List_Paint("MENU",7,15,0,0,3, "Program ", Speech[g_leng].Ekran, Speech[g_leng].Opcje , Speech[g_leng].Ustawienia,Speech[g_leng].Wezly,"Info ",Speech[g_leng].Siec,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   1448               LDR      R0,??MenuSide_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   1449               LDR      R1,??MenuSide_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1449               LDR      R1,??MenuSide_Paint_0+0x8  ;; Speech
   \   0000000C   0A18               ADDS     R2,R1,R0
   \   0000000E   144C               LDR      R4,??MenuSide_Paint_0+0xC  ;; `?<Constant "Info ">`
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   1448               LDR      R0,??MenuSide_Paint_0+0x10  ;; 0x8ca
   \   00000014   1018               ADDS     R0,R2,R0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   2100               MOVS     R1,R4
   \   0000001A   1348               LDR      R0,??MenuSide_Paint_0+0x14  ;; 0x636
   \   0000001C   1018               ADDS     R0,R2,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1100               MOVS     R1,R2
   \   00000022   3C31               ADDS     R1,R1,#+60
   \   00000024   8720               MOVS     R0,#+135
   \   00000026   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000028   1018               ADDS     R0,R2,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0F48               LDR      R0,??MenuSide_Paint_0+0x18  ;; 0x4dd
   \   0000002E   1118               ADDS     R1,R2,R0
   \   00000030   2000               MOVS     R0,R4
   \   00000032   2C30               ADDS     R0,R0,#+44
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   0321               MOVS     R1,#+3
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   0300               MOVS     R3,R0
   \   0000003E   0F22               MOVS     R2,#+15
   \   00000040   0721               MOVS     R1,#+7
   \   00000042   2434               ADDS     R4,R4,#+36
   \   00000044   2000               MOVS     R0,R4
   \   00000046   ........           BL       List_Paint
   \   0000004A   0AB0               ADD      SP,SP,#+40
   2234                  #else
   2235                    List_Paint("MENU",6,15,0,0,3, "Program ", Speech[g_leng].Ekran, Speech[g_leng].Opcje , Speech[g_leng].Ustawienia,Speech[g_leng].Wezly,"Info ",0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   2236                  #endif
   2237                                                                                                                                                              
   2238                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000004C   10BC               POP      {R4}
   \   0000004E   01BC               POP      {R0}
   \   00000050   0047               BX       R0               ;; return
   \   00000052   C046               Nop      
   \                     ??MenuSide_Paint_0:
   \   00000054   ........           DC32     g_leng
   \   00000058   7D0A0000           DC32     0xa7d
   \   0000005C   ........           DC32     Speech
   \   00000060   ........           DC32     `?<Constant "Info ">`
   \   00000064   CA080000           DC32     0x8ca
   \   00000068   36060000           DC32     0x636
   \   0000006C   DD040000           DC32     0x4dd
   2239          
   2240          
   2241          
   2242                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2243                void MenuSide_Event(void)
   2244                {
   \                     MenuSide_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   2245                  //char podswietl=0;
   2246                  int ans;
   2247                  
   2248                  #ifdef __WIFI_MODULE  
   2249                    char il=7;
   2250                  #else
   2251                    char il=6;
   2252                  #endif
   2253          
   2254           
   2255                  ans=List_Event(X_up, Y_up, X_down, Y_down, il , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0720               MOVS     R0,#+7
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??MenuSide_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??MenuSide_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??MenuSide_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??MenuSide_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   2256            
   2257                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   15D0               BEQ      ??MenuSide_Event_1
   2258                    {
   2259                    if ((ans>0) && (ans<=il)) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   07DB               BLT      ??MenuSide_Event_2
   \   00000030   0828               CMP      R0,#+8
   \   00000032   05DA               BGE      ??MenuSide_Event_2
   \   00000034   0E4C               LDR      R4,??MenuSide_Event_0+0x10  ;; TextToChangeLength
   \   00000036   216D               LDR      R1,[R4, #+80]
   \   00000038   0A22               MOVS     R2,#+10
   \   0000003A   5143               MULS     R1,R2,R1
   \   0000003C   0918               ADDS     R1,R1,R0
   \   0000003E   2165               STR      R1,[R4, #+80]
   2260                    if (ans<0) {
   \                     ??MenuSide_Event_2:
   \   00000040   0028               CMP      R0,#+0
   \   00000042   07D5               BPL      ??MenuSide_Event_3
   2261                      MenuLevel=(MenuLevel/10);
   \   00000044   0A4C               LDR      R4,??MenuSide_Event_0+0x10  ;; TextToChangeLength
   \   00000046   206D               LDR      R0,[R4, #+80]
   \   00000048   0A21               MOVS     R1,#+10
   \   0000004A   ........           BL       __aeabi_idivmod
   \   0000004E   2065               STR      R0,[R4, #+80]
   2262                     CurModifSheet=0; 
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   6071               STRB     R0,[R4, #+5]
   2263                    }
   2264                    MenuPaint();
   \                     ??MenuSide_Event_3:
   \   00000054   ........           BL       MenuPaint
   2265                    } 
   2266                }//_______________________________________________________________________
   \                     ??MenuSide_Event_1:
   \   00000058   10BC               POP      {R4}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??MenuSide_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
   2267          
   2268          
   2269          
   2270          
   2271          
   2272          //Wybór poziomu dostêpu *************************************************************************************************************
   2273                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2274                void MenuAccess_Paint(void)
   2275                {
   \                     MenuAccess_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   2276                    #define  Y   4   //przesuniêcie w dó³
   2277                    List_Paint("X",3,15,Y,5,0,Speech[g_leng].Poziom1, Speech[g_leng].Poziom2,  Speech[g_leng].Poziom3,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   1B48               LDR      R0,??MenuAccess_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   1B49               LDR      R1,??MenuAccess_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1B49               LDR      R1,??MenuAccess_Paint_0+0x8  ;; Speech
   \   0000000C   0A18               ADDS     R2,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   A520               MOVS     R0,#+165
   \   00000018   4000               LSLS     R0,R0,#+1        ;; #+330
   \   0000001A   1018               ADDS     R0,R2,R0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   FF20               MOVS     R0,#+255
   \   00000020   3C30               ADDS     R0,R0,#+60       ;; #+315
   \   00000022   1118               ADDS     R1,R2,R0
   \   00000024   0F38               SUBS     R0,R0,#+15
   \   00000026   1018               ADDS     R0,R2,R0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   0021               MOVS     R1,#+0
   \   0000002C   0520               MOVS     R0,#+5
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0423               MOVS     R3,#+4
   \   00000032   0F22               MOVS     R2,#+15
   \   00000034   0321               MOVS     R1,#+3
   \   00000036   11A0               ADR      R0,??MenuAccess_Paint_0+0xC  ;; 0x58, 0x00, 0x00, 0x00
   \   00000038   ........           BL       List_Paint
   \   0000003C   0AB0               ADD      SP,SP,#+40
   2278                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000003E   6846               MOV      R0,SP
   \   00000040   0F49               LDR      R1,??MenuAccess_Paint_0+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`
   \   00000042   1CC9               LDM      R1!,{R2-R4}
   \   00000044   1CC0               STM      R0!,{R2-R4}
   2279                    CopyToCanvasPoint((char *)ekran_tab,49,97-Y-(15*(g_level)),8,10); 
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0A20               MOVS     R0,#+10
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   0823               MOVS     R3,#+8
   \   0000004E   5D20               MOVS     R0,#+93
   \   00000050   0C49               LDR      R1,??MenuAccess_Paint_0+0x14  ;; g_level
   \   00000052   0978               LDRB     R1,[R1, #+0]
   \   00000054   0F22               MOVS     R2,#+15
   \   00000056   5143               MULS     R1,R2,R1
   \   00000058   421A               SUBS     R2,R0,R1
   \   0000005A   1206               LSLS     R2,R2,#+24
   \   0000005C   120E               LSRS     R2,R2,#+24
   \   0000005E   3121               MOVS     R1,#+49
   \   00000060   02A8               ADD      R0,SP,#+8
   \   00000062   ........           BL       CopyToCanvasPoint
   \   00000066   02B0               ADD      SP,SP,#+8
   2280                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000068   1FBC               POP      {R0-R4}
   \   0000006A   01BC               POP      {R0}
   \   0000006C   0047               BX       R0               ;; return
   \   0000006E   C046               Nop      
   \                     ??MenuAccess_Paint_0:
   \   00000070   ........           DC32     g_leng
   \   00000074   7D0A0000           DC32     0xa7d
   \   00000078   ........           DC32     Speech
   \   0000007C   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   00000080   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`
   \   00000084   ........           DC32     g_level
   2281          
   2282          
   2283                  char pass_tmp[9]={0,0,0,0,0,0,0,0,0};
   2284                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2285                void MenuAccess_Event(void)
   2286                {
   \                     MenuAccess_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   2287                  #define  Y   4   //przesuniêcie w dó³
   2288                  int ans;
   2289           
   2290                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 5,Y); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   2F4D               LDR      R5,??MenuAccess_Event_0  ;; X_up
   \   00000004   2F4E               LDR      R6,??MenuAccess_Event_0+0x4  ;; Y_up
   \   00000006   0421               MOVS     R1,#+4
   \   00000008   0520               MOVS     R0,#+5
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0320               MOVS     R0,#+3
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   2D48               LDR      R0,??MenuAccess_Event_0+0x8  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   2C48               LDR      R0,??MenuAccess_Event_0+0xC  ;; X_down
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   315E               LDRSH    R1,[R6, R0]
   \   00000020   285E               LDRSH    R0,[R5, R0]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0400               MOVS     R4,R0
   2291            
   2292                  if (ans)
   \   0000002A   36D0               BEQ      ??MenuAccess_Event_1
   2293                    {
   2294                      if ((ans>0) && (ans<4))
   \   0000002C   012C               CMP      R4,#+1
   \   0000002E   44DB               BLT      ??MenuAccess_Event_2
   \   00000030   042C               CMP      R4,#+4
   \   00000032   42DA               BGE      ??MenuAccess_Event_2
   2295                      {
   2296                        if (ans>1)
   \   00000034   022C               CMP      R4,#+2
   \   00000036   15DB               BLT      ??MenuAccess_Event_3
   2297                        {
   2298                          for (char i=0; i<8; i++) pass_tmp[i]=0;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0100               MOVS     R1,R0
   \   0000003C   06E0               B        ??MenuAccess_Event_4
   \                     ??MenuAccess_Event_5:
   \   0000003E   244B               LDR      R3,??MenuAccess_Event_0+0x10  ;; InsertPass1
   \   00000040   9A18               ADDS     R2,R3,R2
   \   00000042   0300               MOVS     R3,R0
   \   00000044   1373               STRB     R3,[R2, #+12]
   \   00000046   491C               ADDS     R1,R1,#+1
   \   00000048   0906               LSLS     R1,R1,#+24
   \   0000004A   090E               LSRS     R1,R1,#+24
   \                     ??MenuAccess_Event_4:
   \   0000004C   0A00               MOVS     R2,R1
   \   0000004E   082A               CMP      R2,#+8
   \   00000050   F5D3               BCC      ??MenuAccess_Event_5
   2299                          MenuLevel=(MenuLevel*10+ans);
   \   00000052   204D               LDR      R5,??MenuAccess_Event_0+0x14  ;; TextToChangeLength
   \   00000054   286D               LDR      R0,[R5, #+80]
   \   00000056   0A21               MOVS     R1,#+10
   \   00000058   4843               MULS     R0,R1,R0
   \   0000005A   0019               ADDS     R0,R0,R4
   \   0000005C   2865               STR      R0,[R5, #+80]
   2300                          MenuPaint();
   \   0000005E   ........           BL       MenuPaint
   \   00000062   2AE0               B        ??MenuAccess_Event_2
   2301                         
   2302                        }
   2303                        else
   2304                        {
   2305                           MenuLevel=(MenuLevel/10);
   \                     ??MenuAccess_Event_3:
   \   00000064   1B4D               LDR      R5,??MenuAccess_Event_0+0x14  ;; TextToChangeLength
   \   00000066   286D               LDR      R0,[R5, #+80]
   \   00000068   0A21               MOVS     R1,#+10
   \   0000006A   ........           BL       __aeabi_idivmod
   \   0000006E   2865               STR      R0,[R5, #+80]
   2306                           g_level=ans-1;
   \   00000070   1948               LDR      R0,??MenuAccess_Event_0+0x18  ;; g_level
   \   00000072   611E               SUBS     R1,R4,#+1
   \   00000074   0170               STRB     R1,[R0, #+0]
   2307                           Message_Paint(2,"","",Speech[g_leng].Poziom1,"","");
   \   00000076   19A1               ADR      R1,??MenuAccess_Event_0+0x1C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000078   0800               MOVS     R0,R1
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   9620               MOVS     R0,#+150
   \   0000007E   4000               LSLS     R0,R0,#+1        ;; #+300
   \   00000080   174A               LDR      R2,??MenuAccess_Event_0+0x20  ;; g_leng
   \   00000082   1268               LDR      R2,[R2, #+0]
   \   00000084   174B               LDR      R3,??MenuAccess_Event_0+0x24  ;; 0xa7d
   \   00000086   5A43               MULS     R2,R3,R2
   \   00000088   174B               LDR      R3,??MenuAccess_Event_0+0x28  ;; Speech
   \   0000008A   9A18               ADDS     R2,R3,R2
   \   0000008C   1318               ADDS     R3,R2,R0
   \   0000008E   0A00               MOVS     R2,R1
   \   00000090   0220               MOVS     R0,#+2
   \   00000092   ........           BL       Message_Paint
   \   00000096   02B0               ADD      SP,SP,#+8
   \   00000098   0FE0               B        ??MenuAccess_Event_2
   2308                        }
   2309                      }
   2310                      
   2311                    }
   2312                  else
   2313                    {
   2314                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??MenuAccess_Event_1:
   \   0000009A   0020               MOVS     R0,#+0
   \   0000009C   285E               LDRSH    R0,[R5, R0]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   0BDB               BLT      ??MenuAccess_Event_2
   \   000000A2   0020               MOVS     R0,#+0
   \   000000A4   305E               LDRSH    R0,[R6, R0]
   \   000000A6   0128               CMP      R0,#+1
   \   000000A8   07DB               BLT      ??MenuAccess_Event_2
   2315                      {
   2316                        MenuLevel=(MenuLevel/10);
   \   000000AA   0A4D               LDR      R5,??MenuAccess_Event_0+0x14  ;; TextToChangeLength
   \   000000AC   286D               LDR      R0,[R5, #+80]
   \   000000AE   0A21               MOVS     R1,#+10
   \   000000B0   ........           BL       __aeabi_idivmod
   \   000000B4   2865               STR      R0,[R5, #+80]
   2317                        MenuPaint();
   \   000000B6   ........           BL       MenuPaint
   2318                      }
   2319                    }
   2320                }//_______________________________________________________________________
   \                     ??MenuAccess_Event_2:
   \   000000BA   70BC               POP      {R4-R6}
   \   000000BC   01BC               POP      {R0}
   \   000000BE   0047               BX       R0               ;; return
   \                     ??MenuAccess_Event_0:
   \   000000C0   ........           DC32     X_up
   \   000000C4   ........           DC32     Y_up
   \   000000C8   ........           DC32     Y_down
   \   000000CC   ........           DC32     X_down
   \   000000D0   ........           DC32     InsertPass1
   \   000000D4   ........           DC32     TextToChangeLength
   \   000000D8   ........           DC32     g_level
   \   000000DC   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000000E0   ........           DC32     g_leng
   \   000000E4   7D0A0000           DC32     0xa7d
   \   000000E8   ........           DC32     Speech
   2321          
   2322          
   2323          
   2324          
   2325          
   2326          //has³o poziomu 1/2*************************************************************************************************************
   2327          char InsertPass1[9]= {0,0,0,0,0,0,0,0,0};
   2328          
   2329                //*-----------------------------------------------------------------------
   2330          

   \                                 In section Debug.txt, align 4, keep-with-next
   2331                void MenuAccessPass_Paint(char level)
   2332                {
   \                     MenuAccessPass_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   2333                   Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000004   1E4D               LDR      R5,??MenuAccessPass_Paint_0  ;; 0xa7d
   \   00000006   1F4E               LDR      R6,??MenuAccessPass_Paint_0+0x4  ;; g_leng
   \   00000008   1F4F               LDR      R7,??MenuAccessPass_Paint_0+0x8  ;; Speech
   \   0000000A   20A2               ADR      R2,??MenuAccessPass_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000C   20A1               ADR      R1,??MenuAccessPass_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000E   FF20               MOVS     R0,#+255
   \   00000010   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000012   3368               LDR      R3,[R6, #+0]
   \   00000014   6B43               MULS     R3,R5,R3
   \   00000016   FB18               ADDS     R3,R7,R3
   \   00000018   1818               ADDS     R0,R3,R0
   \   0000001A   ........           BL       Number_Paint
   2334                    
   2335                   if (level==1) Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001E   012C               CMP      R4,#+1
   \   00000020   15D1               BNE      ??MenuAccessPass_Paint_1
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   3A21               MOVS     R1,#+58
   \   0000002E   0F20               MOVS     R0,#+15
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   6623               MOVS     R3,#+102
   \   00000034   0322               MOVS     R2,#+3
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   8C46               MOV      R12,R1
   \   0000003A   FF21               MOVS     R1,#+255
   \   0000003C   D231               ADDS     R1,R1,#+210      ;; #+465
   \   0000003E   3068               LDR      R0,[R6, #+0]
   \   00000040   6843               MULS     R0,R5,R0
   \   00000042   3818               ADDS     R0,R7,R0
   \   00000044   4018               ADDS     R0,R0,R1
   \   00000046   6146               MOV      R1,R12
   \   00000048   ........           BL       Label
   \   0000004C   06B0               ADD      SP,SP,#+24
   2336                   if (level==2) Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??MenuAccessPass_Paint_1:
   \   0000004E   022C               CMP      R4,#+2
   \   00000050   13D1               BNE      ??MenuAccessPass_Paint_2
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   7F21               MOVS     R1,#+127
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   3A21               MOVS     R1,#+58
   \   0000005E   0F20               MOVS     R0,#+15
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   6623               MOVS     R3,#+102
   \   00000064   0322               MOVS     R2,#+3
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   FF20               MOVS     R0,#+255
   \   0000006A   D230               ADDS     R0,R0,#+210      ;; #+465
   \   0000006C   3468               LDR      R4,[R6, #+0]
   \   0000006E   6C43               MULS     R4,R5,R4
   \   00000070   3C19               ADDS     R4,R7,R4
   \   00000072   2018               ADDS     R0,R4,R0
   \   00000074   ........           BL       Label
   \   00000078   06B0               ADD      SP,SP,#+24
   2337                   
   2338                   
   2339                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??MenuAccessPass_Paint_2:
   \   0000007A   F8BC               POP      {R3-R7}
   \   0000007C   01BC               POP      {R0}
   \   0000007E   0047               BX       R0               ;; return
   \                     ??MenuAccessPass_Paint_0:
   \   00000080   7D0A0000           DC32     0xa7d
   \   00000084   ........           DC32     g_leng
   \   00000088   ........           DC32     Speech
   \   0000008C   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000090   43000000           DC8      0x43, 0x00, 0x00, 0x00
   2340          
   2341          
   2342          
   2343          
   2344                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2345                void MenuAccessPass_Event(char level)
   2346                {
   \                     MenuAccessPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   2347                  int ans;
   2348                  char roz=0;
   2349           
   2350                  
   2351                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   8448               LDR      R0,??MenuAccessPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   8448               LDR      R0,??MenuAccessPass_Event_0+0x4  ;; X_down
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   8448               LDR      R0,??MenuAccessPass_Event_0+0x8  ;; Y_up
   \   00000010   415E               LDRSH    R1,[R0, R1]
   \   00000012   8448               LDR      R0,??MenuAccessPass_Event_0+0xC  ;; X_up
   \   00000014   0024               MOVS     R4,#+0
   \   00000016   005F               LDRSH    R0,[R0, R4]
   \   00000018   ........           BL       Number_Event
   \   0000001C   0400               MOVS     R4,R0
   2352            
   2353                  if (ans>0)          {
   \   0000001E   012C               CMP      R4,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   E0E0               B        ??MenuAccessPass_Event_1
   2354                      
   2355                      if (InsertPass1[8]<=7) 
   \   00000024   804D               LDR      R5,??MenuAccessPass_Event_0+0x10  ;; InsertPass1
   \   00000026   287A               LDRB     R0,[R5, #+8]
   \   00000028   0828               CMP      R0,#+8
   \   0000002A   10D2               BCS      ??MenuAccessPass_Event_2
   2356                      { 
   2357                          if ((ans<10) || (ans==11)) 
   \   0000002C   0A2C               CMP      R4,#+10
   \   0000002E   01DB               BLT      ??MenuAccessPass_Event_3
   \   00000030   0B2C               CMP      R4,#+11
   \   00000032   0CD1               BNE      ??MenuAccessPass_Event_2
   2358                          {
   2359                            if (ans<10) InsertPass1[InsertPass1[8]]=ans+48;
   \                     ??MenuAccessPass_Event_3:
   \   00000034   0A2C               CMP      R4,#+10
   \   00000036   02DA               BGE      ??MenuAccessPass_Event_4
   \   00000038   2100               MOVS     R1,R4
   \   0000003A   3031               ADDS     R1,R1,#+48
   \   0000003C   2954               STRB     R1,[R5, R0]
   2360                            if (ans==11) InsertPass1[InsertPass1[8]]=ans+37;
   \                     ??MenuAccessPass_Event_4:
   \   0000003E   0B2C               CMP      R4,#+11
   \   00000040   02D1               BNE      ??MenuAccessPass_Event_5
   \   00000042   287A               LDRB     R0,[R5, #+8]
   \   00000044   3021               MOVS     R1,#+48
   \   00000046   2954               STRB     R1,[R5, R0]
   2361                            InsertPass1[8]++;
   \                     ??MenuAccessPass_Event_5:
   \   00000048   287A               LDRB     R0,[R5, #+8]
   \   0000004A   401C               ADDS     R0,R0,#+1
   \   0000004C   2872               STRB     R0,[R5, #+8]
   2362                          }
   2363                          
   2364                      }
   2365                      if ((ans==10) && (InsertPass1[8]>0) ) {InsertPass1[8]--; InsertPass1[InsertPass1[8]]=0;}
   \                     ??MenuAccessPass_Event_2:
   \   0000004E   0A2C               CMP      R4,#+10
   \   00000050   08D1               BNE      ??MenuAccessPass_Event_6
   \   00000052   287A               LDRB     R0,[R5, #+8]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   05D0               BEQ      ??MenuAccessPass_Event_6
   \   00000058   401E               SUBS     R0,R0,#+1
   \   0000005A   2872               STRB     R0,[R5, #+8]
   \   0000005C   0006               LSLS     R0,R0,#+24
   \   0000005E   000E               LSRS     R0,R0,#+24
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   2954               STRB     R1,[R5, R0]
   2366                      
   2367                      
   2368                     char InsertPassVar=0;
   \                     ??MenuAccessPass_Event_6:
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0100               MOVS     R1,R0
   2369                     for (char i=0; i<=8; i++)  pass_tmp[i]=0;
   \   00000068   0200               MOVS     R2,R0
   \   0000006A   0600               MOVS     R6,R0
   \   0000006C   04E0               B        ??MenuAccessPass_Event_7
   \                     ??MenuAccessPass_Event_8:
   \   0000006E   EB18               ADDS     R3,R5,R3
   \   00000070   1E73               STRB     R6,[R3, #+12]
   \   00000072   521C               ADDS     R2,R2,#+1
   \   00000074   1206               LSLS     R2,R2,#+24
   \   00000076   120E               LSRS     R2,R2,#+24
   \                     ??MenuAccessPass_Event_7:
   \   00000078   1300               MOVS     R3,R2
   \   0000007A   092B               CMP      R3,#+9
   \   0000007C   F7D3               BCC      ??MenuAccessPass_Event_8
   2370                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<8))
   \                     ??MenuAccessPass_Event_9:
   \   0000007E   0A00               MOVS     R2,R1
   \   00000080   AB5C               LDRB     R3,[R5, R2]
   \   00000082   002B               CMP      R3,#+0
   \   00000084   09D0               BEQ      ??MenuAccessPass_Event_10
   \   00000086   0B00               MOVS     R3,R1
   \   00000088   082B               CMP      R3,#+8
   \   0000008A   06D2               BCS      ??MenuAccessPass_Event_10
   2371                     {
   2372                       pass_tmp[InsertPassVar]=42; //42="*"
   \   0000008C   AA18               ADDS     R2,R5,R2
   \   0000008E   2A23               MOVS     R3,#+42
   \   00000090   1373               STRB     R3,[R2, #+12]
   2373                       InsertPassVar++;
   \   00000092   491C               ADDS     R1,R1,#+1
   \   00000094   0906               LSLS     R1,R1,#+24
   \   00000096   090E               LSRS     R1,R1,#+24
   \   00000098   F1E7               B        ??MenuAccessPass_Event_9
   2374                     }
   2375          
   2376                      
   2377                      //Sprawdzenie has³a
   2378                      if (ans==12)
   \                     ??MenuAccessPass_Event_10:
   \   0000009A   0C2C               CMP      R4,#+12
   \   0000009C   00D0               BEQ      .+4
   \   0000009E   8AE0               B        ??MenuAccessPass_Event_11
   2379                      {
   2380                        roz=0;
   \   000000A0   0100               MOVS     R1,R0
   2381                        for (int i=0; i<=7; i++)
   \   000000A2   0200               MOVS     R2,R0
   \   000000A4   13E0               B        ??MenuAccessPass_Event_12
   2382                        {
   2383                            if ((g_Password_1[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \                     ??MenuAccessPass_Event_13:
   \   000000A6   AB5C               LDRB     R3,[R5, R2]
   \   000000A8   604E               LDR      R6,??MenuAccessPass_Event_0+0x14  ;; g_Password_1
   \   000000AA   B65C               LDRB     R6,[R6, R2]
   \   000000AC   9E42               CMP      R6,R3
   \   000000AE   04D0               BEQ      ??MenuAccessPass_Event_14
   \   000000B0   6E46               MOV      R6,SP
   \   000000B2   367A               LDRB     R6,[R6, #+8]
   \   000000B4   012E               CMP      R6,#+1
   \   000000B6   00D1               BNE      ??MenuAccessPass_Event_14
   \   000000B8   0121               MOVS     R1,#+1
   2384                            if ((g_Password_2[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??MenuAccessPass_Event_14:
   \   000000BA   5D4E               LDR      R6,??MenuAccessPass_Event_0+0x18  ;; g_Password_2
   \   000000BC   B65C               LDRB     R6,[R6, R2]
   \   000000BE   9E42               CMP      R6,R3
   \   000000C0   04D0               BEQ      ??MenuAccessPass_Event_15
   \   000000C2   6B46               MOV      R3,SP
   \   000000C4   1B7A               LDRB     R3,[R3, #+8]
   \   000000C6   022B               CMP      R3,#+2
   \   000000C8   00D1               BNE      ??MenuAccessPass_Event_15
   \   000000CA   0121               MOVS     R1,#+1
   2385                        }
   \                     ??MenuAccessPass_Event_15:
   \   000000CC   521C               ADDS     R2,R2,#+1
   \                     ??MenuAccessPass_Event_12:
   \   000000CE   082A               CMP      R2,#+8
   \   000000D0   E9DB               BLT      ??MenuAccessPass_Event_13
   2386                        //has³o programisty
   2387                        if (roz)
   \   000000D2   0029               CMP      R1,#+0
   \   000000D4   19D0               BEQ      ??MenuAccessPass_Event_16
   2388                        {
   2389                          char MHS[]="060480";
   \   000000D6   6A46               MOV      R2,SP
   \   000000D8   564B               LDR      R3,??MenuAccessPass_Event_0+0x1C  ;; `?<Constant "060480">`
   \   000000DA   C0CB               LDM      R3!,{R6,R7}
   \   000000DC   C0C2               STM      R2!,{R6,R7}
   2390                            for (int i=0; i<6; i++)
   \   000000DE   0200               MOVS     R2,R0
   \   000000E0   11E0               B        ??MenuAccessPass_Event_17
   2391                            {
   2392                                if ((MHS[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \                     ??MenuAccessPass_Event_18:
   \   000000E2   AB5C               LDRB     R3,[R5, R2]
   \   000000E4   6E46               MOV      R6,SP
   \   000000E6   B65C               LDRB     R6,[R6, R2]
   \   000000E8   9E42               CMP      R6,R3
   \   000000EA   04D0               BEQ      ??MenuAccessPass_Event_19
   \   000000EC   6F46               MOV      R7,SP
   \   000000EE   3F7A               LDRB     R7,[R7, #+8]
   \   000000F0   012F               CMP      R7,#+1
   \   000000F2   00D1               BNE      ??MenuAccessPass_Event_19
   \   000000F4   0121               MOVS     R1,#+1
   2393                                if ((MHS[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??MenuAccessPass_Event_19:
   \   000000F6   9E42               CMP      R6,R3
   \   000000F8   04D0               BEQ      ??MenuAccessPass_Event_20
   \   000000FA   6B46               MOV      R3,SP
   \   000000FC   1B7A               LDRB     R3,[R3, #+8]
   \   000000FE   022B               CMP      R3,#+2
   \   00000100   00D1               BNE      ??MenuAccessPass_Event_20
   \   00000102   0121               MOVS     R1,#+1
   2394                            }              
   \                     ??MenuAccessPass_Event_20:
   \   00000104   521C               ADDS     R2,R2,#+1
   \                     ??MenuAccessPass_Event_17:
   \   00000106   062A               CMP      R2,#+6
   \   00000108   EBDB               BLT      ??MenuAccessPass_Event_18
   2395                        }
   2396                        
   2397                        
   2398                        if (roz==0)                                 //je¿eli poprawne haslo
   \                     ??MenuAccessPass_Event_16:
   \   0000010A   0029               CMP      R1,#+0
   \   0000010C   39D1               BNE      ??MenuAccessPass_Event_21
   2399                        {
   2400                           MenuLevel=11;
   \   0000010E   4A49               LDR      R1,??MenuAccessPass_Event_0+0x20  ;; TextToChangeLength + 80
   \   00000110   0B22               MOVS     R2,#+11
   \   00000112   0A60               STR      R2,[R1, #+0]
   2401                           g_level=level;         //poziom dostêpu 1
   \   00000114   4949               LDR      R1,??MenuAccessPass_Event_0+0x24  ;; g_level
   \   00000116   6A46               MOV      R2,SP
   \   00000118   127A               LDRB     R2,[R2, #+8]
   \   0000011A   0A70               STRB     R2,[R1, #+0]
   2402                           for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \   0000011C   0100               MOVS     R1,R0
   \   0000011E   0200               MOVS     R2,R0
   \   00000120   01E0               B        ??MenuAccessPass_Event_22
   \                     ??MenuAccessPass_Event_23:
   \   00000122   6A54               STRB     R2,[R5, R1]
   \   00000124   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_22:
   \   00000126   0829               CMP      R1,#+8
   \   00000128   FBDB               BLT      ??MenuAccessPass_Event_23
   2403                           InsertPass1[8]=0;
   \   0000012A   2872               STRB     R0,[R5, #+8]
   2404                           if (level==1)  Message_Paint(2,"","",Speech[g_leng].Poziom2,"","");
   \   0000012C   6846               MOV      R0,SP
   \   0000012E   007A               LDRB     R0,[R0, #+8]
   \   00000130   0128               CMP      R0,#+1
   \   00000132   10D1               BNE      ??MenuAccessPass_Event_24
   \   00000134   42A1               ADR      R1,??MenuAccessPass_Event_0+0x28  ;; 0x00, 0x00, 0x00, 0x00
   \   00000136   0800               MOVS     R0,R1
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   FF20               MOVS     R0,#+255
   \   0000013C   3C30               ADDS     R0,R0,#+60       ;; #+315
   \   0000013E   414A               LDR      R2,??MenuAccessPass_Event_0+0x2C  ;; g_leng
   \   00000140   1268               LDR      R2,[R2, #+0]
   \   00000142   414B               LDR      R3,??MenuAccessPass_Event_0+0x30  ;; 0xa7d
   \   00000144   5A43               MULS     R2,R3,R2
   \   00000146   414B               LDR      R3,??MenuAccessPass_Event_0+0x34  ;; Speech
   \   00000148   9A18               ADDS     R2,R3,R2
   \   0000014A   1318               ADDS     R3,R2,R0
   \   0000014C   0A00               MOVS     R2,R1
   \   0000014E   0220               MOVS     R0,#+2
   \   00000150   ........           BL       Message_Paint
   \   00000154   02B0               ADD      SP,SP,#+8
   2405                           if (level==2)  Message_Paint(2,"","",Speech[g_leng].Poziom3,"","");
   \                     ??MenuAccessPass_Event_24:
   \   00000156   6846               MOV      R0,SP
   \   00000158   007A               LDRB     R0,[R0, #+8]
   \   0000015A   0228               CMP      R0,#+2
   \   0000015C   2BD1               BNE      ??MenuAccessPass_Event_11
   \   0000015E   38A1               ADR      R1,??MenuAccessPass_Event_0+0x28  ;; 0x00, 0x00, 0x00, 0x00
   \   00000160   0800               MOVS     R0,R1
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   A520               MOVS     R0,#+165
   \   00000166   4000               LSLS     R0,R0,#+1        ;; #+330
   \   00000168   364A               LDR      R2,??MenuAccessPass_Event_0+0x2C  ;; g_leng
   \   0000016A   1268               LDR      R2,[R2, #+0]
   \   0000016C   364B               LDR      R3,??MenuAccessPass_Event_0+0x30  ;; 0xa7d
   \   0000016E   5A43               MULS     R2,R3,R2
   \   00000170   364B               LDR      R3,??MenuAccessPass_Event_0+0x34  ;; Speech
   \   00000172   9A18               ADDS     R2,R3,R2
   \   00000174   1318               ADDS     R3,R2,R0
   \   00000176   0A00               MOVS     R2,R1
   \   00000178   0220               MOVS     R0,#+2
   \   0000017A   ........           BL       Message_Paint
   \   0000017E   02B0               ADD      SP,SP,#+8
   \   00000180   19E0               B        ??MenuAccessPass_Event_11
   2406                        } 
   2407                        else
   2408                        {
   2409                           //informacja o b³ednym hale
   2410                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??MenuAccessPass_Event_21:
   \   00000182   0100               MOVS     R1,R0
   \   00000184   0200               MOVS     R2,R0
   \   00000186   01E0               B        ??MenuAccessPass_Event_25
   \                     ??MenuAccessPass_Event_26:
   \   00000188   6A54               STRB     R2,[R5, R1]
   \   0000018A   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_25:
   \   0000018C   0829               CMP      R1,#+8
   \   0000018E   FBDB               BLT      ??MenuAccessPass_Event_26
   2411                           InsertPass1[8]=0;
   \   00000190   2872               STRB     R0,[R5, #+8]
   \   00000192   2C48               LDR      R0,??MenuAccessPass_Event_0+0x2C  ;; g_leng
   \   00000194   0068               LDR      R0,[R0, #+0]
   \   00000196   2C49               LDR      R1,??MenuAccessPass_Event_0+0x30  ;; 0xa7d
   \   00000198   4843               MULS     R0,R1,R0
   \   0000019A   2C49               LDR      R1,??MenuAccessPass_Event_0+0x34  ;; Speech
   \   0000019C   0A18               ADDS     R2,R1,R0
   \   0000019E   28A1               ADR      R1,??MenuAccessPass_Event_0+0x28  ;; 0x00, 0x00, 0x00, 0x00
   \   000001A0   0800               MOVS     R0,R1
   \   000001A2   03B4               PUSH     {R0,R1}
   \   000001A4   FF20               MOVS     R0,#+255
   \   000001A6   B430               ADDS     R0,R0,#+180      ;; #+435
   \   000001A8   1318               ADDS     R3,R2,R0
   \   000001AA   0F38               SUBS     R0,R0,#+15
   \   000001AC   1218               ADDS     R2,R2,R0
   \   000001AE   0220               MOVS     R0,#+2
   2412                        
   2413                           Message_Paint(2,"",Speech[g_leng].Bledne,Speech[g_leng].haslo,"","");
   \   000001B0   ........           BL       Message_Paint
   \   000001B4   02B0               ADD      SP,SP,#+8
   2414                        }
   2415                        //MenuPaint();
   2416                      }
   2417                     
   2418                     
   2419                      
   2420                      //MenuPaint();
   2421                      //Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   2422            
   2423                      if ((ans>=1) && (ans<=11)) 
   \                     ??MenuAccessPass_Event_11:
   \   000001B6   012C               CMP      R4,#+1
   \   000001B8   2BDB               BLT      ??MenuAccessPass_Event_27
   \   000001BA   0C2C               CMP      R4,#+12
   \   000001BC   29DA               BGE      ??MenuAccessPass_Event_27
   2424                      {
   2425                        MenuPaint();
   \                     ??MenuAccessPass_Event_28:
   \   000001BE   ........           BL       MenuPaint
   2426                        Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001C2   194D               LDR      R5,??MenuAccessPass_Event_0+0x10  ;; InsertPass1
   \   000001C4   82B0               SUB      SP,SP,#+8
   \   000001C6   0020               MOVS     R0,#+0
   \   000001C8   0090               STR      R0,[SP, #+0]
   \   000001CA   7F21               MOVS     R1,#+127
   \   000001CC   03B4               PUSH     {R0,R1}
   \   000001CE   3721               MOVS     R1,#+55
   \   000001D0   287A               LDRB     R0,[R5, #+8]
   \   000001D2   03B4               PUSH     {R0,R1}
   \   000001D4   5A23               MOVS     R3,#+90
   \   000001D6   0422               MOVS     R2,#+4
   \   000001D8   0221               MOVS     R1,#+2
   \   000001DA   0C35               ADDS     R5,R5,#+12
   \   000001DC   2800               MOVS     R0,R5
   \   000001DE   ........           BL       Label
   \   000001E2   06B0               ADD      SP,SP,#+24
   \   000001E4   15E0               B        ??MenuAccessPass_Event_27
   2427                      }
   2428                      
   2429                    }  
   2430                    else if (ans==0) 
   \                     ??MenuAccessPass_Event_1:
   \   000001E6   002C               CMP      R4,#+0
   \   000001E8   E9D0               BEQ      ??MenuAccessPass_Event_28
   2431                      {
   2432                        MenuPaint();
   2433                        Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   2434                      }
   2435                  
   2436                   else if (ans<0)
   \   000001EA   12D5               BPL      ??MenuAccessPass_Event_27
   2437                    {
   2438                        MenuLevel=(MenuLevel/100);
   \   000001EC   184C               LDR      R4,??MenuAccessPass_Event_0+0x38  ;; TextToChangeLength
   \   000001EE   206D               LDR      R0,[R4, #+80]
   \   000001F0   6421               MOVS     R1,#+100
   \   000001F2   ........           BL       __aeabi_idivmod
   \   000001F6   2065               STR      R0,[R4, #+80]
   2439                        MenuPaint();
   \   000001F8   ........           BL       MenuPaint
   2440                        for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \   000001FC   0020               MOVS     R0,#+0
   \   000001FE   0100               MOVS     R1,R0
   \   00000200   094A               LDR      R2,??MenuAccessPass_Event_0+0x10  ;; InsertPass1
   \   00000202   0300               MOVS     R3,R0
   \   00000204   01E0               B        ??MenuAccessPass_Event_29
   \                     ??MenuAccessPass_Event_30:
   \   00000206   5354               STRB     R3,[R2, R1]
   \   00000208   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_29:
   \   0000020A   0829               CMP      R1,#+8
   \   0000020C   FBDB               BLT      ??MenuAccessPass_Event_30
   2441                        InsertPass1[8]=0;
   \   0000020E   1149               LDR      R1,??MenuAccessPass_Event_0+0x3C  ;; InsertPass1 + 8
   \   00000210   0870               STRB     R0,[R1, #+0]
   2442                    }
   2443                 
   2444                }//_______________________________________________________________________
   \                     ??MenuAccessPass_Event_27:
   \   00000212   FEBC               POP      {R1-R7}
   \   00000214   01BC               POP      {R0}
   \   00000216   0047               BX       R0               ;; return
   \                     ??MenuAccessPass_Event_0:
   \   00000218   ........           DC32     Y_down
   \   0000021C   ........           DC32     X_down
   \   00000220   ........           DC32     Y_up
   \   00000224   ........           DC32     X_up
   \   00000228   ........           DC32     InsertPass1
   \   0000022C   ........           DC32     g_Password_1
   \   00000230   ........           DC32     g_Password_2
   \   00000234   ........           DC32     `?<Constant "060480">`
   \   00000238   ........           DC32     TextToChangeLength + 80
   \   0000023C   ........           DC32     g_level
   \   00000240   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000244   ........           DC32     g_leng
   \   00000248   7D0A0000           DC32     0xa7d
   \   0000024C   ........           DC32     Speech
   \   00000250   ........           DC32     TextToChangeLength
   \   00000254   ........           DC32     InsertPass1 + 8
   2445          
   2446          
   2447                
   2448                
   2449          //Odrysuj procedurê **************************************************************************************************************
   2450          //*  x,y          - wspó³¿êdna lewego dolnego rogu boksu procedury
   2451          

   \                                 In section Debug.txt, align 4, keep-with-next
   2452                void PaintProc(char x, char y, _Procedure *Proc)
   2453                {   
   \                     PaintProc:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0F00               MOVS     R7,R1
   2454                    char PixPlab;
   2455                    char txt[7]={0,0,0,0,0,0,0};
   \   00000006   F34D               LDR      R5,??PaintProc_1  ;; `?<Constant {0, 0, 0, 0, 0, 0, 0}>`
   \   00000008   6846               MOV      R0,SP
   \   0000000A   06CD               LDM      R5!,{R1,R2}
   \   0000000C   06C0               STM      R0!,{R1,R2}
   \   0000000E   083D               SUBS     R5,R5,#+8
   2456                    char ind;
   2457                    switch (Proc->Type)
   \   00000010   0298               LDR      R0,[SP, #+8]
   \   00000012   0078               LDRB     R0,[R0, #+0]
   \   00000014   801E               SUBS     R0,R0,#+2
   \   00000016   3D28               CMP      R0,#+61
   \   00000018   01D9               BLS      .+6
   \   0000001A   00F056FF           BL       ??PaintProc_2
   \   0000001E   02A1               ADR      R1,??PaintProc_0
   \   00000020   4000               LSLS     R0,R0,#+1
   \   00000022   095A               LDRH     R1,[R1, R0]
   \   00000024   8F44               ADD      PC,PC,R1
   \   00000026   C046               Nop      
   \                     ??PaintProc_0:
   \   00000028   A400C4000801       DC16     +164,+196,+264,+332
   \              4C01        
   \   00000030   9001D4012202       DC16     +400,+468,+546,+124
   \              7C00        
   \   00000038   70029602BC02       DC16     +624,+662,+700,+3746
   \              A20E        
   \   00000040   A20EA20EA20E       DC16     +3746,+3746,+3746,+3746
   \              A20E        
   \   00000048   A20EA20ED803       DC16     +3746,+3746,+984,+1178
   \              9A04        
   \   00000050   7005BC063206       DC16     +1392,+1724,+1586,+3746
   \              A20E        
   \   00000058   A20EA20EA20E       DC16     +3746,+3746,+3746,+3746
   \              A20E        
   \   00000060   A20EA20E1A07       DC16     +3746,+3746,+1818,+2008
   \              D807        
   \   00000068   6808BC086609       DC16     +2152,+2236,+2406,+2608
   \              300A        
   \   00000070   C40A1209A20E       DC16     +2756,+2322,+3746,+3746
   \              A20E        
   \   00000078   A20EA20EA20E       DC16     +3746,+3746,+3746,+2888
   \              480B        
   \   00000080   D60B620CA20E       DC16     +3030,+3170,+3746,+3746
   \              A20E        
   \   00000088   A20EA20EA20E       DC16     +3746,+3746,+3746,+3746
   \              A20E        
   \   00000090   A20EC20C780D       DC16     +3746,+3266,+3448,+3596
   \              0C0E        
   \   00000098   E4020C033403       DC16     +740,+780,+820,+860
   \              5C03        
   \   000000A0   8403B003           DC16     +900,+944
   2458                    {
   2459                      
   2460                    case ProcNOT:
   2461                        CopyToCanvasPoint((char*)ProcNot_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_3:
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   0820               MOVS     R0,#+8
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   1323               MOVS     R3,#+19
   \   000000AC   FF1C               ADDS     R7,R7,#+3
   \   000000AE   3A00               MOVS     R2,R7
   \   000000B0   1206               LSLS     R2,R2,#+24
   \   000000B2   120E               LSRS     R2,R2,#+24
   \   000000B4   641C               ADDS     R4,R4,#+1
   \   000000B6   2100               MOVS     R1,R4
   \   000000B8   0906               LSLS     R1,R1,#+24
   \   000000BA   090E               LSRS     R1,R1,#+24
   \   000000BC   A920               MOVS     R0,#+169
   \   000000BE   8000               LSLS     R0,R0,#+2        ;; #+676
   \   000000C0   2818               ADDS     R0,R5,R0
   \   000000C2   ........           BL       CopyToCanvasPoint
   \   000000C6   02B0               ADD      SP,SP,#+8
   \   000000C8   00F0FFFE           BL       ??PaintProc_2
   2462                    break;  
   2463                    
   2464                    case ProcConect:
   2465                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_4:
   \   000000CC   0123               MOVS     R3,#+1
   \   000000CE   1522               MOVS     R2,#+21
   \   000000D0   3900               MOVS     R1,R7
   \   000000D2   891D               ADDS     R1,R1,#+6
   \   000000D4   2000               MOVS     R0,R4
   \   000000D6   ........           BL       H_line
   2466                        H_line(x,y+7,21,1); 
   \   000000DA   0123               MOVS     R3,#+1
   \   000000DC   1522               MOVS     R2,#+21
   \   000000DE   FF1D               ADDS     R7,R7,#+7
   \   000000E0   3900               MOVS     R1,R7
   \   000000E2   2000               MOVS     R0,R4
   \   000000E4   ........           BL       H_line
   \   000000E8   00F0EFFE           BL       ??PaintProc_2
   2467                    break;  
   2468                      
   2469                    case ProcDown:
   2470                        H_line(x,y+6,11,1); 
   \                     ??PaintProc_5:
   \   000000EC   0123               MOVS     R3,#+1
   \   000000EE   0B22               MOVS     R2,#+11
   \   000000F0   3900               MOVS     R1,R7
   \   000000F2   891D               ADDS     R1,R1,#+6
   \   000000F4   2000               MOVS     R0,R4
   \   000000F6   ........           BL       H_line
   2471                        H_line(x,y+7,11,1);
   \   000000FA   0123               MOVS     R3,#+1
   \   000000FC   0B22               MOVS     R2,#+11
   \   000000FE   3900               MOVS     R1,R7
   \   00000100   C91D               ADDS     R1,R1,#+7
   \   00000102   2000               MOVS     R0,R4
   \   00000104   ........           BL       H_line
   2472                        V_line(x+9,y,6,1);
   \   00000108   0123               MOVS     R3,#+1
   \   0000010A   0622               MOVS     R2,#+6
   \   0000010C   3900               MOVS     R1,R7
   \   0000010E   2000               MOVS     R0,R4
   \   00000110   0930               ADDS     R0,R0,#+9
   \   00000112   0006               LSLS     R0,R0,#+24
   \   00000114   000E               LSRS     R0,R0,#+24
   \   00000116   ........           BL       V_line
   2473                        V_line(x+10,y,6,1); 
   \   0000011A   0123               MOVS     R3,#+1
   \   0000011C   0622               MOVS     R2,#+6
   \   0000011E   3900               MOVS     R1,R7
   \   00000120   0A34               ADDS     R4,R4,#+10
   \   00000122   2000               MOVS     R0,R4
   \   00000124   0006               LSLS     R0,R0,#+24
   \   00000126   000E               LSRS     R0,R0,#+24
   \   00000128   ........           BL       V_line
   \   0000012C   00F0CDFE           BL       ??PaintProc_2
   2474                    break;  
   2475                    
   2476                    case ProcDownRight:
   2477                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_6:
   \   00000130   0123               MOVS     R3,#+1
   \   00000132   1522               MOVS     R2,#+21
   \   00000134   3900               MOVS     R1,R7
   \   00000136   891D               ADDS     R1,R1,#+6
   \   00000138   2000               MOVS     R0,R4
   \   0000013A   ........           BL       H_line
   2478                        H_line(x,y+7,21,1);
   \   0000013E   0123               MOVS     R3,#+1
   \   00000140   1522               MOVS     R2,#+21
   \   00000142   3900               MOVS     R1,R7
   \   00000144   C91D               ADDS     R1,R1,#+7
   \   00000146   2000               MOVS     R0,R4
   \   00000148   ........           BL       H_line
   2479                        V_line(x+9,y,6,1);
   \   0000014C   0123               MOVS     R3,#+1
   \   0000014E   0622               MOVS     R2,#+6
   \   00000150   3900               MOVS     R1,R7
   \   00000152   2000               MOVS     R0,R4
   \   00000154   0930               ADDS     R0,R0,#+9
   \   00000156   0006               LSLS     R0,R0,#+24
   \   00000158   000E               LSRS     R0,R0,#+24
   \   0000015A   ........           BL       V_line
   2480                        V_line(x+10,y,6,1); 
   \   0000015E   0123               MOVS     R3,#+1
   \   00000160   0622               MOVS     R2,#+6
   \   00000162   3900               MOVS     R1,R7
   \   00000164   0A34               ADDS     R4,R4,#+10
   \   00000166   2000               MOVS     R0,R4
   \   00000168   0006               LSLS     R0,R0,#+24
   \   0000016A   000E               LSRS     R0,R0,#+24
   \   0000016C   ........           BL       V_line
   \   00000170   00F0ABFE           BL       ??PaintProc_2
   2481                    break;  
   2482          
   2483                    case ProcSumLogDown:
   2484                        H_line(x,y+6,9,1); 
   \                     ??PaintProc_7:
   \   00000174   0123               MOVS     R3,#+1
   \   00000176   0922               MOVS     R2,#+9
   \   00000178   3900               MOVS     R1,R7
   \   0000017A   891D               ADDS     R1,R1,#+6
   \   0000017C   2000               MOVS     R0,R4
   \   0000017E   ........           BL       H_line
   2485                        H_line(x,y+7,9,1);
   \   00000182   0123               MOVS     R3,#+1
   \   00000184   0922               MOVS     R2,#+9
   \   00000186   3900               MOVS     R1,R7
   \   00000188   C91D               ADDS     R1,R1,#+7
   \   0000018A   2000               MOVS     R0,R4
   \   0000018C   ........           BL       H_line
   2486                        V_line(x+9,y,21,1);
   \   00000190   0123               MOVS     R3,#+1
   \   00000192   1522               MOVS     R2,#+21
   \   00000194   3900               MOVS     R1,R7
   \   00000196   2000               MOVS     R0,R4
   \   00000198   0930               ADDS     R0,R0,#+9
   \   0000019A   0006               LSLS     R0,R0,#+24
   \   0000019C   000E               LSRS     R0,R0,#+24
   \   0000019E   ........           BL       V_line
   2487                        V_line(x+10,y,21,1); 
   \   000001A2   0123               MOVS     R3,#+1
   \   000001A4   1522               MOVS     R2,#+21
   \   000001A6   3900               MOVS     R1,R7
   \   000001A8   0A34               ADDS     R4,R4,#+10
   \   000001AA   2000               MOVS     R0,R4
   \   000001AC   0006               LSLS     R0,R0,#+24
   \   000001AE   000E               LSRS     R0,R0,#+24
   \   000001B0   ........           BL       V_line
   \   000001B4   00F089FE           BL       ??PaintProc_2
   2488                    break;  
   2489                    
   2490                    case ProcSumLogRight:
   2491                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_8:
   \   000001B8   0123               MOVS     R3,#+1
   \   000001BA   1522               MOVS     R2,#+21
   \   000001BC   3900               MOVS     R1,R7
   \   000001BE   891D               ADDS     R1,R1,#+6
   \   000001C0   2000               MOVS     R0,R4
   \   000001C2   ........           BL       H_line
   2492                        H_line(x,y+7,21,1);
   \   000001C6   FF1D               ADDS     R7,R7,#+7
   \   000001C8   0123               MOVS     R3,#+1
   \   000001CA   1522               MOVS     R2,#+21
   \   000001CC   3900               MOVS     R1,R7
   \   000001CE   2000               MOVS     R0,R4
   \   000001D0   ........           BL       H_line
   2493                        V_line(x+9,y+7,14,1);
   \   000001D4   0123               MOVS     R3,#+1
   \   000001D6   0E22               MOVS     R2,#+14
   \   000001D8   3900               MOVS     R1,R7
   \   000001DA   2000               MOVS     R0,R4
   \   000001DC   0930               ADDS     R0,R0,#+9
   \   000001DE   0006               LSLS     R0,R0,#+24
   \   000001E0   000E               LSRS     R0,R0,#+24
   \   000001E2   ........           BL       V_line
   2494                        V_line(x+10,y+7,14,1); 
   \   000001E6   0123               MOVS     R3,#+1
   \   000001E8   0E22               MOVS     R2,#+14
   \   000001EA   3900               MOVS     R1,R7
   \   000001EC   0A34               ADDS     R4,R4,#+10
   \   000001EE   2000               MOVS     R0,R4
   \   000001F0   0006               LSLS     R0,R0,#+24
   \   000001F2   000E               LSRS     R0,R0,#+24
   \   000001F4   ........           BL       V_line
   \   000001F8   00F067FE           BL       ??PaintProc_2
   2495                    break;  
   2496                    
   2497                    case ProcUpToRight:
   2498                        H_line(x+9 ,y+6,12,1); 
   \                     ??PaintProc_9:
   \   000001FC   2500               MOVS     R5,R4
   \   000001FE   0935               ADDS     R5,R5,#+9
   \   00000200   0123               MOVS     R3,#+1
   \   00000202   0C22               MOVS     R2,#+12
   \   00000204   3900               MOVS     R1,R7
   \   00000206   891D               ADDS     R1,R1,#+6
   \   00000208   2800               MOVS     R0,R5
   \   0000020A   0006               LSLS     R0,R0,#+24
   \   0000020C   000E               LSRS     R0,R0,#+24
   \   0000020E   ........           BL       H_line
   2499                        H_line(x+9,y+7,12,1);
   \   00000212   FF1D               ADDS     R7,R7,#+7
   \   00000214   0123               MOVS     R3,#+1
   \   00000216   0C22               MOVS     R2,#+12
   \   00000218   3900               MOVS     R1,R7
   \   0000021A   2800               MOVS     R0,R5
   \   0000021C   0006               LSLS     R0,R0,#+24
   \   0000021E   000E               LSRS     R0,R0,#+24
   \   00000220   ........           BL       H_line
   2500                        V_line(x+9,y+7,15,1);
   \   00000224   0123               MOVS     R3,#+1
   \   00000226   0F22               MOVS     R2,#+15
   \   00000228   3900               MOVS     R1,R7
   \   0000022A   2800               MOVS     R0,R5
   \   0000022C   0006               LSLS     R0,R0,#+24
   \   0000022E   000E               LSRS     R0,R0,#+24
   \   00000230   ........           BL       V_line
   2501                        V_line(x+10,y+7,15,1); 
   \   00000234   0123               MOVS     R3,#+1
   \   00000236   0F22               MOVS     R2,#+15
   \   00000238   3900               MOVS     R1,R7
   \   0000023A   0A34               ADDS     R4,R4,#+10
   \   0000023C   2000               MOVS     R0,R4
   \   0000023E   0006               LSLS     R0,R0,#+24
   \   00000240   000E               LSRS     R0,R0,#+24
   \   00000242   ........           BL       V_line
   \   00000246   00F040FE           BL       ??PaintProc_2
   2502                    break;  
   2503          
   2504                    
   2505                    case ProcUpToRightDown:
   2506                        H_line(x+9 ,y+6,12,1); 
   \                     ??PaintProc_10:
   \   0000024A   2500               MOVS     R5,R4
   \   0000024C   0935               ADDS     R5,R5,#+9
   \   0000024E   0123               MOVS     R3,#+1
   \   00000250   0C22               MOVS     R2,#+12
   \   00000252   3900               MOVS     R1,R7
   \   00000254   891D               ADDS     R1,R1,#+6
   \   00000256   2800               MOVS     R0,R5
   \   00000258   0006               LSLS     R0,R0,#+24
   \   0000025A   000E               LSRS     R0,R0,#+24
   \   0000025C   ........           BL       H_line
   2507                        H_line(x+9,y+7,12,1);
   \   00000260   0123               MOVS     R3,#+1
   \   00000262   0C22               MOVS     R2,#+12
   \   00000264   3900               MOVS     R1,R7
   \   00000266   C91D               ADDS     R1,R1,#+7
   \   00000268   2800               MOVS     R0,R5
   \   0000026A   0006               LSLS     R0,R0,#+24
   \   0000026C   000E               LSRS     R0,R0,#+24
   \   0000026E   ........           BL       H_line
   2508                        V_line(x+9,y,21,1);
   \   00000272   0123               MOVS     R3,#+1
   \   00000274   1522               MOVS     R2,#+21
   \   00000276   3900               MOVS     R1,R7
   \   00000278   2800               MOVS     R0,R5
   \   0000027A   0006               LSLS     R0,R0,#+24
   \   0000027C   000E               LSRS     R0,R0,#+24
   \   0000027E   ........           BL       V_line
   2509                        V_line(x+10,y,21,1); 
   \   00000282   0123               MOVS     R3,#+1
   \   00000284   1522               MOVS     R2,#+21
   \   00000286   3900               MOVS     R1,R7
   \   00000288   0A34               ADDS     R4,R4,#+10
   \   0000028A   2000               MOVS     R0,R4
   \   0000028C   0006               LSLS     R0,R0,#+24
   \   0000028E   000E               LSRS     R0,R0,#+24
   \   00000290   ........           BL       V_line
   \   00000294   00F019FE           BL       ??PaintProc_2
   2510                    break;  
   2511                    
   2512                    
   2513                    case ProcToggleRS:
   2514                        CopyToCanvasPoint((char*)ProcToggleRS_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_11:
   \   00000298   82B0               SUB      SP,SP,#+8
   \   0000029A   1320               MOVS     R0,#+19
   \   0000029C   0090               STR      R0,[SP, #+0]
   \   0000029E   0300               MOVS     R3,R0
   \   000002A0   BF1C               ADDS     R7,R7,#+2
   \   000002A2   3A00               MOVS     R2,R7
   \   000002A4   1206               LSLS     R2,R2,#+24
   \   000002A6   120E               LSRS     R2,R2,#+24
   \   000002A8   641C               ADDS     R4,R4,#+1
   \   000002AA   2100               MOVS     R1,R4
   \   000002AC   0906               LSLS     R1,R1,#+24
   \   000002AE   090E               LSRS     R1,R1,#+24
   \   000002B0   A035               ADDS     R5,R5,#+160
   \   000002B2   2800               MOVS     R0,R5
   \   000002B4   ........           BL       CopyToCanvasPoint
   \   000002B8   02B0               ADD      SP,SP,#+8
   \   000002BA   00F006FE           BL       ??PaintProc_2
   2515                    break;   
   2516          
   2517                    case ProcToggleT:
   2518                        CopyToCanvasPoint((char*)ProcToggleT_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_12:
   \   000002BE   82B0               SUB      SP,SP,#+8
   \   000002C0   1320               MOVS     R0,#+19
   \   000002C2   0090               STR      R0,[SP, #+0]
   \   000002C4   0300               MOVS     R3,R0
   \   000002C6   BF1C               ADDS     R7,R7,#+2
   \   000002C8   3A00               MOVS     R2,R7
   \   000002CA   1206               LSLS     R2,R2,#+24
   \   000002CC   120E               LSRS     R2,R2,#+24
   \   000002CE   641C               ADDS     R4,R4,#+1
   \   000002D0   2100               MOVS     R1,R4
   \   000002D2   0906               LSLS     R1,R1,#+24
   \   000002D4   090E               LSRS     R1,R1,#+24
   \   000002D6   DC35               ADDS     R5,R5,#+220
   \   000002D8   2800               MOVS     R0,R5
   \   000002DA   ........           BL       CopyToCanvasPoint
   \   000002DE   02B0               ADD      SP,SP,#+8
   \   000002E0   00F0F3FD           BL       ??PaintProc_2
   2519                    break;             
   2520                    
   2521                    case ProcTLI1:
   2522                        CopyToCanvasPoint((char*)ProcTLI1_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_13:
   \   000002E4   82B0               SUB      SP,SP,#+8
   \   000002E6   1320               MOVS     R0,#+19
   \   000002E8   0090               STR      R0,[SP, #+0]
   \   000002EA   0300               MOVS     R3,R0
   \   000002EC   BF1C               ADDS     R7,R7,#+2
   \   000002EE   3A00               MOVS     R2,R7
   \   000002F0   1206               LSLS     R2,R2,#+24
   \   000002F2   120E               LSRS     R2,R2,#+24
   \   000002F4   641C               ADDS     R4,R4,#+1
   \   000002F6   2100               MOVS     R1,R4
   \   000002F8   0906               LSLS     R1,R1,#+24
   \   000002FA   090E               LSRS     R1,R1,#+24
   \   000002FC   8C20               MOVS     R0,#+140
   \   000002FE   4000               LSLS     R0,R0,#+1        ;; #+280
   \   00000300   2818               ADDS     R0,R5,R0
   \   00000302   ........           BL       CopyToCanvasPoint
   \   00000306   02B0               ADD      SP,SP,#+8
   \   00000308   00F0DFFD           BL       ??PaintProc_2
   2523                    break;      
   2524          
   2525                    case ProcLim:
   2526                        CopyToCanvasPoint((char*)ProcLim_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_14:
   \   0000030C   82B0               SUB      SP,SP,#+8
   \   0000030E   1220               MOVS     R0,#+18
   \   00000310   0090               STR      R0,[SP, #+0]
   \   00000312   1323               MOVS     R3,#+19
   \   00000314   FF1C               ADDS     R7,R7,#+3
   \   00000316   3A00               MOVS     R2,R7
   \   00000318   1206               LSLS     R2,R2,#+24
   \   0000031A   120E               LSRS     R2,R2,#+24
   \   0000031C   641C               ADDS     R4,R4,#+1
   \   0000031E   2100               MOVS     R1,R4
   \   00000320   0906               LSLS     R1,R1,#+24
   \   00000322   090E               LSRS     R1,R1,#+24
   \   00000324   AA20               MOVS     R0,#+170
   \   00000326   4000               LSLS     R0,R0,#+1        ;; #+340
   \   00000328   2818               ADDS     R0,R5,R0
   \   0000032A   ........           BL       CopyToCanvasPoint
   \   0000032E   02B0               ADD      SP,SP,#+8
   \   00000330   00F0CBFD           BL       ??PaintProc_2
   2527                    break;  
   2528                    
   2529                    
   2530                    case ProcEven:
   2531                        CopyToCanvasPoint((char*)ProcEven_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_15:
   \   00000334   82B0               SUB      SP,SP,#+8
   \   00000336   1220               MOVS     R0,#+18
   \   00000338   0090               STR      R0,[SP, #+0]
   \   0000033A   1323               MOVS     R3,#+19
   \   0000033C   FF1C               ADDS     R7,R7,#+3
   \   0000033E   3A00               MOVS     R2,R7
   \   00000340   1206               LSLS     R2,R2,#+24
   \   00000342   120E               LSRS     R2,R2,#+24
   \   00000344   641C               ADDS     R4,R4,#+1
   \   00000346   2100               MOVS     R1,R4
   \   00000348   0906               LSLS     R1,R1,#+24
   \   0000034A   090E               LSRS     R1,R1,#+24
   \   0000034C   C620               MOVS     R0,#+198
   \   0000034E   4000               LSLS     R0,R0,#+1        ;; #+396
   \   00000350   2818               ADDS     R0,R5,R0
   \   00000352   ........           BL       CopyToCanvasPoint
   \   00000356   02B0               ADD      SP,SP,#+8
   \   00000358   00F0B7FD           BL       ??PaintProc_2
   2532                    break;  
   2533                    
   2534          
   2535                    case ProcPlus:
   2536                        CopyToCanvasPoint((char*)ProcPlus_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_16:
   \   0000035C   82B0               SUB      SP,SP,#+8
   \   0000035E   1220               MOVS     R0,#+18
   \   00000360   0090               STR      R0,[SP, #+0]
   \   00000362   1323               MOVS     R3,#+19
   \   00000364   FF1C               ADDS     R7,R7,#+3
   \   00000366   3A00               MOVS     R2,R7
   \   00000368   1206               LSLS     R2,R2,#+24
   \   0000036A   120E               LSRS     R2,R2,#+24
   \   0000036C   641C               ADDS     R4,R4,#+1
   \   0000036E   2100               MOVS     R1,R4
   \   00000370   0906               LSLS     R1,R1,#+24
   \   00000372   090E               LSRS     R1,R1,#+24
   \   00000374   E220               MOVS     R0,#+226
   \   00000376   4000               LSLS     R0,R0,#+1        ;; #+452
   \   00000378   2818               ADDS     R0,R5,R0
   \   0000037A   ........           BL       CopyToCanvasPoint
   \   0000037E   02B0               ADD      SP,SP,#+8
   \   00000380   00F0A3FD           BL       ??PaintProc_2
   2537                    break;  
   2538                    
   2539                    case ProcMinus:
   2540                        CopyToCanvasPoint((char*)ProcMinus_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_17:
   \   00000384   82B0               SUB      SP,SP,#+8
   \   00000386   1220               MOVS     R0,#+18
   \   00000388   0090               STR      R0,[SP, #+0]
   \   0000038A   1323               MOVS     R3,#+19
   \   0000038C   FF1C               ADDS     R7,R7,#+3
   \   0000038E   3A00               MOVS     R2,R7
   \   00000390   1206               LSLS     R2,R2,#+24
   \   00000392   120E               LSRS     R2,R2,#+24
   \   00000394   641C               ADDS     R4,R4,#+1
   \   00000396   2100               MOVS     R1,R4
   \   00000398   0906               LSLS     R1,R1,#+24
   \   0000039A   090E               LSRS     R1,R1,#+24
   \   0000039C   FE20               MOVS     R0,#+254
   \   0000039E   4000               LSLS     R0,R0,#+1        ;; #+508
   \   000003A0   2818               ADDS     R0,R5,R0
   \   000003A2   ........           BL       CopyToCanvasPoint
   \   000003A6   02B0               ADD      SP,SP,#+8
   \   000003A8   00F08FFD           BL       ??PaintProc_2
   2541                    break;  
   2542          
   2543                    case ProcMul:
   2544                        CopyToCanvasPoint((char*)ProcMul_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_18:
   \   000003AC   82B0               SUB      SP,SP,#+8
   \   000003AE   1220               MOVS     R0,#+18
   \   000003B0   0090               STR      R0,[SP, #+0]
   \   000003B2   1323               MOVS     R3,#+19
   \   000003B4   FF1C               ADDS     R7,R7,#+3
   \   000003B6   3A00               MOVS     R2,R7
   \   000003B8   1206               LSLS     R2,R2,#+24
   \   000003BA   120E               LSRS     R2,R2,#+24
   \   000003BC   641C               ADDS     R4,R4,#+1
   \   000003BE   2100               MOVS     R1,R4
   \   000003C0   0906               LSLS     R1,R1,#+24
   \   000003C2   090E               LSRS     R1,R1,#+24
   \   000003C4   8D20               MOVS     R0,#+141
   \   000003C6   8000               LSLS     R0,R0,#+2        ;; #+564
   \   000003C8   2818               ADDS     R0,R5,R0
   \   000003CA   ........           BL       CopyToCanvasPoint
   \   000003CE   02B0               ADD      SP,SP,#+8
   \   000003D0   00F07BFD           BL       ??PaintProc_2
   \                     ??PaintProc_1:
   \   000003D4   ........           DC32     `?<Constant {0, 0, 0, 0, 0, 0, 0}>`
   2545                    break;  
   2546          
   2547                    case ProcDiv:
   2548                        CopyToCanvasPoint((char*)ProcDiv_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_19:
   \   000003D8   82B0               SUB      SP,SP,#+8
   \   000003DA   1220               MOVS     R0,#+18
   \   000003DC   0090               STR      R0,[SP, #+0]
   \   000003DE   1323               MOVS     R3,#+19
   \   000003E0   FF1C               ADDS     R7,R7,#+3
   \   000003E2   3A00               MOVS     R2,R7
   \   000003E4   1206               LSLS     R2,R2,#+24
   \   000003E6   120E               LSRS     R2,R2,#+24
   \   000003E8   641C               ADDS     R4,R4,#+1
   \   000003EA   2100               MOVS     R1,R4
   \   000003EC   0906               LSLS     R1,R1,#+24
   \   000003EE   090E               LSRS     R1,R1,#+24
   \   000003F0   9B20               MOVS     R0,#+155
   \   000003F2   8000               LSLS     R0,R0,#+2        ;; #+620
   \   000003F4   2818               ADDS     R0,R5,R0
   \   000003F6   ........           BL       CopyToCanvasPoint
   \   000003FA   02B0               ADD      SP,SP,#+8
   \   000003FC   00F065FD           BL       ??PaintProc_2
   2549                    break;  
   2550          
   2551                    
   2552                    case ProcStI:
   2553                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_20:
   \   00000400   82B0               SUB      SP,SP,#+8
   \   00000402   0820               MOVS     R0,#+8
   \   00000404   0090               STR      R0,[SP, #+0]
   \   00000406   1323               MOVS     R3,#+19
   \   00000408   3A00               MOVS     R2,R7
   \   0000040A   D21C               ADDS     R2,R2,#+3
   \   0000040C   1206               LSLS     R2,R2,#+24
   \   0000040E   120E               LSRS     R2,R2,#+24
   \   00000410   2100               MOVS     R1,R4
   \   00000412   491C               ADDS     R1,R1,#+1
   \   00000414   0906               LSLS     R1,R1,#+24
   \   00000416   090E               LSRS     R1,R1,#+24
   \   00000418   0835               ADDS     R5,R5,#+8
   \   0000041A   2800               MOVS     R0,R5
   \   0000041C   ........           BL       CopyToCanvasPoint
   \   00000420   02B0               ADD      SP,SP,#+8
   2554                        
   2555                        if (Proc->Nr>=0)
   \   00000422   0120               MOVS     R0,#+1
   \   00000424   0299               LDR      R1,[SP, #+8]
   \   00000426   0856               LDRSB    R0,[R1, R0]
   \   00000428   0028               CMP      R0,#+0
   \   0000042A   14D4               BMI      ??PaintProc_21
   2556                        {
   2557                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000042C   0222               MOVS     R2,#+2
   \   0000042E   6946               MOV      R1,SP
   \   00000430   0120               MOVS     R0,#+1
   \   00000432   029B               LDR      R3,[SP, #+8]
   \   00000434   1856               LDRSB    R0,[R3, R0]
   \   00000436   0006               LSLS     R0,R0,#+24
   \   00000438   000E               LSRS     R0,R0,#+24
   \   0000043A   ........           BL       CharToStr
   \   0000043E   0600               MOVS     R6,R0
   2558                          txt[ind]='.';
   \   00000440   6D46               MOV      R5,SP
   \   00000442   A919               ADDS     R1,R5,R6
   \   00000444   2E20               MOVS     R0,#+46
   \   00000446   0870               STRB     R0,[R1, #+0]
   2559                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000448   0222               MOVS     R2,#+2
   \   0000044A   491C               ADDS     R1,R1,#+1
   \   0000044C   0298               LDR      R0,[SP, #+8]
   \   0000044E   007A               LDRB     R0,[R0, #+8]
   \   00000450   ........           BL       CharToStr
   \   00000454   09E0               B        ??PaintProc_22
   2560                        }else{
   2561                          txt[0]='b';
   \                     ??PaintProc_21:
   \   00000456   6D46               MOV      R5,SP
   \   00000458   6220               MOVS     R0,#+98
   \   0000045A   2870               STRB     R0,[R5, #+0]
   2562                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   0000045C   0222               MOVS     R2,#+2
   \   0000045E   6D1C               ADDS     R5,R5,#+1
   \   00000460   2900               MOVS     R1,R5
   \   00000462   0298               LDR      R0,[SP, #+8]
   \   00000464   007A               LDRB     R0,[R0, #+8]
   \   00000466   ........           BL       CharToStr
   2563                        }     
   2564                        
   2565                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_22:
   \   0000046A   82B0               SUB      SP,SP,#+8
   \   0000046C   0020               MOVS     R0,#+0
   \   0000046E   0090               STR      R0,[SP, #+0]
   \   00000470   7821               MOVS     R1,#+120
   \   00000472   03B4               PUSH     {R0,R1}
   \   00000474   0C21               MOVS     R1,#+12
   \   00000476   0520               MOVS     R0,#+5
   \   00000478   03B4               PUSH     {R0,R1}
   \   0000047A   3B00               MOVS     R3,R7
   \   0000047C   0B33               ADDS     R3,R3,#+11
   \   0000047E   2200               MOVS     R2,R4
   \   00000480   121D               ADDS     R2,R2,#+4
   \   00000482   1206               LSLS     R2,R2,#+24
   \   00000484   120E               LSRS     R2,R2,#+24
   \   00000486   0221               MOVS     R1,#+2
   \   00000488   06A8               ADD      R0,SP,#+24
   \   0000048A   ........           BL       Label
   \   0000048E   06B0               ADD      SP,SP,#+24
   2566                        txt[0]='I'; txt[1]=0;
   \   00000490   6D46               MOV      R5,SP
   \   00000492   4920               MOVS     R0,#+73
   \   00000494   2870               STRB     R0,[R5, #+0]
   \   00000496   0020               MOVS     R0,#+0
   \   00000498   6870               STRB     R0,[R5, #+1]
   2567                        Label(txt,2,x+6,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000049A   82B0               SUB      SP,SP,#+8
   \   0000049C   0090               STR      R0,[SP, #+0]
   \   0000049E   7821               MOVS     R1,#+120
   \   000004A0   03B4               PUSH     {R0,R1}
   \   000004A2   0621               MOVS     R1,#+6
   \   000004A4   0120               MOVS     R0,#+1
   \   000004A6   03B4               PUSH     {R0,R1}
   \   000004A8   BF1C               ADDS     R7,R7,#+2
   \   000004AA   3B00               MOVS     R3,R7
   \   000004AC   A41D               ADDS     R4,R4,#+6
   \   000004AE   2200               MOVS     R2,R4
   \   000004B0   1206               LSLS     R2,R2,#+24
   \   000004B2   120E               LSRS     R2,R2,#+24
   \   000004B4   0221               MOVS     R1,#+2
   \   000004B6   06A8               ADD      R0,SP,#+24
   \   000004B8   ........           BL       Label
   \   000004BC   06B0               ADD      SP,SP,#+24
   \   000004BE   00F004FD           BL       ??PaintProc_2
   2568                    break;
   2569          
   2570                    case ProcStNI:
   2571                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_23:
   \   000004C2   82B0               SUB      SP,SP,#+8
   \   000004C4   0820               MOVS     R0,#+8
   \   000004C6   0090               STR      R0,[SP, #+0]
   \   000004C8   1323               MOVS     R3,#+19
   \   000004CA   3A00               MOVS     R2,R7
   \   000004CC   D21C               ADDS     R2,R2,#+3
   \   000004CE   1206               LSLS     R2,R2,#+24
   \   000004D0   120E               LSRS     R2,R2,#+24
   \   000004D2   2100               MOVS     R1,R4
   \   000004D4   491C               ADDS     R1,R1,#+1
   \   000004D6   0906               LSLS     R1,R1,#+24
   \   000004D8   090E               LSRS     R1,R1,#+24
   \   000004DA   0835               ADDS     R5,R5,#+8
   \   000004DC   2800               MOVS     R0,R5
   \   000004DE   ........           BL       CopyToCanvasPoint
   \   000004E2   02B0               ADD      SP,SP,#+8
   2572                        H_line(x+7,y+11,6,1);
   \   000004E4   0123               MOVS     R3,#+1
   \   000004E6   0622               MOVS     R2,#+6
   \   000004E8   3900               MOVS     R1,R7
   \   000004EA   0B31               ADDS     R1,R1,#+11
   \   000004EC   2000               MOVS     R0,R4
   \   000004EE   C01D               ADDS     R0,R0,#+7
   \   000004F0   0006               LSLS     R0,R0,#+24
   \   000004F2   000E               LSRS     R0,R0,#+24
   \   000004F4   ........           BL       H_line
   2573                        
   2574                        if (Proc->Nr>=0)
   \   000004F8   0120               MOVS     R0,#+1
   \   000004FA   0299               LDR      R1,[SP, #+8]
   \   000004FC   0856               LDRSB    R0,[R1, R0]
   \   000004FE   0028               CMP      R0,#+0
   \   00000500   14D4               BMI      ??PaintProc_24
   2575                        {
   2576                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000502   0222               MOVS     R2,#+2
   \   00000504   6946               MOV      R1,SP
   \   00000506   0120               MOVS     R0,#+1
   \   00000508   029B               LDR      R3,[SP, #+8]
   \   0000050A   1856               LDRSB    R0,[R3, R0]
   \   0000050C   0006               LSLS     R0,R0,#+24
   \   0000050E   000E               LSRS     R0,R0,#+24
   \   00000510   ........           BL       CharToStr
   \   00000514   0600               MOVS     R6,R0
   2577                          txt[ind]='.';
   \   00000516   6D46               MOV      R5,SP
   \   00000518   A919               ADDS     R1,R5,R6
   \   0000051A   2E20               MOVS     R0,#+46
   \   0000051C   0870               STRB     R0,[R1, #+0]
   2578                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   0000051E   0222               MOVS     R2,#+2
   \   00000520   491C               ADDS     R1,R1,#+1
   \   00000522   0298               LDR      R0,[SP, #+8]
   \   00000524   007A               LDRB     R0,[R0, #+8]
   \   00000526   ........           BL       CharToStr
   \   0000052A   09E0               B        ??PaintProc_25
   2579                        }else{
   2580                          txt[0]='b';
   \                     ??PaintProc_24:
   \   0000052C   6D46               MOV      R5,SP
   \   0000052E   6220               MOVS     R0,#+98
   \   00000530   2870               STRB     R0,[R5, #+0]
   2581                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000532   0222               MOVS     R2,#+2
   \   00000534   6D1C               ADDS     R5,R5,#+1
   \   00000536   2900               MOVS     R1,R5
   \   00000538   0298               LDR      R0,[SP, #+8]
   \   0000053A   007A               LDRB     R0,[R0, #+8]
   \   0000053C   ........           BL       CharToStr
   2582                        }   
   2583                        Label(txt,2,x+4,y+12,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_25:
   \   00000540   82B0               SUB      SP,SP,#+8
   \   00000542   0020               MOVS     R0,#+0
   \   00000544   0090               STR      R0,[SP, #+0]
   \   00000546   7821               MOVS     R1,#+120
   \   00000548   03B4               PUSH     {R0,R1}
   \   0000054A   0C21               MOVS     R1,#+12
   \   0000054C   0520               MOVS     R0,#+5
   \   0000054E   03B4               PUSH     {R0,R1}
   \   00000550   3B00               MOVS     R3,R7
   \   00000552   0C33               ADDS     R3,R3,#+12
   \   00000554   2200               MOVS     R2,R4
   \   00000556   121D               ADDS     R2,R2,#+4
   \   00000558   1206               LSLS     R2,R2,#+24
   \   0000055A   120E               LSRS     R2,R2,#+24
   \   0000055C   0221               MOVS     R1,#+2
   \   0000055E   06A8               ADD      R0,SP,#+24
   \   00000560   ........           BL       Label
   \   00000564   06B0               ADD      SP,SP,#+24
   2584                        txt[0]='I'; txt[1]=0;
   \   00000566   6D46               MOV      R5,SP
   \   00000568   4920               MOVS     R0,#+73
   \   0000056A   2870               STRB     R0,[R5, #+0]
   \   0000056C   0020               MOVS     R0,#+0
   \   0000056E   6870               STRB     R0,[R5, #+1]
   2585                        Label(txt,2,x+6,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000570   82B0               SUB      SP,SP,#+8
   \   00000572   0090               STR      R0,[SP, #+0]
   \   00000574   7821               MOVS     R1,#+120
   \   00000576   03B4               PUSH     {R0,R1}
   \   00000578   0621               MOVS     R1,#+6
   \   0000057A   0120               MOVS     R0,#+1
   \   0000057C   03B4               PUSH     {R0,R1}
   \   0000057E   BF1C               ADDS     R7,R7,#+2
   \   00000580   3B00               MOVS     R3,R7
   \   00000582   A41D               ADDS     R4,R4,#+6
   \   00000584   2200               MOVS     R2,R4
   \   00000586   1206               LSLS     R2,R2,#+24
   \   00000588   120E               LSRS     R2,R2,#+24
   \   0000058A   0221               MOVS     R1,#+2
   \   0000058C   06A8               ADD      R0,SP,#+24
   \   0000058E   ........           BL       Label
   \   00000592   06B0               ADD      SP,SP,#+24
   \   00000594   00F099FC           BL       ??PaintProc_2
   2586                    break;
   2587                    
   2588                    
   2589                    case ProcStQ:
   2590                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_26:
   \   00000598   82B0               SUB      SP,SP,#+8
   \   0000059A   0820               MOVS     R0,#+8
   \   0000059C   0090               STR      R0,[SP, #+0]
   \   0000059E   1323               MOVS     R3,#+19
   \   000005A0   3A00               MOVS     R2,R7
   \   000005A2   D21C               ADDS     R2,R2,#+3
   \   000005A4   1206               LSLS     R2,R2,#+24
   \   000005A6   120E               LSRS     R2,R2,#+24
   \   000005A8   2100               MOVS     R1,R4
   \   000005AA   491C               ADDS     R1,R1,#+1
   \   000005AC   0906               LSLS     R1,R1,#+24
   \   000005AE   090E               LSRS     R1,R1,#+24
   \   000005B0   0835               ADDS     R5,R5,#+8
   \   000005B2   2800               MOVS     R0,R5
   \   000005B4   ........           BL       CopyToCanvasPoint
   \   000005B8   02B0               ADD      SP,SP,#+8
   2591                        if (Proc->Nr>=0)
   \   000005BA   0120               MOVS     R0,#+1
   \   000005BC   0299               LDR      R1,[SP, #+8]
   \   000005BE   0856               LDRSB    R0,[R1, R0]
   \   000005C0   0028               CMP      R0,#+0
   \   000005C2   14D4               BMI      ??PaintProc_27
   2592                        {
   2593                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000005C4   0222               MOVS     R2,#+2
   \   000005C6   6946               MOV      R1,SP
   \   000005C8   0120               MOVS     R0,#+1
   \   000005CA   029B               LDR      R3,[SP, #+8]
   \   000005CC   1856               LDRSB    R0,[R3, R0]
   \   000005CE   0006               LSLS     R0,R0,#+24
   \   000005D0   000E               LSRS     R0,R0,#+24
   \   000005D2   ........           BL       CharToStr
   \   000005D6   0600               MOVS     R6,R0
   2594                          txt[ind]='.';
   \   000005D8   6D46               MOV      R5,SP
   \   000005DA   A919               ADDS     R1,R5,R6
   \   000005DC   2E20               MOVS     R0,#+46
   \   000005DE   0870               STRB     R0,[R1, #+0]
   2595                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   000005E0   0222               MOVS     R2,#+2
   \   000005E2   491C               ADDS     R1,R1,#+1
   \   000005E4   0298               LDR      R0,[SP, #+8]
   \   000005E6   007A               LDRB     R0,[R0, #+8]
   \   000005E8   ........           BL       CharToStr
   \   000005EC   09E0               B        ??PaintProc_28
   2596                        }else{
   2597                          txt[0]='b';
   \                     ??PaintProc_27:
   \   000005EE   6D46               MOV      R5,SP
   \   000005F0   6220               MOVS     R0,#+98
   \   000005F2   2870               STRB     R0,[R5, #+0]
   2598                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   000005F4   0222               MOVS     R2,#+2
   \   000005F6   6D1C               ADDS     R5,R5,#+1
   \   000005F8   2900               MOVS     R1,R5
   \   000005FA   0298               LDR      R0,[SP, #+8]
   \   000005FC   007A               LDRB     R0,[R0, #+8]
   \   000005FE   ........           BL       CharToStr
   2599                        } 
   2600                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_28:
   \   00000602   82B0               SUB      SP,SP,#+8
   \   00000604   0020               MOVS     R0,#+0
   \   00000606   0090               STR      R0,[SP, #+0]
   \   00000608   7821               MOVS     R1,#+120
   \   0000060A   03B4               PUSH     {R0,R1}
   \   0000060C   0C21               MOVS     R1,#+12
   \   0000060E   0520               MOVS     R0,#+5
   \   00000610   03B4               PUSH     {R0,R1}
   \   00000612   3B00               MOVS     R3,R7
   \   00000614   0B33               ADDS     R3,R3,#+11
   \   00000616   2200               MOVS     R2,R4
   \   00000618   121D               ADDS     R2,R2,#+4
   \   0000061A   1206               LSLS     R2,R2,#+24
   \   0000061C   120E               LSRS     R2,R2,#+24
   \   0000061E   0221               MOVS     R1,#+2
   \   00000620   06A8               ADD      R0,SP,#+24
   \   00000622   ........           BL       Label
   \   00000626   06B0               ADD      SP,SP,#+24
   2601                        txt[0]='Q'; txt[1]=0;
   \   00000628   6D46               MOV      R5,SP
   \   0000062A   5120               MOVS     R0,#+81
   \   0000062C   2870               STRB     R0,[R5, #+0]
   \   0000062E   0020               MOVS     R0,#+0
   \   00000630   6870               STRB     R0,[R5, #+1]
   2602                        Label(txt,2,x+7,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000632   82B0               SUB      SP,SP,#+8
   \   00000634   0090               STR      R0,[SP, #+0]
   \   00000636   7821               MOVS     R1,#+120
   \   00000638   03B4               PUSH     {R0,R1}
   \   0000063A   0621               MOVS     R1,#+6
   \   0000063C   0120               MOVS     R0,#+1
   \   0000063E   03B4               PUSH     {R0,R1}
   \   00000640   BF1C               ADDS     R7,R7,#+2
   \   00000642   3B00               MOVS     R3,R7
   \   00000644   E41D               ADDS     R4,R4,#+7
   \   00000646   2200               MOVS     R2,R4
   \   00000648   1206               LSLS     R2,R2,#+24
   \   0000064A   120E               LSRS     R2,R2,#+24
   \   0000064C   0221               MOVS     R1,#+2
   \   0000064E   06A8               ADD      R0,SP,#+24
   \   00000650   ........           BL       Label
   \   00000654   06B0               ADD      SP,SP,#+24
   \   00000656   00F038FC           BL       ??PaintProc_2
   2603                    break;
   2604          
   2605                    case ProcStS:
   2606                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_29:
   \   0000065A   82B0               SUB      SP,SP,#+8
   \   0000065C   0820               MOVS     R0,#+8
   \   0000065E   0090               STR      R0,[SP, #+0]
   \   00000660   1323               MOVS     R3,#+19
   \   00000662   3A00               MOVS     R2,R7
   \   00000664   D21C               ADDS     R2,R2,#+3
   \   00000666   1206               LSLS     R2,R2,#+24
   \   00000668   120E               LSRS     R2,R2,#+24
   \   0000066A   2100               MOVS     R1,R4
   \   0000066C   491C               ADDS     R1,R1,#+1
   \   0000066E   0906               LSLS     R1,R1,#+24
   \   00000670   090E               LSRS     R1,R1,#+24
   \   00000672   0835               ADDS     R5,R5,#+8
   \   00000674   2800               MOVS     R0,R5
   \   00000676   ........           BL       CopyToCanvasPoint
   \   0000067A   02B0               ADD      SP,SP,#+8
   2607                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000067C   0222               MOVS     R2,#+2
   \   0000067E   6946               MOV      R1,SP
   \   00000680   0120               MOVS     R0,#+1
   \   00000682   029B               LDR      R3,[SP, #+8]
   \   00000684   1856               LDRSB    R0,[R3, R0]
   \   00000686   0006               LSLS     R0,R0,#+24
   \   00000688   000E               LSRS     R0,R0,#+24
   \   0000068A   ........           BL       CharToStr
   2608          
   2609                        Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000068E   82B0               SUB      SP,SP,#+8
   \   00000690   0020               MOVS     R0,#+0
   \   00000692   0090               STR      R0,[SP, #+0]
   \   00000694   7821               MOVS     R1,#+120
   \   00000696   03B4               PUSH     {R0,R1}
   \   00000698   0C21               MOVS     R1,#+12
   \   0000069A   0220               MOVS     R0,#+2
   \   0000069C   03B4               PUSH     {R0,R1}
   \   0000069E   3B00               MOVS     R3,R7
   \   000006A0   0B33               ADDS     R3,R3,#+11
   \   000006A2   2200               MOVS     R2,R4
   \   000006A4   121D               ADDS     R2,R2,#+4
   \   000006A6   1206               LSLS     R2,R2,#+24
   \   000006A8   120E               LSRS     R2,R2,#+24
   \   000006AA   0100               MOVS     R1,R0
   \   000006AC   06A8               ADD      R0,SP,#+24
   \   000006AE   ........           BL       Label
   \   000006B2   06B0               ADD      SP,SP,#+24
   2610                        txt[0]='S'; txt[1]=0;
   \   000006B4   6D46               MOV      R5,SP
   \   000006B6   5320               MOVS     R0,#+83
   \   000006B8   2870               STRB     R0,[R5, #+0]
   \   000006BA   0020               MOVS     R0,#+0
   \   000006BC   6870               STRB     R0,[R5, #+1]
   2611                        Label(txt,2,x+7,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000006BE   82B0               SUB      SP,SP,#+8
   \   000006C0   0090               STR      R0,[SP, #+0]
   \   000006C2   7821               MOVS     R1,#+120
   \   000006C4   03B4               PUSH     {R0,R1}
   \   000006C6   0621               MOVS     R1,#+6
   \   000006C8   0120               MOVS     R0,#+1
   \   000006CA   03B4               PUSH     {R0,R1}
   \   000006CC   BF1C               ADDS     R7,R7,#+2
   \   000006CE   3B00               MOVS     R3,R7
   \   000006D0   E41D               ADDS     R4,R4,#+7
   \   000006D2   2200               MOVS     R2,R4
   \   000006D4   1206               LSLS     R2,R2,#+24
   \   000006D6   120E               LSRS     R2,R2,#+24
   \   000006D8   0221               MOVS     R1,#+2
   \   000006DA   06A8               ADD      R0,SP,#+24
   \   000006DC   ........           BL       Label
   \   000006E0   06B0               ADD      SP,SP,#+24
   \   000006E2   F2E3               B        ??PaintProc_2
   2612                    break;      
   2613                    
   2614                    
   2615                    case ProcStB:
   2616                        CopyToCanvasPoint((char*)ProcSt_Button, x+1, y+6, 19,6);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_30:
   \   000006E4   82B0               SUB      SP,SP,#+8
   \   000006E6   0620               MOVS     R0,#+6
   \   000006E8   0090               STR      R0,[SP, #+0]
   \   000006EA   1323               MOVS     R3,#+19
   \   000006EC   3A00               MOVS     R2,R7
   \   000006EE   921D               ADDS     R2,R2,#+6
   \   000006F0   1206               LSLS     R2,R2,#+24
   \   000006F2   120E               LSRS     R2,R2,#+24
   \   000006F4   2100               MOVS     R1,R4
   \   000006F6   491C               ADDS     R1,R1,#+1
   \   000006F8   0906               LSLS     R1,R1,#+24
   \   000006FA   090E               LSRS     R1,R1,#+24
   \   000006FC   C920               MOVS     R0,#+201
   \   000006FE   8000               LSLS     R0,R0,#+2        ;; #+804
   \   00000700   2818               ADDS     R0,R5,R0
   \   00000702   ........           BL       CopyToCanvasPoint
   \   00000706   02B0               ADD      SP,SP,#+8
   2617                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000708   0222               MOVS     R2,#+2
   \   0000070A   6946               MOV      R1,SP
   \   0000070C   0120               MOVS     R0,#+1
   \   0000070E   029B               LDR      R3,[SP, #+8]
   \   00000710   1856               LDRSB    R0,[R3, R0]
   \   00000712   0006               LSLS     R0,R0,#+24
   \   00000714   000E               LSRS     R0,R0,#+24
   \   00000716   ........           BL       CharToStr
   2618          
   2619                        Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000071A   82B0               SUB      SP,SP,#+8
   \   0000071C   0020               MOVS     R0,#+0
   \   0000071E   0090               STR      R0,[SP, #+0]
   \   00000720   7821               MOVS     R1,#+120
   \   00000722   03B4               PUSH     {R0,R1}
   \   00000724   0C21               MOVS     R1,#+12
   \   00000726   0220               MOVS     R0,#+2
   \   00000728   03B4               PUSH     {R0,R1}
   \   0000072A   0B37               ADDS     R7,R7,#+11
   \   0000072C   3B00               MOVS     R3,R7
   \   0000072E   241D               ADDS     R4,R4,#+4
   \   00000730   2200               MOVS     R2,R4
   \   00000732   1206               LSLS     R2,R2,#+24
   \   00000734   120E               LSRS     R2,R2,#+24
   \   00000736   0100               MOVS     R1,R0
   \   00000738   06A8               ADD      R0,SP,#+24
   \   0000073A   ........           BL       Label
   \   0000073E   06B0               ADD      SP,SP,#+24
   \   00000740   C3E3               B        ??PaintProc_2
   2620                    break;   
   2621                    
   2622                    
   2623          
   2624                    
   2625                    case ProcWOUT:
   2626                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_31:
   \   00000742   82B0               SUB      SP,SP,#+8
   \   00000744   0920               MOVS     R0,#+9
   \   00000746   0090               STR      R0,[SP, #+0]
   \   00000748   1323               MOVS     R3,#+19
   \   0000074A   3A00               MOVS     R2,R7
   \   0000074C   D21C               ADDS     R2,R2,#+3
   \   0000074E   1206               LSLS     R2,R2,#+24
   \   00000750   120E               LSRS     R2,R2,#+24
   \   00000752   2100               MOVS     R1,R4
   \   00000754   491C               ADDS     R1,R1,#+1
   \   00000756   0906               LSLS     R1,R1,#+24
   \   00000758   090E               LSRS     R1,R1,#+24
   \   0000075A   E048               LDR      R0,??PaintProc_32  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   0000075C   ........           BL       CopyToCanvasPoint
   \   00000760   02B0               ADD      SP,SP,#+8
   2627                        if (Proc->Nr>=0)
   \   00000762   0120               MOVS     R0,#+1
   \   00000764   0299               LDR      R1,[SP, #+8]
   \   00000766   0856               LDRSB    R0,[R1, R0]
   \   00000768   0028               CMP      R0,#+0
   \   0000076A   14D4               BMI      ??PaintProc_33
   2628                        {
   2629                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000076C   0222               MOVS     R2,#+2
   \   0000076E   6946               MOV      R1,SP
   \   00000770   0120               MOVS     R0,#+1
   \   00000772   029B               LDR      R3,[SP, #+8]
   \   00000774   1856               LDRSB    R0,[R3, R0]
   \   00000776   0006               LSLS     R0,R0,#+24
   \   00000778   000E               LSRS     R0,R0,#+24
   \   0000077A   ........           BL       CharToStr
   \   0000077E   0600               MOVS     R6,R0
   2630                          txt[ind]='.';
   \   00000780   6D46               MOV      R5,SP
   \   00000782   A919               ADDS     R1,R5,R6
   \   00000784   2E20               MOVS     R0,#+46
   \   00000786   0870               STRB     R0,[R1, #+0]
   2631                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000788   0222               MOVS     R2,#+2
   \   0000078A   491C               ADDS     R1,R1,#+1
   \   0000078C   0298               LDR      R0,[SP, #+8]
   \   0000078E   007A               LDRB     R0,[R0, #+8]
   \   00000790   ........           BL       CharToStr
   \   00000794   09E0               B        ??PaintProc_34
   2632                        }else{
   2633                          txt[0]='b';
   \                     ??PaintProc_33:
   \   00000796   6D46               MOV      R5,SP
   \   00000798   6220               MOVS     R0,#+98
   \   0000079A   2870               STRB     R0,[R5, #+0]
   2634                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   0000079C   0222               MOVS     R2,#+2
   \   0000079E   6D1C               ADDS     R5,R5,#+1
   \   000007A0   2900               MOVS     R1,R5
   \   000007A2   0298               LDR      R0,[SP, #+8]
   \   000007A4   007A               LDRB     R0,[R0, #+8]
   \   000007A6   ........           BL       CharToStr
   2635                        } 
   2636                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_34:
   \   000007AA   82B0               SUB      SP,SP,#+8
   \   000007AC   0020               MOVS     R0,#+0
   \   000007AE   0090               STR      R0,[SP, #+0]
   \   000007B0   7821               MOVS     R1,#+120
   \   000007B2   03B4               PUSH     {R0,R1}
   \   000007B4   0C21               MOVS     R1,#+12
   \   000007B6   0520               MOVS     R0,#+5
   \   000007B8   03B4               PUSH     {R0,R1}
   \   000007BA   3B00               MOVS     R3,R7
   \   000007BC   0B33               ADDS     R3,R3,#+11
   \   000007BE   2200               MOVS     R2,R4
   \   000007C0   121D               ADDS     R2,R2,#+4
   \   000007C2   1206               LSLS     R2,R2,#+24
   \   000007C4   120E               LSRS     R2,R2,#+24
   \   000007C6   0221               MOVS     R1,#+2
   \   000007C8   06A8               ADD      R0,SP,#+24
   \   000007CA   ........           BL       Label
   \   000007CE   06B0               ADD      SP,SP,#+24
   2637                        txt[0]='Q'; txt[1]=0;
   \   000007D0   6D46               MOV      R5,SP
   \   000007D2   5120               MOVS     R0,#+81
   \   000007D4   2870               STRB     R0,[R5, #+0]
   \   000007D6   0020               MOVS     R0,#+0
   \   000007D8   6870               STRB     R0,[R5, #+1]
   2638                        Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000007DA   82B0               SUB      SP,SP,#+8
   \   000007DC   0090               STR      R0,[SP, #+0]
   \   000007DE   7821               MOVS     R1,#+120
   \   000007E0   03B4               PUSH     {R0,R1}
   \   000007E2   0621               MOVS     R1,#+6
   \   000007E4   0120               MOVS     R0,#+1
   \   000007E6   03B4               PUSH     {R0,R1}
   \   000007E8   BF1C               ADDS     R7,R7,#+2
   \   000007EA   3B00               MOVS     R3,R7
   \   000007EC   0834               ADDS     R4,R4,#+8
   \   000007EE   2200               MOVS     R2,R4
   \   000007F0   1206               LSLS     R2,R2,#+24
   \   000007F2   120E               LSRS     R2,R2,#+24
   \   000007F4   0221               MOVS     R1,#+2
   \   000007F6   06A8               ADD      R0,SP,#+24
   \   000007F8   ........           BL       Label
   \   000007FC   06B0               ADD      SP,SP,#+24
   \   000007FE   64E3               B        ??PaintProc_2
   2639                    break;
   2640                    
   2641                    
   2642                    
   2643                    case ProcWOUTS:
   2644                        CopyToCanvasPoint((char*)ProcWOUTS_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_35:
   \   00000800   82B0               SUB      SP,SP,#+8
   \   00000802   0920               MOVS     R0,#+9
   \   00000804   0090               STR      R0,[SP, #+0]
   \   00000806   1323               MOVS     R3,#+19
   \   00000808   3A00               MOVS     R2,R7
   \   0000080A   D21C               ADDS     R2,R2,#+3
   \   0000080C   1206               LSLS     R2,R2,#+24
   \   0000080E   120E               LSRS     R2,R2,#+24
   \   00000810   2100               MOVS     R1,R4
   \   00000812   491C               ADDS     R1,R1,#+1
   \   00000814   0906               LSLS     R1,R1,#+24
   \   00000816   090E               LSRS     R1,R1,#+24
   \   00000818   B148               LDR      R0,??PaintProc_32+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 168
   \   0000081A   ........           BL       CopyToCanvasPoint
   \   0000081E   02B0               ADD      SP,SP,#+8
   2645                        if (Proc->Nr>=0)
   \   00000820   0120               MOVS     R0,#+1
   \   00000822   0299               LDR      R1,[SP, #+8]
   \   00000824   0856               LDRSB    R0,[R1, R0]
   \   00000826   0028               CMP      R0,#+0
   \   00000828   14D4               BMI      ??PaintProc_36
   2646                        {
   2647                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000082A   0222               MOVS     R2,#+2
   \   0000082C   6946               MOV      R1,SP
   \   0000082E   0120               MOVS     R0,#+1
   \   00000830   029B               LDR      R3,[SP, #+8]
   \   00000832   1856               LDRSB    R0,[R3, R0]
   \   00000834   0006               LSLS     R0,R0,#+24
   \   00000836   000E               LSRS     R0,R0,#+24
   \   00000838   ........           BL       CharToStr
   \   0000083C   0600               MOVS     R6,R0
   2648                          txt[ind]='.';
   \   0000083E   6D46               MOV      R5,SP
   \   00000840   A919               ADDS     R1,R5,R6
   \   00000842   2E20               MOVS     R0,#+46
   \   00000844   0870               STRB     R0,[R1, #+0]
   2649                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000846   0222               MOVS     R2,#+2
   \   00000848   491C               ADDS     R1,R1,#+1
   \   0000084A   0298               LDR      R0,[SP, #+8]
   \   0000084C   007A               LDRB     R0,[R0, #+8]
   \   0000084E   ........           BL       CharToStr
   \   00000852   09E0               B        ??PaintProc_37
   2650                        }else{
   2651                          txt[0]='b';
   \                     ??PaintProc_36:
   \   00000854   6D46               MOV      R5,SP
   \   00000856   6220               MOVS     R0,#+98
   \   00000858   2870               STRB     R0,[R5, #+0]
   2652                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   0000085A   0222               MOVS     R2,#+2
   \   0000085C   6D1C               ADDS     R5,R5,#+1
   \   0000085E   2900               MOVS     R1,R5
   \   00000860   0298               LDR      R0,[SP, #+8]
   \   00000862   007A               LDRB     R0,[R0, #+8]
   \   00000864   ........           BL       CharToStr
   2653                        } 
   2654                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_37:
   \   00000868   82B0               SUB      SP,SP,#+8
   \   0000086A   0020               MOVS     R0,#+0
   \   0000086C   0090               STR      R0,[SP, #+0]
   \   0000086E   7821               MOVS     R1,#+120
   \   00000870   03B4               PUSH     {R0,R1}
   \   00000872   0C21               MOVS     R1,#+12
   \   00000874   0520               MOVS     R0,#+5
   \   00000876   03B4               PUSH     {R0,R1}
   \   00000878   0B37               ADDS     R7,R7,#+11
   \   0000087A   3B00               MOVS     R3,R7
   \   0000087C   241D               ADDS     R4,R4,#+4
   \   0000087E   2200               MOVS     R2,R4
   \   00000880   1206               LSLS     R2,R2,#+24
   \   00000882   120E               LSRS     R2,R2,#+24
   \   00000884   0221               MOVS     R1,#+2
   \   00000886   06A8               ADD      R0,SP,#+24
   \   00000888   ........           BL       Label
   \   0000088C   06B0               ADD      SP,SP,#+24
   \   0000088E   1CE3               B        ??PaintProc_2
   2655                        //txt[0]='Q'; txt[1]=0;
   2656                        //Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2657                    break;
   2658                    
   2659                    case ProcWOUTR:
   2660                        CopyToCanvasPoint((char*)ProcWOUTR_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_38:
   \   00000890   82B0               SUB      SP,SP,#+8
   \   00000892   0920               MOVS     R0,#+9
   \   00000894   0090               STR      R0,[SP, #+0]
   \   00000896   1323               MOVS     R3,#+19
   \   00000898   3A00               MOVS     R2,R7
   \   0000089A   D21C               ADDS     R2,R2,#+3
   \   0000089C   1206               LSLS     R2,R2,#+24
   \   0000089E   120E               LSRS     R2,R2,#+24
   \   000008A0   2100               MOVS     R1,R4
   \   000008A2   491C               ADDS     R1,R1,#+1
   \   000008A4   0906               LSLS     R1,R1,#+24
   \   000008A6   090E               LSRS     R1,R1,#+24
   \   000008A8   8E48               LDR      R0,??PaintProc_32+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 196
   \   000008AA   ........           BL       CopyToCanvasPoint
   \   000008AE   02B0               ADD      SP,SP,#+8
   2661                        if (Proc->Nr>=0)
   \   000008B0   0120               MOVS     R0,#+1
   \   000008B2   0299               LDR      R1,[SP, #+8]
   \   000008B4   0856               LDRSB    R0,[R1, R0]
   \   000008B6   0028               CMP      R0,#+0
   \   000008B8   CCD4               BMI      ??PaintProc_36
   2662                        {
   2663                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000008BA   0222               MOVS     R2,#+2
   \   000008BC   6946               MOV      R1,SP
   \   000008BE   0120               MOVS     R0,#+1
   \   000008C0   029B               LDR      R3,[SP, #+8]
   \   000008C2   1856               LDRSB    R0,[R3, R0]
   \   000008C4   0006               LSLS     R0,R0,#+24
   \   000008C6   000E               LSRS     R0,R0,#+24
   \   000008C8   ........           BL       CharToStr
   \   000008CC   0600               MOVS     R6,R0
   2664                          txt[ind]='.';
   \   000008CE   6D46               MOV      R5,SP
   \   000008D0   A919               ADDS     R1,R5,R6
   \   000008D2   2E20               MOVS     R0,#+46
   \   000008D4   0870               STRB     R0,[R1, #+0]
   2665                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   000008D6   0222               MOVS     R2,#+2
   \   000008D8   491C               ADDS     R1,R1,#+1
   \   000008DA   0298               LDR      R0,[SP, #+8]
   \   000008DC   007A               LDRB     R0,[R0, #+8]
   \   000008DE   ........           BL       CharToStr
   \   000008E2   C1E7               B        ??PaintProc_37
   2666                        }else{
   2667                          txt[0]='b';
   2668                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   2669                        } 
   2670                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2671                    break;  
   2672                    
   2673                    
   2674                    case ProcWOUTC:
   2675                        CopyToCanvasPoint((char*)ProcWOUTC_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_39:
   \   000008E4   82B0               SUB      SP,SP,#+8
   \   000008E6   0920               MOVS     R0,#+9
   \   000008E8   0090               STR      R0,[SP, #+0]
   \   000008EA   1323               MOVS     R3,#+19
   \   000008EC   3A00               MOVS     R2,R7
   \   000008EE   D21C               ADDS     R2,R2,#+3
   \   000008F0   1206               LSLS     R2,R2,#+24
   \   000008F2   120E               LSRS     R2,R2,#+24
   \   000008F4   2100               MOVS     R1,R4
   \   000008F6   491C               ADDS     R1,R1,#+1
   \   000008F8   0906               LSLS     R1,R1,#+24
   \   000008FA   090E               LSRS     R1,R1,#+24
   \   000008FC   2035               ADDS     R5,R5,#+32
   \   000008FE   2800               MOVS     R0,R5
   \   00000900   ........           BL       CopyToCanvasPoint
   \   00000904   02B0               ADD      SP,SP,#+8
   2676                        if (Proc->Nr>=0)
   \   00000906   0120               MOVS     R0,#+1
   \   00000908   0299               LDR      R1,[SP, #+8]
   \   0000090A   0856               LDRSB    R0,[R1, R0]
   \   0000090C   0028               CMP      R0,#+0
   \   0000090E   A1D4               BMI      ??PaintProc_36
   2677                        {
   2678                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000910   0222               MOVS     R2,#+2
   \   00000912   6946               MOV      R1,SP
   \   00000914   0120               MOVS     R0,#+1
   \   00000916   029B               LDR      R3,[SP, #+8]
   \   00000918   1856               LDRSB    R0,[R3, R0]
   \   0000091A   0006               LSLS     R0,R0,#+24
   \   0000091C   000E               LSRS     R0,R0,#+24
   \   0000091E   ........           BL       CharToStr
   \   00000922   0600               MOVS     R6,R0
   2679                          txt[ind]='.';
   \   00000924   6D46               MOV      R5,SP
   \   00000926   A919               ADDS     R1,R5,R6
   \   00000928   2E20               MOVS     R0,#+46
   \   0000092A   0870               STRB     R0,[R1, #+0]
   2680                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   0000092C   0222               MOVS     R2,#+2
   \   0000092E   491C               ADDS     R1,R1,#+1
   \   00000930   0298               LDR      R0,[SP, #+8]
   \   00000932   007A               LDRB     R0,[R0, #+8]
   \   00000934   ........           BL       CharToStr
   \   00000938   96E7               B        ??PaintProc_37
   2681                        }else{
   2682                          txt[0]='b';
   2683                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   2684                        } 
   2685                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2686                    break; 
   2687                    
   2688                    case ProcSPK:
   2689                        CopyToCanvasPoint((char*)ProcSPK_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_40:
   \   0000093A   82B0               SUB      SP,SP,#+8
   \   0000093C   0920               MOVS     R0,#+9
   \   0000093E   0090               STR      R0,[SP, #+0]
   \   00000940   1323               MOVS     R3,#+19
   \   00000942   3A00               MOVS     R2,R7
   \   00000944   D21C               ADDS     R2,R2,#+3
   \   00000946   1206               LSLS     R2,R2,#+24
   \   00000948   120E               LSRS     R2,R2,#+24
   \   0000094A   2100               MOVS     R1,R4
   \   0000094C   491C               ADDS     R1,R1,#+1
   \   0000094E   0906               LSLS     R1,R1,#+24
   \   00000950   090E               LSRS     R1,R1,#+24
   \   00000952   3C35               ADDS     R5,R5,#+60
   \   00000954   2800               MOVS     R0,R5
   \   00000956   ........           BL       CopyToCanvasPoint
   \   0000095A   02B0               ADD      SP,SP,#+8
   2690                        CopyToCanvasPoint((char*)SPK_1[Proc->Tag.SpeakerType], x+3,y+13, 16,5); 
   \   0000095C   82B0               SUB      SP,SP,#+8
   \   0000095E   0520               MOVS     R0,#+5
   \   00000960   0090               STR      R0,[SP, #+0]
   \   00000962   1023               MOVS     R3,#+16
   \   00000964   0D37               ADDS     R7,R7,#+13
   \   00000966   3A00               MOVS     R2,R7
   \   00000968   1206               LSLS     R2,R2,#+24
   \   0000096A   120E               LSRS     R2,R2,#+24
   \   0000096C   E41C               ADDS     R4,R4,#+3
   \   0000096E   2100               MOVS     R1,R4
   \   00000970   0906               LSLS     R1,R1,#+24
   \   00000972   090E               LSRS     R1,R1,#+24
   \   00000974   9C20               MOVS     R0,#+156
   \   00000976   4000               LSLS     R0,R0,#+1        ;; #+312
   \   00000978   049C               LDR      R4,[SP, #+16]
   \   0000097A   247A               LDRB     R4,[R4, #+8]
   \   0000097C   0A25               MOVS     R5,#+10
   \   0000097E   6C43               MULS     R4,R5,R4
   \   00000980   594D               LDR      R5,??PaintProc_32+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000982   2C19               ADDS     R4,R5,R4
   \   00000984   2018               ADDS     R0,R4,R0
   \   00000986   ........           BL       CopyToCanvasPoint
   \   0000098A   02B0               ADD      SP,SP,#+8
   \   0000098C   9DE2               B        ??PaintProc_2
   2691          
   2692                    break;  
   2693          
   2694          
   2695                    
   2696                    
   2697                    case ProcSetScn:
   2698                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_41:
   \   0000098E   82B0               SUB      SP,SP,#+8
   \   00000990   0920               MOVS     R0,#+9
   \   00000992   0090               STR      R0,[SP, #+0]
   \   00000994   1323               MOVS     R3,#+19
   \   00000996   3A00               MOVS     R2,R7
   \   00000998   D21C               ADDS     R2,R2,#+3
   \   0000099A   1206               LSLS     R2,R2,#+24
   \   0000099C   120E               LSRS     R2,R2,#+24
   \   0000099E   2100               MOVS     R1,R4
   \   000009A0   491C               ADDS     R1,R1,#+1
   \   000009A2   0906               LSLS     R1,R1,#+24
   \   000009A4   090E               LSRS     R1,R1,#+24
   \   000009A6   4D48               LDR      R0,??PaintProc_32  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   000009A8   ........           BL       CopyToCanvasPoint
   \   000009AC   02B0               ADD      SP,SP,#+8
   2699                       if (Proc->Nr==0)
   \   000009AE   0120               MOVS     R0,#+1
   \   000009B0   0299               LDR      R1,[SP, #+8]
   \   000009B2   0856               LDRSB    R0,[R1, R0]
   \   000009B4   0028               CMP      R0,#+0
   \   000009B6   1BD1               BNE      ??PaintProc_42
   2700                        {
   2701                          txt[0]='0'; txt[1]='/'; txt[2]='1'; txt[3]=0; //(char Value, char *Vstring, char ill);
   \   000009B8   6D46               MOV      R5,SP
   \   000009BA   3020               MOVS     R0,#+48
   \   000009BC   2870               STRB     R0,[R5, #+0]
   \   000009BE   2F20               MOVS     R0,#+47
   \   000009C0   6870               STRB     R0,[R5, #+1]
   \   000009C2   3120               MOVS     R0,#+49
   \   000009C4   A870               STRB     R0,[R5, #+2]
   \   000009C6   0020               MOVS     R0,#+0
   \   000009C8   E870               STRB     R0,[R5, #+3]
   2702                          Label(txt,2,x+3,y+11,3,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000009CA   82B0               SUB      SP,SP,#+8
   \   000009CC   0090               STR      R0,[SP, #+0]
   \   000009CE   7821               MOVS     R1,#+120
   \   000009D0   03B4               PUSH     {R0,R1}
   \   000009D2   0C21               MOVS     R1,#+12
   \   000009D4   0320               MOVS     R0,#+3
   \   000009D6   03B4               PUSH     {R0,R1}
   \   000009D8   3B00               MOVS     R3,R7
   \   000009DA   0B33               ADDS     R3,R3,#+11
   \   000009DC   2200               MOVS     R2,R4
   \   000009DE   D21C               ADDS     R2,R2,#+3
   \   000009E0   1206               LSLS     R2,R2,#+24
   \   000009E2   120E               LSRS     R2,R2,#+24
   \   000009E4   0221               MOVS     R1,#+2
   \   000009E6   06A8               ADD      R0,SP,#+24
   \   000009E8   ........           BL       Label
   \   000009EC   06B0               ADD      SP,SP,#+24
   \   000009EE   1BE0               B        ??PaintProc_43
   2703                        }else{
   2704                          ind=CharToStr(Proc->Nr, txt, 3); //(char Value, char *Vstring, char ill);
   \                     ??PaintProc_42:
   \   000009F0   0322               MOVS     R2,#+3
   \   000009F2   6946               MOV      R1,SP
   \   000009F4   0120               MOVS     R0,#+1
   \   000009F6   029B               LDR      R3,[SP, #+8]
   \   000009F8   1856               LDRSB    R0,[R3, R0]
   \   000009FA   0006               LSLS     R0,R0,#+24
   \   000009FC   000E               LSRS     R0,R0,#+24
   \   000009FE   ........           BL       CharToStr
   2705                          Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A02   82B0               SUB      SP,SP,#+8
   \   00000A04   0020               MOVS     R0,#+0
   \   00000A06   0090               STR      R0,[SP, #+0]
   \   00000A08   7821               MOVS     R1,#+120
   \   00000A0A   03B4               PUSH     {R0,R1}
   \   00000A0C   0C21               MOVS     R1,#+12
   \   00000A0E   0220               MOVS     R0,#+2
   \   00000A10   03B4               PUSH     {R0,R1}
   \   00000A12   3B00               MOVS     R3,R7
   \   00000A14   0B33               ADDS     R3,R3,#+11
   \   00000A16   2200               MOVS     R2,R4
   \   00000A18   121D               ADDS     R2,R2,#+4
   \   00000A1A   1206               LSLS     R2,R2,#+24
   \   00000A1C   120E               LSRS     R2,R2,#+24
   \   00000A1E   0100               MOVS     R1,R0
   \   00000A20   06A8               ADD      R0,SP,#+24
   \   00000A22   ........           BL       Label
   \   00000A26   06B0               ADD      SP,SP,#+24
   2706                        }
   2707                        
   2708                        txt[0]='S'; txt[1]=0;
   \                     ??PaintProc_43:
   \   00000A28   6D46               MOV      R5,SP
   \   00000A2A   5320               MOVS     R0,#+83
   \   00000A2C   2870               STRB     R0,[R5, #+0]
   \   00000A2E   0020               MOVS     R0,#+0
   \   00000A30   6870               STRB     R0,[R5, #+1]
   2709                        Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A32   82B0               SUB      SP,SP,#+8
   \   00000A34   0090               STR      R0,[SP, #+0]
   \   00000A36   7821               MOVS     R1,#+120
   \   00000A38   03B4               PUSH     {R0,R1}
   \   00000A3A   0621               MOVS     R1,#+6
   \   00000A3C   0120               MOVS     R0,#+1
   \   00000A3E   03B4               PUSH     {R0,R1}
   \   00000A40   BF1C               ADDS     R7,R7,#+2
   \   00000A42   3B00               MOVS     R3,R7
   \   00000A44   0834               ADDS     R4,R4,#+8
   \   00000A46   2200               MOVS     R2,R4
   \   00000A48   1206               LSLS     R2,R2,#+24
   \   00000A4A   120E               LSRS     R2,R2,#+24
   \   00000A4C   0221               MOVS     R1,#+2
   \   00000A4E   06A8               ADD      R0,SP,#+24
   \   00000A50   ........           BL       Label
   \   00000A54   06B0               ADD      SP,SP,#+24
   \   00000A56   38E2               B        ??PaintProc_2
   2710                    break;             
   2711            
   2712                    case ProcInc:
   2713                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_44:
   \   00000A58   82B0               SUB      SP,SP,#+8
   \   00000A5A   0920               MOVS     R0,#+9
   \   00000A5C   0090               STR      R0,[SP, #+0]
   \   00000A5E   1323               MOVS     R3,#+19
   \   00000A60   3A00               MOVS     R2,R7
   \   00000A62   D21C               ADDS     R2,R2,#+3
   \   00000A64   1206               LSLS     R2,R2,#+24
   \   00000A66   120E               LSRS     R2,R2,#+24
   \   00000A68   2100               MOVS     R1,R4
   \   00000A6A   491C               ADDS     R1,R1,#+1
   \   00000A6C   0906               LSLS     R1,R1,#+24
   \   00000A6E   090E               LSRS     R1,R1,#+24
   \   00000A70   1A48               LDR      R0,??PaintProc_32  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   00000A72   ........           BL       CopyToCanvasPoint
   \   00000A76   02B0               ADD      SP,SP,#+8
   2714                        txt[0]='+'; txt[1]=0; txt[2]=0;
   \   00000A78   6D46               MOV      R5,SP
   \   00000A7A   2B20               MOVS     R0,#+43
   \   00000A7C   2870               STRB     R0,[R5, #+0]
   \   00000A7E   0020               MOVS     R0,#+0
   \   00000A80   6870               STRB     R0,[R5, #+1]
   \   00000A82   A870               STRB     R0,[R5, #+2]
   2715                        Label(txt,2,x+7,y+4,1,9,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A84   82B0               SUB      SP,SP,#+8
   \   00000A86   0090               STR      R0,[SP, #+0]
   \   00000A88   7821               MOVS     R1,#+120
   \   00000A8A   03B4               PUSH     {R0,R1}
   \   00000A8C   0921               MOVS     R1,#+9
   \   00000A8E   0120               MOVS     R0,#+1
   \   00000A90   03B4               PUSH     {R0,R1}
   \   00000A92   3B00               MOVS     R3,R7
   \   00000A94   1B1D               ADDS     R3,R3,#+4
   \   00000A96   2200               MOVS     R2,R4
   \   00000A98   D21D               ADDS     R2,R2,#+7
   \   00000A9A   1206               LSLS     R2,R2,#+24
   \   00000A9C   120E               LSRS     R2,R2,#+24
   \   00000A9E   0221               MOVS     R1,#+2
   \   00000AA0   06A8               ADD      R0,SP,#+24
   \   00000AA2   ........           BL       Label
   \   00000AA6   06B0               ADD      SP,SP,#+24
   2716                        txt[0]='S';txt[1]='c';txt[2]='n';
   \   00000AA8   5320               MOVS     R0,#+83
   \   00000AAA   2870               STRB     R0,[R5, #+0]
   \   00000AAC   6320               MOVS     R0,#+99
   \   00000AAE   6870               STRB     R0,[R5, #+1]
   \   00000AB0   6E20               MOVS     R0,#+110
   \   00000AB2   A870               STRB     R0,[R5, #+2]
   2717                        Label(txt,2,x+4,y+11,3,11,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000AB4   82B0               SUB      SP,SP,#+8
   \   00000AB6   0020               MOVS     R0,#+0
   \   00000AB8   0090               STR      R0,[SP, #+0]
   \   00000ABA   7821               MOVS     R1,#+120
   \   00000ABC   03B4               PUSH     {R0,R1}
   \   00000ABE   0B21               MOVS     R1,#+11
   \   00000AC0   0320               MOVS     R0,#+3
   \   00000AC2   03B4               PUSH     {R0,R1}
   \   00000AC4   0B37               ADDS     R7,R7,#+11
   \   00000AC6   3B00               MOVS     R3,R7
   \   00000AC8   241D               ADDS     R4,R4,#+4
   \   00000ACA   2200               MOVS     R2,R4
   \   00000ACC   1206               LSLS     R2,R2,#+24
   \   00000ACE   120E               LSRS     R2,R2,#+24
   \   00000AD0   0221               MOVS     R1,#+2
   \   00000AD2   06A8               ADD      R0,SP,#+24
   \   00000AD4   ........           BL       Label
   \   00000AD8   06B0               ADD      SP,SP,#+24
   \   00000ADA   F6E1               B        ??PaintProc_2
   \                     ??PaintProc_32:
   \   00000ADC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   00000AE0   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 168
   \   00000AE4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 196
   \   00000AE8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   2718                         
   2719                   break;               
   2720            
   2721                    case ProcDec:
   2722                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_45:
   \   00000AEC   82B0               SUB      SP,SP,#+8
   \   00000AEE   0920               MOVS     R0,#+9
   \   00000AF0   0090               STR      R0,[SP, #+0]
   \   00000AF2   1323               MOVS     R3,#+19
   \   00000AF4   3A00               MOVS     R2,R7
   \   00000AF6   D21C               ADDS     R2,R2,#+3
   \   00000AF8   1206               LSLS     R2,R2,#+24
   \   00000AFA   120E               LSRS     R2,R2,#+24
   \   00000AFC   2100               MOVS     R1,R4
   \   00000AFE   491C               ADDS     R1,R1,#+1
   \   00000B00   0906               LSLS     R1,R1,#+24
   \   00000B02   090E               LSRS     R1,R1,#+24
   \   00000B04   E148               LDR      R0,??PaintProc_46  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   00000B06   ........           BL       CopyToCanvasPoint
   \   00000B0A   02B0               ADD      SP,SP,#+8
   2723                      
   2724                        txt[0]='-'; txt[1]='-'; txt[2]=0;
   \   00000B0C   2D20               MOVS     R0,#+45
   \   00000B0E   6D46               MOV      R5,SP
   \   00000B10   2870               STRB     R0,[R5, #+0]
   \   00000B12   6870               STRB     R0,[R5, #+1]
   \   00000B14   0020               MOVS     R0,#+0
   \   00000B16   A870               STRB     R0,[R5, #+2]
   2725                        Label(txt,2,x+7,y+4,2,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000B18   82B0               SUB      SP,SP,#+8
   \   00000B1A   0090               STR      R0,[SP, #+0]
   \   00000B1C   7821               MOVS     R1,#+120
   \   00000B1E   03B4               PUSH     {R0,R1}
   \   00000B20   0621               MOVS     R1,#+6
   \   00000B22   0220               MOVS     R0,#+2
   \   00000B24   03B4               PUSH     {R0,R1}
   \   00000B26   3B00               MOVS     R3,R7
   \   00000B28   1B1D               ADDS     R3,R3,#+4
   \   00000B2A   2200               MOVS     R2,R4
   \   00000B2C   D21D               ADDS     R2,R2,#+7
   \   00000B2E   1206               LSLS     R2,R2,#+24
   \   00000B30   120E               LSRS     R2,R2,#+24
   \   00000B32   0100               MOVS     R1,R0
   \   00000B34   06A8               ADD      R0,SP,#+24
   \   00000B36   ........           BL       Label
   \   00000B3A   06B0               ADD      SP,SP,#+24
   2726                        txt[0]='S';txt[1]='c';txt[2]='n';
   \   00000B3C   5320               MOVS     R0,#+83
   \   00000B3E   2870               STRB     R0,[R5, #+0]
   \   00000B40   6320               MOVS     R0,#+99
   \   00000B42   6870               STRB     R0,[R5, #+1]
   \   00000B44   6E20               MOVS     R0,#+110
   \   00000B46   A870               STRB     R0,[R5, #+2]
   2727                        Label(txt,2,x+4,y+11,3,11,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000B48   82B0               SUB      SP,SP,#+8
   \   00000B4A   0020               MOVS     R0,#+0
   \   00000B4C   0090               STR      R0,[SP, #+0]
   \   00000B4E   7821               MOVS     R1,#+120
   \   00000B50   03B4               PUSH     {R0,R1}
   \   00000B52   0B21               MOVS     R1,#+11
   \   00000B54   0320               MOVS     R0,#+3
   \   00000B56   03B4               PUSH     {R0,R1}
   \   00000B58   0B37               ADDS     R7,R7,#+11
   \   00000B5A   3B00               MOVS     R3,R7
   \   00000B5C   241D               ADDS     R4,R4,#+4
   \   00000B5E   2200               MOVS     R2,R4
   \   00000B60   1206               LSLS     R2,R2,#+24
   \   00000B62   120E               LSRS     R2,R2,#+24
   \   00000B64   0221               MOVS     R1,#+2
   \   00000B66   06A8               ADD      R0,SP,#+24
   \   00000B68   ........           BL       Label
   \   00000B6C   06B0               ADD      SP,SP,#+24
   \   00000B6E   ACE1               B        ??PaintProc_2
   2728                       
   2729                    break;    
   2730                    
   2731                    case ProcTimerSet:
   2732                        
   2733                        CopyToCanvasPoint((char*)ProcTime_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_47:
   \   00000B70   82B0               SUB      SP,SP,#+8
   \   00000B72   0820               MOVS     R0,#+8
   \   00000B74   0090               STR      R0,[SP, #+0]
   \   00000B76   1323               MOVS     R3,#+19
   \   00000B78   3A00               MOVS     R2,R7
   \   00000B7A   D21C               ADDS     R2,R2,#+3
   \   00000B7C   1206               LSLS     R2,R2,#+24
   \   00000B7E   120E               LSRS     R2,R2,#+24
   \   00000B80   2100               MOVS     R1,R4
   \   00000B82   491C               ADDS     R1,R1,#+1
   \   00000B84   0906               LSLS     R1,R1,#+24
   \   00000B86   090E               LSRS     R1,R1,#+24
   \   00000B88   5835               ADDS     R5,R5,#+88
   \   00000B8A   2800               MOVS     R0,R5
   \   00000B8C   ........           BL       CopyToCanvasPoint
   \   00000B90   02B0               ADD      SP,SP,#+8
   2734                      
   2735                        ind=FloToStr(Proc->Tag.SetCounter, txt, 5); //(char Value, char *Vstring, char ill);
   \   00000B92   0522               MOVS     R2,#+5
   \   00000B94   6946               MOV      R1,SP
   \   00000B96   0D00               MOVS     R5,R1
   \   00000B98   1600               MOVS     R6,R2
   \   00000B9A   0298               LDR      R0,[SP, #+8]
   \   00000B9C   8068               LDR      R0,[R0, #+8]
   \   00000B9E   ........           BL       __aeabi_ui2f
   \   00000BA2   3200               MOVS     R2,R6
   \   00000BA4   2900               MOVS     R1,R5
   \   00000BA6   ........           BL       FloToStr
   2736                        PixPlab=Label(txt,0,x+2,y+11,4,17,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000BAA   0B37               ADDS     R7,R7,#+11
   \   00000BAC   82B0               SUB      SP,SP,#+8
   \   00000BAE   0020               MOVS     R0,#+0
   \   00000BB0   0090               STR      R0,[SP, #+0]
   \   00000BB2   7821               MOVS     R1,#+120
   \   00000BB4   03B4               PUSH     {R0,R1}
   \   00000BB6   1121               MOVS     R1,#+17
   \   00000BB8   0420               MOVS     R0,#+4
   \   00000BBA   03B4               PUSH     {R0,R1}
   \   00000BBC   3B00               MOVS     R3,R7
   \   00000BBE   2200               MOVS     R2,R4
   \   00000BC0   921C               ADDS     R2,R2,#+2
   \   00000BC2   1206               LSLS     R2,R2,#+24
   \   00000BC4   120E               LSRS     R2,R2,#+24
   \   00000BC6   0021               MOVS     R1,#+0
   \   00000BC8   06A8               ADD      R0,SP,#+24
   \   00000BCA   ........           BL       Label
   \   00000BCE   06B0               ADD      SP,SP,#+24
   \   00000BD0   0200               MOVS     R2,R0
   2737                        if(PixPlab<14) Label("s",0,x+3+PixPlab,y+11,1,4,0,120,0);
   \   00000BD2   0E28               CMP      R0,#+14
   \   00000BD4   00D3               BCC      .+4
   \   00000BD6   78E1               B        ??PaintProc_2
   \   00000BD8   82B0               SUB      SP,SP,#+8
   \   00000BDA   0020               MOVS     R0,#+0
   \   00000BDC   0090               STR      R0,[SP, #+0]
   \   00000BDE   7821               MOVS     R1,#+120
   \   00000BE0   03B4               PUSH     {R0,R1}
   \   00000BE2   0421               MOVS     R1,#+4
   \   00000BE4   0120               MOVS     R0,#+1
   \   00000BE6   03B4               PUSH     {R0,R1}
   \   00000BE8   3B00               MOVS     R3,R7
   \   00000BEA   A218               ADDS     R2,R4,R2
   \   00000BEC   D21C               ADDS     R2,R2,#+3
   \   00000BEE   1206               LSLS     R2,R2,#+24
   \   00000BF0   120E               LSRS     R2,R2,#+24
   \   00000BF2   0021               MOVS     R1,#+0
   \   00000BF4   B6A0               ADR      R0,??PaintProc_48  ;; 0x73, 0x00, 0x00, 0x00
   \   00000BF6   ........           BL       Label
   \   00000BFA   06B0               ADD      SP,SP,#+24
   \   00000BFC   65E1               B        ??PaintProc_2
   2738                    break;   
   2739                    
   2740          
   2741                      
   2742                    case ProcClock:
   2743                      
   2744                        CopyToCanvasPoint((char*)ProcClock_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_49:
   \   00000BFE   82B0               SUB      SP,SP,#+8
   \   00000C00   0820               MOVS     R0,#+8
   \   00000C02   0090               STR      R0,[SP, #+0]
   \   00000C04   1323               MOVS     R3,#+19
   \   00000C06   3A00               MOVS     R2,R7
   \   00000C08   D21C               ADDS     R2,R2,#+3
   \   00000C0A   1206               LSLS     R2,R2,#+24
   \   00000C0C   120E               LSRS     R2,R2,#+24
   \   00000C0E   2100               MOVS     R1,R4
   \   00000C10   491C               ADDS     R1,R1,#+1
   \   00000C12   0906               LSLS     R1,R1,#+24
   \   00000C14   090E               LSRS     R1,R1,#+24
   \   00000C16   2800               MOVS     R0,R5
   \   00000C18   7030               ADDS     R0,R0,#+112
   \   00000C1A   ........           BL       CopyToCanvasPoint
   \   00000C1E   02B0               ADD      SP,SP,#+8
   2745          
   2746                        Label((char*)ShortDate[Proc->Tag.ClkPrcType],0,x+2,y+11,1,17,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000C20   0B37               ADDS     R7,R7,#+11
   \   00000C22   82B0               SUB      SP,SP,#+8
   \   00000C24   0020               MOVS     R0,#+0
   \   00000C26   0090               STR      R0,[SP, #+0]
   \   00000C28   7821               MOVS     R1,#+120
   \   00000C2A   03B4               PUSH     {R0,R1}
   \   00000C2C   1121               MOVS     R1,#+17
   \   00000C2E   0120               MOVS     R0,#+1
   \   00000C30   03B4               PUSH     {R0,R1}
   \   00000C32   3B00               MOVS     R3,R7
   \   00000C34   2200               MOVS     R2,R4
   \   00000C36   921C               ADDS     R2,R2,#+2
   \   00000C38   1206               LSLS     R2,R2,#+24
   \   00000C3A   120E               LSRS     R2,R2,#+24
   \   00000C3C   0021               MOVS     R1,#+0
   \   00000C3E   CE20               MOVS     R0,#+206
   \   00000C40   8000               LSLS     R0,R0,#+2        ;; #+824
   \   00000C42   8446               MOV      R12,R0
   \   00000C44   0898               LDR      R0,[SP, #+32]
   \   00000C46   067A               LDRB     R6,[R0, #+8]
   \   00000C48   0320               MOVS     R0,#+3
   \   00000C4A   4643               MULS     R6,R0,R6
   \   00000C4C   AD19               ADDS     R5,R5,R6
   \   00000C4E   6046               MOV      R0,R12
   \   00000C50   2818               ADDS     R0,R5,R0
   \   00000C52   ........           BL       Label
   \   00000C56   06B0               ADD      SP,SP,#+24
   2747                        CharToStr(Proc->Tag.ClkPrcVal, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000C58   0222               MOVS     R2,#+2
   \   00000C5A   6946               MOV      R1,SP
   \   00000C5C   0298               LDR      R0,[SP, #+8]
   \   00000C5E   407A               LDRB     R0,[R0, #+9]
   \   00000C60   ........           BL       CharToStr
   2748                        Label(txt,0,x+10,y+11,5,9,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000C64   82B0               SUB      SP,SP,#+8
   \   00000C66   0020               MOVS     R0,#+0
   \   00000C68   0090               STR      R0,[SP, #+0]
   \   00000C6A   7821               MOVS     R1,#+120
   \   00000C6C   03B4               PUSH     {R0,R1}
   \   00000C6E   0921               MOVS     R1,#+9
   \   00000C70   0520               MOVS     R0,#+5
   \   00000C72   03B4               PUSH     {R0,R1}
   \   00000C74   3B00               MOVS     R3,R7
   \   00000C76   0A34               ADDS     R4,R4,#+10
   \   00000C78   2200               MOVS     R2,R4
   \   00000C7A   1206               LSLS     R2,R2,#+24
   \   00000C7C   120E               LSRS     R2,R2,#+24
   \   00000C7E   0021               MOVS     R1,#+0
   \   00000C80   06A8               ADD      R0,SP,#+24
   \   00000C82   ........           BL       Label
   \   00000C86   06B0               ADD      SP,SP,#+24
   \   00000C88   1FE1               B        ??PaintProc_2
   2749                                
   2750                      break;         
   2751                    
   2752          
   2753                    case ProcDay:
   2754                      
   2755                        CopyToCanvasPoint((char*)ProcDay_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_50:
   \   00000C8A   82B0               SUB      SP,SP,#+8
   \   00000C8C   0820               MOVS     R0,#+8
   \   00000C8E   0090               STR      R0,[SP, #+0]
   \   00000C90   1323               MOVS     R3,#+19
   \   00000C92   3A00               MOVS     R2,R7
   \   00000C94   D21C               ADDS     R2,R2,#+3
   \   00000C96   1206               LSLS     R2,R2,#+24
   \   00000C98   120E               LSRS     R2,R2,#+24
   \   00000C9A   2100               MOVS     R1,R4
   \   00000C9C   491C               ADDS     R1,R1,#+1
   \   00000C9E   0906               LSLS     R1,R1,#+24
   \   00000CA0   090E               LSRS     R1,R1,#+24
   \   00000CA2   8835               ADDS     R5,R5,#+136
   \   00000CA4   2800               MOVS     R0,R5
   \   00000CA6   ........           BL       CopyToCanvasPoint
   \   00000CAA   02B0               ADD      SP,SP,#+8
   2756                        Label((char*)DeyOfWeekStr[g_leng][Proc->Tag.DayOfWeek],0,x+4,y+11,2,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000CAC   82B0               SUB      SP,SP,#+8
   \   00000CAE   0020               MOVS     R0,#+0
   \   00000CB0   0090               STR      R0,[SP, #+0]
   \   00000CB2   7821               MOVS     R1,#+120
   \   00000CB4   03B4               PUSH     {R0,R1}
   \   00000CB6   0F21               MOVS     R1,#+15
   \   00000CB8   0220               MOVS     R0,#+2
   \   00000CBA   03B4               PUSH     {R0,R1}
   \   00000CBC   0B37               ADDS     R7,R7,#+11
   \   00000CBE   3B00               MOVS     R3,R7
   \   00000CC0   241D               ADDS     R4,R4,#+4
   \   00000CC2   2200               MOVS     R2,R4
   \   00000CC4   1206               LSLS     R2,R2,#+24
   \   00000CC6   120E               LSRS     R2,R2,#+24
   \   00000CC8   0021               MOVS     R1,#+0
   \   00000CCA   B020               MOVS     R0,#+176
   \   00000CCC   4000               LSLS     R0,R0,#+1        ;; #+352
   \   00000CCE   089C               LDR      R4,[SP, #+32]
   \   00000CD0   247A               LDRB     R4,[R4, #+8]
   \   00000CD2   6400               LSLS     R4,R4,#+1
   \   00000CD4   7F4D               LDR      R5,??PaintProc_48+0x4  ;; g_leng
   \   00000CD6   2D68               LDR      R5,[R5, #+0]
   \   00000CD8   2D01               LSLS     R5,R5,#+4
   \   00000CDA   7F4E               LDR      R6,??PaintProc_48+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000CDC   7519               ADDS     R5,R6,R5
   \   00000CDE   2C19               ADDS     R4,R5,R4
   \   00000CE0   2018               ADDS     R0,R4,R0
   \   00000CE2   ........           BL       Label
   \   00000CE6   06B0               ADD      SP,SP,#+24
   \   00000CE8   EFE0               B        ??PaintProc_2
   2757                     
   2758                      break;         
   2759                    
   2760                    
   2761                    case ProcConstAnal:
   2762                      
   2763                        //CopyToCanvasPoint((char*)ProcConstAnal_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   2764                        
   2765          
   2766                        H_line(x+2 ,y+2,19,1);
   \                     ??PaintProc_51:
   \   00000CEA   0123               MOVS     R3,#+1
   \   00000CEC   1322               MOVS     R2,#+19
   \   00000CEE   3900               MOVS     R1,R7
   \   00000CF0   891C               ADDS     R1,R1,#+2
   \   00000CF2   2000               MOVS     R0,R4
   \   00000CF4   801C               ADDS     R0,R0,#+2
   \   00000CF6   0006               LSLS     R0,R0,#+24
   \   00000CF8   000E               LSRS     R0,R0,#+24
   \   00000CFA   ........           BL       H_line
   2767                        V_line(x+20 ,y+3,6,1);
   \   00000CFE   3D00               MOVS     R5,R7
   \   00000D00   ED1C               ADDS     R5,R5,#+3
   \   00000D02   0123               MOVS     R3,#+1
   \   00000D04   0622               MOVS     R2,#+6
   \   00000D06   2900               MOVS     R1,R5
   \   00000D08   2000               MOVS     R0,R4
   \   00000D0A   1430               ADDS     R0,R0,#+20
   \   00000D0C   0006               LSLS     R0,R0,#+24
   \   00000D0E   000E               LSRS     R0,R0,#+24
   \   00000D10   ........           BL       V_line
   2768                        
   2769                        ind=sIntToStr(Proc->Tag.ConstAnValue, txt);
   \   00000D14   6946               MOV      R1,SP
   \   00000D16   0820               MOVS     R0,#+8
   \   00000D18   029A               LDR      R2,[SP, #+8]
   \   00000D1A   105E               LDRSH    R0,[R2, R0]
   \   00000D1C   ........           BL       sIntToStr
   \   00000D20   0600               MOVS     R6,R0
   2770                        
   2771                        if (ind>4)
   \   00000D22   0528               CMP      R0,#+5
   \   00000D24   29D3               BCC      ??PaintProc_52
   2772                        { 
   2773                          Label(txt,1,x+18,y+11,ind-4 ,4,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000D26   1234               ADDS     R4,R4,#+18
   \   00000D28   82B0               SUB      SP,SP,#+8
   \   00000D2A   0020               MOVS     R0,#+0
   \   00000D2C   0090               STR      R0,[SP, #+0]
   \   00000D2E   7821               MOVS     R1,#+120
   \   00000D30   03B4               PUSH     {R0,R1}
   \   00000D32   0421               MOVS     R1,#+4
   \   00000D34   3000               MOVS     R0,R6
   \   00000D36   001F               SUBS     R0,R0,#+4
   \   00000D38   0006               LSLS     R0,R0,#+24
   \   00000D3A   000E               LSRS     R0,R0,#+24
   \   00000D3C   03B4               PUSH     {R0,R1}
   \   00000D3E   0B37               ADDS     R7,R7,#+11
   \   00000D40   3B00               MOVS     R3,R7
   \   00000D42   2200               MOVS     R2,R4
   \   00000D44   1206               LSLS     R2,R2,#+24
   \   00000D46   120E               LSRS     R2,R2,#+24
   \   00000D48   0121               MOVS     R1,#+1
   \   00000D4A   06A8               ADD      R0,SP,#+24
   \   00000D4C   ........           BL       Label
   \   00000D50   06B0               ADD      SP,SP,#+24
   2774                          Label(&(txt[ind-4]),1,x+18,y+3,4 ,16,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000D52   82B0               SUB      SP,SP,#+8
   \   00000D54   0020               MOVS     R0,#+0
   \   00000D56   0090               STR      R0,[SP, #+0]
   \   00000D58   7821               MOVS     R1,#+120
   \   00000D5A   03B4               PUSH     {R0,R1}
   \   00000D5C   1021               MOVS     R1,#+16
   \   00000D5E   0420               MOVS     R0,#+4
   \   00000D60   03B4               PUSH     {R0,R1}
   \   00000D62   2B00               MOVS     R3,R5
   \   00000D64   2200               MOVS     R2,R4
   \   00000D66   1206               LSLS     R2,R2,#+24
   \   00000D68   120E               LSRS     R2,R2,#+24
   \   00000D6A   0121               MOVS     R1,#+1
   \   00000D6C   06A8               ADD      R0,SP,#+24
   \   00000D6E   8019               ADDS     R0,R0,R6
   \   00000D70   001F               SUBS     R0,R0,#+4
   \   00000D72   ........           BL       Label
   \   00000D76   06B0               ADD      SP,SP,#+24
   \   00000D78   A7E0               B        ??PaintProc_2
   2775                        }else{
   2776                          Label(txt,1,x+19,y+3,ind,16,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_52:
   \   00000D7A   82B0               SUB      SP,SP,#+8
   \   00000D7C   0020               MOVS     R0,#+0
   \   00000D7E   0090               STR      R0,[SP, #+0]
   \   00000D80   7821               MOVS     R1,#+120
   \   00000D82   03B4               PUSH     {R0,R1}
   \   00000D84   1021               MOVS     R1,#+16
   \   00000D86   3000               MOVS     R0,R6
   \   00000D88   03B4               PUSH     {R0,R1}
   \   00000D8A   2B00               MOVS     R3,R5
   \   00000D8C   1334               ADDS     R4,R4,#+19
   \   00000D8E   2200               MOVS     R2,R4
   \   00000D90   1206               LSLS     R2,R2,#+24
   \   00000D92   120E               LSRS     R2,R2,#+24
   \   00000D94   0121               MOVS     R1,#+1
   \   00000D96   06A8               ADD      R0,SP,#+24
   \   00000D98   ........           BL       Label
   \   00000D9C   06B0               ADD      SP,SP,#+24
   \   00000D9E   94E0               B        ??PaintProc_2
   2777                         
   2778                        }
   2779                        //Label((char*)DeyOfWeekStr[g_leng][Proc->Tag.DayOfWeek],0,x+4,y+11,2,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2780                         
   2781                       
   2782                        
   2783                        
   2784                      break;   
   2785                      
   2786                     case ProcGetReg:
   2787                        CopyToCanvasPoint((char*)ProcGetAnal_graf, x+1, y+3, 19,17);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_53:
   \   00000DA0   82B0               SUB      SP,SP,#+8
   \   00000DA2   1120               MOVS     R0,#+17
   \   00000DA4   0090               STR      R0,[SP, #+0]
   \   00000DA6   1323               MOVS     R3,#+19
   \   00000DA8   3A00               MOVS     R2,R7
   \   00000DAA   D21C               ADDS     R2,R2,#+3
   \   00000DAC   1206               LSLS     R2,R2,#+24
   \   00000DAE   120E               LSRS     R2,R2,#+24
   \   00000DB0   2100               MOVS     R1,R4
   \   00000DB2   491C               ADDS     R1,R1,#+1
   \   00000DB4   0906               LSLS     R1,R1,#+24
   \   00000DB6   090E               LSRS     R1,R1,#+24
   \   00000DB8   AF20               MOVS     R0,#+175
   \   00000DBA   8000               LSLS     R0,R0,#+2        ;; #+700
   \   00000DBC   2818               ADDS     R0,R5,R0
   \   00000DBE   ........           BL       CopyToCanvasPoint
   \   00000DC2   02B0               ADD      SP,SP,#+8
   2788                        if (Proc->Nr>=0)
   \   00000DC4   0120               MOVS     R0,#+1
   \   00000DC6   0299               LDR      R1,[SP, #+8]
   \   00000DC8   0856               LDRSB    R0,[R1, R0]
   \   00000DCA   0028               CMP      R0,#+0
   \   00000DCC   14D4               BMI      ??PaintProc_54
   2789                        {
   2790                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000DCE   0222               MOVS     R2,#+2
   \   00000DD0   6946               MOV      R1,SP
   \   00000DD2   0120               MOVS     R0,#+1
   \   00000DD4   029B               LDR      R3,[SP, #+8]
   \   00000DD6   1856               LDRSB    R0,[R3, R0]
   \   00000DD8   0006               LSLS     R0,R0,#+24
   \   00000DDA   000E               LSRS     R0,R0,#+24
   \   00000DDC   ........           BL       CharToStr
   \   00000DE0   0600               MOVS     R6,R0
   2791                          txt[ind]='.';
   \   00000DE2   6D46               MOV      R5,SP
   \   00000DE4   A919               ADDS     R1,R5,R6
   \   00000DE6   2E20               MOVS     R0,#+46
   \   00000DE8   0870               STRB     R0,[R1, #+0]
   2792                          CharToStr(Proc->Tag.RegNr, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000DEA   0222               MOVS     R2,#+2
   \   00000DEC   491C               ADDS     R1,R1,#+1
   \   00000DEE   0298               LDR      R0,[SP, #+8]
   \   00000DF0   007A               LDRB     R0,[R0, #+8]
   \   00000DF2   ........           BL       CharToStr
   \   00000DF6   09E0               B        ??PaintProc_55
   2793                        }else{
   2794                          txt[0]='a';
   \                     ??PaintProc_54:
   \   00000DF8   6D46               MOV      R5,SP
   \   00000DFA   6120               MOVS     R0,#+97
   \   00000DFC   2870               STRB     R0,[R5, #+0]
   2795                          CharToStr(Proc->Tag.RegNr, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000DFE   0222               MOVS     R2,#+2
   \   00000E00   6D1C               ADDS     R5,R5,#+1
   \   00000E02   2900               MOVS     R1,R5
   \   00000E04   0298               LDR      R0,[SP, #+8]
   \   00000E06   007A               LDRB     R0,[R0, #+8]
   \   00000E08   ........           BL       CharToStr
   2796                        }
   2797                        
   2798                        Label(txt,2,x+2, y+4,5,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_55:
   \   00000E0C   82B0               SUB      SP,SP,#+8
   \   00000E0E   0020               MOVS     R0,#+0
   \   00000E10   0090               STR      R0,[SP, #+0]
   \   00000E12   7821               MOVS     R1,#+120
   \   00000E14   03B4               PUSH     {R0,R1}
   \   00000E16   0F21               MOVS     R1,#+15
   \   00000E18   0520               MOVS     R0,#+5
   \   00000E1A   03B4               PUSH     {R0,R1}
   \   00000E1C   3F1D               ADDS     R7,R7,#+4
   \   00000E1E   3B00               MOVS     R3,R7
   \   00000E20   A41C               ADDS     R4,R4,#+2
   \   00000E22   2200               MOVS     R2,R4
   \   00000E24   1206               LSLS     R2,R2,#+24
   \   00000E26   120E               LSRS     R2,R2,#+24
   \   00000E28   0221               MOVS     R1,#+2
   \   00000E2A   06A8               ADD      R0,SP,#+24
   \   00000E2C   ........           BL       Label
   \   00000E30   06B0               ADD      SP,SP,#+24
   \   00000E32   4AE0               B        ??PaintProc_2
   2799          
   2800                      break;   
   2801                      
   2802                      case ProcSetReg:
   2803                        CopyToCanvasPoint((char*)ProcSetAnal_graf, x+1, y+3, 19,17);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_56:
   \   00000E34   82B0               SUB      SP,SP,#+8
   \   00000E36   1120               MOVS     R0,#+17
   \   00000E38   0090               STR      R0,[SP, #+0]
   \   00000E3A   1323               MOVS     R3,#+19
   \   00000E3C   3A00               MOVS     R2,R7
   \   00000E3E   D21C               ADDS     R2,R2,#+3
   \   00000E40   1206               LSLS     R2,R2,#+24
   \   00000E42   120E               LSRS     R2,R2,#+24
   \   00000E44   2100               MOVS     R1,R4
   \   00000E46   491C               ADDS     R1,R1,#+1
   \   00000E48   0906               LSLS     R1,R1,#+24
   \   00000E4A   090E               LSRS     R1,R1,#+24
   \   00000E4C   BC20               MOVS     R0,#+188
   \   00000E4E   8000               LSLS     R0,R0,#+2        ;; #+752
   \   00000E50   2818               ADDS     R0,R5,R0
   \   00000E52   ........           BL       CopyToCanvasPoint
   \   00000E56   02B0               ADD      SP,SP,#+8
   2804                        if (Proc->Nr>=0)
   \   00000E58   0120               MOVS     R0,#+1
   \   00000E5A   0299               LDR      R1,[SP, #+8]
   \   00000E5C   0856               LDRSB    R0,[R1, R0]
   \   00000E5E   0028               CMP      R0,#+0
   \   00000E60   16D4               BMI      ??PaintProc_57
   2805                        {
   2806                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000E62   0222               MOVS     R2,#+2
   \   00000E64   6946               MOV      R1,SP
   \   00000E66   0120               MOVS     R0,#+1
   \   00000E68   029B               LDR      R3,[SP, #+8]
   \   00000E6A   1856               LDRSB    R0,[R3, R0]
   \   00000E6C   0006               LSLS     R0,R0,#+24
   \   00000E6E   000E               LSRS     R0,R0,#+24
   \   00000E70   ........           BL       CharToStr
   \   00000E74   0600               MOVS     R6,R0
   2807                          txt[ind]='.';
   \   00000E76   6D46               MOV      R5,SP
   \   00000E78   A919               ADDS     R1,R5,R6
   \   00000E7A   2E20               MOVS     R0,#+46
   \   00000E7C   0870               STRB     R0,[R1, #+0]
   2808                          CharToStr(Proc->Tag.RegNr, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000E7E   0222               MOVS     R2,#+2
   \   00000E80   491C               ADDS     R1,R1,#+1
   \   00000E82   0298               LDR      R0,[SP, #+8]
   \   00000E84   007A               LDRB     R0,[R0, #+8]
   \   00000E86   ........           BL       CharToStr
   \   00000E8A   0BE0               B        ??PaintProc_58
   \                     ??PaintProc_46:
   \   00000E8C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   2809                        }else{
   2810                          txt[0]='a';
   \                     ??PaintProc_57:
   \   00000E90   6D46               MOV      R5,SP
   \   00000E92   6120               MOVS     R0,#+97
   \   00000E94   2870               STRB     R0,[R5, #+0]
   2811                          CharToStr(Proc->Tag.RegNr, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000E96   0222               MOVS     R2,#+2
   \   00000E98   6D1C               ADDS     R5,R5,#+1
   \   00000E9A   2900               MOVS     R1,R5
   \   00000E9C   0298               LDR      R0,[SP, #+8]
   \   00000E9E   007A               LDRB     R0,[R0, #+8]
   \   00000EA0   ........           BL       CharToStr
   2812                        }
   2813                        Label(txt,2,x+3, y+4,5,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_58:
   \   00000EA4   82B0               SUB      SP,SP,#+8
   \   00000EA6   0020               MOVS     R0,#+0
   \   00000EA8   0090               STR      R0,[SP, #+0]
   \   00000EAA   7821               MOVS     R1,#+120
   \   00000EAC   03B4               PUSH     {R0,R1}
   \   00000EAE   0F21               MOVS     R1,#+15
   \   00000EB0   0520               MOVS     R0,#+5
   \   00000EB2   03B4               PUSH     {R0,R1}
   \   00000EB4   3F1D               ADDS     R7,R7,#+4
   \   00000EB6   3B00               MOVS     R3,R7
   \   00000EB8   E41C               ADDS     R4,R4,#+3
   \   00000EBA   2200               MOVS     R2,R4
   \   00000EBC   1206               LSLS     R2,R2,#+24
   \   00000EBE   120E               LSRS     R2,R2,#+24
   \   00000EC0   0221               MOVS     R1,#+2
   \   00000EC2   06A8               ADD      R0,SP,#+24
   \   00000EC4   ........           BL       Label
   \   00000EC8   06B0               ADD      SP,SP,#+24
   2814          
   2815                      break;   
   2816                      
   2817                      
   2818                    }
   2819                    
   2820                    
   2821                    
   2822                }//_______________________________________________________________________
   \                     ??PaintProc_2:
   \   00000ECA   FEBC               POP      {R1-R7}
   \   00000ECC   01BC               POP      {R0}
   \   00000ECE   0047               BX       R0               ;; return
   \                     ??PaintProc_48:
   \   00000ED0   73000000           DC8      0x73, 0x00, 0x00, 0x00
   \   00000ED4   ........           DC32     g_leng
   \   00000ED8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   2823                
   2824                
   2825                
   2826          
   2827          //lader **************************************************************************************************************
   2828                char LaderLine=0;
   2829                char LaderCol=0;
   2830                //*----------------------------------------------------------------------------
   2831                #define MaxRow 3
   2832                #define MaxCol 3
   2833                

   \                                 In section Debug.txt, align 4, keep-with-next
   2834                void Lader_Paint(void)
   2835                {  
   \                     Lader_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   2836                  
   2837                char txt[5];
   2838                 
   2839                
   2840                 List_Paint("Program ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   78A0               ADR      R0,??Lader_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   7548               LDR      R0,??Lader_Paint_0+0x4  ;; `?<Constant "Info ">` + 44
   \   0000001E   ........           BL       List_Paint
   \   00000022   0AB0               ADD      SP,SP,#+40
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   3DE0               B        ??Lader_Paint_1
   2841          
   2842                //siatka
   2843                
   2844                for (char i=0; i<4; i++)
   2845                {
   2846                    H_line(3,44+i*21,58,2);   
   \                     ??Lader_Paint_2:
   \   00000028   2E00               MOVS     R6,R5
   \   0000002A   1520               MOVS     R0,#+21
   \   0000002C   4643               MULS     R6,R0,R6
   \   0000002E   0223               MOVS     R3,#+2
   \   00000030   3A22               MOVS     R2,#+58
   \   00000032   3100               MOVS     R1,R6
   \   00000034   2C31               ADDS     R1,R1,#+44
   \   00000036   0320               MOVS     R0,#+3
   \   00000038   ........           BL       H_line
   \   0000003C   6E48               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   0000003E   0078               LDRB     R0,[R0, #+0]
   \   00000040   0028               CMP      R0,#+0
   \   00000042   2CD1               BNE      ??Lader_Paint_3
   \   00000044   2800               MOVS     R0,R5
   \   00000046   0328               CMP      R0,#+3
   \   00000048   29D2               BCS      ??Lader_Paint_3
   2847                    if ((LaderCol==0) && (i<3))
   2848                    { 
   2849                       CharToStr(LaderLine+3-i, txt, 3); //(char Value, char *Vstring, char ill);
   \   0000004A   0322               MOVS     R2,#+3
   \   0000004C   01A9               ADD      R1,SP,#+4
   \   0000004E   6B48               LDR      R0,??Lader_Paint_0+0xC  ;; TextToChangeLength + 16
   \   00000050   0078               LDRB     R0,[R0, #+0]
   \   00000052   C01C               ADDS     R0,R0,#+3
   \   00000054   2B00               MOVS     R3,R5
   \   00000056   C01A               SUBS     R0,R0,R3
   \   00000058   0006               LSLS     R0,R0,#+24
   \   0000005A   000E               LSRS     R0,R0,#+24
   \   0000005C   ........           BL       CharToStr
   2850                       Label(txt,0,3,51+i*21,4,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000060   3400               MOVS     R4,R6
   \   00000062   3334               ADDS     R4,R4,#+51
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   6921               MOVS     R1,#+105
   \   0000006C   1020               MOVS     R0,#+16
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   1721               MOVS     R1,#+23
   \   00000072   0420               MOVS     R0,#+4
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   2300               MOVS     R3,R4
   \   00000078   0322               MOVS     R2,#+3
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   07A8               ADD      R0,SP,#+28
   \   0000007E   ........           BL       Label
   \   00000082   06B0               ADD      SP,SP,#+24
   2851          
   2852                       H_line(17,50+i*21,5,1); 
   \   00000084   0123               MOVS     R3,#+1
   \   00000086   0522               MOVS     R2,#+5
   \   00000088   3236               ADDS     R6,R6,#+50
   \   0000008A   3100               MOVS     R1,R6
   \   0000008C   1120               MOVS     R0,#+17
   \   0000008E   ........           BL       H_line
   2853                       H_line(17,51+i*21,5,1); 
   \   00000092   0123               MOVS     R3,#+1
   \   00000094   0522               MOVS     R2,#+5
   \   00000096   2100               MOVS     R1,R4
   \   00000098   1120               MOVS     R0,#+17
   \   0000009A   ........           BL       H_line
   2854                    }
   2855                }
   \                     ??Lader_Paint_3:
   \   0000009E   6D1C               ADDS     R5,R5,#+1
   \   000000A0   2D06               LSLS     R5,R5,#+24
   \   000000A2   2D0E               LSRS     R5,R5,#+24
   \                     ??Lader_Paint_1:
   \   000000A4   2800               MOVS     R0,R5
   \   000000A6   0428               CMP      R0,#+4
   \   000000A8   BED3               BCC      ??Lader_Paint_2
   2856                for (char i=0; i<4; i++)
   \   000000AA   0024               MOVS     R4,#+0
   \   000000AC   1425               MOVS     R5,#+20
   \   000000AE   0BE0               B        ??Lader_Paint_4
   2857                {
   2858                    V_line(1+i*20,44,64,2);         
   \                     ??Lader_Paint_5:
   \   000000B0   0223               MOVS     R3,#+2
   \   000000B2   4022               MOVS     R2,#+64
   \   000000B4   2C21               MOVS     R1,#+44
   \   000000B6   6843               MULS     R0,R5,R0
   \   000000B8   401C               ADDS     R0,R0,#+1
   \   000000BA   0006               LSLS     R0,R0,#+24
   \   000000BC   000E               LSRS     R0,R0,#+24
   \   000000BE   ........           BL       V_line
   2859                }
   \   000000C2   641C               ADDS     R4,R4,#+1
   \   000000C4   2406               LSLS     R4,R4,#+24
   \   000000C6   240E               LSRS     R4,R4,#+24
   \                     ??Lader_Paint_4:
   \   000000C8   2000               MOVS     R0,R4
   \   000000CA   0428               CMP      R0,#+4
   \   000000CC   F0D3               BCC      ??Lader_Paint_5
   \   000000CE   4A48               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   000000D0   0078               LDRB     R0,[R0, #+0]
   \   000000D2   0028               CMP      R0,#+0
   \   000000D4   11D1               BNE      ??Lader_Paint_6
   2860                //------koniec siatki
   2861                
   2862                
   2863                if (LaderCol==0)
   2864                {
   2865                   V_line(16,44,64,1);
   \   000000D6   0123               MOVS     R3,#+1
   \   000000D8   4022               MOVS     R2,#+64
   \   000000DA   2C21               MOVS     R1,#+44
   \   000000DC   1020               MOVS     R0,#+16
   \   000000DE   ........           BL       V_line
   2866                   V_line(17,44,64,1);  
   \   000000E2   0123               MOVS     R3,#+1
   \   000000E4   4022               MOVS     R2,#+64
   \   000000E6   2C21               MOVS     R1,#+44
   \   000000E8   1120               MOVS     R0,#+17
   \   000000EA   ........           BL       V_line
   2867                   V_line(18,44,64,1); 
   \   000000EE   0123               MOVS     R3,#+1
   \   000000F0   4022               MOVS     R2,#+64
   \   000000F2   2C21               MOVS     R1,#+44
   \   000000F4   1220               MOVS     R0,#+18
   \   000000F6   ........           BL       V_line
   2868                }
   2869                
   2870                CharToStr(LaderCol, txt, 2); //(char Value, char *Vstring, char ill);
   \                     ??Lader_Paint_6:
   \   000000FA   0222               MOVS     R2,#+2
   \   000000FC   01A9               ADD      R1,SP,#+4
   \   000000FE   3E48               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   00000100   0078               LDRB     R0,[R0, #+0]
   \   00000102   ........           BL       CharToStr
   2871                Label(txt,0,8,35,8,23,16,105,0);
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   0020               MOVS     R0,#+0
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   6921               MOVS     R1,#+105
   \   0000010E   1020               MOVS     R0,#+16
   \   00000110   03B4               PUSH     {R0,R1}
   \   00000112   1721               MOVS     R1,#+23
   \   00000114   0820               MOVS     R0,#+8
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   2323               MOVS     R3,#+35
   \   0000011A   0200               MOVS     R2,R0
   \   0000011C   0021               MOVS     R1,#+0
   \   0000011E   07A8               ADD      R0,SP,#+28
   \   00000120   ........           BL       Label
   \   00000124   06B0               ADD      SP,SP,#+24
   2872                  
   2873                
   2874                  //Label(Speech[g_leng].UruchomienieSter,0,2,j+(Label_move*2)-8,15,8,16,96,0); break;
   2875                   
   2876                      char LabelButt[2];
   2877                      LabelButt[1]=0;
   \   00000126   6C46               MOV      R4,SP
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   6070               STRB     R0,[R4, #+1]
   2878                      LabelButt[0]=30;
   \   0000012C   1E20               MOVS     R0,#+30
   \   0000012E   2070               STRB     R0,[R4, #+0]
   2879                      Button(LabelButt,22,23,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000130   82B0               SUB      SP,SP,#+8
   \   00000132   1220               MOVS     R0,#+18
   \   00000134   0090               STR      R0,[SP, #+0]
   \   00000136   2B00               MOVS     R3,R5
   \   00000138   1722               MOVS     R2,#+23
   \   0000013A   1621               MOVS     R1,#+22
   \   0000013C   02A8               ADD      R0,SP,#+8
   \   0000013E   ........           BL       Button
   \   00000142   02B0               ADD      SP,SP,#+8
   2880                      LabelButt[0]=31;
   \   00000144   1F20               MOVS     R0,#+31
   \   00000146   2070               STRB     R0,[R4, #+0]
   2881                      Button(LabelButt,22,3,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   1220               MOVS     R0,#+18
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   2B00               MOVS     R3,R5
   \   00000150   0322               MOVS     R2,#+3
   \   00000152   1621               MOVS     R1,#+22
   \   00000154   02A8               ADD      R0,SP,#+8
   \   00000156   ........           BL       Button
   \   0000015A   02B0               ADD      SP,SP,#+8
   2882                      LabelButt[0]='>';
   \   0000015C   3E20               MOVS     R0,#+62
   \   0000015E   2070               STRB     R0,[R4, #+0]
   2883                      Button(LabelButt,42,13,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000160   82B0               SUB      SP,SP,#+8
   \   00000162   1220               MOVS     R0,#+18
   \   00000164   0090               STR      R0,[SP, #+0]
   \   00000166   2B00               MOVS     R3,R5
   \   00000168   0D22               MOVS     R2,#+13
   \   0000016A   2A21               MOVS     R1,#+42
   \   0000016C   02A8               ADD      R0,SP,#+8
   \   0000016E   ........           BL       Button
   \   00000172   02B0               ADD      SP,SP,#+8
   2884                      LabelButt[0]='<';
   \   00000174   3C20               MOVS     R0,#+60
   \   00000176   2070               STRB     R0,[R4, #+0]
   2885                      Button(LabelButt,2,13,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   1220               MOVS     R0,#+18
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   2B00               MOVS     R3,R5
   \   00000180   0D22               MOVS     R2,#+13
   \   00000182   0221               MOVS     R1,#+2
   \   00000184   02A8               ADD      R0,SP,#+8
   \   00000186   ........           BL       Button
   \   0000018A   02B0               ADD      SP,SP,#+8
   2886                     
   2887                  char row, col;
   2888          
   2889          
   2890              
   2891                  row=LaderLine; 
   \   0000018C   1B48               LDR      R0,??Lader_Paint_0+0xC  ;; TextToChangeLength + 16
   \   0000018E   0478               LDRB     R4,[R0, #+0]
   2892                  for (int j=(MaxRow-1); j>=0; j--)
   \   00000190   0225               MOVS     R5,#+2
   \   00000192   24E0               B        ??Lader_Paint_7
   2893                  {
   2894                    
   2895                    col=LaderCol;
   2896                    for (int i=0; i<MaxCol; i++)
   2897                    {
   2898                      
   2899                      //if (LaderCol) PaintProc(21+j*20,44+i*21,&gProg.Line[row].Proc[col-1]);
   2900                      if ((LaderCol) || ((LaderCol==0)&&(i!=0)))  PaintProc(1+i*20,44+j*21,&gProg.Line[row].Proc[col-1]);
   \                     ??Lader_Paint_8:
   \   00000194   1848               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   00000196   0078               LDRB     R0,[R0, #+0]
   \   00000198   0028               CMP      R0,#+0
   \   0000019A   01D1               BNE      ??Lader_Paint_9
   \   0000019C   002E               CMP      R6,#+0
   \   0000019E   14D0               BEQ      ??Lader_Paint_10
   \                     ??Lader_Paint_9:
   \   000001A0   3800               MOVS     R0,R7
   \   000001A2   1821               MOVS     R1,#+24
   \   000001A4   4843               MULS     R0,R1,R0
   \   000001A6   2100               MOVS     R1,R4
   \   000001A8   F022               MOVS     R2,#+240
   \   000001AA   5143               MULS     R1,R2,R1
   \   000001AC   144A               LDR      R2,??Lader_Paint_0+0x10  ;; gProg
   \   000001AE   5118               ADDS     R1,R2,R1
   \   000001B0   0A18               ADDS     R2,R1,R0
   \   000001B2   1521               MOVS     R1,#+21
   \   000001B4   6943               MULS     R1,R5,R1
   \   000001B6   2C31               ADDS     R1,R1,#+44
   \   000001B8   0906               LSLS     R1,R1,#+24
   \   000001BA   090E               LSRS     R1,R1,#+24
   \   000001BC   1420               MOVS     R0,#+20
   \   000001BE   7043               MULS     R0,R6,R0
   \   000001C0   401C               ADDS     R0,R0,#+1
   \   000001C2   0006               LSLS     R0,R0,#+24
   \   000001C4   000E               LSRS     R0,R0,#+24
   \   000001C6   ........           BL       PaintProc
   2901                      col++;
   \                     ??Lader_Paint_10:
   \   000001CA   7F1C               ADDS     R7,R7,#+1
   \   000001CC   3F06               LSLS     R7,R7,#+24
   \   000001CE   3F0E               LSRS     R7,R7,#+24
   2902                    }
   \   000001D0   761C               ADDS     R6,R6,#+1
   \                     ??Lader_Paint_11:
   \   000001D2   032E               CMP      R6,#+3
   \   000001D4   DEDB               BLT      ??Lader_Paint_8
   2903                    row++;
   \   000001D6   641C               ADDS     R4,R4,#+1
   \   000001D8   2406               LSLS     R4,R4,#+24
   \   000001DA   240E               LSRS     R4,R4,#+24
   \   000001DC   6D1E               SUBS     R5,R5,#+1
   \                     ??Lader_Paint_7:
   \   000001DE   002D               CMP      R5,#+0
   \   000001E0   03D4               BMI      ??Lader_Paint_12
   \   000001E2   0548               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   000001E4   0778               LDRB     R7,[R0, #+0]
   \   000001E6   0026               MOVS     R6,#+0
   \   000001E8   F3E7               B        ??Lader_Paint_11
   2904                  }
   2905                  
   2906                }//________________________________________________________________________
   \                     ??Lader_Paint_12:
   \   000001EA   FEBC               POP      {R1-R7}
   \   000001EC   01BC               POP      {R0}
   \   000001EE   0047               BX       R0               ;; return
   \                     ??Lader_Paint_0:
   \   000001F0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001F4   ........           DC32     `?<Constant "Info ">` + 44
   \   000001F8   ........           DC32     TextToChangeLength + 17
   \   000001FC   ........           DC32     TextToChangeLength + 16
   \   00000200   ........           DC32     gProg
   2907          
   2908              
   2909                //*-----------------------------------------------------------------------------
   2910                long long int Touch_EventTime;
   2911                char ChoseRow, ChoseCol;

   \                                 In section Debug.txt, align 4, keep-with-next
   2912                void Lader_Event(void)
   2913                {
   \                     Lader_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   6D46               MOV      R5,SP
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   6870               STRB     R0,[R5, #+1]
   2914                 char LabelButt[2];
   2915                      LabelButt[1]=0;
   2916                      LabelButt[0]='>';
   \   00000008   3E20               MOVS     R0,#+62
   \   0000000A   2870               STRB     R0,[R5, #+0]
   2917                      if ((Button(LabelButt,42,13,20,18)) && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) && (LaderCol<=MaxPrcInLine-MaxCol))
   \   0000000C   82B0               SUB      SP,SP,#+8
   \   0000000E   1220               MOVS     R0,#+18
   \   00000010   0090               STR      R0,[SP, #+0]
   \   00000012   1423               MOVS     R3,#+20
   \   00000014   0D22               MOVS     R2,#+13
   \   00000016   2A21               MOVS     R1,#+42
   \   00000018   02A8               ADD      R0,SP,#+8
   \   0000001A   ........           BL       Button
   \   0000001E   02B0               ADD      SP,SP,#+8
   \   00000020   0028               CMP      R0,#+0
   \   00000022   1BD0               BEQ      ??Lader_Event_0
   \   00000024   A74C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   00000026   266C               LDR      R6,[R4, #+64]
   \   00000028   676C               LDR      R7,[R4, #+68]
   \   0000002A   A748               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   0000002C   03C8               LDM      R0!,{R0,R1}
   \   0000002E   C822               MOVS     R2,#+200
   \   00000030   0023               MOVS     R3,#+0
   \   00000032   9219               ADDS     R2,R2,R6
   \   00000034   7B41               ADCS     R3,R3,R7
   \   00000036   8B42               CMP      R3,R1
   \   00000038   07D3               BCC      ??Lader_Event_2
   \   0000003A   01D8               BHI      ??Lader_Event_3
   \   0000003C   8242               CMP      R2,R0
   \   0000003E   04D3               BCC      ??Lader_Event_2
   \                     ??Lader_Event_3:
   \   00000040   B942               CMP      R1,R7
   \   00000042   0BD8               BHI      ??Lader_Event_0
   \   00000044   01D3               BCC      ??Lader_Event_2
   \   00000046   B042               CMP      R0,R6
   \   00000048   08D2               BCS      ??Lader_Event_0
   \                     ??Lader_Event_2:
   \   0000004A   627C               LDRB     R2,[R4, #+17]
   \   0000004C   082A               CMP      R2,#+8
   \   0000004E   05D2               BCS      ??Lader_Event_0
   2918                      {
   2919                        Touch_EventTime=g_counter;
   \   00000050   2064               STR      R0,[R4, #+64]
   \   00000052   6164               STR      R1,[R4, #+68]
   2920                        LaderCol++;    //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000054   521C               ADDS     R2,R2,#+1
   \   00000056   6274               STRB     R2,[R4, #+17]
   2921                        MenuPaint();
   \   00000058   ........           BL       MenuPaint
   2922                      }
   2923                      LabelButt[0]='<';
   \                     ??Lader_Event_0:
   \   0000005C   3C20               MOVS     R0,#+60
   \   0000005E   2870               STRB     R0,[R5, #+0]
   2924                      if ((Button(LabelButt,2,13,20,18))  && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) && (LaderCol>0))            
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   1220               MOVS     R0,#+18
   \   00000064   0090               STR      R0,[SP, #+0]
   \   00000066   1423               MOVS     R3,#+20
   \   00000068   0D22               MOVS     R2,#+13
   \   0000006A   0221               MOVS     R1,#+2
   \   0000006C   02A8               ADD      R0,SP,#+8
   \   0000006E   ........           BL       Button
   \   00000072   02B0               ADD      SP,SP,#+8
   \   00000074   0028               CMP      R0,#+0
   \   00000076   1BD0               BEQ      ??Lader_Event_4
   \   00000078   924C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   0000007A   266C               LDR      R6,[R4, #+64]
   \   0000007C   676C               LDR      R7,[R4, #+68]
   \   0000007E   9248               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000080   03C8               LDM      R0!,{R0,R1}
   \   00000082   C822               MOVS     R2,#+200
   \   00000084   0023               MOVS     R3,#+0
   \   00000086   9219               ADDS     R2,R2,R6
   \   00000088   7B41               ADCS     R3,R3,R7
   \   0000008A   8B42               CMP      R3,R1
   \   0000008C   07D3               BCC      ??Lader_Event_5
   \   0000008E   01D8               BHI      ??Lader_Event_6
   \   00000090   8242               CMP      R2,R0
   \   00000092   04D3               BCC      ??Lader_Event_5
   \                     ??Lader_Event_6:
   \   00000094   B942               CMP      R1,R7
   \   00000096   0BD8               BHI      ??Lader_Event_4
   \   00000098   01D3               BCC      ??Lader_Event_5
   \   0000009A   B042               CMP      R0,R6
   \   0000009C   08D2               BCS      ??Lader_Event_4
   \                     ??Lader_Event_5:
   \   0000009E   627C               LDRB     R2,[R4, #+17]
   \   000000A0   002A               CMP      R2,#+0
   \   000000A2   05D0               BEQ      ??Lader_Event_4
   2925                      {
   2926                        Touch_EventTime=g_counter;
   \   000000A4   2064               STR      R0,[R4, #+64]
   \   000000A6   6164               STR      R1,[R4, #+68]
   2927                        LaderCol--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000A8   501E               SUBS     R0,R2,#+1
   \   000000AA   6074               STRB     R0,[R4, #+17]
   2928                        MenuPaint();
   \   000000AC   ........           BL       MenuPaint
   2929                      } 
   2930                      
   2931                      LabelButt[0]=30;
   \                     ??Lader_Event_4:
   \   000000B0   1E20               MOVS     R0,#+30
   \   000000B2   2870               STRB     R0,[R5, #+0]
   2932                      if ((Button(LabelButt,22,23,20,18))  && ((g_counter>Touch_EventTime+50) || (Touch_EventTime>g_counter)) && (LaderLine>0))            
   \   000000B4   82B0               SUB      SP,SP,#+8
   \   000000B6   1220               MOVS     R0,#+18
   \   000000B8   0090               STR      R0,[SP, #+0]
   \   000000BA   1423               MOVS     R3,#+20
   \   000000BC   1722               MOVS     R2,#+23
   \   000000BE   1621               MOVS     R1,#+22
   \   000000C0   02A8               ADD      R0,SP,#+8
   \   000000C2   ........           BL       Button
   \   000000C6   02B0               ADD      SP,SP,#+8
   \   000000C8   0028               CMP      R0,#+0
   \   000000CA   1BD0               BEQ      ??Lader_Event_7
   \   000000CC   7D4C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   000000CE   266C               LDR      R6,[R4, #+64]
   \   000000D0   676C               LDR      R7,[R4, #+68]
   \   000000D2   7D48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000000D4   03C8               LDM      R0!,{R0,R1}
   \   000000D6   3222               MOVS     R2,#+50
   \   000000D8   0023               MOVS     R3,#+0
   \   000000DA   9219               ADDS     R2,R2,R6
   \   000000DC   7B41               ADCS     R3,R3,R7
   \   000000DE   8B42               CMP      R3,R1
   \   000000E0   07D3               BCC      ??Lader_Event_8
   \   000000E2   01D8               BHI      ??Lader_Event_9
   \   000000E4   8242               CMP      R2,R0
   \   000000E6   04D3               BCC      ??Lader_Event_8
   \                     ??Lader_Event_9:
   \   000000E8   B942               CMP      R1,R7
   \   000000EA   0BD8               BHI      ??Lader_Event_7
   \   000000EC   01D3               BCC      ??Lader_Event_8
   \   000000EE   B042               CMP      R0,R6
   \   000000F0   08D2               BCS      ??Lader_Event_7
   \                     ??Lader_Event_8:
   \   000000F2   227C               LDRB     R2,[R4, #+16]
   \   000000F4   002A               CMP      R2,#+0
   \   000000F6   05D0               BEQ      ??Lader_Event_7
   2933                      {
   2934                        Touch_EventTime=g_counter;
   \   000000F8   2064               STR      R0,[R4, #+64]
   \   000000FA   6164               STR      R1,[R4, #+68]
   2935                        LaderLine--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000FC   501E               SUBS     R0,R2,#+1
   \   000000FE   2074               STRB     R0,[R4, #+16]
   2936                        MenuPaint();
   \   00000100   ........           BL       MenuPaint
   2937                      } 
   2938                      
   2939                      LabelButt[0]=31;
   \                     ??Lader_Event_7:
   \   00000104   1F20               MOVS     R0,#+31
   \   00000106   2870               STRB     R0,[R5, #+0]
   2940                      if ((Button(LabelButt,22,3,20,18)) && ((g_counter>Touch_EventTime+50) || (Touch_EventTime>g_counter)) && (LaderLine<MaxPrcLines-MaxRow))
   \   00000108   82B0               SUB      SP,SP,#+8
   \   0000010A   1220               MOVS     R0,#+18
   \   0000010C   0090               STR      R0,[SP, #+0]
   \   0000010E   1423               MOVS     R3,#+20
   \   00000110   0322               MOVS     R2,#+3
   \   00000112   1621               MOVS     R1,#+22
   \   00000114   02A8               ADD      R0,SP,#+8
   \   00000116   ........           BL       Button
   \   0000011A   02B0               ADD      SP,SP,#+8
   \   0000011C   0028               CMP      R0,#+0
   \   0000011E   1BD0               BEQ      ??Lader_Event_10
   \   00000120   684C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   00000122   266C               LDR      R6,[R4, #+64]
   \   00000124   676C               LDR      R7,[R4, #+68]
   \   00000126   6848               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000128   03C8               LDM      R0!,{R0,R1}
   \   0000012A   3222               MOVS     R2,#+50
   \   0000012C   0023               MOVS     R3,#+0
   \   0000012E   9219               ADDS     R2,R2,R6
   \   00000130   7B41               ADCS     R3,R3,R7
   \   00000132   8B42               CMP      R3,R1
   \   00000134   07D3               BCC      ??Lader_Event_11
   \   00000136   01D8               BHI      ??Lader_Event_12
   \   00000138   8242               CMP      R2,R0
   \   0000013A   04D3               BCC      ??Lader_Event_11
   \                     ??Lader_Event_12:
   \   0000013C   B942               CMP      R1,R7
   \   0000013E   0BD8               BHI      ??Lader_Event_10
   \   00000140   01D3               BCC      ??Lader_Event_11
   \   00000142   B042               CMP      R0,R6
   \   00000144   08D2               BCS      ??Lader_Event_10
   \                     ??Lader_Event_11:
   \   00000146   227C               LDRB     R2,[R4, #+16]
   \   00000148   C52A               CMP      R2,#+197
   \   0000014A   05D2               BCS      ??Lader_Event_10
   2941                      {
   2942                        Touch_EventTime=g_counter;
   \   0000014C   2064               STR      R0,[R4, #+64]
   \   0000014E   6164               STR      R1,[R4, #+68]
   2943                        LaderLine++;    
   \   00000150   521C               ADDS     R2,R2,#+1
   \   00000152   2274               STRB     R2,[R4, #+16]
   2944                        MenuPaint();
   \   00000154   ........           BL       MenuPaint
   2945                      }
   2946                      
   2947          
   2948                  //zdarzenie typu down "X"
   2949                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \                     ??Lader_Event_10:
   \   00000158   5C48               LDR      R0,??Lader_Event_1+0x8  ;; X_down
   \   0000015A   0021               MOVS     R1,#+0
   \   0000015C   405E               LDRSH    R0,[R0, R1]
   \   0000015E   2F28               CMP      R0,#+47
   \   00000160   2EDB               BLT      ??Lader_Event_13
   \   00000162   3F28               CMP      R0,#+63
   \   00000164   2CDA               BGE      ??Lader_Event_13
   \   00000166   5A48               LDR      R0,??Lader_Event_1+0xC  ;; Y_down
   \   00000168   405E               LDRSH    R0,[R0, R1]
   \   0000016A   7128               CMP      R0,#+113
   \   0000016C   28DB               BLT      ??Lader_Event_13
   \   0000016E   7F28               CMP      R0,#+127
   \   00000170   26DA               BGE      ??Lader_Event_13
   2950                  {
   2951                    //MenuPaint();
   2952                    H_line(49,114,10,0);
   \   00000172   0B00               MOVS     R3,R1
   \   00000174   0A22               MOVS     R2,#+10
   \   00000176   7221               MOVS     R1,#+114
   \   00000178   3120               MOVS     R0,#+49
   \   0000017A   ........           BL       H_line
   2953                    H_line(49,123,10,0); 
   \   0000017E   0023               MOVS     R3,#+0
   \   00000180   0A22               MOVS     R2,#+10
   \   00000182   7B21               MOVS     R1,#+123
   \   00000184   3120               MOVS     R0,#+49
   \   00000186   ........           BL       H_line
   2954                    V_line(49,114,10,0); 
   \   0000018A   0023               MOVS     R3,#+0
   \   0000018C   0A22               MOVS     R2,#+10
   \   0000018E   7221               MOVS     R1,#+114
   \   00000190   3120               MOVS     R0,#+49
   \   00000192   ........           BL       V_line
   2955                    V_line(58,114,10,0); 
   \   00000196   0023               MOVS     R3,#+0
   \   00000198   0A22               MOVS     R2,#+10
   \   0000019A   7221               MOVS     R1,#+114
   \   0000019C   3A20               MOVS     R0,#+58
   \   0000019E   ........           BL       V_line
   2956                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000001A2   4C48               LDR      R0,??Lader_Event_1+0x10  ;; 0x13d7e9
   \   000001A4   0078               LDRB     R0,[R0, #+0]
   \   000001A6   0028               CMP      R0,#+0
   \   000001A8   0AD1               BNE      ??Lader_Event_13
   \   000001AA   4B48               LDR      R0,??Lader_Event_1+0x14  ;; 0xfffff430
   \   000001AC   8021               MOVS     R1,#+128
   \   000001AE   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000001B0   0160               STR      R1,[R0, #+0]
   \   000001B2   4A4A               LDR      R2,??Lader_Event_1+0x18  ;; ButtonBipCounter
   \   000001B4   4448               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000001B6   03C8               LDM      R0!,{R0,R1}
   \   000001B8   0023               MOVS     R3,#+0
   \   000001BA   0830               ADDS     R0,R0,#+8
   \   000001BC   5941               ADCS     R1,R1,R3
   \   000001BE   03C2               STM      R2!,{R0,R1}
   2957                    
   2958                  }
   2959            
   2960                  
   2961          
   2962                  
   2963                  //edycja procedury
   2964                  char row, col;
   2965                  
   2966                  row=LaderLine; 
   \                     ??Lader_Event_13:
   \   000001C0   404C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   000001C2   207C               LDRB     R0,[R4, #+16]
   \   000001C4   0190               STR      R0,[SP, #+4]
   2967                  for (int j=(MaxRow-1); j>=0; j--)
   \   000001C6   0227               MOVS     R7,#+2
   \   000001C8   05E0               B        ??Lader_Event_14
   2968                  {          
   2969                    col=LaderCol;
   2970                    for (int i=0; i<MaxCol; i++)
   2971                    {
   2972                        if ((X_up>1+i*20) && (X_up<1+(i+1)*20) && (Y_up>44+j*21) && (Y_up<44+(j+1)*21))                    //"X"
   2973                        {
   2974                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   2975                          
   2976                          ChoseRow=row;
   2977                          ChoseCol=col-1;
   2978                          if (ChoseCol!=0xff)  //je¿eli nie zerowa kolumna
   2979                          {
   2980                          MenuLevel=MenuLevel*10+1;
   2981                          }else{
   2982                          MenuLevel=MenuLevel*10+2;  
   2983                          }
   2984                          
   2985                          MenuPaint();
   2986                         
   2987                        }  
   2988                      col++;
   2989                    }
   2990                    row++;
   \                     ??Lader_Event_15:
   \   000001CA   0198               LDR      R0,[SP, #+4]
   \   000001CC   401C               ADDS     R0,R0,#+1
   \   000001CE   0006               LSLS     R0,R0,#+24
   \   000001D0   000E               LSRS     R0,R0,#+24
   \   000001D2   0190               STR      R0,[SP, #+4]
   \   000001D4   7F1E               SUBS     R7,R7,#+1
   \                     ??Lader_Event_14:
   \   000001D6   002F               CMP      R7,#+0
   \   000001D8   44D4               BMI      ??Lader_Event_16
   \   000001DA   657C               LDRB     R5,[R4, #+17]
   \   000001DC   0026               MOVS     R6,#+0
   \   000001DE   09E0               B        ??Lader_Event_17
   \                     ??Lader_Event_18:
   \   000001E0   0A21               MOVS     R1,#+10
   \   000001E2   4843               MULS     R0,R1,R0
   \   000001E4   801C               ADDS     R0,R0,#+2
   \   000001E6   2065               STR      R0,[R4, #+80]
   \                     ??Lader_Event_19:
   \   000001E8   ........           BL       MenuPaint
   \                     ??Lader_Event_20:
   \   000001EC   6D1C               ADDS     R5,R5,#+1
   \   000001EE   2D06               LSLS     R5,R5,#+24
   \   000001F0   2D0E               LSRS     R5,R5,#+24
   \   000001F2   761C               ADDS     R6,R6,#+1
   \                     ??Lader_Event_17:
   \   000001F4   032E               CMP      R6,#+3
   \   000001F6   E8DA               BGE      ??Lader_Event_15
   \   000001F8   3948               LDR      R0,??Lader_Event_1+0x1C  ;; X_up
   \   000001FA   0021               MOVS     R1,#+0
   \   000001FC   405E               LDRSH    R0,[R0, R1]
   \   000001FE   1421               MOVS     R1,#+20
   \   00000200   7143               MULS     R1,R6,R1
   \   00000202   0A00               MOVS     R2,R1
   \   00000204   521C               ADDS     R2,R2,#+1
   \   00000206   8242               CMP      R2,R0
   \   00000208   F0DA               BGE      ??Lader_Event_20
   \   0000020A   1531               ADDS     R1,R1,#+21
   \   0000020C   8842               CMP      R0,R1
   \   0000020E   EDDA               BGE      ??Lader_Event_20
   \   00000210   3448               LDR      R0,??Lader_Event_1+0x20  ;; Y_up
   \   00000212   0021               MOVS     R1,#+0
   \   00000214   405E               LDRSH    R0,[R0, R1]
   \   00000216   1521               MOVS     R1,#+21
   \   00000218   7943               MULS     R1,R7,R1
   \   0000021A   0A00               MOVS     R2,R1
   \   0000021C   2C32               ADDS     R2,R2,#+44
   \   0000021E   8242               CMP      R2,R0
   \   00000220   E4DA               BGE      ??Lader_Event_20
   \   00000222   4131               ADDS     R1,R1,#+65
   \   00000224   8842               CMP      R0,R1
   \   00000226   E1DA               BGE      ??Lader_Event_20
   \   00000228   2A48               LDR      R0,??Lader_Event_1+0x10  ;; 0x13d7e9
   \   0000022A   0078               LDRB     R0,[R0, #+0]
   \   0000022C   0028               CMP      R0,#+0
   \   0000022E   0AD1               BNE      ??Lader_Event_21
   \   00000230   2948               LDR      R0,??Lader_Event_1+0x14  ;; 0xfffff430
   \   00000232   8021               MOVS     R1,#+128
   \   00000234   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000236   0160               STR      R1,[R0, #+0]
   \   00000238   284A               LDR      R2,??Lader_Event_1+0x18  ;; ButtonBipCounter
   \   0000023A   2348               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   0000023C   03C8               LDM      R0!,{R0,R1}
   \   0000023E   0023               MOVS     R3,#+0
   \   00000240   0830               ADDS     R0,R0,#+8
   \   00000242   5941               ADCS     R1,R1,R3
   \   00000244   03C2               STM      R2!,{R0,R1}
   \                     ??Lader_Event_21:
   \   00000246   0198               LDR      R0,[SP, #+4]
   \   00000248   A074               STRB     R0,[R4, #+18]
   \   0000024A   2800               MOVS     R0,R5
   \   0000024C   401E               SUBS     R0,R0,#+1
   \   0000024E   E074               STRB     R0,[R4, #+19]
   \   00000250   0006               LSLS     R0,R0,#+24
   \   00000252   000E               LSRS     R0,R0,#+24
   \   00000254   FF28               CMP      R0,#+255
   \   00000256   206D               LDR      R0,[R4, #+80]
   \   00000258   C2D0               BEQ      ??Lader_Event_18
   \   0000025A   0A21               MOVS     R1,#+10
   \   0000025C   4843               MULS     R0,R1,R0
   \   0000025E   401C               ADDS     R0,R0,#+1
   \   00000260   2065               STR      R0,[R4, #+80]
   \   00000262   C1E7               B        ??Lader_Event_19
   2991                  }
   2992                  
   2993                   
   2994          
   2995          
   2996              
   2997                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??Lader_Event_16:
   \   00000264   1E48               LDR      R0,??Lader_Event_1+0x1C  ;; X_up
   \   00000266   0021               MOVS     R1,#+0
   \   00000268   405E               LDRSH    R0,[R0, R1]
   \   0000026A   2F28               CMP      R0,#+47
   \   0000026C   26DB               BLT      ??Lader_Event_22
   \   0000026E   3F28               CMP      R0,#+63
   \   00000270   24DA               BGE      ??Lader_Event_22
   \   00000272   1C48               LDR      R0,??Lader_Event_1+0x20  ;; Y_up
   \   00000274   405E               LDRSH    R0,[R0, R1]
   \   00000276   7128               CMP      R0,#+113
   \   00000278   20DB               BLT      ??Lader_Event_22
   \   0000027A   7F28               CMP      R0,#+127
   \   0000027C   1EDA               BGE      ??Lader_Event_22
   2998                  {
   2999                    Rej_poz=0;
   \   0000027E   0800               MOVS     R0,R1
   \   00000280   6065               STR      R0,[R4, #+84]
   3000                    if (ProgramChange) 
   \   00000282   207A               LDRB     R0,[R4, #+8]
   \   00000284   0028               CMP      R0,#+0
   \   00000286   206D               LDR      R0,[R4, #+80]
   \   00000288   03D0               BEQ      ??Lader_Event_23
   3001                    {
   3002                     
   3003                      MenuLevel=(MenuLevel*10+0);
   \   0000028A   0A21               MOVS     R1,#+10
   \   0000028C   4843               MULS     R0,R1,R0
   \   0000028E   2065               STR      R0,[R4, #+80]
   \   00000290   03E0               B        ??Lader_Event_24
   3004                       
   3005                      
   3006                    }else{
   3007                      MenuLevel=(MenuLevel/10);
   \                     ??Lader_Event_23:
   \   00000292   0A21               MOVS     R1,#+10
   \   00000294   ........           BL       __aeabi_idivmod
   \   00000298   2065               STR      R0,[R4, #+80]
   3008                    }
   3009                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \                     ??Lader_Event_24:
   \   0000029A   0E48               LDR      R0,??Lader_Event_1+0x10  ;; 0x13d7e9
   \   0000029C   0078               LDRB     R0,[R0, #+0]
   \   0000029E   0028               CMP      R0,#+0
   \   000002A0   0AD1               BNE      ??Lader_Event_25
   \   000002A2   0D48               LDR      R0,??Lader_Event_1+0x14  ;; 0xfffff430
   \   000002A4   8021               MOVS     R1,#+128
   \   000002A6   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000002A8   0160               STR      R1,[R0, #+0]
   \   000002AA   0C4A               LDR      R2,??Lader_Event_1+0x18  ;; ButtonBipCounter
   \   000002AC   0648               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000002AE   03C8               LDM      R0!,{R0,R1}
   \   000002B0   0023               MOVS     R3,#+0
   \   000002B2   0830               ADDS     R0,R0,#+8
   \   000002B4   5941               ADCS     R1,R1,R3
   \   000002B6   03C2               STM      R2!,{R0,R1}
   3010                    MenuPaint();
   \                     ??Lader_Event_25:
   \   000002B8   ........           BL       MenuPaint
   3011                  }  
   3012            
   3013               
   3014          
   3015                }//________________________________________________________________________
   \                     ??Lader_Event_22:
   \   000002BC   FEBC               POP      {R1-R7}
   \   000002BE   01BC               POP      {R0}
   \   000002C0   0047               BX       R0               ;; return
   \   000002C2   C046               Nop      
   \                     ??Lader_Event_1:
   \   000002C4   ........           DC32     TextToChangeLength
   \   000002C8   ........           DC32     g_counter
   \   000002CC   ........           DC32     X_down
   \   000002D0   ........           DC32     Y_down
   \   000002D4   E9D71300           DC32     0x13d7e9
   \   000002D8   30F4FFFF           DC32     0xfffff430
   \   000002DC   ........           DC32     ButtonBipCounter
   \   000002E0   ........           DC32     X_up
   \   000002E4   ........           DC32     Y_up
   3016              

   \                                 In section Debug.txt, align 4, keep-with-next
   3017          void WybProc(char col, char row)
   3018          {
   \                     WybProc:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   3019             row=2-row;
   \   00000002   0222               MOVS     R2,#+2
   \   00000004   561A               SUBS     R6,R2,R1
   3020             H_line(4+col*19,50+row*19,17,1);  
   \   00000006   3606               LSLS     R6,R6,#+24
   \   00000008   360E               LSRS     R6,R6,#+24
   \   0000000A   1321               MOVS     R1,#+19
   \   0000000C   4E43               MULS     R6,R1,R6
   \   0000000E   3400               MOVS     R4,R6
   \   00000010   3234               ADDS     R4,R4,#+50
   \   00000012   4843               MULS     R0,R1,R0
   \   00000014   0700               MOVS     R7,R0
   \   00000016   0123               MOVS     R3,#+1
   \   00000018   1122               MOVS     R2,#+17
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   001D               ADDS     R0,R0,#+4
   \   0000001E   0006               LSLS     R0,R0,#+24
   \   00000020   000E               LSRS     R0,R0,#+24
   \   00000022   ........           BL       H_line
   \   00000026   3D00               MOVS     R5,R7
   \   00000028   ED1C               ADDS     R5,R5,#+3
   \   0000002A   0123               MOVS     R3,#+1
   \   0000002C   1122               MOVS     R2,#+17
   \   0000002E   4336               ADDS     R6,R6,#+67
   \   00000030   3100               MOVS     R1,R6
   \   00000032   2800               MOVS     R0,R5
   \   00000034   0006               LSLS     R0,R0,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   3021             H_line(3+col*19,50+17+row*19,17,1); 
   \   00000038   ........           BL       H_line
   3022             V_line(3+col*19,50+row*19,18,1); 
   \   0000003C   0123               MOVS     R3,#+1
   \   0000003E   1222               MOVS     R2,#+18
   \   00000040   2100               MOVS     R1,R4
   \   00000042   2800               MOVS     R0,R5
   \   00000044   0006               LSLS     R0,R0,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   ........           BL       V_line
   3023             V_line(3+17+col*19,50+row*19,18,1); 
   \   0000004C   0123               MOVS     R3,#+1
   \   0000004E   1222               MOVS     R2,#+18
   \   00000050   2100               MOVS     R1,R4
   \   00000052   1437               ADDS     R7,R7,#+20
   \   00000054   3800               MOVS     R0,R7
   \   00000056   0006               LSLS     R0,R0,#+24
   \   00000058   000E               LSRS     R0,R0,#+24
   \   0000005A   ........           BL       V_line
   3024          }
   \   0000005E   F8BC               POP      {R3-R7}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   3025          
   3026          char SetTimeCell=1;

   \                                 In section Debug.txt, align 4, keep-with-next
   3027          void Procedure_Paint(void)
   3028                { 
   \                     Procedure_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   89B0               SUB      SP,SP,#+36
   3029                  
   3030                  
   3031                  List_Paint(Speech[g_leng].Procedura,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   D94C               LDR      R4,??Procedure_Paint_1  ;; 0xa7d
   \   00000006   DA4D               LDR      R5,??Procedure_Paint_1+0x4  ;; g_leng
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   D8A0               ADR      R0,??Procedure_Paint_1+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0321               MOVS     R1,#+3
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   6C22               MOVS     R2,#+108
   \   00000020   0121               MOVS     R1,#+1
   \   00000022   D548               LDR      R0,??Procedure_Paint_1+0xC  ;; 0x2ee
   \   00000024   2E68               LDR      R6,[R5, #+0]
   \   00000026   6643               MULS     R6,R4,R6
   \   00000028   D44F               LDR      R7,??Procedure_Paint_1+0x10  ;; Speech
   \   0000002A   BE19               ADDS     R6,R7,R6
   \   0000002C   3018               ADDS     R0,R6,R0
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   \   00000034   0126               MOVS     R6,#+1
   \   00000036   18E0               B        ??Procedure_Paint_2
   3032                
   3033                   char txt[5];
   3034                   //CharToStr(LaderLine+3-i, txt, 2); //(char Value, char *Vstring, char ill);
   3035          
   3036                   
   3037                   for (char i=1; i<4; i++)
   3038                   {
   3039                    H_line(3,49+i*19,18,3);  
   \                     ??Procedure_Paint_3:
   \   00000038   3700               MOVS     R7,R6
   \   0000003A   1320               MOVS     R0,#+19
   \   0000003C   4743               MULS     R7,R0,R7
   \   0000003E   3137               ADDS     R7,R7,#+49
   \   00000040   0323               MOVS     R3,#+3
   \   00000042   1222               MOVS     R2,#+18
   \   00000044   3900               MOVS     R1,R7
   \   00000046   1800               MOVS     R0,R3
   \   00000048   ........           BL       H_line
   3040                    H_line(22,49+i*19,18,3);  
   \   0000004C   0323               MOVS     R3,#+3
   \   0000004E   1222               MOVS     R2,#+18
   \   00000050   3900               MOVS     R1,R7
   \   00000052   1620               MOVS     R0,#+22
   \   00000054   ........           BL       H_line
   3041                    H_line(41,49+i*19,18,3);  
   \   00000058   0323               MOVS     R3,#+3
   \   0000005A   1222               MOVS     R2,#+18
   \   0000005C   3900               MOVS     R1,R7
   \   0000005E   2920               MOVS     R0,#+41
   \   00000060   ........           BL       H_line
   3042                    }
   \   00000064   761C               ADDS     R6,R6,#+1
   \   00000066   3606               LSLS     R6,R6,#+24
   \   00000068   360E               LSRS     R6,R6,#+24
   \                     ??Procedure_Paint_2:
   \   0000006A   3000               MOVS     R0,R6
   \   0000006C   0428               CMP      R0,#+4
   \   0000006E   E3D3               BCC      ??Procedure_Paint_3
   \   00000070   0026               MOVS     R6,#+0
   \   00000072   16E0               B        ??Procedure_Paint_4
   3043                    for (char i=0; i<4; i++)
   3044                    {
   3045                    V_line(2+i*19,69,18,3);  
   \                     ??Procedure_Paint_5:
   \   00000074   3700               MOVS     R7,R6
   \   00000076   1320               MOVS     R0,#+19
   \   00000078   4743               MULS     R7,R0,R7
   \   0000007A   BF1C               ADDS     R7,R7,#+2
   \   0000007C   0323               MOVS     R3,#+3
   \   0000007E   1222               MOVS     R2,#+18
   \   00000080   4521               MOVS     R1,#+69
   \   00000082   3800               MOVS     R0,R7
   \   00000084   0006               LSLS     R0,R0,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   ........           BL       V_line
   3046                    V_line(2+i*19,88,18,3);  
   \   0000008C   0323               MOVS     R3,#+3
   \   0000008E   1222               MOVS     R2,#+18
   \   00000090   5821               MOVS     R1,#+88
   \   00000092   3800               MOVS     R0,R7
   \   00000094   0006               LSLS     R0,R0,#+24
   \   00000096   000E               LSRS     R0,R0,#+24
   \   00000098   ........           BL       V_line
   3047                    }
   \   0000009C   761C               ADDS     R6,R6,#+1
   \   0000009E   3606               LSLS     R6,R6,#+24
   \   000000A0   360E               LSRS     R6,R6,#+24
   \                     ??Procedure_Paint_4:
   \   000000A2   3000               MOVS     R0,R6
   \   000000A4   0428               CMP      R0,#+4
   \   000000A6   E5D3               BCC      ??Procedure_Paint_5
   \   000000A8   82B0               SUB      SP,SP,#+8
   \   000000AA   0820               MOVS     R0,#+8
   \   000000AC   0090               STR      R0,[SP, #+0]
   \   000000AE   1023               MOVS     R3,#+16
   \   000000B0   5D22               MOVS     R2,#+93
   \   000000B2   1821               MOVS     R1,#+24
   \   000000B4   B248               LDR      R0,??Procedure_Paint_1+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 224
   3048                   
   3049                   CopyToCanvasPoint((char*)ProcSt_iko, 24, 93,16,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000B6   ........           BL       CopyToCanvasPoint
   \   000000BA   02B0               ADD      SP,SP,#+8
   3050                   CopyToCanvasPoint((char*)ProcSet_iko, 43, 93,16,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000BC   82B0               SUB      SP,SP,#+8
   \   000000BE   0820               MOVS     R0,#+8
   \   000000C0   0090               STR      R0,[SP, #+0]
   \   000000C2   1023               MOVS     R3,#+16
   \   000000C4   5D22               MOVS     R2,#+93
   \   000000C6   2B21               MOVS     R1,#+43
   \   000000C8   AE48               LDR      R0,??Procedure_Paint_1+0x18  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 240
   \   000000CA   ........           BL       CopyToCanvasPoint
   \   000000CE   02B0               ADD      SP,SP,#+8
   3051                   CopyToCanvasPoint((char*)ProcLog_iko, 5, 73,15,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000D0   82B0               SUB      SP,SP,#+8
   \   000000D2   0820               MOVS     R0,#+8
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   0F23               MOVS     R3,#+15
   \   000000D8   4922               MOVS     R2,#+73
   \   000000DA   0521               MOVS     R1,#+5
   \   000000DC   AA48               LDR      R0,??Procedure_Paint_1+0x1C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 280
   \   000000DE   ........           BL       CopyToCanvasPoint
   \   000000E2   02B0               ADD      SP,SP,#+8
   3052                   CopyToCanvasPoint((char*)ProcTime_iko, 25, 72,13,12);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   0C20               MOVS     R0,#+12
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   0D23               MOVS     R3,#+13
   \   000000EC   4822               MOVS     R2,#+72
   \   000000EE   1921               MOVS     R1,#+25
   \   000000F0   A648               LDR      R0,??Procedure_Paint_1+0x20  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 256
   \   000000F2   ........           BL       CopyToCanvasPoint
   \   000000F6   02B0               ADD      SP,SP,#+8
   3053                   CopyToCanvasPoint((char*)ProcAnl_iko, 43, 73,15,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000F8   82B0               SUB      SP,SP,#+8
   \   000000FA   0820               MOVS     R0,#+8
   \   000000FC   0090               STR      R0,[SP, #+0]
   \   000000FE   0F23               MOVS     R3,#+15
   \   00000100   4922               MOVS     R2,#+73
   \   00000102   2B21               MOVS     R1,#+43
   \   00000104   A248               LDR      R0,??Procedure_Paint_1+0x24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 296
   \   00000106   ........           BL       CopyToCanvasPoint
   \   0000010A   02B0               ADD      SP,SP,#+8
   3054                   
   3055          
   3056                           
   3057                   
   3058                   //jaka procedura
   3059                   
   3060                   _Procedure Prc=(gProg.Line[ChoseRow].Proc[ChoseCol]);
   \   0000010C   A14A               LDR      R2,??Procedure_Paint_1+0x28  ;; TextToChangeLength
   \   0000010E   02A8               ADD      R0,SP,#+8
   \   00000110   D17C               LDRB     R1,[R2, #+19]
   \   00000112   1823               MOVS     R3,#+24
   \   00000114   5943               MULS     R1,R3,R1
   \   00000116   927C               LDRB     R2,[R2, #+18]
   \   00000118   F023               MOVS     R3,#+240
   \   0000011A   5A43               MULS     R2,R3,R2
   \   0000011C   9E4B               LDR      R3,??Procedure_Paint_1+0x2C  ;; gProg
   \   0000011E   9A18               ADDS     R2,R3,R2
   \   00000120   5118               ADDS     R1,R2,R1
   \   00000122   1831               ADDS     R1,R1,#+24
   \   00000124   1822               MOVS     R2,#+24
   \   00000126   ........           BL       __aeabi_memcpy4
   3061                   
   3062                   
   3063                      if  (Prc.Type==None)
   \   0000012A   02AE               ADD      R6,SP,#+8
   \   0000012C   3078               LDRB     R0,[R6, #+0]
   \   0000012E   0028               CMP      R0,#+0
   \   00000130   02D1               BNE      ??Procedure_Paint_6
   3064                      {
   3065                        WybProc(0,0);
   \   00000132   0021               MOVS     R1,#+0
   \   00000134   ........           BL       WybProc
   3066                      }
   3067          
   3068                      
   3069                      if  ((Prc.Type>ProcLogStart) && (Prc.Type<ProcLogStop))
   \                     ??Procedure_Paint_6:
   \   00000138   3078               LDRB     R0,[R6, #+0]
   \   0000013A   0228               CMP      R0,#+2
   \   0000013C   25D3               BCC      ??Procedure_Paint_7
   \   0000013E   0D28               CMP      R0,#+13
   \   00000140   23D2               BCS      ??Procedure_Paint_7
   3070                      { 
   3071                        WybProc(0,1);
   \   00000142   0121               MOVS     R1,#+1
   \   00000144   0020               MOVS     R0,#+0
   \   00000146   ........           BL       WybProc
   3072                        txt[1]=0;
   \   0000014A   6F46               MOV      R7,SP
   \   0000014C   0020               MOVS     R0,#+0
   \   0000014E   7870               STRB     R0,[R7, #+1]
   3073                        txt[0]='>';
   \   00000150   3E20               MOVS     R0,#+62
   \   00000152   3870               STRB     R0,[R7, #+0]
   3074                        Button(txt,43,39,18,18);
   \   00000154   82B0               SUB      SP,SP,#+8
   \   00000156   1220               MOVS     R0,#+18
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   0300               MOVS     R3,R0
   \   0000015C   2722               MOVS     R2,#+39
   \   0000015E   2B21               MOVS     R1,#+43
   \   00000160   02A8               ADD      R0,SP,#+8
   \   00000162   ........           BL       Button
   \   00000166   02B0               ADD      SP,SP,#+8
   3075                        txt[0]='<';
   \   00000168   3C20               MOVS     R0,#+60
   \   0000016A   3870               STRB     R0,[R7, #+0]
   3076                        Button(txt,2,39,18,18);
   \   0000016C   82B0               SUB      SP,SP,#+8
   \   0000016E   1220               MOVS     R0,#+18
   \   00000170   0090               STR      R0,[SP, #+0]
   \   00000172   0300               MOVS     R3,R0
   \   00000174   2722               MOVS     R2,#+39
   \   00000176   0221               MOVS     R1,#+2
   \   00000178   02A8               ADD      R0,SP,#+8
   \   0000017A   ........           BL       Button
   \   0000017E   02B0               ADD      SP,SP,#+8
   3077                        PaintProc(21, 40, &Prc);
   \   00000180   02AA               ADD      R2,SP,#+8
   \   00000182   2821               MOVS     R1,#+40
   \   00000184   1520               MOVS     R0,#+21
   \   00000186   ........           BL       PaintProc
   3078                      }
   3079                      
   3080                      
   3081                      
   3082                      if  (((Prc.Type>ProcStStart) && (Prc.Type<ProcStStop)) || 
   3083                           ((Prc.Type>ProcSetStart) && (Prc.Type<ProcSetStop))||
   3084                           ((Prc.Type>ProcTimeStart) && (Prc.Type<ProcTimeStop))||
   3085                           ((Prc.Type>ProcAnalogStart) && (Prc.Type<ProcAnalogStop))
   3086                           ) 
   \                     ??Procedure_Paint_7:
   \   0000018A   3078               LDRB     R0,[R6, #+0]
   \   0000018C   1428               CMP      R0,#+20
   \   0000018E   01D3               BCC      ??Procedure_Paint_8
   \   00000190   1928               CMP      R0,#+25
   \   00000192   0DD3               BCC      ??Procedure_Paint_9
   \                     ??Procedure_Paint_8:
   \   00000194   2028               CMP      R0,#+32
   \   00000196   01D3               BCC      ??Procedure_Paint_10
   \   00000198   2828               CMP      R0,#+40
   \   0000019A   09D3               BCC      ??Procedure_Paint_9
   \                     ??Procedure_Paint_10:
   \   0000019C   2D28               CMP      R0,#+45
   \   0000019E   01D3               BCC      ??Procedure_Paint_11
   \   000001A0   3028               CMP      R0,#+48
   \   000001A2   05D3               BCC      ??Procedure_Paint_9
   \                     ??Procedure_Paint_11:
   \   000001A4   3728               CMP      R0,#+55
   \   000001A6   00D2               BCS      .+4
   \   000001A8   CAE3               B        ??Procedure_Paint_12
   \   000001AA   4028               CMP      R0,#+64
   \   000001AC   00D3               BCC      .+4
   \   000001AE   C7E3               B        ??Procedure_Paint_12
   3087                          
   3088                      { 
   3089                        txt[1]=0;
   \                     ??Procedure_Paint_9:
   \   000001B0   6F46               MOV      R7,SP
   \   000001B2   0020               MOVS     R0,#+0
   \   000001B4   7870               STRB     R0,[R7, #+1]
   \   000001B6   3E20               MOVS     R0,#+62
   \   000001B8   3870               STRB     R0,[R7, #+0]
   3090                        txt[0]='>';
   3091                        if (Prc.Type>ProcStStart) Button(txt,43,46,18,18);
   \   000001BA   3078               LDRB     R0,[R6, #+0]
   \   000001BC   1428               CMP      R0,#+20
   \   000001BE   09D3               BCC      ??Procedure_Paint_13
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   1220               MOVS     R0,#+18
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   0300               MOVS     R3,R0
   \   000001C8   2E22               MOVS     R2,#+46
   \   000001CA   2B21               MOVS     R1,#+43
   \   000001CC   02A8               ADD      R0,SP,#+8
   \   000001CE   ........           BL       Button
   \   000001D2   02B0               ADD      SP,SP,#+8
   3092                        
   3093                        
   3094                        if (
   3095                           (Prc.Type==ProcConstAnal) ||
   3096                           (Prc.Type==ProcLim) ||
   3097                           (Prc.Type==ProcEven) || 
   3098                           (Prc.Type==ProcPlus) || 
   3099                           (Prc.Type==ProcMinus) || 
   3100                           (Prc.Type==ProcMul) ||
   3101                           (Prc.Type==ProcDiv)
   3102                           )
   \                     ??Procedure_Paint_13:
   \   000001D4   3078               LDRB     R0,[R6, #+0]
   \   000001D6   3728               CMP      R0,#+55
   \   000001D8   0BD0               BEQ      ??Procedure_Paint_14
   \   000001DA   3A28               CMP      R0,#+58
   \   000001DC   09D0               BEQ      ??Procedure_Paint_14
   \   000001DE   3B28               CMP      R0,#+59
   \   000001E0   07D0               BEQ      ??Procedure_Paint_14
   \   000001E2   3C28               CMP      R0,#+60
   \   000001E4   05D0               BEQ      ??Procedure_Paint_14
   \   000001E6   3D28               CMP      R0,#+61
   \   000001E8   03D0               BEQ      ??Procedure_Paint_14
   \   000001EA   3E28               CMP      R0,#+62
   \   000001EC   01D0               BEQ      ??Procedure_Paint_14
   \   000001EE   3F28               CMP      R0,#+63
   \   000001F0   05D1               BNE      ??Procedure_Paint_15
   3103                        {
   3104                          PaintProc(20, 38, &Prc);
   \                     ??Procedure_Paint_14:
   \   000001F2   02AA               ADD      R2,SP,#+8
   \   000001F4   2621               MOVS     R1,#+38
   \   000001F6   1420               MOVS     R0,#+20
   \   000001F8   ........           BL       PaintProc
   \   000001FC   2EE0               B        ??Procedure_Paint_16
   3105                        }else if 
   3106                          (
   3107                           (Prc.Type==ProcGetReg) || 
   3108                           (Prc.Type==ProcSetReg)  
   3109                          )
   \                     ??Procedure_Paint_15:
   \   000001FE   3828               CMP      R0,#+56
   \   00000200   01D0               BEQ      ??Procedure_Paint_17
   \   00000202   3928               CMP      R0,#+57
   \   00000204   15D1               BNE      ??Procedure_Paint_18
   3110                          
   3111                        {  
   3112                          PaintProc(20, 41, &Prc);
   \                     ??Procedure_Paint_17:
   \   00000206   02AA               ADD      R2,SP,#+8
   \   00000208   2921               MOVS     R1,#+41
   \   0000020A   1420               MOVS     R0,#+20
   \   0000020C   ........           BL       PaintProc
   3113                          Label(" ",0,3,55,15,39,16,105,0);
   \   00000210   82B0               SUB      SP,SP,#+8
   \   00000212   0020               MOVS     R0,#+0
   \   00000214   0090               STR      R0,[SP, #+0]
   \   00000216   6921               MOVS     R1,#+105
   \   00000218   1020               MOVS     R0,#+16
   \   0000021A   03B4               PUSH     {R0,R1}
   \   0000021C   2721               MOVS     R1,#+39
   \   0000021E   0F20               MOVS     R0,#+15
   \   00000220   03B4               PUSH     {R0,R1}
   \   00000222   3723               MOVS     R3,#+55
   \   00000224   0322               MOVS     R2,#+3
   \   00000226   0021               MOVS     R1,#+0
   \   00000228   52A0               ADR      R0,??Procedure_Paint_1+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   0000022A   ........           BL       Label
   \   0000022E   06B0               ADD      SP,SP,#+24
   \   00000230   14E0               B        ??Procedure_Paint_16
   3114                        }else{
   3115                          PaintProc(20, 43, &Prc);
   \                     ??Procedure_Paint_18:
   \   00000232   02AA               ADD      R2,SP,#+8
   \   00000234   2B21               MOVS     R1,#+43
   \   00000236   1420               MOVS     R0,#+20
   \   00000238   ........           BL       PaintProc
   3116                          Label(" ",0,3,55,15,39,16,105,0);
   \   0000023C   82B0               SUB      SP,SP,#+8
   \   0000023E   0020               MOVS     R0,#+0
   \   00000240   0090               STR      R0,[SP, #+0]
   \   00000242   6921               MOVS     R1,#+105
   \   00000244   1020               MOVS     R0,#+16
   \   00000246   03B4               PUSH     {R0,R1}
   \   00000248   2721               MOVS     R1,#+39
   \   0000024A   0F20               MOVS     R0,#+15
   \   0000024C   03B4               PUSH     {R0,R1}
   \   0000024E   3723               MOVS     R3,#+55
   \   00000250   0322               MOVS     R2,#+3
   \   00000252   0021               MOVS     R1,#+0
   \   00000254   47A0               ADR      R0,??Procedure_Paint_1+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   00000256   ........           BL       Label
   \   0000025A   06B0               ADD      SP,SP,#+24
   3117                        }
   3118                        char Htmp=58;  //po³o¿enie napisu
   3119                        
   3120                        switch (Prc.Type)
   \                     ??Procedure_Paint_16:
   \   0000025C   3078               LDRB     R0,[R6, #+0]
   \   0000025E   1438               SUBS     R0,R0,#+20
   \   00000260   2B28               CMP      R0,#+43
   \   00000262   00D9               BLS      .+4
   \   00000264   84E2               B        ??Procedure_Paint_19
   \   00000266   02A1               ADR      R1,??Procedure_Paint_0
   \   00000268   4000               LSLS     R0,R0,#+1
   \   0000026A   095A               LDRH     R1,[R1, R0]
   \   0000026C   8F44               ADD      PC,PC,R1
   \   0000026E   C046               Nop      
   \                     ??Procedure_Paint_0:
   \   00000270   58008E00C600       DC16     +88,+142,+198,+1280
   \              0005        
   \   00000278   340100050005       DC16     +308,+1280,+1280,+1280
   \              0005        
   \   00000280   000500050005       DC16     +1280,+1280,+1280,+1280
   \              0005        
   \   00000288   6C01A201D801       DC16     +364,+418,+472,+472
   \              D801        
   \   00000290   0E0244027A02       DC16     +526,+580,+634,+688
   \              B002        
   \   00000298   000500050005       DC16     +1280,+1280,+1280,+1280
   \              0005        
   \   000002A0   0005E6021C03       DC16     +1280,+742,+796,+850
   \              5203        
   \   000002A8   000500050005       DC16     +1280,+1280,+1280,+1280
   \              0005        
   \   000002B0   000500050005       DC16     +1280,+1280,+1280,+904
   \              8803        
   \   000002B8   AA03CC03EE03       DC16     +938,+972,+1006,+1040
   \              1004        
   \   000002C0   320454047604       DC16     +1074,+1108,+1142,+1248
   \              E004        
   3121                        {
   3122                          case ProcStI: Label(Speech[g_leng].StanWejscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_20:
   \   000002C8   82B0               SUB      SP,SP,#+8
   \   000002CA   0020               MOVS     R0,#+0
   \   000002CC   0090               STR      R0,[SP, #+0]
   \   000002CE   6921               MOVS     R1,#+105
   \   000002D0   1020               MOVS     R0,#+16
   \   000002D2   03B4               PUSH     {R0,R1}
   \   000002D4   2721               MOVS     R1,#+39
   \   000002D6   0F20               MOVS     R0,#+15
   \   000002D8   03B4               PUSH     {R0,R1}
   \   000002DA   3A23               MOVS     R3,#+58
   \   000002DC   0322               MOVS     R2,#+3
   \   000002DE   0021               MOVS     R1,#+0
   \   000002E0   02B5               PUSH     {R1,LR}
   \   000002E2   2E49               LDR      R1,??Procedure_Paint_1+0x30  ;; 0x2fd
   \   000002E4   8C46               MOV      R12,R1
   \   000002E6   2968               LDR      R1,[R5, #+0]
   \   000002E8   6143               MULS     R1,R4,R1
   \   000002EA   2448               LDR      R0,??Procedure_Paint_1+0x10  ;; Speech
   \   000002EC   4018               ADDS     R0,R0,R1
   \   000002EE   6146               MOV      R1,R12
   \   000002F0   4018               ADDS     R0,R0,R1
   \   000002F2   0099               LDR      R1,[SP, #0]
   \   000002F4   02B0               ADD      SP,SP,#+8
   \   000002F6   ........           BL       Label
   \   000002FA   06B0               ADD      SP,SP,#+24
   \   000002FC   38E2               B        ??Procedure_Paint_19
   3123                          case ProcStNI: Label(Speech[g_leng].NegWejscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_21:
   \   000002FE   82B0               SUB      SP,SP,#+8
   \   00000300   0020               MOVS     R0,#+0
   \   00000302   0090               STR      R0,[SP, #+0]
   \   00000304   6921               MOVS     R1,#+105
   \   00000306   1020               MOVS     R0,#+16
   \   00000308   03B4               PUSH     {R0,R1}
   \   0000030A   2721               MOVS     R1,#+39
   \   0000030C   0F20               MOVS     R0,#+15
   \   0000030E   03B4               PUSH     {R0,R1}
   \   00000310   3A23               MOVS     R3,#+58
   \   00000312   0322               MOVS     R2,#+3
   \   00000314   0021               MOVS     R1,#+0
   \   00000316   02B5               PUSH     {R1,LR}
   \   00000318   C321               MOVS     R1,#+195
   \   0000031A   8900               LSLS     R1,R1,#+2        ;; #+780
   \   0000031C   8C46               MOV      R12,R1
   \   0000031E   2968               LDR      R1,[R5, #+0]
   \   00000320   6143               MULS     R1,R4,R1
   \   00000322   1648               LDR      R0,??Procedure_Paint_1+0x10  ;; Speech
   \   00000324   4018               ADDS     R0,R0,R1
   \   00000326   6146               MOV      R1,R12
   \   00000328   4018               ADDS     R0,R0,R1
   \   0000032A   0099               LDR      R1,[SP, #0]
   \   0000032C   02B0               ADD      SP,SP,#+8
   \   0000032E   ........           BL       Label
   \   00000332   06B0               ADD      SP,SP,#+24
   \   00000334   1CE2               B        ??Procedure_Paint_19
   3124                          case ProcStQ: Label(Speech[g_leng].StanWyjscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_22:
   \   00000336   82B0               SUB      SP,SP,#+8
   \   00000338   0020               MOVS     R0,#+0
   \   0000033A   0090               STR      R0,[SP, #+0]
   \   0000033C   6921               MOVS     R1,#+105
   \   0000033E   1020               MOVS     R0,#+16
   \   00000340   03B4               PUSH     {R0,R1}
   \   00000342   2721               MOVS     R1,#+39
   \   00000344   0F20               MOVS     R0,#+15
   \   00000346   03B4               PUSH     {R0,R1}
   \   00000348   3A23               MOVS     R3,#+58
   \   0000034A   0322               MOVS     R2,#+3
   \   0000034C   0021               MOVS     R1,#+0
   \   0000034E   02B5               PUSH     {R1,LR}
   \   00000350   1349               LDR      R1,??Procedure_Paint_1+0x34  ;; 0x31b
   \   00000352   8C46               MOV      R12,R1
   \   00000354   2968               LDR      R1,[R5, #+0]
   \   00000356   6143               MULS     R1,R4,R1
   \   00000358   0848               LDR      R0,??Procedure_Paint_1+0x10  ;; Speech
   \   0000035A   4018               ADDS     R0,R0,R1
   \   0000035C   6146               MOV      R1,R12
   \   0000035E   4018               ADDS     R0,R0,R1
   \   00000360   0099               LDR      R1,[SP, #0]
   \   00000362   02B0               ADD      SP,SP,#+8
   \   00000364   ........           BL       Label
   \   00000368   06B0               ADD      SP,SP,#+24
   \   0000036A   01E2               B        ??Procedure_Paint_19
   \                     ??Procedure_Paint_1:
   \   0000036C   7D0A0000           DC32     0xa7d
   \   00000370   ........           DC32     g_leng
   \   00000374   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000378   EE020000           DC32     0x2ee
   \   0000037C   ........           DC32     Speech
   \   00000380   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 224
   \   00000384   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 240
   \   00000388   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 280
   \   0000038C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 256
   \   00000390   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 296
   \   00000394   ........           DC32     TextToChangeLength
   \   00000398   ........           DC32     gProg
   \   0000039C   FD020000           DC32     0x2fd
   \   000003A0   1B030000           DC32     0x31b
   3125                          case ProcStS: Label(Speech[g_leng].StSceny,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_23:
   \   000003A4   82B0               SUB      SP,SP,#+8
   \   000003A6   0020               MOVS     R0,#+0
   \   000003A8   0090               STR      R0,[SP, #+0]
   \   000003AA   6921               MOVS     R1,#+105
   \   000003AC   1020               MOVS     R0,#+16
   \   000003AE   03B4               PUSH     {R0,R1}
   \   000003B0   2721               MOVS     R1,#+39
   \   000003B2   0F20               MOVS     R0,#+15
   \   000003B4   03B4               PUSH     {R0,R1}
   \   000003B6   3A23               MOVS     R3,#+58
   \   000003B8   0322               MOVS     R2,#+3
   \   000003BA   0021               MOVS     R1,#+0
   \   000003BC   02B5               PUSH     {R1,LR}
   \   000003BE   FF21               MOVS     R1,#+255
   \   000003C0   8900               LSLS     R1,R1,#+2        ;; #+1020
   \   000003C2   8C46               MOV      R12,R1
   \   000003C4   2968               LDR      R1,[R5, #+0]
   \   000003C6   6143               MULS     R1,R4,R1
   \   000003C8   CF48               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000003CA   4018               ADDS     R0,R0,R1
   \   000003CC   6146               MOV      R1,R12
   \   000003CE   4018               ADDS     R0,R0,R1
   \   000003D0   0099               LDR      R1,[SP, #0]
   \   000003D2   02B0               ADD      SP,SP,#+8
   \   000003D4   ........           BL       Label
   \   000003D8   06B0               ADD      SP,SP,#+24
   \   000003DA   C9E1               B        ??Procedure_Paint_19
   3126                         // case ProcStT: Label(Speech[g_leng].StanTimera,0,3,Htmp,15,39,16,105,0); break;
   3127                         // case ProcStNT: Label(Speech[g_leng].StanTimeraNeg,0,3,Htmp,15,39,16,105,0); break;
   3128                          case ProcWOUT: Label(Speech[g_leng].UstawWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_25:
   \   000003DC   82B0               SUB      SP,SP,#+8
   \   000003DE   0020               MOVS     R0,#+0
   \   000003E0   0090               STR      R0,[SP, #+0]
   \   000003E2   6921               MOVS     R1,#+105
   \   000003E4   1020               MOVS     R0,#+16
   \   000003E6   03B4               PUSH     {R0,R1}
   \   000003E8   2721               MOVS     R1,#+39
   \   000003EA   0F20               MOVS     R0,#+15
   \   000003EC   03B4               PUSH     {R0,R1}
   \   000003EE   3A23               MOVS     R3,#+58
   \   000003F0   0222               MOVS     R2,#+2
   \   000003F2   0021               MOVS     R1,#+0
   \   000003F4   02B5               PUSH     {R1,LR}
   \   000003F6   C549               LDR      R1,??Procedure_Paint_24+0x4  ;; 0x357
   \   000003F8   8C46               MOV      R12,R1
   \   000003FA   2968               LDR      R1,[R5, #+0]
   \   000003FC   6143               MULS     R1,R4,R1
   \   000003FE   C248               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000400   4018               ADDS     R0,R0,R1
   \   00000402   6146               MOV      R1,R12
   \   00000404   4018               ADDS     R0,R0,R1
   \   00000406   0099               LDR      R1,[SP, #0]
   \   00000408   02B0               ADD      SP,SP,#+8
   \   0000040A   ........           BL       Label
   \   0000040E   06B0               ADD      SP,SP,#+24
   \   00000410   AEE1               B        ??Procedure_Paint_19
   3129                          case ProcWOUTS: Label(Speech[g_leng].WlaczWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_26:
   \   00000412   82B0               SUB      SP,SP,#+8
   \   00000414   0020               MOVS     R0,#+0
   \   00000416   0090               STR      R0,[SP, #+0]
   \   00000418   6921               MOVS     R1,#+105
   \   0000041A   1020               MOVS     R0,#+16
   \   0000041C   03B4               PUSH     {R0,R1}
   \   0000041E   2721               MOVS     R1,#+39
   \   00000420   0F20               MOVS     R0,#+15
   \   00000422   03B4               PUSH     {R0,R1}
   \   00000424   3A23               MOVS     R3,#+58
   \   00000426   0222               MOVS     R2,#+2
   \   00000428   0021               MOVS     R1,#+0
   \   0000042A   02B5               PUSH     {R1,LR}
   \   0000042C   B849               LDR      R1,??Procedure_Paint_24+0x8  ;; 0x366
   \   0000042E   8C46               MOV      R12,R1
   \   00000430   2968               LDR      R1,[R5, #+0]
   \   00000432   6143               MULS     R1,R4,R1
   \   00000434   B448               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000436   4018               ADDS     R0,R0,R1
   \   00000438   6146               MOV      R1,R12
   \   0000043A   4018               ADDS     R0,R0,R1
   \   0000043C   0099               LDR      R1,[SP, #0]
   \   0000043E   02B0               ADD      SP,SP,#+8
   \   00000440   ........           BL       Label
   \   00000444   06B0               ADD      SP,SP,#+24
   \   00000446   93E1               B        ??Procedure_Paint_19
   3130                          case ProcWOUTR: Label(Speech[g_leng].ZerujWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_27:
   \   00000448   82B0               SUB      SP,SP,#+8
   \   0000044A   0020               MOVS     R0,#+0
   \   0000044C   0090               STR      R0,[SP, #+0]
   \   0000044E   6921               MOVS     R1,#+105
   \   00000450   1020               MOVS     R0,#+16
   \   00000452   03B4               PUSH     {R0,R1}
   \   00000454   2721               MOVS     R1,#+39
   \   00000456   0F20               MOVS     R0,#+15
   \   00000458   03B4               PUSH     {R0,R1}
   \   0000045A   3A23               MOVS     R3,#+58
   \   0000045C   0222               MOVS     R2,#+2
   \   0000045E   0021               MOVS     R1,#+0
   \   00000460   02B5               PUSH     {R1,LR}
   \   00000462   AC49               LDR      R1,??Procedure_Paint_24+0xC  ;; 0x375
   \   00000464   8C46               MOV      R12,R1
   \   00000466   2968               LDR      R1,[R5, #+0]
   \   00000468   6143               MULS     R1,R4,R1
   \   0000046A   A748               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   0000046C   4018               ADDS     R0,R0,R1
   \   0000046E   6146               MOV      R1,R12
   \   00000470   4018               ADDS     R0,R0,R1
   \   00000472   0099               LDR      R1,[SP, #0]
   \   00000474   02B0               ADD      SP,SP,#+8
   \   00000476   ........           BL       Label
   \   0000047A   06B0               ADD      SP,SP,#+24
   \   0000047C   78E1               B        ??Procedure_Paint_19
   3131                          case ProcWOUTC: Label(Speech[g_leng].ZerujWyjscie,0,2,Htmp,15,39,16,105,0); break;
   3132                          case ProcSetScn: Label(Speech[g_leng].W³Scene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_28:
   \   0000047E   82B0               SUB      SP,SP,#+8
   \   00000480   0020               MOVS     R0,#+0
   \   00000482   0090               STR      R0,[SP, #+0]
   \   00000484   6921               MOVS     R1,#+105
   \   00000486   1020               MOVS     R0,#+16
   \   00000488   03B4               PUSH     {R0,R1}
   \   0000048A   2721               MOVS     R1,#+39
   \   0000048C   0F20               MOVS     R0,#+15
   \   0000048E   03B4               PUSH     {R0,R1}
   \   00000490   3A23               MOVS     R3,#+58
   \   00000492   0222               MOVS     R2,#+2
   \   00000494   0021               MOVS     R1,#+0
   \   00000496   02B5               PUSH     {R1,LR}
   \   00000498   9F49               LDR      R1,??Procedure_Paint_24+0x10  ;; 0x3a2
   \   0000049A   8C46               MOV      R12,R1
   \   0000049C   2968               LDR      R1,[R5, #+0]
   \   0000049E   6143               MULS     R1,R4,R1
   \   000004A0   9948               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000004A2   4018               ADDS     R0,R0,R1
   \   000004A4   6146               MOV      R1,R12
   \   000004A6   4018               ADDS     R0,R0,R1
   \   000004A8   0099               LDR      R1,[SP, #0]
   \   000004AA   02B0               ADD      SP,SP,#+8
   \   000004AC   ........           BL       Label
   \   000004B0   06B0               ADD      SP,SP,#+24
   \   000004B2   5DE1               B        ??Procedure_Paint_19
   3133                          case ProcInc: Label(Speech[g_leng].IncScene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_29:
   \   000004B4   82B0               SUB      SP,SP,#+8
   \   000004B6   0020               MOVS     R0,#+0
   \   000004B8   0090               STR      R0,[SP, #+0]
   \   000004BA   6921               MOVS     R1,#+105
   \   000004BC   1020               MOVS     R0,#+16
   \   000004BE   03B4               PUSH     {R0,R1}
   \   000004C0   2721               MOVS     R1,#+39
   \   000004C2   0F20               MOVS     R0,#+15
   \   000004C4   03B4               PUSH     {R0,R1}
   \   000004C6   3A23               MOVS     R3,#+58
   \   000004C8   0222               MOVS     R2,#+2
   \   000004CA   0021               MOVS     R1,#+0
   \   000004CC   02B5               PUSH     {R1,LR}
   \   000004CE   9349               LDR      R1,??Procedure_Paint_24+0x14  ;; 0x3b1
   \   000004D0   8C46               MOV      R12,R1
   \   000004D2   2968               LDR      R1,[R5, #+0]
   \   000004D4   6143               MULS     R1,R4,R1
   \   000004D6   8C48               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000004D8   4018               ADDS     R0,R0,R1
   \   000004DA   6146               MOV      R1,R12
   \   000004DC   4018               ADDS     R0,R0,R1
   \   000004DE   0099               LDR      R1,[SP, #0]
   \   000004E0   02B0               ADD      SP,SP,#+8
   \   000004E2   ........           BL       Label
   \   000004E6   06B0               ADD      SP,SP,#+24
   \   000004E8   42E1               B        ??Procedure_Paint_19
   3134                          case ProcDec: Label(Speech[g_leng].DecScene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_30:
   \   000004EA   82B0               SUB      SP,SP,#+8
   \   000004EC   0020               MOVS     R0,#+0
   \   000004EE   0090               STR      R0,[SP, #+0]
   \   000004F0   6921               MOVS     R1,#+105
   \   000004F2   1020               MOVS     R0,#+16
   \   000004F4   03B4               PUSH     {R0,R1}
   \   000004F6   2721               MOVS     R1,#+39
   \   000004F8   0F20               MOVS     R0,#+15
   \   000004FA   03B4               PUSH     {R0,R1}
   \   000004FC   3A23               MOVS     R3,#+58
   \   000004FE   0222               MOVS     R2,#+2
   \   00000500   0021               MOVS     R1,#+0
   \   00000502   02B5               PUSH     {R1,LR}
   \   00000504   8101               LSLS     R1,R0,#+6
   \   00000506   8C46               MOV      R12,R1
   \   00000508   2968               LDR      R1,[R5, #+0]
   \   0000050A   6143               MULS     R1,R4,R1
   \   0000050C   7E48               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   0000050E   4018               ADDS     R0,R0,R1
   \   00000510   6146               MOV      R1,R12
   \   00000512   4018               ADDS     R0,R0,R1
   \   00000514   0099               LDR      R1,[SP, #0]
   \   00000516   02B0               ADD      SP,SP,#+8
   \   00000518   ........           BL       Label
   \   0000051C   06B0               ADD      SP,SP,#+24
   \   0000051E   27E1               B        ??Procedure_Paint_19
   3135                          case ProcSPK: Label(Speech[g_leng].Glosnik,0,2,Htmp,15,34,16,105,0); break;
   \                     ??Procedure_Paint_31:
   \   00000520   82B0               SUB      SP,SP,#+8
   \   00000522   0020               MOVS     R0,#+0
   \   00000524   0090               STR      R0,[SP, #+0]
   \   00000526   6921               MOVS     R1,#+105
   \   00000528   1020               MOVS     R0,#+16
   \   0000052A   03B4               PUSH     {R0,R1}
   \   0000052C   2221               MOVS     R1,#+34
   \   0000052E   0F20               MOVS     R0,#+15
   \   00000530   03B4               PUSH     {R0,R1}
   \   00000532   3A23               MOVS     R3,#+58
   \   00000534   0222               MOVS     R2,#+2
   \   00000536   0021               MOVS     R1,#+0
   \   00000538   02B5               PUSH     {R1,LR}
   \   0000053A   7949               LDR      R1,??Procedure_Paint_24+0x18  ;; 0x807
   \   0000053C   8C46               MOV      R12,R1
   \   0000053E   2968               LDR      R1,[R5, #+0]
   \   00000540   6143               MULS     R1,R4,R1
   \   00000542   7148               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000544   4018               ADDS     R0,R0,R1
   \   00000546   6146               MOV      R1,R12
   \   00000548   4018               ADDS     R0,R0,R1
   \   0000054A   0099               LDR      R1,[SP, #0]
   \   0000054C   02B0               ADD      SP,SP,#+8
   \   0000054E   ........           BL       Label
   \   00000552   06B0               ADD      SP,SP,#+24
   \   00000554   0CE1               B        ??Procedure_Paint_19
   3136                          case ProcTimerSet: Label(Speech[g_leng].Timer,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_32:
   \   00000556   82B0               SUB      SP,SP,#+8
   \   00000558   0020               MOVS     R0,#+0
   \   0000055A   0090               STR      R0,[SP, #+0]
   \   0000055C   6921               MOVS     R1,#+105
   \   0000055E   1020               MOVS     R0,#+16
   \   00000560   03B4               PUSH     {R0,R1}
   \   00000562   2721               MOVS     R1,#+39
   \   00000564   0F20               MOVS     R0,#+15
   \   00000566   03B4               PUSH     {R0,R1}
   \   00000568   3A23               MOVS     R3,#+58
   \   0000056A   0222               MOVS     R2,#+2
   \   0000056C   0021               MOVS     R1,#+0
   \   0000056E   02B5               PUSH     {R1,LR}
   \   00000570   6C49               LDR      R1,??Procedure_Paint_24+0x1C  ;; 0x3cf
   \   00000572   8C46               MOV      R12,R1
   \   00000574   2968               LDR      R1,[R5, #+0]
   \   00000576   6143               MULS     R1,R4,R1
   \   00000578   6348               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   0000057A   4018               ADDS     R0,R0,R1
   \   0000057C   6146               MOV      R1,R12
   \   0000057E   4018               ADDS     R0,R0,R1
   \   00000580   0099               LDR      R1,[SP, #0]
   \   00000582   02B0               ADD      SP,SP,#+8
   \   00000584   ........           BL       Label
   \   00000588   06B0               ADD      SP,SP,#+24
   \   0000058A   F1E0               B        ??Procedure_Paint_19
   3137                          case ProcClock: Label(Speech[g_leng].Zegar,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_33:
   \   0000058C   82B0               SUB      SP,SP,#+8
   \   0000058E   0020               MOVS     R0,#+0
   \   00000590   0090               STR      R0,[SP, #+0]
   \   00000592   6921               MOVS     R1,#+105
   \   00000594   1020               MOVS     R0,#+16
   \   00000596   03B4               PUSH     {R0,R1}
   \   00000598   2721               MOVS     R1,#+39
   \   0000059A   0F20               MOVS     R0,#+15
   \   0000059C   03B4               PUSH     {R0,R1}
   \   0000059E   3A23               MOVS     R3,#+58
   \   000005A0   0222               MOVS     R2,#+2
   \   000005A2   0021               MOVS     R1,#+0
   \   000005A4   02B5               PUSH     {R1,LR}
   \   000005A6   6049               LDR      R1,??Procedure_Paint_24+0x20  ;; 0x3de
   \   000005A8   8C46               MOV      R12,R1
   \   000005AA   2968               LDR      R1,[R5, #+0]
   \   000005AC   6143               MULS     R1,R4,R1
   \   000005AE   5648               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000005B0   4018               ADDS     R0,R0,R1
   \   000005B2   6146               MOV      R1,R12
   \   000005B4   4018               ADDS     R0,R0,R1
   \   000005B6   0099               LDR      R1,[SP, #0]
   \   000005B8   02B0               ADD      SP,SP,#+8
   \   000005BA   ........           BL       Label
   \   000005BE   06B0               ADD      SP,SP,#+24
   \   000005C0   D6E0               B        ??Procedure_Paint_19
   3138                          case ProcDay: Label(Speech[g_leng].DzienTygodnia,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_34:
   \   000005C2   82B0               SUB      SP,SP,#+8
   \   000005C4   0020               MOVS     R0,#+0
   \   000005C6   0090               STR      R0,[SP, #+0]
   \   000005C8   6921               MOVS     R1,#+105
   \   000005CA   1020               MOVS     R0,#+16
   \   000005CC   03B4               PUSH     {R0,R1}
   \   000005CE   2721               MOVS     R1,#+39
   \   000005D0   0F20               MOVS     R0,#+15
   \   000005D2   03B4               PUSH     {R0,R1}
   \   000005D4   3A23               MOVS     R3,#+58
   \   000005D6   0222               MOVS     R2,#+2
   \   000005D8   0021               MOVS     R1,#+0
   \   000005DA   02B5               PUSH     {R1,LR}
   \   000005DC   5349               LDR      R1,??Procedure_Paint_24+0x24  ;; 0x564
   \   000005DE   8C46               MOV      R12,R1
   \   000005E0   2968               LDR      R1,[R5, #+0]
   \   000005E2   6143               MULS     R1,R4,R1
   \   000005E4   4848               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000005E6   4018               ADDS     R0,R0,R1
   \   000005E8   6146               MOV      R1,R12
   \   000005EA   4018               ADDS     R0,R0,R1
   \   000005EC   0099               LDR      R1,[SP, #0]
   \   000005EE   02B0               ADD      SP,SP,#+8
   \   000005F0   ........           BL       Label
   \   000005F4   06B0               ADD      SP,SP,#+24
   \   000005F6   BBE0               B        ??Procedure_Paint_19
   3139                          case ProcConstAnal: Label("Const. ",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_35:
   \   000005F8   82B0               SUB      SP,SP,#+8
   \   000005FA   0020               MOVS     R0,#+0
   \   000005FC   0090               STR      R0,[SP, #+0]
   \   000005FE   6921               MOVS     R1,#+105
   \   00000600   1020               MOVS     R0,#+16
   \   00000602   03B4               PUSH     {R0,R1}
   \   00000604   2721               MOVS     R1,#+39
   \   00000606   0F20               MOVS     R0,#+15
   \   00000608   03B4               PUSH     {R0,R1}
   \   0000060A   3A23               MOVS     R3,#+58
   \   0000060C   0222               MOVS     R2,#+2
   \   0000060E   0021               MOVS     R1,#+0
   \   00000610   4748               LDR      R0,??Procedure_Paint_24+0x28  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 12
   \   00000612   ........           BL       Label
   \   00000616   06B0               ADD      SP,SP,#+24
   \   00000618   AAE0               B        ??Procedure_Paint_19
   3140                          case ProcGetReg: Label("Get reg.",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_36:
   \   0000061A   82B0               SUB      SP,SP,#+8
   \   0000061C   0020               MOVS     R0,#+0
   \   0000061E   0090               STR      R0,[SP, #+0]
   \   00000620   6921               MOVS     R1,#+105
   \   00000622   1020               MOVS     R0,#+16
   \   00000624   03B4               PUSH     {R0,R1}
   \   00000626   2721               MOVS     R1,#+39
   \   00000628   0F20               MOVS     R0,#+15
   \   0000062A   03B4               PUSH     {R0,R1}
   \   0000062C   3A23               MOVS     R3,#+58
   \   0000062E   0222               MOVS     R2,#+2
   \   00000630   0021               MOVS     R1,#+0
   \   00000632   4048               LDR      R0,??Procedure_Paint_24+0x2C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 20
   \   00000634   ........           BL       Label
   \   00000638   06B0               ADD      SP,SP,#+24
   \   0000063A   99E0               B        ??Procedure_Paint_19
   3141                          case ProcSetReg: Label("Set reg.",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_37:
   \   0000063C   82B0               SUB      SP,SP,#+8
   \   0000063E   0020               MOVS     R0,#+0
   \   00000640   0090               STR      R0,[SP, #+0]
   \   00000642   6921               MOVS     R1,#+105
   \   00000644   1020               MOVS     R0,#+16
   \   00000646   03B4               PUSH     {R0,R1}
   \   00000648   2721               MOVS     R1,#+39
   \   0000064A   0F20               MOVS     R0,#+15
   \   0000064C   03B4               PUSH     {R0,R1}
   \   0000064E   3A23               MOVS     R3,#+58
   \   00000650   0222               MOVS     R2,#+2
   \   00000652   0021               MOVS     R1,#+0
   \   00000654   3848               LDR      R0,??Procedure_Paint_24+0x30  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 32
   \   00000656   ........           BL       Label
   \   0000065A   06B0               ADD      SP,SP,#+24
   \   0000065C   88E0               B        ??Procedure_Paint_19
   3142                          case ProcLim: Label("1>2 Q=1",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_38:
   \   0000065E   82B0               SUB      SP,SP,#+8
   \   00000660   0020               MOVS     R0,#+0
   \   00000662   0090               STR      R0,[SP, #+0]
   \   00000664   6921               MOVS     R1,#+105
   \   00000666   1020               MOVS     R0,#+16
   \   00000668   03B4               PUSH     {R0,R1}
   \   0000066A   2721               MOVS     R1,#+39
   \   0000066C   0F20               MOVS     R0,#+15
   \   0000066E   03B4               PUSH     {R0,R1}
   \   00000670   3A23               MOVS     R3,#+58
   \   00000672   0222               MOVS     R2,#+2
   \   00000674   0021               MOVS     R1,#+0
   \   00000676   3148               LDR      R0,??Procedure_Paint_24+0x34  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 44
   \   00000678   ........           BL       Label
   \   0000067C   06B0               ADD      SP,SP,#+24
   \   0000067E   77E0               B        ??Procedure_Paint_19
   3143                          case ProcEven: Label("1=2 Q=1",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_39:
   \   00000680   82B0               SUB      SP,SP,#+8
   \   00000682   0020               MOVS     R0,#+0
   \   00000684   0090               STR      R0,[SP, #+0]
   \   00000686   6921               MOVS     R1,#+105
   \   00000688   1020               MOVS     R0,#+16
   \   0000068A   03B4               PUSH     {R0,R1}
   \   0000068C   2721               MOVS     R1,#+39
   \   0000068E   0F20               MOVS     R0,#+15
   \   00000690   03B4               PUSH     {R0,R1}
   \   00000692   3A23               MOVS     R3,#+58
   \   00000694   0222               MOVS     R2,#+2
   \   00000696   0021               MOVS     R1,#+0
   \   00000698   2948               LDR      R0,??Procedure_Paint_24+0x38  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 52
   \   0000069A   ........           BL       Label
   \   0000069E   06B0               ADD      SP,SP,#+24
   \   000006A0   66E0               B        ??Procedure_Paint_19
   3144                          case ProcPlus: Label("Q=1+2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_40:
   \   000006A2   82B0               SUB      SP,SP,#+8
   \   000006A4   0020               MOVS     R0,#+0
   \   000006A6   0090               STR      R0,[SP, #+0]
   \   000006A8   6921               MOVS     R1,#+105
   \   000006AA   1020               MOVS     R0,#+16
   \   000006AC   03B4               PUSH     {R0,R1}
   \   000006AE   2721               MOVS     R1,#+39
   \   000006B0   0F20               MOVS     R0,#+15
   \   000006B2   03B4               PUSH     {R0,R1}
   \   000006B4   3A23               MOVS     R3,#+58
   \   000006B6   0222               MOVS     R2,#+2
   \   000006B8   0021               MOVS     R1,#+0
   \   000006BA   2248               LDR      R0,??Procedure_Paint_24+0x3C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 60
   \   000006BC   ........           BL       Label
   \   000006C0   06B0               ADD      SP,SP,#+24
   \   000006C2   55E0               B        ??Procedure_Paint_19
   3145                          case ProcMinus: Label("Q=1-2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_41:
   \   000006C4   82B0               SUB      SP,SP,#+8
   \   000006C6   0020               MOVS     R0,#+0
   \   000006C8   0090               STR      R0,[SP, #+0]
   \   000006CA   6921               MOVS     R1,#+105
   \   000006CC   1020               MOVS     R0,#+16
   \   000006CE   03B4               PUSH     {R0,R1}
   \   000006D0   2721               MOVS     R1,#+39
   \   000006D2   0F20               MOVS     R0,#+15
   \   000006D4   03B4               PUSH     {R0,R1}
   \   000006D6   3A23               MOVS     R3,#+58
   \   000006D8   0222               MOVS     R2,#+2
   \   000006DA   0021               MOVS     R1,#+0
   \   000006DC   1A48               LDR      R0,??Procedure_Paint_24+0x40  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 68
   \   000006DE   ........           BL       Label
   \   000006E2   06B0               ADD      SP,SP,#+24
   \   000006E4   44E0               B        ??Procedure_Paint_19
   3146                          case ProcMul: Label("Q=1x2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_42:
   \   000006E6   82B0               SUB      SP,SP,#+8
   \   000006E8   0020               MOVS     R0,#+0
   \   000006EA   0090               STR      R0,[SP, #+0]
   \   000006EC   6921               MOVS     R1,#+105
   \   000006EE   1020               MOVS     R0,#+16
   \   000006F0   03B4               PUSH     {R0,R1}
   \   000006F2   2721               MOVS     R1,#+39
   \   000006F4   0F20               MOVS     R0,#+15
   \   000006F6   03B4               PUSH     {R0,R1}
   \   000006F8   3A23               MOVS     R3,#+58
   \   000006FA   0222               MOVS     R2,#+2
   \   000006FC   0021               MOVS     R1,#+0
   \   000006FE   1348               LDR      R0,??Procedure_Paint_24+0x44  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 76
   \   00000700   ........           BL       Label
   \   00000704   06B0               ADD      SP,SP,#+24
   \   00000706   33E0               B        ??Procedure_Paint_19
   \                     ??Procedure_Paint_24:
   \   00000708   ........           DC32     Speech
   \   0000070C   57030000           DC32     0x357
   \   00000710   66030000           DC32     0x366
   \   00000714   75030000           DC32     0x375
   \   00000718   A2030000           DC32     0x3a2
   \   0000071C   B1030000           DC32     0x3b1
   \   00000720   07080000           DC32     0x807
   \   00000724   CF030000           DC32     0x3cf
   \   00000728   DE030000           DC32     0x3de
   \   0000072C   64050000           DC32     0x564
   \   00000730   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 12
   \   00000734   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 20
   \   00000738   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 32
   \   0000073C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 44
   \   00000740   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 52
   \   00000744   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 60
   \   00000748   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 68
   \   0000074C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 76
   3147                          case ProcDiv: Label("Q=1/2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_43:
   \   00000750   82B0               SUB      SP,SP,#+8
   \   00000752   0020               MOVS     R0,#+0
   \   00000754   0090               STR      R0,[SP, #+0]
   \   00000756   6921               MOVS     R1,#+105
   \   00000758   1020               MOVS     R0,#+16
   \   0000075A   03B4               PUSH     {R0,R1}
   \   0000075C   2721               MOVS     R1,#+39
   \   0000075E   0F20               MOVS     R0,#+15
   \   00000760   03B4               PUSH     {R0,R1}
   \   00000762   3A23               MOVS     R3,#+58
   \   00000764   0222               MOVS     R2,#+2
   \   00000766   0021               MOVS     R1,#+0
   \   00000768   6648               LDR      R0,??Procedure_Paint_44  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 84
   \   0000076A   ........           BL       Label
   \   0000076E   06B0               ADD      SP,SP,#+24
   3148          
   3149                                       
   3150                        }
   3151                        
   3152                        
   3153                        
   3154                        if (
   3155                           (Prc.Type!=ProcInc) && 
   3156                           (Prc.Type!=ProcDec) &&
   3157                           ((Prc.Type<ProcTimeStart)
   3158                            || (Prc.Type==ProcGetReg)
   3159                            || (Prc.Type==ProcSetReg)
   3160                           )
   3161                          )
   \                     ??Procedure_Paint_19:
   \   00000770   3078               LDRB     R0,[R6, #+0]
   \   00000772   2528               CMP      R0,#+37
   \   00000774   67D0               BEQ      ??Procedure_Paint_45
   \   00000776   2628               CMP      R0,#+38
   \   00000778   65D0               BEQ      ??Procedure_Paint_45
   \   0000077A   2C28               CMP      R0,#+44
   \   0000077C   03D3               BCC      ??Procedure_Paint_46
   \   0000077E   3828               CMP      R0,#+56
   \   00000780   01D0               BEQ      ??Procedure_Paint_46
   \   00000782   3928               CMP      R0,#+57
   \   00000784   5FD1               BNE      ??Procedure_Paint_45
   3162                        {
   3163                          txt[0]='>';
   \                     ??Procedure_Paint_46:
   \   00000786   3E20               MOVS     R0,#+62
   \   00000788   3870               STRB     R0,[R7, #+0]
   3164                          Button(txt,43,25,18,18);
   \   0000078A   82B0               SUB      SP,SP,#+8
   \   0000078C   1220               MOVS     R0,#+18
   \   0000078E   0090               STR      R0,[SP, #+0]
   \   00000790   0300               MOVS     R3,R0
   \   00000792   1922               MOVS     R2,#+25
   \   00000794   2B21               MOVS     R1,#+43
   \   00000796   02A8               ADD      R0,SP,#+8
   \   00000798   ........           BL       Button
   \   0000079C   02B0               ADD      SP,SP,#+8
   3165                          txt[0]='<';
   \   0000079E   3C20               MOVS     R0,#+60
   \   000007A0   3870               STRB     R0,[R7, #+0]
   3166                          Button(txt,2,25,18,18);
   \   000007A2   82B0               SUB      SP,SP,#+8
   \   000007A4   1220               MOVS     R0,#+18
   \   000007A6   0090               STR      R0,[SP, #+0]
   \   000007A8   0300               MOVS     R3,R0
   \   000007AA   1922               MOVS     R2,#+25
   \   000007AC   0221               MOVS     R1,#+2
   \   000007AE   02A8               ADD      R0,SP,#+8
   \   000007B0   ........           BL       Button
   \   000007B4   02B0               ADD      SP,SP,#+8
   3167                         
   3168                          if (Prc.Type!=ProcSPK)
   \   000007B6   3078               LDRB     R0,[R6, #+0]
   \   000007B8   2728               CMP      R0,#+39
   \   000007BA   29D0               BEQ      ??Procedure_Paint_47
   3169                          {
   3170                            if (Prc.Nr>=0)
   \   000007BC   0120               MOVS     R0,#+1
   \   000007BE   3056               LDRSB    R0,[R6, R0]
   \   000007C0   0028               CMP      R0,#+0
   \   000007C2   0FD4               BMI      ??Procedure_Paint_48
   3171                            {
   3172                              txt[0]='N';txt[1]='r';txt[2]=':';
   \   000007C4   4E20               MOVS     R0,#+78
   \   000007C6   3870               STRB     R0,[R7, #+0]
   \   000007C8   7220               MOVS     R0,#+114
   \   000007CA   7870               STRB     R0,[R7, #+1]
   \   000007CC   3A20               MOVS     R0,#+58
   \   000007CE   B870               STRB     R0,[R7, #+2]
   3173                              CharToStr(Prc.Nr, &txt[3], 2); //(char Value, char *Vstring, char ill);
   \   000007D0   0222               MOVS     R2,#+2
   \   000007D2   3900               MOVS     R1,R7
   \   000007D4   C91C               ADDS     R1,R1,#+3
   \   000007D6   0120               MOVS     R0,#+1
   \   000007D8   3056               LDRSB    R0,[R6, R0]
   \   000007DA   0006               LSLS     R0,R0,#+24
   \   000007DC   000E               LSRS     R0,R0,#+24
   \   000007DE   ........           BL       CharToStr
   \   000007E2   05E0               B        ??Procedure_Paint_49
   3174                              
   3175                            }else{
   3176                              txt[0]='V';txt[1]='a';txt[2]='r';
   \                     ??Procedure_Paint_48:
   \   000007E4   5620               MOVS     R0,#+86
   \   000007E6   3870               STRB     R0,[R7, #+0]
   \   000007E8   6120               MOVS     R0,#+97
   \   000007EA   7870               STRB     R0,[R7, #+1]
   \   000007EC   7220               MOVS     R0,#+114
   \   000007EE   B870               STRB     R0,[R7, #+2]
   3177                            }
   3178                            Label(txt,2,21,29,5,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \                     ??Procedure_Paint_49:
   \   000007F0   82B0               SUB      SP,SP,#+8
   \   000007F2   0020               MOVS     R0,#+0
   \   000007F4   0090               STR      R0,[SP, #+0]
   \   000007F6   6921               MOVS     R1,#+105
   \   000007F8   03B4               PUSH     {R0,R1}
   \   000007FA   1421               MOVS     R1,#+20
   \   000007FC   0520               MOVS     R0,#+5
   \   000007FE   03B4               PUSH     {R0,R1}
   \   00000800   1D23               MOVS     R3,#+29
   \   00000802   1522               MOVS     R2,#+21
   \   00000804   0221               MOVS     R1,#+2
   \   00000806   06A8               ADD      R0,SP,#+24
   \   00000808   ........           BL       Label
   \   0000080C   06B0               ADD      SP,SP,#+24
   \   0000080E   1AE0               B        ??Procedure_Paint_45
   3179                          }else{
   3180                            if(Prc.Tag.SpeakerType>SPK_Amount-1) Prc.Tag.SpeakerType=0;
   \                     ??Procedure_Paint_47:
   \   00000810   307A               LDRB     R0,[R6, #+8]
   \   00000812   0428               CMP      R0,#+4
   \   00000814   01D3               BCC      ??Procedure_Paint_50
   \   00000816   0020               MOVS     R0,#+0
   \   00000818   3072               STRB     R0,[R6, #+8]
   3181                            CopyToCanvasPoint((char*)SPK_1[Prc.Tag.SpeakerType], 23,31, 16,5); 
   \                     ??Procedure_Paint_50:
   \   0000081A   82B0               SUB      SP,SP,#+8
   \   0000081C   0520               MOVS     R0,#+5
   \   0000081E   0090               STR      R0,[SP, #+0]
   \   00000820   1023               MOVS     R3,#+16
   \   00000822   1F22               MOVS     R2,#+31
   \   00000824   1721               MOVS     R1,#+23
   \   00000826   02B5               PUSH     {R1,LR}
   \   00000828   9446               MOV      R12,R2
   \   0000082A   9C21               MOVS     R1,#+156
   \   0000082C   4900               LSLS     R1,R1,#+1        ;; #+312
   \   0000082E   307A               LDRB     R0,[R6, #+8]
   \   00000830   0A22               MOVS     R2,#+10
   \   00000832   5043               MULS     R0,R2,R0
   \   00000834   344A               LDR      R2,??Procedure_Paint_44+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000836   1018               ADDS     R0,R2,R0
   \   00000838   4018               ADDS     R0,R0,R1
   \   0000083A   6246               MOV      R2,R12
   \   0000083C   0099               LDR      R1,[SP, #0]
   \   0000083E   02B0               ADD      SP,SP,#+8
   \   00000840   ........           BL       CopyToCanvasPoint
   \   00000844   02B0               ADD      SP,SP,#+8
   3182                          }
   3183                        }
   3184                        
   3185                        if ((Prc.Type==ProcStI) || (Prc.Type==ProcStNI) || (Prc.Type==ProcStQ) || (Prc.Type==ProcWOUT) || (Prc.Type==ProcWOUTS) || (Prc.Type==ProcWOUTR)|| (Prc.Type==ProcWOUTC))
   \                     ??Procedure_Paint_45:
   \   00000846   3078               LDRB     R0,[R6, #+0]
   \   00000848   1428               CMP      R0,#+20
   \   0000084A   0BD0               BEQ      ??Procedure_Paint_51
   \   0000084C   1528               CMP      R0,#+21
   \   0000084E   09D0               BEQ      ??Procedure_Paint_51
   \   00000850   1628               CMP      R0,#+22
   \   00000852   07D0               BEQ      ??Procedure_Paint_51
   \   00000854   2028               CMP      R0,#+32
   \   00000856   05D0               BEQ      ??Procedure_Paint_51
   \   00000858   2128               CMP      R0,#+33
   \   0000085A   03D0               BEQ      ??Procedure_Paint_51
   \   0000085C   2228               CMP      R0,#+34
   \   0000085E   01D0               BEQ      ??Procedure_Paint_51
   \   00000860   2328               CMP      R0,#+35
   \   00000862   6DD1               BNE      ??Procedure_Paint_12
   3186                        {
   3187                          txt[1]=0;
   \                     ??Procedure_Paint_51:
   \   00000864   0020               MOVS     R0,#+0
   \   00000866   7870               STRB     R0,[R7, #+1]
   3188                          txt[0]='>';
   \   00000868   3E20               MOVS     R0,#+62
   \   0000086A   3870               STRB     R0,[R7, #+0]
   3189                          Button(txt,43,4,18,18);
   \   0000086C   82B0               SUB      SP,SP,#+8
   \   0000086E   1220               MOVS     R0,#+18
   \   00000870   0090               STR      R0,[SP, #+0]
   \   00000872   0300               MOVS     R3,R0
   \   00000874   0422               MOVS     R2,#+4
   \   00000876   2B21               MOVS     R1,#+43
   \   00000878   02A8               ADD      R0,SP,#+8
   \   0000087A   ........           BL       Button
   \   0000087E   02B0               ADD      SP,SP,#+8
   3190                          txt[0]='<';
   \   00000880   3C20               MOVS     R0,#+60
   \   00000882   3870               STRB     R0,[R7, #+0]
   3191                          Button(txt,2,4,18,18);
   \   00000884   82B0               SUB      SP,SP,#+8
   \   00000886   1220               MOVS     R0,#+18
   \   00000888   0090               STR      R0,[SP, #+0]
   \   0000088A   0300               MOVS     R3,R0
   \   0000088C   0422               MOVS     R2,#+4
   \   0000088E   0221               MOVS     R1,#+2
   \   00000890   02A8               ADD      R0,SP,#+8
   \   00000892   ........           BL       Button
   \   00000896   02B0               ADD      SP,SP,#+8
   3192                          if (Prc.Nr>=0)
   \   00000898   0120               MOVS     R0,#+1
   \   0000089A   3056               LDRSB    R0,[R6, R0]
   \   0000089C   0028               CMP      R0,#+0
   \   0000089E   35D4               BMI      ??Procedure_Paint_52
   3193                            {
   3194                              txt[0]='P';txt[1]='o';txt[2]='r';txt[3]='t';txt[4]=':';
   \   000008A0   5020               MOVS     R0,#+80
   \   000008A2   3870               STRB     R0,[R7, #+0]
   \   000008A4   6F20               MOVS     R0,#+111
   \   000008A6   7870               STRB     R0,[R7, #+1]
   \   000008A8   7220               MOVS     R0,#+114
   \   000008AA   B870               STRB     R0,[R7, #+2]
   \   000008AC   7420               MOVS     R0,#+116
   \   000008AE   F870               STRB     R0,[R7, #+3]
   \   000008B0   3A20               MOVS     R0,#+58
   \   000008B2   3871               STRB     R0,[R7, #+4]
   3195                              Label(txt,2,21,12,5,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000008B4   82B0               SUB      SP,SP,#+8
   \   000008B6   0020               MOVS     R0,#+0
   \   000008B8   0090               STR      R0,[SP, #+0]
   \   000008BA   6921               MOVS     R1,#+105
   \   000008BC   03B4               PUSH     {R0,R1}
   \   000008BE   1421               MOVS     R1,#+20
   \   000008C0   0520               MOVS     R0,#+5
   \   000008C2   03B4               PUSH     {R0,R1}
   \   000008C4   0C23               MOVS     R3,#+12
   \   000008C6   1522               MOVS     R2,#+21
   \   000008C8   0221               MOVS     R1,#+2
   \   000008CA   06A8               ADD      R0,SP,#+24
   \   000008CC   ........           BL       Label
   \   000008D0   06B0               ADD      SP,SP,#+24
   3196                              txt[1]=0;txt[2]=0;
   \   000008D2   0020               MOVS     R0,#+0
   \   000008D4   7870               STRB     R0,[R7, #+1]
   \   000008D6   B870               STRB     R0,[R7, #+2]
   3197                              CharToStr(Prc.Tag.Port, txt, 2); //(char Value, char *Vstring, char ill);
   \   000008D8   0222               MOVS     R2,#+2
   \   000008DA   6946               MOV      R1,SP
   \   000008DC   307A               LDRB     R0,[R6, #+8]
   \   000008DE   ........           BL       CharToStr
   3198                              Label(txt,0,26,4,2,10,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)
   \   000008E2   82B0               SUB      SP,SP,#+8
   \   000008E4   0020               MOVS     R0,#+0
   \   000008E6   0090               STR      R0,[SP, #+0]
   \   000008E8   6921               MOVS     R1,#+105
   \   000008EA   03B4               PUSH     {R0,R1}
   \   000008EC   0A21               MOVS     R1,#+10
   \   000008EE   0220               MOVS     R0,#+2
   \   000008F0   03B4               PUSH     {R0,R1}
   \   000008F2   0423               MOVS     R3,#+4
   \   000008F4   1A22               MOVS     R2,#+26
   \   000008F6   0021               MOVS     R1,#+0
   \   000008F8   06A8               ADD      R0,SP,#+24
   \   000008FA   ........           BL       Label
   \   000008FE   06B0               ADD      SP,SP,#+24
   \   00000900   1EE0               B        ??Procedure_Paint_12
   \   00000902   C046               Nop      
   \                     ??Procedure_Paint_44:
   \   00000904   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 84
   \   00000908   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   3199                            }else{
   3200                              txt[0]='b';txt[1]=0;txt[2]=0;
   \                     ??Procedure_Paint_52:
   \   0000090C   6220               MOVS     R0,#+98
   \   0000090E   3870               STRB     R0,[R7, #+0]
   \   00000910   0020               MOVS     R0,#+0
   \   00000912   7870               STRB     R0,[R7, #+1]
   \   00000914   B870               STRB     R0,[R7, #+2]
   3201                              CharToStr(Prc.Tag.Port, txt+1, 2); //(char Value, char *Vstring, char ill);
   \   00000916   0222               MOVS     R2,#+2
   \   00000918   7F1C               ADDS     R7,R7,#+1
   \   0000091A   3900               MOVS     R1,R7
   \   0000091C   307A               LDRB     R0,[R6, #+8]
   \   0000091E   ........           BL       CharToStr
   3202                              Label(txt,2,21,12,3,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000922   82B0               SUB      SP,SP,#+8
   \   00000924   0020               MOVS     R0,#+0
   \   00000926   0090               STR      R0,[SP, #+0]
   \   00000928   6921               MOVS     R1,#+105
   \   0000092A   03B4               PUSH     {R0,R1}
   \   0000092C   1421               MOVS     R1,#+20
   \   0000092E   0320               MOVS     R0,#+3
   \   00000930   03B4               PUSH     {R0,R1}
   \   00000932   0C23               MOVS     R3,#+12
   \   00000934   1522               MOVS     R2,#+21
   \   00000936   0221               MOVS     R1,#+2
   \   00000938   06A8               ADD      R0,SP,#+24
   \   0000093A   ........           BL       Label
   \   0000093E   06B0               ADD      SP,SP,#+24
   3203                          
   3204                             /* txt[1]=0;txt[2]=0;
   3205                          CharToStr(Prc.Tag.Port, txt, 2); //(char Value, char *Vstring, char ill);
   3206                          Label(txt,0,26,4,2,10,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)
   3207                              */
   3208                            }
   3209                           
   3210                        }
   3211                      }
   3212          
   3213                    
   3214                      if ((Prc.Type>ProcStStart) && (Prc.Type<ProcStStop)) WybProc(1,0);
   \                     ??Procedure_Paint_12:
   \   00000940   3078               LDRB     R0,[R6, #+0]
   \   00000942   1428               CMP      R0,#+20
   \   00000944   05D3               BCC      ??Procedure_Paint_53
   \   00000946   1928               CMP      R0,#+25
   \   00000948   03D2               BCS      ??Procedure_Paint_53
   \   0000094A   0021               MOVS     R1,#+0
   \   0000094C   0120               MOVS     R0,#+1
   \   0000094E   ........           BL       WybProc
   3215                        
   3216                      
   3217                      
   3218                      if  ((Prc.Type>ProcSetStart) && (Prc.Type<ProcSetStop))
   \                     ??Procedure_Paint_53:
   \   00000952   3078               LDRB     R0,[R6, #+0]
   \   00000954   2028               CMP      R0,#+32
   \   00000956   05D3               BCC      ??Procedure_Paint_54
   \   00000958   2828               CMP      R0,#+40
   \   0000095A   03D2               BCS      ??Procedure_Paint_54
   3219                      { 
   3220                        WybProc(2,0);
   \   0000095C   0021               MOVS     R1,#+0
   \   0000095E   0220               MOVS     R0,#+2
   \   00000960   ........           BL       WybProc
   3221                      }
   3222          
   3223           
   3224          
   3225                      if  ((Prc.Type>ProcTimeStart) && (Prc.Type<ProcTimeStop))
   \                     ??Procedure_Paint_54:
   \   00000964   3078               LDRB     R0,[R6, #+0]
   \   00000966   2D28               CMP      R0,#+45
   \   00000968   05D3               BCC      ??Procedure_Paint_55
   \   0000096A   3028               CMP      R0,#+48
   \   0000096C   03D2               BCS      ??Procedure_Paint_55
   3226                      { 
   3227                        WybProc(1,1);
   \   0000096E   0121               MOVS     R1,#+1
   \   00000970   0800               MOVS     R0,R1
   \   00000972   ........           BL       WybProc
   3228                      } 
   3229          
   3230                      if  ((Prc.Type>ProcAnalogStart) && (Prc.Type<ProcAnalogStop))
   \                     ??Procedure_Paint_55:
   \   00000976   3078               LDRB     R0,[R6, #+0]
   \   00000978   3728               CMP      R0,#+55
   \   0000097A   05D3               BCC      ??Procedure_Paint_56
   \   0000097C   4028               CMP      R0,#+64
   \   0000097E   03D2               BCS      ??Procedure_Paint_56
   3231                      { 
   3232                        WybProc(2,1);
   \   00000980   0121               MOVS     R1,#+1
   \   00000982   0220               MOVS     R0,#+2
   \   00000984   ........           BL       WybProc
   3233                      } 
   3234                      
   3235                  if ((Prc.Type==ProcTimerSet))
   \                     ??Procedure_Paint_56:
   \   00000988   3078               LDRB     R0,[R6, #+0]
   \   0000098A   2D28               CMP      R0,#+45
   \   0000098C   65D1               BNE      ??Procedure_Paint_57
   3236                  {
   3237                    Label(Speech[g_leng].IleSek,0,3,37,13,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000098E   82B0               SUB      SP,SP,#+8
   \   00000990   0020               MOVS     R0,#+0
   \   00000992   0090               STR      R0,[SP, #+0]
   \   00000994   7F21               MOVS     R1,#+127
   \   00000996   0120               MOVS     R0,#+1
   \   00000998   03B4               PUSH     {R0,R1}
   \   0000099A   2121               MOVS     R1,#+33
   \   0000099C   0D20               MOVS     R0,#+13
   \   0000099E   03B4               PUSH     {R0,R1}
   \   000009A0   2523               MOVS     R3,#+37
   \   000009A2   0322               MOVS     R2,#+3
   \   000009A4   0021               MOVS     R1,#+0
   \   000009A6   BA4F               LDR      R7,??Procedure_Paint_58  ;; 0x3ed
   \   000009A8   BC46               MOV      R12,R7
   \   000009AA   2F68               LDR      R7,[R5, #+0]
   \   000009AC   6743               MULS     R7,R4,R7
   \   000009AE   B948               LDR      R0,??Procedure_Paint_58+0x4  ;; Speech
   \   000009B0   C019               ADDS     R0,R0,R7
   \   000009B2   6746               MOV      R7,R12
   \   000009B4   C019               ADDS     R0,R0,R7
   \   000009B6   ........           BL       Label
   \   000009BA   06B0               ADD      SP,SP,#+24
   3238                              
   3239                    FloToStr(Prc.Tag.SetCounter , txt, 9); //(char Value, char *Vstring, char ill);
   \   000009BC   0922               MOVS     R2,#+9
   \   000009BE   6946               MOV      R1,SP
   \   000009C0   02B5               PUSH     {R1,LR}
   \   000009C2   1700               MOVS     R7,R2
   \   000009C4   0698               LDR      R0,[SP, #+24]
   \   000009C6   ........           BL       __aeabi_ui2f
   \   000009CA   3A00               MOVS     R2,R7
   \   000009CC   0099               LDR      R1,[SP, #0]
   \   000009CE   02B0               ADD      SP,SP,#+8
   \   000009D0   ........           BL       FloToStr
   3240                    Label(txt,0,12,26,9,44,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000009D4   82B0               SUB      SP,SP,#+8
   \   000009D6   0020               MOVS     R0,#+0
   \   000009D8   0090               STR      R0,[SP, #+0]
   \   000009DA   7F21               MOVS     R1,#+127
   \   000009DC   0120               MOVS     R0,#+1
   \   000009DE   03B4               PUSH     {R0,R1}
   \   000009E0   2C21               MOVS     R1,#+44
   \   000009E2   3800               MOVS     R0,R7
   \   000009E4   03B4               PUSH     {R0,R1}
   \   000009E6   1A23               MOVS     R3,#+26
   \   000009E8   0C22               MOVS     R2,#+12
   \   000009EA   0021               MOVS     R1,#+0
   \   000009EC   06A8               ADD      R0,SP,#+24
   \   000009EE   ........           BL       Label
   \   000009F2   06B0               ADD      SP,SP,#+24
   3241          
   3242                    H_line(10,36,46,1); // (char X, int Y, char lenght, char typ) 
   \   000009F4   0123               MOVS     R3,#+1
   \   000009F6   2E22               MOVS     R2,#+46
   \   000009F8   2421               MOVS     R1,#+36
   \   000009FA   0A20               MOVS     R0,#+10
   \   000009FC   ........           BL       H_line
   3243                    H_line(10,24,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000A00   0123               MOVS     R3,#+1
   \   00000A02   2E22               MOVS     R2,#+46
   \   00000A04   1821               MOVS     R1,#+24
   \   00000A06   0A20               MOVS     R0,#+10
   \   00000A08   ........           BL       H_line
   3244                    V_line(10,25,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000A0C   0123               MOVS     R3,#+1
   \   00000A0E   0B22               MOVS     R2,#+11
   \   00000A10   1921               MOVS     R1,#+25
   \   00000A12   0A20               MOVS     R0,#+10
   \   00000A14   ........           BL       V_line
   3245                    V_line(55,25,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000A18   0123               MOVS     R3,#+1
   \   00000A1A   0B22               MOVS     R2,#+11
   \   00000A1C   1921               MOVS     R1,#+25
   \   00000A1E   3720               MOVS     R0,#+55
   \   00000A20   ........           BL       V_line
   3246                    
   3247                    
   3248                    
   3249                    txt[1]=0;
   \   00000A24   6F46               MOV      R7,SP
   \   00000A26   0020               MOVS     R0,#+0
   \   00000A28   7870               STRB     R0,[R7, #+1]
   3250                    txt[0]=30;
   \   00000A2A   1E20               MOVS     R0,#+30
   \   00000A2C   3870               STRB     R0,[R7, #+0]
   3251                    Button(txt,33,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000A2E   82B0               SUB      SP,SP,#+8
   \   00000A30   1320               MOVS     R0,#+19
   \   00000A32   0090               STR      R0,[SP, #+0]
   \   00000A34   0300               MOVS     R3,R0
   \   00000A36   0322               MOVS     R2,#+3
   \   00000A38   2121               MOVS     R1,#+33
   \   00000A3A   02A8               ADD      R0,SP,#+8
   \   00000A3C   ........           BL       Button
   \   00000A40   02B0               ADD      SP,SP,#+8
   3252                    txt[0]=31;
   \   00000A42   1F20               MOVS     R0,#+31
   \   00000A44   3870               STRB     R0,[R7, #+0]
   3253                    Button(txt,12,3,19,19); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000A46   82B0               SUB      SP,SP,#+8
   \   00000A48   1320               MOVS     R0,#+19
   \   00000A4A   0090               STR      R0,[SP, #+0]
   \   00000A4C   0300               MOVS     R3,R0
   \   00000A4E   0322               MOVS     R2,#+3
   \   00000A50   0C21               MOVS     R1,#+12
   \   00000A52   02A8               ADD      R0,SP,#+8
   \   00000A54   ........           BL       Button
   \   00000A58   02B0               ADD      SP,SP,#+8
   3254                 
   3255                  }
   3256                  
   3257                  
   3258                  
   3259                  if (Prc.Type==ProcClock)
   \                     ??Procedure_Paint_57:
   \   00000A5A   3078               LDRB     R0,[R6, #+0]
   \   00000A5C   2E28               CMP      R0,#+46
   \   00000A5E   00D0               BEQ      .+4
   \   00000A60   86E0               B        ??Procedure_Paint_59
   3260                  {
   3261          
   3262                 
   3263                 Label(   Speech[g_leng].Typ_,0,4,33,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A62   82B0               SUB      SP,SP,#+8
   \   00000A64   0020               MOVS     R0,#+0
   \   00000A66   0090               STR      R0,[SP, #+0]
   \   00000A68   7F21               MOVS     R1,#+127
   \   00000A6A   0120               MOVS     R0,#+1
   \   00000A6C   03B4               PUSH     {R0,R1}
   \   00000A6E   2121               MOVS     R1,#+33
   \   00000A70   0A20               MOVS     R0,#+10
   \   00000A72   03B4               PUSH     {R0,R1}
   \   00000A74   0B00               MOVS     R3,R1
   \   00000A76   0422               MOVS     R2,#+4
   \   00000A78   0021               MOVS     R1,#+0
   \   00000A7A   874F               LDR      R7,??Procedure_Paint_58+0x8  ;; 0x5cd
   \   00000A7C   BC46               MOV      R12,R7
   \   00000A7E   2F68               LDR      R7,[R5, #+0]
   \   00000A80   6743               MULS     R7,R4,R7
   \   00000A82   8448               LDR      R0,??Procedure_Paint_58+0x4  ;; Speech
   \   00000A84   C019               ADDS     R0,R0,R7
   \   00000A86   6746               MOV      R7,R12
   \   00000A88   C019               ADDS     R0,R0,R7
   \   00000A8A   ........           BL       Label
   \   00000A8E   06B0               ADD      SP,SP,#+24
   3264                       
   3265                 Label(   Speech[g_leng].Miesiac+(Prc.Tag.ClkPrcType  *15),0,4,24,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A90   82B0               SUB      SP,SP,#+8
   \   00000A92   0020               MOVS     R0,#+0
   \   00000A94   0090               STR      R0,[SP, #+0]
   \   00000A96   7F21               MOVS     R1,#+127
   \   00000A98   0120               MOVS     R0,#+1
   \   00000A9A   03B4               PUSH     {R0,R1}
   \   00000A9C   2121               MOVS     R1,#+33
   \   00000A9E   0A20               MOVS     R0,#+10
   \   00000AA0   03B4               PUSH     {R0,R1}
   \   00000AA2   1823               MOVS     R3,#+24
   \   00000AA4   0422               MOVS     R2,#+4
   \   00000AA6   0021               MOVS     R1,#+0
   \   00000AA8   02B5               PUSH     {R1,LR}
   \   00000AAA   4B3F               SUBS     R7,R7,#+75
   \   00000AAC   317A               LDRB     R1,[R6, #+8]
   \   00000AAE   0F20               MOVS     R0,#+15
   \   00000AB0   4143               MULS     R1,R0,R1
   \   00000AB2   8C46               MOV      R12,R1
   \   00000AB4   2968               LDR      R1,[R5, #+0]
   \   00000AB6   6143               MULS     R1,R4,R1
   \   00000AB8   7648               LDR      R0,??Procedure_Paint_58+0x4  ;; Speech
   \   00000ABA   4018               ADDS     R0,R0,R1
   \   00000ABC   6146               MOV      R1,R12
   \   00000ABE   4018               ADDS     R0,R0,R1
   \   00000AC0   C019               ADDS     R0,R0,R7
   \   00000AC2   0099               LDR      R1,[SP, #0]
   \   00000AC4   02B0               ADD      SP,SP,#+8
   \   00000AC6   ........           BL       Label
   \   00000ACA   06B0               ADD      SP,SP,#+24
   3266                              
   3267          
   3268                 
   3269                 CharToStr(Prc.Tag.ClkPrcVal, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000ACC   0222               MOVS     R2,#+2
   \   00000ACE   6946               MOV      R1,SP
   \   00000AD0   707A               LDRB     R0,[R6, #+9]
   \   00000AD2   ........           BL       CharToStr
   3270                 Label(txt,2,24,7,2,14,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000AD6   82B0               SUB      SP,SP,#+8
   \   00000AD8   0020               MOVS     R0,#+0
   \   00000ADA   0090               STR      R0,[SP, #+0]
   \   00000ADC   7F21               MOVS     R1,#+127
   \   00000ADE   0120               MOVS     R0,#+1
   \   00000AE0   03B4               PUSH     {R0,R1}
   \   00000AE2   0E21               MOVS     R1,#+14
   \   00000AE4   0220               MOVS     R0,#+2
   \   00000AE6   03B4               PUSH     {R0,R1}
   \   00000AE8   0723               MOVS     R3,#+7
   \   00000AEA   1822               MOVS     R2,#+24
   \   00000AEC   0100               MOVS     R1,R0
   \   00000AEE   06A8               ADD      R0,SP,#+24
   \   00000AF0   ........           BL       Label
   \   00000AF4   06B0               ADD      SP,SP,#+24
   3271                  
   3272                 
   3273                 //przycisk zmiany typu procedury zegara (godzina, minuta,...)
   3274                 Button("> ",43,24,18,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000AF6   82B0               SUB      SP,SP,#+8
   \   00000AF8   1320               MOVS     R0,#+19
   \   00000AFA   0090               STR      R0,[SP, #+0]
   \   00000AFC   1223               MOVS     R3,#+18
   \   00000AFE   1822               MOVS     R2,#+24
   \   00000B00   2B21               MOVS     R1,#+43
   \   00000B02   66A0               ADR      R0,??Procedure_Paint_58+0xC  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000B04   ........           BL       Button
   \   00000B08   02B0               ADD      SP,SP,#+8
   3275                 
   3276                 H_line(23,17,17,1); // (char X, int Y, char lenght, char typ) 
   \   00000B0A   0123               MOVS     R3,#+1
   \   00000B0C   1122               MOVS     R2,#+17
   \   00000B0E   1100               MOVS     R1,R2
   \   00000B10   1720               MOVS     R0,#+23
   \   00000B12   ........           BL       H_line
   3277                 H_line(23,6,17,1); // (char X, int Y, char lenght, char typ) 
   \   00000B16   0123               MOVS     R3,#+1
   \   00000B18   1122               MOVS     R2,#+17
   \   00000B1A   0621               MOVS     R1,#+6
   \   00000B1C   1720               MOVS     R0,#+23
   \   00000B1E   ........           BL       H_line
   3278                 V_line(23,6,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000B22   0123               MOVS     R3,#+1
   \   00000B24   0B22               MOVS     R2,#+11
   \   00000B26   0621               MOVS     R1,#+6
   \   00000B28   1720               MOVS     R0,#+23
   \   00000B2A   ........           BL       V_line
   3279                 V_line(39,6,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000B2E   0123               MOVS     R3,#+1
   \   00000B30   0B22               MOVS     R2,#+11
   \   00000B32   0621               MOVS     R1,#+6
   \   00000B34   2720               MOVS     R0,#+39
   \   00000B36   ........           BL       V_line
   3280          
   3281                 
   3282                
   3283                 
   3284          
   3285                 txt[1]=0;
   \   00000B3A   6F46               MOV      R7,SP
   \   00000B3C   0020               MOVS     R0,#+0
   \   00000B3E   7870               STRB     R0,[R7, #+1]
   3286                 txt[0]=30;
   \   00000B40   1E20               MOVS     R0,#+30
   \   00000B42   3870               STRB     R0,[R7, #+0]
   3287                 Button(txt,43,3,18,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000B44   82B0               SUB      SP,SP,#+8
   \   00000B46   1320               MOVS     R0,#+19
   \   00000B48   0090               STR      R0,[SP, #+0]
   \   00000B4A   1223               MOVS     R3,#+18
   \   00000B4C   0322               MOVS     R2,#+3
   \   00000B4E   2B21               MOVS     R1,#+43
   \   00000B50   02A8               ADD      R0,SP,#+8
   \   00000B52   ........           BL       Button
   \   00000B56   02B0               ADD      SP,SP,#+8
   3288                 txt[0]=31;
   \   00000B58   1F20               MOVS     R0,#+31
   \   00000B5A   3870               STRB     R0,[R7, #+0]
   3289                 Button(txt,2,3,18,19); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000B5C   82B0               SUB      SP,SP,#+8
   \   00000B5E   1320               MOVS     R0,#+19
   \   00000B60   0090               STR      R0,[SP, #+0]
   \   00000B62   1223               MOVS     R3,#+18
   \   00000B64   0322               MOVS     R2,#+3
   \   00000B66   0221               MOVS     R1,#+2
   \   00000B68   02A8               ADD      R0,SP,#+8
   \   00000B6A   ........           BL       Button
   \   00000B6E   02B0               ADD      SP,SP,#+8
   3290                 
   3291                        
   3292                      }   
   3293                /*   
   3294                 if (Prc.Type==ProcStartTimer) 
   3295                 {
   3296                   Button("> ",2,46,18,11); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   3297                 }
   3298                */   
   3299                 
   3300                 if (Prc.Type==ProcDay) 
   \                     ??Procedure_Paint_59:
   \   00000B70   3078               LDRB     R0,[R6, #+0]
   \   00000B72   2F28               CMP      R0,#+47
   \   00000B74   35D1               BNE      ??Procedure_Paint_60
   3301                 {
   3302                          Button("> ",43,25,18,18);
   \   00000B76   82B0               SUB      SP,SP,#+8
   \   00000B78   1220               MOVS     R0,#+18
   \   00000B7A   0090               STR      R0,[SP, #+0]
   \   00000B7C   0300               MOVS     R3,R0
   \   00000B7E   1922               MOVS     R2,#+25
   \   00000B80   2B21               MOVS     R1,#+43
   \   00000B82   46A0               ADR      R0,??Procedure_Paint_58+0xC  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000B84   ........           BL       Button
   \   00000B88   02B0               ADD      SP,SP,#+8
   3303                          Button("< ",2,25,18,18);
   \   00000B8A   82B0               SUB      SP,SP,#+8
   \   00000B8C   1220               MOVS     R0,#+18
   \   00000B8E   0090               STR      R0,[SP, #+0]
   \   00000B90   0300               MOVS     R3,R0
   \   00000B92   1922               MOVS     R2,#+25
   \   00000B94   0221               MOVS     R1,#+2
   \   00000B96   42A0               ADR      R0,??Procedure_Paint_58+0x10  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000B98   ........           BL       Button
   \   00000B9C   02B0               ADD      SP,SP,#+8
   3304                          
   3305                          if(Prc.Tag.DayOfWeek==0) Prc.Tag.DayOfWeek=1;
   \   00000B9E   307A               LDRB     R0,[R6, #+8]
   \   00000BA0   0028               CMP      R0,#+0
   \   00000BA2   01D1               BNE      ??Procedure_Paint_61
   \   00000BA4   0120               MOVS     R0,#+1
   \   00000BA6   3072               STRB     R0,[R6, #+8]
   3306                          Label((char*)DeyOfWeekStr[g_leng][Prc.Tag.DayOfWeek],2,20,29,2,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \                     ??Procedure_Paint_61:
   \   00000BA8   82B0               SUB      SP,SP,#+8
   \   00000BAA   0020               MOVS     R0,#+0
   \   00000BAC   0090               STR      R0,[SP, #+0]
   \   00000BAE   6921               MOVS     R1,#+105
   \   00000BB0   03B4               PUSH     {R0,R1}
   \   00000BB2   1421               MOVS     R1,#+20
   \   00000BB4   0220               MOVS     R0,#+2
   \   00000BB6   03B4               PUSH     {R0,R1}
   \   00000BB8   1D23               MOVS     R3,#+29
   \   00000BBA   0A00               MOVS     R2,R1
   \   00000BBC   0100               MOVS     R1,R0
   \   00000BBE   02B5               PUSH     {R1,LR}
   \   00000BC0   B027               MOVS     R7,#+176
   \   00000BC2   7F00               LSLS     R7,R7,#+1        ;; #+352
   \   00000BC4   307A               LDRB     R0,[R6, #+8]
   \   00000BC6   4100               LSLS     R1,R0,#+1
   \   00000BC8   8C46               MOV      R12,R1
   \   00000BCA   2868               LDR      R0,[R5, #+0]
   \   00000BCC   0101               LSLS     R1,R0,#+4
   \   00000BCE   3548               LDR      R0,??Procedure_Paint_58+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000BD0   4018               ADDS     R0,R0,R1
   \   00000BD2   6146               MOV      R1,R12
   \   00000BD4   4018               ADDS     R0,R0,R1
   \   00000BD6   C019               ADDS     R0,R0,R7
   \   00000BD8   0099               LDR      R1,[SP, #0]
   \   00000BDA   02B0               ADD      SP,SP,#+8
   \   00000BDC   ........           BL       Label
   \   00000BE0   06B0               ADD      SP,SP,#+24
   3307                        
   3308                 }
   3309                 
   3310                 
   3311                 if (Prc.Type==ProcConstAnal) 
   \                     ??Procedure_Paint_60:
   \   00000BE2   3078               LDRB     R0,[R6, #+0]
   \   00000BE4   3728               CMP      R0,#+55
   \   00000BE6   0ED1               BNE      ??Procedure_Paint_62
   3312                 {
   3313                          Button(Speech[g_leng].Zmiana,10,16,40,18);
   \   00000BE8   82B0               SUB      SP,SP,#+8
   \   00000BEA   1220               MOVS     R0,#+18
   \   00000BEC   0090               STR      R0,[SP, #+0]
   \   00000BEE   2823               MOVS     R3,#+40
   \   00000BF0   1022               MOVS     R2,#+16
   \   00000BF2   0A21               MOVS     R1,#+10
   \   00000BF4   2C48               LDR      R0,??Procedure_Paint_58+0x18  ;; 0x50a
   \   00000BF6   2D68               LDR      R5,[R5, #+0]
   \   00000BF8   6543               MULS     R5,R4,R5
   \   00000BFA   264C               LDR      R4,??Procedure_Paint_58+0x4  ;; Speech
   \   00000BFC   6419               ADDS     R4,R4,R5
   \   00000BFE   2018               ADDS     R0,R4,R0
   \   00000C00   ........           BL       Button
   \   00000C04   02B0               ADD      SP,SP,#+8
   3314                 
   3315                 }
   3316                 
   3317                 if ((Prc.Type==ProcGetReg) || (Prc.Type==ProcSetReg) )
   \                     ??Procedure_Paint_62:
   \   00000C06   3078               LDRB     R0,[R6, #+0]
   \   00000C08   3828               CMP      R0,#+56
   \   00000C0A   01D0               BEQ      ??Procedure_Paint_63
   \   00000C0C   3928               CMP      R0,#+57
   \   00000C0E   3BD1               BNE      ??Procedure_Paint_64
   3318                 {
   3319                 
   3320                     Button("> ",43,5,18,18);
   \                     ??Procedure_Paint_63:
   \   00000C10   82B0               SUB      SP,SP,#+8
   \   00000C12   1220               MOVS     R0,#+18
   \   00000C14   0090               STR      R0,[SP, #+0]
   \   00000C16   0300               MOVS     R3,R0
   \   00000C18   0522               MOVS     R2,#+5
   \   00000C1A   2B21               MOVS     R1,#+43
   \   00000C1C   1FA0               ADR      R0,??Procedure_Paint_58+0xC  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000C1E   ........           BL       Button
   \   00000C22   02B0               ADD      SP,SP,#+8
   3321                     Button("< ",2, 5,18,18);
   \   00000C24   82B0               SUB      SP,SP,#+8
   \   00000C26   1220               MOVS     R0,#+18
   \   00000C28   0090               STR      R0,[SP, #+0]
   \   00000C2A   0300               MOVS     R3,R0
   \   00000C2C   0522               MOVS     R2,#+5
   \   00000C2E   0221               MOVS     R1,#+2
   \   00000C30   1BA0               ADR      R0,??Procedure_Paint_58+0x10  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000C32   ........           BL       Button
   \   00000C36   02B0               ADD      SP,SP,#+8
   3322                     Label("Reg:",0,22,15,4,14,1,127,0);
   \   00000C38   82B0               SUB      SP,SP,#+8
   \   00000C3A   0020               MOVS     R0,#+0
   \   00000C3C   0090               STR      R0,[SP, #+0]
   \   00000C3E   7F21               MOVS     R1,#+127
   \   00000C40   0120               MOVS     R0,#+1
   \   00000C42   03B4               PUSH     {R0,R1}
   \   00000C44   0E21               MOVS     R1,#+14
   \   00000C46   0420               MOVS     R0,#+4
   \   00000C48   03B4               PUSH     {R0,R1}
   \   00000C4A   0F23               MOVS     R3,#+15
   \   00000C4C   1622               MOVS     R2,#+22
   \   00000C4E   0021               MOVS     R1,#+0
   \   00000C50   1648               LDR      R0,??Procedure_Paint_58+0x1C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 92
   \   00000C52   ........           BL       Label
   \   00000C56   06B0               ADD      SP,SP,#+24
   3323                     txt[1]=0;
   \   00000C58   6846               MOV      R0,SP
   \   00000C5A   0021               MOVS     R1,#+0
   \   00000C5C   4170               STRB     R1,[R0, #+1]
   3324                     char il=CharToStr(Prc.Tag.RegNr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000C5E   0222               MOVS     R2,#+2
   \   00000C60   6946               MOV      R1,SP
   \   00000C62   307A               LDRB     R0,[R6, #+8]
   \   00000C64   ........           BL       CharToStr
   3325                     Label(txt,2,22,5,4,18,1,127,0);
   \   00000C68   82B0               SUB      SP,SP,#+8
   \   00000C6A   0020               MOVS     R0,#+0
   \   00000C6C   0090               STR      R0,[SP, #+0]
   \   00000C6E   7F21               MOVS     R1,#+127
   \   00000C70   0120               MOVS     R0,#+1
   \   00000C72   03B4               PUSH     {R0,R1}
   \   00000C74   1221               MOVS     R1,#+18
   \   00000C76   0420               MOVS     R0,#+4
   \   00000C78   03B4               PUSH     {R0,R1}
   \   00000C7A   0523               MOVS     R3,#+5
   \   00000C7C   1622               MOVS     R2,#+22
   \   00000C7E   0221               MOVS     R1,#+2
   \   00000C80   06A8               ADD      R0,SP,#+24
   \   00000C82   ........           BL       Label
   \   00000C86   06B0               ADD      SP,SP,#+24
   3326                 }
   3327                 
   3328                }
   \                     ??Procedure_Paint_64:
   \   00000C88   09B0               ADD      SP,SP,#+36
   \   00000C8A   F0BC               POP      {R4-R7}
   \   00000C8C   01BC               POP      {R0}
   \   00000C8E   0047               BX       R0               ;; return
   \                     ??Procedure_Paint_58:
   \   00000C90   ED030000           DC32     0x3ed
   \   00000C94   ........           DC32     Speech
   \   00000C98   CD050000           DC32     0x5cd
   \   00000C9C   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000CA0   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000CA4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000CA8   0A050000           DC32     0x50a
   \   00000CAC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 92
   3329                
   3330          char ProcGlobType_down;
   3331          
   3332          

   \                                 In section Debug.txt, align 4, keep-with-next
   3333          void Procedure_Event(void)
   3334                {
   \                     Procedure_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0026               MOVS     R6,#+0
   3335                 char MenuPaintExecut=0;
   3336                 char ProcGlobType_up;
   3337                 char ind;
   3338                 char txt[2];
   3339                 char exit;
   3340                 
   3341                 
   3342                        exit=0;
   \   00000004   3400               MOVS     R4,R6
   3343                 //zdarzenie typu down "X"
   3344                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000006   C448               LDR      R0,??Procedure_Event_3  ;; X_down
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   405E               LDRSH    R0,[R0, R1]
   \   0000000C   2F28               CMP      R0,#+47
   \   0000000E   2FDB               BLT      ??Procedure_Event_4
   \   00000010   3F28               CMP      R0,#+63
   \   00000012   2DDA               BGE      ??Procedure_Event_4
   \   00000014   C148               LDR      R0,??Procedure_Event_3+0x4  ;; Y_down
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   7128               CMP      R0,#+113
   \   0000001A   29DB               BLT      ??Procedure_Event_4
   \   0000001C   7F28               CMP      R0,#+127
   \   0000001E   27DA               BGE      ??Procedure_Event_4
   3345                  {
   3346                    //MenuPaint();
   3347                    H_line(49,114,10,0);
   \   00000020   0B00               MOVS     R3,R1
   \   00000022   0A22               MOVS     R2,#+10
   \   00000024   7221               MOVS     R1,#+114
   \   00000026   3120               MOVS     R0,#+49
   \   00000028   ........           BL       H_line
   3348                    H_line(49,123,10,0); 
   \   0000002C   2300               MOVS     R3,R4
   \   0000002E   0A22               MOVS     R2,#+10
   \   00000030   7B21               MOVS     R1,#+123
   \   00000032   3120               MOVS     R0,#+49
   \   00000034   ........           BL       H_line
   3349                    V_line(49,114,10,0); 
   \   00000038   2300               MOVS     R3,R4
   \   0000003A   0A22               MOVS     R2,#+10
   \   0000003C   7221               MOVS     R1,#+114
   \   0000003E   3120               MOVS     R0,#+49
   \   00000040   ........           BL       V_line
   3350                    V_line(58,114,10,0); 
   \   00000044   2300               MOVS     R3,R4
   \   00000046   0A22               MOVS     R2,#+10
   \   00000048   7221               MOVS     R1,#+114
   \   0000004A   3A20               MOVS     R0,#+58
   \   0000004C   ........           BL       V_line
   3351                    exit=1;
   \   00000050   0124               MOVS     R4,#+1
   3352                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000052   B348               LDR      R0,??Procedure_Event_3+0x8  ;; 0x13d7e9
   \   00000054   0078               LDRB     R0,[R0, #+0]
   \   00000056   0028               CMP      R0,#+0
   \   00000058   0AD1               BNE      ??Procedure_Event_4
   \   0000005A   B248               LDR      R0,??Procedure_Event_3+0xC  ;; 0xfffff430
   \   0000005C   8021               MOVS     R1,#+128
   \   0000005E   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000060   0160               STR      R1,[R0, #+0]
   \   00000062   B14A               LDR      R2,??Procedure_Event_3+0x10  ;; ButtonBipCounter
   \   00000064   B148               LDR      R0,??Procedure_Event_3+0x14  ;; g_counter
   \   00000066   03C8               LDM      R0!,{R0,R1}
   \   00000068   0023               MOVS     R3,#+0
   \   0000006A   0830               ADDS     R0,R0,#+8
   \   0000006C   5941               ADCS     R1,R1,R3
   \   0000006E   03C2               STM      R2!,{R0,R1}
   \                     ??Procedure_Event_4:
   \   00000070   AF48               LDR      R0,??Procedure_Event_3+0x18  ;; X_up
   \   00000072   0021               MOVS     R1,#+0
   \   00000074   405E               LDRSH    R0,[R0, R1]
   \   00000076   2F28               CMP      R0,#+47
   \   00000078   26DB               BLT      ??Procedure_Event_5
   \   0000007A   3F28               CMP      R0,#+63
   \   0000007C   24DA               BGE      ??Procedure_Event_5
   \   0000007E   AD48               LDR      R0,??Procedure_Event_3+0x1C  ;; Y_up
   \   00000080   405E               LDRSH    R0,[R0, R1]
   \   00000082   7128               CMP      R0,#+113
   \   00000084   20DB               BLT      ??Procedure_Event_5
   \   00000086   7F28               CMP      R0,#+127
   \   00000088   1EDA               BGE      ??Procedure_Event_5
   3353                  }
   3354            
   3355              
   3356                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   3357                  {
   3358                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000008A   A548               LDR      R0,??Procedure_Event_3+0x8  ;; 0x13d7e9
   \   0000008C   0078               LDRB     R0,[R0, #+0]
   \   0000008E   0028               CMP      R0,#+0
   \   00000090   0AD1               BNE      ??Procedure_Event_6
   \   00000092   A448               LDR      R0,??Procedure_Event_3+0xC  ;; 0xfffff430
   \   00000094   8021               MOVS     R1,#+128
   \   00000096   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000098   0160               STR      R1,[R0, #+0]
   \   0000009A   A34A               LDR      R2,??Procedure_Event_3+0x10  ;; ButtonBipCounter
   \   0000009C   A348               LDR      R0,??Procedure_Event_3+0x14  ;; g_counter
   \   0000009E   03C8               LDM      R0!,{R0,R1}
   \   000000A0   0023               MOVS     R3,#+0
   \   000000A2   0830               ADDS     R0,R0,#+8
   \   000000A4   5941               ADCS     R1,R1,R3
   \   000000A6   03C2               STM      R2!,{R0,R1}
   3359                    exit=1;
   \                     ??Procedure_Event_6:
   \   000000A8   0127               MOVS     R7,#+1
   \   000000AA   3C00               MOVS     R4,R7
   \   000000AC   A248               LDR      R0,??Procedure_Event_3+0x20  ;; TextToChangeLength + 84
   \   000000AE   3100               MOVS     R1,R6
   \   000000B0   0160               STR      R1,[R0, #+0]
   3360                    Rej_poz=0;
   3361          
   3362                    CountLines(&gProg);
   \   000000B2   A248               LDR      R0,??Procedure_Event_3+0x24  ;; gProg
   \   000000B4   ........           BL       CountLines
   3363            
   3364                    
   3365                      MenuLevel=(MenuLevel/10);
   \   000000B8   A148               LDR      R0,??Procedure_Event_3+0x28  ;; TextToChangeLength + 80
   \   000000BA   0068               LDR      R0,[R0, #+0]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   ........           BL       __aeabi_idivmod
   \   000000C2   9F49               LDR      R1,??Procedure_Event_3+0x28  ;; TextToChangeLength + 80
   \   000000C4   0860               STR      R0,[R1, #+0]
   3366                      MenuPaintExecut=1;
   \   000000C6   3E00               MOVS     R6,R7
   3367          
   3368                  }  
   3369                 
   3370          if (exit==0)       
   \                     ??Procedure_Event_5:
   \   000000C8   002C               CMP      R4,#+0
   \   000000CA   01D0               BEQ      .+6
   \   000000CC   00F062FD           BL       ??Procedure_Event_7
   3371          {
   3372                  
   3373                  ProgramChange=1;  
   \   000000D0   0127               MOVS     R7,#+1
   \   000000D2   9C48               LDR      R0,??Procedure_Event_3+0x2C  ;; TextToChangeLength + 8
   \   000000D4   3900               MOVS     R1,R7
   \   000000D6   0170               STRB     R1,[R0, #+0]
   3374                  ProcGlobType_up=0;
   \   000000D8   0020               MOVS     R0,#+0
   \   000000DA   0190               STR      R0,[SP, #+4]
   3375                  ind=0;
   \   000000DC   0222               MOVS     R2,#+2
   \   000000DE   49E0               B        ??Procedure_Event_8
   3376                  for (char j=2; j>=1; j--)
   3377                   for(char i=0; i<3; i++)
   3378                   {
   3379                      ind++;
   \                     ??Procedure_Event_9:
   \   000000E0   641C               ADDS     R4,R4,#+1
   \   000000E2   2406               LSLS     R4,R4,#+24
   \   000000E4   240E               LSRS     R4,R4,#+24
   3380                      if ((X_up>2+i*19) && (X_up<2+17+i*19) && (Y_up>51+j*19) && (Y_up<50+17+j*19))    //"X"
   \   000000E6   1321               MOVS     R1,#+19
   \   000000E8   4843               MULS     R0,R1,R0
   \   000000EA   9149               LDR      R1,??Procedure_Event_3+0x18  ;; X_up
   \   000000EC   0025               MOVS     R5,#+0
   \   000000EE   495F               LDRSH    R1,[R1, R5]
   \   000000F0   0500               MOVS     R5,R0
   \   000000F2   AD1C               ADDS     R5,R5,#+2
   \   000000F4   8D42               CMP      R5,R1
   \   000000F6   34DA               BGE      ??Procedure_Event_10
   \   000000F8   1330               ADDS     R0,R0,#+19
   \   000000FA   8142               CMP      R1,R0
   \   000000FC   31DA               BGE      ??Procedure_Event_10
   \   000000FE   1100               MOVS     R1,R2
   \   00000100   1320               MOVS     R0,#+19
   \   00000102   4143               MULS     R1,R0,R1
   \   00000104   8B48               LDR      R0,??Procedure_Event_3+0x1C  ;; Y_up
   \   00000106   0025               MOVS     R5,#+0
   \   00000108   405F               LDRSH    R0,[R0, R5]
   \   0000010A   0D00               MOVS     R5,R1
   \   0000010C   3335               ADDS     R5,R5,#+51
   \   0000010E   8542               CMP      R5,R0
   \   00000110   27DA               BGE      ??Procedure_Event_10
   \   00000112   4331               ADDS     R1,R1,#+67
   \   00000114   8842               CMP      R0,R1
   \   00000116   24DA               BGE      ??Procedure_Event_10
   3381                      {
   3382                        ProcGlobType_up=ind;
   \   00000118   0194               STR      R4,[SP, #+4]
   3383                        gProg.Line[ChoseRow].Proc[ChoseCol].Tag.Tag=0;
   \   0000011A   8848               LDR      R0,??Procedure_Event_3+0x24  ;; gProg
   \   0000011C   8A49               LDR      R1,??Procedure_Event_3+0x30  ;; TextToChangeLength + 19
   \   0000011E   0978               LDRB     R1,[R1, #+0]
   \   00000120   1825               MOVS     R5,#+24
   \   00000122   6943               MULS     R1,R5,R1
   \   00000124   8C46               MOV      R12,R1
   \   00000126   8949               LDR      R1,??Procedure_Event_3+0x34  ;; TextToChangeLength + 18
   \   00000128   0D78               LDRB     R5,[R1, #+0]
   \   0000012A   F021               MOVS     R1,#+240
   \   0000012C   4D43               MULS     R5,R1,R5
   \   0000012E   4019               ADDS     R0,R0,R5
   \   00000130   6146               MOV      R1,R12
   \   00000132   4518               ADDS     R5,R0,R1
   \   00000134   2035               ADDS     R5,R5,#+32
   \   00000136   0020               MOVS     R0,#+0
   \   00000138   0100               MOVS     R1,R0
   \   0000013A   03C5               STM      R5!,{R0,R1}
   \   0000013C   083D               SUBS     R5,R5,#+8
   3384                        gProg.Line[ChoseRow].Proc[ChoseCol].LastIn=0;
   \   0000013E   2872               STRB     R0,[R5, #+8]
   3385                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000140   7748               LDR      R0,??Procedure_Event_3+0x8  ;; 0x13d7e9
   \   00000142   0078               LDRB     R0,[R0, #+0]
   \   00000144   0028               CMP      R0,#+0
   \   00000146   0CD1               BNE      ??Procedure_Event_10
   \   00000148   7648               LDR      R0,??Procedure_Event_3+0xC  ;; 0xfffff430
   \   0000014A   8021               MOVS     R1,#+128
   \   0000014C   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000014E   0160               STR      R1,[R0, #+0]
   \   00000150   754D               LDR      R5,??Procedure_Event_3+0x10  ;; ButtonBipCounter
   \   00000152   AC46               MOV      R12,R5
   \   00000154   7548               LDR      R0,??Procedure_Event_3+0x14  ;; g_counter
   \   00000156   03C8               LDM      R0!,{R0,R1}
   \   00000158   0025               MOVS     R5,#+0
   \   0000015A   0830               ADDS     R0,R0,#+8
   \   0000015C   6941               ADCS     R1,R1,R5
   \   0000015E   6546               MOV      R5,R12
   \   00000160   03C5               STM      R5!,{R0,R1}
   3386                        
   3387                      }
   3388                      
   3389                   }
   \                     ??Procedure_Event_10:
   \   00000162   5B1C               ADDS     R3,R3,#+1
   \   00000164   1B06               LSLS     R3,R3,#+24
   \   00000166   1B0E               LSRS     R3,R3,#+24
   \                     ??Procedure_Event_11:
   \   00000168   1800               MOVS     R0,R3
   \   0000016A   0328               CMP      R0,#+3
   \   0000016C   B8D3               BCC      ??Procedure_Event_9
   \   0000016E   521E               SUBS     R2,R2,#+1
   \   00000170   1206               LSLS     R2,R2,#+24
   \   00000172   120E               LSRS     R2,R2,#+24
   \                     ??Procedure_Event_8:
   \   00000174   1000               MOVS     R0,R2
   \   00000176   01D0               BEQ      ??Procedure_Event_12
   \   00000178   0023               MOVS     R3,#+0
   \   0000017A   F5E7               B        ??Procedure_Event_11
   3390          
   3391              ProcGlobType_down=ProcGlobType_up;
   \                     ??Procedure_Event_12:
   \   0000017C   7448               LDR      R0,??Procedure_Event_3+0x38  ;; TextToChangeLength + 20
   \   0000017E   0199               LDR      R1,[SP, #+4]
   \   00000180   0170               STRB     R1,[R0, #+0]
   3392                
   3393              _Procedure *TypePrc=&(gProg.Line[ChoseRow].Proc[ChoseCol]);
   \   00000182   6E48               LDR      R0,??Procedure_Event_3+0x24  ;; gProg
   \   00000184   7049               LDR      R1,??Procedure_Event_3+0x30  ;; TextToChangeLength + 19
   \   00000186   0978               LDRB     R1,[R1, #+0]
   \   00000188   1822               MOVS     R2,#+24
   \   0000018A   5143               MULS     R1,R2,R1
   \   0000018C   6F4A               LDR      R2,??Procedure_Event_3+0x34  ;; TextToChangeLength + 18
   \   0000018E   1278               LDRB     R2,[R2, #+0]
   \   00000190   F023               MOVS     R3,#+240
   \   00000192   5A43               MULS     R2,R3,R2
   \   00000194   8018               ADDS     R0,R0,R2
   \   00000196   4218               ADDS     R2,R0,R1
   \   00000198   1832               ADDS     R2,R2,#+24
   \   0000019A   1400               MOVS     R4,R2
   3394                   
   3395                  
   3396          
   3397                      
   3398                     
   3399                 if ((ProcGlobType_up>0) && (ProcGlobType_down==ProcGlobType_up) && (exit==0))
   \   0000019C   0198               LDR      R0,[SP, #+4]
   \   0000019E   0006               LSLS     R0,R0,#+24
   \   000001A0   27D0               BEQ      ??Procedure_Event_13
   3400                 {
   3401                 ProcGlobType_down=0;
   \   000001A2   6B48               LDR      R0,??Procedure_Event_3+0x38  ;; TextToChangeLength + 20
   \   000001A4   0021               MOVS     R1,#+0
   \   000001A6   0170               STRB     R1,[R0, #+0]
   3402                 gProg.Line[ChoseRow].Proc[ChoseCol].Out=0;
   \   000001A8   0800               MOVS     R0,R1
   \   000001AA   5082               STRH     R0,[R2, #+18]
   3403                 gProg.Line[ChoseRow].Proc[ChoseCol].LastIn=0;
   \   000001AC   1074               STRB     R0,[R2, #+16]
   3404                 gProg.Line[ChoseRow].Proc[ChoseCol].Tag.Tag=0;
   \   000001AE   1300               MOVS     R3,R2
   \   000001B0   0833               ADDS     R3,R3,#+8
   \   000001B2   03C3               STM      R3!,{R0,R1}
   3405                 
   3406                 switch (ProcGlobType_up)
   \   000001B4   0198               LDR      R0,[SP, #+4]
   \   000001B6   0006               LSLS     R0,R0,#+24
   \   000001B8   000E               LSRS     R0,R0,#+24
   \   000001BA   401E               SUBS     R0,R0,#+1
   \   000001BC   0528               CMP      R0,#+5
   \   000001BE   17D8               BHI      ??Procedure_Event_14
   \   000001C0   01A1               ADR      R1,??Procedure_Event_0
   \   000001C2   095C               LDRB     R1,[R1, R0]
   \   000001C4   8F44               ADD      PC,PC,R1
   \   000001C6   C046               Nop      
   \                     ??Procedure_Event_0:
   \   000001C8   060C1218           DC8      +6,+12,+18,+24
   \   000001CC   1E24               DC8      +30,+36
   3407                 {
   3408                   case 1:  //Pusty
   3409                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=None;
   \                     ??Procedure_Event_15:
   \   000001CE   0020               MOVS     R0,#+0
   \   000001D0   1070               STRB     R0,[R2, #+0]
   \   000001D2   0DE0               B        ??Procedure_Event_14
   3410                   break;
   3411                   
   3412                   
   3413                   case 2: //Stan
   3414                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcStStart+1);
   \                     ??Procedure_Event_16:
   \   000001D4   1420               MOVS     R0,#+20
   \   000001D6   1070               STRB     R0,[R2, #+0]
   \   000001D8   0AE0               B        ??Procedure_Event_14
   3415                   break;
   3416                   
   3417                   
   3418                   case 3: //ustaw
   3419                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcSetStart+1);
   \                     ??Procedure_Event_17:
   \   000001DA   2020               MOVS     R0,#+32
   \   000001DC   1070               STRB     R0,[R2, #+0]
   \   000001DE   07E0               B        ??Procedure_Event_14
   3420                   break;
   3421                   
   3422                   
   3423                   case 4: //Logika
   3424                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcLogStart+1);
   \                     ??Procedure_Event_18:
   \   000001E0   0220               MOVS     R0,#+2
   \   000001E2   1070               STRB     R0,[R2, #+0]
   \   000001E4   04E0               B        ??Procedure_Event_14
   3425                   break;
   3426                   
   3427                   
   3428                   case 5: //timery, zegary
   3429                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcTimeStart+1);
   \                     ??Procedure_Event_19:
   \   000001E6   2D20               MOVS     R0,#+45
   \   000001E8   1070               STRB     R0,[R2, #+0]
   \   000001EA   01E0               B        ??Procedure_Event_14
   3430                   break;
   3431                   
   3432                   
   3433                   case 6: //timery, zegary
   3434                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcAnalogStart+1);
   \                     ??Procedure_Event_20:
   \   000001EC   3720               MOVS     R0,#+55
   \   000001EE   1070               STRB     R0,[R2, #+0]
   3435                   break;
   3436                 }
   3437                 
   3438                
   3439                   MenuPaintExecut=1; 
   \                     ??Procedure_Event_14:
   \   000001F0   3E00               MOVS     R6,R7
   3440                   
   3441                 }
   3442                   
   3443          
   3444                 
   3445                 //Je¿eli logika
   3446                  if  ((TypePrc->Type>ProcLogStart) && (TypePrc->Type<ProcLogStop))
   \                     ??Procedure_Event_13:
   \   000001F2   2078               LDRB     R0,[R4, #+0]
   \   000001F4   0228               CMP      R0,#+2
   \   000001F6   3AD3               BCC      ??Procedure_Event_21
   \   000001F8   0D28               CMP      R0,#+13
   \   000001FA   38D2               BCS      ??Procedure_Event_21
   3447                      {     
   3448                        txt[0]='>';
   \   000001FC   6D46               MOV      R5,SP
   \   000001FE   3E20               MOVS     R0,#+62
   \   00000200   2870               STRB     R0,[R5, #+0]
   3449                        txt[1]=0;
   \   00000202   0020               MOVS     R0,#+0
   \   00000204   6870               STRB     R0,[R5, #+1]
   3450                        if (Button(txt,43,39,18,18)==1) 
   \   00000206   82B0               SUB      SP,SP,#+8
   \   00000208   1220               MOVS     R0,#+18
   \   0000020A   0090               STR      R0,[SP, #+0]
   \   0000020C   0300               MOVS     R3,R0
   \   0000020E   2722               MOVS     R2,#+39
   \   00000210   2B21               MOVS     R1,#+43
   \   00000212   02A8               ADD      R0,SP,#+8
   \   00000214   ........           BL       Button
   \   00000218   02B0               ADD      SP,SP,#+8
   \   0000021A   0128               CMP      R0,#+1
   \   0000021C   0DD1               BNE      ??Procedure_Event_22
   3451                          if (TypePrc->Type+1<ProcLogStop) {TypePrc->Type++;MenuPaintExecut=1;  } else {TypePrc->Type=(_ProcType)(ProcLogStart+1);MenuPaintExecut=1;  }
   \   0000021E   2078               LDRB     R0,[R4, #+0]
   \   00000220   401C               ADDS     R0,R0,#+1
   \   00000222   0004               LSLS     R0,R0,#+16
   \   00000224   000C               LSRS     R0,R0,#+16
   \   00000226   0D28               CMP      R0,#+13
   \   00000228   04D2               BCS      ??Procedure_Event_23
   \   0000022A   2078               LDRB     R0,[R4, #+0]
   \   0000022C   401C               ADDS     R0,R0,#+1
   \   0000022E   2070               STRB     R0,[R4, #+0]
   \   00000230   3E00               MOVS     R6,R7
   \   00000232   02E0               B        ??Procedure_Event_22
   \                     ??Procedure_Event_23:
   \   00000234   0220               MOVS     R0,#+2
   \   00000236   2070               STRB     R0,[R4, #+0]
   \   00000238   3E00               MOVS     R6,R7
   3452                        txt[0]='<';
   \                     ??Procedure_Event_22:
   \   0000023A   3C20               MOVS     R0,#+60
   \   0000023C   2870               STRB     R0,[R5, #+0]
   3453                        if (Button(txt,2,39,18,18)==1) 
   \   0000023E   82B0               SUB      SP,SP,#+8
   \   00000240   1220               MOVS     R0,#+18
   \   00000242   0090               STR      R0,[SP, #+0]
   \   00000244   0300               MOVS     R3,R0
   \   00000246   2722               MOVS     R2,#+39
   \   00000248   0221               MOVS     R1,#+2
   \   0000024A   02A8               ADD      R0,SP,#+8
   \   0000024C   ........           BL       Button
   \   00000250   02B0               ADD      SP,SP,#+8
   \   00000252   0128               CMP      R0,#+1
   \   00000254   0BD1               BNE      ??Procedure_Event_21
   3454                          if (TypePrc->Type-1>ProcLogStart) {TypePrc->Type--;MenuPaintExecut=1;  } else {TypePrc->Type=(_ProcType)(ProcLogStop-1);MenuPaintExecut=1;  }
   \   00000256   2078               LDRB     R0,[R4, #+0]
   \   00000258   401E               SUBS     R0,R0,#+1
   \   0000025A   0228               CMP      R0,#+2
   \   0000025C   04DB               BLT      ??Procedure_Event_24
   \   0000025E   2078               LDRB     R0,[R4, #+0]
   \   00000260   401E               SUBS     R0,R0,#+1
   \   00000262   2070               STRB     R0,[R4, #+0]
   \   00000264   3E00               MOVS     R6,R7
   \   00000266   02E0               B        ??Procedure_Event_21
   \                     ??Procedure_Event_24:
   \   00000268   0C20               MOVS     R0,#+12
   \   0000026A   2070               STRB     R0,[R4, #+0]
   \   0000026C   3E00               MOVS     R6,R7
   3455                   
   3456                      }
   3457           
   3458                 
   3459                 //zmiana numeru procedur
   3460                 if ((((TypePrc->Type>ProcStStart) && (TypePrc->Type<ProcTimeStart))
   3461                     || (TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg)   
   3462                     ) && (TypePrc->Type!=ProcInc) && (TypePrc->Type!=ProcInc))
   \                     ??Procedure_Event_21:
   \   0000026E   2078               LDRB     R0,[R4, #+0]
   \   00000270   1428               CMP      R0,#+20
   \   00000272   01D3               BCC      ??Procedure_Event_25
   \   00000274   2C28               CMP      R0,#+44
   \   00000276   04D3               BCC      ??Procedure_Event_26
   \                     ??Procedure_Event_25:
   \   00000278   3828               CMP      R0,#+56
   \   0000027A   02D0               BEQ      ??Procedure_Event_26
   \   0000027C   3928               CMP      R0,#+57
   \   0000027E   00D0               BEQ      .+4
   \   00000280   C6E1               B        ??Procedure_Event_27
   \                     ??Procedure_Event_26:
   \   00000282   2528               CMP      R0,#+37
   \   00000284   00D1               BNE      .+4
   \   00000286   C3E1               B        ??Procedure_Event_27
   3463                 {  
   3464                    txt[1]=0;
   \   00000288   6D46               MOV      R5,SP
   \   0000028A   0020               MOVS     R0,#+0
   \   0000028C   6870               STRB     R0,[R5, #+1]
   3465                    txt[0]='>';
   \   0000028E   3E20               MOVS     R0,#+62
   \   00000290   2870               STRB     R0,[R5, #+0]
   3466                    if (Button(txt,43,25,18,18)==1) 
   \   00000292   82B0               SUB      SP,SP,#+8
   \   00000294   1220               MOVS     R0,#+18
   \   00000296   0090               STR      R0,[SP, #+0]
   \   00000298   0300               MOVS     R3,R0
   \   0000029A   1922               MOVS     R2,#+25
   \   0000029C   2B21               MOVS     R1,#+43
   \   0000029E   02A8               ADD      R0,SP,#+8
   \   000002A0   ........           BL       Button
   \   000002A4   02B0               ADD      SP,SP,#+8
   \   000002A6   0128               CMP      R0,#+1
   \   000002A8   00D0               BEQ      .+4
   \   000002AA   EDE0               B        ??Procedure_Event_28
   3467                    {
   3468                      switch (TypePrc->Type)
   \   000002AC   2078               LDRB     R0,[R4, #+0]
   \   000002AE   1438               SUBS     R0,R0,#+20
   \   000002B0   2528               CMP      R0,#+37
   \   000002B2   00D9               BLS      .+4
   \   000002B4   E7E0               B        ??Procedure_Event_29
   \   000002B6   02A1               ADR      R1,??Procedure_Event_1
   \   000002B8   095C               LDRB     R1,[R1, R0]
   \   000002BA   4900               LSLS     R1,R1,#+1
   \   000002BC   8F44               ADD      PC,PC,R1
   \   000002BE   C046               Nop      
   \                     ??Procedure_Event_1:
   \   000002C0   13214E5C           DC8      +19,+33,+78,+92
   \   000002C4   69E3E3E3           DC8      +105,+227,+227,+227
   \   000002C8   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002CC   768492A0           DC8      +118,+132,+146,+160
   \   000002D0   AEE3E3D7           DC8      +174,+227,+227,+215
   \   000002D4   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002D8   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002DC   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002E0   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002E4   BBC9               DC8      +187,+201
   3469                      {
   3470                        case ProcStI: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_30:
   \   000002E6   3800               MOVS     R0,R7
   \   000002E8   2056               LDRSB    R0,[R4, R0]
   \   000002EA   401C               ADDS     R0,R0,#+1
   \   000002EC   2328               CMP      R0,#+35
   \   000002EE   04DA               BGE      ??Procedure_Event_31
   \   000002F0   3800               MOVS     R0,R7
   \   000002F2   2056               LDRSB    R0,[R4, R0]
   \   000002F4   401C               ADDS     R0,R0,#+1
   \   000002F6   6070               STRB     R0,[R4, #+1]
   \   000002F8   C5E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_31:
   \   000002FA   0020               MOVS     R0,#+0
   \   000002FC   C043               MVNS     R0,R0            ;; #-1
   \   000002FE   6070               STRB     R0,[R4, #+1]
   \   00000300   C1E0               B        ??Procedure_Event_29
   3471                        case ProcStNI: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_32:
   \   00000302   3800               MOVS     R0,R7
   \   00000304   2056               LDRSB    R0,[R4, R0]
   \   00000306   401C               ADDS     R0,R0,#+1
   \   00000308   2328               CMP      R0,#+35
   \   0000030A   23DA               BGE      ??Procedure_Event_33
   \   0000030C   3800               MOVS     R0,R7
   \   0000030E   2056               LDRSB    R0,[R4, R0]
   \   00000310   401C               ADDS     R0,R0,#+1
   \   00000312   6070               STRB     R0,[R4, #+1]
   \   00000314   B7E0               B        ??Procedure_Event_29
   \   00000316   C046               Nop      
   \                     ??Procedure_Event_3:
   \   00000318   ........           DC32     X_down
   \   0000031C   ........           DC32     Y_down
   \   00000320   E9D71300           DC32     0x13d7e9
   \   00000324   30F4FFFF           DC32     0xfffff430
   \   00000328   ........           DC32     ButtonBipCounter
   \   0000032C   ........           DC32     g_counter
   \   00000330   ........           DC32     X_up
   \   00000334   ........           DC32     Y_up
   \   00000338   ........           DC32     TextToChangeLength + 84
   \   0000033C   ........           DC32     gProg
   \   00000340   ........           DC32     TextToChangeLength + 80
   \   00000344   ........           DC32     TextToChangeLength + 8
   \   00000348   ........           DC32     TextToChangeLength + 19
   \   0000034C   ........           DC32     TextToChangeLength + 18
   \   00000350   ........           DC32     TextToChangeLength + 20
   \                     ??Procedure_Event_33:
   \   00000354   0020               MOVS     R0,#+0
   \   00000356   C043               MVNS     R0,R0            ;; #-1
   \   00000358   6070               STRB     R0,[R4, #+1]
   \   0000035A   94E0               B        ??Procedure_Event_29
   3472                        case ProcStQ: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_34:
   \   0000035C   3800               MOVS     R0,R7
   \   0000035E   2056               LDRSB    R0,[R4, R0]
   \   00000360   401C               ADDS     R0,R0,#+1
   \   00000362   2328               CMP      R0,#+35
   \   00000364   04DA               BGE      ??Procedure_Event_35
   \   00000366   3800               MOVS     R0,R7
   \   00000368   2056               LDRSB    R0,[R4, R0]
   \   0000036A   401C               ADDS     R0,R0,#+1
   \   0000036C   6070               STRB     R0,[R4, #+1]
   \   0000036E   8AE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_35:
   \   00000370   0020               MOVS     R0,#+0
   \   00000372   C043               MVNS     R0,R0            ;; #-1
   \   00000374   6070               STRB     R0,[R4, #+1]
   \   00000376   86E0               B        ??Procedure_Event_29
   3473                        case ProcStB: if (TypePrc->Nr+1<NumberButton) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_36:
   \   00000378   3800               MOVS     R0,R7
   \   0000037A   2056               LDRSB    R0,[R4, R0]
   \   0000037C   401C               ADDS     R0,R0,#+1
   \   0000037E   5028               CMP      R0,#+80
   \   00000380   04DA               BGE      ??Procedure_Event_37
   \   00000382   3800               MOVS     R0,R7
   \   00000384   2056               LDRSB    R0,[R4, R0]
   \   00000386   401C               ADDS     R0,R0,#+1
   \   00000388   6070               STRB     R0,[R4, #+1]
   \   0000038A   7CE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_37:
   \   0000038C   0020               MOVS     R0,#+0
   \   0000038E   6070               STRB     R0,[R4, #+1]
   \   00000390   79E0               B        ??Procedure_Event_29
   3474                        case ProcStS: if (TypePrc->Nr+1<NumberSceneMax) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_38:
   \   00000392   3800               MOVS     R0,R7
   \   00000394   2056               LDRSB    R0,[R4, R0]
   \   00000396   401C               ADDS     R0,R0,#+1
   \   00000398   0A28               CMP      R0,#+10
   \   0000039A   04DA               BGE      ??Procedure_Event_39
   \   0000039C   3800               MOVS     R0,R7
   \   0000039E   2056               LDRSB    R0,[R4, R0]
   \   000003A0   401C               ADDS     R0,R0,#+1
   \   000003A2   6070               STRB     R0,[R4, #+1]
   \   000003A4   6FE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_39:
   \   000003A6   0020               MOVS     R0,#+0
   \   000003A8   6070               STRB     R0,[R4, #+1]
   \   000003AA   6CE0               B        ??Procedure_Event_29
   3475                        case ProcWOUT: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_40:
   \   000003AC   3800               MOVS     R0,R7
   \   000003AE   2056               LDRSB    R0,[R4, R0]
   \   000003B0   401C               ADDS     R0,R0,#+1
   \   000003B2   2328               CMP      R0,#+35
   \   000003B4   04DA               BGE      ??Procedure_Event_41
   \   000003B6   3800               MOVS     R0,R7
   \   000003B8   2056               LDRSB    R0,[R4, R0]
   \   000003BA   401C               ADDS     R0,R0,#+1
   \   000003BC   6070               STRB     R0,[R4, #+1]
   \   000003BE   62E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_41:
   \   000003C0   0020               MOVS     R0,#+0
   \   000003C2   C043               MVNS     R0,R0            ;; #-1
   \   000003C4   6070               STRB     R0,[R4, #+1]
   \   000003C6   5EE0               B        ??Procedure_Event_29
   3476                        case ProcWOUTS: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_42:
   \   000003C8   3800               MOVS     R0,R7
   \   000003CA   2056               LDRSB    R0,[R4, R0]
   \   000003CC   401C               ADDS     R0,R0,#+1
   \   000003CE   2328               CMP      R0,#+35
   \   000003D0   04DA               BGE      ??Procedure_Event_43
   \   000003D2   3800               MOVS     R0,R7
   \   000003D4   2056               LDRSB    R0,[R4, R0]
   \   000003D6   401C               ADDS     R0,R0,#+1
   \   000003D8   6070               STRB     R0,[R4, #+1]
   \   000003DA   54E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_43:
   \   000003DC   0020               MOVS     R0,#+0
   \   000003DE   C043               MVNS     R0,R0            ;; #-1
   \   000003E0   6070               STRB     R0,[R4, #+1]
   \   000003E2   50E0               B        ??Procedure_Event_29
   3477                        case ProcWOUTR: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_44:
   \   000003E4   3800               MOVS     R0,R7
   \   000003E6   2056               LDRSB    R0,[R4, R0]
   \   000003E8   401C               ADDS     R0,R0,#+1
   \   000003EA   2328               CMP      R0,#+35
   \   000003EC   04DA               BGE      ??Procedure_Event_45
   \   000003EE   3800               MOVS     R0,R7
   \   000003F0   2056               LDRSB    R0,[R4, R0]
   \   000003F2   401C               ADDS     R0,R0,#+1
   \   000003F4   6070               STRB     R0,[R4, #+1]
   \   000003F6   46E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_45:
   \   000003F8   0020               MOVS     R0,#+0
   \   000003FA   C043               MVNS     R0,R0            ;; #-1
   \   000003FC   6070               STRB     R0,[R4, #+1]
   \   000003FE   42E0               B        ??Procedure_Event_29
   3478                        case ProcWOUTC: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_46:
   \   00000400   3800               MOVS     R0,R7
   \   00000402   2056               LDRSB    R0,[R4, R0]
   \   00000404   401C               ADDS     R0,R0,#+1
   \   00000406   2328               CMP      R0,#+35
   \   00000408   04DA               BGE      ??Procedure_Event_47
   \   0000040A   3800               MOVS     R0,R7
   \   0000040C   2056               LDRSB    R0,[R4, R0]
   \   0000040E   401C               ADDS     R0,R0,#+1
   \   00000410   6070               STRB     R0,[R4, #+1]
   \   00000412   38E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_47:
   \   00000414   0020               MOVS     R0,#+0
   \   00000416   C043               MVNS     R0,R0            ;; #-1
   \   00000418   6070               STRB     R0,[R4, #+1]
   \   0000041A   34E0               B        ??Procedure_Event_29
   3479                        case ProcSetScn: if (TypePrc->Nr+1<NumberSceneMax) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_48:
   \   0000041C   3800               MOVS     R0,R7
   \   0000041E   2056               LDRSB    R0,[R4, R0]
   \   00000420   401C               ADDS     R0,R0,#+1
   \   00000422   0A28               CMP      R0,#+10
   \   00000424   04DA               BGE      ??Procedure_Event_49
   \   00000426   3800               MOVS     R0,R7
   \   00000428   2056               LDRSB    R0,[R4, R0]
   \   0000042A   401C               ADDS     R0,R0,#+1
   \   0000042C   6070               STRB     R0,[R4, #+1]
   \   0000042E   2AE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_49:
   \   00000430   0020               MOVS     R0,#+0
   \   00000432   6070               STRB     R0,[R4, #+1]
   \   00000434   27E0               B        ??Procedure_Event_29
   3480                        case ProcGetReg: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_50:
   \   00000436   3800               MOVS     R0,R7
   \   00000438   2056               LDRSB    R0,[R4, R0]
   \   0000043A   401C               ADDS     R0,R0,#+1
   \   0000043C   2328               CMP      R0,#+35
   \   0000043E   04DA               BGE      ??Procedure_Event_51
   \   00000440   3800               MOVS     R0,R7
   \   00000442   2056               LDRSB    R0,[R4, R0]
   \   00000444   401C               ADDS     R0,R0,#+1
   \   00000446   6070               STRB     R0,[R4, #+1]
   \   00000448   1DE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_51:
   \   0000044A   0020               MOVS     R0,#+0
   \   0000044C   C043               MVNS     R0,R0            ;; #-1
   \   0000044E   6070               STRB     R0,[R4, #+1]
   \   00000450   19E0               B        ??Procedure_Event_29
   3481                        case ProcSetReg: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_52:
   \   00000452   3800               MOVS     R0,R7
   \   00000454   2056               LDRSB    R0,[R4, R0]
   \   00000456   401C               ADDS     R0,R0,#+1
   \   00000458   2328               CMP      R0,#+35
   \   0000045A   04DA               BGE      ??Procedure_Event_53
   \   0000045C   3800               MOVS     R0,R7
   \   0000045E   2056               LDRSB    R0,[R4, R0]
   \   00000460   401C               ADDS     R0,R0,#+1
   \   00000462   6070               STRB     R0,[R4, #+1]
   \   00000464   0FE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_53:
   \   00000466   0020               MOVS     R0,#+0
   \   00000468   C043               MVNS     R0,R0            ;; #-1
   \   0000046A   6070               STRB     R0,[R4, #+1]
   \   0000046C   0BE0               B        ??Procedure_Event_29
   3482                        case ProcSPK: if (TypePrc->Tag.SpeakerType+1<SPK_Amount) {TypePrc->Tag.SpeakerType++;} else {TypePrc->Tag.SpeakerType=0;} break;
   \                     ??Procedure_Event_54:
   \   0000046E   207A               LDRB     R0,[R4, #+8]
   \   00000470   401C               ADDS     R0,R0,#+1
   \   00000472   0004               LSLS     R0,R0,#+16
   \   00000474   000C               LSRS     R0,R0,#+16
   \   00000476   0428               CMP      R0,#+4
   \   00000478   03D2               BCS      ??Procedure_Event_55
   \   0000047A   207A               LDRB     R0,[R4, #+8]
   \   0000047C   401C               ADDS     R0,R0,#+1
   \   0000047E   2072               STRB     R0,[R4, #+8]
   \   00000480   01E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_55:
   \   00000482   0020               MOVS     R0,#+0
   \   00000484   2072               STRB     R0,[R4, #+8]
   3483                        
   3484          
   3485                      }
   3486                      
   3487                      
   3488                      
   3489                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_29:
   \   00000486   3E00               MOVS     R6,R7
   3490                    }
   3491                    txt[0]='<';
   \                     ??Procedure_Event_28:
   \   00000488   3C20               MOVS     R0,#+60
   \   0000048A   2870               STRB     R0,[R5, #+0]
   3492                    if (Button(txt,2,25,18,18)==1) 
   \   0000048C   82B0               SUB      SP,SP,#+8
   \   0000048E   1220               MOVS     R0,#+18
   \   00000490   0090               STR      R0,[SP, #+0]
   \   00000492   0300               MOVS     R3,R0
   \   00000494   1922               MOVS     R2,#+25
   \   00000496   0221               MOVS     R1,#+2
   \   00000498   02A8               ADD      R0,SP,#+8
   \   0000049A   ........           BL       Button
   \   0000049E   02B0               ADD      SP,SP,#+8
   \   000004A0   0128               CMP      R0,#+1
   \   000004A2   00D0               BEQ      .+4
   \   000004A4   B4E0               B        ??Procedure_Event_27
   3493                    {
   3494                      
   3495                      switch (TypePrc->Type)
   \   000004A6   2078               LDRB     R0,[R4, #+0]
   \   000004A8   1438               SUBS     R0,R0,#+20
   \   000004AA   2528               CMP      R0,#+37
   \   000004AC   00D9               BLS      .+4
   \   000004AE   AEE0               B        ??Procedure_Event_56
   \   000004B0   01A1               ADR      R1,??Procedure_Event_2
   \   000004B2   095C               LDRB     R1,[R1, R0]
   \   000004B4   4900               LSLS     R1,R1,#+1
   \   000004B6   8F44               ADD      PC,PC,R1
   \                     ??Procedure_Event_2:
   \   000004B8   121E2A42           DC8      +18,+30,+42,+66
   \   000004BC   36AAAAAA           DC8      +54,+170,+170,+170
   \   000004C0   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004C4   4E5A6672           DC8      +78,+90,+102,+114
   \   000004C8   7EAAAAA2           DC8      +126,+170,+170,+162
   \   000004CC   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004D0   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004D4   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004D8   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004DC   8A96               DC8      +138,+150
   3496                      {
   3497                        case ProcStI: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_57:
   \   000004DE   3800               MOVS     R0,R7
   \   000004E0   2056               LDRSB    R0,[R4, R0]
   \   000004E2   0028               CMP      R0,#+0
   \   000004E4   04D4               BMI      ??Procedure_Event_58
   \   000004E6   3800               MOVS     R0,R7
   \   000004E8   2056               LDRSB    R0,[R4, R0]
   \   000004EA   401E               SUBS     R0,R0,#+1
   \   000004EC   6070               STRB     R0,[R4, #+1]
   \   000004EE   8EE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_58:
   \   000004F0   2220               MOVS     R0,#+34
   \   000004F2   6070               STRB     R0,[R4, #+1]
   \   000004F4   8BE0               B        ??Procedure_Event_56
   3498                        case ProcStNI: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_59:
   \   000004F6   3800               MOVS     R0,R7
   \   000004F8   2056               LDRSB    R0,[R4, R0]
   \   000004FA   0028               CMP      R0,#+0
   \   000004FC   04D4               BMI      ??Procedure_Event_60
   \   000004FE   3800               MOVS     R0,R7
   \   00000500   2056               LDRSB    R0,[R4, R0]
   \   00000502   401E               SUBS     R0,R0,#+1
   \   00000504   6070               STRB     R0,[R4, #+1]
   \   00000506   82E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_60:
   \   00000508   2220               MOVS     R0,#+34
   \   0000050A   6070               STRB     R0,[R4, #+1]
   \   0000050C   7FE0               B        ??Procedure_Event_56
   3499                        case ProcStQ: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_61:
   \   0000050E   3800               MOVS     R0,R7
   \   00000510   2056               LDRSB    R0,[R4, R0]
   \   00000512   0028               CMP      R0,#+0
   \   00000514   04D4               BMI      ??Procedure_Event_62
   \   00000516   3800               MOVS     R0,R7
   \   00000518   2056               LDRSB    R0,[R4, R0]
   \   0000051A   401E               SUBS     R0,R0,#+1
   \   0000051C   6070               STRB     R0,[R4, #+1]
   \   0000051E   76E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_62:
   \   00000520   2220               MOVS     R0,#+34
   \   00000522   6070               STRB     R0,[R4, #+1]
   \   00000524   73E0               B        ??Procedure_Event_56
   3500                        case ProcStS: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberSceneMax-1;} break;
   \                     ??Procedure_Event_63:
   \   00000526   3800               MOVS     R0,R7
   \   00000528   2056               LDRSB    R0,[R4, R0]
   \   0000052A   0128               CMP      R0,#+1
   \   0000052C   04DB               BLT      ??Procedure_Event_64
   \   0000052E   3800               MOVS     R0,R7
   \   00000530   2056               LDRSB    R0,[R4, R0]
   \   00000532   401E               SUBS     R0,R0,#+1
   \   00000534   6070               STRB     R0,[R4, #+1]
   \   00000536   6AE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_64:
   \   00000538   0920               MOVS     R0,#+9
   \   0000053A   6070               STRB     R0,[R4, #+1]
   \   0000053C   67E0               B        ??Procedure_Event_56
   3501                        case ProcStB: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_65:
   \   0000053E   3800               MOVS     R0,R7
   \   00000540   2056               LDRSB    R0,[R4, R0]
   \   00000542   0128               CMP      R0,#+1
   \   00000544   04DB               BLT      ??Procedure_Event_66
   \   00000546   3800               MOVS     R0,R7
   \   00000548   2056               LDRSB    R0,[R4, R0]
   \   0000054A   401E               SUBS     R0,R0,#+1
   \   0000054C   6070               STRB     R0,[R4, #+1]
   \   0000054E   5EE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_66:
   \   00000550   2220               MOVS     R0,#+34
   \   00000552   6070               STRB     R0,[R4, #+1]
   \   00000554   5BE0               B        ??Procedure_Event_56
   3502                        case ProcWOUT: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_67:
   \   00000556   3800               MOVS     R0,R7
   \   00000558   2056               LDRSB    R0,[R4, R0]
   \   0000055A   0028               CMP      R0,#+0
   \   0000055C   04D4               BMI      ??Procedure_Event_68
   \   0000055E   3800               MOVS     R0,R7
   \   00000560   2056               LDRSB    R0,[R4, R0]
   \   00000562   401E               SUBS     R0,R0,#+1
   \   00000564   6070               STRB     R0,[R4, #+1]
   \   00000566   52E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_68:
   \   00000568   2220               MOVS     R0,#+34
   \   0000056A   6070               STRB     R0,[R4, #+1]
   \   0000056C   4FE0               B        ??Procedure_Event_56
   3503                        case ProcWOUTS: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_69:
   \   0000056E   3800               MOVS     R0,R7
   \   00000570   2056               LDRSB    R0,[R4, R0]
   \   00000572   0028               CMP      R0,#+0
   \   00000574   04D4               BMI      ??Procedure_Event_70
   \   00000576   3800               MOVS     R0,R7
   \   00000578   2056               LDRSB    R0,[R4, R0]
   \   0000057A   401E               SUBS     R0,R0,#+1
   \   0000057C   6070               STRB     R0,[R4, #+1]
   \   0000057E   46E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_70:
   \   00000580   2220               MOVS     R0,#+34
   \   00000582   6070               STRB     R0,[R4, #+1]
   \   00000584   43E0               B        ??Procedure_Event_56
   3504                        case ProcWOUTR: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_71:
   \   00000586   3800               MOVS     R0,R7
   \   00000588   2056               LDRSB    R0,[R4, R0]
   \   0000058A   0028               CMP      R0,#+0
   \   0000058C   04D4               BMI      ??Procedure_Event_72
   \   0000058E   3800               MOVS     R0,R7
   \   00000590   2056               LDRSB    R0,[R4, R0]
   \   00000592   401E               SUBS     R0,R0,#+1
   \   00000594   6070               STRB     R0,[R4, #+1]
   \   00000596   3AE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_72:
   \   00000598   2220               MOVS     R0,#+34
   \   0000059A   6070               STRB     R0,[R4, #+1]
   \   0000059C   37E0               B        ??Procedure_Event_56
   3505                        case ProcWOUTC: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_73:
   \   0000059E   3800               MOVS     R0,R7
   \   000005A0   2056               LDRSB    R0,[R4, R0]
   \   000005A2   0028               CMP      R0,#+0
   \   000005A4   04D4               BMI      ??Procedure_Event_74
   \   000005A6   3800               MOVS     R0,R7
   \   000005A8   2056               LDRSB    R0,[R4, R0]
   \   000005AA   401E               SUBS     R0,R0,#+1
   \   000005AC   6070               STRB     R0,[R4, #+1]
   \   000005AE   2EE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_74:
   \   000005B0   2220               MOVS     R0,#+34
   \   000005B2   6070               STRB     R0,[R4, #+1]
   \   000005B4   2BE0               B        ??Procedure_Event_56
   3506                        case ProcSetScn: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberSceneMax-1;} break;
   \                     ??Procedure_Event_75:
   \   000005B6   3800               MOVS     R0,R7
   \   000005B8   2056               LDRSB    R0,[R4, R0]
   \   000005BA   0128               CMP      R0,#+1
   \   000005BC   04DB               BLT      ??Procedure_Event_76
   \   000005BE   3800               MOVS     R0,R7
   \   000005C0   2056               LDRSB    R0,[R4, R0]
   \   000005C2   401E               SUBS     R0,R0,#+1
   \   000005C4   6070               STRB     R0,[R4, #+1]
   \   000005C6   22E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_76:
   \   000005C8   0920               MOVS     R0,#+9
   \   000005CA   6070               STRB     R0,[R4, #+1]
   \   000005CC   1FE0               B        ??Procedure_Event_56
   3507                        case ProcGetReg: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_77:
   \   000005CE   3800               MOVS     R0,R7
   \   000005D0   2056               LDRSB    R0,[R4, R0]
   \   000005D2   0028               CMP      R0,#+0
   \   000005D4   04D4               BMI      ??Procedure_Event_78
   \   000005D6   3800               MOVS     R0,R7
   \   000005D8   2056               LDRSB    R0,[R4, R0]
   \   000005DA   401E               SUBS     R0,R0,#+1
   \   000005DC   6070               STRB     R0,[R4, #+1]
   \   000005DE   16E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_78:
   \   000005E0   2220               MOVS     R0,#+34
   \   000005E2   6070               STRB     R0,[R4, #+1]
   \   000005E4   13E0               B        ??Procedure_Event_56
   3508                        case ProcSetReg: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_79:
   \   000005E6   3800               MOVS     R0,R7
   \   000005E8   2056               LDRSB    R0,[R4, R0]
   \   000005EA   0028               CMP      R0,#+0
   \   000005EC   04D4               BMI      ??Procedure_Event_80
   \   000005EE   3800               MOVS     R0,R7
   \   000005F0   2056               LDRSB    R0,[R4, R0]
   \   000005F2   401E               SUBS     R0,R0,#+1
   \   000005F4   6070               STRB     R0,[R4, #+1]
   \   000005F6   0AE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_80:
   \   000005F8   2220               MOVS     R0,#+34
   \   000005FA   6070               STRB     R0,[R4, #+1]
   \   000005FC   07E0               B        ??Procedure_Event_56
   3509                        case ProcSPK: if (TypePrc->Tag.SpeakerType>0) {TypePrc->Tag.SpeakerType--;} else {TypePrc->Tag.SpeakerType=SPK_Amount-1;} break;
   \                     ??Procedure_Event_81:
   \   000005FE   207A               LDRB     R0,[R4, #+8]
   \   00000600   0028               CMP      R0,#+0
   \   00000602   02D0               BEQ      ??Procedure_Event_82
   \   00000604   401E               SUBS     R0,R0,#+1
   \   00000606   2072               STRB     R0,[R4, #+8]
   \   00000608   01E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_82:
   \   0000060A   0320               MOVS     R0,#+3
   \   0000060C   2072               STRB     R0,[R4, #+8]
   3510                      }
   3511                      
   3512          
   3513                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_56:
   \   0000060E   3E00               MOVS     R6,R7
   3514                    }
   3515                 }
   3516                 
   3517          
   3518                 //zmiana numeru portu
   3519                 if(((TypePrc->Type==ProcStI) ||
   3520                    (TypePrc->Type==ProcStNI) ||
   3521                    (TypePrc->Type==ProcStQ) ||
   3522                    (TypePrc->Type==ProcWOUT) ||
   3523                    (TypePrc->Type==ProcWOUTS) ||
   3524                    (TypePrc->Type==ProcWOUTR) ||
   3525                    (TypePrc->Type==ProcWOUTC)  
   3526                      )
   3527                   && (TypePrc->Type<ProcTimeStart))
   \                     ??Procedure_Event_27:
   \   00000610   2078               LDRB     R0,[R4, #+0]
   \   00000612   1428               CMP      R0,#+20
   \   00000614   0CD0               BEQ      ??Procedure_Event_83
   \   00000616   1528               CMP      R0,#+21
   \   00000618   0AD0               BEQ      ??Procedure_Event_83
   \   0000061A   1628               CMP      R0,#+22
   \   0000061C   08D0               BEQ      ??Procedure_Event_83
   \   0000061E   2028               CMP      R0,#+32
   \   00000620   06D0               BEQ      ??Procedure_Event_83
   \   00000622   2128               CMP      R0,#+33
   \   00000624   04D0               BEQ      ??Procedure_Event_83
   \   00000626   2228               CMP      R0,#+34
   \   00000628   02D0               BEQ      ??Procedure_Event_83
   \   0000062A   2328               CMP      R0,#+35
   \   0000062C   00D0               BEQ      .+4
   \   0000062E   ADE0               B        ??Procedure_Event_84
   \                     ??Procedure_Event_83:
   \   00000630   2C28               CMP      R0,#+44
   \   00000632   00D3               BCC      .+4
   \   00000634   AAE0               B        ??Procedure_Event_84
   3528                 {  
   3529                    txt[1]=0;
   \   00000636   6D46               MOV      R5,SP
   \   00000638   0020               MOVS     R0,#+0
   \   0000063A   6870               STRB     R0,[R5, #+1]
   3530                    txt[0]='>';
   \   0000063C   3E20               MOVS     R0,#+62
   \   0000063E   2870               STRB     R0,[R5, #+0]
   3531                    if (Button(txt,43,4,18,18)==1) 
   \   00000640   82B0               SUB      SP,SP,#+8
   \   00000642   1220               MOVS     R0,#+18
   \   00000644   0090               STR      R0,[SP, #+0]
   \   00000646   0300               MOVS     R3,R0
   \   00000648   0422               MOVS     R2,#+4
   \   0000064A   2B21               MOVS     R1,#+43
   \   0000064C   02A8               ADD      R0,SP,#+8
   \   0000064E   ........           BL       Button
   \   00000652   02B0               ADD      SP,SP,#+8
   \   00000654   0128               CMP      R0,#+1
   \   00000656   1DD1               BNE      ??Procedure_Event_85
   3532                    {
   3533                      switch (TypePrc->Type)
   \   00000658   2078               LDRB     R0,[R4, #+0]
   \   0000065A   1438               SUBS     R0,R0,#+20
   \   0000065C   0228               CMP      R0,#+2
   \   0000065E   02D9               BLS      ??Procedure_Event_86
   \   00000660   0C38               SUBS     R0,R0,#+12
   \   00000662   0328               CMP      R0,#+3
   \   00000664   15D8               BHI      ??Procedure_Event_87
   3534                      {
   3535                        case ProcStI: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)   || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_86:
   \   00000666   207A               LDRB     R0,[R4, #+8]
   \   00000668   401C               ADDS     R0,R0,#+1
   \   0000066A   0004               LSLS     R0,R0,#+16
   \   0000066C   000C               LSRS     R0,R0,#+16
   \   0000066E   1028               CMP      R0,#+16
   \   00000670   09D3               BCC      ??Procedure_Event_88
   \   00000672   3800               MOVS     R0,R7
   \   00000674   2056               LDRSB    R0,[R4, R0]
   \   00000676   0028               CMP      R0,#+0
   \   00000678   09D5               BPL      ??Procedure_Event_89
   \   0000067A   207A               LDRB     R0,[R4, #+8]
   \   0000067C   401C               ADDS     R0,R0,#+1
   \   0000067E   0004               LSLS     R0,R0,#+16
   \   00000680   000C               LSRS     R0,R0,#+16
   \   00000682   6328               CMP      R0,#+99
   \   00000684   03D2               BCS      ??Procedure_Event_89
   \                     ??Procedure_Event_88:
   \   00000686   207A               LDRB     R0,[R4, #+8]
   \   00000688   401C               ADDS     R0,R0,#+1
   \   0000068A   2072               STRB     R0,[R4, #+8]
   \   0000068C   01E0               B        ??Procedure_Event_87
   \                     ??Procedure_Event_89:
   \   0000068E   0020               MOVS     R0,#+0
   \   00000690   2072               STRB     R0,[R4, #+8]
   3536                        case ProcStNI: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)  || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3537                        case ProcStQ: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)   || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3538                        case ProcWOUT: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)  || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3539                        case ProcWOUTS: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3540                        case ProcWOUTR: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3541                        case ProcWOUTC: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3542                      }
   3543                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_87:
   \   00000692   3E00               MOVS     R6,R7
   3544                    }
   3545                    txt[0]='<';
   \                     ??Procedure_Event_85:
   \   00000694   3C20               MOVS     R0,#+60
   \   00000696   2870               STRB     R0,[R5, #+0]
   3546                    if (Button(txt,2,4,18,18)==1) 
   \   00000698   82B0               SUB      SP,SP,#+8
   \   0000069A   1220               MOVS     R0,#+18
   \   0000069C   0090               STR      R0,[SP, #+0]
   \   0000069E   0300               MOVS     R3,R0
   \   000006A0   0422               MOVS     R2,#+4
   \   000006A2   0221               MOVS     R1,#+2
   \   000006A4   02A8               ADD      R0,SP,#+8
   \   000006A6   ........           BL       Button
   \   000006AA   02B0               ADD      SP,SP,#+8
   \   000006AC   0128               CMP      R0,#+1
   \   000006AE   6DD1               BNE      ??Procedure_Event_84
   3547                    {
   3548                      switch (TypePrc->Type)
   \   000006B0   2078               LDRB     R0,[R4, #+0]
   \   000006B2   1428               CMP      R0,#+20
   \   000006B4   0CD0               BEQ      ??Procedure_Event_90
   \   000006B6   1528               CMP      R0,#+21
   \   000006B8   1AD0               BEQ      ??Procedure_Event_91
   \   000006BA   1628               CMP      R0,#+22
   \   000006BC   25D0               BEQ      ??Procedure_Event_92
   \   000006BE   2028               CMP      R0,#+32
   \   000006C0   30D0               BEQ      ??Procedure_Event_93
   \   000006C2   2128               CMP      R0,#+33
   \   000006C4   3BD0               BEQ      ??Procedure_Event_94
   \   000006C6   2228               CMP      R0,#+34
   \   000006C8   46D0               BEQ      ??Procedure_Event_95
   \   000006CA   2328               CMP      R0,#+35
   \   000006CC   51D0               BEQ      ??Procedure_Event_96
   \   000006CE   5CE0               B        ??Procedure_Event_97
   3549                      {
   3550                        case ProcStI: if (TypePrc->Tag.Port>0)  {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_90:
   \   000006D0   207A               LDRB     R0,[R4, #+8]
   \   000006D2   0028               CMP      R0,#+0
   \   000006D4   02D0               BEQ      ??Procedure_Event_98
   \                     ??Procedure_Event_99:
   \   000006D6   401E               SUBS     R0,R0,#+1
   \   000006D8   2072               STRB     R0,[R4, #+8]
   \   000006DA   56E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_98:
   \   000006DC   3800               MOVS     R0,R7
   \   000006DE   2056               LDRSB    R0,[R4, R0]
   \   000006E0   0128               CMP      R0,#+1
   \   000006E2   02DB               BLT      ??Procedure_Event_100
   \   000006E4   0F20               MOVS     R0,#+15
   \   000006E6   2072               STRB     R0,[R4, #+8]
   \   000006E8   4FE0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_100:
   \   000006EA   6320               MOVS     R0,#+99
   \   000006EC   2072               STRB     R0,[R4, #+8]
   \   000006EE   4CE0               B        ??Procedure_Event_97
   3551                        case ProcStNI: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0)  TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_91:
   \   000006F0   207A               LDRB     R0,[R4, #+8]
   \   000006F2   0028               CMP      R0,#+0
   \   000006F4   EFD1               BNE      ??Procedure_Event_99
   \   000006F6   3800               MOVS     R0,R7
   \   000006F8   2056               LDRSB    R0,[R4, R0]
   \   000006FA   0128               CMP      R0,#+1
   \   000006FC   02DB               BLT      ??Procedure_Event_101
   \   000006FE   0F20               MOVS     R0,#+15
   \   00000700   2072               STRB     R0,[R4, #+8]
   \   00000702   42E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_101:
   \   00000704   6320               MOVS     R0,#+99
   \   00000706   2072               STRB     R0,[R4, #+8]
   \   00000708   3FE0               B        ??Procedure_Event_97
   3552                        case ProcStQ: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_92:
   \   0000070A   207A               LDRB     R0,[R4, #+8]
   \   0000070C   0028               CMP      R0,#+0
   \   0000070E   E2D1               BNE      ??Procedure_Event_99
   \   00000710   3800               MOVS     R0,R7
   \   00000712   2056               LDRSB    R0,[R4, R0]
   \   00000714   0128               CMP      R0,#+1
   \   00000716   02DB               BLT      ??Procedure_Event_102
   \   00000718   0F20               MOVS     R0,#+15
   \   0000071A   2072               STRB     R0,[R4, #+8]
   \   0000071C   35E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_102:
   \   0000071E   6320               MOVS     R0,#+99
   \   00000720   2072               STRB     R0,[R4, #+8]
   \   00000722   32E0               B        ??Procedure_Event_97
   3553                        case ProcWOUT: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_93:
   \   00000724   207A               LDRB     R0,[R4, #+8]
   \   00000726   0028               CMP      R0,#+0
   \   00000728   D5D1               BNE      ??Procedure_Event_99
   \   0000072A   3800               MOVS     R0,R7
   \   0000072C   2056               LDRSB    R0,[R4, R0]
   \   0000072E   0128               CMP      R0,#+1
   \   00000730   02DB               BLT      ??Procedure_Event_103
   \   00000732   0F20               MOVS     R0,#+15
   \   00000734   2072               STRB     R0,[R4, #+8]
   \   00000736   28E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_103:
   \   00000738   6320               MOVS     R0,#+99
   \   0000073A   2072               STRB     R0,[R4, #+8]
   \   0000073C   25E0               B        ??Procedure_Event_97
   3554                        case ProcWOUTS: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_94:
   \   0000073E   207A               LDRB     R0,[R4, #+8]
   \   00000740   0028               CMP      R0,#+0
   \   00000742   C8D1               BNE      ??Procedure_Event_99
   \   00000744   3800               MOVS     R0,R7
   \   00000746   2056               LDRSB    R0,[R4, R0]
   \   00000748   0128               CMP      R0,#+1
   \   0000074A   02DB               BLT      ??Procedure_Event_104
   \   0000074C   0F20               MOVS     R0,#+15
   \   0000074E   2072               STRB     R0,[R4, #+8]
   \   00000750   1BE0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_104:
   \   00000752   6320               MOVS     R0,#+99
   \   00000754   2072               STRB     R0,[R4, #+8]
   \   00000756   18E0               B        ??Procedure_Event_97
   3555                        case ProcWOUTR: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_95:
   \   00000758   207A               LDRB     R0,[R4, #+8]
   \   0000075A   0028               CMP      R0,#+0
   \   0000075C   BBD1               BNE      ??Procedure_Event_99
   \   0000075E   3800               MOVS     R0,R7
   \   00000760   2056               LDRSB    R0,[R4, R0]
   \   00000762   0128               CMP      R0,#+1
   \   00000764   02DB               BLT      ??Procedure_Event_105
   \   00000766   0F20               MOVS     R0,#+15
   \   00000768   2072               STRB     R0,[R4, #+8]
   \   0000076A   0EE0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_105:
   \   0000076C   6320               MOVS     R0,#+99
   \   0000076E   2072               STRB     R0,[R4, #+8]
   \   00000770   0BE0               B        ??Procedure_Event_97
   3556                        case ProcWOUTC: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_96:
   \   00000772   207A               LDRB     R0,[R4, #+8]
   \   00000774   0028               CMP      R0,#+0
   \   00000776   AED1               BNE      ??Procedure_Event_99
   \   00000778   3800               MOVS     R0,R7
   \   0000077A   2056               LDRSB    R0,[R4, R0]
   \   0000077C   0128               CMP      R0,#+1
   \   0000077E   02DB               BLT      ??Procedure_Event_106
   \   00000780   0F20               MOVS     R0,#+15
   \   00000782   2072               STRB     R0,[R4, #+8]
   \   00000784   01E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_106:
   \   00000786   6320               MOVS     R0,#+99
   \   00000788   2072               STRB     R0,[R4, #+8]
   3557                      }
   3558                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_97:
   \   0000078A   3E00               MOVS     R6,R7
   3559                    }
   3560                 }
   3561                 
   3562                 //Zmiana typu procedury w ramach grupy
   3563                 txt[1]=0;
   \                     ??Procedure_Event_84:
   \   0000078C   6D46               MOV      R5,SP
   \   0000078E   0020               MOVS     R0,#+0
   \   00000790   6870               STRB     R0,[R5, #+1]
   3564                 txt[0]='>';
   \   00000792   3E20               MOVS     R0,#+62
   \   00000794   2870               STRB     R0,[R5, #+0]
   3565                 if ((TypePrc->Type>ProcStStart) )
   \   00000796   2078               LDRB     R0,[R4, #+0]
   \   00000798   1428               CMP      R0,#+20
   \   0000079A   68D3               BCC      ??Procedure_Event_107
   3566                 if (Button(txt,43,46,18,18)==1)
   \   0000079C   82B0               SUB      SP,SP,#+8
   \   0000079E   1220               MOVS     R0,#+18
   \   000007A0   0090               STR      R0,[SP, #+0]
   \   000007A2   0300               MOVS     R3,R0
   \   000007A4   2E22               MOVS     R2,#+46
   \   000007A6   2B21               MOVS     R1,#+43
   \   000007A8   02A8               ADD      R0,SP,#+8
   \   000007AA   ........           BL       Button
   \   000007AE   02B0               ADD      SP,SP,#+8
   \   000007B0   0128               CMP      R0,#+1
   \   000007B2   5CD1               BNE      ??Procedure_Event_107
   3567                 {
   3568                   //je¿eli stany
   3569                   if  ((TypePrc->Type>ProcStStart) && (TypePrc->Type<ProcStStop))
   \   000007B4   2078               LDRB     R0,[R4, #+0]
   \   000007B6   1428               CMP      R0,#+20
   \   000007B8   14D3               BCC      ??Procedure_Event_108
   \   000007BA   1928               CMP      R0,#+25
   \   000007BC   12D2               BCS      ??Procedure_Event_108
   3570                      { 
   3571                        if (TypePrc->Type+1<ProcStStop) 
   \   000007BE   401C               ADDS     R0,R0,#+1
   \   000007C0   0004               LSLS     R0,R0,#+16
   \   000007C2   000C               LSRS     R0,R0,#+16
   \   000007C4   1928               CMP      R0,#+25
   \   000007C6   0AD2               BCS      ??Procedure_Event_109
   3572                        {
   3573                          TypePrc->Type++;MenuPaintExecut=1;  
   \   000007C8   2078               LDRB     R0,[R4, #+0]
   \   000007CA   401C               ADDS     R0,R0,#+1
   \   000007CC   2070               STRB     R0,[R4, #+0]
   \   000007CE   3E00               MOVS     R6,R7
   3574                          if (TypePrc->Type>ProcStQ) {TypePrc->Nr=0; TypePrc->Tag.Port=0;}
   \   000007D0   2078               LDRB     R0,[R4, #+0]
   \   000007D2   1728               CMP      R0,#+23
   \   000007D4   06D3               BCC      ??Procedure_Event_108
   \   000007D6   0020               MOVS     R0,#+0
   \   000007D8   6070               STRB     R0,[R4, #+1]
   \   000007DA   2072               STRB     R0,[R4, #+8]
   \   000007DC   02E0               B        ??Procedure_Event_108
   3575                        } else {TypePrc->Type=(_ProcType)(ProcStStart+1);MenuPaintExecut=1;  }
   \                     ??Procedure_Event_109:
   \   000007DE   1420               MOVS     R0,#+20
   \   000007E0   2070               STRB     R0,[R4, #+0]
   \   000007E2   3E00               MOVS     R6,R7
   3576                      }
   3577                   if  ((TypePrc->Type>ProcSetStart) && (TypePrc->Type<ProcSetStop))
   \                     ??Procedure_Event_108:
   \   000007E4   2078               LDRB     R0,[R4, #+0]
   \   000007E6   2028               CMP      R0,#+32
   \   000007E8   14D3               BCC      ??Procedure_Event_110
   \   000007EA   2828               CMP      R0,#+40
   \   000007EC   12D2               BCS      ??Procedure_Event_110
   3578                      { 
   3579                        if (TypePrc->Type+1<ProcSetStop) 
   \   000007EE   401C               ADDS     R0,R0,#+1
   \   000007F0   0004               LSLS     R0,R0,#+16
   \   000007F2   000C               LSRS     R0,R0,#+16
   \   000007F4   2828               CMP      R0,#+40
   \   000007F6   0AD2               BCS      ??Procedure_Event_111
   3580                        {
   3581                          TypePrc->Type++;MenuPaintExecut=1;  
   \   000007F8   2078               LDRB     R0,[R4, #+0]
   \   000007FA   401C               ADDS     R0,R0,#+1
   \   000007FC   2070               STRB     R0,[R4, #+0]
   \   000007FE   3E00               MOVS     R6,R7
   3582                          if (TypePrc->Type>ProcWOUTC) {TypePrc->Nr=0; TypePrc->Tag.Port=0;}
   \   00000800   2078               LDRB     R0,[R4, #+0]
   \   00000802   2428               CMP      R0,#+36
   \   00000804   06D3               BCC      ??Procedure_Event_110
   \   00000806   0020               MOVS     R0,#+0
   \   00000808   6070               STRB     R0,[R4, #+1]
   \   0000080A   2072               STRB     R0,[R4, #+8]
   \   0000080C   02E0               B        ??Procedure_Event_110
   3583                        } else {TypePrc->Type=(_ProcType)(ProcSetStart+1);MenuPaintExecut=1;  }
   \                     ??Procedure_Event_111:
   \   0000080E   2020               MOVS     R0,#+32
   \   00000810   2070               STRB     R0,[R4, #+0]
   \   00000812   3E00               MOVS     R6,R7
   3584                      }
   3585                   
   3586                   
   3587                   if  ((TypePrc->Type>ProcTimeStart) && (TypePrc->Type<ProcTimeStop))
   \                     ??Procedure_Event_110:
   \   00000814   2078               LDRB     R0,[R4, #+0]
   \   00000816   2D28               CMP      R0,#+45
   \   00000818   10D3               BCC      ??Procedure_Event_112
   \   0000081A   3028               CMP      R0,#+48
   \   0000081C   0ED2               BCS      ??Procedure_Event_112
   3588                   {  
   3589                      if (TypePrc->Type+1<ProcTimeStop) 
   \   0000081E   401C               ADDS     R0,R0,#+1
   \   00000820   0004               LSLS     R0,R0,#+16
   \   00000822   000C               LSRS     R0,R0,#+16
   \   00000824   3028               CMP      R0,#+48
   \   00000826   04D2               BCS      ??Procedure_Event_113
   3590                      {
   3591                        TypePrc->Type++;MenuPaintExecut=1;  
   \   00000828   2078               LDRB     R0,[R4, #+0]
   \   0000082A   401C               ADDS     R0,R0,#+1
   \   0000082C   2070               STRB     R0,[R4, #+0]
   \   0000082E   3E00               MOVS     R6,R7
   \   00000830   02E0               B        ??Procedure_Event_114
   3592                      } else {
   3593                        TypePrc->Type=(_ProcType)(ProcTimeStart+1);MenuPaintExecut=1;  
   \                     ??Procedure_Event_113:
   \   00000832   2D20               MOVS     R0,#+45
   \   00000834   2070               STRB     R0,[R4, #+0]
   \   00000836   3E00               MOVS     R6,R7
   3594                      }
   3595                      TypePrc->Tag.CounterStartTime=0;
   \                     ??Procedure_Event_114:
   \   00000838   0020               MOVS     R0,#+0
   \   0000083A   E060               STR      R0,[R4, #+12]
   3596          
   3597                   }
   3598                   
   3599                   if  ((TypePrc->Type>ProcAnalogStart) && (TypePrc->Type<ProcAnalogStop))
   \                     ??Procedure_Event_112:
   \   0000083C   2078               LDRB     R0,[R4, #+0]
   \   0000083E   3728               CMP      R0,#+55
   \   00000840   0ED3               BCC      ??Procedure_Event_115
   \   00000842   4028               CMP      R0,#+64
   \   00000844   0CD2               BCS      ??Procedure_Event_115
   3600                      { 
   3601                        if (TypePrc->Type+1<ProcAnalogStop) 
   \   00000846   401C               ADDS     R0,R0,#+1
   \   00000848   0004               LSLS     R0,R0,#+16
   \   0000084A   000C               LSRS     R0,R0,#+16
   \   0000084C   4028               CMP      R0,#+64
   \   0000084E   04D2               BCS      ??Procedure_Event_116
   3602                        {TypePrc->Type++;MenuPaintExecut=1;  } else {TypePrc->Type=ProcAnalogStart+1;MenuPaintExecut=1;  }
                                                                                         ^
Warning[Pe188]: enumerated type mixed with another type
   \   00000850   2078               LDRB     R0,[R4, #+0]
   \   00000852   401C               ADDS     R0,R0,#+1
   \   00000854   2070               STRB     R0,[R4, #+0]
   \   00000856   3E00               MOVS     R6,R7
   \   00000858   02E0               B        ??Procedure_Event_115
   \                     ??Procedure_Event_116:
   \   0000085A   3720               MOVS     R0,#+55
   \   0000085C   2070               STRB     R0,[R4, #+0]
   \   0000085E   3E00               MOVS     R6,R7
   3603                      }
   3604                   
   3605                   
   3606                   
   3607                   if ((TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg) )
   \                     ??Procedure_Event_115:
   \   00000860   2078               LDRB     R0,[R4, #+0]
   \   00000862   3828               CMP      R0,#+56
   \   00000864   01D0               BEQ      ??Procedure_Event_117
   \   00000866   3928               CMP      R0,#+57
   \   00000868   01D1               BNE      ??Procedure_Event_107
   3608                        {
   3609                          TypePrc->Tag.RegNr=1;
   \                     ??Procedure_Event_117:
   \   0000086A   3800               MOVS     R0,R7
   \   0000086C   2072               STRB     R0,[R4, #+8]
   3610                        }
   3611                   
   3612                   
   3613                 }
   3614                 
   3615                 
   3616                 /*
   3617                 if (TypePrc->Type==ProcStartTimer)
   3618                 if (Button("> ",2,46,18,11)==1)
   3619                 {
   3620                   if (TypePrc->Nr+1<NumberTimer) {TypePrc->Nr++;} else {TypePrc->Nr=0;}   
   3621                   
   3622                   MenuPaintExecut=1; 
   3623                 }
   3624                 */
   3625                 
   3626                 if (TypePrc->Type==ProcClock)
   \                     ??Procedure_Event_107:
   \   0000086E   2078               LDRB     R0,[R4, #+0]
   \   00000870   2E28               CMP      R0,#+46
   \   00000872   00D0               BEQ      .+4
   \   00000874   9CE0               B        ??Procedure_Event_118
   3627                 {
   3628          
   3629                    txt[1]=0;
   \   00000876   0020               MOVS     R0,#+0
   \   00000878   6870               STRB     R0,[R5, #+1]
   3630                    txt[0]=30;
   \   0000087A   1E20               MOVS     R0,#+30
   \   0000087C   2870               STRB     R0,[R5, #+0]
   3631                    if (Button(txt,43,3,18,19)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   0000087E   82B0               SUB      SP,SP,#+8
   \   00000880   1320               MOVS     R0,#+19
   \   00000882   0090               STR      R0,[SP, #+0]
   \   00000884   1223               MOVS     R3,#+18
   \   00000886   0322               MOVS     R2,#+3
   \   00000888   2B21               MOVS     R1,#+43
   \   0000088A   02A8               ADD      R0,SP,#+8
   \   0000088C   ........           BL       Button
   \   00000890   02B0               ADD      SP,SP,#+8
   \   00000892   0128               CMP      R0,#+1
   \   00000894   28D1               BNE      ??Procedure_Event_119
   3632                    {
   3633                    
   3634                      if ((TypePrc->Tag.ClkPrcType==PrcMounth) && (TypePrc->Tag.ClkPrcVal<12)) 
   \   00000896   207A               LDRB     R0,[R4, #+8]
   \   00000898   0028               CMP      R0,#+0
   \   0000089A   04D1               BNE      ??Procedure_Event_120
   \   0000089C   607A               LDRB     R0,[R4, #+9]
   \   0000089E   0C28               CMP      R0,#+12
   \   000008A0   01D2               BCS      ??Procedure_Event_120
   3635                          {TypePrc->Tag.ClkPrcVal++;} 
   \   000008A2   401C               ADDS     R0,R0,#+1
   \   000008A4   6072               STRB     R0,[R4, #+9]
   3636                      if ((TypePrc->Tag.ClkPrcType==PrcDay) &&(TypePrc->Tag.ClkPrcVal<31)) 
   \                     ??Procedure_Event_120:
   \   000008A6   207A               LDRB     R0,[R4, #+8]
   \   000008A8   0128               CMP      R0,#+1
   \   000008AA   04D1               BNE      ??Procedure_Event_121
   \   000008AC   607A               LDRB     R0,[R4, #+9]
   \   000008AE   1F28               CMP      R0,#+31
   \   000008B0   01D2               BCS      ??Procedure_Event_121
   3637                          {TypePrc->Tag.ClkPrcVal++;}
   \   000008B2   401C               ADDS     R0,R0,#+1
   \   000008B4   6072               STRB     R0,[R4, #+9]
   3638                      if ((TypePrc->Tag.ClkPrcType==PrcHour) &&(TypePrc->Tag.ClkPrcVal<23)) 
   \                     ??Procedure_Event_121:
   \   000008B6   207A               LDRB     R0,[R4, #+8]
   \   000008B8   0228               CMP      R0,#+2
   \   000008BA   04D1               BNE      ??Procedure_Event_122
   \   000008BC   607A               LDRB     R0,[R4, #+9]
   \   000008BE   1728               CMP      R0,#+23
   \   000008C0   01D2               BCS      ??Procedure_Event_122
   3639                         {TypePrc->Tag.ClkPrcVal++;} 
   \   000008C2   401C               ADDS     R0,R0,#+1
   \   000008C4   6072               STRB     R0,[R4, #+9]
   3640                      if ((TypePrc->Tag.ClkPrcType==PrcMinute) &&(TypePrc->Tag.ClkPrcVal<59)) 
   \                     ??Procedure_Event_122:
   \   000008C6   207A               LDRB     R0,[R4, #+8]
   \   000008C8   0328               CMP      R0,#+3
   \   000008CA   04D1               BNE      ??Procedure_Event_123
   \   000008CC   607A               LDRB     R0,[R4, #+9]
   \   000008CE   3B28               CMP      R0,#+59
   \   000008D0   01D2               BCS      ??Procedure_Event_123
   3641                          {TypePrc->Tag.ClkPrcVal++;} 
   \   000008D2   401C               ADDS     R0,R0,#+1
   \   000008D4   6072               STRB     R0,[R4, #+9]
   3642                      if ((TypePrc->Tag.ClkPrcType==PrcSecond) &&(TypePrc->Tag.ClkPrcVal<59)) 
   \                     ??Procedure_Event_123:
   \   000008D6   207A               LDRB     R0,[R4, #+8]
   \   000008D8   0428               CMP      R0,#+4
   \   000008DA   04D1               BNE      ??Procedure_Event_124
   \   000008DC   607A               LDRB     R0,[R4, #+9]
   \   000008DE   3B28               CMP      R0,#+59
   \   000008E0   01D2               BCS      ??Procedure_Event_124
   3643                          {TypePrc->Tag.ClkPrcVal++;}
   \   000008E2   401C               ADDS     R0,R0,#+1
   \   000008E4   6072               STRB     R0,[R4, #+9]
   3644                    
   3645                       
   3646                       
   3647                       
   3648                       MenuPaintExecut=1;  
   \                     ??Procedure_Event_124:
   \   000008E6   3E00               MOVS     R6,R7
   \                     ??Procedure_Event_119:
   \   000008E8   1F20               MOVS     R0,#+31
   \   000008EA   2870               STRB     R0,[R5, #+0]
   3649                    }
   3650              
   3651                    
   3652                    txt[0]=31;
   3653                    if  (Button(txt,2,3,18,19)==1)//(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000008EC   82B0               SUB      SP,SP,#+8
   \   000008EE   1320               MOVS     R0,#+19
   \   000008F0   0090               STR      R0,[SP, #+0]
   \   000008F2   1223               MOVS     R3,#+18
   \   000008F4   0322               MOVS     R2,#+3
   \   000008F6   0221               MOVS     R1,#+2
   \   000008F8   02A8               ADD      R0,SP,#+8
   \   000008FA   ........           BL       Button
   \   000008FE   02B0               ADD      SP,SP,#+8
   \   00000900   0128               CMP      R0,#+1
   \   00000902   37D1               BNE      ??Procedure_Event_125
   3654                    { 
   3655                      if (TypePrc->Tag.ClkPrcType==PrcMounth) if (TypePrc->Tag.ClkPrcVal>1)
   \   00000904   207A               LDRB     R0,[R4, #+8]
   \   00000906   0028               CMP      R0,#+0
   \   00000908   07D1               BNE      ??Procedure_Event_126
   \   0000090A   607A               LDRB     R0,[R4, #+9]
   \   0000090C   0228               CMP      R0,#+2
   \   0000090E   02D3               BCC      ??Procedure_Event_127
   3656                          {TypePrc->Tag.ClkPrcVal--; } else {TypePrc->Tag.ClkPrcVal=12;}
   \   00000910   401E               SUBS     R0,R0,#+1
   \   00000912   6072               STRB     R0,[R4, #+9]
   \   00000914   01E0               B        ??Procedure_Event_126
   \                     ??Procedure_Event_127:
   \   00000916   0C20               MOVS     R0,#+12
   \   00000918   6072               STRB     R0,[R4, #+9]
   3657                      if (TypePrc->Tag.ClkPrcType==PrcDay) if(TypePrc->Tag.ClkPrcVal>1) 
   \                     ??Procedure_Event_126:
   \   0000091A   207A               LDRB     R0,[R4, #+8]
   \   0000091C   0128               CMP      R0,#+1
   \   0000091E   07D1               BNE      ??Procedure_Event_128
   \   00000920   607A               LDRB     R0,[R4, #+9]
   \   00000922   0228               CMP      R0,#+2
   \   00000924   02D3               BCC      ??Procedure_Event_129
   3658                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=31;}
   \   00000926   401E               SUBS     R0,R0,#+1
   \   00000928   6072               STRB     R0,[R4, #+9]
   \   0000092A   01E0               B        ??Procedure_Event_128
   \                     ??Procedure_Event_129:
   \   0000092C   1F20               MOVS     R0,#+31
   \   0000092E   6072               STRB     R0,[R4, #+9]
   3659                      if (TypePrc->Tag.ClkPrcType==PrcHour) if(TypePrc->Tag.ClkPrcVal>0)
   \                     ??Procedure_Event_128:
   \   00000930   207A               LDRB     R0,[R4, #+8]
   \   00000932   0228               CMP      R0,#+2
   \   00000934   07D1               BNE      ??Procedure_Event_130
   \   00000936   607A               LDRB     R0,[R4, #+9]
   \   00000938   0028               CMP      R0,#+0
   \   0000093A   02D0               BEQ      ??Procedure_Event_131
   3660                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=23;}
   \   0000093C   401E               SUBS     R0,R0,#+1
   \   0000093E   6072               STRB     R0,[R4, #+9]
   \   00000940   01E0               B        ??Procedure_Event_130
   \                     ??Procedure_Event_131:
   \   00000942   1720               MOVS     R0,#+23
   \   00000944   6072               STRB     R0,[R4, #+9]
   3661                      if (TypePrc->Tag.ClkPrcType==PrcMinute) if(TypePrc->Tag.ClkPrcVal>0) 
   \                     ??Procedure_Event_130:
   \   00000946   207A               LDRB     R0,[R4, #+8]
   \   00000948   0328               CMP      R0,#+3
   \   0000094A   07D1               BNE      ??Procedure_Event_132
   \   0000094C   607A               LDRB     R0,[R4, #+9]
   \   0000094E   0028               CMP      R0,#+0
   \   00000950   02D0               BEQ      ??Procedure_Event_133
   3662                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=59;}
   \   00000952   401E               SUBS     R0,R0,#+1
   \   00000954   6072               STRB     R0,[R4, #+9]
   \   00000956   01E0               B        ??Procedure_Event_132
   \                     ??Procedure_Event_133:
   \   00000958   3B20               MOVS     R0,#+59
   \   0000095A   6072               STRB     R0,[R4, #+9]
   3663                      if (TypePrc->Tag.ClkPrcType==PrcSecond) if(TypePrc->Tag.ClkPrcVal>0) 
   \                     ??Procedure_Event_132:
   \   0000095C   207A               LDRB     R0,[R4, #+8]
   \   0000095E   0428               CMP      R0,#+4
   \   00000960   07D1               BNE      ??Procedure_Event_134
   \   00000962   607A               LDRB     R0,[R4, #+9]
   \   00000964   0028               CMP      R0,#+0
   \   00000966   02D0               BEQ      ??Procedure_Event_135
   3664                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=59;}
   \   00000968   401E               SUBS     R0,R0,#+1
   \   0000096A   6072               STRB     R0,[R4, #+9]
   \   0000096C   01E0               B        ??Procedure_Event_134
   \                     ??Procedure_Event_135:
   \   0000096E   3B20               MOVS     R0,#+59
   \   00000970   6072               STRB     R0,[R4, #+9]
   3665                        
   3666                       MenuPaintExecut=1;  
   \                     ??Procedure_Event_134:
   \   00000972   3E00               MOVS     R6,R7
   3667                      
   3668                    }
   3669               
   3670                    
   3671                   //przycisk zmiany typu procedury zegara (godzina, minuta,...)
   3672                   if (Button("> ",43,24,18,19)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??Procedure_Event_125:
   \   00000974   82B0               SUB      SP,SP,#+8
   \   00000976   1320               MOVS     R0,#+19
   \   00000978   0090               STR      R0,[SP, #+0]
   \   0000097A   1223               MOVS     R3,#+18
   \   0000097C   1822               MOVS     R2,#+24
   \   0000097E   2B21               MOVS     R1,#+43
   \   00000980   88A0               ADR      R0,??Procedure_Event_136  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000982   ........           BL       Button
   \   00000986   02B0               ADD      SP,SP,#+8
   \   00000988   0128               CMP      R0,#+1
   \   0000098A   11D1               BNE      ??Procedure_Event_118
   3673                   {
   3674                     if (TypePrc->Tag.ClkPrcType<PrcSecond) 
   \   0000098C   207A               LDRB     R0,[R4, #+8]
   \   0000098E   0428               CMP      R0,#+4
   \   00000990   02D2               BCS      ??Procedure_Event_137
   3675                     {
   3676                       TypePrc->Tag.ClkPrcType++;
   \   00000992   401C               ADDS     R0,R0,#+1
   \   00000994   2072               STRB     R0,[R4, #+8]
   \   00000996   01E0               B        ??Procedure_Event_138
   3677                     }else{
   3678                       TypePrc->Tag.ClkPrcType=PrcMounth;
   \                     ??Procedure_Event_137:
   \   00000998   0020               MOVS     R0,#+0
   \   0000099A   2072               STRB     R0,[R4, #+8]
   3679                     }
   3680          
   3681                       TypePrc->Tag.ClkPrcVal=0; 
   \                     ??Procedure_Event_138:
   \   0000099C   0020               MOVS     R0,#+0
   \   0000099E   6072               STRB     R0,[R4, #+9]
   3682                       if ((TypePrc->Tag.ClkPrcType==PrcMounth) || (TypePrc->Tag.ClkPrcType==PrcDay)) TypePrc->Tag.ClkPrcVal=1; 
   \   000009A0   207A               LDRB     R0,[R4, #+8]
   \   000009A2   0028               CMP      R0,#+0
   \   000009A4   01D0               BEQ      ??Procedure_Event_139
   \   000009A6   0128               CMP      R0,#+1
   \   000009A8   01D1               BNE      ??Procedure_Event_140
   \                     ??Procedure_Event_139:
   \   000009AA   3800               MOVS     R0,R7
   \   000009AC   6072               STRB     R0,[R4, #+9]
   3683          
   3684          
   3685                     
   3686                     MenuPaintExecut=1; 
   \                     ??Procedure_Event_140:
   \   000009AE   3E00               MOVS     R6,R7
   3687                     
   3688                   }
   3689                    
   3690                 }
   3691               
   3692                 if (TypePrc->Type==ProcTimerSet)
   \                     ??Procedure_Event_118:
   \   000009B0   2078               LDRB     R0,[R4, #+0]
   \   000009B2   2D28               CMP      R0,#+45
   \   000009B4   64D1               BNE      ??Procedure_Event_141
   3693                 {  
   3694                   
   3695                    txt[1]=0;
   \   000009B6   0020               MOVS     R0,#+0
   \   000009B8   6870               STRB     R0,[R5, #+1]
   3696                    txt[0]=30;
   \   000009BA   1E20               MOVS     R0,#+30
   \   000009BC   2870               STRB     R0,[R5, #+0]
   3697                    if ((Button(txt,33,3,19,19)) &&  ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) )//(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000009BE   82B0               SUB      SP,SP,#+8
   \   000009C0   1320               MOVS     R0,#+19
   \   000009C2   0090               STR      R0,[SP, #+0]
   \   000009C4   0300               MOVS     R3,R0
   \   000009C6   0322               MOVS     R2,#+3
   \   000009C8   2121               MOVS     R1,#+33
   \   000009CA   02A8               ADD      R0,SP,#+8
   \   000009CC   ........           BL       Button
   \   000009D0   02B0               ADD      SP,SP,#+8
   \   000009D2   0028               CMP      R0,#+0
   \   000009D4   27D0               BEQ      ??Procedure_Event_142
   \   000009D6   7448               LDR      R0,??Procedure_Event_136+0x4  ;; TextToChangeLength + 64
   \   000009D8   03C8               LDM      R0!,{R0,R1}
   \   000009DA   0022               MOVS     R2,#+0
   \   000009DC   C830               ADDS     R0,R0,#+200
   \   000009DE   5141               ADCS     R1,R1,R2
   \   000009E0   0200               MOVS     R2,R0
   \   000009E2   0B00               MOVS     R3,R1
   \   000009E4   7148               LDR      R0,??Procedure_Event_136+0x8  ;; g_counter
   \   000009E6   03C8               LDM      R0!,{R0,R1}
   \   000009E8   8B42               CMP      R3,R1
   \   000009EA   0DD3               BCC      ??Procedure_Event_143
   \   000009EC   01D8               BHI      ??Procedure_Event_144
   \   000009EE   8242               CMP      R2,R0
   \   000009F0   0AD3               BCC      ??Procedure_Event_143
   \                     ??Procedure_Event_144:
   \   000009F2   6E48               LDR      R0,??Procedure_Event_136+0x8  ;; g_counter
   \   000009F4   03C8               LDM      R0!,{R0,R1}
   \   000009F6   0200               MOVS     R2,R0
   \   000009F8   0B00               MOVS     R3,R1
   \   000009FA   6B48               LDR      R0,??Procedure_Event_136+0x4  ;; TextToChangeLength + 64
   \   000009FC   03C8               LDM      R0!,{R0,R1}
   \   000009FE   8B42               CMP      R3,R1
   \   00000A00   11D8               BHI      ??Procedure_Event_142
   \   00000A02   01D3               BCC      ??Procedure_Event_143
   \   00000A04   8242               CMP      R2,R0
   \   00000A06   0ED2               BCS      ??Procedure_Event_142
   3698                    {
   3699                      Touch_EventTime=g_counter;
   \                     ??Procedure_Event_143:
   \   00000A08   674A               LDR      R2,??Procedure_Event_136+0x4  ;; TextToChangeLength + 64
   \   00000A0A   6848               LDR      R0,??Procedure_Event_136+0x8  ;; g_counter
   \   00000A0C   03C8               LDM      R0!,{R0,R1}
   \   00000A0E   03C2               STM      R2!,{R0,R1}
   3700                      if (TypePrc->Tag.SetCounter<10000)  
   \   00000A10   A068               LDR      R0,[R4, #+8]
   \   00000A12   6749               LDR      R1,??Procedure_Event_136+0xC  ;; 0x2710
   \   00000A14   8842               CMP      R0,R1
   \   00000A16   03D2               BCS      ??Procedure_Event_145
   3701                      { 
   3702                       TypePrc->Tag.SetCounter++;
   \   00000A18   A068               LDR      R0,[R4, #+8]
   \   00000A1A   401C               ADDS     R0,R0,#+1
   \   00000A1C   A060               STR      R0,[R4, #+8]
   \   00000A1E   01E0               B        ??Procedure_Event_146
   3703                       
   3704                      }else {
   3705                       TypePrc->Tag.SetCounter=0; 
   \                     ??Procedure_Event_145:
   \   00000A20   0020               MOVS     R0,#+0
   \   00000A22   A060               STR      R0,[R4, #+8]
   3706                      }
   3707                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_146:
   \   00000A24   3E00               MOVS     R6,R7
   3708                    }
   3709                    
   3710                    txt[0]=31;
   \                     ??Procedure_Event_142:
   \   00000A26   1F20               MOVS     R0,#+31
   \   00000A28   2870               STRB     R0,[R5, #+0]
   3711                    if ((Button(txt,12,3,19,19)) && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter))) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000A2A   82B0               SUB      SP,SP,#+8
   \   00000A2C   1320               MOVS     R0,#+19
   \   00000A2E   0090               STR      R0,[SP, #+0]
   \   00000A30   0300               MOVS     R3,R0
   \   00000A32   0322               MOVS     R2,#+3
   \   00000A34   0C21               MOVS     R1,#+12
   \   00000A36   02A8               ADD      R0,SP,#+8
   \   00000A38   ........           BL       Button
   \   00000A3C   02B0               ADD      SP,SP,#+8
   \   00000A3E   0028               CMP      R0,#+0
   \   00000A40   1ED0               BEQ      ??Procedure_Event_141
   \   00000A42   5A48               LDR      R0,??Procedure_Event_136+0x8  ;; g_counter
   \   00000A44   0CC8               LDM      R0!,{R2,R3}
   \   00000A46   5848               LDR      R0,??Procedure_Event_136+0x4  ;; TextToChangeLength + 64
   \   00000A48   03C8               LDM      R0!,{R0,R1}
   \   00000A4A   0025               MOVS     R5,#+0
   \   00000A4C   C830               ADDS     R0,R0,#+200
   \   00000A4E   6941               ADCS     R1,R1,R5
   \   00000A50   9942               CMP      R1,R3
   \   00000A52   09D3               BCC      ??Procedure_Event_147
   \   00000A54   01D8               BHI      ??Procedure_Event_148
   \   00000A56   9042               CMP      R0,R2
   \   00000A58   06D3               BCC      ??Procedure_Event_147
   \                     ??Procedure_Event_148:
   \   00000A5A   5348               LDR      R0,??Procedure_Event_136+0x4  ;; TextToChangeLength + 64
   \   00000A5C   03C8               LDM      R0!,{R0,R1}
   \   00000A5E   8B42               CMP      R3,R1
   \   00000A60   0ED8               BHI      ??Procedure_Event_141
   \   00000A62   01D3               BCC      ??Procedure_Event_147
   \   00000A64   8242               CMP      R2,R0
   \   00000A66   0BD2               BCS      ??Procedure_Event_141
   3712                    {
   3713                      Touch_EventTime=g_counter;
   \                     ??Procedure_Event_147:
   \   00000A68   4F48               LDR      R0,??Procedure_Event_136+0x4  ;; TextToChangeLength + 64
   \   00000A6A   0CC0               STM      R0!,{R2,R3}
   3714                      if (TypePrc->Tag.SetCounter>0) 
   \   00000A6C   A068               LDR      R0,[R4, #+8]
   \   00000A6E   0028               CMP      R0,#+0
   \   00000A70   03D0               BEQ      ??Procedure_Event_149
   3715                      {
   3716                       TypePrc->Tag.SetCounter--;
   \   00000A72   A068               LDR      R0,[R4, #+8]
   \   00000A74   401E               SUBS     R0,R0,#+1
   \   00000A76   A060               STR      R0,[R4, #+8]
   \   00000A78   01E0               B        ??Procedure_Event_150
   3717                       
   3718                      }else{
   3719                        TypePrc->Tag.SetCounter=100000;
   \                     ??Procedure_Event_149:
   \   00000A7A   4E48               LDR      R0,??Procedure_Event_136+0x10  ;; 0x186a0
   \   00000A7C   A060               STR      R0,[R4, #+8]
   3720                      }
   3721                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_150:
   \   00000A7E   3E00               MOVS     R6,R7
   3722                    }
   3723                 }
   3724                 
   3725                        //zmiana numeru procedur Dnia
   3726                 if (TypePrc->Type==ProcDay)
   \                     ??Procedure_Event_141:
   \   00000A80   2078               LDRB     R0,[R4, #+0]
   \   00000A82   2F28               CMP      R0,#+47
   \   00000A84   29D1               BNE      ??Procedure_Event_151
   3727                 {  
   3728          
   3729                    
   3730                    if (Button("> ",43,25,18,18)==1) 
   \   00000A86   82B0               SUB      SP,SP,#+8
   \   00000A88   1220               MOVS     R0,#+18
   \   00000A8A   0090               STR      R0,[SP, #+0]
   \   00000A8C   0300               MOVS     R3,R0
   \   00000A8E   1922               MOVS     R2,#+25
   \   00000A90   2B21               MOVS     R1,#+43
   \   00000A92   44A0               ADR      R0,??Procedure_Event_136  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000A94   ........           BL       Button
   \   00000A98   02B0               ADD      SP,SP,#+8
   \   00000A9A   0128               CMP      R0,#+1
   \   00000A9C   08D1               BNE      ??Procedure_Event_152
   3731                    {
   3732            
   3733                      if (TypePrc->Tag.DayOfWeek<Sunday) {TypePrc->Tag.DayOfWeek++;} else {TypePrc->Tag.DayOfWeek=Monday;}
   \   00000A9E   207A               LDRB     R0,[R4, #+8]
   \   00000AA0   0728               CMP      R0,#+7
   \   00000AA2   02D2               BCS      ??Procedure_Event_153
   \   00000AA4   401C               ADDS     R0,R0,#+1
   \   00000AA6   2072               STRB     R0,[R4, #+8]
   \   00000AA8   01E0               B        ??Procedure_Event_154
   \                     ??Procedure_Event_153:
   \   00000AAA   3800               MOVS     R0,R7
   \   00000AAC   2072               STRB     R0,[R4, #+8]
   3734                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_154:
   \   00000AAE   3E00               MOVS     R6,R7
   3735                    }
   3736              
   3737                    if (Button("< ",2,25,18,18)==1) 
   \                     ??Procedure_Event_152:
   \   00000AB0   82B0               SUB      SP,SP,#+8
   \   00000AB2   1220               MOVS     R0,#+18
   \   00000AB4   0090               STR      R0,[SP, #+0]
   \   00000AB6   0300               MOVS     R3,R0
   \   00000AB8   1922               MOVS     R2,#+25
   \   00000ABA   0221               MOVS     R1,#+2
   \   00000ABC   3EA0               ADR      R0,??Procedure_Event_136+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000ABE   ........           BL       Button
   \   00000AC2   02B0               ADD      SP,SP,#+8
   \   00000AC4   0128               CMP      R0,#+1
   \   00000AC6   08D1               BNE      ??Procedure_Event_151
   3738                    {
   3739                      
   3740                        if (TypePrc->Tag.DayOfWeek>Monday) {TypePrc->Tag.DayOfWeek--;} else {TypePrc->Tag.DayOfWeek=Sunday;}
   \   00000AC8   207A               LDRB     R0,[R4, #+8]
   \   00000ACA   0228               CMP      R0,#+2
   \   00000ACC   02D3               BCC      ??Procedure_Event_155
   \   00000ACE   401E               SUBS     R0,R0,#+1
   \   00000AD0   2072               STRB     R0,[R4, #+8]
   \   00000AD2   01E0               B        ??Procedure_Event_156
   \                     ??Procedure_Event_155:
   \   00000AD4   0720               MOVS     R0,#+7
   \   00000AD6   2072               STRB     R0,[R4, #+8]
   3741          
   3742                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_156:
   \   00000AD8   3E00               MOVS     R6,R7
   3743                    }
   3744                 }
   3745                 
   3746                 
   3747                  if (TypePrc->Type==ProcConstAnal) 
   \                     ??Procedure_Event_151:
   \   00000ADA   2078               LDRB     R0,[R4, #+0]
   \   00000ADC   3728               CMP      R0,#+55
   \   00000ADE   20D1               BNE      ??Procedure_Event_157
   3748                 {
   3749                         if  (Button(Speech[g_leng].Zmiana,10,16,40,18)==1)
   \   00000AE0   82B0               SUB      SP,SP,#+8
   \   00000AE2   1220               MOVS     R0,#+18
   \   00000AE4   0090               STR      R0,[SP, #+0]
   \   00000AE6   2823               MOVS     R3,#+40
   \   00000AE8   1022               MOVS     R2,#+16
   \   00000AEA   0A21               MOVS     R1,#+10
   \   00000AEC   8C46               MOV      R12,R1
   \   00000AEE   3349               LDR      R1,??Procedure_Event_136+0x18  ;; 0x50a
   \   00000AF0   3348               LDR      R0,??Procedure_Event_136+0x1C  ;; g_leng
   \   00000AF2   0068               LDR      R0,[R0, #+0]
   \   00000AF4   334D               LDR      R5,??Procedure_Event_136+0x20  ;; 0xa7d
   \   00000AF6   6843               MULS     R0,R5,R0
   \   00000AF8   334D               LDR      R5,??Procedure_Event_136+0x24  ;; Speech
   \   00000AFA   2818               ADDS     R0,R5,R0
   \   00000AFC   4018               ADDS     R0,R0,R1
   \   00000AFE   6146               MOV      R1,R12
   \   00000B00   ........           BL       Button
   \   00000B04   02B0               ADD      SP,SP,#+8
   \   00000B06   0128               CMP      R0,#+1
   \   00000B08   0BD1               BNE      ??Procedure_Event_157
   3750                         {
   3751                           ValueChange= &(TypePrc->Tag.ConstAnValue);
   \   00000B0A   3048               LDR      R0,??Procedure_Event_136+0x28  ;; TextToChangeLength + 100
   \   00000B0C   2100               MOVS     R1,R4
   \   00000B0E   0831               ADDS     R1,R1,#+8
   \   00000B10   0160               STR      R1,[R0, #+0]
   3752                           MenuLevel=(MenuLevel*10+1);
   \   00000B12   2F48               LDR      R0,??Procedure_Event_136+0x2C  ;; TextToChangeLength + 80
   \   00000B14   2E49               LDR      R1,??Procedure_Event_136+0x2C  ;; TextToChangeLength + 80
   \   00000B16   0968               LDR      R1,[R1, #+0]
   \   00000B18   0A22               MOVS     R2,#+10
   \   00000B1A   5143               MULS     R1,R2,R1
   \   00000B1C   491C               ADDS     R1,R1,#+1
   \   00000B1E   0160               STR      R1,[R0, #+0]
   3753                           MenuPaintExecut=1;
   \   00000B20   3E00               MOVS     R6,R7
   3754                         }
   3755                 }
   3756                 
   3757                 
   3758                  if ((TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg)    )
   \                     ??Procedure_Event_157:
   \   00000B22   2078               LDRB     R0,[R4, #+0]
   \   00000B24   3828               CMP      R0,#+56
   \   00000B26   01D0               BEQ      ??Procedure_Event_158
   \   00000B28   3928               CMP      R0,#+57
   \   00000B2A   33D1               BNE      ??Procedure_Event_7
   3759                 {
   3760                 
   3761                      if (Button("> ",43,5,18,18)==1) 
   \                     ??Procedure_Event_158:
   \   00000B2C   82B0               SUB      SP,SP,#+8
   \   00000B2E   1220               MOVS     R0,#+18
   \   00000B30   0090               STR      R0,[SP, #+0]
   \   00000B32   0300               MOVS     R3,R0
   \   00000B34   0522               MOVS     R2,#+5
   \   00000B36   2B21               MOVS     R1,#+43
   \   00000B38   1AA0               ADR      R0,??Procedure_Event_136  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000B3A   ........           BL       Button
   \   00000B3E   02B0               ADD      SP,SP,#+8
   \   00000B40   0128               CMP      R0,#+1
   \   00000B42   0DD1               BNE      ??Procedure_Event_159
   3762                      {
   3763                        if (TypePrc->Nr<0)
   \   00000B44   2056               LDRSB    R0,[R4, R0]
   \   00000B46   0028               CMP      R0,#+0
   \   00000B48   207A               LDRB     R0,[R4, #+8]
   \   00000B4A   04D5               BPL      ??Procedure_Event_160
   3764                        {
   3765                          if (TypePrc->Tag.RegNr<AnalogVarAmount-1) TypePrc->Tag.RegNr++;  
   \   00000B4C   1328               CMP      R0,#+19
   \   00000B4E   06D2               BCS      ??Procedure_Event_161
   \   00000B50   401C               ADDS     R0,R0,#+1
   \   00000B52   2072               STRB     R0,[R4, #+8]
   \   00000B54   03E0               B        ??Procedure_Event_161
   3766                        }else{
   3767                          if (TypePrc->Tag.RegNr<NumberReg-1) TypePrc->Tag.RegNr++;
   \                     ??Procedure_Event_160:
   \   00000B56   0A28               CMP      R0,#+10
   \   00000B58   01D2               BCS      ??Procedure_Event_161
   \   00000B5A   401C               ADDS     R0,R0,#+1
   \   00000B5C   2072               STRB     R0,[R4, #+8]
   3768                        }
   3769                        MenuPaintExecut=1;
   \                     ??Procedure_Event_161:
   \   00000B5E   3E00               MOVS     R6,R7
   3770                      }
   3771                      
   3772                      if (Button("< ",2,5,18,18)==1)
   \                     ??Procedure_Event_159:
   \   00000B60   82B0               SUB      SP,SP,#+8
   \   00000B62   1220               MOVS     R0,#+18
   \   00000B64   0090               STR      R0,[SP, #+0]
   \   00000B66   0300               MOVS     R3,R0
   \   00000B68   0522               MOVS     R2,#+5
   \   00000B6A   0221               MOVS     R1,#+2
   \   00000B6C   12A0               ADR      R0,??Procedure_Event_136+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000B6E   ........           BL       Button
   \   00000B72   02B0               ADD      SP,SP,#+8
   \   00000B74   0128               CMP      R0,#+1
   \   00000B76   0DD1               BNE      ??Procedure_Event_7
   3773                      {
   3774                        if (TypePrc->Nr<0)
   \   00000B78   2056               LDRSB    R0,[R4, R0]
   \   00000B7A   0028               CMP      R0,#+0
   \   00000B7C   207A               LDRB     R0,[R4, #+8]
   \   00000B7E   04D5               BPL      ??Procedure_Event_162
   3775                        {
   3776                          if (TypePrc->Tag.RegNr>0) TypePrc->Tag.RegNr--;
   \   00000B80   0028               CMP      R0,#+0
   \   00000B82   06D0               BEQ      ??Procedure_Event_163
   \   00000B84   401E               SUBS     R0,R0,#+1
   \   00000B86   2072               STRB     R0,[R4, #+8]
   \   00000B88   03E0               B        ??Procedure_Event_163
   3777                        }else{
   3778                          if (TypePrc->Tag.RegNr>1) TypePrc->Tag.RegNr--;
   \                     ??Procedure_Event_162:
   \   00000B8A   0228               CMP      R0,#+2
   \   00000B8C   01D3               BCC      ??Procedure_Event_163
   \   00000B8E   401E               SUBS     R0,R0,#+1
   \   00000B90   2072               STRB     R0,[R4, #+8]
   3779                        }
   3780                        MenuPaintExecut=1;
   \                     ??Procedure_Event_163:
   \   00000B92   3E00               MOVS     R6,R7
   3781                      }
   3782                 }
   3783                 
   3784          }
   3785                 
   3786            
   3787                 if ((X_up>0) && (Y_up>0))   exit=0;                 
   3788                  
   3789                 
   3790                 if (MenuPaintExecut) MenuPaint();
   \                     ??Procedure_Event_7:
   \   00000B94   002E               CMP      R6,#+0
   \   00000B96   01D0               BEQ      ??Procedure_Event_164
   \   00000B98   ........           BL       MenuPaint
   3791          
   3792                }//________________________________________________________________________
   \                     ??Procedure_Event_164:
   \   00000B9C   FEBC               POP      {R1-R7}
   \   00000B9E   01BC               POP      {R0}
   \   00000BA0   0047               BX       R0               ;; return
   \   00000BA2   C046               Nop      
   \                     ??Procedure_Event_136:
   \   00000BA4   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000BA8   ........           DC32     TextToChangeLength + 64
   \   00000BAC   ........           DC32     g_counter
   \   00000BB0   10270000           DC32     0x2710
   \   00000BB4   A0860100           DC32     0x186a0
   \   00000BB8   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000BBC   0A050000           DC32     0x50a
   \   00000BC0   ........           DC32     g_leng
   \   00000BC4   7D0A0000           DC32     0xa7d
   \   00000BC8   ........           DC32     Speech
   \   00000BCC   ........           DC32     TextToChangeLength + 100
   \   00000BD0   ........           DC32     TextToChangeLength + 80
   3793                   
   3794          
   3795          
   3796            
   3797          char ValueChangeTxtTmp[8]; 
   3798          char VCTT_ill=0;   //iloæ znaków napisu ValueChangeTxtTmp
   3799          char VCTT_point_flag=0;  //pozycja kropki
   3800          

   \                                 In section Debug.txt, align 4, keep-with-next
   3801          void ValueChange_Paint( short int *ValToChange)
   3802                { 
   \                     ValueChange_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   3803                  List_Paint(Speech[g_leng].Wartosc,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   58A0               ADR      R0,??ValueChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   5548               LDR      R0,??ValueChange_Paint_0+0x4  ;; 0x5dc
   \   0000001E   564C               LDR      R4,??ValueChange_Paint_0+0x8  ;; g_leng
   \   00000020   2468               LDR      R4,[R4, #+0]
   \   00000022   564D               LDR      R5,??ValueChange_Paint_0+0xC  ;; 0xa7d
   \   00000024   6C43               MULS     R4,R5,R4
   \   00000026   564D               LDR      R5,??ValueChange_Paint_0+0x10  ;; Speech
   \   00000028   2C19               ADDS     R4,R5,R4
   \   0000002A   2018               ADDS     R0,R4,R0
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   3804                  
   3805             
   3806                  if (VCTT_ill==0) for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   00000032   544D               LDR      R5,??ValueChange_Paint_0+0x14  ;; VCTT_ill
   \   00000034   2878               LDRB     R0,[R5, #+0]
   \   00000036   0028               CMP      R0,#+0
   \   00000038   0AD1               BNE      ??ValueChange_Paint_1
   \   0000003A   0024               MOVS     R4,#+0
   \   0000003C   2200               MOVS     R2,R4
   \   0000003E   04E0               B        ??ValueChange_Paint_2
   \                     ??ValueChange_Paint_3:
   \   00000040   6918               ADDS     R1,R5,R1
   \   00000042   0A71               STRB     R2,[R1, #+4]
   \   00000044   401C               ADDS     R0,R0,#+1
   \   00000046   0006               LSLS     R0,R0,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Paint_2:
   \   0000004A   0100               MOVS     R1,R0
   \   0000004C   0729               CMP      R1,#+7
   \   0000004E   F7D3               BCC      ??ValueChange_Paint_3
   3807                  
   3808                  H_line(11,106,40,1);
   \                     ??ValueChange_Paint_1:
   \   00000050   0123               MOVS     R3,#+1
   \   00000052   2822               MOVS     R2,#+40
   \   00000054   6A21               MOVS     R1,#+106
   \   00000056   0B20               MOVS     R0,#+11
   \   00000058   ........           BL       H_line
   3809                  H_line(11,96,40,1);
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   2822               MOVS     R2,#+40
   \   00000060   6021               MOVS     R1,#+96
   \   00000062   0B20               MOVS     R0,#+11
   \   00000064   ........           BL       H_line
   3810                  V_line(10,97,9,1); 
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   0922               MOVS     R2,#+9
   \   0000006C   6121               MOVS     R1,#+97
   \   0000006E   0A20               MOVS     R0,#+10
   \   00000070   ........           BL       V_line
   3811                  V_line(51,97,9,1); 
   \   00000074   0123               MOVS     R3,#+1
   \   00000076   0922               MOVS     R2,#+9
   \   00000078   6121               MOVS     R1,#+97
   \   0000007A   3320               MOVS     R0,#+51
   \   0000007C   ........           BL       V_line
   3812          
   3813                  
   3814                  //char txt[7];
   3815                  
   3816                 
   3817                  //tmpVal=*ValueChange;
   3818                  //char dl=sIntToStr(tmpVal, txt);
   3819                  
   3820                  Label(ValueChangeTxtTmp,1,50,97,7,38,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   8021               MOVS     R1,#+128
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   2621               MOVS     R1,#+38
   \   0000008C   0720               MOVS     R0,#+7
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   6123               MOVS     R3,#+97
   \   00000092   3222               MOVS     R2,#+50
   \   00000094   0121               MOVS     R1,#+1
   \   00000096   2D1D               ADDS     R5,R5,#+4
   \   00000098   2800               MOVS     R0,R5
   \   0000009A   ........           BL       Label
   \   0000009E   06B0               ADD      SP,SP,#+24
   3821                                
   3822          
   3823                  
   3824                  char txt[2];
   3825                  txt[1]=0;
   \   000000A0   0024               MOVS     R4,#+0
   \   000000A2   6846               MOV      R0,SP
   \   000000A4   2100               MOVS     R1,R4
   \   000000A6   4170               STRB     R1,[R0, #+1]
   3826                  char ind=0;
   \   000000A8   2700               MOVS     R7,R4
   3827                  for (char j=0; j<3; j++)
   \   000000AA   2500               MOVS     R5,R4
   \   000000AC   25E0               B        ??ValueChange_Paint_4
   3828                    for (char i=0; i<3; i++)
   3829                    {
   3830                      ind++;
   \                     ??ValueChange_Paint_5:
   \   000000AE   7F1C               ADDS     R7,R7,#+1
   \   000000B0   3F06               LSLS     R7,R7,#+24
   \   000000B2   3F0E               LSRS     R7,R7,#+24
   3831                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   000000B4   0122               MOVS     R2,#+1
   \   000000B6   6946               MOV      R1,SP
   \   000000B8   3800               MOVS     R0,R7
   \   000000BA   ........           BL       CharToStr
   3832                      Button(txt,2+20*i,76-(19*j),18,17);
   \   000000BE   82B0               SUB      SP,SP,#+8
   \   000000C0   1120               MOVS     R0,#+17
   \   000000C2   0090               STR      R0,[SP, #+0]
   \   000000C4   1223               MOVS     R3,#+18
   \   000000C6   4C20               MOVS     R0,#+76
   \   000000C8   2900               MOVS     R1,R5
   \   000000CA   1322               MOVS     R2,#+19
   \   000000CC   5143               MULS     R1,R2,R1
   \   000000CE   421A               SUBS     R2,R0,R1
   \   000000D0   1206               LSLS     R2,R2,#+24
   \   000000D2   120E               LSRS     R2,R2,#+24
   \   000000D4   3100               MOVS     R1,R6
   \   000000D6   1420               MOVS     R0,#+20
   \   000000D8   4143               MULS     R1,R0,R1
   \   000000DA   891C               ADDS     R1,R1,#+2
   \   000000DC   0906               LSLS     R1,R1,#+24
   \   000000DE   090E               LSRS     R1,R1,#+24
   \   000000E0   02A8               ADD      R0,SP,#+8
   \   000000E2   ........           BL       Button
   \   000000E6   02B0               ADD      SP,SP,#+8
   3833                    }
   \   000000E8   761C               ADDS     R6,R6,#+1
   \   000000EA   3606               LSLS     R6,R6,#+24
   \   000000EC   360E               LSRS     R6,R6,#+24
   \                     ??ValueChange_Paint_6:
   \   000000EE   3000               MOVS     R0,R6
   \   000000F0   0328               CMP      R0,#+3
   \   000000F2   DCD3               BCC      ??ValueChange_Paint_5
   \   000000F4   6D1C               ADDS     R5,R5,#+1
   \   000000F6   2D06               LSLS     R5,R5,#+24
   \   000000F8   2D0E               LSRS     R5,R5,#+24
   \                     ??ValueChange_Paint_4:
   \   000000FA   2800               MOVS     R0,R5
   \   000000FC   0328               CMP      R0,#+3
   \   000000FE   01D2               BCS      ??ValueChange_Paint_7
   \   00000100   2600               MOVS     R6,R4
   \   00000102   F4E7               B        ??ValueChange_Paint_6
   3834                  Button(".",2+20*0,76-(19*3),18,17);
   \                     ??ValueChange_Paint_7:
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   1120               MOVS     R0,#+17
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   1223               MOVS     R3,#+18
   \   0000010C   1322               MOVS     R2,#+19
   \   0000010E   0221               MOVS     R1,#+2
   \   00000110   1DA0               ADR      R0,??ValueChange_Paint_0+0x18  ;; 0x2E, 0x00, 0x00, 0x00
   \   00000112   ........           BL       Button
   \   00000116   02B0               ADD      SP,SP,#+8
   3835                  Button("0",2+20*1,76-(19*3),18,17);
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   1120               MOVS     R0,#+17
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   1223               MOVS     R3,#+18
   \   00000120   1322               MOVS     R2,#+19
   \   00000122   1621               MOVS     R1,#+22
   \   00000124   19A0               ADR      R0,??ValueChange_Paint_0+0x1C  ;; 0x30, 0x00, 0x00, 0x00
   \   00000126   ........           BL       Button
   \   0000012A   02B0               ADD      SP,SP,#+8
   3836                  Button("-",2+20*2,76-(19*3),18,17);
   \   0000012C   82B0               SUB      SP,SP,#+8
   \   0000012E   1120               MOVS     R0,#+17
   \   00000130   0090               STR      R0,[SP, #+0]
   \   00000132   1223               MOVS     R3,#+18
   \   00000134   1322               MOVS     R2,#+19
   \   00000136   2A21               MOVS     R1,#+42
   \   00000138   15A0               ADR      R0,??ValueChange_Paint_0+0x20  ;; 0x2D, 0x00, 0x00, 0x00
   \   0000013A   ........           BL       Button
   \   0000013E   02B0               ADD      SP,SP,#+8
   3837                  
   3838                  Button("Ok ",22,4,38,13);
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0D20               MOVS     R0,#+13
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   2623               MOVS     R3,#+38
   \   00000148   0422               MOVS     R2,#+4
   \   0000014A   1621               MOVS     R1,#+22
   \   0000014C   11A0               ADR      R0,??ValueChange_Paint_0+0x24  ;; "Ok "
   \   0000014E   ........           BL       Button
   \   00000152   02B0               ADD      SP,SP,#+8
   3839                  Button("C ",3,4,17,13);
   \   00000154   82B0               SUB      SP,SP,#+8
   \   00000156   0D20               MOVS     R0,#+13
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   1123               MOVS     R3,#+17
   \   0000015C   0422               MOVS     R2,#+4
   \   0000015E   0321               MOVS     R1,#+3
   \   00000160   0DA0               ADR      R0,??ValueChange_Paint_0+0x28  ;; 0x43, 0x20, 0x00, 0x00
   \   00000162   ........           BL       Button
   \   00000166   02B0               ADD      SP,SP,#+8
   3840                }
   \   00000168   F8BC               POP      {R3-R7}
   \   0000016A   01BC               POP      {R0}
   \   0000016C   0047               BX       R0               ;; return
   \   0000016E   C046               Nop      
   \                     ??ValueChange_Paint_0:
   \   00000170   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000174   DC050000           DC32     0x5dc
   \   00000178   ........           DC32     g_leng
   \   0000017C   7D0A0000           DC32     0xa7d
   \   00000180   ........           DC32     Speech
   \   00000184   ........           DC32     VCTT_ill
   \   00000188   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   0000018C   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000190   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000194   4F6B2000           DC8      "Ok "
   \   00000198   43200000           DC8      0x43, 0x20, 0x00, 0x00
   3841          
   3842          
   3843          

   \                                 In section Debug.txt, align 4, keep-with-next
   3844          void ValueChange_Evant( short int *ValToChange)
   3845                { 
   \                     ValueChange_Evant:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   0024               MOVS     R4,#+0
   3846                 int ValueTmp=0; 
   3847                 char ind=0;
   \   00000006   2700               MOVS     R7,R4
   3848                 char txt[2];
   3849                 char Refresh=0;
   \   00000008   6846               MOV      R0,SP
   \   0000000A   2100               MOVS     R1,R4
   \   0000000C   4170               STRB     R1,[R0, #+1]
   3850                 char MaxChar;
   3851                 
   3852          
   3853                 txt[1]=0;
   \   0000000E   02A8               ADD      R0,SP,#+8
   \   00000010   4170               STRB     R1,[R0, #+1]
   3854                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000012   BE48               LDR      R0,??ValueChange_Evant_0  ;; X_up
   \   00000014   405E               LDRSH    R0,[R0, R1]
   \   00000016   2F28               CMP      R0,#+47
   \   00000018   21DB               BLT      ??ValueChange_Evant_1
   \   0000001A   3F28               CMP      R0,#+63
   \   0000001C   1FDA               BGE      ??ValueChange_Evant_1
   \   0000001E   BC48               LDR      R0,??ValueChange_Evant_0+0x4  ;; Y_up
   \   00000020   405E               LDRSH    R0,[R0, R1]
   \   00000022   7128               CMP      R0,#+113
   \   00000024   1BDB               BLT      ??ValueChange_Evant_1
   \   00000026   7F28               CMP      R0,#+127
   \   00000028   19DA               BGE      ??ValueChange_Evant_1
   3855                  {
   3856                       for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   0000002A   0800               MOVS     R0,R1
   \   0000002C   06E0               B        ??ValueChange_Evant_2
   \                     ??ValueChange_Evant_3:
   \   0000002E   B94A               LDR      R2,??ValueChange_Evant_0+0x8  ;; VCTT_ill
   \   00000030   5118               ADDS     R1,R2,R1
   \   00000032   2200               MOVS     R2,R4
   \   00000034   0A71               STRB     R2,[R1, #+4]
   \   00000036   401C               ADDS     R0,R0,#+1
   \   00000038   0006               LSLS     R0,R0,#+24
   \   0000003A   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Evant_2:
   \   0000003C   0100               MOVS     R1,R0
   \   0000003E   0729               CMP      R1,#+7
   \   00000040   F5D3               BCC      ??ValueChange_Evant_3
   3857                          ValueTmp=0;
   3858                          VCTT_ill=0;
   \   00000042   B44D               LDR      R5,??ValueChange_Evant_0+0x8  ;; VCTT_ill
   \   00000044   2000               MOVS     R0,R4
   \   00000046   2870               STRB     R0,[R5, #+0]
   3859                          VCTT_point_flag=0;
   \   00000048   6870               STRB     R0,[R5, #+1]
   3860                    
   3861                      MenuLevel=(MenuLevel/10);
   \   0000004A   B34E               LDR      R6,??ValueChange_Evant_0+0xC  ;; TextToChangeLength
   \   0000004C   306D               LDR      R0,[R6, #+80]
   \   0000004E   0A21               MOVS     R1,#+10
   \   00000050   ........           BL       __aeabi_idivmod
   \   00000054   3065               STR      R0,[R6, #+80]
   3862                      Refresh=1;
   \   00000056   6846               MOV      R0,SP
   \   00000058   0121               MOVS     R1,#+1
   \   0000005A   4170               STRB     R1,[R0, #+1]
   \   0000005C   4BE1               B        ??ValueChange_Evant_4
   3863                  } else {
   3864                    
   3865                           
   3866                    if (ValueChangeTxtTmp[0]=='-')
   \                     ??ValueChange_Evant_1:
   \   0000005E   AD4D               LDR      R5,??ValueChange_Evant_0+0x8  ;; VCTT_ill
   \   00000060   6878               LDRB     R0,[R5, #+1]
   \   00000062   2979               LDRB     R1,[R5, #+4]
   \   00000064   2D29               CMP      R1,#+45
   \   00000066   08D1               BNE      ??ValueChange_Evant_5
   3867                    {
   3868                      if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   6846               MOV      R0,SP
   \   0000006C   02D0               BEQ      ??ValueChange_Evant_6
   \   0000006E   0721               MOVS     R1,#+7
   \   00000070   0170               STRB     R1,[R0, #+0]
   \   00000072   0AE0               B        ??ValueChange_Evant_7
   \                     ??ValueChange_Evant_6:
   \   00000074   0521               MOVS     R1,#+5
   \   00000076   0170               STRB     R1,[R0, #+0]
   \   00000078   07E0               B        ??ValueChange_Evant_7
   3869                    }else{
   3870                      if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   \                     ??ValueChange_Evant_5:
   \   0000007A   0028               CMP      R0,#+0
   \   0000007C   6846               MOV      R0,SP
   \   0000007E   02D0               BEQ      ??ValueChange_Evant_8
   \   00000080   0621               MOVS     R1,#+6
   \   00000082   0170               STRB     R1,[R0, #+0]
   \   00000084   01E0               B        ??ValueChange_Evant_7
   \                     ??ValueChange_Evant_8:
   \   00000086   0421               MOVS     R1,#+4
   \   00000088   0170               STRB     R1,[R0, #+0]
   3871                    }
   3872                   
   3873                       
   3874                    for (char j=0; j<3; j++)
   \                     ??ValueChange_Evant_7:
   \   0000008A   2000               MOVS     R0,R4
   \   0000008C   0190               STR      R0,[SP, #+4]
   \   0000008E   40E0               B        ??ValueChange_Evant_9
   3875                    {
   3876                    for (char i=0; i<3; i++)
   3877                    {
   3878                      ind++;
   \                     ??ValueChange_Evant_10:
   \   00000090   7F1C               ADDS     R7,R7,#+1
   \   00000092   3F06               LSLS     R7,R7,#+24
   \   00000094   3F0E               LSRS     R7,R7,#+24
   3879                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   00000096   0122               MOVS     R2,#+1
   \   00000098   02A9               ADD      R1,SP,#+8
   \   0000009A   3800               MOVS     R0,R7
   \   0000009C   ........           BL       CharToStr
   3880                      if ((Button(txt,2+20*i,76-(19*j),18,17)==1) && (VCTT_ill<MaxChar) && ((VCTT_point_flag==0) || (VCTT_ill<=VCTT_point_flag+1) ) ){ValueChangeTxtTmp[VCTT_ill++]=48+ind;   Refresh=1;}
   \   000000A0   82B0               SUB      SP,SP,#+8
   \   000000A2   1120               MOVS     R0,#+17
   \   000000A4   0090               STR      R0,[SP, #+0]
   \   000000A6   1223               MOVS     R3,#+18
   \   000000A8   4C20               MOVS     R0,#+76
   \   000000AA   0399               LDR      R1,[SP, #+12]
   \   000000AC   0906               LSLS     R1,R1,#+24
   \   000000AE   090E               LSRS     R1,R1,#+24
   \   000000B0   1322               MOVS     R2,#+19
   \   000000B2   5143               MULS     R1,R2,R1
   \   000000B4   421A               SUBS     R2,R0,R1
   \   000000B6   1206               LSLS     R2,R2,#+24
   \   000000B8   120E               LSRS     R2,R2,#+24
   \   000000BA   3100               MOVS     R1,R6
   \   000000BC   1420               MOVS     R0,#+20
   \   000000BE   4143               MULS     R1,R0,R1
   \   000000C0   891C               ADDS     R1,R1,#+2
   \   000000C2   0906               LSLS     R1,R1,#+24
   \   000000C4   090E               LSRS     R1,R1,#+24
   \   000000C6   04A8               ADD      R0,SP,#+16
   \   000000C8   ........           BL       Button
   \   000000CC   02B0               ADD      SP,SP,#+8
   \   000000CE   0128               CMP      R0,#+1
   \   000000D0   14D1               BNE      ??ValueChange_Evant_11
   \   000000D2   2878               LDRB     R0,[R5, #+0]
   \   000000D4   6946               MOV      R1,SP
   \   000000D6   0978               LDRB     R1,[R1, #+0]
   \   000000D8   8842               CMP      R0,R1
   \   000000DA   0FD2               BCS      ??ValueChange_Evant_11
   \   000000DC   0100               MOVS     R1,R0
   \   000000DE   6A78               LDRB     R2,[R5, #+1]
   \   000000E0   002A               CMP      R2,#+0
   \   000000E2   02D0               BEQ      ??ValueChange_Evant_12
   \   000000E4   521C               ADDS     R2,R2,#+1
   \   000000E6   8A42               CMP      R2,R1
   \   000000E8   08DB               BLT      ??ValueChange_Evant_11
   \                     ??ValueChange_Evant_12:
   \   000000EA   6918               ADDS     R1,R5,R1
   \   000000EC   3A00               MOVS     R2,R7
   \   000000EE   3032               ADDS     R2,R2,#+48
   \   000000F0   0A71               STRB     R2,[R1, #+4]
   \   000000F2   401C               ADDS     R0,R0,#+1
   \   000000F4   2870               STRB     R0,[R5, #+0]
   \   000000F6   6846               MOV      R0,SP
   \   000000F8   0121               MOVS     R1,#+1
   \   000000FA   4170               STRB     R1,[R0, #+1]
   3881                      
   3882                     }
   \                     ??ValueChange_Evant_11:
   \   000000FC   761C               ADDS     R6,R6,#+1
   \   000000FE   3606               LSLS     R6,R6,#+24
   \   00000100   360E               LSRS     R6,R6,#+24
   \                     ??ValueChange_Evant_13:
   \   00000102   3000               MOVS     R0,R6
   \   00000104   0328               CMP      R0,#+3
   \   00000106   C3D3               BCC      ??ValueChange_Evant_10
   \   00000108   0198               LDR      R0,[SP, #+4]
   \   0000010A   401C               ADDS     R0,R0,#+1
   \   0000010C   0006               LSLS     R0,R0,#+24
   \   0000010E   000E               LSRS     R0,R0,#+24
   \   00000110   0190               STR      R0,[SP, #+4]
   \                     ??ValueChange_Evant_9:
   \   00000112   0198               LDR      R0,[SP, #+4]
   \   00000114   0006               LSLS     R0,R0,#+24
   \   00000116   000E               LSRS     R0,R0,#+24
   \   00000118   0328               CMP      R0,#+3
   \   0000011A   01D2               BCS      ??ValueChange_Evant_14
   \   0000011C   2600               MOVS     R6,R4
   \   0000011E   F0E7               B        ??ValueChange_Evant_13
   3883                    }
   3884                      
   3885                      
   3886                      if ((Button(".",2+20*0,76-(19*3),18,17)==1) && (VCTT_ill<MaxChar+2) && (VCTT_point_flag==0)) 
   \                     ??ValueChange_Evant_14:
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   1120               MOVS     R0,#+17
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   1223               MOVS     R3,#+18
   \   00000128   1322               MOVS     R2,#+19
   \   0000012A   0221               MOVS     R1,#+2
   \   0000012C   7BA0               ADR      R0,??ValueChange_Evant_0+0x10  ;; 0x2E, 0x00, 0x00, 0x00
   \   0000012E   ........           BL       Button
   \   00000132   02B0               ADD      SP,SP,#+8
   \   00000134   0128               CMP      R0,#+1
   \   00000136   27D1               BNE      ??ValueChange_Evant_15
   \   00000138   2878               LDRB     R0,[R5, #+0]
   \   0000013A   0100               MOVS     R1,R0
   \   0000013C   6A46               MOV      R2,SP
   \   0000013E   1278               LDRB     R2,[R2, #+0]
   \   00000140   921C               ADDS     R2,R2,#+2
   \   00000142   9142               CMP      R1,R2
   \   00000144   20DA               BGE      ??ValueChange_Evant_15
   \   00000146   6A78               LDRB     R2,[R5, #+1]
   \   00000148   002A               CMP      R2,#+0
   \   0000014A   1DD1               BNE      ??ValueChange_Evant_15
   3887                      {ValueChangeTxtTmp[VCTT_ill++]='.';   Refresh=1; VCTT_point_flag=VCTT_ill-1;
   \   0000014C   6918               ADDS     R1,R5,R1
   \   0000014E   2E22               MOVS     R2,#+46
   \   00000150   0A71               STRB     R2,[R1, #+4]
   \   00000152   401C               ADDS     R0,R0,#+1
   \   00000154   2870               STRB     R0,[R5, #+0]
   \   00000156   6946               MOV      R1,SP
   \   00000158   0122               MOVS     R2,#+1
   \   0000015A   4A70               STRB     R2,[R1, #+1]
   \   0000015C   401E               SUBS     R0,R0,#+1
   \   0000015E   6870               STRB     R0,[R5, #+1]
   3888                        if (ValueChangeTxtTmp[0]=='-')
   \   00000160   2979               LDRB     R1,[R5, #+4]
   \   00000162   2D29               CMP      R1,#+45
   \   00000164   08D1               BNE      ??ValueChange_Evant_16
   3889                         {
   3890                          if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   00000166   0028               CMP      R0,#+0
   \   00000168   6846               MOV      R0,SP
   \   0000016A   02D0               BEQ      ??ValueChange_Evant_17
   \   0000016C   0721               MOVS     R1,#+7
   \   0000016E   0170               STRB     R1,[R0, #+0]
   \   00000170   0AE0               B        ??ValueChange_Evant_15
   \                     ??ValueChange_Evant_17:
   \   00000172   0521               MOVS     R1,#+5
   \   00000174   0170               STRB     R1,[R0, #+0]
   \   00000176   07E0               B        ??ValueChange_Evant_15
   3891                          }else{
   3892                          if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   \                     ??ValueChange_Evant_16:
   \   00000178   0028               CMP      R0,#+0
   \   0000017A   6846               MOV      R0,SP
   \   0000017C   02D0               BEQ      ??ValueChange_Evant_18
   \   0000017E   0621               MOVS     R1,#+6
   \   00000180   0170               STRB     R1,[R0, #+0]
   \   00000182   01E0               B        ??ValueChange_Evant_15
   \                     ??ValueChange_Evant_18:
   \   00000184   0421               MOVS     R1,#+4
   \   00000186   0170               STRB     R1,[R0, #+0]
   3893                          }
   3894                      }
   3895                      
   3896                   
   3897                      if ((Button("0",2+20*1,76-(19*3),18,17)==1) && (VCTT_ill<MaxChar) && ((VCTT_point_flag==0) || (VCTT_ill<=VCTT_point_flag+1))) {ValueChangeTxtTmp[VCTT_ill++]=48;    Refresh=1;}
   \                     ??ValueChange_Evant_15:
   \   00000188   82B0               SUB      SP,SP,#+8
   \   0000018A   1120               MOVS     R0,#+17
   \   0000018C   0090               STR      R0,[SP, #+0]
   \   0000018E   1223               MOVS     R3,#+18
   \   00000190   1322               MOVS     R2,#+19
   \   00000192   1621               MOVS     R1,#+22
   \   00000194   62A0               ADR      R0,??ValueChange_Evant_0+0x14  ;; 0x30, 0x00, 0x00, 0x00
   \   00000196   ........           BL       Button
   \   0000019A   02B0               ADD      SP,SP,#+8
   \   0000019C   0128               CMP      R0,#+1
   \   0000019E   13D1               BNE      ??ValueChange_Evant_19
   \   000001A0   2878               LDRB     R0,[R5, #+0]
   \   000001A2   6946               MOV      R1,SP
   \   000001A4   0978               LDRB     R1,[R1, #+0]
   \   000001A6   8842               CMP      R0,R1
   \   000001A8   0ED2               BCS      ??ValueChange_Evant_19
   \   000001AA   0100               MOVS     R1,R0
   \   000001AC   6A78               LDRB     R2,[R5, #+1]
   \   000001AE   002A               CMP      R2,#+0
   \   000001B0   02D0               BEQ      ??ValueChange_Evant_20
   \   000001B2   521C               ADDS     R2,R2,#+1
   \   000001B4   8A42               CMP      R2,R1
   \   000001B6   07DB               BLT      ??ValueChange_Evant_19
   \                     ??ValueChange_Evant_20:
   \   000001B8   6918               ADDS     R1,R5,R1
   \   000001BA   3022               MOVS     R2,#+48
   \   000001BC   0A71               STRB     R2,[R1, #+4]
   \   000001BE   401C               ADDS     R0,R0,#+1
   \   000001C0   2870               STRB     R0,[R5, #+0]
   \   000001C2   6846               MOV      R0,SP
   \   000001C4   0121               MOVS     R1,#+1
   \   000001C6   4170               STRB     R1,[R0, #+1]
   3898                      if ((Button("-",2+20*2,76-(19*3),18,17)==1) && (VCTT_ill==0))
   \                     ??ValueChange_Evant_19:
   \   000001C8   82B0               SUB      SP,SP,#+8
   \   000001CA   1120               MOVS     R0,#+17
   \   000001CC   0090               STR      R0,[SP, #+0]
   \   000001CE   1223               MOVS     R3,#+18
   \   000001D0   1322               MOVS     R2,#+19
   \   000001D2   2A21               MOVS     R1,#+42
   \   000001D4   53A0               ADR      R0,??ValueChange_Evant_0+0x18  ;; 0x2D, 0x00, 0x00, 0x00
   \   000001D6   ........           BL       Button
   \   000001DA   02B0               ADD      SP,SP,#+8
   \   000001DC   0128               CMP      R0,#+1
   \   000001DE   09D1               BNE      ??ValueChange_Evant_21
   \   000001E0   2878               LDRB     R0,[R5, #+0]
   \   000001E2   0028               CMP      R0,#+0
   \   000001E4   06D1               BNE      ??ValueChange_Evant_21
   3899                      {
   3900                        ValueChangeTxtTmp[VCTT_ill++]='-';    
   \   000001E6   2D20               MOVS     R0,#+45
   \   000001E8   2871               STRB     R0,[R5, #+4]
   \   000001EA   0120               MOVS     R0,#+1
   \   000001EC   0100               MOVS     R1,R0
   \   000001EE   2970               STRB     R1,[R5, #+0]
   3901                        if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   3902                        Refresh=1;
   \   000001F0   6946               MOV      R1,SP
   \   000001F2   4870               STRB     R0,[R1, #+1]
   3903                      }
   3904                      
   3905                      
   3906                  
   3907                      
   3908                      if (Button("C ",3,4,17,13)==1)
   \                     ??ValueChange_Evant_21:
   \   000001F4   82B0               SUB      SP,SP,#+8
   \   000001F6   0D20               MOVS     R0,#+13
   \   000001F8   0090               STR      R0,[SP, #+0]
   \   000001FA   1123               MOVS     R3,#+17
   \   000001FC   0422               MOVS     R2,#+4
   \   000001FE   0321               MOVS     R1,#+3
   \   00000200   49A0               ADR      R0,??ValueChange_Evant_0+0x1C  ;; 0x43, 0x20, 0x00, 0x00
   \   00000202   ........           BL       Button
   \   00000206   02B0               ADD      SP,SP,#+8
   \   00000208   0128               CMP      R0,#+1
   \   0000020A   10D1               BNE      ??ValueChange_Evant_22
   3909                      {
   3910                        if (VCTT_ill) VCTT_ill--;
   \   0000020C   2878               LDRB     R0,[R5, #+0]
   \   0000020E   0028               CMP      R0,#+0
   \   00000210   01D0               BEQ      ??ValueChange_Evant_23
   \   00000212   401E               SUBS     R0,R0,#+1
   \   00000214   2870               STRB     R0,[R5, #+0]
   3911                        if (ValueChangeTxtTmp[VCTT_ill]=='.') VCTT_point_flag=0;
   \                     ??ValueChange_Evant_23:
   \   00000216   2878               LDRB     R0,[R5, #+0]
   \   00000218   2818               ADDS     R0,R5,R0
   \   0000021A   0179               LDRB     R1,[R0, #+4]
   \   0000021C   2E29               CMP      R1,#+46
   \   0000021E   01D1               BNE      ??ValueChange_Evant_24
   \   00000220   2100               MOVS     R1,R4
   \   00000222   6970               STRB     R1,[R5, #+1]
   3912                        ValueChangeTxtTmp[VCTT_ill]=0;
   \                     ??ValueChange_Evant_24:
   \   00000224   2100               MOVS     R1,R4
   \   00000226   0171               STRB     R1,[R0, #+4]
   3913                        
   3914                        if (ValueChangeTxtTmp[0]=='-')
   3915                        {
   3916                          if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   3917                        }else{
   3918                          if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   3919                        }
   3920                        Refresh=1;
   \   00000228   6846               MOV      R0,SP
   \   0000022A   0121               MOVS     R1,#+1
   \   0000022C   4170               STRB     R1,[R0, #+1]
   3921                      }
   3922                    
   3923                  
   3924                      int mnz=10;     
   \                     ??ValueChange_Evant_22:
   \   0000022E   0A26               MOVS     R6,#+10
   3925                      char prs=0;
   \   00000230   2700               MOVS     R7,R4
   3926                      if (ValueChangeTxtTmp[0]=='-')  prs=1; 
   \   00000232   2879               LDRB     R0,[R5, #+4]
   \   00000234   2D28               CMP      R0,#+45
   \   00000236   00D1               BNE      ??ValueChange_Evant_25
   \   00000238   0127               MOVS     R7,#+1
   3927                      //zapamiêtanie wartoci
   3928                      if (Button("Ok ",22,4,38,13)==1)
   \                     ??ValueChange_Evant_25:
   \   0000023A   82B0               SUB      SP,SP,#+8
   \   0000023C   0D20               MOVS     R0,#+13
   \   0000023E   0090               STR      R0,[SP, #+0]
   \   00000240   2623               MOVS     R3,#+38
   \   00000242   0422               MOVS     R2,#+4
   \   00000244   1621               MOVS     R1,#+22
   \   00000246   39A0               ADR      R0,??ValueChange_Evant_0+0x20  ;; "Ok "
   \   00000248   ........           BL       Button
   \   0000024C   02B0               ADD      SP,SP,#+8
   \   0000024E   0128               CMP      R0,#+1
   \   00000250   51D1               BNE      ??ValueChange_Evant_4
   \   00000252   6878               LDRB     R0,[R5, #+1]
   \   00000254   0028               CMP      R0,#+0
   \   00000256   11D1               BNE      ??ValueChange_Evant_26
   3929                      {
   3930                        //je¿eli nie ma kropki 
   3931                        if (VCTT_point_flag==0)
   3932                        {
   3933                          for (char i=0; i<VCTT_ill-prs; i++)
   \                     ??ValueChange_Evant_27:
   \   00000258   0100               MOVS     R1,R0
   \   0000025A   2A78               LDRB     R2,[R5, #+0]
   \   0000025C   3B00               MOVS     R3,R7
   \   0000025E   D31A               SUBS     R3,R2,R3
   \   00000260   9942               CMP      R1,R3
   \   00000262   22DA               BGE      ??ValueChange_Evant_28
   3934                          {
   3935                             ValueTmp+=(ValueChangeTxtTmp[VCTT_ill-i-1]-48)*mnz;
   \   00000264   511A               SUBS     R1,R2,R1
   \   00000266   6918               ADDS     R1,R5,R1
   \   00000268   C978               LDRB     R1,[R1, #+3]
   \   0000026A   3039               SUBS     R1,R1,#+48
   \   0000026C   7143               MULS     R1,R6,R1
   \   0000026E   6418               ADDS     R4,R4,R1
   3936                             mnz*=10;
   \   00000270   0A21               MOVS     R1,#+10
   \   00000272   4E43               MULS     R6,R1,R6
   3937                          }
   \   00000274   401C               ADDS     R0,R0,#+1
   \   00000276   0006               LSLS     R0,R0,#+24
   \   00000278   000E               LSRS     R0,R0,#+24
   \   0000027A   EDE7               B        ??ValueChange_Evant_27
   3938                          
   3939                          
   3940                        }else{
   3941                          ValueTmp+=ValueChangeTxtTmp[VCTT_ill-1]-48;
   \                     ??ValueChange_Evant_26:
   \   0000027C   2878               LDRB     R0,[R5, #+0]
   \   0000027E   2818               ADDS     R0,R5,R0
   \   00000280   C478               LDRB     R4,[R0, #+3]
   \   00000282   303C               SUBS     R4,R4,#+48
   3942                          
   3943                          for (char i=1; i<=VCTT_point_flag-prs; i++)
   \   00000284   0120               MOVS     R0,#+1
   \   00000286   0AE0               B        ??ValueChange_Evant_29
   3944                          {
   3945                             ValueTmp+=(ValueChangeTxtTmp[VCTT_point_flag-i]-48)*mnz;
   \                     ??ValueChange_Evant_30:
   \   00000288   891A               SUBS     R1,R1,R2
   \   0000028A   6918               ADDS     R1,R5,R1
   \   0000028C   0979               LDRB     R1,[R1, #+4]
   \   0000028E   3039               SUBS     R1,R1,#+48
   \   00000290   7143               MULS     R1,R6,R1
   \   00000292   6418               ADDS     R4,R4,R1
   3946                             mnz*=10;
   \   00000294   0A21               MOVS     R1,#+10
   \   00000296   4E43               MULS     R6,R1,R6
   3947                          }
   \   00000298   401C               ADDS     R0,R0,#+1
   \   0000029A   0006               LSLS     R0,R0,#+24
   \   0000029C   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Evant_29:
   \   0000029E   6978               LDRB     R1,[R5, #+1]
   \   000002A0   0200               MOVS     R2,R0
   \   000002A2   3B00               MOVS     R3,R7
   \   000002A4   CB1A               SUBS     R3,R1,R3
   \   000002A6   9342               CMP      R3,R2
   \   000002A8   EEDA               BGE      ??ValueChange_Evant_30
   3948                          
   3949                        }
   3950                        if (ValueTmp>30000) 
   \                     ??ValueChange_Evant_28:
   \   000002AA   2148               LDR      R0,??ValueChange_Evant_0+0x24  ;; 0x7531
   \   000002AC   8442               CMP      R4,R0
   \   000002AE   1A4E               LDR      R6,??ValueChange_Evant_0+0xC  ;; TextToChangeLength
   \   000002B0   306D               LDR      R0,[R6, #+80]
   \   000002B2   04DB               BLT      ??ValueChange_Evant_31
   3951                        {
   3952                          //ValueTmp=30000;
   3953                          MenuLevel=MenuLevel*10+1;
   \   000002B4   0A21               MOVS     R1,#+10
   \   000002B6   4843               MULS     R0,R1,R0
   \   000002B8   401C               ADDS     R0,R0,#+1
   \   000002BA   3065               STR      R0,[R6, #+80]
   \   000002BC   18E0               B        ??ValueChange_Evant_32
   3954                        }else{
   3955                          MenuLevel/=10; 
   \                     ??ValueChange_Evant_31:
   \   000002BE   0A21               MOVS     R1,#+10
   \   000002C0   ........           BL       __aeabi_idivmod
   \   000002C4   3065               STR      R0,[R6, #+80]
   3956                          if (ValueChangeTxtTmp[0]=='-')  ValueTmp*=-1; 
   \   000002C6   2879               LDRB     R0,[R5, #+4]
   \   000002C8   2D28               CMP      R0,#+45
   \   000002CA   01D1               BNE      ??ValueChange_Evant_33
   \   000002CC   2000               MOVS     R0,R4
   \   000002CE   4442               RSBS     R4,R0,#+0
   3957                          *ValToChange=ValueTmp;
   \                     ??ValueChange_Evant_33:
   \   000002D0   0498               LDR      R0,[SP, #+16]
   \   000002D2   0480               STRH     R4,[R0, #+0]
   3958                          for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   000002D4   0020               MOVS     R0,#+0
   \   000002D6   0200               MOVS     R2,R0
   \   000002D8   04E0               B        ??ValueChange_Evant_34
   \                     ??ValueChange_Evant_35:
   \   000002DA   6918               ADDS     R1,R5,R1
   \   000002DC   0A71               STRB     R2,[R1, #+4]
   \   000002DE   401C               ADDS     R0,R0,#+1
   \   000002E0   0006               LSLS     R0,R0,#+24
   \   000002E2   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Evant_34:
   \   000002E4   0100               MOVS     R1,R0
   \   000002E6   0729               CMP      R1,#+7
   \   000002E8   F7D3               BCC      ??ValueChange_Evant_35
   3959                          ValueTmp=0;
   3960                          VCTT_ill=0;
   \   000002EA   1000               MOVS     R0,R2
   \   000002EC   2870               STRB     R0,[R5, #+0]
   3961                          VCTT_point_flag=0;
   \   000002EE   6870               STRB     R0,[R5, #+1]
   3962                          
   3963                        }
   3964                        
   3965                        
   3966                        Refresh=1;
   \                     ??ValueChange_Evant_32:
   \   000002F0   6846               MOV      R0,SP
   \   000002F2   0121               MOVS     R1,#+1
   \   000002F4   4170               STRB     R1,[R0, #+1]
   3967                        
   3968                      }
   3969                    
   3970                    
   3971                  }
   3972                  
   3973                  
   3974                  if (Refresh==1) MenuPaint();
   \                     ??ValueChange_Evant_4:
   \   000002F6   6846               MOV      R0,SP
   \   000002F8   4078               LDRB     R0,[R0, #+1]
   \   000002FA   0128               CMP      R0,#+1
   \   000002FC   01D1               BNE      ??ValueChange_Evant_36
   \   000002FE   ........           BL       MenuPaint
   3975                  
   3976          }
   \                     ??ValueChange_Evant_36:
   \   00000302   05B0               ADD      SP,SP,#+20
   \   00000304   F0BC               POP      {R4-R7}
   \   00000306   01BC               POP      {R0}
   \   00000308   0047               BX       R0               ;; return
   \   0000030A   C046               Nop      
   \                     ??ValueChange_Evant_0:
   \   0000030C   ........           DC32     X_up
   \   00000310   ........           DC32     Y_up
   \   00000314   ........           DC32     VCTT_ill
   \   00000318   ........           DC32     TextToChangeLength
   \   0000031C   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   00000320   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000324   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000328   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   0000032C   4F6B2000           DC8      "Ok "
   \   00000330   31750000           DC32     0x7531
   3977                
   3978          
   3979          //*-----------------------------------------------------------------------
   3980          char *ptxt;

   \                                 In section Debug.txt, align 4, keep-with-next
   3981          void LaderChange_Paint(void)
   3982                { 
   \                     LaderChange_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   3983                 char y=20;   //przesuniêcie w dó³
   3984          
   3985                 
   3986                  List_Paint(Speech[g_leng].Opcje,2,15,y,0,3,Speech[g_leng].DodajWiersz, Speech[g_leng].UsunWiersz, 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0F48               LDR      R0,??LaderChange_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0F49               LDR      R1,??LaderChange_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   0F49               LDR      R1,??LaderChange_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0C48               LDR      R0,??LaderChange_Paint_0+0xC  ;; 0x41a
   \   0000001A   2118               ADDS     R1,R4,R0
   \   0000001C   0F38               SUBS     R0,R0,#+15
   \   0000001E   2018               ADDS     R0,R4,R0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0321               MOVS     R1,#+3
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   1423               MOVS     R3,#+20
   \   0000002A   0F22               MOVS     R2,#+15
   \   0000002C   0221               MOVS     R1,#+2
   \   0000002E   8720               MOVS     R0,#+135
   \   00000030   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000032   2018               ADDS     R0,R4,R0
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   3987          
   3988          
   3989                }
   \   0000003A   10BC               POP      {R4}
   \   0000003C   01BC               POP      {R0}
   \   0000003E   0047               BX       R0               ;; return
   \                     ??LaderChange_Paint_0:
   \   00000040   ........           DC32     g_leng
   \   00000044   7D0A0000           DC32     0xa7d
   \   00000048   ........           DC32     Speech
   \   0000004C   1A040000           DC32     0x41a
   3990          
   3991          
   3992          

   \                                 In section Debug.txt, align 4, keep-with-next
   3993          void LaderChange_Event(void)
   3994                { 
   \                     LaderChange_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   3995                  char y=20;   //przesuniêcie w dó³
   3996                  int ans;
   3997                  char Repaint=0;
   \   00000002   0024               MOVS     R4,#+0
   3998          
   3999                  
   4000                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,y); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   214D               LDR      R5,??LaderChange_Event_0  ;; X_up
   \   00000006   224E               LDR      R6,??LaderChange_Event_0+0x4  ;; Y_up
   \   00000008   1421               MOVS     R1,#+20
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0F21               MOVS     R1,#+15
   \   00000010   0220               MOVS     R0,#+2
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   1F48               LDR      R0,??LaderChange_Event_0+0x8  ;; Y_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   435E               LDRSH    R3,[R0, R1]
   \   0000001A   1F48               LDR      R0,??LaderChange_Event_0+0xC  ;; X_down
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   315E               LDRSH    R1,[R6, R0]
   \   00000022   285E               LDRSH    R0,[R5, R0]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   4001            
   4002                  if (ans>0)
   \   0000002A   0128               CMP      R0,#+1
   \   0000002C   15DB               BLT      ??LaderChange_Event_1
   4003                    {
   4004                      if ((ans>0) && (ans<3))
   \   0000002E   0128               CMP      R0,#+1
   \   00000030   24DB               BLT      ??LaderChange_Event_2
   \   00000032   0328               CMP      R0,#+3
   \   00000034   22DA               BGE      ??LaderChange_Event_2
   4005                      {
   4006                        if (ans==1) 
   \   00000036   0128               CMP      R0,#+1
   \   00000038   184C               LDR      R4,??LaderChange_Event_0+0x10  ;; TextToChangeLength
   \   0000003A   07D1               BNE      ??LaderChange_Event_3
   4007                        {
   4008                          MenuLevel=(MenuLevel/10);
   \   0000003C   206D               LDR      R0,[R4, #+80]
   \   0000003E   0A21               MOVS     R1,#+10
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   2065               STR      R0,[R4, #+80]
   4009                          AddRow();
   \   00000046   ........           BL       AddRow
   \   0000004A   04E0               B        ??LaderChange_Event_4
   4010                          
   4011                        }else{
   4012                          MenuLevel=(MenuLevel*10+ans);
   \                     ??LaderChange_Event_3:
   \   0000004C   216D               LDR      R1,[R4, #+80]
   \   0000004E   0A22               MOVS     R2,#+10
   \   00000050   5143               MULS     R1,R2,R1
   \   00000052   0818               ADDS     R0,R1,R0
   \   00000054   2065               STR      R0,[R4, #+80]
   4013                        }
   4014                        Repaint=1;
   \                     ??LaderChange_Event_4:
   \   00000056   0124               MOVS     R4,#+1
   \   00000058   10E0               B        ??LaderChange_Event_2
   4015                      }
   4016                      
   4017                    }
   4018                  else if (ans<0)
   \                     ??LaderChange_Event_1:
   \   0000005A   0028               CMP      R0,#+0
   \   0000005C   0ED5               BPL      ??LaderChange_Event_2
   4019                    {
   4020                      
   4021                      if ((X_up>0) &&(Y_up>0)) 
   \   0000005E   0020               MOVS     R0,#+0
   \   00000060   285E               LDRSH    R0,[R5, R0]
   \   00000062   0128               CMP      R0,#+1
   \   00000064   0ADB               BLT      ??LaderChange_Event_2
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   305E               LDRSH    R0,[R6, R0]
   \   0000006A   0128               CMP      R0,#+1
   \   0000006C   06DB               BLT      ??LaderChange_Event_2
   4022                      {
   4023                        MenuLevel=(MenuLevel/10);
   \   0000006E   0B4C               LDR      R4,??LaderChange_Event_0+0x10  ;; TextToChangeLength
   \   00000070   206D               LDR      R0,[R4, #+80]
   \   00000072   0A21               MOVS     R1,#+10
   \   00000074   ........           BL       __aeabi_idivmod
   \   00000078   2065               STR      R0,[R4, #+80]
   4024                        Repaint=1;
   \   0000007A   0124               MOVS     R4,#+1
   4025                        
   4026                      }
   4027                      
   4028                    }
   4029                  if (Repaint) MenuPaint();
   \                     ??LaderChange_Event_2:
   \   0000007C   002C               CMP      R4,#+0
   \   0000007E   01D0               BEQ      ??LaderChange_Event_5
   \   00000080   ........           BL       MenuPaint
   4030          }
   \                     ??LaderChange_Event_5:
   \   00000084   70BC               POP      {R4-R6}
   \   00000086   01BC               POP      {R0}
   \   00000088   0047               BX       R0               ;; return
   \   0000008A   C046               Nop      
   \                     ??LaderChange_Event_0:
   \   0000008C   ........           DC32     X_up
   \   00000090   ........           DC32     Y_up
   \   00000094   ........           DC32     Y_down
   \   00000098   ........           DC32     X_down
   \   0000009C   ........           DC32     TextToChangeLength
   4031          
   4032          
   4033          
   4034          int row_tmp;

   \                                 In section Debug.txt, align 4, keep-with-next
   4035          void AddRow(void)
   4036                { 
   \                     AddRow:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \                     ??AddRow_0:
   \   00000002   2848               LDR      R0,??AddRow_1    ;; Busy_program
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   FBD1               BNE      ??AddRow_0
   \   0000000A   2648               LDR      R0,??AddRow_1    ;; Busy_program
   \   0000000C   0121               MOVS     R1,#+1
   \   0000000E   0170               STRB     R1,[R0, #+0]
   4037              
   4038                  while (Busy_program) {}
   4039           
   4040                Busy_program=1;
   4041                    //for ( row_tmp=5; row_tmp>ChoseRow; row_tmp--)
   4042                    for ( row_tmp=MaxPrcLines-1; row_tmp>ChoseRow; row_tmp--)
   \   00000010   254A               LDR      R2,??AddRow_1+0x4  ;; TextToChangeLength
   \   00000012   C720               MOVS     R0,#+199
   \   00000014   5067               STR      R0,[R2, #+116]
   \   00000016   20E0               B        ??AddRow_2
   4043                    {
   4044          
   4045                      for (char col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   4046                      {
   4047                     
   4048                        gProg.Line[row_tmp].Proc[col_tmp].Type=gProg.Line[row_tmp-1].Proc[col_tmp].Type;
   \                     ??AddRow_3:
   \   00000018   2448               LDR      R0,??AddRow_1+0x8  ;; gProg
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   1825               MOVS     R5,#+24
   \   0000001E   6943               MULS     R1,R5,R1
   \   00000020   F025               MOVS     R5,#+240
   \   00000022   5D43               MULS     R5,R3,R5
   \   00000024   4019               ADDS     R0,R0,R5
   \   00000026   4018               ADDS     R0,R0,R1
   \   00000028   0500               MOVS     R5,R0
   \   0000002A   1835               ADDS     R5,R5,#+24
   \   0000002C   0600               MOVS     R6,R0
   \   0000002E   D83E               SUBS     R6,R6,#+216
   \   00000030   3178               LDRB     R1,[R6, #+0]
   \   00000032   2970               STRB     R1,[R5, #+0]
   4049                        gProg.Line[row_tmp].Proc[col_tmp].Nr=gProg.Line[row_tmp-1].Proc[col_tmp].Nr;
   \   00000034   7178               LDRB     R1,[R6, #+1]
   \   00000036   6970               STRB     R1,[R5, #+1]
   4050                        gProg.Line[row_tmp].Proc[col_tmp].Tag=gProg.Line[row_tmp-1].Proc[col_tmp].Tag;
   \   00000038   0700               MOVS     R7,R0
   \   0000003A   2037               ADDS     R7,R7,#+32
   \   0000003C   D038               SUBS     R0,R0,#+208
   \   0000003E   03C8               LDM      R0!,{R0,R1}
   \   00000040   03C7               STM      R7!,{R0,R1}
   4051                        gProg.Line[row_tmp].Proc[col_tmp].LastIn=gProg.Line[row_tmp-1].Proc[col_tmp].LastIn;
   \   00000042   307C               LDRB     R0,[R6, #+16]
   \   00000044   2874               STRB     R0,[R5, #+16]
   4052                        gProg.Line[row_tmp].Proc[col_tmp].Out=gProg.Line[row_tmp-1].Proc[col_tmp].Out;
   \   00000046   708A               LDRH     R0,[R6, #+18]
   \   00000048   6882               STRH     R0,[R5, #+18]
   4053          
   4054                      }
   \   0000004A   641C               ADDS     R4,R4,#+1
   \   0000004C   2406               LSLS     R4,R4,#+24
   \   0000004E   240E               LSRS     R4,R4,#+24
   \                     ??AddRow_4:
   \   00000050   2000               MOVS     R0,R4
   \   00000052   0A28               CMP      R0,#+10
   \   00000054   E0D3               BCC      ??AddRow_3
   \   00000056   5B1E               SUBS     R3,R3,#+1
   \   00000058   5367               STR      R3,[R2, #+116]
   \                     ??AddRow_2:
   \   0000005A   947C               LDRB     R4,[R2, #+18]
   \   0000005C   536F               LDR      R3,[R2, #+116]
   \   0000005E   9C42               CMP      R4,R3
   \   00000060   01DA               BGE      ??AddRow_5
   \   00000062   0024               MOVS     R4,#+0
   \   00000064   F4E7               B        ??AddRow_4
   4055                    }
   4056                  
   4057                     for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \                     ??AddRow_5:
   \   00000066   0023               MOVS     R3,#+0
   \   00000068   1D00               MOVS     R5,R3
   \   0000006A   11E0               B        ??AddRow_6
   4058                      {
   4059                        gProg.Line[ChoseRow].Proc[col_tmp].Type=None;
   \                     ??AddRow_7:
   \   0000006C   0F48               LDR      R0,??AddRow_1+0x8  ;; gProg
   \   0000006E   1821               MOVS     R1,#+24
   \   00000070   6943               MULS     R1,R5,R1
   \   00000072   F026               MOVS     R6,#+240
   \   00000074   6643               MULS     R6,R4,R6
   \   00000076   8019               ADDS     R0,R0,R6
   \   00000078   4618               ADDS     R6,R0,R1
   \   0000007A   1836               ADDS     R6,R6,#+24
   \   0000007C   1800               MOVS     R0,R3
   \   0000007E   3070               STRB     R0,[R6, #+0]
   4060                        gProg.Line[ChoseRow].Proc[col_tmp].Nr=0;
   \   00000080   7070               STRB     R0,[R6, #+1]
   4061                        gProg.Line[ChoseRow].Proc[col_tmp].Tag.Tag=0;
   \   00000082   3700               MOVS     R7,R6
   \   00000084   0837               ADDS     R7,R7,#+8
   \   00000086   0100               MOVS     R1,R0
   \   00000088   03C7               STM      R7!,{R0,R1}
   4062                        gProg.Line[ChoseRow].Proc[col_tmp].LastIn=0;
   \   0000008A   3074               STRB     R0,[R6, #+16]
   4063                        gProg.Line[ChoseRow].Proc[col_tmp].Out=0;
   \   0000008C   7082               STRH     R0,[R6, #+18]
   4064          
   4065                      }
   \   0000008E   6D1C               ADDS     R5,R5,#+1
   \                     ??AddRow_6:
   \   00000090   0A2D               CMP      R5,#+10
   \   00000092   EBDB               BLT      ??AddRow_7
   4066                  
   4067                    ProgramChange=1;
   \   00000094   0120               MOVS     R0,#+1
   \   00000096   1072               STRB     R0,[R2, #+8]
   4068          
   4069                  Busy_program=0;
   \   00000098   0248               LDR      R0,??AddRow_1    ;; Busy_program
   \   0000009A   0370               STRB     R3,[R0, #+0]
   4070            
   4071          }
   \   0000009C   F8BC               POP      {R3-R7}
   \   0000009E   01BC               POP      {R0}
   \   000000A0   0047               BX       R0               ;; return
   \   000000A2   C046               Nop      
   \                     ??AddRow_1:
   \   000000A4   ........           DC32     Busy_program
   \   000000A8   ........           DC32     TextToChangeLength
   \   000000AC   ........           DC32     gProg
   4072              
   4073          
   4074          
   4075          //procedura usuniêcia lini

   \                                 In section Debug.txt, align 4, keep-with-next
   4076          void RemRow(void)
   4077          {
   \                     RemRow:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   4078                    for (int row_tmp=ChoseRow; row_tmp<MaxPrcLines-1; row_tmp++)
   \   00000002   2148               LDR      R0,??RemRow_0    ;; TextToChangeLength + 18
   \   00000004   0278               LDRB     R2,[R0, #+0]
   \   00000006   22E0               B        ??RemRow_1
   4079                    {
   4080                      for (char col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   4081                      {
   4082                     
   4083                        gProg.Line[row_tmp].Proc[col_tmp].Type=gProg.Line[row_tmp+1].Proc[col_tmp].Type;
   \                     ??RemRow_2:
   \   00000008   2048               LDR      R0,??RemRow_0+0x4  ;; gProg
   \   0000000A   1900               MOVS     R1,R3
   \   0000000C   1824               MOVS     R4,#+24
   \   0000000E   6143               MULS     R1,R4,R1
   \   00000010   F024               MOVS     R4,#+240
   \   00000012   5443               MULS     R4,R2,R4
   \   00000014   0019               ADDS     R0,R0,R4
   \   00000016   4018               ADDS     R0,R0,R1
   \   00000018   0400               MOVS     R4,R0
   \   0000001A   1834               ADDS     R4,R4,#+24
   \   0000001C   8421               MOVS     R1,#+132
   \   0000001E   4900               LSLS     R1,R1,#+1        ;; #+264
   \   00000020   4518               ADDS     R5,R0,R1
   \   00000022   2978               LDRB     R1,[R5, #+0]
   \   00000024   2170               STRB     R1,[R4, #+0]
   4084                        gProg.Line[row_tmp].Proc[col_tmp].Nr=gProg.Line[row_tmp+1].Proc[col_tmp].Nr;
   \   00000026   6978               LDRB     R1,[R5, #+1]
   \   00000028   6170               STRB     R1,[R4, #+1]
   4085                        gProg.Line[row_tmp].Proc[col_tmp].Tag=gProg.Line[row_tmp+1].Proc[col_tmp].Tag;
   \   0000002A   0600               MOVS     R6,R0
   \   0000002C   2036               ADDS     R6,R6,#+32
   \   0000002E   8821               MOVS     R1,#+136
   \   00000030   4900               LSLS     R1,R1,#+1        ;; #+272
   \   00000032   4018               ADDS     R0,R0,R1
   \   00000034   03C8               LDM      R0!,{R0,R1}
   \   00000036   03C6               STM      R6!,{R0,R1}
   4086                        gProg.Line[row_tmp].Proc[col_tmp].LastIn=gProg.Line[row_tmp+1].Proc[col_tmp].LastIn;
   \   00000038   287C               LDRB     R0,[R5, #+16]
   \   0000003A   2074               STRB     R0,[R4, #+16]
   4087                        gProg.Line[row_tmp].Proc[col_tmp].Out=gProg.Line[row_tmp+1].Proc[col_tmp].Out;
   \   0000003C   688A               LDRH     R0,[R5, #+18]
   \   0000003E   6082               STRH     R0,[R4, #+18]
   4088                      }
   \   00000040   5B1C               ADDS     R3,R3,#+1
   \   00000042   1B06               LSLS     R3,R3,#+24
   \   00000044   1B0E               LSRS     R3,R3,#+24
   \                     ??RemRow_3:
   \   00000046   1800               MOVS     R0,R3
   \   00000048   0A28               CMP      R0,#+10
   \   0000004A   DDD3               BCC      ??RemRow_2
   \   0000004C   521C               ADDS     R2,R2,#+1
   \                     ??RemRow_1:
   \   0000004E   C72A               CMP      R2,#+199
   \   00000050   01DA               BGE      ??RemRow_4
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   F7E7               B        ??RemRow_3
   4089                    }
   4090                    
   4091                     for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \                     ??RemRow_4:
   \   00000056   0022               MOVS     R2,#+0
   \   00000058   1300               MOVS     R3,R2
   \   0000005A   0FE0               B        ??RemRow_5
   4092                      {
   4093                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Type=None;
   \                     ??RemRow_6:
   \   0000005C   0B48               LDR      R0,??RemRow_0+0x4  ;; gProg
   \   0000005E   0C49               LDR      R1,??RemRow_0+0x8  ;; 0xbaa8
   \   00000060   1824               MOVS     R4,#+24
   \   00000062   5C43               MULS     R4,R3,R4
   \   00000064   0019               ADDS     R0,R0,R4
   \   00000066   4418               ADDS     R4,R0,R1
   \   00000068   1000               MOVS     R0,R2
   \   0000006A   2070               STRB     R0,[R4, #+0]
   4094                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Nr=0;
   \   0000006C   6070               STRB     R0,[R4, #+1]
   4095                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Tag.Tag=0;
   \   0000006E   2500               MOVS     R5,R4
   \   00000070   0835               ADDS     R5,R5,#+8
   \   00000072   0100               MOVS     R1,R0
   \   00000074   03C5               STM      R5!,{R0,R1}
   4096                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].LastIn=0;
   \   00000076   2074               STRB     R0,[R4, #+16]
   4097                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Out=0;
   \   00000078   6082               STRH     R0,[R4, #+18]
   4098          
   4099                      }
   \   0000007A   5B1C               ADDS     R3,R3,#+1
   \                     ??RemRow_5:
   \   0000007C   0A2B               CMP      R3,#+10
   \   0000007E   EDDB               BLT      ??RemRow_6
   4100            
   4101          }
   \   00000080   70BC               POP      {R4-R6}
   \   00000082   01BC               POP      {R0}
   \   00000084   0047               BX       R0               ;; return
   \   00000086   C046               Nop      
   \                     ??RemRow_0:
   \   00000088   ........           DC32     TextToChangeLength + 18
   \   0000008C   ........           DC32     gProg
   \   00000090   A8BA0000           DC32     0xbaa8
   4102          
   4103          
   4104          

   \                                 In section Debug.txt, align 4, keep-with-next
   4105          void RemRow_Paint(void)
   4106                { 
   \                     RemRow_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   4107          
   4108                  //czy s¹ procedury na lini do usuniêia
   4109                  char ProcExst=0;
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   4110                  for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \   00000006   0DE0               B        ??RemRow_Paint_0
   4111                      {
   4112                        if (gProg.Line[ChoseRow].Proc[col_tmp].Type!=None) ProcExst=1;
   \                     ??RemRow_Paint_1:
   \   00000008   1822               MOVS     R2,#+24
   \   0000000A   4A43               MULS     R2,R1,R2
   \   0000000C   154B               LDR      R3,??RemRow_Paint_2  ;; TextToChangeLength + 18
   \   0000000E   1B78               LDRB     R3,[R3, #+0]
   \   00000010   F024               MOVS     R4,#+240
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   144C               LDR      R4,??RemRow_Paint_2+0x4  ;; gProg
   \   00000016   E318               ADDS     R3,R4,R3
   \   00000018   9A18               ADDS     R2,R3,R2
   \   0000001A   127E               LDRB     R2,[R2, #+24]
   \   0000001C   002A               CMP      R2,#+0
   \   0000001E   00D0               BEQ      ??RemRow_Paint_3
   \   00000020   0120               MOVS     R0,#+1
   4113                        
   4114                      }
   \                     ??RemRow_Paint_3:
   \   00000022   491C               ADDS     R1,R1,#+1
   \                     ??RemRow_Paint_0:
   \   00000024   0A29               CMP      R1,#+10
   \   00000026   EFDB               BLT      ??RemRow_Paint_1
   4115                  
   4116                  //je¿eli s¹ procedury w lini
   4117                  if (ProcExst)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0ED0               BEQ      ??RemRow_Paint_4
   4118                  {
   4119                    Ask_Paint("?",Speech[g_leng].UsunWiersz,Speech[g_leng].Zprocedurami);  
   \   0000002C   0F48               LDR      R0,??RemRow_Paint_2+0x8  ;; g_leng
   \   0000002E   0068               LDR      R0,[R0, #+0]
   \   00000030   0F49               LDR      R1,??RemRow_Paint_2+0xC  ;; 0xa7d
   \   00000032   4843               MULS     R0,R1,R0
   \   00000034   0F49               LDR      R1,??RemRow_Paint_2+0x10  ;; Speech
   \   00000036   0818               ADDS     R0,R1,R0
   \   00000038   8721               MOVS     R1,#+135
   \   0000003A   C900               LSLS     R1,R1,#+3        ;; #+1080
   \   0000003C   4218               ADDS     R2,R0,R1
   \   0000003E   1E39               SUBS     R1,R1,#+30
   \   00000040   4118               ADDS     R1,R0,R1
   \   00000042   0DA0               ADR      R0,??RemRow_Paint_2+0x14  ;; 0x3F, 0x00, 0x00, 0x00
   \   00000044   ........           BL       Ask_Paint
   \   00000048   09E0               B        ??RemRow_Paint_5
   4120          
   4121                  }else{  //je¿eli linia pusta
   4122                    RemRow();
   \                     ??RemRow_Paint_4:
   \   0000004A   ........           BL       RemRow
   4123                    MenuLevel=(MenuLevel/100);
   \   0000004E   0B4C               LDR      R4,??RemRow_Paint_2+0x18  ;; TextToChangeLength
   \   00000050   206D               LDR      R0,[R4, #+80]
   \   00000052   6421               MOVS     R1,#+100
   \   00000054   ........           BL       __aeabi_idivmod
   \   00000058   2065               STR      R0,[R4, #+80]
   4124                    MenuPaint();
   \   0000005A   ........           BL       MenuPaint
   4125                  }
   4126                  
   4127                }
   \                     ??RemRow_Paint_5:
   \   0000005E   10BC               POP      {R4}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??RemRow_Paint_2:
   \   00000064   ........           DC32     TextToChangeLength + 18
   \   00000068   ........           DC32     gProg
   \   0000006C   ........           DC32     g_leng
   \   00000070   7D0A0000           DC32     0xa7d
   \   00000074   ........           DC32     Speech
   \   00000078   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   0000007C   ........           DC32     TextToChangeLength
   4128          
   4129          
   4130          
   4131          //restart
   4132                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   4133                void RemRow_Event(void)
   4134                {
   \                     RemRow_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   4135                  int ans;
   4136                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1448               LDR      R0,??RemRow_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1348               LDR      R0,??RemRow_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1348               LDR      R0,??RemRow_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1348               LDR      R0,??RemRow_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   4137            
   4138                  if (ans)
   \   0000001C   17D0               BEQ      ??RemRow_Event_1
   4139                    {
   4140                    if (ans==2) 
   \   0000001E   022C               CMP      R4,#+2
   \   00000020   09D1               BNE      ??RemRow_Event_2
   4141                    {
   4142                      RemRow();
   \   00000022   ........           BL       RemRow
   4143                      MenuLevel=(MenuLevel/100);
   \   00000026   0F4D               LDR      R5,??RemRow_Event_0+0x10  ;; TextToChangeLength
   \   00000028   286D               LDR      R0,[R5, #+80]
   \   0000002A   6421               MOVS     R1,#+100
   \   0000002C   ........           BL       __aeabi_idivmod
   \   00000030   2865               STR      R0,[R5, #+80]
   4144                      ProgramChange=1;
   \   00000032   0120               MOVS     R0,#+1
   \   00000034   2872               STRB     R0,[R5, #+8]
   4145                    }
   4146                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/100);
   \                     ??RemRow_Event_2:
   \   00000036   002C               CMP      R4,#+0
   \   00000038   01D4               BMI      ??RemRow_Event_3
   \   0000003A   012C               CMP      R4,#+1
   \   0000003C   05D1               BNE      ??RemRow_Event_4
   \                     ??RemRow_Event_3:
   \   0000003E   094D               LDR      R5,??RemRow_Event_0+0x10  ;; TextToChangeLength
   \   00000040   286D               LDR      R0,[R5, #+80]
   \   00000042   6421               MOVS     R1,#+100
   \   00000044   ........           BL       __aeabi_idivmod
   \   00000048   2865               STR      R0,[R5, #+80]
   4147                    MenuPaint();
   \                     ??RemRow_Event_4:
   \   0000004A   ........           BL       MenuPaint
   4148                    } 
   4149                }//_______________________________________________________________________
   \                     ??RemRow_Event_1:
   \   0000004E   38BC               POP      {R3-R5}
   \   00000050   01BC               POP      {R0}
   \   00000052   0047               BX       R0               ;; return
   \                     ??RemRow_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     TextToChangeLength
   4150              
   4151            
   4152          
   4153          
   4154          //SaveChanges_Evant****************************************************************

   \                                 In section Debug.txt, align 4, keep-with-next
   4155          void SaveChanges_Evant(void)
   4156          {
   \                     SaveChanges_Evant:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   4157                    int ans;
   4158                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1F48               LDR      R0,??SaveChanges_Evant_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1E48               LDR      R0,??SaveChanges_Evant_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1E48               LDR      R0,??SaveChanges_Evant_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1E48               LDR      R0,??SaveChanges_Evant_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   4159            
   4160                  if (ans)
   \   0000001C   2CD0               BEQ      ??SaveChanges_Evant_1
   4161                    {
   4162                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000001E   1C48               LDR      R0,??SaveChanges_Evant_0+0x10  ;; 0x13d7e9
   \   00000020   0078               LDRB     R0,[R0, #+0]
   \   00000022   0028               CMP      R0,#+0
   \   00000024   0AD1               BNE      ??SaveChanges_Evant_2
   \   00000026   1B48               LDR      R0,??SaveChanges_Evant_0+0x14  ;; 0xfffff430
   \   00000028   8021               MOVS     R1,#+128
   \   0000002A   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000002C   0160               STR      R1,[R0, #+0]
   \   0000002E   1A4A               LDR      R2,??SaveChanges_Evant_0+0x18  ;; ButtonBipCounter
   \   00000030   1A48               LDR      R0,??SaveChanges_Evant_0+0x1C  ;; g_counter
   \   00000032   03C8               LDM      R0!,{R0,R1}
   \   00000034   0023               MOVS     R3,#+0
   \   00000036   0830               ADDS     R0,R0,#+8
   \   00000038   5941               ADCS     R1,R1,R3
   \   0000003A   03C2               STM      R2!,{R0,R1}
   4163                    if (ans==2) 
   \                     ??SaveChanges_Evant_2:
   \   0000003C   022C               CMP      R4,#+2
   \   0000003E   0CD1               BNE      ??SaveChanges_Evant_3
   4164                    {
   4165                       ProgramChange=0;
   \   00000040   174D               LDR      R5,??SaveChanges_Evant_0+0x20  ;; TextToChangeLength
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   2872               STRB     R0,[R5, #+8]
   4166                        
   4167                      ProgramChangeExecute(&gProg); 
   \   00000046   1748               LDR      R0,??SaveChanges_Evant_0+0x24  ;; gProg
   \   00000048   ........           BL       ProgramChangeExecute
   4168                      RamToFlash();
   \   0000004C   ........           BL       RamToFlash
   4169                      
   4170                      MenuLevel=(MenuLevel/100);
   \   00000050   286D               LDR      R0,[R5, #+80]
   \   00000052   6421               MOVS     R1,#+100
   \   00000054   ........           BL       __aeabi_idivmod
   \   00000058   2865               STR      R0,[R5, #+80]
   4171                    }
   4172          
   4173                      ProgramChangeExecute(&gProg);
   \                     ??SaveChanges_Evant_3:
   \   0000005A   1248               LDR      R0,??SaveChanges_Evant_0+0x24  ;; gProg
   \   0000005C   ........           BL       ProgramChangeExecute
   4174                   
   4175                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/100);
   \   00000060   002C               CMP      R4,#+0
   \   00000062   01D4               BMI      ??SaveChanges_Evant_4
   \   00000064   012C               CMP      R4,#+1
   \   00000066   05D1               BNE      ??SaveChanges_Evant_5
   \                     ??SaveChanges_Evant_4:
   \   00000068   0D4D               LDR      R5,??SaveChanges_Evant_0+0x20  ;; TextToChangeLength
   \   0000006A   286D               LDR      R0,[R5, #+80]
   \   0000006C   6421               MOVS     R1,#+100
   \   0000006E   ........           BL       __aeabi_idivmod
   \   00000072   2865               STR      R0,[R5, #+80]
   4176                    MenuPaint();
   \                     ??SaveChanges_Evant_5:
   \   00000074   ........           BL       MenuPaint
   4177                    } 
   4178            
   4179          }
   \                     ??SaveChanges_Evant_1:
   \   00000078   38BC               POP      {R3-R5}
   \   0000007A   01BC               POP      {R0}
   \   0000007C   0047               BX       R0               ;; return
   \   0000007E   C046               Nop      
   \                     ??SaveChanges_Evant_0:
   \   00000080   ........           DC32     Y_down
   \   00000084   ........           DC32     X_down
   \   00000088   ........           DC32     Y_up
   \   0000008C   ........           DC32     X_up
   \   00000090   E9D71300           DC32     0x13d7e9
   \   00000094   30F4FFFF           DC32     0xfffff430
   \   00000098   ........           DC32     ButtonBipCounter
   \   0000009C   ........           DC32     g_counter
   \   000000A0   ........           DC32     TextToChangeLength
   \   000000A4   ........           DC32     gProg
   4180          
   4181          
   4182                   
   4183          
   4184                    
   4185          
   4186          char OpenScreenSet=0;
   4187          
   4188          //Ustawienie grafiki ekranu******************************************************************************************************************

   \                                 In section Debug.txt, align 4, keep-with-next
   4189          void ScreenSet_Paint(_Screen* ScreenLokal)
   4190          {
   \                     ScreenSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0400               MOVS     R4,R0
   4191            char PaternDesignNr;
   4192            
   4193            if (CurModifSheet==0) 
   \   00000006   754D               LDR      R5,??ScreenSet_Paint_0  ;; TextToChangeLength
   \   00000008   6879               LDRB     R0,[R5, #+5]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D1               BNE      ??ScreenSet_Paint_1
   4194            {
   4195              PaternDesignNr=ScreenSetTab_0_Nr;
   \   0000000E   0827               MOVS     R7,#+8
   \   00000010   00E0               B        ??ScreenSet_Paint_2
   4196            }else{
   4197              PaternDesignNr=ScreenSetTab_1_Nr; 
   \                     ??ScreenSet_Paint_1:
   \   00000012   0527               MOVS     R7,#+5
   4198            }      
   4199            
   4200            if (OpenScreenSet==0)
   \                     ??ScreenSet_Paint_2:
   \   00000014   697D               LDRB     R1,[R5, #+21]
   \   00000016   0029               CMP      R1,#+0
   \   00000018   0CD1               BNE      ??ScreenSet_Paint_3
   4201            {
   4202              OpenScreenSet=1; 
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   6975               STRB     R1,[R5, #+21]
   4203              if (ScreenLokal->PaternDesign>4)    if (CurModifSheet==0) RowsPoz=3; else RowsPoz=2;
   \   0000001E   2178               LDRB     R1,[R4, #+0]
   \   00000020   0529               CMP      R1,#+5
   \   00000022   07D3               BCC      ??ScreenSet_Paint_3
   \   00000024   0028               CMP      R0,#+0
   \   00000026   6E49               LDR      R1,??ScreenSet_Paint_0+0x4  ;; RowsPoz
   \   00000028   02D1               BNE      ??ScreenSet_Paint_4
   \   0000002A   0322               MOVS     R2,#+3
   \   0000002C   0A70               STRB     R2,[R1, #+0]
   \   0000002E   01E0               B        ??ScreenSet_Paint_3
   \                     ??ScreenSet_Paint_4:
   \   00000030   0222               MOVS     R2,#+2
   \   00000032   0A70               STRB     R2,[R1, #+0]
   4204            }
   4205            
   4206            
   4207          
   4208          #ifdef __ALARM 
   4209            if (CurModifSheet==0)
   \                     ??ScreenSet_Paint_3:
   \   00000034   0028               CMP      R0,#+0
   \   00000036   6B48               LDR      R0,??ScreenSet_Paint_0+0x8  ;; g_leng
   \   00000038   0068               LDR      R0,[R0, #+0]
   \   0000003A   2ED1               BNE      ??ScreenSet_Paint_5
   4210            {
   4211              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+4,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Styl6,Speech[g_leng].Styl7, Speech[g_leng].Styl8,Speech[g_leng].Termostat,Speech[g_leng].Terminarz, "Alarm"); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000003C   6A49               LDR      R1,??ScreenSet_Paint_0+0xC  ;; 0xa7d
   \   0000003E   4843               MULS     R0,R1,R0
   \   00000040   6A49               LDR      R1,??ScreenSet_Paint_0+0x10  ;; Speech
   \   00000042   0E18               ADDS     R6,R1,R0
   \   00000044   6A49               LDR      R1,??ScreenSet_Paint_0+0x14  ;; `?<Constant "Alarm">`
   \   00000046   6B48               LDR      R0,??ScreenSet_Paint_0+0x18  ;; 0x762
   \   00000048   3018               ADDS     R0,R6,R0
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   6A48               LDR      R0,??ScreenSet_Paint_0+0x1C  ;; 0x6db
   \   0000004E   3118               ADDS     R1,R6,R0
   \   00000050   6A48               LDR      R0,??ScreenSet_Paint_0+0x20  ;; 0x4ce
   \   00000052   3018               ADDS     R0,R6,R0
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   6A48               LDR      R0,??ScreenSet_Paint_0+0x24  ;; 0x4bf
   \   00000058   3118               ADDS     R1,R6,R0
   \   0000005A   0F38               SUBS     R0,R0,#+15
   \   0000005C   3018               ADDS     R0,R6,R0
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   6848               LDR      R0,??ScreenSet_Paint_0+0x28  ;; 0x4a1
   \   00000062   3118               ADDS     R1,R6,R0
   \   00000064   0F38               SUBS     R0,R0,#+15
   \   00000066   3018               ADDS     R0,R6,R0
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   6748               LDR      R0,??ScreenSet_Paint_0+0x2C  ;; 0x483
   \   0000006C   3118               ADDS     R1,R6,R0
   \   0000006E   0F38               SUBS     R0,R0,#+15
   \   00000070   3018               ADDS     R0,R6,R0
   \   00000072   03B4               PUSH     {R0,R1}
   \   00000074   6548               LDR      R0,??ScreenSet_Paint_0+0x30  ;; 0x465
   \   00000076   3118               ADDS     R1,R6,R0
   \   00000078   65A0               ADR      R0,??ScreenSet_Paint_0+0x34  ;; 0x00, 0x00, 0x00, 0x00
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0021               MOVS     R1,#+0
   \   0000007E   0800               MOVS     R0,R1
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   0300               MOVS     R3,R0
   \   00000084   0D22               MOVS     R2,#+13
   \   00000086   3F1D               ADDS     R7,R7,#+4
   \   00000088   3900               MOVS     R1,R7
   \   0000008A   0906               LSLS     R1,R1,#+24
   \   0000008C   090E               LSRS     R1,R1,#+24
   \   0000008E   6148               LDR      R0,??ScreenSet_Paint_0+0x38  ;; 0x4dd
   \   00000090   3018               ADDS     R0,R6,R0
   \   00000092   ........           BL       List_Paint
   \   00000096   0EB0               ADD      SP,SP,#+56
   \   00000098   27E0               B        ??ScreenSet_Paint_6
   4212            }else{
   4213              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+4,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Termostat,Speech[g_leng].Terminarz, "Alarm"); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??ScreenSet_Paint_5:
   \   0000009A   5349               LDR      R1,??ScreenSet_Paint_0+0xC  ;; 0xa7d
   \   0000009C   4843               MULS     R0,R1,R0
   \   0000009E   5349               LDR      R1,??ScreenSet_Paint_0+0x10  ;; Speech
   \   000000A0   0E18               ADDS     R6,R1,R0
   \   000000A2   82B0               SUB      SP,SP,#+8
   \   000000A4   5248               LDR      R0,??ScreenSet_Paint_0+0x14  ;; `?<Constant "Alarm">`
   \   000000A6   0090               STR      R0,[SP, #+0]
   \   000000A8   5248               LDR      R0,??ScreenSet_Paint_0+0x18  ;; 0x762
   \   000000AA   3118               ADDS     R1,R6,R0
   \   000000AC   8738               SUBS     R0,R0,#+135
   \   000000AE   3018               ADDS     R0,R6,R0
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   5448               LDR      R0,??ScreenSet_Paint_0+0x28  ;; 0x4a1
   \   000000B4   3118               ADDS     R1,R6,R0
   \   000000B6   0F38               SUBS     R0,R0,#+15
   \   000000B8   3018               ADDS     R0,R6,R0
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   5248               LDR      R0,??ScreenSet_Paint_0+0x2C  ;; 0x483
   \   000000BE   3118               ADDS     R1,R6,R0
   \   000000C0   0F38               SUBS     R0,R0,#+15
   \   000000C2   3018               ADDS     R0,R6,R0
   \   000000C4   03B4               PUSH     {R0,R1}
   \   000000C6   5148               LDR      R0,??ScreenSet_Paint_0+0x30  ;; 0x465
   \   000000C8   3118               ADDS     R1,R6,R0
   \   000000CA   51A0               ADR      R0,??ScreenSet_Paint_0+0x34  ;; 0x00, 0x00, 0x00, 0x00
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   0800               MOVS     R0,R1
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   0300               MOVS     R3,R0
   \   000000D6   0D22               MOVS     R2,#+13
   \   000000D8   3F1D               ADDS     R7,R7,#+4
   \   000000DA   3900               MOVS     R1,R7
   \   000000DC   0906               LSLS     R1,R1,#+24
   \   000000DE   090E               LSRS     R1,R1,#+24
   \   000000E0   4C48               LDR      R0,??ScreenSet_Paint_0+0x38  ;; 0x4dd
   \   000000E2   3018               ADDS     R0,R6,R0
   \   000000E4   ........           BL       List_Paint
   \   000000E8   0CB0               ADD      SP,SP,#+48
   4214            }
   4215          #else  
   4216            if (CurModifSheet==0)
   4217            {
   4218              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+3,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Styl6,Speech[g_leng].Styl7, Speech[g_leng].Styl8,Speech[g_leng].Termostat,Speech[g_leng].Terminarz); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4219            }else{
   4220              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+3,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Termostat,Speech[g_leng].Terminarz); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4221            }
   4222          #endif
   4223            
   4224             char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \                     ??ScreenSet_Paint_6:
   \   000000EA   4B4E               LDR      R6,??ScreenSet_Paint_0+0x3C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`
   \   000000EC   02A8               ADD      R0,SP,#+8
   \   000000EE   0ECE               LDM      R6!,{R1-R3}
   \   000000F0   0EC0               STM      R0!,{R1-R3}
   \   000000F2   0C3E               SUBS     R6,R6,#+12
   4225             char MarkPoz= ScreenLokal->PaternDesign+1-RowsPoz; 
   \   000000F4   2078               LDRB     R0,[R4, #+0]
   \   000000F6   401C               ADDS     R0,R0,#+1
   \   000000F8   3949               LDR      R1,??ScreenSet_Paint_0+0x4  ;; RowsPoz
   \   000000FA   0978               LDRB     R1,[R1, #+0]
   \   000000FC   401A               SUBS     R0,R0,R1
   \   000000FE   0006               LSLS     R0,R0,#+24
   \   00000100   000E               LSRS     R0,R0,#+24
   4226             if (CurModifSheet==0)
   \   00000102   6979               LDRB     R1,[R5, #+5]
   \   00000104   0029               CMP      R1,#+0
   \   00000106   13D1               BNE      ??ScreenSet_Paint_7
   4227               {
   4228                if ((MarkPoz!=0) && (MarkPoz<=6))   CopyToCanvasPoint((char *)ekran_tab,52,98-(13*( MarkPoz)),8,10);  
   \   00000108   0100               MOVS     R1,R0
   \   0000010A   24D0               BEQ      ??ScreenSet_Paint_8
   \   0000010C   0729               CMP      R1,#+7
   \   0000010E   22D2               BCS      ??ScreenSet_Paint_8
   \   00000110   82B0               SUB      SP,SP,#+8
   \   00000112   0A21               MOVS     R1,#+10
   \   00000114   0091               STR      R1,[SP, #+0]
   \   00000116   0823               MOVS     R3,#+8
   \   00000118   6221               MOVS     R1,#+98
   \   0000011A   0D22               MOVS     R2,#+13
   \   0000011C   5043               MULS     R0,R2,R0
   \   0000011E   0A1A               SUBS     R2,R1,R0
   \   00000120   1206               LSLS     R2,R2,#+24
   \   00000122   120E               LSRS     R2,R2,#+24
   \   00000124   3421               MOVS     R1,#+52
   \   00000126   04A8               ADD      R0,SP,#+16
   \   00000128   ........           BL       CopyToCanvasPoint
   \   0000012C   02B0               ADD      SP,SP,#+8
   \   0000012E   12E0               B        ??ScreenSet_Paint_8
   4229               }else{
   4230                if ((MarkPoz!=0) && (MarkPoz<=6))   CopyToCanvasPoint((char *)ekran_tab,52,98-(13*( MarkPoz)),8,10); 
   \                     ??ScreenSet_Paint_7:
   \   00000130   0100               MOVS     R1,R0
   \   00000132   10D0               BEQ      ??ScreenSet_Paint_8
   \   00000134   0729               CMP      R1,#+7
   \   00000136   0ED2               BCS      ??ScreenSet_Paint_8
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0A21               MOVS     R1,#+10
   \   0000013C   0091               STR      R1,[SP, #+0]
   \   0000013E   0823               MOVS     R3,#+8
   \   00000140   6221               MOVS     R1,#+98
   \   00000142   0D22               MOVS     R2,#+13
   \   00000144   5043               MULS     R0,R2,R0
   \   00000146   0A1A               SUBS     R2,R1,R0
   \   00000148   1206               LSLS     R2,R2,#+24
   \   0000014A   120E               LSRS     R2,R2,#+24
   \   0000014C   3421               MOVS     R1,#+52
   \   0000014E   04A8               ADD      R0,SP,#+16
   \   00000150   ........           BL       CopyToCanvasPoint
   \   00000154   02B0               ADD      SP,SP,#+8
   4231               }
   4232          
   4233            
   4234            CleanCanvasArea(1,97,60,11,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??ScreenSet_Paint_8:
   \   00000156   82B0               SUB      SP,SP,#+8
   \   00000158   0020               MOVS     R0,#+0
   \   0000015A   0090               STR      R0,[SP, #+0]
   \   0000015C   0B23               MOVS     R3,#+11
   \   0000015E   3C22               MOVS     R2,#+60
   \   00000160   6121               MOVS     R1,#+97
   \   00000162   0120               MOVS     R0,#+1
   \   00000164   ........           BL       CleanCanvasArea
   \   00000168   02B0               ADD      SP,SP,#+8
   4235              
   4236            Button("< ",1,96,15,13);
   \   0000016A   82B0               SUB      SP,SP,#+8
   \   0000016C   0D20               MOVS     R0,#+13
   \   0000016E   0090               STR      R0,[SP, #+0]
   \   00000170   0F23               MOVS     R3,#+15
   \   00000172   6022               MOVS     R2,#+96
   \   00000174   0121               MOVS     R1,#+1
   \   00000176   29A0               ADR      R0,??ScreenSet_Paint_0+0x40  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000178   ........           BL       Button
   \   0000017C   02B0               ADD      SP,SP,#+8
   4237            Button("> ",47,96,15,13);
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   0D20               MOVS     R0,#+13
   \   00000182   0090               STR      R0,[SP, #+0]
   \   00000184   0F23               MOVS     R3,#+15
   \   00000186   6022               MOVS     R2,#+96
   \   00000188   2F21               MOVS     R1,#+47
   \   0000018A   25A0               ADR      R0,??ScreenSet_Paint_0+0x44  ;; 0x3E, 0x20, 0x00, 0x00
   \   0000018C   ........           BL       Button
   \   00000190   02B0               ADD      SP,SP,#+8
   4238            
   4239            char txt[5]={'N', 'r', '.',':', 0,};
   \   00000192   6846               MOV      R0,SP
   \   00000194   0C36               ADDS     R6,R6,#+12
   \   00000196   06CE               LDM      R6!,{R1,R2}
   \   00000198   06C0               STM      R0!,{R1,R2}
   4240            
   4241            CharToStr(CurModifSheet, &txt[4], 1); //(char Value, char *Vstring, char ill);
   \   0000019A   0122               MOVS     R2,#+1
   \   0000019C   6946               MOV      R1,SP
   \   0000019E   091D               ADDS     R1,R1,#+4
   \   000001A0   6879               LDRB     R0,[R5, #+5]
   \   000001A2   ........           BL       CharToStr
   4242            Label(txt,0,22,98,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001A6   82B0               SUB      SP,SP,#+8
   \   000001A8   0020               MOVS     R0,#+0
   \   000001AA   0090               STR      R0,[SP, #+0]
   \   000001AC   7F21               MOVS     R1,#+127
   \   000001AE   0120               MOVS     R0,#+1
   \   000001B0   03B4               PUSH     {R0,R1}
   \   000001B2   1421               MOVS     R1,#+20
   \   000001B4   0520               MOVS     R0,#+5
   \   000001B6   03B4               PUSH     {R0,R1}
   \   000001B8   6223               MOVS     R3,#+98
   \   000001BA   1622               MOVS     R2,#+22
   \   000001BC   0021               MOVS     R1,#+0
   \   000001BE   06A8               ADD      R0,SP,#+24
   \   000001C0   ........           BL       Label
   \   000001C4   06B0               ADD      SP,SP,#+24
   4243          
   4244            H_line(0,95,61,1); 
   \   000001C6   0123               MOVS     R3,#+1
   \   000001C8   3D22               MOVS     R2,#+61
   \   000001CA   5F21               MOVS     R1,#+95
   \   000001CC   0020               MOVS     R0,#+0
   \   000001CE   ........           BL       H_line
   4245          
   4246          }
   \   000001D2   05B0               ADD      SP,SP,#+20
   \   000001D4   F0BC               POP      {R4-R7}
   \   000001D6   01BC               POP      {R0}
   \   000001D8   0047               BX       R0               ;; return
   \   000001DA   C046               Nop      
   \                     ??ScreenSet_Paint_0:
   \   000001DC   ........           DC32     TextToChangeLength
   \   000001E0   ........           DC32     RowsPoz
   \   000001E4   ........           DC32     g_leng
   \   000001E8   7D0A0000           DC32     0xa7d
   \   000001EC   ........           DC32     Speech
   \   000001F0   ........           DC32     `?<Constant "Alarm">`
   \   000001F4   62070000           DC32     0x762
   \   000001F8   DB060000           DC32     0x6db
   \   000001FC   CE040000           DC32     0x4ce
   \   00000200   BF040000           DC32     0x4bf
   \   00000204   A1040000           DC32     0x4a1
   \   00000208   83040000           DC32     0x483
   \   0000020C   65040000           DC32     0x465
   \   00000210   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000214   DD040000           DC32     0x4dd
   \   00000218   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`
   \   0000021C   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000220   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   4247          
   4248              char MenuPaintExecute=0;
   4249          

   \                                 In section Debug.txt, align 4, keep-with-next
   4250          void ScreenSet_Event(_Screen* ScreenLokal)
   4251          {
   \                     ScreenSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4252              char PaternDesignNr;
   4253          
   4254              MenuPaintExecute=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   554E               LDR      R6,??ScreenSet_Event_0  ;; TextToChangeLength
   \   00000008   2800               MOVS     R0,R5
   \   0000000A   B075               STRB     R0,[R6, #+22]
   4255            if (CurModifSheet==0) 
   \   0000000C   7079               LDRB     R0,[R6, #+5]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   01D1               BNE      ??ScreenSet_Event_1
   4256            {
   4257              PaternDesignNr=ScreenSetTab_0_Nr;
   \   00000012   0822               MOVS     R2,#+8
   \   00000014   00E0               B        ??ScreenSet_Event_2
   4258            }else{
   4259              PaternDesignNr=ScreenSetTab_1_Nr; 
   \                     ??ScreenSet_Event_1:
   \   00000016   0522               MOVS     R2,#+5
   4260            }      
   4261          
   4262                  int ans;
   4263          #ifdef __ALARM
   4264                  ans= List_Event(X_up, Y_up, X_down, Y_down, PaternDesignNr+4 , 13, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??ScreenSet_Event_2:
   \   00000018   2900               MOVS     R1,R5
   \   0000001A   0800               MOVS     R0,R1
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0D21               MOVS     R1,#+13
   \   00000020   121D               ADDS     R2,R2,#+4
   \   00000022   1000               MOVS     R0,R2
   \   00000024   0006               LSLS     R0,R0,#+24
   \   00000026   000E               LSRS     R0,R0,#+24
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   4D48               LDR      R0,??ScreenSet_Event_0+0x4  ;; Y_down
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   435E               LDRSH    R3,[R0, R1]
   \   00000030   4C48               LDR      R0,??ScreenSet_Event_0+0x8  ;; X_down
   \   00000032   425E               LDRSH    R2,[R0, R1]
   \   00000034   4C48               LDR      R0,??ScreenSet_Event_0+0xC  ;; Y_up
   \   00000036   415E               LDRSH    R1,[R0, R1]
   \   00000038   4C48               LDR      R0,??ScreenSet_Event_0+0x10  ;; X_up
   \   0000003A   0027               MOVS     R7,#+0
   \   0000003C   C05F               LDRSH    R0,[R0, R7]
   \   0000003E   ........           BL       List_Event
   \   00000042   04B0               ADD      SP,SP,#+16
   \   00000044   0700               MOVS     R7,R0
   4265          #else
   4266                  ans= List_Event(X_up, Y_up, X_down, Y_down, PaternDesignNr+3 , 13, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   4267          #endif        
   4268                  if ((ans>0) && (RowsPoz+1>=ans)) ans=0;
   \   00000046   012F               CMP      R7,#+1
   \   00000048   05DB               BLT      ??ScreenSet_Event_3
   \   0000004A   4948               LDR      R0,??ScreenSet_Event_0+0x14  ;; RowsPoz
   \   0000004C   0078               LDRB     R0,[R0, #+0]
   \   0000004E   401C               ADDS     R0,R0,#+1
   \   00000050   B842               CMP      R0,R7
   \   00000052   00DB               BLT      ??ScreenSet_Event_3
   \   00000054   2F00               MOVS     R7,R5
   4269                      
   4270                        if (ans>1) 
   \                     ??ScreenSet_Event_3:
   \   00000056   022F               CMP      R7,#+2
   \   00000058   38DB               BLT      ??ScreenSet_Event_4
   4271                        { 
   4272                          OpenScreenSet=0;
   \   0000005A   2800               MOVS     R0,R5
   \   0000005C   7075               STRB     R0,[R6, #+21]
   4273                          ScreenLokal->PaternDesign=ans-2;
   \   0000005E   3800               MOVS     R0,R7
   \   00000060   801E               SUBS     R0,R0,#+2
   \   00000062   2070               STRB     R0,[R4, #+0]
   4274                          if (((CurModifSheet==0) && (ans==PaternDesignThermoMS) ) || ((CurModifSheet>0) && (ans==PaternDesignThermoSS)))
   \   00000064   7079               LDRB     R0,[R6, #+5]
   \   00000066   0028               CMP      R0,#+0
   \   00000068   01D1               BNE      ??ScreenSet_Event_5
   \   0000006A   0A2F               CMP      R7,#+10
   \   0000006C   03D0               BEQ      ??ScreenSet_Event_6
   \                     ??ScreenSet_Event_5:
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   07D0               BEQ      ??ScreenSet_Event_7
   \   00000072   072F               CMP      R7,#+7
   \   00000074   05D1               BNE      ??ScreenSet_Event_7
   4275                          {
   4276                            MenuLevel=(MenuLevel*10+2);         //uruchomienie ustawiania termostatu
   \                     ??ScreenSet_Event_6:
   \   00000076   306D               LDR      R0,[R6, #+80]
   \   00000078   0A21               MOVS     R1,#+10
   \   0000007A   4843               MULS     R0,R1,R0
   \   0000007C   801C               ADDS     R0,R0,#+2
   \   0000007E   3065               STR      R0,[R6, #+80]
   \   00000080   20E0               B        ??ScreenSet_Event_8
   4277                          }
   4278                          else if (((CurModifSheet==0) && (ans==PaternDesignTimetableMS) ) || ((CurModifSheet>0) && (ans==PaternDesignTimetableSS)))
   \                     ??ScreenSet_Event_7:
   \   00000082   0028               CMP      R0,#+0
   \   00000084   01D1               BNE      ??ScreenSet_Event_9
   \   00000086   0B2F               CMP      R7,#+11
   \   00000088   03D0               BEQ      ??ScreenSet_Event_10
   \                     ??ScreenSet_Event_9:
   \   0000008A   0028               CMP      R0,#+0
   \   0000008C   07D0               BEQ      ??ScreenSet_Event_11
   \   0000008E   082F               CMP      R7,#+8
   \   00000090   05D1               BNE      ??ScreenSet_Event_11
   4279                          {
   4280                            MenuLevel=(MenuLevel*10+3);         //ustawianie ekranów
   \                     ??ScreenSet_Event_10:
   \   00000092   306D               LDR      R0,[R6, #+80]
   \   00000094   0A21               MOVS     R1,#+10
   \   00000096   4843               MULS     R0,R1,R0
   \   00000098   C01C               ADDS     R0,R0,#+3
   \   0000009A   3065               STR      R0,[R6, #+80]
   \   0000009C   12E0               B        ??ScreenSet_Event_8
   4281                      
   4282                          #ifdef __ALARM
   4283                          }
   4284                          else if (((CurModifSheet==0) && (ans==PaternDesignAlarmMS) ) || ((CurModifSheet>0) && (ans==PaternDesignAlarmSS)))
   \                     ??ScreenSet_Event_11:
   \   0000009E   0028               CMP      R0,#+0
   \   000000A0   01D1               BNE      ??ScreenSet_Event_12
   \   000000A2   0C2F               CMP      R7,#+12
   \   000000A4   03D0               BEQ      ??ScreenSet_Event_13
   \                     ??ScreenSet_Event_12:
   \   000000A6   0028               CMP      R0,#+0
   \   000000A8   07D0               BEQ      ??ScreenSet_Event_14
   \   000000AA   092F               CMP      R7,#+9
   \   000000AC   05D1               BNE      ??ScreenSet_Event_14
   4285                          {
   4286                          MenuLevel=(MenuLevel*10+4);         //ustawianie ekranów
   \                     ??ScreenSet_Event_13:
   \   000000AE   306D               LDR      R0,[R6, #+80]
   \   000000B0   0A21               MOVS     R1,#+10
   \   000000B2   4843               MULS     R0,R1,R0
   \   000000B4   001D               ADDS     R0,R0,#+4
   \   000000B6   3065               STR      R0,[R6, #+80]
   \   000000B8   04E0               B        ??ScreenSet_Event_8
   4287                          #endif
   4288                          }else{
   4289                            MenuLevel=(MenuLevel*10+1);         //ustawianie ekranów
   \                     ??ScreenSet_Event_14:
   \   000000BA   306D               LDR      R0,[R6, #+80]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   4843               MULS     R0,R1,R0
   \   000000C0   401C               ADDS     R0,R0,#+1
   \   000000C2   3065               STR      R0,[R6, #+80]
   4290                          }
   4291                          MenuPaintExecute=1;
   \                     ??ScreenSet_Event_8:
   \   000000C4   0120               MOVS     R0,#+1
   \   000000C6   0100               MOVS     R1,R0
   \   000000C8   B175               STRB     R1,[R6, #+22]
   4292                          ProgramChange=1;
   \   000000CA   3072               STRB     R0,[R6, #+8]
   4293                        }else if (ans==1)
   4294                        {
   4295          
   4296                        }  
   4297                        
   4298                                        
   4299                          if ((Button("< ",1,96,15,13)==1) && (CurModifSheet>0)) {MenuPaintExecute=1; CurModifSheet--; RowsPoz=0; OpenScreenSet=0;}
   \                     ??ScreenSet_Event_4:
   \   000000CC   82B0               SUB      SP,SP,#+8
   \   000000CE   0D20               MOVS     R0,#+13
   \   000000D0   0090               STR      R0,[SP, #+0]
   \   000000D2   0F23               MOVS     R3,#+15
   \   000000D4   6022               MOVS     R2,#+96
   \   000000D6   0121               MOVS     R1,#+1
   \   000000D8   26A0               ADR      R0,??ScreenSet_Event_0+0x18  ;; 0x3C, 0x20, 0x00, 0x00
   \   000000DA   ........           BL       Button
   \   000000DE   02B0               ADD      SP,SP,#+8
   \   000000E0   0128               CMP      R0,#+1
   \   000000E2   0BD1               BNE      ??ScreenSet_Event_15
   \   000000E4   7079               LDRB     R0,[R6, #+5]
   \   000000E6   0028               CMP      R0,#+0
   \   000000E8   08D0               BEQ      ??ScreenSet_Event_15
   \   000000EA   0121               MOVS     R1,#+1
   \   000000EC   B175               STRB     R1,[R6, #+22]
   \   000000EE   401E               SUBS     R0,R0,#+1
   \   000000F0   7071               STRB     R0,[R6, #+5]
   \   000000F2   1F48               LDR      R0,??ScreenSet_Event_0+0x14  ;; RowsPoz
   \   000000F4   2900               MOVS     R1,R5
   \   000000F6   0170               STRB     R1,[R0, #+0]
   \   000000F8   2800               MOVS     R0,R5
   \   000000FA   7075               STRB     R0,[R6, #+21]
   4300                          if ((Button("> ",47,96,15,13)==1)&& (CurModifSheet<ScreenNr-1)) {
   \                     ??ScreenSet_Event_15:
   \   000000FC   82B0               SUB      SP,SP,#+8
   \   000000FE   0D20               MOVS     R0,#+13
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   0F23               MOVS     R3,#+15
   \   00000104   6022               MOVS     R2,#+96
   \   00000106   2F21               MOVS     R1,#+47
   \   00000108   1BA0               ADR      R0,??ScreenSet_Event_0+0x1C  ;; 0x3E, 0x20, 0x00, 0x00
   \   0000010A   ........           BL       Button
   \   0000010E   02B0               ADD      SP,SP,#+8
   \   00000110   0128               CMP      R0,#+1
   \   00000112   0BD1               BNE      ??ScreenSet_Event_16
   \   00000114   7079               LDRB     R0,[R6, #+5]
   \   00000116   0728               CMP      R0,#+7
   \   00000118   08D2               BCS      ??ScreenSet_Event_16
   4301                            OpenScreenSet=0;
   \   0000011A   2900               MOVS     R1,R5
   \   0000011C   7175               STRB     R1,[R6, #+21]
   4302                            RowsPoz=0;
   \   0000011E   1449               LDR      R1,??ScreenSet_Event_0+0x14  ;; RowsPoz
   \   00000120   0D70               STRB     R5,[R1, #+0]
   4303                            MenuPaintExecute=1; 
   \   00000122   0121               MOVS     R1,#+1
   \   00000124   B175               STRB     R1,[R6, #+22]
   4304                            CurModifSheet++; 
   \   00000126   401C               ADDS     R0,R0,#+1
   \   00000128   7071               STRB     R0,[R6, #+5]
   \   0000012A   0FE0               B        ??ScreenSet_Event_17
   4305                             }
   4306                          
   4307                        
   4308                        else if (ans<0)
   \                     ??ScreenSet_Event_16:
   \   0000012C   002F               CMP      R7,#+0
   \   0000012E   0DD5               BPL      ??ScreenSet_Event_17
   4309                        {
   4310                             if (ProgramChange) 
   \   00000130   307A               LDRB     R0,[R6, #+8]
   \   00000132   0028               CMP      R0,#+0
   \   00000134   306D               LDR      R0,[R6, #+80]
   \   00000136   03D0               BEQ      ??ScreenSet_Event_18
   4311                              {
   4312                                  MenuLevel=(MenuLevel*10+0);
   \   00000138   0A21               MOVS     R1,#+10
   \   0000013A   4843               MULS     R0,R1,R0
   \   0000013C   3065               STR      R0,[R6, #+80]
   \   0000013E   03E0               B        ??ScreenSet_Event_19
   4313                              }else{
   4314                                  MenuLevel=(MenuLevel/10);
   \                     ??ScreenSet_Event_18:
   \   00000140   0A21               MOVS     R1,#+10
   \   00000142   ........           BL       __aeabi_idivmod
   \   00000146   3065               STR      R0,[R6, #+80]
   4315                              }
   4316                                MenuPaintExecute=1;
   \                     ??ScreenSet_Event_19:
   \   00000148   0120               MOVS     R0,#+1
   \   0000014A   B075               STRB     R0,[R6, #+22]
   4317                          
   4318                        }else{
   4319          
   4320                        }
   4321                        
   4322                        
   4323                        
   4324                        if (MenuPaintExecute) MenuPaint(); 
   \                     ??ScreenSet_Event_17:
   \   0000014C   B07D               LDRB     R0,[R6, #+22]
   \   0000014E   0028               CMP      R0,#+0
   \   00000150   01D0               BEQ      ??ScreenSet_Event_20
   \   00000152   ........           BL       MenuPaint
   4325                     
   4326             
   4327          }
   \                     ??ScreenSet_Event_20:
   \   00000156   F8BC               POP      {R3-R7}
   \   00000158   01BC               POP      {R0}
   \   0000015A   0047               BX       R0               ;; return
   \                     ??ScreenSet_Event_0:
   \   0000015C   ........           DC32     TextToChangeLength
   \   00000160   ........           DC32     Y_down
   \   00000164   ........           DC32     X_down
   \   00000168   ........           DC32     Y_up
   \   0000016C   ........           DC32     X_up
   \   00000170   ........           DC32     RowsPoz
   \   00000174   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000178   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   4328          
   4329          
   4330          
   4331          

   \                                 In section Debug.txt, align 4, keep-with-next
   4332          void ThermostatSet_Paint(_Screen* Screen)
   4333          {          
   \                     ThermostatSet_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   E5A0               ADR      R0,??ThermostatSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0100               MOVS     R1,R0
   \   0000001E   E248               LDR      R0,??ThermostatSet_Paint_0+0x4  ;; `?<Constant {129, 0}>` + 4
   4334                 List_Paint("Therm set ",0,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   7F21               MOVS     R1,#+127
   \   0000002E   0120               MOVS     R0,#+1
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   3421               MOVS     R1,#+52
   \   00000034   0A20               MOVS     R0,#+10
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   6423               MOVS     R3,#+100
   \   0000003A   0522               MOVS     R2,#+5
   \   0000003C   0221               MOVS     R1,#+2
   \   0000003E   DB48               LDR      R0,??ThermostatSet_Paint_0+0x8  ;; 0x6f9
   \   00000040   DB4C               LDR      R4,??ThermostatSet_Paint_0+0xC  ;; g_leng
   \   00000042   2468               LDR      R4,[R4, #+0]
   \   00000044   DB4D               LDR      R5,??ThermostatSet_Paint_0+0x10  ;; 0xa7d
   \   00000046   6C43               MULS     R4,R5,R4
   \   00000048   DB4D               LDR      R5,??ThermostatSet_Paint_0+0x14  ;; Speech
   \   0000004A   2C19               ADDS     R4,R5,R4
   \   0000004C   2018               ADDS     R0,R4,R0
   4335          
   4336                 char txt[8];
   4337                 
   4338                 
   4339                    Label(Speech[g_leng].Czujnik,2,5, 100 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000004E   ........           BL       Label
   \   00000052   06B0               ADD      SP,SP,#+24
   4340                    char ind;
   4341                    if ((Screen->Thermo.SensorNode>=0) && (Screen->Thermo.SensorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000054   029C               LDR      R4,[SP, #+8]
   \   00000056   8C34               ADDS     R4,R4,#+140
   \   00000058   0320               MOVS     R0,#+3
   \   0000005A   2056               LDRSB    R0,[R4, R0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   2FD4               BMI      ??ThermostatSet_Paint_1
   \   00000060   0320               MOVS     R0,#+3
   \   00000062   2056               LDRSB    R0,[R4, R0]
   \   00000064   FF28               CMP      R0,#+255
   \   00000066   2BD0               BEQ      ??ThermostatSet_Paint_1
   4342                    {
   4343                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' '; txt[4]=0;
   \   00000068   6D46               MOV      R5,SP
   \   0000006A   4920               MOVS     R0,#+73
   \   0000006C   2870               STRB     R0,[R5, #+0]
   \   0000006E   6420               MOVS     R0,#+100
   \   00000070   6870               STRB     R0,[R5, #+1]
   \   00000072   3A20               MOVS     R0,#+58
   \   00000074   A870               STRB     R0,[R5, #+2]
   \   00000076   2020               MOVS     R0,#+32
   \   00000078   E870               STRB     R0,[R5, #+3]
   \   0000007A   0026               MOVS     R6,#+0
   \   0000007C   3000               MOVS     R0,R6
   \   0000007E   2871               STRB     R0,[R5, #+4]
   4344                      ind=CharToStr(Screen->Thermo.SensorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000080   0222               MOVS     R2,#+2
   \   00000082   2900               MOVS     R1,R5
   \   00000084   C91C               ADDS     R1,R1,#+3
   \   00000086   0320               MOVS     R0,#+3
   \   00000088   2056               LDRSB    R0,[R4, R0]
   \   0000008A   0006               LSLS     R0,R0,#+24
   \   0000008C   000E               LSRS     R0,R0,#+24
   \   0000008E   ........           BL       CharToStr
   \   00000092   0200               MOVS     R2,R0
   4345                      txt[ind+3]=0;
   \   00000094   2818               ADDS     R0,R5,R0
   \   00000096   C670               STRB     R6,[R0, #+3]
   4346                      Label(txt,2,20, 88 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   3000               MOVS     R0,R6
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   7F21               MOVS     R1,#+127
   \   000000A0   0120               MOVS     R0,#+1
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   1621               MOVS     R1,#+22
   \   000000A6   D21C               ADDS     R2,R2,#+3
   \   000000A8   1000               MOVS     R0,R2
   \   000000AA   0006               LSLS     R0,R0,#+24
   \   000000AC   000E               LSRS     R0,R0,#+24
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   5823               MOVS     R3,#+88
   \   000000B2   1422               MOVS     R2,#+20
   \   000000B4   0221               MOVS     R1,#+2
   \   000000B6   06A8               ADD      R0,SP,#+24
   \   000000B8   ........           BL       Label
   \   000000BC   06B0               ADD      SP,SP,#+24
   \   000000BE   0FE0               B        ??ThermostatSet_Paint_2
   4347                    }else{
   4348                      Label("Var",2,20, 88 ,3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ThermostatSet_Paint_1:
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   0020               MOVS     R0,#+0
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   7F21               MOVS     R1,#+127
   \   000000C8   0120               MOVS     R0,#+1
   \   000000CA   03B4               PUSH     {R0,R1}
   \   000000CC   1621               MOVS     R1,#+22
   \   000000CE   0320               MOVS     R0,#+3
   \   000000D0   03B4               PUSH     {R0,R1}
   \   000000D2   5823               MOVS     R3,#+88
   \   000000D4   1422               MOVS     R2,#+20
   \   000000D6   0221               MOVS     R1,#+2
   \   000000D8   B8A0               ADR      R0,??ThermostatSet_Paint_0+0x18  ;; "Var"
   \   000000DA   ........           BL       Label
   \   000000DE   06B0               ADD      SP,SP,#+24
   \                     ??ThermostatSet_Paint_2:
   \   000000E0   6D46               MOV      R5,SP
   \   000000E2   3C20               MOVS     R0,#+60
   \   000000E4   2870               STRB     R0,[R5, #+0]
   4349                    }
   4350                            
   4351                    txt[0]='<';txt[1]=0;
   \   000000E6   0026               MOVS     R6,#+0
   \   000000E8   3000               MOVS     R0,R6
   \   000000EA   6870               STRB     R0,[R5, #+1]
   4352                    Button(txt,3,85,15,15); 
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   0F20               MOVS     R0,#+15
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   0300               MOVS     R3,R0
   \   000000F4   5522               MOVS     R2,#+85
   \   000000F6   0321               MOVS     R1,#+3
   \   000000F8   02A8               ADD      R0,SP,#+8
   \   000000FA   ........           BL       Button
   \   000000FE   02B0               ADD      SP,SP,#+8
   \   00000100   3E20               MOVS     R0,#+62
   \   00000102   2870               STRB     R0,[R5, #+0]
   4353                    txt[0]='>';
   4354                    Button(txt,45,85,15,15); 
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0F20               MOVS     R0,#+15
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   0300               MOVS     R3,R0
   \   0000010C   5522               MOVS     R2,#+85
   \   0000010E   2D21               MOVS     R1,#+45
   \   00000110   02A8               ADD      R0,SP,#+8
   \   00000112   ........           BL       Button
   \   00000116   02B0               ADD      SP,SP,#+8
   4355                    
   4356                    if ((Screen->Thermo.SensorNode>=0) && (Screen->Thermo.SensorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000118   0320               MOVS     R0,#+3
   \   0000011A   2056               LDRSB    R0,[R4, R0]
   \   0000011C   0028               CMP      R0,#+0
   \   0000011E   2BD4               BMI      ??ThermostatSet_Paint_3
   \   00000120   0320               MOVS     R0,#+3
   \   00000122   2056               LDRSB    R0,[R4, R0]
   \   00000124   FF28               CMP      R0,#+255
   \   00000126   27D0               BEQ      ??ThermostatSet_Paint_3
   4357                    {
   4358                      txt[0]='R'; txt[1]='e'; txt[2]='g'; txt[3]=':'; txt[4]=' ';
   \   00000128   5220               MOVS     R0,#+82
   \   0000012A   2870               STRB     R0,[R5, #+0]
   \   0000012C   6520               MOVS     R0,#+101
   \   0000012E   6870               STRB     R0,[R5, #+1]
   \   00000130   6720               MOVS     R0,#+103
   \   00000132   A870               STRB     R0,[R5, #+2]
   \   00000134   3A20               MOVS     R0,#+58
   \   00000136   E870               STRB     R0,[R5, #+3]
   \   00000138   2020               MOVS     R0,#+32
   \   0000013A   2871               STRB     R0,[R5, #+4]
   4359                    
   4360                      ind=CharToStr(Screen->Thermo.SensorReg, &(txt[4]), 2); //(char Value, char *Vstring, char ill);
   \   0000013C   0222               MOVS     R2,#+2
   \   0000013E   2900               MOVS     R1,R5
   \   00000140   091D               ADDS     R1,R1,#+4
   \   00000142   2079               LDRB     R0,[R4, #+4]
   \   00000144   ........           BL       CharToStr
   \   00000148   0700               MOVS     R7,R0
   4361                       Label(txt,2,20, 72 ,ind+4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   3000               MOVS     R0,R6
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   7F21               MOVS     R1,#+127
   \   00000152   0120               MOVS     R0,#+1
   \   00000154   03B4               PUSH     {R0,R1}
   \   00000156   1621               MOVS     R1,#+22
   \   00000158   3800               MOVS     R0,R7
   \   0000015A   001D               ADDS     R0,R0,#+4
   \   0000015C   0006               LSLS     R0,R0,#+24
   \   0000015E   000E               LSRS     R0,R0,#+24
   \   00000160   03B4               PUSH     {R0,R1}
   \   00000162   4823               MOVS     R3,#+72
   \   00000164   1422               MOVS     R2,#+20
   \   00000166   0221               MOVS     R1,#+2
   \   00000168   06A8               ADD      R0,SP,#+24
   \   0000016A   ........           BL       Label
   \   0000016E   06B0               ADD      SP,SP,#+24
   4362          
   4363                      txt[ind+4]=0;
   \   00000170   E819               ADDS     R0,R5,R7
   \   00000172   3100               MOVS     R1,R6
   \   00000174   0171               STRB     R1,[R0, #+4]
   \   00000176   1BE0               B        ??ThermostatSet_Paint_4
   4364                    }else{
   4365                      txt[0]='a'; 
   \                     ??ThermostatSet_Paint_3:
   \   00000178   6120               MOVS     R0,#+97
   \   0000017A   2870               STRB     R0,[R5, #+0]
   4366                      ind=CharToStr(Screen->Thermo.SensorReg, &(txt[1]), 2); //(char Value, char *Vstring, char ill);
   \   0000017C   0222               MOVS     R2,#+2
   \   0000017E   2900               MOVS     R1,R5
   \   00000180   491C               ADDS     R1,R1,#+1
   \   00000182   2079               LDRB     R0,[R4, #+4]
   \   00000184   ........           BL       CharToStr
   \   00000188   0700               MOVS     R7,R0
   4367                       Label(txt,2,20, 72 ,ind+1,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000018A   82B0               SUB      SP,SP,#+8
   \   0000018C   3000               MOVS     R0,R6
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   7F21               MOVS     R1,#+127
   \   00000192   0120               MOVS     R0,#+1
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   1621               MOVS     R1,#+22
   \   00000198   7F1C               ADDS     R7,R7,#+1
   \   0000019A   3800               MOVS     R0,R7
   \   0000019C   0006               LSLS     R0,R0,#+24
   \   0000019E   000E               LSRS     R0,R0,#+24
   \   000001A0   03B4               PUSH     {R0,R1}
   \   000001A2   4823               MOVS     R3,#+72
   \   000001A4   1422               MOVS     R2,#+20
   \   000001A6   0221               MOVS     R1,#+2
   \   000001A8   06A8               ADD      R0,SP,#+24
   \   000001AA   ........           BL       Label
   \   000001AE   06B0               ADD      SP,SP,#+24
   4368          
   4369                    }
   4370                   
   4371                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Paint_4:
   \   000001B0   3C20               MOVS     R0,#+60
   \   000001B2   2870               STRB     R0,[R5, #+0]
   \   000001B4   3000               MOVS     R0,R6
   \   000001B6   6870               STRB     R0,[R5, #+1]
   4372                    Button(txt,3,69,15,15); 
   \   000001B8   82B0               SUB      SP,SP,#+8
   \   000001BA   0F20               MOVS     R0,#+15
   \   000001BC   0090               STR      R0,[SP, #+0]
   \   000001BE   0300               MOVS     R3,R0
   \   000001C0   4522               MOVS     R2,#+69
   \   000001C2   0321               MOVS     R1,#+3
   \   000001C4   02A8               ADD      R0,SP,#+8
   \   000001C6   ........           BL       Button
   \   000001CA   02B0               ADD      SP,SP,#+8
   4373                    txt[0]='>';
   \   000001CC   3E20               MOVS     R0,#+62
   \   000001CE   2870               STRB     R0,[R5, #+0]
   4374                    Button(txt,45,69,15,15); 
   \   000001D0   82B0               SUB      SP,SP,#+8
   \   000001D2   0F20               MOVS     R0,#+15
   \   000001D4   0090               STR      R0,[SP, #+0]
   \   000001D6   0300               MOVS     R3,R0
   \   000001D8   4522               MOVS     R2,#+69
   \   000001DA   2D21               MOVS     R1,#+45
   \   000001DC   02A8               ADD      R0,SP,#+8
   \   000001DE   ........           BL       Button
   \   000001E2   02B0               ADD      SP,SP,#+8
   4375            
   4376                    
   4377                    
   4378                
   4379                    Label(Speech[g_leng].Wykonawca,2,5, 58 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   000001E4   82B0               SUB      SP,SP,#+8
   \   000001E6   3000               MOVS     R0,R6
   \   000001E8   0090               STR      R0,[SP, #+0]
   \   000001EA   7F21               MOVS     R1,#+127
   \   000001EC   0120               MOVS     R0,#+1
   \   000001EE   03B4               PUSH     {R0,R1}
   \   000001F0   3421               MOVS     R1,#+52
   \   000001F2   0A20               MOVS     R0,#+10
   \   000001F4   03B4               PUSH     {R0,R1}
   \   000001F6   3A23               MOVS     R3,#+58
   \   000001F8   0522               MOVS     R2,#+5
   \   000001FA   0221               MOVS     R1,#+2
   \   000001FC   8C46               MOV      R12,R1
   \   000001FE   E121               MOVS     R1,#+225
   \   00000200   C900               LSLS     R1,R1,#+3        ;; #+1800
   \   00000202   6B48               LDR      R0,??ThermostatSet_Paint_0+0xC  ;; g_leng
   \   00000204   0068               LDR      R0,[R0, #+0]
   \   00000206   6B4F               LDR      R7,??ThermostatSet_Paint_0+0x10  ;; 0xa7d
   \   00000208   7843               MULS     R0,R7,R0
   \   0000020A   6B4F               LDR      R7,??ThermostatSet_Paint_0+0x14  ;; Speech
   \   0000020C   3818               ADDS     R0,R7,R0
   \   0000020E   4018               ADDS     R0,R0,R1
   \   00000210   6146               MOV      R1,R12
   \   00000212   ........           BL       Label
   \   00000216   06B0               ADD      SP,SP,#+24
   4380                    if (((Screen->Thermo.ActorNode)>=0) && (Screen->Thermo.ActorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000218   0020               MOVS     R0,#+0
   \   0000021A   2056               LDRSB    R0,[R4, R0]
   \   0000021C   0028               CMP      R0,#+0
   \   0000021E   2DD4               BMI      ??ThermostatSet_Paint_5
   \   00000220   0020               MOVS     R0,#+0
   \   00000222   2056               LDRSB    R0,[R4, R0]
   \   00000224   FF28               CMP      R0,#+255
   \   00000226   29D0               BEQ      ??ThermostatSet_Paint_5
   4381                    {
   4382                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' '; txt[4]=0;
   \   00000228   4920               MOVS     R0,#+73
   \   0000022A   2870               STRB     R0,[R5, #+0]
   \   0000022C   6420               MOVS     R0,#+100
   \   0000022E   6870               STRB     R0,[R5, #+1]
   \   00000230   3A20               MOVS     R0,#+58
   \   00000232   A870               STRB     R0,[R5, #+2]
   \   00000234   2020               MOVS     R0,#+32
   \   00000236   E870               STRB     R0,[R5, #+3]
   \   00000238   3000               MOVS     R0,R6
   \   0000023A   2871               STRB     R0,[R5, #+4]
   4383                      ind=CharToStr(Screen->Thermo.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   0000023C   0222               MOVS     R2,#+2
   \   0000023E   2900               MOVS     R1,R5
   \   00000240   C91C               ADDS     R1,R1,#+3
   \   00000242   2056               LDRSB    R0,[R4, R0]
   \   00000244   0006               LSLS     R0,R0,#+24
   \   00000246   000E               LSRS     R0,R0,#+24
   \   00000248   ........           BL       CharToStr
   \   0000024C   0700               MOVS     R7,R0
   4384                      txt[ind+3]=0;
   \   0000024E   2818               ADDS     R0,R5,R0
   \   00000250   3100               MOVS     R1,R6
   \   00000252   C170               STRB     R1,[R0, #+3]
   4385                      Label(txt,2,20, 45 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000254   82B0               SUB      SP,SP,#+8
   \   00000256   0800               MOVS     R0,R1
   \   00000258   0090               STR      R0,[SP, #+0]
   \   0000025A   7F21               MOVS     R1,#+127
   \   0000025C   0120               MOVS     R0,#+1
   \   0000025E   03B4               PUSH     {R0,R1}
   \   00000260   1621               MOVS     R1,#+22
   \   00000262   FF1C               ADDS     R7,R7,#+3
   \   00000264   3800               MOVS     R0,R7
   \   00000266   0006               LSLS     R0,R0,#+24
   \   00000268   000E               LSRS     R0,R0,#+24
   \   0000026A   03B4               PUSH     {R0,R1}
   \   0000026C   2D23               MOVS     R3,#+45
   \   0000026E   1422               MOVS     R2,#+20
   \   00000270   0221               MOVS     R1,#+2
   \   00000272   06A8               ADD      R0,SP,#+24
   \   00000274   ........           BL       Label
   \   00000278   06B0               ADD      SP,SP,#+24
   \   0000027A   0FE0               B        ??ThermostatSet_Paint_6
   4386                    }else{
   4387                      Label("Var",2,20, 45, 3,22,1,127,0);
   \                     ??ThermostatSet_Paint_5:
   \   0000027C   82B0               SUB      SP,SP,#+8
   \   0000027E   3000               MOVS     R0,R6
   \   00000280   0090               STR      R0,[SP, #+0]
   \   00000282   7F21               MOVS     R1,#+127
   \   00000284   0120               MOVS     R0,#+1
   \   00000286   03B4               PUSH     {R0,R1}
   \   00000288   1621               MOVS     R1,#+22
   \   0000028A   0320               MOVS     R0,#+3
   \   0000028C   03B4               PUSH     {R0,R1}
   \   0000028E   2D23               MOVS     R3,#+45
   \   00000290   1422               MOVS     R2,#+20
   \   00000292   0221               MOVS     R1,#+2
   \   00000294   49A0               ADR      R0,??ThermostatSet_Paint_0+0x18  ;; "Var"
   \   00000296   ........           BL       Label
   \   0000029A   06B0               ADD      SP,SP,#+24
   4388                    }
   4389                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Paint_6:
   \   0000029C   3C20               MOVS     R0,#+60
   \   0000029E   2870               STRB     R0,[R5, #+0]
   \   000002A0   3000               MOVS     R0,R6
   \   000002A2   6870               STRB     R0,[R5, #+1]
   4390                    Button(txt,3,42,15,15); 
   \   000002A4   82B0               SUB      SP,SP,#+8
   \   000002A6   0F20               MOVS     R0,#+15
   \   000002A8   0090               STR      R0,[SP, #+0]
   \   000002AA   0300               MOVS     R3,R0
   \   000002AC   2A22               MOVS     R2,#+42
   \   000002AE   0321               MOVS     R1,#+3
   \   000002B0   02A8               ADD      R0,SP,#+8
   \   000002B2   ........           BL       Button
   \   000002B6   02B0               ADD      SP,SP,#+8
   4391                    txt[0]='>';
   \   000002B8   3E20               MOVS     R0,#+62
   \   000002BA   2870               STRB     R0,[R5, #+0]
   4392                    Button(txt,45,42,15,15); 
   \   000002BC   82B0               SUB      SP,SP,#+8
   \   000002BE   0F20               MOVS     R0,#+15
   \   000002C0   0090               STR      R0,[SP, #+0]
   \   000002C2   0300               MOVS     R3,R0
   \   000002C4   2A22               MOVS     R2,#+42
   \   000002C6   2D21               MOVS     R1,#+45
   \   000002C8   02A8               ADD      R0,SP,#+8
   \   000002CA   ........           BL       Button
   \   000002CE   02B0               ADD      SP,SP,#+8
   4393                    
   4394                     if (((Screen->Thermo.ActorNode)>=0) && (Screen->Thermo.ActorNode!=0xFF))
                                                                                            ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   000002D0   0020               MOVS     R0,#+0
   \   000002D2   2056               LDRSB    R0,[R4, R0]
   \   000002D4   0028               CMP      R0,#+0
   \   000002D6   14D4               BMI      ??ThermostatSet_Paint_7
   \   000002D8   0020               MOVS     R0,#+0
   \   000002DA   2056               LDRSB    R0,[R4, R0]
   \   000002DC   FF28               CMP      R0,#+255
   \   000002DE   10D0               BEQ      ??ThermostatSet_Paint_7
   4395                    {
   4396                      txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   000002E0   5020               MOVS     R0,#+80
   \   000002E2   2870               STRB     R0,[R5, #+0]
   \   000002E4   3A20               MOVS     R0,#+58
   \   000002E6   6870               STRB     R0,[R5, #+1]
   \   000002E8   2020               MOVS     R0,#+32
   \   000002EA   A870               STRB     R0,[R5, #+2]
   4397                      ind=CharToStr(Screen->Thermo.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   000002EC   0222               MOVS     R2,#+2
   \   000002EE   2900               MOVS     R1,R5
   \   000002F0   891C               ADDS     R1,R1,#+2
   \   000002F2   6078               LDRB     R0,[R4, #+1]
   \   000002F4   ........           BL       CharToStr
   \   000002F8   0200               MOVS     R2,R0
   4398                      txt[ind+2]=0;
   \   000002FA   2818               ADDS     R0,R5,R0
   \   000002FC   3100               MOVS     R1,R6
   \   000002FE   8170               STRB     R1,[R0, #+2]
   \   00000300   0EE0               B        ??ThermostatSet_Paint_8
   4399                    }else{
   4400                      txt[0]='b'; txt[1]=' '; txt[2]=' '; 
   \                     ??ThermostatSet_Paint_7:
   \   00000302   6220               MOVS     R0,#+98
   \   00000304   2870               STRB     R0,[R5, #+0]
   \   00000306   2020               MOVS     R0,#+32
   \   00000308   6870               STRB     R0,[R5, #+1]
   \   0000030A   A870               STRB     R0,[R5, #+2]
   4401                      ind=CharToStr(Screen->Thermo.ActorPort, &(txt[1]), 2); //(char Value, char *Vstring, char ill);
   \   0000030C   0222               MOVS     R2,#+2
   \   0000030E   2900               MOVS     R1,R5
   \   00000310   491C               ADDS     R1,R1,#+1
   \   00000312   6078               LDRB     R0,[R4, #+1]
   \   00000314   ........           BL       CharToStr
   \   00000318   0200               MOVS     R2,R0
   4402                      txt[ind+1]=0;
   \   0000031A   2818               ADDS     R0,R5,R0
   \   0000031C   3100               MOVS     R1,R6
   \   0000031E   4170               STRB     R1,[R0, #+1]
   4403                    }
   4404                    txt[ind+2]=0;
   \                     ??ThermostatSet_Paint_8:
   \   00000320   1000               MOVS     R0,R2
   \   00000322   2818               ADDS     R0,R5,R0
   \   00000324   8170               STRB     R1,[R0, #+2]
   4405                    Label(txt,2,20, 29 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000326   82B0               SUB      SP,SP,#+8
   \   00000328   0800               MOVS     R0,R1
   \   0000032A   0090               STR      R0,[SP, #+0]
   \   0000032C   7F21               MOVS     R1,#+127
   \   0000032E   0120               MOVS     R0,#+1
   \   00000330   03B4               PUSH     {R0,R1}
   \   00000332   1621               MOVS     R1,#+22
   \   00000334   921C               ADDS     R2,R2,#+2
   \   00000336   1000               MOVS     R0,R2
   \   00000338   0006               LSLS     R0,R0,#+24
   \   0000033A   000E               LSRS     R0,R0,#+24
   \   0000033C   03B4               PUSH     {R0,R1}
   \   0000033E   1D23               MOVS     R3,#+29
   \   00000340   1422               MOVS     R2,#+20
   \   00000342   0221               MOVS     R1,#+2
   \   00000344   06A8               ADD      R0,SP,#+24
   \   00000346   ........           BL       Label
   \   0000034A   06B0               ADD      SP,SP,#+24
   4406                  
   4407                    txt[0]='<';txt[1]=0;
   \   0000034C   3C20               MOVS     R0,#+60
   \   0000034E   2870               STRB     R0,[R5, #+0]
   \   00000350   6E70               STRB     R6,[R5, #+1]
   4408                    Button(txt,3,26,15,15); 
   \   00000352   82B0               SUB      SP,SP,#+8
   \   00000354   0F20               MOVS     R0,#+15
   \   00000356   0090               STR      R0,[SP, #+0]
   \   00000358   0300               MOVS     R3,R0
   \   0000035A   1A22               MOVS     R2,#+26
   \   0000035C   0321               MOVS     R1,#+3
   \   0000035E   02A8               ADD      R0,SP,#+8
   \   00000360   ........           BL       Button
   \   00000364   02B0               ADD      SP,SP,#+8
   4409                    txt[0]='>';
   \   00000366   3E20               MOVS     R0,#+62
   \   00000368   2870               STRB     R0,[R5, #+0]
   4410                    Button(txt,45,26,15,15); 
   \   0000036A   82B0               SUB      SP,SP,#+8
   \   0000036C   0F20               MOVS     R0,#+15
   \   0000036E   0090               STR      R0,[SP, #+0]
   \   00000370   0300               MOVS     R3,R0
   \   00000372   1A22               MOVS     R2,#+26
   \   00000374   2D21               MOVS     R1,#+45
   \   00000376   02A8               ADD      R0,SP,#+8
   \   00000378   ........           BL       Button
   \   0000037C   02B0               ADD      SP,SP,#+8
   4411          
   4412                    if (CurModifSheet==0) ZoneButon(Screen->Button[0].Text,4,3,56,22,(char*)ButtonName[10*CurModifSheet]); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000037E   1048               LDR      R0,??ThermostatSet_Paint_0+0x1C  ;; TextToChangeLength + 5
   \   00000380   0078               LDRB     R0,[R0, #+0]
   \   00000382   0028               CMP      R0,#+0
   \   00000384   0AD1               BNE      ??ThermostatSet_Paint_9
   \   00000386   0F49               LDR      R1,??ThermostatSet_Paint_0+0x20  ;; `?<Constant {129, 0}>` + 1696
   \   00000388   1620               MOVS     R0,#+22
   \   0000038A   03B4               PUSH     {R0,R1}
   \   0000038C   3823               MOVS     R3,#+56
   \   0000038E   0322               MOVS     R2,#+3
   \   00000390   0421               MOVS     R1,#+4
   \   00000392   0498               LDR      R0,[SP, #+16]
   \   00000394   0B30               ADDS     R0,R0,#+11
   \   00000396   ........           BL       ZoneButon
   \   0000039A   02B0               ADD      SP,SP,#+8
   4413             
   4414                 
   4415          }
   \                     ??ThermostatSet_Paint_9:
   \   0000039C   FEBC               POP      {R1-R7}
   \   0000039E   01BC               POP      {R0}
   \   000003A0   0047               BX       R0               ;; return
   \   000003A2   C046               Nop      
   \                     ??ThermostatSet_Paint_0:
   \   000003A4   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000003A8   ........           DC32     `?<Constant {129, 0}>` + 4
   \   000003AC   F9060000           DC32     0x6f9
   \   000003B0   ........           DC32     g_leng
   \   000003B4   7D0A0000           DC32     0xa7d
   \   000003B8   ........           DC32     Speech
   \   000003BC   56617200           DC8      "Var"
   \   000003C0   ........           DC32     TextToChangeLength + 5
   \   000003C4   ........           DC32     `?<Constant {129, 0}>` + 1696
   4416          

   \                                 In section Debug.txt, align 4, keep-with-next
   4417          void ThermostatSet_Event(_Screen* Screen)
   4418          {
   \                     ThermostatSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   4419            char Repaint=0;
   \   00000004   0024               MOVS     R4,#+0
   \   00000006   2500               MOVS     R5,R4
   4420                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000008   A34E               LDR      R6,??ThermostatSet_Event_0  ;; Y_up
   \   0000000A   A44F               LDR      R7,??ThermostatSet_Event_0+0x4  ;; Y_down
   \   0000000C   2100               MOVS     R1,R4
   \   0000000E   0800               MOVS     R0,R1
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0F21               MOVS     R1,#+15
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   3B5E               LDRSH    R3,[R7, R0]
   \   00000018   A148               LDR      R0,??ThermostatSet_Event_0+0x8  ;; X_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   315E               LDRSH    R1,[R6, R0]
   \   00000022   8C46               MOV      R12,R1
   \   00000024   9F48               LDR      R0,??ThermostatSet_Event_0+0xC  ;; X_up
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   405E               LDRSH    R0,[R0, R1]
   \   0000002A   6146               MOV      R1,R12
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   \   00000032   0028               CMP      R0,#+0
   \   00000034   07D5               BPL      ??ThermostatSet_Event_1
   4421                  {
   4422                    MenuLevel=(MenuLevel/10);
   \   00000036   9C4C               LDR      R4,??ThermostatSet_Event_0+0x10  ;; TextToChangeLength
   \   00000038   206D               LDR      R0,[R4, #+80]
   \   0000003A   0A21               MOVS     R1,#+10
   \   0000003C   ........           BL       __aeabi_idivmod
   \   00000040   2065               STR      R0,[R4, #+80]
   4423                    Repaint=1;
   \   00000042   0125               MOVS     R5,#+1
   \   00000044   1FE1               B        ??ThermostatSet_Event_2
   4424                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ThermostatSet_Event_1:
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   385E               LDRSH    R0,[R7, R0]
   \   0000004A   7028               CMP      R0,#+112
   \   0000004C   04DB               BLT      ??ThermostatSet_Event_3
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   305E               LDRSH    R0,[R6, R0]
   \   00000052   7028               CMP      R0,#+112
   \   00000054   00DB               BLT      .+4
   \   00000056   16E1               B        ??ThermostatSet_Event_2
   4425                  { 
   4426                    char MaxSensorReg=0;
   4427                    if ((Screen->Thermo.SensorNode>=0) && (Screen->Thermo.SensorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \                     ??ThermostatSet_Event_3:
   \   00000058   049E               LDR      R6,[SP, #+16]
   \   0000005A   8C36               ADDS     R6,R6,#+140
   \   0000005C   0320               MOVS     R0,#+3
   \   0000005E   3056               LDRSB    R0,[R6, R0]
   \   00000060   0028               CMP      R0,#+0
   \   00000062   07D4               BMI      ??ThermostatSet_Event_4
   \   00000064   0320               MOVS     R0,#+3
   \   00000066   3056               LDRSB    R0,[R6, R0]
   \   00000068   FF28               CMP      R0,#+255
   \   0000006A   03D0               BEQ      ??ThermostatSet_Event_4
   4428                    {
   4429                      MaxSensorReg=NumberReg;
   \   0000006C   6846               MOV      R0,SP
   \   0000006E   0B21               MOVS     R1,#+11
   \   00000070   0170               STRB     R1,[R0, #+0]
   \   00000072   02E0               B        ??ThermostatSet_Event_5
   4430                    }else{
   4431                      MaxSensorReg=20; 
   \                     ??ThermostatSet_Event_4:
   \   00000074   6846               MOV      R0,SP
   \   00000076   1421               MOVS     R1,#+20
   \   00000078   0170               STRB     R1,[R0, #+0]
   4432                    }
   4433                    
   4434                    
   4435                    char MaxActorPort=0;
   4436                    if (((Screen->Thermo.ActorNode)>=0) && (Screen->Thermo.ActorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \                     ??ThermostatSet_Event_5:
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   3056               LDRSB    R0,[R6, R0]
   \   0000007E   0028               CMP      R0,#+0
   \   00000080   07D4               BMI      ??ThermostatSet_Event_6
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   3056               LDRSB    R0,[R6, R0]
   \   00000086   FF28               CMP      R0,#+255
   \   00000088   03D0               BEQ      ??ThermostatSet_Event_6
   4437                    {
   4438                      MaxActorPort=NumberNeuronsPort;
   \   0000008A   6846               MOV      R0,SP
   \   0000008C   1021               MOVS     R1,#+16
   \   0000008E   4170               STRB     R1,[R0, #+1]
   \   00000090   02E0               B        ??ThermostatSet_Event_7
   4439                    }else{
   4440                      MaxActorPort=100; 
   \                     ??ThermostatSet_Event_6:
   \   00000092   6846               MOV      R0,SP
   \   00000094   6421               MOVS     R1,#+100
   \   00000096   4170               STRB     R1,[R0, #+1]
   \                     ??ThermostatSet_Event_7:
   \   00000098   01AF               ADD      R7,SP,#+4
   \   0000009A   3C20               MOVS     R0,#+60
   \   0000009C   3870               STRB     R0,[R7, #+0]
   4441                    }
   4442                    
   4443                    
   4444                    char txt[5];         
   4445                    txt[0]='<';txt[1]=0;
   \   0000009E   2000               MOVS     R0,R4
   \   000000A0   7870               STRB     R0,[R7, #+1]
   4446                    if (Button(txt,3,85,15,15)==1) { if(Screen->Thermo.SensorNode>=0) Screen->Thermo.SensorNode--; else Screen->Thermo.SensorNode=NumberNeurons-1; Repaint=1;}  
   \   000000A2   82B0               SUB      SP,SP,#+8
   \   000000A4   0F20               MOVS     R0,#+15
   \   000000A6   0090               STR      R0,[SP, #+0]
   \   000000A8   0300               MOVS     R3,R0
   \   000000AA   5522               MOVS     R2,#+85
   \   000000AC   0321               MOVS     R1,#+3
   \   000000AE   03A8               ADD      R0,SP,#+12
   \   000000B0   ........           BL       Button
   \   000000B4   02B0               ADD      SP,SP,#+8
   \   000000B6   0128               CMP      R0,#+1
   \   000000B8   0BD1               BNE      ??ThermostatSet_Event_8
   \   000000BA   0320               MOVS     R0,#+3
   \   000000BC   3056               LDRSB    R0,[R6, R0]
   \   000000BE   0028               CMP      R0,#+0
   \   000000C0   04D4               BMI      ??ThermostatSet_Event_9
   \   000000C2   0320               MOVS     R0,#+3
   \   000000C4   3056               LDRSB    R0,[R6, R0]
   \   000000C6   401E               SUBS     R0,R0,#+1
   \   000000C8   F070               STRB     R0,[R6, #+3]
   \   000000CA   01E0               B        ??ThermostatSet_Event_10
   \                     ??ThermostatSet_Event_9:
   \   000000CC   2220               MOVS     R0,#+34
   \   000000CE   F070               STRB     R0,[R6, #+3]
   \                     ??ThermostatSet_Event_10:
   \   000000D0   0125               MOVS     R5,#+1
   \                     ??ThermostatSet_Event_8:
   \   000000D2   3E20               MOVS     R0,#+62
   \   000000D4   3870               STRB     R0,[R7, #+0]
   4447                    txt[0]='>';
   4448                    if (Button(txt,45,85,15,15)==1) { if(Screen->Thermo.SensorNode+1<NumberNeurons) Screen->Thermo.SensorNode++; else Screen->Thermo.SensorNode=-1; Repaint=1;} 
   \   000000D6   82B0               SUB      SP,SP,#+8
   \   000000D8   0F20               MOVS     R0,#+15
   \   000000DA   0090               STR      R0,[SP, #+0]
   \   000000DC   0300               MOVS     R3,R0
   \   000000DE   5522               MOVS     R2,#+85
   \   000000E0   2D21               MOVS     R1,#+45
   \   000000E2   03A8               ADD      R0,SP,#+12
   \   000000E4   ........           BL       Button
   \   000000E8   02B0               ADD      SP,SP,#+8
   \   000000EA   0128               CMP      R0,#+1
   \   000000EC   0DD1               BNE      ??ThermostatSet_Event_11
   \   000000EE   0320               MOVS     R0,#+3
   \   000000F0   3056               LDRSB    R0,[R6, R0]
   \   000000F2   401C               ADDS     R0,R0,#+1
   \   000000F4   2328               CMP      R0,#+35
   \   000000F6   04DA               BGE      ??ThermostatSet_Event_12
   \   000000F8   0320               MOVS     R0,#+3
   \   000000FA   3056               LDRSB    R0,[R6, R0]
   \   000000FC   401C               ADDS     R0,R0,#+1
   \   000000FE   F070               STRB     R0,[R6, #+3]
   \   00000100   02E0               B        ??ThermostatSet_Event_13
   \                     ??ThermostatSet_Event_12:
   \   00000102   0020               MOVS     R0,#+0
   \   00000104   C043               MVNS     R0,R0            ;; #-1
   \   00000106   F070               STRB     R0,[R6, #+3]
   \                     ??ThermostatSet_Event_13:
   \   00000108   0125               MOVS     R5,#+1
   4449                   
   4450                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_11:
   \   0000010A   3C20               MOVS     R0,#+60
   \   0000010C   3870               STRB     R0,[R7, #+0]
   \   0000010E   2000               MOVS     R0,R4
   \   00000110   7870               STRB     R0,[R7, #+1]
   4451                    if (Button(txt,3,69,15,15)==1) { if(Screen->Thermo.SensorReg>1) Screen->Thermo.SensorReg--; else Screen->Thermo.SensorReg=MaxSensorReg-1; Repaint=1;}  
   \   00000112   82B0               SUB      SP,SP,#+8
   \   00000114   0F20               MOVS     R0,#+15
   \   00000116   0090               STR      R0,[SP, #+0]
   \   00000118   0300               MOVS     R3,R0
   \   0000011A   4522               MOVS     R2,#+69
   \   0000011C   0321               MOVS     R1,#+3
   \   0000011E   03A8               ADD      R0,SP,#+12
   \   00000120   ........           BL       Button
   \   00000124   02B0               ADD      SP,SP,#+8
   \   00000126   0128               CMP      R0,#+1
   \   00000128   0AD1               BNE      ??ThermostatSet_Event_14
   \   0000012A   3079               LDRB     R0,[R6, #+4]
   \   0000012C   0228               CMP      R0,#+2
   \   0000012E   02D3               BCC      ??ThermostatSet_Event_15
   \   00000130   401E               SUBS     R0,R0,#+1
   \   00000132   3071               STRB     R0,[R6, #+4]
   \   00000134   03E0               B        ??ThermostatSet_Event_16
   \                     ??ThermostatSet_Event_15:
   \   00000136   6846               MOV      R0,SP
   \   00000138   0078               LDRB     R0,[R0, #+0]
   \   0000013A   401E               SUBS     R0,R0,#+1
   \   0000013C   3071               STRB     R0,[R6, #+4]
   \                     ??ThermostatSet_Event_16:
   \   0000013E   0125               MOVS     R5,#+1
   4452                    txt[0]='>';
   \                     ??ThermostatSet_Event_14:
   \   00000140   3E20               MOVS     R0,#+62
   \   00000142   3870               STRB     R0,[R7, #+0]
   4453                    if (Button(txt,45,69,15,15)==1) { if(Screen->Thermo.SensorReg+1<MaxSensorReg) Screen->Thermo.SensorReg++; else Screen->Thermo.SensorReg=1; Repaint=1;} 
   \   00000144   82B0               SUB      SP,SP,#+8
   \   00000146   0F20               MOVS     R0,#+15
   \   00000148   0090               STR      R0,[SP, #+0]
   \   0000014A   0300               MOVS     R3,R0
   \   0000014C   4522               MOVS     R2,#+69
   \   0000014E   2D21               MOVS     R1,#+45
   \   00000150   03A8               ADD      R0,SP,#+12
   \   00000152   ........           BL       Button
   \   00000156   02B0               ADD      SP,SP,#+8
   \   00000158   0128               CMP      R0,#+1
   \   0000015A   0CD1               BNE      ??ThermostatSet_Event_17
   \   0000015C   3079               LDRB     R0,[R6, #+4]
   \   0000015E   401C               ADDS     R0,R0,#+1
   \   00000160   6946               MOV      R1,SP
   \   00000162   0978               LDRB     R1,[R1, #+0]
   \   00000164   8842               CMP      R0,R1
   \   00000166   03DA               BGE      ??ThermostatSet_Event_18
   \   00000168   3079               LDRB     R0,[R6, #+4]
   \   0000016A   401C               ADDS     R0,R0,#+1
   \   0000016C   3071               STRB     R0,[R6, #+4]
   \   0000016E   01E0               B        ??ThermostatSet_Event_19
   \                     ??ThermostatSet_Event_18:
   \   00000170   0120               MOVS     R0,#+1
   \   00000172   3071               STRB     R0,[R6, #+4]
   \                     ??ThermostatSet_Event_19:
   \   00000174   0125               MOVS     R5,#+1
   4454                   
   4455                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_17:
   \   00000176   3C20               MOVS     R0,#+60
   \   00000178   3870               STRB     R0,[R7, #+0]
   \   0000017A   2000               MOVS     R0,R4
   \   0000017C   7870               STRB     R0,[R7, #+1]
   4456                    if (Button(txt,3,42,15,15)==1) { if(Screen->Thermo.ActorNode>=0) Screen->Thermo.ActorNode--; else Screen->Thermo.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   0F20               MOVS     R0,#+15
   \   00000182   0090               STR      R0,[SP, #+0]
   \   00000184   0300               MOVS     R3,R0
   \   00000186   2A22               MOVS     R2,#+42
   \   00000188   0321               MOVS     R1,#+3
   \   0000018A   03A8               ADD      R0,SP,#+12
   \   0000018C   ........           BL       Button
   \   00000190   02B0               ADD      SP,SP,#+8
   \   00000192   0128               CMP      R0,#+1
   \   00000194   0BD1               BNE      ??ThermostatSet_Event_20
   \   00000196   0020               MOVS     R0,#+0
   \   00000198   3056               LDRSB    R0,[R6, R0]
   \   0000019A   0028               CMP      R0,#+0
   \   0000019C   04D4               BMI      ??ThermostatSet_Event_21
   \   0000019E   0020               MOVS     R0,#+0
   \   000001A0   3056               LDRSB    R0,[R6, R0]
   \   000001A2   401E               SUBS     R0,R0,#+1
   \   000001A4   3070               STRB     R0,[R6, #+0]
   \   000001A6   01E0               B        ??ThermostatSet_Event_22
   \                     ??ThermostatSet_Event_21:
   \   000001A8   2220               MOVS     R0,#+34
   \   000001AA   3070               STRB     R0,[R6, #+0]
   \                     ??ThermostatSet_Event_22:
   \   000001AC   0125               MOVS     R5,#+1
   4457                    txt[0]='>';
   \                     ??ThermostatSet_Event_20:
   \   000001AE   3E20               MOVS     R0,#+62
   \   000001B0   3870               STRB     R0,[R7, #+0]
   4458                    if (Button(txt,45,42,15,15)==1) { if(Screen->Thermo.ActorNode+1<NumberNeurons) Screen->Thermo.ActorNode++; else Screen->Thermo.ActorNode=-1; Repaint=1;} 
   \   000001B2   82B0               SUB      SP,SP,#+8
   \   000001B4   0F20               MOVS     R0,#+15
   \   000001B6   0090               STR      R0,[SP, #+0]
   \   000001B8   0300               MOVS     R3,R0
   \   000001BA   2A22               MOVS     R2,#+42
   \   000001BC   2D21               MOVS     R1,#+45
   \   000001BE   03A8               ADD      R0,SP,#+12
   \   000001C0   ........           BL       Button
   \   000001C4   02B0               ADD      SP,SP,#+8
   \   000001C6   0128               CMP      R0,#+1
   \   000001C8   0DD1               BNE      ??ThermostatSet_Event_23
   \   000001CA   0020               MOVS     R0,#+0
   \   000001CC   3056               LDRSB    R0,[R6, R0]
   \   000001CE   401C               ADDS     R0,R0,#+1
   \   000001D0   2328               CMP      R0,#+35
   \   000001D2   04DA               BGE      ??ThermostatSet_Event_24
   \   000001D4   0020               MOVS     R0,#+0
   \   000001D6   3056               LDRSB    R0,[R6, R0]
   \   000001D8   401C               ADDS     R0,R0,#+1
   \   000001DA   3070               STRB     R0,[R6, #+0]
   \   000001DC   02E0               B        ??ThermostatSet_Event_25
   \                     ??ThermostatSet_Event_24:
   \   000001DE   0020               MOVS     R0,#+0
   \   000001E0   C043               MVNS     R0,R0            ;; #-1
   \   000001E2   3070               STRB     R0,[R6, #+0]
   \                     ??ThermostatSet_Event_25:
   \   000001E4   0125               MOVS     R5,#+1
   4459                   
   4460                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_23:
   \   000001E6   3C20               MOVS     R0,#+60
   \   000001E8   3870               STRB     R0,[R7, #+0]
   \   000001EA   2000               MOVS     R0,R4
   \   000001EC   7870               STRB     R0,[R7, #+1]
   4461                    if (Button(txt,3,26,15,15)==1) { if(Screen->Thermo.ActorPort-1>0) Screen->Thermo.ActorPort--; else Screen->Thermo.ActorPort=MaxActorPort-1; Repaint=1;}  
   \   000001EE   82B0               SUB      SP,SP,#+8
   \   000001F0   0F20               MOVS     R0,#+15
   \   000001F2   0090               STR      R0,[SP, #+0]
   \   000001F4   0300               MOVS     R3,R0
   \   000001F6   1A22               MOVS     R2,#+26
   \   000001F8   0321               MOVS     R1,#+3
   \   000001FA   03A8               ADD      R0,SP,#+12
   \   000001FC   ........           BL       Button
   \   00000200   02B0               ADD      SP,SP,#+8
   \   00000202   0128               CMP      R0,#+1
   \   00000204   0CD1               BNE      ??ThermostatSet_Event_26
   \   00000206   7078               LDRB     R0,[R6, #+1]
   \   00000208   401E               SUBS     R0,R0,#+1
   \   0000020A   0128               CMP      R0,#+1
   \   0000020C   03DB               BLT      ??ThermostatSet_Event_27
   \   0000020E   7078               LDRB     R0,[R6, #+1]
   \   00000210   401E               SUBS     R0,R0,#+1
   \   00000212   7070               STRB     R0,[R6, #+1]
   \   00000214   03E0               B        ??ThermostatSet_Event_28
   \                     ??ThermostatSet_Event_27:
   \   00000216   6846               MOV      R0,SP
   \   00000218   4078               LDRB     R0,[R0, #+1]
   \   0000021A   401E               SUBS     R0,R0,#+1
   \   0000021C   7070               STRB     R0,[R6, #+1]
   \                     ??ThermostatSet_Event_28:
   \   0000021E   0125               MOVS     R5,#+1
   4462                    txt[0]='>';
   \                     ??ThermostatSet_Event_26:
   \   00000220   3E20               MOVS     R0,#+62
   \   00000222   3870               STRB     R0,[R7, #+0]
   4463                    if (Button(txt,45,26,15,15)==1) { if(Screen->Thermo.ActorPort+1<MaxActorPort) Screen->Thermo.ActorPort++; else Screen->Thermo.ActorPort=0; Repaint=1;} 
   \   00000224   82B0               SUB      SP,SP,#+8
   \   00000226   0F20               MOVS     R0,#+15
   \   00000228   0090               STR      R0,[SP, #+0]
   \   0000022A   0300               MOVS     R3,R0
   \   0000022C   1A22               MOVS     R2,#+26
   \   0000022E   2D21               MOVS     R1,#+45
   \   00000230   03A8               ADD      R0,SP,#+12
   \   00000232   ........           BL       Button
   \   00000236   02B0               ADD      SP,SP,#+8
   \   00000238   0128               CMP      R0,#+1
   \   0000023A   0BD1               BNE      ??ThermostatSet_Event_29
   \   0000023C   7078               LDRB     R0,[R6, #+1]
   \   0000023E   401C               ADDS     R0,R0,#+1
   \   00000240   6946               MOV      R1,SP
   \   00000242   4978               LDRB     R1,[R1, #+1]
   \   00000244   8842               CMP      R0,R1
   \   00000246   03DA               BGE      ??ThermostatSet_Event_30
   \   00000248   7078               LDRB     R0,[R6, #+1]
   \   0000024A   401C               ADDS     R0,R0,#+1
   \   0000024C   7070               STRB     R0,[R6, #+1]
   \   0000024E   00E0               B        ??ThermostatSet_Event_31
   \                     ??ThermostatSet_Event_30:
   \   00000250   7470               STRB     R4,[R6, #+1]
   \                     ??ThermostatSet_Event_31:
   \   00000252   0125               MOVS     R5,#+1
   4464                        
   4465                    
   4466                    if (CurModifSheet==0) 
   \                     ??ThermostatSet_Event_29:
   \   00000254   144C               LDR      R4,??ThermostatSet_Event_0+0x10  ;; TextToChangeLength
   \   00000256   6079               LDRB     R0,[R4, #+5]
   \   00000258   0028               CMP      R0,#+0
   \   0000025A   14D1               BNE      ??ThermostatSet_Event_2
   4467                    if (
   4468                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   4469                            4,3,56,22,
   4470                            2)==1
   4471                           )
   \   0000025C   0221               MOVS     R1,#+2
   \   0000025E   1620               MOVS     R0,#+22
   \   00000260   03B4               PUSH     {R0,R1}
   \   00000262   3823               MOVS     R3,#+56
   \   00000264   0322               MOVS     R2,#+3
   \   00000266   0421               MOVS     R1,#+4
   \   00000268   0020               MOVS     R0,#+0
   \   0000026A   ........           BL       Zone
   \   0000026E   02B0               ADD      SP,SP,#+8
   \   00000270   0128               CMP      R0,#+1
   \   00000272   08D1               BNE      ??ThermostatSet_Event_2
   4472                           {
   4473                              ButtonToChange=&(Screen->Button[0]);
   \   00000274   0498               LDR      R0,[SP, #+16]
   \   00000276   0B30               ADDS     R0,R0,#+11
   \   00000278   E065               STR      R0,[R4, #+92]
   4474                              MenuLevel=(MenuLevel*10+4); Repaint=1;
   \   0000027A   206D               LDR      R0,[R4, #+80]
   \   0000027C   0A21               MOVS     R1,#+10
   \   0000027E   4843               MULS     R0,R1,R0
   \   00000280   001D               ADDS     R0,R0,#+4
   \   00000282   2065               STR      R0,[R4, #+80]
   \   00000284   0125               MOVS     R5,#+1
   4475                           }
   4476                    
   4477                    
   4478                    
   4479                  }
   4480                  if (Repaint) MenuPaint();
   \                     ??ThermostatSet_Event_2:
   \   00000286   002D               CMP      R5,#+0
   \   00000288   01D0               BEQ      ??ThermostatSet_Event_32
   \   0000028A   ........           BL       MenuPaint
   4481          }
   \                     ??ThermostatSet_Event_32:
   \   0000028E   05B0               ADD      SP,SP,#+20
   \   00000290   F0BC               POP      {R4-R7}
   \   00000292   01BC               POP      {R0}
   \   00000294   0047               BX       R0               ;; return
   \   00000296   C046               Nop      
   \                     ??ThermostatSet_Event_0:
   \   00000298   ........           DC32     Y_up
   \   0000029C   ........           DC32     Y_down
   \   000002A0   ........           DC32     X_down
   \   000002A4   ........           DC32     X_up
   \   000002A8   ........           DC32     TextToChangeLength
   4482          
   4483          
   4484          
   4485          
   4486          
   4487          
   4488          

   \                                 In section Debug.txt, align 4, keep-with-next
   4489          void ScreenTimetableSet_Paint(_Screen* Screen)
   4490          {          
   \                     ScreenTimetableSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0500               MOVS     R5,R0
   4491                 //List_Paint(Speech[g_leng].Opcje,2,15,y,0,3,Speech[g_leng].DodajWiersz, Speech[g_leng].UsunWiersz, 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4492                 List_Paint("Actor",0,108,0,0,3,0,0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   B14C               LDR      R4,??ScreenTimetableSet_Paint_0  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0321               MOVS     R1,#+3
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0100               MOVS     R1,R0
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   6430               ADDS     R0,R0,#+100
   \   00000022   ........           BL       List_Paint
   \   00000026   0AB0               ADD      SP,SP,#+40
   4493                 
   4494                 char txt[8];
   4495                 
   4496          
   4497          
   4498                    char ind=0;
   4499                    
   4500                    Label(Speech[g_leng].Wykonawca,2,5, 88 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   00000028   82B0               SUB      SP,SP,#+8
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   0090               STR      R0,[SP, #+0]
   \   0000002E   7F21               MOVS     R1,#+127
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   3421               MOVS     R1,#+52
   \   00000036   0A20               MOVS     R0,#+10
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   5823               MOVS     R3,#+88
   \   0000003C   0522               MOVS     R2,#+5
   \   0000003E   0221               MOVS     R1,#+2
   \   00000040   E120               MOVS     R0,#+225
   \   00000042   C000               LSLS     R0,R0,#+3        ;; #+1800
   \   00000044   A24E               LDR      R6,??ScreenTimetableSet_Paint_0+0x4  ;; g_leng
   \   00000046   3668               LDR      R6,[R6, #+0]
   \   00000048   A24F               LDR      R7,??ScreenTimetableSet_Paint_0+0x8  ;; 0xa7d
   \   0000004A   7E43               MULS     R6,R7,R6
   \   0000004C   A24F               LDR      R7,??ScreenTimetableSet_Paint_0+0xC  ;; Speech
   \   0000004E   BE19               ADDS     R6,R7,R6
   \   00000050   3018               ADDS     R0,R6,R0
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   4501                   
   4502                    if (Screen->Timetable.ActorNode>=0)
   \   00000058   8C35               ADDS     R5,R5,#+140
   \   0000005A   0020               MOVS     R0,#+0
   \   0000005C   2856               LDRSB    R0,[R5, R0]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   26D4               BMI      ??ScreenTimetableSet_Paint_1
   4503                    {
   4504                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   00000062   6E46               MOV      R6,SP
   \   00000064   4920               MOVS     R0,#+73
   \   00000066   3070               STRB     R0,[R6, #+0]
   \   00000068   6420               MOVS     R0,#+100
   \   0000006A   7070               STRB     R0,[R6, #+1]
   \   0000006C   3A20               MOVS     R0,#+58
   \   0000006E   B070               STRB     R0,[R6, #+2]
   \   00000070   2020               MOVS     R0,#+32
   \   00000072   F070               STRB     R0,[R6, #+3]
   4505                      ind=CharToStr(Screen->Timetable.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000074   0222               MOVS     R2,#+2
   \   00000076   F61C               ADDS     R6,R6,#+3
   \   00000078   3100               MOVS     R1,R6
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   2856               LDRSB    R0,[R5, R0]
   \   0000007E   0006               LSLS     R0,R0,#+24
   \   00000080   000E               LSRS     R0,R0,#+24
   \   00000082   ........           BL       CharToStr
   \   00000086   0200               MOVS     R2,R0
   4506                      Label(txt,2,20, 75 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000088   82B0               SUB      SP,SP,#+8
   \   0000008A   0020               MOVS     R0,#+0
   \   0000008C   0090               STR      R0,[SP, #+0]
   \   0000008E   7F21               MOVS     R1,#+127
   \   00000090   0120               MOVS     R0,#+1
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   1621               MOVS     R1,#+22
   \   00000096   D21C               ADDS     R2,R2,#+3
   \   00000098   1000               MOVS     R0,R2
   \   0000009A   0006               LSLS     R0,R0,#+24
   \   0000009C   000E               LSRS     R0,R0,#+24
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   4B23               MOVS     R3,#+75
   \   000000A2   1422               MOVS     R2,#+20
   \   000000A4   0221               MOVS     R1,#+2
   \   000000A6   06A8               ADD      R0,SP,#+24
   \   000000A8   ........           BL       Label
   \   000000AC   06B0               ADD      SP,SP,#+24
   \   000000AE   0FE0               B        ??ScreenTimetableSet_Paint_2
   4507                    }else{
   4508                      Label("Var",2,20, 75 ,ind+3,22,1,127,0);  
   \                     ??ScreenTimetableSet_Paint_1:
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   0020               MOVS     R0,#+0
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   7F21               MOVS     R1,#+127
   \   000000B8   0120               MOVS     R0,#+1
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   1621               MOVS     R1,#+22
   \   000000BE   0320               MOVS     R0,#+3
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   4B23               MOVS     R3,#+75
   \   000000C4   1422               MOVS     R2,#+20
   \   000000C6   0221               MOVS     R1,#+2
   \   000000C8   84A0               ADR      R0,??ScreenTimetableSet_Paint_0+0x10  ;; "Var"
   \   000000CA   ........           BL       Label
   \   000000CE   06B0               ADD      SP,SP,#+24
   \                     ??ScreenTimetableSet_Paint_2:
   \   000000D0   6E46               MOV      R6,SP
   \   000000D2   3C20               MOVS     R0,#+60
   \   000000D4   3070               STRB     R0,[R6, #+0]
   4509                    }
   4510                    txt[0]='<';txt[1]=0;
   \   000000D6   0027               MOVS     R7,#+0
   \   000000D8   3800               MOVS     R0,R7
   \   000000DA   7070               STRB     R0,[R6, #+1]
   4511                    Button(txt,3,72,15,15); 
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0F20               MOVS     R0,#+15
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   0300               MOVS     R3,R0
   \   000000E4   4822               MOVS     R2,#+72
   \   000000E6   0321               MOVS     R1,#+3
   \   000000E8   02A8               ADD      R0,SP,#+8
   \   000000EA   ........           BL       Button
   \   000000EE   02B0               ADD      SP,SP,#+8
   \   000000F0   3E20               MOVS     R0,#+62
   \   000000F2   3070               STRB     R0,[R6, #+0]
   4512                    txt[0]='>';
   4513                    Button(txt,45,72,15,15); 
   \   000000F4   82B0               SUB      SP,SP,#+8
   \   000000F6   0F20               MOVS     R0,#+15
   \   000000F8   0090               STR      R0,[SP, #+0]
   \   000000FA   0300               MOVS     R3,R0
   \   000000FC   4822               MOVS     R2,#+72
   \   000000FE   2D21               MOVS     R1,#+45
   \   00000100   02A8               ADD      R0,SP,#+8
   \   00000102   ........           BL       Button
   \   00000106   02B0               ADD      SP,SP,#+8
   4514                    
   4515                    if (Screen->Timetable.ActorNode>=0)
   \   00000108   0020               MOVS     R0,#+0
   \   0000010A   2856               LDRSB    R0,[R5, R0]
   \   0000010C   0028               CMP      R0,#+0
   \   0000010E   0ED4               BMI      ??ScreenTimetableSet_Paint_3
   4516                    {
   4517                      txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   00000110   5020               MOVS     R0,#+80
   \   00000112   3070               STRB     R0,[R6, #+0]
   \   00000114   3A20               MOVS     R0,#+58
   \   00000116   7070               STRB     R0,[R6, #+1]
   \   00000118   2020               MOVS     R0,#+32
   \   0000011A   B070               STRB     R0,[R6, #+2]
   4518                       ind=CharToStr(Screen->Timetable.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000011C   0222               MOVS     R2,#+2
   \   0000011E   3100               MOVS     R1,R6
   \   00000120   891C               ADDS     R1,R1,#+2
   \   00000122   6878               LDRB     R0,[R5, #+1]
   \   00000124   ........           BL       CharToStr
   \   00000128   0200               MOVS     R2,R0
   4519                       ind+=2;
   \   0000012A   921C               ADDS     R2,R2,#+2
   \   0000012C   0FE0               B        ??ScreenTimetableSet_Paint_4
   4520                    }else{
   4521                      txt[0]='N'; txt[1]='r'; txt[2]=':'; txt[3]=' '; 
   \                     ??ScreenTimetableSet_Paint_3:
   \   0000012E   4E20               MOVS     R0,#+78
   \   00000130   3070               STRB     R0,[R6, #+0]
   \   00000132   7220               MOVS     R0,#+114
   \   00000134   7070               STRB     R0,[R6, #+1]
   \   00000136   3A20               MOVS     R0,#+58
   \   00000138   B070               STRB     R0,[R6, #+2]
   \   0000013A   2020               MOVS     R0,#+32
   \   0000013C   F070               STRB     R0,[R6, #+3]
   4522                       ind=CharToStr(Screen->Timetable.ActorPort, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   0000013E   0222               MOVS     R2,#+2
   \   00000140   3100               MOVS     R1,R6
   \   00000142   C91C               ADDS     R1,R1,#+3
   \   00000144   6878               LDRB     R0,[R5, #+1]
   \   00000146   ........           BL       CharToStr
   \   0000014A   0200               MOVS     R2,R0
   4523                       ind+=3;
   \   0000014C   D21C               ADDS     R2,R2,#+3
   4524                    }
   4525                    
   4526                   
   4527                   
   4528                    Label(txt,2,20, 55 ,ind,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenTimetableSet_Paint_4:
   \   0000014E   82B0               SUB      SP,SP,#+8
   \   00000150   3800               MOVS     R0,R7
   \   00000152   0090               STR      R0,[SP, #+0]
   \   00000154   7F21               MOVS     R1,#+127
   \   00000156   0120               MOVS     R0,#+1
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   1621               MOVS     R1,#+22
   \   0000015C   1000               MOVS     R0,R2
   \   0000015E   0006               LSLS     R0,R0,#+24
   \   00000160   000E               LSRS     R0,R0,#+24
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   3723               MOVS     R3,#+55
   \   00000166   1422               MOVS     R2,#+20
   \   00000168   0221               MOVS     R1,#+2
   \   0000016A   06A8               ADD      R0,SP,#+24
   \   0000016C   ........           BL       Label
   \   00000170   06B0               ADD      SP,SP,#+24
   4529                
   4530                    
   4531                    
   4532                    txt[0]='<';txt[1]=0;
   \   00000172   3C20               MOVS     R0,#+60
   \   00000174   3070               STRB     R0,[R6, #+0]
   \   00000176   3800               MOVS     R0,R7
   \   00000178   7070               STRB     R0,[R6, #+1]
   4533                    Button(txt,3,52,15,15); 
   \   0000017A   82B0               SUB      SP,SP,#+8
   \   0000017C   0F20               MOVS     R0,#+15
   \   0000017E   0090               STR      R0,[SP, #+0]
   \   00000180   0300               MOVS     R3,R0
   \   00000182   3422               MOVS     R2,#+52
   \   00000184   0321               MOVS     R1,#+3
   \   00000186   02A8               ADD      R0,SP,#+8
   \   00000188   ........           BL       Button
   \   0000018C   02B0               ADD      SP,SP,#+8
   4534                    txt[0]='>';
   \   0000018E   3E20               MOVS     R0,#+62
   \   00000190   3070               STRB     R0,[R6, #+0]
   4535                    Button(txt,45,52,15,15); 
   \   00000192   82B0               SUB      SP,SP,#+8
   \   00000194   0F20               MOVS     R0,#+15
   \   00000196   0090               STR      R0,[SP, #+0]
   \   00000198   0300               MOVS     R3,R0
   \   0000019A   3422               MOVS     R2,#+52
   \   0000019C   2D21               MOVS     R1,#+45
   \   0000019E   02A8               ADD      R0,SP,#+8
   \   000001A0   ........           BL       Button
   \   000001A4   02B0               ADD      SP,SP,#+8
   4536          
   4537                   
   4538                    txt[0]='<';txt[1]=0;
   \   000001A6   3C20               MOVS     R0,#+60
   \   000001A8   3070               STRB     R0,[R6, #+0]
   \   000001AA   3800               MOVS     R0,R7
   \   000001AC   7070               STRB     R0,[R6, #+1]
   4539                    Button(txt,3,24,15,15); 
   \   000001AE   82B0               SUB      SP,SP,#+8
   \   000001B0   0F20               MOVS     R0,#+15
   \   000001B2   0090               STR      R0,[SP, #+0]
   \   000001B4   0300               MOVS     R3,R0
   \   000001B6   1822               MOVS     R2,#+24
   \   000001B8   0321               MOVS     R1,#+3
   \   000001BA   02A8               ADD      R0,SP,#+8
   \   000001BC   ........           BL       Button
   \   000001C0   02B0               ADD      SP,SP,#+8
   4540                    txt[0]='>';
   \   000001C2   3E20               MOVS     R0,#+62
   \   000001C4   3070               STRB     R0,[R6, #+0]
   4541                    Button(txt,45,24,15,15); 
   \   000001C6   82B0               SUB      SP,SP,#+8
   \   000001C8   0F20               MOVS     R0,#+15
   \   000001CA   0090               STR      R0,[SP, #+0]
   \   000001CC   0300               MOVS     R3,R0
   \   000001CE   1822               MOVS     R2,#+24
   \   000001D0   2D21               MOVS     R1,#+45
   \   000001D2   02A8               ADD      R0,SP,#+8
   \   000001D4   ........           BL       Button
   \   000001D8   02B0               ADD      SP,SP,#+8
   4542                 
   4543                    switch (Screen->Timetable.ActionType)
   \   000001DA   A878               LDRB     R0,[R5, #+2]
   \   000001DC   0028               CMP      R0,#+0
   \   000001DE   04D0               BEQ      ??ScreenTimetableSet_Paint_5
   \   000001E0   0128               CMP      R0,#+1
   \   000001E2   20D0               BEQ      ??ScreenTimetableSet_Paint_6
   \   000001E4   0228               CMP      R0,#+2
   \   000001E6   2AD0               BEQ      ??ScreenTimetableSet_Paint_7
   \   000001E8   34E0               B        ??ScreenTimetableSet_Paint_8
   4544                    {
   4545                      case 0: CopyToCanvasPoint((char*)ProcSet_graf, 21, 27,24,9); 
   \                     ??ScreenTimetableSet_Paint_5:
   \   000001EA   82B0               SUB      SP,SP,#+8
   \   000001EC   0920               MOVS     R0,#+9
   \   000001EE   0090               STR      R0,[SP, #+0]
   \   000001F0   1823               MOVS     R3,#+24
   \   000001F2   1B22               MOVS     R2,#+27
   \   000001F4   1521               MOVS     R1,#+21
   \   000001F6   2000               MOVS     R0,R4
   \   000001F8   8C30               ADDS     R0,R0,#+140
   \   000001FA   ........           BL       CopyToCanvasPoint
   \   000001FE   02B0               ADD      SP,SP,#+8
   4546                                txt[0]='Q'; txt[1]=0;
   \   00000200   5120               MOVS     R0,#+81
   \   00000202   3070               STRB     R0,[R6, #+0]
   \   00000204   7770               STRB     R7,[R6, #+1]
   4547                                Label(txt,2,28,27,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000206   82B0               SUB      SP,SP,#+8
   \   00000208   3800               MOVS     R0,R7
   \   0000020A   0090               STR      R0,[SP, #+0]
   \   0000020C   7821               MOVS     R1,#+120
   \   0000020E   03B4               PUSH     {R0,R1}
   \   00000210   0621               MOVS     R1,#+6
   \   00000212   0120               MOVS     R0,#+1
   \   00000214   03B4               PUSH     {R0,R1}
   \   00000216   1B23               MOVS     R3,#+27
   \   00000218   1C22               MOVS     R2,#+28
   \   0000021A   0221               MOVS     R1,#+2
   \   0000021C   06A8               ADD      R0,SP,#+24
   \   0000021E   ........           BL       Label
   \   00000222   06B0               ADD      SP,SP,#+24
   \   00000224   16E0               B        ??ScreenTimetableSet_Paint_8
   4548          
   4549                      
   4550                                break; //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght); 
   4551                      case 1: CopyToCanvasPoint((char*)ProcWOUTS_graf, 21, 27,24,9); break;
   \                     ??ScreenTimetableSet_Paint_6:
   \   00000226   82B0               SUB      SP,SP,#+8
   \   00000228   0920               MOVS     R0,#+9
   \   0000022A   0090               STR      R0,[SP, #+0]
   \   0000022C   1823               MOVS     R3,#+24
   \   0000022E   1B22               MOVS     R2,#+27
   \   00000230   1521               MOVS     R1,#+21
   \   00000232   2000               MOVS     R0,R4
   \   00000234   A830               ADDS     R0,R0,#+168
   \   00000236   ........           BL       CopyToCanvasPoint
   \   0000023A   02B0               ADD      SP,SP,#+8
   \   0000023C   0AE0               B        ??ScreenTimetableSet_Paint_8
   4552                      case 2: CopyToCanvasPoint((char*)ProcWOUTR_graf, 21, 27,24,9); break;
   \                     ??ScreenTimetableSet_Paint_7:
   \   0000023E   82B0               SUB      SP,SP,#+8
   \   00000240   0920               MOVS     R0,#+9
   \   00000242   0090               STR      R0,[SP, #+0]
   \   00000244   1823               MOVS     R3,#+24
   \   00000246   1B22               MOVS     R2,#+27
   \   00000248   1521               MOVS     R1,#+21
   \   0000024A   2000               MOVS     R0,R4
   \   0000024C   C430               ADDS     R0,R0,#+196
   \   0000024E   ........           BL       CopyToCanvasPoint
   \   00000252   02B0               ADD      SP,SP,#+8
   4553                    }
   4554                    
   4555          
   4556                      
   4557                    
   4558                    Label( "-1h",1,27,6,5,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenTimetableSet_Paint_8:
   \   00000254   82B0               SUB      SP,SP,#+8
   \   00000256   3800               MOVS     R0,R7
   \   00000258   0090               STR      R0,[SP, #+0]
   \   0000025A   7F21               MOVS     R1,#+127
   \   0000025C   0120               MOVS     R0,#+1
   \   0000025E   03B4               PUSH     {R0,R1}
   \   00000260   2121               MOVS     R1,#+33
   \   00000262   0520               MOVS     R0,#+5
   \   00000264   03B4               PUSH     {R0,R1}
   \   00000266   0623               MOVS     R3,#+6
   \   00000268   1B22               MOVS     R2,#+27
   \   0000026A   0121               MOVS     R1,#+1
   \   0000026C   1CA0               ADR      R0,??ScreenTimetableSet_Paint_0+0x14  ;; "-1h"
   \   0000026E   ........           BL       Label
   \   00000272   06B0               ADD      SP,SP,#+24
   4559                    H_line(30,4,12,1); 
   \   00000274   0123               MOVS     R3,#+1
   \   00000276   0C22               MOVS     R2,#+12
   \   00000278   0421               MOVS     R1,#+4
   \   0000027A   1E20               MOVS     R0,#+30
   \   0000027C   ........           BL       H_line
   4560                    H_line(30,16,12,1); 
   \   00000280   0123               MOVS     R3,#+1
   \   00000282   0C22               MOVS     R2,#+12
   \   00000284   1021               MOVS     R1,#+16
   \   00000286   1E20               MOVS     R0,#+30
   \   00000288   ........           BL       H_line
   4561                    V_line(30,4,12,1);
   \   0000028C   0123               MOVS     R3,#+1
   \   0000028E   0C22               MOVS     R2,#+12
   \   00000290   0421               MOVS     R1,#+4
   \   00000292   1E20               MOVS     R0,#+30
   \   00000294   ........           BL       V_line
   4562                    V_line(42,4,13,1); 
   \   00000298   0123               MOVS     R3,#+1
   \   0000029A   0D22               MOVS     R2,#+13
   \   0000029C   0421               MOVS     R1,#+4
   \   0000029E   2A20               MOVS     R0,#+42
   \   000002A0   ........           BL       V_line
   4563                    
   4564          
   4565                    if (Screen->Timetable.Min1h)
   \   000002A4   E878               LDRB     R0,[R5, #+3]
   \   000002A6   0028               CMP      R0,#+0
   \   000002A8   0CD0               BEQ      ??ScreenTimetableSet_Paint_9
   4566                    {
   4567                       char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   000002AA   02A8               ADD      R0,SP,#+8
   \   000002AC   0ECC               LDM      R4!,{R1-R3}
   \   000002AE   0EC0               STM      R0!,{R1-R3}
   4568                      CopyToCanvasPoint((char *)ekran_tab,33,5,8,10);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght
   \   000002B0   82B0               SUB      SP,SP,#+8
   \   000002B2   0A20               MOVS     R0,#+10
   \   000002B4   0090               STR      R0,[SP, #+0]
   \   000002B6   0823               MOVS     R3,#+8
   \   000002B8   0522               MOVS     R2,#+5
   \   000002BA   2121               MOVS     R1,#+33
   \   000002BC   04A8               ADD      R0,SP,#+16
   \   000002BE   ........           BL       CopyToCanvasPoint
   \   000002C2   02B0               ADD      SP,SP,#+8
   4569                    }
   4570          
   4571          }
   \                     ??ScreenTimetableSet_Paint_9:
   \   000002C4   05B0               ADD      SP,SP,#+20
   \   000002C6   F0BC               POP      {R4-R7}
   \   000002C8   01BC               POP      {R0}
   \   000002CA   0047               BX       R0               ;; return
   \                     ??ScreenTimetableSet_Paint_0:
   \   000002CC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   000002D0   ........           DC32     g_leng
   \   000002D4   7D0A0000           DC32     0xa7d
   \   000002D8   ........           DC32     Speech
   \   000002DC   56617200           DC8      "Var"
   \   000002E0   2D316800           DC8      "-1h"
   4572          

   \                                 In section Debug.txt, align 4, keep-with-next
   4573          void ScreenTimetableSet_Event(_Screen* Screen)
   4574          {
   \                     ScreenTimetableSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4575            char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   2E00               MOVS     R6,R5
   \   00000008   8B4F               LDR      R7,??ScreenTimetableSet_Event_0  ;; Y_down
   \   0000000A   2900               MOVS     R1,R5
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   3B5E               LDRSH    R3,[R7, R0]
   \   00000016   8948               LDR      R0,??ScreenTimetableSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   8848               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   8C46               MOV      R12,R1
   \   00000022   8848               LDR      R0,??ScreenTimetableSet_Event_0+0xC  ;; X_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   405E               LDRSH    R0,[R0, R1]
   \   00000028   6146               MOV      R1,R12
   4576                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   07D5               BPL      ??ScreenTimetableSet_Event_1
   4577                  {
   4578                    MenuLevel=(MenuLevel/10);
   \   00000034   844C               LDR      R4,??ScreenTimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000036   206D               LDR      R0,[R4, #+80]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   2065               STR      R0,[R4, #+80]
   4579                    Repaint=1;
   \   00000040   0126               MOVS     R6,#+1
   \   00000042   F1E0               B        ??ScreenTimetableSet_Event_2
   4580                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ScreenTimetableSet_Event_1:
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   385E               LDRSH    R0,[R7, R0]
   \   00000048   7028               CMP      R0,#+112
   \   0000004A   05DB               BLT      ??ScreenTimetableSet_Event_3
   \   0000004C   7C48               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   405E               LDRSH    R0,[R0, R1]
   \   00000052   7028               CMP      R0,#+112
   \   00000054   00DB               BLT      .+4
   \   00000056   E7E0               B        ??ScreenTimetableSet_Event_2
   \                     ??ScreenTimetableSet_Event_3:
   \   00000058   6F46               MOV      R7,SP
   \   0000005A   3C20               MOVS     R0,#+60
   \   0000005C   3870               STRB     R0,[R7, #+0]
   4581                  { 
   4582                    char txt[3];
   4583                    txt[0]='<';txt[1]=0;
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   7870               STRB     R0,[R7, #+1]
   4584                    if (Button(txt,3,72,15,15)==1) { if(Screen->Timetable.ActorNode>-1) Screen->Timetable.ActorNode--; else Screen->Timetable.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   00000062   8C34               ADDS     R4,R4,#+140
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   0F20               MOVS     R0,#+15
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   0300               MOVS     R3,R0
   \   0000006C   4822               MOVS     R2,#+72
   \   0000006E   0321               MOVS     R1,#+3
   \   00000070   02A8               ADD      R0,SP,#+8
   \   00000072   ........           BL       Button
   \   00000076   02B0               ADD      SP,SP,#+8
   \   00000078   0128               CMP      R0,#+1
   \   0000007A   0BD1               BNE      ??ScreenTimetableSet_Event_4
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   2056               LDRSB    R0,[R4, R0]
   \   00000080   0028               CMP      R0,#+0
   \   00000082   04D4               BMI      ??ScreenTimetableSet_Event_5
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   2056               LDRSB    R0,[R4, R0]
   \   00000088   401E               SUBS     R0,R0,#+1
   \   0000008A   2070               STRB     R0,[R4, #+0]
   \   0000008C   01E0               B        ??ScreenTimetableSet_Event_6
   \                     ??ScreenTimetableSet_Event_5:
   \   0000008E   2220               MOVS     R0,#+34
   \   00000090   2070               STRB     R0,[R4, #+0]
   \                     ??ScreenTimetableSet_Event_6:
   \   00000092   0126               MOVS     R6,#+1
   \                     ??ScreenTimetableSet_Event_4:
   \   00000094   3E20               MOVS     R0,#+62
   \   00000096   3870               STRB     R0,[R7, #+0]
   4585                    txt[0]='>';
   4586                    if (Button(txt,45,72,15,15)==1) { if(Screen->Timetable.ActorNode+1<NumberNeurons) Screen->Timetable.ActorNode++; else Screen->Timetable.ActorNode=-1; Repaint=1;} 
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   0F20               MOVS     R0,#+15
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   0300               MOVS     R3,R0
   \   000000A0   4822               MOVS     R2,#+72
   \   000000A2   2D21               MOVS     R1,#+45
   \   000000A4   02A8               ADD      R0,SP,#+8
   \   000000A6   ........           BL       Button
   \   000000AA   02B0               ADD      SP,SP,#+8
   \   000000AC   0128               CMP      R0,#+1
   \   000000AE   0DD1               BNE      ??ScreenTimetableSet_Event_7
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   2056               LDRSB    R0,[R4, R0]
   \   000000B4   401C               ADDS     R0,R0,#+1
   \   000000B6   2328               CMP      R0,#+35
   \   000000B8   04DA               BGE      ??ScreenTimetableSet_Event_8
   \   000000BA   0020               MOVS     R0,#+0
   \   000000BC   2056               LDRSB    R0,[R4, R0]
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   2070               STRB     R0,[R4, #+0]
   \   000000C2   02E0               B        ??ScreenTimetableSet_Event_9
   \                     ??ScreenTimetableSet_Event_8:
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   C043               MVNS     R0,R0            ;; #-1
   \   000000C8   2070               STRB     R0,[R4, #+0]
   \                     ??ScreenTimetableSet_Event_9:
   \   000000CA   0126               MOVS     R6,#+1
   4587                   
   4588                    
   4589                    if (Screen->Timetable.ActorNode>=0)
   \                     ??ScreenTimetableSet_Event_7:
   \   000000CC   0020               MOVS     R0,#+0
   \   000000CE   2056               LDRSB    R0,[R4, R0]
   \   000000D0   0028               CMP      R0,#+0
   \   000000D2   49D4               BMI      ??ScreenTimetableSet_Event_10
   4590                    {
   4591                      txt[0]='<';txt[1]=0;
   \   000000D4   3C20               MOVS     R0,#+60
   \   000000D6   3870               STRB     R0,[R7, #+0]
   \   000000D8   2800               MOVS     R0,R5
   \   000000DA   7870               STRB     R0,[R7, #+1]
   4592                      if (Button(txt,3,52,15,15)==1) { if(Screen->Timetable.ActorPort>0) Screen->Timetable.ActorPort--; else Screen->Timetable.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0F20               MOVS     R0,#+15
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   0300               MOVS     R3,R0
   \   000000E4   3422               MOVS     R2,#+52
   \   000000E6   0321               MOVS     R1,#+3
   \   000000E8   02A8               ADD      R0,SP,#+8
   \   000000EA   ........           BL       Button
   \   000000EE   02B0               ADD      SP,SP,#+8
   \   000000F0   0128               CMP      R0,#+1
   \   000000F2   08D1               BNE      ??ScreenTimetableSet_Event_11
   \   000000F4   6078               LDRB     R0,[R4, #+1]
   \   000000F6   0028               CMP      R0,#+0
   \   000000F8   02D0               BEQ      ??ScreenTimetableSet_Event_12
   \   000000FA   401E               SUBS     R0,R0,#+1
   \   000000FC   6070               STRB     R0,[R4, #+1]
   \   000000FE   01E0               B        ??ScreenTimetableSet_Event_13
   \                     ??ScreenTimetableSet_Event_12:
   \   00000100   0F20               MOVS     R0,#+15
   \   00000102   6070               STRB     R0,[R4, #+1]
   \                     ??ScreenTimetableSet_Event_13:
   \   00000104   0126               MOVS     R6,#+1
   4593                      txt[0]='>';
   \                     ??ScreenTimetableSet_Event_11:
   \   00000106   3E20               MOVS     R0,#+62
   \   00000108   3870               STRB     R0,[R7, #+0]
   4594                      if (Button(txt,45,52,15,15)==1) { if(Screen->Timetable.ActorPort+1<NumberNeuronsPort) Screen->Timetable.ActorPort++; else Screen->Timetable.ActorPort=0; Repaint=1;} 
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0F20               MOVS     R0,#+15
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   0300               MOVS     R3,R0
   \   00000112   3422               MOVS     R2,#+52
   \   00000114   2D21               MOVS     R1,#+45
   \   00000116   02A8               ADD      R0,SP,#+8
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   0128               CMP      R0,#+1
   \   00000120   0CD1               BNE      ??ScreenTimetableSet_Event_14
   \   00000122   6078               LDRB     R0,[R4, #+1]
   \   00000124   401C               ADDS     R0,R0,#+1
   \   00000126   0004               LSLS     R0,R0,#+16
   \   00000128   000C               LSRS     R0,R0,#+16
   \   0000012A   1028               CMP      R0,#+16
   \   0000012C   03D2               BCS      ??ScreenTimetableSet_Event_15
   \   0000012E   6078               LDRB     R0,[R4, #+1]
   \   00000130   401C               ADDS     R0,R0,#+1
   \   00000132   6070               STRB     R0,[R4, #+1]
   \   00000134   01E0               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_15:
   \   00000136   2800               MOVS     R0,R5
   \   00000138   6070               STRB     R0,[R4, #+1]
   \                     ??ScreenTimetableSet_Event_16:
   \   0000013A   0126               MOVS     R6,#+1
   4595                    }else{
   4596                      //je¿eli znienna 
   4597                      txt[0]='<';txt[1]=0;
   4598                      if (Button(txt,3,52,15,15)==1) { if(Screen->Timetable.ActorPort>0) Screen->Timetable.ActorPort--; else Screen->Timetable.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   4599                      txt[0]='>';
   4600                      if (Button(txt,45,52,15,15)==1) { if(Screen->Timetable.ActorPort+1<NumberNeuronsPort) Screen->Timetable.ActorPort++; else Screen->Timetable.ActorPort=99; Repaint=1;} 
   4601                    }
   4602                      
   4603                    
   4604                    txt[0]='<';txt[1]=0;
   \                     ??ScreenTimetableSet_Event_14:
   \   0000013C   3C20               MOVS     R0,#+60
   \   0000013E   3870               STRB     R0,[R7, #+0]
   \   00000140   2800               MOVS     R0,R5
   \   00000142   7870               STRB     R0,[R7, #+1]
   4605                    if (Button(txt,3,24,15,15)==1) {if (Screen->Timetable.ActionType>0) Screen->Timetable.ActionType--; else Screen->Timetable.ActionType=2; Repaint=1;} 
   \   00000144   82B0               SUB      SP,SP,#+8
   \   00000146   0F20               MOVS     R0,#+15
   \   00000148   0090               STR      R0,[SP, #+0]
   \   0000014A   0300               MOVS     R3,R0
   \   0000014C   1822               MOVS     R2,#+24
   \   0000014E   0321               MOVS     R1,#+3
   \   00000150   02A8               ADD      R0,SP,#+8
   \   00000152   ........           BL       Button
   \   00000156   02B0               ADD      SP,SP,#+8
   \   00000158   0128               CMP      R0,#+1
   \   0000015A   3CD1               BNE      ??ScreenTimetableSet_Event_17
   \   0000015C   A078               LDRB     R0,[R4, #+2]
   \   0000015E   0028               CMP      R0,#+0
   \   00000160   36D0               BEQ      ??ScreenTimetableSet_Event_18
   \   00000162   401E               SUBS     R0,R0,#+1
   \   00000164   A070               STRB     R0,[R4, #+2]
   \   00000166   35E0               B        ??ScreenTimetableSet_Event_19
   \                     ??ScreenTimetableSet_Event_10:
   \   00000168   3C20               MOVS     R0,#+60
   \   0000016A   3870               STRB     R0,[R7, #+0]
   \   0000016C   2800               MOVS     R0,R5
   \   0000016E   7870               STRB     R0,[R7, #+1]
   \   00000170   82B0               SUB      SP,SP,#+8
   \   00000172   0F20               MOVS     R0,#+15
   \   00000174   0090               STR      R0,[SP, #+0]
   \   00000176   0300               MOVS     R3,R0
   \   00000178   3422               MOVS     R2,#+52
   \   0000017A   0321               MOVS     R1,#+3
   \   0000017C   02A8               ADD      R0,SP,#+8
   \   0000017E   ........           BL       Button
   \   00000182   02B0               ADD      SP,SP,#+8
   \   00000184   0128               CMP      R0,#+1
   \   00000186   08D1               BNE      ??ScreenTimetableSet_Event_20
   \   00000188   6078               LDRB     R0,[R4, #+1]
   \   0000018A   0028               CMP      R0,#+0
   \   0000018C   02D0               BEQ      ??ScreenTimetableSet_Event_21
   \   0000018E   401E               SUBS     R0,R0,#+1
   \   00000190   6070               STRB     R0,[R4, #+1]
   \   00000192   01E0               B        ??ScreenTimetableSet_Event_22
   \                     ??ScreenTimetableSet_Event_21:
   \   00000194   0F20               MOVS     R0,#+15
   \   00000196   6070               STRB     R0,[R4, #+1]
   \                     ??ScreenTimetableSet_Event_22:
   \   00000198   0126               MOVS     R6,#+1
   \                     ??ScreenTimetableSet_Event_20:
   \   0000019A   3E20               MOVS     R0,#+62
   \   0000019C   3870               STRB     R0,[R7, #+0]
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0F20               MOVS     R0,#+15
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   0300               MOVS     R3,R0
   \   000001A6   3422               MOVS     R2,#+52
   \   000001A8   2D21               MOVS     R1,#+45
   \   000001AA   02A8               ADD      R0,SP,#+8
   \   000001AC   ........           BL       Button
   \   000001B0   02B0               ADD      SP,SP,#+8
   \   000001B2   0128               CMP      R0,#+1
   \   000001B4   C2D1               BNE      ??ScreenTimetableSet_Event_14
   \   000001B6   6078               LDRB     R0,[R4, #+1]
   \   000001B8   401C               ADDS     R0,R0,#+1
   \   000001BA   0004               LSLS     R0,R0,#+16
   \   000001BC   000C               LSRS     R0,R0,#+16
   \   000001BE   1028               CMP      R0,#+16
   \   000001C0   03D2               BCS      ??ScreenTimetableSet_Event_23
   \   000001C2   6078               LDRB     R0,[R4, #+1]
   \   000001C4   401C               ADDS     R0,R0,#+1
   \   000001C6   6070               STRB     R0,[R4, #+1]
   \   000001C8   B7E7               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_23:
   \   000001CA   6320               MOVS     R0,#+99
   \   000001CC   6070               STRB     R0,[R4, #+1]
   \   000001CE   B4E7               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_18:
   \   000001D0   0220               MOVS     R0,#+2
   \   000001D2   A070               STRB     R0,[R4, #+2]
   \                     ??ScreenTimetableSet_Event_19:
   \   000001D4   0126               MOVS     R6,#+1
   4606                    txt[0]='>';
   \                     ??ScreenTimetableSet_Event_17:
   \   000001D6   3E20               MOVS     R0,#+62
   \   000001D8   3870               STRB     R0,[R7, #+0]
   4607                    if (Button(txt,45,24,15,15)==1) {if (Screen->Timetable.ActionType<2) Screen->Timetable.ActionType++; else Screen->Timetable.ActionType=0; Repaint=1;}  
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0F20               MOVS     R0,#+15
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   0300               MOVS     R3,R0
   \   000001E2   1822               MOVS     R2,#+24
   \   000001E4   2D21               MOVS     R1,#+45
   \   000001E6   02A8               ADD      R0,SP,#+8
   \   000001E8   ........           BL       Button
   \   000001EC   02B0               ADD      SP,SP,#+8
   \   000001EE   0128               CMP      R0,#+1
   \   000001F0   07D1               BNE      ??ScreenTimetableSet_Event_24
   \   000001F2   A078               LDRB     R0,[R4, #+2]
   \   000001F4   0228               CMP      R0,#+2
   \   000001F6   02D2               BCS      ??ScreenTimetableSet_Event_25
   \   000001F8   401C               ADDS     R0,R0,#+1
   \   000001FA   A070               STRB     R0,[R4, #+2]
   \   000001FC   00E0               B        ??ScreenTimetableSet_Event_26
   \                     ??ScreenTimetableSet_Event_25:
   \   000001FE   A570               STRB     R5,[R4, #+2]
   \                     ??ScreenTimetableSet_Event_26:
   \   00000200   0126               MOVS     R6,#+1
   4608                    
   4609                    //jezeli przyciniêto znacznik -1h
   4610                    if ((X_up>=30) && (X_up<=42) && (Y_up>=4) && (Y_up<=16)) {if (Screen->Timetable.Min1h) Screen->Timetable.Min1h=0; else Screen->Timetable.Min1h=1;  Repaint=1;}
   \                     ??ScreenTimetableSet_Event_24:
   \   00000202   1048               LDR      R0,??ScreenTimetableSet_Event_0+0xC  ;; X_up
   \   00000204   0021               MOVS     R1,#+0
   \   00000206   405E               LDRSH    R0,[R0, R1]
   \   00000208   1E28               CMP      R0,#+30
   \   0000020A   0DDB               BLT      ??ScreenTimetableSet_Event_2
   \   0000020C   2B28               CMP      R0,#+43
   \   0000020E   0BDA               BGE      ??ScreenTimetableSet_Event_2
   \   00000210   0B48               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   00000212   405E               LDRSH    R0,[R0, R1]
   \   00000214   0428               CMP      R0,#+4
   \   00000216   07DB               BLT      ??ScreenTimetableSet_Event_2
   \   00000218   1128               CMP      R0,#+17
   \   0000021A   05DA               BGE      ??ScreenTimetableSet_Event_2
   \   0000021C   E078               LDRB     R0,[R4, #+3]
   \   0000021E   411E               SUBS     R1,R0,#+1
   \   00000220   8941               SBCS     R1,R1,R1
   \   00000222   C90F               LSRS     R1,R1,#+31
   \   00000224   E170               STRB     R1,[R4, #+3]
   \   00000226   0126               MOVS     R6,#+1
   4611                  }  
   4612                  if (Repaint) MenuPaint();
   \                     ??ScreenTimetableSet_Event_2:
   \   00000228   002E               CMP      R6,#+0
   \   0000022A   01D0               BEQ      ??ScreenTimetableSet_Event_27
   \   0000022C   ........           BL       MenuPaint
   4613                  
   4614          
   4615          }
   \                     ??ScreenTimetableSet_Event_27:
   \   00000230   F8BC               POP      {R3-R7}
   \   00000232   01BC               POP      {R0}
   \   00000234   0047               BX       R0               ;; return
   \   00000236   C046               Nop      
   \                     ??ScreenTimetableSet_Event_0:
   \   00000238   ........           DC32     Y_down
   \   0000023C   ........           DC32     X_down
   \   00000240   ........           DC32     Y_up
   \   00000244   ........           DC32     X_up
   \   00000248   ........           DC32     TextToChangeLength
   4616          
   4617          
   4618          
   4619          
   4620          
   4621          
   4622          

   \                                 In section Debug.txt, align 4, keep-with-next
   4623          void ScreenAlarmSet_Paint(_Screen* Screen)
   4624          {          
   \                     ScreenAlarmSet_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   4625                 List_Paint("Alarm",1,108,0,0,3,0,0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0300               MOVS     R3,R0
   \   00000016   6C22               MOVS     R2,#+108
   \   00000018   0121               MOVS     R1,#+1
   \   0000001A   9748               LDR      R0,??ScreenAlarmSet_Paint_0  ;; `?<Constant "Alarm">`
   \   0000001C   ........           BL       List_Paint
   \   00000020   0AB0               ADD      SP,SP,#+40
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3421               MOVS     R1,#+52
   \   00000030   0A20               MOVS     R0,#+10
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   6423               MOVS     R3,#+100
   \   00000036   0522               MOVS     R2,#+5
   \   00000038   0221               MOVS     R1,#+2
   \   0000003A   9048               LDR      R0,??ScreenAlarmSet_Paint_0+0x4  ;; 0x6f9
   \   0000003C   904C               LDR      R4,??ScreenAlarmSet_Paint_0+0x8  ;; g_leng
   \   0000003E   2468               LDR      R4,[R4, #+0]
   \   00000040   904D               LDR      R5,??ScreenAlarmSet_Paint_0+0xC  ;; 0xa7d
   \   00000042   6C43               MULS     R4,R5,R4
   \   00000044   904D               LDR      R5,??ScreenAlarmSet_Paint_0+0x10  ;; Speech
   \   00000046   2C19               ADDS     R4,R5,R4
   \   00000048   2018               ADDS     R0,R4,R0
   4626                 
   4627                 char txt[8];
   4628                 
   4629                    Label(Speech[g_leng].Czujnik,2,5, 100 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000004A   ........           BL       Label
   \   0000004E   06B0               ADD      SP,SP,#+24
   \   00000050   6C46               MOV      R4,SP
   \   00000052   4920               MOVS     R0,#+73
   \   00000054   2070               STRB     R0,[R4, #+0]
   \   00000056   6420               MOVS     R0,#+100
   \   00000058   6070               STRB     R0,[R4, #+1]
   \   0000005A   3A20               MOVS     R0,#+58
   \   0000005C   A070               STRB     R0,[R4, #+2]
   \   0000005E   2020               MOVS     R0,#+32
   \   00000060   E070               STRB     R0,[R4, #+3]
   \   00000062   0222               MOVS     R2,#+2
   \   00000064   2100               MOVS     R1,R4
   \   00000066   C91C               ADDS     R1,R1,#+3
   \   00000068   1000               MOVS     R0,R2
   \   0000006A   029B               LDR      R3,[SP, #+8]
   \   0000006C   8C33               ADDS     R3,R3,#+140
   \   0000006E   1856               LDRSB    R0,[R3, R0]
   \   00000070   0006               LSLS     R0,R0,#+24
   \   00000072   000E               LSRS     R0,R0,#+24
   4630                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   4631                    char ind=CharToStr(Screen->Alarm.SensorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000074   ........           BL       CharToStr
   \   00000078   0200               MOVS     R2,R0
   4632                    Label(txt,2,20, 88 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   7F21               MOVS     R1,#+127
   \   00000082   0120               MOVS     R0,#+1
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   1621               MOVS     R1,#+22
   \   00000088   D21C               ADDS     R2,R2,#+3
   \   0000008A   1000               MOVS     R0,R2
   \   0000008C   0006               LSLS     R0,R0,#+24
   \   0000008E   000E               LSRS     R0,R0,#+24
   \   00000090   03B4               PUSH     {R0,R1}
   \   00000092   5823               MOVS     R3,#+88
   \   00000094   1422               MOVS     R2,#+20
   \   00000096   0221               MOVS     R1,#+2
   \   00000098   06A8               ADD      R0,SP,#+24
   \   0000009A   ........           BL       Label
   \   0000009E   06B0               ADD      SP,SP,#+24
   4633                  
   4634                    txt[0]='<';txt[1]=0;
   \   000000A0   3C25               MOVS     R5,#+60
   \   000000A2   2570               STRB     R5,[R4, #+0]
   \   000000A4   0026               MOVS     R6,#+0
   \   000000A6   3000               MOVS     R0,R6
   \   000000A8   6070               STRB     R0,[R4, #+1]
   4635                    Button(txt,3,85,15,15); 
   \   000000AA   82B0               SUB      SP,SP,#+8
   \   000000AC   0F20               MOVS     R0,#+15
   \   000000AE   0090               STR      R0,[SP, #+0]
   \   000000B0   0300               MOVS     R3,R0
   \   000000B2   5522               MOVS     R2,#+85
   \   000000B4   0321               MOVS     R1,#+3
   \   000000B6   02A8               ADD      R0,SP,#+8
   \   000000B8   ........           BL       Button
   \   000000BC   02B0               ADD      SP,SP,#+8
   4636                    txt[0]='>';
   \   000000BE   3E27               MOVS     R7,#+62
   \   000000C0   2770               STRB     R7,[R4, #+0]
   4637                    Button(txt,45,85,15,15); 
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0F20               MOVS     R0,#+15
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   0300               MOVS     R3,R0
   \   000000CA   5522               MOVS     R2,#+85
   \   000000CC   2D21               MOVS     R1,#+45
   \   000000CE   02A8               ADD      R0,SP,#+8
   \   000000D0   ........           BL       Button
   \   000000D4   02B0               ADD      SP,SP,#+8
   \   000000D6   5020               MOVS     R0,#+80
   \   000000D8   2070               STRB     R0,[R4, #+0]
   4638                    
   4639                    txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   000000DA   3A20               MOVS     R0,#+58
   \   000000DC   6070               STRB     R0,[R4, #+1]
   \   000000DE   2020               MOVS     R0,#+32
   \   000000E0   A070               STRB     R0,[R4, #+2]
   4640                    ind=CharToStr(Screen->Alarm.SensorPort, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   000000E2   0222               MOVS     R2,#+2
   \   000000E4   2100               MOVS     R1,R4
   \   000000E6   C91C               ADDS     R1,R1,#+3
   \   000000E8   0298               LDR      R0,[SP, #+8]
   \   000000EA   8C30               ADDS     R0,R0,#+140
   \   000000EC   C078               LDRB     R0,[R0, #+3]
   \   000000EE   ........           BL       CharToStr
   \   000000F2   0200               MOVS     R2,R0
   4641                   
   4642                    Label(txt,2,20, 72 ,ind+4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000F4   82B0               SUB      SP,SP,#+8
   \   000000F6   3000               MOVS     R0,R6
   \   000000F8   0090               STR      R0,[SP, #+0]
   \   000000FA   7F21               MOVS     R1,#+127
   \   000000FC   0120               MOVS     R0,#+1
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   1621               MOVS     R1,#+22
   \   00000102   121D               ADDS     R2,R2,#+4
   \   00000104   1000               MOVS     R0,R2
   \   00000106   0006               LSLS     R0,R0,#+24
   \   00000108   000E               LSRS     R0,R0,#+24
   \   0000010A   03B4               PUSH     {R0,R1}
   \   0000010C   4823               MOVS     R3,#+72
   \   0000010E   1422               MOVS     R2,#+20
   \   00000110   0221               MOVS     R1,#+2
   \   00000112   06A8               ADD      R0,SP,#+24
   \   00000114   ........           BL       Label
   \   00000118   06B0               ADD      SP,SP,#+24
   4643                  
   4644                    txt[0]='<';txt[1]=0;
   \   0000011A   2570               STRB     R5,[R4, #+0]
   \   0000011C   3000               MOVS     R0,R6
   \   0000011E   6070               STRB     R0,[R4, #+1]
   4645                    Button(txt,3,69,15,15); 
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0F20               MOVS     R0,#+15
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   0300               MOVS     R3,R0
   \   00000128   4522               MOVS     R2,#+69
   \   0000012A   0321               MOVS     R1,#+3
   \   0000012C   02A8               ADD      R0,SP,#+8
   \   0000012E   ........           BL       Button
   \   00000132   02B0               ADD      SP,SP,#+8
   4646                    txt[0]='>';
   \   00000134   2770               STRB     R7,[R4, #+0]
   4647                    Button(txt,45,69,15,15);   
   \   00000136   82B0               SUB      SP,SP,#+8
   \   00000138   0F20               MOVS     R0,#+15
   \   0000013A   0090               STR      R0,[SP, #+0]
   \   0000013C   0300               MOVS     R3,R0
   \   0000013E   4522               MOVS     R2,#+69
   \   00000140   2D21               MOVS     R1,#+45
   \   00000142   02A8               ADD      R0,SP,#+8
   \   00000144   ........           BL       Button
   \   00000148   02B0               ADD      SP,SP,#+8
   4648                    
   4649                    Label(Speech[g_leng].Syrena,2,5, 58 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   3000               MOVS     R0,R6
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   7F21               MOVS     R1,#+127
   \   00000152   0120               MOVS     R0,#+1
   \   00000154   03B4               PUSH     {R0,R1}
   \   00000156   3421               MOVS     R1,#+52
   \   00000158   0A20               MOVS     R0,#+10
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   3A23               MOVS     R3,#+58
   \   0000015E   0522               MOVS     R2,#+5
   \   00000160   0221               MOVS     R1,#+2
   \   00000162   02B5               PUSH     {R1,LR}
   \   00000164   9446               MOV      R12,R2
   \   00000166   4949               LDR      R1,??ScreenAlarmSet_Paint_0+0x14  ;; 0x7bc
   \   00000168   4548               LDR      R0,??ScreenAlarmSet_Paint_0+0x8  ;; g_leng
   \   0000016A   0068               LDR      R0,[R0, #+0]
   \   0000016C   454A               LDR      R2,??ScreenAlarmSet_Paint_0+0xC  ;; 0xa7d
   \   0000016E   5043               MULS     R0,R2,R0
   \   00000170   454A               LDR      R2,??ScreenAlarmSet_Paint_0+0x10  ;; Speech
   \   00000172   1018               ADDS     R0,R2,R0
   \   00000174   4018               ADDS     R0,R0,R1
   \   00000176   6246               MOV      R2,R12
   \   00000178   0099               LDR      R1,[SP, #0]
   \   0000017A   02B0               ADD      SP,SP,#+8
   \   0000017C   ........           BL       Label
   \   00000180   06B0               ADD      SP,SP,#+24
   4650                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   00000182   4920               MOVS     R0,#+73
   \   00000184   2070               STRB     R0,[R4, #+0]
   \   00000186   6420               MOVS     R0,#+100
   \   00000188   6070               STRB     R0,[R4, #+1]
   \   0000018A   3A20               MOVS     R0,#+58
   \   0000018C   A070               STRB     R0,[R4, #+2]
   \   0000018E   2020               MOVS     R0,#+32
   \   00000190   E070               STRB     R0,[R4, #+3]
   4651                    ind=CharToStr(Screen->Alarm.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000192   0222               MOVS     R2,#+2
   \   00000194   2100               MOVS     R1,R4
   \   00000196   C91C               ADDS     R1,R1,#+3
   \   00000198   8C20               MOVS     R0,#+140
   \   0000019A   029B               LDR      R3,[SP, #+8]
   \   0000019C   1856               LDRSB    R0,[R3, R0]
   \   0000019E   0006               LSLS     R0,R0,#+24
   \   000001A0   000E               LSRS     R0,R0,#+24
   \   000001A2   ........           BL       CharToStr
   \   000001A6   0200               MOVS     R2,R0
   4652                    Label(txt,2,20, 45 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001A8   82B0               SUB      SP,SP,#+8
   \   000001AA   3000               MOVS     R0,R6
   \   000001AC   0090               STR      R0,[SP, #+0]
   \   000001AE   7F21               MOVS     R1,#+127
   \   000001B0   0120               MOVS     R0,#+1
   \   000001B2   03B4               PUSH     {R0,R1}
   \   000001B4   1621               MOVS     R1,#+22
   \   000001B6   D21C               ADDS     R2,R2,#+3
   \   000001B8   1000               MOVS     R0,R2
   \   000001BA   0006               LSLS     R0,R0,#+24
   \   000001BC   000E               LSRS     R0,R0,#+24
   \   000001BE   03B4               PUSH     {R0,R1}
   \   000001C0   2D23               MOVS     R3,#+45
   \   000001C2   1422               MOVS     R2,#+20
   \   000001C4   0221               MOVS     R1,#+2
   \   000001C6   06A8               ADD      R0,SP,#+24
   \   000001C8   ........           BL       Label
   \   000001CC   06B0               ADD      SP,SP,#+24
   4653                  
   4654                    txt[0]='<';txt[1]=0;
   \   000001CE   2570               STRB     R5,[R4, #+0]
   \   000001D0   3000               MOVS     R0,R6
   \   000001D2   6070               STRB     R0,[R4, #+1]
   4655                    Button(txt,3,42,15,15); 
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   0F20               MOVS     R0,#+15
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   0300               MOVS     R3,R0
   \   000001DC   2A22               MOVS     R2,#+42
   \   000001DE   0321               MOVS     R1,#+3
   \   000001E0   02A8               ADD      R0,SP,#+8
   \   000001E2   ........           BL       Button
   \   000001E6   02B0               ADD      SP,SP,#+8
   4656                    txt[0]='>';
   \   000001E8   2770               STRB     R7,[R4, #+0]
   4657                    Button(txt,45,42,15,15); 
   \   000001EA   82B0               SUB      SP,SP,#+8
   \   000001EC   0F20               MOVS     R0,#+15
   \   000001EE   0090               STR      R0,[SP, #+0]
   \   000001F0   0300               MOVS     R3,R0
   \   000001F2   2A22               MOVS     R2,#+42
   \   000001F4   2D21               MOVS     R1,#+45
   \   000001F6   02A8               ADD      R0,SP,#+8
   \   000001F8   ........           BL       Button
   \   000001FC   02B0               ADD      SP,SP,#+8
   4658                    
   4659                    txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   000001FE   5020               MOVS     R0,#+80
   \   00000200   2070               STRB     R0,[R4, #+0]
   \   00000202   3A20               MOVS     R0,#+58
   \   00000204   6070               STRB     R0,[R4, #+1]
   \   00000206   2020               MOVS     R0,#+32
   \   00000208   A070               STRB     R0,[R4, #+2]
   4660                    ind=CharToStr(Screen->Alarm.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000020A   0222               MOVS     R2,#+2
   \   0000020C   2100               MOVS     R1,R4
   \   0000020E   891C               ADDS     R1,R1,#+2
   \   00000210   0298               LDR      R0,[SP, #+8]
   \   00000212   8C30               ADDS     R0,R0,#+140
   \   00000214   4078               LDRB     R0,[R0, #+1]
   \   00000216   ........           BL       CharToStr
   \   0000021A   0200               MOVS     R2,R0
   4661                   
   4662                    Label(txt,2,20, 29 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000021C   82B0               SUB      SP,SP,#+8
   \   0000021E   3000               MOVS     R0,R6
   \   00000220   0090               STR      R0,[SP, #+0]
   \   00000222   7F21               MOVS     R1,#+127
   \   00000224   0120               MOVS     R0,#+1
   \   00000226   03B4               PUSH     {R0,R1}
   \   00000228   1621               MOVS     R1,#+22
   \   0000022A   921C               ADDS     R2,R2,#+2
   \   0000022C   1000               MOVS     R0,R2
   \   0000022E   0006               LSLS     R0,R0,#+24
   \   00000230   000E               LSRS     R0,R0,#+24
   \   00000232   03B4               PUSH     {R0,R1}
   \   00000234   1D23               MOVS     R3,#+29
   \   00000236   1422               MOVS     R2,#+20
   \   00000238   0221               MOVS     R1,#+2
   \   0000023A   06A8               ADD      R0,SP,#+24
   \   0000023C   ........           BL       Label
   \   00000240   06B0               ADD      SP,SP,#+24
   4663                  
   4664                    txt[0]='<';txt[1]=0;
   \   00000242   2570               STRB     R5,[R4, #+0]
   \   00000244   6670               STRB     R6,[R4, #+1]
   4665                    Button(txt,3,26,15,15); 
   \   00000246   82B0               SUB      SP,SP,#+8
   \   00000248   0F20               MOVS     R0,#+15
   \   0000024A   0090               STR      R0,[SP, #+0]
   \   0000024C   0300               MOVS     R3,R0
   \   0000024E   1A22               MOVS     R2,#+26
   \   00000250   0321               MOVS     R1,#+3
   \   00000252   02A8               ADD      R0,SP,#+8
   \   00000254   ........           BL       Button
   \   00000258   02B0               ADD      SP,SP,#+8
   4666                    txt[0]='>';
   \   0000025A   2770               STRB     R7,[R4, #+0]
   4667                    Button(txt,45,26,15,15);       
   \   0000025C   82B0               SUB      SP,SP,#+8
   \   0000025E   0F20               MOVS     R0,#+15
   \   00000260   0090               STR      R0,[SP, #+0]
   \   00000262   0300               MOVS     R3,R0
   \   00000264   1A22               MOVS     R2,#+26
   \   00000266   2D21               MOVS     R1,#+45
   \   00000268   02A8               ADD      R0,SP,#+8
   \   0000026A   ........           BL       Button
   \   0000026E   02B0               ADD      SP,SP,#+8
   4668          }
   \   00000270   FEBC               POP      {R1-R7}
   \   00000272   01BC               POP      {R0}
   \   00000274   0047               BX       R0               ;; return
   \   00000276   C046               Nop      
   \                     ??ScreenAlarmSet_Paint_0:
   \   00000278   ........           DC32     `?<Constant "Alarm">`
   \   0000027C   F9060000           DC32     0x6f9
   \   00000280   ........           DC32     g_leng
   \   00000284   7D0A0000           DC32     0xa7d
   \   00000288   ........           DC32     Speech
   \   0000028C   BC070000           DC32     0x7bc
   4669          

   \                                 In section Debug.txt, align 4, keep-with-next
   4670          void ScreenAlarmSet_Event(_Screen* Screen)
   4671          {
   \                     ScreenAlarmSet_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4672             char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   2E00               MOVS     R6,R5
   \   00000008   8A4F               LDR      R7,??ScreenAlarmSet_Event_0  ;; Y_down
   \   0000000A   2900               MOVS     R1,R5
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   3B5E               LDRSH    R3,[R7, R0]
   \   00000016   8848               LDR      R0,??ScreenAlarmSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   8748               LDR      R0,??ScreenAlarmSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   8C46               MOV      R12,R1
   \   00000022   8748               LDR      R0,??ScreenAlarmSet_Event_0+0xC  ;; X_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   405E               LDRSH    R0,[R0, R1]
   \   00000028   6146               MOV      R1,R12
   4673                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   07D5               BPL      ??ScreenAlarmSet_Event_1
   4674                  {
   4675                    MenuLevel=(MenuLevel/10);
   \   00000034   834C               LDR      R4,??ScreenAlarmSet_Event_0+0x10  ;; TextToChangeLength
   \   00000036   206D               LDR      R0,[R4, #+80]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   2065               STR      R0,[R4, #+80]
   4676                    Repaint=1;
   \   00000040   0126               MOVS     R6,#+1
   \   00000042   F0E0               B        ??ScreenAlarmSet_Event_2
   4677                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ScreenAlarmSet_Event_1:
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   385E               LDRSH    R0,[R7, R0]
   \   00000048   7028               CMP      R0,#+112
   \   0000004A   05DB               BLT      ??ScreenAlarmSet_Event_3
   \   0000004C   7B48               LDR      R0,??ScreenAlarmSet_Event_0+0x8  ;; Y_up
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   405E               LDRSH    R0,[R0, R1]
   \   00000052   7028               CMP      R0,#+112
   \   00000054   00DB               BLT      .+4
   \   00000056   E6E0               B        ??ScreenAlarmSet_Event_2
   \                     ??ScreenAlarmSet_Event_3:
   \   00000058   6F46               MOV      R7,SP
   \   0000005A   3C20               MOVS     R0,#+60
   \   0000005C   3870               STRB     R0,[R7, #+0]
   4678                  { 
   4679                    
   4680                    char txt[5];         
   4681                    txt[0]='<';txt[1]=0;
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   7870               STRB     R0,[R7, #+1]
   4682                    if (Button(txt,3,85,15,15)==1) { if(Screen->Alarm.SensorNode>0) Screen->Alarm.SensorNode--; else Screen->Alarm.SensorNode=NumberNeurons-1; Repaint=1;}  
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0F20               MOVS     R0,#+15
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   0300               MOVS     R3,R0
   \   0000006A   5522               MOVS     R2,#+85
   \   0000006C   0321               MOVS     R1,#+3
   \   0000006E   02A8               ADD      R0,SP,#+8
   \   00000070   ........           BL       Button
   \   00000074   02B0               ADD      SP,SP,#+8
   \   00000076   0128               CMP      R0,#+1
   \   00000078   0DD1               BNE      ??ScreenAlarmSet_Event_4
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   8C30               ADDS     R0,R0,#+140
   \   0000007E   0221               MOVS     R1,#+2
   \   00000080   4156               LDRSB    R1,[R0, R1]
   \   00000082   0129               CMP      R1,#+1
   \   00000084   04DB               BLT      ??ScreenAlarmSet_Event_5
   \   00000086   0221               MOVS     R1,#+2
   \   00000088   4156               LDRSB    R1,[R0, R1]
   \   0000008A   491E               SUBS     R1,R1,#+1
   \   0000008C   8170               STRB     R1,[R0, #+2]
   \   0000008E   01E0               B        ??ScreenAlarmSet_Event_6
   \                     ??ScreenAlarmSet_Event_5:
   \   00000090   2221               MOVS     R1,#+34
   \   00000092   8170               STRB     R1,[R0, #+2]
   \                     ??ScreenAlarmSet_Event_6:
   \   00000094   0126               MOVS     R6,#+1
   \                     ??ScreenAlarmSet_Event_4:
   \   00000096   3E20               MOVS     R0,#+62
   \   00000098   3870               STRB     R0,[R7, #+0]
   4683                    txt[0]='>';
   4684                    if (Button(txt,45,85,15,15)==1) { if(Screen->Alarm.SensorNode+1<NumberNeurons) Screen->Alarm.SensorNode++; else Screen->Alarm.SensorNode=0; Repaint=1;} 
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0F20               MOVS     R0,#+15
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   0300               MOVS     R3,R0
   \   000000A2   5522               MOVS     R2,#+85
   \   000000A4   2D21               MOVS     R1,#+45
   \   000000A6   02A8               ADD      R0,SP,#+8
   \   000000A8   ........           BL       Button
   \   000000AC   02B0               ADD      SP,SP,#+8
   \   000000AE   0128               CMP      R0,#+1
   \   000000B0   0ED1               BNE      ??ScreenAlarmSet_Event_7
   \   000000B2   2000               MOVS     R0,R4
   \   000000B4   8C30               ADDS     R0,R0,#+140
   \   000000B6   0221               MOVS     R1,#+2
   \   000000B8   4156               LDRSB    R1,[R0, R1]
   \   000000BA   491C               ADDS     R1,R1,#+1
   \   000000BC   2329               CMP      R1,#+35
   \   000000BE   04DA               BGE      ??ScreenAlarmSet_Event_8
   \   000000C0   0221               MOVS     R1,#+2
   \   000000C2   4156               LDRSB    R1,[R0, R1]
   \   000000C4   491C               ADDS     R1,R1,#+1
   \   000000C6   8170               STRB     R1,[R0, #+2]
   \   000000C8   01E0               B        ??ScreenAlarmSet_Event_9
   \                     ??ScreenAlarmSet_Event_8:
   \   000000CA   2900               MOVS     R1,R5
   \   000000CC   8170               STRB     R1,[R0, #+2]
   \                     ??ScreenAlarmSet_Event_9:
   \   000000CE   0126               MOVS     R6,#+1
   4685                   
   4686                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_7:
   \   000000D0   3C20               MOVS     R0,#+60
   \   000000D2   3870               STRB     R0,[R7, #+0]
   \   000000D4   2800               MOVS     R0,R5
   \   000000D6   7870               STRB     R0,[R7, #+1]
   4687                    if (Button(txt,3,69,15,15)==1) { if(Screen->Alarm.SensorPort>0) Screen->Alarm.SensorPort--; else Screen->Alarm.SensorPort=NumberReg-1; Repaint=1;}  
   \   000000D8   82B0               SUB      SP,SP,#+8
   \   000000DA   0F20               MOVS     R0,#+15
   \   000000DC   0090               STR      R0,[SP, #+0]
   \   000000DE   0300               MOVS     R3,R0
   \   000000E0   4522               MOVS     R2,#+69
   \   000000E2   0321               MOVS     R1,#+3
   \   000000E4   02A8               ADD      R0,SP,#+8
   \   000000E6   ........           BL       Button
   \   000000EA   02B0               ADD      SP,SP,#+8
   \   000000EC   0128               CMP      R0,#+1
   \   000000EE   0AD1               BNE      ??ScreenAlarmSet_Event_10
   \   000000F0   2000               MOVS     R0,R4
   \   000000F2   8C30               ADDS     R0,R0,#+140
   \   000000F4   C178               LDRB     R1,[R0, #+3]
   \   000000F6   0029               CMP      R1,#+0
   \   000000F8   02D0               BEQ      ??ScreenAlarmSet_Event_11
   \   000000FA   491E               SUBS     R1,R1,#+1
   \   000000FC   C170               STRB     R1,[R0, #+3]
   \   000000FE   01E0               B        ??ScreenAlarmSet_Event_12
   \                     ??ScreenAlarmSet_Event_11:
   \   00000100   0A21               MOVS     R1,#+10
   \   00000102   C170               STRB     R1,[R0, #+3]
   \                     ??ScreenAlarmSet_Event_12:
   \   00000104   0126               MOVS     R6,#+1
   4688                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_10:
   \   00000106   3E20               MOVS     R0,#+62
   \   00000108   3870               STRB     R0,[R7, #+0]
   4689                    if (Button(txt,45,69,15,15)==1) { if(Screen->Alarm.SensorPort+1<NumberReg) Screen->Alarm.SensorPort++; else Screen->Alarm.SensorPort=0; Repaint=1;} 
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0F20               MOVS     R0,#+15
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   0300               MOVS     R3,R0
   \   00000112   4522               MOVS     R2,#+69
   \   00000114   2D21               MOVS     R1,#+45
   \   00000116   02A8               ADD      R0,SP,#+8
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   0128               CMP      R0,#+1
   \   00000120   0ED1               BNE      ??ScreenAlarmSet_Event_13
   \   00000122   2000               MOVS     R0,R4
   \   00000124   8C30               ADDS     R0,R0,#+140
   \   00000126   C178               LDRB     R1,[R0, #+3]
   \   00000128   491C               ADDS     R1,R1,#+1
   \   0000012A   0904               LSLS     R1,R1,#+16
   \   0000012C   090C               LSRS     R1,R1,#+16
   \   0000012E   0B29               CMP      R1,#+11
   \   00000130   03D2               BCS      ??ScreenAlarmSet_Event_14
   \   00000132   C178               LDRB     R1,[R0, #+3]
   \   00000134   491C               ADDS     R1,R1,#+1
   \   00000136   C170               STRB     R1,[R0, #+3]
   \   00000138   01E0               B        ??ScreenAlarmSet_Event_15
   \                     ??ScreenAlarmSet_Event_14:
   \   0000013A   2900               MOVS     R1,R5
   \   0000013C   C170               STRB     R1,[R0, #+3]
   \                     ??ScreenAlarmSet_Event_15:
   \   0000013E   0126               MOVS     R6,#+1
   4690                   
   4691                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_13:
   \   00000140   3C20               MOVS     R0,#+60
   \   00000142   3870               STRB     R0,[R7, #+0]
   \   00000144   2800               MOVS     R0,R5
   \   00000146   7870               STRB     R0,[R7, #+1]
   4692                    if (Button(txt,3,42,15,15)==1) { if(Screen->Alarm.ActorNode-1>0) Screen->Alarm.ActorNode--; else Screen->Alarm.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   0F20               MOVS     R0,#+15
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   0300               MOVS     R3,R0
   \   00000150   2A22               MOVS     R2,#+42
   \   00000152   0321               MOVS     R1,#+3
   \   00000154   02A8               ADD      R0,SP,#+8
   \   00000156   ........           BL       Button
   \   0000015A   02B0               ADD      SP,SP,#+8
   \   0000015C   0128               CMP      R0,#+1
   \   0000015E   0ED1               BNE      ??ScreenAlarmSet_Event_16
   \   00000160   2000               MOVS     R0,R4
   \   00000162   8C30               ADDS     R0,R0,#+140
   \   00000164   0021               MOVS     R1,#+0
   \   00000166   4156               LDRSB    R1,[R0, R1]
   \   00000168   491E               SUBS     R1,R1,#+1
   \   0000016A   0129               CMP      R1,#+1
   \   0000016C   04DB               BLT      ??ScreenAlarmSet_Event_17
   \   0000016E   0021               MOVS     R1,#+0
   \   00000170   4156               LDRSB    R1,[R0, R1]
   \   00000172   491E               SUBS     R1,R1,#+1
   \   00000174   0170               STRB     R1,[R0, #+0]
   \   00000176   01E0               B        ??ScreenAlarmSet_Event_18
   \                     ??ScreenAlarmSet_Event_17:
   \   00000178   2221               MOVS     R1,#+34
   \   0000017A   0170               STRB     R1,[R0, #+0]
   \                     ??ScreenAlarmSet_Event_18:
   \   0000017C   0126               MOVS     R6,#+1
   4693                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_16:
   \   0000017E   3E20               MOVS     R0,#+62
   \   00000180   3870               STRB     R0,[R7, #+0]
   4694                    if (Button(txt,45,42,15,15)==1) { if(Screen->Alarm.ActorNode+1<NumberNeurons) Screen->Alarm.ActorNode++; else Screen->Alarm.ActorNode=0; Repaint=1;} 
   \   00000182   82B0               SUB      SP,SP,#+8
   \   00000184   0F20               MOVS     R0,#+15
   \   00000186   0090               STR      R0,[SP, #+0]
   \   00000188   0300               MOVS     R3,R0
   \   0000018A   2A22               MOVS     R2,#+42
   \   0000018C   2D21               MOVS     R1,#+45
   \   0000018E   02A8               ADD      R0,SP,#+8
   \   00000190   ........           BL       Button
   \   00000194   02B0               ADD      SP,SP,#+8
   \   00000196   0128               CMP      R0,#+1
   \   00000198   0ED1               BNE      ??ScreenAlarmSet_Event_19
   \   0000019A   2000               MOVS     R0,R4
   \   0000019C   8C30               ADDS     R0,R0,#+140
   \   0000019E   0021               MOVS     R1,#+0
   \   000001A0   4156               LDRSB    R1,[R0, R1]
   \   000001A2   491C               ADDS     R1,R1,#+1
   \   000001A4   2329               CMP      R1,#+35
   \   000001A6   04DA               BGE      ??ScreenAlarmSet_Event_20
   \   000001A8   0021               MOVS     R1,#+0
   \   000001AA   4156               LDRSB    R1,[R0, R1]
   \   000001AC   491C               ADDS     R1,R1,#+1
   \   000001AE   0170               STRB     R1,[R0, #+0]
   \   000001B0   01E0               B        ??ScreenAlarmSet_Event_21
   \                     ??ScreenAlarmSet_Event_20:
   \   000001B2   2900               MOVS     R1,R5
   \   000001B4   0170               STRB     R1,[R0, #+0]
   \                     ??ScreenAlarmSet_Event_21:
   \   000001B6   0126               MOVS     R6,#+1
   4695                   
   4696                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_19:
   \   000001B8   3C20               MOVS     R0,#+60
   \   000001BA   3870               STRB     R0,[R7, #+0]
   \   000001BC   2800               MOVS     R0,R5
   \   000001BE   7870               STRB     R0,[R7, #+1]
   4697                    if (Button(txt,3,26,15,15)==1) { if(Screen->Alarm.ActorPort>0) Screen->Alarm.ActorPort--; else Screen->Alarm.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   0F20               MOVS     R0,#+15
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   0300               MOVS     R3,R0
   \   000001C8   1A22               MOVS     R2,#+26
   \   000001CA   0321               MOVS     R1,#+3
   \   000001CC   02A8               ADD      R0,SP,#+8
   \   000001CE   ........           BL       Button
   \   000001D2   02B0               ADD      SP,SP,#+8
   \   000001D4   0128               CMP      R0,#+1
   \   000001D6   0AD1               BNE      ??ScreenAlarmSet_Event_22
   \   000001D8   2000               MOVS     R0,R4
   \   000001DA   8C30               ADDS     R0,R0,#+140
   \   000001DC   4178               LDRB     R1,[R0, #+1]
   \   000001DE   0029               CMP      R1,#+0
   \   000001E0   02D0               BEQ      ??ScreenAlarmSet_Event_23
   \   000001E2   491E               SUBS     R1,R1,#+1
   \   000001E4   4170               STRB     R1,[R0, #+1]
   \   000001E6   01E0               B        ??ScreenAlarmSet_Event_24
   \                     ??ScreenAlarmSet_Event_23:
   \   000001E8   0F21               MOVS     R1,#+15
   \   000001EA   4170               STRB     R1,[R0, #+1]
   \                     ??ScreenAlarmSet_Event_24:
   \   000001EC   0126               MOVS     R6,#+1
   4698                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_22:
   \   000001EE   3E20               MOVS     R0,#+62
   \   000001F0   3870               STRB     R0,[R7, #+0]
   4699                    if (Button(txt,45,26,15,15)==1) { if(Screen->Alarm.ActorPort+1<NumberNeuronsPort) Screen->Alarm.ActorPort++; else Screen->Alarm.ActorPort=0; Repaint=1;} 
   \   000001F2   82B0               SUB      SP,SP,#+8
   \   000001F4   0F20               MOVS     R0,#+15
   \   000001F6   0090               STR      R0,[SP, #+0]
   \   000001F8   0300               MOVS     R3,R0
   \   000001FA   1A22               MOVS     R2,#+26
   \   000001FC   2D21               MOVS     R1,#+45
   \   000001FE   02A8               ADD      R0,SP,#+8
   \   00000200   ........           BL       Button
   \   00000204   02B0               ADD      SP,SP,#+8
   \   00000206   0128               CMP      R0,#+1
   \   00000208   0DD1               BNE      ??ScreenAlarmSet_Event_2
   \   0000020A   8C34               ADDS     R4,R4,#+140
   \   0000020C   2000               MOVS     R0,R4
   \   0000020E   4178               LDRB     R1,[R0, #+1]
   \   00000210   491C               ADDS     R1,R1,#+1
   \   00000212   0904               LSLS     R1,R1,#+16
   \   00000214   090C               LSRS     R1,R1,#+16
   \   00000216   1029               CMP      R1,#+16
   \   00000218   03D2               BCS      ??ScreenAlarmSet_Event_25
   \   0000021A   4178               LDRB     R1,[R0, #+1]
   \   0000021C   491C               ADDS     R1,R1,#+1
   \   0000021E   4170               STRB     R1,[R0, #+1]
   \   00000220   00E0               B        ??ScreenAlarmSet_Event_26
   \                     ??ScreenAlarmSet_Event_25:
   \   00000222   4570               STRB     R5,[R0, #+1]
   \                     ??ScreenAlarmSet_Event_26:
   \   00000224   0126               MOVS     R6,#+1
   4700          
   4701                  }
   4702                  if (Repaint) MenuPaint();
   \                     ??ScreenAlarmSet_Event_2:
   \   00000226   002E               CMP      R6,#+0
   \   00000228   01D0               BEQ      ??ScreenAlarmSet_Event_27
   \   0000022A   ........           BL       MenuPaint
   4703          }
   \                     ??ScreenAlarmSet_Event_27:
   \   0000022E   FEBC               POP      {R1-R7}
   \   00000230   01BC               POP      {R0}
   \   00000232   0047               BX       R0               ;; return
   \                     ??ScreenAlarmSet_Event_0:
   \   00000234   ........           DC32     Y_down
   \   00000238   ........           DC32     X_down
   \   0000023C   ........           DC32     Y_up
   \   00000240   ........           DC32     X_up
   \   00000244   ........           DC32     TextToChangeLength
   4704          
   4705          
   4706          
   4707          
   4708          
   4709          

   \                                 In section Debug.txt, align 4, keep-with-next
   4710          void ZoneButon(char _Label[15], char poz_X , char poz_Y ,char width, char height, char *Vstring)
   4711          {
   \                     ZoneButon:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1500               MOVS     R5,R2
   \   00000006   1E00               MOVS     R6,R3
   \   00000008   6846               MOV      R0,SP
   \   0000000A   077E               LDRB     R7,[R0, #+24]
   4712           if (height>12)
   \   0000000C   0D2F               CMP      R7,#+13
   \   0000000E   30D3               BCC      ??ZoneButon_0
   4713           {
   4714            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000010   0221               MOVS     R1,#+2
   \   00000012   3800               MOVS     R0,R7
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   2100               MOVS     R1,R4
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   ........           BL       Zone
   \   0000001E   02B0               ADD      SP,SP,#+8
   4715            Label(Vstring,0,poz_X+2,poz_Y+height-10,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000020   A41C               ADDS     R4,R4,#+2
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0A21               MOVS     R1,#+10
   \   00000030   0320               MOVS     R0,#+3
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   EB19               ADDS     R3,R5,R7
   \   00000036   0A3B               SUBS     R3,R3,#+10
   \   00000038   2200               MOVS     R2,R4
   \   0000003A   1206               LSLS     R2,R2,#+24
   \   0000003C   120E               LSRS     R2,R2,#+24
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   0D98               LDR      R0,[SP, #+52]
   \   00000042   ........           BL       Label
   \   00000046   06B0               ADD      SP,SP,#+24
   4716            Zone(_Label,poz_X+2,poz_Y+2,width-4,height-12,1); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with 
   \   00000048   0121               MOVS     R1,#+1
   \   0000004A   0C3F               SUBS     R7,R7,#+12
   \   0000004C   3800               MOVS     R0,R7
   \   0000004E   0006               LSLS     R0,R0,#+24
   \   00000050   000E               LSRS     R0,R0,#+24
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   331F               SUBS     R3,R6,#+4
   \   00000056   1B06               LSLS     R3,R3,#+24
   \   00000058   1B0E               LSRS     R3,R3,#+24
   \   0000005A   AD1C               ADDS     R5,R5,#+2
   \   0000005C   2A00               MOVS     R2,R5
   \   0000005E   1206               LSLS     R2,R2,#+24
   \   00000060   120E               LSRS     R2,R2,#+24
   \   00000062   2100               MOVS     R1,R4
   \   00000064   0906               LSLS     R1,R1,#+24
   \   00000066   090E               LSRS     R1,R1,#+24
   \   00000068   0298               LDR      R0,[SP, #+8]
   \   0000006A   ........           BL       Zone
   \   0000006E   02B0               ADD      SP,SP,#+8
   \   00000070   30E0               B        ??ZoneButon_1
   4717           }else{
   4718            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with, LineType- typ lini 0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana
   \                     ??ZoneButon_0:
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   3800               MOVS     R0,R7
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   2100               MOVS     R1,R4
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   ........           BL       Zone
   \   00000080   02B0               ADD      SP,SP,#+8
   4719            
   4720            Label(Vstring,0,poz_X+2,poz_Y+1,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000082   82B0               SUB      SP,SP,#+8
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   0090               STR      R0,[SP, #+0]
   \   00000088   7F21               MOVS     R1,#+127
   \   0000008A   0120               MOVS     R0,#+1
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   0A21               MOVS     R1,#+10
   \   00000090   0320               MOVS     R0,#+3
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   2B00               MOVS     R3,R5
   \   00000096   5B1C               ADDS     R3,R3,#+1
   \   00000098   2200               MOVS     R2,R4
   \   0000009A   921C               ADDS     R2,R2,#+2
   \   0000009C   1206               LSLS     R2,R2,#+24
   \   0000009E   120E               LSRS     R2,R2,#+24
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   0D98               LDR      R0,[SP, #+52]
   \   000000A4   ........           BL       Label
   \   000000A8   06B0               ADD      SP,SP,#+24
   4721            Zone(_Label,poz_X+17,poz_Y+2,width-19,height-4,1); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with 
   \   000000AA   0121               MOVS     R1,#+1
   \   000000AC   381F               SUBS     R0,R7,#+4
   \   000000AE   0006               LSLS     R0,R0,#+24
   \   000000B0   000E               LSRS     R0,R0,#+24
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   133E               SUBS     R6,R6,#+19
   \   000000B6   3300               MOVS     R3,R6
   \   000000B8   1B06               LSLS     R3,R3,#+24
   \   000000BA   1B0E               LSRS     R3,R3,#+24
   \   000000BC   AD1C               ADDS     R5,R5,#+2
   \   000000BE   2A00               MOVS     R2,R5
   \   000000C0   1206               LSLS     R2,R2,#+24
   \   000000C2   120E               LSRS     R2,R2,#+24
   \   000000C4   1134               ADDS     R4,R4,#+17
   \   000000C6   2100               MOVS     R1,R4
   \   000000C8   0906               LSLS     R1,R1,#+24
   \   000000CA   090E               LSRS     R1,R1,#+24
   \   000000CC   0298               LDR      R0,[SP, #+8]
   \   000000CE   ........           BL       Zone
   \   000000D2   02B0               ADD      SP,SP,#+8
   4722             
   4723           }
   4724          }
   \                     ??ZoneButon_1:
   \   000000D4   F8BC               POP      {R3-R7}
   \   000000D6   01BC               POP      {R0}
   \   000000D8   0047               BX       R0               ;; return
   4725          

   \                                 In section Debug.txt, align 4, keep-with-next
   4726          void ZoneGraph(char _Label[15], char poz_X , char poz_Y ,char width, char height, char *Vstring, _Graph *Graph)
   4727          {
   \                     ZoneGraph:
   \   00000000   FBB5               PUSH     {R0,R1,R3-R7,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1500               MOVS     R5,R2
   \   00000006   0A9E               LDR      R6,[SP, #+40]
   4728             if ((Graph->Type>GraphNone) && (Graph->Type<=GraphTermometr))
   \   00000008   3078               LDRB     R0,[R6, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   11D0               BEQ      ??ZoneGraph_0
   \   0000000E   0828               CMP      R0,#+8
   \   00000010   0FD2               BCS      ??ZoneGraph_0
   4729             {
   4730               CopyToCanvasPoint((char*) GraphTab[Graph->Type], poz_X, poz_Y+3, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   1220               MOVS     R0,#+18
   \   00000016   0090               STR      R0,[SP, #+0]
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   D21C               ADDS     R2,R2,#+3
   \   0000001C   1206               LSLS     R2,R2,#+24
   \   0000001E   120E               LSRS     R2,R2,#+24
   \   00000020   3078               LDRB     R0,[R6, #+0]
   \   00000022   3627               MOVS     R7,#+54
   \   00000024   7843               MULS     R0,R7,R0
   \   00000026   874F               LDR      R7,??ZoneGraph_1  ;; `?<Constant {0, 0}>`
   \   00000028   3818               ADDS     R0,R7,R0
   \   0000002A   8C30               ADDS     R0,R0,#+140
   \   0000002C   ........           BL       CopyToCanvasPoint
   \   00000030   02B0               ADD      SP,SP,#+8
   4731             
   4732             }   
   4733          
   4734             if ((Graph->Type==GraphOnOff) && (Graph->PlusOnOff==0))
   \                     ??ZoneGraph_0:
   \   00000032   3078               LDRB     R0,[R6, #+0]
   \   00000034   0B28               CMP      R0,#+11
   \   00000036   3DD1               BNE      ??ZoneGraph_2
   \   00000038   B079               LDRB     R0,[R6, #+6]
   \   0000003A   C007               LSLS     R0,R0,#+31
   \   0000003C   3AD4               BMI      ??ZoneGraph_2
   4735             {
   4736               Label(Speech[g_leng].Wl,2,poz_X,poz_Y+(height/2)+2,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003E   08A8               ADD      R0,SP,#+32
   \   00000040   0078               LDRB     R0,[R0, #+0]
   \   00000042   4008               LSRS     R0,R0,#+1
   \   00000044   2F18               ADDS     R7,R5,R0
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   7F21               MOVS     R1,#+127
   \   0000004E   0120               MOVS     R0,#+1
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   04A8               ADD      R0,SP,#+16
   \   00000054   017A               LDRB     R1,[R0, #+8]
   \   00000056   0320               MOVS     R0,#+3
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   3B00               MOVS     R3,R7
   \   0000005C   9B1C               ADDS     R3,R3,#+2
   \   0000005E   0221               MOVS     R1,#+2
   \   00000060   8C46               MOV      R12,R1
   \   00000062   7949               LDR      R1,??ZoneGraph_1+0x4  ;; 0x627
   \   00000064   7948               LDR      R0,??ZoneGraph_1+0x8  ;; g_leng
   \   00000066   0068               LDR      R0,[R0, #+0]
   \   00000068   794A               LDR      R2,??ZoneGraph_1+0xC  ;; 0xa7d
   \   0000006A   5043               MULS     R0,R2,R0
   \   0000006C   794A               LDR      R2,??ZoneGraph_1+0x10  ;; Speech
   \   0000006E   1018               ADDS     R0,R2,R0
   \   00000070   4018               ADDS     R0,R0,R1
   \   00000072   2200               MOVS     R2,R4
   \   00000074   6146               MOV      R1,R12
   \   00000076   ........           BL       Label
   \   0000007A   06B0               ADD      SP,SP,#+24
   4737               Label(Speech[g_leng].Wyl,2,poz_X,poz_Y+(height/2)-6,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000007C   82B0               SUB      SP,SP,#+8
   \   0000007E   0020               MOVS     R0,#+0
   \   00000080   0090               STR      R0,[SP, #+0]
   \   00000082   7F21               MOVS     R1,#+127
   \   00000084   0120               MOVS     R0,#+1
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   04A8               ADD      R0,SP,#+16
   \   0000008A   017A               LDRB     R1,[R0, #+8]
   \   0000008C   0320               MOVS     R0,#+3
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   BF1F               SUBS     R7,R7,#+6
   \   00000092   3B00               MOVS     R3,R7
   \   00000094   2200               MOVS     R2,R4
   \   00000096   0221               MOVS     R1,#+2
   \   00000098   8C46               MOV      R12,R1
   \   0000009A   C321               MOVS     R1,#+195
   \   0000009C   C900               LSLS     R1,R1,#+3        ;; #+1560
   \   0000009E   6B48               LDR      R0,??ZoneGraph_1+0x8  ;; g_leng
   \   000000A0   0068               LDR      R0,[R0, #+0]
   \   000000A2   6B4F               LDR      R7,??ZoneGraph_1+0xC  ;; 0xa7d
   \   000000A4   7843               MULS     R0,R7,R0
   \   000000A6   6B4F               LDR      R7,??ZoneGraph_1+0x10  ;; Speech
   \   000000A8   3818               ADDS     R0,R7,R0
   \   000000AA   4018               ADDS     R0,R0,R1
   \   000000AC   6146               MOV      R1,R12
   \   000000AE   ........           BL       Label
   \   000000B2   06B0               ADD      SP,SP,#+24
   4738          
   4739             }   
   4740             
   4741             if (Graph->Type==GraphScena)
   \                     ??ZoneGraph_2:
   \   000000B4   3078               LDRB     R0,[R6, #+0]
   \   000000B6   0928               CMP      R0,#+9
   \   000000B8   22D1               BNE      ??ZoneGraph_3
   4742             {
   4743               Label("Scn ",2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000BA   08A8               ADD      R0,SP,#+32
   \   000000BC   0078               LDRB     R0,[R0, #+0]
   \   000000BE   4008               LSRS     R0,R0,#+1
   \   000000C0   2F18               ADDS     R7,R5,R0
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   7F21               MOVS     R1,#+127
   \   000000CA   0120               MOVS     R0,#+1
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   04A8               ADD      R0,SP,#+16
   \   000000D0   017A               LDRB     R1,[R0, #+8]
   \   000000D2   0320               MOVS     R0,#+3
   \   000000D4   03B4               PUSH     {R0,R1}
   \   000000D6   FB1E               SUBS     R3,R7,#+3
   \   000000D8   2200               MOVS     R2,R4
   \   000000DA   0221               MOVS     R1,#+2
   \   000000DC   5E48               LDR      R0,??ZoneGraph_1+0x14  ;; `?<Constant {0, 0}>` + 76
   \   000000DE   ........           BL       Label
   \   000000E2   06B0               ADD      SP,SP,#+24
   4744               H_line(poz_X+3,poz_Y+(height/2)-5,width-6,1); 
   \   000000E4   0123               MOVS     R3,#+1
   \   000000E6   6846               MOV      R0,SP
   \   000000E8   007A               LDRB     R0,[R0, #+8]
   \   000000EA   821F               SUBS     R2,R0,#+6
   \   000000EC   1206               LSLS     R2,R2,#+24
   \   000000EE   120E               LSRS     R2,R2,#+24
   \   000000F0   7F1F               SUBS     R7,R7,#+5
   \   000000F2   3900               MOVS     R1,R7
   \   000000F4   2000               MOVS     R0,R4
   \   000000F6   C01C               ADDS     R0,R0,#+3
   \   000000F8   0006               LSLS     R0,R0,#+24
   \   000000FA   000E               LSRS     R0,R0,#+24
   \   000000FC   ........           BL       H_line
   4745             }
   4746             
   4747             if ((Graph->Type==GraphText) && (Graph->PlusOnOff==0))
   \                     ??ZoneGraph_3:
   \   00000100   3078               LDRB     R0,[R6, #+0]
   \   00000102   0828               CMP      R0,#+8
   \   00000104   18D1               BNE      ??ZoneGraph_4
   \   00000106   B079               LDRB     R0,[R6, #+6]
   \   00000108   C007               LSLS     R0,R0,#+31
   \   0000010A   15D4               BMI      ??ZoneGraph_4
   4748             {
   4749               Label(Graph->Text,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   0020               MOVS     R0,#+0
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   7F21               MOVS     R1,#+127
   \   00000114   0120               MOVS     R0,#+1
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   04A8               ADD      R0,SP,#+16
   \   0000011A   017A               LDRB     R1,[R0, #+8]
   \   0000011C   0320               MOVS     R0,#+3
   \   0000011E   03B4               PUSH     {R0,R1}
   \   00000120   0EA8               ADD      R0,SP,#+56
   \   00000122   0078               LDRB     R0,[R0, #+0]
   \   00000124   4008               LSRS     R0,R0,#+1
   \   00000126   2B18               ADDS     R3,R5,R0
   \   00000128   DB1E               SUBS     R3,R3,#+3
   \   0000012A   2200               MOVS     R2,R4
   \   0000012C   0221               MOVS     R1,#+2
   \   0000012E   3000               MOVS     R0,R6
   \   00000130   401C               ADDS     R0,R0,#+1
   \   00000132   ........           BL       Label
   \   00000136   06B0               ADD      SP,SP,#+24
   4750             }   
   4751             
   4752             if ((Graph->PlusOnOff) && (((Graph->Type==GraphOnOff))||(Graph->Type==GraphText)))
   \                     ??ZoneGraph_4:
   \   00000138   B079               LDRB     R0,[R6, #+6]
   \   0000013A   C007               LSLS     R0,R0,#+31
   \   0000013C   36D5               BPL      ??ZoneGraph_5
   \   0000013E   3078               LDRB     R0,[R6, #+0]
   \   00000140   0B28               CMP      R0,#+11
   \   00000142   01D0               BEQ      ??ZoneGraph_6
   \   00000144   0828               CMP      R0,#+8
   \   00000146   31D1               BNE      ??ZoneGraph_5
   4753             {
   4754                Label(Graph->Text,2,poz_X,poz_Y+(height/2)+1,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ZoneGraph_6:
   \   00000148   08A8               ADD      R0,SP,#+32
   \   0000014A   0078               LDRB     R0,[R0, #+0]
   \   0000014C   4008               LSRS     R0,R0,#+1
   \   0000014E   2F18               ADDS     R7,R5,R0
   \   00000150   82B0               SUB      SP,SP,#+8
   \   00000152   0020               MOVS     R0,#+0
   \   00000154   0090               STR      R0,[SP, #+0]
   \   00000156   7F21               MOVS     R1,#+127
   \   00000158   0120               MOVS     R0,#+1
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   04A8               ADD      R0,SP,#+16
   \   0000015E   017A               LDRB     R1,[R0, #+8]
   \   00000160   0320               MOVS     R0,#+3
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   3B00               MOVS     R3,R7
   \   00000166   5B1C               ADDS     R3,R3,#+1
   \   00000168   2200               MOVS     R2,R4
   \   0000016A   0221               MOVS     R1,#+2
   \   0000016C   3000               MOVS     R0,R6
   \   0000016E   401C               ADDS     R0,R0,#+1
   \   00000170   ........           BL       Label
   \   00000174   06B0               ADD      SP,SP,#+24
   4755                Label(Speech[g_leng].Wl,2,poz_X,poz_Y+(height/2)-7,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000176   82B0               SUB      SP,SP,#+8
   \   00000178   0020               MOVS     R0,#+0
   \   0000017A   0090               STR      R0,[SP, #+0]
   \   0000017C   7F21               MOVS     R1,#+127
   \   0000017E   0120               MOVS     R0,#+1
   \   00000180   03B4               PUSH     {R0,R1}
   \   00000182   04A8               ADD      R0,SP,#+16
   \   00000184   017A               LDRB     R1,[R0, #+8]
   \   00000186   0320               MOVS     R0,#+3
   \   00000188   03B4               PUSH     {R0,R1}
   \   0000018A   FF1F               SUBS     R7,R7,#+7
   \   0000018C   3B00               MOVS     R3,R7
   \   0000018E   2200               MOVS     R2,R4
   \   00000190   0221               MOVS     R1,#+2
   \   00000192   8C46               MOV      R12,R1
   \   00000194   2C49               LDR      R1,??ZoneGraph_1+0x4  ;; 0x627
   \   00000196   2D48               LDR      R0,??ZoneGraph_1+0x8  ;; g_leng
   \   00000198   0068               LDR      R0,[R0, #+0]
   \   0000019A   2D4F               LDR      R7,??ZoneGraph_1+0xC  ;; 0xa7d
   \   0000019C   7843               MULS     R0,R7,R0
   \   0000019E   2D4F               LDR      R7,??ZoneGraph_1+0x10  ;; Speech
   \   000001A0   3818               ADDS     R0,R7,R0
   \   000001A2   4018               ADDS     R0,R0,R1
   \   000001A4   6146               MOV      R1,R12
   \   000001A6   ........           BL       Label
   \   000001AA   06B0               ADD      SP,SP,#+24
   4756             }
   4757             
   4758             
   4759             if (Graph->Type==GraphWartosc)
   \                     ??ZoneGraph_5:
   \   000001AC   3078               LDRB     R0,[R6, #+0]
   \   000001AE   0A28               CMP      R0,#+10
   \   000001B0   1FD1               BNE      ??ZoneGraph_7
   4760              {
   4761                char txt[5];
   4762                txt[0]='A';txt[1]='n';txt[2]='a'; txt[3]=0; 
   \   000001B2   6846               MOV      R0,SP
   \   000001B4   4121               MOVS     R1,#+65
   \   000001B6   0170               STRB     R1,[R0, #+0]
   \   000001B8   6E21               MOVS     R1,#+110
   \   000001BA   4170               STRB     R1,[R0, #+1]
   \   000001BC   6121               MOVS     R1,#+97
   \   000001BE   8170               STRB     R1,[R0, #+2]
   \   000001C0   0021               MOVS     R1,#+0
   \   000001C2   C170               STRB     R1,[R0, #+3]
   4763                Label(txt,2,poz_X-1,poz_Y+(height/2)-4,3,width,1,127,0); 
   \   000001C4   82B0               SUB      SP,SP,#+8
   \   000001C6   0800               MOVS     R0,R1
   \   000001C8   0090               STR      R0,[SP, #+0]
   \   000001CA   7F21               MOVS     R1,#+127
   \   000001CC   0120               MOVS     R0,#+1
   \   000001CE   03B4               PUSH     {R0,R1}
   \   000001D0   04A8               ADD      R0,SP,#+16
   \   000001D2   017A               LDRB     R1,[R0, #+8]
   \   000001D4   0320               MOVS     R0,#+3
   \   000001D6   03B4               PUSH     {R0,R1}
   \   000001D8   0EA8               ADD      R0,SP,#+56
   \   000001DA   0078               LDRB     R0,[R0, #+0]
   \   000001DC   4008               LSRS     R0,R0,#+1
   \   000001DE   2B18               ADDS     R3,R5,R0
   \   000001E0   1B1F               SUBS     R3,R3,#+4
   \   000001E2   621E               SUBS     R2,R4,#+1
   \   000001E4   1206               LSLS     R2,R2,#+24
   \   000001E6   120E               LSRS     R2,R2,#+24
   \   000001E8   0221               MOVS     R1,#+2
   \   000001EA   06A8               ADD      R0,SP,#+24
   \   000001EC   ........           BL       Label
   \   000001F0   06B0               ADD      SP,SP,#+24
   4764              }
   4765             
   4766            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \                     ??ZoneGraph_7:
   \   000001F2   0221               MOVS     R1,#+2
   \   000001F4   08A8               ADD      R0,SP,#+32
   \   000001F6   0078               LDRB     R0,[R0, #+0]
   \   000001F8   03B4               PUSH     {R0,R1}
   \   000001FA   02A8               ADD      R0,SP,#+8
   \   000001FC   037A               LDRB     R3,[R0, #+8]
   \   000001FE   2A00               MOVS     R2,R5
   \   00000200   2100               MOVS     R1,R4
   \   00000202   0020               MOVS     R0,#+0
   \   00000204   ........           BL       Zone
   \   00000208   02B0               ADD      SP,SP,#+8
   4767            if (Vstring!=0) Label(Vstring,0,poz_X+2,poz_Y+height-10,11,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000020A   0998               LDR      R0,[SP, #+36]
   \   0000020C   0028               CMP      R0,#+0
   \   0000020E   15D0               BEQ      ??ZoneGraph_8
   \   00000210   82B0               SUB      SP,SP,#+8
   \   00000212   0020               MOVS     R0,#+0
   \   00000214   0090               STR      R0,[SP, #+0]
   \   00000216   7F21               MOVS     R1,#+127
   \   00000218   0120               MOVS     R0,#+1
   \   0000021A   03B4               PUSH     {R0,R1}
   \   0000021C   0A21               MOVS     R1,#+10
   \   0000021E   0B20               MOVS     R0,#+11
   \   00000220   03B4               PUSH     {R0,R1}
   \   00000222   0EA8               ADD      R0,SP,#+56
   \   00000224   0078               LDRB     R0,[R0, #+0]
   \   00000226   2B18               ADDS     R3,R5,R0
   \   00000228   0A3B               SUBS     R3,R3,#+10
   \   0000022A   A41C               ADDS     R4,R4,#+2
   \   0000022C   2200               MOVS     R2,R4
   \   0000022E   1206               LSLS     R2,R2,#+24
   \   00000230   120E               LSRS     R2,R2,#+24
   \   00000232   0021               MOVS     R1,#+0
   \   00000234   0F98               LDR      R0,[SP, #+60]
   \   00000236   ........           BL       Label
   \   0000023A   06B0               ADD      SP,SP,#+24
   4768           
   4769          }
   \                     ??ZoneGraph_8:
   \   0000023C   FEBC               POP      {R1-R7}
   \   0000023E   01BC               POP      {R0}
   \   00000240   0047               BX       R0               ;; return
   \   00000242   C046               Nop      
   \                     ??ZoneGraph_1:
   \   00000244   ........           DC32     `?<Constant {0, 0}>`
   \   00000248   27060000           DC32     0x627
   \   0000024C   ........           DC32     g_leng
   \   00000250   7D0A0000           DC32     0xa7d
   \   00000254   ........           DC32     Speech
   \   00000258   ........           DC32     `?<Constant {0, 0}>` + 76
   4770          

   \                                 In section Debug.txt, align 4, keep-with-next
   4771          void ScreenGraph(char poz_X , char poz_Y ,char width, char height, _Graph *Graph)
   4772          {
   \                     ScreenGraph:
   \   00000000   F5B5               PUSH     {R0,R2,R4-R7,LR}
   \   00000002   83B0               SUB      SP,SP,#+12
   \   00000004   0C00               MOVS     R4,R1
   \   00000006   1D00               MOVS     R5,R3
   \   00000008   0A9E               LDR      R6,[SP, #+40]
   4773             char Val;
   4774            
   4775             if ((Graph->Type>GraphNone) && (Graph->Type<=GraphTermometr))
   \   0000000A   3078               LDRB     R0,[R6, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   14D0               BEQ      ??ScreenGraph_0
   \   00000010   0828               CMP      R0,#+8
   \   00000012   12D2               BCS      ??ScreenGraph_0
   4776             {
   4777               CopyToCanvasPoint((char*) GraphTab[Graph->Type], poz_X, poz_Y+3, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000014   82B0               SUB      SP,SP,#+8
   \   00000016   1220               MOVS     R0,#+18
   \   00000018   0090               STR      R0,[SP, #+0]
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   2200               MOVS     R2,R4
   \   0000001E   D21C               ADDS     R2,R2,#+3
   \   00000020   1206               LSLS     R2,R2,#+24
   \   00000022   120E               LSRS     R2,R2,#+24
   \   00000024   02A8               ADD      R0,SP,#+8
   \   00000026   017B               LDRB     R1,[R0, #+12]
   \   00000028   3078               LDRB     R0,[R6, #+0]
   \   0000002A   3627               MOVS     R7,#+54
   \   0000002C   7843               MULS     R0,R7,R0
   \   0000002E   D64F               LDR      R7,??ScreenGraph_1  ;; `?<Constant {0, 0}>`
   \   00000030   3818               ADDS     R0,R7,R0
   \   00000032   8C30               ADDS     R0,R0,#+140
   \   00000034   ........           BL       CopyToCanvasPoint
   \   00000038   02B0               ADD      SP,SP,#+8
   4778             
   4779             }   
   4780          
   4781             if ((Graph->Type==GraphOnOff) && (Graph->PlusOnOff==0))
   \                     ??ScreenGraph_0:
   \   0000003A   3078               LDRB     R0,[R6, #+0]
   \   0000003C   0B28               CMP      R0,#+11
   \   0000003E   5CD1               BNE      ??ScreenGraph_2
   \   00000040   B079               LDRB     R0,[R6, #+6]
   \   00000042   C007               LSLS     R0,R0,#+31
   \   00000044   59D4               BMI      ??ScreenGraph_2
   4782             {
   4783                 if ((Graph->Nr>=0) && (Graph->Nr!=0xFF))    //je¿eli wêze³
                                      ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \   00000046   3079               LDRB     R0,[R6, #+4]
   \   00000048   FF28               CMP      R0,#+255
   \   0000004A   0BD0               BEQ      ??ScreenGraph_3
   4784                 {
   4785                    Val=PortStageRead(MainStage.StageI[Graph->Nr].Port, Graph->Port);
   \   0000004C   7179               LDRB     R1,[R6, #+5]
   \   0000004E   1622               MOVS     R2,#+22
   \   00000050   5043               MULS     R0,R2,R0
   \   00000052   CE4A               LDR      R2,??ScreenGraph_1+0x4  ;; MainStage
   \   00000054   1018               ADDS     R0,R2,R0
   \   00000056   A030               ADDS     R0,R0,#+160
   \   00000058   0088               LDRH     R0,[R0, #+0]
   \   0000005A   0004               LSLS     R0,R0,#+16
   \   0000005C   0014               ASRS     R0,R0,#+16
   \   0000005E   ........           BL       PortStageRead
   \   00000062   0BE0               B        ??ScreenGraph_4
   4786                 }else{
   4787                    Val=(Variables[Graph->Port/8]>>(Graph->Port%8)) & 0x1;
   \                     ??ScreenGraph_3:
   \   00000064   7079               LDRB     R0,[R6, #+5]
   \   00000066   C010               ASRS     R0,R0,#+3
   \   00000068   C949               LDR      R1,??ScreenGraph_1+0x8  ;; Variables
   \   0000006A   095C               LDRB     R1,[R1, R0]
   \   0000006C   7079               LDRB     R0,[R6, #+5]
   \   0000006E   0200               MOVS     R2,R0
   \   00000070   D208               LSRS     R2,R2,#+3
   \   00000072   D200               LSLS     R2,R2,#+3
   \   00000074   801A               SUBS     R0,R0,R2
   \   00000076   0141               ASRS     R1,R1,R0
   \   00000078   0120               MOVS     R0,#+1
   \   0000007A   0840               ANDS     R0,R0,R1
   4788                 }
   4789                 
   4790                 if (Val)
   \                     ??ScreenGraph_4:
   \   0000007C   0028               CMP      R0,#+0
   \   0000007E   82B0               SUB      SP,SP,#+8
   \   00000080   1DD0               BEQ      ??ScreenGraph_5
   4791                 {
   4792                    Label(Speech[g_leng].Wl,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   7F21               MOVS     R1,#+127
   \   00000088   0120               MOVS     R0,#+1
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   04A8               ADD      R0,SP,#+16
   \   0000008E   017C               LDRB     R1,[R0, #+16]
   \   00000090   0320               MOVS     R0,#+3
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   2800               MOVS     R0,R5
   \   00000096   4008               LSRS     R0,R0,#+1
   \   00000098   2318               ADDS     R3,R4,R0
   \   0000009A   DB1E               SUBS     R3,R3,#+3
   \   0000009C   06A8               ADD      R0,SP,#+24
   \   0000009E   027B               LDRB     R2,[R0, #+12]
   \   000000A0   0221               MOVS     R1,#+2
   \   000000A2   8C46               MOV      R12,R1
   \   000000A4   BB49               LDR      R1,??ScreenGraph_1+0xC  ;; 0x627
   \   000000A6   BC48               LDR      R0,??ScreenGraph_1+0x10  ;; g_leng
   \   000000A8   0068               LDR      R0,[R0, #+0]
   \   000000AA   BC4F               LDR      R7,??ScreenGraph_1+0x14  ;; 0xa7d
   \   000000AC   7843               MULS     R0,R7,R0
   \   000000AE   BC4F               LDR      R7,??ScreenGraph_1+0x18  ;; Speech
   \   000000B0   3818               ADDS     R0,R7,R0
   \   000000B2   4018               ADDS     R0,R0,R1
   \   000000B4   6146               MOV      R1,R12
   \   000000B6   ........           BL       Label
   \   000000BA   06B0               ADD      SP,SP,#+24
   \   000000BC   1DE0               B        ??ScreenGraph_2
   4793                 }else{
   4794                    Label(Speech[g_leng].Wyl,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_5:
   \   000000BE   0020               MOVS     R0,#+0
   \   000000C0   0090               STR      R0,[SP, #+0]
   \   000000C2   7F21               MOVS     R1,#+127
   \   000000C4   0120               MOVS     R0,#+1
   \   000000C6   03B4               PUSH     {R0,R1}
   \   000000C8   04A8               ADD      R0,SP,#+16
   \   000000CA   017C               LDRB     R1,[R0, #+16]
   \   000000CC   0320               MOVS     R0,#+3
   \   000000CE   03B4               PUSH     {R0,R1}
   \   000000D0   2800               MOVS     R0,R5
   \   000000D2   4008               LSRS     R0,R0,#+1
   \   000000D4   2318               ADDS     R3,R4,R0
   \   000000D6   DB1E               SUBS     R3,R3,#+3
   \   000000D8   06A8               ADD      R0,SP,#+24
   \   000000DA   027B               LDRB     R2,[R0, #+12]
   \   000000DC   0221               MOVS     R1,#+2
   \   000000DE   8C46               MOV      R12,R1
   \   000000E0   C321               MOVS     R1,#+195
   \   000000E2   C900               LSLS     R1,R1,#+3        ;; #+1560
   \   000000E4   AC48               LDR      R0,??ScreenGraph_1+0x10  ;; g_leng
   \   000000E6   0068               LDR      R0,[R0, #+0]
   \   000000E8   AC4F               LDR      R7,??ScreenGraph_1+0x14  ;; 0xa7d
   \   000000EA   7843               MULS     R0,R7,R0
   \   000000EC   AC4F               LDR      R7,??ScreenGraph_1+0x18  ;; Speech
   \   000000EE   3818               ADDS     R0,R7,R0
   \   000000F0   4018               ADDS     R0,R0,R1
   \   000000F2   6146               MOV      R1,R12
   \   000000F4   ........           BL       Label
   \   000000F8   06B0               ADD      SP,SP,#+24
   4795                 }
   4796             }
   4797             
   4798             if (Graph->Type==GraphScena)
   \                     ??ScreenGraph_2:
   \   000000FA   3078               LDRB     R0,[R6, #+0]
   \   000000FC   0928               CMP      R0,#+9
   \   000000FE   1DD1               BNE      ??ScreenGraph_6
   4799             {
   4800                char LabelButt[2] = {0,0};
   \   00000100   02A8               ADD      R0,SP,#+8
   \   00000102   0021               MOVS     R1,#+0
   \   00000104   0160               STR      R1,[R0, #0]
   4801                
   4802                CharToStr(MainStage.SceneNr,LabelButt,1);
   \   00000106   0122               MOVS     R2,#+1
   \   00000108   02A9               ADD      R1,SP,#+8
   \   0000010A   A648               LDR      R0,??ScreenGraph_1+0x1C  ;; MainStage + 1770
   \   0000010C   0078               LDRB     R0,[R0, #+0]
   \   0000010E   ........           BL       CharToStr
   4803                Label(LabelButt,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000112   82B0               SUB      SP,SP,#+8
   \   00000114   0020               MOVS     R0,#+0
   \   00000116   0090               STR      R0,[SP, #+0]
   \   00000118   7F21               MOVS     R1,#+127
   \   0000011A   0120               MOVS     R0,#+1
   \   0000011C   03B4               PUSH     {R0,R1}
   \   0000011E   04A8               ADD      R0,SP,#+16
   \   00000120   017C               LDRB     R1,[R0, #+16]
   \   00000122   0320               MOVS     R0,#+3
   \   00000124   03B4               PUSH     {R0,R1}
   \   00000126   2800               MOVS     R0,R5
   \   00000128   4008               LSRS     R0,R0,#+1
   \   0000012A   2318               ADDS     R3,R4,R0
   \   0000012C   DB1E               SUBS     R3,R3,#+3
   \   0000012E   06A8               ADD      R0,SP,#+24
   \   00000130   027B               LDRB     R2,[R0, #+12]
   \   00000132   0221               MOVS     R1,#+2
   \   00000134   08A8               ADD      R0,SP,#+32
   \   00000136   ........           BL       Label
   \   0000013A   06B0               ADD      SP,SP,#+24
   4804             }
   4805             
   4806             if ((Graph->Type==GraphText) && (Graph->PlusOnOff==0))
   \                     ??ScreenGraph_6:
   \   0000013C   3078               LDRB     R0,[R6, #+0]
   \   0000013E   0828               CMP      R0,#+8
   \   00000140   18D1               BNE      ??ScreenGraph_7
   \   00000142   B079               LDRB     R0,[R6, #+6]
   \   00000144   C007               LSLS     R0,R0,#+31
   \   00000146   15D4               BMI      ??ScreenGraph_7
   4807             {
   4808               Label(Graph->Text,2,poz_X,poz_Y+(width/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   0020               MOVS     R0,#+0
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   7F21               MOVS     R1,#+127
   \   00000150   0120               MOVS     R0,#+1
   \   00000152   03B4               PUSH     {R0,R1}
   \   00000154   04A8               ADD      R0,SP,#+16
   \   00000156   017C               LDRB     R1,[R0, #+16]
   \   00000158   0320               MOVS     R0,#+3
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   0800               MOVS     R0,R1
   \   0000015E   4008               LSRS     R0,R0,#+1
   \   00000160   2318               ADDS     R3,R4,R0
   \   00000162   DB1E               SUBS     R3,R3,#+3
   \   00000164   06A8               ADD      R0,SP,#+24
   \   00000166   027B               LDRB     R2,[R0, #+12]
   \   00000168   0221               MOVS     R1,#+2
   \   0000016A   3000               MOVS     R0,R6
   \   0000016C   401C               ADDS     R0,R0,#+1
   \   0000016E   ........           BL       Label
   \   00000172   06B0               ADD      SP,SP,#+24
   4809             }   
   4810             
   4811                if ((Graph->PlusOnOff) && (((Graph->Type==GraphOnOff))||(Graph->Type==GraphText)))
   \                     ??ScreenGraph_7:
   \   00000174   B079               LDRB     R0,[R6, #+6]
   \   00000176   C007               LSLS     R0,R0,#+31
   \   00000178   71D5               BPL      ??ScreenGraph_8
   \   0000017A   3078               LDRB     R0,[R6, #+0]
   \   0000017C   0B28               CMP      R0,#+11
   \   0000017E   01D0               BEQ      ??ScreenGraph_9
   \   00000180   0828               CMP      R0,#+8
   \   00000182   6CD1               BNE      ??ScreenGraph_8
   4812             {
   4813                Label(Graph->Text,2,poz_X,poz_Y+(height/2)+1,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_9:
   \   00000184   2800               MOVS     R0,R5
   \   00000186   4008               LSRS     R0,R0,#+1
   \   00000188   2718               ADDS     R7,R4,R0
   \   0000018A   82B0               SUB      SP,SP,#+8
   \   0000018C   0020               MOVS     R0,#+0
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   7F21               MOVS     R1,#+127
   \   00000192   0120               MOVS     R0,#+1
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   04A8               ADD      R0,SP,#+16
   \   00000198   017C               LDRB     R1,[R0, #+16]
   \   0000019A   0320               MOVS     R0,#+3
   \   0000019C   03B4               PUSH     {R0,R1}
   \   0000019E   3B00               MOVS     R3,R7
   \   000001A0   5B1C               ADDS     R3,R3,#+1
   \   000001A2   06A8               ADD      R0,SP,#+24
   \   000001A4   027B               LDRB     R2,[R0, #+12]
   \   000001A6   0221               MOVS     R1,#+2
   \   000001A8   3000               MOVS     R0,R6
   \   000001AA   401C               ADDS     R0,R0,#+1
   \   000001AC   ........           BL       Label
   \   000001B0   06B0               ADD      SP,SP,#+24
   4814                
   4815                
   4816                if ((Graph->Nr>=0) && (Graph->Nr!=0xFF))    //je¿eli wêze³
                                     ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \   000001B2   3079               LDRB     R0,[R6, #+4]
   \   000001B4   FF28               CMP      R0,#+255
   \   000001B6   0BD0               BEQ      ??ScreenGraph_10
   4817                 {
   4818                    Val=PortStageRead(MainStage.StageI[Graph->Nr].Port, Graph->Port);
   \   000001B8   7179               LDRB     R1,[R6, #+5]
   \   000001BA   1622               MOVS     R2,#+22
   \   000001BC   5043               MULS     R0,R2,R0
   \   000001BE   734A               LDR      R2,??ScreenGraph_1+0x4  ;; MainStage
   \   000001C0   1018               ADDS     R0,R2,R0
   \   000001C2   A030               ADDS     R0,R0,#+160
   \   000001C4   0088               LDRH     R0,[R0, #+0]
   \   000001C6   0004               LSLS     R0,R0,#+16
   \   000001C8   0014               ASRS     R0,R0,#+16
   \   000001CA   ........           BL       PortStageRead
   \   000001CE   0BE0               B        ??ScreenGraph_11
   4819                 }else{
   4820                    Val=(Variables[Graph->Port/8]>>(Graph->Port%8)) & 0x1;
   \                     ??ScreenGraph_10:
   \   000001D0   7079               LDRB     R0,[R6, #+5]
   \   000001D2   C010               ASRS     R0,R0,#+3
   \   000001D4   6E49               LDR      R1,??ScreenGraph_1+0x8  ;; Variables
   \   000001D6   095C               LDRB     R1,[R1, R0]
   \   000001D8   7079               LDRB     R0,[R6, #+5]
   \   000001DA   0200               MOVS     R2,R0
   \   000001DC   D208               LSRS     R2,R2,#+3
   \   000001DE   D200               LSLS     R2,R2,#+3
   \   000001E0   801A               SUBS     R0,R0,R2
   \   000001E2   0141               ASRS     R1,R1,R0
   \   000001E4   0120               MOVS     R0,#+1
   \   000001E6   0840               ANDS     R0,R0,R1
   4821                 }
   4822                 
   4823                
   4824                if (Val)
   \                     ??ScreenGraph_11:
   \   000001E8   0028               CMP      R0,#+0
   \   000001EA   82B0               SUB      SP,SP,#+8
   \   000001EC   1BD0               BEQ      ??ScreenGraph_12
   4825                 {
   4826                    Label(Speech[g_leng].Wl,2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001EE   0020               MOVS     R0,#+0
   \   000001F0   0090               STR      R0,[SP, #+0]
   \   000001F2   7F21               MOVS     R1,#+127
   \   000001F4   0120               MOVS     R0,#+1
   \   000001F6   03B4               PUSH     {R0,R1}
   \   000001F8   04A8               ADD      R0,SP,#+16
   \   000001FA   017C               LDRB     R1,[R0, #+16]
   \   000001FC   0320               MOVS     R0,#+3
   \   000001FE   03B4               PUSH     {R0,R1}
   \   00000200   083F               SUBS     R7,R7,#+8
   \   00000202   3B00               MOVS     R3,R7
   \   00000204   06A8               ADD      R0,SP,#+24
   \   00000206   027B               LDRB     R2,[R0, #+12]
   \   00000208   0221               MOVS     R1,#+2
   \   0000020A   8C46               MOV      R12,R1
   \   0000020C   6149               LDR      R1,??ScreenGraph_1+0xC  ;; 0x627
   \   0000020E   6248               LDR      R0,??ScreenGraph_1+0x10  ;; g_leng
   \   00000210   0068               LDR      R0,[R0, #+0]
   \   00000212   624F               LDR      R7,??ScreenGraph_1+0x14  ;; 0xa7d
   \   00000214   7843               MULS     R0,R7,R0
   \   00000216   624F               LDR      R7,??ScreenGraph_1+0x18  ;; Speech
   \   00000218   3818               ADDS     R0,R7,R0
   \   0000021A   4018               ADDS     R0,R0,R1
   \   0000021C   6146               MOV      R1,R12
   \   0000021E   ........           BL       Label
   \   00000222   06B0               ADD      SP,SP,#+24
   \   00000224   1BE0               B        ??ScreenGraph_8
   4827                 }else{
   4828                    Label(Speech[g_leng].Wyl,2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_12:
   \   00000226   0020               MOVS     R0,#+0
   \   00000228   0090               STR      R0,[SP, #+0]
   \   0000022A   7F21               MOVS     R1,#+127
   \   0000022C   0120               MOVS     R0,#+1
   \   0000022E   03B4               PUSH     {R0,R1}
   \   00000230   04A8               ADD      R0,SP,#+16
   \   00000232   017C               LDRB     R1,[R0, #+16]
   \   00000234   0320               MOVS     R0,#+3
   \   00000236   03B4               PUSH     {R0,R1}
   \   00000238   083F               SUBS     R7,R7,#+8
   \   0000023A   3B00               MOVS     R3,R7
   \   0000023C   06A8               ADD      R0,SP,#+24
   \   0000023E   027B               LDRB     R2,[R0, #+12]
   \   00000240   0221               MOVS     R1,#+2
   \   00000242   8C46               MOV      R12,R1
   \   00000244   C321               MOVS     R1,#+195
   \   00000246   C900               LSLS     R1,R1,#+3        ;; #+1560
   \   00000248   5348               LDR      R0,??ScreenGraph_1+0x10  ;; g_leng
   \   0000024A   0068               LDR      R0,[R0, #+0]
   \   0000024C   534F               LDR      R7,??ScreenGraph_1+0x14  ;; 0xa7d
   \   0000024E   7843               MULS     R0,R7,R0
   \   00000250   534F               LDR      R7,??ScreenGraph_1+0x18  ;; Speech
   \   00000252   3818               ADDS     R0,R7,R0
   \   00000254   4018               ADDS     R0,R0,R1
   \   00000256   6146               MOV      R1,R12
   \   00000258   ........           BL       Label
   \   0000025C   06B0               ADD      SP,SP,#+24
   4829                 }
   4830             }
   4831             
   4832             
   4833                           //Analogi
   4834               char IlLiter=0;
   4835              signed short Value;
   4836              char txt[5];
   4837             if (Graph->Type==GraphWartosc)
   \                     ??ScreenGraph_8:
   \   0000025E   3078               LDRB     R0,[R6, #+0]
   \   00000260   0A28               CMP      R0,#+10
   \   00000262   00D0               BEQ      .+4
   \   00000264   8BE0               B        ??ScreenGraph_13
   4838             {
   4839              
   4840                               if ((Graph->Nr>0) || ((Graph->Nr==0)&&(Graph->Reg>0)))
   \   00000266   3079               LDRB     R0,[R6, #+4]
   \   00000268   0028               CMP      R0,#+0
   \   0000026A   05D1               BNE      ??ScreenGraph_14
   \   0000026C   00D0               BEQ      .+4
   \   0000026E   86E0               B        ??ScreenGraph_13
   \   00000270   7079               LDRB     R0,[R6, #+5]
   \   00000272   0028               CMP      R0,#+0
   \   00000274   00D1               BNE      .+4
   \   00000276   82E0               B        ??ScreenGraph_13
   4841                               {
   4842                               IlLiter=0;
   4843                               Value=MainStage.StageI[Graph->Nr].Value[Graph->Reg];
   \                     ??ScreenGraph_14:
   \   00000278   A020               MOVS     R0,#+160
   \   0000027A   7179               LDRB     R1,[R6, #+5]
   \   0000027C   4900               LSLS     R1,R1,#+1
   \   0000027E   3279               LDRB     R2,[R6, #+4]
   \   00000280   1623               MOVS     R3,#+22
   \   00000282   5A43               MULS     R2,R3,R2
   \   00000284   414B               LDR      R3,??ScreenGraph_1+0x4  ;; MainStage
   \   00000286   9A18               ADDS     R2,R3,R2
   \   00000288   5118               ADDS     R1,R2,R1
   \   0000028A   085E               LDRSH    R0,[R1, R0]
   4844          
   4845                               if (Value==(signed short)0x8AAA)  //je¿eli sygna³ niewiarygodny
   \   0000028C   4649               LDR      R1,??ScreenGraph_1+0x20  ;; 0xffff8aaa
   \   0000028E   8842               CMP      R0,R1
   \   00000290   1AD1               BNE      ??ScreenGraph_15
   4846                               {
   4847                                 txt[0]='?';txt[1]='?';txt[2]='?'; txt[3]=0; IlLiter+=3;
   \   00000292   3F20               MOVS     R0,#+63
   \   00000294   6946               MOV      R1,SP
   \   00000296   0870               STRB     R0,[R1, #+0]
   \   00000298   4870               STRB     R0,[R1, #+1]
   \   0000029A   8870               STRB     R0,[R1, #+2]
   \   0000029C   0020               MOVS     R0,#+0
   \   0000029E   C870               STRB     R0,[R1, #+3]
   4848                                 Label(txt,2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);
   \   000002A0   82B0               SUB      SP,SP,#+8
   \   000002A2   0090               STR      R0,[SP, #+0]
   \   000002A4   7F21               MOVS     R1,#+127
   \   000002A6   0120               MOVS     R0,#+1
   \   000002A8   03B4               PUSH     {R0,R1}
   \   000002AA   04A8               ADD      R0,SP,#+16
   \   000002AC   017C               LDRB     R1,[R0, #+16]
   \   000002AE   0320               MOVS     R0,#+3
   \   000002B0   03B4               PUSH     {R0,R1}
   \   000002B2   2800               MOVS     R0,R5
   \   000002B4   4008               LSRS     R0,R0,#+1
   \   000002B6   2318               ADDS     R3,R4,R0
   \   000002B8   083B               SUBS     R3,R3,#+8
   \   000002BA   06A8               ADD      R0,SP,#+24
   \   000002BC   027B               LDRB     R2,[R0, #+12]
   \   000002BE   0221               MOVS     R1,#+2
   \   000002C0   ........           BL       Label
   \   000002C4   06B0               ADD      SP,SP,#+24
   \   000002C6   5AE0               B        ??ScreenGraph_13
   4849                               }else{ //je¿eli sygna³ wiarygodny
   4850                                
   4851                                 if (Graph->Flip)
   \                     ??ScreenGraph_15:
   \   000002C8   B179               LDRB     R1,[R6, #+6]
   \   000002CA   0029               CMP      R1,#+0
   \   000002CC   6946               MOV      R1,SP
   \   000002CE   2BD0               BEQ      ??ScreenGraph_16
   4852                                   {
   4853                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   \   000002D0   ........           BL       sIntToStr
   \   000002D4   0200               MOVS     R2,R0
   4854                                       Label(txt,2,poz_X,poz_Y+(height/2)+0,IlLiter,width,1,127,0);
   \   000002D6   2800               MOVS     R0,R5
   \   000002D8   4008               LSRS     R0,R0,#+1
   \   000002DA   2718               ADDS     R7,R4,R0
   \   000002DC   82B0               SUB      SP,SP,#+8
   \   000002DE   0020               MOVS     R0,#+0
   \   000002E0   0090               STR      R0,[SP, #+0]
   \   000002E2   7F21               MOVS     R1,#+127
   \   000002E4   0120               MOVS     R0,#+1
   \   000002E6   03B4               PUSH     {R0,R1}
   \   000002E8   04A8               ADD      R0,SP,#+16
   \   000002EA   017C               LDRB     R1,[R0, #+16]
   \   000002EC   1000               MOVS     R0,R2
   \   000002EE   03B4               PUSH     {R0,R1}
   \   000002F0   3B00               MOVS     R3,R7
   \   000002F2   06A8               ADD      R0,SP,#+24
   \   000002F4   027B               LDRB     R2,[R0, #+12]
   \   000002F6   0221               MOVS     R1,#+2
   \   000002F8   ........           BL       Label
   \   000002FC   06B0               ADD      SP,SP,#+24
   4855                                       Label(Graph->Text,2,poz_X,poz_Y+(height/2)-9,3,width,1,127,0);
   \   000002FE   82B0               SUB      SP,SP,#+8
   \   00000300   0020               MOVS     R0,#+0
   \   00000302   0090               STR      R0,[SP, #+0]
   \   00000304   7F21               MOVS     R1,#+127
   \   00000306   0120               MOVS     R0,#+1
   \   00000308   03B4               PUSH     {R0,R1}
   \   0000030A   04A8               ADD      R0,SP,#+16
   \   0000030C   017C               LDRB     R1,[R0, #+16]
   \   0000030E   0320               MOVS     R0,#+3
   \   00000310   03B4               PUSH     {R0,R1}
   \   00000312   093F               SUBS     R7,R7,#+9
   \   00000314   3B00               MOVS     R3,R7
   \   00000316   06A8               ADD      R0,SP,#+24
   \   00000318   027B               LDRB     R2,[R0, #+12]
   \   0000031A   0221               MOVS     R1,#+2
   \   0000031C   761C               ADDS     R6,R6,#+1
   \   0000031E   3000               MOVS     R0,R6
   \   00000320   ........           BL       Label
   \   00000324   06B0               ADD      SP,SP,#+24
   \   00000326   2AE0               B        ??ScreenGraph_13
   4856                                       
   4857                                   }else{
   4858                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   \                     ??ScreenGraph_16:
   \   00000328   ........           BL       sIntToStr
   \   0000032C   0200               MOVS     R2,R0
   4859                                       Label(txt,2,poz_X,poz_Y+(height/2)-9,IlLiter,width,1,127,0);
   \   0000032E   2800               MOVS     R0,R5
   \   00000330   4008               LSRS     R0,R0,#+1
   \   00000332   2718               ADDS     R7,R4,R0
   \   00000334   82B0               SUB      SP,SP,#+8
   \   00000336   0020               MOVS     R0,#+0
   \   00000338   0090               STR      R0,[SP, #+0]
   \   0000033A   7F21               MOVS     R1,#+127
   \   0000033C   0120               MOVS     R0,#+1
   \   0000033E   03B4               PUSH     {R0,R1}
   \   00000340   04A8               ADD      R0,SP,#+16
   \   00000342   017C               LDRB     R1,[R0, #+16]
   \   00000344   1000               MOVS     R0,R2
   \   00000346   03B4               PUSH     {R0,R1}
   \   00000348   3B00               MOVS     R3,R7
   \   0000034A   093B               SUBS     R3,R3,#+9
   \   0000034C   06A8               ADD      R0,SP,#+24
   \   0000034E   027B               LDRB     R2,[R0, #+12]
   \   00000350   0221               MOVS     R1,#+2
   \   00000352   ........           BL       Label
   \   00000356   06B0               ADD      SP,SP,#+24
   4860                                       Label(Graph->Text,2,poz_X,poz_Y+(height/2)+0,3,width,1,127,0);
   \   00000358   82B0               SUB      SP,SP,#+8
   \   0000035A   0020               MOVS     R0,#+0
   \   0000035C   0090               STR      R0,[SP, #+0]
   \   0000035E   7F21               MOVS     R1,#+127
   \   00000360   0120               MOVS     R0,#+1
   \   00000362   03B4               PUSH     {R0,R1}
   \   00000364   04A8               ADD      R0,SP,#+16
   \   00000366   017C               LDRB     R1,[R0, #+16]
   \   00000368   0320               MOVS     R0,#+3
   \   0000036A   03B4               PUSH     {R0,R1}
   \   0000036C   3B00               MOVS     R3,R7
   \   0000036E   06A8               ADD      R0,SP,#+24
   \   00000370   027B               LDRB     R2,[R0, #+12]
   \   00000372   0221               MOVS     R1,#+2
   \   00000374   761C               ADDS     R6,R6,#+1
   \   00000376   3000               MOVS     R0,R6
   \   00000378   ........           BL       Label
   \   0000037C   06B0               ADD      SP,SP,#+24
   4861                                   }
   4862          
   4863                               }  
   4864                 
   4865                               
   4866                                                        
   4867                               }
   4868             }
   4869                      
   4870             
   4871             
   4872          }
   \                     ??ScreenGraph_13:
   \   0000037E   05B0               ADD      SP,SP,#+20
   \   00000380   F0BC               POP      {R4-R7}
   \   00000382   01BC               POP      {R0}
   \   00000384   0047               BX       R0               ;; return
   \   00000386   C046               Nop      
   \                     ??ScreenGraph_1:
   \   00000388   ........           DC32     `?<Constant {0, 0}>`
   \   0000038C   ........           DC32     MainStage
   \   00000390   ........           DC32     Variables
   \   00000394   27060000           DC32     0x627
   \   00000398   ........           DC32     g_leng
   \   0000039C   7D0A0000           DC32     0xa7d
   \   000003A0   ........           DC32     Speech
   \   000003A4   ........           DC32     MainStage + 1770
   \   000003A8   AA8AFFFF           DC32     0xffff8aaa
   4873          
   4874          
   4875          

   \                                 In section Debug.txt, align 4, keep-with-next
   4876          void ScreenDesign1_Paint(_Screen *ScreenLocal)
   4877          {
   \                     ScreenDesign1_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   4878          
   4879            const _ScreenPaternDesign *ScreenPaternDesign;
   4880            CleanCanvas();
   \   00000004   ........           BL       CleanCanvas
   \   00000008   8748               LDR      R0,??ScreenDesign1_Paint_0  ;; TextToChangeLength + 5
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   01D1               BNE      ??ScreenDesign1_Paint_1
   4881            if (CurModifSheet==0) 
   4882            {
   4883              ScreenPaternDesign=ScreenSetTab_0;
   \   00000010   864C               LDR      R4,??ScreenDesign1_Paint_0+0x4  ;; `?<Constant {129, 0}>` + 24
   \   00000012   0EE0               B        ??ScreenDesign1_Paint_2
   4884            }else{
   4885              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??ScreenDesign1_Paint_1:
   \   00000014   864C               LDR      R4,??ScreenDesign1_Paint_0+0x8  ;; `?<Constant {129, 0}>` + 992
   4886              
   4887              //Strefa etykiety podstrony
   4888               ZoneGraph(0, 15,114,38,12,
   4889                      ScreenLocal->Label,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000016   82B0               SUB      SP,SP,#+8
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   0090               STR      R0,[SP, #+0]
   \   0000001C   0499               LDR      R1,[SP, #+16]
   \   0000001E   491C               ADDS     R1,R1,#+1
   \   00000020   0C20               MOVS     R0,#+12
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   2623               MOVS     R3,#+38
   \   00000026   7222               MOVS     R2,#+114
   \   00000028   0F21               MOVS     R1,#+15
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   ........           BL       ZoneGraph
   \   00000030   04B0               ADD      SP,SP,#+16
   4890              
   4891              
   4892            }  
   4893          
   4894           
   4895             char PaternDesign=ScreenLocal->PaternDesign;
   \                     ??ScreenDesign1_Paint_2:
   \   00000032   0298               LDR      R0,[SP, #+8]
   \   00000034   0078               LDRB     R0,[R0, #+0]
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   01A8               ADD      R0,SP,#+4
   \   0000003A   7E49               LDR      R1,??ScreenDesign1_Paint_0+0xC  ;; `?<Constant {129, 0}>`
   \   0000003C   0A68               LDR      R2,[R1, #0]
   \   0000003E   0260               STR      R2,[R0, #0]
   4896          
   4897             
   4898             
   4899             
   4900             char LabelButt[2] = {129,0};
   4901             Button(LabelButt,0,113,13,13);
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   0D20               MOVS     R0,#+13
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   0300               MOVS     R3,R0
   \   00000048   7122               MOVS     R2,#+113
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   03A8               ADD      R0,SP,#+12
   \   0000004E   ........           BL       Button
   \   00000052   02B0               ADD      SP,SP,#+8
   \   00000054   0025               MOVS     R5,#+0
   \   00000056   25E0               B        ??ScreenDesign1_Paint_3
   4902          
   4903             //przyciski
   4904            for (char i=0; i<ScrenButtonNr; i++)
   4905            {
   4906              if (ScreenPaternDesign[PaternDesign].Button[i].Width>0)
   \                     ??ScreenDesign1_Paint_4:
   \   00000058   0098               LDR      R0,[SP, #+0]
   \   0000005A   0006               LSLS     R0,R0,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \   0000005E   5821               MOVS     R1,#+88
   \   00000060   4843               MULS     R0,R1,R0
   \   00000062   2018               ADDS     R0,R4,R0
   \   00000064   2E00               MOVS     R6,R5
   \   00000066   B100               LSLS     R1,R6,#+2
   \   00000068   4718               ADDS     R7,R0,R1
   \   0000006A   B878               LDRB     R0,[R7, #+2]
   \   0000006C   0028               CMP      R0,#+0
   \   0000006E   16D0               BEQ      ??ScreenDesign1_Paint_5
   4907              {
   4908                      ZoneButon(ScreenLocal->Button[i].Text,
   4909                      ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   4910                      ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   4911                      ScreenPaternDesign[PaternDesign].Button[i].Width,
   4912                      ScreenPaternDesign[PaternDesign].Button[i].Height,(char*)ButtonName[i+10*CurModifSheet]); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000070   D420               MOVS     R0,#+212
   \   00000072   C000               LSLS     R0,R0,#+3        ;; #+1696
   \   00000074   6C49               LDR      R1,??ScreenDesign1_Paint_0  ;; TextToChangeLength + 5
   \   00000076   0978               LDRB     R1,[R1, #+0]
   \   00000078   0A22               MOVS     R2,#+10
   \   0000007A   5143               MULS     R1,R2,R1
   \   0000007C   7118               ADDS     R1,R6,R1
   \   0000007E   8900               LSLS     R1,R1,#+2
   \   00000080   6C4A               LDR      R2,??ScreenDesign1_Paint_0+0xC  ;; `?<Constant {129, 0}>`
   \   00000082   5118               ADDS     R1,R2,R1
   \   00000084   0918               ADDS     R1,R1,R0
   \   00000086   F878               LDRB     R0,[R7, #+3]
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   BB78               LDRB     R3,[R7, #+2]
   \   0000008C   7A78               LDRB     R2,[R7, #+1]
   \   0000008E   3978               LDRB     R1,[R7, #+0]
   \   00000090   F000               LSLS     R0,R6,#+3
   \   00000092   049E               LDR      R6,[SP, #+16]
   \   00000094   3018               ADDS     R0,R6,R0
   \   00000096   0B30               ADDS     R0,R0,#+11
   \   00000098   ........           BL       ZoneButon
   \   0000009C   02B0               ADD      SP,SP,#+8
   4913              }
   4914             }
   \                     ??ScreenDesign1_Paint_5:
   \   0000009E   6D1C               ADDS     R5,R5,#+1
   \   000000A0   2D06               LSLS     R5,R5,#+24
   \   000000A2   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_3:
   \   000000A4   2800               MOVS     R0,R5
   \   000000A6   0928               CMP      R0,#+9
   \   000000A8   D6D3               BCC      ??ScreenDesign1_Paint_4
   4915          
   4916          
   4917            //grafika
   4918            for (char i=0; i<ScrenGraphNr; i++)
   \   000000AA   0025               MOVS     R5,#+0
   \   000000AC   20E0               B        ??ScreenDesign1_Paint_6
   4919            {
   4920          
   4921              if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??ScreenDesign1_Paint_7:
   \   000000AE   0098               LDR      R0,[SP, #+0]
   \   000000B0   0006               LSLS     R0,R0,#+24
   \   000000B2   000E               LSRS     R0,R0,#+24
   \   000000B4   5821               MOVS     R1,#+88
   \   000000B6   4843               MULS     R0,R1,R0
   \   000000B8   2018               ADDS     R0,R4,R0
   \   000000BA   2900               MOVS     R1,R5
   \   000000BC   8A00               LSLS     R2,R1,#+2
   \   000000BE   8618               ADDS     R6,R0,R2
   \   000000C0   2436               ADDS     R6,R6,#+36
   \   000000C2   B078               LDRB     R0,[R6, #+2]
   \   000000C4   0028               CMP      R0,#+0
   \   000000C6   10D0               BEQ      ??ScreenDesign1_Paint_8
   4922              {
   4923                      ZoneGraph(0,
   4924                      ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   4925                      ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   4926                      ScreenPaternDesign[PaternDesign].Graph[i].Width,
   4927                      ScreenPaternDesign[PaternDesign].Graph[i].Height,
   4928                      0,&(ScreenLocal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   0720               MOVS     R0,#+7
   \   000000CC   4143               MULS     R1,R0,R1
   \   000000CE   0498               LDR      R0,[SP, #+16]
   \   000000D0   4018               ADDS     R0,R0,R1
   \   000000D2   5330               ADDS     R0,R0,#+83
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   F078               LDRB     R0,[R6, #+3]
   \   000000DA   03B4               PUSH     {R0,R1}
   \   000000DC   B378               LDRB     R3,[R6, #+2]
   \   000000DE   7278               LDRB     R2,[R6, #+1]
   \   000000E0   3178               LDRB     R1,[R6, #+0]
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   ........           BL       ZoneGraph
   \   000000E8   04B0               ADD      SP,SP,#+16
   4929              
   4930              }
   4931             }
   \                     ??ScreenDesign1_Paint_8:
   \   000000EA   6D1C               ADDS     R5,R5,#+1
   \   000000EC   2D06               LSLS     R5,R5,#+24
   \   000000EE   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_6:
   \   000000F0   2800               MOVS     R0,R5
   \   000000F2   0428               CMP      R0,#+4
   \   000000F4   DBD3               BCC      ??ScreenDesign1_Paint_7
   4932          
   4933             //analogi
   4934             for (char i=0; i<ScrenAnalogNr; i++)
   \   000000F6   0025               MOVS     R5,#+0
   \   000000F8   1CE0               B        ??ScreenDesign1_Paint_9
   4935             {
   4936                 if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
   \                     ??ScreenDesign1_Paint_10:
   \   000000FA   0098               LDR      R0,[SP, #+0]
   \   000000FC   0006               LSLS     R0,R0,#+24
   \   000000FE   000E               LSRS     R0,R0,#+24
   \   00000100   5821               MOVS     R1,#+88
   \   00000102   4843               MULS     R0,R1,R0
   \   00000104   2018               ADDS     R0,R4,R0
   \   00000106   2900               MOVS     R1,R5
   \   00000108   8900               LSLS     R1,R1,#+2
   \   0000010A   4618               ADDS     R6,R0,R1
   \   0000010C   3436               ADDS     R6,R6,#+52
   \   0000010E   B078               LDRB     R0,[R6, #+2]
   \   00000110   0028               CMP      R0,#+0
   \   00000112   0CD0               BEQ      ??ScreenDesign1_Paint_11
   4937              {
   4938                      ZoneGraph(0,
   4939                      ScreenPaternDesign[PaternDesign].Value[i].Poz.x,
   4940                      ScreenPaternDesign[PaternDesign].Value[i].Poz.y,
   4941                      ScreenPaternDesign[PaternDesign].Value[i].Width,
   4942                      ScreenPaternDesign[PaternDesign].Value[i].Height,
   4943                      "Analo. ",0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   0020               MOVS     R0,#+0
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   4749               LDR      R1,??ScreenDesign1_Paint_0+0x10  ;; `?<Constant {129, 0}>` + 16
   \   0000011C   F078               LDRB     R0,[R6, #+3]
   \   0000011E   03B4               PUSH     {R0,R1}
   \   00000120   B378               LDRB     R3,[R6, #+2]
   \   00000122   7278               LDRB     R2,[R6, #+1]
   \   00000124   3178               LDRB     R1,[R6, #+0]
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   ........           BL       ZoneGraph
   \   0000012C   04B0               ADD      SP,SP,#+16
   4944              
   4945              }
   4946             }
   \                     ??ScreenDesign1_Paint_11:
   \   0000012E   6D1C               ADDS     R5,R5,#+1
   \   00000130   2D06               LSLS     R5,R5,#+24
   \   00000132   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_9:
   \   00000134   2800               MOVS     R0,R5
   \   00000136   0428               CMP      R0,#+4
   \   00000138   DFD3               BCC      ??ScreenDesign1_Paint_10
   4947            
   4948             //Linie
   4949             for (char i=0; i<ScrenLineNr; i++)
   \   0000013A   0025               MOVS     R5,#+0
   \   0000013C   08E0               B        ??ScreenDesign1_Paint_12
   4950             {
   4951              if (ScreenPaternDesign[PaternDesign].Line[i].Width>0)
   4952              {
   4953                  if (ScreenPaternDesign[PaternDesign].Line[i].Width>ScreenPaternDesign[PaternDesign].Line[i].Height)
   4954                  {
   4955                      H_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Width,1); // (char X, int Y, char lenght, char typ)
   4956                  }else{
   4957                      V_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Height,1); // (char X, int Y, char lenght, char typ)
   \                     ??ScreenDesign1_Paint_13:
   \   0000013E   0123               MOVS     R3,#+1
   \   00000140   0A00               MOVS     R2,R1
   \   00000142   4178               LDRB     R1,[R0, #+1]
   \   00000144   0078               LDRB     R0,[R0, #+0]
   \   00000146   ........           BL       V_line
   4958              
   4959                  }
   \                     ??ScreenDesign1_Paint_14:
   \   0000014A   6D1C               ADDS     R5,R5,#+1
   \   0000014C   2D06               LSLS     R5,R5,#+24
   \   0000014E   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_12:
   \   00000150   2800               MOVS     R0,R5
   \   00000152   0228               CMP      R0,#+2
   \   00000154   16D2               BCS      ??ScreenDesign1_Paint_15
   \   00000156   0098               LDR      R0,[SP, #+0]
   \   00000158   0006               LSLS     R0,R0,#+24
   \   0000015A   000E               LSRS     R0,R0,#+24
   \   0000015C   5821               MOVS     R1,#+88
   \   0000015E   4843               MULS     R0,R1,R0
   \   00000160   2018               ADDS     R0,R4,R0
   \   00000162   2900               MOVS     R1,R5
   \   00000164   8900               LSLS     R1,R1,#+2
   \   00000166   4018               ADDS     R0,R0,R1
   \   00000168   4430               ADDS     R0,R0,#+68
   \   0000016A   8178               LDRB     R1,[R0, #+2]
   \   0000016C   0029               CMP      R1,#+0
   \   0000016E   ECD0               BEQ      ??ScreenDesign1_Paint_14
   \   00000170   C178               LDRB     R1,[R0, #+3]
   \   00000172   8278               LDRB     R2,[R0, #+2]
   \   00000174   9142               CMP      R1,R2
   \   00000176   E2D2               BCS      ??ScreenDesign1_Paint_13
   \   00000178   0123               MOVS     R3,#+1
   \   0000017A   4178               LDRB     R1,[R0, #+1]
   \   0000017C   0078               LDRB     R0,[R0, #+0]
   \   0000017E   ........           BL       H_line
   \   00000182   E2E7               B        ??ScreenDesign1_Paint_14
   4960              }
   4961             }
   4962          
   4963             //Zegar
   4964             for (char i=0; i<ScrenLineNr; i++)
   \                     ??ScreenDesign1_Paint_15:
   \   00000184   0026               MOVS     R6,#+0
   \   00000186   21E0               B        ??ScreenDesign1_Paint_16
   4965             {
   4966              if (ScreenPaternDesign[PaternDesign].Time.Width>0)
   \                     ??ScreenDesign1_Paint_17:
   \   00000188   0098               LDR      R0,[SP, #+0]
   \   0000018A   0006               LSLS     R0,R0,#+24
   \   0000018C   000E               LSRS     R0,R0,#+24
   \   0000018E   5821               MOVS     R1,#+88
   \   00000190   4843               MULS     R0,R1,R0
   \   00000192   2018               ADDS     R0,R4,R0
   \   00000194   4C30               ADDS     R0,R0,#+76
   \   00000196   0500               MOVS     R5,R0
   \   00000198   A879               LDRB     R0,[R5, #+6]
   \   0000019A   0028               CMP      R0,#+0
   \   0000019C   13D0               BEQ      ??ScreenDesign1_Paint_18
   4967              {
   4968                      ZoneGraph(0,
   4969                      ScreenPaternDesign[PaternDesign].Time.Poz.x,
   4970                      ScreenPaternDesign[PaternDesign].Time.Poz.y,
   4971                      ScreenPaternDesign[PaternDesign].Time.Width,
   4972                      ScreenPaternDesign[PaternDesign].Time.Height,
   4973                      Speech[g_leng].Zegar,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0020               MOVS     R0,#+0
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   2548               LDR      R0,??ScreenDesign1_Paint_0+0x14  ;; 0x3de
   \   000001A6   2649               LDR      R1,??ScreenDesign1_Paint_0+0x18  ;; g_leng
   \   000001A8   0968               LDR      R1,[R1, #+0]
   \   000001AA   264A               LDR      R2,??ScreenDesign1_Paint_0+0x1C  ;; 0xa7d
   \   000001AC   5143               MULS     R1,R2,R1
   \   000001AE   264A               LDR      R2,??ScreenDesign1_Paint_0+0x20  ;; Speech
   \   000001B0   5118               ADDS     R1,R2,R1
   \   000001B2   0918               ADDS     R1,R1,R0
   \   000001B4   E879               LDRB     R0,[R5, #+7]
   \   000001B6   03B4               PUSH     {R0,R1}
   \   000001B8   AB79               LDRB     R3,[R5, #+6]
   \   000001BA   6A79               LDRB     R2,[R5, #+5]
   \   000001BC   2979               LDRB     R1,[R5, #+4]
   \   000001BE   0020               MOVS     R0,#+0
   \   000001C0   ........           BL       ZoneGraph
   \   000001C4   04B0               ADD      SP,SP,#+16
   4974              }
   4975             }  
   \                     ??ScreenDesign1_Paint_18:
   \   000001C6   761C               ADDS     R6,R6,#+1
   \   000001C8   3606               LSLS     R6,R6,#+24
   \   000001CA   360E               LSRS     R6,R6,#+24
   \                     ??ScreenDesign1_Paint_16:
   \   000001CC   3000               MOVS     R0,R6
   \   000001CE   0228               CMP      R0,#+2
   \   000001D0   DAD3               BCC      ??ScreenDesign1_Paint_17
   4976            
   4977             //Du¿a temperatura
   4978             for (char i=0; i<ScrenLineNr; i++)
   \   000001D2   0026               MOVS     R6,#+0
   \   000001D4   21E0               B        ??ScreenDesign1_Paint_19
   4979             {
   4980              if (ScreenPaternDesign[PaternDesign].Temperature.Width>0)
   \                     ??ScreenDesign1_Paint_20:
   \   000001D6   0098               LDR      R0,[SP, #+0]
   \   000001D8   0006               LSLS     R0,R0,#+24
   \   000001DA   000E               LSRS     R0,R0,#+24
   \   000001DC   5821               MOVS     R1,#+88
   \   000001DE   4843               MULS     R0,R1,R0
   \   000001E0   2018               ADDS     R0,R4,R0
   \   000001E2   4C30               ADDS     R0,R0,#+76
   \   000001E4   0500               MOVS     R5,R0
   \   000001E6   A878               LDRB     R0,[R5, #+2]
   \   000001E8   0028               CMP      R0,#+0
   \   000001EA   13D0               BEQ      ??ScreenDesign1_Paint_21
   4981              {
   4982                      ZoneGraph(0,
   4983                      ScreenPaternDesign[PaternDesign].Temperature.Poz.x,
   4984                      ScreenPaternDesign[PaternDesign].Temperature.Poz.y,
   4985                      ScreenPaternDesign[PaternDesign].Temperature.Width,
   4986                      ScreenPaternDesign[PaternDesign].Temperature.Height,
   4987                      Speech[g_leng].Temperatura,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000001EC   82B0               SUB      SP,SP,#+8
   \   000001EE   0020               MOVS     R0,#+0
   \   000001F0   0090               STR      R0,[SP, #+0]
   \   000001F2   1648               LDR      R0,??ScreenDesign1_Paint_0+0x24  ;; 0x753
   \   000001F4   1249               LDR      R1,??ScreenDesign1_Paint_0+0x18  ;; g_leng
   \   000001F6   0968               LDR      R1,[R1, #+0]
   \   000001F8   124A               LDR      R2,??ScreenDesign1_Paint_0+0x1C  ;; 0xa7d
   \   000001FA   5143               MULS     R1,R2,R1
   \   000001FC   124A               LDR      R2,??ScreenDesign1_Paint_0+0x20  ;; Speech
   \   000001FE   5118               ADDS     R1,R2,R1
   \   00000200   0918               ADDS     R1,R1,R0
   \   00000202   E878               LDRB     R0,[R5, #+3]
   \   00000204   03B4               PUSH     {R0,R1}
   \   00000206   AB78               LDRB     R3,[R5, #+2]
   \   00000208   6A78               LDRB     R2,[R5, #+1]
   \   0000020A   2978               LDRB     R1,[R5, #+0]
   \   0000020C   0020               MOVS     R0,#+0
   \   0000020E   ........           BL       ZoneGraph
   \   00000212   04B0               ADD      SP,SP,#+16
   4988                      
   4989          
   4990                      
   4991                      
   4992              }
   4993             }   
   \                     ??ScreenDesign1_Paint_21:
   \   00000214   761C               ADDS     R6,R6,#+1
   \   00000216   3606               LSLS     R6,R6,#+24
   \   00000218   360E               LSRS     R6,R6,#+24
   \                     ??ScreenDesign1_Paint_19:
   \   0000021A   3000               MOVS     R0,R6
   \   0000021C   0228               CMP      R0,#+2
   \   0000021E   DAD3               BCC      ??ScreenDesign1_Paint_20
   4994            
   4995            
   4996          }
   \   00000220   FEBC               POP      {R1-R7}
   \   00000222   01BC               POP      {R0}
   \   00000224   0047               BX       R0               ;; return
   \   00000226   C046               Nop      
   \                     ??ScreenDesign1_Paint_0:
   \   00000228   ........           DC32     TextToChangeLength + 5
   \   0000022C   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000230   ........           DC32     `?<Constant {129, 0}>` + 992
   \   00000234   ........           DC32     `?<Constant {129, 0}>`
   \   00000238   ........           DC32     `?<Constant {129, 0}>` + 16
   \   0000023C   DE030000           DC32     0x3de
   \   00000240   ........           DC32     g_leng
   \   00000244   7D0A0000           DC32     0xa7d
   \   00000248   ........           DC32     Speech
   \   0000024C   53070000           DC32     0x753
   4997          
   4998          
   4999          char ZoneButtonClick=0;
   5000          char ZoneGrapfNrClick=0;
   5001          char ZoneValueNrClick=0;
   5002          char ZoneLabelClick=0;
   5003          int TxtSpaceAvable=0;
   5004          

   \                                 In section Debug.txt, align 4, keep-with-next
   5005          void ScreenDesign1_Event(_Screen* ScreenLokal)
   5006          {
   \                     ScreenDesign1_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   5007            char PaternDesign=ScreenLokal->PaternDesign;
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0290               STR      R0,[SP, #+8]
   5008            
   5009            const _ScreenPaternDesign *ScreenPaternDesign;
   5010            if (CurModifSheet==0) 
   \   00000008   9D4C               LDR      R4,??ScreenDesign1_Event_0  ;; TextToChangeLength
   \   0000000A   6079               LDRB     R0,[R4, #+5]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   02D1               BNE      ??ScreenDesign1_Event_1
   5011            {
   5012              ScreenPaternDesign=ScreenSetTab_0;
   \   00000010   9C48               LDR      R0,??ScreenDesign1_Event_0+0x4  ;; `?<Constant {129, 0}>` + 24
   \   00000012   0090               STR      R0,[SP, #+0]
   \   00000014   01E0               B        ??ScreenDesign1_Event_2
   5013            }else{
   5014              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??ScreenDesign1_Event_1:
   \   00000016   9C48               LDR      R0,??ScreenDesign1_Event_0+0x8  ;; `?<Constant {129, 0}>` + 992
   \   00000018   0090               STR      R0,[SP, #+0]
   5015            }  
   5016            
   5017            
   5018                   char LabelButt[2] = {129,0};
   \                     ??ScreenDesign1_Event_2:
   \   0000001A   01A8               ADD      R0,SP,#+4
   \   0000001C   9B49               LDR      R1,??ScreenDesign1_Event_0+0xC  ;; `?<Constant {129, 0}>_1`
   \   0000001E   0A68               LDR      R2,[R1, #0]
   \   00000020   0260               STR      R2,[R0, #0]
   5019                   if (Button(LabelButt,0,113,13,13)==1)
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0D20               MOVS     R0,#+13
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   0300               MOVS     R3,R0
   \   0000002A   7122               MOVS     R2,#+113
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   03A8               ADD      R0,SP,#+12
   \   00000030   ........           BL       Button
   \   00000034   02B0               ADD      SP,SP,#+8
   \   00000036   0128               CMP      R0,#+1
   \   00000038   16D1               BNE      ??ScreenDesign1_Event_3
   5020                   {
   5021                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000003A   9548               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   0000003C   0078               LDRB     R0,[R0, #+0]
   \   0000003E   0028               CMP      R0,#+0
   \   00000040   0AD1               BNE      ??ScreenDesign1_Event_4
   \   00000042   9448               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   00000044   8021               MOVS     R1,#+128
   \   00000046   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000048   0160               STR      R1,[R0, #+0]
   \   0000004A   934A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   0000004C   9348               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   0000004E   03C8               LDM      R0!,{R0,R1}
   \   00000050   0023               MOVS     R3,#+0
   \   00000052   0830               ADDS     R0,R0,#+8
   \   00000054   5941               ADCS     R1,R1,R3
   \   00000056   03C2               STM      R2!,{R0,R1}
   5022                        MenuLevel=(MenuLevel/10);
   \                     ??ScreenDesign1_Event_4:
   \   00000058   206D               LDR      R0,[R4, #+80]
   \   0000005A   0A21               MOVS     R1,#+10
   \   0000005C   ........           BL       __aeabi_idivmod
   \   00000060   2065               STR      R0,[R4, #+80]
   5023                        MenuPaint();
   \   00000062   ........           BL       MenuPaint
   \   00000066   06E1               B        ??ScreenDesign1_Event_5
   5024                    } 
   \                     ??ScreenDesign1_Event_3:
   \   00000068   0020               MOVS     R0,#+0
   \   0000006A   E075               STRB     R0,[R4, #+23]
   5025                   else
   5026                   {   
   5027                     
   5028                     
   5029                    
   5030                   ZoneButtonClick=0;
   5031                   ZoneGrapfNrClick=0;
   \   0000006C   2076               STRB     R0,[R4, #+24]
   5032                 
   5033                   
   5034              
   5035                   //STREFY przycisków
   5036                    for (char i=0; i<ScrenButtonNr; i++)
   \   0000006E   0500               MOVS     R5,R0
   \   00000070   28E0               B        ??ScreenDesign1_Event_6
   5037                    {
   5038                      if (ScreenPaternDesign[PaternDesign].Button[i].Width>0)
   \                     ??ScreenDesign1_Event_7:
   \   00000072   8000               LSLS     R0,R0,#+2
   \   00000074   3E18               ADDS     R6,R7,R0
   \   00000076   B078               LDRB     R0,[R6, #+2]
   \   00000078   0028               CMP      R0,#+0
   \   0000007A   20D0               BEQ      ??ScreenDesign1_Event_8
   5039                      {
   5040                        if (
   5041                            Zone(0,  //*  (char _Label[15], char poz_ , char poz_Y ,char width, char height, char LineType) 
   5042                            ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   5043                            ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   5044                            ScreenPaternDesign[PaternDesign].Button[i].Width,
   5045                            ScreenPaternDesign[PaternDesign].Button[i].Height,
   5046                            2)==1
   5047                           )
   \   0000007C   0221               MOVS     R1,#+2
   \   0000007E   F078               LDRB     R0,[R6, #+3]
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   B378               LDRB     R3,[R6, #+2]
   \   00000084   7278               LDRB     R2,[R6, #+1]
   \   00000086   3178               LDRB     R1,[R6, #+0]
   \   00000088   0020               MOVS     R0,#+0
   \   0000008A   ........           BL       Zone
   \   0000008E   02B0               ADD      SP,SP,#+8
   \   00000090   0128               CMP      R0,#+1
   \   00000092   14D1               BNE      ??ScreenDesign1_Event_8
   5048                           {
   5049                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000094   7E48               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   0AD1               BNE      ??ScreenDesign1_Event_9
   \   0000009C   7D48               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   0000009E   8021               MOVS     R1,#+128
   \   000000A0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000A2   0160               STR      R1,[R0, #+0]
   \   000000A4   7C4A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   000000A6   7D48               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   000000A8   03C8               LDM      R0!,{R0,R1}
   \   000000AA   0023               MOVS     R3,#+0
   \   000000AC   0830               ADDS     R0,R0,#+8
   \   000000AE   5941               ADCS     R1,R1,R3
   \   000000B0   03C2               STM      R2!,{R0,R1}
   5050                             ZoneButtonClick=i+1;
   \                     ??ScreenDesign1_Event_9:
   \   000000B2   2800               MOVS     R0,R5
   \   000000B4   401C               ADDS     R0,R0,#+1
   \   000000B6   E075               STRB     R0,[R4, #+23]
   5051                             TxtSpaceAvable=ScreenPaternDesign[PaternDesign].Button[i].Width-6;
   \   000000B8   B078               LDRB     R0,[R6, #+2]
   \   000000BA   801F               SUBS     R0,R0,#+6
   \   000000BC   A067               STR      R0,[R4, #+120]
   5052                           }
   5053                      }
   5054                    }
   \                     ??ScreenDesign1_Event_8:
   \   000000BE   6D1C               ADDS     R5,R5,#+1
   \   000000C0   2D06               LSLS     R5,R5,#+24
   \   000000C2   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Event_6:
   \   000000C4   0298               LDR      R0,[SP, #+8]
   \   000000C6   0006               LSLS     R0,R0,#+24
   \   000000C8   000E               LSRS     R0,R0,#+24
   \   000000CA   5821               MOVS     R1,#+88
   \   000000CC   4843               MULS     R0,R1,R0
   \   000000CE   0099               LDR      R1,[SP, #+0]
   \   000000D0   0F18               ADDS     R7,R1,R0
   \   000000D2   2800               MOVS     R0,R5
   \   000000D4   0928               CMP      R0,#+9
   \   000000D6   CCD3               BCC      ??ScreenDesign1_Event_7
   \   000000D8   FF20               MOVS     R0,#+255
   \   000000DA   2076               STRB     R0,[R4, #+24]
   5055                    
   5056          
   5057                     
   5058                     
   5059                     //Strefy grafiki
   5060                     ZoneGrapfNrClick=0xff;
   5061                    for (char i=0; i<ScrenGraphNr; i++)
   \   000000DC   0025               MOVS     R5,#+0
   \   000000DE   28E0               B        ??ScreenDesign1_Event_10
   5062                    {
   5063                      if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??ScreenDesign1_Event_11:
   \   000000E0   8000               LSLS     R0,R0,#+2
   \   000000E2   3E18               ADDS     R6,R7,R0
   \   000000E4   2436               ADDS     R6,R6,#+36
   \   000000E6   B078               LDRB     R0,[R6, #+2]
   \   000000E8   0028               CMP      R0,#+0
   \   000000EA   1FD0               BEQ      ??ScreenDesign1_Event_12
   5064                      {
   5065                        if (
   5066                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   5067                            ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   5068                            ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   5069                            ScreenPaternDesign[PaternDesign].Graph[i].Width,
   5070                            ScreenPaternDesign[PaternDesign].Graph[i].Height,
   5071                            2)==1
   5072                           )
   \   000000EC   0221               MOVS     R1,#+2
   \   000000EE   F078               LDRB     R0,[R6, #+3]
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   B378               LDRB     R3,[R6, #+2]
   \   000000F4   7278               LDRB     R2,[R6, #+1]
   \   000000F6   3178               LDRB     R1,[R6, #+0]
   \   000000F8   0020               MOVS     R0,#+0
   \   000000FA   ........           BL       Zone
   \   000000FE   02B0               ADD      SP,SP,#+8
   \   00000100   0128               CMP      R0,#+1
   \   00000102   13D1               BNE      ??ScreenDesign1_Event_12
   5073                           {
   5074                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000104   6248               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000106   0078               LDRB     R0,[R0, #+0]
   \   00000108   0028               CMP      R0,#+0
   \   0000010A   0AD1               BNE      ??ScreenDesign1_Event_13
   \   0000010C   6148               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   0000010E   8021               MOVS     R1,#+128
   \   00000110   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000112   0160               STR      R1,[R0, #+0]
   \   00000114   604A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   00000116   6148               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   00000118   03C8               LDM      R0!,{R0,R1}
   \   0000011A   0023               MOVS     R3,#+0
   \   0000011C   0830               ADDS     R0,R0,#+8
   \   0000011E   5941               ADCS     R1,R1,R3
   \   00000120   03C2               STM      R2!,{R0,R1}
   5075                             TxtSpaceAvable=ScreenPaternDesign[PaternDesign].Graph[i].Width-6;
   \                     ??ScreenDesign1_Event_13:
   \   00000122   B078               LDRB     R0,[R6, #+2]
   \   00000124   801F               SUBS     R0,R0,#+6
   \   00000126   A067               STR      R0,[R4, #+120]
   5076                             ZoneGrapfNrClick=i;
   \   00000128   2800               MOVS     R0,R5
   \   0000012A   2076               STRB     R0,[R4, #+24]
   5077                           }
   5078                      }
   5079                    }
   \                     ??ScreenDesign1_Event_12:
   \   0000012C   6D1C               ADDS     R5,R5,#+1
   \   0000012E   2D06               LSLS     R5,R5,#+24
   \   00000130   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Event_10:
   \   00000132   2800               MOVS     R0,R5
   \   00000134   0428               CMP      R0,#+4
   \   00000136   D3D3               BCC      ??ScreenDesign1_Event_11
   5080                    
   5081          
   5082                    //Strefy analogów
   5083                    ZoneValueNrClick=0xff;
   \   00000138   FF20               MOVS     R0,#+255
   \   0000013A   6076               STRB     R0,[R4, #+25]
   5084                    for (char i=0; i<ScrenAnalogNr; i++)
   \   0000013C   0025               MOVS     R5,#+0
   \   0000013E   25E0               B        ??ScreenDesign1_Event_14
   5085                    {
   5086                      if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
   \                     ??ScreenDesign1_Event_15:
   \   00000140   8000               LSLS     R0,R0,#+2
   \   00000142   3E18               ADDS     R6,R7,R0
   \   00000144   3436               ADDS     R6,R6,#+52
   \   00000146   B078               LDRB     R0,[R6, #+2]
   \   00000148   0028               CMP      R0,#+0
   \   0000014A   1CD0               BEQ      ??ScreenDesign1_Event_16
   5087                      {
   5088                        if (
   5089                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   5090                            ScreenPaternDesign[PaternDesign].Value[i].Poz.x,
   5091                            ScreenPaternDesign[PaternDesign].Value[i].Poz.y,
   5092                            ScreenPaternDesign[PaternDesign].Value[i].Width,
   5093                            ScreenPaternDesign[PaternDesign].Value[i].Height,
   5094                            2)==1
   5095                           )
   \   0000014C   0221               MOVS     R1,#+2
   \   0000014E   F078               LDRB     R0,[R6, #+3]
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   B378               LDRB     R3,[R6, #+2]
   \   00000154   7278               LDRB     R2,[R6, #+1]
   \   00000156   3178               LDRB     R1,[R6, #+0]
   \   00000158   0020               MOVS     R0,#+0
   \   0000015A   ........           BL       Zone
   \   0000015E   02B0               ADD      SP,SP,#+8
   \   00000160   0128               CMP      R0,#+1
   \   00000162   10D1               BNE      ??ScreenDesign1_Event_16
   5096                           {
   5097                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000164   4A48               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000166   0078               LDRB     R0,[R0, #+0]
   \   00000168   0028               CMP      R0,#+0
   \   0000016A   0AD1               BNE      ??ScreenDesign1_Event_17
   \   0000016C   4948               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   0000016E   8021               MOVS     R1,#+128
   \   00000170   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000172   0160               STR      R1,[R0, #+0]
   \   00000174   484A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   00000176   4948               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   00000178   03C8               LDM      R0!,{R0,R1}
   \   0000017A   0023               MOVS     R3,#+0
   \   0000017C   0830               ADDS     R0,R0,#+8
   \   0000017E   5941               ADCS     R1,R1,R3
   \   00000180   03C2               STM      R2!,{R0,R1}
   5098                             ZoneValueNrClick=i;
   \                     ??ScreenDesign1_Event_17:
   \   00000182   2800               MOVS     R0,R5
   \   00000184   6076               STRB     R0,[R4, #+25]
   5099                           }
   5100                      }
   5101                    }
   \                     ??ScreenDesign1_Event_16:
   \   00000186   6D1C               ADDS     R5,R5,#+1
   \   00000188   2D06               LSLS     R5,R5,#+24
   \   0000018A   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Event_14:
   \   0000018C   2800               MOVS     R0,R5
   \   0000018E   0428               CMP      R0,#+4
   \   00000190   D6D3               BCC      ??ScreenDesign1_Event_15
   5102                    
   5103                    
   5104                    
   5105                    
   5106                       //Du¿a temperatura
   5107                     char  ZoneTemperature=0;
   \   00000192   0025               MOVS     R5,#+0
   5108          
   5109                      if (ScreenPaternDesign[PaternDesign].Temperature.Width>0)
   \   00000194   4C37               ADDS     R7,R7,#+76
   \   00000196   B878               LDRB     R0,[R7, #+2]
   \   00000198   0028               CMP      R0,#+0
   \   0000019A   1BD0               BEQ      ??ScreenDesign1_Event_18
   5110                      {   
   5111                            if(
   5112                                Zone(0,
   5113                                ScreenPaternDesign[PaternDesign].Temperature.Poz.x,
   5114                                ScreenPaternDesign[PaternDesign].Temperature.Poz.y,
   5115                                ScreenPaternDesign[PaternDesign].Temperature.Width,
   5116                                ScreenPaternDesign[PaternDesign].Temperature.Height,
   5117                                2)==1  
   5118                              )
   \   0000019C   0221               MOVS     R1,#+2
   \   0000019E   F878               LDRB     R0,[R7, #+3]
   \   000001A0   03B4               PUSH     {R0,R1}
   \   000001A2   BB78               LDRB     R3,[R7, #+2]
   \   000001A4   7A78               LDRB     R2,[R7, #+1]
   \   000001A6   3978               LDRB     R1,[R7, #+0]
   \   000001A8   2800               MOVS     R0,R5
   \   000001AA   ........           BL       Zone
   \   000001AE   02B0               ADD      SP,SP,#+8
   \   000001B0   0128               CMP      R0,#+1
   \   000001B2   0FD1               BNE      ??ScreenDesign1_Event_18
   5119                             {
   5120                               if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                            ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000001B4   3648               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   000001B6   0078               LDRB     R0,[R0, #+0]
   \   000001B8   0028               CMP      R0,#+0
   \   000001BA   0AD1               BNE      ??ScreenDesign1_Event_19
   \   000001BC   3548               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   000001BE   8021               MOVS     R1,#+128
   \   000001C0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000001C2   0160               STR      R1,[R0, #+0]
   \   000001C4   344A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   000001C6   3548               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   000001C8   03C8               LDM      R0!,{R0,R1}
   \   000001CA   0023               MOVS     R3,#+0
   \   000001CC   0830               ADDS     R0,R0,#+8
   \   000001CE   5941               ADCS     R1,R1,R3
   \   000001D0   03C2               STM      R2!,{R0,R1}
   5121                               ZoneTemperature=1;
   \                     ??ScreenDesign1_Event_19:
   \   000001D2   0125               MOVS     R5,#+1
   5122                             }
   5123                     }
   5124                    
   5125          
   5126                    //Strefa etykiety podstrony
   5127                     ZoneLabelClick=0;
   \                     ??ScreenDesign1_Event_18:
   \   000001D4   0020               MOVS     R0,#+0
   \   000001D6   A076               STRB     R0,[R4, #+26]
   5128          
   5129                     if (CurModifSheet>0) 
   \   000001D8   6079               LDRB     R0,[R4, #+5]
   \   000001DA   0028               CMP      R0,#+0
   \   000001DC   0CD0               BEQ      ??ScreenDesign1_Event_20
   5130                    {
   5131                        if (
   5132                            Zone(0, 15,114,38,12,
   5133                            2)==1
   5134                           )
   \   000001DE   0221               MOVS     R1,#+2
   \   000001E0   0C20               MOVS     R0,#+12
   \   000001E2   03B4               PUSH     {R0,R1}
   \   000001E4   2623               MOVS     R3,#+38
   \   000001E6   7222               MOVS     R2,#+114
   \   000001E8   0F21               MOVS     R1,#+15
   \   000001EA   0020               MOVS     R0,#+0
   \   000001EC   ........           BL       Zone
   \   000001F0   02B0               ADD      SP,SP,#+8
   \   000001F2   0128               CMP      R0,#+1
   \   000001F4   00D1               BNE      ??ScreenDesign1_Event_20
   5135                           {
   5136                             ZoneLabelClick=1;
   \   000001F6   A076               STRB     R0,[R4, #+26]
   5137                           }          
   5138                    } 
   5139                    
   5140                        
   5141                    
   5142                   
   5143                    
   5144          
   5145                   
   5146                     if (ZoneButtonClick>0)
   \                     ??ScreenDesign1_Event_20:
   \   000001F8   E07D               LDRB     R0,[R4, #+23]
   \   000001FA   0028               CMP      R0,#+0
   \   000001FC   0BD0               BEQ      ??ScreenDesign1_Event_21
   5147                     {
   5148                       //TextToChange=ScreenLokal->Button[ZoneButtonClick-1].Text;
   5149                       ButtonToChange=&(ScreenLokal->Button[ZoneButtonClick-1]);
   \   000001FE   C000               LSLS     R0,R0,#+3
   \   00000200   0499               LDR      R1,[SP, #+16]
   \   00000202   0818               ADDS     R0,R1,R0
   \   00000204   C01C               ADDS     R0,R0,#+3
   \   00000206   E065               STR      R0,[R4, #+92]
   5150                       MenuLevel=(MenuLevel*10+4); MenuPaint();
   \   00000208   206D               LDR      R0,[R4, #+80]
   \   0000020A   0A21               MOVS     R1,#+10
   \   0000020C   4843               MULS     R0,R1,R0
   \   0000020E   001D               ADDS     R0,R0,#+4
   \   00000210   2065               STR      R0,[R4, #+80]
   \   00000212   ........           BL       MenuPaint
   5151                     }
   5152                    
   5153                    if (ZoneValueNrClick<0xFF)
   \                     ??ScreenDesign1_Event_21:
   \   00000216   607E               LDRB     R0,[R4, #+25]
   \   00000218   FF28               CMP      R0,#+255
   \   0000021A   0CD0               BEQ      ??ScreenDesign1_Event_22
   5154                     {
   5155                       AnalogToChange=&(ScreenLokal->Analog[ZoneValueNrClick]);
   \   0000021C   0721               MOVS     R1,#+7
   \   0000021E   4843               MULS     R0,R1,R0
   \   00000220   0499               LDR      R1,[SP, #+16]
   \   00000222   0818               ADDS     R0,R1,R0
   \   00000224   6F30               ADDS     R0,R0,#+111
   \   00000226   E066               STR      R0,[R4, #+108]
   5156                       MenuLevel=(MenuLevel*10+3); MenuPaint();
   \   00000228   206D               LDR      R0,[R4, #+80]
   \   0000022A   0A21               MOVS     R1,#+10
   \   0000022C   4843               MULS     R0,R1,R0
   \   0000022E   C01C               ADDS     R0,R0,#+3
   \   00000230   2065               STR      R0,[R4, #+80]
   \   00000232   ........           BL       MenuPaint
   5157                     }
   5158                    
   5159                   
   5160                     if (ZoneLabelClick>0)
   \                     ??ScreenDesign1_Event_22:
   \   00000236   A07E               LDRB     R0,[R4, #+26]
   \   00000238   0028               CMP      R0,#+0
   \   0000023A   09D0               BEQ      ??ScreenDesign1_Event_23
   5161                     {
   5162                       TextToChange=ScreenLokal->Label;
   \   0000023C   0498               LDR      R0,[SP, #+16]
   \   0000023E   401C               ADDS     R0,R0,#+1
   \   00000240   A065               STR      R0,[R4, #+88]
   5163                       MenuLevel=(MenuLevel*10+2); MenuPaint();
   \   00000242   206D               LDR      R0,[R4, #+80]
   \   00000244   0A21               MOVS     R1,#+10
   \   00000246   4843               MULS     R0,R1,R0
   \   00000248   801C               ADDS     R0,R0,#+2
   \   0000024A   2065               STR      R0,[R4, #+80]
   \   0000024C   ........           BL       MenuPaint
   5164                     }
   5165                     
   5166                     if (ZoneTemperature>0)
   \                     ??ScreenDesign1_Event_23:
   \   00000250   002D               CMP      R5,#+0
   \   00000252   06D0               BEQ      ??ScreenDesign1_Event_24
   5167                     {
   5168                       MenuLevel=(MenuLevel*10+5); MenuPaint();
   \   00000254   206D               LDR      R0,[R4, #+80]
   \   00000256   0A21               MOVS     R1,#+10
   \   00000258   4843               MULS     R0,R1,R0
   \   0000025A   401D               ADDS     R0,R0,#+5
   \   0000025C   2065               STR      R0,[R4, #+80]
   \   0000025E   ........           BL       MenuPaint
   5169                     }          
   5170             
   5171                    
   5172                     if (ZoneGrapfNrClick!=0xFF){MenuLevel=(MenuLevel*10+1); MenuPaint();}
   \                     ??ScreenDesign1_Event_24:
   \   00000262   207E               LDRB     R0,[R4, #+24]
   \   00000264   FF28               CMP      R0,#+255
   \   00000266   06D0               BEQ      ??ScreenDesign1_Event_5
   \   00000268   206D               LDR      R0,[R4, #+80]
   \   0000026A   0A21               MOVS     R1,#+10
   \   0000026C   4843               MULS     R0,R1,R0
   \   0000026E   401C               ADDS     R0,R0,#+1
   \   00000270   2065               STR      R0,[R4, #+80]
   \   00000272   ........           BL       MenuPaint
   5173           
   5174                  
   5175                      
   5176                     
   5177                   
   5178            
   5179                   }
   5180                   
   5181                   
   5182          }
   \                     ??ScreenDesign1_Event_5:
   \   00000276   05B0               ADD      SP,SP,#+20
   \   00000278   F0BC               POP      {R4-R7}
   \   0000027A   01BC               POP      {R0}
   \   0000027C   0047               BX       R0               ;; return
   \   0000027E   C046               Nop      
   \                     ??ScreenDesign1_Event_0:
   \   00000280   ........           DC32     TextToChangeLength
   \   00000284   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000288   ........           DC32     `?<Constant {129, 0}>` + 992
   \   0000028C   ........           DC32     `?<Constant {129, 0}>_1`
   \   00000290   E9D71300           DC32     0x13d7e9
   \   00000294   30F4FFFF           DC32     0xfffff430
   \   00000298   ........           DC32     ButtonBipCounter
   \   0000029C   ........           DC32     g_counter
   5183          
   5184          
   5185          
   5186          

   \                                 In section Debug.txt, align 4, keep-with-next
   5187          void ButtonOptions_Paint(volatile _ButtonGraph *ButtonGraph)
   5188          {
   \                     ButtonOptions_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   5189           RowsPoz=0;
   \   00000004   1948               LDR      R0,??ButtonOptions_Paint_0  ;; RowsPoz
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0170               STRB     R1,[R0, #+0]
   5190          
   5191           List_Paint(
   5192                        Speech[g_leng].Przycisk, //(char name[7]
   5193                        3,        //char Rows,
   5194                        15,       //char RowWith,
   5195                        0,        //char Y,
   5196                        0,        //char FormStyle,
   5197                        3,        //char algin,
   5198                        Speech[g_leng].Text, Speech[g_leng].Akcja, Speech[g_leng].Ukryj," ",0,0,0,0); //char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000A   1948               LDR      R0,??ButtonOptions_Paint_0+0x4  ;; g_leng
   \   0000000C   0068               LDR      R0,[R0, #+0]
   \   0000000E   1949               LDR      R1,??ButtonOptions_Paint_0+0x8  ;; 0xa7d
   \   00000010   4843               MULS     R0,R1,R0
   \   00000012   1949               LDR      R1,??ButtonOptions_Paint_0+0xC  ;; Speech
   \   00000014   0D18               ADDS     R5,R1,R0
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0800               MOVS     R0,R1
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   17A1               ADR      R1,??ButtonOptions_Paint_0+0x10  ;; 0x20, 0x00, 0x00, 0x00
   \   00000020   1748               LDR      R0,??ButtonOptions_Paint_0+0x14  ;; 0x726
   \   00000022   2818               ADDS     R0,R5,R0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   1748               LDR      R0,??ButtonOptions_Paint_0+0x18  ;; 0x5fa
   \   00000028   2918               ADDS     R1,R5,R0
   \   0000002A   1748               LDR      R0,??ButtonOptions_Paint_0+0x1C  ;; 0x717
   \   0000002C   2818               ADDS     R0,R5,R0
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0321               MOVS     R1,#+3
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   0300               MOVS     R3,R0
   \   00000038   0F22               MOVS     R2,#+15
   \   0000003A   1448               LDR      R0,??ButtonOptions_Paint_0+0x20  ;; 0x5eb
   \   0000003C   2818               ADDS     R0,R5,R0
   \   0000003E   ........           BL       List_Paint
   \   00000042   0AB0               ADD      SP,SP,#+40
   5199              
   5200                     //znacznik ukrycia przycisku
   5201                   if (ButtonGraph->Hide)
   \   00000044   E079               LDRB     R0,[R4, #+7]
   \   00000046   C006               LSLS     R0,R0,#+27
   \   00000048   0DD5               BPL      ??ButtonOptions_Paint_1
   5202                        {
   5203                              
   5204                          char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000004A   6846               MOV      R0,SP
   \   0000004C   1049               LDR      R1,??ButtonOptions_Paint_0+0x24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`
   \   0000004E   1CC9               LDM      R1!,{R2-R4}
   \   00000050   1CC0               STM      R0!,{R2-R4}
   5205                          CopyToCanvasPoint((char *)ekran_tab,50,97-(15*(2)),8,10); 
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   0A20               MOVS     R0,#+10
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   0823               MOVS     R3,#+8
   \   0000005A   4322               MOVS     R2,#+67
   \   0000005C   3221               MOVS     R1,#+50
   \   0000005E   02A8               ADD      R0,SP,#+8
   \   00000060   ........           BL       CopyToCanvasPoint
   \   00000064   02B0               ADD      SP,SP,#+8
   5206                        }    
   5207          }
   \                     ??ButtonOptions_Paint_1:
   \   00000066   3EBC               POP      {R1-R5}
   \   00000068   01BC               POP      {R0}
   \   0000006A   0047               BX       R0               ;; return
   \                     ??ButtonOptions_Paint_0:
   \   0000006C   ........           DC32     RowsPoz
   \   00000070   ........           DC32     g_leng
   \   00000074   7D0A0000           DC32     0xa7d
   \   00000078   ........           DC32     Speech
   \   0000007C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000080   26070000           DC32     0x726
   \   00000084   FA050000           DC32     0x5fa
   \   00000088   17070000           DC32     0x717
   \   0000008C   EB050000           DC32     0x5eb
   \   00000090   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`
   5208          
   5209          

   \                                 In section Debug.txt, align 4, keep-with-next
   5210          void ButtonOptions_Event(volatile _ButtonGraph *ButtonGraph)
   5211          {
   \                     ButtonOptions_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   5212            int odp=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,0);
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0320               MOVS     R0,#+3
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   1D48               LDR      R0,??ButtonOptions_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   1D48               LDR      R0,??ButtonOptions_Event_0+0x4  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1D48               LDR      R0,??ButtonOptions_Event_0+0x8  ;; Y_up
   \   0000001C   415E               LDRSH    R1,[R0, R1]
   \   0000001E   1D48               LDR      R0,??ButtonOptions_Event_0+0xC  ;; X_up
   \   00000020   0025               MOVS     R5,#+0
   \   00000022   405F               LDRSH    R0,[R0, R5]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   5213            if (odp<0) 
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   08D5               BPL      ??ButtonOptions_Event_1
   5214                  {
   5215                    MenuLevel=(MenuLevel/10);
   \   0000002E   1A4D               LDR      R5,??ButtonOptions_Event_0+0x10  ;; TextToChangeLength
   \   00000030   286D               LDR      R0,[R5, #+80]
   \   00000032   0A21               MOVS     R1,#+10
   \   00000034   ........           BL       __aeabi_idivmod
   \   00000038   2865               STR      R0,[R5, #+80]
   5216                    MenuPaint();
   \   0000003A   ........           BL       MenuPaint
   \   0000003E   1FE0               B        ??ButtonOptions_Event_2
   5217                  }else if (odp>0) 
   \                     ??ButtonOptions_Event_1:
   \   00000040   0128               CMP      R0,#+1
   \   00000042   1DDB               BLT      ??ButtonOptions_Event_2
   5218                  {
   5219                   
   5220                    if  (odp<3)
   \   00000044   0328               CMP      R0,#+3
   \   00000046   0EDA               BGE      ??ButtonOptions_Event_3
   5221                    {
   5222                      if (odp==1) {
   \   00000048   0128               CMP      R0,#+1
   \   0000004A   05D1               BNE      ??ButtonOptions_Event_4
   5223                        TextToChange=(char*)ButtonGraph->Text; 
   \   0000004C   124D               LDR      R5,??ButtonOptions_Event_0+0x10  ;; TextToChangeLength
   \   0000004E   AC65               STR      R4,[R5, #+88]
   5224                        TextToChangeLength=ButonMaxText;
   \   00000050   0721               MOVS     R1,#+7
   \   00000052   2970               STRB     R1,[R5, #+0]
   5225                        TextToChangeMaxPixSize=TxtSpaceAvable;
   \   00000054   A96F               LDR      R1,[R5, #+120]
   \   00000056   6970               STRB     R1,[R5, #+1]
   5226                      }
   5227                      MenuLevel=(MenuLevel*10)+odp; 
   \                     ??ButtonOptions_Event_4:
   \   00000058   0F4D               LDR      R5,??ButtonOptions_Event_0+0x10  ;; TextToChangeLength
   \   0000005A   296D               LDR      R1,[R5, #+80]
   \   0000005C   0A22               MOVS     R2,#+10
   \   0000005E   5143               MULS     R1,R2,R1
   \   00000060   0818               ADDS     R0,R1,R0
   \   00000062   2865               STR      R0,[R5, #+80]
   \   00000064   0AE0               B        ??ButtonOptions_Event_5
   5228                    }else{
   5229                      if (ButtonGraph->Hide) ButtonGraph->Hide=0; else ButtonGraph->Hide=1; 
   \                     ??ButtonOptions_Event_3:
   \   00000066   E079               LDRB     R0,[R4, #+7]
   \   00000068   C006               LSLS     R0,R0,#+27
   \   0000006A   E079               LDRB     R0,[R4, #+7]
   \   0000006C   03D5               BPL      ??ButtonOptions_Event_6
   \   0000006E   EF21               MOVS     R1,#+239
   \   00000070   0140               ANDS     R1,R1,R0
   \   00000072   E171               STRB     R1,[R4, #+7]
   \   00000074   02E0               B        ??ButtonOptions_Event_5
   \                     ??ButtonOptions_Event_6:
   \   00000076   1021               MOVS     R1,#+16
   \   00000078   0143               ORRS     R1,R1,R0
   \   0000007A   E171               STRB     R1,[R4, #+7]
   5230                    }
   5231                   
   5232                    MenuPaint();
   \                     ??ButtonOptions_Event_5:
   \   0000007C   ........           BL       MenuPaint
   5233                  }
   5234                    
   5235                    
   5236                    
   5237                  
   5238          }
   \                     ??ButtonOptions_Event_2:
   \   00000080   38BC               POP      {R3-R5}
   \   00000082   01BC               POP      {R0}
   \   00000084   0047               BX       R0               ;; return
   \   00000086   C046               Nop      
   \                     ??ButtonOptions_Event_0:
   \   00000088   ........           DC32     Y_down
   \   0000008C   ........           DC32     X_down
   \   00000090   ........           DC32     Y_up
   \   00000094   ........           DC32     X_up
   \   00000098   ........           DC32     TextToChangeLength
   5239          
   5240          

   \                                 In section Debug.txt, align 4, keep-with-next
   5241          void ButtonAction_Paint(volatile _ButtonGraph *ButtonGraph)
   5242          {
   \                     ButtonAction_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   5243          
   5244            List_Paint(Speech[g_leng].Akcja,1,98,0,0,0,"",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   454D               LDR      R5,??ButtonAction_Paint_0  ;; 0xa7d
   \   00000006   464E               LDR      R6,??ButtonAction_Paint_0+0x4  ;; g_leng
   \   00000008   464F               LDR      R7,??ButtonAction_Paint_0+0x8  ;; Speech
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   44A0               ADR      R0,??ButtonAction_Paint_0+0xC  ;; 0x00, 0x00, 0x00, 0x00
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0800               MOVS     R0,R1
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   6222               MOVS     R2,#+98
   \   00000020   0121               MOVS     R1,#+1
   \   00000022   8C46               MOV      R12,R1
   \   00000024   4149               LDR      R1,??ButtonAction_Paint_0+0x10  ;; 0x5fa
   \   00000026   3068               LDR      R0,[R6, #+0]
   \   00000028   6843               MULS     R0,R5,R0
   \   0000002A   3818               ADDS     R0,R7,R0
   \   0000002C   4018               ADDS     R0,R0,R1
   \   0000002E   6146               MOV      R1,R12
   \   00000030   ........           BL       List_Paint
   \   00000034   0AB0               ADD      SP,SP,#+40
   5245               
   5246            
   5247            Button("< ",3,71,16,23);
   \   00000036   82B0               SUB      SP,SP,#+8
   \   00000038   1720               MOVS     R0,#+23
   \   0000003A   0090               STR      R0,[SP, #+0]
   \   0000003C   1023               MOVS     R3,#+16
   \   0000003E   4722               MOVS     R2,#+71
   \   00000040   0321               MOVS     R1,#+3
   \   00000042   3BA0               ADR      R0,??ButtonAction_Paint_0+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000044   ........           BL       Button
   \   00000048   02B0               ADD      SP,SP,#+8
   5248            Button("> ",44,71,16,23);
   \   0000004A   82B0               SUB      SP,SP,#+8
   \   0000004C   1720               MOVS     R0,#+23
   \   0000004E   0090               STR      R0,[SP, #+0]
   \   00000050   1023               MOVS     R3,#+16
   \   00000052   4722               MOVS     R2,#+71
   \   00000054   2C21               MOVS     R1,#+44
   \   00000056   37A0               ADR      R0,??ButtonAction_Paint_0+0x18  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000058   ........           BL       Button
   \   0000005C   02B0               ADD      SP,SP,#+8
   5249            
   5250            
   5251            Label(Speech[g_leng].OtworzStrone,0,3,96,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005E   82B0               SUB      SP,SP,#+8
   \   00000060   0020               MOVS     R0,#+0
   \   00000062   0090               STR      R0,[SP, #+0]
   \   00000064   7F21               MOVS     R1,#+127
   \   00000066   0120               MOVS     R0,#+1
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   3A21               MOVS     R1,#+58
   \   0000006C   0F20               MOVS     R0,#+15
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   6023               MOVS     R3,#+96
   \   00000072   0322               MOVS     R2,#+3
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   8C46               MOV      R12,R1
   \   00000078   2F49               LDR      R1,??ButtonAction_Paint_0+0x1C  ;; 0x609
   \   0000007A   3068               LDR      R0,[R6, #+0]
   \   0000007C   6843               MULS     R0,R5,R0
   \   0000007E   3818               ADDS     R0,R7,R0
   \   00000080   4018               ADDS     R0,R0,R1
   \   00000082   6146               MOV      R1,R12
   \   00000084   ........           BL       Label
   \   00000088   06B0               ADD      SP,SP,#+24
   5252            
   5253            char txt[5]={'N','r', ':',0,0};
   \   0000008A   6846               MOV      R0,SP
   \   0000008C   2B49               LDR      R1,??ButtonAction_Paint_0+0x20  ;; `?<Constant {78, 114, 58, 0, 0}>`
   \   0000008E   0CC9               LDM      R1!,{R2,R3}
   \   00000090   0CC0               STM      R0!,{R2,R3}
   5254            if (ButtonGraph->OpenPage==0)
   \   00000092   0F20               MOVS     R0,#+15
   \   00000094   E179               LDRB     R1,[R4, #+7]
   \   00000096   0142               TST      R1,R0
   \   00000098   15D1               BNE      ??ButtonAction_Paint_1
   5255            {
   5256                Label(Speech[g_leng].Wyl,0,23,75,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   7F21               MOVS     R1,#+127
   \   000000A2   0120               MOVS     R0,#+1
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   1421               MOVS     R1,#+20
   \   000000A8   0520               MOVS     R0,#+5
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   4B23               MOVS     R3,#+75
   \   000000AE   1722               MOVS     R2,#+23
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   C320               MOVS     R0,#+195
   \   000000B4   C000               LSLS     R0,R0,#+3        ;; #+1560
   \   000000B6   3468               LDR      R4,[R6, #+0]
   \   000000B8   6C43               MULS     R4,R5,R4
   \   000000BA   3C19               ADDS     R4,R7,R4
   \   000000BC   2018               ADDS     R0,R4,R0
   \   000000BE   ........           BL       Label
   \   000000C2   06B0               ADD      SP,SP,#+24
   \   000000C4   27E0               B        ??ButtonAction_Paint_2
   5257          
   5258            }else{
   5259                CharToStr(ButtonGraph->OpenPage-1, &txt[3], 1); //(char Value, char *Vstring, char ill);
   \                     ??ButtonAction_Paint_1:
   \   000000C6   0122               MOVS     R2,#+1
   \   000000C8   6946               MOV      R1,SP
   \   000000CA   C91C               ADDS     R1,R1,#+3
   \   000000CC   E379               LDRB     R3,[R4, #+7]
   \   000000CE   1840               ANDS     R0,R0,R3
   \   000000D0   401E               SUBS     R0,R0,#+1
   \   000000D2   0006               LSLS     R0,R0,#+24
   \   000000D4   000E               LSRS     R0,R0,#+24
   \   000000D6   ........           BL       CharToStr
   5260                Label(txt,0,22,76,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0020               MOVS     R0,#+0
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   7F21               MOVS     R1,#+127
   \   000000E2   0120               MOVS     R0,#+1
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   1421               MOVS     R1,#+20
   \   000000E8   0520               MOVS     R0,#+5
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   4C23               MOVS     R3,#+76
   \   000000EE   1622               MOVS     R2,#+22
   \   000000F0   0021               MOVS     R1,#+0
   \   000000F2   06A8               ADD      R0,SP,#+24
   \   000000F4   ........           BL       Label
   \   000000F8   06B0               ADD      SP,SP,#+24
   5261          
   5262                Button(Speech[g_leng].Konfiguracja,3,54,57,14);
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   0E20               MOVS     R0,#+14
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   3923               MOVS     R3,#+57
   \   00000102   3622               MOVS     R2,#+54
   \   00000104   0321               MOVS     R1,#+3
   \   00000106   0E48               LDR      R0,??ButtonAction_Paint_0+0x24  ;; 0x2df
   \   00000108   3468               LDR      R4,[R6, #+0]
   \   0000010A   6C43               MULS     R4,R5,R4
   \   0000010C   3C19               ADDS     R4,R7,R4
   \   0000010E   2018               ADDS     R0,R4,R0
   \   00000110   ........           BL       Button
   \   00000114   02B0               ADD      SP,SP,#+8
   5263            }
   5264            
   5265          }
   \                     ??ButtonAction_Paint_2:
   \   00000116   FEBC               POP      {R1-R7}
   \   00000118   01BC               POP      {R0}
   \   0000011A   0047               BX       R0               ;; return
   \                     ??ButtonAction_Paint_0:
   \   0000011C   7D0A0000           DC32     0xa7d
   \   00000120   ........           DC32     g_leng
   \   00000124   ........           DC32     Speech
   \   00000128   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   0000012C   FA050000           DC32     0x5fa
   \   00000130   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000134   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000138   09060000           DC32     0x609
   \   0000013C   ........           DC32     `?<Constant {78, 114, 58, 0, 0}>`
   \   00000140   DF020000           DC32     0x2df
   5266          
   5267          

   \                                 In section Debug.txt, align 4, keep-with-next
   5268          void ButtonAction_Event(volatile _ButtonGraph *ButtonGraph)
   5269          {
   \                     ButtonAction_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   5270            char MenuPaintExecute=0;
   \   00000004   0025               MOVS     R5,#+0
   5271            int odp=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   5272            if (odp<0) 
   \   00000006   2900               MOVS     R1,R5
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   4A48               LDR      R0,??ButtonAction_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   4A48               LDR      R0,??ButtonAction_Event_0+0x4  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   4A48               LDR      R0,??ButtonAction_Event_0+0x8  ;; Y_up
   \   0000001C   415E               LDRSH    R1,[R0, R1]
   \   0000001E   4A48               LDR      R0,??ButtonAction_Event_0+0xC  ;; X_up
   \   00000020   0026               MOVS     R6,#+0
   \   00000022   805F               LDRSH    R0,[R0, R6]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   07D5               BPL      ??ButtonAction_Event_1
   5273                  {
   5274                    MenuLevel=(MenuLevel/10);
   \   0000002E   474D               LDR      R5,??ButtonAction_Event_0+0x10  ;; TextToChangeLength
   \   00000030   286D               LDR      R0,[R5, #+80]
   \   00000032   0A21               MOVS     R1,#+10
   \   00000034   ........           BL       __aeabi_idivmod
   \   00000038   2865               STR      R0,[R5, #+80]
   5275                    MenuPaintExecute=1;
   \   0000003A   0125               MOVS     R5,#+1
   \   0000003C   76E0               B        ??ButtonAction_Event_2
   5276                  }else 
   5277                  {
   5278                    if ((Button("< ",3,71,16,23)==1) && (ButtonGraph->OpenPage>0))  
   \                     ??ButtonAction_Event_1:
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   1720               MOVS     R0,#+23
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   1023               MOVS     R3,#+16
   \   00000046   4722               MOVS     R2,#+71
   \   00000048   0321               MOVS     R1,#+3
   \   0000004A   41A0               ADR      R0,??ButtonAction_Event_0+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   0000004C   ........           BL       Button
   \   00000050   02B0               ADD      SP,SP,#+8
   \   00000052   0128               CMP      R0,#+1
   \   00000054   20D1               BNE      ??ButtonAction_Event_3
   \   00000056   0F20               MOVS     R0,#+15
   \   00000058   E179               LDRB     R1,[R4, #+7]
   \   0000005A   0142               TST      R1,R0
   \   0000005C   1CD0               BEQ      ??ButtonAction_Event_3
   5279                    { 
   5280                      if ((ButtonGraph->OpenPage-1)!=CurModifSheet+1)
   \   0000005E   E179               LDRB     R1,[R4, #+7]
   \   00000060   0140               ANDS     R1,R1,R0
   \   00000062   491E               SUBS     R1,R1,#+1
   \   00000064   3B4A               LDR      R2,??ButtonAction_Event_0+0x18  ;; TextToChangeLength + 5
   \   00000066   1278               LDRB     R2,[R2, #+0]
   \   00000068   521C               ADDS     R2,R2,#+1
   \   0000006A   9142               CMP      R1,R2
   \   0000006C   E179               LDRB     R1,[R4, #+7]
   \   0000006E   07D0               BEQ      ??ButtonAction_Event_4
   5281                      {
   5282                        ButtonGraph->OpenPage--;  MenuPaintExecute=1;
   \   00000070   F022               MOVS     R2,#+240
   \   00000072   0A40               ANDS     R2,R2,R1
   \   00000074   491E               SUBS     R1,R1,#+1
   \   00000076   0840               ANDS     R0,R0,R1
   \   00000078   1043               ORRS     R0,R0,R2
   \   0000007A   E071               STRB     R0,[R4, #+7]
   \   0000007C   0125               MOVS     R5,#+1
   \   0000007E   0BE0               B        ??ButtonAction_Event_3
   5283                      }else if ((ButtonGraph->OpenPage-1)>0)
   \                     ??ButtonAction_Event_4:
   \   00000080   0140               ANDS     R1,R1,R0
   \   00000082   491E               SUBS     R1,R1,#+1
   \   00000084   0129               CMP      R1,#+1
   \   00000086   07DB               BLT      ??ButtonAction_Event_3
   5284                      {
   5285                        ButtonGraph->OpenPage -=2;  MenuPaintExecute=1;
   \   00000088   E179               LDRB     R1,[R4, #+7]
   \   0000008A   F022               MOVS     R2,#+240
   \   0000008C   0A40               ANDS     R2,R2,R1
   \   0000008E   891E               SUBS     R1,R1,#+2
   \   00000090   0840               ANDS     R0,R0,R1
   \   00000092   1043               ORRS     R0,R0,R2
   \   00000094   E071               STRB     R0,[R4, #+7]
   \   00000096   0125               MOVS     R5,#+1
   5286                      }
   5287                    } 
   5288                    if ((Button("> ",44,71,16,23)==1) && (ButtonGraph->OpenPage<ScreenNr)) 
   \                     ??ButtonAction_Event_3:
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   1720               MOVS     R0,#+23
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   1023               MOVS     R3,#+16
   \   000000A0   4722               MOVS     R2,#+71
   \   000000A2   2C21               MOVS     R1,#+44
   \   000000A4   2CA0               ADR      R0,??ButtonAction_Event_0+0x1C  ;; 0x3E, 0x20, 0x00, 0x00
   \   000000A6   ........           BL       Button
   \   000000AA   02B0               ADD      SP,SP,#+8
   \   000000AC   0128               CMP      R0,#+1
   \   000000AE   21D1               BNE      ??ButtonAction_Event_5
   \   000000B0   0F20               MOVS     R0,#+15
   \   000000B2   E179               LDRB     R1,[R4, #+7]
   \   000000B4   0140               ANDS     R1,R1,R0
   \   000000B6   0829               CMP      R1,#+8
   \   000000B8   1CD2               BCS      ??ButtonAction_Event_5
   5289                    {
   5290                       if ((ButtonGraph->OpenPage+1)!=CurModifSheet+1)
   \   000000BA   E179               LDRB     R1,[R4, #+7]
   \   000000BC   0140               ANDS     R1,R1,R0
   \   000000BE   254A               LDR      R2,??ButtonAction_Event_0+0x18  ;; TextToChangeLength + 5
   \   000000C0   1278               LDRB     R2,[R2, #+0]
   \   000000C2   9142               CMP      R1,R2
   \   000000C4   E179               LDRB     R1,[R4, #+7]
   \   000000C6   07D0               BEQ      ??ButtonAction_Event_6
   5291                      {
   5292                        ButtonGraph->OpenPage++;  MenuPaintExecute=1;
   \   000000C8   F022               MOVS     R2,#+240
   \   000000CA   0A40               ANDS     R2,R2,R1
   \   000000CC   491C               ADDS     R1,R1,#+1
   \   000000CE   0840               ANDS     R0,R0,R1
   \   000000D0   1043               ORRS     R0,R0,R2
   \   000000D2   E071               STRB     R0,[R4, #+7]
   \   000000D4   0125               MOVS     R5,#+1
   \   000000D6   0DE0               B        ??ButtonAction_Event_5
   5293                      }else if (ButtonGraph->OpenPage+1<ScreenNr)
   \                     ??ButtonAction_Event_6:
   \   000000D8   0140               ANDS     R1,R1,R0
   \   000000DA   491C               ADDS     R1,R1,#+1
   \   000000DC   0906               LSLS     R1,R1,#+24
   \   000000DE   090E               LSRS     R1,R1,#+24
   \   000000E0   0829               CMP      R1,#+8
   \   000000E2   07D2               BCS      ??ButtonAction_Event_5
   5294                      {
   5295                        ButtonGraph->OpenPage +=2;  MenuPaintExecute=1;
   \   000000E4   E179               LDRB     R1,[R4, #+7]
   \   000000E6   F022               MOVS     R2,#+240
   \   000000E8   0A40               ANDS     R2,R2,R1
   \   000000EA   891C               ADDS     R1,R1,#+2
   \   000000EC   0840               ANDS     R0,R0,R1
   \   000000EE   1043               ORRS     R0,R0,R2
   \   000000F0   E071               STRB     R0,[R4, #+7]
   \   000000F2   0125               MOVS     R5,#+1
   5296                      }
   5297                    }
   5298                    if (Button(Speech[g_leng].Konfiguracja,3,54,57,14)==1)
   \                     ??ButtonAction_Event_5:
   \   000000F4   82B0               SUB      SP,SP,#+8
   \   000000F6   0E20               MOVS     R0,#+14
   \   000000F8   0090               STR      R0,[SP, #+0]
   \   000000FA   3923               MOVS     R3,#+57
   \   000000FC   3622               MOVS     R2,#+54
   \   000000FE   0321               MOVS     R1,#+3
   \   00000100   1648               LDR      R0,??ButtonAction_Event_0+0x20  ;; 0x2df
   \   00000102   174E               LDR      R6,??ButtonAction_Event_0+0x24  ;; g_leng
   \   00000104   3668               LDR      R6,[R6, #+0]
   \   00000106   174F               LDR      R7,??ButtonAction_Event_0+0x28  ;; 0xa7d
   \   00000108   7E43               MULS     R6,R7,R6
   \   0000010A   174F               LDR      R7,??ButtonAction_Event_0+0x2C  ;; Speech
   \   0000010C   BE19               ADDS     R6,R7,R6
   \   0000010E   3018               ADDS     R0,R6,R0
   \   00000110   ........           BL       Button
   \   00000114   02B0               ADD      SP,SP,#+8
   \   00000116   0128               CMP      R0,#+1
   \   00000118   08D1               BNE      ??ButtonAction_Event_2
   5299                    {
   5300                      CurModifSheet=ButtonGraph->OpenPage-1;
   \   0000011A   0C4D               LDR      R5,??ButtonAction_Event_0+0x10  ;; TextToChangeLength
   \   0000011C   E079               LDRB     R0,[R4, #+7]
   \   0000011E   0007               LSLS     R0,R0,#+28
   \   00000120   000F               LSRS     R0,R0,#+28
   \   00000122   401E               SUBS     R0,R0,#+1
   \   00000124   6871               STRB     R0,[R5, #+5]
   5301                      MenuLevel=112;
   \   00000126   7020               MOVS     R0,#+112
   \   00000128   2865               STR      R0,[R5, #+80]
   5302                      MenuPaintExecute=1;
   \   0000012A   0125               MOVS     R5,#+1
   5303                    }
   5304                   
   5305                    
   5306          
   5307                    
   5308                  }
   5309                    
   5310                    
   5311                  if (MenuPaintExecute)  MenuPaint();
   \                     ??ButtonAction_Event_2:
   \   0000012C   002D               CMP      R5,#+0
   \   0000012E   01D0               BEQ      ??ButtonAction_Event_7
   \   00000130   ........           BL       MenuPaint
   5312                
   5313          }
   \                     ??ButtonAction_Event_7:
   \   00000134   F8BC               POP      {R3-R7}
   \   00000136   01BC               POP      {R0}
   \   00000138   0047               BX       R0               ;; return
   \   0000013A   C046               Nop      
   \                     ??ButtonAction_Event_0:
   \   0000013C   ........           DC32     Y_down
   \   00000140   ........           DC32     X_down
   \   00000144   ........           DC32     Y_up
   \   00000148   ........           DC32     X_up
   \   0000014C   ........           DC32     TextToChangeLength
   \   00000150   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000154   ........           DC32     TextToChangeLength + 5
   \   00000158   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   0000015C   DF020000           DC32     0x2df
   \   00000160   ........           DC32     g_leng
   \   00000164   7D0A0000           DC32     0xa7d
   \   00000168   ........           DC32     Speech
   5314          
   5315          
   5316          
   5317          
   5318          
   5319          

   \                                 In section Debug.txt, align 4, keep-with-next
   5320          void BigTemperLabel_Paint(void)
   5321                {  
   \                     BigTemperLabel_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   5322                  char txt[5];
   5323                  List_Paint("Temeper.",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   504C               LDR      R4,??BigTemperLabel_Paint_0  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   4EA0               ADR      R0,??BigTemperLabel_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   6C30               ADDS     R0,R0,#+108
   \   00000022   ........           BL       List_Paint
   \   00000026   0AB0               ADD      SP,SP,#+40
   5324          
   5325                    Label("Node ID:",2,20, 92 ,8,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000028   82B0               SUB      SP,SP,#+8
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   0090               STR      R0,[SP, #+0]
   \   0000002E   7F21               MOVS     R1,#+127
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   1621               MOVS     R1,#+22
   \   00000036   0820               MOVS     R0,#+8
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   5C23               MOVS     R3,#+92
   \   0000003C   1422               MOVS     R2,#+20
   \   0000003E   0221               MOVS     R1,#+2
   \   00000040   2000               MOVS     R0,R4
   \   00000042   7830               ADDS     R0,R0,#+120
   \   00000044   ........           BL       Label
   \   00000048   06B0               ADD      SP,SP,#+24
   5326                    char ind=CharToStr(gProg.Screen[0].Analog[0].Nr, &(txt[0]), 2); //(char Value, char *Vstring, char ill);
   \   0000004A   4048               LDR      R0,??BigTemperLabel_Paint_0+0x8  ;; gProg + 48139
   \   0000004C   0290               STR      R0,[SP, #+8]
   \   0000004E   0222               MOVS     R2,#+2
   \   00000050   6946               MOV      R1,SP
   \   00000052   0078               LDRB     R0,[R0, #+0]
   \   00000054   ........           BL       CharToStr
   \   00000058   0200               MOVS     R2,R0
   5327                    Label(txt,2,20, 77 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7F21               MOVS     R1,#+127
   \   00000062   0120               MOVS     R0,#+1
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   1621               MOVS     R1,#+22
   \   00000068   D21C               ADDS     R2,R2,#+3
   \   0000006A   1000               MOVS     R0,R2
   \   0000006C   0006               LSLS     R0,R0,#+24
   \   0000006E   000E               LSRS     R0,R0,#+24
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   4D23               MOVS     R3,#+77
   \   00000074   1422               MOVS     R2,#+20
   \   00000076   0221               MOVS     R1,#+2
   \   00000078   06A8               ADD      R0,SP,#+24
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
   \   00000080   6D46               MOV      R5,SP
   \   00000082   3C20               MOVS     R0,#+60
   \   00000084   2870               STRB     R0,[R5, #+0]
   5328                  
   5329                    txt[0]='<';txt[1]=0;
   \   00000086   0026               MOVS     R6,#+0
   \   00000088   3000               MOVS     R0,R6
   \   0000008A   6870               STRB     R0,[R5, #+1]
   5330                    Button(txt,3,70,15,20); 
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   1420               MOVS     R0,#+20
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   0F23               MOVS     R3,#+15
   \   00000094   4622               MOVS     R2,#+70
   \   00000096   0321               MOVS     R1,#+3
   \   00000098   02A8               ADD      R0,SP,#+8
   \   0000009A   ........           BL       Button
   \   0000009E   02B0               ADD      SP,SP,#+8
   5331                    txt[0]='>';
   \   000000A0   3E27               MOVS     R7,#+62
   \   000000A2   2F70               STRB     R7,[R5, #+0]
   5332                    Button(txt,45,70,15,20); 
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   1420               MOVS     R0,#+20
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   0F23               MOVS     R3,#+15
   \   000000AC   4622               MOVS     R2,#+70
   \   000000AE   2D21               MOVS     R1,#+45
   \   000000B0   02A8               ADD      R0,SP,#+8
   \   000000B2   ........           BL       Button
   \   000000B6   02B0               ADD      SP,SP,#+8
   5333                    
   5334                    Label("Reg:",2,20, 50 ,4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   3000               MOVS     R0,R6
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   7F21               MOVS     R1,#+127
   \   000000C0   0120               MOVS     R0,#+1
   \   000000C2   03B4               PUSH     {R0,R1}
   \   000000C4   1621               MOVS     R1,#+22
   \   000000C6   0420               MOVS     R0,#+4
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   3223               MOVS     R3,#+50
   \   000000CC   1422               MOVS     R2,#+20
   \   000000CE   0221               MOVS     R1,#+2
   \   000000D0   5C34               ADDS     R4,R4,#+92
   \   000000D2   2000               MOVS     R0,R4
   \   000000D4   ........           BL       Label
   \   000000D8   06B0               ADD      SP,SP,#+24
   5335                    
   5336                    ind=CharToStr(gProg.Screen[0].Analog[0].Reg, txt, 2); //(char Value, char *Vstring, char ill);
   \   000000DA   0222               MOVS     R2,#+2
   \   000000DC   6946               MOV      R1,SP
   \   000000DE   0298               LDR      R0,[SP, #+8]
   \   000000E0   4078               LDRB     R0,[R0, #+1]
   \   000000E2   ........           BL       CharToStr
   \   000000E6   0200               MOVS     R2,R0
   5337                   
   5338                    Label(txt,2,20, 40 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000E8   82B0               SUB      SP,SP,#+8
   \   000000EA   3000               MOVS     R0,R6
   \   000000EC   0090               STR      R0,[SP, #+0]
   \   000000EE   7F21               MOVS     R1,#+127
   \   000000F0   0120               MOVS     R0,#+1
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   1621               MOVS     R1,#+22
   \   000000F6   921C               ADDS     R2,R2,#+2
   \   000000F8   1000               MOVS     R0,R2
   \   000000FA   0006               LSLS     R0,R0,#+24
   \   000000FC   000E               LSRS     R0,R0,#+24
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   2823               MOVS     R3,#+40
   \   00000102   1422               MOVS     R2,#+20
   \   00000104   0221               MOVS     R1,#+2
   \   00000106   06A8               ADD      R0,SP,#+24
   \   00000108   ........           BL       Label
   \   0000010C   06B0               ADD      SP,SP,#+24
   5339                  
   5340                    txt[0]='<';txt[1]=0;
   \   0000010E   3C20               MOVS     R0,#+60
   \   00000110   2870               STRB     R0,[R5, #+0]
   \   00000112   6E70               STRB     R6,[R5, #+1]
   5341                    Button(txt,3,40,15,20); 
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   1420               MOVS     R0,#+20
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   0F23               MOVS     R3,#+15
   \   0000011C   2822               MOVS     R2,#+40
   \   0000011E   0321               MOVS     R1,#+3
   \   00000120   02A8               ADD      R0,SP,#+8
   \   00000122   ........           BL       Button
   \   00000126   02B0               ADD      SP,SP,#+8
   5342                    txt[0]='>';
   \   00000128   2F70               STRB     R7,[R5, #+0]
   5343                    Button(txt,45,40,15,20);   
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   1420               MOVS     R0,#+20
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   0F23               MOVS     R3,#+15
   \   00000132   2822               MOVS     R2,#+40
   \   00000134   2D21               MOVS     R1,#+45
   \   00000136   02A8               ADD      R0,SP,#+8
   \   00000138   ........           BL       Button
   \   0000013C   02B0               ADD      SP,SP,#+8
   5344                     
   5345                  
   5346                }
   \   0000013E   FEBC               POP      {R1-R7}
   \   00000140   01BC               POP      {R0}
   \   00000142   0047               BX       R0               ;; return
   \                     ??BigTemperLabel_Paint_0:
   \   00000144   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000148   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000014C   ........           DC32     gProg + 48139
   5347          

   \                                 In section Debug.txt, align 4, keep-with-next
   5348          void BigTemperLabel_Event(void)
   5349                {  
   \                     BigTemperLabel_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   5350                 char Repaint=0; 
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2700               MOVS     R7,R4
   5351                 char txt[8];
   5352                 _Analog *Anal=&(gProg.Screen[0].Analog[0]);       
   5353                 
   5354                 
   5355                  //zdarzenie typu down "X"
   5356                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000006   5548               LDR      R0,??BigTemperLabel_Event_0  ;; X_down
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   405E               LDRSH    R0,[R0, R1]
   \   0000000C   2F28               CMP      R0,#+47
   \   0000000E   1FDB               BLT      ??BigTemperLabel_Event_1
   \   00000010   3F28               CMP      R0,#+63
   \   00000012   1DDA               BGE      ??BigTemperLabel_Event_1
   \   00000014   5248               LDR      R0,??BigTemperLabel_Event_0+0x4  ;; Y_down
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   7128               CMP      R0,#+113
   \   0000001A   19DB               BLT      ??BigTemperLabel_Event_1
   \   0000001C   7F28               CMP      R0,#+127
   \   0000001E   17DA               BGE      ??BigTemperLabel_Event_1
   5357                  {
   5358                    //MenuPaint();
   5359                    H_line(49,114,10,0);
   \   00000020   0B00               MOVS     R3,R1
   \   00000022   0A22               MOVS     R2,#+10
   \   00000024   7221               MOVS     R1,#+114
   \   00000026   3120               MOVS     R0,#+49
   \   00000028   ........           BL       H_line
   5360                    H_line(49,123,10,0); 
   \   0000002C   2300               MOVS     R3,R4
   \   0000002E   0A22               MOVS     R2,#+10
   \   00000030   7B21               MOVS     R1,#+123
   \   00000032   3120               MOVS     R0,#+49
   \   00000034   ........           BL       H_line
   5361                    V_line(49,114,10,0); 
   \   00000038   2300               MOVS     R3,R4
   \   0000003A   0A22               MOVS     R2,#+10
   \   0000003C   7221               MOVS     R1,#+114
   \   0000003E   3120               MOVS     R0,#+49
   \   00000040   ........           BL       V_line
   5362                    V_line(58,114,10,0); 
   \   00000044   2300               MOVS     R3,R4
   \   00000046   0A22               MOVS     R2,#+10
   \   00000048   7221               MOVS     R1,#+114
   \   0000004A   3A20               MOVS     R0,#+58
   \   0000004C   ........           BL       V_line
   5363                    
   5364                  }
   5365            
   5366                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??BigTemperLabel_Event_1:
   \   00000050   4448               LDR      R0,??BigTemperLabel_Event_0+0x8  ;; X_up
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   405E               LDRSH    R0,[R0, R1]
   \   00000056   2F28               CMP      R0,#+47
   \   00000058   10DB               BLT      ??BigTemperLabel_Event_2
   \   0000005A   3F28               CMP      R0,#+63
   \   0000005C   0EDA               BGE      ??BigTemperLabel_Event_2
   \   0000005E   4248               LDR      R0,??BigTemperLabel_Event_0+0xC  ;; Y_up
   \   00000060   405E               LDRSH    R0,[R0, R1]
   \   00000062   7128               CMP      R0,#+113
   \   00000064   0ADB               BLT      ??BigTemperLabel_Event_2
   \   00000066   7F28               CMP      R0,#+127
   \   00000068   08DA               BGE      ??BigTemperLabel_Event_2
   5367                  {
   5368                    MenuLevel=(MenuLevel/10);
   \   0000006A   404C               LDR      R4,??BigTemperLabel_Event_0+0x10  ;; TextToChangeLength
   \   0000006C   206D               LDR      R0,[R4, #+80]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   2065               STR      R0,[R4, #+80]
   5369                    MenuPaint();
   \   00000076   ........           BL       MenuPaint
   \   0000007A   68E0               B        ??BigTemperLabel_Event_3
   5370                  }  
   \                     ??BigTemperLabel_Event_2:
   \   0000007C   6D46               MOV      R5,SP
   \   0000007E   3C20               MOVS     R0,#+60
   \   00000080   2870               STRB     R0,[R5, #+0]
   5371                  else
   5372                  {
   5373                      txt[0]='<';txt[1]=0;
   \   00000082   6C70               STRB     R4,[R5, #+1]
   5374                      if (Button(txt,3,70,15,20)==2){if (Anal->Nr>0) {Anal->Nr--;} else {Anal->Nr=NumberNeurons;} Repaint=1;}
   \   00000084   82B0               SUB      SP,SP,#+8
   \   00000086   1420               MOVS     R0,#+20
   \   00000088   0090               STR      R0,[SP, #+0]
   \   0000008A   0F23               MOVS     R3,#+15
   \   0000008C   4622               MOVS     R2,#+70
   \   0000008E   0321               MOVS     R1,#+3
   \   00000090   02A8               ADD      R0,SP,#+8
   \   00000092   ........           BL       Button
   \   00000096   02B0               ADD      SP,SP,#+8
   \   00000098   0228               CMP      R0,#+2
   \   0000009A   09D1               BNE      ??BigTemperLabel_Event_4
   \   0000009C   3448               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   0000009E   0178               LDRB     R1,[R0, #+0]
   \   000000A0   0029               CMP      R1,#+0
   \   000000A2   02D0               BEQ      ??BigTemperLabel_Event_5
   \   000000A4   491E               SUBS     R1,R1,#+1
   \   000000A6   0170               STRB     R1,[R0, #+0]
   \   000000A8   01E0               B        ??BigTemperLabel_Event_6
   \                     ??BigTemperLabel_Event_5:
   \   000000AA   2321               MOVS     R1,#+35
   \   000000AC   0170               STRB     R1,[R0, #+0]
   \                     ??BigTemperLabel_Event_6:
   \   000000AE   0127               MOVS     R7,#+1
   5375                      txt[0]='>';
   \                     ??BigTemperLabel_Event_4:
   \   000000B0   3E26               MOVS     R6,#+62
   \   000000B2   2E70               STRB     R6,[R5, #+0]
   5376                      if (Button(txt,45,70,15,20)==2){if (Anal->Nr+1<NumberNeurons) {Anal->Nr++;} else {Anal->Nr=0;}  Repaint=1;}
   \   000000B4   82B0               SUB      SP,SP,#+8
   \   000000B6   1420               MOVS     R0,#+20
   \   000000B8   0090               STR      R0,[SP, #+0]
   \   000000BA   0F23               MOVS     R3,#+15
   \   000000BC   4622               MOVS     R2,#+70
   \   000000BE   2D21               MOVS     R1,#+45
   \   000000C0   02A8               ADD      R0,SP,#+8
   \   000000C2   ........           BL       Button
   \   000000C6   02B0               ADD      SP,SP,#+8
   \   000000C8   0228               CMP      R0,#+2
   \   000000CA   0CD1               BNE      ??BigTemperLabel_Event_7
   \   000000CC   2848               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   000000CE   0178               LDRB     R1,[R0, #+0]
   \   000000D0   0A00               MOVS     R2,R1
   \   000000D2   521C               ADDS     R2,R2,#+1
   \   000000D4   1204               LSLS     R2,R2,#+16
   \   000000D6   120C               LSRS     R2,R2,#+16
   \   000000D8   232A               CMP      R2,#+35
   \   000000DA   02D2               BCS      ??BigTemperLabel_Event_8
   \   000000DC   491C               ADDS     R1,R1,#+1
   \   000000DE   0170               STRB     R1,[R0, #+0]
   \   000000E0   00E0               B        ??BigTemperLabel_Event_9
   \                     ??BigTemperLabel_Event_8:
   \   000000E2   0470               STRB     R4,[R0, #+0]
   \                     ??BigTemperLabel_Event_9:
   \   000000E4   0127               MOVS     R7,#+1
   5377                    
   5378                      txt[0]='<';txt[1]=0;
   \                     ??BigTemperLabel_Event_7:
   \   000000E6   3C20               MOVS     R0,#+60
   \   000000E8   2870               STRB     R0,[R5, #+0]
   \   000000EA   6C70               STRB     R4,[R5, #+1]
   5379                      if (Button(txt,3,40,15,20)==2){if (Anal->Reg>1) {Anal->Reg--;} else {Anal->Reg=NumberReg;} Repaint=1;} 
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   1420               MOVS     R0,#+20
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   0F23               MOVS     R3,#+15
   \   000000F4   2822               MOVS     R2,#+40
   \   000000F6   0321               MOVS     R1,#+3
   \   000000F8   02A8               ADD      R0,SP,#+8
   \   000000FA   ........           BL       Button
   \   000000FE   02B0               ADD      SP,SP,#+8
   \   00000100   0228               CMP      R0,#+2
   \   00000102   09D1               BNE      ??BigTemperLabel_Event_10
   \   00000104   1A48               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   00000106   4178               LDRB     R1,[R0, #+1]
   \   00000108   0229               CMP      R1,#+2
   \   0000010A   02D3               BCC      ??BigTemperLabel_Event_11
   \   0000010C   491E               SUBS     R1,R1,#+1
   \   0000010E   4170               STRB     R1,[R0, #+1]
   \   00000110   01E0               B        ??BigTemperLabel_Event_12
   \                     ??BigTemperLabel_Event_11:
   \   00000112   0B21               MOVS     R1,#+11
   \   00000114   4170               STRB     R1,[R0, #+1]
   \                     ??BigTemperLabel_Event_12:
   \   00000116   0127               MOVS     R7,#+1
   5380                      txt[0]='>';
   \                     ??BigTemperLabel_Event_10:
   \   00000118   2E70               STRB     R6,[R5, #+0]
   5381                      if (Button(txt,45,40,15,20)==2){if (Anal->Reg+1<NumberReg) {Anal->Reg++;} else {Anal->Reg=1;}  Repaint=1;}
   \   0000011A   82B0               SUB      SP,SP,#+8
   \   0000011C   1420               MOVS     R0,#+20
   \   0000011E   0090               STR      R0,[SP, #+0]
   \   00000120   0F23               MOVS     R3,#+15
   \   00000122   2822               MOVS     R2,#+40
   \   00000124   2D21               MOVS     R1,#+45
   \   00000126   02A8               ADD      R0,SP,#+8
   \   00000128   ........           BL       Button
   \   0000012C   02B0               ADD      SP,SP,#+8
   \   0000012E   0228               CMP      R0,#+2
   \   00000130   0DD1               BNE      ??BigTemperLabel_Event_3
   \   00000132   0F48               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   00000134   4178               LDRB     R1,[R0, #+1]
   \   00000136   0A00               MOVS     R2,R1
   \   00000138   521C               ADDS     R2,R2,#+1
   \   0000013A   1204               LSLS     R2,R2,#+16
   \   0000013C   120C               LSRS     R2,R2,#+16
   \   0000013E   0B2A               CMP      R2,#+11
   \   00000140   02D2               BCS      ??BigTemperLabel_Event_13
   \   00000142   491C               ADDS     R1,R1,#+1
   \   00000144   4170               STRB     R1,[R0, #+1]
   \   00000146   01E0               B        ??BigTemperLabel_Event_14
   \                     ??BigTemperLabel_Event_13:
   \   00000148   0121               MOVS     R1,#+1
   \   0000014A   4170               STRB     R1,[R0, #+1]
   \                     ??BigTemperLabel_Event_14:
   \   0000014C   0127               MOVS     R7,#+1
   5382                }
   5383                
   5384                if (Repaint) MenuPaint();
   \                     ??BigTemperLabel_Event_3:
   \   0000014E   002F               CMP      R7,#+0
   \   00000150   01D0               BEQ      ??BigTemperLabel_Event_15
   \   00000152   ........           BL       MenuPaint
   5385          
   5386          }
   \                     ??BigTemperLabel_Event_15:
   \   00000156   FEBC               POP      {R1-R7}
   \   00000158   01BC               POP      {R0}
   \   0000015A   0047               BX       R0               ;; return
   \                     ??BigTemperLabel_Event_0:
   \   0000015C   ........           DC32     X_down
   \   00000160   ........           DC32     Y_down
   \   00000164   ........           DC32     X_up
   \   00000168   ........           DC32     Y_up
   \   0000016C   ........           DC32     TextToChangeLength
   \   00000170   ........           DC32     gProg + 48139
   5387          
   5388          
   5389          
   5390                #define MaxRowGr 4
   5391                #define MaxColGr 3
   5392                #define Y_offset 27
   5393          

   \                                 In section Debug.txt, align 4, keep-with-next
   5394          void ZoneGraph_Paint(_Screen* ScreenLokal)
   5395              {
   \                     ZoneGraph_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   C0A0               ADR      R0,??ZoneGraph_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   BD48               LDR      R0,??ZoneGraph_Paint_0+0x4  ;; 0x4ec
   \   00000020   BD4C               LDR      R4,??ZoneGraph_Paint_0+0x8  ;; g_leng
   \   00000022   2468               LDR      R4,[R4, #+0]
   \   00000024   BD4D               LDR      R5,??ZoneGraph_Paint_0+0xC  ;; 0xa7d
   \   00000026   6C43               MULS     R4,R5,R4
   \   00000028   BD4D               LDR      R5,??ZoneGraph_Paint_0+0x10  ;; Speech
   \   0000002A   2C19               ADDS     R4,R5,R4
   \   0000002C   2018               ADDS     R0,R4,R0
   5396          
   5397                  
   5398                 List_Paint(Speech[g_leng].Grafika,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   5399                 char txt[8];
   5400                 
   5401                 
   5402                 
   5403                 
   5404                //siatka 
   5405                 
   5406                for (char i=0; i<=MaxRowGr; i++)
   \   00000034   0024               MOVS     R4,#+0
   \   00000036   2500               MOVS     R5,R4
   \   00000038   0BE0               B        ??ZoneGraph_Paint_1
   5407                {
   5408                    H_line(3,Y_offset+i*20,58,2);   
   \                     ??ZoneGraph_Paint_2:
   \   0000003A   0223               MOVS     R3,#+2
   \   0000003C   3A22               MOVS     R2,#+58
   \   0000003E   2900               MOVS     R1,R5
   \   00000040   1420               MOVS     R0,#+20
   \   00000042   4143               MULS     R1,R0,R1
   \   00000044   1B31               ADDS     R1,R1,#+27
   \   00000046   0320               MOVS     R0,#+3
   \   00000048   ........           BL       H_line
   5409                }
   \   0000004C   6D1C               ADDS     R5,R5,#+1
   \   0000004E   2D06               LSLS     R5,R5,#+24
   \   00000050   2D0E               LSRS     R5,R5,#+24
   \                     ??ZoneGraph_Paint_1:
   \   00000052   2800               MOVS     R0,R5
   \   00000054   0528               CMP      R0,#+5
   \   00000056   F0D3               BCC      ??ZoneGraph_Paint_2
   5410                for (char i=0; i<=MaxColGr; i++)
   \   00000058   2500               MOVS     R5,R4
   \   0000005A   1426               MOVS     R6,#+20
   \   0000005C   0BE0               B        ??ZoneGraph_Paint_3
   5411                {
   5412                    V_line(1+i*20,Y_offset,80,2);         
   \                     ??ZoneGraph_Paint_4:
   \   0000005E   0223               MOVS     R3,#+2
   \   00000060   5022               MOVS     R2,#+80
   \   00000062   1B21               MOVS     R1,#+27
   \   00000064   7043               MULS     R0,R6,R0
   \   00000066   401C               ADDS     R0,R0,#+1
   \   00000068   0006               LSLS     R0,R0,#+24
   \   0000006A   000E               LSRS     R0,R0,#+24
   \   0000006C   ........           BL       V_line
   5413                }
   \   00000070   6D1C               ADDS     R5,R5,#+1
   \   00000072   2D06               LSLS     R5,R5,#+24
   \   00000074   2D0E               LSRS     R5,R5,#+24
   \                     ??ZoneGraph_Paint_3:
   \   00000076   2800               MOVS     R0,R5
   \   00000078   0428               CMP      R0,#+4
   \   0000007A   F0D3               BCC      ??ZoneGraph_Paint_4
   \   0000007C   A948               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; TextToChangeLength + 24
   \   0000007E   0078               LDRB     R0,[R0, #+0]
   \   00000080   0721               MOVS     R1,#+7
   \   00000082   4843               MULS     R0,R1,R0
   \   00000084   0499               LDR      R1,[SP, #+16]
   \   00000086   0D18               ADDS     R5,R1,R0
   \   00000088   0326               MOVS     R6,#+3
   \   0000008A   5320               MOVS     R0,#+83
   \   0000008C   285C               LDRB     R0,[R5, R0]
   \   0000008E   3100               MOVS     R1,R6
   \   00000090   ........           BL       __aeabi_idivmod
   \   00000094   361A               SUBS     R6,R6,R0
   \   00000096   3606               LSLS     R6,R6,#+24
   \   00000098   360E               LSRS     R6,R6,#+24
   5414                //------koniec siatki
   5415          
   5416                //zaznaczenie wybranego
   5417                char RowChos = MaxRowGr-ScreenLokal->Graph[ZoneGrapfNrClick].Type/3-1;
   5418                char ColChos = ScreenLokal->Graph[ZoneGrapfNrClick].Type-((ScreenLokal->Graph[ZoneGrapfNrClick].Type/3)*3);
   \   0000009A   5320               MOVS     R0,#+83
   \   0000009C   2F5C               LDRB     R7,[R5, R0]
   \   0000009E   3800               MOVS     R0,R7
   \   000000A0   0321               MOVS     R1,#+3
   \   000000A2   ........           BL       __aeabi_idivmod
   \   000000A6   0321               MOVS     R1,#+3
   \   000000A8   4843               MULS     R0,R1,R0
   \   000000AA   3D1A               SUBS     R5,R7,R0
   \   000000AC   2D06               LSLS     R5,R5,#+24
   \   000000AE   2D0E               LSRS     R5,R5,#+24
   5419                H_line(1+ColChos*20  ,Y_offset+RowChos*20,20,1);  
   \   000000B0   1420               MOVS     R0,#+20
   \   000000B2   4543               MULS     R5,R0,R5
   \   000000B4   6946               MOV      R1,SP
   \   000000B6   2800               MOVS     R0,R5
   \   000000B8   401C               ADDS     R0,R0,#+1
   \   000000BA   0872               STRB     R0,[R1, #+8]
   \   000000BC   1420               MOVS     R0,#+20
   \   000000BE   4643               MULS     R6,R0,R6
   \   000000C0   3700               MOVS     R7,R6
   \   000000C2   1B37               ADDS     R7,R7,#+27
   \   000000C4   0123               MOVS     R3,#+1
   \   000000C6   0200               MOVS     R2,R0
   \   000000C8   3900               MOVS     R1,R7
   \   000000CA   6846               MOV      R0,SP
   \   000000CC   007A               LDRB     R0,[R0, #+8]
   \   000000CE   ........           BL       H_line
   5420                H_line(1+ColChos*20    ,Y_offset+(RowChos+1)*20,20,1); 
   \   000000D2   0123               MOVS     R3,#+1
   \   000000D4   1422               MOVS     R2,#+20
   \   000000D6   2F36               ADDS     R6,R6,#+47
   \   000000D8   3100               MOVS     R1,R6
   \   000000DA   6846               MOV      R0,SP
   \   000000DC   007A               LDRB     R0,[R0, #+8]
   \   000000DE   ........           BL       H_line
   5421                V_line(1+ColChos*20    ,Y_offset+RowChos*20,20,1);  
   \   000000E2   0123               MOVS     R3,#+1
   \   000000E4   1422               MOVS     R2,#+20
   \   000000E6   3900               MOVS     R1,R7
   \   000000E8   6846               MOV      R0,SP
   \   000000EA   007A               LDRB     R0,[R0, #+8]
   \   000000EC   ........           BL       V_line
   5422                V_line(1+(ColChos+1)*20    ,Y_offset+RowChos*20,20,1);  
   \   000000F0   0123               MOVS     R3,#+1
   \   000000F2   1422               MOVS     R2,#+20
   \   000000F4   3900               MOVS     R1,R7
   \   000000F6   1535               ADDS     R5,R5,#+21
   \   000000F8   2800               MOVS     R0,R5
   \   000000FA   0006               LSLS     R0,R0,#+24
   \   000000FC   000E               LSRS     R0,R0,#+24
   \   000000FE   ........           BL       V_line
   5423                //---------------------
   5424                
   5425                
   5426                
   5427                 if (((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) || (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff)) && (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff))
   \   00000102   8848               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; TextToChangeLength + 24
   \   00000104   0078               LDRB     R0,[R0, #+0]
   \   00000106   0721               MOVS     R1,#+7
   \   00000108   4843               MULS     R0,R1,R0
   \   0000010A   0499               LDR      R1,[SP, #+16]
   \   0000010C   0818               ADDS     R0,R1,R0
   \   0000010E   5330               ADDS     R0,R0,#+83
   \   00000110   0178               LDRB     R1,[R0, #+0]
   \   00000112   0829               CMP      R1,#+8
   \   00000114   01D0               BEQ      ??ZoneGraph_Paint_5
   \   00000116   0B29               CMP      R1,#+11
   \   00000118   11D1               BNE      ??ZoneGraph_Paint_6
   \                     ??ZoneGraph_Paint_5:
   \   0000011A   8079               LDRB     R0,[R0, #+6]
   \   0000011C   C007               LSLS     R0,R0,#+31
   \   0000011E   0ED5               BPL      ??ZoneGraph_Paint_6
   5428                  {
   5429                   Label("+",2,5+2*20, Y_offset+17 ,1,12,1,127,0);
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   2000               MOVS     R0,R4
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   7F21               MOVS     R1,#+127
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   03B4               PUSH     {R0,R1}
   \   0000012C   0C21               MOVS     R1,#+12
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   2C23               MOVS     R3,#+44
   \   00000132   2D22               MOVS     R2,#+45
   \   00000134   0221               MOVS     R1,#+2
   \   00000136   7CA0               ADR      R0,??ZoneGraph_Paint_0+0x18  ;; 0x2B, 0x00, 0x00, 0x00
   \   00000138   ........           BL       Label
   \   0000013C   06B0               ADD      SP,SP,#+24
   5430          
   5431                  }
   5432                  
   5433                
   5434                  char idx=0;
   \                     ??ZoneGraph_Paint_6:
   \   0000013E   2500               MOVS     R5,R4
   5435          
   5436                  for (int j=(MaxRowGr-1); j>=0; j--)
   \   00000140   0326               MOVS     R6,#+3
   \   00000142   37E0               B        ??ZoneGraph_Paint_7
   5437                  {
   5438                    for (int i=0; i<MaxColGr; i++)
   5439                    {
   5440                      if (idx<=MaxGraphIdx) CopyToCanvasPoint((char*)&GraphTab[idx], 2+i*20, Y_offset+1+j*20, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??ZoneGraph_Paint_8:
   \   00000144   2800               MOVS     R0,R5
   \   00000146   0828               CMP      R0,#+8
   \   00000148   18D2               BCS      ??ZoneGraph_Paint_9
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   1220               MOVS     R0,#+18
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   0300               MOVS     R3,R0
   \   00000152   1422               MOVS     R2,#+20
   \   00000154   7243               MULS     R2,R6,R2
   \   00000156   1C32               ADDS     R2,R2,#+28
   \   00000158   1206               LSLS     R2,R2,#+24
   \   0000015A   120E               LSRS     R2,R2,#+24
   \   0000015C   1421               MOVS     R1,#+20
   \   0000015E   7943               MULS     R1,R7,R1
   \   00000160   891C               ADDS     R1,R1,#+2
   \   00000162   0906               LSLS     R1,R1,#+24
   \   00000164   090E               LSRS     R1,R1,#+24
   \   00000166   8C46               MOV      R12,R1
   \   00000168   2800               MOVS     R0,R5
   \   0000016A   3621               MOVS     R1,#+54
   \   0000016C   4843               MULS     R0,R1,R0
   \   0000016E   6F49               LDR      R1,??ZoneGraph_Paint_0+0x1C  ;; `?<Constant {0, 0}>`
   \   00000170   0818               ADDS     R0,R1,R0
   \   00000172   8C30               ADDS     R0,R0,#+140
   \   00000174   6146               MOV      R1,R12
   \   00000176   ........           BL       CopyToCanvasPoint
   \   0000017A   02B0               ADD      SP,SP,#+8
   5441                      if (idx==MaxGraphIdx+1) {
   \                     ??ZoneGraph_Paint_9:
   \   0000017C   2800               MOVS     R0,R5
   \   0000017E   0828               CMP      R0,#+8
   \   00000180   11D1               BNE      ??ZoneGraph_Paint_10
   5442                        Label("Text",0,2 +2*20, Y_offset+6+j*20 ,4,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000182   82B0               SUB      SP,SP,#+8
   \   00000184   2000               MOVS     R0,R4
   \   00000186   0090               STR      R0,[SP, #+0]
   \   00000188   7F21               MOVS     R1,#+127
   \   0000018A   0120               MOVS     R0,#+1
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   0A21               MOVS     R1,#+10
   \   00000190   0420               MOVS     R0,#+4
   \   00000192   03B4               PUSH     {R0,R1}
   \   00000194   1423               MOVS     R3,#+20
   \   00000196   7343               MULS     R3,R6,R3
   \   00000198   2133               ADDS     R3,R3,#+33
   \   0000019A   2A22               MOVS     R2,#+42
   \   0000019C   2100               MOVS     R1,R4
   \   0000019E   6448               LDR      R0,??ZoneGraph_Paint_0+0x20  ;; `?<Constant {0, 0}>` + 84
   \   000001A0   ........           BL       Label
   \   000001A4   06B0               ADD      SP,SP,#+24
   5443                      }
   5444                      idx++;
   \                     ??ZoneGraph_Paint_10:
   \   000001A6   6D1C               ADDS     R5,R5,#+1
   \   000001A8   2D06               LSLS     R5,R5,#+24
   \   000001AA   2D0E               LSRS     R5,R5,#+24
   5445                    }
   \   000001AC   7F1C               ADDS     R7,R7,#+1
   \                     ??ZoneGraph_Paint_11:
   \   000001AE   032F               CMP      R7,#+3
   \   000001B0   C8DB               BLT      ??ZoneGraph_Paint_8
   \   000001B2   761E               SUBS     R6,R6,#+1
   \                     ??ZoneGraph_Paint_7:
   \   000001B4   002E               CMP      R6,#+0
   \   000001B6   01D4               BMI      ??ZoneGraph_Paint_12
   \   000001B8   2700               MOVS     R7,R4
   \   000001BA   F8E7               B        ??ZoneGraph_Paint_11
   5446                  }
   5447                  
   5448                  
   5449                  
   5450                  
   5451                  Label("Scn ",0,4 +0*20, Y_offset+7 ,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ZoneGraph_Paint_12:
   \   000001BC   5B4D               LDR      R5,??ZoneGraph_Paint_0+0x1C  ;; `?<Constant {0, 0}>`
   \   000001BE   82B0               SUB      SP,SP,#+8
   \   000001C0   2000               MOVS     R0,R4
   \   000001C2   0090               STR      R0,[SP, #+0]
   \   000001C4   7F21               MOVS     R1,#+127
   \   000001C6   0120               MOVS     R0,#+1
   \   000001C8   03B4               PUSH     {R0,R1}
   \   000001CA   0A21               MOVS     R1,#+10
   \   000001CC   0320               MOVS     R0,#+3
   \   000001CE   03B4               PUSH     {R0,R1}
   \   000001D0   2223               MOVS     R3,#+34
   \   000001D2   0422               MOVS     R2,#+4
   \   000001D4   2100               MOVS     R1,R4
   \   000001D6   2800               MOVS     R0,R5
   \   000001D8   4C30               ADDS     R0,R0,#+76
   \   000001DA   ........           BL       Label
   \   000001DE   06B0               ADD      SP,SP,#+24
   5452                  Label("Val ",0,5 +1*20, Y_offset+7 ,3,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001E0   82B0               SUB      SP,SP,#+8
   \   000001E2   2000               MOVS     R0,R4
   \   000001E4   0090               STR      R0,[SP, #+0]
   \   000001E6   7F21               MOVS     R1,#+127
   \   000001E8   0120               MOVS     R0,#+1
   \   000001EA   03B4               PUSH     {R0,R1}
   \   000001EC   0F21               MOVS     R1,#+15
   \   000001EE   0320               MOVS     R0,#+3
   \   000001F0   03B4               PUSH     {R0,R1}
   \   000001F2   2223               MOVS     R3,#+34
   \   000001F4   1922               MOVS     R2,#+25
   \   000001F6   2100               MOVS     R1,R4
   \   000001F8   2800               MOVS     R0,R5
   \   000001FA   5C30               ADDS     R0,R0,#+92
   \   000001FC   ........           BL       Label
   \   00000200   06B0               ADD      SP,SP,#+24
   5453                  //Label("Text",0,2 +2*20, Y_offset+7 ,4,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   5454                  Label(Speech[g_leng].Wl,0,6 +2*20,  Y_offset+9,3,10,1,127,0);
   \   00000202   82B0               SUB      SP,SP,#+8
   \   00000204   2000               MOVS     R0,R4
   \   00000206   0090               STR      R0,[SP, #+0]
   \   00000208   7F21               MOVS     R1,#+127
   \   0000020A   0120               MOVS     R0,#+1
   \   0000020C   03B4               PUSH     {R0,R1}
   \   0000020E   0A21               MOVS     R1,#+10
   \   00000210   0320               MOVS     R0,#+3
   \   00000212   03B4               PUSH     {R0,R1}
   \   00000214   2423               MOVS     R3,#+36
   \   00000216   2E22               MOVS     R2,#+46
   \   00000218   2100               MOVS     R1,R4
   \   0000021A   4648               LDR      R0,??ZoneGraph_Paint_0+0x24  ;; 0x627
   \   0000021C   3E4E               LDR      R6,??ZoneGraph_Paint_0+0x8  ;; g_leng
   \   0000021E   3668               LDR      R6,[R6, #+0]
   \   00000220   3E4F               LDR      R7,??ZoneGraph_Paint_0+0xC  ;; 0xa7d
   \   00000222   7E43               MULS     R6,R7,R6
   \   00000224   3E4F               LDR      R7,??ZoneGraph_Paint_0+0x10  ;; Speech
   \   00000226   BE19               ADDS     R6,R7,R6
   \   00000228   3018               ADDS     R0,R6,R0
   \   0000022A   ........           BL       Label
   \   0000022E   06B0               ADD      SP,SP,#+24
   5455                  Label(Speech[g_leng].Wyl,0,6 +2*20, Y_offset+1,3,10,1,127,0);
   \   00000230   82B0               SUB      SP,SP,#+8
   \   00000232   2000               MOVS     R0,R4
   \   00000234   0090               STR      R0,[SP, #+0]
   \   00000236   7F21               MOVS     R1,#+127
   \   00000238   0120               MOVS     R0,#+1
   \   0000023A   03B4               PUSH     {R0,R1}
   \   0000023C   0A21               MOVS     R1,#+10
   \   0000023E   0320               MOVS     R0,#+3
   \   00000240   03B4               PUSH     {R0,R1}
   \   00000242   1C23               MOVS     R3,#+28
   \   00000244   2E22               MOVS     R2,#+46
   \   00000246   2100               MOVS     R1,R4
   \   00000248   C320               MOVS     R0,#+195
   \   0000024A   C000               LSLS     R0,R0,#+3        ;; #+1560
   \   0000024C   324E               LDR      R6,??ZoneGraph_Paint_0+0x8  ;; g_leng
   \   0000024E   3668               LDR      R6,[R6, #+0]
   \   00000250   324F               LDR      R7,??ZoneGraph_Paint_0+0xC  ;; 0xa7d
   \   00000252   7E43               MULS     R6,R7,R6
   \   00000254   324F               LDR      R7,??ZoneGraph_Paint_0+0x10  ;; Speech
   \   00000256   BE19               ADDS     R6,R7,R6
   \   00000258   3018               ADDS     R0,R6,R0
   \   0000025A   ........           BL       Label
   \   0000025E   06B0               ADD      SP,SP,#+24
   5456                  
   5457                  //je¿eli On / Off
   5458                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff) 
   \   00000260   3048               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; TextToChangeLength + 24
   \   00000262   0078               LDRB     R0,[R0, #+0]
   \   00000264   0721               MOVS     R1,#+7
   \   00000266   4843               MULS     R0,R1,R0
   \   00000268   0499               LDR      R1,[SP, #+16]
   \   0000026A   0818               ADDS     R0,R1,R0
   \   0000026C   5330               ADDS     R0,R0,#+83
   \   0000026E   0178               LDRB     R1,[R0, #+0]
   \   00000270   0B29               CMP      R1,#+11
   \   00000272   00D0               BEQ      .+4
   \   00000274   D2E0               B        ??ZoneGraph_Paint_13
   5459                  {
   5460                    
   5461                    if ((ScreenLokal->Graph[ZoneGrapfNrClick].Nr>=0) && ( (ScreenLokal->Graph[ZoneGrapfNrClick].Nr!=0xFF)))
                                                                       ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \   00000276   0179               LDRB     R1,[R0, #+4]
   \   00000278   FF29               CMP      R1,#+255
   \   0000027A   6F46               MOV      R7,SP
   \   0000027C   5CD0               BEQ      ??ZoneGraph_Paint_14
   5462                    {
   5463                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   0000027E   4921               MOVS     R1,#+73
   \   00000280   3970               STRB     R1,[R7, #+0]
   \   00000282   6421               MOVS     R1,#+100
   \   00000284   7970               STRB     R1,[R7, #+1]
   \   00000286   3A26               MOVS     R6,#+58
   \   00000288   BE70               STRB     R6,[R7, #+2]
   \   0000028A   2021               MOVS     R1,#+32
   \   0000028C   F970               STRB     R1,[R7, #+3]
   5464                      char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Nr, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   0000028E   0222               MOVS     R2,#+2
   \   00000290   3900               MOVS     R1,R7
   \   00000292   C91C               ADDS     R1,R1,#+3
   \   00000294   0079               LDRB     R0,[R0, #+4]
   \   00000296   ........           BL       CharToStr
   \   0000029A   0200               MOVS     R2,R0
   5465                      Label(txt,2,20, 16 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000029C   82B0               SUB      SP,SP,#+8
   \   0000029E   2000               MOVS     R0,R4
   \   000002A0   0090               STR      R0,[SP, #+0]
   \   000002A2   7F21               MOVS     R1,#+127
   \   000002A4   0120               MOVS     R0,#+1
   \   000002A6   03B4               PUSH     {R0,R1}
   \   000002A8   1621               MOVS     R1,#+22
   \   000002AA   D21C               ADDS     R2,R2,#+3
   \   000002AC   1000               MOVS     R0,R2
   \   000002AE   0006               LSLS     R0,R0,#+24
   \   000002B0   000E               LSRS     R0,R0,#+24
   \   000002B2   03B4               PUSH     {R0,R1}
   \   000002B4   1023               MOVS     R3,#+16
   \   000002B6   1422               MOVS     R2,#+20
   \   000002B8   0221               MOVS     R1,#+2
   \   000002BA   06A8               ADD      R0,SP,#+24
   \   000002BC   ........           BL       Label
   \   000002C0   06B0               ADD      SP,SP,#+24
   5466                    
   5467                       txt[0]='P'; txt[1]=':'; txt[2]=0; 
   \   000002C2   5020               MOVS     R0,#+80
   \   000002C4   3870               STRB     R0,[R7, #+0]
   \   000002C6   7E70               STRB     R6,[R7, #+1]
   \   000002C8   2000               MOVS     R0,R4
   \   000002CA   B870               STRB     R0,[R7, #+2]
   5468                      ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Port, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   000002CC   0222               MOVS     R2,#+2
   \   000002CE   BF1C               ADDS     R7,R7,#+2
   \   000002D0   3900               MOVS     R1,R7
   \   000002D2   1448               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; TextToChangeLength + 24
   \   000002D4   0078               LDRB     R0,[R0, #+0]
   \   000002D6   0723               MOVS     R3,#+7
   \   000002D8   5843               MULS     R0,R3,R0
   \   000002DA   049B               LDR      R3,[SP, #+16]
   \   000002DC   1818               ADDS     R0,R3,R0
   \   000002DE   5830               ADDS     R0,R0,#+88
   \   000002E0   0078               LDRB     R0,[R0, #+0]
   \   000002E2   ........           BL       CharToStr
   \   000002E6   0200               MOVS     R2,R0
   5469                      Label(txt,2,20, 3 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002E8   82B0               SUB      SP,SP,#+8
   \   000002EA   2000               MOVS     R0,R4
   \   000002EC   0090               STR      R0,[SP, #+0]
   \   000002EE   7F21               MOVS     R1,#+127
   \   000002F0   0120               MOVS     R0,#+1
   \   000002F2   03B4               PUSH     {R0,R1}
   \   000002F4   1621               MOVS     R1,#+22
   \   000002F6   921C               ADDS     R2,R2,#+2
   \   000002F8   1000               MOVS     R0,R2
   \   000002FA   0006               LSLS     R0,R0,#+24
   \   000002FC   000E               LSRS     R0,R0,#+24
   \   000002FE   03B4               PUSH     {R0,R1}
   \   00000300   0323               MOVS     R3,#+3
   \   00000302   1422               MOVS     R2,#+20
   \   00000304   0221               MOVS     R1,#+2
   \   00000306   06A8               ADD      R0,SP,#+24
   \   00000308   ........           BL       Label
   \   0000030C   06B0               ADD      SP,SP,#+24
   \   0000030E   51E0               B        ??ZoneGraph_Paint_15
   \                     ??ZoneGraph_Paint_0:
   \   00000310   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000314   EC040000           DC32     0x4ec
   \   00000318   ........           DC32     g_leng
   \   0000031C   7D0A0000           DC32     0xa7d
   \   00000320   ........           DC32     Speech
   \   00000324   ........           DC32     TextToChangeLength + 24
   \   00000328   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   0000032C   ........           DC32     `?<Constant {0, 0}>`
   \   00000330   ........           DC32     `?<Constant {0, 0}>` + 84
   \   00000334   27060000           DC32     0x627
   5470                    }else{
   5471                      txt[0]='V'; txt[1]='a'; txt[2]='r'; txt[3]=':'; txt[4]=' ';
   \                     ??ZoneGraph_Paint_14:
   \   00000338   5620               MOVS     R0,#+86
   \   0000033A   3870               STRB     R0,[R7, #+0]
   \   0000033C   6120               MOVS     R0,#+97
   \   0000033E   7870               STRB     R0,[R7, #+1]
   \   00000340   7220               MOVS     R0,#+114
   \   00000342   B870               STRB     R0,[R7, #+2]
   \   00000344   3A20               MOVS     R0,#+58
   \   00000346   F870               STRB     R0,[R7, #+3]
   \   00000348   2026               MOVS     R6,#+32
   \   0000034A   3E71               STRB     R6,[R7, #+4]
   5472                      Label(txt,2,20, 16 ,4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000034C   82B0               SUB      SP,SP,#+8
   \   0000034E   2000               MOVS     R0,R4
   \   00000350   0090               STR      R0,[SP, #+0]
   \   00000352   7F21               MOVS     R1,#+127
   \   00000354   0120               MOVS     R0,#+1
   \   00000356   03B4               PUSH     {R0,R1}
   \   00000358   1621               MOVS     R1,#+22
   \   0000035A   0420               MOVS     R0,#+4
   \   0000035C   03B4               PUSH     {R0,R1}
   \   0000035E   1023               MOVS     R3,#+16
   \   00000360   1422               MOVS     R2,#+20
   \   00000362   0221               MOVS     R1,#+2
   \   00000364   06A8               ADD      R0,SP,#+24
   \   00000366   ........           BL       Label
   \   0000036A   06B0               ADD      SP,SP,#+24
   5473                    
   5474                       txt[0]='b'; txt[1]=' '; 
   \   0000036C   6220               MOVS     R0,#+98
   \   0000036E   3870               STRB     R0,[R7, #+0]
   \   00000370   7E70               STRB     R6,[R7, #+1]
   5475                      char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Port, &(txt[1]), 2); //(char Value, char *Vstring, char ill);
   \   00000372   0222               MOVS     R2,#+2
   \   00000374   7F1C               ADDS     R7,R7,#+1
   \   00000376   3900               MOVS     R1,R7
   \   00000378   C248               LDR      R0,??ZoneGraph_Paint_16  ;; TextToChangeLength + 24
   \   0000037A   0078               LDRB     R0,[R0, #+0]
   \   0000037C   0723               MOVS     R3,#+7
   \   0000037E   5843               MULS     R0,R3,R0
   \   00000380   049B               LDR      R3,[SP, #+16]
   \   00000382   1818               ADDS     R0,R3,R0
   \   00000384   5830               ADDS     R0,R0,#+88
   \   00000386   0078               LDRB     R0,[R0, #+0]
   \   00000388   ........           BL       CharToStr
   \   0000038C   0200               MOVS     R2,R0
   5476                      Label(txt,2,20, 3 ,ind+1,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000038E   82B0               SUB      SP,SP,#+8
   \   00000390   2000               MOVS     R0,R4
   \   00000392   0090               STR      R0,[SP, #+0]
   \   00000394   7F21               MOVS     R1,#+127
   \   00000396   0120               MOVS     R0,#+1
   \   00000398   03B4               PUSH     {R0,R1}
   \   0000039A   1621               MOVS     R1,#+22
   \   0000039C   521C               ADDS     R2,R2,#+1
   \   0000039E   1000               MOVS     R0,R2
   \   000003A0   0006               LSLS     R0,R0,#+24
   \   000003A2   000E               LSRS     R0,R0,#+24
   \   000003A4   03B4               PUSH     {R0,R1}
   \   000003A6   0323               MOVS     R3,#+3
   \   000003A8   1422               MOVS     R2,#+20
   \   000003AA   0221               MOVS     R1,#+2
   \   000003AC   06A8               ADD      R0,SP,#+24
   \   000003AE   ........           BL       Label
   \   000003B2   06B0               ADD      SP,SP,#+24
   5477                    
   5478                    }
   5479                    
   5480                    
   5481                    
   5482                    txt[0]='<';txt[1]=0;
   \                     ??ZoneGraph_Paint_15:
   \   000003B4   3C26               MOVS     R6,#+60
   \   000003B6   6F46               MOV      R7,SP
   \   000003B8   3E70               STRB     R6,[R7, #+0]
   \   000003BA   2000               MOVS     R0,R4
   \   000003BC   7870               STRB     R0,[R7, #+1]
   5483                    Button(txt,3,15,15,11); 
   \   000003BE   82B0               SUB      SP,SP,#+8
   \   000003C0   0B20               MOVS     R0,#+11
   \   000003C2   0090               STR      R0,[SP, #+0]
   \   000003C4   0F23               MOVS     R3,#+15
   \   000003C6   1A00               MOVS     R2,R3
   \   000003C8   0321               MOVS     R1,#+3
   \   000003CA   02A8               ADD      R0,SP,#+8
   \   000003CC   ........           BL       Button
   \   000003D0   02B0               ADD      SP,SP,#+8
   \   000003D2   3E20               MOVS     R0,#+62
   \   000003D4   3870               STRB     R0,[R7, #+0]
   5484                    txt[0]='>';
   5485                    Button(txt,45,15,15,11); 
   \   000003D6   82B0               SUB      SP,SP,#+8
   \   000003D8   0B20               MOVS     R0,#+11
   \   000003DA   0090               STR      R0,[SP, #+0]
   \   000003DC   0F23               MOVS     R3,#+15
   \   000003DE   1A00               MOVS     R2,R3
   \   000003E0   2D21               MOVS     R1,#+45
   \   000003E2   02A8               ADD      R0,SP,#+8
   \   000003E4   ........           BL       Button
   \   000003E8   02B0               ADD      SP,SP,#+8
   5486                    
   5487                   
   5488                    txt[0]='<';txt[1]=0;
   \   000003EA   3E70               STRB     R6,[R7, #+0]
   \   000003EC   2000               MOVS     R0,R4
   \   000003EE   7870               STRB     R0,[R7, #+1]
   5489                    Button(txt,3,3,15,11); 
   \   000003F0   82B0               SUB      SP,SP,#+8
   \   000003F2   0B20               MOVS     R0,#+11
   \   000003F4   0090               STR      R0,[SP, #+0]
   \   000003F6   0F23               MOVS     R3,#+15
   \   000003F8   0322               MOVS     R2,#+3
   \   000003FA   1100               MOVS     R1,R2
   \   000003FC   02A8               ADD      R0,SP,#+8
   \   000003FE   ........           BL       Button
   \   00000402   02B0               ADD      SP,SP,#+8
   5490                    txt[0]='>';
   \   00000404   3E20               MOVS     R0,#+62
   \   00000406   3870               STRB     R0,[R7, #+0]
   5491                    Button(txt,45,3,15,11); 
   \   00000408   82B0               SUB      SP,SP,#+8
   \   0000040A   0B20               MOVS     R0,#+11
   \   0000040C   0090               STR      R0,[SP, #+0]
   \   0000040E   0F23               MOVS     R3,#+15
   \   00000410   0322               MOVS     R2,#+3
   \   00000412   2D21               MOVS     R1,#+45
   \   00000414   02A8               ADD      R0,SP,#+8
   \   00000416   ........           BL       Button
   \   0000041A   02B0               ADD      SP,SP,#+8
   5492                    
   5493                    
   5494                  }        
   5495                  
   5496                  //je¿eli tekst
   5497                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) 
   \                     ??ZoneGraph_Paint_13:
   \   0000041C   9948               LDR      R0,??ZoneGraph_Paint_16  ;; TextToChangeLength + 24
   \   0000041E   0078               LDRB     R0,[R0, #+0]
   \   00000420   0721               MOVS     R1,#+7
   \   00000422   4843               MULS     R0,R1,R0
   \   00000424   0499               LDR      R1,[SP, #+16]
   \   00000426   0E18               ADDS     R6,R1,R0
   \   00000428   3000               MOVS     R0,R6
   \   0000042A   5330               ADDS     R0,R0,#+83
   \   0000042C   0178               LDRB     R1,[R0, #+0]
   \   0000042E   0829               CMP      R1,#+8
   \   00000430   63D1               BNE      ??ZoneGraph_Paint_17
   5498                  {
   5499          
   5500                    if (ScreenLokal->Graph[ZoneGrapfNrClick].Text[0]!=0)
   \   00000432   4078               LDRB     R0,[R0, #+1]
   \   00000434   0028               CMP      R0,#+0
   \   00000436   82B0               SUB      SP,SP,#+8
   \   00000438   10D0               BEQ      ??ZoneGraph_Paint_18
   5501                    {
   5502                      Label(ScreenLokal->Graph[ZoneGrapfNrClick].Text,0,31, 17 ,6,10,1,127,0); 
   \   0000043A   2000               MOVS     R0,R4
   \   0000043C   0090               STR      R0,[SP, #+0]
   \   0000043E   7F21               MOVS     R1,#+127
   \   00000440   0120               MOVS     R0,#+1
   \   00000442   03B4               PUSH     {R0,R1}
   \   00000444   0A21               MOVS     R1,#+10
   \   00000446   0620               MOVS     R0,#+6
   \   00000448   03B4               PUSH     {R0,R1}
   \   0000044A   1123               MOVS     R3,#+17
   \   0000044C   1F22               MOVS     R2,#+31
   \   0000044E   2100               MOVS     R1,R4
   \   00000450   5436               ADDS     R6,R6,#+84
   \   00000452   3000               MOVS     R0,R6
   \   00000454   ........           BL       Label
   \   00000458   06B0               ADD      SP,SP,#+24
   \   0000045A   0FE0               B        ??ZoneGraph_Paint_19
   5503                    }else{
   5504                      Label("...... ",0,31, 17 ,6,10,1,127,0); 
   \                     ??ZoneGraph_Paint_18:
   \   0000045C   2000               MOVS     R0,R4
   \   0000045E   0090               STR      R0,[SP, #+0]
   \   00000460   7F21               MOVS     R1,#+127
   \   00000462   0120               MOVS     R0,#+1
   \   00000464   03B4               PUSH     {R0,R1}
   \   00000466   0A21               MOVS     R1,#+10
   \   00000468   0620               MOVS     R0,#+6
   \   0000046A   03B4               PUSH     {R0,R1}
   \   0000046C   1123               MOVS     R3,#+17
   \   0000046E   1F22               MOVS     R2,#+31
   \   00000470   2100               MOVS     R1,R4
   \   00000472   2800               MOVS     R0,R5
   \   00000474   6430               ADDS     R0,R0,#+100
   \   00000476   ........           BL       Label
   \   0000047A   06B0               ADD      SP,SP,#+24
   5505                    }
   5506                    
   5507                    Button("Text",2,15,25,11); 
   \                     ??ZoneGraph_Paint_19:
   \   0000047C   82B0               SUB      SP,SP,#+8
   \   0000047E   0B20               MOVS     R0,#+11
   \   00000480   0090               STR      R0,[SP, #+0]
   \   00000482   1923               MOVS     R3,#+25
   \   00000484   0F22               MOVS     R2,#+15
   \   00000486   0221               MOVS     R1,#+2
   \   00000488   2800               MOVS     R0,R5
   \   0000048A   5430               ADDS     R0,R0,#+84
   \   0000048C   ........           BL       Button
   \   00000490   02B0               ADD      SP,SP,#+8
   5508                    
   5509                    Label("+On/Off",0,3, 4 ,7,10,1,127,0); 
   \   00000492   82B0               SUB      SP,SP,#+8
   \   00000494   2000               MOVS     R0,R4
   \   00000496   0090               STR      R0,[SP, #+0]
   \   00000498   7F21               MOVS     R1,#+127
   \   0000049A   0120               MOVS     R0,#+1
   \   0000049C   03B4               PUSH     {R0,R1}
   \   0000049E   0A21               MOVS     R1,#+10
   \   000004A0   0720               MOVS     R0,#+7
   \   000004A2   03B4               PUSH     {R0,R1}
   \   000004A4   0423               MOVS     R3,#+4
   \   000004A6   0322               MOVS     R2,#+3
   \   000004A8   2100               MOVS     R1,R4
   \   000004AA   6C35               ADDS     R5,R5,#+108
   \   000004AC   2800               MOVS     R0,R5
   \   000004AE   ........           BL       Label
   \   000004B2   06B0               ADD      SP,SP,#+24
   5510                    
   5511                    if (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff) 
   \   000004B4   7348               LDR      R0,??ZoneGraph_Paint_16  ;; TextToChangeLength + 24
   \   000004B6   0078               LDRB     R0,[R0, #+0]
   \   000004B8   0721               MOVS     R1,#+7
   \   000004BA   4843               MULS     R0,R1,R0
   \   000004BC   0499               LDR      R1,[SP, #+16]
   \   000004BE   0818               ADDS     R0,R1,R0
   \   000004C0   5930               ADDS     R0,R0,#+89
   \   000004C2   0078               LDRB     R0,[R0, #+0]
   \   000004C4   C007               LSLS     R0,R0,#+31
   \   000004C6   6F46               MOV      R7,SP
   \   000004C8   07D5               BPL      ??ZoneGraph_Paint_20
   5512                    {
   5513                      txt[0]='O'; txt[1]='f';txt[2]='f'; txt[3]=0;
   \   000004CA   4F20               MOVS     R0,#+79
   \   000004CC   3870               STRB     R0,[R7, #+0]
   \   000004CE   6620               MOVS     R0,#+102
   \   000004D0   7870               STRB     R0,[R7, #+1]
   \   000004D2   B870               STRB     R0,[R7, #+2]
   \   000004D4   2000               MOVS     R0,R4
   \   000004D6   F870               STRB     R0,[R7, #+3]
   \   000004D8   05E0               B        ??ZoneGraph_Paint_21
   5514                    }else{
   5515                      txt[0]='O'; txt[1]='n'; txt[2]=0;
   \                     ??ZoneGraph_Paint_20:
   \   000004DA   4F20               MOVS     R0,#+79
   \   000004DC   3870               STRB     R0,[R7, #+0]
   \   000004DE   6E20               MOVS     R0,#+110
   \   000004E0   7870               STRB     R0,[R7, #+1]
   \   000004E2   2000               MOVS     R0,R4
   \   000004E4   B870               STRB     R0,[R7, #+2]
   5516                    }
   5517                    
   5518                    Button(txt,40,3,21,11); 
   \                     ??ZoneGraph_Paint_21:
   \   000004E6   82B0               SUB      SP,SP,#+8
   \   000004E8   0B20               MOVS     R0,#+11
   \   000004EA   0090               STR      R0,[SP, #+0]
   \   000004EC   1523               MOVS     R3,#+21
   \   000004EE   0322               MOVS     R2,#+3
   \   000004F0   2821               MOVS     R1,#+40
   \   000004F2   02A8               ADD      R0,SP,#+8
   \   000004F4   ........           BL       Button
   \   000004F8   02B0               ADD      SP,SP,#+8
   5519                    
   5520                    
   5521                  }
   5522                  
   5523          
   5524                       
   5525                       
   5526                  //je¿eli wartoæ
   5527                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphWartosc) 
   \                     ??ZoneGraph_Paint_17:
   \   000004FA   6248               LDR      R0,??ZoneGraph_Paint_16  ;; TextToChangeLength + 24
   \   000004FC   0078               LDRB     R0,[R0, #+0]
   \   000004FE   0721               MOVS     R1,#+7
   \   00000500   4843               MULS     R0,R1,R0
   \   00000502   0499               LDR      R1,[SP, #+16]
   \   00000504   0818               ADDS     R0,R1,R0
   \   00000506   5330               ADDS     R0,R0,#+83
   \   00000508   0078               LDRB     R0,[R0, #+0]
   \   0000050A   0A28               CMP      R0,#+10
   \   0000050C   00D0               BEQ      .+4
   \   0000050E   94E0               B        ??ZoneGraph_Paint_22
   5528                  {
   5529                    for (char i=0; i<3; i++) 
   \   00000510   2500               MOVS     R5,R4
   \   00000512   13E0               B        ??ZoneGraph_Paint_23
   5530                    {
   5531                     if (ScreenLokal->Graph[ZoneGrapfNrClick].Text[i]>=30) 
   5532                     {Label(&(ScreenLokal->Graph[ZoneGrapfNrClick].Text[i]),2,30-((3-i)*9),17,1,7,1,127,1); 
   5533                     }else{
   5534                      Label(" ",2,30-((3-i)*9),17,1,8,1,127,1);  
   \                     ??ZoneGraph_Paint_24:
   \   00000514   0120               MOVS     R0,#+1
   \   00000516   0090               STR      R0,[SP, #+0]
   \   00000518   7F21               MOVS     R1,#+127
   \   0000051A   03B4               PUSH     {R0,R1}
   \   0000051C   0821               MOVS     R1,#+8
   \   0000051E   03B4               PUSH     {R0,R1}
   \   00000520   1123               MOVS     R3,#+17
   \   00000522   0920               MOVS     R0,#+9
   \   00000524   4243               MULS     R2,R0,R2
   \   00000526   D21C               ADDS     R2,R2,#+3
   \   00000528   1206               LSLS     R2,R2,#+24
   \   0000052A   120E               LSRS     R2,R2,#+24
   \   0000052C   0221               MOVS     R1,#+2
   \   0000052E   56A0               ADR      R0,??ZoneGraph_Paint_16+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000530   ........           BL       Label
   \   00000534   06B0               ADD      SP,SP,#+24
   5535                     }
   \                     ??ZoneGraph_Paint_25:
   \   00000536   6D1C               ADDS     R5,R5,#+1
   \   00000538   2D06               LSLS     R5,R5,#+24
   \   0000053A   2D0E               LSRS     R5,R5,#+24
   \                     ??ZoneGraph_Paint_23:
   \   0000053C   2800               MOVS     R0,R5
   \   0000053E   0328               CMP      R0,#+3
   \   00000540   1FD2               BCS      ??ZoneGraph_Paint_26
   \   00000542   2A00               MOVS     R2,R5
   \   00000544   4F48               LDR      R0,??ZoneGraph_Paint_16  ;; TextToChangeLength + 24
   \   00000546   0078               LDRB     R0,[R0, #+0]
   \   00000548   0721               MOVS     R1,#+7
   \   0000054A   4843               MULS     R0,R1,R0
   \   0000054C   0499               LDR      R1,[SP, #+16]
   \   0000054E   0818               ADDS     R0,R1,R0
   \   00000550   8618               ADDS     R6,R0,R2
   \   00000552   5420               MOVS     R0,#+84
   \   00000554   305C               LDRB     R0,[R6, R0]
   \   00000556   1E28               CMP      R0,#+30
   \   00000558   82B0               SUB      SP,SP,#+8
   \   0000055A   DBD3               BCC      ??ZoneGraph_Paint_24
   \   0000055C   0120               MOVS     R0,#+1
   \   0000055E   0090               STR      R0,[SP, #+0]
   \   00000560   7F21               MOVS     R1,#+127
   \   00000562   03B4               PUSH     {R0,R1}
   \   00000564   0721               MOVS     R1,#+7
   \   00000566   03B4               PUSH     {R0,R1}
   \   00000568   1123               MOVS     R3,#+17
   \   0000056A   0920               MOVS     R0,#+9
   \   0000056C   4243               MULS     R2,R0,R2
   \   0000056E   D21C               ADDS     R2,R2,#+3
   \   00000570   1206               LSLS     R2,R2,#+24
   \   00000572   120E               LSRS     R2,R2,#+24
   \   00000574   0221               MOVS     R1,#+2
   \   00000576   5436               ADDS     R6,R6,#+84
   \   00000578   3000               MOVS     R0,R6
   \   0000057A   ........           BL       Label
   \   0000057E   06B0               ADD      SP,SP,#+24
   \   00000580   D9E7               B        ??ZoneGraph_Paint_25
   5536                    }
   5537                    
   5538                    txt[0]='N'; txt[1]=':'; txt[2]=0;
   \                     ??ZoneGraph_Paint_26:
   \   00000582   6F46               MOV      R7,SP
   \   00000584   4E20               MOVS     R0,#+78
   \   00000586   3870               STRB     R0,[R7, #+0]
   \   00000588   3A20               MOVS     R0,#+58
   \   0000058A   7870               STRB     R0,[R7, #+1]
   \   0000058C   2000               MOVS     R0,R4
   \   0000058E   B870               STRB     R0,[R7, #+2]
   5539                    Label(txt,0,33, 17 ,2,10,1,127,0); 
   \   00000590   82B0               SUB      SP,SP,#+8
   \   00000592   0090               STR      R0,[SP, #+0]
   \   00000594   7F21               MOVS     R1,#+127
   \   00000596   0120               MOVS     R0,#+1
   \   00000598   03B4               PUSH     {R0,R1}
   \   0000059A   0A21               MOVS     R1,#+10
   \   0000059C   0220               MOVS     R0,#+2
   \   0000059E   03B4               PUSH     {R0,R1}
   \   000005A0   1123               MOVS     R3,#+17
   \   000005A2   2122               MOVS     R2,#+33
   \   000005A4   2100               MOVS     R1,R4
   \   000005A6   06A8               ADD      R0,SP,#+24
   \   000005A8   ........           BL       Label
   \   000005AC   06B0               ADD      SP,SP,#+24
   5540                    txt[1]=0;txt[2]=0;
   \   000005AE   2000               MOVS     R0,R4
   \   000005B0   7870               STRB     R0,[R7, #+1]
   \   000005B2   BC70               STRB     R4,[R7, #+2]
   5541                    char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000005B4   0222               MOVS     R2,#+2
   \   000005B6   6946               MOV      R1,SP
   \   000005B8   3248               LDR      R0,??ZoneGraph_Paint_16  ;; TextToChangeLength + 24
   \   000005BA   0078               LDRB     R0,[R0, #+0]
   \   000005BC   0723               MOVS     R3,#+7
   \   000005BE   5843               MULS     R0,R3,R0
   \   000005C0   049B               LDR      R3,[SP, #+16]
   \   000005C2   1818               ADDS     R0,R3,R0
   \   000005C4   5730               ADDS     R0,R0,#+87
   \   000005C6   0078               LDRB     R0,[R0, #+0]
   \   000005C8   ........           BL       CharToStr
   5542                    txt[ind++]='.';
   \   000005CC   0100               MOVS     R1,R0
   \   000005CE   2E22               MOVS     R2,#+46
   \   000005D0   7A54               STRB     R2,[R7, R1]
   \   000005D2   401C               ADDS     R0,R0,#+1
   \   000005D4   0006               LSLS     R0,R0,#+24
   \   000005D6   000E               LSRS     R0,R0,#+24
   5543                    ind+=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Reg, &txt[ind], 2); //(char Value, char *Vstring, char ill);
   \   000005D8   0400               MOVS     R4,R0
   \   000005DA   0222               MOVS     R2,#+2
   \   000005DC   3918               ADDS     R1,R7,R0
   \   000005DE   2948               LDR      R0,??ZoneGraph_Paint_16  ;; TextToChangeLength + 24
   \   000005E0   0078               LDRB     R0,[R0, #+0]
   \   000005E2   0723               MOVS     R3,#+7
   \   000005E4   5843               MULS     R0,R3,R0
   \   000005E6   049B               LDR      R3,[SP, #+16]
   \   000005E8   1818               ADDS     R0,R3,R0
   \   000005EA   5830               ADDS     R0,R0,#+88
   \   000005EC   0078               LDRB     R0,[R0, #+0]
   \   000005EE   ........           BL       CharToStr
   \   000005F2   2218               ADDS     R2,R4,R0
   \   000005F4   1206               LSLS     R2,R2,#+24
   \   000005F6   120E               LSRS     R2,R2,#+24
   5544                    Label(txt,0,42, 17 ,ind,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000005F8   82B0               SUB      SP,SP,#+8
   \   000005FA   0020               MOVS     R0,#+0
   \   000005FC   0090               STR      R0,[SP, #+0]
   \   000005FE   7F21               MOVS     R1,#+127
   \   00000600   0120               MOVS     R0,#+1
   \   00000602   03B4               PUSH     {R0,R1}
   \   00000604   0A21               MOVS     R1,#+10
   \   00000606   1000               MOVS     R0,R2
   \   00000608   03B4               PUSH     {R0,R1}
   \   0000060A   1123               MOVS     R3,#+17
   \   0000060C   2A22               MOVS     R2,#+42
   \   0000060E   0021               MOVS     R1,#+0
   \   00000610   06A8               ADD      R0,SP,#+24
   \   00000612   ........           BL       Label
   \   00000616   06B0               ADD      SP,SP,#+24
   5545                  
   5546                    Button(Speech[g_leng].Zmiana,8,3,44,13); 
   \   00000618   82B0               SUB      SP,SP,#+8
   \   0000061A   0D20               MOVS     R0,#+13
   \   0000061C   0090               STR      R0,[SP, #+0]
   \   0000061E   2C23               MOVS     R3,#+44
   \   00000620   0322               MOVS     R2,#+3
   \   00000622   0821               MOVS     R1,#+8
   \   00000624   1948               LDR      R0,??ZoneGraph_Paint_16+0x8  ;; 0x50a
   \   00000626   1A4C               LDR      R4,??ZoneGraph_Paint_16+0xC  ;; g_leng
   \   00000628   2468               LDR      R4,[R4, #+0]
   \   0000062A   1A4D               LDR      R5,??ZoneGraph_Paint_16+0x10  ;; 0xa7d
   \   0000062C   6C43               MULS     R4,R5,R4
   \   0000062E   1A4D               LDR      R5,??ZoneGraph_Paint_16+0x14  ;; Speech
   \   00000630   2C19               ADDS     R4,R5,R4
   \   00000632   2018               ADDS     R0,R4,R0
   \   00000634   ........           BL       Button
   \   00000638   02B0               ADD      SP,SP,#+8
   5547             
   5548                  }
   5549                  
   5550                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphScena) 
   \                     ??ZoneGraph_Paint_22:
   \   0000063A   1248               LDR      R0,??ZoneGraph_Paint_16  ;; TextToChangeLength + 24
   \   0000063C   0078               LDRB     R0,[R0, #+0]
   \   0000063E   0721               MOVS     R1,#+7
   \   00000640   4843               MULS     R0,R1,R0
   \   00000642   0499               LDR      R1,[SP, #+16]
   \   00000644   0818               ADDS     R0,R1,R0
   \   00000646   5330               ADDS     R0,R0,#+83
   \   00000648   0078               LDRB     R0,[R0, #+0]
   \   0000064A   0928               CMP      R0,#+9
   \   0000064C   16D1               BNE      ??ZoneGraph_Paint_27
   5551                  {
   5552                    Label(Speech[g_leng].NumerSceny,0,2, 12 ,15,10,1,127,0); 
   \   0000064E   82B0               SUB      SP,SP,#+8
   \   00000650   0020               MOVS     R0,#+0
   \   00000652   0090               STR      R0,[SP, #+0]
   \   00000654   7F21               MOVS     R1,#+127
   \   00000656   0120               MOVS     R0,#+1
   \   00000658   03B4               PUSH     {R0,R1}
   \   0000065A   0A21               MOVS     R1,#+10
   \   0000065C   0F20               MOVS     R0,#+15
   \   0000065E   03B4               PUSH     {R0,R1}
   \   00000660   0C23               MOVS     R3,#+12
   \   00000662   0222               MOVS     R2,#+2
   \   00000664   0021               MOVS     R1,#+0
   \   00000666   0D48               LDR      R0,??ZoneGraph_Paint_16+0x18  ;; 0x4fb
   \   00000668   094C               LDR      R4,??ZoneGraph_Paint_16+0xC  ;; g_leng
   \   0000066A   2468               LDR      R4,[R4, #+0]
   \   0000066C   094D               LDR      R5,??ZoneGraph_Paint_16+0x10  ;; 0xa7d
   \   0000066E   6C43               MULS     R4,R5,R4
   \   00000670   094D               LDR      R5,??ZoneGraph_Paint_16+0x14  ;; Speech
   \   00000672   2C19               ADDS     R4,R5,R4
   \   00000674   2018               ADDS     R0,R4,R0
   \   00000676   ........           BL       Label
   \   0000067A   06B0               ADD      SP,SP,#+24
   5553                  }
   5554                  
   5555                  
   5556                }//________________________________________________________________________
   \                     ??ZoneGraph_Paint_27:
   \   0000067C   05B0               ADD      SP,SP,#+20
   \   0000067E   F0BC               POP      {R4-R7}
   \   00000680   01BC               POP      {R0}
   \   00000682   0047               BX       R0               ;; return
   \                     ??ZoneGraph_Paint_16:
   \   00000684   ........           DC32     TextToChangeLength + 24
   \   00000688   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000068C   0A050000           DC32     0x50a
   \   00000690   ........           DC32     g_leng
   \   00000694   7D0A0000           DC32     0xa7d
   \   00000698   ........           DC32     Speech
   \   0000069C   FB040000           DC32     0x4fb
   5557          
   5558              
   5559          
   5560          

   \                                 In section Debug.txt, align 4, keep-with-next
   5561           void ZoneGraph_Event(_Screen* ScreenLokal)
   5562                {
   \                     ZoneGraph_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   6846               MOV      R0,SP
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0170               STRB     R1,[R0, #+0]
   5563                     char ButonClickNr=0;
   5564                  //zdarzenie typu down "X"
   5565                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   0000000A   AB48               LDR      R0,??ZoneGraph_Event_0  ;; X_down
   \   0000000C   405E               LDRSH    R0,[R0, R1]
   \   0000000E   2F28               CMP      R0,#+47
   \   00000010   2EDB               BLT      ??ZoneGraph_Event_1
   \   00000012   3F28               CMP      R0,#+63
   \   00000014   2CDA               BGE      ??ZoneGraph_Event_1
   \   00000016   A948               LDR      R0,??ZoneGraph_Event_0+0x4  ;; Y_down
   \   00000018   405E               LDRSH    R0,[R0, R1]
   \   0000001A   7128               CMP      R0,#+113
   \   0000001C   28DB               BLT      ??ZoneGraph_Event_1
   \   0000001E   7F28               CMP      R0,#+127
   \   00000020   26DA               BGE      ??ZoneGraph_Event_1
   5566                  {
   5567                    //MenuPaint();
   5568                    H_line(49,114,10,0);
   \   00000022   0B00               MOVS     R3,R1
   \   00000024   0A22               MOVS     R2,#+10
   \   00000026   7221               MOVS     R1,#+114
   \   00000028   3120               MOVS     R0,#+49
   \   0000002A   ........           BL       H_line
   5569                    H_line(49,123,10,0); 
   \   0000002E   0023               MOVS     R3,#+0
   \   00000030   0A22               MOVS     R2,#+10
   \   00000032   7B21               MOVS     R1,#+123
   \   00000034   3120               MOVS     R0,#+49
   \   00000036   ........           BL       H_line
   5570                    V_line(49,114,10,0); 
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0A22               MOVS     R2,#+10
   \   0000003E   7221               MOVS     R1,#+114
   \   00000040   3120               MOVS     R0,#+49
   \   00000042   ........           BL       V_line
   5571                    V_line(58,114,10,0); 
   \   00000046   0023               MOVS     R3,#+0
   \   00000048   0A22               MOVS     R2,#+10
   \   0000004A   7221               MOVS     R1,#+114
   \   0000004C   3A20               MOVS     R0,#+58
   \   0000004E   ........           BL       V_line
   5572                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000052   9B48               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   00000054   0078               LDRB     R0,[R0, #+0]
   \   00000056   0028               CMP      R0,#+0
   \   00000058   0AD1               BNE      ??ZoneGraph_Event_1
   \   0000005A   9A48               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   0000005C   8021               MOVS     R1,#+128
   \   0000005E   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000060   0160               STR      R1,[R0, #+0]
   \   00000062   994A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   00000064   9948               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   00000066   03C8               LDM      R0!,{R0,R1}
   \   00000068   0023               MOVS     R3,#+0
   \   0000006A   0830               ADDS     R0,R0,#+8
   \   0000006C   5941               ADCS     R1,R1,R3
   \   0000006E   03C2               STM      R2!,{R0,R1}
   \                     ??ZoneGraph_Event_1:
   \   00000070   9748               LDR      R0,??ZoneGraph_Event_0+0x18  ;; X_up
   \   00000072   0021               MOVS     R1,#+0
   \   00000074   405E               LDRSH    R0,[R0, R1]
   \   00000076   2F28               CMP      R0,#+47
   \   00000078   1FDB               BLT      ??ZoneGraph_Event_2
   \   0000007A   3F28               CMP      R0,#+63
   \   0000007C   1DDA               BGE      ??ZoneGraph_Event_2
   \   0000007E   9548               LDR      R0,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   00000080   405E               LDRSH    R0,[R0, R1]
   \   00000082   7128               CMP      R0,#+113
   \   00000084   19DB               BLT      ??ZoneGraph_Event_2
   \   00000086   7F28               CMP      R0,#+127
   \   00000088   17DA               BGE      ??ZoneGraph_Event_2
   5573                    
   5574                  }
   5575            
   5576                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   5577                  {
   5578                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000008A   8D48               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   0000008C   0078               LDRB     R0,[R0, #+0]
   \   0000008E   0028               CMP      R0,#+0
   \   00000090   0AD1               BNE      ??ZoneGraph_Event_3
   \   00000092   8C48               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   00000094   8021               MOVS     R1,#+128
   \   00000096   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000098   0160               STR      R1,[R0, #+0]
   \   0000009A   8B4A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   0000009C   8B48               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   0000009E   03C8               LDM      R0!,{R0,R1}
   \   000000A0   0023               MOVS     R3,#+0
   \   000000A2   0830               ADDS     R0,R0,#+8
   \   000000A4   5941               ADCS     R1,R1,R3
   \   000000A6   03C2               STM      R2!,{R0,R1}
   5579                      MenuLevel=(MenuLevel/10);
   \                     ??ZoneGraph_Event_3:
   \   000000A8   8B4F               LDR      R7,??ZoneGraph_Event_0+0x20  ;; TextToChangeLength
   \   000000AA   386D               LDR      R0,[R7, #+80]
   \   000000AC   0A21               MOVS     R1,#+10
   \   000000AE   ........           BL       __aeabi_idivmod
   \   000000B2   3865               STR      R0,[R7, #+80]
   5580                      MenuPaint();
   \   000000B4   ........           BL       MenuPaint
   \   000000B8   10E2               B        ??ZoneGraph_Event_4
   5581                  }  
   5582                  else
   5583                  {
   5584          
   5585                  
   5586                  //wybór grafiki
   5587                  char idx=0;
   \                     ??ZoneGraph_Event_2:
   \   000000BA   0C00               MOVS     R4,R1
   5588                  char click=0;
   \   000000BC   6846               MOV      R0,SP
   \   000000BE   4170               STRB     R1,[R0, #+1]
   \   000000C0   0325               MOVS     R5,#+3
   \   000000C2   3DE0               B        ??ZoneGraph_Event_5
   5589          
   5590                  for (int j=(MaxRowGr-1); j>=0; j--)
   5591                  {
   5592                    for (int i=0; i<MaxColGr; i++)
   \                     ??ZoneGraph_Event_6:
   \   000000C4   8248               LDR      R0,??ZoneGraph_Event_0+0x18  ;; X_up
   \   000000C6   0021               MOVS     R1,#+0
   \   000000C8   405E               LDRSH    R0,[R0, R1]
   \   000000CA   1421               MOVS     R1,#+20
   \   000000CC   7143               MULS     R1,R6,R1
   \   000000CE   0A00               MOVS     R2,R1
   \   000000D0   521C               ADDS     R2,R2,#+1
   \   000000D2   8242               CMP      R2,R0
   \   000000D4   2DDA               BGE      ??ZoneGraph_Event_7
   \   000000D6   1531               ADDS     R1,R1,#+21
   \   000000D8   8842               CMP      R0,R1
   \   000000DA   2ADA               BGE      ??ZoneGraph_Event_7
   \   000000DC   7D48               LDR      R0,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   000000DE   0021               MOVS     R1,#+0
   \   000000E0   405E               LDRSH    R0,[R0, R1]
   \   000000E2   1421               MOVS     R1,#+20
   \   000000E4   6943               MULS     R1,R5,R1
   \   000000E6   0A00               MOVS     R2,R1
   \   000000E8   1B32               ADDS     R2,R2,#+27
   \   000000EA   8242               CMP      R2,R0
   \   000000EC   21DA               BGE      ??ZoneGraph_Event_7
   \   000000EE   3031               ADDS     R1,R1,#+48
   \   000000F0   8842               CMP      R0,R1
   \   000000F2   1EDA               BGE      ??ZoneGraph_Event_7
   5593                    {
   5594                        
   5595                        if ((X_up>1+i*20) && (X_up<1+(i+1)*20) && (Y_up>Y_offset+j*20) && (Y_up<Y_offset+1+(j+1)*20))                    //"X"
   5596                        {
   5597          
   5598                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000F4   7248               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   000000F6   0078               LDRB     R0,[R0, #+0]
   \   000000F8   0028               CMP      R0,#+0
   \   000000FA   0AD1               BNE      ??ZoneGraph_Event_8
   \   000000FC   7148               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   000000FE   8021               MOVS     R1,#+128
   \   00000100   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000102   0160               STR      R1,[R0, #+0]
   \   00000104   704A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   00000106   7148               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   00000108   03C8               LDM      R0!,{R0,R1}
   \   0000010A   0023               MOVS     R3,#+0
   \   0000010C   0830               ADDS     R0,R0,#+8
   \   0000010E   5941               ADCS     R1,R1,R3
   \   00000110   03C2               STM      R2!,{R0,R1}
   5599          
   5600                          ScreenLokal->Graph[ZoneGrapfNrClick].Type=idx;
                                                                          ^
Warning[Pe188]: enumerated type mixed with another type
   \                     ??ZoneGraph_Event_8:
   \   00000112   714F               LDR      R7,??ZoneGraph_Event_0+0x20  ;; TextToChangeLength
   \   00000114   387E               LDRB     R0,[R7, #+24]
   \   00000116   0721               MOVS     R1,#+7
   \   00000118   4843               MULS     R0,R1,R0
   \   0000011A   0299               LDR      R1,[SP, #+8]
   \   0000011C   0818               ADDS     R0,R1,R0
   \   0000011E   5330               ADDS     R0,R0,#+83
   \   00000120   2100               MOVS     R1,R4
   \   00000122   0170               STRB     R1,[R0, #+0]
   5601                          click=1;
   \   00000124   0120               MOVS     R0,#+1
   \   00000126   6946               MOV      R1,SP
   \   00000128   0200               MOVS     R2,R0
   \   0000012A   4A70               STRB     R2,[R1, #+1]
   5602                          ProgramChange=1;
   \   0000012C   3872               STRB     R0,[R7, #+8]
   5603                          MenuPaint();
   \   0000012E   ........           BL       MenuPaint
   5604                         
   5605                        }
   5606                        idx++;
   \                     ??ZoneGraph_Event_7:
   \   00000132   641C               ADDS     R4,R4,#+1
   \   00000134   2406               LSLS     R4,R4,#+24
   \   00000136   240E               LSRS     R4,R4,#+24
   5607                      
   5608                    }
   \   00000138   761C               ADDS     R6,R6,#+1
   \                     ??ZoneGraph_Event_9:
   \   0000013A   032E               CMP      R6,#+3
   \   0000013C   C2DB               BLT      ??ZoneGraph_Event_6
   \   0000013E   6D1E               SUBS     R5,R5,#+1
   \                     ??ZoneGraph_Event_5:
   \   00000140   002D               CMP      R5,#+0
   \   00000142   01D4               BMI      ??ZoneGraph_Event_10
   \   00000144   0026               MOVS     R6,#+0
   \   00000146   F8E7               B        ??ZoneGraph_Event_9
   5609                    
   5610                  }
   5611                  
   5612          
   5613            
   5614               
   5615                  if (click)
   \                     ??ZoneGraph_Event_10:
   \   00000148   634F               LDR      R7,??ZoneGraph_Event_0+0x20  ;; TextToChangeLength
   \   0000014A   387E               LDRB     R0,[R7, #+24]
   \   0000014C   0721               MOVS     R1,#+7
   \   0000014E   4843               MULS     R0,R1,R0
   \   00000150   0299               LDR      R1,[SP, #+8]
   \   00000152   0818               ADDS     R0,R1,R0
   \   00000154   6946               MOV      R1,SP
   \   00000156   4978               LDRB     R1,[R1, #+1]
   \   00000158   0029               CMP      R1,#+0
   \   0000015A   09D0               BEQ      ??ZoneGraph_Event_11
   5616                  {
   5617          
   5618                  
   5619                  if ((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) )
   \   0000015C   5330               ADDS     R0,R0,#+83
   \   0000015E   0078               LDRB     R0,[R0, #+0]
   \   00000160   0828               CMP      R0,#+8
   \   00000162   00D0               BEQ      .+4
   \   00000164   BAE1               B        ??ZoneGraph_Event_4
   5620                  {
   5621                    ProgramChange=1;
   \   00000166   0120               MOVS     R0,#+1
   \   00000168   3872               STRB     R0,[R7, #+8]
   5622          
   5623                    MenuPaint(); 
   \   0000016A   ........           BL       MenuPaint
   \   0000016E   B5E1               B        ??ZoneGraph_Event_4
   5624                  }
   5625                  
   5626                  }
   5627                  else
   5628                  {
   5629                  
   5630                 
   5631           
   5632                  //je¿eli On / Off
   5633                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff) 
   \                     ??ZoneGraph_Event_11:
   \   00000170   5330               ADDS     R0,R0,#+83
   \   00000172   0078               LDRB     R0,[R0, #+0]
   \   00000174   0B28               CMP      R0,#+11
   \   00000176   00D0               BEQ      .+4
   \   00000178   B8E0               B        ??ZoneGraph_Event_12
   5634                  {
   5635                    char txt[2];
   5636                    char Repaint=0;
   \   0000017A   0026               MOVS     R6,#+0
   5637                    txt[0]='<';txt[1]=0;
   \   0000017C   3C24               MOVS     R4,#+60
   \   0000017E   01AD               ADD      R5,SP,#+4
   \   00000180   2C70               STRB     R4,[R5, #+0]
   \   00000182   3000               MOVS     R0,R6
   \   00000184   6870               STRB     R0,[R5, #+1]
   5638                    if (Button(txt,3,15,15,11)==1) { if((ScreenLokal->Graph[ZoneGrapfNrClick].Nr>=0) && (ScreenLokal->Graph[ZoneGrapfNrClick].Nr!=0xFF)) ScreenLokal->Graph[ZoneGrapfNrClick].Nr--; else ScreenLokal->Graph[ZoneGrapfNrClick].Nr=NumberNeurons-1; Repaint=1;}  
                                                                                                       ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \   00000186   82B0               SUB      SP,SP,#+8
   \   00000188   0B20               MOVS     R0,#+11
   \   0000018A   0090               STR      R0,[SP, #+0]
   \   0000018C   0F23               MOVS     R3,#+15
   \   0000018E   1A00               MOVS     R2,R3
   \   00000190   0321               MOVS     R1,#+3
   \   00000192   03A8               ADD      R0,SP,#+12
   \   00000194   ........           BL       Button
   \   00000198   02B0               ADD      SP,SP,#+8
   \   0000019A   0128               CMP      R0,#+1
   \   0000019C   13D1               BNE      ??ZoneGraph_Event_13
   \   0000019E   387E               LDRB     R0,[R7, #+24]
   \   000001A0   0721               MOVS     R1,#+7
   \   000001A2   4843               MULS     R0,R1,R0
   \   000001A4   0299               LDR      R1,[SP, #+8]
   \   000001A6   0818               ADDS     R0,R1,R0
   \   000001A8   5721               MOVS     R1,#+87
   \   000001AA   415C               LDRB     R1,[R0, R1]
   \   000001AC   FF29               CMP      R1,#+255
   \   000001AE   06D0               BEQ      ??ZoneGraph_Event_14
   \   000001B0   5721               MOVS     R1,#+87
   \   000001B2   0200               MOVS     R2,R0
   \   000001B4   5732               ADDS     R2,R2,#+87
   \   000001B6   1278               LDRB     R2,[R2, #+0]
   \   000001B8   521E               SUBS     R2,R2,#+1
   \   000001BA   4254               STRB     R2,[R0, R1]
   \   000001BC   02E0               B        ??ZoneGraph_Event_15
   \                     ??ZoneGraph_Event_14:
   \   000001BE   5730               ADDS     R0,R0,#+87
   \   000001C0   2221               MOVS     R1,#+34
   \   000001C2   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_15:
   \   000001C4   0126               MOVS     R6,#+1
   \                     ??ZoneGraph_Event_13:
   \   000001C6   3E20               MOVS     R0,#+62
   \   000001C8   2870               STRB     R0,[R5, #+0]
   5639                    txt[0]='>';
   5640                    if (Button(txt,45,15,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Nr+1<NumberNeurons) ScreenLokal->Graph[ZoneGrapfNrClick].Nr++; else ScreenLokal->Graph[ZoneGrapfNrClick].Nr=0; Repaint=1;} 
   \   000001CA   82B0               SUB      SP,SP,#+8
   \   000001CC   0B20               MOVS     R0,#+11
   \   000001CE   0090               STR      R0,[SP, #+0]
   \   000001D0   0F23               MOVS     R3,#+15
   \   000001D2   1A00               MOVS     R2,R3
   \   000001D4   2D21               MOVS     R1,#+45
   \   000001D6   03A8               ADD      R0,SP,#+12
   \   000001D8   ........           BL       Button
   \   000001DC   02B0               ADD      SP,SP,#+8
   \   000001DE   0128               CMP      R0,#+1
   \   000001E0   16D1               BNE      ??ZoneGraph_Event_16
   \   000001E2   387E               LDRB     R0,[R7, #+24]
   \   000001E4   0721               MOVS     R1,#+7
   \   000001E6   4843               MULS     R0,R1,R0
   \   000001E8   0299               LDR      R1,[SP, #+8]
   \   000001EA   0818               ADDS     R0,R1,R0
   \   000001EC   5721               MOVS     R1,#+87
   \   000001EE   415C               LDRB     R1,[R0, R1]
   \   000001F0   491C               ADDS     R1,R1,#+1
   \   000001F2   0904               LSLS     R1,R1,#+16
   \   000001F4   090C               LSRS     R1,R1,#+16
   \   000001F6   2329               CMP      R1,#+35
   \   000001F8   06D2               BCS      ??ZoneGraph_Event_17
   \   000001FA   5721               MOVS     R1,#+87
   \   000001FC   0200               MOVS     R2,R0
   \   000001FE   5732               ADDS     R2,R2,#+87
   \   00000200   1278               LDRB     R2,[R2, #+0]
   \   00000202   521C               ADDS     R2,R2,#+1
   \   00000204   4254               STRB     R2,[R0, R1]
   \   00000206   02E0               B        ??ZoneGraph_Event_18
   \                     ??ZoneGraph_Event_17:
   \   00000208   5730               ADDS     R0,R0,#+87
   \   0000020A   0021               MOVS     R1,#+0
   \   0000020C   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_18:
   \   0000020E   0126               MOVS     R6,#+1
   5641                   
   5642                    
   5643                    if ((ScreenLokal->Graph[ZoneGrapfNrClick].Nr>=0) && (ScreenLokal->Graph[ZoneGrapfNrClick].Nr!=0xFF)) //je¿eli wejcie
                                                                       ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
   \                     ??ZoneGraph_Event_16:
   \   00000210   387E               LDRB     R0,[R7, #+24]
   \   00000212   0721               MOVS     R1,#+7
   \   00000214   4843               MULS     R0,R1,R0
   \   00000216   0299               LDR      R1,[SP, #+8]
   \   00000218   0818               ADDS     R0,R1,R0
   \   0000021A   5730               ADDS     R0,R0,#+87
   \   0000021C   0178               LDRB     R1,[R0, #+0]
   \   0000021E   FF29               CMP      R1,#+255
   \   00000220   00D1               BNE      .+4
   \   00000222   C8E0               B        ??ZoneGraph_Event_19
   5644                    {
   5645                      if (ScreenLokal->Graph[ZoneGrapfNrClick].Port>(NumberNeuronsPort-1)) ScreenLokal->Graph[ZoneGrapfNrClick].Port=NumberNeuronsPort-1;
   \   00000224   4178               LDRB     R1,[R0, #+1]
   \   00000226   1029               CMP      R1,#+16
   \   00000228   01D3               BCC      ??ZoneGraph_Event_20
   \   0000022A   0F21               MOVS     R1,#+15
   \   0000022C   4170               STRB     R1,[R0, #+1]
   5646                      
   5647                      txt[0]='<';txt[1]=0;
   \                     ??ZoneGraph_Event_20:
   \   0000022E   2C70               STRB     R4,[R5, #+0]
   \   00000230   0020               MOVS     R0,#+0
   \   00000232   6870               STRB     R0,[R5, #+1]
   5648                      if (Button(txt,3,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port>0) ScreenLokal->Graph[ZoneGrapfNrClick].Port--; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=NumberNeuronsPort-1; Repaint=1;}  
   \   00000234   82B0               SUB      SP,SP,#+8
   \   00000236   0B20               MOVS     R0,#+11
   \   00000238   0090               STR      R0,[SP, #+0]
   \   0000023A   0F23               MOVS     R3,#+15
   \   0000023C   0322               MOVS     R2,#+3
   \   0000023E   1100               MOVS     R1,R2
   \   00000240   03A8               ADD      R0,SP,#+12
   \   00000242   ........           BL       Button
   \   00000246   02B0               ADD      SP,SP,#+8
   \   00000248   0128               CMP      R0,#+1
   \   0000024A   13D1               BNE      ??ZoneGraph_Event_21
   \   0000024C   387E               LDRB     R0,[R7, #+24]
   \   0000024E   0721               MOVS     R1,#+7
   \   00000250   4843               MULS     R0,R1,R0
   \   00000252   0299               LDR      R1,[SP, #+8]
   \   00000254   0818               ADDS     R0,R1,R0
   \   00000256   5821               MOVS     R1,#+88
   \   00000258   415C               LDRB     R1,[R0, R1]
   \   0000025A   0029               CMP      R1,#+0
   \   0000025C   06D0               BEQ      ??ZoneGraph_Event_22
   \   0000025E   5821               MOVS     R1,#+88
   \   00000260   0200               MOVS     R2,R0
   \   00000262   5832               ADDS     R2,R2,#+88
   \   00000264   1278               LDRB     R2,[R2, #+0]
   \   00000266   521E               SUBS     R2,R2,#+1
   \   00000268   4254               STRB     R2,[R0, R1]
   \   0000026A   02E0               B        ??ZoneGraph_Event_23
   \                     ??ZoneGraph_Event_22:
   \   0000026C   5830               ADDS     R0,R0,#+88
   \   0000026E   0F21               MOVS     R1,#+15
   \   00000270   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_23:
   \   00000272   0126               MOVS     R6,#+1
   5649                      txt[0]='>';
   \                     ??ZoneGraph_Event_21:
   \   00000274   3E20               MOVS     R0,#+62
   \   00000276   2870               STRB     R0,[R5, #+0]
   5650                      if (Button(txt,45,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port+1<NumberNeuronsPort) ScreenLokal->Graph[ZoneGrapfNrClick].Port++; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=0; Repaint=1;} 
   \   00000278   82B0               SUB      SP,SP,#+8
   \   0000027A   0B20               MOVS     R0,#+11
   \   0000027C   0090               STR      R0,[SP, #+0]
   \   0000027E   0F23               MOVS     R3,#+15
   \   00000280   0322               MOVS     R2,#+3
   \   00000282   2D21               MOVS     R1,#+45
   \   00000284   03A8               ADD      R0,SP,#+12
   \   00000286   ........           BL       Button
   \   0000028A   02B0               ADD      SP,SP,#+8
   \   0000028C   0128               CMP      R0,#+1
   \   0000028E   29D1               BNE      ??ZoneGraph_Event_24
   \   00000290   387E               LDRB     R0,[R7, #+24]
   \   00000292   0721               MOVS     R1,#+7
   \   00000294   4843               MULS     R0,R1,R0
   \   00000296   0299               LDR      R1,[SP, #+8]
   \   00000298   0818               ADDS     R0,R1,R0
   \   0000029A   5821               MOVS     R1,#+88
   \   0000029C   415C               LDRB     R1,[R0, R1]
   \   0000029E   491C               ADDS     R1,R1,#+1
   \   000002A0   0904               LSLS     R1,R1,#+16
   \   000002A2   090C               LSRS     R1,R1,#+16
   \   000002A4   1029               CMP      R1,#+16
   \   000002A6   19D2               BCS      ??ZoneGraph_Event_25
   \   000002A8   5821               MOVS     R1,#+88
   \   000002AA   0200               MOVS     R2,R0
   \   000002AC   5832               ADDS     R2,R2,#+88
   \   000002AE   1278               LDRB     R2,[R2, #+0]
   \   000002B0   521C               ADDS     R2,R2,#+1
   \   000002B2   4254               STRB     R2,[R0, R1]
   \   000002B4   15E0               B        ??ZoneGraph_Event_26
   \   000002B6   C046               Nop      
   \                     ??ZoneGraph_Event_0:
   \   000002B8   ........           DC32     X_down
   \   000002BC   ........           DC32     Y_down
   \   000002C0   E9D71300           DC32     0x13d7e9
   \   000002C4   30F4FFFF           DC32     0xfffff430
   \   000002C8   ........           DC32     ButtonBipCounter
   \   000002CC   ........           DC32     g_counter
   \   000002D0   ........           DC32     X_up
   \   000002D4   ........           DC32     Y_up
   \   000002D8   ........           DC32     TextToChangeLength
   \                     ??ZoneGraph_Event_25:
   \   000002DC   5830               ADDS     R0,R0,#+88
   \   000002DE   0021               MOVS     R1,#+0
   \   000002E0   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_26:
   \   000002E2   0126               MOVS     R6,#+1
   5651                    }else{   //je¿eli zmienna
   5652                      txt[0]='<';txt[1]=0;
   5653                      if (Button(txt,3,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port>0) ScreenLokal->Graph[ZoneGrapfNrClick].Port--; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=99; Repaint=1;}  
   5654                      txt[0]='>';
   5655                      if (Button(txt,45,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port+1<99) ScreenLokal->Graph[ZoneGrapfNrClick].Port++; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=0; Repaint=1;} 
   5656                    
   5657                    }
   5658                    
   5659                    if (Repaint) MenuPaint(); 
   \                     ??ZoneGraph_Event_24:
   \   000002E4   002E               CMP      R6,#+0
   \   000002E6   01D0               BEQ      ??ZoneGraph_Event_12
   \   000002E8   ........           BL       MenuPaint
   5660                  } 
   5661                     
   5662                     
   5663                    if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphWartosc) 
   \                     ??ZoneGraph_Event_12:
   \   000002EC   387E               LDRB     R0,[R7, #+24]
   \   000002EE   0721               MOVS     R1,#+7
   \   000002F0   4843               MULS     R0,R1,R0
   \   000002F2   0299               LDR      R1,[SP, #+8]
   \   000002F4   0818               ADDS     R0,R1,R0
   \   000002F6   5330               ADDS     R0,R0,#+83
   \   000002F8   0078               LDRB     R0,[R0, #+0]
   \   000002FA   0A28               CMP      R0,#+10
   \   000002FC   15D1               BNE      ??ZoneGraph_Event_27
   5664                    {
   5665                       if (Button(Speech[g_leng].Zmiana,8,3,44,13)==1) ButonClickNr=1;
   \   000002FE   82B0               SUB      SP,SP,#+8
   \   00000300   0D20               MOVS     R0,#+13
   \   00000302   0090               STR      R0,[SP, #+0]
   \   00000304   2C23               MOVS     R3,#+44
   \   00000306   0322               MOVS     R2,#+3
   \   00000308   0821               MOVS     R1,#+8
   \   0000030A   7648               LDR      R0,??ZoneGraph_Event_28  ;; 0x50a
   \   0000030C   764C               LDR      R4,??ZoneGraph_Event_28+0x4  ;; g_leng
   \   0000030E   2468               LDR      R4,[R4, #+0]
   \   00000310   764D               LDR      R5,??ZoneGraph_Event_28+0x8  ;; 0xa7d
   \   00000312   6C43               MULS     R4,R5,R4
   \   00000314   764D               LDR      R5,??ZoneGraph_Event_28+0xC  ;; Speech
   \   00000316   2C19               ADDS     R4,R5,R4
   \   00000318   2018               ADDS     R0,R4,R0
   \   0000031A   ........           BL       Button
   \   0000031E   02B0               ADD      SP,SP,#+8
   \   00000320   0128               CMP      R0,#+1
   \   00000322   02D1               BNE      ??ZoneGraph_Event_27
   \   00000324   6846               MOV      R0,SP
   \   00000326   0121               MOVS     R1,#+1
   \   00000328   0170               STRB     R1,[R0, #+0]
   5666                    }
   5667                    
   5668                    if ((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText))
   \                     ??ZoneGraph_Event_27:
   \   0000032A   387E               LDRB     R0,[R7, #+24]
   \   0000032C   0721               MOVS     R1,#+7
   \   0000032E   4843               MULS     R0,R1,R0
   \   00000330   0299               LDR      R1,[SP, #+8]
   \   00000332   0818               ADDS     R0,R1,R0
   \   00000334   5330               ADDS     R0,R0,#+83
   \   00000336   0078               LDRB     R0,[R0, #+0]
   \   00000338   0828               CMP      R0,#+8
   \   0000033A   00D0               BEQ      .+4
   \   0000033C   9FE0               B        ??ZoneGraph_Event_29
   5669                    {
   5670                      if (Button("Text",2,15,25,11)==1) ButonClickNr=2;
   \   0000033E   82B0               SUB      SP,SP,#+8
   \   00000340   0B20               MOVS     R0,#+11
   \   00000342   0090               STR      R0,[SP, #+0]
   \   00000344   1923               MOVS     R3,#+25
   \   00000346   0F22               MOVS     R2,#+15
   \   00000348   0221               MOVS     R1,#+2
   \   0000034A   6A48               LDR      R0,??ZoneGraph_Event_28+0x10  ;; `?<Constant {0, 0}>` + 84
   \   0000034C   ........           BL       Button
   \   00000350   02B0               ADD      SP,SP,#+8
   \   00000352   0128               CMP      R0,#+1
   \   00000354   02D1               BNE      ??ZoneGraph_Event_30
   \   00000356   6846               MOV      R0,SP
   \   00000358   0221               MOVS     R1,#+2
   \   0000035A   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_30:
   \   0000035C   6248               LDR      R0,??ZoneGraph_Event_28+0x4  ;; g_leng
   \   0000035E   0068               LDR      R0,[R0, #+0]
   \   00000360   6249               LDR      R1,??ZoneGraph_Event_28+0x8  ;; 0xa7d
   \   00000362   4843               MULS     R0,R1,R0
   \   00000364   6249               LDR      R1,??ZoneGraph_Event_28+0xC  ;; Speech
   \   00000366   0818               ADDS     R0,R1,R0
   \   00000368   397E               LDRB     R1,[R7, #+24]
   \   0000036A   0722               MOVS     R2,#+7
   \   0000036C   5143               MULS     R1,R2,R1
   \   0000036E   029A               LDR      R2,[SP, #+8]
   \   00000370   5118               ADDS     R1,R2,R1
   \   00000372   5931               ADDS     R1,R1,#+89
   \   00000374   0978               LDRB     R1,[R1, #+0]
   \   00000376   C907               LSLS     R1,R1,#+31
   \   00000378   82B0               SUB      SP,SP,#+8
   \   0000037A   65D5               BPL      ??ZoneGraph_Event_31
   5671                      if (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff) 
   5672                      {
   5673                        if (Button(Speech[g_leng].Wyl,40,3,21,11)==1) {ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff=0;
   \   0000037C   0B21               MOVS     R1,#+11
   \   0000037E   0091               STR      R1,[SP, #+0]
   \   00000380   1523               MOVS     R3,#+21
   \   00000382   0322               MOVS     R2,#+3
   \   00000384   2821               MOVS     R1,#+40
   \   00000386   C324               MOVS     R4,#+195
   \   00000388   E400               LSLS     R4,R4,#+3        ;; #+1560
   \   0000038A   0019               ADDS     R0,R0,R4
   \   0000038C   ........           BL       Button
   \   00000390   02B0               ADD      SP,SP,#+8
   \   00000392   0128               CMP      R0,#+1
   \   00000394   73D1               BNE      ??ZoneGraph_Event_29
   \   00000396   387E               LDRB     R0,[R7, #+24]
   \   00000398   0721               MOVS     R1,#+7
   \   0000039A   4843               MULS     R0,R1,R0
   \   0000039C   0299               LDR      R1,[SP, #+8]
   \   0000039E   0818               ADDS     R0,R1,R0
   \   000003A0   5921               MOVS     R1,#+89
   \   000003A2   0200               MOVS     R2,R0
   \   000003A4   5932               ADDS     R2,R2,#+89
   \   000003A6   1278               LDRB     R2,[R2, #+0]
   \   000003A8   FE23               MOVS     R3,#+254
   \   000003AA   1340               ANDS     R3,R3,R2
   \   000003AC   4354               STRB     R3,[R0, R1]
   5674                        ButonClickNr=3;}
   \   000003AE   6846               MOV      R0,SP
   \   000003B0   0321               MOVS     R1,#+3
   \   000003B2   0170               STRB     R1,[R0, #+0]
   \   000003B4   63E0               B        ??ZoneGraph_Event_29
   5675                      }else{
   \                     ??ZoneGraph_Event_19:
   \   000003B6   2C70               STRB     R4,[R5, #+0]
   \   000003B8   0020               MOVS     R0,#+0
   \   000003BA   6870               STRB     R0,[R5, #+1]
   \   000003BC   82B0               SUB      SP,SP,#+8
   \   000003BE   0B20               MOVS     R0,#+11
   \   000003C0   0090               STR      R0,[SP, #+0]
   \   000003C2   0F23               MOVS     R3,#+15
   \   000003C4   0322               MOVS     R2,#+3
   \   000003C6   1100               MOVS     R1,R2
   \   000003C8   03A8               ADD      R0,SP,#+12
   \   000003CA   ........           BL       Button
   \   000003CE   02B0               ADD      SP,SP,#+8
   \   000003D0   0128               CMP      R0,#+1
   \   000003D2   13D1               BNE      ??ZoneGraph_Event_32
   \   000003D4   387E               LDRB     R0,[R7, #+24]
   \   000003D6   0721               MOVS     R1,#+7
   \   000003D8   4843               MULS     R0,R1,R0
   \   000003DA   0299               LDR      R1,[SP, #+8]
   \   000003DC   0818               ADDS     R0,R1,R0
   \   000003DE   5821               MOVS     R1,#+88
   \   000003E0   415C               LDRB     R1,[R0, R1]
   \   000003E2   0029               CMP      R1,#+0
   \   000003E4   06D0               BEQ      ??ZoneGraph_Event_33
   \   000003E6   5821               MOVS     R1,#+88
   \   000003E8   0200               MOVS     R2,R0
   \   000003EA   5832               ADDS     R2,R2,#+88
   \   000003EC   1278               LDRB     R2,[R2, #+0]
   \   000003EE   521E               SUBS     R2,R2,#+1
   \   000003F0   4254               STRB     R2,[R0, R1]
   \   000003F2   02E0               B        ??ZoneGraph_Event_34
   \                     ??ZoneGraph_Event_33:
   \   000003F4   5830               ADDS     R0,R0,#+88
   \   000003F6   6321               MOVS     R1,#+99
   \   000003F8   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_34:
   \   000003FA   0126               MOVS     R6,#+1
   \                     ??ZoneGraph_Event_32:
   \   000003FC   3E20               MOVS     R0,#+62
   \   000003FE   2870               STRB     R0,[R5, #+0]
   \   00000400   82B0               SUB      SP,SP,#+8
   \   00000402   0B20               MOVS     R0,#+11
   \   00000404   0090               STR      R0,[SP, #+0]
   \   00000406   0F23               MOVS     R3,#+15
   \   00000408   0322               MOVS     R2,#+3
   \   0000040A   2D21               MOVS     R1,#+45
   \   0000040C   03A8               ADD      R0,SP,#+12
   \   0000040E   ........           BL       Button
   \   00000412   02B0               ADD      SP,SP,#+8
   \   00000414   0128               CMP      R0,#+1
   \   00000416   00D0               BEQ      .+4
   \   00000418   64E7               B        ??ZoneGraph_Event_24
   \   0000041A   387E               LDRB     R0,[R7, #+24]
   \   0000041C   0721               MOVS     R1,#+7
   \   0000041E   4843               MULS     R0,R1,R0
   \   00000420   0299               LDR      R1,[SP, #+8]
   \   00000422   0818               ADDS     R0,R1,R0
   \   00000424   5821               MOVS     R1,#+88
   \   00000426   415C               LDRB     R1,[R0, R1]
   \   00000428   491C               ADDS     R1,R1,#+1
   \   0000042A   0904               LSLS     R1,R1,#+16
   \   0000042C   090C               LSRS     R1,R1,#+16
   \   0000042E   6329               CMP      R1,#+99
   \   00000430   06D2               BCS      ??ZoneGraph_Event_35
   \   00000432   5821               MOVS     R1,#+88
   \   00000434   0200               MOVS     R2,R0
   \   00000436   5832               ADDS     R2,R2,#+88
   \   00000438   1278               LDRB     R2,[R2, #+0]
   \   0000043A   521C               ADDS     R2,R2,#+1
   \   0000043C   4254               STRB     R2,[R0, R1]
   \   0000043E   50E7               B        ??ZoneGraph_Event_26
   \                     ??ZoneGraph_Event_35:
   \   00000440   5830               ADDS     R0,R0,#+88
   \   00000442   0021               MOVS     R1,#+0
   \   00000444   0170               STRB     R1,[R0, #+0]
   \   00000446   4CE7               B        ??ZoneGraph_Event_26
   5676                        if (Button(Speech[g_leng].Wl,40,3,21,11)==1) {ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff=1;
   \                     ??ZoneGraph_Event_31:
   \   00000448   0B21               MOVS     R1,#+11
   \   0000044A   0091               STR      R1,[SP, #+0]
   \   0000044C   1523               MOVS     R3,#+21
   \   0000044E   0322               MOVS     R2,#+3
   \   00000450   2821               MOVS     R1,#+40
   \   00000452   294C               LDR      R4,??ZoneGraph_Event_28+0x14  ;; 0x627
   \   00000454   0019               ADDS     R0,R0,R4
   \   00000456   ........           BL       Button
   \   0000045A   02B0               ADD      SP,SP,#+8
   \   0000045C   0128               CMP      R0,#+1
   \   0000045E   0ED1               BNE      ??ZoneGraph_Event_29
   \   00000460   387E               LDRB     R0,[R7, #+24]
   \   00000462   0721               MOVS     R1,#+7
   \   00000464   4843               MULS     R0,R1,R0
   \   00000466   0299               LDR      R1,[SP, #+8]
   \   00000468   0818               ADDS     R0,R1,R0
   \   0000046A   5921               MOVS     R1,#+89
   \   0000046C   0200               MOVS     R2,R0
   \   0000046E   5932               ADDS     R2,R2,#+89
   \   00000470   1278               LDRB     R2,[R2, #+0]
   \   00000472   0123               MOVS     R3,#+1
   \   00000474   1343               ORRS     R3,R3,R2
   \   00000476   4354               STRB     R3,[R0, R1]
   5677                        ButonClickNr=3;}
   \   00000478   6846               MOV      R0,SP
   \   0000047A   0321               MOVS     R1,#+3
   \   0000047C   0170               STRB     R1,[R0, #+0]
   5678                      }
   5679                    
   5680                       
   5681                    }    
   5682                    
   5683                     if (ButonClickNr==1) 
   \                     ??ZoneGraph_Event_29:
   \   0000047E   6846               MOV      R0,SP
   \   00000480   0078               LDRB     R0,[R0, #+0]
   \   00000482   0128               CMP      R0,#+1
   \   00000484   0ED1               BNE      ??ZoneGraph_Event_36
   5684                        {
   5685                          ProgramChange=1;
   \   00000486   3872               STRB     R0,[R7, #+8]
   5686                          AnalogToChange=(_Analog*)&ScreenLokal->Graph[ZoneGrapfNrClick];
   \   00000488   387E               LDRB     R0,[R7, #+24]
   \   0000048A   0721               MOVS     R1,#+7
   \   0000048C   4843               MULS     R0,R1,R0
   \   0000048E   0299               LDR      R1,[SP, #+8]
   \   00000490   0818               ADDS     R0,R1,R0
   \   00000492   5330               ADDS     R0,R0,#+83
   \   00000494   F866               STR      R0,[R7, #+108]
   5687                          MenuLevel=(MenuLevel*10+2); 
   \   00000496   386D               LDR      R0,[R7, #+80]
   \   00000498   0A21               MOVS     R1,#+10
   \   0000049A   4843               MULS     R0,R1,R0
   \   0000049C   801C               ADDS     R0,R0,#+2
   \   0000049E   3865               STR      R0,[R7, #+80]
   5688                          MenuPaint(); 
   \   000004A0   ........           BL       MenuPaint
   5689                    
   5690                        }
   5691                  
   5692                      if (ButonClickNr==2) 
   \                     ??ZoneGraph_Event_36:
   \   000004A4   6846               MOV      R0,SP
   \   000004A6   0078               LDRB     R0,[R0, #+0]
   \   000004A8   0228               CMP      R0,#+2
   \   000004AA   11D1               BNE      ??ZoneGraph_Event_37
   5693                      {
   5694                        ProgramChange=1;
   \   000004AC   0120               MOVS     R0,#+1
   \   000004AE   3872               STRB     R0,[R7, #+8]
   5695                      TextToChangeLength=3;//TextToChangeMaxPixSize
   \   000004B0   0320               MOVS     R0,#+3
   \   000004B2   3870               STRB     R0,[R7, #+0]
   5696                      TextToChange=ScreenLokal->Graph[ZoneGrapfNrClick].Text;
   \   000004B4   387E               LDRB     R0,[R7, #+24]
   \   000004B6   0721               MOVS     R1,#+7
   \   000004B8   4843               MULS     R0,R1,R0
   \   000004BA   0299               LDR      R1,[SP, #+8]
   \   000004BC   0818               ADDS     R0,R1,R0
   \   000004BE   5430               ADDS     R0,R0,#+84
   \   000004C0   B865               STR      R0,[R7, #+88]
   5697                      MenuLevel=(MenuLevel*10+1); 
   \   000004C2   386D               LDR      R0,[R7, #+80]
   \   000004C4   0A21               MOVS     R1,#+10
   \   000004C6   4843               MULS     R0,R1,R0
   \   000004C8   401C               ADDS     R0,R0,#+1
   \   000004CA   3865               STR      R0,[R7, #+80]
   5698                      MenuPaint(); 
   \   000004CC   ........           BL       MenuPaint
   5699                      }
   5700                      if (ButonClickNr==3) 
   \                     ??ZoneGraph_Event_37:
   \   000004D0   6846               MOV      R0,SP
   \   000004D2   0078               LDRB     R0,[R0, #+0]
   \   000004D4   0328               CMP      R0,#+3
   \   000004D6   01D1               BNE      ??ZoneGraph_Event_4
   5701                      {
   5702                        MenuPaint(); 
   \   000004D8   ........           BL       MenuPaint
   5703                      }
   5704                     
   5705                  
   5706                  
   5707                  }
   5708                  
   5709                  }
   5710                }//________________________________________________________________________
   \                     ??ZoneGraph_Event_4:
   \   000004DC   FEBC               POP      {R1-R7}
   \   000004DE   01BC               POP      {R0}
   \   000004E0   0047               BX       R0               ;; return
   \   000004E2   C046               Nop      
   \                     ??ZoneGraph_Event_28:
   \   000004E4   0A050000           DC32     0x50a
   \   000004E8   ........           DC32     g_leng
   \   000004EC   7D0A0000           DC32     0xa7d
   \   000004F0   ........           DC32     Speech
   \   000004F4   ........           DC32     `?<Constant {0, 0}>` + 84
   \   000004F8   27060000           DC32     0x627

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0}>`:
   \   00000000   00000000           DC8 0, 0, 0, 0
   5711              
   5712          
   5713          
   5714          
   5715           
   5716           
   5717          #define MaxLetherOnScr    24 
   5718           
   5719           
   5720          char TextChangeCharNr=0;
   5721          char TextChangePoz=0;
   5722          
   5723          const char QWERTY[3][MaxLetherOnScr]={
   \                     QWERTY:
   \   00000004   414243444546       DC8 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81
   \              4748494A4B4C
   \              4D4E4F5051  
   \   00000015   525354555759       DC8 82, 83, 84, 85, 87, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104
   \              5A6162636465
   \              666768      
   \   00000024   696A6B6C6D6E       DC8 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
   \              6F7071727374
   \              75          
   \   00000031   77797A203031       DC8 119, 121, 122, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 45
   \              323334353637
   \              38392B2D    
   \   00000041   5F3C3E2E782F       DC8 95, 60, 62, 46, 120, 47, 127, 30, 31, 35, 36
   \              7F1E1F2324  
   \   0000004C   53636E2000         DC8 "Scn "
   \   00000051   000000             DC8 0, 0, 0
   \   00000054   5465787400         DC8 "Text"
   \   00000059   000000             DC8 0, 0, 0
   \   0000005C   56616C2000         DC8 "Val "
   \   00000061   000000             DC8 0, 0, 0
   \   00000064   2E2E2E2E2E2E       DC8 "...... "
   \              2000        
   \   0000006C   2B4F6E2F4F66       DC8 "+On/Off"
   \              6600        
   \   00000074   546578742000       DC8 "Text "
   \   0000007A   0000               DC8 0, 0
   \   0000007C   416E616C6F67       DC8 "Analog "
   \              2000        
   \   00000084   416E616C6F67       DC8 "Analog"
   \              00          
   \   0000008B   00                 DC8 0
   \   char const __data GraphTab[8][3][18]
   \                     GraphTab:
   \   0000008C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000A3   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 64, 192, 72, 208, 194, 36, 144
   \              000080C040C0
   \              48D0C22490  
   \   000000CB   908B101024C2       DC8 144, 139, 16, 16, 36, 194, 16, 8, 0, 7, 9, 14, 9, 76, 43, 15, 147
   \              10080007090E
   \              094C2B0F93  
   \   000000DC   222444202090       DC8 34, 36, 68, 32, 32, 144, 12, 35, 64, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0
   \              0C2340010000
   \              000000000100
   \              00          
   \   000000EF   000300000001       DC8 0, 3, 0, 0, 0, 1, 0, 0, 0, 252, 252, 252, 4, 252, 4, 252, 4, 252, 4
   \              000000FCFCFC
   \              04FC04FC04FC
   \              04          
   \   00000102   FC04FCFEFFFF       DC8 252, 4, 252, 254, 255, 255, 254, 252, 255, 255, 255, 0, 255, 0, 255
   \              FEFCFFFFFF00
   \              FF00FF      
   \   00000111   00FF00FF007F       DC8 0, 255, 0, 255, 0, 127, 159, 15, 15, 159, 127, 1, 1, 1, 1, 1, 1, 1
   \              9F0F0F9F7F01
   \              010101010101
   \   00000123   010101010101       DC8 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 240, 64, 128, 128, 28, 226, 193
   \              0101010000F0
   \              4080801CE2C1
   \   00000135   E171CDC3C141       DC8 225, 113, 205, 195, 193, 65, 32, 32, 32, 64, 128, 7, 8, 16, 16, 17
   \              202020408007
   \              08101011    
   \   00000145   0B0F0CC83C07       DC8 11, 15, 12, 200, 60, 7, 14, 18, 226, 4, 4, 8, 63, 0, 0, 0, 0, 0, 2
   \              0E12E2040408
   \              3F0000000000
   \              02          
   \   00000158   020302020202       DC8 2, 3, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 240, 240, 48, 48, 48, 48, 48
   \              010000000000
   \              00F0F0303030
   \              3030        
   \   0000016C   FFFFAA54A850       DC8 255, 255, 170, 84, 168, 80, 176, 240, 240, 0, 0, 255, 255, 0, 0, 0
   \              B0F0F00000FF
   \              FF000000    
   \   0000017C   0000070F1A35       DC8 0, 0, 7, 15, 26, 53, 106, 213, 170, 255, 255, 0, 0, 3, 3, 3, 3, 3
   \              6AD5AAFFFF00
   \              000303030303
   \   0000018E   030303030303       DC8 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 96, 224, 224, 184, 104, 168
   \              030303030300
   \              60E0E0B868A8
   \   000001A0   68A868A868A8       DC8 104, 168, 104, 168, 104, 168, 104, 136, 8, 8, 8, 248, 0, 1, 7, 63
   \              6888080808F8
   \              0001073F    
   \   000001B0   3E3926392639       DC8 62, 57, 38, 57, 38, 57, 38, 57, 38, 57, 38, 56, 32, 63, 0, 0, 0, 0
   \              263926392638
   \              203F00000000
   \   000001C2   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 128, 128, 0, 128
   \              000000000000
   \              000080008080
   \              0080        
   \   000001D6   00E0A0A0A020       DC8 0, 224, 160, 160, 160, 32, 32, 64, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              204080000000
   \              000000000000
   \   000001E8   000101011BFF       DC8 0, 1, 1, 1, 27, 255, 254, 0, 231, 60, 24, 255, 0, 0, 0, 0, 0, 0, 0
   \              FE00E73C18FF
   \              000000000000
   \              00          
   \   000001FB   000000000303       DC8 0, 0, 0, 0, 3, 3, 0, 3, 0, 0, 0, 128, 192, 192, 128, 128, 224, 128
   \              000300000080
   \              C0C08080E080
   \   0000020D   E080E0808080       DC8 224, 128, 224, 128, 128, 128, 128, 128, 128, 128, 0, 3, 7, 7, 3, 3
   \              808080800003
   \              07070303    
   \   0000021D   030303020202       DC8 3, 3, 3, 2, 2, 2, 14, 2, 14, 2, 14, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0E020E020E02
   \              010000000000
   \              00000000    
   \   00000233   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \                     `?<Constant {129, 0}>`:
   \   00000000   81000000           DC8 129, 0, 0, 0
   \   00000004   546865726D20       DC8 "Therm set "
   \              7365742000  
   \   0000000F   00                 DC8 0
   \   00000010   416E616C6F2E       DC8 "Analo. "
   \              2000        
   \   struct <unnamed> const __data ScreenSetTab_0[11]
   \                     ScreenSetTab_0:
   \   00000018   1E6722160030       DC8 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0, 0, 22, 40, 42, 0
   \              16352A301635
   \              000016282A00
   \   0000002A   162800000000       DC8 22, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 75, 18
   \              000000000000
   \              000000000000
   \              174B12      
   \   0000003F   181732121817       DC8 24, 23, 50, 18, 24, 23, 8, 18, 24, 0, 0, 0, 0, 0, 102, 29, 11
   \              081218000000
   \              0000661D0B  
   \   00000050   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 64, 1, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              002C40010000
   \              00000000    
   \   00000066   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 105, 34, 21, 0, 0, 22, 57, 42, 0
   \              000000001E69
   \              221500001639
   \              2A00        
   \   0000007A   163900000000       DC8 22, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000090   00000000171D       DC8 0, 0, 0, 0, 23, 29, 18, 24, 23, 4, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              121817041218
   \              000000000000
   \              0000        
   \   000000A4   000000000065       DC8 0, 0, 0, 0, 0, 101, 29, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 64, 1
   \              1D0B00000000
   \              00000000003C
   \              4001        
   \   000000B8   00000000004A       DC8 0, 0, 0, 0, 0, 74, 64, 24, 30, 62, 35, 11, 0, 0, 0, 0, 30, 105, 34
   \              40181E3E230B
   \              000000001E69
   \              22          
   \   000000CB   15001A16312A       DC8 21, 0, 26, 22, 49, 42, 26, 22, 49, 0, 0, 22, 24, 42, 0, 22, 24, 0
   \              1A1631000016
   \              182A00161800
   \   000000DD   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 51, 18, 23, 23, 27
   \              000000000000
   \              000000173312
   \              17171B      
   \   000000F2   121717001218       DC8 18, 23, 23, 0, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 29, 11
   \              000000000000
   \              000000661D0B
   \   00000104   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 64, 23, 0, 0
   \              000000000000
   \              00000000004C
   \              40170000    
   \   0000011A   000000000000       DC8 0, 0, 0, 0, 0, 0, 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0
   \              1E6722160030
   \              16352A301635
   \              00          
   \   0000012D   181E1522181E       DC8 24, 30, 21, 34, 24, 30, 21, 0, 0, 30, 21, 34, 0, 30, 21, 0, 0, 0, 0
   \              1500001E1522
   \              001E15000000
   \              00          
   \   00000140   00000000174B       DC8 0, 0, 0, 0, 23, 75, 18, 24, 23, 50, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              121817321218
   \              000000000000
   \              0000        
   \   00000154   00661D090000       DC8 0, 102, 29, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   00000168   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 22, 53, 42
   \              000000000000
   \              000000000030
   \              16352A      
   \   0000017D   30163500181E       DC8 48, 22, 53, 0, 24, 30, 21, 34, 24, 30, 21, 0, 0, 30, 21, 34, 0, 30
   \              1522181E1500
   \              001E1522001E
   \   0000018F   150000000000       DC8 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 75, 18, 24, 23, 50, 18
   \              000000000000
   \              00174B121817
   \              3212        
   \   000001A3   182D67121800       DC8 24, 45, 103, 18, 24, 0, 0, 0, 0, 15, 115, 29, 11, 15, 104, 29, 11
   \              0000000F731D
   \              0B0F681D0B  
   \   000001B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001CB   00000000001E       DC8 0, 0, 0, 0, 0, 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0
   \              672216003016
   \              352A30163500
   \   000001DD   181415161814       DC8 24, 20, 21, 22, 24, 20, 21, 44, 24, 20, 21, 0, 0, 20, 21, 22, 0, 20
   \              152C18141500
   \              001415160014
   \   000001EF   152C00141517       DC8 21, 44, 0, 20, 21, 23, 75, 18, 24, 23, 50, 18, 24
   \              4B1218173212
   \              18          
   \   000001FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 29, 11, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000661D0B
   \              000000000000
   \              0000        
   \   00000210   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000227   00004E16232A       DC8 0, 0, 78, 22, 35, 42, 78, 22, 35, 0, 39, 22, 35, 42, 39, 22, 35, 0
   \              4E1623002716
   \              232A27162300
   \   00000239   0016232A0016       DC8 0, 22, 35, 42, 0, 22, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23
   \              230000000000
   \              000000000000
   \              0017        
   \   0000024D   541218172B12       DC8 84, 18, 24, 23, 43, 18, 24, 23, 5, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              181705121800
   \              000000000000
   \              00          
   \   00000260   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000277   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 22, 26, 42, 84, 22, 26, 0, 56, 22
   \              000000005416
   \              1A2A54161A00
   \              3816        
   \   0000028B   1A2A38161A00       DC8 26, 42, 56, 22, 26, 0, 28, 22, 26, 42, 28, 22, 26, 0, 0, 22, 26, 42
   \              1C161A2A1C16
   \              1A0000161A2A
   \   0000029D   00161A000000       DC8 0, 22, 26, 0, 0, 0, 0, 23, 85, 18, 24, 23, 57, 18, 24, 23, 29, 18
   \              001755121817
   \              391218171D12
   \   000002AF   181701121800       DC8 24, 23, 1, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000002C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 103
   \              000000000000
   \              000000000000
   \              00001967    
   \   000002DA   271600000000       DC8 39, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000002F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000307   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000031E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000335   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000034C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000363   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   00000378   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000038F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003A6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003BD   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   struct <unnamed> const __data ScreenSetTab_1[8]
   \                     ScreenSetTab_1:
   \   000003E0   024A1320294A       DC8 2, 74, 19, 32, 41, 74, 19, 32, 2, 39, 19, 32, 41, 39, 19, 32, 2, 3
   \              132002271320
   \              292713200203
   \   000003F2   132029031320       DC8 19, 32, 41, 3, 19, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 80
   \              000000000000
   \              000000000000
   \              1650        
   \   00000406   1218162B1218       DC8 18, 24, 22, 43, 18, 24, 22, 9, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              160912180000
   \              000000000000
   \   00000418   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000042F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 82, 19, 24, 41, 82, 19, 24, 2, 55, 19
   \              000000025213
   \              182952131802
   \              3713        
   \   00000443   182937131802       DC8 24, 41, 55, 19, 24, 2, 29, 19, 24, 41, 29, 19, 24, 2, 3, 19, 24, 41
   \              1D1318291D13
   \              180203131829
   \   00000455   031318000000       DC8 3, 19, 24, 0, 0, 0, 0, 22, 83, 18, 24, 22, 56, 18, 24, 22, 30, 18
   \              001653121816
   \              381218161E12
   \   00000467   181604121800       DC8 24, 22, 4, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   0000047C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 84
   \              000000000000
   \              000000000000
   \              00001654    
   \   00000492   241616392416       DC8 36, 22, 22, 57, 36, 22, 22, 31, 36, 22, 22, 5, 36, 22, 0, 0, 0, 0
   \              161F24161605
   \              241600000000
   \   000004A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 83, 18, 24, 2
   \              000000000000
   \              000000000253
   \              121802      
   \   000004B9   381218021E12       DC8 56, 18, 24, 2, 30, 18, 24, 2, 4, 18, 24, 0, 0, 0, 0
   \              180204121800
   \              000000      
   \   000004C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000004DF   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000004F6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2
   \              000000000000
   \              000000000000
   \              0000000002  
   \   0000050D   531218023812       DC8 83, 18, 24, 2, 56, 18, 24, 2, 30, 18, 24, 2, 4, 18, 24, 23, 89, 35
   \              18021E121802
   \              041218175923
   \   0000051F   0B173D230B17       DC8 11, 23, 61, 35, 11, 23, 36, 35, 11, 23, 10, 35, 11, 0, 0, 0, 0
   \              24230B170A23
   \              0B00000000  
   \   00000530   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 94, 57, 12, 3
   \              000000000000
   \              00000000035E
   \              390C03      
   \   00000545   4F390C034039       DC8 79, 57, 12, 3, 64, 57, 12, 3, 49, 57, 12, 3, 34, 57, 12, 3, 19, 57
   \              0C0331390C03
   \              22390C031339
   \   00000557   0C0304390C00       DC8 12, 3, 4, 57, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000000000  
   \   00000568   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000578   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000058F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 103, 39, 22, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000196727
   \              160000000000
   \              000000      
   \   000005A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000005BB   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000005D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000005E7   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000005FE   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000615   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   00000628   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000063F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000656   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000066D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   00000680   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000697   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
   \   char const __data ButtonName[99][4]
   \                     ButtonName:
   \   000006A0   623100006232       DC8 98, 49, 0, 0, 98, 50, 0, 0, 98, 51, 0, 0, 98, 52, 0, 0, 98, 53, 0
   \              000062330000
   \              623400006235
   \              00          
   \   000006B3   006236000062       DC8 0, 98, 54, 0, 0, 98, 55, 0, 0, 98, 56, 0, 0, 98, 57, 0, 0, 98, 49
   \              370000623800
   \              006239000062
   \              31          
   \   000006C6   300062313100       DC8 48, 0, 98, 49, 49, 0, 98, 49, 50, 0, 98, 49, 51, 0, 98, 49, 52, 0
   \              623132006231
   \              330062313400
   \   000006D8   623135006231       DC8 98, 49, 53, 0, 98, 49, 54, 0, 98, 49, 55, 0, 98, 49, 56, 0, 98, 49
   \              360062313700
   \              623138006231
   \   000006EA   390062323000       DC8 57, 0, 98, 50, 48, 0, 98, 50, 49, 0, 98, 50, 50, 0, 98, 50, 51, 0
   \              623231006232
   \              320062323300
   \   000006FC   623234006232       DC8 98, 50, 52, 0, 98, 50, 53, 0, 98, 50, 54, 0, 98, 50, 55, 0, 98, 50
   \              350062323600
   \              623237006232
   \   0000070E   380062323900       DC8 56, 0, 98, 50, 57, 0, 98, 51, 48, 0, 98, 51, 49, 0, 98, 51, 50, 0
   \              623330006233
   \              310062333200
   \   00000720   623333006233       DC8 98, 51, 51, 0, 98, 51, 52, 0, 98, 51, 53, 0, 98, 51, 54, 0, 98, 51
   \              340062333500
   \              623336006233
   \   00000732   370062333800       DC8 55, 0, 98, 51, 56, 0, 98, 51, 57, 0, 98, 52, 48, 0, 98, 52, 49, 0
   \              623339006234
   \              300062343100
   \   00000744   623432006234       DC8 98, 52, 50, 0, 98, 52, 51, 0, 98, 52, 52, 0, 98, 52, 53, 0, 98, 52
   \              330062343400
   \              623435006234
   \   00000756   360062343700       DC8 54, 0, 98, 52, 55, 0, 98, 52, 56, 0, 98, 52, 57, 0, 98, 53, 48, 0
   \              623438006234
   \              390062353000
   \   00000768   623531006235       DC8 98, 53, 49, 0, 98, 53, 50, 0, 98, 53, 51, 0, 98, 53, 52, 0, 98, 53
   \              320062353300
   \              623534006235
   \   0000077A   350062353600       DC8 53, 0, 98, 53, 54, 0, 98, 53, 55, 0, 98, 53, 56, 0, 98, 53, 57, 0
   \              623537006235
   \              380062353900
   \   0000078C   623630006236       DC8 98, 54, 48, 0, 98, 54, 49, 0, 98, 54, 50, 0, 98, 54, 51, 0, 98, 54
   \              310062363200
   \              623633006236
   \   0000079E   340062363500       DC8 52, 0, 98, 54, 53, 0, 98, 54, 54, 0, 98, 54, 55, 0, 98, 54, 56, 0
   \              623636006236
   \              370062363800
   \   000007B0   623639006237       DC8 98, 54, 57, 0, 98, 55, 48, 0, 98, 55, 49, 0, 98, 55, 50, 0, 98, 55
   \              300062373100
   \              623732006237
   \   000007C2   330062373400       DC8 51, 0, 98, 55, 52, 0, 98, 55, 53, 0, 98, 55, 54, 0, 98, 55, 55, 0
   \              623735006237
   \              360062373700
   \   000007D4   623738006237       DC8 98, 55, 56, 0, 98, 55, 57, 0, 98, 56, 48, 0, 98, 56, 49, 0, 98, 56
   \              390062383000
   \              623831006238
   \   000007E6   320062383300       DC8 50, 0, 98, 56, 51, 0, 98, 56, 52, 0, 98, 56, 53, 0, 98, 56, 54, 0
   \              623834006238
   \              350062383600
   \   000007F8   623837006238       DC8 98, 56, 55, 0, 98, 56, 56, 0, 98, 56, 57, 0, 98, 57, 48, 0, 98, 57
   \              380062383900
   \              623930006239
   \   0000080A   310062393200       DC8 49, 0, 98, 57, 50, 0, 98, 57, 51, 0, 98, 57, 52, 0, 98, 57, 53, 0
   \              623933006239
   \              340062393500
   \   0000081C   623936006239       DC8 98, 57, 54, 0, 98, 57, 55, 0, 98, 57, 56, 0, 98, 57, 57, 0
   \              370062393800
   \              62393900    

   \                                 In section .rodata, align 4
   \   int const __data abc
   \                     abc:
   \   00000000   02000000           DC32 2

   \                                 In section .rodata, align 4
   \   char const __data DeyOfWeekLongStr[2][8][12]
   \                     DeyOfWeekLongStr:
   \   00000000   457200000000       DC8 69, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 111, 110, 105, 101, 100
   \              000000000000
   \              506F6E696564
   \   00000012   7A69616C656B       DC8 122, 105, 97, 108, 101, 107, 87, 116, 111, 114, 101, 107, 0, 0, 0
   \              57746F72656B
   \              000000      
   \   00000021   00000053726F       DC8 0, 0, 0, 83, 114, 111, 100, 97, 0, 0, 0, 0, 0, 0, 0, 67, 122, 119
   \              646100000000
   \              000000437A77
   \   00000033   617274656B00       DC8 97, 114, 116, 101, 107, 0, 0, 0, 0, 80, 105, 97, 116, 101, 107, 0
   \              000000506961
   \              74656B00    
   \   00000043   000000000053       DC8 0, 0, 0, 0, 0, 83, 111, 98, 111, 116, 97, 0, 0, 0, 0, 0, 0, 78, 105
   \              6F626F746100
   \              00000000004E
   \              69          
   \   00000056   65647A69656C       DC8 101, 100, 122, 105, 101, 108, 97, 0, 0, 0, 69, 114, 0, 0, 0, 0, 0
   \              610000004572
   \              0000000000  
   \   00000067   00000000004D       DC8 0, 0, 0, 0, 0, 77, 111, 110, 100, 97, 121, 0, 0, 0, 0, 0, 0, 84
   \              6F6E64617900
   \              000000000054
   \   00000079   756573646179       DC8 117, 101, 115, 100, 97, 121, 0, 0, 0, 0, 0, 87, 101, 100, 110, 101
   \              000000000057
   \              65646E65    
   \   00000089   736461790000       DC8 115, 100, 97, 121, 0, 0, 0, 84, 104, 117, 114, 115, 100, 97, 121, 0
   \              005468757273
   \              64617900    
   \   00000099   000000467269       DC8 0, 0, 0, 70, 114, 105, 100, 97, 121, 0, 0, 0, 0, 0, 0, 83, 97, 116
   \              646179000000
   \              000000536174
   \   000000AB   757264617900       DC8 117, 114, 100, 97, 121, 0, 0, 0, 0, 83, 117, 110, 100, 97, 121, 0
   \              00000053756E
   \              64617900    
   \   000000BB   0000000000         DC8 0, 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Firmware: ">`:
   \   00000000   4669726D7761       DC8 "Firmware: "
   \              72653A2000  
   \   0000000B   00                 DC8 0
   \   0000000C   544553544552       DC8 "TESTER"
   \              00          
   \   00000013   00                 DC8 0
   \   00000014   4944206D6F64       DC8 "ID modulu"
   \              756C7500    
   \   0000001E   0000               DC8 0, 0
   \   char const __data Logo_Ceuron[8][16]
   \                     Logo_Ceuron:
   \   00000020   E0F87C1E0E0F       DC8 224, 248, 124, 30, 14, 15, 7, 7, 7, 7, 15, 14, 28, 124, 240, 224
   \              070707070F0E
   \              1C7CF0E0    
   \   00000030   83C3E0F07030       DC8 131, 195, 224, 240, 112, 48, 0, 254, 254, 0, 48, 112, 240, 224, 195
   \              00FEFE003070
   \              F0E0C3      
   \   0000003F   031F9FC3C0C0       DC8 3, 31, 159, 195, 192, 192, 192, 192, 199, 199, 192, 192, 192, 192
   \              C0C0C7C7C0C0
   \              C0C0        
   \   0000004D   C3DFDF1F3F71       DC8 195, 223, 223, 31, 63, 113, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96
   \              606060606060
   \              60606060    
   \   0000005D   60606080C0C0       DC8 96, 96, 96, 128, 192, 192, 192, 224, 112, 56, 252, 252, 192, 128
   \              C0E07038FCFC
   \              C080        
   \   0000006B   80C0E0FF3FF1       DC8 128, 192, 224, 255, 63, 241, 249, 29, 12, 12, 12, 12, 12, 13, 13
   \              F91D0C0C0C0C
   \              0C0D0D      
   \   0000007A   0D0D0D1DF8F0       DC8 13, 13, 13, 29, 248, 240, 97, 99, 103, 102, 102, 102, 102, 102, 102
   \              616367666666
   \              666666      
   \   00000089   66666666E7E3       DC8 102, 102, 102, 102, 231, 227, 193, 112, 248, 248, 220, 220, 204
   \              C170F8F8DCDC
   \              CC          
   \   00000096   CCCCCCCCCECE       DC8 204, 204, 204, 204, 206, 206, 198, 199, 199, 195
   \              C6C7C7C3    

   \                                 In section .rodata, align 4
   \   struct <unnamed> const __data TouchTestSor[4]
   \                     TouchTestSor:
   \   00000000   07073A070773       DC8 7, 7, 58, 7, 7, 115, 58, 115
   \              3A73        

   \                                 In section .rodata, align 4
   \   char const __data Klepsydra[1][8]
   \                     Klepsydra:
   \   00000000   1F15110A040A       DC8 31, 21, 17, 10, 4, 10, 17, 31
   \              111F        

   \                                 In section .rodata, align 4
   \   char const __data Siec[7][24]
   \                     Siec:
   \   00000000   0000FF01C101       DC8 0, 0, 255, 1, 193, 1, 241, 241, 241, 241, 241, 241, 241, 241, 241
   \              F1F1F1F1F1F1
   \              F1F1F1      
   \   0000000F   F1F1F1010101       DC8 241, 241, 241, 1, 1, 1, 255, 0, 0, 0, 0, 63, 32, 32, 32, 35, 35, 35
   \              FF000000003F
   \              202020232323
   \   00000021   232323232323       DC8 35, 35, 35, 35, 35, 35, 35, 35, 35, 32, 32, 32, 63, 0, 0, 0, 0, 0
   \              232323202020
   \              3F0000000000
   \   00000033   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000004A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0
   \              000080808080
   \              000000000000
   \              0000        
   \   0000005E   000000C030C8       DC8 0, 0, 0, 192, 48, 200, 124, 62, 126, 127, 255, 31, 6, 2, 4, 4, 15
   \              7C3E7E7FFF1F
   \              060204040F  
   \   0000006F   071F1E1E1C38       DC8 7, 31, 30, 30, 28, 56, 112, 192, 0, 62, 253, 112, 0, 0, 0, 128, 128
   \              70C0003EFD70
   \              0000008080  
   \   00000080   80C0F0F8F0E0       DC8 128, 192, 240, 248, 240, 224, 240, 176, 8, 56, 248, 224, 224, 240
   \              F0B00838F8E0
   \              E0F0        
   \   0000008E   FF3E00010608       DC8 255, 62, 0, 1, 6, 8, 16, 33, 33, 67, 67, 71, 135, 143, 143, 223, 71
   \              102121434347
   \              878F8FDF47  
   \   0000009F   737E3E3F1F0F       DC8 115, 126, 62, 63, 31, 15, 7, 1, 0
   \              070100      

   \                                 In section .rodata, align 4
   \   char const __data StrzalkaPrawo[2][5]
   \                     StrzalkaPrawo:
   \   00000000   0000FF000001       DC8 0, 0, 255, 0, 0, 1, 3, 7, 3, 1, 0, 0
   \              030703010000
   \   char const __data StrzalkaLewo[2][5]
   \                     StrzalkaLewo:
   \   0000000C   0406FF060400       DC8 4, 6, 255, 6, 4, 0, 0, 7, 0, 0, 0, 0
   \              000700000000
   5724                        {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','W','Y','Z'}, 
   5725                        {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','w','y','z'}, 
   5726                        {' ','0','1','2','3','4','5','6','7','8','9','+','-','_','<','>','.','x','/',127,30,31,35,36},
   5727                        };
   5728          
   5729          //* text- wskanik do stringa
   5730          //* MaxChar - maksymalna iloæ znaków tekstu. Maksymalnie 6. Je¿eli MaxChar=0 to domylnie MaxChar=6;
   5731          char AlfaType=0;
   5732          

   \                                 In section Debug.txt, align 4, keep-with-next
   5733          void TextChange_Paint(char* text, char* MaxChar)
   5734                {  
   \                     TextChange_Paint:
   \   00000000   F2B5               PUSH     {R1,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   0600               MOVS     R6,R0
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   69A0               ADR      R0,??TextChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0321               MOVS     R1,#+3
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   6C22               MOVS     R2,#+108
   \   0000001E   0121               MOVS     R1,#+1
   \   00000020   6648               LDR      R0,??TextChange_Paint_0+0x4  ;; `?<Constant {0, 0}>` + 116
   5735                  List_Paint("Text ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000022   ........           BL       List_Paint
   \   00000026   0AB0               ADD      SP,SP,#+40
   5736                  V_line(62,98,15,0);
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0F22               MOVS     R2,#+15
   \   0000002C   6221               MOVS     R1,#+98
   \   0000002E   3E20               MOVS     R0,#+62
   \   00000030   ........           BL       V_line
   \   00000034   0024               MOVS     R4,#+0
   5737                  
   5738                  char idx=0;
   5739                  char y=86;
   \   00000036   5625               MOVS     R5,#+86
   5740          
   5741                  char PrzesZnak=0;
   \   00000038   2700               MOVS     R7,R4
   \   0000003A   6148               LDR      R0,??TextChange_Paint_0+0x8  ;; TextToChangeLength + 28
   \   0000003C   0078               LDRB     R0,[R0, #+0]
   \   0000003E   0D28               CMP      R0,#+13
   \   00000040   03D3               BCC      ??TextChange_Paint_1
   5742                  if (TextChangePoz>12) PrzesZnak=TextChangePoz-12;
   \   00000042   0700               MOVS     R7,R0
   \   00000044   0C3F               SUBS     R7,R7,#+12
   \   00000046   3F06               LSLS     R7,R7,#+24
   \   00000048   3F0E               LSRS     R7,R7,#+24
   5743                  
   5744                  H_line(1,109,62,0);
   \                     ??TextChange_Paint_1:
   \   0000004A   2300               MOVS     R3,R4
   \   0000004C   3E22               MOVS     R2,#+62
   \   0000004E   6D21               MOVS     R1,#+109
   \   00000050   0120               MOVS     R0,#+1
   \   00000052   ........           BL       H_line
   5745                  
   5746                  char DlTxt=0; //d³ugoæ tekstu
   \   00000056   2200               MOVS     R2,R4
   \   00000058   02E0               B        ??TextChange_Paint_2
   5747                  while ((DlTxt<*MaxChar) && (text[DlTxt]>0)) DlTxt++;
   \                     ??TextChange_Paint_3:
   \   0000005A   521C               ADDS     R2,R2,#+1
   \   0000005C   1206               LSLS     R2,R2,#+24
   \   0000005E   120E               LSRS     R2,R2,#+24
   \                     ??TextChange_Paint_2:
   \   00000060   1000               MOVS     R0,R2
   \   00000062   0299               LDR      R1,[SP, #+8]
   \   00000064   0978               LDRB     R1,[R1, #+0]
   \   00000066   8842               CMP      R0,R1
   \   00000068   02D2               BCS      ??TextChange_Paint_4
   \   0000006A   305C               LDRB     R0,[R6, R0]
   \   0000006C   0028               CMP      R0,#+0
   \   0000006E   F4D1               BNE      ??TextChange_Paint_3
   5748                  Label(&text[PrzesZnak],0,2,100,DlTxt-PrzesZnak,11,1,127,0); 
   \                     ??TextChange_Paint_4:
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   2000               MOVS     R0,R4
   \   00000074   0090               STR      R0,[SP, #+0]
   \   00000076   7F21               MOVS     R1,#+127
   \   00000078   0120               MOVS     R0,#+1
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0B21               MOVS     R1,#+11
   \   0000007E   3800               MOVS     R0,R7
   \   00000080   101A               SUBS     R0,R2,R0
   \   00000082   0006               LSLS     R0,R0,#+24
   \   00000084   000E               LSRS     R0,R0,#+24
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   6423               MOVS     R3,#+100
   \   0000008A   0222               MOVS     R2,#+2
   \   0000008C   2100               MOVS     R1,R4
   \   0000008E   F019               ADDS     R0,R6,R7
   \   00000090   ........           BL       Label
   \   00000094   06B0               ADD      SP,SP,#+24
   5749                  
   5750                   for (char j=0; j<6; j++) 
   \   00000096   2000               MOVS     R0,R4
   \   00000098   0090               STR      R0,[SP, #+0]
   \   0000009A   44E0               B        ??TextChange_Paint_5
   5751                   {
   5752                      for (char i=0; i<4; i++) 
   \                     ??TextChange_Paint_6:
   \   0000009C   2000               MOVS     R0,R4
   \   0000009E   4949               LDR      R1,??TextChange_Paint_0+0xC  ;; TextToChangeLength + 29
   \   000000A0   0978               LDRB     R1,[R1, #+0]
   \   000000A2   1822               MOVS     R2,#+24
   \   000000A4   5143               MULS     R1,R2,R1
   \   000000A6   484A               LDR      R2,??TextChange_Paint_0+0x10  ;; `?<Constant {0, 0}>`
   \   000000A8   5118               ADDS     R1,R2,R1
   \   000000AA   0818               ADDS     R0,R1,R0
   \   000000AC   0079               LDRB     R0,[R0, #+4]
   \   000000AE   0028               CMP      R0,#+0
   \   000000B0   2BD0               BEQ      ??TextChange_Paint_7
   5753                      {
   5754                        if (QWERTY[AlfaType][idx]>0)
   5755                        {
   5756                          Rectangle(2+i*15,y,14,13);
   \   000000B2   3700               MOVS     R7,R6
   \   000000B4   0F20               MOVS     R0,#+15
   \   000000B6   4743               MULS     R7,R0,R7
   \   000000B8   0D23               MOVS     R3,#+13
   \   000000BA   0E22               MOVS     R2,#+14
   \   000000BC   2900               MOVS     R1,R5
   \   000000BE   3800               MOVS     R0,R7
   \   000000C0   801C               ADDS     R0,R0,#+2
   \   000000C2   0006               LSLS     R0,R0,#+24
   \   000000C4   000E               LSRS     R0,R0,#+24
   \   000000C6   ........           BL       Rectangle
   5757                          Label((char*)&QWERTY[AlfaType][idx],2,3+i*15,y+2,1,11,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000CA   82B0               SUB      SP,SP,#+8
   \   000000CC   0020               MOVS     R0,#+0
   \   000000CE   0090               STR      R0,[SP, #+0]
   \   000000D0   7F21               MOVS     R1,#+127
   \   000000D2   0120               MOVS     R0,#+1
   \   000000D4   03B4               PUSH     {R0,R1}
   \   000000D6   0B21               MOVS     R1,#+11
   \   000000D8   03B4               PUSH     {R0,R1}
   \   000000DA   2B00               MOVS     R3,R5
   \   000000DC   9B1C               ADDS     R3,R3,#+2
   \   000000DE   FF1C               ADDS     R7,R7,#+3
   \   000000E0   3A00               MOVS     R2,R7
   \   000000E2   1206               LSLS     R2,R2,#+24
   \   000000E4   120E               LSRS     R2,R2,#+24
   \   000000E6   0221               MOVS     R1,#+2
   \   000000E8   8C46               MOV      R12,R1
   \   000000EA   2100               MOVS     R1,R4
   \   000000EC   3548               LDR      R0,??TextChange_Paint_0+0xC  ;; TextToChangeLength + 29
   \   000000EE   0078               LDRB     R0,[R0, #+0]
   \   000000F0   1827               MOVS     R7,#+24
   \   000000F2   7843               MULS     R0,R7,R0
   \   000000F4   344F               LDR      R7,??TextChange_Paint_0+0x10  ;; `?<Constant {0, 0}>`
   \   000000F6   3818               ADDS     R0,R7,R0
   \   000000F8   4018               ADDS     R0,R0,R1
   \   000000FA   001D               ADDS     R0,R0,#+4
   \   000000FC   6146               MOV      R1,R12
   \   000000FE   ........           BL       Label
   \   00000102   06B0               ADD      SP,SP,#+24
   5758                          idx++;
   \   00000104   641C               ADDS     R4,R4,#+1
   \   00000106   2406               LSLS     R4,R4,#+24
   \   00000108   240E               LSRS     R4,R4,#+24
   5759                        }
   5760                      }
   \                     ??TextChange_Paint_7:
   \   0000010A   761C               ADDS     R6,R6,#+1
   \   0000010C   3606               LSLS     R6,R6,#+24
   \   0000010E   360E               LSRS     R6,R6,#+24
   \                     ??TextChange_Paint_8:
   \   00000110   3000               MOVS     R0,R6
   \   00000112   0428               CMP      R0,#+4
   \   00000114   C2D3               BCC      ??TextChange_Paint_6
   5761                      y-=14;
   \   00000116   0E3D               SUBS     R5,R5,#+14
   \   00000118   2D06               LSLS     R5,R5,#+24
   \   0000011A   2D0E               LSRS     R5,R5,#+24
   \   0000011C   0098               LDR      R0,[SP, #+0]
   \   0000011E   401C               ADDS     R0,R0,#+1
   \   00000120   0006               LSLS     R0,R0,#+24
   \   00000122   000E               LSRS     R0,R0,#+24
   \   00000124   0090               STR      R0,[SP, #+0]
   \                     ??TextChange_Paint_5:
   \   00000126   0098               LDR      R0,[SP, #+0]
   \   00000128   0006               LSLS     R0,R0,#+24
   \   0000012A   000E               LSRS     R0,R0,#+24
   \   0000012C   0628               CMP      R0,#+6
   \   0000012E   01D2               BCS      ??TextChange_Paint_9
   \   00000130   0026               MOVS     R6,#+0
   \   00000132   EDE7               B        ??TextChange_Paint_8
   5762                   }
   5763                  
   5764          
   5765                  Label("C",2,3,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??TextChange_Paint_9:
   \   00000134   82B0               SUB      SP,SP,#+8
   \   00000136   0120               MOVS     R0,#+1
   \   00000138   0090               STR      R0,[SP, #+0]
   \   0000013A   7F21               MOVS     R1,#+127
   \   0000013C   03B4               PUSH     {R0,R1}
   \   0000013E   0B21               MOVS     R1,#+11
   \   00000140   03B4               PUSH     {R0,R1}
   \   00000142   0423               MOVS     R3,#+4
   \   00000144   0322               MOVS     R2,#+3
   \   00000146   0221               MOVS     R1,#+2
   \   00000148   20A0               ADR      R0,??TextChange_Paint_0+0x14  ;; 0x43, 0x00, 0x00, 0x00
   \   0000014A   ........           BL       Label
   \   0000014E   06B0               ADD      SP,SP,#+24
   5766                  Label("<",2,3+1*15,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000150   82B0               SUB      SP,SP,#+8
   \   00000152   0120               MOVS     R0,#+1
   \   00000154   0090               STR      R0,[SP, #+0]
   \   00000156   7F21               MOVS     R1,#+127
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   0B21               MOVS     R1,#+11
   \   0000015C   03B4               PUSH     {R0,R1}
   \   0000015E   0423               MOVS     R3,#+4
   \   00000160   1222               MOVS     R2,#+18
   \   00000162   0221               MOVS     R1,#+2
   \   00000164   1AA0               ADR      R0,??TextChange_Paint_0+0x18  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000166   ........           BL       Label
   \   0000016A   06B0               ADD      SP,SP,#+24
   5767                  Label(">",2,3+2*15,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000016C   82B0               SUB      SP,SP,#+8
   \   0000016E   0120               MOVS     R0,#+1
   \   00000170   0090               STR      R0,[SP, #+0]
   \   00000172   7F21               MOVS     R1,#+127
   \   00000174   03B4               PUSH     {R0,R1}
   \   00000176   0B21               MOVS     R1,#+11
   \   00000178   03B4               PUSH     {R0,R1}
   \   0000017A   0423               MOVS     R3,#+4
   \   0000017C   2122               MOVS     R2,#+33
   \   0000017E   0221               MOVS     R1,#+2
   \   00000180   14A0               ADR      R0,??TextChange_Paint_0+0x1C  ;; 0x3E, 0x00, 0x00, 0x00
   \   00000182   ........           BL       Label
   \   00000186   06B0               ADD      SP,SP,#+24
   5768                  Label("...",2,3+3*15,4,3,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000188   82B0               SUB      SP,SP,#+8
   \   0000018A   0120               MOVS     R0,#+1
   \   0000018C   0090               STR      R0,[SP, #+0]
   \   0000018E   7F21               MOVS     R1,#+127
   \   00000190   03B4               PUSH     {R0,R1}
   \   00000192   0B21               MOVS     R1,#+11
   \   00000194   0320               MOVS     R0,#+3
   \   00000196   03B4               PUSH     {R0,R1}
   \   00000198   0423               MOVS     R3,#+4
   \   0000019A   3022               MOVS     R2,#+48
   \   0000019C   0221               MOVS     R1,#+2
   \   0000019E   0EA0               ADR      R0,??TextChange_Paint_0+0x20  ;; "..."
   \   000001A0   ........           BL       Label
   \   000001A4   06B0               ADD      SP,SP,#+24
   5769          
   5770                  
   5771                  
   5772                  V_line(63,98,15,1);
   \   000001A6   0123               MOVS     R3,#+1
   \   000001A8   0F22               MOVS     R2,#+15
   \   000001AA   6221               MOVS     R1,#+98
   \   000001AC   3F20               MOVS     R0,#+63
   \   000001AE   ........           BL       V_line
   5773                  
   5774           }
   \   000001B2   FEBC               POP      {R1-R7}
   \   000001B4   01BC               POP      {R0}
   \   000001B6   0047               BX       R0               ;; return
   \                     ??TextChange_Paint_0:
   \   000001B8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001BC   ........           DC32     `?<Constant {0, 0}>` + 116
   \   000001C0   ........           DC32     TextToChangeLength + 28
   \   000001C4   ........           DC32     TextToChangeLength + 29
   \   000001C8   ........           DC32     `?<Constant {0, 0}>`
   \   000001CC   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   000001D0   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   000001D4   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   \   000001D8   2E2E2E00           DC8      "..."
   5775                  
   5776                  

   \                                 In section Debug.txt, align 4, keep-with-next
   5777          void TextChange_Refresh(char* text, char* MaxChar)
   5778          {
   \                     TextChange_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   5779            char DlTxt; //d³ugoæ tekstu
                        ^
Warning[Pe177]: variable "DlTxt" was declared but never referenced
   5780            char Pix;  //piksel
   5781            char offset=30;
   5782            //while ((DlTxt<MaxChar) && (text[DlTxt]>0)) DlTxt++;
   5783            char PrzesZnak=0;
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2100               MOVS     R1,R4
   \   00000006   1F48               LDR      R0,??TextChange_Refresh_0  ;; TextToChangeLength + 28
   \   00000008   0278               LDRB     R2,[R0, #+0]
   \   0000000A   0D2A               CMP      R2,#+13
   \   0000000C   03D3               BCC      ??TextChange_Refresh_1
   5784                  if (TextChangePoz>12) PrzesZnak=TextChangePoz-12;
   \   0000000E   1100               MOVS     R1,R2
   \   00000010   0C39               SUBS     R1,R1,#+12
   \   00000012   0906               LSLS     R1,R1,#+24
   \   00000014   090E               LSRS     R1,R1,#+24
   5785            
   5786            static char count=0;
   5787            static char mig=0;
   5788            if (count<8) 
   \                     ??TextChange_Refresh_1:
   \   00000016   1C4B               LDR      R3,??TextChange_Refresh_0+0x4  ;; ??count
   \   00000018   1878               LDRB     R0,[R3, #+0]
   \   0000001A   0828               CMP      R0,#+8
   \   0000001C   02D2               BCS      ??TextChange_Refresh_2
   5789            {
   5790              count++;
   \   0000001E   401C               ADDS     R0,R0,#+1
   \   00000020   1870               STRB     R0,[R3, #+0]
   \   00000022   2BE0               B        ??TextChange_Refresh_3
   5791            }else{
   5792                count=0;
   \                     ??TextChange_Refresh_2:
   \   00000024   2000               MOVS     R0,R4
   \   00000026   1870               STRB     R0,[R3, #+0]
   5793                if (mig) mig=0; else mig=1;  
   \   00000028   5878               LDRB     R0,[R3, #+1]
   \   0000002A   451E               SUBS     R5,R0,#+1
   \   0000002C   AD41               SBCS     R5,R5,R5
   \   0000002E   ED0F               LSRS     R5,R5,#+31
   \   00000030   5D70               STRB     R5,[R3, #+1]
   5794                Pix=1;
   \   00000032   0120               MOVS     R0,#+1
   5795                for (char Znak=0; Znak<TextChangePoz-PrzesZnak; Znak++)
   \   00000034   0FE0               B        ??TextChange_Refresh_4
   5796                {
   5797                   Pix += Arial_7[text[Znak+PrzesZnak]-offset][0];
   5798                   Pix+=1; //przerwa pomiêdzy znakami
   \                     ??TextChange_Refresh_5:
   \   00000036   154F               LDR      R7,??TextChange_Refresh_0+0x8  ;; 0xfffffed4
   \   00000038   AD19               ADDS     R5,R5,R6
   \   0000003A   009E               LDR      R6,[SP, #+0]
   \   0000003C   755D               LDRB     R5,[R6, R5]
   \   0000003E   0A26               MOVS     R6,#+10
   \   00000040   7543               MULS     R5,R6,R5
   \   00000042   134E               LDR      R6,??TextChange_Refresh_0+0xC  ;; Arial_7
   \   00000044   7519               ADDS     R5,R6,R5
   \   00000046   ED5D               LDRB     R5,[R5, R7]
   \   00000048   4019               ADDS     R0,R0,R5
   \   0000004A   401C               ADDS     R0,R0,#+1
   \   0000004C   0006               LSLS     R0,R0,#+24
   \   0000004E   000E               LSRS     R0,R0,#+24
   5799                }
   \   00000050   641C               ADDS     R4,R4,#+1
   \   00000052   2406               LSLS     R4,R4,#+24
   \   00000054   240E               LSRS     R4,R4,#+24
   \                     ??TextChange_Refresh_4:
   \   00000056   0E00               MOVS     R6,R1
   \   00000058   2500               MOVS     R5,R4
   \   0000005A   971B               SUBS     R7,R2,R6
   \   0000005C   BD42               CMP      R5,R7
   \   0000005E   EADB               BLT      ??TextChange_Refresh_5
   5800                
   5801                if (mig) 
   \   00000060   5978               LDRB     R1,[R3, #+1]
   \   00000062   0029               CMP      R1,#+0
   \   00000064   05D0               BEQ      ??TextChange_Refresh_6
   5802                    {
   5803                      V_line(Pix,100,9,1);
   \   00000066   0123               MOVS     R3,#+1
   \   00000068   0922               MOVS     R2,#+9
   \   0000006A   6421               MOVS     R1,#+100
   \   0000006C   ........           BL       V_line
   \   00000070   04E0               B        ??TextChange_Refresh_3
   5804                    }else{ 
   5805                      V_line(Pix,100,9,0);
   \                     ??TextChange_Refresh_6:
   \   00000072   0023               MOVS     R3,#+0
   \   00000074   0922               MOVS     R2,#+9
   \   00000076   6421               MOVS     R1,#+100
   \   00000078   ........           BL       V_line
   5806                    }
   5807                
   5808                
   5809            }
   5810            
   5811           
   5812          }
   \                     ??TextChange_Refresh_3:
   \   0000007C   F8BC               POP      {R3-R7}
   \   0000007E   01BC               POP      {R0}
   \   00000080   0047               BX       R0               ;; return
   \   00000082   C046               Nop      
   \                     ??TextChange_Refresh_0:
   \   00000084   ........           DC32     TextToChangeLength + 28
   \   00000088   ........           DC32     ??count
   \   0000008C   D4FEFFFF           DC32     0xfffffed4
   \   00000090   ........           DC32     Arial_7
   5813           
   5814          
   5815          long long int LastText_EventTime=0;

   \                                 In section Debug.txt, align 4, keep-with-next
   5816          void TextChange_Evant(char* text, char* MaxChar, char* MaxPix)
   5817                {  
   \                     TextChange_Evant:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   5818                  char y=86;
   \   00000004   5620               MOVS     R0,#+86
   \   00000006   0190               STR      R0,[SP, #+4]
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0170               STRB     R1,[R0, #+0]
   \   0000000E   AF48               LDR      R0,??TextChange_Evant_0  ;; X_down
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   2F28               CMP      R0,#+47
   \   00000014   2EDB               BLT      ??TextChange_Evant_1
   \   00000016   3F28               CMP      R0,#+63
   \   00000018   2CDA               BGE      ??TextChange_Evant_1
   \   0000001A   AD48               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   0000001C   405E               LDRSH    R0,[R0, R1]
   \   0000001E   7128               CMP      R0,#+113
   \   00000020   28DB               BLT      ??TextChange_Evant_1
   \   00000022   7F28               CMP      R0,#+127
   \   00000024   26DA               BGE      ??TextChange_Evant_1
   5819                  char Repaint=0;
   5820                  //zdarzenie typu down "X"
   5821                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   5822                  {
   5823                    //MenuPaint();
   5824                    H_line(49,114,10,0);
   \   00000026   0B00               MOVS     R3,R1
   \   00000028   0A22               MOVS     R2,#+10
   \   0000002A   7221               MOVS     R1,#+114
   \   0000002C   3120               MOVS     R0,#+49
   \   0000002E   ........           BL       H_line
   5825                    H_line(49,123,10,0); 
   \   00000032   0023               MOVS     R3,#+0
   \   00000034   0A22               MOVS     R2,#+10
   \   00000036   7B21               MOVS     R1,#+123
   \   00000038   3120               MOVS     R0,#+49
   \   0000003A   ........           BL       H_line
   5826                    V_line(49,114,10,0); 
   \   0000003E   0023               MOVS     R3,#+0
   \   00000040   0A22               MOVS     R2,#+10
   \   00000042   7221               MOVS     R1,#+114
   \   00000044   3120               MOVS     R0,#+49
   \   00000046   ........           BL       V_line
   5827                    V_line(58,114,10,0); 
   \   0000004A   0023               MOVS     R3,#+0
   \   0000004C   0A22               MOVS     R2,#+10
   \   0000004E   7221               MOVS     R1,#+114
   \   00000050   3A20               MOVS     R0,#+58
   \   00000052   ........           BL       V_line
   5828                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000056   9F48               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   00000058   0078               LDRB     R0,[R0, #+0]
   \   0000005A   0028               CMP      R0,#+0
   \   0000005C   0AD1               BNE      ??TextChange_Evant_1
   \   0000005E   9E48               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   00000060   8021               MOVS     R1,#+128
   \   00000062   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000064   0160               STR      R1,[R0, #+0]
   \   00000066   9D4A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   00000068   9D48               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   0000006A   03C8               LDM      R0!,{R0,R1}
   \   0000006C   0023               MOVS     R3,#+0
   \   0000006E   0830               ADDS     R0,R0,#+8
   \   00000070   5941               ADCS     R1,R1,R3
   \   00000072   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_1:
   \   00000074   9B48               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   405E               LDRSH    R0,[R0, R1]
   \   0000007A   2F28               CMP      R0,#+47
   \   0000007C   52DB               BLT      ??TextChange_Evant_2
   \   0000007E   3F28               CMP      R0,#+63
   \   00000080   50DA               BGE      ??TextChange_Evant_2
   \   00000082   9948               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   00000084   405E               LDRSH    R0,[R0, R1]
   \   00000086   7128               CMP      R0,#+113
   \   00000088   4CDB               BLT      ??TextChange_Evant_2
   \   0000008A   7F28               CMP      R0,#+127
   \   0000008C   4ADA               BGE      ??TextChange_Evant_2
   5829                    
   5830                  }
   5831            
   5832                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   5833                  {
   5834                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000008E   9148               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   00000090   0078               LDRB     R0,[R0, #+0]
   \   00000092   0028               CMP      R0,#+0
   \   00000094   0AD1               BNE      ??TextChange_Evant_3
   \   00000096   9048               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   00000098   8021               MOVS     R1,#+128
   \   0000009A   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000009C   0160               STR      R1,[R0, #+0]
   \   0000009E   8F4A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   000000A0   8F48               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   000000A2   03C8               LDM      R0!,{R0,R1}
   \   000000A4   0023               MOVS     R3,#+0
   \   000000A6   0830               ADDS     R0,R0,#+8
   \   000000A8   5941               ADCS     R1,R1,R3
   \   000000AA   03C2               STM      R2!,{R0,R1}
   5835          
   5836                    char LastChar=0;
   \                     ??TextChange_Evant_3:
   \   000000AC   0020               MOVS     R0,#+0
   5837                    for (char i=0; i<*MaxChar; i++) if ((text[i]>=30) &&  (text[i]<=129) && (text[i]!=32)) LastChar=i;
   \   000000AE   0100               MOVS     R1,R0
   \   000000B0   0DE0               B        ??TextChange_Evant_4
   \                     ??TextChange_Evant_5:
   \   000000B2   069B               LDR      R3,[SP, #+24]
   \   000000B4   9A18               ADDS     R2,R3,R2
   \   000000B6   1378               LDRB     R3,[R2, #+0]
   \   000000B8   1E2B               CMP      R3,#+30
   \   000000BA   05D3               BCC      ??TextChange_Evant_6
   \   000000BC   822B               CMP      R3,#+130
   \   000000BE   03D2               BCS      ??TextChange_Evant_6
   \   000000C0   1A00               MOVS     R2,R3
   \   000000C2   202A               CMP      R2,#+32
   \   000000C4   00D0               BEQ      ??TextChange_Evant_6
   \   000000C6   0800               MOVS     R0,R1
   \                     ??TextChange_Evant_6:
   \   000000C8   491C               ADDS     R1,R1,#+1
   \   000000CA   0906               LSLS     R1,R1,#+24
   \   000000CC   090E               LSRS     R1,R1,#+24
   \                     ??TextChange_Evant_4:
   \   000000CE   0A00               MOVS     R2,R1
   \   000000D0   079B               LDR      R3,[SP, #+28]
   \   000000D2   1B78               LDRB     R3,[R3, #+0]
   \   000000D4   9A42               CMP      R2,R3
   \   000000D6   ECD3               BCC      ??TextChange_Evant_5
   5838                    for (char i=LastChar+1; i<*MaxChar; i++) text[i]=0;
   \   000000D8   401C               ADDS     R0,R0,#+1
   \   000000DA   0006               LSLS     R0,R0,#+24
   \   000000DC   000E               LSRS     R0,R0,#+24
   \   000000DE   0023               MOVS     R3,#+0
   \   000000E0   04E0               B        ??TextChange_Evant_7
   \                     ??TextChange_Evant_8:
   \   000000E2   069A               LDR      R2,[SP, #+24]
   \   000000E4   5354               STRB     R3,[R2, R1]
   \   000000E6   401C               ADDS     R0,R0,#+1
   \   000000E8   0006               LSLS     R0,R0,#+24
   \   000000EA   000E               LSRS     R0,R0,#+24
   \                     ??TextChange_Evant_7:
   \   000000EC   0100               MOVS     R1,R0
   \   000000EE   079A               LDR      R2,[SP, #+28]
   \   000000F0   1278               LDRB     R2,[R2, #+0]
   \   000000F2   9142               CMP      R1,R2
   \   000000F4   F5D3               BCC      ??TextChange_Evant_8
   5839          
   5840                    TextChangeCharNr=0;
   \   000000F6   7D4C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   000000F8   1800               MOVS     R0,R3
   \   000000FA   E076               STRB     R0,[R4, #+27]
   5841                    TextChangePoz=0;
   \   000000FC   2077               STRB     R0,[R4, #+28]
   5842                    TextToChangeMaxPixSize=0;
   \   000000FE   6070               STRB     R0,[R4, #+1]
   5843                    MaxChar=0;
   5844                    Rej_poz=0;
   \   00000100   6065               STR      R0,[R4, #+84]
   5845                    
   5846                    MenuLevel=(MenuLevel/10);
   \   00000102   206D               LDR      R0,[R4, #+80]
   \   00000104   0A21               MOVS     R1,#+10
   \   00000106   ........           BL       __aeabi_idivmod
   \   0000010A   2065               STR      R0,[R4, #+80]
   5847                    MenuPaint();
   \   0000010C   ........           BL       MenuPaint
   5848                  }  
   5849                  else
   5850                  {
   5851                    Label("<",2,3+1*15,4,1,11,1,127,1);
   5852                    
   5853                    if ((X_up>3) && (X_up<62) && (Y_up>4) &&  (Y_up<108)) Repaint=1;
   5854                    
   5855                    //przyciski funkcyjne
   5856                    char FunkButt=0;
   5857                    for (char i=0; i<4; i++)
   5858                    {
   5859                      if ((X_down>3+i*15) && (X_down<3+i*15+15) && (Y_down>4) &&  (Y_down<4+9)) 
   5860                      {
   5861                        MenuPaint();
   5862                        Rectangle(2+i*15,3,14,11);
   5863                        
   5864                      }
   5865                      
   5866                      if ((X_up>3+i*15) && (X_up<3+i*15+15) && (Y_up>4) &&  (Y_up<4+9))
   5867                      {
   5868                        FunkButt=i+1;
   5869                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe068]: integer conversion resulted in a change of sign
   5870                      }
   5871                    }
   5872                    
   5873                    //obliczenie d³ugoci tekstu
   5874                    char TextLength=0;
   5875                    while ((TextLength<*MaxChar) && (text[TextLength]!=0)) TextLength++;
   5876          
   5877                    
   5878                     //przycisk zmiany alfabetu
   5879                    if ((FunkButt==1) && (TextChangePoz>0)) 
   5880                    {
   5881                      for (char i=TextChangePoz; i<TextLength; i++)  text[i-1]=text[i];
   5882                      TextChangePoz--;
   5883                      TextLength--;
   5884                      text[TextLength]=0;  
   5885                      Repaint=1;
   5886                    }
   5887                    if (FunkButt==2) {if (TextChangePoz>0) {TextChangePoz--;} Repaint=1;}
   5888                    if (FunkButt==3) {if (TextChangePoz<TextLength) {TextChangePoz++;} Repaint=1;}
   5889                    if (FunkButt==4) {if (AlfaType<2) AlfaType++; else AlfaType=0; Repaint=1;}
   5890                    
   5891          
   5892                   char idx=0;
   5893                    for (char j=0; j<6; j++) 
   5894                   {
   5895                      for (char i=0; i<4; i++) 
   5896                      {
   5897                        if (QWERTY[AlfaType][idx]>0)
   5898                        {
   5899                          if ((X_down>3+i*15) && (X_down<3+i*15+15) && (Y_down>y) &&  (Y_down<y+13))
   5900                          {
   5901                            MenuPaint();
   5902                            Label((char*)&QWERTY[AlfaType][idx],2,3+i*15,y+2,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   5903                          }
   5904                          if ((X_up>3+i*15) && (X_up<3+i*15+15) && (Y_up>y) &&  (Y_up<y+13)) 
   5905                          {
   5906                            if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                         ^
Warning[Pe068]: integer conversion resulted in a change of sign
   5907                            if (TextChangePoz<*MaxChar)
   5908                            {
   5909                               if ((*MaxPix==0) || ((LabelLength(text,*MaxChar)+LabelLength((char*)&(QWERTY[AlfaType][idx]),1))<*MaxPix ))
   5910                               {
   5911                                text[TextChangePoz]=QWERTY[AlfaType][idx];
   5912                                TextChangePoz++;
   5913                                if ((TextChangePoz==1) && (text[TextChangePoz]==0) && (AlfaType==0)) AlfaType=1;
   5914                               }else{
   5915                                if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+200;} 
                                                                                                             ^
Warning[Pe068]: integer conversion resulted in a change of sign
   5916                               }
   5917                            }else{
   5918                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+200;} 
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   5919                            }
   5920                             
   5921                            char AT=1;
   5922                            //for (char AT=0; AT<3; AT++)
   5923                            //{
   5924                                for (char i=0; i<MaxLetherOnScr; i++)
   5925                                {
   5926                                  if (text[TextChangePoz]==QWERTY[AT][i]) AlfaType=AT; 
   5927                                }
   5928                            //}
   5929                            
   5930                            Repaint=1;
   5931                          }
   5932                          idx++;
   5933                        }
   5934                      }
   5935                      y-=14;
   5936                   }
   5937                    
   5938                    
   5939                    
   5940                   
   5941                    
   5942          
   5943                    
   5944                  }
   5945                  
   5946                  
   5947                  if (Repaint) MenuPaint();
   \                     ??TextChange_Evant_9:
   \   00000110   6846               MOV      R0,SP
   \   00000112   0078               LDRB     R0,[R0, #+0]
   \   00000114   0028               CMP      R0,#+0
   \   00000116   01D0               BEQ      ??TextChange_Evant_10
   \   00000118   ........           BL       MenuPaint
   5948                  
   5949                }
   \                     ??TextChange_Evant_10:
   \   0000011C   09B0               ADD      SP,SP,#+36
   \   0000011E   F0BC               POP      {R4-R7}
   \   00000120   01BC               POP      {R0}
   \   00000122   0047               BX       R0               ;; return
   \                     ??TextChange_Evant_2:
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0120               MOVS     R0,#+1
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   7F21               MOVS     R1,#+127
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   0B21               MOVS     R1,#+11
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   0423               MOVS     R3,#+4
   \   00000134   1222               MOVS     R2,#+18
   \   00000136   0221               MOVS     R1,#+2
   \   00000138   6DA0               ADR      R0,??TextChange_Evant_0+0x24  ;; 0x3C, 0x00, 0x00, 0x00
   \   0000013A   ........           BL       Label
   \   0000013E   06B0               ADD      SP,SP,#+24
   \   00000140   6848               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   00000142   0021               MOVS     R1,#+0
   \   00000144   405E               LDRSH    R0,[R0, R1]
   \   00000146   0428               CMP      R0,#+4
   \   00000148   0ADB               BLT      ??TextChange_Evant_11
   \   0000014A   3E28               CMP      R0,#+62
   \   0000014C   08DA               BGE      ??TextChange_Evant_11
   \   0000014E   6648               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   00000150   405E               LDRSH    R0,[R0, R1]
   \   00000152   0528               CMP      R0,#+5
   \   00000154   04DB               BLT      ??TextChange_Evant_11
   \   00000156   6C28               CMP      R0,#+108
   \   00000158   02DA               BGE      ??TextChange_Evant_11
   \   0000015A   6846               MOV      R0,SP
   \   0000015C   0121               MOVS     R1,#+1
   \   0000015E   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_11:
   \   00000160   0025               MOVS     R5,#+0
   \   00000162   2C00               MOVS     R4,R5
   \   00000164   43E0               B        ??TextChange_Evant_12
   \                     ??TextChange_Evant_13:
   \   00000166   2600               MOVS     R6,R4
   \   00000168   0F20               MOVS     R0,#+15
   \   0000016A   4643               MULS     R6,R0,R6
   \   0000016C   3700               MOVS     R7,R6
   \   0000016E   FF1C               ADDS     R7,R7,#+3
   \   00000170   5648               LDR      R0,??TextChange_Evant_0  ;; X_down
   \   00000172   0021               MOVS     R1,#+0
   \   00000174   415E               LDRSH    R1,[R0, R1]
   \   00000176   8F42               CMP      R7,R1
   \   00000178   15DA               BGE      ??TextChange_Evant_14
   \   0000017A   3000               MOVS     R0,R6
   \   0000017C   1230               ADDS     R0,R0,#+18
   \   0000017E   8142               CMP      R1,R0
   \   00000180   11DA               BGE      ??TextChange_Evant_14
   \   00000182   5348               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   00000184   0021               MOVS     R1,#+0
   \   00000186   405E               LDRSH    R0,[R0, R1]
   \   00000188   0528               CMP      R0,#+5
   \   0000018A   0CDB               BLT      ??TextChange_Evant_14
   \   0000018C   0D28               CMP      R0,#+13
   \   0000018E   0ADA               BGE      ??TextChange_Evant_14
   \   00000190   ........           BL       MenuPaint
   \   00000194   0B23               MOVS     R3,#+11
   \   00000196   0E22               MOVS     R2,#+14
   \   00000198   0321               MOVS     R1,#+3
   \   0000019A   3000               MOVS     R0,R6
   \   0000019C   801C               ADDS     R0,R0,#+2
   \   0000019E   0006               LSLS     R0,R0,#+24
   \   000001A0   000E               LSRS     R0,R0,#+24
   \   000001A2   ........           BL       Rectangle
   \                     ??TextChange_Evant_14:
   \   000001A6   4F48               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   000001A8   0021               MOVS     R1,#+0
   \   000001AA   405E               LDRSH    R0,[R0, R1]
   \   000001AC   8742               CMP      R7,R0
   \   000001AE   1BDA               BGE      ??TextChange_Evant_15
   \   000001B0   1236               ADDS     R6,R6,#+18
   \   000001B2   B042               CMP      R0,R6
   \   000001B4   18DA               BGE      ??TextChange_Evant_15
   \   000001B6   4C48               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   000001B8   405E               LDRSH    R0,[R0, R1]
   \   000001BA   0528               CMP      R0,#+5
   \   000001BC   14DB               BLT      ??TextChange_Evant_15
   \   000001BE   0D28               CMP      R0,#+13
   \   000001C0   12DA               BGE      ??TextChange_Evant_15
   \   000001C2   2500               MOVS     R5,R4
   \   000001C4   6D1C               ADDS     R5,R5,#+1
   \   000001C6   2D06               LSLS     R5,R5,#+24
   \   000001C8   2D0E               LSRS     R5,R5,#+24
   \   000001CA   4248               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   000001CC   0078               LDRB     R0,[R0, #+0]
   \   000001CE   0028               CMP      R0,#+0
   \   000001D0   0AD1               BNE      ??TextChange_Evant_15
   \   000001D2   4148               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   000001D4   8021               MOVS     R1,#+128
   \   000001D6   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000001D8   0160               STR      R1,[R0, #+0]
   \   000001DA   404A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   000001DC   4048               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   000001DE   03C8               LDM      R0!,{R0,R1}
   \   000001E0   0023               MOVS     R3,#+0
   \   000001E2   0830               ADDS     R0,R0,#+8
   \   000001E4   5941               ADCS     R1,R1,R3
   \   000001E6   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_15:
   \   000001E8   641C               ADDS     R4,R4,#+1
   \   000001EA   2406               LSLS     R4,R4,#+24
   \   000001EC   240E               LSRS     R4,R4,#+24
   \                     ??TextChange_Evant_12:
   \   000001EE   2000               MOVS     R0,R4
   \   000001F0   0428               CMP      R0,#+4
   \   000001F2   B8D3               BCC      ??TextChange_Evant_13
   \   000001F4   0020               MOVS     R0,#+0
   \   000001F6   02E0               B        ??TextChange_Evant_16
   \                     ??TextChange_Evant_17:
   \   000001F8   401C               ADDS     R0,R0,#+1
   \   000001FA   0006               LSLS     R0,R0,#+24
   \   000001FC   000E               LSRS     R0,R0,#+24
   \                     ??TextChange_Evant_16:
   \   000001FE   0100               MOVS     R1,R0
   \   00000200   079A               LDR      R2,[SP, #+28]
   \   00000202   1278               LDRB     R2,[R2, #+0]
   \   00000204   9142               CMP      R1,R2
   \   00000206   03D2               BCS      ??TextChange_Evant_18
   \   00000208   069A               LDR      R2,[SP, #+24]
   \   0000020A   515C               LDRB     R1,[R2, R1]
   \   0000020C   0029               CMP      R1,#+0
   \   0000020E   F3D1               BNE      ??TextChange_Evant_17
   \                     ??TextChange_Evant_18:
   \   00000210   2900               MOVS     R1,R5
   \   00000212   0129               CMP      R1,#+1
   \   00000214   1DD1               BNE      ??TextChange_Evant_19
   \   00000216   354C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   00000218   217F               LDRB     R1,[R4, #+28]
   \   0000021A   0029               CMP      R1,#+0
   \   0000021C   19D0               BEQ      ??TextChange_Evant_19
   \   0000021E   07E0               B        ??TextChange_Evant_20
   \                     ??TextChange_Evant_21:
   \   00000220   069B               LDR      R3,[SP, #+24]
   \   00000222   9A18               ADDS     R2,R3,R2
   \   00000224   531E               SUBS     R3,R2,#+1
   \   00000226   1278               LDRB     R2,[R2, #+0]
   \   00000228   1A70               STRB     R2,[R3, #+0]
   \   0000022A   491C               ADDS     R1,R1,#+1
   \   0000022C   0906               LSLS     R1,R1,#+24
   \   0000022E   090E               LSRS     R1,R1,#+24
   \                     ??TextChange_Evant_20:
   \   00000230   0A00               MOVS     R2,R1
   \   00000232   0300               MOVS     R3,R0
   \   00000234   9A42               CMP      R2,R3
   \   00000236   F3D3               BCC      ??TextChange_Evant_21
   \   00000238   217F               LDRB     R1,[R4, #+28]
   \   0000023A   491E               SUBS     R1,R1,#+1
   \   0000023C   2177               STRB     R1,[R4, #+28]
   \   0000023E   401E               SUBS     R0,R0,#+1
   \   00000240   0006               LSLS     R0,R0,#+24
   \   00000242   000E               LSRS     R0,R0,#+24
   \   00000244   0100               MOVS     R1,R0
   \   00000246   069A               LDR      R2,[SP, #+24]
   \   00000248   0023               MOVS     R3,#+0
   \   0000024A   5354               STRB     R3,[R2, R1]
   \   0000024C   6946               MOV      R1,SP
   \   0000024E   0122               MOVS     R2,#+1
   \   00000250   0A70               STRB     R2,[R1, #+0]
   \                     ??TextChange_Evant_19:
   \   00000252   2900               MOVS     R1,R5
   \   00000254   0229               CMP      R1,#+2
   \   00000256   08D1               BNE      ??TextChange_Evant_22
   \   00000258   244C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   0000025A   217F               LDRB     R1,[R4, #+28]
   \   0000025C   0029               CMP      R1,#+0
   \   0000025E   01D0               BEQ      ??TextChange_Evant_23
   \   00000260   491E               SUBS     R1,R1,#+1
   \   00000262   2177               STRB     R1,[R4, #+28]
   \                     ??TextChange_Evant_23:
   \   00000264   6946               MOV      R1,SP
   \   00000266   0122               MOVS     R2,#+1
   \   00000268   0A70               STRB     R2,[R1, #+0]
   \                     ??TextChange_Evant_22:
   \   0000026A   2900               MOVS     R1,R5
   \   0000026C   0329               CMP      R1,#+3
   \   0000026E   08D1               BNE      ??TextChange_Evant_24
   \   00000270   1E4C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   00000272   217F               LDRB     R1,[R4, #+28]
   \   00000274   8142               CMP      R1,R0
   \   00000276   01D2               BCS      ??TextChange_Evant_25
   \   00000278   491C               ADDS     R1,R1,#+1
   \   0000027A   2177               STRB     R1,[R4, #+28]
   \                     ??TextChange_Evant_25:
   \   0000027C   6846               MOV      R0,SP
   \   0000027E   0121               MOVS     R1,#+1
   \   00000280   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_24:
   \   00000282   042D               CMP      R5,#+4
   \   00000284   0BD1               BNE      ??TextChange_Evant_26
   \   00000286   194C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   00000288   607F               LDRB     R0,[R4, #+29]
   \   0000028A   0228               CMP      R0,#+2
   \   0000028C   02D2               BCS      ??TextChange_Evant_27
   \   0000028E   401C               ADDS     R0,R0,#+1
   \   00000290   6077               STRB     R0,[R4, #+29]
   \   00000292   01E0               B        ??TextChange_Evant_28
   \                     ??TextChange_Evant_27:
   \   00000294   0020               MOVS     R0,#+0
   \   00000296   6077               STRB     R0,[R4, #+29]
   \                     ??TextChange_Evant_28:
   \   00000298   6846               MOV      R0,SP
   \   0000029A   0121               MOVS     R1,#+1
   \   0000029C   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_26:
   \   0000029E   0020               MOVS     R0,#+0
   \   000002A0   0490               STR      R0,[SP, #+16]
   \   000002A2   0590               STR      R0,[SP, #+20]
   \   000002A4   09E0               B        ??TextChange_Evant_29
   \                     ??TextChange_Evant_30:
   \   000002A6   0198               LDR      R0,[SP, #+4]
   \   000002A8   0E38               SUBS     R0,R0,#+14
   \   000002AA   0006               LSLS     R0,R0,#+24
   \   000002AC   000E               LSRS     R0,R0,#+24
   \   000002AE   0190               STR      R0,[SP, #+4]
   \   000002B0   0598               LDR      R0,[SP, #+20]
   \   000002B2   401C               ADDS     R0,R0,#+1
   \   000002B4   0006               LSLS     R0,R0,#+24
   \   000002B6   000E               LSRS     R0,R0,#+24
   \   000002B8   0590               STR      R0,[SP, #+20]
   \                     ??TextChange_Evant_29:
   \   000002BA   0598               LDR      R0,[SP, #+20]
   \   000002BC   0006               LSLS     R0,R0,#+24
   \   000002BE   000E               LSRS     R0,R0,#+24
   \   000002C0   0628               CMP      R0,#+6
   \   000002C2   00D3               BCC      .+4
   \   000002C4   24E7               B        ??TextChange_Evant_9
   \   000002C6   0020               MOVS     R0,#+0
   \   000002C8   0390               STR      R0,[SP, #+12]
   \   000002CA   31E0               B        ??TextChange_Evant_31
   \                     ??TextChange_Evant_0:
   \   000002CC   ........           DC32     X_down
   \   000002D0   ........           DC32     Y_down
   \   000002D4   E9D71300           DC32     0x13d7e9
   \   000002D8   30F4FFFF           DC32     0xfffff430
   \   000002DC   ........           DC32     ButtonBipCounter
   \   000002E0   ........           DC32     g_counter
   \   000002E4   ........           DC32     X_up
   \   000002E8   ........           DC32     Y_up
   \   000002EC   ........           DC32     TextToChangeLength
   \   000002F0   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \                     ??TextChange_Evant_32:
   \   000002F4   217F               LDRB     R1,[R4, #+28]
   \   000002F6   069A               LDR      R2,[SP, #+24]
   \   000002F8   515C               LDRB     R1,[R2, R1]
   \   000002FA   0200               MOVS     R2,R0
   \   000002FC   694B               LDR      R3,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   000002FE   9A18               ADDS     R2,R3,R2
   \   00000300   127F               LDRB     R2,[R2, #+28]
   \   00000302   9142               CMP      R1,R2
   \   00000304   01D1               BNE      ??TextChange_Evant_34
   \   00000306   0121               MOVS     R1,#+1
   \   00000308   6177               STRB     R1,[R4, #+29]
   \                     ??TextChange_Evant_34:
   \   0000030A   401C               ADDS     R0,R0,#+1
   \   0000030C   0006               LSLS     R0,R0,#+24
   \   0000030E   000E               LSRS     R0,R0,#+24
   \                     ??TextChange_Evant_35:
   \   00000310   0100               MOVS     R1,R0
   \   00000312   1829               CMP      R1,#+24
   \   00000314   EED3               BCC      ??TextChange_Evant_32
   \   00000316   6846               MOV      R0,SP
   \   00000318   0121               MOVS     R1,#+1
   \   0000031A   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_36:
   \   0000031C   0498               LDR      R0,[SP, #+16]
   \   0000031E   401C               ADDS     R0,R0,#+1
   \   00000320   0006               LSLS     R0,R0,#+24
   \   00000322   000E               LSRS     R0,R0,#+24
   \   00000324   0490               STR      R0,[SP, #+16]
   \                     ??TextChange_Evant_37:
   \   00000326   0398               LDR      R0,[SP, #+12]
   \   00000328   401C               ADDS     R0,R0,#+1
   \   0000032A   0006               LSLS     R0,R0,#+24
   \   0000032C   000E               LSRS     R0,R0,#+24
   \   0000032E   0390               STR      R0,[SP, #+12]
   \                     ??TextChange_Evant_31:
   \   00000330   0398               LDR      R0,[SP, #+12]
   \   00000332   0006               LSLS     R0,R0,#+24
   \   00000334   000E               LSRS     R0,R0,#+24
   \   00000336   0428               CMP      R0,#+4
   \   00000338   B5D2               BCS      ??TextChange_Evant_30
   \   0000033A   0498               LDR      R0,[SP, #+16]
   \   0000033C   0006               LSLS     R0,R0,#+24
   \   0000033E   000E               LSRS     R0,R0,#+24
   \   00000340   0290               STR      R0,[SP, #+8]
   \   00000342   594C               LDR      R4,??TextChange_Evant_33+0x4  ;; TextToChangeLength
   \   00000344   617F               LDRB     R1,[R4, #+29]
   \   00000346   1822               MOVS     R2,#+24
   \   00000348   5143               MULS     R1,R2,R1
   \   0000034A   564A               LDR      R2,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   0000034C   5118               ADDS     R1,R2,R1
   \   0000034E   0818               ADDS     R0,R1,R0
   \   00000350   0079               LDRB     R0,[R0, #+4]
   \   00000352   0028               CMP      R0,#+0
   \   00000354   E7D0               BEQ      ??TextChange_Evant_37
   \   00000356   039D               LDR      R5,[SP, #+12]
   \   00000358   2D06               LSLS     R5,R5,#+24
   \   0000035A   2D0E               LSRS     R5,R5,#+24
   \   0000035C   0F20               MOVS     R0,#+15
   \   0000035E   4543               MULS     R5,R0,R5
   \   00000360   2E00               MOVS     R6,R5
   \   00000362   F61C               ADDS     R6,R6,#+3
   \   00000364   5148               LDR      R0,??TextChange_Evant_33+0x8  ;; X_down
   \   00000366   0021               MOVS     R1,#+0
   \   00000368   415E               LDRSH    R1,[R0, R1]
   \   0000036A   8E42               CMP      R6,R1
   \   0000036C   2EDA               BGE      ??TextChange_Evant_38
   \   0000036E   2800               MOVS     R0,R5
   \   00000370   1230               ADDS     R0,R0,#+18
   \   00000372   8142               CMP      R1,R0
   \   00000374   2ADA               BGE      ??TextChange_Evant_38
   \   00000376   4E48               LDR      R0,??TextChange_Evant_33+0xC  ;; Y_down
   \   00000378   0021               MOVS     R1,#+0
   \   0000037A   415E               LDRSH    R1,[R0, R1]
   \   0000037C   0198               LDR      R0,[SP, #+4]
   \   0000037E   0006               LSLS     R0,R0,#+24
   \   00000380   000E               LSRS     R0,R0,#+24
   \   00000382   8842               CMP      R0,R1
   \   00000384   22DA               BGE      ??TextChange_Evant_38
   \   00000386   019F               LDR      R7,[SP, #+4]
   \   00000388   3F06               LSLS     R7,R7,#+24
   \   0000038A   3F0E               LSRS     R7,R7,#+24
   \   0000038C   3800               MOVS     R0,R7
   \   0000038E   0D30               ADDS     R0,R0,#+13
   \   00000390   8142               CMP      R1,R0
   \   00000392   1BDA               BGE      ??TextChange_Evant_38
   \   00000394   ........           BL       MenuPaint
   \   00000398   82B0               SUB      SP,SP,#+8
   \   0000039A   0120               MOVS     R0,#+1
   \   0000039C   0090               STR      R0,[SP, #+0]
   \   0000039E   7F21               MOVS     R1,#+127
   \   000003A0   03B4               PUSH     {R0,R1}
   \   000003A2   0B21               MOVS     R1,#+11
   \   000003A4   03B4               PUSH     {R0,R1}
   \   000003A6   BF1C               ADDS     R7,R7,#+2
   \   000003A8   3B00               MOVS     R3,R7
   \   000003AA   3200               MOVS     R2,R6
   \   000003AC   1206               LSLS     R2,R2,#+24
   \   000003AE   120E               LSRS     R2,R2,#+24
   \   000003B0   0221               MOVS     R1,#+2
   \   000003B2   8C46               MOV      R12,R1
   \   000003B4   0899               LDR      R1,[SP, #+32]
   \   000003B6   607F               LDRB     R0,[R4, #+29]
   \   000003B8   1827               MOVS     R7,#+24
   \   000003BA   7843               MULS     R0,R7,R0
   \   000003BC   394F               LDR      R7,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   000003BE   3818               ADDS     R0,R7,R0
   \   000003C0   4018               ADDS     R0,R0,R1
   \   000003C2   001D               ADDS     R0,R0,#+4
   \   000003C4   6146               MOV      R1,R12
   \   000003C6   ........           BL       Label
   \   000003CA   06B0               ADD      SP,SP,#+24
   \                     ??TextChange_Evant_38:
   \   000003CC   3948               LDR      R0,??TextChange_Evant_33+0x10  ;; X_up
   \   000003CE   0021               MOVS     R1,#+0
   \   000003D0   405E               LDRSH    R0,[R0, R1]
   \   000003D2   8642               CMP      R6,R0
   \   000003D4   A2DA               BGE      ??TextChange_Evant_36
   \   000003D6   1235               ADDS     R5,R5,#+18
   \   000003D8   A842               CMP      R0,R5
   \   000003DA   9FDA               BGE      ??TextChange_Evant_36
   \   000003DC   3648               LDR      R0,??TextChange_Evant_33+0x14  ;; Y_up
   \   000003DE   405E               LDRSH    R0,[R0, R1]
   \   000003E0   0199               LDR      R1,[SP, #+4]
   \   000003E2   0906               LSLS     R1,R1,#+24
   \   000003E4   090E               LSRS     R1,R1,#+24
   \   000003E6   8142               CMP      R1,R0
   \   000003E8   98DA               BGE      ??TextChange_Evant_36
   \   000003EA   0199               LDR      R1,[SP, #+4]
   \   000003EC   0906               LSLS     R1,R1,#+24
   \   000003EE   090E               LSRS     R1,R1,#+24
   \   000003F0   0D31               ADDS     R1,R1,#+13
   \   000003F2   8842               CMP      R0,R1
   \   000003F4   92DA               BGE      ??TextChange_Evant_36
   \   000003F6   314D               LDR      R5,??TextChange_Evant_33+0x18  ;; 0x13d7e9
   \   000003F8   2878               LDRB     R0,[R5, #+0]
   \   000003FA   0028               CMP      R0,#+0
   \   000003FC   0AD1               BNE      ??TextChange_Evant_39
   \   000003FE   3048               LDR      R0,??TextChange_Evant_33+0x1C  ;; 0xfffff430
   \   00000400   8021               MOVS     R1,#+128
   \   00000402   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000404   0160               STR      R1,[R0, #+0]
   \   00000406   2F4A               LDR      R2,??TextChange_Evant_33+0x20  ;; ButtonBipCounter
   \   00000408   2F48               LDR      R0,??TextChange_Evant_33+0x24  ;; g_counter
   \   0000040A   03C8               LDM      R0!,{R0,R1}
   \   0000040C   0023               MOVS     R3,#+0
   \   0000040E   0830               ADDS     R0,R0,#+8
   \   00000410   5941               ADCS     R1,R1,R3
   \   00000412   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_39:
   \   00000414   207F               LDRB     R0,[R4, #+28]
   \   00000416   0799               LDR      R1,[SP, #+28]
   \   00000418   0978               LDRB     R1,[R1, #+0]
   \   0000041A   8842               CMP      R0,R1
   \   0000041C   31D2               BCS      ??TextChange_Evant_40
   \   0000041E   0898               LDR      R0,[SP, #+32]
   \   00000420   0078               LDRB     R0,[R0, #+0]
   \   00000422   0028               CMP      R0,#+0
   \   00000424   13D0               BEQ      ??TextChange_Evant_41
   \   00000426   0698               LDR      R0,[SP, #+24]
   \   00000428   ........           BL       LabelLength
   \   0000042C   0600               MOVS     R6,R0
   \   0000042E   0121               MOVS     R1,#+1
   \   00000430   0298               LDR      R0,[SP, #+8]
   \   00000432   627F               LDRB     R2,[R4, #+29]
   \   00000434   1823               MOVS     R3,#+24
   \   00000436   5A43               MULS     R2,R3,R2
   \   00000438   1A4B               LDR      R3,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   0000043A   9A18               ADDS     R2,R3,R2
   \   0000043C   1018               ADDS     R0,R2,R0
   \   0000043E   001D               ADDS     R0,R0,#+4
   \   00000440   ........           BL       LabelLength
   \   00000444   3018               ADDS     R0,R6,R0
   \   00000446   0899               LDR      R1,[SP, #+32]
   \   00000448   0978               LDRB     R1,[R1, #+0]
   \   0000044A   8842               CMP      R0,R1
   \   0000044C   19DA               BGE      ??TextChange_Evant_40
   \                     ??TextChange_Evant_41:
   \   0000044E   207F               LDRB     R0,[R4, #+28]
   \   00000450   0699               LDR      R1,[SP, #+24]
   \   00000452   029A               LDR      R2,[SP, #+8]
   \   00000454   637F               LDRB     R3,[R4, #+29]
   \   00000456   1825               MOVS     R5,#+24
   \   00000458   6B43               MULS     R3,R5,R3
   \   0000045A   124D               LDR      R5,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   0000045C   EB18               ADDS     R3,R5,R3
   \   0000045E   9A18               ADDS     R2,R3,R2
   \   00000460   1279               LDRB     R2,[R2, #+4]
   \   00000462   0A54               STRB     R2,[R1, R0]
   \   00000464   207F               LDRB     R0,[R4, #+28]
   \   00000466   401C               ADDS     R0,R0,#+1
   \   00000468   2077               STRB     R0,[R4, #+28]
   \   0000046A   0006               LSLS     R0,R0,#+24
   \   0000046C   000E               LSRS     R0,R0,#+24
   \   0000046E   0128               CMP      R0,#+1
   \   00000470   15D1               BNE      ??TextChange_Evant_42
   \   00000472   0698               LDR      R0,[SP, #+24]
   \   00000474   4078               LDRB     R0,[R0, #+1]
   \   00000476   617F               LDRB     R1,[R4, #+29]
   \   00000478   0143               ORRS     R1,R1,R0
   \   0000047A   10D1               BNE      ??TextChange_Evant_42
   \   0000047C   0120               MOVS     R0,#+1
   \   0000047E   6077               STRB     R0,[R4, #+29]
   \   00000480   0DE0               B        ??TextChange_Evant_42
   \                     ??TextChange_Evant_40:
   \   00000482   2878               LDRB     R0,[R5, #+0]
   \   00000484   0028               CMP      R0,#+0
   \   00000486   0AD1               BNE      ??TextChange_Evant_42
   \   00000488   0D48               LDR      R0,??TextChange_Evant_33+0x1C  ;; 0xfffff430
   \   0000048A   8021               MOVS     R1,#+128
   \   0000048C   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000048E   0160               STR      R1,[R0, #+0]
   \   00000490   0C4A               LDR      R2,??TextChange_Evant_33+0x20  ;; ButtonBipCounter
   \   00000492   0D48               LDR      R0,??TextChange_Evant_33+0x24  ;; g_counter
   \   00000494   03C8               LDM      R0!,{R0,R1}
   \   00000496   0023               MOVS     R3,#+0
   \   00000498   C830               ADDS     R0,R0,#+200
   \   0000049A   5941               ADCS     R1,R1,R3
   \   0000049C   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_42:
   \   0000049E   0020               MOVS     R0,#+0
   \   000004A0   36E7               B        ??TextChange_Evant_35
   \   000004A2   C046               Nop      
   \                     ??TextChange_Evant_33:
   \   000004A4   ........           DC32     `?<Constant {0, 0}>`
   \   000004A8   ........           DC32     TextToChangeLength
   \   000004AC   ........           DC32     X_down
   \   000004B0   ........           DC32     Y_down
   \   000004B4   ........           DC32     X_up
   \   000004B8   ........           DC32     Y_up
   \   000004BC   E9D71300           DC32     0x13d7e9
   \   000004C0   30F4FFFF           DC32     0xfffff430
   \   000004C4   ........           DC32     ButtonBipCounter
   \   000004C8   ........           DC32     g_counter
   5950          
   5951          
   5952          
   5953          
   5954          
   5955          

   \                                 In section Debug.txt, align 4, keep-with-next
   5956          void AnalogGraph_Paint(_Analog *Anal)
   5957                {  
   \                     AnalogGraph_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   7EA0               ADR      R0,??AnalogGraph_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   7B48               LDR      R0,??AnalogGraph_Paint_0+0x4  ;; `?<Constant {0, 0}>` + 124
   5958                  
   5959                  List_Paint("Analog ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   5960                  char txt[8];
   5961                  
   5962                  Button("<>",24,96,15,11);
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0B20               MOVS     R0,#+11
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   0F23               MOVS     R3,#+15
   \   0000002E   6022               MOVS     R2,#+96
   \   00000030   1821               MOVS     R1,#+24
   \   00000032   77A0               ADR      R0,??AnalogGraph_Paint_0+0x8  ;; 0x3C, 0x3E, 0x00, 0x00
   \   00000034   ........           BL       Button
   \   00000038   02B0               ADD      SP,SP,#+8
   5963                  
   5964                  char Tp=0;
   \   0000003A   0024               MOVS     R4,#+0
   \   0000003C   2500               MOVS     R5,R4
   5965                  char Tb=4;
   \   0000003E   6846               MOV      R0,SP
   \   00000040   0421               MOVS     R1,#+4
   \   00000042   0175               STRB     R1,[R0, #+20]
   5966                  char Tk=0;
   \   00000044   0494               STR      R4,[SP, #+16]
   5967                  char Ap=32;
   \   00000046   2020               MOVS     R0,#+32
   \   00000048   0600               MOVS     R6,R0
   5968                  char Ab=32;
   \   0000004A   0090               STR      R0,[SP, #+0]
   5969                  char Ak=32;
   \   0000004C   0390               STR      R0,[SP, #+12]
   5970                  
   5971                  if (Anal->Flip)
   \   0000004E   0699               LDR      R1,[SP, #+24]
   \   00000050   8979               LDRB     R1,[R1, #+6]
   \   00000052   0029               CMP      R1,#+0
   \   00000054   0AD0               BEQ      ??AnalogGraph_Paint_1
   5972                  {
   5973                     Tp=32;
   \   00000056   0500               MOVS     R5,R0
   5974                     Tb=33;
   \   00000058   6846               MOV      R0,SP
   \   0000005A   2121               MOVS     R1,#+33
   \   0000005C   0175               STRB     R1,[R0, #+20]
   5975                     Tk=29;
   \   0000005E   1D20               MOVS     R0,#+29
   \   00000060   0490               STR      R0,[SP, #+16]
   5976                     Ap=0;
   \   00000062   2600               MOVS     R6,R4
   5977                     Ab=1;
   \   00000064   0120               MOVS     R0,#+1
   \   00000066   0090               STR      R0,[SP, #+0]
   5978                     Ak=6;
   \   00000068   0620               MOVS     R0,#+6
   \   0000006A   0390               STR      R0,[SP, #+12]
   5979                  }
   5980                  
   5981                  V_line(31,10,85,1); 
   \                     ??AnalogGraph_Paint_1:
   \   0000006C   0123               MOVS     R3,#+1
   \   0000006E   5522               MOVS     R2,#+85
   \   00000070   0A21               MOVS     R1,#+10
   \   00000072   1F20               MOVS     R0,#+31
   \   00000074   ........           BL       V_line
   5982                  
   5983                  Label("Text "  ,2,Tp+2 ,86,4,27,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   1B21               MOVS     R1,#+27
   \   00000086   0420               MOVS     R0,#+4
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   5623               MOVS     R3,#+86
   \   0000008C   AD1C               ADDS     R5,R5,#+2
   \   0000008E   2A00               MOVS     R2,R5
   \   00000090   1206               LSLS     R2,R2,#+24
   \   00000092   120E               LSRS     R2,R2,#+24
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   D148               LDR      R0,??AnalogGraph_Paint_2  ;; `?<Constant {0, 0}>` + 116
   \   00000098   ........           BL       Label
   \   0000009C   06B0               ADD      SP,SP,#+24
   5984                  Label("Analog",2,Ap+1,86,7,27,1,127,0); 
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   2000               MOVS     R0,R4
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   7F21               MOVS     R1,#+127
   \   000000A6   0120               MOVS     R0,#+1
   \   000000A8   03B4               PUSH     {R0,R1}
   \   000000AA   1B21               MOVS     R1,#+27
   \   000000AC   0720               MOVS     R0,#+7
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   5623               MOVS     R3,#+86
   \   000000B2   761C               ADDS     R6,R6,#+1
   \   000000B4   3200               MOVS     R2,R6
   \   000000B6   1206               LSLS     R2,R2,#+24
   \   000000B8   120E               LSRS     R2,R2,#+24
   \   000000BA   0221               MOVS     R1,#+2
   \   000000BC   C848               LDR      R0,??AnalogGraph_Paint_2+0x4  ;; `?<Constant {0, 0}>` + 132
   \   000000BE   ........           BL       Label
   \   000000C2   06B0               ADD      SP,SP,#+24
   5985                  
   5986                  char LastChar=0;
   \   000000C4   2500               MOVS     R5,R4
   5987                  char SumOfPixel=1;
   \   000000C6   0126               MOVS     R6,#+1
   5988                  for (char i=0; i<3; i++) if ((Anal->Text[i]>=30) && (Anal->Text[i]!=' ')) 
   \   000000C8   2000               MOVS     R0,R4
   \   000000CA   17E0               B        ??AnalogGraph_Paint_3
   \                     ??AnalogGraph_Paint_4:
   \   000000CC   069A               LDR      R2,[SP, #+24]
   \   000000CE   5118               ADDS     R1,R2,R1
   \   000000D0   4A78               LDRB     R2,[R1, #+1]
   \   000000D2   1E2A               CMP      R2,#+30
   \   000000D4   0FD3               BCC      ??AnalogGraph_Paint_5
   \   000000D6   202A               CMP      R2,#+32
   \   000000D8   0DD0               BEQ      ??AnalogGraph_Paint_5
   5989                  {
   5990                    LastChar=i+1;
   \   000000DA   0500               MOVS     R5,R0
   \   000000DC   6D1C               ADDS     R5,R5,#+1
   \   000000DE   2D06               LSLS     R5,R5,#+24
   \   000000E0   2D0E               LSRS     R5,R5,#+24
   5991                    SumOfPixel+= Arial_7[Anal->Text[i]-30][0]; 
   \   000000E2   C04A               LDR      R2,??AnalogGraph_Paint_2+0x8  ;; 0xfffffed4
   \   000000E4   4978               LDRB     R1,[R1, #+1]
   \   000000E6   0A23               MOVS     R3,#+10
   \   000000E8   5943               MULS     R1,R3,R1
   \   000000EA   BF4B               LDR      R3,??AnalogGraph_Paint_2+0xC  ;; Arial_7
   \   000000EC   5918               ADDS     R1,R3,R1
   \   000000EE   895C               LDRB     R1,[R1, R2]
   \   000000F0   7618               ADDS     R6,R6,R1
   \   000000F2   3606               LSLS     R6,R6,#+24
   \   000000F4   360E               LSRS     R6,R6,#+24
   5992                  }
   \                     ??AnalogGraph_Paint_5:
   \   000000F6   401C               ADDS     R0,R0,#+1
   \   000000F8   0006               LSLS     R0,R0,#+24
   \   000000FA   000E               LSRS     R0,R0,#+24
   \                     ??AnalogGraph_Paint_3:
   \   000000FC   0100               MOVS     R1,R0
   \   000000FE   0329               CMP      R1,#+3
   \   00000100   E4D3               BCC      ??AnalogGraph_Paint_4
   5993                  
   5994                  
   5995                  H_line(Tk+3,70,27,2); 
   \   00000102   049F               LDR      R7,[SP, #+16]
   \   00000104   FF1C               ADDS     R7,R7,#+3
   \   00000106   0223               MOVS     R3,#+2
   \   00000108   1B22               MOVS     R2,#+27
   \   0000010A   4621               MOVS     R1,#+70
   \   0000010C   3800               MOVS     R0,R7
   \   0000010E   0006               LSLS     R0,R0,#+24
   \   00000110   000E               LSRS     R0,R0,#+24
   \   00000112   ........           BL       H_line
   5996                  H_line(Tk+3,80,27,2); 
   \   00000116   0223               MOVS     R3,#+2
   \   00000118   1B22               MOVS     R2,#+27
   \   0000011A   5021               MOVS     R1,#+80
   \   0000011C   3800               MOVS     R0,R7
   \   0000011E   0006               LSLS     R0,R0,#+24
   \   00000120   000E               LSRS     R0,R0,#+24
   \   00000122   ........           BL       H_line
   5997                  for (char i=0; i<=3; i++) V_line((Tk+30)-9*i,70,10,2);  
   \   00000126   2700               MOVS     R7,R4
   \   00000128   16E0               B        ??AnalogGraph_Paint_6
   \                     ??AnalogGraph_Paint_7:
   \   0000012A   0223               MOVS     R3,#+2
   \   0000012C   0A22               MOVS     R2,#+10
   \   0000012E   4621               MOVS     R1,#+70
   \   00000130   02B5               PUSH     {R1,LR}
   \   00000132   0698               LDR      R0,[SP, #+24]
   \   00000134   0006               LSLS     R0,R0,#+24
   \   00000136   000E               LSRS     R0,R0,#+24
   \   00000138   1E30               ADDS     R0,R0,#+30
   \   0000013A   8446               MOV      R12,R0
   \   0000013C   3900               MOVS     R1,R7
   \   0000013E   0920               MOVS     R0,#+9
   \   00000140   4143               MULS     R1,R0,R1
   \   00000142   6046               MOV      R0,R12
   \   00000144   401A               SUBS     R0,R0,R1
   \   00000146   0099               LDR      R1,[SP, #0]
   \   00000148   02B0               ADD      SP,SP,#+8
   \   0000014A   0006               LSLS     R0,R0,#+24
   \   0000014C   000E               LSRS     R0,R0,#+24
   \   0000014E   ........           BL       V_line
   \   00000152   7F1C               ADDS     R7,R7,#+1
   \   00000154   3F06               LSLS     R7,R7,#+24
   \   00000156   3F0E               LSRS     R7,R7,#+24
   \                     ??AnalogGraph_Paint_6:
   \   00000158   3800               MOVS     R0,R7
   \   0000015A   0428               CMP      R0,#+4
   \   0000015C   E5D3               BCC      ??AnalogGraph_Paint_7
   5998                  for (char i=0; i<LastChar; i++) Label(&Anal->Text[i],2,(Tk+30)-((LastChar-i)*9),71,1,8,1,127,1); 
   \   0000015E   2700               MOVS     R7,R4
   \   00000160   1EE0               B        ??AnalogGraph_Paint_8
   \                     ??AnalogGraph_Paint_9:
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0120               MOVS     R0,#+1
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   7F21               MOVS     R1,#+127
   \   0000016A   03B4               PUSH     {R0,R1}
   \   0000016C   0821               MOVS     R1,#+8
   \   0000016E   03B4               PUSH     {R0,R1}
   \   00000170   4723               MOVS     R3,#+71
   \   00000172   0A98               LDR      R0,[SP, #+40]
   \   00000174   3900               MOVS     R1,R7
   \   00000176   2A00               MOVS     R2,R5
   \   00000178   891A               SUBS     R1,R1,R2
   \   0000017A   0922               MOVS     R2,#+9
   \   0000017C   5143               MULS     R1,R2,R1
   \   0000017E   4218               ADDS     R2,R0,R1
   \   00000180   1E32               ADDS     R2,R2,#+30
   \   00000182   1206               LSLS     R2,R2,#+24
   \   00000184   120E               LSRS     R2,R2,#+24
   \   00000186   0221               MOVS     R1,#+2
   \   00000188   8C46               MOV      R12,R1
   \   0000018A   3900               MOVS     R1,R7
   \   0000018C   0C98               LDR      R0,[SP, #+48]
   \   0000018E   4018               ADDS     R0,R0,R1
   \   00000190   401C               ADDS     R0,R0,#+1
   \   00000192   6146               MOV      R1,R12
   \   00000194   ........           BL       Label
   \   00000198   06B0               ADD      SP,SP,#+24
   \   0000019A   7F1C               ADDS     R7,R7,#+1
   \   0000019C   3F06               LSLS     R7,R7,#+24
   \   0000019E   3F0E               LSRS     R7,R7,#+24
   \                     ??AnalogGraph_Paint_8:
   \   000001A0   3800               MOVS     R0,R7
   \   000001A2   2900               MOVS     R1,R5
   \   000001A4   8842               CMP      R0,R1
   \   000001A6   DCD3               BCC      ??AnalogGraph_Paint_9
   5999          
   6000                  H_line(Ak,70,4*6,2); 
   \   000001A8   0223               MOVS     R3,#+2
   \   000001AA   1822               MOVS     R2,#+24
   \   000001AC   4621               MOVS     R1,#+70
   \   000001AE   0398               LDR      R0,[SP, #+12]
   \   000001B0   0006               LSLS     R0,R0,#+24
   \   000001B2   000E               LSRS     R0,R0,#+24
   \   000001B4   ........           BL       H_line
   6001                  H_line(Ak,80,4*6,2); 
   \   000001B8   0223               MOVS     R3,#+2
   \   000001BA   1822               MOVS     R2,#+24
   \   000001BC   5021               MOVS     R1,#+80
   \   000001BE   0398               LDR      R0,[SP, #+12]
   \   000001C0   0006               LSLS     R0,R0,#+24
   \   000001C2   000E               LSRS     R0,R0,#+24
   \   000001C4   ........           BL       H_line
   6002                  for (char i=0; i<=6; i++) V_line(Ak+4*i,70,11,2); 
   \   000001C8   2500               MOVS     R5,R4
   \   000001CA   0EE0               B        ??AnalogGraph_Paint_10
   \                     ??AnalogGraph_Paint_11:
   \   000001CC   0223               MOVS     R3,#+2
   \   000001CE   0B22               MOVS     R2,#+11
   \   000001D0   4621               MOVS     R1,#+70
   \   000001D2   0398               LDR      R0,[SP, #+12]
   \   000001D4   0006               LSLS     R0,R0,#+24
   \   000001D6   000E               LSRS     R0,R0,#+24
   \   000001D8   AF00               LSLS     R7,R5,#+2
   \   000001DA   C019               ADDS     R0,R0,R7
   \   000001DC   0006               LSLS     R0,R0,#+24
   \   000001DE   000E               LSRS     R0,R0,#+24
   \   000001E0   ........           BL       V_line
   \   000001E4   6D1C               ADDS     R5,R5,#+1
   \   000001E6   2D06               LSLS     R5,R5,#+24
   \   000001E8   2D0E               LSRS     R5,R5,#+24
   \                     ??AnalogGraph_Paint_10:
   \   000001EA   2800               MOVS     R0,R5
   \   000001EC   0728               CMP      R0,#+7
   \   000001EE   EDD3               BCC      ??AnalogGraph_Paint_11
   6003                  
   6004                  
   6005                  char LastPixel=29-SumOfPixel;
   6006                  char MaxCharTmp=LastPixel/4;
   \   000001F0   1D20               MOVS     R0,#+29
   \   000001F2   801B               SUBS     R0,R0,R6
   \   000001F4   0500               MOVS     R5,R0
   \   000001F6   2D06               LSLS     R5,R5,#+24
   \   000001F8   2D0E               LSRS     R5,R5,#+24
   \   000001FA   AD08               LSRS     R5,R5,#+2
   6007                  if (MaxCharTmp>6) MaxCharTmp=6;
   \   000001FC   2800               MOVS     R0,R5
   \   000001FE   0728               CMP      R0,#+7
   \   00000200   00D3               BCC      ??AnalogGraph_Paint_12
   \   00000202   0625               MOVS     R5,#+6
   6008                  for (char i=0; i<MaxCharTmp; i++)
   \                     ??AnalogGraph_Paint_12:
   \   00000204   2600               MOVS     R6,R4
   \   00000206   27E0               B        ??AnalogGraph_Paint_13
   \                     ??AnalogGraph_Paint_0:
   \   00000208   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000020C   ........           DC32     `?<Constant {0, 0}>` + 124
   \   00000210   3C3E0000           DC8      0x3C, 0x3E, 0x00, 0x00
   6009                  {
   6010                    V_line(Ak+4*i+1,71,9,1); 
   \                     ??AnalogGraph_Paint_14:
   \   00000214   0398               LDR      R0,[SP, #+12]
   \   00000216   3100               MOVS     R1,R6
   \   00000218   8900               LSLS     R1,R1,#+2
   \   0000021A   4718               ADDS     R7,R0,R1
   \   0000021C   0123               MOVS     R3,#+1
   \   0000021E   0922               MOVS     R2,#+9
   \   00000220   4721               MOVS     R1,#+71
   \   00000222   3800               MOVS     R0,R7
   \   00000224   401C               ADDS     R0,R0,#+1
   \   00000226   0006               LSLS     R0,R0,#+24
   \   00000228   000E               LSRS     R0,R0,#+24
   \   0000022A   ........           BL       V_line
   6011                    V_line(Ak+4*i+2,71,9,1); 
   \   0000022E   0123               MOVS     R3,#+1
   \   00000230   0922               MOVS     R2,#+9
   \   00000232   4721               MOVS     R1,#+71
   \   00000234   3800               MOVS     R0,R7
   \   00000236   801C               ADDS     R0,R0,#+2
   \   00000238   0006               LSLS     R0,R0,#+24
   \   0000023A   000E               LSRS     R0,R0,#+24
   \   0000023C   ........           BL       V_line
   6012                    V_line(Ak+4*i+3,71,9,1); 
   \   00000240   0123               MOVS     R3,#+1
   \   00000242   0922               MOVS     R2,#+9
   \   00000244   4721               MOVS     R1,#+71
   \   00000246   FF1C               ADDS     R7,R7,#+3
   \   00000248   3800               MOVS     R0,R7
   \   0000024A   0006               LSLS     R0,R0,#+24
   \   0000024C   000E               LSRS     R0,R0,#+24
   \   0000024E   ........           BL       V_line
   6013                  }
   \   00000252   761C               ADDS     R6,R6,#+1
   \   00000254   3606               LSLS     R6,R6,#+24
   \   00000256   360E               LSRS     R6,R6,#+24
   \                     ??AnalogGraph_Paint_13:
   \   00000258   3000               MOVS     R0,R6
   \   0000025A   2900               MOVS     R1,R5
   \   0000025C   8842               CMP      R0,R1
   \   0000025E   D9D3               BCC      ??AnalogGraph_Paint_14
   6014                  
   6015                   Button("Text",Tb,50,26,15);
   \   00000260   82B0               SUB      SP,SP,#+8
   \   00000262   0F20               MOVS     R0,#+15
   \   00000264   0090               STR      R0,[SP, #+0]
   \   00000266   1A23               MOVS     R3,#+26
   \   00000268   3222               MOVS     R2,#+50
   \   0000026A   02A8               ADD      R0,SP,#+8
   \   0000026C   017D               LDRB     R1,[R0, #+20]
   \   0000026E   5F48               LDR      R0,??AnalogGraph_Paint_2+0x10  ;; `?<Constant {0, 0}>` + 84
   \   00000270   ........           BL       Button
   \   00000274   02B0               ADD      SP,SP,#+8
   6016                  
   6017                  
   6018                  txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=0;
   \   00000276   01AD               ADD      R5,SP,#+4
   \   00000278   4920               MOVS     R0,#+73
   \   0000027A   2870               STRB     R0,[R5, #+0]
   \   0000027C   6420               MOVS     R0,#+100
   \   0000027E   6870               STRB     R0,[R5, #+1]
   \   00000280   3A20               MOVS     R0,#+58
   \   00000282   A870               STRB     R0,[R5, #+2]
   \   00000284   2000               MOVS     R0,R4
   \   00000286   E870               STRB     R0,[R5, #+3]
   6019                    Label(txt,0,Ab+4, 53 ,3,10,1,127,0); 
   \   00000288   82B0               SUB      SP,SP,#+8
   \   0000028A   0090               STR      R0,[SP, #+0]
   \   0000028C   7F21               MOVS     R1,#+127
   \   0000028E   0120               MOVS     R0,#+1
   \   00000290   03B4               PUSH     {R0,R1}
   \   00000292   0A21               MOVS     R1,#+10
   \   00000294   0320               MOVS     R0,#+3
   \   00000296   03B4               PUSH     {R0,R1}
   \   00000298   3523               MOVS     R3,#+53
   \   0000029A   069A               LDR      R2,[SP, #+24]
   \   0000029C   121D               ADDS     R2,R2,#+4
   \   0000029E   1206               LSLS     R2,R2,#+24
   \   000002A0   120E               LSRS     R2,R2,#+24
   \   000002A2   2100               MOVS     R1,R4
   \   000002A4   07A8               ADD      R0,SP,#+28
   \   000002A6   ........           BL       Label
   \   000002AA   06B0               ADD      SP,SP,#+24
   6020                    txt[1]=0;txt[2]=0;
   \   000002AC   2000               MOVS     R0,R4
   \   000002AE   6870               STRB     R0,[R5, #+1]
   \   000002B0   A870               STRB     R0,[R5, #+2]
   6021                    char ind=CharToStr(Anal->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000002B2   0222               MOVS     R2,#+2
   \   000002B4   01A9               ADD      R1,SP,#+4
   \   000002B6   0698               LDR      R0,[SP, #+24]
   \   000002B8   0079               LDRB     R0,[R0, #+4]
   \   000002BA   ........           BL       CharToStr
   \   000002BE   0200               MOVS     R2,R0
   6022                    Label(txt,0,Ab+19, 53 ,ind,8,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002C0   82B0               SUB      SP,SP,#+8
   \   000002C2   2000               MOVS     R0,R4
   \   000002C4   0090               STR      R0,[SP, #+0]
   \   000002C6   7F21               MOVS     R1,#+127
   \   000002C8   0120               MOVS     R0,#+1
   \   000002CA   03B4               PUSH     {R0,R1}
   \   000002CC   0821               MOVS     R1,#+8
   \   000002CE   1000               MOVS     R0,R2
   \   000002D0   03B4               PUSH     {R0,R1}
   \   000002D2   3523               MOVS     R3,#+53
   \   000002D4   069A               LDR      R2,[SP, #+24]
   \   000002D6   1332               ADDS     R2,R2,#+19
   \   000002D8   1206               LSLS     R2,R2,#+24
   \   000002DA   120E               LSRS     R2,R2,#+24
   \   000002DC   2100               MOVS     R1,R4
   \   000002DE   07A8               ADD      R0,SP,#+28
   \   000002E0   ........           BL       Label
   \   000002E4   06B0               ADD      SP,SP,#+24
   \   000002E6   3C20               MOVS     R0,#+60
   \   000002E8   2870               STRB     R0,[R5, #+0]
   6023                                
   6024                    txt[0]='<';txt[1]=0;
   \   000002EA   2000               MOVS     R0,R4
   \   000002EC   6870               STRB     R0,[R5, #+1]
   6025                    Button(txt,Ab+1,35,13,15); 
   \   000002EE   009E               LDR      R6,[SP, #+0]
   \   000002F0   761C               ADDS     R6,R6,#+1
   \   000002F2   82B0               SUB      SP,SP,#+8
   \   000002F4   0F20               MOVS     R0,#+15
   \   000002F6   0090               STR      R0,[SP, #+0]
   \   000002F8   0D23               MOVS     R3,#+13
   \   000002FA   2322               MOVS     R2,#+35
   \   000002FC   3100               MOVS     R1,R6
   \   000002FE   0906               LSLS     R1,R1,#+24
   \   00000300   090E               LSRS     R1,R1,#+24
   \   00000302   03A8               ADD      R0,SP,#+12
   \   00000304   ........           BL       Button
   \   00000308   02B0               ADD      SP,SP,#+8
   \   0000030A   3E20               MOVS     R0,#+62
   \   0000030C   2870               STRB     R0,[R5, #+0]
   6026                    txt[0]='>';
   6027                    Button(txt,Ab+16,35,13,15); 
   \   0000030E   009F               LDR      R7,[SP, #+0]
   \   00000310   1037               ADDS     R7,R7,#+16
   \   00000312   82B0               SUB      SP,SP,#+8
   \   00000314   0F20               MOVS     R0,#+15
   \   00000316   0090               STR      R0,[SP, #+0]
   \   00000318   0D23               MOVS     R3,#+13
   \   0000031A   2322               MOVS     R2,#+35
   \   0000031C   3900               MOVS     R1,R7
   \   0000031E   0906               LSLS     R1,R1,#+24
   \   00000320   090E               LSRS     R1,R1,#+24
   \   00000322   03A8               ADD      R0,SP,#+12
   \   00000324   ........           BL       Button
   \   00000328   02B0               ADD      SP,SP,#+8
   6028                    
   6029                    
   6030                    txt[0]='R'; txt[1]='e'; txt[2]='g'; txt[3]=':'; txt[4]=0;
   \   0000032A   5220               MOVS     R0,#+82
   \   0000032C   2870               STRB     R0,[R5, #+0]
   \   0000032E   6520               MOVS     R0,#+101
   \   00000330   6870               STRB     R0,[R5, #+1]
   \   00000332   6720               MOVS     R0,#+103
   \   00000334   A870               STRB     R0,[R5, #+2]
   \   00000336   3A20               MOVS     R0,#+58
   \   00000338   E870               STRB     R0,[R5, #+3]
   \   0000033A   2000               MOVS     R0,R4
   \   0000033C   2871               STRB     R0,[R5, #+4]
   6031                    Label(txt,0,Ab+1, 23 ,4,10,1,127,0); 
   \   0000033E   82B0               SUB      SP,SP,#+8
   \   00000340   0090               STR      R0,[SP, #+0]
   \   00000342   7F21               MOVS     R1,#+127
   \   00000344   0120               MOVS     R0,#+1
   \   00000346   03B4               PUSH     {R0,R1}
   \   00000348   0A21               MOVS     R1,#+10
   \   0000034A   0420               MOVS     R0,#+4
   \   0000034C   03B4               PUSH     {R0,R1}
   \   0000034E   1723               MOVS     R3,#+23
   \   00000350   3200               MOVS     R2,R6
   \   00000352   1206               LSLS     R2,R2,#+24
   \   00000354   120E               LSRS     R2,R2,#+24
   \   00000356   2100               MOVS     R1,R4
   \   00000358   07A8               ADD      R0,SP,#+28
   \   0000035A   ........           BL       Label
   \   0000035E   06B0               ADD      SP,SP,#+24
   6032                    txt[1]=0;txt[2]=0;
   \   00000360   2000               MOVS     R0,R4
   \   00000362   6870               STRB     R0,[R5, #+1]
   \   00000364   A870               STRB     R0,[R5, #+2]
   6033                    
   6034                    ind=CharToStr(Anal->Reg, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000366   0222               MOVS     R2,#+2
   \   00000368   01A9               ADD      R1,SP,#+4
   \   0000036A   0698               LDR      R0,[SP, #+24]
   \   0000036C   4079               LDRB     R0,[R0, #+5]
   \   0000036E   ........           BL       CharToStr
   \   00000372   0200               MOVS     R2,R0
   6035                    Label(txt,0,Ab+21, 23 ,ind,8,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000374   82B0               SUB      SP,SP,#+8
   \   00000376   2000               MOVS     R0,R4
   \   00000378   0090               STR      R0,[SP, #+0]
   \   0000037A   7F21               MOVS     R1,#+127
   \   0000037C   0120               MOVS     R0,#+1
   \   0000037E   03B4               PUSH     {R0,R1}
   \   00000380   0821               MOVS     R1,#+8
   \   00000382   1000               MOVS     R0,R2
   \   00000384   03B4               PUSH     {R0,R1}
   \   00000386   1723               MOVS     R3,#+23
   \   00000388   069A               LDR      R2,[SP, #+24]
   \   0000038A   1532               ADDS     R2,R2,#+21
   \   0000038C   1206               LSLS     R2,R2,#+24
   \   0000038E   120E               LSRS     R2,R2,#+24
   \   00000390   2100               MOVS     R1,R4
   \   00000392   07A8               ADD      R0,SP,#+28
   \   00000394   ........           BL       Label
   \   00000398   06B0               ADD      SP,SP,#+24
   6036                  
   6037                    txt[0]='<';txt[1]=0;
   \   0000039A   3C20               MOVS     R0,#+60
   \   0000039C   2870               STRB     R0,[R5, #+0]
   \   0000039E   6C70               STRB     R4,[R5, #+1]
   6038                    Button(txt,Ab+1,5,13,15); 
   \   000003A0   82B0               SUB      SP,SP,#+8
   \   000003A2   0F20               MOVS     R0,#+15
   \   000003A4   0090               STR      R0,[SP, #+0]
   \   000003A6   0D23               MOVS     R3,#+13
   \   000003A8   0522               MOVS     R2,#+5
   \   000003AA   3100               MOVS     R1,R6
   \   000003AC   0906               LSLS     R1,R1,#+24
   \   000003AE   090E               LSRS     R1,R1,#+24
   \   000003B0   03A8               ADD      R0,SP,#+12
   \   000003B2   ........           BL       Button
   \   000003B6   02B0               ADD      SP,SP,#+8
   6039                    txt[0]='>';
   \   000003B8   3E20               MOVS     R0,#+62
   \   000003BA   2870               STRB     R0,[R5, #+0]
   6040                    Button(txt,Ab+16,5,13,15); 
   \   000003BC   82B0               SUB      SP,SP,#+8
   \   000003BE   0F20               MOVS     R0,#+15
   \   000003C0   0090               STR      R0,[SP, #+0]
   \   000003C2   0D23               MOVS     R3,#+13
   \   000003C4   0522               MOVS     R2,#+5
   \   000003C6   3900               MOVS     R1,R7
   \   000003C8   0906               LSLS     R1,R1,#+24
   \   000003CA   090E               LSRS     R1,R1,#+24
   \   000003CC   03A8               ADD      R0,SP,#+12
   \   000003CE   ........           BL       Button
   \   000003D2   02B0               ADD      SP,SP,#+8
   6041                  
   6042                  
   6043                }
   \   000003D4   07B0               ADD      SP,SP,#+28
   \   000003D6   F0BC               POP      {R4-R7}
   \   000003D8   01BC               POP      {R0}
   \   000003DA   0047               BX       R0               ;; return
   \                     ??AnalogGraph_Paint_2:
   \   000003DC   ........           DC32     `?<Constant {0, 0}>` + 116
   \   000003E0   ........           DC32     `?<Constant {0, 0}>` + 132
   \   000003E4   D4FEFFFF           DC32     0xfffffed4
   \   000003E8   ........           DC32     Arial_7
   \   000003EC   ........           DC32     `?<Constant {0, 0}>` + 84
   6044          

   \                                 In section Debug.txt, align 4, keep-with-next
   6045          void AnalogGraph_Event(_Analog *Anal)
   6046                {  
   \                     AnalogGraph_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0425               MOVS     R5,#+4
   6047                  
   6048                 //List_Paint(Speech[g_leng].ZmAnalog,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   6049                 char txt[8];
   6050                 
   6051          
   6052                  char Tb=4;
   6053                  char Ab=32;
   \   00000006   2026               MOVS     R6,#+32
   6054                  
   6055                  if (Anal->Flip)
   \   00000008   A079               LDRB     R0,[R4, #+6]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D0               BEQ      ??AnalogGraph_Event_0
   6056                  {
   6057                     Tb=33;
   \   0000000E   2125               MOVS     R5,#+33
   6058                     Ab=1;
   \   00000010   0126               MOVS     R6,#+1
   6059                  }
   6060                 
   6061                 
   6062                         //zdarzenie typu down "X"
   6063                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \                     ??AnalogGraph_Event_0:
   \   00000012   9548               LDR      R0,??AnalogGraph_Event_1  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   2F28               CMP      R0,#+47
   \   0000001A   2EDB               BLT      ??AnalogGraph_Event_2
   \   0000001C   3F28               CMP      R0,#+63
   \   0000001E   2CDA               BGE      ??AnalogGraph_Event_2
   \   00000020   9248               LDR      R0,??AnalogGraph_Event_1+0x4  ;; Y_down
   \   00000022   405E               LDRSH    R0,[R0, R1]
   \   00000024   7128               CMP      R0,#+113
   \   00000026   28DB               BLT      ??AnalogGraph_Event_2
   \   00000028   7F28               CMP      R0,#+127
   \   0000002A   26DA               BGE      ??AnalogGraph_Event_2
   6064                  {
   6065                    //MenuPaint();
   6066                    H_line(49,114,10,0);
   \   0000002C   0B00               MOVS     R3,R1
   \   0000002E   0A22               MOVS     R2,#+10
   \   00000030   7221               MOVS     R1,#+114
   \   00000032   3120               MOVS     R0,#+49
   \   00000034   ........           BL       H_line
   6067                    H_line(49,123,10,0); 
   \   00000038   0023               MOVS     R3,#+0
   \   0000003A   0A22               MOVS     R2,#+10
   \   0000003C   7B21               MOVS     R1,#+123
   \   0000003E   3120               MOVS     R0,#+49
   \   00000040   ........           BL       H_line
   6068                    V_line(49,114,10,0); 
   \   00000044   0023               MOVS     R3,#+0
   \   00000046   0A22               MOVS     R2,#+10
   \   00000048   7221               MOVS     R1,#+114
   \   0000004A   3120               MOVS     R0,#+49
   \   0000004C   ........           BL       V_line
   6069                    V_line(58,114,10,0); 
   \   00000050   0023               MOVS     R3,#+0
   \   00000052   0A22               MOVS     R2,#+10
   \   00000054   7221               MOVS     R1,#+114
   \   00000056   3A20               MOVS     R0,#+58
   \   00000058   ........           BL       V_line
   6070                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000005C   8448               LDR      R0,??AnalogGraph_Event_1+0x8  ;; 0x13d7e9
   \   0000005E   0078               LDRB     R0,[R0, #+0]
   \   00000060   0028               CMP      R0,#+0
   \   00000062   0AD1               BNE      ??AnalogGraph_Event_2
   \   00000064   8348               LDR      R0,??AnalogGraph_Event_1+0xC  ;; 0xfffff430
   \   00000066   8021               MOVS     R1,#+128
   \   00000068   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000006A   0160               STR      R1,[R0, #+0]
   \   0000006C   824A               LDR      R2,??AnalogGraph_Event_1+0x10  ;; ButtonBipCounter
   \   0000006E   8348               LDR      R0,??AnalogGraph_Event_1+0x14  ;; g_counter
   \   00000070   03C8               LDM      R0!,{R0,R1}
   \   00000072   0023               MOVS     R3,#+0
   \   00000074   0830               ADDS     R0,R0,#+8
   \   00000076   5941               ADCS     R1,R1,R3
   \   00000078   03C2               STM      R2!,{R0,R1}
   6071                    
   6072                  }
   6073            
   6074                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??AnalogGraph_Event_2:
   \   0000007A   8148               LDR      R0,??AnalogGraph_Event_1+0x18  ;; X_up
   \   0000007C   0021               MOVS     R1,#+0
   \   0000007E   405E               LDRSH    R0,[R0, R1]
   \   00000080   2F28               CMP      R0,#+47
   \   00000082   1FDB               BLT      ??AnalogGraph_Event_3
   \   00000084   3F28               CMP      R0,#+63
   \   00000086   1DDA               BGE      ??AnalogGraph_Event_3
   \   00000088   7E48               LDR      R0,??AnalogGraph_Event_1+0x1C  ;; Y_up
   \   0000008A   405E               LDRSH    R0,[R0, R1]
   \   0000008C   7128               CMP      R0,#+113
   \   0000008E   19DB               BLT      ??AnalogGraph_Event_3
   \   00000090   7F28               CMP      R0,#+127
   \   00000092   17DA               BGE      ??AnalogGraph_Event_3
   6075                  {
   6076                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000094   7648               LDR      R0,??AnalogGraph_Event_1+0x8  ;; 0x13d7e9
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   0AD1               BNE      ??AnalogGraph_Event_4
   \   0000009C   7548               LDR      R0,??AnalogGraph_Event_1+0xC  ;; 0xfffff430
   \   0000009E   8021               MOVS     R1,#+128
   \   000000A0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000A2   0160               STR      R1,[R0, #+0]
   \   000000A4   744A               LDR      R2,??AnalogGraph_Event_1+0x10  ;; ButtonBipCounter
   \   000000A6   7548               LDR      R0,??AnalogGraph_Event_1+0x14  ;; g_counter
   \   000000A8   03C8               LDM      R0!,{R0,R1}
   \   000000AA   0023               MOVS     R3,#+0
   \   000000AC   0830               ADDS     R0,R0,#+8
   \   000000AE   5941               ADCS     R1,R1,R3
   \   000000B0   03C2               STM      R2!,{R0,R1}
   6077                    MenuLevel=(MenuLevel/10);
   \                     ??AnalogGraph_Event_4:
   \   000000B2   754D               LDR      R5,??AnalogGraph_Event_1+0x20  ;; TextToChangeLength
   \   000000B4   286D               LDR      R0,[R5, #+80]
   \   000000B6   0A21               MOVS     R1,#+10
   \   000000B8   ........           BL       __aeabi_idivmod
   \   000000BC   2865               STR      R0,[R5, #+80]
   6078                    MenuPaint();
   \   000000BE   ........           BL       MenuPaint
   \   000000C2   CDE0               B        ??AnalogGraph_Event_5
   6079                  }  
   \                     ??AnalogGraph_Event_3:
   \   000000C4   0F00               MOVS     R7,R1
   6080                  else
   6081                  {
   6082                    
   6083                    char ButtonDownNr=0;
   6084                    
   6085                    
   6086                    if (Button("Text",Tb,50,26,15)==1) ButtonDownNr=1;
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   0F20               MOVS     R0,#+15
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   1A23               MOVS     R3,#+26
   \   000000CE   3222               MOVS     R2,#+50
   \   000000D0   2900               MOVS     R1,R5
   \   000000D2   6E48               LDR      R0,??AnalogGraph_Event_1+0x24  ;; `?<Constant {0, 0}>` + 84
   \   000000D4   ........           BL       Button
   \   000000D8   02B0               ADD      SP,SP,#+8
   \   000000DA   0128               CMP      R0,#+1
   \   000000DC   00D1               BNE      ??AnalogGraph_Event_6
   \   000000DE   0127               MOVS     R7,#+1
   \                     ??AnalogGraph_Event_6:
   \   000000E0   01AD               ADD      R5,SP,#+4
   \   000000E2   3E20               MOVS     R0,#+62
   \   000000E4   2870               STRB     R0,[R5, #+0]
   6087                    txt[0]='>'; txt[1]=0; 
   \   000000E6   0020               MOVS     R0,#+0
   \   000000E8   6870               STRB     R0,[R5, #+1]
   6088                    if (Button(txt,Ab+16,35,13,15)==1) ButtonDownNr=2;
   \   000000EA   6846               MOV      R0,SP
   \   000000EC   3100               MOVS     R1,R6
   \   000000EE   1031               ADDS     R1,R1,#+16
   \   000000F0   0170               STRB     R1,[R0, #+0]
   \   000000F2   82B0               SUB      SP,SP,#+8
   \   000000F4   0F20               MOVS     R0,#+15
   \   000000F6   0090               STR      R0,[SP, #+0]
   \   000000F8   0D23               MOVS     R3,#+13
   \   000000FA   2322               MOVS     R2,#+35
   \   000000FC   02A8               ADD      R0,SP,#+8
   \   000000FE   0178               LDRB     R1,[R0, #+0]
   \   00000100   03A8               ADD      R0,SP,#+12
   \   00000102   ........           BL       Button
   \   00000106   02B0               ADD      SP,SP,#+8
   \   00000108   0128               CMP      R0,#+1
   \   0000010A   00D1               BNE      ??AnalogGraph_Event_7
   \   0000010C   0227               MOVS     R7,#+2
   \                     ??AnalogGraph_Event_7:
   \   0000010E   3C20               MOVS     R0,#+60
   \   00000110   2870               STRB     R0,[R5, #+0]
   6089                    txt[0]='<';txt[1]=0;
   \   00000112   0020               MOVS     R0,#+0
   \   00000114   6870               STRB     R0,[R5, #+1]
   6090                    if (Button(txt,Ab+1,35,13,15)==1) ButtonDownNr=3;
   \   00000116   761C               ADDS     R6,R6,#+1
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   0F20               MOVS     R0,#+15
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   0D23               MOVS     R3,#+13
   \   00000120   2322               MOVS     R2,#+35
   \   00000122   3100               MOVS     R1,R6
   \   00000124   0906               LSLS     R1,R1,#+24
   \   00000126   090E               LSRS     R1,R1,#+24
   \   00000128   03A8               ADD      R0,SP,#+12
   \   0000012A   ........           BL       Button
   \   0000012E   02B0               ADD      SP,SP,#+8
   \   00000130   0128               CMP      R0,#+1
   \   00000132   00D1               BNE      ??AnalogGraph_Event_8
   \   00000134   0327               MOVS     R7,#+3
   6091                    txt[0]='>'; txt[1]=0; 
   \                     ??AnalogGraph_Event_8:
   \   00000136   3E20               MOVS     R0,#+62
   \   00000138   2870               STRB     R0,[R5, #+0]
   \   0000013A   0020               MOVS     R0,#+0
   \   0000013C   6870               STRB     R0,[R5, #+1]
   6092                    if (Button(txt,Ab+16,5,13,15)==1) ButtonDownNr=4;
   \   0000013E   82B0               SUB      SP,SP,#+8
   \   00000140   0F20               MOVS     R0,#+15
   \   00000142   0090               STR      R0,[SP, #+0]
   \   00000144   0D23               MOVS     R3,#+13
   \   00000146   0522               MOVS     R2,#+5
   \   00000148   02A8               ADD      R0,SP,#+8
   \   0000014A   0178               LDRB     R1,[R0, #+0]
   \   0000014C   03A8               ADD      R0,SP,#+12
   \   0000014E   ........           BL       Button
   \   00000152   02B0               ADD      SP,SP,#+8
   \   00000154   0128               CMP      R0,#+1
   \   00000156   00D1               BNE      ??AnalogGraph_Event_9
   \   00000158   0427               MOVS     R7,#+4
   6093                    txt[0]='<';txt[1]=0;
   \                     ??AnalogGraph_Event_9:
   \   0000015A   3C20               MOVS     R0,#+60
   \   0000015C   2870               STRB     R0,[R5, #+0]
   \   0000015E   0020               MOVS     R0,#+0
   \   00000160   6870               STRB     R0,[R5, #+1]
   6094                    if (Button(txt,Ab+1,5,13,15)==1) ButtonDownNr=5;
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0F20               MOVS     R0,#+15
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   0D23               MOVS     R3,#+13
   \   0000016A   0522               MOVS     R2,#+5
   \   0000016C   3100               MOVS     R1,R6
   \   0000016E   0906               LSLS     R1,R1,#+24
   \   00000170   090E               LSRS     R1,R1,#+24
   \   00000172   03A8               ADD      R0,SP,#+12
   \   00000174   ........           BL       Button
   \   00000178   02B0               ADD      SP,SP,#+8
   \   0000017A   0128               CMP      R0,#+1
   \   0000017C   00D1               BNE      ??AnalogGraph_Event_10
   \   0000017E   0527               MOVS     R7,#+5
   6095                    if (Button ("<>",24,96,15,11)==1) ButtonDownNr=6;
   \                     ??AnalogGraph_Event_10:
   \   00000180   82B0               SUB      SP,SP,#+8
   \   00000182   0B20               MOVS     R0,#+11
   \   00000184   0090               STR      R0,[SP, #+0]
   \   00000186   0F23               MOVS     R3,#+15
   \   00000188   6022               MOVS     R2,#+96
   \   0000018A   1821               MOVS     R1,#+24
   \   0000018C   40A0               ADR      R0,??AnalogGraph_Event_1+0x28  ;; 0x3C, 0x3E, 0x00, 0x00
   \   0000018E   ........           BL       Button
   \   00000192   02B0               ADD      SP,SP,#+8
   \   00000194   0128               CMP      R0,#+1
   \   00000196   00D1               BNE      ??AnalogGraph_Event_11
   \   00000198   0627               MOVS     R7,#+6
   6096                    
   6097                    if (ButtonDownNr==1)
   \                     ??AnalogGraph_Event_11:
   \   0000019A   012F               CMP      R7,#+1
   \   0000019C   0ED1               BNE      ??AnalogGraph_Event_12
   6098                    {
   6099          
   6100                      ProgramChange=1;
   \   0000019E   3A4D               LDR      R5,??AnalogGraph_Event_1+0x20  ;; TextToChangeLength
   \   000001A0   0120               MOVS     R0,#+1
   \   000001A2   2872               STRB     R0,[R5, #+8]
   6101                      TextToChangeLength=3;
   \   000001A4   0320               MOVS     R0,#+3
   \   000001A6   2870               STRB     R0,[R5, #+0]
   6102                      TextToChange=Anal->Text;
   \   000001A8   2000               MOVS     R0,R4
   \   000001AA   401C               ADDS     R0,R0,#+1
   \   000001AC   A865               STR      R0,[R5, #+88]
   6103                      MenuLevel=(MenuLevel*10+1); 
   \   000001AE   286D               LDR      R0,[R5, #+80]
   \   000001B0   0A21               MOVS     R1,#+10
   \   000001B2   4843               MULS     R0,R1,R0
   \   000001B4   401C               ADDS     R0,R0,#+1
   \   000001B6   2865               STR      R0,[R5, #+80]
   6104                      MenuPaint(); 
   \   000001B8   ........           BL       MenuPaint
   6105                    }
   6106                    
   6107                    
   6108                    if (ButtonDownNr==2) 
   \                     ??AnalogGraph_Event_12:
   \   000001BC   022F               CMP      R7,#+2
   \   000001BE   10D1               BNE      ??AnalogGraph_Event_13
   6109                    {
   6110                      
   6111                        ProgramChange=1;
   \   000001C0   3448               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   000001C2   0121               MOVS     R1,#+1
   \   000001C4   0170               STRB     R1,[R0, #+0]
   6112                        if (Anal->Nr+1<NumberNeurons) {Anal->Nr++;} else {Anal->Nr=0;} 
   \   000001C6   2079               LDRB     R0,[R4, #+4]
   \   000001C8   401C               ADDS     R0,R0,#+1
   \   000001CA   0004               LSLS     R0,R0,#+16
   \   000001CC   000C               LSRS     R0,R0,#+16
   \   000001CE   2328               CMP      R0,#+35
   \   000001D0   03D2               BCS      ??AnalogGraph_Event_14
   \   000001D2   2079               LDRB     R0,[R4, #+4]
   \   000001D4   401C               ADDS     R0,R0,#+1
   \   000001D6   2071               STRB     R0,[R4, #+4]
   \   000001D8   01E0               B        ??AnalogGraph_Event_15
   \                     ??AnalogGraph_Event_14:
   \   000001DA   0020               MOVS     R0,#+0
   \   000001DC   2071               STRB     R0,[R4, #+4]
   6113                        MenuPaint(); 
   \                     ??AnalogGraph_Event_15:
   \   000001DE   ........           BL       MenuPaint
   6114                    }
   6115                     
   6116                    
   6117                    
   6118                    if (ButtonDownNr==3) 
   \                     ??AnalogGraph_Event_13:
   \   000001E2   032F               CMP      R7,#+3
   \   000001E4   0DD1               BNE      ??AnalogGraph_Event_16
   6119                    {
   6120                       ProgramChange=1;
   \   000001E6   2B48               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   000001E8   0121               MOVS     R1,#+1
   \   000001EA   0170               STRB     R1,[R0, #+0]
   6121                       if (Anal->Nr>0) {Anal->Nr--;} else {Anal->Nr=NumberNeurons;}
   \   000001EC   2079               LDRB     R0,[R4, #+4]
   \   000001EE   0028               CMP      R0,#+0
   \   000001F0   03D0               BEQ      ??AnalogGraph_Event_17
   \   000001F2   2079               LDRB     R0,[R4, #+4]
   \   000001F4   401E               SUBS     R0,R0,#+1
   \   000001F6   2071               STRB     R0,[R4, #+4]
   \   000001F8   01E0               B        ??AnalogGraph_Event_18
   \                     ??AnalogGraph_Event_17:
   \   000001FA   2320               MOVS     R0,#+35
   \   000001FC   2071               STRB     R0,[R4, #+4]
   6122                      MenuPaint(); 
   \                     ??AnalogGraph_Event_18:
   \   000001FE   ........           BL       MenuPaint
   6123                    }
   6124                    
   6125                    
   6126                    if (ButtonDownNr==4) 
   \                     ??AnalogGraph_Event_16:
   \   00000202   042F               CMP      R7,#+4
   \   00000204   10D1               BNE      ??AnalogGraph_Event_19
   6127                    {
   6128                      
   6129                        ProgramChange=1;
   \   00000206   0120               MOVS     R0,#+1
   \   00000208   2249               LDR      R1,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   0000020A   0200               MOVS     R2,R0
   \   0000020C   0A70               STRB     R2,[R1, #+0]
   6130                        if (Anal->Reg+1<NumberReg) {Anal->Reg++;} else {Anal->Reg=1;} 
   \   0000020E   6179               LDRB     R1,[R4, #+5]
   \   00000210   491C               ADDS     R1,R1,#+1
   \   00000212   0904               LSLS     R1,R1,#+16
   \   00000214   090C               LSRS     R1,R1,#+16
   \   00000216   0B29               CMP      R1,#+11
   \   00000218   03D2               BCS      ??AnalogGraph_Event_20
   \   0000021A   6079               LDRB     R0,[R4, #+5]
   \   0000021C   401C               ADDS     R0,R0,#+1
   \   0000021E   6071               STRB     R0,[R4, #+5]
   \   00000220   00E0               B        ??AnalogGraph_Event_21
   \                     ??AnalogGraph_Event_20:
   \   00000222   6071               STRB     R0,[R4, #+5]
   6131                        MenuPaint(); 
   \                     ??AnalogGraph_Event_21:
   \   00000224   ........           BL       MenuPaint
   6132                    }
   6133                     
   6134                    
   6135                    
   6136                    if (ButtonDownNr==5) 
   \                     ??AnalogGraph_Event_19:
   \   00000228   052F               CMP      R7,#+5
   \   0000022A   0DD1               BNE      ??AnalogGraph_Event_22
   6137                    {
   6138                       ProgramChange=1;
   \   0000022C   1948               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   0000022E   0121               MOVS     R1,#+1
   \   00000230   0170               STRB     R1,[R0, #+0]
   6139                       if (Anal->Reg>1) {Anal->Reg--;} else {Anal->Reg=NumberReg;}
   \   00000232   6079               LDRB     R0,[R4, #+5]
   \   00000234   0228               CMP      R0,#+2
   \   00000236   03D3               BCC      ??AnalogGraph_Event_23
   \   00000238   6079               LDRB     R0,[R4, #+5]
   \   0000023A   401E               SUBS     R0,R0,#+1
   \   0000023C   6071               STRB     R0,[R4, #+5]
   \   0000023E   01E0               B        ??AnalogGraph_Event_24
   \                     ??AnalogGraph_Event_23:
   \   00000240   0B20               MOVS     R0,#+11
   \   00000242   6071               STRB     R0,[R4, #+5]
   6140                      MenuPaint(); 
   \                     ??AnalogGraph_Event_24:
   \   00000244   ........           BL       MenuPaint
   6141                    }
   6142                    
   6143                    if (ButtonDownNr==6) 
   \                     ??AnalogGraph_Event_22:
   \   00000248   062F               CMP      R7,#+6
   \   0000024A   09D1               BNE      ??AnalogGraph_Event_5
   6144                    {
   6145                       if (Anal->Flip) Anal->Flip=0; else Anal->Flip=1;
   \   0000024C   A079               LDRB     R0,[R4, #+6]
   \   0000024E   411E               SUBS     R1,R0,#+1
   \   00000250   8941               SBCS     R1,R1,R1
   \   00000252   C90F               LSRS     R1,R1,#+31
   \   00000254   A171               STRB     R1,[R4, #+6]
   6146                       ProgramChange=1;
   \   00000256   0F48               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   00000258   0121               MOVS     R1,#+1
   \   0000025A   0170               STRB     R1,[R0, #+0]
   6147          
   6148                      MenuPaint(); 
   \   0000025C   ........           BL       MenuPaint
   6149                    }
   6150                    
   6151                  }
   6152                 
   6153                 
   6154                }
   \                     ??AnalogGraph_Event_5:
   \   00000260   FEBC               POP      {R1-R7}
   \   00000262   01BC               POP      {R0}
   \   00000264   0047               BX       R0               ;; return
   \   00000266   C046               Nop      
   \                     ??AnalogGraph_Event_1:
   \   00000268   ........           DC32     X_down
   \   0000026C   ........           DC32     Y_down
   \   00000270   E9D71300           DC32     0x13d7e9
   \   00000274   30F4FFFF           DC32     0xfffff430
   \   00000278   ........           DC32     ButtonBipCounter
   \   0000027C   ........           DC32     g_counter
   \   00000280   ........           DC32     X_up
   \   00000284   ........           DC32     Y_up
   \   00000288   ........           DC32     TextToChangeLength
   \   0000028C   ........           DC32     `?<Constant {0, 0}>` + 84
   \   00000290   3C3E0000           DC8      0x3C, 0x3E, 0x00, 0x00
   \   00000294   ........           DC32     TextToChangeLength + 8
   6155          
   6156          
   6157          
   6158                
   6159                
   6160          //opcje  **************************************************************************************************************

   \                                 In section .rodata, align 4
   \                     `?<Constant "Tester">`:
   \   00000000   546573746572       DC8 "Tester"
   \              00          
   \   00000007   00                 DC8 0
   6161             const char ProgStopStartLabel[2][15]=
   \                     ProgStopStartLabel:
   \   00000008   50726F677261       DC8 "Program stop"
   \              6D2073746F70
   \              00          
   \   00000015   0000               DC8 0, 0
   \   00000017   50726F677261       DC8 "Program start "
   \              6D2073746172
   \              742000      
   \   00000026   0000               DC8 0, 0
   6162             {
   6163                "Program stop",
   6164                "Program start ",
   6165             };
   6166          
   6167          
   6168                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6169                void Options_Paint(void)
   6170                {  
   \                     Options_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   6171                  
   6172          
   6173                  #ifdef _ADMINISTRATOR_
   6174                       List_Paint(Speech[g_leng].Opcje,5,15,0,0,3,Speech[g_leng].RestartSter, ProgStopStartLabel[g_Stop_Program],Speech[g_leng].Zmienne ,"Tester", "Zmiana ID",0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   6175                  #else
   6176                    #ifdef _TESTER_
   6177                          List_Paint(Speech[g_leng].Opcje,4,15,0,0,3,Speech[g_leng].RestartSter, ProgStopStartLabel[g_Stop_Program], Speech[g_leng].Zmienne, "Tester",0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   1448               LDR      R0,??Options_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   1449               LDR      R1,??Options_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1449               LDR      R1,??Options_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   144A               LDR      R2,??Options_Paint_0+0xC  ;; `?<Constant "Tester">`
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   1100               MOVS     R1,R2
   \   0000001A   1248               LDR      R0,??Options_Paint_0+0x10  ;; 0xa6e
   \   0000001C   2018               ADDS     R0,R4,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1148               LDR      R0,??Options_Paint_0+0x14  ;; g_Stop_Program
   \   00000022   0078               LDRB     R0,[R0, #+0]
   \   00000024   0F21               MOVS     R1,#+15
   \   00000026   4843               MULS     R0,R1,R0
   \   00000028   1118               ADDS     R1,R2,R0
   \   0000002A   0831               ADDS     R1,R1,#+8
   \   0000002C   F020               MOVS     R0,#+240
   \   0000002E   4000               LSLS     R0,R0,#+1        ;; #+480
   \   00000030   2018               ADDS     R0,R4,R0
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0321               MOVS     R1,#+3
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0300               MOVS     R3,R0
   \   0000003C   0F22               MOVS     R2,#+15
   \   0000003E   0421               MOVS     R1,#+4
   \   00000040   8720               MOVS     R0,#+135
   \   00000042   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000044   2018               ADDS     R0,R4,R0
   \   00000046   ........           BL       List_Paint
   \   0000004A   0AB0               ADD      SP,SP,#+40
   6178                    #else
   6179                          List_Paint(Speech[g_leng].Opcje,3,15,0,0,3,Speech[g_leng].RestartSter, ProgStopStartLabel[g_Stop_Program],Speech[g_leng].Zmienne,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   6180                    #endif
   6181                  #endif
   6182          
   6183                  
   6184                  
   6185                  
   6186              
   6187                }//________________________________________________________________________
   \   0000004C   10BC               POP      {R4}
   \   0000004E   01BC               POP      {R0}
   \   00000050   0047               BX       R0               ;; return
   \   00000052   C046               Nop      
   \                     ??Options_Paint_0:
   \   00000054   ........           DC32     g_leng
   \   00000058   7D0A0000           DC32     0xa7d
   \   0000005C   ........           DC32     Speech
   \   00000060   ........           DC32     `?<Constant "Tester">`
   \   00000064   6E0A0000           DC32     0xa6e
   \   00000068   ........           DC32     g_Stop_Program
   6188          
   6189              
   6190          
   6191                //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6192                void Options_Event(void)
   6193                {
   \                     Options_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6194                  int ans;
   6195                  #ifdef _ADMINISTRATOR_
   6196                    ans= List_Event(X_up, Y_up, X_down, Y_down, 5 , 15, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   6197                  #else
   6198                    #ifdef _TESTER_
   6199                      ans= List_Event(X_up, Y_up, X_down, Y_down, 4 , 15, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0420               MOVS     R0,#+4
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   2548               LDR      R0,??Options_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   2448               LDR      R0,??Options_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   2448               LDR      R0,??Options_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   2448               LDR      R0,??Options_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0400               MOVS     R4,R0
   6200                    #else  
   6201                      ans= List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   6202                    #endif
   6203                  #endif
   6204          
   6205                  if (ans)
   \   0000002A   38D0               BEQ      ??Options_Event_1
   6206                    {
   6207                      
   6208                        if (ans==1) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   012C               CMP      R4,#+1
   \   0000002E   05D1               BNE      ??Options_Event_2
   \   00000030   204D               LDR      R5,??Options_Event_0+0x10  ;; TextToChangeLength
   \   00000032   286D               LDR      R0,[R5, #+80]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   4843               MULS     R0,R1,R0
   \   00000038   401C               ADDS     R0,R0,#+1
   \   0000003A   2865               STR      R0,[R5, #+80]
   6209                        if (ans==2) 
   \                     ??Options_Event_2:
   \   0000003C   022C               CMP      R4,#+2
   \   0000003E   0CD1               BNE      ??Options_Event_3
   6210                            {if (g_Stop_Program==0) 
   \   00000040   1D48               LDR      R0,??Options_Event_0+0x14  ;; g_Stop_Program
   \   00000042   0178               LDRB     R1,[R0, #+0]
   \   00000044   0029               CMP      R1,#+0
   \   00000046   04D1               BNE      ??Options_Event_4
   6211                              {g_Stop_Program=1; MenuPaint();} else {g_Stop_Program=0; MenuPaint();}
   \   00000048   0121               MOVS     R1,#+1
   \   0000004A   0170               STRB     R1,[R0, #+0]
   \   0000004C   ........           BL       MenuPaint
   \   00000050   03E0               B        ??Options_Event_3
   \                     ??Options_Event_4:
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   0170               STRB     R1,[R0, #+0]
   \   00000056   ........           BL       MenuPaint
   6212                            }
   6213                        #if (_ADMINISTRATOR_) || (_TESTER_)
   6214                        if (ans==3)
   \                     ??Options_Event_3:
   \   0000005A   032C               CMP      R4,#+3
   \   0000005C   05D1               BNE      ??Options_Event_5
   6215                            {
   6216                              MenuLevel=(MenuLevel*10+ans);
   \   0000005E   154D               LDR      R5,??Options_Event_0+0x10  ;; TextToChangeLength
   \   00000060   286D               LDR      R0,[R5, #+80]
   \   00000062   0A21               MOVS     R1,#+10
   \   00000064   4843               MULS     R0,R1,R0
   \   00000066   C01C               ADDS     R0,R0,#+3
   \   00000068   2865               STR      R0,[R5, #+80]
   6217                            }
   6218                        if (ans==4)
   \                     ??Options_Event_5:
   \   0000006A   042C               CMP      R4,#+4
   \   0000006C   0DD1               BNE      ??Options_Event_6
   6219                            {
   6220                               //NeuronIdToChange   =3100008;
   6221                               NeuronIdToChange   =9999999;
   \   0000006E   114D               LDR      R5,??Options_Event_0+0x10  ;; TextToChangeLength
   \   00000070   1248               LDR      R0,??Options_Event_0+0x18  ;; 0x98967f
   \   00000072   2866               STR      R0,[R5, #+96]
   6222                                NeuronNrChange=1;
   \   00000074   0120               MOVS     R0,#+1
   \   00000076   E870               STRB     R0,[R5, #+3]
   6223                                AddRfTask(SI, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   00000078   0022               MOVS     R2,#+0
   \   0000007A   0100               MOVS     R1,R0
   \   0000007C   ........           BL       AddRfTask
   6224                               MenuLevel=(MenuLevel*10+ans);
   \   00000080   286D               LDR      R0,[R5, #+80]
   \   00000082   0A21               MOVS     R1,#+10
   \   00000084   4843               MULS     R0,R1,R0
   \   00000086   001D               ADDS     R0,R0,#+4
   \   00000088   2865               STR      R0,[R5, #+80]
   6225                            }
   6226                        #endif
   6227                        #ifdef _ADMINISTRATOR_
   6228                        if (ans==5)
   6229                            {
   6230                              NeuronNrChange=1;
   6231                               NeuronIdToChange   =9999999;
   6232                               NeuronIdAfterChange=3100000;
   6233                               MenuLevel=(MenuLevel*10+ans);
   6234                            }
   6235                         #endif
   6236                        if (ans<0) MenuLevel=(MenuLevel/10);
   \                     ??Options_Event_6:
   \   0000008A   002C               CMP      R4,#+0
   \   0000008C   05D5               BPL      ??Options_Event_7
   \   0000008E   094D               LDR      R5,??Options_Event_0+0x10  ;; TextToChangeLength
   \   00000090   286D               LDR      R0,[R5, #+80]
   \   00000092   0A21               MOVS     R1,#+10
   \   00000094   ........           BL       __aeabi_idivmod
   \   00000098   2865               STR      R0,[R5, #+80]
   6237                        MenuPaint();
   \                     ??Options_Event_7:
   \   0000009A   ........           BL       MenuPaint
   6238                    } 
   6239                    
   6240          
   6241                  
   6242                }//________________________________________________________________________
   \                     ??Options_Event_1:
   \   0000009E   38BC               POP      {R3-R5}
   \   000000A0   01BC               POP      {R0}
   \   000000A2   0047               BX       R0               ;; return
   \                     ??Options_Event_0:
   \   000000A4   ........           DC32     Y_down
   \   000000A8   ........           DC32     X_down
   \   000000AC   ........           DC32     Y_up
   \   000000B0   ........           DC32     X_up
   \   000000B4   ........           DC32     TextToChangeLength
   \   000000B8   ........           DC32     g_Stop_Program
   \   000000BC   7F969800           DC32     0x98967f
   6243              
   6244                      
   6245          
   6246          
   6247          
   6248          
   6249          
   6250          
   6251                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6252                void ChangeID_Paint(int *NeuronIdToChange, int *NeuronIdAfterChange)
   6253                {  
   \                     ChangeID_Paint:
   \   00000000   F3B5               PUSH     {R0,R1,R4-R7,LR}
   \   00000002   83B0               SUB      SP,SP,#+12
   6254                      char Txt[9];
   6255          
   6256                      List_Paint("New ID",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   644C               LDR      R4,??ChangeID_Paint_0  ;; `?<Constant "New ID">`
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   62A0               ADR      R0,??ChangeID_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0321               MOVS     R1,#+3
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   6C22               MOVS     R2,#+108
   \   0000001E   0121               MOVS     R1,#+1
   \   00000020   2000               MOVS     R0,R4
   \   00000022   ........           BL       List_Paint
   \   00000026   0AB0               ADD      SP,SP,#+40
   6257          
   6258                    
   6259                     //wyczyæ listê wêz³ów
   6260                     for (char i=0; i<NumberNeurons; i++) 
   \   00000028   0025               MOVS     R5,#+0
   \   0000002A   2800               MOVS     R0,R5
   \   0000002C   5C4E               LDR      R6,??ChangeID_Paint_0+0x8  ;; NeuronsList
   \   0000002E   0CE0               B        ??ChangeID_Paint_1
   6261                     {
   6262                       NeuronsList[i].NeuronType=NoneNodeType;
   \                     ??ChangeID_Paint_2:
   \   00000030   0C22               MOVS     R2,#+12
   \   00000032   5143               MULS     R1,R2,R1
   \   00000034   7118               ADDS     R1,R6,R1
   \   00000036   2A00               MOVS     R2,R5
   \   00000038   0A70               STRB     R2,[R1, #+0]
   6263                       NeuronsList[i].NeuronID=0;
   \   0000003A   4D60               STR      R5,[R1, #+4]
   6264                       NeuronsList[i].ReadOften=0;
   6265                       NeuronsList[i].ReadRarely=0;
   6266                       NeuronsList[i].Write=0;
   \   0000003C   0A7A               LDRB     R2,[R1, #+8]
   \   0000003E   F823               MOVS     R3,#+248
   \   00000040   1340               ANDS     R3,R3,R2
   \   00000042   0B72               STRB     R3,[R1, #+8]
   6267                     }
   \   00000044   401C               ADDS     R0,R0,#+1
   \   00000046   0006               LSLS     R0,R0,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \                     ??ChangeID_Paint_1:
   \   0000004A   0100               MOVS     R1,R0
   \   0000004C   2329               CMP      R1,#+35
   \   0000004E   EFD3               BCC      ??ChangeID_Paint_2
   6268                     
   6269                     //wyczyæ zadania
   6270                     for (char i=0; i<RF_Tasks; i++) 
   \   00000050   2800               MOVS     R0,R5
   \   00000052   08E0               B        ??ChangeID_Paint_3
   6271                     {
   6272                      RF_TaskTab[i].Node=0;
   \                     ??ChangeID_Paint_4:
   \   00000054   C900               LSLS     R1,R1,#+3
   \   00000056   534A               LDR      R2,??ChangeID_Paint_0+0xC  ;; RF_TaskTab
   \   00000058   5118               ADDS     R1,R2,R1
   \   0000005A   2A00               MOVS     R2,R5
   \   0000005C   0A70               STRB     R2,[R1, #+0]
   6273                      RF_TaskTab[i].Command.ID=0;
   6274                      RF_TaskTab[i].Command.Order=0;
   6275                      RF_TaskTab[i].Command.Auxi=0;
   \   0000005E   4D60               STR      R5,[R1, #+4]
   6276                     }
   \   00000060   401C               ADDS     R0,R0,#+1
   \   00000062   0006               LSLS     R0,R0,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \                     ??ChangeID_Paint_3:
   \   00000066   0100               MOVS     R1,R0
   \   00000068   4629               CMP      R1,#+70
   \   0000006A   F3D3               BCC      ??ChangeID_Paint_4
   6277                                
   6278                      
   6279                     
   6280                      
   6281                     //dodanie numeru ID do zmiany
   6282                     NeuronsList[0].NeuronType=(_NeuronType)(*NeuronIdToChange/1000000);
   \   0000006C   4E4F               LDR      R7,??ChangeID_Paint_0+0x10  ;; 0xf4240
   \   0000006E   0398               LDR      R0,[SP, #+12]
   \   00000070   0068               LDR      R0,[R0, #+0]
   \   00000072   3900               MOVS     R1,R7
   \   00000074   ........           BL       __aeabi_idivmod
   \   00000078   3070               STRB     R0,[R6, #+0]
   6283                     NeuronsList[0].NeuronID=(*NeuronIdToChange)-(NeuronsList[0].NeuronType*1000000);
   \   0000007A   0398               LDR      R0,[SP, #+12]
   \   0000007C   0068               LDR      R0,[R0, #+0]
   \   0000007E   3178               LDRB     R1,[R6, #+0]
   \   00000080   7943               MULS     R1,R7,R1
   \   00000082   401A               SUBS     R0,R0,R1
   \   00000084   7060               STR      R0,[R6, #+4]
   \   00000086   307A               LDRB     R0,[R6, #+8]
   \   00000088   0121               MOVS     R1,#+1
   \   0000008A   0143               ORRS     R1,R1,R0
   \   0000008C   3172               STRB     R1,[R6, #+8]
   6284                     NeuronsList[0].ReadOften=1;
   6285                     
   6286                     //dodanie nowego numeru
   6287                     NeuronsList[1].NeuronType=(_NeuronType)(*NeuronIdAfterChange/1000000);
   \   0000008E   0498               LDR      R0,[SP, #+16]
   \   00000090   0068               LDR      R0,[R0, #+0]
   \   00000092   3900               MOVS     R1,R7
   \   00000094   ........           BL       __aeabi_idivmod
   \   00000098   3073               STRB     R0,[R6, #+12]
   6288                     NeuronsList[1].NeuronID=(*NeuronIdAfterChange)-(NeuronsList[1].NeuronType*1000000);
   \   0000009A   0498               LDR      R0,[SP, #+16]
   \   0000009C   0068               LDR      R0,[R0, #+0]
   \   0000009E   317B               LDRB     R1,[R6, #+12]
   \   000000A0   7943               MULS     R1,R7,R1
   \   000000A2   401A               SUBS     R0,R0,R1
   \   000000A4   3061               STR      R0,[R6, #+16]
   6289                     NeuronsList[1].ReadOften=1;
   \   000000A6   307D               LDRB     R0,[R6, #+20]
   \   000000A8   0121               MOVS     R1,#+1
   \   000000AA   0143               ORRS     R1,R1,R0
   \   000000AC   3175               STRB     R1,[R6, #+20]
   6290                     
   6291                      
   6292                      
   6293                      
   6294                      Label("ID do zmiany",0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000AE   82B0               SUB      SP,SP,#+8
   \   000000B0   0120               MOVS     R0,#+1
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   7F21               MOVS     R1,#+127
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   3E21               MOVS     R1,#+62
   \   000000BA   0F20               MOVS     R0,#+15
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   6123               MOVS     R3,#+97
   \   000000C0   0122               MOVS     R2,#+1
   \   000000C2   2900               MOVS     R1,R5
   \   000000C4   2000               MOVS     R0,R4
   \   000000C6   0830               ADDS     R0,R0,#+8
   \   000000C8   ........           BL       Label
   \   000000CC   06B0               ADD      SP,SP,#+24
   6295                      sprintf(&Txt, "%d",  *NeuronIdToChange, 'B');
                             ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000000CE   37A6               ADR      R6,??ChangeID_Paint_0+0x14  ;; 0x25, 0x64, 0x00, 0x00
   \   000000D0   4223               MOVS     R3,#+66
   \   000000D2   0398               LDR      R0,[SP, #+12]
   \   000000D4   0268               LDR      R2,[R0, #+0]
   \   000000D6   3100               MOVS     R1,R6
   \   000000D8   6846               MOV      R0,SP
   \   000000DA   ........           BL       sprintf
   6296                      Label(Txt,0,10,86,7,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000000DE   82B0               SUB      SP,SP,#+8
   \   000000E0   2800               MOVS     R0,R5
   \   000000E2   0090               STR      R0,[SP, #+0]
   \   000000E4   7F21               MOVS     R1,#+127
   \   000000E6   0120               MOVS     R0,#+1
   \   000000E8   03B4               PUSH     {R0,R1}
   \   000000EA   2821               MOVS     R1,#+40
   \   000000EC   0720               MOVS     R0,#+7
   \   000000EE   03B4               PUSH     {R0,R1}
   \   000000F0   5623               MOVS     R3,#+86
   \   000000F2   0A22               MOVS     R2,#+10
   \   000000F4   2900               MOVS     R1,R5
   \   000000F6   06A8               ADD      R0,SP,#+24
   \   000000F8   ........           BL       Label
   \   000000FC   06B0               ADD      SP,SP,#+24
   6297          
   6298                      Button("...",45,81,16,15);
   \   000000FE   2CA7               ADR      R7,??ChangeID_Paint_0+0x18  ;; "..."
   \   00000100   82B0               SUB      SP,SP,#+8
   \   00000102   0F20               MOVS     R0,#+15
   \   00000104   0090               STR      R0,[SP, #+0]
   \   00000106   1023               MOVS     R3,#+16
   \   00000108   5122               MOVS     R2,#+81
   \   0000010A   2D21               MOVS     R1,#+45
   \   0000010C   3800               MOVS     R0,R7
   \   0000010E   ........           BL       Button
   \   00000112   02B0               ADD      SP,SP,#+8
   6299                      
   6300                      Label("ID po zmianie",0,1,67,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   0120               MOVS     R0,#+1
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   7F21               MOVS     R1,#+127
   \   0000011C   03B4               PUSH     {R0,R1}
   \   0000011E   3E21               MOVS     R1,#+62
   \   00000120   0F20               MOVS     R0,#+15
   \   00000122   03B4               PUSH     {R0,R1}
   \   00000124   4323               MOVS     R3,#+67
   \   00000126   0122               MOVS     R2,#+1
   \   00000128   2900               MOVS     R1,R5
   \   0000012A   1834               ADDS     R4,R4,#+24
   \   0000012C   2000               MOVS     R0,R4
   \   0000012E   ........           BL       Label
   \   00000132   06B0               ADD      SP,SP,#+24
   6301                      sprintf(&Txt, "%d",  *NeuronIdAfterChange, 'B');
   \   00000134   4223               MOVS     R3,#+66
   \   00000136   0498               LDR      R0,[SP, #+16]
   \   00000138   0268               LDR      R2,[R0, #+0]
   \   0000013A   3100               MOVS     R1,R6
   \   0000013C   6846               MOV      R0,SP
   \   0000013E   ........           BL       sprintf
   6302                      Label(Txt,0,10,56,7,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000142   82B0               SUB      SP,SP,#+8
   \   00000144   2800               MOVS     R0,R5
   \   00000146   0090               STR      R0,[SP, #+0]
   \   00000148   7F21               MOVS     R1,#+127
   \   0000014A   0120               MOVS     R0,#+1
   \   0000014C   03B4               PUSH     {R0,R1}
   \   0000014E   2821               MOVS     R1,#+40
   \   00000150   0720               MOVS     R0,#+7
   \   00000152   03B4               PUSH     {R0,R1}
   \   00000154   3823               MOVS     R3,#+56
   \   00000156   0A22               MOVS     R2,#+10
   \   00000158   2900               MOVS     R1,R5
   \   0000015A   06A8               ADD      R0,SP,#+24
   \   0000015C   ........           BL       Label
   \   00000160   06B0               ADD      SP,SP,#+24
   6303            
   6304                      Button("...",45,51,16,15); 
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0F20               MOVS     R0,#+15
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   1023               MOVS     R3,#+16
   \   0000016A   3322               MOVS     R2,#+51
   \   0000016C   2D21               MOVS     R1,#+45
   \   0000016E   3800               MOVS     R0,R7
   \   00000170   ........           BL       Button
   \   00000174   02B0               ADD      SP,SP,#+8
   6305                      
   6306                      AddRfTask(SI, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   00000176   2A00               MOVS     R2,R5
   \   00000178   0121               MOVS     R1,#+1
   \   0000017A   0800               MOVS     R0,R1
   \   0000017C   ........           BL       AddRfTask
   6307                      AddRfTask(SI, 2, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   00000180   2A00               MOVS     R2,R5
   \   00000182   0221               MOVS     R1,#+2
   \   00000184   0120               MOVS     R0,#+1
   \   00000186   ........           BL       AddRfTask
   6308                      
   6309                      TransQuality.Mensur[0]=0;
   \   0000018A   0A48               LDR      R0,??ChangeID_Paint_0+0x1C  ;; TransQuality
   \   0000018C   C564               STR      R5,[R0, #+76]
   6310                      TransQuality.Mensur[1]=0;
   \   0000018E   0565               STR      R5,[R0, #+80]
   6311                      
   6312                      
   6313                      
   6314                      
   6315                      
   6316                }//_______________________________________________________________________ 
   \   00000190   05B0               ADD      SP,SP,#+20
   \   00000192   F0BC               POP      {R4-R7}
   \   00000194   01BC               POP      {R0}
   \   00000196   0047               BX       R0               ;; return
   \                     ??ChangeID_Paint_0:
   \   00000198   ........           DC32     `?<Constant "New ID">`
   \   0000019C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001A0   ........           DC32     NeuronsList
   \   000001A4   ........           DC32     RF_TaskTab
   \   000001A8   40420F00           DC32     0xf4240
   \   000001AC   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000001B0   2E2E2E00           DC8      "..."
   \   000001B4   ........           DC32     TransQuality
   6317          
   6318          
   6319          
   6320          
   6321                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6322                void ChangeID_Event(int *NeuronIdToChange, int*NeuronIdAfterChange)
   6323                {
   \                     ChangeID_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0D00               MOVS     R5,R1
   6324                  int ans;
   6325          
   6326                 
   6327                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   3248               LDR      R0,??ChangeID_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   3148               LDR      R0,??ChangeID_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   3148               LDR      R0,??ChangeID_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   3148               LDR      R0,??ChangeID_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   6328            
   6329                  char Repaint=0;
   \   00000028   2600               MOVS     R6,R4
   6330          
   6331                  
   6332                  
   6333                  if (ans)
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   0FD0               BEQ      ??ChangeID_Event_1
   6334                    {
   6335                    if (ans<0) {
   \   0000002E   4CD5               BPL      ??ChangeID_Event_2
   6336                      
   6337                      
   6338                      SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   00000030   2D4C               LDR      R4,??ChangeID_Event_0+0x10  ;; gProg
   \   00000032   2000               MOVS     R0,R4
   \   00000034   ........           BL       SetTask
   6339                      RefreshNeuronsList(&gProg); 
   \   00000038   2000               MOVS     R0,R4
   \   0000003A   ........           BL       RefreshNeuronsList
   6340                      MenuLevel=(MenuLevel/10);
   \   0000003E   2B4C               LDR      R4,??ChangeID_Event_0+0x14  ;; TextToChangeLength
   \   00000040   206D               LDR      R0,[R4, #+80]
   \   00000042   0A21               MOVS     R1,#+10
   \   00000044   ........           BL       __aeabi_idivmod
   \   00000048   2065               STR      R0,[R4, #+80]
   6341          
   6342                       Repaint=1;
   \   0000004A   0124               MOVS     R4,#+1
   \   0000004C   3DE0               B        ??ChangeID_Event_2
   6343          
   6344                    }
   6345                    
   6346                    }else{
   6347                    
   6348                      //zmien -id pierwotne
   6349                      if (Button("...",45,81,16,15)==1)
   \                     ??ChangeID_Event_1:
   \   0000004E   28A7               ADR      R7,??ChangeID_Event_0+0x18  ;; "..."
   \   00000050   82B0               SUB      SP,SP,#+8
   \   00000052   0F20               MOVS     R0,#+15
   \   00000054   0090               STR      R0,[SP, #+0]
   \   00000056   1023               MOVS     R3,#+16
   \   00000058   5122               MOVS     R2,#+81
   \   0000005A   2D21               MOVS     R1,#+45
   \   0000005C   3800               MOVS     R0,R7
   \   0000005E   ........           BL       Button
   \   00000062   02B0               ADD      SP,SP,#+8
   \   00000064   0128               CMP      R0,#+1
   \   00000066   08D1               BNE      ??ChangeID_Event_3
   6350                      {
   6351                        NeuronIdChange=NeuronIdToChange;
   \   00000068   204C               LDR      R4,??ChangeID_Event_0+0x14  ;; TextToChangeLength
   \   0000006A   0098               LDR      R0,[SP, #+0]
   \   0000006C   A066               STR      R0,[R4, #+104]
   6352                        MenuLevel=(MenuLevel*10+1);
   \   0000006E   206D               LDR      R0,[R4, #+80]
   \   00000070   0A21               MOVS     R1,#+10
   \   00000072   4843               MULS     R0,R1,R0
   \   00000074   401C               ADDS     R0,R0,#+1
   \   00000076   2065               STR      R0,[R4, #+80]
   6353                        Repaint=1;
   \   00000078   0124               MOVS     R4,#+1
   6354                      }
   6355                    
   6356                      //zmien na id 
   6357                      if (Button("...",45,51,16,15)==1)
   \                     ??ChangeID_Event_3:
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   0F20               MOVS     R0,#+15
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   1023               MOVS     R3,#+16
   \   00000082   3322               MOVS     R2,#+51
   \   00000084   2D21               MOVS     R1,#+45
   \   00000086   3800               MOVS     R0,R7
   \   00000088   ........           BL       Button
   \   0000008C   02B0               ADD      SP,SP,#+8
   \   0000008E   0128               CMP      R0,#+1
   \   00000090   07D1               BNE      ??ChangeID_Event_4
   6358                      {
   6359                        NeuronIdChange=NeuronIdAfterChange;
   \   00000092   164C               LDR      R4,??ChangeID_Event_0+0x14  ;; TextToChangeLength
   \   00000094   A566               STR      R5,[R4, #+104]
   6360                        MenuLevel=(MenuLevel*10+1);
   \   00000096   206D               LDR      R0,[R4, #+80]
   \   00000098   0A21               MOVS     R1,#+10
   \   0000009A   4843               MULS     R0,R1,R0
   \   0000009C   401C               ADDS     R0,R0,#+1
   \   0000009E   2065               STR      R0,[R4, #+80]
   6361                        Repaint=1;
   \   000000A0   0124               MOVS     R4,#+1
   6362                      }
   6363                    
   6364                      //przycisk konwertuj
   6365                      if (Button("Konwertuj",3,10,58,20)==1)
   \                     ??ChangeID_Event_4:
   \   000000A2   82B0               SUB      SP,SP,#+8
   \   000000A4   1420               MOVS     R0,#+20
   \   000000A6   0090               STR      R0,[SP, #+0]
   \   000000A8   3A23               MOVS     R3,#+58
   \   000000AA   0A22               MOVS     R2,#+10
   \   000000AC   0321               MOVS     R1,#+3
   \   000000AE   1148               LDR      R0,??ChangeID_Event_0+0x1C  ;; `?<Constant "Konwertuj">`
   \   000000B0   ........           BL       Button
   \   000000B4   02B0               ADD      SP,SP,#+8
   \   000000B6   0128               CMP      R0,#+1
   \   000000B8   07D1               BNE      ??ChangeID_Event_2
   6366                      {
   6367          
   6368                        
   6369                        AddRfTask(SNewId, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   000000BA   3200               MOVS     R2,R6
   \   000000BC   0121               MOVS     R1,#+1
   \   000000BE   0420               MOVS     R0,#+4
   \   000000C0   ........           BL       AddRfTask
   6370                        TransQuality.Mensur[0]=0;
   \   000000C4   0C48               LDR      R0,??ChangeID_Event_0+0x20  ;; TransQuality
   \   000000C6   C664               STR      R6,[R0, #+76]
   6371                        TransQuality.Mensur[1]=0;
   \   000000C8   0665               STR      R6,[R0, #+80]
   6372                      }
   6373          
   6374                    
   6375                    
   6376                      
   6377                    } 
   6378                  
   6379                    if (Repaint) MenuPaint();
   \                     ??ChangeID_Event_2:
   \   000000CA   002C               CMP      R4,#+0
   \   000000CC   01D0               BEQ      ??ChangeID_Event_5
   \   000000CE   ........           BL       MenuPaint
   6380                  
   6381                  
   6382                }//_______________________________________________________________________
   \                     ??ChangeID_Event_5:
   \   000000D2   F8BC               POP      {R3-R7}
   \   000000D4   01BC               POP      {R0}
   \   000000D6   0047               BX       R0               ;; return
   \                     ??ChangeID_Event_0:
   \   000000D8   ........           DC32     Y_down
   \   000000DC   ........           DC32     X_down
   \   000000E0   ........           DC32     Y_up
   \   000000E4   ........           DC32     X_up
   \   000000E8   ........           DC32     gProg
   \   000000EC   ........           DC32     TextToChangeLength
   \   000000F0   2E2E2E00           DC8      "..."
   \   000000F4   ........           DC32     `?<Constant "Konwertuj">`
   \   000000F8   ........           DC32     TransQuality
   6383          
   6384          
   6385          
   6386                
   6387          

   \                                 In section Debug.txt, align 4, keep-with-next
   6388                 void ChangeID_Refresh(int *NeuronIdToChange, int*NeuronIdAfterChange)
   6389                 {
   \                     ChangeID_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   6390                     static char Dziel5=0;
   6391                     if (Dziel5<5)
   \   00000002   7E48               LDR      R0,??ChangeID_Refresh_0  ;; ??Dziel5
   \   00000004   0178               LDRB     R1,[R0, #+0]
   \   00000006   0529               CMP      R1,#+5
   \   00000008   02D2               BCS      ??ChangeID_Refresh_1
   6392                     {
   6393                        Dziel5++;
   \   0000000A   491C               ADDS     R1,R1,#+1
   \   0000000C   0170               STRB     R1,[R0, #+0]
   6394                        return;
   \   0000000E   F1E0               B        ??ChangeID_Refresh_2
   6395                     }
   \                     ??ChangeID_Refresh_1:
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0170               STRB     R1,[R0, #+0]
   6396                     Dziel5=0;
   6397                     
   6398                  char ERRx1=0;  //iloæ b³êdów pojedyñczych
   \   00000014   0C00               MOVS     R4,R1
   6399                  char ERRx2=0;  //iloæ b³êdów podwójnych (dwukrotny brak komunikacji w czasie TimeUnitQual)
   \   00000016   0D00               MOVS     R5,R1
   6400                  char ERRx3=0;  //iloæ b³êdów podtrujnych i wiêkszych (przynajmniej trzykrotny brak komunikacji w czasie TimeUnitQual)
   \   00000018   0E00               MOVS     R6,R1
   6401                  char CurErr=0;
   \   0000001A   0F00               MOVS     R7,R1
   6402                     
   6403                     
   6404                      //wywietl jakoæ transmisji starego ID
   6405                      char Ypoz=87;  
   6406                                 
   6407                                CleanCanvasArea(2,Ypoz-1,8,9,0);
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0800               MOVS     R0,R1
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   0923               MOVS     R3,#+9
   \   00000024   0822               MOVS     R2,#+8
   \   00000026   5621               MOVS     R1,#+86
   \   00000028   0220               MOVS     R0,#+2
   \   0000002A   ........           BL       CleanCanvasArea
   \   0000002E   02B0               ADD      SP,SP,#+8
   6408                                for (char b=0; b<32; b++)
   \   00000030   2000               MOVS     R0,R4
   \   00000032   1CE0               B        ??ChangeID_Refresh_3
   6409                                {
   6410                                  if ((TransQuality.Mensur[0]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   6411                                  {  
   6412                                    CurErr=0;
   6413                                  }else{
   6414                                    CurErr++;
   \                     ??ChangeID_Refresh_4:
   \   00000034   7F1C               ADDS     R7,R7,#+1
   \   00000036   3F06               LSLS     R7,R7,#+24
   \   00000038   3F0E               LSRS     R7,R7,#+24
   6415                                    if (CurErr==1) {ERRx1++;}
   \   0000003A   3900               MOVS     R1,R7
   \   0000003C   0129               CMP      R1,#+1
   \   0000003E   02D1               BNE      ??ChangeID_Refresh_5
   \   00000040   641C               ADDS     R4,R4,#+1
   \   00000042   2406               LSLS     R4,R4,#+24
   \   00000044   240E               LSRS     R4,R4,#+24
   6416                                    if (CurErr==2) {ERRx2++; ERRx1--; }
   \                     ??ChangeID_Refresh_5:
   \   00000046   0229               CMP      R1,#+2
   \   00000048   05D1               BNE      ??ChangeID_Refresh_6
   \   0000004A   6D1C               ADDS     R5,R5,#+1
   \   0000004C   2D06               LSLS     R5,R5,#+24
   \   0000004E   2D0E               LSRS     R5,R5,#+24
   \   00000050   641E               SUBS     R4,R4,#+1
   \   00000052   2406               LSLS     R4,R4,#+24
   \   00000054   240E               LSRS     R4,R4,#+24
   6417                                    if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   \                     ??ChangeID_Refresh_6:
   \   00000056   0329               CMP      R1,#+3
   \   00000058   06D1               BNE      ??ChangeID_Refresh_7
   \   0000005A   761C               ADDS     R6,R6,#+1
   \   0000005C   3606               LSLS     R6,R6,#+24
   \   0000005E   360E               LSRS     R6,R6,#+24
   \   00000060   6D1E               SUBS     R5,R5,#+1
   \   00000062   2D06               LSLS     R5,R5,#+24
   \   00000064   2D0E               LSRS     R5,R5,#+24
   \   00000066   0027               MOVS     R7,#+0
   6418                  
   6419                                  }
   \                     ??ChangeID_Refresh_7:
   \   00000068   401C               ADDS     R0,R0,#+1
   \   0000006A   0006               LSLS     R0,R0,#+24
   \   0000006C   000E               LSRS     R0,R0,#+24
   \                     ??ChangeID_Refresh_3:
   \   0000006E   6449               LDR      R1,??ChangeID_Refresh_0+0x4  ;; TransQuality + 76
   \   00000070   0968               LDR      R1,[R1, #+0]
   \   00000072   0200               MOVS     R2,R0
   \   00000074   202A               CMP      R2,#+32
   \   00000076   05D2               BCS      ??ChangeID_Refresh_8
   \   00000078   0122               MOVS     R2,#+1
   \   0000007A   8240               LSLS     R2,R2,R0
   \   0000007C   0A40               ANDS     R2,R2,R1
   \   0000007E   D9D0               BEQ      ??ChangeID_Refresh_4
   \   00000080   0027               MOVS     R7,#+0
   \   00000082   F1E7               B        ??ChangeID_Refresh_7
   6420                                  
   6421                                }
   6422                     
   6423                                //wskanik jakoci              
   6424                                if (TransQuality.Mensur[0]) H_line(5,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   \                     ??ChangeID_Refresh_8:
   \   00000084   0029               CMP      R1,#+0
   \   00000086   05D0               BEQ      ??ChangeID_Refresh_9
   \   00000088   0123               MOVS     R3,#+1
   \   0000008A   1A00               MOVS     R2,R3
   \   0000008C   5721               MOVS     R1,#+87
   \   0000008E   0520               MOVS     R0,#+5
   \   00000090   ........           BL       H_line
   6425                                if ((ERRx1<=12)  && (ERRx2<=10)  && (ERRx3<=5)) H_line(4,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   \                     ??ChangeID_Refresh_9:
   \   00000094   2000               MOVS     R0,R4
   \   00000096   0D28               CMP      R0,#+13
   \   00000098   0BD2               BCS      ??ChangeID_Refresh_10
   \   0000009A   2800               MOVS     R0,R5
   \   0000009C   0B28               CMP      R0,#+11
   \   0000009E   08D2               BCS      ??ChangeID_Refresh_10
   \   000000A0   3000               MOVS     R0,R6
   \   000000A2   0628               CMP      R0,#+6
   \   000000A4   05D2               BCS      ??ChangeID_Refresh_10
   \   000000A6   0123               MOVS     R3,#+1
   \   000000A8   0322               MOVS     R2,#+3
   \   000000AA   5921               MOVS     R1,#+89
   \   000000AC   0420               MOVS     R0,#+4
   \   000000AE   ........           BL       H_line
   6426                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(3,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   \                     ??ChangeID_Refresh_10:
   \   000000B2   2000               MOVS     R0,R4
   \   000000B4   0B28               CMP      R0,#+11
   \   000000B6   0BD2               BCS      ??ChangeID_Refresh_11
   \   000000B8   2800               MOVS     R0,R5
   \   000000BA   0728               CMP      R0,#+7
   \   000000BC   08D2               BCS      ??ChangeID_Refresh_11
   \   000000BE   3000               MOVS     R0,R6
   \   000000C0   0228               CMP      R0,#+2
   \   000000C2   05D2               BCS      ??ChangeID_Refresh_11
   \   000000C4   0123               MOVS     R3,#+1
   \   000000C6   0522               MOVS     R2,#+5
   \   000000C8   5B21               MOVS     R1,#+91
   \   000000CA   0320               MOVS     R0,#+3
   \   000000CC   ........           BL       H_line
   6427                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(2,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)
   \                     ??ChangeID_Refresh_11:
   \   000000D0   052C               CMP      R4,#+5
   \   000000D2   09D2               BCS      ??ChangeID_Refresh_12
   \   000000D4   022D               CMP      R5,#+2
   \   000000D6   07D2               BCS      ??ChangeID_Refresh_12
   \   000000D8   002E               CMP      R6,#+0
   \   000000DA   05D1               BNE      ??ChangeID_Refresh_12
   \   000000DC   0123               MOVS     R3,#+1
   \   000000DE   0722               MOVS     R2,#+7
   \   000000E0   5D21               MOVS     R1,#+93
   \   000000E2   0220               MOVS     R0,#+2
   \   000000E4   ........           BL       H_line
   6428                     
   6429                      
   6430                             
   6431                                if (TransQuality.Mensur[0])  Button("Konwertuj",3,10,58,20);    
   \                     ??ChangeID_Refresh_12:
   \   000000E8   4548               LDR      R0,??ChangeID_Refresh_0+0x4  ;; TransQuality + 76
   \   000000EA   0068               LDR      R0,[R0, #+0]
   \   000000EC   0028               CMP      R0,#+0
   \   000000EE   09D0               BEQ      ??ChangeID_Refresh_13
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   1420               MOVS     R0,#+20
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   3A23               MOVS     R3,#+58
   \   000000F8   0A22               MOVS     R2,#+10
   \   000000FA   0321               MOVS     R1,#+3
   \   000000FC   4148               LDR      R0,??ChangeID_Refresh_0+0x8  ;; `?<Constant "Konwertuj">`
   \   000000FE   ........           BL       Button
   \   00000102   02B0               ADD      SP,SP,#+8
   6432                                
   6433                              
   6434                           char NewN=1;
   \                     ??ChangeID_Refresh_13:
   \   00000104   0120               MOVS     R0,#+1
   \   00000106   0090               STR      R0,[SP, #+0]
   6435                           if (NeuronsList[0].NeuronID==NeuronsList[1].NeuronID) NewN=0;
   \   00000108   3F48               LDR      R0,??ChangeID_Refresh_0+0xC  ;; NeuronsList
   \   0000010A   4168               LDR      R1,[R0, #+4]
   \   0000010C   0069               LDR      R0,[R0, #+16]
   \   0000010E   8142               CMP      R1,R0
   \   00000110   01D1               BNE      ??ChangeID_Refresh_14
   \   00000112   0020               MOVS     R0,#+0
   \   00000114   0090               STR      R0,[SP, #+0]
   6436                           
   6437                                
   6438                        //wywietl jakoæ transmisji nowego ID
   6439                                Ypoz=57;
   6440                                ERRx1=0; 
   \                     ??ChangeID_Refresh_14:
   \   00000116   0024               MOVS     R4,#+0
   6441                                ERRx2=0;  
   \   00000118   2500               MOVS     R5,R4
   6442                                ERRx3=0;  
   \   0000011A   2600               MOVS     R6,R4
   6443                                CurErr=0;
   \   0000011C   2700               MOVS     R7,R4
   6444                                CleanCanvasArea(2,Ypoz-1,8,9,0);
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   2000               MOVS     R0,R4
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   0923               MOVS     R3,#+9
   \   00000126   0822               MOVS     R2,#+8
   \   00000128   3821               MOVS     R1,#+56
   \   0000012A   0220               MOVS     R0,#+2
   \   0000012C   ........           BL       CleanCanvasArea
   \   00000130   02B0               ADD      SP,SP,#+8
   6445                                for (char b=0; b<32; b++)
   \   00000132   2000               MOVS     R0,R4
   \   00000134   1CE0               B        ??ChangeID_Refresh_15
   6446                                {
   6447                                  if ((TransQuality.Mensur[NewN]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   6448                                  {  
   6449                                    CurErr=0;
   6450                                  }else{
   6451                                    CurErr++;
   \                     ??ChangeID_Refresh_16:
   \   00000136   7F1C               ADDS     R7,R7,#+1
   \   00000138   3F06               LSLS     R7,R7,#+24
   \   0000013A   3F0E               LSRS     R7,R7,#+24
   6452                                    if (CurErr==1) {ERRx1++;}
   \   0000013C   3900               MOVS     R1,R7
   \   0000013E   0129               CMP      R1,#+1
   \   00000140   02D1               BNE      ??ChangeID_Refresh_17
   \   00000142   641C               ADDS     R4,R4,#+1
   \   00000144   2406               LSLS     R4,R4,#+24
   \   00000146   240E               LSRS     R4,R4,#+24
   6453                                    if (CurErr==2) {ERRx2++; ERRx1--; }
   \                     ??ChangeID_Refresh_17:
   \   00000148   0229               CMP      R1,#+2
   \   0000014A   05D1               BNE      ??ChangeID_Refresh_18
   \   0000014C   6D1C               ADDS     R5,R5,#+1
   \   0000014E   2D06               LSLS     R5,R5,#+24
   \   00000150   2D0E               LSRS     R5,R5,#+24
   \   00000152   641E               SUBS     R4,R4,#+1
   \   00000154   2406               LSLS     R4,R4,#+24
   \   00000156   240E               LSRS     R4,R4,#+24
   6454                                    if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   \                     ??ChangeID_Refresh_18:
   \   00000158   0329               CMP      R1,#+3
   \   0000015A   06D1               BNE      ??ChangeID_Refresh_19
   \   0000015C   761C               ADDS     R6,R6,#+1
   \   0000015E   3606               LSLS     R6,R6,#+24
   \   00000160   360E               LSRS     R6,R6,#+24
   \   00000162   6D1E               SUBS     R5,R5,#+1
   \   00000164   2D06               LSLS     R5,R5,#+24
   \   00000166   2D0E               LSRS     R5,R5,#+24
   \   00000168   0027               MOVS     R7,#+0
   6455                  
   6456                                  }
   \                     ??ChangeID_Refresh_19:
   \   0000016A   401C               ADDS     R0,R0,#+1
   \   0000016C   0006               LSLS     R0,R0,#+24
   \   0000016E   000E               LSRS     R0,R0,#+24
   \                     ??ChangeID_Refresh_15:
   \   00000170   0099               LDR      R1,[SP, #+0]
   \   00000172   0906               LSLS     R1,R1,#+24
   \   00000174   090E               LSRS     R1,R1,#+24
   \   00000176   8900               LSLS     R1,R1,#+2
   \   00000178   244A               LDR      R2,??ChangeID_Refresh_0+0x10  ;; TransQuality
   \   0000017A   5118               ADDS     R1,R2,R1
   \   0000017C   C96C               LDR      R1,[R1, #+76]
   \   0000017E   0200               MOVS     R2,R0
   \   00000180   202A               CMP      R2,#+32
   \   00000182   05D2               BCS      ??ChangeID_Refresh_20
   \   00000184   0122               MOVS     R2,#+1
   \   00000186   8240               LSLS     R2,R2,R0
   \   00000188   0A40               ANDS     R2,R2,R1
   \   0000018A   D4D0               BEQ      ??ChangeID_Refresh_16
   \   0000018C   0027               MOVS     R7,#+0
   \   0000018E   ECE7               B        ??ChangeID_Refresh_19
   6457                                  
   6458                                }
   6459                     
   6460                                //wskanik jakoci              
   6461                                if (TransQuality.Mensur[NewN]) H_line(5,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   \                     ??ChangeID_Refresh_20:
   \   00000190   0029               CMP      R1,#+0
   \   00000192   05D0               BEQ      ??ChangeID_Refresh_21
   \   00000194   0123               MOVS     R3,#+1
   \   00000196   1A00               MOVS     R2,R3
   \   00000198   3921               MOVS     R1,#+57
   \   0000019A   0520               MOVS     R0,#+5
   \   0000019C   ........           BL       H_line
   6462                                if ((ERRx1<=12)  && (ERRx2<=10)  && (ERRx3<=5)) H_line(4,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   \                     ??ChangeID_Refresh_21:
   \   000001A0   2000               MOVS     R0,R4
   \   000001A2   0D28               CMP      R0,#+13
   \   000001A4   0BD2               BCS      ??ChangeID_Refresh_22
   \   000001A6   2800               MOVS     R0,R5
   \   000001A8   0B28               CMP      R0,#+11
   \   000001AA   08D2               BCS      ??ChangeID_Refresh_22
   \   000001AC   3000               MOVS     R0,R6
   \   000001AE   0628               CMP      R0,#+6
   \   000001B0   05D2               BCS      ??ChangeID_Refresh_22
   \   000001B2   0123               MOVS     R3,#+1
   \   000001B4   0322               MOVS     R2,#+3
   \   000001B6   3B21               MOVS     R1,#+59
   \   000001B8   0420               MOVS     R0,#+4
   \   000001BA   ........           BL       H_line
   6463                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(3,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   \                     ??ChangeID_Refresh_22:
   \   000001BE   2000               MOVS     R0,R4
   \   000001C0   0B28               CMP      R0,#+11
   \   000001C2   0BD2               BCS      ??ChangeID_Refresh_23
   \   000001C4   2800               MOVS     R0,R5
   \   000001C6   0728               CMP      R0,#+7
   \   000001C8   08D2               BCS      ??ChangeID_Refresh_23
   \   000001CA   3000               MOVS     R0,R6
   \   000001CC   0228               CMP      R0,#+2
   \   000001CE   05D2               BCS      ??ChangeID_Refresh_23
   \   000001D0   0123               MOVS     R3,#+1
   \   000001D2   0522               MOVS     R2,#+5
   \   000001D4   3D21               MOVS     R1,#+61
   \   000001D6   0320               MOVS     R0,#+3
   \   000001D8   ........           BL       H_line
   6464                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(2,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)    
   \                     ??ChangeID_Refresh_23:
   \   000001DC   052C               CMP      R4,#+5
   \   000001DE   09D2               BCS      ??ChangeID_Refresh_2
   \   000001E0   022D               CMP      R5,#+2
   \   000001E2   07D2               BCS      ??ChangeID_Refresh_2
   \   000001E4   002E               CMP      R6,#+0
   \   000001E6   05D1               BNE      ??ChangeID_Refresh_2
   \   000001E8   0123               MOVS     R3,#+1
   \   000001EA   0722               MOVS     R2,#+7
   \   000001EC   3F21               MOVS     R1,#+63
   \   000001EE   0220               MOVS     R0,#+2
   \   000001F0   ........           BL       H_line
   \                     ??ChangeID_Refresh_2:
   \   000001F4   F8BC               POP      {R3-R7}
   \   000001F6   01BC               POP      {R0}
   \   000001F8   0047               BX       R0               ;; return
   \   000001FA   C046               Nop      
   \                     ??ChangeID_Refresh_0:
   \   000001FC   ........           DC32     ??Dziel5
   \   00000200   ........           DC32     TransQuality + 76
   \   00000204   ........           DC32     `?<Constant "Konwertuj">`
   \   00000208   ........           DC32     NeuronsList
   \   0000020C   ........           DC32     TransQuality
   6465                                
   6466                                
   6467                                
   6468                 }
   6469                
   6470                
   6471                
   6472                
   6473                
   6474                
   6475                
   6476                
   6477                
   6478                
   6479          
   6480          
   6481          //Testowanie modu³ów
   6482                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6483                void CheckingModule_Paint(int *NeuronId)
   6484                {  
   \                     CheckingModule_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   5BA0               ADR      R0,??CheckingModule_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   5848               LDR      R0,??CheckingModule_Paint_0+0x4  ;; `?<Constant "Firmware: ">` + 12
   6485                      char Txt[9];
   6486          
   6487                      List_Paint("TESTER",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   6488          
   6489          
   6490                      
   6491                    
   6492                      RF_NodeTest.NodeNr=1;
   \   00000026   5748               LDR      R0,??CheckingModule_Paint_0+0x8  ;; RF_NodeTest
   \   00000028   0125               MOVS     R5,#+1
   \   0000002A   0570               STRB     R5,[R0, #+0]
   6493                      RF_NodeTest.Sent=0;
   \   0000002C   0026               MOVS     R6,#+0
   \   0000002E   4660               STR      R6,[R0, #+4]
   6494                      RF_NodeTest.SentSyn=0;   
   \   00000030   8660               STR      R6,[R0, #+8]
   6495                      RF_NodeTest.Recived=0;
   \   00000032   C660               STR      R6,[R0, #+12]
   6496                      
   6497                     //wyczyæ listê wêz³ów
   6498                     for (char i=0; i<NumberNeurons; i++) 
   \   00000034   3000               MOVS     R0,R6
   \   00000036   544F               LDR      R7,??CheckingModule_Paint_0+0xC  ;; NeuronsList
   \   00000038   0CE0               B        ??CheckingModule_Paint_1
   6499                     {
   6500                       NeuronsList[i].NeuronType=NoneNodeType;
   \                     ??CheckingModule_Paint_2:
   \   0000003A   0C22               MOVS     R2,#+12
   \   0000003C   5143               MULS     R1,R2,R1
   \   0000003E   7918               ADDS     R1,R7,R1
   \   00000040   3200               MOVS     R2,R6
   \   00000042   0A70               STRB     R2,[R1, #+0]
   6501                       NeuronsList[i].NeuronID=0;
   \   00000044   4E60               STR      R6,[R1, #+4]
   6502                       NeuronsList[i].ReadOften=0;
   6503                       NeuronsList[i].ReadRarely=0;
   6504                       NeuronsList[i].Write=0;
   \   00000046   0A7A               LDRB     R2,[R1, #+8]
   \   00000048   F823               MOVS     R3,#+248
   \   0000004A   1340               ANDS     R3,R3,R2
   \   0000004C   0B72               STRB     R3,[R1, #+8]
   6505                     }
   \   0000004E   401C               ADDS     R0,R0,#+1
   \   00000050   0006               LSLS     R0,R0,#+24
   \   00000052   000E               LSRS     R0,R0,#+24
   \                     ??CheckingModule_Paint_1:
   \   00000054   0100               MOVS     R1,R0
   \   00000056   2329               CMP      R1,#+35
   \   00000058   EFD3               BCC      ??CheckingModule_Paint_2
   6506                     
   6507                     //wyczyæ zadania
   6508                     for (char i=0; i<RF_Tasks; i++) 
   \   0000005A   3000               MOVS     R0,R6
   \   0000005C   08E0               B        ??CheckingModule_Paint_3
   6509                     {
   6510                      RF_TaskTab[i].Node=0;
   \                     ??CheckingModule_Paint_4:
   \   0000005E   C900               LSLS     R1,R1,#+3
   \   00000060   4A4A               LDR      R2,??CheckingModule_Paint_0+0x10  ;; RF_TaskTab
   \   00000062   5118               ADDS     R1,R2,R1
   \   00000064   3200               MOVS     R2,R6
   \   00000066   0A70               STRB     R2,[R1, #+0]
   6511                      RF_TaskTab[i].Command.ID=0;
   6512                      RF_TaskTab[i].Command.Order=0;
   6513                      RF_TaskTab[i].Command.Auxi=0;
   \   00000068   4E60               STR      R6,[R1, #+4]
   6514                     }
   \   0000006A   401C               ADDS     R0,R0,#+1
   \   0000006C   0006               LSLS     R0,R0,#+24
   \   0000006E   000E               LSRS     R0,R0,#+24
   \                     ??CheckingModule_Paint_3:
   \   00000070   0100               MOVS     R1,R0
   \   00000072   4629               CMP      R1,#+70
   \   00000074   F3D3               BCC      ??CheckingModule_Paint_4
   6515                                
   6516                      
   6517                      
   6518                     //dodanie numeru ID do testowania
   6519                     NeuronsList[0].NeuronType=(_NeuronType)(*NeuronId/1000000);
   \   00000076   2068               LDR      R0,[R4, #+0]
   \   00000078   4549               LDR      R1,??CheckingModule_Paint_0+0x14  ;; 0xf4240
   \   0000007A   ........           BL       __aeabi_idivmod
   \   0000007E   3870               STRB     R0,[R7, #+0]
   6520                     NeuronsList[0].NeuronID=(*NeuronId)-(NeuronsList[0].NeuronType*1000000);
   \   00000080   2068               LDR      R0,[R4, #+0]
   \   00000082   3978               LDRB     R1,[R7, #+0]
   \   00000084   424A               LDR      R2,??CheckingModule_Paint_0+0x14  ;; 0xf4240
   \   00000086   5143               MULS     R1,R2,R1
   \   00000088   401A               SUBS     R0,R0,R1
   \   0000008A   7860               STR      R0,[R7, #+4]
   6521                     NeuronsList[0].ReadOften=1;
   \   0000008C   387A               LDRB     R0,[R7, #+8]
   \   0000008E   2843               ORRS     R0,R0,R5
   \   00000090   3872               STRB     R0,[R7, #+8]
   6522                     
   6523                     //dodanie modu³ów o innych ID dla testu odpornoci na inne ID
   6524                     NeuronsList[1].NeuronType=(_NeuronType)3;
   \   00000092   0320               MOVS     R0,#+3
   \   00000094   0100               MOVS     R1,R0
   \   00000096   3973               STRB     R1,[R7, #+12]
   6525                     NeuronsList[1].NeuronID=999998;
   \   00000098   911E               SUBS     R1,R2,#+2
   \   0000009A   3961               STR      R1,[R7, #+16]
   6526                     NeuronsList[1].ReadOften=1;
   \   0000009C   397D               LDRB     R1,[R7, #+20]
   \   0000009E   2943               ORRS     R1,R1,R5
   \   000000A0   3975               STRB     R1,[R7, #+20]
   6527                     NeuronsList[2].NeuronType=(_NeuronType)3;
   \   000000A2   0100               MOVS     R1,R0
   \   000000A4   3976               STRB     R1,[R7, #+24]
   6528                     NeuronsList[2].NeuronID=999997;
   \   000000A6   D11E               SUBS     R1,R2,#+3
   \   000000A8   F961               STR      R1,[R7, #+28]
   6529                     NeuronsList[2].ReadOften=1;
   \   000000AA   2037               ADDS     R7,R7,#+32
   \   000000AC   3978               LDRB     R1,[R7, #+0]
   \   000000AE   2943               ORRS     R1,R1,R5
   \   000000B0   3970               STRB     R1,[R7, #+0]
   6530                     NeuronsList[3].NeuronType=(_NeuronType)3;
   \   000000B2   3871               STRB     R0,[R7, #+4]
   6531                     NeuronsList[3].NeuronID=999996;
   \   000000B4   3748               LDR      R0,??CheckingModule_Paint_0+0x18  ;; 0xf423c
   \   000000B6   B860               STR      R0,[R7, #+8]
   6532                     NeuronsList[3].ReadOften=1;
   \   000000B8   387B               LDRB     R0,[R7, #+12]
   \   000000BA   2843               ORRS     R0,R0,R5
   \   000000BC   3873               STRB     R0,[R7, #+12]
   6533          
   6534                     AddRfTask(SI, 2, 0);                //Dodaj rozkaz do tablicy zadañ RF   
   \   000000BE   3200               MOVS     R2,R6
   \   000000C0   0221               MOVS     R1,#+2
   \   000000C2   2800               MOVS     R0,R5
   \   000000C4   ........           BL       AddRfTask
   6535                     AddRfTask(SI, 3, 0);                //Dodaj rozkaz do tablicy zadañ RF   
   \   000000C8   3200               MOVS     R2,R6
   \   000000CA   0321               MOVS     R1,#+3
   \   000000CC   2800               MOVS     R0,R5
   \   000000CE   ........           BL       AddRfTask
   6536                      
   6537                     
   6538                     AddRfTask(SI, 4, 0);                //Dodaj rozkaz do tablicy zadañ RF 
   \   000000D2   3200               MOVS     R2,R6
   \   000000D4   0421               MOVS     R1,#+4
   \   000000D6   2800               MOVS     R0,R5
   \   000000D8   ........           BL       AddRfTask
   6539                      
   6540                      
   6541                      
   6542                      Label("ID modulu",0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   2800               MOVS     R0,R5
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   7F21               MOVS     R1,#+127
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   3E21               MOVS     R1,#+62
   \   000000E8   0F20               MOVS     R0,#+15
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   6123               MOVS     R3,#+97
   \   000000EE   2A00               MOVS     R2,R5
   \   000000F0   3100               MOVS     R1,R6
   \   000000F2   2948               LDR      R0,??CheckingModule_Paint_0+0x1C  ;; `?<Constant "Firmware: ">` + 20
   \   000000F4   ........           BL       Label
   \   000000F8   06B0               ADD      SP,SP,#+24
   6543                      sprintf(&Txt, "%d",  *NeuronId, 'B');
                             ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000000FA   4223               MOVS     R3,#+66
   \   000000FC   2268               LDR      R2,[R4, #+0]
   \   000000FE   27A1               ADR      R1,??CheckingModule_Paint_0+0x20  ;; 0x25, 0x64, 0x00, 0x00
   \   00000100   6846               MOV      R0,SP
   \   00000102   ........           BL       sprintf
   6544                      Label(Txt,0,10,86,7,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   3000               MOVS     R0,R6
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   7F21               MOVS     R1,#+127
   \   0000010E   2800               MOVS     R0,R5
   \   00000110   03B4               PUSH     {R0,R1}
   \   00000112   2821               MOVS     R1,#+40
   \   00000114   0720               MOVS     R0,#+7
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   5623               MOVS     R3,#+86
   \   0000011A   0A22               MOVS     R2,#+10
   \   0000011C   3100               MOVS     R1,R6
   \   0000011E   06A8               ADD      R0,SP,#+24
   \   00000120   ........           BL       Label
   \   00000124   06B0               ADD      SP,SP,#+24
   6545          
   6546                      Button("...",45,84,16,12);
   \   00000126   82B0               SUB      SP,SP,#+8
   \   00000128   0C20               MOVS     R0,#+12
   \   0000012A   0090               STR      R0,[SP, #+0]
   \   0000012C   1023               MOVS     R3,#+16
   \   0000012E   5422               MOVS     R2,#+84
   \   00000130   2D21               MOVS     R1,#+45
   \   00000132   1BA0               ADR      R0,??CheckingModule_Paint_0+0x24  ;; "..."
   \   00000134   ........           BL       Button
   \   00000138   02B0               ADD      SP,SP,#+8
   6547                      
   6548          
   6549                      
   6550                      AddRfTask(SI, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF          
   \   0000013A   3200               MOVS     R2,R6
   \   0000013C   2900               MOVS     R1,R5
   \   0000013E   0800               MOVS     R0,R1
   \   00000140   ........           BL       AddRfTask
   6551                      AddRfTask(SI, 2, 0);                //Dodaj rozkaz do tablicy zadañ RF       
   \   00000144   3200               MOVS     R2,R6
   \   00000146   0221               MOVS     R1,#+2
   \   00000148   2800               MOVS     R0,R5
   \   0000014A   ........           BL       AddRfTask
   6552                      AddRfTask(SI, 3, 0);                //Dodaj rozkaz do tablicy zadañ RF       
   \   0000014E   3200               MOVS     R2,R6
   \   00000150   0321               MOVS     R1,#+3
   \   00000152   2800               MOVS     R0,R5
   \   00000154   ........           BL       AddRfTask
   6553                      AddRfTask(SI, 4, 0);                //Dodaj rozkaz do tablicy zadañ RF       
   \   00000158   3200               MOVS     R2,R6
   \   0000015A   0421               MOVS     R1,#+4
   \   0000015C   2800               MOVS     R0,R5
   \   0000015E   ........           BL       AddRfTask
   6554                      AddRfTask(SI, 5, 0);                //Dodaj rozkaz do tablicy zadañ RF       
   \   00000162   3200               MOVS     R2,R6
   \   00000164   0521               MOVS     R1,#+5
   \   00000166   2800               MOVS     R0,R5
   \   00000168   ........           BL       AddRfTask
   6555                      
   6556                      
   6557                      
   6558                      TransQuality.Mensur[0]=0;
   \   0000016C   0D48               LDR      R0,??CheckingModule_Paint_0+0x28  ;; TransQuality + 76
   \   0000016E   0660               STR      R6,[R0, #+0]
   6559          
   6560          
   6561          
   6562                      
   6563                      
   6564                      NeuronNrChange=1;
   \   00000170   0D48               LDR      R0,??CheckingModule_Paint_0+0x2C  ;; TextToChangeLength + 3
   \   00000172   0570               STRB     R5,[R0, #+0]
   6565                      
   6566                      
   6567                }//_______________________________________________________________________ 
   \   00000174   FEBC               POP      {R1-R7}
   \   00000176   01BC               POP      {R0}
   \   00000178   0047               BX       R0               ;; return
   \   0000017A   C046               Nop      
   \                     ??CheckingModule_Paint_0:
   \   0000017C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000180   ........           DC32     `?<Constant "Firmware: ">` + 12
   \   00000184   ........           DC32     RF_NodeTest
   \   00000188   ........           DC32     NeuronsList
   \   0000018C   ........           DC32     RF_TaskTab
   \   00000190   40420F00           DC32     0xf4240
   \   00000194   3C420F00           DC32     0xf423c
   \   00000198   ........           DC32     `?<Constant "Firmware: ">` + 20
   \   0000019C   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000001A0   2E2E2E00           DC8      "..."
   \   000001A4   ........           DC32     TransQuality + 76
   \   000001A8   ........           DC32     TextToChangeLength + 3
   6568          
   6569          
   6570          
   6571          
   6572                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6573                void CheckingModule_Event(int *NeuronId)
   6574                {
   \                     CheckingModule_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   6575                  int ans;
   6576          
   6577                 
   6578                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   3C48               LDR      R0,??CheckingModule_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   3B48               LDR      R0,??CheckingModule_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   3B48               LDR      R0,??CheckingModule_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   3B48               LDR      R0,??CheckingModule_Event_0+0xC  ;; X_up
   \   0000001E   0025               MOVS     R5,#+0
   \   00000020   405F               LDRSH    R0,[R0, R5]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   6579            
   6580                  char Repaint=0;
   6581          
   6582                  
   6583                  
   6584                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0FD0               BEQ      ??CheckingModule_Event_1
   6585                    {
   6586                    if (ans<0) {
   \   0000002C   61D5               BPL      ??CheckingModule_Event_2
   6587                      
   6588                      
   6589                      SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   0000002E   384C               LDR      R4,??CheckingModule_Event_0+0x10  ;; gProg
   \   00000030   2000               MOVS     R0,R4
   \   00000032   ........           BL       SetTask
   6590                      RefreshNeuronsList(&gProg); 
   \   00000036   2000               MOVS     R0,R4
   \   00000038   ........           BL       RefreshNeuronsList
   6591                      MenuLevel=(MenuLevel/100);
   \   0000003C   354D               LDR      R5,??CheckingModule_Event_0+0x14  ;; TextToChangeLength
   \   0000003E   286D               LDR      R0,[R5, #+80]
   \   00000040   6421               MOVS     R1,#+100
   \   00000042   ........           BL       __aeabi_idivmod
   \   00000046   2865               STR      R0,[R5, #+80]
   6592          
   6593                       Repaint=1;
   \   00000048   0125               MOVS     R5,#+1
   \   0000004A   52E0               B        ??CheckingModule_Event_2
   6594          
   6595                    }
   6596                    
   6597                    }else{
   6598                    
   6599                      //zmien -id pierwotne
   6600                      if (Button("...",45,84,16,12)==1)
   \                     ??CheckingModule_Event_1:
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0C20               MOVS     R0,#+12
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   1023               MOVS     R3,#+16
   \   00000054   5422               MOVS     R2,#+84
   \   00000056   2D21               MOVS     R1,#+45
   \   00000058   2FA0               ADR      R0,??CheckingModule_Event_0+0x18  ;; "..."
   \   0000005A   ........           BL       Button
   \   0000005E   02B0               ADD      SP,SP,#+8
   \   00000060   0128               CMP      R0,#+1
   \   00000062   07D1               BNE      ??CheckingModule_Event_3
   6601                      {
   6602                        NeuronIdChange=NeuronId;
   \   00000064   2B4D               LDR      R5,??CheckingModule_Event_0+0x14  ;; TextToChangeLength
   \   00000066   AC66               STR      R4,[R5, #+104]
   6603                        MenuLevel=(MenuLevel*10+1);
   \   00000068   286D               LDR      R0,[R5, #+80]
   \   0000006A   0A21               MOVS     R1,#+10
   \   0000006C   4843               MULS     R0,R1,R0
   \   0000006E   401C               ADDS     R0,R0,#+1
   \   00000070   2865               STR      R0,[R5, #+80]
   6604                        Repaint=1;
   \   00000072   0125               MOVS     R5,#+1
   6605                      }
   6606                    
   6607                      if  (Button("We/Wy",3,51,58,15)==1)
   \                     ??CheckingModule_Event_3:
   \   00000074   294E               LDR      R6,??CheckingModule_Event_0+0x1C  ;; `?<Constant "We/Wy">`
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0F20               MOVS     R0,#+15
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   3A23               MOVS     R3,#+58
   \   0000007E   3322               MOVS     R2,#+51
   \   00000080   0321               MOVS     R1,#+3
   \   00000082   3000               MOVS     R0,R6
   \   00000084   ........           BL       Button
   \   00000088   02B0               ADD      SP,SP,#+8
   \   0000008A   0128               CMP      R0,#+1
   \   0000008C   07D1               BNE      ??CheckingModule_Event_4
   6608                      {
   6609                        NeuronIdChange=NeuronId;
   \   0000008E   214D               LDR      R5,??CheckingModule_Event_0+0x14  ;; TextToChangeLength
   \   00000090   AC66               STR      R4,[R5, #+104]
   6610                        MenuLevel=(MenuLevel*100+21);
   \   00000092   286D               LDR      R0,[R5, #+80]
   \   00000094   6421               MOVS     R1,#+100
   \   00000096   4843               MULS     R0,R1,R0
   \   00000098   1530               ADDS     R0,R0,#+21
   \   0000009A   2865               STR      R0,[R5, #+80]
   6611                        Repaint=1;
   \   0000009C   0125               MOVS     R5,#+1
   6612                      }
   6613                    
   6614                      if  (Button("We analog.",3,35,58,15)==1)
   \                     ??CheckingModule_Event_4:
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   0F20               MOVS     R0,#+15
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   3A23               MOVS     R3,#+58
   \   000000A6   2322               MOVS     R2,#+35
   \   000000A8   0321               MOVS     R1,#+3
   \   000000AA   3000               MOVS     R0,R6
   \   000000AC   0830               ADDS     R0,R0,#+8
   \   000000AE   ........           BL       Button
   \   000000B2   02B0               ADD      SP,SP,#+8
   \   000000B4   0128               CMP      R0,#+1
   \   000000B6   07D1               BNE      ??CheckingModule_Event_5
   6615                      {
   6616                        NeuronIdChange=NeuronId;
   \   000000B8   164D               LDR      R5,??CheckingModule_Event_0+0x14  ;; TextToChangeLength
   \   000000BA   AC66               STR      R4,[R5, #+104]
   6617                        MenuLevel=(MenuLevel*100+31);
   \   000000BC   286D               LDR      R0,[R5, #+80]
   \   000000BE   6421               MOVS     R1,#+100
   \   000000C0   4843               MULS     R0,R1,R0
   \   000000C2   1F30               ADDS     R0,R0,#+31
   \   000000C4   2865               STR      R0,[R5, #+80]
   6618                        Repaint=1;
   \   000000C6   0125               MOVS     R5,#+1
   6619                      }
   6620                      
   6621                      if  (Button("Test MG1",3,19,58,15)==1)
   \                     ??CheckingModule_Event_5:
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   0F20               MOVS     R0,#+15
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   3A23               MOVS     R3,#+58
   \   000000D0   1322               MOVS     R2,#+19
   \   000000D2   0321               MOVS     R1,#+3
   \   000000D4   1436               ADDS     R6,R6,#+20
   \   000000D6   3000               MOVS     R0,R6
   \   000000D8   ........           BL       Button
   \   000000DC   02B0               ADD      SP,SP,#+8
   \   000000DE   0128               CMP      R0,#+1
   \   000000E0   07D1               BNE      ??CheckingModule_Event_2
   6622                      {
   6623                        NeuronIdChange=NeuronId;
   \   000000E2   0C4D               LDR      R5,??CheckingModule_Event_0+0x14  ;; TextToChangeLength
   \   000000E4   AC66               STR      R4,[R5, #+104]
   6624                        MenuLevel=(MenuLevel*10+4);
   \   000000E6   286D               LDR      R0,[R5, #+80]
   \   000000E8   0A21               MOVS     R1,#+10
   \   000000EA   4843               MULS     R0,R1,R0
   \   000000EC   001D               ADDS     R0,R0,#+4
   \   000000EE   2865               STR      R0,[R5, #+80]
   6625                        Repaint=1;
   \   000000F0   0125               MOVS     R5,#+1
   6626                      }
   6627                      
   6628                    } 
   6629                  
   6630                    if (Repaint) MenuPaint();
   \                     ??CheckingModule_Event_2:
   \   000000F2   002D               CMP      R5,#+0
   \   000000F4   01D0               BEQ      ??CheckingModule_Event_6
   \   000000F6   ........           BL       MenuPaint
   6631                  
   6632                  
   6633                }//_______________________________________________________________________
   \                     ??CheckingModule_Event_6:
   \   000000FA   70BC               POP      {R4-R6}
   \   000000FC   01BC               POP      {R0}
   \   000000FE   0047               BX       R0               ;; return
   \                     ??CheckingModule_Event_0:
   \   00000100   ........           DC32     Y_down
   \   00000104   ........           DC32     X_down
   \   00000108   ........           DC32     Y_up
   \   0000010C   ........           DC32     X_up
   \   00000110   ........           DC32     gProg
   \   00000114   ........           DC32     TextToChangeLength
   \   00000118   2E2E2E00           DC8      "..."
   \   0000011C   ........           DC32     `?<Constant "We/Wy">`
   6634          
   6635                
   6636                
   6637                
   6638          

   \                                 In section Debug.txt, align 4, keep-with-next
   6639                 void CheckingModule_Refresh(int *NeuronId)
   6640                 {
   \                     CheckingModule_Refresh:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   6641                     static char Dziel5=0;
   6642                     if (Dziel5<5)
   \   00000004   7F48               LDR      R0,??CheckingModule_Refresh_0  ;; ??Dziel5_1
   \   00000006   0178               LDRB     R1,[R0, #+0]
   \   00000008   0529               CMP      R1,#+5
   \   0000000A   02D2               BCS      ??CheckingModule_Refresh_1
   6643                     {
   6644                        Dziel5++;
   \   0000000C   491C               ADDS     R1,R1,#+1
   \   0000000E   0170               STRB     R1,[R0, #+0]
   6645                        return;
   \   00000010   F4E0               B        ??CheckingModule_Refresh_2
   6646                     }
   \                     ??CheckingModule_Refresh_1:
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   0170               STRB     R1,[R0, #+0]
   6647                     Dziel5=0;
   6648                     char txt[15];
   6649                     
   6650                  char ERRx1=0;  //iloæ b³êdów pojedyñczych
   \   00000016   0C00               MOVS     R4,R1
   6651                  char ERRx2=0;  //iloæ b³êdów podwójnych (dwukrotny brak komunikacji w czasie TimeUnitQual)
   \   00000018   0D00               MOVS     R5,R1
   6652                  char ERRx3=0;  //iloæ b³êdów podtrujnych i wiêkszych (przynajmniej trzykrotny brak komunikacji w czasie TimeUnitQual)
   \   0000001A   0E00               MOVS     R6,R1
   6653                  char CurErr=0;
   \   0000001C   0F00               MOVS     R7,R1
   6654                     
   6655                     
   6656                      //wywietl jakoæ transmisji starego ID
   6657                      char Ypoz=87;  
   6658                                 
   6659                                CleanCanvasArea(2,Ypoz-1,8,9,0);
   \   0000001E   82B0               SUB      SP,SP,#+8
   \   00000020   0800               MOVS     R0,R1
   \   00000022   0090               STR      R0,[SP, #+0]
   \   00000024   0923               MOVS     R3,#+9
   \   00000026   0822               MOVS     R2,#+8
   \   00000028   5621               MOVS     R1,#+86
   \   0000002A   0220               MOVS     R0,#+2
   \   0000002C   ........           BL       CleanCanvasArea
   \   00000030   02B0               ADD      SP,SP,#+8
   6660                                for (char b=0; b<32; b++)
   \   00000032   2000               MOVS     R0,R4
   \   00000034   1CE0               B        ??CheckingModule_Refresh_3
   6661                                {
   6662                                  if ((TransQuality.Mensur[0]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   6663                                  {  
   6664                                    CurErr=0;
   6665                                  }else{
   6666                                    CurErr++;
   \                     ??CheckingModule_Refresh_4:
   \   00000036   7F1C               ADDS     R7,R7,#+1
   \   00000038   3F06               LSLS     R7,R7,#+24
   \   0000003A   3F0E               LSRS     R7,R7,#+24
   6667                                    if (CurErr==1) {ERRx1++;}
   \   0000003C   3900               MOVS     R1,R7
   \   0000003E   0129               CMP      R1,#+1
   \   00000040   02D1               BNE      ??CheckingModule_Refresh_5
   \   00000042   641C               ADDS     R4,R4,#+1
   \   00000044   2406               LSLS     R4,R4,#+24
   \   00000046   240E               LSRS     R4,R4,#+24
   6668                                    if (CurErr==2) {ERRx2++; ERRx1--; }
   \                     ??CheckingModule_Refresh_5:
   \   00000048   0229               CMP      R1,#+2
   \   0000004A   05D1               BNE      ??CheckingModule_Refresh_6
   \   0000004C   6D1C               ADDS     R5,R5,#+1
   \   0000004E   2D06               LSLS     R5,R5,#+24
   \   00000050   2D0E               LSRS     R5,R5,#+24
   \   00000052   641E               SUBS     R4,R4,#+1
   \   00000054   2406               LSLS     R4,R4,#+24
   \   00000056   240E               LSRS     R4,R4,#+24
   6669                                    if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   \                     ??CheckingModule_Refresh_6:
   \   00000058   0329               CMP      R1,#+3
   \   0000005A   06D1               BNE      ??CheckingModule_Refresh_7
   \   0000005C   761C               ADDS     R6,R6,#+1
   \   0000005E   3606               LSLS     R6,R6,#+24
   \   00000060   360E               LSRS     R6,R6,#+24
   \   00000062   6D1E               SUBS     R5,R5,#+1
   \   00000064   2D06               LSLS     R5,R5,#+24
   \   00000066   2D0E               LSRS     R5,R5,#+24
   \   00000068   0027               MOVS     R7,#+0
   6670                  
   6671                                  }
   \                     ??CheckingModule_Refresh_7:
   \   0000006A   401C               ADDS     R0,R0,#+1
   \   0000006C   0006               LSLS     R0,R0,#+24
   \   0000006E   000E               LSRS     R0,R0,#+24
   \                     ??CheckingModule_Refresh_3:
   \   00000070   6549               LDR      R1,??CheckingModule_Refresh_0+0x4  ;; TransQuality + 76
   \   00000072   0968               LDR      R1,[R1, #+0]
   \   00000074   0200               MOVS     R2,R0
   \   00000076   202A               CMP      R2,#+32
   \   00000078   05D2               BCS      ??CheckingModule_Refresh_8
   \   0000007A   0122               MOVS     R2,#+1
   \   0000007C   8240               LSLS     R2,R2,R0
   \   0000007E   0A40               ANDS     R2,R2,R1
   \   00000080   D9D0               BEQ      ??CheckingModule_Refresh_4
   \   00000082   0027               MOVS     R7,#+0
   \   00000084   F1E7               B        ??CheckingModule_Refresh_7
   6672                                  
   6673                                }
   6674                     
   6675                                //wskanik jakoci              
   6676                                if (TransQuality.Mensur[0]) H_line(5,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   \                     ??CheckingModule_Refresh_8:
   \   00000086   0029               CMP      R1,#+0
   \   00000088   05D0               BEQ      ??CheckingModule_Refresh_9
   \   0000008A   0123               MOVS     R3,#+1
   \   0000008C   1A00               MOVS     R2,R3
   \   0000008E   5721               MOVS     R1,#+87
   \   00000090   0520               MOVS     R0,#+5
   \   00000092   ........           BL       H_line
   6677                                if ((ERRx1<=12)  && (ERRx2<=10)  && (ERRx3<=5)) H_line(4,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   \                     ??CheckingModule_Refresh_9:
   \   00000096   2000               MOVS     R0,R4
   \   00000098   0D28               CMP      R0,#+13
   \   0000009A   0BD2               BCS      ??CheckingModule_Refresh_10
   \   0000009C   2800               MOVS     R0,R5
   \   0000009E   0B28               CMP      R0,#+11
   \   000000A0   08D2               BCS      ??CheckingModule_Refresh_10
   \   000000A2   3000               MOVS     R0,R6
   \   000000A4   0628               CMP      R0,#+6
   \   000000A6   05D2               BCS      ??CheckingModule_Refresh_10
   \   000000A8   0123               MOVS     R3,#+1
   \   000000AA   0322               MOVS     R2,#+3
   \   000000AC   5921               MOVS     R1,#+89
   \   000000AE   0420               MOVS     R0,#+4
   \   000000B0   ........           BL       H_line
   6678                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(3,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   \                     ??CheckingModule_Refresh_10:
   \   000000B4   2000               MOVS     R0,R4
   \   000000B6   0B28               CMP      R0,#+11
   \   000000B8   0BD2               BCS      ??CheckingModule_Refresh_11
   \   000000BA   2800               MOVS     R0,R5
   \   000000BC   0728               CMP      R0,#+7
   \   000000BE   08D2               BCS      ??CheckingModule_Refresh_11
   \   000000C0   3000               MOVS     R0,R6
   \   000000C2   0228               CMP      R0,#+2
   \   000000C4   05D2               BCS      ??CheckingModule_Refresh_11
   \   000000C6   0123               MOVS     R3,#+1
   \   000000C8   0522               MOVS     R2,#+5
   \   000000CA   5B21               MOVS     R1,#+91
   \   000000CC   0320               MOVS     R0,#+3
   \   000000CE   ........           BL       H_line
   6679                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(2,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)
   \                     ??CheckingModule_Refresh_11:
   \   000000D2   052C               CMP      R4,#+5
   \   000000D4   09D2               BCS      ??CheckingModule_Refresh_12
   \   000000D6   022D               CMP      R5,#+2
   \   000000D8   07D2               BCS      ??CheckingModule_Refresh_12
   \   000000DA   002E               CMP      R6,#+0
   \   000000DC   05D1               BNE      ??CheckingModule_Refresh_12
   \   000000DE   0123               MOVS     R3,#+1
   \   000000E0   0722               MOVS     R2,#+7
   \   000000E2   5D21               MOVS     R1,#+93
   \   000000E4   0220               MOVS     R0,#+2
   \   000000E6   ........           BL       H_line
   6680                     
   6681                      
   6682                                
   6683                                
   6684                                
   6685                         if (TransQuality.Mensur[0])
   \                     ??CheckingModule_Refresh_12:
   \   000000EA   4748               LDR      R0,??CheckingModule_Refresh_0+0x4  ;; TransQuality + 76
   \   000000EC   0068               LDR      R0,[R0, #+0]
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   4648               LDR      R0,??CheckingModule_Refresh_0+0x8  ;; RF_NodeTest
   \   000000F2   00D1               BNE      .+4
   \   000000F4   7EE0               B        ??CheckingModule_Refresh_13
   6686                        { 
   6687                            unsigned short Sent=RF_NodeTest.SentSyn; 
   \   000000F6   8468               LDR      R4,[R0, #+8]
   \   000000F8   2404               LSLS     R4,R4,#+16
   \   000000FA   240C               LSRS     R4,R4,#+16
   6688                            unsigned short Recived=RF_NodeTest.Recived; 
   6689                         
   6690                           
   6691                            sprintf(txt, "%d", Recived);
                                   ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000000FC   44A5               ADR      R5,??CheckingModule_Refresh_0+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   000000FE   C268               LDR      R2,[R0, #+12]
   \   00000100   1204               LSLS     R2,R2,#+16
   \   00000102   120C               LSRS     R2,R2,#+16
   \   00000104   2900               MOVS     R1,R5
   \   00000106   6846               MOV      R0,SP
   \   00000108   ........           BL       sprintf
   6692                            Label("Ode:",0,3,66,10,30,1,127,0);  
   \   0000010C   414E               LDR      R6,??CheckingModule_Refresh_0+0x10  ;; `?<Constant "We/Wy">`
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   7F21               MOVS     R1,#+127
   \   00000116   0120               MOVS     R0,#+1
   \   00000118   03B4               PUSH     {R0,R1}
   \   0000011A   1E21               MOVS     R1,#+30
   \   0000011C   0A20               MOVS     R0,#+10
   \   0000011E   03B4               PUSH     {R0,R1}
   \   00000120   4223               MOVS     R3,#+66
   \   00000122   0322               MOVS     R2,#+3
   \   00000124   0021               MOVS     R1,#+0
   \   00000126   3000               MOVS     R0,R6
   \   00000128   2030               ADDS     R0,R0,#+32
   \   0000012A   ........           BL       Label
   \   0000012E   06B0               ADD      SP,SP,#+24
   6693                            Label(txt,0,27,66,10,34,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000130   82B0               SUB      SP,SP,#+8
   \   00000132   0020               MOVS     R0,#+0
   \   00000134   0090               STR      R0,[SP, #+0]
   \   00000136   7F21               MOVS     R1,#+127
   \   00000138   0120               MOVS     R0,#+1
   \   0000013A   03B4               PUSH     {R0,R1}
   \   0000013C   2221               MOVS     R1,#+34
   \   0000013E   0A20               MOVS     R0,#+10
   \   00000140   03B4               PUSH     {R0,R1}
   \   00000142   4223               MOVS     R3,#+66
   \   00000144   1B22               MOVS     R2,#+27
   \   00000146   0021               MOVS     R1,#+0
   \   00000148   06A8               ADD      R0,SP,#+24
   \   0000014A   ........           BL       Label
   \   0000014E   06B0               ADD      SP,SP,#+24
   6694                                         
   6695                            sprintf(txt, "%d", Sent);
   \   00000150   2200               MOVS     R2,R4
   \   00000152   2900               MOVS     R1,R5
   \   00000154   6846               MOV      R0,SP
   \   00000156   ........           BL       sprintf
   6696                            Label("Wys:",0,3,75,10,30,1,127,0); 
   \   0000015A   82B0               SUB      SP,SP,#+8
   \   0000015C   0020               MOVS     R0,#+0
   \   0000015E   0090               STR      R0,[SP, #+0]
   \   00000160   7F21               MOVS     R1,#+127
   \   00000162   0120               MOVS     R0,#+1
   \   00000164   03B4               PUSH     {R0,R1}
   \   00000166   1E21               MOVS     R1,#+30
   \   00000168   0A20               MOVS     R0,#+10
   \   0000016A   03B4               PUSH     {R0,R1}
   \   0000016C   4B23               MOVS     R3,#+75
   \   0000016E   0322               MOVS     R2,#+3
   \   00000170   0021               MOVS     R1,#+0
   \   00000172   3000               MOVS     R0,R6
   \   00000174   2830               ADDS     R0,R0,#+40
   \   00000176   ........           BL       Label
   \   0000017A   06B0               ADD      SP,SP,#+24
   6697                            Label(txt,0,27,75,10,34,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000017C   82B0               SUB      SP,SP,#+8
   \   0000017E   0020               MOVS     R0,#+0
   \   00000180   0090               STR      R0,[SP, #+0]
   \   00000182   7F21               MOVS     R1,#+127
   \   00000184   0120               MOVS     R0,#+1
   \   00000186   03B4               PUSH     {R0,R1}
   \   00000188   2221               MOVS     R1,#+34
   \   0000018A   0A20               MOVS     R0,#+10
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   4B23               MOVS     R3,#+75
   \   00000190   1B22               MOVS     R2,#+27
   \   00000192   0021               MOVS     R1,#+0
   \   00000194   06A8               ADD      R0,SP,#+24
   \   00000196   ........           BL       Label
   \   0000019A   06B0               ADD      SP,SP,#+24
   6698                            
   6699                            Button("We/Wy",3,51,58,15);
   \   0000019C   82B0               SUB      SP,SP,#+8
   \   0000019E   0F20               MOVS     R0,#+15
   \   000001A0   0090               STR      R0,[SP, #+0]
   \   000001A2   3A23               MOVS     R3,#+58
   \   000001A4   3322               MOVS     R2,#+51
   \   000001A6   0321               MOVS     R1,#+3
   \   000001A8   3000               MOVS     R0,R6
   \   000001AA   ........           BL       Button
   \   000001AE   02B0               ADD      SP,SP,#+8
   6700                            Button("We analog.",3,35,58,15);
   \   000001B0   82B0               SUB      SP,SP,#+8
   \   000001B2   0F20               MOVS     R0,#+15
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   3A23               MOVS     R3,#+58
   \   000001B8   2322               MOVS     R2,#+35
   \   000001BA   0321               MOVS     R1,#+3
   \   000001BC   3000               MOVS     R0,R6
   \   000001BE   0830               ADDS     R0,R0,#+8
   \   000001C0   ........           BL       Button
   \   000001C4   02B0               ADD      SP,SP,#+8
   6701                            Button("Test MG1",3,19,58,15);
   \   000001C6   82B0               SUB      SP,SP,#+8
   \   000001C8   0F20               MOVS     R0,#+15
   \   000001CA   0090               STR      R0,[SP, #+0]
   \   000001CC   3A23               MOVS     R3,#+58
   \   000001CE   1322               MOVS     R2,#+19
   \   000001D0   0321               MOVS     R1,#+3
   \   000001D2   3000               MOVS     R0,R6
   \   000001D4   1430               ADDS     R0,R0,#+20
   \   000001D6   ........           BL       Button
   \   000001DA   02B0               ADD      SP,SP,#+8
   6702                            Button("Test MR1.",3,3,58,15);
   \   000001DC   82B0               SUB      SP,SP,#+8
   \   000001DE   0F20               MOVS     R0,#+15
   \   000001E0   0090               STR      R0,[SP, #+0]
   \   000001E2   3A23               MOVS     R3,#+58
   \   000001E4   0322               MOVS     R2,#+3
   \   000001E6   1100               MOVS     R1,R2
   \   000001E8   3036               ADDS     R6,R6,#+48
   \   000001EA   3000               MOVS     R0,R6
   \   000001EC   ........           BL       Button
   \   000001F0   02B0               ADD      SP,SP,#+8
   \   000001F2   03E0               B        ??CheckingModule_Refresh_2
   6703                            
   6704                        }else{           
   6705                           
   6706                          RF_NodeTest.Sent=0;
   \                     ??CheckingModule_Refresh_13:
   \   000001F4   0021               MOVS     R1,#+0
   \   000001F6   4160               STR      R1,[R0, #+4]
   6707                          RF_NodeTest.SentSyn=0;   
   \   000001F8   8160               STR      R1,[R0, #+8]
   6708                          RF_NodeTest.Recived=0;
   \   000001FA   C160               STR      R1,[R0, #+12]
   \                     ??CheckingModule_Refresh_2:
   \   000001FC   05B0               ADD      SP,SP,#+20
   \   000001FE   F0BC               POP      {R4-R7}
   \   00000200   01BC               POP      {R0}
   \   00000202   0047               BX       R0               ;; return
   \                     ??CheckingModule_Refresh_0:
   \   00000204   ........           DC32     ??Dziel5_1
   \   00000208   ........           DC32     TransQuality + 76
   \   0000020C   ........           DC32     RF_NodeTest
   \   00000210   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000214   ........           DC32     `?<Constant "We/Wy">`
   6709                        }
   6710          
   6711                                
   6712                 }
   6713                
   6714                
   6715                
   6716           
   6717                
   6718                
   6719                
   6720                
   6721                      
   6722                
   6723                
   6724                
   6725                
   6726          
   6727          //Ustawienia ******************************************************************************************************************
   6728          char RF_Channel_nr_tmp;
   6729          
   6730          
   6731                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6732                void Setup_Paint(void)
   6733                {  
   \                     Setup_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   6734                   if (!SlaveMode) 
   \   00000002   3048               LDR      R0,??Setup_Paint_0  ;; SlaveMode
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   2F48               LDR      R0,??Setup_Paint_0+0x4  ;; g_leng
   \   0000000A   0068               LDR      R0,[R0, #+0]
   \   0000000C   21D1               BNE      ??Setup_Paint_1
   6735                    {
   6736                      List_Paint(Speech[g_leng].Ustawienia,7,13,0,0,0,Speech[g_leng].Jezyk,Speech[g_leng].DataCzas,Speech[g_leng].Hasla,Speech[g_leng].Ekran,Speech[g_leng].Dzwiek, "Master/Slave ", Speech[g_leng].RfChannel,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000E   2F49               LDR      R1,??Setup_Paint_0+0x8  ;; 0xa7d
   \   00000010   4843               MULS     R0,R1,R0
   \   00000012   2F49               LDR      R1,??Setup_Paint_0+0xC  ;; Speech
   \   00000014   0C18               ADDS     R4,R1,R0
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   2E48               LDR      R0,??Setup_Paint_0+0x10  ;; 0x645
   \   0000001A   2018               ADDS     R0,R4,R0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   2E49               LDR      R1,??Setup_Paint_0+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5` + 12
   \   00000020   2E48               LDR      R0,??Setup_Paint_0+0x18  ;; 0x6cc
   \   00000022   2018               ADDS     R0,R4,R0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   2E48               LDR      R0,??Setup_Paint_0+0x1C  ;; 0x4dd
   \   00000028   2118               ADDS     R1,R4,R0
   \   0000002A   2000               MOVS     R0,R4
   \   0000002C   C330               ADDS     R0,R0,#+195
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   2100               MOVS     R1,R4
   \   00000032   B431               ADDS     R1,R1,#+180
   \   00000034   2000               MOVS     R0,R4
   \   00000036   6930               ADDS     R0,R0,#+105
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   0800               MOVS     R0,R1
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   0300               MOVS     R3,R0
   \   00000042   0D22               MOVS     R2,#+13
   \   00000044   0721               MOVS     R1,#+7
   \   00000046   3C34               ADDS     R4,R4,#+60
   \   00000048   2000               MOVS     R0,R4
   \   0000004A   ........           BL       List_Paint
   \   0000004E   0AB0               ADD      SP,SP,#+40
   \   00000050   1FE0               B        ??Setup_Paint_2
   6737                    }else{
   6738                      List_Paint(Speech[g_leng].Ustawienia,6,13,0,0,0,Speech[g_leng].Jezyk,Speech[g_leng].DataCzas,Speech[g_leng].Hasla,Speech[g_leng].Ekran, Speech[g_leng].Dzwiek,"Master/Slave ",0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Setup_Paint_1:
   \   00000052   1E49               LDR      R1,??Setup_Paint_0+0x8  ;; 0xa7d
   \   00000054   4843               MULS     R0,R1,R0
   \   00000056   1E49               LDR      R1,??Setup_Paint_0+0xC  ;; Speech
   \   00000058   0C18               ADDS     R4,R1,R0
   \   0000005A   0021               MOVS     R1,#+0
   \   0000005C   0800               MOVS     R0,R1
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   1D49               LDR      R1,??Setup_Paint_0+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5` + 12
   \   00000062   1E48               LDR      R0,??Setup_Paint_0+0x18  ;; 0x6cc
   \   00000064   2018               ADDS     R0,R4,R0
   \   00000066   03B4               PUSH     {R0,R1}
   \   00000068   1D48               LDR      R0,??Setup_Paint_0+0x1C  ;; 0x4dd
   \   0000006A   2118               ADDS     R1,R4,R0
   \   0000006C   2000               MOVS     R0,R4
   \   0000006E   C330               ADDS     R0,R0,#+195
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   2100               MOVS     R1,R4
   \   00000074   B431               ADDS     R1,R1,#+180
   \   00000076   2000               MOVS     R0,R4
   \   00000078   6930               ADDS     R0,R0,#+105
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0021               MOVS     R1,#+0
   \   0000007E   0800               MOVS     R0,R1
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   0300               MOVS     R3,R0
   \   00000084   0D22               MOVS     R2,#+13
   \   00000086   0621               MOVS     R1,#+6
   \   00000088   3C34               ADDS     R4,R4,#+60
   \   0000008A   2000               MOVS     R0,R4
   \   0000008C   ........           BL       List_Paint
   \   00000090   0AB0               ADD      SP,SP,#+40
   6739                    }
   6740                    RF_Channel_nr_tmp=RF_Status.Ch;
   \                     ??Setup_Paint_2:
   \   00000092   1448               LDR      R0,??Setup_Paint_0+0x20  ;; RF_Channel_nr_tmp
   \   00000094   1449               LDR      R1,??Setup_Paint_0+0x24  ;; RF_Status + 13
   \   00000096   0978               LDRB     R1,[R1, #+0]
   \   00000098   0170               STRB     R1,[R0, #+0]
   6741                   
   6742                   //znacznik dzwieku
   6743                   if (!(AT91C_IFLASH_MEM->Config.SoundOff))
   \   0000009A   1448               LDR      R0,??Setup_Paint_0+0x28  ;; 0x13d7e9
   \   0000009C   0078               LDRB     R0,[R0, #+0]
   \   0000009E   0028               CMP      R0,#+0
   \   000000A0   0DD1               BNE      ??Setup_Paint_3
   6744                        {
   6745                              
   6746                          char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   000000A2   6846               MOV      R0,SP
   \   000000A4   1249               LDR      R1,??Setup_Paint_0+0x2C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`
   \   000000A6   1CC9               LDM      R1!,{R2-R4}
   \   000000A8   1CC0               STM      R0!,{R2-R4}
   6747                          CopyToCanvasPoint((char *)ekran_tab,45,99-(13*(4)),8,10); 
   \   000000AA   82B0               SUB      SP,SP,#+8
   \   000000AC   0A20               MOVS     R0,#+10
   \   000000AE   0090               STR      R0,[SP, #+0]
   \   000000B0   0823               MOVS     R3,#+8
   \   000000B2   2F22               MOVS     R2,#+47
   \   000000B4   2D21               MOVS     R1,#+45
   \   000000B6   02A8               ADD      R0,SP,#+8
   \   000000B8   ........           BL       CopyToCanvasPoint
   \   000000BC   02B0               ADD      SP,SP,#+8
   6748                        }
   6749                }//________________________________________________________________________
   \                     ??Setup_Paint_3:
   \   000000BE   1FBC               POP      {R0-R4}
   \   000000C0   01BC               POP      {R0}
   \   000000C2   0047               BX       R0               ;; return
   \                     ??Setup_Paint_0:
   \   000000C4   ........           DC32     SlaveMode
   \   000000C8   ........           DC32     g_leng
   \   000000CC   7D0A0000           DC32     0xa7d
   \   000000D0   ........           DC32     Speech
   \   000000D4   45060000           DC32     0x645
   \   000000D8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5` + 12
   \   000000DC   CC060000           DC32     0x6cc
   \   000000E0   DD040000           DC32     0x4dd
   \   000000E4   ........           DC32     RF_Channel_nr_tmp
   \   000000E8   ........           DC32     RF_Status + 13
   \   000000EC   E9D71300           DC32     0x13d7e9
   \   000000F0   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`
   6750          
   6751          
   6752          
   6753                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6754                void Setup_Event(void)
   6755                {
   \                     Setup_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6756                  int ans;
   6757                  char repaint=0;
   \   00000002   0024               MOVS     R4,#+0
   6758                  if (!SlaveMode) 
   \   00000004   2E48               LDR      R0,??Setup_Event_0  ;; SlaveMode
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   12D1               BNE      ??Setup_Event_1
   6759                    {
   6760                      ans=List_Event(X_up, Y_up, X_down, Y_down, 7 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000C   2100               MOVS     R1,R4
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0D21               MOVS     R1,#+13
   \   00000012   0720               MOVS     R0,#+7
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   2B48               LDR      R0,??Setup_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   435E               LDRSH    R3,[R0, R1]
   \   0000001C   2A48               LDR      R0,??Setup_Event_0+0x8  ;; X_down
   \   0000001E   425E               LDRSH    R2,[R0, R1]
   \   00000020   2A48               LDR      R0,??Setup_Event_0+0xC  ;; Y_up
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   2A48               LDR      R0,??Setup_Event_0+0x10  ;; X_up
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   405F               LDRSH    R0,[R0, R5]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   12E0               B        ??Setup_Event_2
   6761                    }else{
   6762                      ans=List_Event(X_up, Y_up, X_down, Y_down, 6 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??Setup_Event_1:
   \   00000032   2100               MOVS     R1,R4
   \   00000034   0800               MOVS     R0,R1
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0D21               MOVS     R1,#+13
   \   0000003A   0620               MOVS     R0,#+6
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   2148               LDR      R0,??Setup_Event_0+0x4  ;; Y_down
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   435E               LDRSH    R3,[R0, R1]
   \   00000044   2048               LDR      R0,??Setup_Event_0+0x8  ;; X_down
   \   00000046   425E               LDRSH    R2,[R0, R1]
   \   00000048   2048               LDR      R0,??Setup_Event_0+0xC  ;; Y_up
   \   0000004A   415E               LDRSH    R1,[R0, R1]
   \   0000004C   2048               LDR      R0,??Setup_Event_0+0x10  ;; X_up
   \   0000004E   0025               MOVS     R5,#+0
   \   00000050   405F               LDRSH    R0,[R0, R5]
   \   00000052   ........           BL       List_Event
   \   00000056   04B0               ADD      SP,SP,#+16
   6763                    }
   6764                  if (ans>0)
   \                     ??Setup_Event_2:
   \   00000058   0128               CMP      R0,#+1
   \   0000005A   21DB               BLT      ??Setup_Event_3
   6765                    {
   6766                      repaint=1;
   \   0000005C   0124               MOVS     R4,#+1
   6767                    if (ans!=5) MenuLevel=(MenuLevel*10+ans);
   \   0000005E   0528               CMP      R0,#+5
   \   00000060   05D0               BEQ      ??Setup_Event_4
   \   00000062   1C4D               LDR      R5,??Setup_Event_0+0x14  ;; TextToChangeLength
   \   00000064   296D               LDR      R1,[R5, #+80]
   \   00000066   0A22               MOVS     R2,#+10
   \   00000068   5143               MULS     R1,R2,R1
   \   0000006A   0918               ADDS     R1,R1,R0
   \   0000006C   2965               STR      R1,[R5, #+80]
   6768                    if (ans==5)
   \                     ??Setup_Event_4:
   \   0000006E   0528               CMP      R0,#+5
   \   00000070   1FD1               BNE      ??Setup_Event_5
   6769                    {
   6770                      char SoundOff;
   6771                      if (AT91C_IFLASH_MEM->Config.SoundOff)
   \   00000072   194B               LDR      R3,??Setup_Event_0+0x18  ;; 0x13d7e9
   \   00000074   6846               MOV      R0,SP
   \   00000076   1978               LDRB     R1,[R3, #+0]
   \   00000078   4A1E               SUBS     R2,R1,#+1
   \   0000007A   9241               SBCS     R2,R2,R2
   \   0000007C   D20F               LSRS     R2,R2,#+31
   \   0000007E   0270               STRB     R2,[R0, #+0]
   6772                        {
   6773                          SoundOff=0;
   6774                        }else{
   6775                          SoundOff=1; 
   6776                        }
   6777                      
   6778                      //zapis do flash
   6779                        unsigned int Save = __get_interrupt_state();  
   \   00000080   ........           BL       __iar_get_interrupt_state
   \   00000084   0500               MOVS     R5,R0
   6780                        __disable_interrupt();
   \   00000086   ........           BL       __iar_disable_interrupt
   6781                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.SoundOff)), (char*) (&(SoundOff)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000008A   2200               MOVS     R2,R4
   \   0000008C   6946               MOV      R1,SP
   \   0000008E   1800               MOVS     R0,R3
   \   00000090   ........           BL       FlashWrite
   6782                        __set_interrupt_state(Save);
   \   00000094   2800               MOVS     R0,R5
   \   00000096   ........           BL       __iar_set_interrupt_state
   6783                        __enable_interrupt();
   \   0000009A   ........           BL       __iar_enable_interrupt
   \   0000009E   08E0               B        ??Setup_Event_5
   6784                        //koniec zapisu do flash
   6785                       
   6786                    }
   6787                    
   6788                    }else if (ans<0){
   \                     ??Setup_Event_3:
   \   000000A0   0028               CMP      R0,#+0
   \   000000A2   06D5               BPL      ??Setup_Event_5
   6789                      MenuLevel=(MenuLevel/10);
   \   000000A4   0B4D               LDR      R5,??Setup_Event_0+0x14  ;; TextToChangeLength
   \   000000A6   286D               LDR      R0,[R5, #+80]
   \   000000A8   0A21               MOVS     R1,#+10
   \   000000AA   ........           BL       __aeabi_idivmod
   \   000000AE   2865               STR      R0,[R5, #+80]
   6790                      repaint=1;
   \   000000B0   0124               MOVS     R4,#+1
   6791                    } 
   6792                  
   6793                   if (repaint) MenuPaint();
   \                     ??Setup_Event_5:
   \   000000B2   002C               CMP      R4,#+0
   \   000000B4   01D0               BEQ      ??Setup_Event_6
   \   000000B6   ........           BL       MenuPaint
   6794                }//_______________________________________________________________________
   \                     ??Setup_Event_6:
   \   000000BA   38BC               POP      {R3-R5}
   \   000000BC   01BC               POP      {R0}
   \   000000BE   0047               BX       R0               ;; return
   \                     ??Setup_Event_0:
   \   000000C0   ........           DC32     SlaveMode
   \   000000C4   ........           DC32     Y_down
   \   000000C8   ........           DC32     X_down
   \   000000CC   ........           DC32     Y_up
   \   000000D0   ........           DC32     X_up
   \   000000D4   ........           DC32     TextToChangeLength
   \   000000D8   E9D71300           DC32     0x13d7e9
   6795          
   6796          
   6797          
   6798          //Ustawienia jêzyka******************************************************************************************************************
   6799          
   6800                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6801                void SetupLang_Paint(void)
   6802                {  
   \                     SetupLang_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   6803                    //char Y=3;
   6804                    int Y_tmp = 3;   //przesuniêcie w dó³
   6805          
   6806                    List_Paint("Jezyk",2,15,Y_tmp,7,0,Speech[g_leng].Polski, Speech[g_leng].Angielski,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   194C               LDR      R4,??SetupLang_Paint_0  ;; g_leng
   \   00000004   2068               LDR      R0,[R4, #+0]
   \   00000006   1949               LDR      R1,??SetupLang_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1949               LDR      R1,??SetupLang_Paint_0+0x8  ;; Speech
   \   0000000C   0A18               ADDS     R2,R1,R0
   \   0000000E   194D               LDR      R5,??SetupLang_Paint_0+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   1100               MOVS     R1,R2
   \   0000001C   E131               ADDS     R1,R1,#+225
   \   0000001E   D232               ADDS     R2,R2,#+210
   \   00000020   1000               MOVS     R0,R2
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   0720               MOVS     R0,#+7
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   0323               MOVS     R3,#+3
   \   0000002C   0F22               MOVS     R2,#+15
   \   0000002E   0221               MOVS     R1,#+2
   \   00000030   2800               MOVS     R0,R5
   \   00000032   0C30               ADDS     R0,R0,#+12
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   6807                
   6808                    
   6809                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000003A   6846               MOV      R0,SP
   \   0000003C   0ECD               LDM      R5!,{R1-R3}
   \   0000003E   0EC0               STM      R0!,{R1-R3}
   6810                 
   6811                  
   6812                    CopyToCanvasPoint((char *)ekran_tab,45,97-Y_tmp-(15*(g_leng)),8,10); 
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   0A20               MOVS     R0,#+10
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   0823               MOVS     R3,#+8
   \   00000048   5E20               MOVS     R0,#+94
   \   0000004A   2168               LDR      R1,[R4, #+0]
   \   0000004C   0F22               MOVS     R2,#+15
   \   0000004E   5143               MULS     R1,R2,R1
   \   00000050   421A               SUBS     R2,R0,R1
   \   00000052   1206               LSLS     R2,R2,#+24
   \   00000054   120E               LSRS     R2,R2,#+24
   \   00000056   2D21               MOVS     R1,#+45
   \   00000058   02A8               ADD      R0,SP,#+8
   \   0000005A   ........           BL       CopyToCanvasPoint
   \   0000005E   02B0               ADD      SP,SP,#+8
   6813                    
   6814                }//________________________________________________________________________
   \   00000060   3EBC               POP      {R1-R5}
   \   00000062   01BC               POP      {R0}
   \   00000064   0047               BX       R0               ;; return
   \   00000066   C046               Nop      
   \                     ??SetupLang_Paint_0:
   \   00000068   ........           DC32     g_leng
   \   0000006C   7D0A0000           DC32     0xa7d
   \   00000070   ........           DC32     Speech
   \   00000074   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`
   6815          
   6816          
   6817          
   6818                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6819                void SetupLang_Event(void)
   6820                {
   \                     SetupLang_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6821                  int ans;
   6822           
   6823                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 7,3); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1B4C               LDR      R4,??SetupLang_Event_0  ;; X_up
   \   00000004   1B4D               LDR      R5,??SetupLang_Event_0+0x4  ;; Y_up
   \   00000006   0321               MOVS     R1,#+3
   \   00000008   0720               MOVS     R0,#+7
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0220               MOVS     R0,#+2
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   1948               LDR      R0,??SetupLang_Event_0+0x8  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   1848               LDR      R0,??SetupLang_Event_0+0xC  ;; X_down
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   295E               LDRSH    R1,[R5, R0]
   \   00000020   205E               LDRSH    R0,[R4, R0]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   6824            
   6825                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0FD0               BEQ      ??SetupLang_Event_1
   6826                    {
   6827                      if ((ans>0) && (ans<3))
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   1CDB               BLT      ??SetupLang_Event_2
   \   00000030   0328               CMP      R0,#+3
   \   00000032   1ADA               BGE      ??SetupLang_Event_2
   6828                      {
   6829                        g_leng=ans-1;
   \   00000034   1249               LDR      R1,??SetupLang_Event_0+0x10  ;; g_leng
   \   00000036   401E               SUBS     R0,R0,#+1
   \   00000038   0860               STR      R0,[R1, #+0]
   6830                        MenuLevel=(MenuLevel/10);
   \   0000003A   124C               LDR      R4,??SetupLang_Event_0+0x14  ;; TextToChangeLength
   \   0000003C   206D               LDR      R0,[R4, #+80]
   \   0000003E   0A21               MOVS     R1,#+10
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   2065               STR      R0,[R4, #+80]
   6831                        MenuPaint();
   \   00000046   ........           BL       MenuPaint
   \   0000004A   0EE0               B        ??SetupLang_Event_2
   6832                      }
   6833                    } 
   6834                  else
   6835                    {
   6836                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??SetupLang_Event_1:
   \   0000004C   205E               LDRSH    R0,[R4, R0]
   \   0000004E   0128               CMP      R0,#+1
   \   00000050   0BDB               BLT      ??SetupLang_Event_2
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   285E               LDRSH    R0,[R5, R0]
   \   00000056   0128               CMP      R0,#+1
   \   00000058   07DB               BLT      ??SetupLang_Event_2
   6837                      {
   6838                        MenuLevel=(MenuLevel/10);
   \   0000005A   0A4C               LDR      R4,??SetupLang_Event_0+0x14  ;; TextToChangeLength
   \   0000005C   206D               LDR      R0,[R4, #+80]
   \   0000005E   0A21               MOVS     R1,#+10
   \   00000060   ........           BL       __aeabi_idivmod
   \   00000064   2065               STR      R0,[R4, #+80]
   6839                        MenuPaint();
   \   00000066   ........           BL       MenuPaint
   6840                      }
   6841                    }
   6842                }//_______________________________________________________________________
   \                     ??SetupLang_Event_2:
   \   0000006A   38BC               POP      {R3-R5}
   \   0000006C   01BC               POP      {R0}
   \   0000006E   0047               BX       R0               ;; return
   \                     ??SetupLang_Event_0:
   \   00000070   ........           DC32     X_up
   \   00000074   ........           DC32     Y_up
   \   00000078   ........           DC32     Y_down
   \   0000007C   ........           DC32     X_down
   \   00000080   ........           DC32     g_leng
   \   00000084   ........           DC32     TextToChangeLength
   6843          
   6844          
   6845          
   6846          
   6847          
   6848          
   6849          
   6850          //Ustawienia hasla wybór poziomu******************************************************************************************************************
   6851          
   6852                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6853                void SetupPass_Paint(void)
   6854                {  
   \                     SetupPass_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   6855          
   6856            
   6857                     
   6858                    if (g_NeedPass==1)
   \   00000002   2448               LDR      R0,??SetupPass_Paint_0  ;; g_NeedPass
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   2348               LDR      R0,??SetupPass_Paint_0+0x4  ;; g_leng
   \   0000000A   0068               LDR      R0,[R0, #+0]
   \   0000000C   28D1               BNE      ??SetupPass_Paint_1
   6859                    {
   6860                      List_Paint(Speech[g_leng].Hasla     ,2,15,10,0,0,Speech[g_leng].HasloWl, Speech[g_leng].ZmHasla,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000E   2349               LDR      R1,??SetupPass_Paint_0+0x8  ;; 0xa7d
   \   00000010   4843               MULS     R0,R1,R0
   \   00000012   2349               LDR      R1,??SetupPass_Paint_0+0xC  ;; Speech
   \   00000014   0C18               ADDS     R4,R1,R0
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0800               MOVS     R0,R1
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   FF20               MOVS     R0,#+255
   \   00000022   1E30               ADDS     R0,R0,#+30       ;; #+285
   \   00000024   2118               ADDS     R1,R4,R0
   \   00000026   1F48               LDR      R0,??SetupPass_Paint_0+0x10  ;; 0x555
   \   00000028   2018               ADDS     R0,R4,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   0800               MOVS     R0,R1
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0A23               MOVS     R3,#+10
   \   00000034   0F22               MOVS     R2,#+15
   \   00000036   0221               MOVS     R1,#+2
   \   00000038   C334               ADDS     R4,R4,#+195
   \   0000003A   2000               MOVS     R0,R4
   \   0000003C   ........           BL       List_Paint
   \   00000040   0AB0               ADD      SP,SP,#+40
   6861                      char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};  
   \   00000042   6846               MOV      R0,SP
   \   00000044   1849               LDR      R1,??SetupPass_Paint_0+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`
   \   00000046   1CC9               LDM      R1!,{R2-R4}
   \   00000048   1CC0               STM      R0!,{R2-R4}
   6862                      CopyToCanvasPoint((char *)ekran_tab,50,97-(10),8,10); 
   \   0000004A   82B0               SUB      SP,SP,#+8
   \   0000004C   0A20               MOVS     R0,#+10
   \   0000004E   0090               STR      R0,[SP, #+0]
   \   00000050   0823               MOVS     R3,#+8
   \   00000052   5722               MOVS     R2,#+87
   \   00000054   3221               MOVS     R1,#+50
   \   00000056   02A8               ADD      R0,SP,#+8
   \   00000058   ........           BL       CopyToCanvasPoint
   \   0000005C   02B0               ADD      SP,SP,#+8
   \   0000005E   15E0               B        ??SetupPass_Paint_2
   6863                    }else
   6864                    {
   6865                      List_Paint(Speech[g_leng].Hasla     ,1,15,10,0,0,Speech[g_leng].HasloWl, 0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12]) 
   \                     ??SetupPass_Paint_1:
   \   00000060   0E49               LDR      R1,??SetupPass_Paint_0+0x8  ;; 0xa7d
   \   00000062   4843               MULS     R0,R1,R0
   \   00000064   0E49               LDR      R1,??SetupPass_Paint_0+0xC  ;; Speech
   \   00000066   0C18               ADDS     R4,R1,R0
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   0800               MOVS     R0,R1
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   0C48               LDR      R0,??SetupPass_Paint_0+0x10  ;; 0x555
   \   00000074   2018               ADDS     R0,R4,R0
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   0800               MOVS     R0,R1
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0A23               MOVS     R3,#+10
   \   0000007E   0F22               MOVS     R2,#+15
   \   00000080   0121               MOVS     R1,#+1
   \   00000082   C334               ADDS     R4,R4,#+195
   \   00000084   2000               MOVS     R0,R4
   \   00000086   ........           BL       List_Paint
   \   0000008A   0AB0               ADD      SP,SP,#+40
   6866                    }
   6867                  
   6868                }//________________________________________________________________________
   \                     ??SetupPass_Paint_2:
   \   0000008C   1FBC               POP      {R0-R4}
   \   0000008E   01BC               POP      {R0}
   \   00000090   0047               BX       R0               ;; return
   \   00000092   C046               Nop      
   \                     ??SetupPass_Paint_0:
   \   00000094   ........           DC32     g_NeedPass
   \   00000098   ........           DC32     g_leng
   \   0000009C   7D0A0000           DC32     0xa7d
   \   000000A0   ........           DC32     Speech
   \   000000A4   55050000           DC32     0x555
   \   000000A8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`
   6869          
   6870          
   6871          
   6872                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6873                void SetupPass_Event(void)
   6874                {
   \                     SetupPass_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6875                  int ans;
   6876          
   6877                  if (g_NeedPass==1)
   \   00000002   3C4D               LDR      R5,??SetupPass_Event_0  ;; g_NeedPass
   \   00000004   2878               LDRB     R0,[R5, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   14D1               BNE      ??SetupPass_Event_1
   6878                    {  
   6879                      ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,10); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000A   0A21               MOVS     R1,#+10
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   0220               MOVS     R0,#+2
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   3848               LDR      R0,??SetupPass_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   435E               LDRSH    R3,[R0, R1]
   \   0000001C   3748               LDR      R0,??SetupPass_Event_0+0x8  ;; X_down
   \   0000001E   425E               LDRSH    R2,[R0, R1]
   \   00000020   3748               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   3748               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   00000026   0024               MOVS     R4,#+0
   \   00000028   005F               LDRSH    R0,[R0, R4]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0400               MOVS     R4,R0
   \   00000032   13E0               B        ??SetupPass_Event_2
   6880                    }else{
   6881                      ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 15, 0,10); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??SetupPass_Event_1:
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0F21               MOVS     R1,#+15
   \   0000003C   0120               MOVS     R0,#+1
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   2D48               LDR      R0,??SetupPass_Event_0+0x4  ;; Y_down
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   435E               LDRSH    R3,[R0, R1]
   \   00000046   2D48               LDR      R0,??SetupPass_Event_0+0x8  ;; X_down
   \   00000048   425E               LDRSH    R2,[R0, R1]
   \   0000004A   2D48               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   0000004C   415E               LDRSH    R1,[R0, R1]
   \   0000004E   2D48               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   00000050   0024               MOVS     R4,#+0
   \   00000052   005F               LDRSH    R0,[R0, R4]
   \   00000054   ........           BL       List_Event
   \   00000058   04B0               ADD      SP,SP,#+16
   \   0000005A   0400               MOVS     R4,R0
   6882                    }
   6883                  
   6884                  if (ans)          {
   \                     ??SetupPass_Event_2:
   \   0000005C   002C               CMP      R4,#+0
   \   0000005E   33D0               BEQ      ??SetupPass_Event_3
   6885                      if (ans==1)
   \   00000060   012C               CMP      R4,#+1
   \   00000062   27D1               BNE      ??SetupPass_Event_4
   6886                      
   6887                        
   6888                      if (g_NeedPass) 
   \   00000064   2878               LDRB     R0,[R5, #+0]
   \   00000066   0028               CMP      R0,#+0
   \   00000068   12D0               BEQ      ??SetupPass_Event_5
   6889                      {
   6890                        char NeedPassFlag=0xEC;
   \   0000006A   6846               MOV      R0,SP
   \   0000006C   EC21               MOVS     R1,#+236
   \   0000006E   0170               STRB     R1,[R0, #+0]
   6891                        g_NeedPass=0; 
   \   00000070   0020               MOVS     R0,#+0
   \   00000072   2870               STRB     R0,[R5, #+0]
   6892                        //zapis do flash
   6893                        unsigned int Save = __get_interrupt_state();  
   \   00000074   ........           BL       __iar_get_interrupt_state
   \   00000078   0500               MOVS     R5,R0
   6894                        __disable_interrupt();
   \   0000007A   ........           BL       __iar_disable_interrupt
   6895                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.NeedPass1)), (char*) (&(NeedPassFlag)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000007E   0122               MOVS     R2,#+1
   \   00000080   6946               MOV      R1,SP
   \   00000082   2148               LDR      R0,??SetupPass_Event_0+0x14  ;; 0x13d7dc
   \   00000084   ........           BL       FlashWrite
   6896                        __set_interrupt_state(Save);
   \   00000088   2800               MOVS     R0,R5
   \   0000008A   ........           BL       __iar_set_interrupt_state
   \   0000008E   11E0               B        ??SetupPass_Event_4
   6897                        //koniec zapisu do flash
   6898                      }else
   6899                      {
   6900                        g_NeedPass=1;
   \                     ??SetupPass_Event_5:
   \   00000090   0120               MOVS     R0,#+1
   \   00000092   2870               STRB     R0,[R5, #+0]
   6901                        char NeedPassFlag=0xEB;
   \   00000094   6846               MOV      R0,SP
   \   00000096   EB21               MOVS     R1,#+235
   \   00000098   0170               STRB     R1,[R0, #+0]
   6902                        //zapis do flash
   6903                        unsigned int Save = __get_interrupt_state();  
   \   0000009A   ........           BL       __iar_get_interrupt_state
   \   0000009E   0500               MOVS     R5,R0
   6904                        __disable_interrupt();
   \   000000A0   ........           BL       __iar_disable_interrupt
   6905                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.NeedPass1)), (char*) (&(NeedPassFlag)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000A4   0122               MOVS     R2,#+1
   \   000000A6   6946               MOV      R1,SP
   \   000000A8   1748               LDR      R0,??SetupPass_Event_0+0x14  ;; 0x13d7dc
   \   000000AA   ........           BL       FlashWrite
   6906                        __set_interrupt_state(Save);
   \   000000AE   2800               MOVS     R0,R5
   \   000000B0   ........           BL       __iar_set_interrupt_state
   6907                        //koniec zapisu do flash
   6908                      }
   6909                       
   6910                    
   6911                      if (ans==2)
   \                     ??SetupPass_Event_4:
   \   000000B4   022C               CMP      R4,#+2
   \   000000B6   05D1               BNE      ??SetupPass_Event_6
   6912                      {
   6913                         MenuLevel=(MenuLevel*10+1);
   \   000000B8   144D               LDR      R5,??SetupPass_Event_0+0x18  ;; TextToChangeLength
   \   000000BA   286D               LDR      R0,[R5, #+80]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   4843               MULS     R0,R1,R0
   \   000000C0   401C               ADDS     R0,R0,#+1
   \   000000C2   2865               STR      R0,[R5, #+80]
   6914                      }
   6915                      
   6916                      
   6917                      MenuPaint();
   \                     ??SetupPass_Event_6:
   \   000000C4   ........           BL       MenuPaint
   6918                    }
   6919                    if (ans<0)
   \                     ??SetupPass_Event_3:
   \   000000C8   002C               CMP      R4,#+0
   \   000000CA   10D5               BPL      ??SetupPass_Event_7
   6920                    {
   6921                      if ((X_up>0) &&(Y_up>0)) 
   \   000000CC   0D48               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   405E               LDRSH    R0,[R0, R1]
   \   000000D2   0128               CMP      R0,#+1
   \   000000D4   0BDB               BLT      ??SetupPass_Event_7
   \   000000D6   0A48               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   000000D8   405E               LDRSH    R0,[R0, R1]
   \   000000DA   0128               CMP      R0,#+1
   \   000000DC   07DB               BLT      ??SetupPass_Event_7
   6922                      {
   6923                        MenuLevel=(MenuLevel/10);
   \   000000DE   0B4D               LDR      R5,??SetupPass_Event_0+0x18  ;; TextToChangeLength
   \   000000E0   286D               LDR      R0,[R5, #+80]
   \   000000E2   0A21               MOVS     R1,#+10
   \   000000E4   ........           BL       __aeabi_idivmod
   \   000000E8   2865               STR      R0,[R5, #+80]
   6924                        MenuPaint();
   \   000000EA   ........           BL       MenuPaint
   6925                      }
   6926                    }
   6927                }//_______________________________________________________________________
   \                     ??SetupPass_Event_7:
   \   000000EE   38BC               POP      {R3-R5}
   \   000000F0   01BC               POP      {R0}
   \   000000F2   0047               BX       R0               ;; return
   \                     ??SetupPass_Event_0:
   \   000000F4   ........           DC32     g_NeedPass
   \   000000F8   ........           DC32     Y_down
   \   000000FC   ........           DC32     X_down
   \   00000100   ........           DC32     Y_up
   \   00000104   ........           DC32     X_up
   \   00000108   DCD71300           DC32     0x13d7dc
   \   0000010C   ........           DC32     TextToChangeLength
   6928          
   6929          
   6930                
   6931          
   6932          
   6933          
   6934          
   6935          //Wpisanie obecnego has³a  poziom 1/2**************************************************************************************************************
   6936                char InsertOldPass1[9]={0,0,0,0,0,0,0,0,0};
   6937              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6938              void SetupOldPass_Paint()
   6939              {  
   \                     SetupOldPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   6940                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   1B4C               LDR      R4,??SetupOldPass_Paint_0  ;; 0xa7d
   \   00000004   1B4D               LDR      R5,??SetupOldPass_Paint_0+0x4  ;; g_leng
   \   00000006   1C4E               LDR      R6,??SetupOldPass_Paint_0+0x8  ;; Speech
   \   00000008   1CA2               ADR      R2,??SetupOldPass_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000A   1DA1               ADR      R1,??SetupOldPass_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000C   FF20               MOVS     R0,#+255
   \   0000000E   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000010   2B68               LDR      R3,[R5, #+0]
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   F318               ADDS     R3,R6,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   6941                    
   6942                    Label(Speech[g_leng].ObecneHaslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   7F21               MOVS     R1,#+127
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   3A21               MOVS     R1,#+58
   \   00000028   0F20               MOVS     R0,#+15
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   6623               MOVS     R3,#+102
   \   0000002E   0322               MOVS     R2,#+3
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   FF20               MOVS     R0,#+255
   \   00000034   7830               ADDS     R0,R0,#+120      ;; #+375
   \   00000036   2D68               LDR      R5,[R5, #+0]
   \   00000038   6543               MULS     R5,R4,R5
   \   0000003A   7419               ADDS     R4,R6,R5
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       Label
   \   00000042   06B0               ADD      SP,SP,#+24
   6943              
   6944                    if (InsertOldPass1[8])  Label(InsertOldPass1,2,4,90,8,55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000044   0F4C               LDR      R4,??SetupOldPass_Paint_0+0x14  ;; InsertOldPass1
   \   00000046   207A               LDRB     R0,[R4, #+8]
   \   00000048   0028               CMP      R0,#+0
   \   0000004A   0ED0               BEQ      ??SetupOldPass_Paint_1
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   7F21               MOVS     R1,#+127
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   3721               MOVS     R1,#+55
   \   00000058   0820               MOVS     R0,#+8
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   5A23               MOVS     R3,#+90
   \   0000005E   0422               MOVS     R2,#+4
   \   00000060   0221               MOVS     R1,#+2
   \   00000062   2000               MOVS     R0,R4
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
   6945          
   6946                    
   6947              }//________________________________________________________________________
   \                     ??SetupOldPass_Paint_1:
   \   0000006A   70BC               POP      {R4-R6}
   \   0000006C   01BC               POP      {R0}
   \   0000006E   0047               BX       R0               ;; return
   \                     ??SetupOldPass_Paint_0:
   \   00000070   7D0A0000           DC32     0xa7d
   \   00000074   ........           DC32     g_leng
   \   00000078   ........           DC32     Speech
   \   0000007C   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000080   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000084   ........           DC32     InsertOldPass1
   6948          
   6949          
   6950              
   6951              //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6952              void SetupOldPass_Event(char level)
   6953              {
   \                     SetupOldPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   6954                  int ans;
   6955                  char roz=0;
   6956          
   6957                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   5E48               LDR      R0,??SetupOldPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   5E48               LDR      R0,??SetupOldPass_Event_0+0x4  ;; X_down
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   5E48               LDR      R0,??SetupOldPass_Event_0+0x8  ;; Y_up
   \   00000010   415E               LDRSH    R1,[R0, R1]
   \   00000012   5E48               LDR      R0,??SetupOldPass_Event_0+0xC  ;; X_up
   \   00000014   0024               MOVS     R4,#+0
   \   00000016   005F               LDRSH    R0,[R0, R4]
   \   00000018   ........           BL       Number_Event
   \   0000001C   0400               MOVS     R4,R0
   6958            
   6959                  if (ans>0)
   \   0000001E   012C               CMP      R4,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   94E0               B        ??SetupOldPass_Event_1
   6960                    {
   6961                      
   6962                      //MenuPaint();
   6963                      if (InsertOldPass1[8]<=7) 
   \   00000024   5A4D               LDR      R5,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1
   \   00000026   287A               LDRB     R0,[R5, #+8]
   \   00000028   0828               CMP      R0,#+8
   \   0000002A   10D2               BCS      ??SetupOldPass_Event_2
   6964                      { 
   6965                          if ((ans<10) || (ans==11)) 
   \   0000002C   0A2C               CMP      R4,#+10
   \   0000002E   01DB               BLT      ??SetupOldPass_Event_3
   \   00000030   0B2C               CMP      R4,#+11
   \   00000032   0CD1               BNE      ??SetupOldPass_Event_2
   6966                          {
   6967                            if (ans<10) InsertOldPass1[InsertOldPass1[8]]=ans+48;
   \                     ??SetupOldPass_Event_3:
   \   00000034   0A2C               CMP      R4,#+10
   \   00000036   02DA               BGE      ??SetupOldPass_Event_4
   \   00000038   2100               MOVS     R1,R4
   \   0000003A   3031               ADDS     R1,R1,#+48
   \   0000003C   2954               STRB     R1,[R5, R0]
   6968                            if (ans==11) InsertOldPass1[InsertOldPass1[8]]=ans+37;
   \                     ??SetupOldPass_Event_4:
   \   0000003E   0B2C               CMP      R4,#+11
   \   00000040   02D1               BNE      ??SetupOldPass_Event_5
   \   00000042   287A               LDRB     R0,[R5, #+8]
   \   00000044   3021               MOVS     R1,#+48
   \   00000046   2954               STRB     R1,[R5, R0]
   6969                            InsertOldPass1[8]++;
   \                     ??SetupOldPass_Event_5:
   \   00000048   287A               LDRB     R0,[R5, #+8]
   \   0000004A   401C               ADDS     R0,R0,#+1
   \   0000004C   2872               STRB     R0,[R5, #+8]
   6970                            
   6971                          }
   6972                          
   6973                      }
   6974                      
   6975                      if ((ans==10) && (InsertOldPass1[8]>0) ) 
   \                     ??SetupOldPass_Event_2:
   \   0000004E   0A2C               CMP      R4,#+10
   \   00000050   08D1               BNE      ??SetupOldPass_Event_6
   \   00000052   287A               LDRB     R0,[R5, #+8]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   05D0               BEQ      ??SetupOldPass_Event_6
   6976                      {InsertOldPass1[8]--; 
   \   00000058   401E               SUBS     R0,R0,#+1
   \   0000005A   2872               STRB     R0,[R5, #+8]
   6977                      InsertOldPass1[InsertOldPass1[8]]=0;
   \   0000005C   0006               LSLS     R0,R0,#+24
   \   0000005E   000E               LSRS     R0,R0,#+24
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   2954               STRB     R1,[R5, R0]
   6978                      }
   6979                      
   6980                      if (ans==12)
   \                     ??SetupOldPass_Event_6:
   \   00000064   0C2C               CMP      R4,#+12
   \   00000066   5DD1               BNE      ??SetupOldPass_Event_7
   6981                      {
   6982                        roz=0;
   \   00000068   0020               MOVS     R0,#+0
   \   0000006A   0100               MOVS     R1,R0
   6983                        for (int i=0; i<=7; i++)
   \   0000006C   0200               MOVS     R2,R0
   \   0000006E   13E0               B        ??SetupOldPass_Event_8
   6984                        {
   6985                            if ((g_Password_1[i]!=InsertOldPass1[i]) && (level==1)) roz=1;
   \                     ??SetupOldPass_Event_9:
   \   00000070   AB5C               LDRB     R3,[R5, R2]
   \   00000072   484E               LDR      R6,??SetupOldPass_Event_0+0x14  ;; g_Password_1
   \   00000074   B65C               LDRB     R6,[R6, R2]
   \   00000076   9E42               CMP      R6,R3
   \   00000078   04D0               BEQ      ??SetupOldPass_Event_10
   \   0000007A   6E46               MOV      R6,SP
   \   0000007C   367A               LDRB     R6,[R6, #+8]
   \   0000007E   012E               CMP      R6,#+1
   \   00000080   00D1               BNE      ??SetupOldPass_Event_10
   \   00000082   0121               MOVS     R1,#+1
   6986                            if ((g_Password_2[i]!=InsertOldPass1[i]) && (level==2)) roz=1;
   \                     ??SetupOldPass_Event_10:
   \   00000084   444E               LDR      R6,??SetupOldPass_Event_0+0x18  ;; g_Password_2
   \   00000086   B65C               LDRB     R6,[R6, R2]
   \   00000088   9E42               CMP      R6,R3
   \   0000008A   04D0               BEQ      ??SetupOldPass_Event_11
   \   0000008C   6B46               MOV      R3,SP
   \   0000008E   1B7A               LDRB     R3,[R3, #+8]
   \   00000090   022B               CMP      R3,#+2
   \   00000092   00D1               BNE      ??SetupOldPass_Event_11
   \   00000094   0121               MOVS     R1,#+1
   6987                        }
   \                     ??SetupOldPass_Event_11:
   \   00000096   521C               ADDS     R2,R2,#+1
   \                     ??SetupOldPass_Event_8:
   \   00000098   082A               CMP      R2,#+8
   \   0000009A   E9DB               BLT      ??SetupOldPass_Event_9
   6988                        
   6989                        //has³o programisty
   6990                        if (roz)
   \   0000009C   0029               CMP      R1,#+0
   \   0000009E   1BD0               BEQ      ??SetupOldPass_Event_12
   6991                        {
   6992                          roz=0;
   \   000000A0   0100               MOVS     R1,R0
   6993                          char MHS[]="060480";
   \   000000A2   6A46               MOV      R2,SP
   \   000000A4   3D4B               LDR      R3,??SetupOldPass_Event_0+0x1C  ;; `?<Constant "060480">_1`
   \   000000A6   C0CB               LDM      R3!,{R6,R7}
   \   000000A8   C0C2               STM      R2!,{R6,R7}
   6994                            for (int i=0; i<6; i++)
   \   000000AA   0200               MOVS     R2,R0
   \   000000AC   12E0               B        ??SetupOldPass_Event_13
   \                     ??SetupOldPass_Event_14:
   \   000000AE   3C4B               LDR      R3,??SetupOldPass_Event_0+0x20  ;; InsertPass1
   \   000000B0   9B5C               LDRB     R3,[R3, R2]
   \   000000B2   6E46               MOV      R6,SP
   \   000000B4   B65C               LDRB     R6,[R6, R2]
   \   000000B6   9E42               CMP      R6,R3
   \   000000B8   04D0               BEQ      ??SetupOldPass_Event_15
   \   000000BA   6F46               MOV      R7,SP
   \   000000BC   3F7A               LDRB     R7,[R7, #+8]
   \   000000BE   012F               CMP      R7,#+1
   \   000000C0   00D1               BNE      ??SetupOldPass_Event_15
   6995                            {
   6996                                if ((MHS[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \   000000C2   0121               MOVS     R1,#+1
   6997                                if ((MHS[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??SetupOldPass_Event_15:
   \   000000C4   9E42               CMP      R6,R3
   \   000000C6   04D0               BEQ      ??SetupOldPass_Event_16
   \   000000C8   6B46               MOV      R3,SP
   \   000000CA   1B7A               LDRB     R3,[R3, #+8]
   \   000000CC   022B               CMP      R3,#+2
   \   000000CE   00D1               BNE      ??SetupOldPass_Event_16
   \   000000D0   0121               MOVS     R1,#+1
   6998                            }              
   \                     ??SetupOldPass_Event_16:
   \   000000D2   521C               ADDS     R2,R2,#+1
   \                     ??SetupOldPass_Event_13:
   \   000000D4   062A               CMP      R2,#+6
   \   000000D6   EADB               BLT      ??SetupOldPass_Event_14
   6999                        }
   7000                        
   7001                        if (roz==0)
   \                     ??SetupOldPass_Event_12:
   \   000000D8   0029               CMP      R1,#+0
   \   000000DA   10D1               BNE      ??SetupOldPass_Event_17
   7002                        {
   7003                           MenuLevel=(MenuLevel*10+1);
   \   000000DC   314E               LDR      R6,??SetupOldPass_Event_0+0x24  ;; TextToChangeLength
   \   000000DE   316D               LDR      R1,[R6, #+80]
   \   000000E0   0A22               MOVS     R2,#+10
   \   000000E2   5143               MULS     R1,R2,R1
   \   000000E4   491C               ADDS     R1,R1,#+1
   \   000000E6   3165               STR      R1,[R6, #+80]
   7004                           for (int i=0; i<=7; i++) InsertOldPass1[i]=0;
   \   000000E8   0100               MOVS     R1,R0
   \   000000EA   0200               MOVS     R2,R0
   \   000000EC   01E0               B        ??SetupOldPass_Event_18
   \                     ??SetupOldPass_Event_19:
   \   000000EE   6A54               STRB     R2,[R5, R1]
   \   000000F0   491C               ADDS     R1,R1,#+1
   \                     ??SetupOldPass_Event_18:
   \   000000F2   0829               CMP      R1,#+8
   \   000000F4   FBDB               BLT      ??SetupOldPass_Event_19
   7005                           InsertOldPass1[8]=0;
   \   000000F6   2872               STRB     R0,[R5, #+8]
   7006                           MenuPaint();
   \   000000F8   ........           BL       MenuPaint
   \   000000FC   12E0               B        ??SetupOldPass_Event_7
   7007                        } 
   7008                        else
   7009                        {
   7010                           //informacja o b³ednym hale
   7011                          Message_Paint(2,"",Speech[g_leng].Bledne,Speech[g_leng].haslo,"","");
   \                     ??SetupOldPass_Event_17:
   \   000000FE   2A48               LDR      R0,??SetupOldPass_Event_0+0x28  ;; g_leng
   \   00000100   0068               LDR      R0,[R0, #+0]
   \   00000102   2A49               LDR      R1,??SetupOldPass_Event_0+0x2C  ;; 0xa7d
   \   00000104   4843               MULS     R0,R1,R0
   \   00000106   2A49               LDR      R1,??SetupOldPass_Event_0+0x30  ;; Speech
   \   00000108   0A18               ADDS     R2,R1,R0
   \   0000010A   2AA0               ADR      R0,??SetupOldPass_Event_0+0x34  ;; 0x00, 0x00, 0x00, 0x00
   \   0000010C   0100               MOVS     R1,R0
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   FF21               MOVS     R1,#+255
   \   00000112   B431               ADDS     R1,R1,#+180      ;; #+435
   \   00000114   5318               ADDS     R3,R2,R1
   \   00000116   0F39               SUBS     R1,R1,#+15
   \   00000118   5218               ADDS     R2,R2,R1
   \   0000011A   0100               MOVS     R1,R0
   \   0000011C   0220               MOVS     R0,#+2
   \   0000011E   ........           BL       Message_Paint
   \   00000122   02B0               ADD      SP,SP,#+8
   7012                        }
   7013               
   7014                      }
   7015                      
   7016                      if ((ans>=1) && (ans<=11)) 
   \                     ??SetupOldPass_Event_7:
   \   00000124   012C               CMP      R4,#+1
   \   00000126   12DB               BLT      ??SetupOldPass_Event_1
   \   00000128   0C2C               CMP      R4,#+12
   \   0000012A   10DA               BGE      ??SetupOldPass_Event_1
   7017                      {
   7018                        MenuPaint();
   \   0000012C   ........           BL       MenuPaint
   7019                        Label(InsertOldPass1,2,4,90,InsertOldPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000130   82B0               SUB      SP,SP,#+8
   \   00000132   0020               MOVS     R0,#+0
   \   00000134   0090               STR      R0,[SP, #+0]
   \   00000136   7F21               MOVS     R1,#+127
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   3721               MOVS     R1,#+55
   \   0000013C   287A               LDRB     R0,[R5, #+8]
   \   0000013E   03B4               PUSH     {R0,R1}
   \   00000140   5A23               MOVS     R3,#+90
   \   00000142   0422               MOVS     R2,#+4
   \   00000144   0221               MOVS     R1,#+2
   \   00000146   2800               MOVS     R0,R5
   \   00000148   ........           BL       Label
   \   0000014C   06B0               ADD      SP,SP,#+24
   7020                      }
   7021                      
   7022                      
   7023                    }
   7024                  if (ans<0)
   \                     ??SetupOldPass_Event_1:
   \   0000014E   002C               CMP      R4,#+0
   \   00000150   12D5               BPL      ??SetupOldPass_Event_20
   7025                    {
   7026                        MenuLevel=(MenuLevel/100);
   \   00000152   144E               LDR      R6,??SetupOldPass_Event_0+0x24  ;; TextToChangeLength
   \   00000154   306D               LDR      R0,[R6, #+80]
   \   00000156   6421               MOVS     R1,#+100
   \   00000158   ........           BL       __aeabi_idivmod
   \   0000015C   3065               STR      R0,[R6, #+80]
   7027                        MenuPaint();
   \   0000015E   ........           BL       MenuPaint
   7028                        for (int i=0; i<=7; i++) InsertOldPass1[i]=0;
   \   00000162   0020               MOVS     R0,#+0
   \   00000164   0100               MOVS     R1,R0
   \   00000166   0A4A               LDR      R2,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1
   \   00000168   0300               MOVS     R3,R0
   \   0000016A   01E0               B        ??SetupOldPass_Event_21
   \                     ??SetupOldPass_Event_22:
   \   0000016C   5354               STRB     R3,[R2, R1]
   \   0000016E   491C               ADDS     R1,R1,#+1
   \                     ??SetupOldPass_Event_21:
   \   00000170   0829               CMP      R1,#+8
   \   00000172   FBDB               BLT      ??SetupOldPass_Event_22
   7029                        InsertOldPass1[8]=0;
   \   00000174   1049               LDR      R1,??SetupOldPass_Event_0+0x38  ;; InsertOldPass1 + 8
   \   00000176   0870               STRB     R0,[R1, #+0]
   7030                    }
   7031               
   7032              }//________________________________________________________________________
   \                     ??SetupOldPass_Event_20:
   \   00000178   FEBC               POP      {R1-R7}
   \   0000017A   01BC               POP      {R0}
   \   0000017C   0047               BX       R0               ;; return
   \   0000017E   C046               Nop      
   \                     ??SetupOldPass_Event_0:
   \   00000180   ........           DC32     Y_down
   \   00000184   ........           DC32     X_down
   \   00000188   ........           DC32     Y_up
   \   0000018C   ........           DC32     X_up
   \   00000190   ........           DC32     InsertOldPass1
   \   00000194   ........           DC32     g_Password_1
   \   00000198   ........           DC32     g_Password_2
   \   0000019C   ........           DC32     `?<Constant "060480">_1`
   \   000001A0   ........           DC32     InsertPass1
   \   000001A4   ........           DC32     TextToChangeLength
   \   000001A8   ........           DC32     g_leng
   \   000001AC   7D0A0000           DC32     0xa7d
   \   000001B0   ........           DC32     Speech
   \   000001B4   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000001B8   ........           DC32     InsertOldPass1 + 8
   7033          
   7034              
   7035          
   7036          
   7037          //Wpisanie nowego has³a  poziom 1**************************************************************************************************************
   7038              char InsertNewPass1[9]={0,0,0,0,0,0,0,0,0};
   7039              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7040              void SetupNewPass_Paint(void)
   7041              {  
   \                     SetupNewPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   7042                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   1C4C               LDR      R4,??SetupNewPass_Paint_0  ;; 0xa7d
   \   00000004   1C4D               LDR      R5,??SetupNewPass_Paint_0+0x4  ;; g_leng
   \   00000006   1D4E               LDR      R6,??SetupNewPass_Paint_0+0x8  ;; Speech
   \   00000008   1DA2               ADR      R2,??SetupNewPass_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000A   1EA1               ADR      R1,??SetupNewPass_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000C   FF20               MOVS     R0,#+255
   \   0000000E   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000010   2B68               LDR      R3,[R5, #+0]
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   F318               ADDS     R3,R6,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   7043                    
   7044                    Label(Speech[g_leng].NoweHaslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   7F21               MOVS     R1,#+127
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   3A21               MOVS     R1,#+58
   \   00000028   0F20               MOVS     R0,#+15
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   6623               MOVS     R3,#+102
   \   0000002E   0322               MOVS     R2,#+3
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   C320               MOVS     R0,#+195
   \   00000034   4000               LSLS     R0,R0,#+1        ;; #+390
   \   00000036   2D68               LDR      R5,[R5, #+0]
   \   00000038   6543               MULS     R5,R4,R5
   \   0000003A   7419               ADDS     R4,R6,R5
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       Label
   \   00000042   06B0               ADD      SP,SP,#+24
   7045              
   7046                    if (InsertNewPass1[8])  Label(InsertNewPass1,2,4,90,8,55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000044   104C               LDR      R4,??SetupNewPass_Paint_0+0x14  ;; InsertOldPass1
   \   00000046   207D               LDRB     R0,[R4, #+20]
   \   00000048   0028               CMP      R0,#+0
   \   0000004A   0FD0               BEQ      ??SetupNewPass_Paint_1
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   7F21               MOVS     R1,#+127
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   3721               MOVS     R1,#+55
   \   00000058   0820               MOVS     R0,#+8
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   5A23               MOVS     R3,#+90
   \   0000005E   0422               MOVS     R2,#+4
   \   00000060   0221               MOVS     R1,#+2
   \   00000062   0C34               ADDS     R4,R4,#+12
   \   00000064   2000               MOVS     R0,R4
   \   00000066   ........           BL       Label
   \   0000006A   06B0               ADD      SP,SP,#+24
   7047          
   7048                    
   7049              }//________________________________________________________________________
   \                     ??SetupNewPass_Paint_1:
   \   0000006C   70BC               POP      {R4-R6}
   \   0000006E   01BC               POP      {R0}
   \   00000070   0047               BX       R0               ;; return
   \   00000072   C046               Nop      
   \                     ??SetupNewPass_Paint_0:
   \   00000074   7D0A0000           DC32     0xa7d
   \   00000078   ........           DC32     g_leng
   \   0000007C   ........           DC32     Speech
   \   00000080   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000084   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000088   ........           DC32     InsertOldPass1
   7050          
   7051          
   7052          
   7053              //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7054              void SetupNewPass_Event(char level)
   7055              {
   \                     SetupNewPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   7056                  int ans;
   7057                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   5C48               LDR      R0,??SetupNewPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   5C48               LDR      R0,??SetupNewPass_Event_0+0x4  ;; X_down
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   5C48               LDR      R0,??SetupNewPass_Event_0+0x8  ;; Y_up
   \   00000010   415E               LDRSH    R1,[R0, R1]
   \   00000012   5C48               LDR      R0,??SetupNewPass_Event_0+0xC  ;; X_up
   \   00000014   0025               MOVS     R5,#+0
   \   00000016   405F               LDRSH    R0,[R0, R5]
   \   00000018   ........           BL       Number_Event
   \   0000001C   0500               MOVS     R5,R0
   7058            
   7059                  if (ans>0)
   \   0000001E   012D               CMP      R5,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   90E0               B        ??SetupNewPass_Event_1
   7060                    {
   7061                      //MenuPaint();
   7062                      if (InsertNewPass1[8]<=7) 
   \   00000024   584E               LDR      R6,??SetupNewPass_Event_0+0x10  ;; InsertOldPass1
   \   00000026   307D               LDRB     R0,[R6, #+20]
   \   00000028   0828               CMP      R0,#+8
   \   0000002A   12D2               BCS      ??SetupNewPass_Event_2
   7063                      { 
   7064                          if ((ans<10) || (ans==11)) 
   \   0000002C   0A2D               CMP      R5,#+10
   \   0000002E   01DB               BLT      ??SetupNewPass_Event_3
   \   00000030   0B2D               CMP      R5,#+11
   \   00000032   0ED1               BNE      ??SetupNewPass_Event_2
   7065                          {
   7066                            if (ans<10) InsertNewPass1[InsertNewPass1[8]]=ans+48;
   \                     ??SetupNewPass_Event_3:
   \   00000034   0A2D               CMP      R5,#+10
   \   00000036   03DA               BGE      ??SetupNewPass_Event_4
   \   00000038   3018               ADDS     R0,R6,R0
   \   0000003A   2900               MOVS     R1,R5
   \   0000003C   3031               ADDS     R1,R1,#+48
   \   0000003E   0173               STRB     R1,[R0, #+12]
   7067                            if (ans==11) InsertNewPass1[InsertNewPass1[8]]=ans+37;
   \                     ??SetupNewPass_Event_4:
   \   00000040   0B2D               CMP      R5,#+11
   \   00000042   03D1               BNE      ??SetupNewPass_Event_5
   \   00000044   307D               LDRB     R0,[R6, #+20]
   \   00000046   3018               ADDS     R0,R6,R0
   \   00000048   3021               MOVS     R1,#+48
   \   0000004A   0173               STRB     R1,[R0, #+12]
   7068                            InsertNewPass1[8]++;
   \                     ??SetupNewPass_Event_5:
   \   0000004C   307D               LDRB     R0,[R6, #+20]
   \   0000004E   401C               ADDS     R0,R0,#+1
   \   00000050   3075               STRB     R0,[R6, #+20]
   7069                          }
   7070                          
   7071                      }
   7072                      if ((ans==10) && (InsertNewPass1[8]>0) ) {InsertNewPass1[8]--; InsertNewPass1[InsertOldPass1[8]]=0;}
   \                     ??SetupNewPass_Event_2:
   \   00000052   0A2D               CMP      R5,#+10
   \   00000054   08D1               BNE      ??SetupNewPass_Event_6
   \   00000056   307D               LDRB     R0,[R6, #+20]
   \   00000058   0028               CMP      R0,#+0
   \   0000005A   05D0               BEQ      ??SetupNewPass_Event_6
   \   0000005C   401E               SUBS     R0,R0,#+1
   \   0000005E   3075               STRB     R0,[R6, #+20]
   \   00000060   307A               LDRB     R0,[R6, #+8]
   \   00000062   3018               ADDS     R0,R6,R0
   \   00000064   0021               MOVS     R1,#+0
   \   00000066   0173               STRB     R1,[R0, #+12]
   7073                      //Label(InsertNewPass1,2,4,90,InsertNewPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   7074                      
   7075                      
   7076                      
   7077                      
   7078                      
   7079                      if ((ans==12) && (InsertNewPass1[8]>0))
   \                     ??SetupNewPass_Event_6:
   \   00000068   0C2D               CMP      R5,#+12
   \   0000006A   56D1               BNE      ??SetupNewPass_Event_7
   \   0000006C   307D               LDRB     R0,[R6, #+20]
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   53D0               BEQ      ??SetupNewPass_Event_7
   7080                      {
   7081                        
   7082                        for (int i=0; i<=7; i++)
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0100               MOVS     R1,R0
   \   00000076   0FE0               B        ??SetupNewPass_Event_8
   7083                        {
   7084                            if (level==1) g_Password_1[i]=InsertNewPass1[i];
   \                     ??SetupNewPass_Event_9:
   \   00000078   012C               CMP      R4,#+1
   \   0000007A   03D1               BNE      ??SetupNewPass_Event_10
   \   0000007C   434A               LDR      R2,??SetupNewPass_Event_0+0x14  ;; g_Password_1
   \   0000007E   7318               ADDS     R3,R6,R1
   \   00000080   1B7B               LDRB     R3,[R3, #+12]
   \   00000082   5354               STRB     R3,[R2, R1]
   7085                            if (level==2) g_Password_2[i]=InsertNewPass1[i];
   \                     ??SetupNewPass_Event_10:
   \   00000084   022C               CMP      R4,#+2
   \   00000086   03D1               BNE      ??SetupNewPass_Event_11
   \   00000088   414A               LDR      R2,??SetupNewPass_Event_0+0x18  ;; g_Password_2
   \   0000008A   7318               ADDS     R3,R6,R1
   \   0000008C   1B7B               LDRB     R3,[R3, #+12]
   \   0000008E   5354               STRB     R3,[R2, R1]
   7086                            InsertNewPass1[i]=0;
   \                     ??SetupNewPass_Event_11:
   \   00000090   7218               ADDS     R2,R6,R1
   \   00000092   0300               MOVS     R3,R0
   \   00000094   1373               STRB     R3,[R2, #+12]
   7087                        }
   \   00000096   491C               ADDS     R1,R1,#+1
   \                     ??SetupNewPass_Event_8:
   \   00000098   0829               CMP      R1,#+8
   \   0000009A   EDDB               BLT      ??SetupNewPass_Event_9
   7088                        InsertNewPass1[8]=0;
   \   0000009C   3075               STRB     R0,[R6, #+20]
   7089          
   7090                        //zapis has³a do flash
   7091                        unsigned int Save = __get_interrupt_state();  
   \   0000009E   ........           BL       __iar_get_interrupt_state
   \   000000A2   0700               MOVS     R7,R0
   7092                        __disable_interrupt();
   \   000000A4   ........           BL       __iar_disable_interrupt
   \   000000A8   0122               MOVS     R2,#+1
   \   000000AA   3849               LDR      R1,??SetupNewPass_Event_0+0x14  ;; g_Password_1
   \   000000AC   3948               LDR      R0,??SetupNewPass_Event_0+0x1C  ;; 0x13d7dd
   7093                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.Pass1[0])),0,g_Password_1,9);
   7094                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Pass1[0])), (char*) (&(g_Password_1)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000AE   ........           BL       FlashWrite
   7095                        __set_interrupt_state(Save);
   \   000000B2   3800               MOVS     R0,R7
   \   000000B4   ........           BL       __iar_set_interrupt_state
   7096                        //koniec zapisu do flash
   7097                        
   7098          
   7099                        
   7100                           //informacja o zmianie hasla
   7101                         MenuLevel=(MenuLevel/1000);
   \   000000B8   374F               LDR      R7,??SetupNewPass_Event_0+0x20  ;; TextToChangeLength
   \   000000BA   386D               LDR      R0,[R7, #+80]
   \   000000BC   FA21               MOVS     R1,#+250
   \   000000BE   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   000000C0   ........           BL       __aeabi_idivmod
   \   000000C4   3865               STR      R0,[R7, #+80]
   7102                          if (level==1) Message_Paint(2,Speech[g_leng].Nowe,Speech[g_leng].haslo,"------------",g_Password_1,"");
   \   000000C6   012C               CMP      R4,#+1
   \   000000C8   12D1               BNE      ??SetupNewPass_Event_12
   \   000000CA   3448               LDR      R0,??SetupNewPass_Event_0+0x24  ;; 0xa7d
   \   000000CC   3449               LDR      R1,??SetupNewPass_Event_0+0x28  ;; g_leng
   \   000000CE   354A               LDR      R2,??SetupNewPass_Event_0+0x2C  ;; Speech
   \   000000D0   0968               LDR      R1,[R1, #+0]
   \   000000D2   4143               MULS     R1,R0,R1
   \   000000D4   5718               ADDS     R7,R2,R1
   \   000000D6   34A1               ADR      R1,??SetupNewPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   000000D8   2C48               LDR      R0,??SetupNewPass_Event_0+0x14  ;; g_Password_1
   \   000000DA   03B4               PUSH     {R0,R1}
   \   000000DC   334B               LDR      R3,??SetupNewPass_Event_0+0x34  ;; `?<Constant "------------">`
   \   000000DE   FF20               MOVS     R0,#+255
   \   000000E0   B430               ADDS     R0,R0,#+180      ;; #+435
   \   000000E2   3A18               ADDS     R2,R7,R0
   \   000000E4   0F30               ADDS     R0,R0,#+15
   \   000000E6   3918               ADDS     R1,R7,R0
   \   000000E8   0220               MOVS     R0,#+2
   \   000000EA   ........           BL       Message_Paint
   \   000000EE   02B0               ADD      SP,SP,#+8
   7103                          if (level==2) Message_Paint(2,Speech[g_leng].Nowe,Speech[g_leng].haslo,"------------",g_Password_2,"");
   \                     ??SetupNewPass_Event_12:
   \   000000F0   022C               CMP      R4,#+2
   \   000000F2   12D1               BNE      ??SetupNewPass_Event_7
   \   000000F4   2948               LDR      R0,??SetupNewPass_Event_0+0x24  ;; 0xa7d
   \   000000F6   2A49               LDR      R1,??SetupNewPass_Event_0+0x28  ;; g_leng
   \   000000F8   2A4A               LDR      R2,??SetupNewPass_Event_0+0x2C  ;; Speech
   \   000000FA   0968               LDR      R1,[R1, #+0]
   \   000000FC   4143               MULS     R1,R0,R1
   \   000000FE   5418               ADDS     R4,R2,R1
   \   00000100   29A1               ADR      R1,??SetupNewPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   00000102   2348               LDR      R0,??SetupNewPass_Event_0+0x18  ;; g_Password_2
   \   00000104   03B4               PUSH     {R0,R1}
   \   00000106   294B               LDR      R3,??SetupNewPass_Event_0+0x34  ;; `?<Constant "------------">`
   \   00000108   FF20               MOVS     R0,#+255
   \   0000010A   B430               ADDS     R0,R0,#+180      ;; #+435
   \   0000010C   2218               ADDS     R2,R4,R0
   \   0000010E   0F30               ADDS     R0,R0,#+15
   \   00000110   2118               ADDS     R1,R4,R0
   \   00000112   0220               MOVS     R0,#+2
   \   00000114   ........           BL       Message_Paint
   \   00000118   02B0               ADD      SP,SP,#+8
   7104                      
   7105                        
   7106                        //MenuPaint();
   7107                      } 
   7108                      
   7109                      
   7110                      if ((ans>=1) && (ans<=11)) 
   \                     ??SetupNewPass_Event_7:
   \   0000011A   012D               CMP      R5,#+1
   \   0000011C   13DB               BLT      ??SetupNewPass_Event_1
   \   0000011E   0C2D               CMP      R5,#+12
   \   00000120   11DA               BGE      ??SetupNewPass_Event_1
   7111                      {
   7112                        MenuPaint();
   \   00000122   ........           BL       MenuPaint
   7113                        Label(InsertNewPass1,2,4,90,InsertNewPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000126   82B0               SUB      SP,SP,#+8
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   0090               STR      R0,[SP, #+0]
   \   0000012C   7F21               MOVS     R1,#+127
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   3721               MOVS     R1,#+55
   \   00000132   307D               LDRB     R0,[R6, #+20]
   \   00000134   03B4               PUSH     {R0,R1}
   \   00000136   5A23               MOVS     R3,#+90
   \   00000138   0422               MOVS     R2,#+4
   \   0000013A   0221               MOVS     R1,#+2
   \   0000013C   0C36               ADDS     R6,R6,#+12
   \   0000013E   3000               MOVS     R0,R6
   \   00000140   ........           BL       Label
   \   00000144   06B0               ADD      SP,SP,#+24
   7114                      }
   7115                      
   7116                      
   7117                     }
   7118                    
   7119                  if (ans<0)
   \                     ??SetupNewPass_Event_1:
   \   00000146   002D               CMP      R5,#+0
   \   00000148   13D5               BPL      ??SetupNewPass_Event_13
   7120                    {
   7121                        MenuLevel=(MenuLevel/100);
   \   0000014A   134F               LDR      R7,??SetupNewPass_Event_0+0x20  ;; TextToChangeLength
   \   0000014C   386D               LDR      R0,[R7, #+80]
   \   0000014E   6421               MOVS     R1,#+100
   \   00000150   ........           BL       __aeabi_idivmod
   \   00000154   3865               STR      R0,[R7, #+80]
   7122                        MenuPaint();
   \   00000156   ........           BL       MenuPaint
   7123                        for (int i=0; i<=7; i++) InsertNewPass1[i]=0;
   \   0000015A   0020               MOVS     R0,#+0
   \   0000015C   0100               MOVS     R1,R0
   \   0000015E   0300               MOVS     R3,R0
   \   00000160   03E0               B        ??SetupNewPass_Event_14
   \                     ??SetupNewPass_Event_15:
   \   00000162   094A               LDR      R2,??SetupNewPass_Event_0+0x10  ;; InsertOldPass1
   \   00000164   5218               ADDS     R2,R2,R1
   \   00000166   1373               STRB     R3,[R2, #+12]
   \   00000168   491C               ADDS     R1,R1,#+1
   \                     ??SetupNewPass_Event_14:
   \   0000016A   0829               CMP      R1,#+8
   \   0000016C   F9DB               BLT      ??SetupNewPass_Event_15
   7124                        InsertNewPass1[8]=0;
   \   0000016E   1049               LDR      R1,??SetupNewPass_Event_0+0x38  ;; InsertOldPass1 + 20
   \   00000170   0870               STRB     R0,[R1, #+0]
   7125                    }
   7126                
   7127              }//________________________________________________________________________
   \                     ??SetupNewPass_Event_13:
   \   00000172   F8BC               POP      {R3-R7}
   \   00000174   01BC               POP      {R0}
   \   00000176   0047               BX       R0               ;; return
   \                     ??SetupNewPass_Event_0:
   \   00000178   ........           DC32     Y_down
   \   0000017C   ........           DC32     X_down
   \   00000180   ........           DC32     Y_up
   \   00000184   ........           DC32     X_up
   \   00000188   ........           DC32     InsertOldPass1
   \   0000018C   ........           DC32     g_Password_1
   \   00000190   ........           DC32     g_Password_2
   \   00000194   DDD71300           DC32     0x13d7dd
   \   00000198   ........           DC32     TextToChangeLength
   \   0000019C   7D0A0000           DC32     0xa7d
   \   000001A0   ........           DC32     g_leng
   \   000001A4   ........           DC32     Speech
   \   000001A8   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000001AC   ........           DC32     `?<Constant "------------">`
   \   000001B0   ........           DC32     InsertOldPass1 + 20
   7128          
   7129          
   7130              
   7131              
   7132              
   7133          
   7134              
   7135              
   7136              
   7137              
   7138          
   7139          //Ustawienia ******************************************************************************************************************
   7140          
   7141          
   7142              
   7143          
   7144          
   7145              
   7146          //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7147          void ScreenSetup_Paint(void)
   7148          {  
   \                     ScreenSetup_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   7149              List_Paint(Speech[g_leng].Ekran,3,13,0,0,0,Speech[g_leng].Jasnosc,Speech[g_leng].ScreenSever,Speech[g_leng].Dotyk,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   1048               LDR      R0,??ScreenSetup_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   1049               LDR      R1,??ScreenSetup_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1049               LDR      R1,??ScreenSetup_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0E48               LDR      R0,??ScreenSetup_Paint_0+0xC  ;; 0x519
   \   00000018   2018               ADDS     R0,R4,R0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0D48               LDR      R0,??ScreenSetup_Paint_0+0x10  ;; 0x663
   \   0000001E   2118               ADDS     R1,R4,R0
   \   00000020   0D48               LDR      R0,??ScreenSetup_Paint_0+0x14  ;; 0xa23
   \   00000022   2018               ADDS     R0,R4,R0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   0800               MOVS     R0,R1
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0300               MOVS     R3,R0
   \   0000002E   0D22               MOVS     R2,#+13
   \   00000030   0321               MOVS     R1,#+3
   \   00000032   0A48               LDR      R0,??ScreenSetup_Paint_0+0x18  ;; 0x4dd
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   7150          }//________________________________________________________________________
   \   0000003C   10BC               POP      {R4}
   \   0000003E   01BC               POP      {R0}
   \   00000040   0047               BX       R0               ;; return
   \   00000042   C046               Nop      
   \                     ??ScreenSetup_Paint_0:
   \   00000044   ........           DC32     g_leng
   \   00000048   7D0A0000           DC32     0xa7d
   \   0000004C   ........           DC32     Speech
   \   00000050   19050000           DC32     0x519
   \   00000054   63060000           DC32     0x663
   \   00000058   230A0000           DC32     0xa23
   \   0000005C   DD040000           DC32     0x4dd
   7151          
   7152              
   7153              
   7154          //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7155          void ScreenSetup_Event(void)
   7156                {
   \                     ScreenSetup_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   7157                  int ans;
   7158                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0D21               MOVS     R1,#+13
   \   0000000A   0320               MOVS     R0,#+3
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1248               LDR      R0,??ScreenSetup_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1148               LDR      R0,??ScreenSetup_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1148               LDR      R0,??ScreenSetup_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1148               LDR      R0,??ScreenSetup_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   7159          
   7160                  if (ans>0)
   \   00000028   0128               CMP      R0,#+1
   \   0000002A   08DB               BLT      ??ScreenSetup_Event_1
   7161                    {
   7162                      MenuLevel=(MenuLevel*10+ans);
   \   0000002C   0E4C               LDR      R4,??ScreenSetup_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   216D               LDR      R1,[R4, #+80]
   \   00000030   0A22               MOVS     R2,#+10
   \   00000032   5143               MULS     R1,R2,R1
   \   00000034   0818               ADDS     R0,R1,R0
   \   00000036   2065               STR      R0,[R4, #+80]
   7163                      MenuPaint();
   \   00000038   ........           BL       MenuPaint
   \   0000003C   09E0               B        ??ScreenSetup_Event_2
   7164                    
   7165                    }else if (ans<0){
   \                     ??ScreenSetup_Event_1:
   \   0000003E   0028               CMP      R0,#+0
   \   00000040   07D5               BPL      ??ScreenSetup_Event_2
   7166                      MenuLevel=(MenuLevel/10);
   \   00000042   094C               LDR      R4,??ScreenSetup_Event_0+0x10  ;; TextToChangeLength
   \   00000044   206D               LDR      R0,[R4, #+80]
   \   00000046   0A21               MOVS     R1,#+10
   \   00000048   ........           BL       __aeabi_idivmod
   \   0000004C   2065               STR      R0,[R4, #+80]
   7167                      MenuPaint();
   \   0000004E   ........           BL       MenuPaint
   7168                    } 
   7169                  
   7170                }//_______________________________________________________________________
   \                     ??ScreenSetup_Event_2:
   \   00000052   10BC               POP      {R4}
   \   00000054   01BC               POP      {R0}
   \   00000056   0047               BX       R0               ;; return
   \                     ??ScreenSetup_Event_0:
   \   00000058   ........           DC32     Y_down
   \   0000005C   ........           DC32     X_down
   \   00000060   ........           DC32     Y_up
   \   00000064   ........           DC32     X_up
   \   00000068   ........           DC32     TextToChangeLength
   7171          
   7172          
   7173          
   7174              
   7175              
   7176          //*-----------------------------------------------------------------------------
   7177          //* Nazwa funkcji :    SetTouchScreen_Paint
   7178          //* Funkcja sustawienia ekranu dotykowego
   7179          //*-----------------------------------------------------------------------------
   7180          //*-----------------------------------------------------------------------------
   7181          char SetTouchStep=0;
   7182          
   7183          

   \                                 In section Debug.txt, align 4, keep-with-next
   7184          void SetTouchScreen_Paint(void)
   7185          {
   \                     SetTouchScreen_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7186          
   7187          if (SetTouchStep==0)
   \   00000002   644C               LDR      R4,??SetTouchScreen_Paint_0  ;; StartAdvance
   \   00000004   6078               LDRB     R0,[R4, #+1]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   08D1               BNE      ??SetTouchScreen_Paint_1
   7188          {
   7189                   korekta_X.A=1;
   \   0000000A   6349               LDR      R1,??SetTouchScreen_Paint_0+0x4  ;; korekta_X
   \   0000000C   FE22               MOVS     R2,#+254
   \   0000000E   9205               LSLS     R2,R2,#+22       ;; #+1065353216
   \   00000010   0A60               STR      R2,[R1, #+0]
   7190                  korekta_X.B=0;
   \   00000012   0023               MOVS     R3,#+0
   \   00000014   4B60               STR      R3,[R1, #+4]
   7191                  korekta_Y.A=1;
   \   00000016   6149               LDR      R1,??SetTouchScreen_Paint_0+0x8  ;; korekta_Y
   \   00000018   0A60               STR      R2,[R1, #+0]
   7192                  korekta_Y.B=0; 
   \   0000001A   4B60               STR      R3,[R1, #+4]
   7193          }
   7194            
   7195          if (SetTouchStep==MaxTouchTest)
   \                     ??SetTouchScreen_Paint_1:
   \   0000001C   0428               CMP      R0,#+4
   \   0000001E   2AD1               BNE      ??SetTouchScreen_Paint_2
   7196          {
   7197                H_line(0,15,127,1);
   \   00000020   0123               MOVS     R3,#+1
   \   00000022   7F22               MOVS     R2,#+127
   \   00000024   0F21               MOVS     R1,#+15
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   ........           BL       H_line
   7198                H_line(0,45,127,1);
   \   0000002C   0123               MOVS     R3,#+1
   \   0000002E   7F22               MOVS     R2,#+127
   \   00000030   2D21               MOVS     R1,#+45
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   ........           BL       H_line
   7199                H_line(0,75,127,1);
   \   00000038   0123               MOVS     R3,#+1
   \   0000003A   7F22               MOVS     R2,#+127
   \   0000003C   4B21               MOVS     R1,#+75
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   ........           BL       H_line
   7200                H_line(0,110,127,1);
   \   00000044   0123               MOVS     R3,#+1
   \   00000046   7F22               MOVS     R2,#+127
   \   00000048   6E21               MOVS     R1,#+110
   \   0000004A   0020               MOVS     R0,#+0
   \   0000004C   ........           BL       H_line
   7201                V_line(15,0,127,1);
   \   00000050   0123               MOVS     R3,#+1
   \   00000052   7F22               MOVS     R2,#+127
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   0F20               MOVS     R0,#+15
   \   00000058   ........           BL       V_line
   7202                V_line(32,0,127,1);
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   7F22               MOVS     R2,#+127
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   2020               MOVS     R0,#+32
   \   00000064   ........           BL       V_line
   7203                V_line(50,0,127,1);
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   7F22               MOVS     R2,#+127
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   3220               MOVS     R0,#+50
   \   00000070   ........           BL       V_line
   \   00000074   8AE0               B        ??SetTouchScreen_Paint_3
   7204          }  
   7205          else
   7206          {
   7207              CleanCanvas();
   \                     ??SetTouchScreen_Paint_2:
   \   00000076   ........           BL       CleanCanvas
   7208            
   7209              Label(Speech[g_leng].Dotknij,    2,1,70,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000007A   494D               LDR      R5,??SetTouchScreen_Paint_0+0xC  ;; 0xa7d
   \   0000007C   494E               LDR      R6,??SetTouchScreen_Paint_0+0x10  ;; g_leng
   \   0000007E   4A4F               LDR      R7,??SetTouchScreen_Paint_0+0x14  ;; Speech
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   8021               MOVS     R1,#+128
   \   00000088   0120               MOVS     R0,#+1
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   3E21               MOVS     R1,#+62
   \   0000008E   0F20               MOVS     R0,#+15
   \   00000090   03B4               PUSH     {R0,R1}
   \   00000092   4623               MOVS     R3,#+70
   \   00000094   0122               MOVS     R2,#+1
   \   00000096   0221               MOVS     R1,#+2
   \   00000098   8C46               MOV      R12,R1
   \   0000009A   A521               MOVS     R1,#+165
   \   0000009C   C900               LSLS     R1,R1,#+3        ;; #+1320
   \   0000009E   3068               LDR      R0,[R6, #+0]
   \   000000A0   6843               MULS     R0,R5,R0
   \   000000A2   3818               ADDS     R0,R7,R0
   \   000000A4   4018               ADDS     R0,R0,R1
   \   000000A6   6146               MOV      R1,R12
   \   000000A8   ........           BL       Label
   \   000000AC   06B0               ADD      SP,SP,#+24
   7210              Label(Speech[g_leng].precyzyjnie,2,1,60,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000AE   82B0               SUB      SP,SP,#+8
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   8021               MOVS     R1,#+128
   \   000000B6   0120               MOVS     R0,#+1
   \   000000B8   03B4               PUSH     {R0,R1}
   \   000000BA   3E21               MOVS     R1,#+62
   \   000000BC   0F20               MOVS     R0,#+15
   \   000000BE   03B4               PUSH     {R0,R1}
   \   000000C0   3C23               MOVS     R3,#+60
   \   000000C2   0122               MOVS     R2,#+1
   \   000000C4   0221               MOVS     R1,#+2
   \   000000C6   8C46               MOV      R12,R1
   \   000000C8   3849               LDR      R1,??SetTouchScreen_Paint_0+0x18  ;; 0x537
   \   000000CA   3068               LDR      R0,[R6, #+0]
   \   000000CC   6843               MULS     R0,R5,R0
   \   000000CE   3818               ADDS     R0,R7,R0
   \   000000D0   4018               ADDS     R0,R0,R1
   \   000000D2   6146               MOV      R1,R12
   \   000000D4   ........           BL       Label
   \   000000D8   06B0               ADD      SP,SP,#+24
   7211              Label(Speech[g_leng].wskaznik,   2,1,50,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0020               MOVS     R0,#+0
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   8021               MOVS     R1,#+128
   \   000000E2   0120               MOVS     R0,#+1
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   3E21               MOVS     R1,#+62
   \   000000E8   0F20               MOVS     R0,#+15
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   3223               MOVS     R3,#+50
   \   000000EE   0122               MOVS     R2,#+1
   \   000000F0   0221               MOVS     R1,#+2
   \   000000F2   2F48               LDR      R0,??SetTouchScreen_Paint_0+0x1C  ;; 0x546
   \   000000F4   3668               LDR      R6,[R6, #+0]
   \   000000F6   6E43               MULS     R6,R5,R6
   \   000000F8   BD19               ADDS     R5,R7,R6
   \   000000FA   2818               ADDS     R0,R5,R0
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   7212          
   7213               CanvasPixel(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y,1);   //(char X, char Y, char Colour)
   \   00000102   2C4D               LDR      R5,??SetTouchScreen_Paint_0+0x20  ;; TouchTestSor
   \   00000104   6078               LDRB     R0,[R4, #+1]
   \   00000106   4000               LSLS     R0,R0,#+1
   \   00000108   2818               ADDS     R0,R5,R0
   \   0000010A   0122               MOVS     R2,#+1
   \   0000010C   1100               MOVS     R1,R2
   \   0000010E   4156               LDRSB    R1,[R0, R1]
   \   00000110   0906               LSLS     R1,R1,#+24
   \   00000112   090E               LSRS     R1,R1,#+24
   \   00000114   0023               MOVS     R3,#+0
   \   00000116   C056               LDRSB    R0,[R0, R3]
   \   00000118   0006               LSLS     R0,R0,#+24
   \   0000011A   000E               LSRS     R0,R0,#+24
   \   0000011C   ........           BL       CanvasPixel
   7214               H_line(TouchTestSor[SetTouchStep].x+2,TouchTestSor[SetTouchStep].y,5,1); // (char X, int Y, char lenght, char typ)
   \   00000120   6078               LDRB     R0,[R4, #+1]
   \   00000122   4000               LSLS     R0,R0,#+1
   \   00000124   2818               ADDS     R0,R5,R0
   \   00000126   0123               MOVS     R3,#+1
   \   00000128   0522               MOVS     R2,#+5
   \   0000012A   1900               MOVS     R1,R3
   \   0000012C   4156               LDRSB    R1,[R0, R1]
   \   0000012E   0026               MOVS     R6,#+0
   \   00000130   8057               LDRSB    R0,[R0, R6]
   \   00000132   801C               ADDS     R0,R0,#+2
   \   00000134   0006               LSLS     R0,R0,#+24
   \   00000136   000E               LSRS     R0,R0,#+24
   \   00000138   ........           BL       H_line
   7215               H_line(TouchTestSor[SetTouchStep].x-6,TouchTestSor[SetTouchStep].y,5,1); // (char X, int Y, char lenght, char typ) 
   \   0000013C   6078               LDRB     R0,[R4, #+1]
   \   0000013E   4000               LSLS     R0,R0,#+1
   \   00000140   2818               ADDS     R0,R5,R0
   \   00000142   0123               MOVS     R3,#+1
   \   00000144   0522               MOVS     R2,#+5
   \   00000146   1900               MOVS     R1,R3
   \   00000148   4156               LDRSB    R1,[R0, R1]
   \   0000014A   8057               LDRSB    R0,[R0, R6]
   \   0000014C   801F               SUBS     R0,R0,#+6
   \   0000014E   0006               LSLS     R0,R0,#+24
   \   00000150   000E               LSRS     R0,R0,#+24
   \   00000152   ........           BL       H_line
   7216               V_line(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y+2,5,1); // (char X, int Y, char lenght, char typ) 
   \   00000156   6078               LDRB     R0,[R4, #+1]
   \   00000158   4000               LSLS     R0,R0,#+1
   \   0000015A   2818               ADDS     R0,R5,R0
   \   0000015C   0123               MOVS     R3,#+1
   \   0000015E   0522               MOVS     R2,#+5
   \   00000160   1900               MOVS     R1,R3
   \   00000162   4156               LDRSB    R1,[R0, R1]
   \   00000164   891C               ADDS     R1,R1,#+2
   \   00000166   8057               LDRSB    R0,[R0, R6]
   \   00000168   0006               LSLS     R0,R0,#+24
   \   0000016A   000E               LSRS     R0,R0,#+24
   \   0000016C   ........           BL       V_line
   7217               V_line(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y-6,5,1); // (char X, int Y, char lenght, char typ) 
   \   00000170   6078               LDRB     R0,[R4, #+1]
   \   00000172   4000               LSLS     R0,R0,#+1
   \   00000174   2818               ADDS     R0,R5,R0
   \   00000176   0123               MOVS     R3,#+1
   \   00000178   0522               MOVS     R2,#+5
   \   0000017A   1900               MOVS     R1,R3
   \   0000017C   4156               LDRSB    R1,[R0, R1]
   \   0000017E   891F               SUBS     R1,R1,#+6
   \   00000180   0024               MOVS     R4,#+0
   \   00000182   0057               LDRSB    R0,[R0, R4]
   \   00000184   0006               LSLS     R0,R0,#+24
   \   00000186   000E               LSRS     R0,R0,#+24
   \   00000188   ........           BL       V_line
   7218          }
   7219          }
   \                     ??SetTouchScreen_Paint_3:
   \   0000018C   F8BC               POP      {R3-R7}
   \   0000018E   01BC               POP      {R0}
   \   00000190   0047               BX       R0               ;; return
   \   00000192   C046               Nop      
   \                     ??SetTouchScreen_Paint_0:
   \   00000194   ........           DC32     StartAdvance
   \   00000198   ........           DC32     korekta_X
   \   0000019C   ........           DC32     korekta_Y
   \   000001A0   7D0A0000           DC32     0xa7d
   \   000001A4   ........           DC32     g_leng
   \   000001A8   ........           DC32     Speech
   \   000001AC   37050000           DC32     0x537
   \   000001B0   46050000           DC32     0x546
   \   000001B4   ........           DC32     TouchTestSor

   \                                 In section .bss, align 4
   \                     StartAdvance:
   \   00000000                      DS8 1
   \                     SetTouchStep:
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   7220          
   7221          
   7222          extern _Correct korekta_Y;
   7223          extern _Correct korekta_X;
   7224          signed short Diff_X[MaxTouchTest];
   \                     Diff_X:
   \   00000004                      DS8 8
   7225          signed short Diff_Y[MaxTouchTest];
   \                     Diff_Y:
   \   0000000C                      DS8 8
   7226          float Xo1, Xo2, Yo1, Yo2;
   \                     Xo1:
   \   00000014                      DS8 4
   \                     Xo2:
   \   00000018                      DS8 4
   \                     Yo1:
   \   0000001C                      DS8 4
   \                     Yo2:
   \   00000020                      DS8 4

   \                                 In section .bss, align 4
   \                     InsertPass1:
   \   00000000                      DS8 12
   \                     pass_tmp:
   \   0000000C                      DS8 12

   \                                 In section .bss, align 4
   \                     VCTT_ill:
   \   00000000                      DS8 1
   \                     VCTT_point_flag:
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \                     ValueChangeTxtTmp:
   \   00000004                      DS8 8

   \                                 In section .bss, align 4
   \                     ptxt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     ??count:
   \   00000000                      DS8 1
   \   00000001                      DS8 1

   \                                 In section .bss, align 8
   \                     LastText_EventTime:
   \   00000000                      DS8 8

   \                                 In section .bss, align 1
   \                     ??Dziel5:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??Dziel5_1:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
   7227          void SetTouchScreen_Event(void)
   7228          {
   \                     SetTouchScreen_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   7229          
   7230          
   7231          if (SetTouchStep==MaxTouchTest)
   \   00000004   6B4C               LDR      R4,??SetTouchScreen_Event_0  ;; StartAdvance
   \   00000006   6678               LDRB     R6,[R4, #+1]
   \   00000008   042E               CMP      R6,#+4
   \   0000000A   13D1               BNE      ??SetTouchScreen_Event_1
   7232          {
   7233             if ((X_down>0) && (Y_down>0))
   \   0000000C   6A48               LDR      R0,??SetTouchScreen_Event_0+0x4  ;; X_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   0128               CMP      R0,#+1
   \   00000014   00DA               BGE      .+4
   \   00000016   C9E0               B        ??SetTouchScreen_Event_2
   \   00000018   6849               LDR      R1,??SetTouchScreen_Event_0+0x8  ;; Y_down
   \   0000001A   0022               MOVS     R2,#+0
   \   0000001C   895E               LDRSH    R1,[R1, R2]
   \   0000001E   0129               CMP      R1,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   C3E0               B        ??SetTouchScreen_Event_2
   7234             {
   7235                CanvasPixel(X_down,Y_down,1);
   \   00000024   0122               MOVS     R2,#+1
   \   00000026   0906               LSLS     R1,R1,#+24
   \   00000028   090E               LSRS     R1,R1,#+24
   \   0000002A   0006               LSLS     R0,R0,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   ........           BL       CanvasPixel
   \   00000032   BBE0               B        ??SetTouchScreen_Event_2
   7236               
   7237             }
   7238          }else{
   7239            
   7240            if ((X_up>0) && (Y_up>0)&& ((g_counter>Touch_EventTime+400) || (Touch_EventTime>g_counter)) )
   \                     ??SetTouchScreen_Event_1:
   \   00000034   6846               MOV      R0,SP
   \   00000036   6249               LDR      R1,??SetTouchScreen_Event_0+0xC  ;; X_up
   \   00000038   0988               LDRH     R1,[R1, #+0]
   \   0000003A   0181               STRH     R1,[R0, #+8]
   \   0000003C   6946               MOV      R1,SP
   \   0000003E   0820               MOVS     R0,#+8
   \   00000040   085E               LDRSH    R0,[R1, R0]
   \   00000042   0128               CMP      R0,#+1
   \   00000044   00DA               BGE      .+4
   \   00000046   B1E0               B        ??SetTouchScreen_Event_2
   \   00000048   5E48               LDR      R0,??SetTouchScreen_Event_0+0x10  ;; Y_up
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   475E               LDRSH    R7,[R0, R1]
   \   0000004E   012F               CMP      R7,#+1
   \   00000050   00DA               BGE      .+4
   \   00000052   ABE0               B        ??SetTouchScreen_Event_2
   \   00000054   5C4D               LDR      R5,??SetTouchScreen_Event_0+0x14  ;; TextToChangeLength
   \   00000056   6A46               MOV      R2,SP
   \   00000058   5C48               LDR      R0,??SetTouchScreen_Event_0+0x18  ;; g_counter
   \   0000005A   03C8               LDM      R0!,{R0,R1}
   \   0000005C   03C2               STM      R2!,{R0,R1}
   \   0000005E   286C               LDR      R0,[R5, #+64]
   \   00000060   696C               LDR      R1,[R5, #+68]
   \   00000062   0200               MOVS     R2,R0
   \   00000064   0B00               MOVS     R3,R1
   \   00000066   C820               MOVS     R0,#+200
   \   00000068   4000               LSLS     R0,R0,#+1        ;; #+400
   \   0000006A   0021               MOVS     R1,#+0
   \   0000006C   8018               ADDS     R0,R0,R2
   \   0000006E   5941               ADCS     R1,R1,R3
   \   00000070   0200               MOVS     R2,R0
   \   00000072   0B00               MOVS     R3,R1
   \   00000074   6846               MOV      R0,SP
   \   00000076   03C8               LDM      R0!,{R0,R1}
   \   00000078   8B42               CMP      R3,R1
   \   0000007A   0FD3               BCC      ??SetTouchScreen_Event_3
   \   0000007C   01D8               BHI      ??SetTouchScreen_Event_4
   \   0000007E   8242               CMP      R2,R0
   \   00000080   0CD3               BCC      ??SetTouchScreen_Event_3
   \                     ??SetTouchScreen_Event_4:
   \   00000082   6846               MOV      R0,SP
   \   00000084   03C8               LDM      R0!,{R0,R1}
   \   00000086   0200               MOVS     R2,R0
   \   00000088   0B00               MOVS     R3,R1
   \   0000008A   286C               LDR      R0,[R5, #+64]
   \   0000008C   696C               LDR      R1,[R5, #+68]
   \   0000008E   8B42               CMP      R3,R1
   \   00000090   00D9               BLS      .+4
   \   00000092   8BE0               B        ??SetTouchScreen_Event_2
   \   00000094   02D3               BCC      ??SetTouchScreen_Event_3
   \   00000096   8242               CMP      R2,R0
   \   00000098   00D3               BCC      .+4
   \   0000009A   87E0               B        ??SetTouchScreen_Event_2
   7241            {
   7242                Touch_EventTime=g_counter;
   \                     ??SetTouchScreen_Event_3:
   \   0000009C   6846               MOV      R0,SP
   \   0000009E   03C8               LDM      R0!,{R0,R1}
   \   000000A0   2864               STR      R0,[R5, #+64]
   \   000000A2   6964               STR      R1,[R5, #+68]
   7243                Diff_X[SetTouchStep]=X_up;
   \   000000A4   7000               LSLS     R0,R6,#+1
   \   000000A6   2018               ADDS     R0,R4,R0
   \   000000A8   6946               MOV      R1,SP
   \   000000AA   0989               LDRH     R1,[R1, #+8]
   \   000000AC   8180               STRH     R1,[R0, #+4]
   7244                Diff_Y[SetTouchStep]=Y_up;
   \   000000AE   8781               STRH     R7,[R0, #+12]
   7245                
   7246                if (SetTouchStep<MaxTouchTest-1)
   \   000000B0   032E               CMP      R6,#+3
   \   000000B2   04D2               BCS      ??SetTouchScreen_Event_5
   7247                {
   7248                  SetTouchStep++;
   \   000000B4   761C               ADDS     R6,R6,#+1
   \   000000B6   6670               STRB     R6,[R4, #+1]
   7249                  MenuPaint();
   \   000000B8   ........           BL       MenuPaint
   \   000000BC   76E0               B        ??SetTouchScreen_Event_2
   7250                }else{
   7251                  
   7252                  
   7253                  Xo1=(Diff_X[0]+Diff_X[2])/2;
   \                     ??SetTouchScreen_Event_5:
   \   000000BE   0420               MOVS     R0,#+4
   \   000000C0   205E               LDRSH    R0,[R4, R0]
   \   000000C2   0821               MOVS     R1,#+8
   \   000000C4   615E               LDRSH    R1,[R4, R1]
   \   000000C6   4018               ADDS     R0,R0,R1
   \   000000C8   0100               MOVS     R1,R0
   \   000000CA   C90F               LSRS     R1,R1,#+31
   \   000000CC   0818               ADDS     R0,R1,R0
   \   000000CE   4010               ASRS     R0,R0,#+1
   \   000000D0   ........           BL       __aeabi_i2f
   \   000000D4   6061               STR      R0,[R4, #+20]
   7254                  Xo2=(Diff_X[1]+Diff_X[3])/2;
   \   000000D6   0620               MOVS     R0,#+6
   \   000000D8   205E               LDRSH    R0,[R4, R0]
   \   000000DA   0A21               MOVS     R1,#+10
   \   000000DC   615E               LDRSH    R1,[R4, R1]
   \   000000DE   4018               ADDS     R0,R0,R1
   \   000000E0   0100               MOVS     R1,R0
   \   000000E2   C90F               LSRS     R1,R1,#+31
   \   000000E4   0818               ADDS     R0,R1,R0
   \   000000E6   4010               ASRS     R0,R0,#+1
   \   000000E8   ........           BL       __aeabi_i2f
   \   000000EC   A061               STR      R0,[R4, #+24]
   7255                  Yo1=(Diff_Y[0]+Diff_Y[1])/2;
   \   000000EE   0C20               MOVS     R0,#+12
   \   000000F0   205E               LDRSH    R0,[R4, R0]
   \   000000F2   0E21               MOVS     R1,#+14
   \   000000F4   615E               LDRSH    R1,[R4, R1]
   \   000000F6   4018               ADDS     R0,R0,R1
   \   000000F8   0100               MOVS     R1,R0
   \   000000FA   C90F               LSRS     R1,R1,#+31
   \   000000FC   0818               ADDS     R0,R1,R0
   \   000000FE   4010               ASRS     R0,R0,#+1
   \   00000100   ........           BL       __aeabi_i2f
   \   00000104   0600               MOVS     R6,R0
   \   00000106   E661               STR      R6,[R4, #+28]
   7256                  Yo2=(Diff_Y[2]+Diff_Y[3])/2;
   \   00000108   1020               MOVS     R0,#+16
   \   0000010A   205E               LDRSH    R0,[R4, R0]
   \   0000010C   1221               MOVS     R1,#+18
   \   0000010E   615E               LDRSH    R1,[R4, R1]
   \   00000110   4018               ADDS     R0,R0,R1
   \   00000112   0100               MOVS     R1,R0
   \   00000114   C90F               LSRS     R1,R1,#+31
   \   00000116   0818               ADDS     R0,R1,R0
   \   00000118   4010               ASRS     R0,R0,#+1
   \   0000011A   ........           BL       __aeabi_i2f
   \   0000011E   0700               MOVS     R7,R0
   \   00000120   2762               STR      R7,[R4, #+32]
   7257                  
   7258                  float Xw1=TouchTestSor[0].x;
   7259                  float Xw2=TouchTestSor[1].x;
   7260                  float Yw1=TouchTestSor[0].y;
   7261                  float Yw2=TouchTestSor[3].y;
   7262                  
   7263                  
   7264                  korekta_X.A=(Xw2-Xw1)/(Xo2-Xo1);
   \   00000122   A069               LDR      R0,[R4, #+24]
   \   00000124   6169               LDR      R1,[R4, #+20]
   \   00000126   ........           BL       __aeabi_fsub
   \   0000012A   0100               MOVS     R1,R0
   \   0000012C   2848               LDR      R0,??SetTouchScreen_Event_0+0x1C  ;; 0x424c0000
   \   0000012E   ........           BL       __aeabi_fdiv
   \   00000132   2849               LDR      R1,??SetTouchScreen_Event_0+0x20  ;; korekta_X
   \   00000134   0860               STR      R0,[R1, #+0]
   \   00000136   6169               LDR      R1,[R4, #+20]
   \   00000138   ........           BL       __aeabi_fmul
   \   0000013C   0100               MOVS     R1,R0
   \   0000013E   2648               LDR      R0,??SetTouchScreen_Event_0+0x24  ;; 0x40e00000
   \   00000140   ........           BL       __aeabi_fsub
   \   00000144   2549               LDR      R1,??SetTouchScreen_Event_0+0x28  ;; korekta_X + 4
   \   00000146   0860               STR      R0,[R1, #+0]
   7265                  korekta_X.B=Xw1-korekta_X.A*Xo1;
   7266                  korekta_Y.A=(Yw2-Yw1)/(Yo2-Yo1);
   \   00000148   3800               MOVS     R0,R7
   \   0000014A   3100               MOVS     R1,R6
   \   0000014C   ........           BL       __aeabi_fsub
   \   00000150   0100               MOVS     R1,R0
   \   00000152   2348               LDR      R0,??SetTouchScreen_Event_0+0x2C  ;; 0x42d80000
   \   00000154   ........           BL       __aeabi_fdiv
   \   00000158   224F               LDR      R7,??SetTouchScreen_Event_0+0x30  ;; korekta_Y
   \   0000015A   3860               STR      R0,[R7, #+0]
   7267                  korekta_Y.B=Yw1-korekta_Y.A*Yo1;
   \   0000015C   3100               MOVS     R1,R6
   \   0000015E   ........           BL       __aeabi_fmul
   \   00000162   0100               MOVS     R1,R0
   \   00000164   1C48               LDR      R0,??SetTouchScreen_Event_0+0x24  ;; 0x40e00000
   \   00000166   ........           BL       __aeabi_fsub
   \   0000016A   7860               STR      R0,[R7, #+4]
   7268                  
   7269                       
   7270                  //zapis korekt do flash
   7271                  unsigned int Save = __get_interrupt_state();  
   \   0000016C   ........           BL       __iar_get_interrupt_state
   \   00000170   0600               MOVS     R6,R0
   7272                  __disable_interrupt();
   \   00000172   ........           BL       __iar_disable_interrupt
   7273                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_X)), (char*) (&(korekta_X.A)), sizeof(korekta_X));
                             ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000176   0822               MOVS     R2,#+8
   \   00000178   1649               LDR      R1,??SetTouchScreen_Event_0+0x20  ;; korekta_X
   \   0000017A   1B48               LDR      R0,??SetTouchScreen_Event_0+0x34  ;; 0x13d828
   \   0000017C   ........           BL       FlashWrite
   7274                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_Y)), (char*) (&(korekta_Y.A)), sizeof(korekta_Y));
   \   00000180   0822               MOVS     R2,#+8
   \   00000182   3900               MOVS     R1,R7
   \   00000184   1948               LDR      R0,??SetTouchScreen_Event_0+0x38  ;; 0x13d820
   \   00000186   ........           BL       FlashWrite
   7275                  __set_interrupt_state(Save);
   \   0000018A   3000               MOVS     R0,R6
   \   0000018C   ........           BL       __iar_set_interrupt_state
   7276                  //koniec zapisu do flash
   7277                
   7278                  //je¿eli wejcie w opcje zaawansowane
   7279                  if (StartAdvance)
   \   00000190   2078               LDRB     R0,[R4, #+0]
   \   00000192   0028               CMP      R0,#+0
   \   00000194   04D0               BEQ      ??SetTouchScreen_Event_6
   7280                  {
   7281                    StartAdvance=0;
   \   00000196   0020               MOVS     R0,#+0
   \   00000198   2070               STRB     R0,[R4, #+0]
   7282                    MenuLevel=5;
   \   0000019A   0520               MOVS     R0,#+5
   \   0000019C   2865               STR      R0,[R5, #+80]
   \   0000019E   01E0               B        ??SetTouchScreen_Event_7
   7283                  }else{
   7284                    MenuLevel=1;
   \                     ??SetTouchScreen_Event_6:
   \   000001A0   0120               MOVS     R0,#+1
   \   000001A2   2865               STR      R0,[R5, #+80]
   7285                  }
   7286                  //SetTouchStep=MaxTouchTest;
   7287                  //CleanCanvas();
   7288                  SetTouchStep=0;
   \                     ??SetTouchScreen_Event_7:
   \   000001A4   0020               MOVS     R0,#+0
   \   000001A6   6070               STRB     R0,[R4, #+1]
   7289                  MenuPaint();
   \   000001A8   ........           BL       MenuPaint
   7290                }
   7291            }
   7292          }
   7293          
   7294          }
   \                     ??SetTouchScreen_Event_2:
   \   000001AC   05B0               ADD      SP,SP,#+20
   \   000001AE   F0BC               POP      {R4-R7}
   \   000001B0   01BC               POP      {R0}
   \   000001B2   0047               BX       R0               ;; return
   \                     ??SetTouchScreen_Event_0:
   \   000001B4   ........           DC32     StartAdvance
   \   000001B8   ........           DC32     X_down
   \   000001BC   ........           DC32     Y_down
   \   000001C0   ........           DC32     X_up
   \   000001C4   ........           DC32     Y_up
   \   000001C8   ........           DC32     TextToChangeLength
   \   000001CC   ........           DC32     g_counter
   \   000001D0   00004C42           DC32     0x424c0000
   \   000001D4   ........           DC32     korekta_X
   \   000001D8   0000E040           DC32     0x40e00000
   \   000001DC   ........           DC32     korekta_X + 4
   \   000001E0   0000D842           DC32     0x42d80000
   \   000001E4   ........           DC32     korekta_Y
   \   000001E8   28D81300           DC32     0x13d828
   \   000001EC   20D81300           DC32     0x13d820
   7295              
   7296              
   7297              
   7298              
   7299          
   7300          //restart
   7301                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7302                void Restart_Event(void)
   7303                {
   \                     Restart_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   7304                  AT91S_RSTC  g_AT91S_RSTC;
   7305                  int ans;
   7306           
   7307                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1148               LDR      R0,??Restart_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1048               LDR      R0,??Restart_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1048               LDR      R0,??Restart_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1048               LDR      R0,??Restart_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   7308            
   7309                  if (ans)
   \   0000001A   0028               CMP      R0,#+0
   \   0000001C   10D0               BEQ      ??Restart_Event_1
   7310                    {
   7311                    if (ans==2) 
   \   0000001E   0228               CMP      R0,#+2
   \   00000020   02D1               BNE      ??Restart_Event_2
   7312                    {
   7313          
   7314                      //restart
   7315                      AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   00000022   0D49               LDR      R1,??Restart_Event_0+0x10  ;; 0xfffffd00
   \   00000024   0D4A               LDR      R2,??Restart_Event_0+0x14  ;; 0xa5000005
   \   00000026   0A60               STR      R2,[R1, #+0]
   7316                    }
   7317                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??Restart_Event_2:
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   01D4               BMI      ??Restart_Event_3
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   05D1               BNE      ??Restart_Event_4
   \                     ??Restart_Event_3:
   \   00000030   0B4C               LDR      R4,??Restart_Event_0+0x18  ;; TextToChangeLength
   \   00000032   206D               LDR      R0,[R4, #+80]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   2065               STR      R0,[R4, #+80]
   7318                    MenuPaint();
   \                     ??Restart_Event_4:
   \   0000003C   ........           BL       MenuPaint
   7319                    } 
   7320                }//_______________________________________________________________________
   \                     ??Restart_Event_1:
   \   00000040   10BC               POP      {R4}
   \   00000042   01BC               POP      {R0}
   \   00000044   0047               BX       R0               ;; return
   \   00000046   C046               Nop      
   \                     ??Restart_Event_0:
   \   00000048   ........           DC32     Y_down
   \   0000004C   ........           DC32     X_down
   \   00000050   ........           DC32     Y_up
   \   00000054   ........           DC32     X_up
   \   00000058   00FDFFFF           DC32     0xfffffd00
   \   0000005C   050000A5           DC32     0xa5000005
   \   00000060   ........           DC32     TextToChangeLength
   7321              
   7322              
   7323          
   7324              
   7325          
   7326          
   7327              
   7328          //czyæ rejestr
   7329                //*-----------------------------------------------------------------------
   7330              

   \                                 In section Debug.txt, align 4, keep-with-next
   7331                void CleanReg_Event(void)
   7332                {
   \                     CleanReg_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7333                  int ans;
   7334           
   7335                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1448               LDR      R0,??CleanReg_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1348               LDR      R0,??CleanReg_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1348               LDR      R0,??CleanReg_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1348               LDR      R0,??CleanReg_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   7336            
   7337                  if (ans)
   \   0000001C   17D0               BEQ      ??CleanReg_Event_1
   7338                    {
   7339                    if (ans==2) 
   \   0000001E   022C               CMP      R4,#+2
   \   00000020   09D1               BNE      ??CleanReg_Event_2
   7340                    {
   7341                      //czyszczenie rejestru
   7342                      CleanReg();
   \   00000022   ........           BL       CleanReg
   7343                      MenuLevel=(MenuLevel/10);
   \   00000026   0F4D               LDR      R5,??CleanReg_Event_0+0x10  ;; TextToChangeLength
   \   00000028   286D               LDR      R0,[R5, #+80]
   \   0000002A   0A21               MOVS     R1,#+10
   \   0000002C   ........           BL       __aeabi_idivmod
   \   00000030   2865               STR      R0,[R5, #+80]
   7344                      MenuPaint();
   \   00000032   ........           BL       MenuPaint
   7345                    }
   7346                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??CleanReg_Event_2:
   \   00000036   002C               CMP      R4,#+0
   \   00000038   01D4               BMI      ??CleanReg_Event_3
   \   0000003A   012C               CMP      R4,#+1
   \   0000003C   05D1               BNE      ??CleanReg_Event_4
   \                     ??CleanReg_Event_3:
   \   0000003E   094D               LDR      R5,??CleanReg_Event_0+0x10  ;; TextToChangeLength
   \   00000040   286D               LDR      R0,[R5, #+80]
   \   00000042   0A21               MOVS     R1,#+10
   \   00000044   ........           BL       __aeabi_idivmod
   \   00000048   2865               STR      R0,[R5, #+80]
   7347                    MenuPaint();
   \                     ??CleanReg_Event_4:
   \   0000004A   ........           BL       MenuPaint
   7348                    } 
   7349                }//_______________________________________________________________________
   \                     ??CleanReg_Event_1:
   \   0000004E   38BC               POP      {R3-R5}
   \   00000050   01BC               POP      {R0}
   \   00000052   0047               BX       R0               ;; return
   \                     ??CleanReg_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     TextToChangeLength
   7350                   
   7351              
   7352              
   7353          //Ustawienia czasu  **************************************************************************************************************
   7354              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7355              void SetupTime_Paint(void)
   7356              {  
   \                     SetupTime_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   B04C               LDR      R4,??SetupTime_Paint_0  ;; g_leng
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   AEA0               ADR      R0,??SetupTime_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0121               MOVS     R1,#+1
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   2068               LDR      R0,[R4, #+0]
   \   0000001E   AB4D               LDR      R5,??SetupTime_Paint_0+0x8  ;; 0xa7d
   \   00000020   6843               MULS     R0,R5,R0
   \   00000022   AB4D               LDR      R5,??SetupTime_Paint_0+0xC  ;; Speech
   \   00000024   2818               ADDS     R0,R5,R0
   \   00000026   B430               ADDS     R0,R0,#+180
   7357                 List_Paint(Speech[g_leng].DataCzas,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
   7358                 
   7359          
   7360                 
   7361                 Label(Speech[g_leng].CzasGMS,0,3,99,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000002E   82B0               SUB      SP,SP,#+8
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   0090               STR      R0,[SP, #+0]
   \   00000034   7F21               MOVS     R1,#+127
   \   00000036   0120               MOVS     R0,#+1
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   2121               MOVS     R1,#+33
   \   0000003C   0A20               MOVS     R0,#+10
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   6323               MOVS     R3,#+99
   \   00000042   0322               MOVS     R2,#+3
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   2068               LDR      R0,[R4, #+0]
   \   00000048   A04D               LDR      R5,??SetupTime_Paint_0+0x8  ;; 0xa7d
   \   0000004A   6843               MULS     R0,R5,R0
   \   0000004C   A04D               LDR      R5,??SetupTime_Paint_0+0xC  ;; Speech
   \   0000004E   2818               ADDS     R0,R5,R0
   \   00000050   8730               ADDS     R0,R0,#+135
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   7362                    
   7363                    
   7364                 char time_char[3];
   7365                  
   7366                 CharToStr(DateTime.Hour, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000058   9E4D               LDR      R5,??SetupTime_Paint_0+0x10  ;; DateTime
   \   0000005A   0222               MOVS     R2,#+2
   \   0000005C   6946               MOV      R1,SP
   \   0000005E   E878               LDRB     R0,[R5, #+3]
   \   00000060   ........           BL       CharToStr
   7367                 Label(time_char,2,12,87,2,11,1,127,((SetupTimeCarPoz)&0x1) );  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000064   0126               MOVS     R6,#+1
   \   00000066   9C4F               LDR      R7,??SetupTime_Paint_0+0x14  ;; SetupTimeCarPoz
   \   00000068   82B0               SUB      SP,SP,#+8
   \   0000006A   3878               LDRB     R0,[R7, #+0]
   \   0000006C   3100               MOVS     R1,R6
   \   0000006E   0140               ANDS     R1,R1,R0
   \   00000070   0091               STR      R1,[SP, #+0]
   \   00000072   7F21               MOVS     R1,#+127
   \   00000074   3000               MOVS     R0,R6
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   0B21               MOVS     R1,#+11
   \   0000007A   0220               MOVS     R0,#+2
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   5723               MOVS     R3,#+87
   \   00000080   0C22               MOVS     R2,#+12
   \   00000082   0100               MOVS     R1,R0
   \   00000084   06A8               ADD      R0,SP,#+24
   \   00000086   ........           BL       Label
   \   0000008A   06B0               ADD      SP,SP,#+24
   7368                 CharToStr(DateTime.Minute, time_char, 2); //(char Value, char *Vstring, char ill);
   \   0000008C   0222               MOVS     R2,#+2
   \   0000008E   6946               MOV      R1,SP
   \   00000090   2879               LDRB     R0,[R5, #+4]
   \   00000092   ........           BL       CharToStr
   7369                 Label(time_char,2,27,87,2,11,1,127,(SetupTimeCarPoz>>1)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000096   82B0               SUB      SP,SP,#+8
   \   00000098   3878               LDRB     R0,[R7, #+0]
   \   0000009A   4008               LSRS     R0,R0,#+1
   \   0000009C   3100               MOVS     R1,R6
   \   0000009E   0140               ANDS     R1,R1,R0
   \   000000A0   0091               STR      R1,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   3000               MOVS     R0,R6
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   0B21               MOVS     R1,#+11
   \   000000AA   0220               MOVS     R0,#+2
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   5723               MOVS     R3,#+87
   \   000000B0   1B22               MOVS     R2,#+27
   \   000000B2   0100               MOVS     R1,R0
   \   000000B4   06A8               ADD      R0,SP,#+24
   \   000000B6   ........           BL       Label
   \   000000BA   06B0               ADD      SP,SP,#+24
   7370                 CharToStr(DateTime.Second, time_char, 2); //(char Value, char *Vstring, char ill);
   \   000000BC   0222               MOVS     R2,#+2
   \   000000BE   6946               MOV      R1,SP
   \   000000C0   6879               LDRB     R0,[R5, #+5]
   \   000000C2   ........           BL       CharToStr
   7371                 Label(time_char,2,42,87,2,11,1,127,(SetupTimeCarPoz>>2)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   3878               LDRB     R0,[R7, #+0]
   \   000000CA   8008               LSRS     R0,R0,#+2
   \   000000CC   3100               MOVS     R1,R6
   \   000000CE   0140               ANDS     R1,R1,R0
   \   000000D0   0091               STR      R1,[SP, #+0]
   \   000000D2   7F21               MOVS     R1,#+127
   \   000000D4   3000               MOVS     R0,R6
   \   000000D6   03B4               PUSH     {R0,R1}
   \   000000D8   0B21               MOVS     R1,#+11
   \   000000DA   0220               MOVS     R0,#+2
   \   000000DC   03B4               PUSH     {R0,R1}
   \   000000DE   5723               MOVS     R3,#+87
   \   000000E0   2A22               MOVS     R2,#+42
   \   000000E2   0100               MOVS     R1,R0
   \   000000E4   06A8               ADD      R0,SP,#+24
   \   000000E6   ........           BL       Label
   \   000000EA   06B0               ADD      SP,SP,#+24
   7372                  
   7373                 
   7374                 Label(Speech[g_leng].DataDMR,0,3,74,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   0020               MOVS     R0,#+0
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   7F21               MOVS     R1,#+127
   \   000000F4   3000               MOVS     R0,R6
   \   000000F6   03B4               PUSH     {R0,R1}
   \   000000F8   2121               MOVS     R1,#+33
   \   000000FA   0A20               MOVS     R0,#+10
   \   000000FC   03B4               PUSH     {R0,R1}
   \   000000FE   4A23               MOVS     R3,#+74
   \   00000100   0322               MOVS     R2,#+3
   \   00000102   0021               MOVS     R1,#+0
   \   00000104   8C46               MOV      R12,R1
   \   00000106   2068               LDR      R0,[R4, #+0]
   \   00000108   7049               LDR      R1,??SetupTime_Paint_0+0x8  ;; 0xa7d
   \   0000010A   4843               MULS     R0,R1,R0
   \   0000010C   7049               LDR      R1,??SetupTime_Paint_0+0xC  ;; Speech
   \   0000010E   0818               ADDS     R0,R1,R0
   \   00000110   A530               ADDS     R0,R0,#+165
   \   00000112   6146               MOV      R1,R12
   \   00000114   ........           BL       Label
   \   00000118   06B0               ADD      SP,SP,#+24
   7375                
   7376                 CharToStrData(DateTime.Day, time_char); //(char Value, char *Vstring, char ill);
   \   0000011A   6946               MOV      R1,SP
   \   0000011C   A878               LDRB     R0,[R5, #+2]
   \   0000011E   ........           BL       CharToStrData
   7377                 Label(time_char,2,12,62,2,10,1,127,(SetupTimeCarPoz>>3)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   3878               LDRB     R0,[R7, #+0]
   \   00000126   C008               LSRS     R0,R0,#+3
   \   00000128   3100               MOVS     R1,R6
   \   0000012A   0140               ANDS     R1,R1,R0
   \   0000012C   0091               STR      R1,[SP, #+0]
   \   0000012E   7F21               MOVS     R1,#+127
   \   00000130   3000               MOVS     R0,R6
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   0A21               MOVS     R1,#+10
   \   00000136   0220               MOVS     R0,#+2
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   3E23               MOVS     R3,#+62
   \   0000013C   0C22               MOVS     R2,#+12
   \   0000013E   0100               MOVS     R1,R0
   \   00000140   06A8               ADD      R0,SP,#+24
   \   00000142   ........           BL       Label
   \   00000146   06B0               ADD      SP,SP,#+24
   7378                 CharToStrData(DateTime.Mounth, time_char); //(char Value, char *Vstring, char ill);
   \   00000148   6946               MOV      R1,SP
   \   0000014A   6878               LDRB     R0,[R5, #+1]
   \   0000014C   ........           BL       CharToStrData
   7379                 Label(time_char,2,27,62,2,10,1,127,(SetupTimeCarPoz>>4)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000150   82B0               SUB      SP,SP,#+8
   \   00000152   3878               LDRB     R0,[R7, #+0]
   \   00000154   0009               LSRS     R0,R0,#+4
   \   00000156   3100               MOVS     R1,R6
   \   00000158   0140               ANDS     R1,R1,R0
   \   0000015A   0091               STR      R1,[SP, #+0]
   \   0000015C   7F21               MOVS     R1,#+127
   \   0000015E   3000               MOVS     R0,R6
   \   00000160   03B4               PUSH     {R0,R1}
   \   00000162   0A21               MOVS     R1,#+10
   \   00000164   0220               MOVS     R0,#+2
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   3E23               MOVS     R3,#+62
   \   0000016A   1B22               MOVS     R2,#+27
   \   0000016C   0100               MOVS     R1,R0
   \   0000016E   06A8               ADD      R0,SP,#+24
   \   00000170   ........           BL       Label
   \   00000174   06B0               ADD      SP,SP,#+24
   7380                 CharToStrData(DateTime.Year, time_char); //(char Value, char *Vstring, char ill);
   \   00000176   6946               MOV      R1,SP
   \   00000178   2878               LDRB     R0,[R5, #+0]
   \   0000017A   ........           BL       CharToStrData
   7381                 Label(time_char,2,42,62,2,10,1,127,(SetupTimeCarPoz>>5)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   3878               LDRB     R0,[R7, #+0]
   \   00000182   4009               LSRS     R0,R0,#+5
   \   00000184   0640               ANDS     R6,R6,R0
   \   00000186   0096               STR      R6,[SP, #+0]
   \   00000188   7F21               MOVS     R1,#+127
   \   0000018A   0120               MOVS     R0,#+1
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   0A21               MOVS     R1,#+10
   \   00000190   0220               MOVS     R0,#+2
   \   00000192   03B4               PUSH     {R0,R1}
   \   00000194   3E23               MOVS     R3,#+62
   \   00000196   2A22               MOVS     R2,#+42
   \   00000198   0100               MOVS     R1,R0
   \   0000019A   06A8               ADD      R0,SP,#+24
   \   0000019C   ........           BL       Label
   \   000001A0   06B0               ADD      SP,SP,#+24
   7382                  
   7383              
   7384                 
   7385                 H_line(10,97,46,1); // (char X, int Y, char lenght, char typ) 
   \   000001A2   0123               MOVS     R3,#+1
   \   000001A4   2E22               MOVS     R2,#+46
   \   000001A6   6121               MOVS     R1,#+97
   \   000001A8   0A20               MOVS     R0,#+10
   \   000001AA   ........           BL       H_line
   7386                 H_line(10,85,46,1); // (char X, int Y, char lenght, char typ) 
   \   000001AE   0123               MOVS     R3,#+1
   \   000001B0   2E22               MOVS     R2,#+46
   \   000001B2   5521               MOVS     R1,#+85
   \   000001B4   0A20               MOVS     R0,#+10
   \   000001B6   ........           BL       H_line
   7387                 V_line(10,86,11,1); // (char X, int Y, char lenght, char typ) 
   \   000001BA   0123               MOVS     R3,#+1
   \   000001BC   0B22               MOVS     R2,#+11
   \   000001BE   5621               MOVS     R1,#+86
   \   000001C0   0A20               MOVS     R0,#+10
   \   000001C2   ........           BL       V_line
   7388                 Label(":",0,25,88,1,1,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001C6   45A6               ADR      R6,??SetupTime_Paint_0+0x18  ;; 0x3A, 0x00, 0x00, 0x00
   \   000001C8   82B0               SUB      SP,SP,#+8
   \   000001CA   0020               MOVS     R0,#+0
   \   000001CC   0090               STR      R0,[SP, #+0]
   \   000001CE   7F21               MOVS     R1,#+127
   \   000001D0   0120               MOVS     R0,#+1
   \   000001D2   03B4               PUSH     {R0,R1}
   \   000001D4   0100               MOVS     R1,R0
   \   000001D6   03B4               PUSH     {R0,R1}
   \   000001D8   5823               MOVS     R3,#+88
   \   000001DA   1922               MOVS     R2,#+25
   \   000001DC   0021               MOVS     R1,#+0
   \   000001DE   3000               MOVS     R0,R6
   \   000001E0   ........           BL       Label
   \   000001E4   06B0               ADD      SP,SP,#+24
   7389                 Label(":",0,40,88,1,1,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001E6   82B0               SUB      SP,SP,#+8
   \   000001E8   0020               MOVS     R0,#+0
   \   000001EA   0090               STR      R0,[SP, #+0]
   \   000001EC   7F21               MOVS     R1,#+127
   \   000001EE   0120               MOVS     R0,#+1
   \   000001F0   03B4               PUSH     {R0,R1}
   \   000001F2   0100               MOVS     R1,R0
   \   000001F4   03B4               PUSH     {R0,R1}
   \   000001F6   5823               MOVS     R3,#+88
   \   000001F8   2822               MOVS     R2,#+40
   \   000001FA   0021               MOVS     R1,#+0
   \   000001FC   3000               MOVS     R0,R6
   \   000001FE   ........           BL       Label
   \   00000202   06B0               ADD      SP,SP,#+24
   7390                   
   7391                 //V_line(25,86,11,1); // (char X, int Y, char lenght, char typ) 
   7392                 //V_line(40,86,11,1); // (char X, int Y, char lenght, char typ) 
   7393                 V_line(55,86,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000204   0123               MOVS     R3,#+1
   \   00000206   0B22               MOVS     R2,#+11
   \   00000208   5621               MOVS     R1,#+86
   \   0000020A   3720               MOVS     R0,#+55
   \   0000020C   ........           BL       V_line
   7394                 
   7395                 H_line(10,72,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000210   0123               MOVS     R3,#+1
   \   00000212   2E22               MOVS     R2,#+46
   \   00000214   4821               MOVS     R1,#+72
   \   00000216   0A20               MOVS     R0,#+10
   \   00000218   ........           BL       H_line
   7396                 H_line(10,60,46,1); // (char X, int Y, char lenght, char typ) 
   \   0000021C   0123               MOVS     R3,#+1
   \   0000021E   2E22               MOVS     R2,#+46
   \   00000220   3C21               MOVS     R1,#+60
   \   00000222   0A20               MOVS     R0,#+10
   \   00000224   ........           BL       H_line
   7397                 V_line(10,61,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000228   0123               MOVS     R3,#+1
   \   0000022A   0B22               MOVS     R2,#+11
   \   0000022C   3D21               MOVS     R1,#+61
   \   0000022E   0A20               MOVS     R0,#+10
   \   00000230   ........           BL       V_line
   7398                 H_line(23,66,4,1); // (char X, int Y, char lenght, char typ) 
   \   00000234   0123               MOVS     R3,#+1
   \   00000236   0422               MOVS     R2,#+4
   \   00000238   4221               MOVS     R1,#+66
   \   0000023A   1720               MOVS     R0,#+23
   \   0000023C   ........           BL       H_line
   7399                 H_line(38,66,4,1); // (char X, int Y, char lenght, char typ) 
   \   00000240   0123               MOVS     R3,#+1
   \   00000242   0422               MOVS     R2,#+4
   \   00000244   4221               MOVS     R1,#+66
   \   00000246   2620               MOVS     R0,#+38
   \   00000248   ........           BL       H_line
   7400                 //V_line(25,61,11,1); // (char X, int Y, char lenght, char typ) 
   7401                 //V_line(40,61,11,1); // (char X, int Y, char lenght, char typ) 
   7402                 V_line(55,61,11,1); // (char X, int Y, char lenght, char typ) 
   \   0000024C   0123               MOVS     R3,#+1
   \   0000024E   0B22               MOVS     R2,#+11
   \   00000250   3D21               MOVS     R1,#+61
   \   00000252   3720               MOVS     R0,#+55
   \   00000254   ........           BL       V_line
   7403                 
   7404                
   7405                // Button("> ",42,5,18,18);
   7406                // Button("< ",3,5,18,18);
   7407          
   7408                 Label((char*)DeyOfWeekLongStr[g_leng][DateTime.DayOfWeek],2,2,9,12,58,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000258   82B0               SUB      SP,SP,#+8
   \   0000025A   0020               MOVS     R0,#+0
   \   0000025C   0090               STR      R0,[SP, #+0]
   \   0000025E   6921               MOVS     R1,#+105
   \   00000260   03B4               PUSH     {R0,R1}
   \   00000262   3A21               MOVS     R1,#+58
   \   00000264   0C20               MOVS     R0,#+12
   \   00000266   03B4               PUSH     {R0,R1}
   \   00000268   0923               MOVS     R3,#+9
   \   0000026A   0222               MOVS     R2,#+2
   \   0000026C   1100               MOVS     R1,R2
   \   0000026E   A879               LDRB     R0,[R5, #+6]
   \   00000270   0C25               MOVS     R5,#+12
   \   00000272   6843               MULS     R0,R5,R0
   \   00000274   2468               LDR      R4,[R4, #+0]
   \   00000276   6025               MOVS     R5,#+96
   \   00000278   6C43               MULS     R4,R5,R4
   \   0000027A   194D               LDR      R5,??SetupTime_Paint_0+0x1C  ;; DeyOfWeekLongStr
   \   0000027C   2C19               ADDS     R4,R5,R4
   \   0000027E   2018               ADDS     R0,R4,R0
   \   00000280   ........           BL       Label
   \   00000284   06B0               ADD      SP,SP,#+24
   7409                        
   7410                 
   7411                 
   7412                 char LabelButt[2];
   7413                 LabelButt[1]=0;
   \   00000286   01AC               ADD      R4,SP,#+4
   \   00000288   0020               MOVS     R0,#+0
   \   0000028A   6070               STRB     R0,[R4, #+1]
   7414                 LabelButt[0]=30;
   \   0000028C   1E20               MOVS     R0,#+30
   \   0000028E   2070               STRB     R0,[R4, #+0]
   7415                 Button(LabelButt,33,30,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000290   82B0               SUB      SP,SP,#+8
   \   00000292   1920               MOVS     R0,#+25
   \   00000294   0090               STR      R0,[SP, #+0]
   \   00000296   1323               MOVS     R3,#+19
   \   00000298   1E22               MOVS     R2,#+30
   \   0000029A   2121               MOVS     R1,#+33
   \   0000029C   03A8               ADD      R0,SP,#+12
   \   0000029E   ........           BL       Button
   \   000002A2   02B0               ADD      SP,SP,#+8
   7416                 LabelButt[0]=31;
   \   000002A4   1F20               MOVS     R0,#+31
   \   000002A6   2070               STRB     R0,[R4, #+0]
   7417                 Button(LabelButt,12,30,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000002A8   82B0               SUB      SP,SP,#+8
   \   000002AA   1920               MOVS     R0,#+25
   \   000002AC   0090               STR      R0,[SP, #+0]
   \   000002AE   1323               MOVS     R3,#+19
   \   000002B0   1E22               MOVS     R2,#+30
   \   000002B2   0C21               MOVS     R1,#+12
   \   000002B4   03A8               ADD      R0,SP,#+12
   \   000002B6   ........           BL       Button
   \   000002BA   02B0               ADD      SP,SP,#+8
   7418                 
   7419                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   7420              }//________________________________________________________________________
   \   000002BC   FEBC               POP      {R1-R7}
   \   000002BE   01BC               POP      {R0}
   \   000002C0   0047               BX       R0               ;; return
   \   000002C2   C046               Nop      
   \                     ??SetupTime_Paint_0:
   \   000002C4   ........           DC32     g_leng
   \   000002C8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002CC   7D0A0000           DC32     0xa7d
   \   000002D0   ........           DC32     Speech
   \   000002D4   ........           DC32     DateTime
   \   000002D8   ........           DC32     SetupTimeCarPoz
   \   000002DC   3A000000           DC8      0x3A, 0x00, 0x00, 0x00
   \   000002E0   ........           DC32     DeyOfWeekLongStr
   7421          

   \                                 In section Debug.txt, align 4, keep-with-next
   7422              void SetupTime_Refresh(void)
   7423              {  
   \                     SetupTime_Refresh:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   7424          
   7425                 char time_char[3];
   7426                  
   7427                 CharToStr(DateTime.Hour, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000002   544C               LDR      R4,??SetupTime_Refresh_0  ;; DateTime
   \   00000004   0222               MOVS     R2,#+2
   \   00000006   6946               MOV      R1,SP
   \   00000008   E078               LDRB     R0,[R4, #+3]
   \   0000000A   ........           BL       CharToStr
   7428                 Label(time_char,2,12,87,2,11,1,127,((SetupTimeCarPoz)&0x1) );  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000000E   0126               MOVS     R6,#+1
   \   00000010   514D               LDR      R5,??SetupTime_Refresh_0+0x4  ;; SetupTimeCarPoz
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   2878               LDRB     R0,[R5, #+0]
   \   00000016   3100               MOVS     R1,R6
   \   00000018   0140               ANDS     R1,R1,R0
   \   0000001A   0091               STR      R1,[SP, #+0]
   \   0000001C   7F21               MOVS     R1,#+127
   \   0000001E   3000               MOVS     R0,R6
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0B21               MOVS     R1,#+11
   \   00000024   0220               MOVS     R0,#+2
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   5723               MOVS     R3,#+87
   \   0000002A   0C22               MOVS     R2,#+12
   \   0000002C   0100               MOVS     R1,R0
   \   0000002E   06A8               ADD      R0,SP,#+24
   \   00000030   ........           BL       Label
   \   00000034   06B0               ADD      SP,SP,#+24
   7429                 CharToStr2(DateTime.Minute, time_char, 2); //(char Value, char *Vstring, char ill);
                        ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   \   00000036   0222               MOVS     R2,#+2
   \   00000038   6946               MOV      R1,SP
   \   0000003A   2079               LDRB     R0,[R4, #+4]
   \   0000003C   ........           BL       CharToStr2
   7430                 Label(time_char,2,27,87,2,11,1,127,(SetupTimeCarPoz>>1)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   2878               LDRB     R0,[R5, #+0]
   \   00000044   4008               LSRS     R0,R0,#+1
   \   00000046   3100               MOVS     R1,R6
   \   00000048   0140               ANDS     R1,R1,R0
   \   0000004A   0091               STR      R1,[SP, #+0]
   \   0000004C   7F21               MOVS     R1,#+127
   \   0000004E   3000               MOVS     R0,R6
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0B21               MOVS     R1,#+11
   \   00000054   0220               MOVS     R0,#+2
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   5723               MOVS     R3,#+87
   \   0000005A   1B22               MOVS     R2,#+27
   \   0000005C   0100               MOVS     R1,R0
   \   0000005E   06A8               ADD      R0,SP,#+24
   \   00000060   ........           BL       Label
   \   00000064   06B0               ADD      SP,SP,#+24
   7431                 CharToStr2(DateTime.Second, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000066   0222               MOVS     R2,#+2
   \   00000068   6946               MOV      R1,SP
   \   0000006A   6079               LDRB     R0,[R4, #+5]
   \   0000006C   ........           BL       CharToStr2
   7432                 Label(time_char,2,42,87,2,11,1,127,(SetupTimeCarPoz>>2)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   2878               LDRB     R0,[R5, #+0]
   \   00000074   8008               LSRS     R0,R0,#+2
   \   00000076   3100               MOVS     R1,R6
   \   00000078   0140               ANDS     R1,R1,R0
   \   0000007A   0091               STR      R1,[SP, #+0]
   \   0000007C   7F21               MOVS     R1,#+127
   \   0000007E   3000               MOVS     R0,R6
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   0B21               MOVS     R1,#+11
   \   00000084   0220               MOVS     R0,#+2
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   5723               MOVS     R3,#+87
   \   0000008A   2A22               MOVS     R2,#+42
   \   0000008C   0100               MOVS     R1,R0
   \   0000008E   06A8               ADD      R0,SP,#+24
   \   00000090   ........           BL       Label
   \   00000094   06B0               ADD      SP,SP,#+24
   7433                  
   7434          
   7435                 CharToStrData(DateTime.Day, time_char); //(char Value, char *Vstring, char ill);
   \   00000096   6946               MOV      R1,SP
   \   00000098   A078               LDRB     R0,[R4, #+2]
   \   0000009A   ........           BL       CharToStrData
   7436                 Label(time_char,2,12,62,2,10,1,127,(SetupTimeCarPoz>>3)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   2878               LDRB     R0,[R5, #+0]
   \   000000A2   C008               LSRS     R0,R0,#+3
   \   000000A4   3100               MOVS     R1,R6
   \   000000A6   0140               ANDS     R1,R1,R0
   \   000000A8   0091               STR      R1,[SP, #+0]
   \   000000AA   7F21               MOVS     R1,#+127
   \   000000AC   3000               MOVS     R0,R6
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   0A21               MOVS     R1,#+10
   \   000000B2   0220               MOVS     R0,#+2
   \   000000B4   03B4               PUSH     {R0,R1}
   \   000000B6   3E23               MOVS     R3,#+62
   \   000000B8   0C22               MOVS     R2,#+12
   \   000000BA   0100               MOVS     R1,R0
   \   000000BC   06A8               ADD      R0,SP,#+24
   \   000000BE   ........           BL       Label
   \   000000C2   06B0               ADD      SP,SP,#+24
   7437                 CharToStrData(DateTime.Mounth, time_char); //(char Value, char *Vstring, char ill);
   \   000000C4   6946               MOV      R1,SP
   \   000000C6   6078               LDRB     R0,[R4, #+1]
   \   000000C8   ........           BL       CharToStrData
   7438                 Label(time_char,2,27,62,2,10,1,127,(SetupTimeCarPoz>>4)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000CC   82B0               SUB      SP,SP,#+8
   \   000000CE   2878               LDRB     R0,[R5, #+0]
   \   000000D0   0009               LSRS     R0,R0,#+4
   \   000000D2   3100               MOVS     R1,R6
   \   000000D4   0140               ANDS     R1,R1,R0
   \   000000D6   0091               STR      R1,[SP, #+0]
   \   000000D8   7F21               MOVS     R1,#+127
   \   000000DA   3000               MOVS     R0,R6
   \   000000DC   03B4               PUSH     {R0,R1}
   \   000000DE   0A21               MOVS     R1,#+10
   \   000000E0   0220               MOVS     R0,#+2
   \   000000E2   03B4               PUSH     {R0,R1}
   \   000000E4   3E23               MOVS     R3,#+62
   \   000000E6   1B22               MOVS     R2,#+27
   \   000000E8   0100               MOVS     R1,R0
   \   000000EA   06A8               ADD      R0,SP,#+24
   \   000000EC   ........           BL       Label
   \   000000F0   06B0               ADD      SP,SP,#+24
   7439                 CharToStrData(DateTime.Year, time_char); //(char Value, char *Vstring, char ill);
   \   000000F2   6946               MOV      R1,SP
   \   000000F4   2078               LDRB     R0,[R4, #+0]
   \   000000F6   ........           BL       CharToStrData
   7440                 Label(time_char,2,42,62,2,10,1,127,(SetupTimeCarPoz>>5)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   2878               LDRB     R0,[R5, #+0]
   \   000000FE   4009               LSRS     R0,R0,#+5
   \   00000100   0640               ANDS     R6,R6,R0
   \   00000102   0096               STR      R6,[SP, #+0]
   \   00000104   7F21               MOVS     R1,#+127
   \   00000106   0120               MOVS     R0,#+1
   \   00000108   03B4               PUSH     {R0,R1}
   \   0000010A   0A21               MOVS     R1,#+10
   \   0000010C   0220               MOVS     R0,#+2
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   3E23               MOVS     R3,#+62
   \   00000112   2A22               MOVS     R2,#+42
   \   00000114   0100               MOVS     R1,R0
   \   00000116   06A8               ADD      R0,SP,#+24
   \   00000118   ........           BL       Label
   \   0000011C   06B0               ADD      SP,SP,#+24
   7441                  
   7442                 
   7443                 Label((char*)DeyOfWeekLongStr[g_leng][DateTime.DayOfWeek],2,2,9,12,58,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   0020               MOVS     R0,#+0
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   6921               MOVS     R1,#+105
   \   00000126   03B4               PUSH     {R0,R1}
   \   00000128   3A21               MOVS     R1,#+58
   \   0000012A   0C20               MOVS     R0,#+12
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   0923               MOVS     R3,#+9
   \   00000130   0222               MOVS     R2,#+2
   \   00000132   1100               MOVS     R1,R2
   \   00000134   A079               LDRB     R0,[R4, #+6]
   \   00000136   0C24               MOVS     R4,#+12
   \   00000138   6043               MULS     R0,R4,R0
   \   0000013A   084C               LDR      R4,??SetupTime_Refresh_0+0x8  ;; g_leng
   \   0000013C   2468               LDR      R4,[R4, #+0]
   \   0000013E   6025               MOVS     R5,#+96
   \   00000140   6C43               MULS     R4,R5,R4
   \   00000142   074D               LDR      R5,??SetupTime_Refresh_0+0xC  ;; DeyOfWeekLongStr
   \   00000144   2C19               ADDS     R4,R5,R4
   \   00000146   2018               ADDS     R0,R4,R0
   \   00000148   ........           BL       Label
   \   0000014C   06B0               ADD      SP,SP,#+24
   7444                        
   7445              }//________________________________________________________________________
   \   0000014E   7CBC               POP      {R2-R6}
   \   00000150   01BC               POP      {R0}
   \   00000152   0047               BX       R0               ;; return
   \                     ??SetupTime_Refresh_0:
   \   00000154   ........           DC32     DateTime
   \   00000158   ........           DC32     SetupTimeCarPoz
   \   0000015C   ........           DC32     g_leng
   \   00000160   ........           DC32     DeyOfWeekLongStr
   7446          
   7447          

   \                                 In section Debug.txt, align 4, keep-with-next
   7448          int przestepny(int rok) {
   \                     przestepny:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   7449          	return ((rok % 4 == 0  &&  rok % 100 != 0) || rok % 400 == 0);
   \   00000004   4010               ASRS     R0,R0,#+1
   \   00000006   800F               LSRS     R0,R0,#+30
   \   00000008   0019               ADDS     R0,R0,R4
   \   0000000A   8010               ASRS     R0,R0,#+2
   \   0000000C   8000               LSLS     R0,R0,#+2
   \   0000000E   201A               SUBS     R0,R4,R0
   \   00000010   05D1               BNE      ??przestepny_0
   \   00000012   2000               MOVS     R0,R4
   \   00000014   6421               MOVS     R1,#+100
   \   00000016   ........           BL       __aeabi_idivmod
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   09D1               BNE      ??przestepny_1
   \                     ??przestepny_0:
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   C821               MOVS     R1,#+200
   \   00000022   4900               LSLS     R1,R1,#+1        ;; #+400
   \   00000024   ........           BL       __aeabi_idivmod
   \   00000028   0800               MOVS     R0,R1
   \   0000002A   401E               SUBS     R0,R0,#+1
   \   0000002C   8041               SBCS     R0,R0,R0
   \   0000002E   C00F               LSRS     R0,R0,#+31
   \   00000030   00E0               B        ??przestepny_2
   \                     ??przestepny_1:
   \   00000032   0120               MOVS     R0,#+1
   \                     ??przestepny_2:
   \   00000034   10BC               POP      {R4}
   \   00000036   02BC               POP      {R1}
   \   00000038   0847               BX       R1               ;; return
   7450          }
   7451          
   7452          

   \                                 In section Debug.txt, align 4, keep-with-next
   7453          int dzienTygodnia(int dzien, int miesiac, int rok) 
   7454          {
   \                     dzienTygodnia:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   8CB0               SUB      SP,SP,#+48
   \   00000004   0500               MOVS     R5,R0
   \   00000006   0E00               MOVS     R6,R1
   \   00000008   1400               MOVS     R4,R2
   7455          	int dr, yy, c, g, wynik;
   7456          	int liczbaDni[] = {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};
   \   0000000A   6846               MOV      R0,SP
   \   0000000C   1C49               LDR      R1,??dzienTygodnia_0  ;; `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`
   \   0000000E   3022               MOVS     R2,#+48
   \   00000010   ........           BL       __aeabi_memcpy4
   7457          	dr = dzien + liczbaDni[miesiac-1];
   \   00000014   B000               LSLS     R0,R6,#+2
   \   00000016   6946               MOV      R1,SP
   \   00000018   0818               ADDS     R0,R1,R0
   \   0000001A   001F               SUBS     R0,R0,#+4
   \   0000001C   0068               LDR      R0,[R0, #+0]
   \   0000001E   2D18               ADDS     R5,R5,R0
   7458          	if ((miesiac > 2) && (przestepny(rok) == 1))
   \   00000020   032E               CMP      R6,#+3
   \   00000022   05DB               BLT      ??dzienTygodnia_1
   \   00000024   2000               MOVS     R0,R4
   \   00000026   ........           BL       przestepny
   \   0000002A   0128               CMP      R0,#+1
   \   0000002C   00D1               BNE      ??dzienTygodnia_1
   7459          		dr++;
   \   0000002E   6D1C               ADDS     R5,R5,#+1
   7460          	yy = (rok - 1) % 100;
   \                     ??dzienTygodnia_1:
   \   00000030   641E               SUBS     R4,R4,#+1
   \   00000032   2000               MOVS     R0,R4
   \   00000034   6421               MOVS     R1,#+100
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   0E00               MOVS     R6,R1
   7461          	c = (rok - 1) - yy;
   7462          	g = yy + (yy / 4);
   7463          	wynik = (((((c / 100) % 4) * 5) + g) % 7);
   7464          	wynik += dr - 1;
   7465          	wynik %= 7;
   7466          	return wynik+1;
   \   0000003C   A01B               SUBS     R0,R4,R6
   \   0000003E   6421               MOVS     R1,#+100
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   0100               MOVS     R1,R0
   \   00000046   4910               ASRS     R1,R1,#+1
   \   00000048   890F               LSRS     R1,R1,#+30
   \   0000004A   0918               ADDS     R1,R1,R0
   \   0000004C   8910               ASRS     R1,R1,#+2
   \   0000004E   8900               LSLS     R1,R1,#+2
   \   00000050   401A               SUBS     R0,R0,R1
   \   00000052   0521               MOVS     R1,#+5
   \   00000054   4843               MULS     R0,R1,R0
   \   00000056   8019               ADDS     R0,R0,R6
   \   00000058   3100               MOVS     R1,R6
   \   0000005A   4910               ASRS     R1,R1,#+1
   \   0000005C   890F               LSRS     R1,R1,#+30
   \   0000005E   8919               ADDS     R1,R1,R6
   \   00000060   8910               ASRS     R1,R1,#+2
   \   00000062   4018               ADDS     R0,R0,R1
   \   00000064   0721               MOVS     R1,#+7
   \   00000066   ........           BL       __aeabi_idivmod
   \   0000006A   4819               ADDS     R0,R1,R5
   \   0000006C   401E               SUBS     R0,R0,#+1
   \   0000006E   0721               MOVS     R1,#+7
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   0800               MOVS     R0,R1
   \   00000076   401C               ADDS     R0,R0,#+1
   \   00000078   0CB0               ADD      SP,SP,#+48
   \   0000007A   70BC               POP      {R4-R6}
   \   0000007C   02BC               POP      {R1}
   \   0000007E   0847               BX       R1               ;; return
   \                     ??dzienTygodnia_0:
   \   00000080   ........           DC32     `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`
   7467          }
   7468          
   7469          
   7470          
   7471              //*-----------------------------------------------------------------------------
   7472              char SleepModTime=0;

   \                                 In section Debug.txt, align 4, keep-with-next
   7473              void SetupTime_Event(void)
   7474              {
   \                     SetupTime_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   7475                  int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0);  //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   AE4C               LDR      R4,??SetupTime_Event_2  ;; X_up
   \   00000006   AF4D               LDR      R5,??SetupTime_Event_2+0x4  ;; Y_up
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0120               MOVS     R0,#+1
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   AD48               LDR      R0,??SetupTime_Event_2+0x8  ;; Y_down
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   AD48               LDR      R0,??SetupTime_Event_2+0xC  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   295E               LDRSH    R1,[R5, R0]
   \   0000001E   205E               LDRSH    R0,[R4, R0]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   \   00000026   0600               MOVS     R6,R0
   7476                  
   7477                  char  SetupPozTmp=0;
   7478                  if ((X_up>10) && (X_up<56) &&  (Y_up>85) && (Y_up<97))  
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   205E               LDRSH    R0,[R4, R0]
   \   0000002C   0B28               CMP      R0,#+11
   \   0000002E   1EDB               BLT      ??SetupTime_Event_3
   \   00000030   3828               CMP      R0,#+56
   \   00000032   1CDA               BGE      ??SetupTime_Event_3
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   695E               LDRSH    R1,[R5, R1]
   \   00000038   5629               CMP      R1,#+86
   \   0000003A   18DB               BLT      ??SetupTime_Event_3
   \   0000003C   6129               CMP      R1,#+97
   \   0000003E   16DA               BGE      ??SetupTime_Event_3
   7479                  {
   7480                     SetupPozTmp = (X_up-10)/15;
   7481                     SetupTimeCarPoz=0;
   7482                     SetupTimeCarPoz=1<<SetupPozTmp;
   \   00000040   0127               MOVS     R7,#+1
   \   00000042   0A38               SUBS     R0,R0,#+10
   \   00000044   0F21               MOVS     R1,#+15
   \   00000046   ........           BL       __aeabi_idivmod
   \   0000004A   8740               LSLS     R7,R7,R0
   \   0000004C   A048               LDR      R0,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   0000004E   0770               STRB     R7,[R0, #+0]
   7483                     if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                  ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000050   A048               LDR      R0,??SetupTime_Event_2+0x14  ;; 0x13d7e9
   \   00000052   0078               LDRB     R0,[R0, #+0]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   0AD1               BNE      ??SetupTime_Event_3
   \   00000058   9F48               LDR      R0,??SetupTime_Event_2+0x18  ;; 0xfffff430
   \   0000005A   8021               MOVS     R1,#+128
   \   0000005C   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000005E   0160               STR      R1,[R0, #+0]
   \   00000060   9E4A               LDR      R2,??SetupTime_Event_2+0x1C  ;; ButtonBipCounter
   \   00000062   9F48               LDR      R0,??SetupTime_Event_2+0x20  ;; g_counter
   \   00000064   03C8               LDM      R0!,{R0,R1}
   \   00000066   0023               MOVS     R3,#+0
   \   00000068   0830               ADDS     R0,R0,#+8
   \   0000006A   5941               ADCS     R1,R1,R3
   \   0000006C   03C2               STM      R2!,{R0,R1}
   7484                  }
   7485                  if ((X_up>10) && (X_up<56) &&  (Y_up>60) && (Y_up<72))  
   \                     ??SetupTime_Event_3:
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   205E               LDRSH    R0,[R4, R0]
   \   00000072   0B28               CMP      R0,#+11
   \   00000074   1FDB               BLT      ??SetupTime_Event_4
   \   00000076   3828               CMP      R0,#+56
   \   00000078   1DDA               BGE      ??SetupTime_Event_4
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   695E               LDRSH    R1,[R5, R1]
   \   0000007E   3D29               CMP      R1,#+61
   \   00000080   19DB               BLT      ??SetupTime_Event_4
   \   00000082   4829               CMP      R1,#+72
   \   00000084   17DA               BGE      ??SetupTime_Event_4
   7486                  {
   7487                     SetupPozTmp = (X_up-10)/15;
   7488                     SetupTimeCarPoz=0;
   7489                     SetupTimeCarPoz=1<<SetupPozTmp+3;
   \   00000086   0124               MOVS     R4,#+1
   \   00000088   0A38               SUBS     R0,R0,#+10
   \   0000008A   0F21               MOVS     R1,#+15
   \   0000008C   ........           BL       __aeabi_idivmod
   \   00000090   C01C               ADDS     R0,R0,#+3
   \   00000092   8440               LSLS     R4,R4,R0
   \   00000094   8E48               LDR      R0,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   00000096   0470               STRB     R4,[R0, #+0]
   7490                     if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                  ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000098   8E48               LDR      R0,??SetupTime_Event_2+0x14  ;; 0x13d7e9
   \   0000009A   0078               LDRB     R0,[R0, #+0]
   \   0000009C   0028               CMP      R0,#+0
   \   0000009E   0AD1               BNE      ??SetupTime_Event_4
   \   000000A0   8D48               LDR      R0,??SetupTime_Event_2+0x18  ;; 0xfffff430
   \   000000A2   8021               MOVS     R1,#+128
   \   000000A4   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000A6   0160               STR      R1,[R0, #+0]
   \   000000A8   8C4A               LDR      R2,??SetupTime_Event_2+0x1C  ;; ButtonBipCounter
   \   000000AA   8D48               LDR      R0,??SetupTime_Event_2+0x20  ;; g_counter
   \   000000AC   03C8               LDM      R0!,{R0,R1}
   \   000000AE   0023               MOVS     R3,#+0
   \   000000B0   0830               ADDS     R0,R0,#+8
   \   000000B2   5941               ADCS     R1,R1,R3
   \   000000B4   03C2               STM      R2!,{R0,R1}
   7491                  }
   7492                  
   7493                 if (ans<0)  
   \                     ??SetupTime_Event_4:
   \   000000B6   002E               CMP      R6,#+0
   \   000000B8   0AD5               BPL      ??SetupTime_Event_5
   7494                 {
   7495                    SetRTC_DateTime();  //Ustawinie: sekundy, minuty,  godziny, dzieñ tyg, dnia, miesi¹ca, roku
   \   000000BA   ........           BL       SetRTC_DateTime
   7496                    MenuLevel=(MenuLevel/10);
   \   000000BE   B24C               LDR      R4,??SetupTime_Event_6  ;; TextToChangeLength
   \   000000C0   206D               LDR      R0,[R4, #+80]
   \   000000C2   0A21               MOVS     R1,#+10
   \   000000C4   ........           BL       __aeabi_idivmod
   \   000000C8   2065               STR      R0,[R4, #+80]
   7497                    MenuPaint();
   \   000000CA   ........           BL       MenuPaint
   \   000000CE   57E1               B        ??SetupTime_Event_7
   7498                 }
   \                     ??SetupTime_Event_5:
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   0090               STR      R0,[SP, #+0]
   7499                 else
   7500                 {
   7501                  char odp=0;
   7502                  int set_zm=0;
   7503                  char LabelButt[1]={30};
   \   000000D4   04A8               ADD      R0,SP,#+16
   \   000000D6   AD49               LDR      R1,??SetupTime_Event_6+0x4  ;; `?<Constant {30}>`
   \   000000D8   0A68               LDR      R2,[R1, #0]
   \   000000DA   0260               STR      R2,[R0, #0]
   7504                  odp = (Button(LabelButt,33,30,19,25));
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   1920               MOVS     R0,#+25
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   1323               MOVS     R3,#+19
   \   000000E4   1E22               MOVS     R2,#+30
   \   000000E6   2121               MOVS     R1,#+33
   \   000000E8   06A8               ADD      R0,SP,#+24
   \   000000EA   ........           BL       Button
   \   000000EE   02B0               ADD      SP,SP,#+8
   7505                  if ((odp==2) && (SleepModTime==0)) set_zm=1;
   \   000000F0   0100               MOVS     R1,R0
   \   000000F2   0229               CMP      R1,#+2
   \   000000F4   05D1               BNE      ??SetupTime_Event_8
   \   000000F6   A649               LDR      R1,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   000000F8   0978               LDRB     R1,[R1, #+0]
   \   000000FA   0029               CMP      R1,#+0
   \   000000FC   01D1               BNE      ??SetupTime_Event_8
   \   000000FE   0121               MOVS     R1,#+1
   \   00000100   0091               STR      R1,[SP, #+0]
   7506                  if (odp==2) { SleepModTime++; if (SleepModTime>10) SleepModTime=0;};            //(char poz_X , char poz_Y ,char width, char height)
   \                     ??SetupTime_Event_8:
   \   00000102   0100               MOVS     R1,R0
   \   00000104   0229               CMP      R1,#+2
   \   00000106   09D1               BNE      ??SetupTime_Event_9
   \   00000108   7149               LDR      R1,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   0000010A   4A78               LDRB     R2,[R1, #+1]
   \   0000010C   521C               ADDS     R2,R2,#+1
   \   0000010E   4A70               STRB     R2,[R1, #+1]
   \   00000110   1206               LSLS     R2,R2,#+24
   \   00000112   120E               LSRS     R2,R2,#+24
   \   00000114   0B2A               CMP      R2,#+11
   \   00000116   01D3               BCC      ??SetupTime_Event_9
   \   00000118   0022               MOVS     R2,#+0
   \   0000011A   4A70               STRB     R2,[R1, #+1]
   7507                  
   7508                  
   7509                  if (odp==1) {SleepModTime=0;}
   \                     ??SetupTime_Event_9:
   \   0000011C   0128               CMP      R0,#+1
   \   0000011E   02D1               BNE      ??SetupTime_Event_10
   \   00000120   9B48               LDR      R0,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   00000122   0021               MOVS     R1,#+0
   \   00000124   0170               STRB     R1,[R0, #+0]
   \                     ??SetupTime_Event_10:
   \   00000126   6846               MOV      R0,SP
   \   00000128   1F21               MOVS     R1,#+31
   \   0000012A   0174               STRB     R1,[R0, #+16]
   7510                  
   7511                  LabelButt[0]=31;
   7512                  odp=0;
   7513                  odp = (Button(LabelButt,12,30,19,25));
   \   0000012C   82B0               SUB      SP,SP,#+8
   \   0000012E   1920               MOVS     R0,#+25
   \   00000130   0090               STR      R0,[SP, #+0]
   \   00000132   1323               MOVS     R3,#+19
   \   00000134   1E22               MOVS     R2,#+30
   \   00000136   0C21               MOVS     R1,#+12
   \   00000138   06A8               ADD      R0,SP,#+24
   \   0000013A   ........           BL       Button
   \   0000013E   02B0               ADD      SP,SP,#+8
   7514                  if ((odp==2)&& (SleepModTime==0))  set_zm=-1;
   \   00000140   0100               MOVS     R1,R0
   \   00000142   0229               CMP      R1,#+2
   \   00000144   06D1               BNE      ??SetupTime_Event_11
   \   00000146   9249               LDR      R1,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   00000148   0978               LDRB     R1,[R1, #+0]
   \   0000014A   0029               CMP      R1,#+0
   \   0000014C   02D1               BNE      ??SetupTime_Event_11
   \   0000014E   0021               MOVS     R1,#+0
   \   00000150   C943               MVNS     R1,R1            ;; #-1
   \   00000152   0091               STR      R1,[SP, #+0]
   7515                  if (odp==2) { SleepModTime++; if (SleepModTime>10) SleepModTime=0;};            //(char poz_X , char poz_Y ,char width, char height)
   \                     ??SetupTime_Event_11:
   \   00000154   0100               MOVS     R1,R0
   \   00000156   0229               CMP      R1,#+2
   \   00000158   09D1               BNE      ??SetupTime_Event_12
   \   0000015A   5D49               LDR      R1,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   0000015C   4A78               LDRB     R2,[R1, #+1]
   \   0000015E   521C               ADDS     R2,R2,#+1
   \   00000160   4A70               STRB     R2,[R1, #+1]
   \   00000162   1206               LSLS     R2,R2,#+24
   \   00000164   120E               LSRS     R2,R2,#+24
   \   00000166   0B2A               CMP      R2,#+11
   \   00000168   01D3               BCC      ??SetupTime_Event_12
   \   0000016A   0022               MOVS     R2,#+0
   \   0000016C   4A70               STRB     R2,[R1, #+1]
   7516                  
   7517                  if (odp==1) {SleepModTime=0;} 
   \                     ??SetupTime_Event_12:
   \   0000016E   0128               CMP      R0,#+1
   \   00000170   02D1               BNE      ??SetupTime_Event_13
   \   00000172   8748               LDR      R0,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   00000174   0021               MOVS     R1,#+0
   \   00000176   0170               STRB     R1,[R0, #+0]
   7518                  
   7519                  
   7520                  signed int dzien_tmp= DateTime.Day;
   \                     ??SetupTime_Event_13:
   \   00000178   864C               LDR      R4,??SetupTime_Event_6+0xC  ;; DateTime
   \   0000017A   A578               LDRB     R5,[R4, #+2]
   7521                  signed int mies_tmp=DateTime.Mounth;
   \   0000017C   6678               LDRB     R6,[R4, #+1]
   7522                  signed int rok_tmp=DateTime.Year;
   \   0000017E   2778               LDRB     R7,[R4, #+0]
   7523                  signed int godz_tmp=DateTime.Hour;
   \   00000180   E078               LDRB     R0,[R4, #+3]
   \   00000182   0190               STR      R0,[SP, #+4]
   7524                  signed int mi_tmp=DateTime.Minute;
   \   00000184   2079               LDRB     R0,[R4, #+4]
   \   00000186   0290               STR      R0,[SP, #+8]
   7525                  signed int sek_tmp=DateTime.Second;
   \   00000188   6079               LDRB     R0,[R4, #+5]
   \   0000018A   0390               STR      R0,[SP, #+12]
   7526                  
   7527                  
   7528                  switch (SetupTimeCarPoz)
   \   0000018C   5048               LDR      R0,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   0000018E   0078               LDRB     R0,[R0, #+0]
   \   00000190   0128               CMP      R0,#+1
   \   00000192   0AD0               BEQ      ??SetupTime_Event_14
   \   00000194   0228               CMP      R0,#+2
   \   00000196   0DD0               BEQ      ??SetupTime_Event_15
   \   00000198   0428               CMP      R0,#+4
   \   0000019A   10D0               BEQ      ??SetupTime_Event_16
   \   0000019C   0828               CMP      R0,#+8
   \   0000019E   13D0               BEQ      ??SetupTime_Event_17
   \   000001A0   1028               CMP      R0,#+16
   \   000001A2   14D0               BEQ      ??SetupTime_Event_18
   \   000001A4   2028               CMP      R0,#+32
   \   000001A6   15D0               BEQ      ??SetupTime_Event_19
   \   000001A8   16E0               B        ??SetupTime_Event_20
   7529                  {
   7530                    case 1: godz_tmp+=set_zm;  break;
   \                     ??SetupTime_Event_14:
   \   000001AA   0198               LDR      R0,[SP, #+4]
   \   000001AC   0099               LDR      R1,[SP, #+0]
   \   000001AE   4018               ADDS     R0,R0,R1
   \   000001B0   0190               STR      R0,[SP, #+4]
   \   000001B2   11E0               B        ??SetupTime_Event_20
   7531                    case 2: mi_tmp+=set_zm;     break;
   \                     ??SetupTime_Event_15:
   \   000001B4   0298               LDR      R0,[SP, #+8]
   \   000001B6   0099               LDR      R1,[SP, #+0]
   \   000001B8   4018               ADDS     R0,R0,R1
   \   000001BA   0290               STR      R0,[SP, #+8]
   \   000001BC   0CE0               B        ??SetupTime_Event_20
   7532                    case 4: sek_tmp+=set_zm;   break;
   \                     ??SetupTime_Event_16:
   \   000001BE   0398               LDR      R0,[SP, #+12]
   \   000001C0   0099               LDR      R1,[SP, #+0]
   \   000001C2   4018               ADDS     R0,R0,R1
   \   000001C4   0390               STR      R0,[SP, #+12]
   \   000001C6   07E0               B        ??SetupTime_Event_20
   7533                    case 8: dzien_tmp+=set_zm;  /*DateTime.DayOfWeek+=set_zm;*/  break;
   \                     ??SetupTime_Event_17:
   \   000001C8   0098               LDR      R0,[SP, #+0]
   \   000001CA   2D18               ADDS     R5,R5,R0
   \   000001CC   04E0               B        ??SetupTime_Event_20
   7534                    case 16: mies_tmp+=set_zm;   break;
   \                     ??SetupTime_Event_18:
   \   000001CE   0098               LDR      R0,[SP, #+0]
   \   000001D0   3618               ADDS     R6,R6,R0
   \   000001D2   01E0               B        ??SetupTime_Event_20
   7535                    case 32: rok_tmp+=set_zm;   break; 
   \                     ??SetupTime_Event_19:
   \   000001D4   0098               LDR      R0,[SP, #+0]
   \   000001D6   3F18               ADDS     R7,R7,R0
   7536                  }
   7537                  
   7538                  if (sek_tmp>59) {sek_tmp=0;} 
   \                     ??SetupTime_Event_20:
   \   000001D8   0398               LDR      R0,[SP, #+12]
   \   000001DA   3C28               CMP      R0,#+60
   \   000001DC   01DB               BLT      ??SetupTime_Event_21
   \   000001DE   0020               MOVS     R0,#+0
   \   000001E0   0390               STR      R0,[SP, #+12]
   7539                  if (mi_tmp>59)  {mi_tmp=0;}
   \                     ??SetupTime_Event_21:
   \   000001E2   0298               LDR      R0,[SP, #+8]
   \   000001E4   3C28               CMP      R0,#+60
   \   000001E6   01DB               BLT      ??SetupTime_Event_22
   \   000001E8   0020               MOVS     R0,#+0
   \   000001EA   0290               STR      R0,[SP, #+8]
   7540                  if (godz_tmp>23) godz_tmp=0;  
   \                     ??SetupTime_Event_22:
   \   000001EC   0198               LDR      R0,[SP, #+4]
   \   000001EE   1828               CMP      R0,#+24
   \   000001F0   01DB               BLT      ??SetupTime_Event_23
   \   000001F2   0020               MOVS     R0,#+0
   \   000001F4   0190               STR      R0,[SP, #+4]
   7541                  
   7542                  if (sek_tmp<0) {sek_tmp=59;}
   \                     ??SetupTime_Event_23:
   \   000001F6   0398               LDR      R0,[SP, #+12]
   \   000001F8   0028               CMP      R0,#+0
   \   000001FA   01D5               BPL      ??SetupTime_Event_24
   \   000001FC   3B20               MOVS     R0,#+59
   \   000001FE   0390               STR      R0,[SP, #+12]
   7543                  if (mi_tmp<0)  {mi_tmp=59;}
   \                     ??SetupTime_Event_24:
   \   00000200   0298               LDR      R0,[SP, #+8]
   \   00000202   0028               CMP      R0,#+0
   \   00000204   01D5               BPL      ??SetupTime_Event_25
   \   00000206   3B20               MOVS     R0,#+59
   \   00000208   0290               STR      R0,[SP, #+8]
   7544                  if (godz_tmp<0) godz_tmp=23;
   \                     ??SetupTime_Event_25:
   \   0000020A   0198               LDR      R0,[SP, #+4]
   \   0000020C   0028               CMP      R0,#+0
   \   0000020E   01D5               BPL      ??SetupTime_Event_26
   \   00000210   1720               MOVS     R0,#+23
   \   00000212   0190               STR      R0,[SP, #+4]
   7545                 
   7546                  char mies_tmp2 = mies_tmp;
   7547                  switch (mies_tmp2)
   \                     ??SetupTime_Event_26:
   \   00000214   3000               MOVS     R0,R6
   \   00000216   0006               LSLS     R0,R0,#+24
   \   00000218   000E               LSRS     R0,R0,#+24
   \   0000021A   401E               SUBS     R0,R0,#+1
   \   0000021C   0B28               CMP      R0,#+11
   \   0000021E   64D8               BHI      ??SetupTime_Event_27
   \   00000220   01A1               ADR      R1,??SetupTime_Event_0
   \   00000222   095C               LDRB     R1,[R1, R0]
   \   00000224   8F44               ADD      PC,PC,R1
   \   00000226   C046               Nop      
   \                     ??SetupTime_Event_0:
   \   00000228   0C144E56           DC8      +12,+20,+78,+86
   \   0000022C   5E666E76           DC8      +94,+102,+110,+118
   \   00000230   7E868EBC           DC8      +126,+134,+142,+188
   7548                  {
   7549                    case 1  : if (dzien_tmp>31) {dzien_tmp=1;} break;
   \                     ??SetupTime_Event_28:
   \   00000234   202D               CMP      R5,#+32
   \   00000236   58DB               BLT      ??SetupTime_Event_27
   \   00000238   0125               MOVS     R5,#+1
   \   0000023A   56E0               B        ??SetupTime_Event_27
   7550                    case 2  : if ((rok_tmp%4==0) && (rok_tmp%100 != 0) || (rok_tmp%400 == 0))  //je¿eli rok przestêpny
   \                     ??SetupTime_Event_29:
   \   0000023C   3800               MOVS     R0,R7
   \   0000023E   4010               ASRS     R0,R0,#+1
   \   00000240   800F               LSRS     R0,R0,#+30
   \   00000242   C019               ADDS     R0,R0,R7
   \   00000244   8010               ASRS     R0,R0,#+2
   \   00000246   8000               LSLS     R0,R0,#+2
   \   00000248   381A               SUBS     R0,R7,R0
   \   0000024A   05D1               BNE      ??SetupTime_Event_30
   \   0000024C   3800               MOVS     R0,R7
   \   0000024E   6421               MOVS     R1,#+100
   \   00000250   ........           BL       __aeabi_idivmod
   \   00000254   0029               CMP      R1,#+0
   \   00000256   06D1               BNE      ??SetupTime_Event_31
   \                     ??SetupTime_Event_30:
   \   00000258   3800               MOVS     R0,R7
   \   0000025A   C821               MOVS     R1,#+200
   \   0000025C   4900               LSLS     R1,R1,#+1        ;; #+400
   \   0000025E   ........           BL       __aeabi_idivmod
   \   00000262   0029               CMP      R1,#+0
   \   00000264   03D1               BNE      ??SetupTime_Event_32
   7551                                {  
   7552                                  if (dzien_tmp>29) {dzien_tmp=1; } 
   \                     ??SetupTime_Event_31:
   \   00000266   1E2D               CMP      R5,#+30
   \   00000268   3FDB               BLT      ??SetupTime_Event_27
   \   0000026A   0125               MOVS     R5,#+1
   \   0000026C   3DE0               B        ??SetupTime_Event_27
   7553                                  }else {if (dzien_tmp>28) {dzien_tmp=1; } 
   \                     ??SetupTime_Event_32:
   \   0000026E   1D2D               CMP      R5,#+29
   \   00000270   3BDB               BLT      ??SetupTime_Event_27
   \   00000272   0125               MOVS     R5,#+1
   \   00000274   39E0               B        ??SetupTime_Event_27
   7554                                  }     
   7555                              break;
   7556                    case 3  : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_33:
   \   00000276   202D               CMP      R5,#+32
   \   00000278   37DB               BLT      ??SetupTime_Event_27
   \   0000027A   0125               MOVS     R5,#+1
   \   0000027C   35E0               B        ??SetupTime_Event_27
   7557                    case 4  : if (dzien_tmp>30) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_34:
   \   0000027E   1F2D               CMP      R5,#+31
   \   00000280   33DB               BLT      ??SetupTime_Event_27
   \   00000282   0125               MOVS     R5,#+1
   \   00000284   31E0               B        ??SetupTime_Event_27
   7558                    case 5  : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_35:
   \   00000286   202D               CMP      R5,#+32
   \   00000288   2FDB               BLT      ??SetupTime_Event_27
   \   0000028A   0125               MOVS     R5,#+1
   \   0000028C   2DE0               B        ??SetupTime_Event_27
   7559                    case 6  : if (dzien_tmp>30) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_36:
   \   0000028E   1F2D               CMP      R5,#+31
   \   00000290   2BDB               BLT      ??SetupTime_Event_27
   \   00000292   0125               MOVS     R5,#+1
   \   00000294   29E0               B        ??SetupTime_Event_27
   7560                    case 7  : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_37:
   \   00000296   202D               CMP      R5,#+32
   \   00000298   27DB               BLT      ??SetupTime_Event_27
   \   0000029A   0125               MOVS     R5,#+1
   \   0000029C   25E0               B        ??SetupTime_Event_27
   7561                    case 8  : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_38:
   \   0000029E   202D               CMP      R5,#+32
   \   000002A0   23DB               BLT      ??SetupTime_Event_27
   \   000002A2   0125               MOVS     R5,#+1
   \   000002A4   21E0               B        ??SetupTime_Event_27
   7562                    case 9  : if (dzien_tmp>30) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_39:
   \   000002A6   1F2D               CMP      R5,#+31
   \   000002A8   1FDB               BLT      ??SetupTime_Event_27
   \   000002AA   0125               MOVS     R5,#+1
   \   000002AC   1DE0               B        ??SetupTime_Event_27
   7563                    case 10 : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_40:
   \   000002AE   202D               CMP      R5,#+32
   \   000002B0   1BDB               BLT      ??SetupTime_Event_27
   \   000002B2   0125               MOVS     R5,#+1
   \   000002B4   19E0               B        ??SetupTime_Event_27
   7564                    case 11 : if (dzien_tmp>30) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_41:
   \   000002B6   1F2D               CMP      R5,#+31
   \   000002B8   17DB               BLT      ??SetupTime_Event_27
   \   000002BA   0125               MOVS     R5,#+1
   \   000002BC   15E0               B        ??SetupTime_Event_27
   \   000002BE   C046               Nop      
   \                     ??SetupTime_Event_2:
   \   000002C0   ........           DC32     X_up
   \   000002C4   ........           DC32     Y_up
   \   000002C8   ........           DC32     Y_down
   \   000002CC   ........           DC32     X_down
   \   000002D0   ........           DC32     SetupTimeCarPoz
   \   000002D4   E9D71300           DC32     0x13d7e9
   \   000002D8   30F4FFFF           DC32     0xfffff430
   \   000002DC   ........           DC32     ButtonBipCounter
   \   000002E0   ........           DC32     g_counter
   7565                    case 12 : if (dzien_tmp>31) {dzien_tmp=1; } break;
   \                     ??SetupTime_Event_42:
   \   000002E4   202D               CMP      R5,#+32
   \   000002E6   00DB               BLT      ??SetupTime_Event_27
   \   000002E8   0125               MOVS     R5,#+1
   7566                  }  
   7567                  
   7568                  if (mies_tmp>12)  {mies_tmp=1; }
   \                     ??SetupTime_Event_27:
   \   000002EA   0D2E               CMP      R6,#+13
   \   000002EC   00DB               BLT      ??SetupTime_Event_43
   \   000002EE   0126               MOVS     R6,#+1
   7569                  if (rok_tmp>99) rok_tmp=0;  
   \                     ??SetupTime_Event_43:
   \   000002F0   642F               CMP      R7,#+100
   \   000002F2   00DB               BLT      ??SetupTime_Event_44
   \   000002F4   0027               MOVS     R7,#+0
   7570                 
   7571                  mies_tmp2 = mies_tmp;
   \                     ??SetupTime_Event_44:
   \   000002F6   3000               MOVS     R0,R6
   \   000002F8   0006               LSLS     R0,R0,#+24
   \   000002FA   000E               LSRS     R0,R0,#+24
   7572                  if (dzien_tmp<=0)
   \   000002FC   012D               CMP      R5,#+1
   \   000002FE   27DA               BGE      ??SetupTime_Event_45
   7573                  switch (mies_tmp2)
   \   00000300   401E               SUBS     R0,R0,#+1
   \   00000302   0B28               CMP      R0,#+11
   \   00000304   24D8               BHI      ??SetupTime_Event_45
   \   00000306   01A1               ADR      R1,??SetupTime_Event_1
   \   00000308   095C               LDRB     R1,[R1, R0]
   \   0000030A   8F44               ADD      PC,PC,R1
   \                     ??SetupTime_Event_1:
   \   0000030C   0A0A0E0A           DC8      +10,+10,+14,+10
   \   00000310   400A400A           DC8      +64,+10,+64,+10
   \   00000314   0A400A40           DC8      +10,+64,+10,+64
   7574                  {
   7575                    case 1  : dzien_tmp=31; break;
   \                     ??SetupTime_Event_46:
   \   00000318   1F25               MOVS     R5,#+31
   \   0000031A   19E0               B        ??SetupTime_Event_45
   7576                    case 2  : dzien_tmp=31; break;
   7577                    case 3  : if ((rok_tmp%4==0) && (rok_tmp%100 != 0) || (rok_tmp%400 == 0))  //je¿eli rok przestêpny
   \                     ??SetupTime_Event_47:
   \   0000031C   3800               MOVS     R0,R7
   \   0000031E   4010               ASRS     R0,R0,#+1
   \   00000320   800F               LSRS     R0,R0,#+30
   \   00000322   C019               ADDS     R0,R0,R7
   \   00000324   8010               ASRS     R0,R0,#+2
   \   00000326   8000               LSLS     R0,R0,#+2
   \   00000328   381A               SUBS     R0,R7,R0
   \   0000032A   05D1               BNE      ??SetupTime_Event_48
   \   0000032C   3800               MOVS     R0,R7
   \   0000032E   6421               MOVS     R1,#+100
   \   00000330   ........           BL       __aeabi_idivmod
   \   00000334   0029               CMP      R1,#+0
   \   00000336   06D1               BNE      ??SetupTime_Event_49
   \                     ??SetupTime_Event_48:
   \   00000338   3800               MOVS     R0,R7
   \   0000033A   C821               MOVS     R1,#+200
   \   0000033C   4900               LSLS     R1,R1,#+1        ;; #+400
   \   0000033E   ........           BL       __aeabi_idivmod
   \   00000342   0029               CMP      R1,#+0
   \   00000344   01D1               BNE      ??SetupTime_Event_50
   7578                             { dzien_tmp=29;} else { dzien_tmp=28; }  break;
   \                     ??SetupTime_Event_49:
   \   00000346   1D25               MOVS     R5,#+29
   \   00000348   02E0               B        ??SetupTime_Event_45
   \                     ??SetupTime_Event_50:
   \   0000034A   1C25               MOVS     R5,#+28
   \   0000034C   00E0               B        ??SetupTime_Event_45
   7579                    case 4  : dzien_tmp=31;  break;
   7580                    case 5  : dzien_tmp=30; break;
   \                     ??SetupTime_Event_51:
   \   0000034E   1E25               MOVS     R5,#+30
   7581                    case 6  : dzien_tmp=31; break;
   7582                    case 7  : dzien_tmp=30; break;
   7583                    case 8  : dzien_tmp=31; break;
   7584                    case 9  : dzien_tmp=31; break;
   7585                    case 10 : dzien_tmp=30; break;
   7586                    case 11 : dzien_tmp=31; break;
   7587                    case 12 : dzien_tmp=30; break;
   7588                  } 
   7589                   
   7590                  if (mies_tmp<0)  {mies_tmp=12;}
   \                     ??SetupTime_Event_45:
   \   00000350   002E               CMP      R6,#+0
   \   00000352   00D5               BPL      ??SetupTime_Event_52
   \   00000354   0C26               MOVS     R6,#+12
   7591                  if (rok_tmp<0) rok_tmp=0;
   \                     ??SetupTime_Event_52:
   \   00000356   002F               CMP      R7,#+0
   \   00000358   00D5               BPL      ??SetupTime_Event_53
   \   0000035A   0027               MOVS     R7,#+0
   7592          
   7593          
   7594                  if (dzien_tmp>31) dzien_tmp=31;
   \                     ??SetupTime_Event_53:
   \   0000035C   202D               CMP      R5,#+32
   \   0000035E   00DB               BLT      ??SetupTime_Event_54
   \   00000360   1F25               MOVS     R5,#+31
   7595                  
   7596                  DateTime.Day= dzien_tmp;
   \                     ??SetupTime_Event_54:
   \   00000362   A570               STRB     R5,[R4, #+2]
   7597                  DateTime.Mounth=mies_tmp;
   \   00000364   6670               STRB     R6,[R4, #+1]
   7598                  DateTime.Year=rok_tmp;
   \   00000366   2770               STRB     R7,[R4, #+0]
   7599                  DateTime.Hour=godz_tmp;
   \   00000368   0198               LDR      R0,[SP, #+4]
   \   0000036A   E070               STRB     R0,[R4, #+3]
   7600                  DateTime.Minute=mi_tmp;
   \   0000036C   0298               LDR      R0,[SP, #+8]
   \   0000036E   2071               STRB     R0,[R4, #+4]
   7601                  DateTime.Second=sek_tmp;
   \   00000370   0398               LDR      R0,[SP, #+12]
   \   00000372   6071               STRB     R0,[R4, #+5]
   7602                  
   7603          
   7604                 
   7605                 
   7606                 DateTime.DayOfWeek=dzienTygodnia(DateTime.Day,DateTime.Mounth,DateTime.Year ); //(int dzien, int miesiac, int rok) 
   \   00000374   2278               LDRB     R2,[R4, #+0]
   \   00000376   6178               LDRB     R1,[R4, #+1]
   \   00000378   A078               LDRB     R0,[R4, #+2]
   \   0000037A   ........           BL       dzienTygodnia
   \   0000037E   A071               STRB     R0,[R4, #+6]
   7607          
   7608                 }
   7609              }//________________________________________________________________________
   \                     ??SetupTime_Event_7:
   \   00000380   05B0               ADD      SP,SP,#+20
   \   00000382   F0BC               POP      {R4-R7}
   \   00000384   01BC               POP      {R0}
   \   00000386   0047               BX       R0               ;; return
   \                     ??SetupTime_Event_6:
   \   00000388   ........           DC32     TextToChangeLength
   \   0000038C   ........           DC32     `?<Constant {30}>`
   \   00000390   ........           DC32     SetupTimeCarPoz + 1
   \   00000394   ........           DC32     DateTime
   7610          
   7611          
   7612              
   7613              
   7614          //ustawienie podwietlenia
   7615          #define TAPozY 80
   7616          #define TNPozY 40
   7617          //*---------------------------------------------------------------------------- 

   \                                 In section Debug.txt, align 4, keep-with-next
   7618          void ScreenBrightness_Paint(void)
   7619              {  
   \                     ScreenBrightness_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   914C               LDR      R4,??ScreenBrightness_Paint_0  ;; g_leng
   \   00000004   914D               LDR      R5,??ScreenBrightness_Paint_0+0x4  ;; Speech
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   8FA0               ADR      R0,??ScreenBrightness_Paint_0+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0121               MOVS     R1,#+1
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   6C22               MOVS     R2,#+108
   \   0000001E   8D48               LDR      R0,??ScreenBrightness_Paint_0+0xC  ;; 0xa23
   \   00000020   2668               LDR      R6,[R4, #+0]
   \   00000022   8D4F               LDR      R7,??ScreenBrightness_Paint_0+0x10  ;; 0xa7d
   \   00000024   7E43               MULS     R6,R7,R6
   \   00000026   AE19               ADDS     R6,R5,R6
   \   00000028   3018               ADDS     R0,R6,R0
   7620                 List_Paint(Speech[g_leng].Jasnosc,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   7621                    
   7622                 
   7623                //tryb aktywny wywietlacza --------------------------------------------------
   7624                 Label(Speech[g_leng].Tryb_aktywny,0,1,TAPozY+5,15,33,1,127,0);    //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000030   82B0               SUB      SP,SP,#+8
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   0090               STR      R0,[SP, #+0]
   \   00000036   7F21               MOVS     R1,#+127
   \   00000038   0120               MOVS     R0,#+1
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   2121               MOVS     R1,#+33
   \   0000003E   0F20               MOVS     R0,#+15
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   5523               MOVS     R3,#+85
   \   00000044   0122               MOVS     R2,#+1
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   8448               LDR      R0,??ScreenBrightness_Paint_0+0x14  ;; 0xa32
   \   0000004A   2668               LDR      R6,[R4, #+0]
   \   0000004C   7E43               MULS     R6,R7,R6
   \   0000004E   AE19               ADDS     R6,R5,R6
   \   00000050   3018               ADDS     R0,R6,R0
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   7625          
   7626                 H_line(4,TAPozY+1,54,1); // (char X, int Y, char lenght, char typ) 
   \   00000058   0123               MOVS     R3,#+1
   \   0000005A   3622               MOVS     R2,#+54
   \   0000005C   5121               MOVS     R1,#+81
   \   0000005E   0420               MOVS     R0,#+4
   \   00000060   ........           BL       H_line
   7627                 H_line(4,TAPozY-1,54,1); // (char X, int Y, char lenght, char typ) 
   \   00000064   0123               MOVS     R3,#+1
   \   00000066   3622               MOVS     R2,#+54
   \   00000068   4F21               MOVS     R1,#+79
   \   0000006A   0420               MOVS     R0,#+4
   \   0000006C   ........           BL       H_line
   7628                 CanvasPixel(3, TAPozY, 1);
   \   00000070   0122               MOVS     R2,#+1
   \   00000072   5021               MOVS     R1,#+80
   \   00000074   0320               MOVS     R0,#+3
   \   00000076   ........           BL       CanvasPixel
   7629                 CanvasPixel(58, TAPozY, 1);
   \   0000007A   0122               MOVS     R2,#+1
   \   0000007C   5021               MOVS     R1,#+80
   \   0000007E   3A20               MOVS     R0,#+58
   \   00000080   ........           BL       CanvasPixel
   7630                 
   7631                 char WypMaxJasnosciTMP=((WypMaxJasnosci-3)*2);
   \   00000084   7648               LDR      R0,??ScreenBrightness_Paint_0+0x18  ;; WypMaxJasnosci
   \   00000086   0078               LDRB     R0,[R0, #+0]
   \   00000088   C01E               SUBS     R0,R0,#+3
   \   0000008A   4600               LSLS     R6,R0,#+1
   \   0000008C   3606               LSLS     R6,R6,#+24
   \   0000008E   360E               LSRS     R6,R6,#+24
   7632                 if (WypMaxJasnosciTMP>100) WypMaxJasnosciTMP=100;
   \   00000090   3000               MOVS     R0,R6
   \   00000092   6528               CMP      R0,#+101
   \   00000094   00D3               BCC      ??ScreenBrightness_Paint_1
   \   00000096   6426               MOVS     R6,#+100
   7633                 char poz1=  (48 * WypMaxJasnosciTMP/100)+7;
   \                     ??ScreenBrightness_Paint_1:
   \   00000098   3000               MOVS     R0,R6
   \   0000009A   3021               MOVS     R1,#+48
   \   0000009C   4843               MULS     R0,R1,R0
   \   0000009E   6421               MOVS     R1,#+100
   \   000000A0   ........           BL       __aeabi_idivmod
   \   000000A4   0700               MOVS     R7,R0
   \   000000A6   FF1D               ADDS     R7,R7,#+7
   \   000000A8   3F06               LSLS     R7,R7,#+24
   \   000000AA   3F0E               LSRS     R7,R7,#+24
   7634                 H_line(poz1-1,TAPozY+3,3,1); // (char X, int Y, char lenght, char typ)
   \   000000AC   6846               MOV      R0,SP
   \   000000AE   3900               MOVS     R1,R7
   \   000000B0   491E               SUBS     R1,R1,#+1
   \   000000B2   0170               STRB     R1,[R0, #+0]
   \   000000B4   0123               MOVS     R3,#+1
   \   000000B6   0322               MOVS     R2,#+3
   \   000000B8   5321               MOVS     R1,#+83
   \   000000BA   0078               LDRB     R0,[R0, #+0]
   \   000000BC   ........           BL       H_line
   7635                 H_line(poz1-2,TAPozY+2,5,1); // (char X, int Y, char lenght, char typ)
   \   000000C0   BF1E               SUBS     R7,R7,#+2
   \   000000C2   0123               MOVS     R3,#+1
   \   000000C4   0522               MOVS     R2,#+5
   \   000000C6   5221               MOVS     R1,#+82
   \   000000C8   3800               MOVS     R0,R7
   \   000000CA   0006               LSLS     R0,R0,#+24
   \   000000CC   000E               LSRS     R0,R0,#+24
   \   000000CE   ........           BL       H_line
   7636                 H_line(poz1-2,TAPozY,5,1); // (char X, int Y, char lenght, char typ)
   \   000000D2   0123               MOVS     R3,#+1
   \   000000D4   0522               MOVS     R2,#+5
   \   000000D6   5021               MOVS     R1,#+80
   \   000000D8   3800               MOVS     R0,R7
   \   000000DA   0006               LSLS     R0,R0,#+24
   \   000000DC   000E               LSRS     R0,R0,#+24
   \   000000DE   ........           BL       H_line
   7637                 H_line(poz1-2,TAPozY-2,5,1); // (char X, int Y, char lenght, char typ)
   \   000000E2   0123               MOVS     R3,#+1
   \   000000E4   0522               MOVS     R2,#+5
   \   000000E6   4E21               MOVS     R1,#+78
   \   000000E8   3800               MOVS     R0,R7
   \   000000EA   0006               LSLS     R0,R0,#+24
   \   000000EC   000E               LSRS     R0,R0,#+24
   \   000000EE   ........           BL       H_line
   7638                 H_line(poz1-1,TAPozY-3,3,1); // (char X, int Y, char lenght, char typ)
   \   000000F2   0123               MOVS     R3,#+1
   \   000000F4   0322               MOVS     R2,#+3
   \   000000F6   4D21               MOVS     R1,#+77
   \   000000F8   6846               MOV      R0,SP
   \   000000FA   0078               LDRB     R0,[R0, #+0]
   \   000000FC   ........           BL       H_line
   7639                 
   7640                 if (poz1<10)
   7641                 {
   7642                   poz1=10; 
   7643                 }else if (poz1>55)
   7644                 {
   7645                   poz1=55; 
   7646                 }
   7647                 
   7648                 char TXT[5];
   7649                 char IL=CharToStr(WypMaxJasnosciTMP, TXT, 3); //(char Value, char *Vstring, char ill)
   \   00000100   0322               MOVS     R2,#+3
   \   00000102   01A9               ADD      R1,SP,#+4
   \   00000104   3000               MOVS     R0,R6
   \   00000106   ........           BL       CharToStr
   \   0000010A   0200               MOVS     R2,R0
   \   0000010C   01AE               ADD      R6,SP,#+4
   \   0000010E   2521               MOVS     R1,#+37
   \   00000110   3154               STRB     R1,[R6, R0]
   7650                 TXT[IL++]='%';
   7651                 //Label(TXT,2,poz1,TAPozY-12,IL,33,1,127,0);                               //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   7652                 Label(TXT,0,26,TAPozY-13,IL,20,1,127,0);                               //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000112   82B0               SUB      SP,SP,#+8
   \   00000114   0020               MOVS     R0,#+0
   \   00000116   0090               STR      R0,[SP, #+0]
   \   00000118   7F21               MOVS     R1,#+127
   \   0000011A   0120               MOVS     R0,#+1
   \   0000011C   03B4               PUSH     {R0,R1}
   \   0000011E   1421               MOVS     R1,#+20
   \   00000120   521C               ADDS     R2,R2,#+1
   \   00000122   1000               MOVS     R0,R2
   \   00000124   0006               LSLS     R0,R0,#+24
   \   00000126   000E               LSRS     R0,R0,#+24
   \   00000128   03B4               PUSH     {R0,R1}
   \   0000012A   4323               MOVS     R3,#+67
   \   0000012C   1A22               MOVS     R2,#+26
   \   0000012E   0021               MOVS     R1,#+0
   \   00000130   07A8               ADD      R0,SP,#+28
   \   00000132   ........           BL       Label
   \   00000136   06B0               ADD      SP,SP,#+24
   7653          
   7654                 
   7655                 
   7656                //tryb nieaktywny wywietlacza -------------------------------------------------- 
   7657                 Label(Speech[g_leng].Tryb_nieaktywny,0,1,TNPozY+5,15,33,1,127,0);       //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0020               MOVS     R0,#+0
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   7F21               MOVS     R1,#+127
   \   00000140   0120               MOVS     R0,#+1
   \   00000142   03B4               PUSH     {R0,R1}
   \   00000144   2121               MOVS     R1,#+33
   \   00000146   0F20               MOVS     R0,#+15
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   2D23               MOVS     R3,#+45
   \   0000014C   0122               MOVS     R2,#+1
   \   0000014E   0021               MOVS     R1,#+0
   \   00000150   4448               LDR      R0,??ScreenBrightness_Paint_0+0x1C  ;; 0xa41
   \   00000152   2468               LDR      R4,[R4, #+0]
   \   00000154   404F               LDR      R7,??ScreenBrightness_Paint_0+0x10  ;; 0xa7d
   \   00000156   7C43               MULS     R4,R7,R4
   \   00000158   2C19               ADDS     R4,R5,R4
   \   0000015A   2018               ADDS     R0,R4,R0
   \   0000015C   ........           BL       Label
   \   00000160   06B0               ADD      SP,SP,#+24
   7658          
   7659                 H_line(4,TNPozY+1,54,1);                                                 // (char X, int Y, char lenght, char typ) 
   \   00000162   0123               MOVS     R3,#+1
   \   00000164   3622               MOVS     R2,#+54
   \   00000166   2921               MOVS     R1,#+41
   \   00000168   0420               MOVS     R0,#+4
   \   0000016A   ........           BL       H_line
   7660                 H_line(4,TNPozY-1,54,1);                                                 // (char X, int Y, char lenght, char typ) 
   \   0000016E   0123               MOVS     R3,#+1
   \   00000170   3622               MOVS     R2,#+54
   \   00000172   2721               MOVS     R1,#+39
   \   00000174   0420               MOVS     R0,#+4
   \   00000176   ........           BL       H_line
   7661                 CanvasPixel(3, TNPozY, 1);
   \   0000017A   0122               MOVS     R2,#+1
   \   0000017C   2821               MOVS     R1,#+40
   \   0000017E   0320               MOVS     R0,#+3
   \   00000180   ........           BL       CanvasPixel
   7662                 CanvasPixel(58, TNPozY, 1);
   \   00000184   0122               MOVS     R2,#+1
   \   00000186   2821               MOVS     R1,#+40
   \   00000188   3A20               MOVS     R0,#+58
   \   0000018A   ........           BL       CanvasPixel
   7663                 
   7664                 char WypMinJasnosciTMP=((WypMinJasnosci-3)*2);
   \   0000018E   3648               LDR      R0,??ScreenBrightness_Paint_0+0x20  ;; WypMinJasnosci
   \   00000190   0078               LDRB     R0,[R0, #+0]
   \   00000192   C01E               SUBS     R0,R0,#+3
   \   00000194   4400               LSLS     R4,R0,#+1
   \   00000196   2406               LSLS     R4,R4,#+24
   \   00000198   240E               LSRS     R4,R4,#+24
   7665                 if (WypMinJasnosciTMP>100) WypMinJasnosciTMP=100;
   \   0000019A   2000               MOVS     R0,R4
   \   0000019C   6528               CMP      R0,#+101
   \   0000019E   00D3               BCC      ??ScreenBrightness_Paint_2
   \   000001A0   6424               MOVS     R4,#+100
   7666                 poz1=  (48 * WypMinJasnosciTMP/100)+7;
   \                     ??ScreenBrightness_Paint_2:
   \   000001A2   2000               MOVS     R0,R4
   \   000001A4   3021               MOVS     R1,#+48
   \   000001A6   4843               MULS     R0,R1,R0
   \   000001A8   6421               MOVS     R1,#+100
   \   000001AA   ........           BL       __aeabi_idivmod
   \   000001AE   0700               MOVS     R7,R0
   \   000001B0   FF1D               ADDS     R7,R7,#+7
   \   000001B2   3F06               LSLS     R7,R7,#+24
   \   000001B4   3F0E               LSRS     R7,R7,#+24
   7667                 H_line(poz1-1,TNPozY+3,3,1); // (char X, int Y, char lenght, char typ)
   \   000001B6   3800               MOVS     R0,R7
   \   000001B8   451E               SUBS     R5,R0,#+1
   \   000001BA   0123               MOVS     R3,#+1
   \   000001BC   0322               MOVS     R2,#+3
   \   000001BE   2B21               MOVS     R1,#+43
   \   000001C0   2800               MOVS     R0,R5
   \   000001C2   0006               LSLS     R0,R0,#+24
   \   000001C4   000E               LSRS     R0,R0,#+24
   \   000001C6   ........           BL       H_line
   7668                 H_line(poz1-2,TNPozY+2,5,1); // (char X, int Y, char lenght, char typ)
   \   000001CA   BF1E               SUBS     R7,R7,#+2
   \   000001CC   0123               MOVS     R3,#+1
   \   000001CE   0522               MOVS     R2,#+5
   \   000001D0   2A21               MOVS     R1,#+42
   \   000001D2   3800               MOVS     R0,R7
   \   000001D4   0006               LSLS     R0,R0,#+24
   \   000001D6   000E               LSRS     R0,R0,#+24
   \   000001D8   ........           BL       H_line
   7669                 H_line(poz1-2,TNPozY,5,1); // (char X, int Y, char lenght, char typ)
   \   000001DC   0123               MOVS     R3,#+1
   \   000001DE   0522               MOVS     R2,#+5
   \   000001E0   2821               MOVS     R1,#+40
   \   000001E2   3800               MOVS     R0,R7
   \   000001E4   0006               LSLS     R0,R0,#+24
   \   000001E6   000E               LSRS     R0,R0,#+24
   \   000001E8   ........           BL       H_line
   7670                 H_line(poz1-2,TNPozY-2,5,1); // (char X, int Y, char lenght, char typ)
   \   000001EC   0123               MOVS     R3,#+1
   \   000001EE   0522               MOVS     R2,#+5
   \   000001F0   2621               MOVS     R1,#+38
   \   000001F2   3800               MOVS     R0,R7
   \   000001F4   0006               LSLS     R0,R0,#+24
   \   000001F6   000E               LSRS     R0,R0,#+24
   \   000001F8   ........           BL       H_line
   7671                 H_line(poz1-1,TNPozY-3,3,1); // (char X, int Y, char lenght, char typ)
   \   000001FC   0123               MOVS     R3,#+1
   \   000001FE   0322               MOVS     R2,#+3
   \   00000200   2521               MOVS     R1,#+37
   \   00000202   2800               MOVS     R0,R5
   \   00000204   0006               LSLS     R0,R0,#+24
   \   00000206   000E               LSRS     R0,R0,#+24
   \   00000208   ........           BL       H_line
   7672                 
   7673                 if (poz1<10)
   7674                 {
   7675                   poz1=10; 
   7676                 }else if (poz1>55)
   7677                 {
   7678                   poz1=55; 
   7679                 }
   7680                 
   7681                 IL=CharToStr(WypMinJasnosciTMP, TXT, 3); //(char Value, char *Vstring, char ill)
   \   0000020C   0322               MOVS     R2,#+3
   \   0000020E   01A9               ADD      R1,SP,#+4
   \   00000210   2000               MOVS     R0,R4
   \   00000212   ........           BL       CharToStr
   \   00000216   0200               MOVS     R2,R0
   7682                 TXT[IL++]='%';
   \   00000218   2521               MOVS     R1,#+37
   \   0000021A   3154               STRB     R1,[R6, R0]
   7683                 //Label(TXT,2,poz1,TNPozY-12,IL,33,1,127,0);                                     //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   7684                 Label(TXT,0,26,TNPozY-13,IL,20,1,127,0);                                     //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000021C   82B0               SUB      SP,SP,#+8
   \   0000021E   0020               MOVS     R0,#+0
   \   00000220   0090               STR      R0,[SP, #+0]
   \   00000222   7F21               MOVS     R1,#+127
   \   00000224   0120               MOVS     R0,#+1
   \   00000226   03B4               PUSH     {R0,R1}
   \   00000228   1421               MOVS     R1,#+20
   \   0000022A   521C               ADDS     R2,R2,#+1
   \   0000022C   1000               MOVS     R0,R2
   \   0000022E   0006               LSLS     R0,R0,#+24
   \   00000230   000E               LSRS     R0,R0,#+24
   \   00000232   03B4               PUSH     {R0,R1}
   \   00000234   1B23               MOVS     R3,#+27
   \   00000236   1A22               MOVS     R2,#+26
   \   00000238   0021               MOVS     R1,#+0
   \   0000023A   07A8               ADD      R0,SP,#+28
   \   0000023C   ........           BL       Label
   \   00000240   06B0               ADD      SP,SP,#+24
   7685           
   7686          }//________________________________________________________________________
   \   00000242   FEBC               POP      {R1-R7}
   \   00000244   01BC               POP      {R0}
   \   00000246   0047               BX       R0               ;; return
   \                     ??ScreenBrightness_Paint_0:
   \   00000248   ........           DC32     g_leng
   \   0000024C   ........           DC32     Speech
   \   00000250   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000254   230A0000           DC32     0xa23
   \   00000258   7D0A0000           DC32     0xa7d
   \   0000025C   320A0000           DC32     0xa32
   \   00000260   ........           DC32     WypMaxJasnosci
   \   00000264   410A0000           DC32     0xa41
   \   00000268   ........           DC32     WypMinJasnosci
   7687              
   7688              
   7689              
   7690              
   7691              
   7692            
   7693          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7694          void ScreenBrightness_Event(void)
   7695              {
   \                     ScreenBrightness_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7696                char RepaintTMP=0;
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2500               MOVS     R5,R4
   \   00000006   2100               MOVS     R1,R4
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0120               MOVS     R0,#+1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   6748               LDR      R0,??ScreenBrightness_Event_0  ;; Y_down
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   6748               LDR      R0,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   6748               LDR      R0,??ScreenBrightness_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   6748               LDR      R0,??ScreenBrightness_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   7697                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   7698                if (ans<0)  
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   12D5               BPL      ??ScreenBrightness_Event_1
   7699                 {
   7700                    MenuLevel=(MenuLevel/10);
   \   0000002C   644D               LDR      R5,??ScreenBrightness_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   286D               LDR      R0,[R5, #+80]
   \   00000030   0A21               MOVS     R1,#+10
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   2865               STR      R0,[R5, #+80]
   7701                    gWypMinJasnosciTest=0;
   \   00000038   6248               LDR      R0,??ScreenBrightness_Event_0+0x14  ;; gWypMinJasnosciTest
   \   0000003A   0470               STRB     R4,[R0, #+0]
   7702                    AT91C_BASE_PWMC->PWMC_DIS = 0x1;
   \   0000003C   0127               MOVS     R7,#+1
   \   0000003E   6248               LDR      R0,??ScreenBrightness_Event_0+0x18  ;; 0xfffcc008
   \   00000040   0760               STR      R7,[R0, #+0]
   7703                    Set_LCD_Light_PWM_Fill(WypMaxJasnosci); 
                           ^
Warning[Pe223]: function "Set_LCD_Light_PWM_Fill" declared implicitly
   \   00000042   6248               LDR      R0,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   00000044   0078               LDRB     R0,[R0, #+0]
   \   00000046   ........           BL       Set_LCD_Light_PWM_Fill
   7704                    AT91C_BASE_PWMC->PWMC_ENA = 0x1;
   \   0000004A   6148               LDR      R0,??ScreenBrightness_Event_0+0x20  ;; 0xfffcc004
   \   0000004C   0760               STR      R7,[R0, #+0]
   7705                    RepaintTMP=1;
   \   0000004E   3D00               MOVS     R5,R7
   \   00000050   A7E0               B        ??ScreenBrightness_Event_2
   7706                 }else{
   7707                     char Xtym=0;
   7708                     if ((X_down>1) && (X_down<63) && (Y_down>TAPozY-10) && (Y_down<TAPozY+5))                    //ustawienie wype³nienia podwietlenia ekranu aktywnego
   \                     ??ScreenBrightness_Event_1:
   \   00000052   5848               LDR      R0,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   405E               LDRSH    R0,[R0, R1]
   \   00000058   0228               CMP      R0,#+2
   \   0000005A   36DB               BLT      ??ScreenBrightness_Event_3
   \   0000005C   3F28               CMP      R0,#+63
   \   0000005E   34DA               BGE      ??ScreenBrightness_Event_3
   \   00000060   5349               LDR      R1,??ScreenBrightness_Event_0  ;; Y_down
   \   00000062   0022               MOVS     R2,#+0
   \   00000064   895E               LDRSH    R1,[R1, R2]
   \   00000066   4729               CMP      R1,#+71
   \   00000068   2FDB               BLT      ??ScreenBrightness_Event_3
   \   0000006A   5529               CMP      R1,#+85
   \   0000006C   2DDA               BGE      ??ScreenBrightness_Event_3
   7709                     {
   7710                          Xtym=X_down;
   7711                          if (Xtym<7) Xtym=7;
   \   0000006E   0006               LSLS     R0,R0,#+24
   \   00000070   000E               LSRS     R0,R0,#+24
   \   00000072   0728               CMP      R0,#+7
   \   00000074   00D2               BCS      ??ScreenBrightness_Event_4
   \   00000076   0720               MOVS     R0,#+7
   7712                          if (Xtym>55) Xtym=55;
   \                     ??ScreenBrightness_Event_4:
   \   00000078   3828               CMP      R0,#+56
   \   0000007A   00D3               BCC      ??ScreenBrightness_Event_5
   \   0000007C   3720               MOVS     R0,#+55
   7713                          Xtym -=7;
   7714                          Xtym=(Xtym *100)/48;
   \                     ??ScreenBrightness_Event_5:
   \   0000007E   C01F               SUBS     R0,R0,#+7
   \   00000080   0006               LSLS     R0,R0,#+24
   \   00000082   000E               LSRS     R0,R0,#+24
   \   00000084   6421               MOVS     R1,#+100
   \   00000086   4843               MULS     R0,R1,R0
   \   00000088   3021               MOVS     R1,#+48
   \   0000008A   ........           BL       __aeabi_idivmod
   7715                          if (Xtym<10) Xtym=10;                                           //ograniczeni minimalnej jasnoci wywietlacza w trybie aktywnym 
   \   0000008E   0006               LSLS     R0,R0,#+24
   \   00000090   000E               LSRS     R0,R0,#+24
   \   00000092   0A28               CMP      R0,#+10
   \   00000094   00D2               BCS      ??ScreenBrightness_Event_6
   \   00000096   0A20               MOVS     R0,#+10
   7716                          
   7717                          char WypMaxJasnosciTMP=Xtym/2 +3;
   \                     ??ScreenBrightness_Event_6:
   \   00000098   4008               LSRS     R0,R0,#+1
   \   0000009A   C01C               ADDS     R0,R0,#+3
   \   0000009C   0006               LSLS     R0,R0,#+24
   \   0000009E   000E               LSRS     R0,R0,#+24
   7718                          if (WypMaxJasnosciTMP>50) WypMaxJasnosciTMP=100;
   \   000000A0   0100               MOVS     R1,R0
   \   000000A2   3329               CMP      R1,#+51
   \   000000A4   00D3               BCC      ??ScreenBrightness_Event_7
   \   000000A6   6420               MOVS     R0,#+100
   7719                          WypMaxJasnosci=WypMaxJasnosciTMP;
   \                     ??ScreenBrightness_Event_7:
   \   000000A8   484E               LDR      R6,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   000000AA   3070               STRB     R0,[R6, #+0]
   7720                          if (WypMaxJasnosci<WypMinJasnosci) WypMinJasnosci=WypMaxJasnosci;
   \   000000AC   3178               LDRB     R1,[R6, #+0]
   \   000000AE   4948               LDR      R0,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   000000B0   0278               LDRB     R2,[R0, #+0]
   \   000000B2   9142               CMP      R1,R2
   \   000000B4   00D2               BCS      ??ScreenBrightness_Event_8
   \   000000B6   0170               STRB     R1,[R0, #+0]
   7721                          RepaintTMP=1;
   \                     ??ScreenBrightness_Event_8:
   \   000000B8   0127               MOVS     R7,#+1
   \   000000BA   3D00               MOVS     R5,R7
   7722                          
   7723                          AT91C_BASE_PWMC->PWMC_DIS = 0x1;
   \   000000BC   4248               LDR      R0,??ScreenBrightness_Event_0+0x18  ;; 0xfffcc008
   \   000000BE   0760               STR      R7,[R0, #+0]
   7724                          Set_LCD_Light_PWM_Fill(WypMaxJasnosci); 
                                 ^
Warning[Pe223]: function "Set_LCD_Light_PWM_Fill" declared implicitly
   \   000000C0   3078               LDRB     R0,[R6, #+0]
   \   000000C2   ........           BL       Set_LCD_Light_PWM_Fill
   7725                          AT91C_BASE_PWMC->PWMC_ENA = 0x1;
   \   000000C6   4248               LDR      R0,??ScreenBrightness_Event_0+0x20  ;; 0xfffcc004
   \   000000C8   0760               STR      R7,[R0, #+0]
   7726                     }
   7727                     if ((X_down>1) && (X_down<63) && (Y_down>TNPozY-10) && (Y_down<TNPozY+5))                    //ustawienie wype³nienia podwietlenia ekranu nieaktywnego
   \                     ??ScreenBrightness_Event_3:
   \   000000CA   3A48               LDR      R0,??ScreenBrightness_Event_0+0x4  ;; X_down
   \   000000CC   0021               MOVS     R1,#+0
   \   000000CE   405E               LDRSH    R0,[R0, R1]
   \   000000D0   0228               CMP      R0,#+2
   \   000000D2   38DB               BLT      ??ScreenBrightness_Event_9
   \   000000D4   3F28               CMP      R0,#+63
   \   000000D6   36DA               BGE      ??ScreenBrightness_Event_9
   \   000000D8   3549               LDR      R1,??ScreenBrightness_Event_0  ;; Y_down
   \   000000DA   0022               MOVS     R2,#+0
   \   000000DC   895E               LDRSH    R1,[R1, R2]
   \   000000DE   1F29               CMP      R1,#+31
   \   000000E0   31DB               BLT      ??ScreenBrightness_Event_9
   \   000000E2   2D29               CMP      R1,#+45
   \   000000E4   2FDA               BGE      ??ScreenBrightness_Event_9
   7728                     {
   7729                          Xtym=X_down;
   7730                          if (Xtym<7) Xtym=7;
   \   000000E6   0006               LSLS     R0,R0,#+24
   \   000000E8   000E               LSRS     R0,R0,#+24
   \   000000EA   0728               CMP      R0,#+7
   \   000000EC   00D2               BCS      ??ScreenBrightness_Event_10
   \   000000EE   0720               MOVS     R0,#+7
   7731                          if (Xtym>55) Xtym=55;
   \                     ??ScreenBrightness_Event_10:
   \   000000F0   3828               CMP      R0,#+56
   \   000000F2   00D3               BCC      ??ScreenBrightness_Event_11
   \   000000F4   3720               MOVS     R0,#+55
   7732                          Xtym -=7;
   7733                          char WypMinJasnosciTMP=(((Xtym *100)/48))/2+3;
   \                     ??ScreenBrightness_Event_11:
   \   000000F6   C01F               SUBS     R0,R0,#+7
   \   000000F8   0006               LSLS     R0,R0,#+24
   \   000000FA   000E               LSRS     R0,R0,#+24
   \   000000FC   6421               MOVS     R1,#+100
   \   000000FE   4843               MULS     R0,R1,R0
   \   00000100   3021               MOVS     R1,#+48
   \   00000102   ........           BL       __aeabi_idivmod
   \   00000106   0100               MOVS     R1,R0
   \   00000108   C90F               LSRS     R1,R1,#+31
   \   0000010A   0818               ADDS     R0,R1,R0
   \   0000010C   0100               MOVS     R1,R0
   \   0000010E   4910               ASRS     R1,R1,#+1
   \   00000110   C91C               ADDS     R1,R1,#+3
   \   00000112   0906               LSLS     R1,R1,#+24
   \   00000114   090E               LSRS     R1,R1,#+24
   7734                          if (WypMinJasnosciTMP>50) WypMinJasnosciTMP=100;
   \   00000116   0800               MOVS     R0,R1
   \   00000118   3328               CMP      R0,#+51
   \   0000011A   00D3               BCC      ??ScreenBrightness_Event_12
   \   0000011C   6421               MOVS     R1,#+100
   7735                          WypMinJasnosci=WypMinJasnosciTMP;
   \                     ??ScreenBrightness_Event_12:
   \   0000011E   2D48               LDR      R0,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   00000120   0170               STRB     R1,[R0, #+0]
   7736                          if (WypMaxJasnosci<WypMinJasnosci) WypMaxJasnosci=WypMinJasnosci;
   \   00000122   0178               LDRB     R1,[R0, #+0]
   \   00000124   294E               LDR      R6,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   00000126   3278               LDRB     R2,[R6, #+0]
   \   00000128   8A42               CMP      R2,R1
   \   0000012A   00D2               BCS      ??ScreenBrightness_Event_13
   \   0000012C   3170               STRB     R1,[R6, #+0]
   7737                          RepaintTMP=1;
   \                     ??ScreenBrightness_Event_13:
   \   0000012E   0127               MOVS     R7,#+1
   \   00000130   3D00               MOVS     R5,R7
   7738                          gWypMinJasnosciTest=1;
   \   00000132   2449               LDR      R1,??ScreenBrightness_Event_0+0x14  ;; gWypMinJasnosciTest
   \   00000134   3A00               MOVS     R2,R7
   \   00000136   0A70               STRB     R2,[R1, #+0]
   7739                          
   7740                          AT91C_BASE_PWMC->PWMC_DIS = 0x1;
   \   00000138   2349               LDR      R1,??ScreenBrightness_Event_0+0x18  ;; 0xfffcc008
   \   0000013A   0F60               STR      R7,[R1, #+0]
   7741                          Set_LCD_Light_PWM_Fill(WypMinJasnosci); 
                                 ^
Warning[Pe223]: function "Set_LCD_Light_PWM_Fill" declared implicitly
   \   0000013C   0078               LDRB     R0,[R0, #+0]
   \   0000013E   ........           BL       Set_LCD_Light_PWM_Fill
   7742                          AT91C_BASE_PWMC->PWMC_ENA = 0x1;
   \   00000142   2348               LDR      R0,??ScreenBrightness_Event_0+0x20  ;; 0xfffcc004
   \   00000144   0760               STR      R7,[R0, #+0]
   7743                     }
   7744                     
   7745                     if ((X_up>0) && (X_up<63) && (((Y_up>TAPozY-10) && (Y_up<TAPozY+5)) ||  ((Y_up>TNPozY-10) && (Y_up<TNPozY+5))))                    //zapamiêtanie wype³nienia podwietlenia ekranu 
   \                     ??ScreenBrightness_Event_9:
   \   00000146   1D48               LDR      R0,??ScreenBrightness_Event_0+0xC  ;; X_up
   \   00000148   0021               MOVS     R1,#+0
   \   0000014A   405E               LDRSH    R0,[R0, R1]
   \   0000014C   0128               CMP      R0,#+1
   \   0000014E   28DB               BLT      ??ScreenBrightness_Event_2
   \   00000150   3F28               CMP      R0,#+63
   \   00000152   26DA               BGE      ??ScreenBrightness_Event_2
   \   00000154   1848               LDR      R0,??ScreenBrightness_Event_0+0x8  ;; Y_up
   \   00000156   405E               LDRSH    R0,[R0, R1]
   \   00000158   4728               CMP      R0,#+71
   \   0000015A   01DB               BLT      ??ScreenBrightness_Event_14
   \   0000015C   5528               CMP      R0,#+85
   \   0000015E   03DB               BLT      ??ScreenBrightness_Event_15
   \                     ??ScreenBrightness_Event_14:
   \   00000160   1F28               CMP      R0,#+31
   \   00000162   1EDB               BLT      ??ScreenBrightness_Event_2
   \   00000164   2D28               CMP      R0,#+45
   \   00000166   1CDA               BGE      ??ScreenBrightness_Event_2
   7746                     {
   7747                         
   7748                        //zapis do flash
   7749                        unsigned int Save = __get_interrupt_state();  
   \                     ??ScreenBrightness_Event_15:
   \   00000168   ........           BL       __iar_get_interrupt_state
   \   0000016C   0700               MOVS     R7,R0
   7750                        __disable_interrupt();
   \   0000016E   ........           BL       __iar_disable_interrupt
   7751                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenBrightActive)), (char*) (&(WypMaxJasnosci)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000172   164E               LDR      R6,??ScreenBrightness_Event_0+0x1C  ;; WypMaxJasnosci
   \   00000174   0122               MOVS     R2,#+1
   \   00000176   3100               MOVS     R1,R6
   \   00000178   1748               LDR      R0,??ScreenBrightness_Event_0+0x28  ;; 0x13d80e
   \   0000017A   ........           BL       FlashWrite
   7752                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenBrightInactive)), (char*) (&(WypMinJasnosci)), 1);
   \   0000017E   0122               MOVS     R2,#+1
   \   00000180   1449               LDR      R1,??ScreenBrightness_Event_0+0x24  ;; WypMinJasnosci
   \   00000182   1648               LDR      R0,??ScreenBrightness_Event_0+0x2C  ;; 0x13d80f
   \   00000184   ........           BL       FlashWrite
   7753                        __set_interrupt_state(Save);
   \   00000188   3800               MOVS     R0,R7
   \   0000018A   ........           BL       __iar_set_interrupt_state
   7754                        //koniec zapisu do flash
   7755                      
   7756                        
   7757                        AT91C_BASE_PWMC->PWMC_DIS = 0x1;
   \   0000018E   0127               MOVS     R7,#+1
   \   00000190   0D48               LDR      R0,??ScreenBrightness_Event_0+0x18  ;; 0xfffcc008
   \   00000192   0760               STR      R7,[R0, #+0]
   7758                          Set_LCD_Light_PWM_Fill(WypMaxJasnosci); 
                                 ^
Warning[Pe223]: function "Set_LCD_Light_PWM_Fill" declared implicitly
   \   00000194   3078               LDRB     R0,[R6, #+0]
   \   00000196   ........           BL       Set_LCD_Light_PWM_Fill
   7759                          AT91C_BASE_PWMC->PWMC_ENA = 0x1;
   \   0000019A   0D48               LDR      R0,??ScreenBrightness_Event_0+0x20  ;; 0xfffcc004
   \   0000019C   0760               STR      R7,[R0, #+0]
   7760                        gWypMinJasnosciTest=0;
   \   0000019E   0948               LDR      R0,??ScreenBrightness_Event_0+0x14  ;; gWypMinJasnosciTest
   \   000001A0   0470               STRB     R4,[R0, #+0]
   7761                       
   7762                     }
   7763                     
   7764                   
   7765                 }
   7766                 
   7767                
   7768                 if (RepaintTMP) MenuPaint();  
   \                     ??ScreenBrightness_Event_2:
   \   000001A2   002D               CMP      R5,#+0
   \   000001A4   01D0               BEQ      ??ScreenBrightness_Event_16
   \   000001A6   ........           BL       MenuPaint
   7769              }//________________________________________________________________________
   \                     ??ScreenBrightness_Event_16:
   \   000001AA   F8BC               POP      {R3-R7}
   \   000001AC   01BC               POP      {R0}
   \   000001AE   0047               BX       R0               ;; return
   \                     ??ScreenBrightness_Event_0:
   \   000001B0   ........           DC32     Y_down
   \   000001B4   ........           DC32     X_down
   \   000001B8   ........           DC32     Y_up
   \   000001BC   ........           DC32     X_up
   \   000001C0   ........           DC32     TextToChangeLength
   \   000001C4   ........           DC32     gWypMinJasnosciTest
   \   000001C8   08C0FCFF           DC32     0xfffcc008
   \   000001CC   ........           DC32     WypMaxJasnosci
   \   000001D0   04C0FCFF           DC32     0xfffcc004
   \   000001D4   ........           DC32     WypMinJasnosci
   \   000001D8   0ED81300           DC32     0x13d80e
   \   000001DC   0FD81300           DC32     0x13d80f
   7770              
   7771          
   7772          
   7773              
   7774              
   7775              
   7776          //Ustawienia wygaszacza  **************************************************************************************************************
   7777          extern char g_ScreenSever_On;
   7778          extern char g_ScreenSever_Time_On;
   7779          extern char g_ScreenSever_Time_Off;
   7780          //*---------------------------------------------------------------------------- 

   \                                 In section Debug.txt, align 4, keep-with-next
   7781              void ScreenSever_Paint(void)
   7782              {  
   \                     ScreenSever_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   7A4C               LDR      R4,??ScreenSever_Paint_0  ;; g_leng
   \   00000004   7AA5               ADR      R5,??ScreenSever_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2800               MOVS     R0,R5
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0121               MOVS     R1,#+1
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   6C22               MOVS     R2,#+108
   \   0000001E   7548               LDR      R0,??ScreenSever_Paint_0+0x8  ;; 0x663
   \   00000020   2668               LDR      R6,[R4, #+0]
   \   00000022   754F               LDR      R7,??ScreenSever_Paint_0+0xC  ;; 0xa7d
   \   00000024   7E43               MULS     R6,R7,R6
   \   00000026   754F               LDR      R7,??ScreenSever_Paint_0+0x10  ;; Speech
   \   00000028   BE19               ADDS     R6,R7,R6
   \   0000002A   3018               ADDS     R0,R6,R0
   7783                
   7784                 List_Paint(Speech[g_leng].ScreenSever,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   7785                 
   7786                 g_Stop_Program=1;
   \   00000032   7348               LDR      R0,??ScreenSever_Paint_0+0x14  ;; g_Stop_Program
   \   00000034   0121               MOVS     R1,#+1
   \   00000036   0170               STRB     R1,[R0, #+0]
   7787                 
   7788                 //Speech[g_leng].RfChannel
   7789                 Label("On/off",0,6,90,10,33,1,127,0);
   \   00000038   82B0               SUB      SP,SP,#+8
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   0090               STR      R0,[SP, #+0]
   \   0000003E   7F21               MOVS     R1,#+127
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   2121               MOVS     R1,#+33
   \   00000046   0A20               MOVS     R0,#+10
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   5A23               MOVS     R3,#+90
   \   0000004C   0622               MOVS     R2,#+6
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   6C48               LDR      R0,??ScreenSever_Paint_0+0x18  ;; `?<Constant "On/off">`
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   7790                 if (g_ScreenSever_On==0)
   \   00000058   6B48               LDR      R0,??ScreenSever_Paint_0+0x1C  ;; g_ScreenSever_On
   \   0000005A   0078               LDRB     R0,[R0, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   0AD1               BNE      ??ScreenSever_Paint_1
   7791                 {
   7792                    Zone(" ",40,86,15,16,1);//(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \   00000060   0121               MOVS     R1,#+1
   \   00000062   1020               MOVS     R0,#+16
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   0F23               MOVS     R3,#+15
   \   00000068   5622               MOVS     R2,#+86
   \   0000006A   2821               MOVS     R1,#+40
   \   0000006C   2800               MOVS     R0,R5
   \   0000006E   ........           BL       Zone
   \   00000072   02B0               ADD      SP,SP,#+8
   \   00000074   B6E0               B        ??ScreenSever_Paint_2
   7793                 }else{
   7794                    Zone("X",40,86,15,16,1);//(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \                     ??ScreenSever_Paint_1:
   \   00000076   0121               MOVS     R1,#+1
   \   00000078   1020               MOVS     R0,#+16
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0F23               MOVS     R3,#+15
   \   0000007E   5622               MOVS     R2,#+86
   \   00000080   2821               MOVS     R1,#+40
   \   00000082   62A0               ADR      R0,??ScreenSever_Paint_0+0x20  ;; 0x58, 0x00, 0x00, 0x00
   \   00000084   ........           BL       Zone
   \   00000088   02B0               ADD      SP,SP,#+8
   7795                
   7796                 char tmp_char[3];
   7797                 Label(Speech[g_leng].TimeOn,0,5,73,15,33,1,127,0);
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0020               MOVS     R0,#+0
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   7F21               MOVS     R1,#+127
   \   00000092   0120               MOVS     R0,#+1
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   2121               MOVS     R1,#+33
   \   00000098   0F20               MOVS     R0,#+15
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   4923               MOVS     R3,#+73
   \   0000009E   0522               MOVS     R2,#+5
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   5B48               LDR      R0,??ScreenSever_Paint_0+0x24  ;; 0x672
   \   000000A4   2568               LDR      R5,[R4, #+0]
   \   000000A6   544E               LDR      R6,??ScreenSever_Paint_0+0xC  ;; 0xa7d
   \   000000A8   7543               MULS     R5,R6,R5
   \   000000AA   544E               LDR      R6,??ScreenSever_Paint_0+0x10  ;; Speech
   \   000000AC   7519               ADDS     R5,R6,R5
   \   000000AE   2818               ADDS     R0,R5,R0
   \   000000B0   ........           BL       Label
   \   000000B4   06B0               ADD      SP,SP,#+24
   7798                 CharToStr(g_ScreenSever_Time_On, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   000000B6   0222               MOVS     R2,#+2
   \   000000B8   01A9               ADD      R1,SP,#+4
   \   000000BA   5648               LDR      R0,??ScreenSever_Paint_0+0x28  ;; g_ScreenSever_Time_On
   \   000000BC   0078               LDRB     R0,[R0, #+0]
   \   000000BE   ........           BL       CharToStr
   7799                 Label(tmp_char,1,29,54,2,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   7F21               MOVS     R1,#+127
   \   000000CA   0120               MOVS     R0,#+1
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   0A21               MOVS     R1,#+10
   \   000000D0   0220               MOVS     R0,#+2
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   3623               MOVS     R3,#+54
   \   000000D6   1D22               MOVS     R2,#+29
   \   000000D8   0121               MOVS     R1,#+1
   \   000000DA   07A8               ADD      R0,SP,#+28
   \   000000DC   ........           BL       Label
   \   000000E0   06B0               ADD      SP,SP,#+24
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   0020               MOVS     R0,#+0
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   7F21               MOVS     R1,#+127
   \   000000EA   0120               MOVS     R0,#+1
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   0A21               MOVS     R1,#+10
   \   000000F0   0320               MOVS     R0,#+3
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   3623               MOVS     R3,#+54
   \   000000F6   1E22               MOVS     R2,#+30
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   47A0               ADR      R0,??ScreenSever_Paint_0+0x2C  ;; ":00"
   7800                 Label(":00",0,30,54,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   7801                          
   7802                 
   7803                 char LabelButt[2];
   7804                 LabelButt[1]=0;
   \   00000102   6D46               MOV      R5,SP
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   6870               STRB     R0,[R5, #+1]
   7805                 LabelButt[0]=30;
   \   00000108   1E26               MOVS     R6,#+30
   \   0000010A   2E70               STRB     R6,[R5, #+0]
   7806                 Button(LabelButt,44,47,17,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   1920               MOVS     R0,#+25
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   1123               MOVS     R3,#+17
   \   00000114   2F22               MOVS     R2,#+47
   \   00000116   2C21               MOVS     R1,#+44
   \   00000118   02A8               ADD      R0,SP,#+8
   \   0000011A   ........           BL       Button
   \   0000011E   02B0               ADD      SP,SP,#+8
   7807                 LabelButt[0]=31;
   \   00000120   1F27               MOVS     R7,#+31
   \   00000122   2F70               STRB     R7,[R5, #+0]
   7808                 Button(LabelButt,2,47,17,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   1920               MOVS     R0,#+25
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   1123               MOVS     R3,#+17
   \   0000012C   2F22               MOVS     R2,#+47
   \   0000012E   0221               MOVS     R1,#+2
   \   00000130   02A8               ADD      R0,SP,#+8
   \   00000132   ........           BL       Button
   \   00000136   02B0               ADD      SP,SP,#+8
   7809                 
   7810                 Label(Speech[g_leng].TimeOff,0,5,34,15,33,1,127,0);
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0020               MOVS     R0,#+0
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   7F21               MOVS     R1,#+127
   \   00000140   0120               MOVS     R0,#+1
   \   00000142   03B4               PUSH     {R0,R1}
   \   00000144   2121               MOVS     R1,#+33
   \   00000146   0F20               MOVS     R0,#+15
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   2223               MOVS     R3,#+34
   \   0000014C   0522               MOVS     R2,#+5
   \   0000014E   0021               MOVS     R1,#+0
   \   00000150   8C46               MOV      R12,R1
   \   00000152   3249               LDR      R1,??ScreenSever_Paint_0+0x30  ;; 0x681
   \   00000154   2068               LDR      R0,[R4, #+0]
   \   00000156   284C               LDR      R4,??ScreenSever_Paint_0+0xC  ;; 0xa7d
   \   00000158   6043               MULS     R0,R4,R0
   \   0000015A   284C               LDR      R4,??ScreenSever_Paint_0+0x10  ;; Speech
   \   0000015C   2018               ADDS     R0,R4,R0
   \   0000015E   4018               ADDS     R0,R0,R1
   \   00000160   6146               MOV      R1,R12
   \   00000162   ........           BL       Label
   \   00000166   06B0               ADD      SP,SP,#+24
   7811                 CharToStr(g_ScreenSever_Time_Off, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000168   0222               MOVS     R2,#+2
   \   0000016A   01A9               ADD      R1,SP,#+4
   \   0000016C   2C48               LDR      R0,??ScreenSever_Paint_0+0x34  ;; g_ScreenSever_Time_Off
   \   0000016E   0078               LDRB     R0,[R0, #+0]
   \   00000170   ........           BL       CharToStr
   7812                 Label(tmp_char,1,29,16,2,18,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000174   82B0               SUB      SP,SP,#+8
   \   00000176   0020               MOVS     R0,#+0
   \   00000178   0090               STR      R0,[SP, #+0]
   \   0000017A   7F21               MOVS     R1,#+127
   \   0000017C   0120               MOVS     R0,#+1
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   1221               MOVS     R1,#+18
   \   00000182   0220               MOVS     R0,#+2
   \   00000184   03B4               PUSH     {R0,R1}
   \   00000186   1023               MOVS     R3,#+16
   \   00000188   1D22               MOVS     R2,#+29
   \   0000018A   0121               MOVS     R1,#+1
   \   0000018C   07A8               ADD      R0,SP,#+28
   \   0000018E   ........           BL       Label
   \   00000192   06B0               ADD      SP,SP,#+24
   7813                 Label(":00",0,30,16,3,18,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000194   82B0               SUB      SP,SP,#+8
   \   00000196   0020               MOVS     R0,#+0
   \   00000198   0090               STR      R0,[SP, #+0]
   \   0000019A   7F21               MOVS     R1,#+127
   \   0000019C   0120               MOVS     R0,#+1
   \   0000019E   03B4               PUSH     {R0,R1}
   \   000001A0   1221               MOVS     R1,#+18
   \   000001A2   0320               MOVS     R0,#+3
   \   000001A4   03B4               PUSH     {R0,R1}
   \   000001A6   1023               MOVS     R3,#+16
   \   000001A8   3200               MOVS     R2,R6
   \   000001AA   0021               MOVS     R1,#+0
   \   000001AC   1AA0               ADR      R0,??ScreenSever_Paint_0+0x2C  ;; ":00"
   \   000001AE   ........           BL       Label
   \   000001B2   06B0               ADD      SP,SP,#+24
   7814                                     
   7815               
   7816                 LabelButt[1]=0;
   \   000001B4   0020               MOVS     R0,#+0
   \   000001B6   6870               STRB     R0,[R5, #+1]
   7817                 LabelButt[0]=30;
   \   000001B8   2E70               STRB     R6,[R5, #+0]
   7818                 Button(LabelButt,44,8,17,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000001BA   82B0               SUB      SP,SP,#+8
   \   000001BC   1920               MOVS     R0,#+25
   \   000001BE   0090               STR      R0,[SP, #+0]
   \   000001C0   1123               MOVS     R3,#+17
   \   000001C2   0822               MOVS     R2,#+8
   \   000001C4   2C21               MOVS     R1,#+44
   \   000001C6   02A8               ADD      R0,SP,#+8
   \   000001C8   ........           BL       Button
   \   000001CC   02B0               ADD      SP,SP,#+8
   7819                 LabelButt[0]=31;
   \   000001CE   2F70               STRB     R7,[R5, #+0]
   7820                 Button(LabelButt,2,8,17,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000001D0   82B0               SUB      SP,SP,#+8
   \   000001D2   1920               MOVS     R0,#+25
   \   000001D4   0090               STR      R0,[SP, #+0]
   \   000001D6   1123               MOVS     R3,#+17
   \   000001D8   0822               MOVS     R2,#+8
   \   000001DA   0221               MOVS     R1,#+2
   \   000001DC   02A8               ADD      R0,SP,#+8
   \   000001DE   ........           BL       Button
   \   000001E2   02B0               ADD      SP,SP,#+8
   7821                 }
   7822          
   7823                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   7824              }//________________________________________________________________________
   \                     ??ScreenSever_Paint_2:
   \   000001E4   FEBC               POP      {R1-R7}
   \   000001E6   01BC               POP      {R0}
   \   000001E8   0047               BX       R0               ;; return
   \   000001EA   C046               Nop      
   \                     ??ScreenSever_Paint_0:
   \   000001EC   ........           DC32     g_leng
   \   000001F0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001F4   63060000           DC32     0x663
   \   000001F8   7D0A0000           DC32     0xa7d
   \   000001FC   ........           DC32     Speech
   \   00000200   ........           DC32     g_Stop_Program
   \   00000204   ........           DC32     `?<Constant "On/off">`
   \   00000208   ........           DC32     g_ScreenSever_On
   \   0000020C   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   00000210   72060000           DC32     0x672
   \   00000214   ........           DC32     g_ScreenSever_Time_On
   \   00000218   3A303000           DC8      ":00"
   \   0000021C   81060000           DC32     0x681
   \   00000220   ........           DC32     g_ScreenSever_Time_Off
   7825          
   7826          
   7827              
   7828          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7829              void ScreenSever_Event(void)
   7830              {
   \                     ScreenSever_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7831                char RepaintTMP=0;
   \   00000002   0025               MOVS     R5,#+0
   \   00000004   2E00               MOVS     R6,R5
   7832                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   7833                if (ans<0)  
   \   00000006   2900               MOVS     R1,R5
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0120               MOVS     R0,#+1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   5848               LDR      R0,??ScreenSever_Event_0  ;; Y_down
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   5848               LDR      R0,??ScreenSever_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   5848               LDR      R0,??ScreenSever_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   5848               LDR      R0,??ScreenSever_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   21D5               BPL      ??ScreenSever_Event_1
   7834                 {
   7835                    //zapis do flash
   7836                        unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0400               MOVS     R4,R0
   7837                        __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
   7838                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_On)),0, &g_ScreenSever_On,1);
   7839                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_On)),0, &g_ScreenSever_Time_On,1);
   7840                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_Off)),0, &g_ScreenSever_Time_Off,1);
   7841                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_On)), (char*) (&(g_ScreenSever_On)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   0122               MOVS     R2,#+1
   \   00000038   5249               LDR      R1,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   0000003A   5348               LDR      R0,??ScreenSever_Event_0+0x14  ;; 0x13d7ea
   \   0000003C   ........           BL       FlashWrite
   7842                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_On)), (char*) (&(g_ScreenSever_Time_On)), 1);
   \   00000040   524E               LDR      R6,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   00000042   0122               MOVS     R2,#+1
   \   00000044   3100               MOVS     R1,R6
   \   00000046   5248               LDR      R0,??ScreenSever_Event_0+0x1C  ;; 0x13d7eb
   \   00000048   ........           BL       FlashWrite
   7843                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_Off)), (char*) (&(g_ScreenSever_Time_On)), 1);
   \   0000004C   0122               MOVS     R2,#+1
   \   0000004E   3100               MOVS     R1,R6
   \   00000050   5048               LDR      R0,??ScreenSever_Event_0+0x20  ;; 0x13d7ec
   \   00000052   ........           BL       FlashWrite
   7844                        __set_interrupt_state(Save);
   \   00000056   2000               MOVS     R0,R4
   \   00000058   ........           BL       __iar_set_interrupt_state
   7845                        //koniec zapisu do flash
   7846                   
   7847                    g_Stop_Program=0;
   \   0000005C   4E48               LDR      R0,??ScreenSever_Event_0+0x24  ;; g_Stop_Program
   \   0000005E   0570               STRB     R5,[R0, #+0]
   7848                    MenuLevel=(MenuLevel/10);
   \   00000060   4E4C               LDR      R4,??ScreenSever_Event_0+0x28  ;; TextToChangeLength
   \   00000062   206D               LDR      R0,[R4, #+80]
   \   00000064   0A21               MOVS     R1,#+10
   \   00000066   ........           BL       __aeabi_idivmod
   \   0000006A   2065               STR      R0,[R4, #+80]
   7849                    RepaintTMP=1;
   \   0000006C   0126               MOVS     R6,#+1
   \   0000006E   7AE0               B        ??ScreenSever_Event_2
   7850                 }else{
   7851                
   7852                   if (g_ScreenSever_On==1)
   \                     ??ScreenSever_Event_1:
   \   00000070   444C               LDR      R4,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   00000072   2078               LDRB     R0,[R4, #+0]
   \   00000074   0128               CMP      R0,#+1
   \   00000076   63D1               BNE      ??ScreenSever_Event_3
   7853                   {
   7854                    if (Zone("X",40,86,15,16,1)==1)  //(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \   00000078   0121               MOVS     R1,#+1
   \   0000007A   1020               MOVS     R0,#+16
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0F23               MOVS     R3,#+15
   \   00000080   5622               MOVS     R2,#+86
   \   00000082   2821               MOVS     R1,#+40
   \   00000084   46A0               ADR      R0,??ScreenSever_Event_0+0x2C  ;; 0x58, 0x00, 0x00, 0x00
   \   00000086   ........           BL       Zone
   \   0000008A   02B0               ADD      SP,SP,#+8
   \   0000008C   0128               CMP      R0,#+1
   \   0000008E   02D1               BNE      ??ScreenSever_Event_4
   7855                    {
   7856                      g_ScreenSever_On=0;
   \   00000090   2800               MOVS     R0,R5
   \   00000092   2070               STRB     R0,[R4, #+0]
   7857                      RepaintTMP=1;
   \   00000094   0126               MOVS     R6,#+1
   7858                    }
   7859                    
   7860                    char LabelButt[2];
   7861                      LabelButt[1]=0;
   \                     ??ScreenSever_Event_4:
   \   00000096   6C46               MOV      R4,SP
   \   00000098   6570               STRB     R5,[R4, #+1]
   7862                      LabelButt[0]=30;
   \   0000009A   1E25               MOVS     R5,#+30
   \   0000009C   2570               STRB     R5,[R4, #+0]
   7863                      if (Button(LabelButt,44,47,17,25)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   1920               MOVS     R0,#+25
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   1123               MOVS     R3,#+17
   \   000000A6   2F22               MOVS     R2,#+47
   \   000000A8   2C21               MOVS     R1,#+44
   \   000000AA   02A8               ADD      R0,SP,#+8
   \   000000AC   ........           BL       Button
   \   000000B0   02B0               ADD      SP,SP,#+8
   \   000000B2   0128               CMP      R0,#+1
   \   000000B4   06D1               BNE      ??ScreenSever_Event_5
   7864                      {
   7865                        if (g_ScreenSever_Time_On<23) 
   \   000000B6   354E               LDR      R6,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000B8   3078               LDRB     R0,[R6, #+0]
   \   000000BA   1728               CMP      R0,#+23
   \   000000BC   01D2               BCS      ??ScreenSever_Event_6
   7866                        {
   7867                          g_ScreenSever_Time_On++;
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   3070               STRB     R0,[R6, #+0]
   7868                        }
   7869                        RepaintTMP=1;
   \                     ??ScreenSever_Event_6:
   \   000000C2   0126               MOVS     R6,#+1
   7870                      }
   7871                      LabelButt[0]=31;
   \                     ??ScreenSever_Event_5:
   \   000000C4   1F27               MOVS     R7,#+31
   \   000000C6   2770               STRB     R7,[R4, #+0]
   7872                      if (Button(LabelButt,2,47,17,25)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   1920               MOVS     R0,#+25
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   1123               MOVS     R3,#+17
   \   000000D0   2F22               MOVS     R2,#+47
   \   000000D2   0221               MOVS     R1,#+2
   \   000000D4   02A8               ADD      R0,SP,#+8
   \   000000D6   ........           BL       Button
   \   000000DA   02B0               ADD      SP,SP,#+8
   \   000000DC   0128               CMP      R0,#+1
   \   000000DE   06D1               BNE      ??ScreenSever_Event_7
   7873                      {
   7874                         if (g_ScreenSever_Time_On>0) g_ScreenSever_Time_On--;
   \   000000E0   2A4E               LDR      R6,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000E2   3078               LDRB     R0,[R6, #+0]
   \   000000E4   0028               CMP      R0,#+0
   \   000000E6   01D0               BEQ      ??ScreenSever_Event_8
   \   000000E8   401E               SUBS     R0,R0,#+1
   \   000000EA   3070               STRB     R0,[R6, #+0]
   7875                        RepaintTMP=1;
   \                     ??ScreenSever_Event_8:
   \   000000EC   0126               MOVS     R6,#+1
   7876                      }
   7877                      LabelButt[0]=30;
   \                     ??ScreenSever_Event_7:
   \   000000EE   2570               STRB     R5,[R4, #+0]
   7878                      if (Button(LabelButt,44,8,17,25)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   1920               MOVS     R0,#+25
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   1123               MOVS     R3,#+17
   \   000000F8   0822               MOVS     R2,#+8
   \   000000FA   2C21               MOVS     R1,#+44
   \   000000FC   02A8               ADD      R0,SP,#+8
   \   000000FE   ........           BL       Button
   \   00000102   02B0               ADD      SP,SP,#+8
   \   00000104   0128               CMP      R0,#+1
   \   00000106   06D1               BNE      ??ScreenSever_Event_9
   7879                      {
   7880                        if (g_ScreenSever_Time_Off<23) g_ScreenSever_Time_Off++;
   \   00000108   2648               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   0000010A   0178               LDRB     R1,[R0, #+0]
   \   0000010C   1729               CMP      R1,#+23
   \   0000010E   01D2               BCS      ??ScreenSever_Event_10
   \   00000110   491C               ADDS     R1,R1,#+1
   \   00000112   0170               STRB     R1,[R0, #+0]
   7881                        RepaintTMP=1;
   \                     ??ScreenSever_Event_10:
   \   00000114   0126               MOVS     R6,#+1
   7882                      }
   7883                      LabelButt[0]=31;
   \                     ??ScreenSever_Event_9:
   \   00000116   2770               STRB     R7,[R4, #+0]
   7884                      if (Button(LabelButt,2,8,17,25)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   1920               MOVS     R0,#+25
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   1123               MOVS     R3,#+17
   \   00000120   0822               MOVS     R2,#+8
   \   00000122   0221               MOVS     R1,#+2
   \   00000124   02A8               ADD      R0,SP,#+8
   \   00000126   ........           BL       Button
   \   0000012A   02B0               ADD      SP,SP,#+8
   \   0000012C   0128               CMP      R0,#+1
   \   0000012E   1AD1               BNE      ??ScreenSever_Event_2
   7885                      {
   7886                         if (g_ScreenSever_Time_Off>0) 
   \   00000130   1C48               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000132   0178               LDRB     R1,[R0, #+0]
   \   00000134   0029               CMP      R1,#+0
   \   00000136   01D0               BEQ      ??ScreenSever_Event_11
   7887                         {
   7888                           g_ScreenSever_Time_Off--;
   \   00000138   491E               SUBS     R1,R1,#+1
   \   0000013A   0170               STRB     R1,[R0, #+0]
   7889                         }
   7890                        RepaintTMP=1;
   \                     ??ScreenSever_Event_11:
   \   0000013C   0126               MOVS     R6,#+1
   \   0000013E   12E0               B        ??ScreenSever_Event_2
   7891                      }
   7892                   }else{
   7893                     if (Zone(" ",40,86,15,16,1)==1)  //(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \                     ??ScreenSever_Event_3:
   \   00000140   0121               MOVS     R1,#+1
   \   00000142   1020               MOVS     R0,#+16
   \   00000144   03B4               PUSH     {R0,R1}
   \   00000146   0F23               MOVS     R3,#+15
   \   00000148   5622               MOVS     R2,#+86
   \   0000014A   2821               MOVS     R1,#+40
   \   0000014C   16A0               ADR      R0,??ScreenSever_Event_0+0x34  ;; 0x20, 0x00, 0x00, 0x00
   \   0000014E   ........           BL       Zone
   \   00000152   02B0               ADD      SP,SP,#+8
   \   00000154   0128               CMP      R0,#+1
   \   00000156   06D1               BNE      ??ScreenSever_Event_2
   7894                    {
   7895                      g_ScreenSever_On=1;
   \   00000158   0126               MOVS     R6,#+1
   \   0000015A   2070               STRB     R0,[R4, #+0]
   7896                      g_ScreenSever_Time_On=0;
   \   0000015C   0B48               LDR      R0,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   0000015E   2900               MOVS     R1,R5
   \   00000160   0170               STRB     R1,[R0, #+0]
   7897                      g_ScreenSever_Time_Off=0;
   \   00000162   1048               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000164   0570               STRB     R5,[R0, #+0]
   7898                      RepaintTMP=1;
   7899                    }
   7900                   }
   7901                   
   7902                   
   7903                 }
   7904                 
   7905               
   7906                
   7907                 if (RepaintTMP) MenuPaint();  
   \                     ??ScreenSever_Event_2:
   \   00000166   002E               CMP      R6,#+0
   \   00000168   01D0               BEQ      ??ScreenSever_Event_12
   \   0000016A   ........           BL       MenuPaint
   7908                 
   7909               
   7910              }//________________________________________________________________________
   \                     ??ScreenSever_Event_12:
   \   0000016E   F8BC               POP      {R3-R7}
   \   00000170   01BC               POP      {R0}
   \   00000172   0047               BX       R0               ;; return
   \                     ??ScreenSever_Event_0:
   \   00000174   ........           DC32     Y_down
   \   00000178   ........           DC32     X_down
   \   0000017C   ........           DC32     Y_up
   \   00000180   ........           DC32     X_up
   \   00000184   ........           DC32     g_ScreenSever_On
   \   00000188   EAD71300           DC32     0x13d7ea
   \   0000018C   ........           DC32     g_ScreenSever_Time_On
   \   00000190   EBD71300           DC32     0x13d7eb
   \   00000194   ECD71300           DC32     0x13d7ec
   \   00000198   ........           DC32     g_Stop_Program
   \   0000019C   ........           DC32     TextToChangeLength
   \   000001A0   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   000001A4   ........           DC32     g_ScreenSever_Time_Off
   \   000001A8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   7911              
   7912              
   7913              
   7914          //Ustawienia jêzyka******************************************************************************************************************
   7915          
   7916                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7917                void MasterSlave_Paint(void)
   7918                {  
   \                     MasterSlave_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   7919                    //char Y=3;
   7920                    int Y_tmp = 66;   //przesuniêcie w dó³
   7921          
   7922                    List_Paint("Mode",2,15,Y_tmp,7,0,"Master ", "Slave ",0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   164C               LDR      R4,??MasterSlave_Paint_0  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   2100               MOVS     R1,R4
   \   00000010   1C31               ADDS     R1,R1,#+28
   \   00000012   2000               MOVS     R0,R4
   \   00000014   1430               ADDS     R0,R0,#+20
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0720               MOVS     R0,#+7
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   4223               MOVS     R3,#+66
   \   00000020   0F22               MOVS     R2,#+15
   \   00000022   0221               MOVS     R1,#+2
   \   00000024   2000               MOVS     R0,R4
   \   00000026   0C30               ADDS     R0,R0,#+12
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
   7923                
   7924                    
   7925                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000002E   6846               MOV      R0,SP
   \   00000030   0ECC               LDM      R4!,{R1-R3}
   \   00000032   0EC0               STM      R0!,{R1-R3}
   7926                 
   7927                  
   7928                    CopyToCanvasPoint((char *)ekran_tab,45,97-Y_tmp-(15*(SlaveMode)),8,10); 
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0A20               MOVS     R0,#+10
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   0823               MOVS     R3,#+8
   \   0000003C   1F20               MOVS     R0,#+31
   \   0000003E   0849               LDR      R1,??MasterSlave_Paint_0+0x4  ;; SlaveMode
   \   00000040   0978               LDRB     R1,[R1, #+0]
   \   00000042   0F22               MOVS     R2,#+15
   \   00000044   5143               MULS     R1,R2,R1
   \   00000046   421A               SUBS     R2,R0,R1
   \   00000048   1206               LSLS     R2,R2,#+24
   \   0000004A   120E               LSRS     R2,R2,#+24
   \   0000004C   2D21               MOVS     R1,#+45
   \   0000004E   02A8               ADD      R0,SP,#+8
   \   00000050   ........           BL       CopyToCanvasPoint
   \   00000054   02B0               ADD      SP,SP,#+8
   7929                    
   7930                }//________________________________________________________________________
   \   00000056   1FBC               POP      {R0-R4}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??MasterSlave_Paint_0:
   \   0000005C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`
   \   00000060   ........           DC32     SlaveMode
   7931          
   7932          
   7933          
   7934                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7935                void MasterSlave_Event(void)
   7936                {
   \                     MasterSlave_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   7937                  int ans;
   7938           
   7939                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 7,66); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   5C4C               LDR      R4,??MasterSlave_Event_0  ;; X_up
   \   00000004   5C4D               LDR      R5,??MasterSlave_Event_0+0x4  ;; Y_up
   \   00000006   4221               MOVS     R1,#+66
   \   00000008   0720               MOVS     R0,#+7
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0220               MOVS     R0,#+2
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   5A48               LDR      R0,??MasterSlave_Event_0+0x8  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   5948               LDR      R0,??MasterSlave_Event_0+0xC  ;; X_down
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   295E               LDRSH    R1,[R5, R0]
   \   00000020   205E               LDRSH    R0,[R4, R0]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   7940            
   7941                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   00D1               BNE      .+4
   \   0000002C   8FE0               B        ??MasterSlave_Event_1
   7942                    {
   7943                      if ((ans>0) && (ans<3))
   \   0000002E   0128               CMP      R0,#+1
   \   00000030   00DA               BGE      .+4
   \   00000032   9BE0               B        ??MasterSlave_Event_2
   \   00000034   0328               CMP      R0,#+3
   \   00000036   00DB               BLT      .+4
   \   00000038   98E0               B        ??MasterSlave_Event_2
   7944                      {
   7945                        SlaveMode=ans-1;
   \   0000003A   524C               LDR      R4,??MasterSlave_Event_0+0x10  ;; SlaveMode
   \   0000003C   401E               SUBS     R0,R0,#+1
   \   0000003E   2070               STRB     R0,[R4, #+0]
   7946                        
   7947                        //zapis do flash
   7948                        unsigned int Save = __get_interrupt_state();  
   \   00000040   ........           BL       __iar_get_interrupt_state
   \   00000044   0500               MOVS     R5,R0
   7949                        __disable_interrupt();
   \   00000046   ........           BL       __iar_disable_interrupt
   7950                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)),0, &SlaveMode,1);
   7951                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)), (char*) (&(SlaveMode)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000004A   0122               MOVS     R2,#+1
   \   0000004C   2100               MOVS     R1,R4
   \   0000004E   4E48               LDR      R0,??MasterSlave_Event_0+0x14  ;; 0x13d7e8
   \   00000050   ........           BL       FlashWrite
   7952                        __set_interrupt_state(Save);
   \   00000054   2800               MOVS     R0,R5
   \   00000056   ........           BL       __iar_set_interrupt_state
   7953                        //koniec zapisu do flash
   7954                        
   7955                        if (!SlaveMode) //je¿eli master 
   \   0000005A   2078               LDRB     R0,[R4, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   4B48               LDR      R0,??MasterSlave_Event_0+0x18  ;; RF_Status + 12
   \   00000060   10D1               BNE      ??MasterSlave_Event_3
   7956                        {
   7957                          RF_Status.MasterMode=1;
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   0170               STRB     R1,[R0, #+0]
   7958                          _RF_EnableRX(); 
                                 ^
Warning[Pe223]: function "_RF_EnableRX" declared implicitly
   \   00000066   ........           BL       _RF_EnableRX
   7959                         for (char i=0; i<NumberNeurons; i++) TransQuality.Mensur[i]=0; 
   \   0000006A   0020               MOVS     R0,#+0
   \   0000006C   0100               MOVS     R1,R0
   \   0000006E   484B               LDR      R3,??MasterSlave_Event_0+0x1C  ;; TransQuality
   \                     ??MasterSlave_Event_4:
   \   00000070   0A00               MOVS     R2,R1
   \   00000072   232A               CMP      R2,#+35
   \   00000074   08D2               BCS      ??MasterSlave_Event_5
   \   00000076   9200               LSLS     R2,R2,#+2
   \   00000078   9A18               ADDS     R2,R3,R2
   \   0000007A   D064               STR      R0,[R2, #+76]
   \   0000007C   491C               ADDS     R1,R1,#+1
   \   0000007E   0906               LSLS     R1,R1,#+24
   \   00000080   090E               LSRS     R1,R1,#+24
   \   00000082   F5E7               B        ??MasterSlave_Event_4
   7960                        }else{
   7961                          RF_Status.MasterMode=0; 
   \                     ??MasterSlave_Event_3:
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   0170               STRB     R1,[R0, #+0]
   7962                        }
   7963                           AT91PS_MEM pAT91C_IFLASH_MEM=AT91C_IFLASH_MEM;
   7964                          RF_Status.Ch=pAT91C_IFLASH_MEM->Config.RF_channel;
   \                     ??MasterSlave_Event_5:
   \   00000088   4248               LDR      R0,??MasterSlave_Event_0+0x20  ;; 0x13d7e6
   \   0000008A   0078               LDRB     R0,[R0, #+0]
   \   0000008C   424C               LDR      R4,??MasterSlave_Event_0+0x24  ;; RF_Status
   \   0000008E   6073               STRB     R0,[R4, #+13]
   7965                          SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
                                 ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000090   A026               MOVS     R6,#+160
   \   00000092   3602               LSLS     R6,R6,#+8        ;; #+40960
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   0D00               MOVS     R5,R1
   \   00000098   ........           BL       __aeabi_ui2d
   \   0000009C   0200               MOVS     R2,R0
   \   0000009E   0B00               MOVS     R3,R1
   \   000000A0   3E48               LDR      R0,??MasterSlave_Event_0+0x28  ;; 0x33333333
   \   000000A2   3F49               LDR      R1,??MasterSlave_Event_0+0x2C  ;; 0x3fd33333
   \   000000A4   ........           BL       __aeabi_dmul
   \   000000A8   0200               MOVS     R2,R0
   \   000000AA   0B00               MOVS     R3,R1
   \   000000AC   3D48               LDR      R0,??MasterSlave_Event_0+0x30  ;; 0x5c28f5c3
   \   000000AE   3E49               LDR      R1,??MasterSlave_Event_0+0x34  ;; 0x408ae28f
   \   000000B0   ........           BL       __aeabi_dadd
   \   000000B4   0200               MOVS     R2,R0
   \   000000B6   0B00               MOVS     R3,R1
   \   000000B8   0020               MOVS     R0,#+0
   \   000000BA   3C49               LDR      R1,??MasterSlave_Event_0+0x38  ;; 0x40690000
   \   000000BC   ........           BL       __aeabi_dmul
   \   000000C0   0200               MOVS     R2,R0
   \   000000C2   0B00               MOVS     R3,R1
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   3A49               LDR      R1,??MasterSlave_Event_0+0x3C  ;; 0xc104ff00
   \   000000C8   ........           BL       __aeabi_dadd
   \   000000CC   ........           BL       __aeabi_d2iz
   \   000000D0   0004               LSLS     R0,R0,#+16
   \   000000D2   0014               ASRS     R0,R0,#+16
   \   000000D4   3043               ORRS     R0,R0,R6
   \   000000D6   2900               MOVS     R1,R5
   \   000000D8   ........           BL       SPI_SendWord
   \   000000DC   24E0               B        ??MasterSlave_Event_6
   7966                          while (RF_CheckChannel())
   7967                          {
   7968                            if (RF_Status.Ch<RF_ChannelQuanti-1) {RF_Status.Ch++;} else {RF_Status.Ch=1;}
   \                     ??MasterSlave_Event_7:
   \   000000DE   0120               MOVS     R0,#+1
   \   000000E0   6073               STRB     R0,[R4, #+13]
   7969                            SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
   \                     ??MasterSlave_Event_8:
   \   000000E2   607B               LDRB     R0,[R4, #+13]
   \   000000E4   ........           BL       __aeabi_ui2d
   \   000000E8   0200               MOVS     R2,R0
   \   000000EA   0B00               MOVS     R3,R1
   \   000000EC   2B48               LDR      R0,??MasterSlave_Event_0+0x28  ;; 0x33333333
   \   000000EE   2C49               LDR      R1,??MasterSlave_Event_0+0x2C  ;; 0x3fd33333
   \   000000F0   ........           BL       __aeabi_dmul
   \   000000F4   0200               MOVS     R2,R0
   \   000000F6   0B00               MOVS     R3,R1
   \   000000F8   2A48               LDR      R0,??MasterSlave_Event_0+0x30  ;; 0x5c28f5c3
   \   000000FA   2B49               LDR      R1,??MasterSlave_Event_0+0x34  ;; 0x408ae28f
   \   000000FC   ........           BL       __aeabi_dadd
   \   00000100   0200               MOVS     R2,R0
   \   00000102   0B00               MOVS     R3,R1
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   2949               LDR      R1,??MasterSlave_Event_0+0x38  ;; 0x40690000
   \   00000108   ........           BL       __aeabi_dmul
   \   0000010C   0200               MOVS     R2,R0
   \   0000010E   0B00               MOVS     R3,R1
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   2749               LDR      R1,??MasterSlave_Event_0+0x3C  ;; 0xc104ff00
   \   00000114   ........           BL       __aeabi_dadd
   \   00000118   ........           BL       __aeabi_d2iz
   \   0000011C   0004               LSLS     R0,R0,#+16
   \   0000011E   0014               ASRS     R0,R0,#+16
   \   00000120   3043               ORRS     R0,R0,R6
   \   00000122   2900               MOVS     R1,R5
   \   00000124   ........           BL       SPI_SendWord
   \                     ??MasterSlave_Event_6:
   \   00000128   ........           BL       RF_CheckChannel
   \   0000012C   0028               CMP      R0,#+0
   \   0000012E   05D0               BEQ      ??MasterSlave_Event_9
   \   00000130   607B               LDRB     R0,[R4, #+13]
   \   00000132   2728               CMP      R0,#+39
   \   00000134   D3D2               BCS      ??MasterSlave_Event_7
   \   00000136   401C               ADDS     R0,R0,#+1
   \   00000138   6073               STRB     R0,[R4, #+13]
   \   0000013A   D2E7               B        ??MasterSlave_Event_8
   7970                          } 
   7971                        
   7972                        MenuLevel=(MenuLevel/10);
   \                     ??MasterSlave_Event_9:
   \   0000013C   1D4C               LDR      R4,??MasterSlave_Event_0+0x40  ;; TextToChangeLength
   \   0000013E   206D               LDR      R0,[R4, #+80]
   \   00000140   0A21               MOVS     R1,#+10
   \   00000142   ........           BL       __aeabi_idivmod
   \   00000146   2065               STR      R0,[R4, #+80]
   7973                        MenuPaint();
   \   00000148   ........           BL       MenuPaint
   \   0000014C   0EE0               B        ??MasterSlave_Event_2
   7974                      }
   7975                    } 
   7976                  else
   7977                    {
   7978                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??MasterSlave_Event_1:
   \   0000014E   205E               LDRSH    R0,[R4, R0]
   \   00000150   0128               CMP      R0,#+1
   \   00000152   0BDB               BLT      ??MasterSlave_Event_2
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   285E               LDRSH    R0,[R5, R0]
   \   00000158   0128               CMP      R0,#+1
   \   0000015A   07DB               BLT      ??MasterSlave_Event_2
   7979                      {
   7980                        MenuLevel=(MenuLevel/10);
   \   0000015C   154C               LDR      R4,??MasterSlave_Event_0+0x40  ;; TextToChangeLength
   \   0000015E   206D               LDR      R0,[R4, #+80]
   \   00000160   0A21               MOVS     R1,#+10
   \   00000162   ........           BL       __aeabi_idivmod
   \   00000166   2065               STR      R0,[R4, #+80]
   7981                        MenuPaint();
   \   00000168   ........           BL       MenuPaint
   7982                      }
   7983                    }
   7984                }//_______________________________________________________________________
   \                     ??MasterSlave_Event_2:
   \   0000016C   70BC               POP      {R4-R6}
   \   0000016E   01BC               POP      {R0}
   \   00000170   0047               BX       R0               ;; return
   \   00000172   C046               Nop      
   \                     ??MasterSlave_Event_0:
   \   00000174   ........           DC32     X_up
   \   00000178   ........           DC32     Y_up
   \   0000017C   ........           DC32     Y_down
   \   00000180   ........           DC32     X_down
   \   00000184   ........           DC32     SlaveMode
   \   00000188   E8D71300           DC32     0x13d7e8
   \   0000018C   ........           DC32     RF_Status + 12
   \   00000190   ........           DC32     TransQuality
   \   00000194   E6D71300           DC32     0x13d7e6
   \   00000198   ........           DC32     RF_Status
   \   0000019C   33333333           DC32     0x33333333
   \   000001A0   3333D33F           DC32     0x3fd33333
   \   000001A4   C3F5285C           DC32     0x5c28f5c3
   \   000001A8   8FE28A40           DC32     0x408ae28f
   \   000001AC   00006940           DC32     0x40690000
   \   000001B0   00FF04C1           DC32     0xc104ff00
   \   000001B4   ........           DC32     TextToChangeLength

   \                                 In section .bss, align 1
   \                     RF_Channel_nr_tmp:
   \   00000000                      DS8 1
   7985          
   7986              
   7987              
   7988              
   7989           
   7990          //Ustawienia kana³u transmisji WiFi  **************************************************************************************************************
   7991          
   7992              //*----------------------------------------------------------------------------
   7993              char RF_ChOkBlock=0;
   \                     RF_ChOkBlock:
   \   00000001                      DS8 1

   \                                 In section .bss, align 4
   \                     InsertOldPass1:
   \   00000000                      DS8 12
   \                     InsertNewPass1:
   \   0000000C                      DS8 12

   \                                 In section Debug.txt, align 4, keep-with-next
   7994              void RF_Channel_Paint(void)
   7995              {  
   \                     RF_Channel_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   7996                 List_Paint(Speech[g_leng].RfChannel,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   5D4C               LDR      R4,??RF_Channel_Paint_0  ;; 0xa7d
   \   00000004   5D4D               LDR      R5,??RF_Channel_Paint_0+0x4  ;; g_leng
   \   00000006   5E4E               LDR      R6,??RF_Channel_Paint_0+0x8  ;; Speech
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   5CA0               ADR      R0,??RF_Channel_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0121               MOVS     R1,#+1
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   6C22               MOVS     R2,#+108
   \   00000020   5948               LDR      R0,??RF_Channel_Paint_0+0x10  ;; 0x645
   \   00000022   2F68               LDR      R7,[R5, #+0]
   \   00000024   6743               MULS     R7,R4,R7
   \   00000026   F719               ADDS     R7,R6,R7
   \   00000028   3818               ADDS     R0,R7,R0
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   7997                if (!SlaveMode)  //je¿eli tryb master
   \   00000030   5648               LDR      R0,??RF_Channel_Paint_0+0x14  ;; SlaveMode
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   0028               CMP      R0,#+0
   \   00000036   73D1               BNE      ??RF_Channel_Paint_1
   7998                {
   7999                 _RF_EnableRX();
                        ^
Warning[Pe223]: function "_RF_EnableRX" declared implicitly
   \   00000038   ........           BL       _RF_EnableRX
   8000                 g_Stop_Program=1;
   \   0000003C   5448               LDR      R0,??RF_Channel_Paint_0+0x18  ;; g_Stop_Program
   \   0000003E   0121               MOVS     R1,#+1
   \   00000040   0170               STRB     R1,[R0, #+0]
   8001                 
   8002                 //Speech[g_leng].RfChannel
   8003                 Label(Speech[g_leng].RfChannel,0,3,90,10,33,1,127,0);
   \   00000042   82B0               SUB      SP,SP,#+8
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   7F21               MOVS     R1,#+127
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   2121               MOVS     R1,#+33
   \   00000050   0A20               MOVS     R0,#+10
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   5A23               MOVS     R3,#+90
   \   00000056   0322               MOVS     R2,#+3
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   4B48               LDR      R0,??RF_Channel_Paint_0+0x10  ;; 0x645
   \   0000005C   2F68               LDR      R7,[R5, #+0]
   \   0000005E   6743               MULS     R7,R4,R7
   \   00000060   F719               ADDS     R7,R6,R7
   \   00000062   3818               ADDS     R0,R7,R0
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
   \   0000006A   0222               MOVS     R2,#+2
   \   0000006C   01A9               ADD      R1,SP,#+4
   \   0000006E   4948               LDR      R0,??RF_Channel_Paint_0+0x1C  ;; RF_Channel_nr_tmp
   \   00000070   0078               LDRB     R0,[R0, #+0]
   8004            
   8005                 char tmp_char[3];
   8006                 CharToStr(RF_Channel_nr_tmp, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000072   ........           BL       CharToStr
   8007                 
   8008                 Label(tmp_char,1,30,77,2,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   7F21               MOVS     R1,#+127
   \   0000007E   0120               MOVS     R0,#+1
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   2121               MOVS     R1,#+33
   \   00000084   0220               MOVS     R0,#+2
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   4D23               MOVS     R3,#+77
   \   0000008A   1E22               MOVS     R2,#+30
   \   0000008C   0121               MOVS     R1,#+1
   \   0000008E   07A8               ADD      R0,SP,#+28
   \   00000090   ........           BL       Label
   \   00000094   06B0               ADD      SP,SP,#+24
   8009                    
   8010                 
   8011                 char LabelButt[2];
   8012                 LabelButt[1]=0;
   \   00000096   6F46               MOV      R7,SP
   \   00000098   0020               MOVS     R0,#+0
   \   0000009A   7870               STRB     R0,[R7, #+1]
   8013                 LabelButt[0]=30;
   \   0000009C   1E20               MOVS     R0,#+30
   \   0000009E   3870               STRB     R0,[R7, #+0]
   8014                 Button(LabelButt,33,48,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000A0   82B0               SUB      SP,SP,#+8
   \   000000A2   1920               MOVS     R0,#+25
   \   000000A4   0090               STR      R0,[SP, #+0]
   \   000000A6   1323               MOVS     R3,#+19
   \   000000A8   3022               MOVS     R2,#+48
   \   000000AA   2121               MOVS     R1,#+33
   \   000000AC   02A8               ADD      R0,SP,#+8
   \   000000AE   ........           BL       Button
   \   000000B2   02B0               ADD      SP,SP,#+8
   8015                 LabelButt[0]=31;
   \   000000B4   1F20               MOVS     R0,#+31
   \   000000B6   3870               STRB     R0,[R7, #+0]
   8016                 Button(LabelButt,12,48,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   1920               MOVS     R0,#+25
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   1323               MOVS     R3,#+19
   \   000000C0   3022               MOVS     R2,#+48
   \   000000C2   0C21               MOVS     R1,#+12
   \   000000C4   02A8               ADD      R0,SP,#+8
   \   000000C6   ........           BL       Button
   \   000000CA   02B0               ADD      SP,SP,#+8
   8017                 
   8018                 if ((RF_ChOkBlock) && (RF_Status.Ch!=RF_Channel_nr_tmp))
   \   000000CC   3248               LDR      R0,??RF_Channel_Paint_0+0x20  ;; RF_Channel_nr_tmp + 1
   \   000000CE   0078               LDRB     R0,[R0, #+0]
   \   000000D0   0028               CMP      R0,#+0
   \   000000D2   1AD0               BEQ      ??RF_Channel_Paint_2
   \   000000D4   3148               LDR      R0,??RF_Channel_Paint_0+0x24  ;; RF_Status + 13
   \   000000D6   0078               LDRB     R0,[R0, #+0]
   \   000000D8   2E49               LDR      R1,??RF_Channel_Paint_0+0x1C  ;; RF_Channel_nr_tmp
   \   000000DA   0978               LDRB     R1,[R1, #+0]
   \   000000DC   8842               CMP      R0,R1
   \   000000DE   14D0               BEQ      ??RF_Channel_Paint_2
   8019                 {
   8020                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   000000E0   82B0               SUB      SP,SP,#+8
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   0090               STR      R0,[SP, #+0]
   \   000000E6   7F21               MOVS     R1,#+127
   \   000000E8   0120               MOVS     R0,#+1
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   2121               MOVS     R1,#+33
   \   000000EE   0E20               MOVS     R0,#+14
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   1E23               MOVS     R3,#+30
   \   000000F4   0622               MOVS     R2,#+6
   \   000000F6   0021               MOVS     R1,#+0
   \   000000F8   2948               LDR      R0,??RF_Channel_Paint_0+0x28  ;; 0x654
   \   000000FA   2D68               LDR      R5,[R5, #+0]
   \   000000FC   6543               MULS     R5,R4,R5
   \   000000FE   7419               ADDS     R4,R6,R5
   \   00000100   2018               ADDS     R0,R4,R0
   \   00000102   ........           BL       Label
   \   00000106   06B0               ADD      SP,SP,#+24
   \   00000108   32E0               B        ??RF_Channel_Paint_3
   8021                 }else{
   8022                   Button("OK",12,12,40,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \                     ??RF_Channel_Paint_2:
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   1920               MOVS     R0,#+25
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   2823               MOVS     R3,#+40
   \   00000112   0C22               MOVS     R2,#+12
   \   00000114   1100               MOVS     R1,R2
   \   00000116   23A0               ADR      R0,??RF_Channel_Paint_0+0x2C  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   27E0               B        ??RF_Channel_Paint_3
   8023                 }
   8024                }else{ //je¿eli tryb slave
   8025                   Label(Speech[g_leng].Niedostepne,2,2,70,14,59,1,127,0);
   \                     ??RF_Channel_Paint_1:
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0020               MOVS     R0,#+0
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   7F21               MOVS     R1,#+127
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   03B4               PUSH     {R0,R1}
   \   0000012C   3B21               MOVS     R1,#+59
   \   0000012E   0E20               MOVS     R0,#+14
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   4623               MOVS     R3,#+70
   \   00000134   0222               MOVS     R2,#+2
   \   00000136   1100               MOVS     R1,R2
   \   00000138   1B48               LDR      R0,??RF_Channel_Paint_0+0x30  ;; 0x6ae
   \   0000013A   2F68               LDR      R7,[R5, #+0]
   \   0000013C   6743               MULS     R7,R4,R7
   \   0000013E   F719               ADDS     R7,R6,R7
   \   00000140   3818               ADDS     R0,R7,R0
   \   00000142   ........           BL       Label
   \   00000146   06B0               ADD      SP,SP,#+24
   8026                   Label(Speech[g_leng].W_Trybie_Slave,2,2,60,14,56,1,127,0);
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   0020               MOVS     R0,#+0
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   7F21               MOVS     R1,#+127
   \   00000150   0120               MOVS     R0,#+1
   \   00000152   03B4               PUSH     {R0,R1}
   \   00000154   3821               MOVS     R1,#+56
   \   00000156   0E20               MOVS     R0,#+14
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   3C23               MOVS     R3,#+60
   \   0000015C   0222               MOVS     R2,#+2
   \   0000015E   1100               MOVS     R1,R2
   \   00000160   1248               LDR      R0,??RF_Channel_Paint_0+0x34  ;; 0x6bd
   \   00000162   2D68               LDR      R5,[R5, #+0]
   \   00000164   6543               MULS     R5,R4,R5
   \   00000166   7419               ADDS     R4,R6,R5
   \   00000168   2018               ADDS     R0,R4,R0
   \   0000016A   ........           BL       Label
   \   0000016E   06B0               ADD      SP,SP,#+24
   8027                }
   8028                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   8029              }//________________________________________________________________________
   \                     ??RF_Channel_Paint_3:
   \   00000170   FEBC               POP      {R1-R7}
   \   00000172   01BC               POP      {R0}
   \   00000174   0047               BX       R0               ;; return
   \   00000176   C046               Nop      
   \                     ??RF_Channel_Paint_0:
   \   00000178   7D0A0000           DC32     0xa7d
   \   0000017C   ........           DC32     g_leng
   \   00000180   ........           DC32     Speech
   \   00000184   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000188   45060000           DC32     0x645
   \   0000018C   ........           DC32     SlaveMode
   \   00000190   ........           DC32     g_Stop_Program
   \   00000194   ........           DC32     RF_Channel_nr_tmp
   \   00000198   ........           DC32     RF_Channel_nr_tmp + 1
   \   0000019C   ........           DC32     RF_Status + 13
   \   000001A0   54060000           DC32     0x654
   \   000001A4   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   000001A8   AE060000           DC32     0x6ae
   \   000001AC   BD060000           DC32     0x6bd
   8030          
   8031          

   \                                 In section Debug.txt, align 4, keep-with-next
   8032              void RF_Channel_Refresh(void)
   8033              {  
   \                     RF_Channel_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   8034                if (SlaveMode)  //je¿eli tryb master
   \   00000002   4748               LDR      R0,??RF_Channel_Refresh_0  ;; SlaveMode
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   00D1               BNE      .+4
   \   0000000A   86E0               B        ??RF_Channel_Refresh_1
   8035                {
   8036                
   8037                 List_Paint(Speech[g_leng].RfChannel,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000C   454C               LDR      R4,??RF_Channel_Refresh_0+0x4  ;; 0xa7d
   \   0000000E   464D               LDR      R5,??RF_Channel_Refresh_0+0x8  ;; g_leng
   \   00000010   464E               LDR      R6,??RF_Channel_Refresh_0+0xC  ;; Speech
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   0800               MOVS     R0,R1
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   44A0               ADR      R0,??RF_Channel_Refresh_0+0x10  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0121               MOVS     R1,#+1
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0300               MOVS     R3,R0
   \   00000028   6C22               MOVS     R2,#+108
   \   0000002A   4248               LDR      R0,??RF_Channel_Refresh_0+0x14  ;; 0x645
   \   0000002C   2F68               LDR      R7,[R5, #+0]
   \   0000002E   6743               MULS     R7,R4,R7
   \   00000030   F719               ADDS     R7,R6,R7
   \   00000032   3818               ADDS     R0,R7,R0
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   8038                 
   8039                 g_Stop_Program=1;
   \   0000003A   3F48               LDR      R0,??RF_Channel_Refresh_0+0x18  ;; g_Stop_Program
   \   0000003C   0121               MOVS     R1,#+1
   \   0000003E   0170               STRB     R1,[R0, #+0]
   8040                 
   8041                 //Speech[g_leng].RfChannel
   8042                 Label(Speech[g_leng].RfChannel,0,3,90,10,33,1,127,0);
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   7F21               MOVS     R1,#+127
   \   00000048   0120               MOVS     R0,#+1
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   2121               MOVS     R1,#+33
   \   0000004E   0A20               MOVS     R0,#+10
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   5A23               MOVS     R3,#+90
   \   00000054   0322               MOVS     R2,#+3
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   3648               LDR      R0,??RF_Channel_Refresh_0+0x14  ;; 0x645
   \   0000005A   2F68               LDR      R7,[R5, #+0]
   \   0000005C   6743               MULS     R7,R4,R7
   \   0000005E   F719               ADDS     R7,R6,R7
   \   00000060   3818               ADDS     R0,R7,R0
   \   00000062   ........           BL       Label
   \   00000066   06B0               ADD      SP,SP,#+24
   \   00000068   0222               MOVS     R2,#+2
   \   0000006A   01A9               ADD      R1,SP,#+4
   \   0000006C   3348               LDR      R0,??RF_Channel_Refresh_0+0x1C  ;; RF_Channel_nr_tmp
   \   0000006E   0078               LDRB     R0,[R0, #+0]
   8043            
   8044                 char tmp_char[3];
   8045                 CharToStr(RF_Channel_nr_tmp, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000070   ........           BL       CharToStr
   8046                 
   8047                 Label(tmp_char,1,30,77,2,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   7F21               MOVS     R1,#+127
   \   0000007C   0120               MOVS     R0,#+1
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   2121               MOVS     R1,#+33
   \   00000082   0220               MOVS     R0,#+2
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   4D23               MOVS     R3,#+77
   \   00000088   1E22               MOVS     R2,#+30
   \   0000008A   0121               MOVS     R1,#+1
   \   0000008C   07A8               ADD      R0,SP,#+28
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
   8048                    
   8049                 
   8050                 char LabelButt[2];
   8051                 LabelButt[1]=0;
   \   00000094   6F46               MOV      R7,SP
   \   00000096   0020               MOVS     R0,#+0
   \   00000098   7870               STRB     R0,[R7, #+1]
   8052                 LabelButt[0]=30;
   \   0000009A   1E20               MOVS     R0,#+30
   \   0000009C   3870               STRB     R0,[R7, #+0]
   8053                 Button(LabelButt,33,48,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   1920               MOVS     R0,#+25
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   1323               MOVS     R3,#+19
   \   000000A6   3022               MOVS     R2,#+48
   \   000000A8   2121               MOVS     R1,#+33
   \   000000AA   02A8               ADD      R0,SP,#+8
   \   000000AC   ........           BL       Button
   \   000000B0   02B0               ADD      SP,SP,#+8
   8054                 LabelButt[0]=31;
   \   000000B2   1F20               MOVS     R0,#+31
   \   000000B4   3870               STRB     R0,[R7, #+0]
   8055                 Button(LabelButt,12,48,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000B6   82B0               SUB      SP,SP,#+8
   \   000000B8   1920               MOVS     R0,#+25
   \   000000BA   0090               STR      R0,[SP, #+0]
   \   000000BC   1323               MOVS     R3,#+19
   \   000000BE   3022               MOVS     R2,#+48
   \   000000C0   0C21               MOVS     R1,#+12
   \   000000C2   02A8               ADD      R0,SP,#+8
   \   000000C4   ........           BL       Button
   \   000000C8   02B0               ADD      SP,SP,#+8
   8056                 
   8057                 if ((RF_Status.ConfResive) && (RF_Status.Ch!=RF_Channel_nr_tmp))
   \   000000CA   1D48               LDR      R0,??RF_Channel_Refresh_0+0x20  ;; RF_Status
   \   000000CC   C17A               LDRB     R1,[R0, #+11]
   \   000000CE   0029               CMP      R1,#+0
   \   000000D0   19D0               BEQ      ??RF_Channel_Refresh_2
   \   000000D2   407B               LDRB     R0,[R0, #+13]
   \   000000D4   1949               LDR      R1,??RF_Channel_Refresh_0+0x1C  ;; RF_Channel_nr_tmp
   \   000000D6   0978               LDRB     R1,[R1, #+0]
   \   000000D8   8842               CMP      R0,R1
   \   000000DA   14D0               BEQ      ??RF_Channel_Refresh_2
   8058                 {
   8059                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0020               MOVS     R0,#+0
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   7F21               MOVS     R1,#+127
   \   000000E4   0120               MOVS     R0,#+1
   \   000000E6   03B4               PUSH     {R0,R1}
   \   000000E8   2121               MOVS     R1,#+33
   \   000000EA   0E20               MOVS     R0,#+14
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   1E23               MOVS     R3,#+30
   \   000000F0   0622               MOVS     R2,#+6
   \   000000F2   0021               MOVS     R1,#+0
   \   000000F4   1348               LDR      R0,??RF_Channel_Refresh_0+0x24  ;; 0x654
   \   000000F6   2D68               LDR      R5,[R5, #+0]
   \   000000F8   6543               MULS     R5,R4,R5
   \   000000FA   7419               ADDS     R4,R6,R5
   \   000000FC   2018               ADDS     R0,R4,R0
   \   000000FE   ........           BL       Label
   \   00000102   06B0               ADD      SP,SP,#+24
   \   00000104   09E0               B        ??RF_Channel_Refresh_1
   8060                 }else{
   8061                   Button("OK",12,12,40,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \                     ??RF_Channel_Refresh_2:
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   1920               MOVS     R0,#+25
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   2823               MOVS     R3,#+40
   \   0000010E   0C22               MOVS     R2,#+12
   \   00000110   1100               MOVS     R1,R2
   \   00000112   0DA0               ADR      R0,??RF_Channel_Refresh_0+0x28  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000114   ........           BL       Button
   \   00000118   02B0               ADD      SP,SP,#+8
   8062                 }
   8063          
   8064                } 
   8065              }//________________________________________________________________________
   \                     ??RF_Channel_Refresh_1:
   \   0000011A   FEBC               POP      {R1-R7}
   \   0000011C   01BC               POP      {R0}
   \   0000011E   0047               BX       R0               ;; return
   \                     ??RF_Channel_Refresh_0:
   \   00000120   ........           DC32     SlaveMode
   \   00000124   7D0A0000           DC32     0xa7d
   \   00000128   ........           DC32     g_leng
   \   0000012C   ........           DC32     Speech
   \   00000130   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000134   45060000           DC32     0x645
   \   00000138   ........           DC32     g_Stop_Program
   \   0000013C   ........           DC32     RF_Channel_nr_tmp
   \   00000140   ........           DC32     RF_Status
   \   00000144   54060000           DC32     0x654
   \   00000148   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   8066              
   8067              
   8068              
   8069              //*-----------------------------------------------------------------------------
   8070          

   \                                 In section Debug.txt, align 4, keep-with-next
   8071              void RF_Channel_Event(void)
   8072              {
   \                     RF_Channel_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8073                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   8074                if (ans<0)  
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0120               MOVS     R0,#+1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   7348               LDR      R0,??RF_Channel_Event_0  ;; Y_down
   \   0000000E   435E               LDRSH    R3,[R0, R1]
   \   00000010   7348               LDR      R0,??RF_Channel_Event_0+0x4  ;; X_down
   \   00000012   425E               LDRSH    R2,[R0, R1]
   \   00000014   7348               LDR      R0,??RF_Channel_Event_0+0x8  ;; Y_up
   \   00000016   415E               LDRSH    R1,[R0, R1]
   \   00000018   7348               LDR      R0,??RF_Channel_Event_0+0xC  ;; X_up
   \   0000001A   0024               MOVS     R4,#+0
   \   0000001C   005F               LDRSH    R0,[R0, R4]
   \   0000001E   ........           BL       List_Event
   \   00000022   04B0               ADD      SP,SP,#+16
   \   00000024   0028               CMP      R0,#+0
   \   00000026   0BD5               BPL      ??RF_Channel_Event_1
   8075                 {
   8076                    g_Stop_Program=0;
   \   00000028   7048               LDR      R0,??RF_Channel_Event_0+0x10  ;; g_Stop_Program
   \   0000002A   2100               MOVS     R1,R4
   \   0000002C   0170               STRB     R1,[R0, #+0]
   8077                    MenuLevel=(MenuLevel/10);
   \   0000002E   704C               LDR      R4,??RF_Channel_Event_0+0x14  ;; TextToChangeLength
   \   00000030   206D               LDR      R0,[R4, #+80]
   \   00000032   0A21               MOVS     R1,#+10
   \   00000034   ........           BL       __aeabi_idivmod
   \   00000038   2065               STR      R0,[R4, #+80]
   8078                    MenuPaint();
   \   0000003A   ........           BL       MenuPaint
   \   0000003E   CAE0               B        ??RF_Channel_Event_2
   8079                 }else{
   8080                
   8081          
   8082                 char LabelButt[2];
   8083                 LabelButt[1]=0;
   \                     ??RF_Channel_Event_1:
   \   00000040   6D46               MOV      R5,SP
   \   00000042   2600               MOVS     R6,R4
   \   00000044   3000               MOVS     R0,R6
   \   00000046   6870               STRB     R0,[R5, #+1]
   8084                 LabelButt[0]=30;
   \   00000048   1E20               MOVS     R0,#+30
   \   0000004A   2870               STRB     R0,[R5, #+0]
   8085          
   8086                 if (Button(LabelButt,33,48,19,25)==1) 
   \   0000004C   694C               LDR      R4,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   1920               MOVS     R0,#+25
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   1323               MOVS     R3,#+19
   \   00000056   3022               MOVS     R2,#+48
   \   00000058   2121               MOVS     R1,#+33
   \   0000005A   02A8               ADD      R0,SP,#+8
   \   0000005C   ........           BL       Button
   \   00000060   02B0               ADD      SP,SP,#+8
   \   00000062   0128               CMP      R0,#+1
   \   00000064   34D1               BNE      ??RF_Channel_Event_3
   8087                 {
   8088                    if (RF_Channel_nr_tmp<RF_ChannelQuanti-1) {RF_Channel_nr_tmp++;} else {RF_Channel_nr_tmp=1;}
   \   00000066   2078               LDRB     R0,[R4, #+0]
   \   00000068   2728               CMP      R0,#+39
   \   0000006A   02D2               BCS      ??RF_Channel_Event_4
   \   0000006C   401C               ADDS     R0,R0,#+1
   \   0000006E   2070               STRB     R0,[R4, #+0]
   \   00000070   01E0               B        ??RF_Channel_Event_5
   \                     ??RF_Channel_Event_4:
   \   00000072   0120               MOVS     R0,#+1
   \   00000074   2070               STRB     R0,[R4, #+0]
   8089                    SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Channel_nr_tmp),Cs_RF);
                           ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??RF_Channel_Event_5:
   \   00000076   0221               MOVS     R1,#+2
   \   00000078   0F00               MOVS     R7,R1
   \   0000007A   2078               LDRB     R0,[R4, #+0]
   \   0000007C   ........           BL       __aeabi_ui2d
   \   00000080   0200               MOVS     R2,R0
   \   00000082   0B00               MOVS     R3,R1
   \   00000084   5C48               LDR      R0,??RF_Channel_Event_0+0x1C  ;; 0x33333333
   \   00000086   5D49               LDR      R1,??RF_Channel_Event_0+0x20  ;; 0x3fd33333
   \   00000088   ........           BL       __aeabi_dmul
   \   0000008C   0200               MOVS     R2,R0
   \   0000008E   0B00               MOVS     R3,R1
   \   00000090   5B48               LDR      R0,??RF_Channel_Event_0+0x24  ;; 0x5c28f5c3
   \   00000092   5C49               LDR      R1,??RF_Channel_Event_0+0x28  ;; 0x408ae28f
   \   00000094   ........           BL       __aeabi_dadd
   \   00000098   0200               MOVS     R2,R0
   \   0000009A   0B00               MOVS     R3,R1
   \   0000009C   3000               MOVS     R0,R6
   \   0000009E   5A49               LDR      R1,??RF_Channel_Event_0+0x2C  ;; 0x40690000
   \   000000A0   ........           BL       __aeabi_dmul
   \   000000A4   0200               MOVS     R2,R0
   \   000000A6   0B00               MOVS     R3,R1
   \   000000A8   3000               MOVS     R0,R6
   \   000000AA   5849               LDR      R1,??RF_Channel_Event_0+0x30  ;; 0xc104ff00
   \   000000AC   ........           BL       __aeabi_dadd
   \   000000B0   ........           BL       __aeabi_d2iz
   \   000000B4   0004               LSLS     R0,R0,#+16
   \   000000B6   0014               ASRS     R0,R0,#+16
   \   000000B8   A021               MOVS     R1,#+160
   \   000000BA   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   000000BC   0143               ORRS     R1,R1,R0
   \   000000BE   0800               MOVS     R0,R1
   \   000000C0   3900               MOVS     R1,R7
   \   000000C2   ........           BL       SPI_SendWord
   8090          
   8091                    RF_ChOkBlock=RF_CheckChannel();
   \   000000C6   ........           BL       RF_CheckChannel
   \   000000CA   6070               STRB     R0,[R4, #+1]
   8092                    MenuPaint(); 
   \   000000CC   ........           BL       MenuPaint
   8093                 }
   8094                 LabelButt[0]=31;
   \                     ??RF_Channel_Event_3:
   \   000000D0   1F20               MOVS     R0,#+31
   \   000000D2   2870               STRB     R0,[R5, #+0]
   8095          
   8096                 if (Button(LabelButt,12,48,19,25)==1)
   \   000000D4   82B0               SUB      SP,SP,#+8
   \   000000D6   1920               MOVS     R0,#+25
   \   000000D8   0090               STR      R0,[SP, #+0]
   \   000000DA   1323               MOVS     R3,#+19
   \   000000DC   3022               MOVS     R2,#+48
   \   000000DE   0C21               MOVS     R1,#+12
   \   000000E0   02A8               ADD      R0,SP,#+8
   \   000000E2   ........           BL       Button
   \   000000E6   02B0               ADD      SP,SP,#+8
   \   000000E8   0128               CMP      R0,#+1
   \   000000EA   34D1               BNE      ??RF_Channel_Event_6
   8097                 {
   8098                    if (RF_Channel_nr_tmp>1) {RF_Channel_nr_tmp--;} else {RF_Channel_nr_tmp=RF_ChannelQuanti-1;}
   \   000000EC   2078               LDRB     R0,[R4, #+0]
   \   000000EE   0228               CMP      R0,#+2
   \   000000F0   02D3               BCC      ??RF_Channel_Event_7
   \   000000F2   401E               SUBS     R0,R0,#+1
   \   000000F4   2070               STRB     R0,[R4, #+0]
   \   000000F6   01E0               B        ??RF_Channel_Event_8
   \                     ??RF_Channel_Event_7:
   \   000000F8   2720               MOVS     R0,#+39
   \   000000FA   2070               STRB     R0,[R4, #+0]
   8099          
   8100                    SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Channel_nr_tmp),Cs_RF);
                           ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??RF_Channel_Event_8:
   \   000000FC   0221               MOVS     R1,#+2
   \   000000FE   0D00               MOVS     R5,R1
   \   00000100   2078               LDRB     R0,[R4, #+0]
   \   00000102   ........           BL       __aeabi_ui2d
   \   00000106   0200               MOVS     R2,R0
   \   00000108   0B00               MOVS     R3,R1
   \   0000010A   3B48               LDR      R0,??RF_Channel_Event_0+0x1C  ;; 0x33333333
   \   0000010C   3B49               LDR      R1,??RF_Channel_Event_0+0x20  ;; 0x3fd33333
   \   0000010E   ........           BL       __aeabi_dmul
   \   00000112   0200               MOVS     R2,R0
   \   00000114   0B00               MOVS     R3,R1
   \   00000116   3A48               LDR      R0,??RF_Channel_Event_0+0x24  ;; 0x5c28f5c3
   \   00000118   3A49               LDR      R1,??RF_Channel_Event_0+0x28  ;; 0x408ae28f
   \   0000011A   ........           BL       __aeabi_dadd
   \   0000011E   0200               MOVS     R2,R0
   \   00000120   0B00               MOVS     R3,R1
   \   00000122   3000               MOVS     R0,R6
   \   00000124   3849               LDR      R1,??RF_Channel_Event_0+0x2C  ;; 0x40690000
   \   00000126   ........           BL       __aeabi_dmul
   \   0000012A   0200               MOVS     R2,R0
   \   0000012C   0B00               MOVS     R3,R1
   \   0000012E   3000               MOVS     R0,R6
   \   00000130   3649               LDR      R1,??RF_Channel_Event_0+0x30  ;; 0xc104ff00
   \   00000132   ........           BL       __aeabi_dadd
   \   00000136   ........           BL       __aeabi_d2iz
   \   0000013A   0004               LSLS     R0,R0,#+16
   \   0000013C   0014               ASRS     R0,R0,#+16
   \   0000013E   A021               MOVS     R1,#+160
   \   00000140   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   00000142   0143               ORRS     R1,R1,R0
   \   00000144   0800               MOVS     R0,R1
   \   00000146   2900               MOVS     R1,R5
   \   00000148   ........           BL       SPI_SendWord
   8101                    
   8102           
   8103                  
   8104          
   8105          
   8106                 
   8107          
   8108                    RF_ChOkBlock=RF_CheckChannel();
   \   0000014C   ........           BL       RF_CheckChannel
   \   00000150   6070               STRB     R0,[R4, #+1]
   8109                    MenuPaint(); 
   \   00000152   ........           BL       MenuPaint
   8110                 }       
   8111                 
   8112                 
   8113                 if (RF_ChOkBlock)
   \                     ??RF_Channel_Event_6:
   \   00000156   6078               LDRB     R0,[R4, #+1]
   \   00000158   0028               CMP      R0,#+0
   \   0000015A   82B0               SUB      SP,SP,#+8
   \   0000015C   16D0               BEQ      ??RF_Channel_Event_9
   8114                 {
   8115                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   0000015E   3000               MOVS     R0,R6
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   7F21               MOVS     R1,#+127
   \   00000164   0120               MOVS     R0,#+1
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   2121               MOVS     R1,#+33
   \   0000016A   0E20               MOVS     R0,#+14
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   1E23               MOVS     R3,#+30
   \   00000170   0622               MOVS     R2,#+6
   \   00000172   3100               MOVS     R1,R6
   \   00000174   2648               LDR      R0,??RF_Channel_Event_0+0x34  ;; 0x654
   \   00000176   274C               LDR      R4,??RF_Channel_Event_0+0x38  ;; g_leng
   \   00000178   2468               LDR      R4,[R4, #+0]
   \   0000017A   274D               LDR      R5,??RF_Channel_Event_0+0x3C  ;; 0xa7d
   \   0000017C   6C43               MULS     R4,R5,R4
   \   0000017E   274D               LDR      R5,??RF_Channel_Event_0+0x40  ;; Speech
   \   00000180   2C19               ADDS     R4,R5,R4
   \   00000182   2018               ADDS     R0,R4,R0
   \   00000184   ........           BL       Label
   \   00000188   06B0               ADD      SP,SP,#+24
   \   0000018A   24E0               B        ??RF_Channel_Event_2
   8116                 }else{
   8117                  if (Button("OK",12,12,40,25)==1)
   \                     ??RF_Channel_Event_9:
   \   0000018C   1920               MOVS     R0,#+25
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   2823               MOVS     R3,#+40
   \   00000192   0C22               MOVS     R2,#+12
   \   00000194   1100               MOVS     R1,R2
   \   00000196   22A0               ADR      R0,??RF_Channel_Event_0+0x44  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000198   ........           BL       Button
   \   0000019C   02B0               ADD      SP,SP,#+8
   \   0000019E   0128               CMP      R0,#+1
   \   000001A0   19D1               BNE      ??RF_Channel_Event_2
   8118                  {
   8119                   g_Stop_Program=0;
   \   000001A2   1248               LDR      R0,??RF_Channel_Event_0+0x10  ;; g_Stop_Program
   \   000001A4   0670               STRB     R6,[R0, #+0]
   8120                   RF_Status.Ch=RF_Channel_nr_tmp;
   \   000001A6   1F48               LDR      R0,??RF_Channel_Event_0+0x48  ;; RF_Status + 13
   \   000001A8   2178               LDRB     R1,[R4, #+0]
   \   000001AA   0170               STRB     R1,[R0, #+0]
   8121                   
   8122          
   8123                        //zapis do flash
   8124                        unsigned int Save = __get_interrupt_state();  
   \   000001AC   ........           BL       __iar_get_interrupt_state
   \   000001B0   0500               MOVS     R5,R0
   8125                        __disable_interrupt();
   \   000001B2   ........           BL       __iar_disable_interrupt
   8126                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.RF_channel)),0, &RF_Channel_nr_tmp,1);
   8127                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.RF_channel)), (char*) (&(RF_Channel_nr_tmp)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000001B6   0122               MOVS     R2,#+1
   \   000001B8   2100               MOVS     R1,R4
   \   000001BA   1B48               LDR      R0,??RF_Channel_Event_0+0x4C  ;; 0x13d7e6
   \   000001BC   ........           BL       FlashWrite
   8128                        __set_interrupt_state(Save);
   \   000001C0   2800               MOVS     R0,R5
   \   000001C2   ........           BL       __iar_set_interrupt_state
   8129                        //koniec zapisu do flash
   8130                   
   8131                   
   8132                   MenuLevel=(MenuLevel/10);
   \   000001C6   0A4C               LDR      R4,??RF_Channel_Event_0+0x14  ;; TextToChangeLength
   \   000001C8   206D               LDR      R0,[R4, #+80]
   \   000001CA   0A21               MOVS     R1,#+10
   \   000001CC   ........           BL       __aeabi_idivmod
   \   000001D0   2065               STR      R0,[R4, #+80]
   8133                   MenuPaint();
   \   000001D2   ........           BL       MenuPaint
   8134                   
   8135                  }
   8136                 }
   8137                 
   8138                 
   8139                
   8140                 
   8141                 
   8142                 }
   8143              }//________________________________________________________________________
   \                     ??RF_Channel_Event_2:
   \   000001D6   F8BC               POP      {R3-R7}
   \   000001D8   01BC               POP      {R0}
   \   000001DA   0047               BX       R0               ;; return
   \                     ??RF_Channel_Event_0:
   \   000001DC   ........           DC32     Y_down
   \   000001E0   ........           DC32     X_down
   \   000001E4   ........           DC32     Y_up
   \   000001E8   ........           DC32     X_up
   \   000001EC   ........           DC32     g_Stop_Program
   \   000001F0   ........           DC32     TextToChangeLength
   \   000001F4   ........           DC32     RF_Channel_nr_tmp
   \   000001F8   33333333           DC32     0x33333333
   \   000001FC   3333D33F           DC32     0x3fd33333
   \   00000200   C3F5285C           DC32     0x5c28f5c3
   \   00000204   8FE28A40           DC32     0x408ae28f
   \   00000208   00006940           DC32     0x40690000
   \   0000020C   00FF04C1           DC32     0xc104ff00
   \   00000210   54060000           DC32     0x654
   \   00000214   ........           DC32     g_leng
   \   00000218   7D0A0000           DC32     0xa7d
   \   0000021C   ........           DC32     Speech
   \   00000220   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000224   ........           DC32     RF_Status + 13
   \   00000228   E6D71300           DC32     0x13d7e6
   8144              
   8145              
   8146              
   8147              
   8148              
   8149              
   8150              
   8151              
   8152              
   8153              
   8154              
   8155          
   8156          //Wybór poziomu dostêpu *************************************************************************************************************
   8157                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8158                void Sygnal_Paint(void)
   8159                {
   \                     Sygnal_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   8160                    #define _Y   10   //przesuniêcie w dó³
   8161                    List_Paint(Speech[g_leng].Sygnaly,4,15,_Y,0,3,Speech[g_leng].Obserwowane,Speech[g_leng].WeWy, Speech[g_leng].ZmAnalog, Speech[g_leng].ZmDwust,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   1248               LDR      R0,??Sygnal_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   1249               LDR      R1,??Sygnal_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1249               LDR      R1,??Sygnal_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   2100               MOVS     R1,R4
   \   00000018   1E31               ADDS     R1,R1,#+30
   \   0000001A   2000               MOVS     R0,R4
   \   0000001C   0F30               ADDS     R0,R0,#+15
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   FF20               MOVS     R0,#+255
   \   00000022   5A30               ADDS     R0,R0,#+90       ;; #+345
   \   00000024   2118               ADDS     R1,R4,R0
   \   00000026   B430               ADDS     R0,R0,#+180
   \   00000028   2018               ADDS     R0,R4,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0321               MOVS     R1,#+3
   \   0000002E   0020               MOVS     R0,#+0
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0A23               MOVS     R3,#+10
   \   00000034   0F22               MOVS     R2,#+15
   \   00000036   0421               MOVS     R1,#+4
   \   00000038   FF20               MOVS     R0,#+255
   \   0000003A   4000               LSLS     R0,R0,#+1        ;; #+510
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       List_Paint
   \   00000042   0AB0               ADD      SP,SP,#+40
   8162                }//_______________________ Koniec funkcji MainSide_Paint __________________________    
   \   00000044   10BC               POP      {R4}
   \   00000046   01BC               POP      {R0}
   \   00000048   0047               BX       R0               ;; return
   \   0000004A   C046               Nop      
   \                     ??Sygnal_Paint_0:
   \   0000004C   ........           DC32     g_leng
   \   00000050   7D0A0000           DC32     0xa7d
   \   00000054   ........           DC32     Speech
   8163              
   8164              
   8165                    //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8166                void Sygnal_Event(void)
   8167                {
   \                     Sygnal_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   8168                  int Y_tmp = 10;   //przesuniêcie w dó³
   8169                  int ans;
   8170          
   8171                  ans=List_Event(X_up, Y_up, X_down, Y_down, 4 , 15,0,Y_tmp); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0A21               MOVS     R1,#+10
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0420               MOVS     R0,#+4
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??Sygnal_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??Sygnal_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??Sygnal_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??Sygnal_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0400               MOVS     R4,R0
   8172            
   8173                  if (ans)
   \   0000002A   15D0               BEQ      ??Sygnal_Event_1
   8174                    {
   8175                      if ((ans>0) && (ans<5))
   \   0000002C   012C               CMP      R4,#+1
   \   0000002E   09DB               BLT      ??Sygnal_Event_2
   \   00000030   052C               CMP      R4,#+5
   \   00000032   07DA               BGE      ??Sygnal_Event_2
   8176                      {
   8177                          MenuLevel=(MenuLevel*10+ans);
   \   00000034   0E4D               LDR      R5,??Sygnal_Event_0+0x10  ;; TextToChangeLength
   \   00000036   286D               LDR      R0,[R5, #+80]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   4843               MULS     R0,R1,R0
   \   0000003C   0019               ADDS     R0,R0,R4
   \   0000003E   2865               STR      R0,[R5, #+80]
   8178                          MenuPaint();
   \   00000040   ........           BL       MenuPaint
   8179                      }
   8180                      if (ans<0)
   \                     ??Sygnal_Event_2:
   \   00000044   002C               CMP      R4,#+0
   \   00000046   07D5               BPL      ??Sygnal_Event_1
   8181                      {
   8182                        MenuLevel=(MenuLevel/10);
   \   00000048   094D               LDR      R5,??Sygnal_Event_0+0x10  ;; TextToChangeLength
   \   0000004A   286D               LDR      R0,[R5, #+80]
   \   0000004C   0A21               MOVS     R1,#+10
   \   0000004E   ........           BL       __aeabi_idivmod
   \   00000052   2865               STR      R0,[R5, #+80]
   8183                        MenuPaint();
   \   00000054   ........           BL       MenuPaint
   8184                      }
   8185                    }
   8186          
   8187                }//_______________________________________________________________________
   \                     ??Sygnal_Event_1:
   \   00000058   38BC               POP      {R3-R5}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??Sygnal_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
   8188          
   8189          
   8190          
   8191          
   8192              
   8193              
   8194            long long int WaitOnCheckNode=0;     
   8195            char OpisWezl=0;    

   \                                 In section Debug.txt, align 4, keep-with-next
   8196            void NeuronsList_Paint(void)
   8197            {  
   \                     NeuronsList_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   8198                 if (WaitOnCheckNode==0) WaitOnCheckNode=g_counter+1000+TimeUnitQual*32; 
   \   00000002   7C4C               LDR      R4,??NeuronsList_Paint_0  ;; TextToChangeLength
   \   00000004   A06C               LDR      R0,[R4, #+72]
   \   00000006   E16C               LDR      R1,[R4, #+76]
   \   00000008   0029               CMP      R1,#+0
   \   0000000A   09D1               BNE      ??NeuronsList_Paint_1
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   07D1               BNE      ??NeuronsList_Paint_1
   \   00000010   7948               LDR      R0,??NeuronsList_Paint_0+0x4  ;; g_counter
   \   00000012   03C8               LDM      R0!,{R0,R1}
   \   00000014   794A               LDR      R2,??NeuronsList_Paint_0+0x8  ;; 0x4ee8
   \   00000016   0023               MOVS     R3,#+0
   \   00000018   1218               ADDS     R2,R2,R0
   \   0000001A   4B41               ADCS     R3,R3,R1
   \   0000001C   A264               STR      R2,[R4, #+72]
   \   0000001E   E364               STR      R3,[R4, #+76]
   8199          
   8200                char txt[8];
   8201                 
   8202                
   8203                 List_Paint(Speech[g_leng].Wezly,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \                     ??NeuronsList_Paint_1:
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   0800               MOVS     R0,R1
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   75A0               ADR      R0,??NeuronsList_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0321               MOVS     R1,#+3
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0300               MOVS     R3,R0
   \   00000036   6C22               MOVS     R2,#+108
   \   00000038   0121               MOVS     R1,#+1
   \   0000003A   7248               LDR      R0,??NeuronsList_Paint_0+0x10  ;; 0x636
   \   0000003C   724D               LDR      R5,??NeuronsList_Paint_0+0x14  ;; g_leng
   \   0000003E   2D68               LDR      R5,[R5, #+0]
   \   00000040   724E               LDR      R6,??NeuronsList_Paint_0+0x18  ;; 0xa7d
   \   00000042   7543               MULS     R5,R6,R5
   \   00000044   724E               LDR      R6,??NeuronsList_Paint_0+0x1C  ;; Speech
   \   00000046   7519               ADDS     R5,R6,R5
   \   00000048   2818               ADDS     R0,R5,R0
   \   0000004A   ........           BL       List_Paint
   \   0000004E   0AB0               ADD      SP,SP,#+40
   8204               
   8205                
   8206              //  if (!SlaveMode)//je¿eli tryb Master
   8207              //  {
   8208          
   8209                 char LabelButt[2];
   8210                 LabelButt[1]=0;
   \   00000050   0025               MOVS     R5,#+0
   \   00000052   6E46               MOV      R6,SP
   \   00000054   2800               MOVS     R0,R5
   \   00000056   7070               STRB     R0,[R6, #+1]
   8211                 LabelButt[0]=30;
   \   00000058   1E20               MOVS     R0,#+30
   \   0000005A   3070               STRB     R0,[R6, #+0]
   8212                 Button(LabelButt,24,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000005C   82B0               SUB      SP,SP,#+8
   \   0000005E   1320               MOVS     R0,#+19
   \   00000060   0090               STR      R0,[SP, #+0]
   \   00000062   0300               MOVS     R3,R0
   \   00000064   0322               MOVS     R2,#+3
   \   00000066   1821               MOVS     R1,#+24
   \   00000068   02A8               ADD      R0,SP,#+8
   \   0000006A   ........           BL       Button
   \   0000006E   02B0               ADD      SP,SP,#+8
   8213                 LabelButt[0]=31;
   \   00000070   1F20               MOVS     R0,#+31
   \   00000072   3070               STRB     R0,[R6, #+0]
   8214                 Button(LabelButt,3,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   1320               MOVS     R0,#+19
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   0300               MOVS     R3,R0
   \   0000007C   0322               MOVS     R2,#+3
   \   0000007E   1100               MOVS     R1,R2
   \   00000080   02A8               ADD      R0,SP,#+8
   \   00000082   ........           BL       Button
   \   00000086   02B0               ADD      SP,SP,#+8
   8215                 
   8216                 if (OpisWezl) LabelButt[0]=36; else LabelButt[0]=35;
   \   00000088   A07F               LDRB     R0,[R4, #+30]
   \   0000008A   0028               CMP      R0,#+0
   \   0000008C   02D0               BEQ      ??NeuronsList_Paint_2
   \   0000008E   2420               MOVS     R0,#+36
   \   00000090   3070               STRB     R0,[R6, #+0]
   \   00000092   01E0               B        ??NeuronsList_Paint_3
   \                     ??NeuronsList_Paint_2:
   \   00000094   2320               MOVS     R0,#+35
   \   00000096   3070               STRB     R0,[R6, #+0]
   8217                 Button(LabelButt,46,3,14,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??NeuronsList_Paint_3:
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   1320               MOVS     R0,#+19
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   0E23               MOVS     R3,#+14
   \   000000A0   0322               MOVS     R2,#+3
   \   000000A2   2E21               MOVS     R1,#+46
   \   000000A4   02A8               ADD      R0,SP,#+8
   \   000000A6   ........           BL       Button
   \   000000AA   02B0               ADD      SP,SP,#+8
   8218                  
   8219                 H_line(1,25+6*12,62,3); 
   \   000000AC   0323               MOVS     R3,#+3
   \   000000AE   3E22               MOVS     R2,#+62
   \   000000B0   6121               MOVS     R1,#+97
   \   000000B2   0120               MOVS     R0,#+1
   \   000000B4   ........           BL       H_line
   8220                 for (char i=0; i<6; i++) 
   \   000000B8   16E0               B        ??NeuronsList_Paint_4
   8221                 {H_line(1,25+i*12,62,3); 
   8222                     CharToStr(NeuronsListLine+6-i, txt, 2); //(char Value, char *Vstring, char ill);
   8223                     Label(txt,0,2,27+i*12,2,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   8224                     
   8225                     if (gProg.NeuronsIdTab[(5-i)+NeuronsListLine]>0)
   8226                     {
   8227                         if (OpisWezl)
   8228                         {//opiski
   8229                            Label(gProg.NodeLabel[(5-i)+NeuronsListLine],0,14,27+i*12,NodeLabelLethers,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   8230          
   8231                         }else{
   8232                           #ifdef  DIRECT_Q_MESURE 
   8233                              sprintf(txt, "%d",  TransQuality.DirectkMensur[RF_TaskTab[RF_CurrentTask].Node-1]);
   8234                              Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   8235                           #else
   8236                            //numery nodów 
   8237                            sprintf(txt, "%d", gProg.NeuronsIdTab[(5-i)+NeuronsListLine]);
                                   ^
Warning[Pe223]: function "sprintf" declared implicitly
   \                     ??NeuronsList_Paint_5:
   \   000000BA   56A1               ADR      R1,??NeuronsList_Paint_0+0x20  ;; 0x25, 0x64, 0x00, 0x00
   \   000000BC   01A8               ADD      R0,SP,#+4
   \   000000BE   ........           BL       sprintf
   8238                            Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   6921               MOVS     R1,#+105
   \   000000CA   1020               MOVS     R0,#+16
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   1721               MOVS     R1,#+23
   \   000000D0   0820               MOVS     R0,#+8
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   3B00               MOVS     R3,R7
   \   000000D6   1622               MOVS     R2,#+22
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   07A8               ADD      R0,SP,#+28
   \   000000DC   ........           BL       Label
   \   000000E0   06B0               ADD      SP,SP,#+24
   8239                          #endif
   8240                         }
   \                     ??NeuronsList_Paint_6:
   \   000000E2   6D1C               ADDS     R5,R5,#+1
   \   000000E4   2D06               LSLS     R5,R5,#+24
   \   000000E6   2D0E               LSRS     R5,R5,#+24
   \                     ??NeuronsList_Paint_4:
   \   000000E8   2800               MOVS     R0,R5
   \   000000EA   0628               CMP      R0,#+6
   \   000000EC   46D2               BCS      ??NeuronsList_Paint_7
   \   000000EE   2E00               MOVS     R6,R5
   \   000000F0   0C27               MOVS     R7,#+12
   \   000000F2   7743               MULS     R7,R6,R7
   \   000000F4   0323               MOVS     R3,#+3
   \   000000F6   3E22               MOVS     R2,#+62
   \   000000F8   3900               MOVS     R1,R7
   \   000000FA   1931               ADDS     R1,R1,#+25
   \   000000FC   0120               MOVS     R0,#+1
   \   000000FE   ........           BL       H_line
   \   00000102   0222               MOVS     R2,#+2
   \   00000104   01A9               ADD      R1,SP,#+4
   \   00000106   A079               LDRB     R0,[R4, #+6]
   \   00000108   801D               ADDS     R0,R0,#+6
   \   0000010A   2B00               MOVS     R3,R5
   \   0000010C   C01A               SUBS     R0,R0,R3
   \   0000010E   0006               LSLS     R0,R0,#+24
   \   00000110   000E               LSRS     R0,R0,#+24
   \   00000112   ........           BL       CharToStr
   \   00000116   1B37               ADDS     R7,R7,#+27
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   0020               MOVS     R0,#+0
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   6921               MOVS     R1,#+105
   \   00000120   1020               MOVS     R0,#+16
   \   00000122   03B4               PUSH     {R0,R1}
   \   00000124   1721               MOVS     R1,#+23
   \   00000126   0220               MOVS     R0,#+2
   \   00000128   03B4               PUSH     {R0,R1}
   \   0000012A   3B00               MOVS     R3,R7
   \   0000012C   0200               MOVS     R2,R0
   \   0000012E   0021               MOVS     R1,#+0
   \   00000130   07A8               ADD      R0,SP,#+28
   \   00000132   ........           BL       Label
   \   00000136   06B0               ADD      SP,SP,#+24
   \   00000138   A079               LDRB     R0,[R4, #+6]
   \   0000013A   861B               SUBS     R6,R0,R6
   \   0000013C   3648               LDR      R0,??NeuronsList_Paint_0+0x24  ;; 0xc0ac
   \   0000013E   B100               LSLS     R1,R6,#+2
   \   00000140   364A               LDR      R2,??NeuronsList_Paint_0+0x28  ;; gProg
   \   00000142   5118               ADDS     R1,R2,R1
   \   00000144   0A58               LDR      R2,[R1, R0]
   \   00000146   012A               CMP      R2,#+1
   \   00000148   CBDB               BLT      ??NeuronsList_Paint_6
   \   0000014A   A07F               LDRB     R0,[R4, #+30]
   \   0000014C   0028               CMP      R0,#+0
   \   0000014E   B4D0               BEQ      ??NeuronsList_Paint_5
   \   00000150   82B0               SUB      SP,SP,#+8
   \   00000152   0020               MOVS     R0,#+0
   \   00000154   0090               STR      R0,[SP, #+0]
   \   00000156   6921               MOVS     R1,#+105
   \   00000158   1020               MOVS     R0,#+16
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   1721               MOVS     R1,#+23
   \   0000015E   0A20               MOVS     R0,#+10
   \   00000160   03B4               PUSH     {R0,R1}
   \   00000162   3B00               MOVS     R3,R7
   \   00000164   0E22               MOVS     R2,#+14
   \   00000166   0021               MOVS     R1,#+0
   \   00000168   2D48               LDR      R0,??NeuronsList_Paint_0+0x2C  ;; 0xc156
   \   0000016A   0A27               MOVS     R7,#+10
   \   0000016C   7E43               MULS     R6,R7,R6
   \   0000016E   2B4F               LDR      R7,??NeuronsList_Paint_0+0x28  ;; gProg
   \   00000170   BE19               ADDS     R6,R7,R6
   \   00000172   3018               ADDS     R0,R6,R0
   \   00000174   ........           BL       Label
   \   00000178   06B0               ADD      SP,SP,#+24
   \   0000017A   B2E7               B        ??NeuronsList_Paint_6
   8241                     }
   8242            
   8243               
   8244                 }
   8245                 if(OpisWezl)
   \                     ??NeuronsList_Paint_7:
   \   0000017C   A07F               LDRB     R0,[R4, #+30]
   \   0000017E   0028               CMP      R0,#+0
   \   00000180   06D0               BEQ      ??NeuronsList_Paint_8
   8246                       {
   8247                           V_line(12,25,73,1);
   \   00000182   0123               MOVS     R3,#+1
   \   00000184   4922               MOVS     R2,#+73
   \   00000186   1921               MOVS     R1,#+25
   \   00000188   0C20               MOVS     R0,#+12
   \   0000018A   ........           BL       V_line
   \   0000018E   0BE0               B        ??NeuronsList_Paint_9
   8248                     
   8249                       }else{
   8250                           V_line(20,25,73,1); 
   \                     ??NeuronsList_Paint_8:
   \   00000190   0123               MOVS     R3,#+1
   \   00000192   4922               MOVS     R2,#+73
   \   00000194   1921               MOVS     R1,#+25
   \   00000196   1420               MOVS     R0,#+20
   \   00000198   ........           BL       V_line
   8251                           V_line(58,25,73,1); 
   \   0000019C   0123               MOVS     R3,#+1
   \   0000019E   4922               MOVS     R2,#+73
   \   000001A0   1921               MOVS     R1,#+25
   \   000001A2   3A20               MOVS     R0,#+58
   \   000001A4   ........           BL       V_line
   8252                       }
   8253                     
   8254                     
   8255                 Label("Node ",0,2,99,4,23,16,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??NeuronsList_Paint_9:
   \   000001A8   82B0               SUB      SP,SP,#+8
   \   000001AA   0020               MOVS     R0,#+0
   \   000001AC   0090               STR      R0,[SP, #+0]
   \   000001AE   8021               MOVS     R1,#+128
   \   000001B0   1020               MOVS     R0,#+16
   \   000001B2   03B4               PUSH     {R0,R1}
   \   000001B4   1721               MOVS     R1,#+23
   \   000001B6   0420               MOVS     R0,#+4
   \   000001B8   03B4               PUSH     {R0,R1}
   \   000001BA   6323               MOVS     R3,#+99
   \   000001BC   0222               MOVS     R2,#+2
   \   000001BE   0021               MOVS     R1,#+0
   \   000001C0   1848               LDR      R0,??NeuronsList_Paint_0+0x30  ;; `?<Constant "Node ">`
   \   000001C2   ........           BL       Label
   \   000001C6   06B0               ADD      SP,SP,#+24
   8256                 if(OpisWezl==0) Label("Id ",0,37,99,2,23,16,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001C8   A07F               LDRB     R0,[R4, #+30]
   \   000001CA   0028               CMP      R0,#+0
   \   000001CC   0ED1               BNE      ??NeuronsList_Paint_10
   \   000001CE   82B0               SUB      SP,SP,#+8
   \   000001D0   0090               STR      R0,[SP, #+0]
   \   000001D2   8021               MOVS     R1,#+128
   \   000001D4   1020               MOVS     R0,#+16
   \   000001D6   03B4               PUSH     {R0,R1}
   \   000001D8   1721               MOVS     R1,#+23
   \   000001DA   0220               MOVS     R0,#+2
   \   000001DC   03B4               PUSH     {R0,R1}
   \   000001DE   6323               MOVS     R3,#+99
   \   000001E0   2522               MOVS     R2,#+37
   \   000001E2   0021               MOVS     R1,#+0
   \   000001E4   10A0               ADR      R0,??NeuronsList_Paint_0+0x34  ;; "Id "
   \   000001E6   ........           BL       Label
   \   000001EA   06B0               ADD      SP,SP,#+24
   8257          
   8258                /*     
   8259                }else{ //je¿eli tryb slave
   8260                   Label(Speech[g_leng].Niedostepne,2,2,70,14,59,1,127,0);
   8261                   Label(Speech[g_leng].W_Trybie_Slave,2,2,60,14,55,1,127,0);
   8262                } 
   8263                 */
   8264                 
   8265                }//________________________________________________________________________
   \                     ??NeuronsList_Paint_10:
   \   000001EC   FEBC               POP      {R1-R7}
   \   000001EE   01BC               POP      {R0}
   \   000001F0   0047               BX       R0               ;; return
   \   000001F2   C046               Nop      
   \                     ??NeuronsList_Paint_0:
   \   000001F4   ........           DC32     TextToChangeLength
   \   000001F8   ........           DC32     g_counter
   \   000001FC   E84E0000           DC32     0x4ee8
   \   00000200   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000204   36060000           DC32     0x636
   \   00000208   ........           DC32     g_leng
   \   0000020C   7D0A0000           DC32     0xa7d
   \   00000210   ........           DC32     Speech
   \   00000214   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000218   ACC00000           DC32     0xc0ac
   \   0000021C   ........           DC32     gProg
   \   00000220   56C10000           DC32     0xc156
   \   00000224   ........           DC32     `?<Constant "Node ">`
   \   00000228   49642000           DC8      "Id "

   \                                 In section .bss, align 4
   8266          int wpistmp=0;
   \                     wpistmp:
   \   00000000                      DS8 4
   8267          
   8268          
   8269                //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8270                void NeuronsList_Event(void)
   8271                {
   \                     NeuronsList_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8272          
   8273                      
   8274          
   8275                  //zdarzenie typu down "X"
   8276                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000002   BE48               LDR      R0,??NeuronsList_Event_0  ;; X_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   2F28               CMP      R0,#+47
   \   0000000A   2EDB               BLT      ??NeuronsList_Event_1
   \   0000000C   3F28               CMP      R0,#+63
   \   0000000E   2CDA               BGE      ??NeuronsList_Event_1
   \   00000010   BB48               LDR      R0,??NeuronsList_Event_0+0x4  ;; Y_down
   \   00000012   405E               LDRSH    R0,[R0, R1]
   \   00000014   7128               CMP      R0,#+113
   \   00000016   28DB               BLT      ??NeuronsList_Event_1
   \   00000018   7F28               CMP      R0,#+127
   \   0000001A   26DA               BGE      ??NeuronsList_Event_1
   8277                  {
   8278                    
   8279                    
   8280                    //MenuPaint();
   8281                    H_line(49,114,10,0);
   \   0000001C   0B00               MOVS     R3,R1
   \   0000001E   0A22               MOVS     R2,#+10
   \   00000020   7221               MOVS     R1,#+114
   \   00000022   3120               MOVS     R0,#+49
   \   00000024   ........           BL       H_line
   8282                    H_line(49,123,10,0); 
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0A22               MOVS     R2,#+10
   \   0000002C   7B21               MOVS     R1,#+123
   \   0000002E   3120               MOVS     R0,#+49
   \   00000030   ........           BL       H_line
   8283                    V_line(49,114,10,0); 
   \   00000034   0023               MOVS     R3,#+0
   \   00000036   0A22               MOVS     R2,#+10
   \   00000038   7221               MOVS     R1,#+114
   \   0000003A   3120               MOVS     R0,#+49
   \   0000003C   ........           BL       V_line
   8284                    V_line(58,114,10,0); 
   \   00000040   0023               MOVS     R3,#+0
   \   00000042   0A22               MOVS     R2,#+10
   \   00000044   7221               MOVS     R1,#+114
   \   00000046   3A20               MOVS     R0,#+58
   \   00000048   ........           BL       V_line
   8285                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000004C   AD48               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   0000004E   0078               LDRB     R0,[R0, #+0]
   \   00000050   0028               CMP      R0,#+0
   \   00000052   0AD1               BNE      ??NeuronsList_Event_1
   \   00000054   AC48               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   00000056   8021               MOVS     R1,#+128
   \   00000058   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000005A   0160               STR      R1,[R0, #+0]
   \   0000005C   AB4A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   0000005E   AC48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000060   03C8               LDM      R0!,{R0,R1}
   \   00000062   0023               MOVS     R3,#+0
   \   00000064   0830               ADDS     R0,R0,#+8
   \   00000066   5941               ADCS     R1,R1,R3
   \   00000068   03C2               STM      R2!,{R0,R1}
   8286                    
   8287                  }
   8288            
   8289                  
   8290          
   8291          
   8292          
   8293              
   8294                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??NeuronsList_Event_1:
   \   0000006A   AA48               LDR      R0,??NeuronsList_Event_0+0x18  ;; X_up
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   405E               LDRSH    R0,[R0, R1]
   \   00000070   2F28               CMP      R0,#+47
   \   00000072   3EDB               BLT      ??NeuronsList_Event_2
   \   00000074   3F28               CMP      R0,#+63
   \   00000076   3CDA               BGE      ??NeuronsList_Event_2
   \   00000078   A748               LDR      R0,??NeuronsList_Event_0+0x1C  ;; Y_up
   \   0000007A   405E               LDRSH    R0,[R0, R1]
   \   0000007C   7128               CMP      R0,#+113
   \   0000007E   38DB               BLT      ??NeuronsList_Event_2
   \   00000080   7F28               CMP      R0,#+127
   \   00000082   36DA               BGE      ??NeuronsList_Event_2
   8295                  {
   8296                    OpisWezl=0;
   \   00000084   A54D               LDR      R5,??NeuronsList_Event_0+0x20  ;; TextToChangeLength
   \   00000086   0E00               MOVS     R6,R1
   \   00000088   3000               MOVS     R0,R6
   \   0000008A   A877               STRB     R0,[R5, #+30]
   8297                    Rej_poz=0;
   \   0000008C   6E65               STR      R6,[R5, #+84]
   8298                    if (ProgramChange) 
   \   0000008E   9D48               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   00000090   297A               LDRB     R1,[R5, #+8]
   \   00000092   0029               CMP      R1,#+0
   \   00000094   0078               LDRB     R0,[R0, #+0]
   \   00000096   11D0               BEQ      ??NeuronsList_Event_3
   8299                    {
   8300                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   0AD1               BNE      ??NeuronsList_Event_4
   \   0000009C   9A48               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   0000009E   8021               MOVS     R1,#+128
   \   000000A0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000A2   0160               STR      R1,[R0, #+0]
   \   000000A4   994A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   000000A6   9A48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000000A8   03C8               LDM      R0!,{R0,R1}
   \   000000AA   0023               MOVS     R3,#+0
   \   000000AC   0830               ADDS     R0,R0,#+8
   \   000000AE   5941               ADCS     R1,R1,R3
   \   000000B0   03C2               STM      R2!,{R0,R1}
   8301                      MenuLevel=(MenuLevel*10+0);
   \                     ??NeuronsList_Event_4:
   \   000000B2   286D               LDR      R0,[R5, #+80]
   \   000000B4   0A21               MOVS     R1,#+10
   \   000000B6   4843               MULS     R0,R1,R0
   \   000000B8   2865               STR      R0,[R5, #+80]
   \   000000BA   11E0               B        ??NeuronsList_Event_5
   8302                       
   8303                      
   8304                    }else{
   8305                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \                     ??NeuronsList_Event_3:
   \   000000BC   0028               CMP      R0,#+0
   \   000000BE   0AD1               BNE      ??NeuronsList_Event_6
   \   000000C0   9148               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   000000C2   8021               MOVS     R1,#+128
   \   000000C4   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000C6   0160               STR      R1,[R0, #+0]
   \   000000C8   904A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   000000CA   9148               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000000CC   03C8               LDM      R0!,{R0,R1}
   \   000000CE   0023               MOVS     R3,#+0
   \   000000D0   0830               ADDS     R0,R0,#+8
   \   000000D2   5941               ADCS     R1,R1,R3
   \   000000D4   03C2               STM      R2!,{R0,R1}
   8306                      MenuLevel=(MenuLevel/10);
   \                     ??NeuronsList_Event_6:
   \   000000D6   286D               LDR      R0,[R5, #+80]
   \   000000D8   0A21               MOVS     R1,#+10
   \   000000DA   ........           BL       __aeabi_idivmod
   \   000000DE   2865               STR      R0,[R5, #+80]
   8307                    }
   8308                    
   8309                    MenuPaint();
   \                     ??NeuronsList_Event_5:
   \   000000E0   ........           BL       MenuPaint
   8310                    WaitOnCheckNode=0;
   \   000000E4   4835               ADDS     R5,R5,#+72
   \   000000E6   3000               MOVS     R0,R6
   \   000000E8   0100               MOVS     R1,R0
   \   000000EA   03C5               STM      R5!,{R0,R1}
   8311                  }
   8312                  else{
   8313            
   8314                           
   8315             //   if (!SlaveMode)//je¿eli tryb Master
   8316            //    {
   8317                      char LabelButt[2]; LabelButt[1]=0;
   8318                      LabelButt[0]=30;
   8319                      if ((Button(LabelButt,24,3,19,19))  && ((g_counter>Touch_EventTime+100) || (Touch_EventTime>g_counter)) && (NeuronsListLine>0))            
   8320                      {
   8321                        Touch_EventTime=g_counter;
   8322                        NeuronsListLine--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   8323                        MenuPaint();
   8324                      } 
   8325                      
   8326                      LabelButt[0]=31;
   8327                      if ((Button(LabelButt,3,3,19,19)) && ((g_counter>Touch_EventTime+100) || (Touch_EventTime>g_counter)) && (NeuronsListLine<NumberNeurons-6))
   8328                      {
   8329                        Touch_EventTime=g_counter;
   8330                        NeuronsListLine++;    
   8331                        MenuPaint();
   8332                      }
   8333                      
   8334                      
   8335                      if (OpisWezl) LabelButt[0]=36; else LabelButt[0]=35;
   8336                      if (Button(LabelButt,46,3,14,19)==1){if (OpisWezl) OpisWezl=0; else OpisWezl=1;  MenuPaint();}
   8337                      
   8338                      
   8339                      for (char i=0; i<6; i++) 
   8340                      {
   8341                       if ((Y_down>25+i*12) && (Y_down<25+((i+1)*12)))                
   8342                        {
   8343                           MenuPaint();
   8344                           H_line(1,26+i*12,62,1); 
   8345                           H_line(1,24+(i+1)*12,62,1); 
   8346                        }
   8347                        if ((Y_up>25+i*12) && (Y_up<25+((i+1)*12)))                
   8348                        { 
   8349                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   8350                          if (OpisWezl==0)
   8351                          {
   8352                              NeuronIdChange=&(gProg.NeuronsIdTab[(5-i)+NeuronsListLine]);
   8353                              NeuronNrChange=(5-i)+NeuronsListLine;
   8354                              //je¿eli jest ju¿ nadany ID
   8355                              if (gProg.NeuronsIdTab[(5-i)+NeuronsListLine]>0)
   8356                              {
   8357                                NeuronNrChange=(6-i)+NeuronsListLine;
   8358                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   8359                                TextToChangeLength=NodeLabelLethers;
   8360                                
   8361                                MenuLevel=(MenuLevel*10+3);
   8362                              }else{
   8363                                MenuLevel=(MenuLevel*10+1);
   8364                              }
   8365                          }else{
   8366                              if (gProg.NodeLabel[(5-i)+NeuronsListLine][0]!=0)
   8367                              {
   8368                                NeuronNrChange=(6-i)+NeuronsListLine;
   8369                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   8370                                TextToChangeLength=NodeLabelLethers;
   8371                                MenuLevel=(MenuLevel*10+3);
   8372                              }else{  
   8373                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   8374                                TextToChangeLength=NodeLabelLethers;
   8375                                MenuLevel=(MenuLevel*10+2); 
   8376                                ProgramChange=1;
   8377                              }
   8378                              
   8379                          }
   8380                          MenuPaint();
   8381                        }
   8382                       
   8383                      }
   8384               // }
   8385                  }
   8386          
   8387                }//________________________________________________________________________
   \                     ??NeuronsList_Event_7:
   \   000000EC   F8BC               POP      {R3-R7}
   \   000000EE   01BC               POP      {R0}
   \   000000F0   0047               BX       R0               ;; return
   \                     ??NeuronsList_Event_2:
   \   000000F2   0E00               MOVS     R6,R1
   \   000000F4   6C46               MOV      R4,SP
   \   000000F6   3000               MOVS     R0,R6
   \   000000F8   6070               STRB     R0,[R4, #+1]
   \   000000FA   1E20               MOVS     R0,#+30
   \   000000FC   2070               STRB     R0,[R4, #+0]
   \   000000FE   874D               LDR      R5,??NeuronsList_Event_0+0x20  ;; TextToChangeLength
   \   00000100   82B0               SUB      SP,SP,#+8
   \   00000102   1320               MOVS     R0,#+19
   \   00000104   0090               STR      R0,[SP, #+0]
   \   00000106   0300               MOVS     R3,R0
   \   00000108   0322               MOVS     R2,#+3
   \   0000010A   1821               MOVS     R1,#+24
   \   0000010C   02A8               ADD      R0,SP,#+8
   \   0000010E   ........           BL       Button
   \   00000112   02B0               ADD      SP,SP,#+8
   \   00000114   0028               CMP      R0,#+0
   \   00000116   1BD0               BEQ      ??NeuronsList_Event_8
   \   00000118   7D48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   0000011A   03C8               LDM      R0!,{R0,R1}
   \   0000011C   2A6C               LDR      R2,[R5, #+64]
   \   0000011E   6B6C               LDR      R3,[R5, #+68]
   \   00000120   0027               MOVS     R7,#+0
   \   00000122   6432               ADDS     R2,R2,#+100
   \   00000124   7B41               ADCS     R3,R3,R7
   \   00000126   8B42               CMP      R3,R1
   \   00000128   09D3               BCC      ??NeuronsList_Event_9
   \   0000012A   01D8               BHI      ??NeuronsList_Event_10
   \   0000012C   8242               CMP      R2,R0
   \   0000012E   06D3               BCC      ??NeuronsList_Event_9
   \                     ??NeuronsList_Event_10:
   \   00000130   2A6C               LDR      R2,[R5, #+64]
   \   00000132   6B6C               LDR      R3,[R5, #+68]
   \   00000134   9942               CMP      R1,R3
   \   00000136   0BD8               BHI      ??NeuronsList_Event_8
   \   00000138   01D3               BCC      ??NeuronsList_Event_9
   \   0000013A   9042               CMP      R0,R2
   \   0000013C   08D2               BCS      ??NeuronsList_Event_8
   \                     ??NeuronsList_Event_9:
   \   0000013E   AA79               LDRB     R2,[R5, #+6]
   \   00000140   002A               CMP      R2,#+0
   \   00000142   05D0               BEQ      ??NeuronsList_Event_8
   \   00000144   2864               STR      R0,[R5, #+64]
   \   00000146   6964               STR      R1,[R5, #+68]
   \   00000148   501E               SUBS     R0,R2,#+1
   \   0000014A   A871               STRB     R0,[R5, #+6]
   \   0000014C   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_8:
   \   00000150   1F20               MOVS     R0,#+31
   \   00000152   2070               STRB     R0,[R4, #+0]
   \   00000154   82B0               SUB      SP,SP,#+8
   \   00000156   1320               MOVS     R0,#+19
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   0300               MOVS     R3,R0
   \   0000015C   0322               MOVS     R2,#+3
   \   0000015E   1100               MOVS     R1,R2
   \   00000160   02A8               ADD      R0,SP,#+8
   \   00000162   ........           BL       Button
   \   00000166   02B0               ADD      SP,SP,#+8
   \   00000168   0028               CMP      R0,#+0
   \   0000016A   1BD0               BEQ      ??NeuronsList_Event_11
   \   0000016C   6848               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   0000016E   03C8               LDM      R0!,{R0,R1}
   \   00000170   2A6C               LDR      R2,[R5, #+64]
   \   00000172   6B6C               LDR      R3,[R5, #+68]
   \   00000174   0027               MOVS     R7,#+0
   \   00000176   6432               ADDS     R2,R2,#+100
   \   00000178   7B41               ADCS     R3,R3,R7
   \   0000017A   8B42               CMP      R3,R1
   \   0000017C   09D3               BCC      ??NeuronsList_Event_12
   \   0000017E   01D8               BHI      ??NeuronsList_Event_13
   \   00000180   8242               CMP      R2,R0
   \   00000182   06D3               BCC      ??NeuronsList_Event_12
   \                     ??NeuronsList_Event_13:
   \   00000184   2A6C               LDR      R2,[R5, #+64]
   \   00000186   6B6C               LDR      R3,[R5, #+68]
   \   00000188   9942               CMP      R1,R3
   \   0000018A   0BD8               BHI      ??NeuronsList_Event_11
   \   0000018C   01D3               BCC      ??NeuronsList_Event_12
   \   0000018E   9042               CMP      R0,R2
   \   00000190   08D2               BCS      ??NeuronsList_Event_11
   \                     ??NeuronsList_Event_12:
   \   00000192   AA79               LDRB     R2,[R5, #+6]
   \   00000194   1D2A               CMP      R2,#+29
   \   00000196   05D2               BCS      ??NeuronsList_Event_11
   \   00000198   2864               STR      R0,[R5, #+64]
   \   0000019A   6964               STR      R1,[R5, #+68]
   \   0000019C   521C               ADDS     R2,R2,#+1
   \   0000019E   AA71               STRB     R2,[R5, #+6]
   \   000001A0   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_11:
   \   000001A4   A87F               LDRB     R0,[R5, #+30]
   \   000001A6   0028               CMP      R0,#+0
   \   000001A8   02D0               BEQ      ??NeuronsList_Event_14
   \   000001AA   2420               MOVS     R0,#+36
   \   000001AC   2070               STRB     R0,[R4, #+0]
   \   000001AE   01E0               B        ??NeuronsList_Event_15
   \                     ??NeuronsList_Event_14:
   \   000001B0   2320               MOVS     R0,#+35
   \   000001B2   2070               STRB     R0,[R4, #+0]
   \                     ??NeuronsList_Event_15:
   \   000001B4   82B0               SUB      SP,SP,#+8
   \   000001B6   1320               MOVS     R0,#+19
   \   000001B8   0090               STR      R0,[SP, #+0]
   \   000001BA   0E23               MOVS     R3,#+14
   \   000001BC   0322               MOVS     R2,#+3
   \   000001BE   2E21               MOVS     R1,#+46
   \   000001C0   02A8               ADD      R0,SP,#+8
   \   000001C2   ........           BL       Button
   \   000001C6   02B0               ADD      SP,SP,#+8
   \   000001C8   0128               CMP      R0,#+1
   \   000001CA   18D1               BNE      ??NeuronsList_Event_16
   \   000001CC   A87F               LDRB     R0,[R5, #+30]
   \   000001CE   411E               SUBS     R1,R0,#+1
   \   000001D0   8941               SBCS     R1,R1,R1
   \   000001D2   C90F               LSRS     R1,R1,#+31
   \   000001D4   A977               STRB     R1,[R5, #+30]
   \   000001D6   ........           BL       MenuPaint
   \   000001DA   10E0               B        ??NeuronsList_Event_16
   \                     ??NeuronsList_Event_17:
   \   000001DC   5048               LDR      R0,??NeuronsList_Event_0+0x24  ;; 0xc156
   \   000001DE   0818               ADDS     R0,R1,R0
   \   000001E0   A865               STR      R0,[R5, #+88]
   \   000001E2   1800               MOVS     R0,R3
   \   000001E4   2870               STRB     R0,[R5, #+0]
   \   000001E6   286D               LDR      R0,[R5, #+80]
   \   000001E8   1900               MOVS     R1,R3
   \   000001EA   4843               MULS     R0,R1,R0
   \   000001EC   801C               ADDS     R0,R0,#+2
   \   000001EE   2865               STR      R0,[R5, #+80]
   \   000001F0   0120               MOVS     R0,#+1
   \   000001F2   2872               STRB     R0,[R5, #+8]
   \                     ??NeuronsList_Event_18:
   \   000001F4   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_19:
   \   000001F8   761C               ADDS     R6,R6,#+1
   \   000001FA   3606               LSLS     R6,R6,#+24
   \   000001FC   360E               LSRS     R6,R6,#+24
   \                     ??NeuronsList_Event_16:
   \   000001FE   3000               MOVS     R0,R6
   \   00000200   0628               CMP      R0,#+6
   \   00000202   00D3               BCC      .+4
   \   00000204   72E7               B        ??NeuronsList_Event_7
   \   00000206   3700               MOVS     R7,R6
   \   00000208   0C20               MOVS     R0,#+12
   \   0000020A   4743               MULS     R7,R0,R7
   \   0000020C   3C00               MOVS     R4,R7
   \   0000020E   1934               ADDS     R4,R4,#+25
   \   00000210   3B48               LDR      R0,??NeuronsList_Event_0+0x4  ;; Y_down
   \   00000212   0021               MOVS     R1,#+0
   \   00000214   415E               LDRSH    R1,[R0, R1]
   \   00000216   8C42               CMP      R4,R1
   \   00000218   13DA               BGE      ??NeuronsList_Event_20
   \   0000021A   3800               MOVS     R0,R7
   \   0000021C   2530               ADDS     R0,R0,#+37
   \   0000021E   8142               CMP      R1,R0
   \   00000220   0FDA               BGE      ??NeuronsList_Event_20
   \   00000222   ........           BL       MenuPaint
   \   00000226   0123               MOVS     R3,#+1
   \   00000228   3E22               MOVS     R2,#+62
   \   0000022A   3900               MOVS     R1,R7
   \   0000022C   1A31               ADDS     R1,R1,#+26
   \   0000022E   1800               MOVS     R0,R3
   \   00000230   ........           BL       H_line
   \   00000234   0123               MOVS     R3,#+1
   \   00000236   3E22               MOVS     R2,#+62
   \   00000238   3900               MOVS     R1,R7
   \   0000023A   2431               ADDS     R1,R1,#+36
   \   0000023C   1800               MOVS     R0,R3
   \   0000023E   ........           BL       H_line
   \                     ??NeuronsList_Event_20:
   \   00000242   3548               LDR      R0,??NeuronsList_Event_0+0x1C  ;; Y_up
   \   00000244   0021               MOVS     R1,#+0
   \   00000246   405E               LDRSH    R0,[R0, R1]
   \   00000248   8442               CMP      R4,R0
   \   0000024A   D5DA               BGE      ??NeuronsList_Event_19
   \   0000024C   2537               ADDS     R7,R7,#+37
   \   0000024E   B842               CMP      R0,R7
   \   00000250   D2DA               BGE      ??NeuronsList_Event_19
   \   00000252   2C48               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   00000254   0078               LDRB     R0,[R0, #+0]
   \   00000256   0028               CMP      R0,#+0
   \   00000258   0AD1               BNE      ??NeuronsList_Event_21
   \   0000025A   2B48               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   0000025C   8021               MOVS     R1,#+128
   \   0000025E   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000260   0160               STR      R1,[R0, #+0]
   \   00000262   2A4A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   00000264   2A48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000266   03C8               LDM      R0!,{R0,R1}
   \   00000268   0023               MOVS     R3,#+0
   \   0000026A   0830               ADDS     R0,R0,#+8
   \   0000026C   5941               ADCS     R1,R1,R3
   \   0000026E   03C2               STM      R2!,{R0,R1}
   \                     ??NeuronsList_Event_21:
   \   00000270   A879               LDRB     R0,[R5, #+6]
   \   00000272   3100               MOVS     R1,R6
   \   00000274   411A               SUBS     R1,R0,R1
   \   00000276   2B4A               LDR      R2,??NeuronsList_Event_0+0x28  ;; gProg
   \   00000278   AB7F               LDRB     R3,[R5, #+30]
   \   0000027A   002B               CMP      R3,#+0
   \   0000027C   25D1               BNE      ??NeuronsList_Event_22
   \   0000027E   2A4B               LDR      R3,??NeuronsList_Event_0+0x2C  ;; 0xc0ac
   \   00000280   8C00               LSLS     R4,R1,#+2
   \   00000282   1419               ADDS     R4,R2,R4
   \   00000284   E318               ADDS     R3,R4,R3
   \   00000286   AB66               STR      R3,[R5, #+104]
   \   00000288   0524               MOVS     R4,#+5
   \   0000028A   3700               MOVS     R7,R6
   \   0000028C   E41B               SUBS     R4,R4,R7
   \   0000028E   2418               ADDS     R4,R4,R0
   \   00000290   EC70               STRB     R4,[R5, #+3]
   \   00000292   1B68               LDR      R3,[R3, #+0]
   \   00000294   012B               CMP      R3,#+1
   \   00000296   12DB               BLT      ??NeuronsList_Event_23
   \   00000298   0623               MOVS     R3,#+6
   \   0000029A   3400               MOVS     R4,R6
   \   0000029C   1B1B               SUBS     R3,R3,R4
   \   0000029E   1818               ADDS     R0,R3,R0
   \   000002A0   E870               STRB     R0,[R5, #+3]
   \   000002A2   1F48               LDR      R0,??NeuronsList_Event_0+0x24  ;; 0xc156
   \   000002A4   0A23               MOVS     R3,#+10
   \   000002A6   5943               MULS     R1,R3,R1
   \   000002A8   5118               ADDS     R1,R2,R1
   \   000002AA   0818               ADDS     R0,R1,R0
   \   000002AC   A865               STR      R0,[R5, #+88]
   \   000002AE   1800               MOVS     R0,R3
   \   000002B0   2870               STRB     R0,[R5, #+0]
   \   000002B2   286D               LDR      R0,[R5, #+80]
   \   000002B4   1900               MOVS     R1,R3
   \   000002B6   4843               MULS     R0,R1,R0
   \   000002B8   C01C               ADDS     R0,R0,#+3
   \   000002BA   2865               STR      R0,[R5, #+80]
   \   000002BC   9AE7               B        ??NeuronsList_Event_18
   \                     ??NeuronsList_Event_23:
   \   000002BE   286D               LDR      R0,[R5, #+80]
   \   000002C0   0A21               MOVS     R1,#+10
   \   000002C2   4843               MULS     R0,R1,R0
   \   000002C4   401C               ADDS     R0,R0,#+1
   \   000002C6   2865               STR      R0,[R5, #+80]
   \   000002C8   94E7               B        ??NeuronsList_Event_18
   \                     ??NeuronsList_Event_22:
   \   000002CA   0A23               MOVS     R3,#+10
   \   000002CC   5943               MULS     R1,R3,R1
   \   000002CE   5118               ADDS     R1,R2,R1
   \   000002D0   134A               LDR      R2,??NeuronsList_Event_0+0x24  ;; 0xc156
   \   000002D2   8A5C               LDRB     R2,[R1, R2]
   \   000002D4   002A               CMP      R2,#+0
   \   000002D6   00D1               BNE      .+4
   \   000002D8   80E7               B        ??NeuronsList_Event_17
   \   000002DA   0622               MOVS     R2,#+6
   \   000002DC   3300               MOVS     R3,R6
   \   000002DE   D21A               SUBS     R2,R2,R3
   \   000002E0   1018               ADDS     R0,R2,R0
   \   000002E2   E870               STRB     R0,[R5, #+3]
   \   000002E4   0E48               LDR      R0,??NeuronsList_Event_0+0x24  ;; 0xc156
   \   000002E6   0818               ADDS     R0,R1,R0
   \   000002E8   A865               STR      R0,[R5, #+88]
   \   000002EA   0A20               MOVS     R0,#+10
   \   000002EC   2870               STRB     R0,[R5, #+0]
   \   000002EE   286D               LDR      R0,[R5, #+80]
   \   000002F0   0A21               MOVS     R1,#+10
   \   000002F2   4843               MULS     R0,R1,R0
   \   000002F4   C01C               ADDS     R0,R0,#+3
   \   000002F6   2865               STR      R0,[R5, #+80]
   \   000002F8   7CE7               B        ??NeuronsList_Event_18
   \   000002FA   C046               Nop      
   \                     ??NeuronsList_Event_0:
   \   000002FC   ........           DC32     X_down
   \   00000300   ........           DC32     Y_down
   \   00000304   E9D71300           DC32     0x13d7e9
   \   00000308   30F4FFFF           DC32     0xfffff430
   \   0000030C   ........           DC32     ButtonBipCounter
   \   00000310   ........           DC32     g_counter
   \   00000314   ........           DC32     X_up
   \   00000318   ........           DC32     Y_up
   \   0000031C   ........           DC32     TextToChangeLength
   \   00000320   56C10000           DC32     0xc156
   \   00000324   ........           DC32     gProg
   \   00000328   ACC00000           DC32     0xc0ac
   8388              
   8389          
   8390          

   \                                 In section Debug.txt, align 4, keep-with-next
   8391              void NeuronsList_Refresh(void)
   8392              {  
   \                     NeuronsList_Refresh:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   B648               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   1428               CMP      R0,#+20
   \   0000000A   03D2               BCS      ??NeuronsList_Refresh_1
   8393                
   8394                //for (char i=0; i<NumberNeurons; i++)  MainStage.SendStageChange[i]=20;
   8395                
   8396                
   8397                
   8398                static char Dzielnik20;
   8399                
   8400                //char CheckTrans=0;
   8401                //if (WaitOnCheckNode>g_counter) CheckTrans=1;
   8402                
   8403                
   8404                if (Dzielnik20<20) Dzielnik20++; else Dzielnik20=0;
   \   0000000C   B449               LDR      R1,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000000E   401C               ADDS     R0,R0,#+1
   \   00000010   0870               STRB     R0,[R1, #+0]
   \   00000012   02E0               B        ??NeuronsList_Refresh_2
   \                     ??NeuronsList_Refresh_1:
   \   00000014   B248               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0170               STRB     R1,[R0, #+0]
   \                     ??NeuronsList_Refresh_2:
   \   0000001A   B248               LDR      R0,??NeuronsList_Refresh_0+0x4  ;; TextToChangeLength + 30
   \   0000001C   0078               LDRB     R0,[R0, #+0]
   \   0000001E   0028               CMP      R0,#+0
   \   00000020   00D0               BEQ      .+4
   \   00000022   58E1               B        ??NeuronsList_Refresh_3
   \   00000024   0090               STR      R0,[SP, #+0]
   \   00000026   38E0               B        ??NeuronsList_Refresh_4
   8405                
   8406                if (/*(!SlaveMode) &&*/ (OpisWezl==0))//je¿eli tryb Master
   8407                {
   8408                  
   8409                  char ERRx1=0;  //iloæ b³êdów pojedyñczych
   8410                  char ERRx2=0;  //iloæ b³êdów podwójnych (dwukrotny brak komunikacji w czasie TimeUnitQual)
   8411                  char ERRx3=0;  //iloæ b³êdów podtrujnych i wiêkszych (przynajmniej trzykrotny brak komunikacji w czasie TimeUnitQual)
   8412                  char CurErr=0;
   8413                  char LIC=0;
   8414                  char Ypoz;
   8415                    for (char i=0; i<6; i++) 
   8416                    {
   8417                      ERRx1=0; ERRx2=0; ERRx3=0; CurErr=0;
   8418                      Ypoz=28+i*12;
   8419                     
   8420                      //ocena jakoci
   8421                      CleanCanvasArea(12,Ypoz-1,8,9,0);
   8422                      if (TransQuality.Mensur[(5-i)+NeuronsListLine])  //jezeli wykryta transmisja
   8423                      {
   8424                        if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Remote)
   8425                        {      
   8426                           
   8427                            if ((Dzielnik20<10) && (MainStage.StageI[(6-i)+NeuronsListLine].Port& 0x8000) && ((MainStage.StageI[(6-i)+NeuronsListLine].Port)!=0x8AAA))
   8428                            {
   8429                                CopyToCanvasPoint((char*)BateriaWyladowana, 12, Ypoz-1, 6,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   8430                            }
   8431                          else
   8432                            {
   8433                          
   8434                          
   8435                                char MI=TransQuality.MensurIndex;
   8436                                char PT=0;
   8437                                for (char b=0; b<5; b++)
   8438                                {
   8439                                  if ((TransQuality.Mensur[(5-i)+NeuronsListLine]) & (0x1 << MI)) PT++;
   8440                                  if (MI>0) MI--; else MI=31;   
   8441                                }
   8442                            
   8443                                  H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   8444                                  if (PT>1)H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   8445                                  if (PT>2)H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   8446                                  if (PT>3)H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)  
   8447                           }
   8448           
   8449                       
   8450                        }
   8451                        else if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Period)
   8452                        {
   8453                        }
   8454                        else{
   8455                              
   8456                          
   8457                                for (char b=0; b<32; b++)
   8458                                      {
   8459                                        if ((TransQuality.Mensur[(5-i)+NeuronsListLine]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   8460                                        {  
   8461                                          CurErr=0;
   8462                                        }else{
   8463                                          CurErr++;
   8464                                          if (CurErr==1) {ERRx1++;}
   8465                                          if (CurErr==2) {ERRx2++; ERRx1--; }
   8466                                          if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   8467                        
   8468                                        }
   8469                                        
   8470                                      }
   8471                     
   8472                                //wskanik jakoci              
   8473                                H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   8474                                if ((ERRx1<=12)  && (ERRx2<=10)  && (ERRx3<=5)) H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   8475                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   8476                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)    
   8477                           
   8478                        }       
   8479                                     
   8480                      }
   8481                      
   8482                      if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Period)
   8483                        {
   8484              
   8485                          if ((Dzielnik20<10) && (MainStage.StageI[(6-i)+NeuronsListLine].Port& 0x8000) && (((unsigned short)(MainStage.StageI[(6-i)+NeuronsListLine].Port))!=0x8AAA))
   8486                          {
   8487                              CopyToCanvasPoint((char*)BateriaWyladowana, 12, Ypoz-1, 6,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   8488                          }
   8489                        else
   8490                          {
   8491                          
   8492                              LIC=0;
   8493                              for (char k=0; k<5; k++)
   8494                              {
   8495                                if ((TransQuality.SlowMensur[(5-i)+NeuronsListLine]>>k)&0x1) LIC++;
   \                     ??NeuronsList_Refresh_5:
   \   00000028   AF4A               LDR      R2,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   0000002A   1218               ADDS     R2,R2,R0
   \   0000002C   127A               LDRB     R2,[R2, #+8]
   \   0000002E   0A41               ASRS     R2,R2,R1
   \   00000030   D207               LSLS     R2,R2,#+31
   \   00000032   02D5               BPL      ??NeuronsList_Refresh_6
   \   00000034   641C               ADDS     R4,R4,#+1
   \   00000036   2406               LSLS     R4,R4,#+24
   \   00000038   240E               LSRS     R4,R4,#+24
   8496                              }
   \                     ??NeuronsList_Refresh_6:
   \   0000003A   491C               ADDS     R1,R1,#+1
   \   0000003C   0906               LSLS     R1,R1,#+24
   \   0000003E   090E               LSRS     R1,R1,#+24
   \                     ??NeuronsList_Refresh_7:
   \   00000040   0A00               MOVS     R2,R1
   \   00000042   052A               CMP      R2,#+5
   \   00000044   F0D3               BCC      ??NeuronsList_Refresh_5
   8497                              if (LIC>0) 
   \   00000046   2000               MOVS     R0,R4
   \   00000048   0FD0               BEQ      ??NeuronsList_Refresh_8
   8498                              {
   8499                                H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   \   0000004A   019F               LDR      R7,[SP, #+4]
   \   0000004C   3F06               LSLS     R7,R7,#+24
   \   0000004E   3F0E               LSRS     R7,R7,#+24
   \   00000050   0123               MOVS     R3,#+1
   \   00000052   1A00               MOVS     R2,R3
   \   00000054   3900               MOVS     R1,R7
   \   00000056   0F20               MOVS     R0,#+15
   \   00000058   ........           BL       H_line
   8500                                H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)                      
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   0322               MOVS     R2,#+3
   \   00000060   BF1C               ADDS     R7,R7,#+2
   \   00000062   3900               MOVS     R1,R7
   \   00000064   0E20               MOVS     R0,#+14
   \   00000066   ........           BL       H_line
   8501                              }
   8502                              if (LIC>1)
   \                     ??NeuronsList_Refresh_8:
   \   0000006A   022C               CMP      R4,#+2
   \   0000006C   10D3               BCC      ??NeuronsList_Refresh_9
   8503                              {
   8504                                H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   \   0000006E   019F               LDR      R7,[SP, #+4]
   \   00000070   3F06               LSLS     R7,R7,#+24
   \   00000072   3F0E               LSRS     R7,R7,#+24
   \   00000074   0123               MOVS     R3,#+1
   \   00000076   0522               MOVS     R2,#+5
   \   00000078   3900               MOVS     R1,R7
   \   0000007A   091D               ADDS     R1,R1,#+4
   \   0000007C   0D20               MOVS     R0,#+13
   \   0000007E   ........           BL       H_line
   8505                                H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ) 
   \   00000082   0123               MOVS     R3,#+1
   \   00000084   0722               MOVS     R2,#+7
   \   00000086   BF1D               ADDS     R7,R7,#+6
   \   00000088   3900               MOVS     R1,R7
   \   0000008A   0C20               MOVS     R0,#+12
   \   0000008C   ........           BL       H_line
   8506                              }
   \                     ??NeuronsList_Refresh_9:
   \   00000090   0098               LDR      R0,[SP, #+0]
   \   00000092   401C               ADDS     R0,R0,#+1
   \   00000094   0006               LSLS     R0,R0,#+24
   \   00000096   000E               LSRS     R0,R0,#+24
   \   00000098   0090               STR      R0,[SP, #+0]
   \                     ??NeuronsList_Refresh_4:
   \   0000009A   0098               LDR      R0,[SP, #+0]
   \   0000009C   0006               LSLS     R0,R0,#+24
   \   0000009E   000E               LSRS     R0,R0,#+24
   \   000000A0   0628               CMP      R0,#+6
   \   000000A2   00D3               BCC      .+4
   \   000000A4   17E1               B        ??NeuronsList_Refresh_3
   \   000000A6   0024               MOVS     R4,#+0
   \   000000A8   2600               MOVS     R6,R4
   \   000000AA   2500               MOVS     R5,R4
   \   000000AC   2700               MOVS     R7,R4
   \   000000AE   0098               LDR      R0,[SP, #+0]
   \   000000B0   0C21               MOVS     R1,#+12
   \   000000B2   4843               MULS     R0,R1,R0
   \   000000B4   1C30               ADDS     R0,R0,#+28
   \   000000B6   0006               LSLS     R0,R0,#+24
   \   000000B8   000E               LSRS     R0,R0,#+24
   \   000000BA   0190               STR      R0,[SP, #+4]
   \   000000BC   6846               MOV      R0,SP
   \   000000BE   0199               LDR      R1,[SP, #+4]
   \   000000C0   491E               SUBS     R1,R1,#+1
   \   000000C2   0172               STRB     R1,[R0, #+8]
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   2000               MOVS     R0,R4
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   0923               MOVS     R3,#+9
   \   000000CC   0822               MOVS     R2,#+8
   \   000000CE   02A8               ADD      R0,SP,#+8
   \   000000D0   017A               LDRB     R1,[R0, #+8]
   \   000000D2   0C20               MOVS     R0,#+12
   \   000000D4   ........           BL       CleanCanvasArea
   \   000000D8   02B0               ADD      SP,SP,#+8
   \   000000DA   0098               LDR      R0,[SP, #+0]
   \   000000DC   0006               LSLS     R0,R0,#+24
   \   000000DE   000E               LSRS     R0,R0,#+24
   \   000000E0   0390               STR      R0,[SP, #+12]
   \   000000E2   8248               LDR      R0,??NeuronsList_Refresh_0+0xC  ;; TextToChangeLength + 6
   \   000000E4   0078               LDRB     R0,[R0, #+0]
   \   000000E6   0399               LDR      R1,[SP, #+12]
   \   000000E8   411A               SUBS     R1,R0,R1
   \   000000EA   8800               LSLS     R0,R1,#+2
   \   000000EC   7E4A               LDR      R2,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   000000EE   1018               ADDS     R0,R2,R0
   \   000000F0   006E               LDR      R0,[R0, #+96]
   \   000000F2   0028               CMP      R0,#+0
   \   000000F4   00D1               BNE      .+4
   \   000000F6   C2E0               B        ??NeuronsList_Refresh_10
   \   000000F8   0C22               MOVS     R2,#+12
   \   000000FA   4A43               MULS     R2,R1,R2
   \   000000FC   7C4B               LDR      R3,??NeuronsList_Refresh_0+0x10  ;; NeuronsList
   \   000000FE   9A18               ADDS     R2,R3,R2
   \   00000100   3C32               ADDS     R2,R2,#+60
   \   00000102   1278               LDRB     R2,[R2, #+0]
   \   00000104   042A               CMP      R2,#+4
   \   00000106   5BD1               BNE      ??NeuronsList_Refresh_11
   \   00000108   754A               LDR      R2,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000010A   1278               LDRB     R2,[R2, #+0]
   \   0000010C   0A2A               CMP      R2,#+10
   \   0000010E   17D2               BCS      ??NeuronsList_Refresh_12
   \   00000110   784A               LDR      R2,??NeuronsList_Refresh_0+0x14  ;; MainStage
   \   00000112   9223               MOVS     R3,#+146
   \   00000114   5B00               LSLS     R3,R3,#+1        ;; #+292
   \   00000116   1624               MOVS     R4,#+22
   \   00000118   6143               MULS     R1,R4,R1
   \   0000011A   5118               ADDS     R1,R2,R1
   \   0000011C   C95A               LDRH     R1,[R1, R3]
   \   0000011E   0A04               LSLS     R2,R1,#+16
   \   00000120   0ED5               BPL      ??NeuronsList_Refresh_12
   \   00000122   754A               LDR      R2,??NeuronsList_Refresh_0+0x18  ;; 0x8aaa
   \   00000124   9142               CMP      R1,R2
   \   00000126   0BD0               BEQ      ??NeuronsList_Refresh_12
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   0920               MOVS     R0,#+9
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   0623               MOVS     R3,#+6
   \   00000130   02A8               ADD      R0,SP,#+8
   \   00000132   027A               LDRB     R2,[R0, #+8]
   \   00000134   0C21               MOVS     R1,#+12
   \   00000136   7148               LDR      R0,??NeuronsList_Refresh_0+0x1C  ;; BateriaWyladowana
   \   00000138   ........           BL       CopyToCanvasPoint
   \   0000013C   02B0               ADD      SP,SP,#+8
   \   0000013E   9EE0               B        ??NeuronsList_Refresh_10
   \                     ??NeuronsList_Refresh_12:
   \   00000140   6949               LDR      R1,??NeuronsList_Refresh_0+0x8  ;; TransQuality
   \   00000142   0978               LDRB     R1,[R1, #+0]
   \   00000144   2C00               MOVS     R4,R5
   \   00000146   2200               MOVS     R2,R4
   \   00000148   03E0               B        ??NeuronsList_Refresh_13
   \                     ??NeuronsList_Refresh_14:
   \   0000014A   1F21               MOVS     R1,#+31
   \                     ??NeuronsList_Refresh_15:
   \   0000014C   521C               ADDS     R2,R2,#+1
   \   0000014E   1206               LSLS     R2,R2,#+24
   \   00000150   120E               LSRS     R2,R2,#+24
   \                     ??NeuronsList_Refresh_13:
   \   00000152   1300               MOVS     R3,R2
   \   00000154   052B               CMP      R3,#+5
   \   00000156   0CD2               BCS      ??NeuronsList_Refresh_16
   \   00000158   0123               MOVS     R3,#+1
   \   0000015A   8B40               LSLS     R3,R3,R1
   \   0000015C   0340               ANDS     R3,R3,R0
   \   0000015E   02D0               BEQ      ??NeuronsList_Refresh_17
   \   00000160   641C               ADDS     R4,R4,#+1
   \   00000162   2406               LSLS     R4,R4,#+24
   \   00000164   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Refresh_17:
   \   00000166   0B00               MOVS     R3,R1
   \   00000168   EFD0               BEQ      ??NeuronsList_Refresh_14
   \   0000016A   491E               SUBS     R1,R1,#+1
   \   0000016C   0906               LSLS     R1,R1,#+24
   \   0000016E   090E               LSRS     R1,R1,#+24
   \   00000170   ECE7               B        ??NeuronsList_Refresh_15
   \                     ??NeuronsList_Refresh_16:
   \   00000172   019F               LDR      R7,[SP, #+4]
   \   00000174   3F06               LSLS     R7,R7,#+24
   \   00000176   3F0E               LSRS     R7,R7,#+24
   \   00000178   0123               MOVS     R3,#+1
   \   0000017A   1A00               MOVS     R2,R3
   \   0000017C   3900               MOVS     R1,R7
   \   0000017E   0F20               MOVS     R0,#+15
   \   00000180   ........           BL       H_line
   \   00000184   2000               MOVS     R0,R4
   \   00000186   0228               CMP      R0,#+2
   \   00000188   06D3               BCC      ??NeuronsList_Refresh_18
   \   0000018A   0123               MOVS     R3,#+1
   \   0000018C   0322               MOVS     R2,#+3
   \   0000018E   3900               MOVS     R1,R7
   \   00000190   891C               ADDS     R1,R1,#+2
   \   00000192   0E20               MOVS     R0,#+14
   \   00000194   ........           BL       H_line
   \                     ??NeuronsList_Refresh_18:
   \   00000198   2000               MOVS     R0,R4
   \   0000019A   0328               CMP      R0,#+3
   \   0000019C   06D3               BCC      ??NeuronsList_Refresh_19
   \   0000019E   0123               MOVS     R3,#+1
   \   000001A0   0522               MOVS     R2,#+5
   \   000001A2   3900               MOVS     R1,R7
   \   000001A4   091D               ADDS     R1,R1,#+4
   \   000001A6   0D20               MOVS     R0,#+13
   \   000001A8   ........           BL       H_line
   \                     ??NeuronsList_Refresh_19:
   \   000001AC   042C               CMP      R4,#+4
   \   000001AE   66D3               BCC      ??NeuronsList_Refresh_10
   \   000001B0   0123               MOVS     R3,#+1
   \   000001B2   0722               MOVS     R2,#+7
   \   000001B4   BF1D               ADDS     R7,R7,#+6
   \   000001B6   3900               MOVS     R1,R7
   \   000001B8   0C20               MOVS     R0,#+12
   \   000001BA   ........           BL       H_line
   \   000001BE   5EE0               B        ??NeuronsList_Refresh_10
   \                     ??NeuronsList_Refresh_11:
   \   000001C0   052A               CMP      R2,#+5
   \   000001C2   5CD0               BEQ      ??NeuronsList_Refresh_10
   \   000001C4   2100               MOVS     R1,R4
   \   000001C6   1BE0               B        ??NeuronsList_Refresh_20
   \                     ??NeuronsList_Refresh_21:
   \   000001C8   7F1C               ADDS     R7,R7,#+1
   \   000001CA   3F06               LSLS     R7,R7,#+24
   \   000001CC   3F0E               LSRS     R7,R7,#+24
   \   000001CE   012F               CMP      R7,#+1
   \   000001D0   02D1               BNE      ??NeuronsList_Refresh_22
   \   000001D2   641C               ADDS     R4,R4,#+1
   \   000001D4   2406               LSLS     R4,R4,#+24
   \   000001D6   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Refresh_22:
   \   000001D8   022F               CMP      R7,#+2
   \   000001DA   05D1               BNE      ??NeuronsList_Refresh_23
   \   000001DC   761C               ADDS     R6,R6,#+1
   \   000001DE   3606               LSLS     R6,R6,#+24
   \   000001E0   360E               LSRS     R6,R6,#+24
   \   000001E2   641E               SUBS     R4,R4,#+1
   \   000001E4   2406               LSLS     R4,R4,#+24
   \   000001E6   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Refresh_23:
   \   000001E8   032F               CMP      R7,#+3
   \   000001EA   06D1               BNE      ??NeuronsList_Refresh_24
   \   000001EC   6D1C               ADDS     R5,R5,#+1
   \   000001EE   2D06               LSLS     R5,R5,#+24
   \   000001F0   2D0E               LSRS     R5,R5,#+24
   \   000001F2   761E               SUBS     R6,R6,#+1
   \   000001F4   3606               LSLS     R6,R6,#+24
   \   000001F6   360E               LSRS     R6,R6,#+24
   \   000001F8   0027               MOVS     R7,#+0
   \                     ??NeuronsList_Refresh_24:
   \   000001FA   491C               ADDS     R1,R1,#+1
   \   000001FC   0906               LSLS     R1,R1,#+24
   \   000001FE   090E               LSRS     R1,R1,#+24
   \                     ??NeuronsList_Refresh_20:
   \   00000200   0A00               MOVS     R2,R1
   \   00000202   202A               CMP      R2,#+32
   \   00000204   05D2               BCS      ??NeuronsList_Refresh_25
   \   00000206   0122               MOVS     R2,#+1
   \   00000208   8A40               LSLS     R2,R2,R1
   \   0000020A   0240               ANDS     R2,R2,R0
   \   0000020C   DCD0               BEQ      ??NeuronsList_Refresh_21
   \   0000020E   0027               MOVS     R7,#+0
   \   00000210   F3E7               B        ??NeuronsList_Refresh_24
   \                     ??NeuronsList_Refresh_25:
   \   00000212   019F               LDR      R7,[SP, #+4]
   \   00000214   3F06               LSLS     R7,R7,#+24
   \   00000216   3F0E               LSRS     R7,R7,#+24
   \   00000218   0123               MOVS     R3,#+1
   \   0000021A   1A00               MOVS     R2,R3
   \   0000021C   3900               MOVS     R1,R7
   \   0000021E   0F20               MOVS     R0,#+15
   \   00000220   ........           BL       H_line
   \   00000224   2000               MOVS     R0,R4
   \   00000226   0D28               CMP      R0,#+13
   \   00000228   0CD2               BCS      ??NeuronsList_Refresh_26
   \   0000022A   3000               MOVS     R0,R6
   \   0000022C   0B28               CMP      R0,#+11
   \   0000022E   09D2               BCS      ??NeuronsList_Refresh_26
   \   00000230   2800               MOVS     R0,R5
   \   00000232   0628               CMP      R0,#+6
   \   00000234   06D2               BCS      ??NeuronsList_Refresh_26
   \   00000236   0123               MOVS     R3,#+1
   \   00000238   0322               MOVS     R2,#+3
   \   0000023A   3900               MOVS     R1,R7
   \   0000023C   891C               ADDS     R1,R1,#+2
   \   0000023E   0E20               MOVS     R0,#+14
   \   00000240   ........           BL       H_line
   \                     ??NeuronsList_Refresh_26:
   \   00000244   2000               MOVS     R0,R4
   \   00000246   0B28               CMP      R0,#+11
   \   00000248   0CD2               BCS      ??NeuronsList_Refresh_27
   \   0000024A   3000               MOVS     R0,R6
   \   0000024C   0728               CMP      R0,#+7
   \   0000024E   09D2               BCS      ??NeuronsList_Refresh_27
   \   00000250   2800               MOVS     R0,R5
   \   00000252   0228               CMP      R0,#+2
   \   00000254   06D2               BCS      ??NeuronsList_Refresh_27
   \   00000256   0123               MOVS     R3,#+1
   \   00000258   0522               MOVS     R2,#+5
   \   0000025A   3900               MOVS     R1,R7
   \   0000025C   091D               ADDS     R1,R1,#+4
   \   0000025E   0D20               MOVS     R0,#+13
   \   00000260   ........           BL       H_line
   \                     ??NeuronsList_Refresh_27:
   \   00000264   052C               CMP      R4,#+5
   \   00000266   0AD2               BCS      ??NeuronsList_Refresh_10
   \   00000268   022E               CMP      R6,#+2
   \   0000026A   08D2               BCS      ??NeuronsList_Refresh_10
   \   0000026C   002D               CMP      R5,#+0
   \   0000026E   06D1               BNE      ??NeuronsList_Refresh_10
   \   00000270   0123               MOVS     R3,#+1
   \   00000272   0722               MOVS     R2,#+7
   \   00000274   BF1D               ADDS     R7,R7,#+6
   \   00000276   3900               MOVS     R1,R7
   \   00000278   0C20               MOVS     R0,#+12
   \   0000027A   ........           BL       H_line
   \                     ??NeuronsList_Refresh_10:
   \   0000027E   1B48               LDR      R0,??NeuronsList_Refresh_0+0xC  ;; TextToChangeLength + 6
   \   00000280   0078               LDRB     R0,[R0, #+0]
   \   00000282   0399               LDR      R1,[SP, #+12]
   \   00000284   401A               SUBS     R0,R0,R1
   \   00000286   0C21               MOVS     R1,#+12
   \   00000288   4143               MULS     R1,R0,R1
   \   0000028A   194A               LDR      R2,??NeuronsList_Refresh_0+0x10  ;; NeuronsList
   \   0000028C   5118               ADDS     R1,R2,R1
   \   0000028E   3C31               ADDS     R1,R1,#+60
   \   00000290   0978               LDRB     R1,[R1, #+0]
   \   00000292   0529               CMP      R1,#+5
   \   00000294   00D0               BEQ      .+4
   \   00000296   FBE6               B        ??NeuronsList_Refresh_9
   \   00000298   1149               LDR      R1,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000029A   0978               LDRB     R1,[R1, #+0]
   \   0000029C   0A29               CMP      R1,#+10
   \   0000029E   17D2               BCS      ??NeuronsList_Refresh_28
   \   000002A0   144A               LDR      R2,??NeuronsList_Refresh_0+0x14  ;; MainStage
   \   000002A2   9221               MOVS     R1,#+146
   \   000002A4   4900               LSLS     R1,R1,#+1        ;; #+292
   \   000002A6   1623               MOVS     R3,#+22
   \   000002A8   4343               MULS     R3,R0,R3
   \   000002AA   D218               ADDS     R2,R2,R3
   \   000002AC   515A               LDRH     R1,[R2, R1]
   \   000002AE   0A04               LSLS     R2,R1,#+16
   \   000002B0   0ED5               BPL      ??NeuronsList_Refresh_28
   \   000002B2   114A               LDR      R2,??NeuronsList_Refresh_0+0x18  ;; 0x8aaa
   \   000002B4   9142               CMP      R1,R2
   \   000002B6   0BD0               BEQ      ??NeuronsList_Refresh_28
   \   000002B8   82B0               SUB      SP,SP,#+8
   \   000002BA   0920               MOVS     R0,#+9
   \   000002BC   0090               STR      R0,[SP, #+0]
   \   000002BE   0623               MOVS     R3,#+6
   \   000002C0   02A8               ADD      R0,SP,#+8
   \   000002C2   027A               LDRB     R2,[R0, #+8]
   \   000002C4   0C21               MOVS     R1,#+12
   \   000002C6   0D48               LDR      R0,??NeuronsList_Refresh_0+0x1C  ;; BateriaWyladowana
   \   000002C8   ........           BL       CopyToCanvasPoint
   \   000002CC   02B0               ADD      SP,SP,#+8
   \   000002CE   DFE6               B        ??NeuronsList_Refresh_9
   \                     ??NeuronsList_Refresh_28:
   \   000002D0   0024               MOVS     R4,#+0
   \   000002D2   2100               MOVS     R1,R4
   \   000002D4   B4E6               B        ??NeuronsList_Refresh_7
   8507                            }
   8508                        
   8509                        }
   8510                      
   8511                        
   8512                        #ifdef  DIRECT_Q_MESURE 
   8513                        static char Div=0;
   8514                      
   8515                        if (Div<10)
   8516                        {
   8517                         Div++; 
   8518                        }else{
   8519                          Div=0;
   8520                        
   8521                              char txt[6];
   8522                              sprintf(txt, "%d",  TransQuality.DirectkMensur[(5-i)+NeuronsListLine]);
   8523                              Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   8524                        }  
   8525                         #endif
   8526                      
   8527                        
   8528                    }
   8529                }
   8530                
   8531                
   8532              
   8533             }//________________________________________________________________________
   \                     ??NeuronsList_Refresh_3:
   \   000002D6   05B0               ADD      SP,SP,#+20
   \   000002D8   F0BC               POP      {R4-R7}
   \   000002DA   01BC               POP      {R0}
   \   000002DC   0047               BX       R0               ;; return
   \   000002DE   C046               Nop      
   \                     ??NeuronsList_Refresh_0:
   \   000002E0   ........           DC32     ??Dzielnik20
   \   000002E4   ........           DC32     TextToChangeLength + 30
   \   000002E8   ........           DC32     TransQuality
   \   000002EC   ........           DC32     TextToChangeLength + 6
   \   000002F0   ........           DC32     NeuronsList
   \   000002F4   ........           DC32     MainStage
   \   000002F8   AA8A0000           DC32     0x8aaa
   \   000002FC   ........           DC32     BateriaWyladowana

   \                                 In section .bss, align 1
   \                     ??Dzielnik20:
   \   00000000                      DS8 1
   8534          
   8535          
   8536          
   8537              
   8538                
   8539                

   \                                 In section Debug.txt, align 4, keep-with-next
   8540          void NeuronNrChange_Paint( int *ValToChange)
   8541                { 
   \                     NeuronNrChange_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8542                  List_Paint(" ID ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   4DA0               ADR      R0,??NeuronNrChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   4A48               LDR      R0,??NeuronNrChange_Paint_0+0x4  ;; `?<Constant " ID ">`
   \   0000001E   ........           BL       List_Paint
   \   00000022   0AB0               ADD      SP,SP,#+40
   \   00000024   4948               LDR      R0,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0BD1               BNE      ??NeuronNrChange_Paint_1
   8543                  
   8544             
   8545                  if (VCTT_ill==0) for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   0000002C   0024               MOVS     R4,#+0
   \   0000002E   06E0               B        ??NeuronNrChange_Paint_2
   \                     ??NeuronNrChange_Paint_3:
   \   00000030   464A               LDR      R2,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000032   5118               ADDS     R1,R2,R1
   \   00000034   2200               MOVS     R2,R4
   \   00000036   0A71               STRB     R2,[R1, #+4]
   \   00000038   401C               ADDS     R0,R0,#+1
   \   0000003A   0006               LSLS     R0,R0,#+24
   \   0000003C   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Paint_2:
   \   0000003E   0100               MOVS     R1,R0
   \   00000040   0829               CMP      R1,#+8
   \   00000042   F5D3               BCC      ??NeuronNrChange_Paint_3
   8546                  
   8547                  H_line(12,106,39,1);
   \                     ??NeuronNrChange_Paint_1:
   \   00000044   0123               MOVS     R3,#+1
   \   00000046   2722               MOVS     R2,#+39
   \   00000048   6A21               MOVS     R1,#+106
   \   0000004A   0C20               MOVS     R0,#+12
   \   0000004C   ........           BL       H_line
   8548                  H_line(12,96,39,1);
   \   00000050   0123               MOVS     R3,#+1
   \   00000052   2722               MOVS     R2,#+39
   \   00000054   6021               MOVS     R1,#+96
   \   00000056   0C20               MOVS     R0,#+12
   \   00000058   ........           BL       H_line
   8549                  V_line(11,97,9,1); 
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   0922               MOVS     R2,#+9
   \   00000060   6121               MOVS     R1,#+97
   \   00000062   0B20               MOVS     R0,#+11
   \   00000064   ........           BL       V_line
   8550                  V_line(50,97,9,1); 
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   0922               MOVS     R2,#+9
   \   0000006C   6121               MOVS     R1,#+97
   \   0000006E   3220               MOVS     R0,#+50
   \   00000070   ........           BL       V_line
   8551          
   8552          
   8553                  
   8554                  Label(ValueChangeTxtTmp,1,48,97,8,34,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   8021               MOVS     R1,#+128
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   2221               MOVS     R1,#+34
   \   00000080   0820               MOVS     R0,#+8
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   6123               MOVS     R3,#+97
   \   00000086   3022               MOVS     R2,#+48
   \   00000088   0121               MOVS     R1,#+1
   \   0000008A   3148               LDR      R0,??NeuronNrChange_Paint_0+0xC  ;; VCTT_ill + 4
   \   0000008C   ........           BL       Label
   \   00000090   06B0               ADD      SP,SP,#+24
   8555                                
   8556          
   8557                  
   8558                  char txt[2];
   8559                  txt[1]=0;
   \   00000092   0024               MOVS     R4,#+0
   \   00000094   6846               MOV      R0,SP
   \   00000096   2100               MOVS     R1,R4
   \   00000098   4170               STRB     R1,[R0, #+1]
   8560                  char ind=0;
   \   0000009A   2700               MOVS     R7,R4
   8561                  for (char j=0; j<3; j++)
   \   0000009C   2500               MOVS     R5,R4
   \   0000009E   25E0               B        ??NeuronNrChange_Paint_4
   8562                    for (char i=0; i<3; i++)
   8563                    {
   8564                      ind++;
   \                     ??NeuronNrChange_Paint_5:
   \   000000A0   7F1C               ADDS     R7,R7,#+1
   \   000000A2   3F06               LSLS     R7,R7,#+24
   \   000000A4   3F0E               LSRS     R7,R7,#+24
   8565                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   000000A6   0122               MOVS     R2,#+1
   \   000000A8   6946               MOV      R1,SP
   \   000000AA   3800               MOVS     R0,R7
   \   000000AC   ........           BL       CharToStr
   8566                      Button(txt,2+20*i,76-(19*j),18,17);
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   1120               MOVS     R0,#+17
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   1223               MOVS     R3,#+18
   \   000000B8   4C20               MOVS     R0,#+76
   \   000000BA   2900               MOVS     R1,R5
   \   000000BC   1322               MOVS     R2,#+19
   \   000000BE   5143               MULS     R1,R2,R1
   \   000000C0   421A               SUBS     R2,R0,R1
   \   000000C2   1206               LSLS     R2,R2,#+24
   \   000000C4   120E               LSRS     R2,R2,#+24
   \   000000C6   3100               MOVS     R1,R6
   \   000000C8   1420               MOVS     R0,#+20
   \   000000CA   4143               MULS     R1,R0,R1
   \   000000CC   891C               ADDS     R1,R1,#+2
   \   000000CE   0906               LSLS     R1,R1,#+24
   \   000000D0   090E               LSRS     R1,R1,#+24
   \   000000D2   02A8               ADD      R0,SP,#+8
   \   000000D4   ........           BL       Button
   \   000000D8   02B0               ADD      SP,SP,#+8
   8567                    }
   \   000000DA   761C               ADDS     R6,R6,#+1
   \   000000DC   3606               LSLS     R6,R6,#+24
   \   000000DE   360E               LSRS     R6,R6,#+24
   \                     ??NeuronNrChange_Paint_6:
   \   000000E0   3000               MOVS     R0,R6
   \   000000E2   0328               CMP      R0,#+3
   \   000000E4   DCD3               BCC      ??NeuronNrChange_Paint_5
   \   000000E6   6D1C               ADDS     R5,R5,#+1
   \   000000E8   2D06               LSLS     R5,R5,#+24
   \   000000EA   2D0E               LSRS     R5,R5,#+24
   \                     ??NeuronNrChange_Paint_4:
   \   000000EC   2800               MOVS     R0,R5
   \   000000EE   0328               CMP      R0,#+3
   \   000000F0   01D2               BCS      ??NeuronNrChange_Paint_7
   \   000000F2   2600               MOVS     R6,R4
   \   000000F4   F4E7               B        ??NeuronNrChange_Paint_6
   8568                  //Button(" ",2+20*0,76-(19*3),18,17);
   8569                  Button("0",2+20*1,76-(19*3),18,17);
   \                     ??NeuronNrChange_Paint_7:
   \   000000F6   82B0               SUB      SP,SP,#+8
   \   000000F8   1120               MOVS     R0,#+17
   \   000000FA   0090               STR      R0,[SP, #+0]
   \   000000FC   1223               MOVS     R3,#+18
   \   000000FE   1322               MOVS     R2,#+19
   \   00000100   1621               MOVS     R1,#+22
   \   00000102   14A0               ADR      R0,??NeuronNrChange_Paint_0+0x10  ;; 0x30, 0x00, 0x00, 0x00
   \   00000104   ........           BL       Button
   \   00000108   02B0               ADD      SP,SP,#+8
   8570                  //Button("-",2+20*2,76-(19*3),18,17);
   8571                  
   8572                  
   8573                  Button("C ",3,4,17,13);
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0D20               MOVS     R0,#+13
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   1123               MOVS     R3,#+17
   \   00000112   0422               MOVS     R2,#+4
   \   00000114   0321               MOVS     R1,#+3
   \   00000116   10A0               ADR      R0,??NeuronNrChange_Paint_0+0x14  ;; 0x43, 0x20, 0x00, 0x00
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   8574                  if ((VCTT_ill==0) || (VCTT_ill>6)) Button("Ok ",22,4,38,13);
   \   0000011E   0B48               LDR      R0,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000120   0078               LDRB     R0,[R0, #+0]
   \   00000122   0028               CMP      R0,#+0
   \   00000124   01D0               BEQ      ??NeuronNrChange_Paint_8
   \   00000126   0728               CMP      R0,#+7
   \   00000128   09D3               BCC      ??NeuronNrChange_Paint_9
   \                     ??NeuronNrChange_Paint_8:
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   0D20               MOVS     R0,#+13
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   2623               MOVS     R3,#+38
   \   00000132   0422               MOVS     R2,#+4
   \   00000134   1621               MOVS     R1,#+22
   \   00000136   09A0               ADR      R0,??NeuronNrChange_Paint_0+0x18  ;; "Ok "
   \   00000138   ........           BL       Button
   \   0000013C   02B0               ADD      SP,SP,#+8
   8575                }
   \                     ??NeuronNrChange_Paint_9:
   \   0000013E   F8BC               POP      {R3-R7}
   \   00000140   01BC               POP      {R0}
   \   00000142   0047               BX       R0               ;; return
   \                     ??NeuronNrChange_Paint_0:
   \   00000144   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000148   ........           DC32     `?<Constant " ID ">`
   \   0000014C   ........           DC32     VCTT_ill
   \   00000150   ........           DC32     VCTT_ill + 4
   \   00000154   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000158   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   0000015C   4F6B2000           DC8      "Ok "
   8576          
   8577          
   8578          

   \                                 In section Debug.txt, align 4, keep-with-next
   8579          void NeuronNrChange_Evant(int *ValToChange)
   8580                { 
   \                     NeuronNrChange_Evant:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   8581                 int ValueTmp=0; 
   \   00000004   0024               MOVS     R4,#+0
   \   00000006   0294               STR      R4,[SP, #+8]
   8582                 char ind=0;
   \   00000008   2600               MOVS     R6,R4
   8583                 char txt[2];
   8584                 char Refresh=0;
   \   0000000A   6846               MOV      R0,SP
   \   0000000C   2100               MOVS     R1,R4
   \   0000000E   0170               STRB     R1,[R0, #+0]
   8585           
   8586                 
   8587                 
   8588                 
   8589          
   8590                 txt[1]=0;
   \   00000010   03A8               ADD      R0,SP,#+12
   \   00000012   4170               STRB     R1,[R0, #+1]
   8591                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000014   8148               LDR      R0,??NeuronNrChange_Evant_0  ;; X_up
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   2F28               CMP      R0,#+47
   \   0000001A   30DB               BLT      ??NeuronNrChange_Evant_1
   \   0000001C   3F28               CMP      R0,#+63
   \   0000001E   2EDA               BGE      ??NeuronNrChange_Evant_1
   \   00000020   7F48               LDR      R0,??NeuronNrChange_Evant_0+0x4  ;; Y_up
   \   00000022   405E               LDRSH    R0,[R0, R1]
   \   00000024   7128               CMP      R0,#+113
   \   00000026   2ADB               BLT      ??NeuronNrChange_Evant_1
   \   00000028   7F28               CMP      R0,#+127
   \   0000002A   28DA               BGE      ??NeuronNrChange_Evant_1
   8592                  {
   8593                    
   8594                       for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   0000002C   2000               MOVS     R0,R4
   \   0000002E   06E0               B        ??NeuronNrChange_Evant_2
   \                     ??NeuronNrChange_Evant_3:
   \   00000030   7C4A               LDR      R2,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   00000032   5118               ADDS     R1,R2,R1
   \   00000034   2200               MOVS     R2,R4
   \   00000036   0A71               STRB     R2,[R1, #+4]
   \   00000038   401C               ADDS     R0,R0,#+1
   \   0000003A   0006               LSLS     R0,R0,#+24
   \   0000003C   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Evant_2:
   \   0000003E   0100               MOVS     R1,R0
   \   00000040   0829               CMP      R1,#+8
   \   00000042   F5D3               BCC      ??NeuronNrChange_Evant_3
   8595                          ValueTmp=0;
   8596                          VCTT_ill=0;
   \   00000044   774D               LDR      R5,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   00000046   2000               MOVS     R0,R4
   \   00000048   2870               STRB     R0,[R5, #+0]
   8597                          VCTT_point_flag=0;
   \   0000004A   6C70               STRB     R4,[R5, #+1]
   8598                     
   8599                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000004C   7648               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; 0x13d7e9
   \   0000004E   0078               LDRB     R0,[R0, #+0]
   \   00000050   0028               CMP      R0,#+0
   \   00000052   0AD1               BNE      ??NeuronNrChange_Evant_4
   \   00000054   7548               LDR      R0,??NeuronNrChange_Evant_0+0x10  ;; 0xfffff430
   \   00000056   8021               MOVS     R1,#+128
   \   00000058   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000005A   0160               STR      R1,[R0, #+0]
   \   0000005C   744A               LDR      R2,??NeuronNrChange_Evant_0+0x14  ;; ButtonBipCounter
   \   0000005E   7548               LDR      R0,??NeuronNrChange_Evant_0+0x18  ;; g_counter
   \   00000060   03C8               LDM      R0!,{R0,R1}
   \   00000062   0023               MOVS     R3,#+0
   \   00000064   0830               ADDS     R0,R0,#+8
   \   00000066   5941               ADCS     R1,R1,R3
   \   00000068   03C2               STM      R2!,{R0,R1}
   8600                          
   8601                          
   8602          
   8603                      MenuLevel=(MenuLevel/10);
   \                     ??NeuronNrChange_Evant_4:
   \   0000006A   734F               LDR      R7,??NeuronNrChange_Evant_0+0x1C  ;; TextToChangeLength
   \   0000006C   386D               LDR      R0,[R7, #+80]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   3865               STR      R0,[R7, #+80]
   8604                      Refresh=1;
   \   00000076   6846               MOV      R0,SP
   \   00000078   0121               MOVS     R1,#+1
   \   0000007A   0170               STRB     R1,[R0, #+0]
   \   0000007C   C4E0               B        ??NeuronNrChange_Evant_5
   8605                  } else {
   8606                    
   8607                           
   8608          
   8609                   
   8610                       
   8611                    for (char j=0; j<3; j++)
   \                     ??NeuronNrChange_Evant_1:
   \   0000007E   0194               STR      R4,[SP, #+4]
   \   00000080   38E0               B        ??NeuronNrChange_Evant_6
   8612                    {
   8613                    for (char i=0; i<3; i++)
   8614                    {
   8615                      ind++;
   \                     ??NeuronNrChange_Evant_7:
   \   00000082   761C               ADDS     R6,R6,#+1
   \   00000084   3606               LSLS     R6,R6,#+24
   \   00000086   360E               LSRS     R6,R6,#+24
   8616                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   00000088   0122               MOVS     R2,#+1
   \   0000008A   03A9               ADD      R1,SP,#+12
   \   0000008C   3000               MOVS     R0,R6
   \   0000008E   ........           BL       CharToStr
   8617                      if ((Button(txt,2+20*i,76-(19*j),18,17)==1) && (VCTT_ill<7)  ){ValueChangeTxtTmp[VCTT_ill++]=48+ind;   Refresh=1;}
   \   00000092   82B0               SUB      SP,SP,#+8
   \   00000094   1120               MOVS     R0,#+17
   \   00000096   0090               STR      R0,[SP, #+0]
   \   00000098   1223               MOVS     R3,#+18
   \   0000009A   4C20               MOVS     R0,#+76
   \   0000009C   0399               LDR      R1,[SP, #+12]
   \   0000009E   0906               LSLS     R1,R1,#+24
   \   000000A0   090E               LSRS     R1,R1,#+24
   \   000000A2   1322               MOVS     R2,#+19
   \   000000A4   5143               MULS     R1,R2,R1
   \   000000A6   421A               SUBS     R2,R0,R1
   \   000000A8   1206               LSLS     R2,R2,#+24
   \   000000AA   120E               LSRS     R2,R2,#+24
   \   000000AC   3900               MOVS     R1,R7
   \   000000AE   1420               MOVS     R0,#+20
   \   000000B0   4143               MULS     R1,R0,R1
   \   000000B2   891C               ADDS     R1,R1,#+2
   \   000000B4   0906               LSLS     R1,R1,#+24
   \   000000B6   090E               LSRS     R1,R1,#+24
   \   000000B8   05A8               ADD      R0,SP,#+20
   \   000000BA   ........           BL       Button
   \   000000BE   02B0               ADD      SP,SP,#+8
   \   000000C0   0128               CMP      R0,#+1
   \   000000C2   0CD1               BNE      ??NeuronNrChange_Evant_8
   \   000000C4   574D               LDR      R5,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   000000C6   2878               LDRB     R0,[R5, #+0]
   \   000000C8   0728               CMP      R0,#+7
   \   000000CA   08D2               BCS      ??NeuronNrChange_Evant_8
   \   000000CC   2918               ADDS     R1,R5,R0
   \   000000CE   3200               MOVS     R2,R6
   \   000000D0   3032               ADDS     R2,R2,#+48
   \   000000D2   0A71               STRB     R2,[R1, #+4]
   \   000000D4   401C               ADDS     R0,R0,#+1
   \   000000D6   2870               STRB     R0,[R5, #+0]
   \   000000D8   6846               MOV      R0,SP
   \   000000DA   0121               MOVS     R1,#+1
   \   000000DC   0170               STRB     R1,[R0, #+0]
   8618                      
   8619                     }
   \                     ??NeuronNrChange_Evant_8:
   \   000000DE   7F1C               ADDS     R7,R7,#+1
   \   000000E0   3F06               LSLS     R7,R7,#+24
   \   000000E2   3F0E               LSRS     R7,R7,#+24
   \                     ??NeuronNrChange_Evant_9:
   \   000000E4   3800               MOVS     R0,R7
   \   000000E6   0328               CMP      R0,#+3
   \   000000E8   CBD3               BCC      ??NeuronNrChange_Evant_7
   \   000000EA   0198               LDR      R0,[SP, #+4]
   \   000000EC   401C               ADDS     R0,R0,#+1
   \   000000EE   0006               LSLS     R0,R0,#+24
   \   000000F0   000E               LSRS     R0,R0,#+24
   \   000000F2   0190               STR      R0,[SP, #+4]
   \                     ??NeuronNrChange_Evant_6:
   \   000000F4   0198               LDR      R0,[SP, #+4]
   \   000000F6   0006               LSLS     R0,R0,#+24
   \   000000F8   000E               LSRS     R0,R0,#+24
   \   000000FA   0328               CMP      R0,#+3
   \   000000FC   01D2               BCS      ??NeuronNrChange_Evant_10
   \   000000FE   2700               MOVS     R7,R4
   \   00000100   F0E7               B        ??NeuronNrChange_Evant_9
   8620                    }
   8621          
   8622                     if ((Button("0",2+20*1,76-(19*3),18,17)==1) && (VCTT_ill<7) ) {ValueChangeTxtTmp[VCTT_ill++]=48;    Refresh=1;}
   \                     ??NeuronNrChange_Evant_10:
   \   00000102   484D               LDR      R5,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   1120               MOVS     R0,#+17
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   1223               MOVS     R3,#+18
   \   0000010C   1322               MOVS     R2,#+19
   \   0000010E   1621               MOVS     R1,#+22
   \   00000110   4AA0               ADR      R0,??NeuronNrChange_Evant_0+0x20  ;; 0x30, 0x00, 0x00, 0x00
   \   00000112   ........           BL       Button
   \   00000116   02B0               ADD      SP,SP,#+8
   \   00000118   0128               CMP      R0,#+1
   \   0000011A   0AD1               BNE      ??NeuronNrChange_Evant_11
   \   0000011C   2878               LDRB     R0,[R5, #+0]
   \   0000011E   0728               CMP      R0,#+7
   \   00000120   07D2               BCS      ??NeuronNrChange_Evant_11
   \   00000122   2918               ADDS     R1,R5,R0
   \   00000124   3022               MOVS     R2,#+48
   \   00000126   0A71               STRB     R2,[R1, #+4]
   \   00000128   401C               ADDS     R0,R0,#+1
   \   0000012A   2870               STRB     R0,[R5, #+0]
   \   0000012C   6846               MOV      R0,SP
   \   0000012E   0121               MOVS     R1,#+1
   \   00000130   0170               STRB     R1,[R0, #+0]
   8623          
   8624                      
   8625                      
   8626                  
   8627                      
   8628                      if (Button("C ",3,4,17,13)==1)
   \                     ??NeuronNrChange_Evant_11:
   \   00000132   82B0               SUB      SP,SP,#+8
   \   00000134   0D20               MOVS     R0,#+13
   \   00000136   0090               STR      R0,[SP, #+0]
   \   00000138   1123               MOVS     R3,#+17
   \   0000013A   0422               MOVS     R2,#+4
   \   0000013C   0321               MOVS     R1,#+3
   \   0000013E   40A0               ADR      R0,??NeuronNrChange_Evant_0+0x24  ;; 0x43, 0x20, 0x00, 0x00
   \   00000140   ........           BL       Button
   \   00000144   02B0               ADD      SP,SP,#+8
   \   00000146   0128               CMP      R0,#+1
   \   00000148   0BD1               BNE      ??NeuronNrChange_Evant_12
   8629                      {
   8630                        if (VCTT_ill) VCTT_ill--;
   \   0000014A   2878               LDRB     R0,[R5, #+0]
   \   0000014C   0028               CMP      R0,#+0
   \   0000014E   01D0               BEQ      ??NeuronNrChange_Evant_13
   \   00000150   401E               SUBS     R0,R0,#+1
   \   00000152   2870               STRB     R0,[R5, #+0]
   8631                        ValueChangeTxtTmp[VCTT_ill]=0;
   \                     ??NeuronNrChange_Evant_13:
   \   00000154   2878               LDRB     R0,[R5, #+0]
   \   00000156   2818               ADDS     R0,R5,R0
   \   00000158   2100               MOVS     R1,R4
   \   0000015A   0171               STRB     R1,[R0, #+4]
   8632          
   8633                        Refresh=1;
   \   0000015C   6846               MOV      R0,SP
   \   0000015E   0121               MOVS     R1,#+1
   \   00000160   0170               STRB     R1,[R0, #+0]
   8634                      }
   8635                    
   8636                  
   8637                      int mnz=1;     
   \                     ??NeuronNrChange_Evant_12:
   \   00000162   0126               MOVS     R6,#+1
   \   00000164   3700               MOVS     R7,R6
   8638                      char prs=0;
   8639          
   8640                      //zapamiêtanie wartoci
   8641                      if ((VCTT_ill==0) || (VCTT_ill>6))
   \   00000166   2878               LDRB     R0,[R5, #+0]
   \   00000168   0028               CMP      R0,#+0
   \   0000016A   01D0               BEQ      ??NeuronNrChange_Evant_14
   \   0000016C   0728               CMP      R0,#+7
   \   0000016E   4BD3               BCC      ??NeuronNrChange_Evant_5
   8642                      if (Button("Ok ",22,4,38,13)==1)
   \                     ??NeuronNrChange_Evant_14:
   \   00000170   82B0               SUB      SP,SP,#+8
   \   00000172   0D20               MOVS     R0,#+13
   \   00000174   0090               STR      R0,[SP, #+0]
   \   00000176   2623               MOVS     R3,#+38
   \   00000178   0422               MOVS     R2,#+4
   \   0000017A   1621               MOVS     R1,#+22
   \   0000017C   31A0               ADR      R0,??NeuronNrChange_Evant_0+0x28  ;; "Ok "
   \   0000017E   ........           BL       Button
   \   00000182   02B0               ADD      SP,SP,#+8
   \   00000184   0128               CMP      R0,#+1
   \   00000186   3FD1               BNE      ??NeuronNrChange_Evant_5
   8643                      {
   8644                        
   8645          
   8646                          for (char i=0; i<VCTT_ill-prs; i++)
   \   00000188   2000               MOVS     R0,R4
   \   0000018A   0DE0               B        ??NeuronNrChange_Evant_15
   8647                          {
   8648                             ValueTmp+=(ValueChangeTxtTmp[VCTT_ill-i-1]-48)*mnz;
   \                     ??NeuronNrChange_Evant_16:
   \   0000018C   0299               LDR      R1,[SP, #+8]
   \   0000018E   0300               MOVS     R3,R0
   \   00000190   D21A               SUBS     R2,R2,R3
   \   00000192   AA18               ADDS     R2,R5,R2
   \   00000194   D278               LDRB     R2,[R2, #+3]
   \   00000196   303A               SUBS     R2,R2,#+48
   \   00000198   7A43               MULS     R2,R7,R2
   \   0000019A   8918               ADDS     R1,R1,R2
   \   0000019C   0291               STR      R1,[SP, #+8]
   8649                             mnz*=10;
   \   0000019E   0A21               MOVS     R1,#+10
   \   000001A0   4F43               MULS     R7,R1,R7
   8650                          }
   \   000001A2   401C               ADDS     R0,R0,#+1
   \   000001A4   0006               LSLS     R0,R0,#+24
   \   000001A6   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Evant_15:
   \   000001A8   2A78               LDRB     R2,[R5, #+0]
   \   000001AA   0100               MOVS     R1,R0
   \   000001AC   9142               CMP      R1,R2
   \   000001AE   EDD3               BCC      ??NeuronNrChange_Evant_16
   8651                          
   8652                          TransQuality.Mensur[NeuronNrChange-1]=0;
   \   000001B0   214F               LDR      R7,??NeuronNrChange_Evant_0+0x1C  ;; TextToChangeLength
   \   000001B2   F878               LDRB     R0,[R7, #+3]
   \   000001B4   2449               LDR      R1,??NeuronNrChange_Evant_0+0x2C  ;; TransQuality
   \   000001B6   8200               LSLS     R2,R0,#+2
   \   000001B8   8A18               ADDS     R2,R1,R2
   \   000001BA   9464               STR      R4,[R2, #+72]
   8653                          TransQuality.SlowMensur[NeuronNrChange-1]=0;
   \   000001BC   0818               ADDS     R0,R1,R0
   \   000001BE   2100               MOVS     R1,R4
   \   000001C0   8170               STRB     R1,[R0, #+2]
   8654                          TransQuality.QuickMensur[NeuronNrChange-1]=0;
   \   000001C2   2530               ADDS     R0,R0,#+37
   \   000001C4   0170               STRB     R1,[R0, #+0]
   8655                          
   8656                          ProgramChange=1;
   \   000001C6   3000               MOVS     R0,R6
   \   000001C8   3872               STRB     R0,[R7, #+8]
   8657                          MenuLevel/=10; 
   \   000001CA   386D               LDR      R0,[R7, #+80]
   \   000001CC   0A21               MOVS     R1,#+10
   \   000001CE   ........           BL       __aeabi_idivmod
   \   000001D2   3865               STR      R0,[R7, #+80]
   8658                           
   8659                          *ValToChange=ValueTmp;
   \   000001D4   0498               LDR      R0,[SP, #+16]
   \   000001D6   0299               LDR      R1,[SP, #+8]
   \   000001D8   0160               STR      R1,[R0, #+0]
   8660                          
   8661                          for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   000001DA   2000               MOVS     R0,R4
   \   000001DC   2200               MOVS     R2,R4
   \   000001DE   04E0               B        ??NeuronNrChange_Evant_17
   \                     ??NeuronNrChange_Evant_18:
   \   000001E0   6918               ADDS     R1,R5,R1
   \   000001E2   0A71               STRB     R2,[R1, #+4]
   \   000001E4   401C               ADDS     R0,R0,#+1
   \   000001E6   0006               LSLS     R0,R0,#+24
   \   000001E8   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Evant_17:
   \   000001EA   0100               MOVS     R1,R0
   \   000001EC   0829               CMP      R1,#+8
   \   000001EE   F7D3               BCC      ??NeuronNrChange_Evant_18
   8662                          ValueTmp=0;
   8663                          VCTT_ill=0;
   \   000001F0   2000               MOVS     R0,R4
   \   000001F2   2870               STRB     R0,[R5, #+0]
   8664                          VCTT_point_flag=0;
   \   000001F4   6C70               STRB     R4,[R5, #+1]
   8665                          
   8666                        
   8667                        
   8668                        
   8669                        Refresh=1;
   \   000001F6   6846               MOV      R0,SP
   \   000001F8   0670               STRB     R6,[R0, #+0]
   8670                        RefreshNeuronsList(&gProg);
   \   000001FA   144C               LDR      R4,??NeuronNrChange_Evant_0+0x30  ;; gProg
   \   000001FC   2000               MOVS     R0,R4
   \   000001FE   ........           BL       RefreshNeuronsList
   8671                        SetTask(&gProg);
   \   00000202   2000               MOVS     R0,R4
   \   00000204   ........           BL       SetTask
   8672                        
   8673                      }
   8674                 
   8675                    
   8676                  }
   8677                  
   8678                  
   8679                  if (Refresh==1) MenuPaint();
   \                     ??NeuronNrChange_Evant_5:
   \   00000208   6846               MOV      R0,SP
   \   0000020A   0078               LDRB     R0,[R0, #+0]
   \   0000020C   0128               CMP      R0,#+1
   \   0000020E   01D1               BNE      ??NeuronNrChange_Evant_19
   \   00000210   ........           BL       MenuPaint
   8680                  
   8681          }
   \                     ??NeuronNrChange_Evant_19:
   \   00000214   05B0               ADD      SP,SP,#+20
   \   00000216   F0BC               POP      {R4-R7}
   \   00000218   01BC               POP      {R0}
   \   0000021A   0047               BX       R0               ;; return
   \                     ??NeuronNrChange_Evant_0:
   \   0000021C   ........           DC32     X_up
   \   00000220   ........           DC32     Y_up
   \   00000224   ........           DC32     VCTT_ill
   \   00000228   E9D71300           DC32     0x13d7e9
   \   0000022C   30F4FFFF           DC32     0xfffff430
   \   00000230   ........           DC32     ButtonBipCounter
   \   00000234   ........           DC32     g_counter
   \   00000238   ........           DC32     TextToChangeLength
   \   0000023C   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000240   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   00000244   4F6B2000           DC8      "Ok "
   \   00000248   ........           DC32     TransQuality
   \   0000024C   ........           DC32     gProg
   8682          
   8683          
   8684          
   8685          
   8686          

   \                                 In section Debug.txt, align 4, keep-with-next
   8687          void Info_Paint(void)
   8688          {          
   \                     Info_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   8689                 char txt[8];
   8690                 char labsize;
   8691                 List_Paint("Info ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   644C               LDR      R4,??Info_Paint_0  ;; `?<Constant "Info ">`
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   62A0               ADR      R0,??Info_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   8692          
   8693                 Label("Model: ",0,3,100,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   8021               MOVS     R1,#+128
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   3A21               MOVS     R1,#+58
   \   00000032   0F20               MOVS     R0,#+15
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   6423               MOVS     R3,#+100
   \   00000038   0322               MOVS     R2,#+3
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   2000               MOVS     R0,R4
   \   0000003E   3830               ADDS     R0,R0,#+56
   \   00000040   ........           BL       Label
   \   00000044   06B0               ADD      SP,SP,#+24
   8694                 Label((char*)&identyfikacja,0,10,89,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   8021               MOVS     R1,#+128
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   2821               MOVS     R1,#+40
   \   00000052   0F20               MOVS     R0,#+15
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   5923               MOVS     R3,#+89
   \   00000058   0A22               MOVS     R2,#+10
   \   0000005A   0021               MOVS     R1,#+0
   \   0000005C   4F48               LDR      R0,??Info_Paint_0+0x8  ;; identyfikacja
   \   0000005E   ........           BL       Label
   \   00000062   06B0               ADD      SP,SP,#+24
   8695                 H_line(1,85,62,2);      
   \   00000064   0223               MOVS     R3,#+2
   \   00000066   3E22               MOVS     R2,#+62
   \   00000068   5521               MOVS     R1,#+85
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   ........           BL       H_line
   8696                 Label("Node ID: ",0,3,75,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0090               STR      R0,[SP, #+0]
   \   00000076   8021               MOVS     R1,#+128
   \   00000078   03B4               PUSH     {R0,R1}
   \   0000007A   3A21               MOVS     R1,#+58
   \   0000007C   0F20               MOVS     R0,#+15
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   4B23               MOVS     R3,#+75
   \   00000082   0322               MOVS     R2,#+3
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   2000               MOVS     R0,R4
   \   00000088   4030               ADDS     R0,R0,#+64
   \   0000008A   ........           BL       Label
   \   0000008E   06B0               ADD      SP,SP,#+24
   8697                 sprintf(txt, "%d",RF_ID_R);
                        ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   00000090   434A               LDR      R2,??Info_Paint_0+0xC  ;; 0x2f4ded
   \   00000092   44A1               ADR      R1,??Info_Paint_0+0x10  ;; 0x25, 0x64, 0x00, 0x00
   \   00000094   6846               MOV      R0,SP
   \   00000096   ........           BL       sprintf
   8698                 Label(txt,0,10,64,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   8021               MOVS     R1,#+128
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   2821               MOVS     R1,#+40
   \   000000A6   0F20               MOVS     R0,#+15
   \   000000A8   03B4               PUSH     {R0,R1}
   \   000000AA   4023               MOVS     R3,#+64
   \   000000AC   0A22               MOVS     R2,#+10
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   06A8               ADD      R0,SP,#+24
   \   000000B2   ........           BL       Label
   \   000000B6   06B0               ADD      SP,SP,#+24
   8699                 H_line(1,60,62,2);    
   \   000000B8   0223               MOVS     R3,#+2
   \   000000BA   3E22               MOVS     R2,#+62
   \   000000BC   3C21               MOVS     R1,#+60
   \   000000BE   0120               MOVS     R0,#+1
   \   000000C0   ........           BL       H_line
   8700                 Label("Sys. version: ",0,3,50,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   0020               MOVS     R0,#+0
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   8021               MOVS     R1,#+128
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   3A21               MOVS     R1,#+58
   \   000000D0   0F20               MOVS     R0,#+15
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   3223               MOVS     R3,#+50
   \   000000D6   0322               MOVS     R2,#+3
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   2000               MOVS     R0,R4
   \   000000DC   4C30               ADDS     R0,R0,#+76
   \   000000DE   ........           BL       Label
   \   000000E2   06B0               ADD      SP,SP,#+24
   8701                 Label((char*)&system,0,10,39,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   0020               MOVS     R0,#+0
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   8021               MOVS     R1,#+128
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   2821               MOVS     R1,#+40
   \   000000F0   0F20               MOVS     R0,#+15
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   2723               MOVS     R3,#+39
   \   000000F6   0A22               MOVS     R2,#+10
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   2B48               LDR      R0,??Info_Paint_0+0x14  ;; system
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   8702                 H_line(1,35,62,2);  
   \   00000102   0223               MOVS     R3,#+2
   \   00000104   3E22               MOVS     R2,#+62
   \   00000106   2321               MOVS     R1,#+35
   \   00000108   0120               MOVS     R0,#+1
   \   0000010A   ........           BL       H_line
   8703                 Label("Trans. period: ",0,3,25,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   8021               MOVS     R1,#+128
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   3A21               MOVS     R1,#+58
   \   0000011A   0F20               MOVS     R0,#+15
   \   0000011C   03B4               PUSH     {R0,R1}
   \   0000011E   1923               MOVS     R3,#+25
   \   00000120   0322               MOVS     R2,#+3
   \   00000122   0021               MOVS     R1,#+0
   \   00000124   5C34               ADDS     R4,R4,#+92
   \   00000126   2000               MOVS     R0,R4
   \   00000128   ........           BL       Label
   \   0000012C   06B0               ADD      SP,SP,#+24
   8704                 //labsize=sIntToStr(RF_Period*10,txt);
   8705                 labsize=sIntToStr((10000/(CyklPerSek)),txt);
   \   0000012E   6946               MOV      R1,SP
   \   00000130   0C00               MOVS     R4,R1
   \   00000132   1E48               LDR      R0,??Info_Paint_0+0x18  ;; 0x2710
   \   00000134   1E49               LDR      R1,??Info_Paint_0+0x1C  ;; CyklPerSek
   \   00000136   0968               LDR      R1,[R1, #+0]
   \   00000138   ........           BL       __aeabi_uidivmod
   \   0000013C   2100               MOVS     R1,R4
   \   0000013E   0004               LSLS     R0,R0,#+16
   \   00000140   0014               ASRS     R0,R0,#+16
   \   00000142   ........           BL       sIntToStr
   \   00000146   0200               MOVS     R2,R0
   8706                 txt[labsize++]='m'; txt[labsize++]='s';
   \   00000148   6846               MOV      R0,SP
   \   0000014A   1100               MOVS     R1,R2
   \   0000014C   6D23               MOVS     R3,#+109
   \   0000014E   4354               STRB     R3,[R0, R1]
   \   00000150   521C               ADDS     R2,R2,#+1
   \   00000152   1206               LSLS     R2,R2,#+24
   \   00000154   120E               LSRS     R2,R2,#+24
   \   00000156   1100               MOVS     R1,R2
   \   00000158   7323               MOVS     R3,#+115
   \   0000015A   4354               STRB     R3,[R0, R1]
   8707                 Label(txt,0,10,14,labsize,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000015C   82B0               SUB      SP,SP,#+8
   \   0000015E   0020               MOVS     R0,#+0
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   8021               MOVS     R1,#+128
   \   00000164   03B4               PUSH     {R0,R1}
   \   00000166   2821               MOVS     R1,#+40
   \   00000168   521C               ADDS     R2,R2,#+1
   \   0000016A   1000               MOVS     R0,R2
   \   0000016C   0006               LSLS     R0,R0,#+24
   \   0000016E   000E               LSRS     R0,R0,#+24
   \   00000170   03B4               PUSH     {R0,R1}
   \   00000172   0E23               MOVS     R3,#+14
   \   00000174   0A22               MOVS     R2,#+10
   \   00000176   0021               MOVS     R1,#+0
   \   00000178   06A8               ADD      R0,SP,#+24
   \   0000017A   ........           BL       Label
   \   0000017E   06B0               ADD      SP,SP,#+24
   8708                 H_line(1,10,62,2);  
   \   00000180   0223               MOVS     R3,#+2
   \   00000182   3E22               MOVS     R2,#+62
   \   00000184   0A21               MOVS     R1,#+10
   \   00000186   0120               MOVS     R0,#+1
   \   00000188   ........           BL       H_line
   8709                 
   8710            
   8711                 
   8712          }//________________________________________________________________________
   \   0000018C   1CBC               POP      {R2-R4}
   \   0000018E   01BC               POP      {R0}
   \   00000190   0047               BX       R0               ;; return
   \   00000192   C046               Nop      
   \                     ??Info_Paint_0:
   \   00000194   ........           DC32     `?<Constant "Info ">`
   \   00000198   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000019C   ........           DC32     identyfikacja
   \   000001A0   ED4D2F00           DC32     0x2f4ded
   \   000001A4   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000001A8   ........           DC32     system
   \   000001AC   10270000           DC32     0x2710
   \   000001B0   ........           DC32     CyklPerSek
   8713          
   8714              
   8715          
   8716          

   \                                 In section Debug.txt, align 4, keep-with-next
   8717          void Info_Refresh(void)
   8718          {          
   \                     Info_Refresh:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   8719            static int IRdiv; 
   8720            
   8721            if (IRdiv<20) {IRdiv++;} else {
   \   00000002   1A48               LDR      R0,??Info_Refresh_0  ;; ??IRdiv
   \   00000004   0168               LDR      R1,[R0, #+0]
   \   00000006   1429               CMP      R1,#+20
   \   00000008   02DA               BGE      ??Info_Refresh_1
   \   0000000A   491C               ADDS     R1,R1,#+1
   \   0000000C   0160               STR      R1,[R0, #+0]
   \   0000000E   2AE0               B        ??Info_Refresh_2
   8722                 IRdiv=0;
   \                     ??Info_Refresh_1:
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0160               STR      R1,[R0, #+0]
   8723                 char txt[8];
   8724                 char labsize;
   8725          
   8726                labsize=sIntToStr((10000/(CyklPerSek)),txt); 
   \   00000014   6946               MOV      R1,SP
   \   00000016   0C00               MOVS     R4,R1
   \   00000018   1548               LDR      R0,??Info_Refresh_0+0x4  ;; 0x2710
   \   0000001A   1649               LDR      R1,??Info_Refresh_0+0x8  ;; CyklPerSek
   \   0000001C   0968               LDR      R1,[R1, #+0]
   \   0000001E   ........           BL       __aeabi_uidivmod
   \   00000022   2100               MOVS     R1,R4
   \   00000024   0004               LSLS     R0,R0,#+16
   \   00000026   0014               ASRS     R0,R0,#+16
   \   00000028   ........           BL       sIntToStr
   \   0000002C   0200               MOVS     R2,R0
   8727                 
   8728                 txt[labsize++]='m'; txt[labsize++]='s';
   \   0000002E   6846               MOV      R0,SP
   \   00000030   1100               MOVS     R1,R2
   \   00000032   6D23               MOVS     R3,#+109
   \   00000034   4354               STRB     R3,[R0, R1]
   \   00000036   521C               ADDS     R2,R2,#+1
   \   00000038   1206               LSLS     R2,R2,#+24
   \   0000003A   120E               LSRS     R2,R2,#+24
   \   0000003C   1100               MOVS     R1,R2
   \   0000003E   7323               MOVS     R3,#+115
   \   00000040   4354               STRB     R3,[R0, R1]
   8729                 Label(txt,0,10,14,labsize,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000042   82B0               SUB      SP,SP,#+8
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   8021               MOVS     R1,#+128
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   2821               MOVS     R1,#+40
   \   0000004E   521C               ADDS     R2,R2,#+1
   \   00000050   1000               MOVS     R0,R2
   \   00000052   0006               LSLS     R0,R0,#+24
   \   00000054   000E               LSRS     R0,R0,#+24
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   0E23               MOVS     R3,#+14
   \   0000005A   0A22               MOVS     R2,#+10
   \   0000005C   0021               MOVS     R1,#+0
   \   0000005E   06A8               ADD      R0,SP,#+24
   \   00000060   ........           BL       Label
   \   00000064   06B0               ADD      SP,SP,#+24
   8730            }
   8731          }//________________________________________________________________________
   \                     ??Info_Refresh_2:
   \   00000066   1CBC               POP      {R2-R4}
   \   00000068   01BC               POP      {R0}
   \   0000006A   0047               BX       R0               ;; return
   \                     ??Info_Refresh_0:
   \   0000006C   ........           DC32     ??IRdiv
   \   00000070   10270000           DC32     0x2710
   \   00000074   ........           DC32     CyklPerSek

   \                                 In section .bss, align 4
   \                     ??IRdiv:
   \   00000000                      DS8 4
   8732          
   8733          
   8734          
   8735          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8736          void Info_Event(void)
   8737                {
   \                     Info_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8738                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000002   0C48               LDR      R0,??Info_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   2F28               CMP      R0,#+47
   \   0000000A   0FDB               BLT      ??Info_Event_1
   \   0000000C   3F28               CMP      R0,#+63
   \   0000000E   0DDA               BGE      ??Info_Event_1
   \   00000010   0948               LDR      R0,??Info_Event_0+0x4  ;; Y_up
   \   00000012   405E               LDRSH    R0,[R0, R1]
   \   00000014   7128               CMP      R0,#+113
   \   00000016   09DB               BLT      ??Info_Event_1
   \   00000018   7F28               CMP      R0,#+127
   \   0000001A   07DA               BGE      ??Info_Event_1
   8739                  {
   8740                    MenuLevel=(MenuLevel/10);
   \   0000001C   074C               LDR      R4,??Info_Event_0+0x8  ;; TextToChangeLength
   \   0000001E   206D               LDR      R0,[R4, #+80]
   \   00000020   0A21               MOVS     R1,#+10
   \   00000022   ........           BL       __aeabi_idivmod
   \   00000026   2065               STR      R0,[R4, #+80]
   8741                    MenuPaint();
   \   00000028   ........           BL       MenuPaint
   8742                  }  
   8743          
   8744          }//________________________________________________________________________
   \                     ??Info_Event_1:
   \   0000002C   10BC               POP      {R4}
   \   0000002E   01BC               POP      {R0}
   \   00000030   0047               BX       R0               ;; return
   \   00000032   C046               Nop      
   \                     ??Info_Event_0:
   \   00000034   ........           DC32     X_up
   \   00000038   ........           DC32     Y_up
   \   0000003C   ........           DC32     TextToChangeLength
   8745              
   8746          
   8747          
   8748          
   8749          
   8750          

   \                                 In section Debug.txt, align 4, keep-with-next
   8751          void ThermostatAutoSet_Paint(_Screen* Screen)
   8752          {          
   \                     ThermostatAutoSet_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   8753                 List_Paint("Thermo",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   C1A0               ADR      R0,??ThermostatAutoSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   BE48               LDR      R0,??ThermostatAutoSet_Paint_0+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   8754          
   8755                 //Label("Model: ",0,3,100,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   8756                char txt[5]; txt[1]=0; 
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   6E46               MOV      R6,SP
   \   0000002A   2800               MOVS     R0,R5
   \   0000002C   7070               STRB     R0,[R6, #+1]
   \   0000002E   1F20               MOVS     R0,#+31
   \   00000030   3070               STRB     R0,[R6, #+0]
   8757                txt[0]=31;//dó³ 
   8758                Button(txt,2,89,18,18);
   \   00000032   82B0               SUB      SP,SP,#+8
   \   00000034   1220               MOVS     R0,#+18
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   0300               MOVS     R3,R0
   \   0000003A   5922               MOVS     R2,#+89
   \   0000003C   0221               MOVS     R1,#+2
   \   0000003E   02A8               ADD      R0,SP,#+8
   \   00000040   ........           BL       Button
   \   00000044   02B0               ADD      SP,SP,#+8
   8759                txt[1]=0; txt[0]=30;//góra 
   \   00000046   2800               MOVS     R0,R5
   \   00000048   7070               STRB     R0,[R6, #+1]
   \   0000004A   1E20               MOVS     R0,#+30
   \   0000004C   3070               STRB     R0,[R6, #+0]
   8760                Button(txt,43,89,18,18);
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   1220               MOVS     R0,#+18
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   0300               MOVS     R3,R0
   \   00000056   5922               MOVS     R2,#+89
   \   00000058   2B21               MOVS     R1,#+43
   \   0000005A   02A8               ADD      R0,SP,#+8
   \   0000005C   ........           BL       Button
   \   00000060   02B0               ADD      SP,SP,#+8
   8761                Label("T1",2,20,98,2,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   2800               MOVS     R0,R5
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   8021               MOVS     R1,#+128
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   1521               MOVS     R1,#+21
   \   0000006E   0220               MOVS     R0,#+2
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   6223               MOVS     R3,#+98
   \   00000074   1422               MOVS     R2,#+20
   \   00000076   0100               MOVS     R1,R0
   \   00000078   EAA0               ADR      R0,??ThermostatAutoSet_Paint_1  ;; 0x54, 0x31, 0x00, 0x00
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
   8762                
   8763                sIntToStr(Screen->Thermo.Temperature[0],txt); 
   \   00000080   2700               MOVS     R7,R4
   \   00000082   9237               ADDS     R7,R7,#+146
   \   00000084   6946               MOV      R1,SP
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   385E               LDRSH    R0,[R7, R0]
   \   0000008A   ........           BL       sIntToStr
   8764                Label(txt,2,20,89,4,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000008E   82B0               SUB      SP,SP,#+8
   \   00000090   2800               MOVS     R0,R5
   \   00000092   0090               STR      R0,[SP, #+0]
   \   00000094   8021               MOVS     R1,#+128
   \   00000096   03B4               PUSH     {R0,R1}
   \   00000098   1521               MOVS     R1,#+21
   \   0000009A   0420               MOVS     R0,#+4
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   5923               MOVS     R3,#+89
   \   000000A0   1422               MOVS     R2,#+20
   \   000000A2   0221               MOVS     R1,#+2
   \   000000A4   06A8               ADD      R0,SP,#+24
   \   000000A6   ........           BL       Label
   \   000000AA   06B0               ADD      SP,SP,#+24
   8765                
   8766          
   8767                
   8768                
   8769                txt[1]=0; txt[0]=31;//dó³
   \   000000AC   2800               MOVS     R0,R5
   \   000000AE   7070               STRB     R0,[R6, #+1]
   \   000000B0   1F20               MOVS     R0,#+31
   \   000000B2   3070               STRB     R0,[R6, #+0]
   8770                Button(txt,2,69,18,18);
   \   000000B4   82B0               SUB      SP,SP,#+8
   \   000000B6   1220               MOVS     R0,#+18
   \   000000B8   0090               STR      R0,[SP, #+0]
   \   000000BA   0300               MOVS     R3,R0
   \   000000BC   4522               MOVS     R2,#+69
   \   000000BE   0221               MOVS     R1,#+2
   \   000000C0   02A8               ADD      R0,SP,#+8
   \   000000C2   ........           BL       Button
   \   000000C6   02B0               ADD      SP,SP,#+8
   8771                txt[1]=0; txt[0]=30;//góra 
   \   000000C8   2800               MOVS     R0,R5
   \   000000CA   7070               STRB     R0,[R6, #+1]
   \   000000CC   1E20               MOVS     R0,#+30
   \   000000CE   3070               STRB     R0,[R6, #+0]
   8772                Button(txt,43,69,18,18);
   \   000000D0   82B0               SUB      SP,SP,#+8
   \   000000D2   1220               MOVS     R0,#+18
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   0300               MOVS     R3,R0
   \   000000D8   4522               MOVS     R2,#+69
   \   000000DA   2B21               MOVS     R1,#+43
   \   000000DC   02A8               ADD      R0,SP,#+8
   \   000000DE   ........           BL       Button
   \   000000E2   02B0               ADD      SP,SP,#+8
   8773                Label("T2",2,20,78,2,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   2800               MOVS     R0,R5
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   8021               MOVS     R1,#+128
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   1521               MOVS     R1,#+21
   \   000000F0   0220               MOVS     R0,#+2
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   4E23               MOVS     R3,#+78
   \   000000F6   1422               MOVS     R2,#+20
   \   000000F8   0100               MOVS     R1,R0
   \   000000FA   CBA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x4  ;; 0x54, 0x32, 0x00, 0x00
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   8774                sIntToStr(Screen->Thermo.Temperature[1],txt); 
   \   00000102   6946               MOV      R1,SP
   \   00000104   0220               MOVS     R0,#+2
   \   00000106   385E               LDRSH    R0,[R7, R0]
   \   00000108   ........           BL       sIntToStr
   8775                Label(txt,2,20,69,4,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   2800               MOVS     R0,R5
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   8021               MOVS     R1,#+128
   \   00000114   03B4               PUSH     {R0,R1}
   \   00000116   1521               MOVS     R1,#+21
   \   00000118   0420               MOVS     R0,#+4
   \   0000011A   03B4               PUSH     {R0,R1}
   \   0000011C   4523               MOVS     R3,#+69
   \   0000011E   1422               MOVS     R2,#+20
   \   00000120   0221               MOVS     R1,#+2
   \   00000122   06A8               ADD      R0,SP,#+24
   \   00000124   ........           BL       Label
   \   00000128   06B0               ADD      SP,SP,#+24
   8776                 
   8777                
   8778                
   8779                
   8780                char Ychart=54;
   8781                
   8782                H_line(1,Ychart+12,62,1);  
   \   0000012A   0123               MOVS     R3,#+1
   \   0000012C   3E22               MOVS     R2,#+62
   \   0000012E   4221               MOVS     R1,#+66
   \   00000130   1800               MOVS     R0,R3
   \   00000132   ........           BL       H_line
   8783                H_line(1,Ychart+11,62,1);  
   \   00000136   0123               MOVS     R3,#+1
   \   00000138   3E22               MOVS     R2,#+62
   \   0000013A   4121               MOVS     R1,#+65
   \   0000013C   1800               MOVS     R0,R3
   \   0000013E   ........           BL       H_line
   8784             
   8785                
   8786          
   8787                
   8788                for (char i=0; i<7; i++)
   \   00000142   2E00               MOVS     R6,R5
   \   00000144   27E0               B        ??ThermostatAutoSet_Paint_2
   8789                {
   8790                  Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart+2,1,6,0,128,((Screen->Thermo.Week>>i) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatAutoSet_Paint_3:
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   9120               MOVS     R0,#+145
   \   0000014A   205C               LDRB     R0,[R4, R0]
   \   0000014C   3041               ASRS     R0,R0,R6
   \   0000014E   0121               MOVS     R1,#+1
   \   00000150   0140               ANDS     R1,R1,R0
   \   00000152   0091               STR      R1,[SP, #+0]
   \   00000154   8021               MOVS     R1,#+128
   \   00000156   2800               MOVS     R0,R5
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   0621               MOVS     R1,#+6
   \   0000015C   0120               MOVS     R0,#+1
   \   0000015E   03B4               PUSH     {R0,R1}
   \   00000160   3823               MOVS     R3,#+56
   \   00000162   F200               LSLS     R2,R6,#+3
   \   00000164   121D               ADDS     R2,R2,#+4
   \   00000166   1206               LSLS     R2,R2,#+24
   \   00000168   120E               LSRS     R2,R2,#+24
   \   0000016A   0221               MOVS     R1,#+2
   \   0000016C   02B5               PUSH     {R1,LR}
   \   0000016E   9446               MOV      R12,R2
   \   00000170   AE49               LDR      R1,??ThermostatAutoSet_Paint_1+0x8  ;; 0x6ea
   \   00000172   3200               MOVS     R2,R6
   \   00000174   AE48               LDR      R0,??ThermostatAutoSet_Paint_1+0xC  ;; g_leng
   \   00000176   0068               LDR      R0,[R0, #+0]
   \   00000178   AE4F               LDR      R7,??ThermostatAutoSet_Paint_1+0x10  ;; 0xa7d
   \   0000017A   7843               MULS     R0,R7,R0
   \   0000017C   AE4F               LDR      R7,??ThermostatAutoSet_Paint_1+0x14  ;; Speech
   \   0000017E   3818               ADDS     R0,R7,R0
   \   00000180   8018               ADDS     R0,R0,R2
   \   00000182   4018               ADDS     R0,R0,R1
   \   00000184   6246               MOV      R2,R12
   \   00000186   0099               LDR      R1,[SP, #0]
   \   00000188   02B0               ADD      SP,SP,#+8
   \   0000018A   ........           BL       Label
   \   0000018E   06B0               ADD      SP,SP,#+24
   8791                }
   \   00000190   761C               ADDS     R6,R6,#+1
   \   00000192   3606               LSLS     R6,R6,#+24
   \   00000194   360E               LSRS     R6,R6,#+24
   \                     ??ThermostatAutoSet_Paint_2:
   \   00000196   3000               MOVS     R0,R6
   \   00000198   0728               CMP      R0,#+7
   \   0000019A   D4D3               BCC      ??ThermostatAutoSet_Paint_3
   8792                
   8793                
   8794                for (char i=0; i<24; i++)
   \   0000019C   2E00               MOVS     R6,R5
   \   0000019E   13E0               B        ??ThermostatAutoSet_Paint_4
   8795                {
   8796                   V_line(8+(i*2),Ychart-7,4+((Screen->Thermo.Chart[0]>>i) & 0x1 )*2,1);  
   \                     ??ThermostatAutoSet_Paint_5:
   \   000001A0   0123               MOVS     R3,#+1
   \   000001A2   9820               MOVS     R0,#+152
   \   000001A4   2058               LDR      R0,[R4, R0]
   \   000001A6   F040               LSRS     R0,R0,R6
   \   000001A8   1900               MOVS     R1,R3
   \   000001AA   0140               ANDS     R1,R1,R0
   \   000001AC   4A00               LSLS     R2,R1,#+1
   \   000001AE   121D               ADDS     R2,R2,#+4
   \   000001B0   1206               LSLS     R2,R2,#+24
   \   000001B2   120E               LSRS     R2,R2,#+24
   \   000001B4   2F21               MOVS     R1,#+47
   \   000001B6   7000               LSLS     R0,R6,#+1
   \   000001B8   0830               ADDS     R0,R0,#+8
   \   000001BA   0006               LSLS     R0,R0,#+24
   \   000001BC   000E               LSRS     R0,R0,#+24
   \   000001BE   ........           BL       V_line
   8797                }
   \   000001C2   761C               ADDS     R6,R6,#+1
   \   000001C4   3606               LSLS     R6,R6,#+24
   \   000001C6   360E               LSRS     R6,R6,#+24
   \                     ??ThermostatAutoSet_Paint_4:
   \   000001C8   3000               MOVS     R0,R6
   \   000001CA   1828               CMP      R0,#+24
   \   000001CC   E8D3               BCC      ??ThermostatAutoSet_Paint_5
   \   000001CE   82B0               SUB      SP,SP,#+8
   \   000001D0   2800               MOVS     R0,R5
   \   000001D2   0090               STR      R0,[SP, #+0]
   \   000001D4   8021               MOVS     R1,#+128
   \   000001D6   03B4               PUSH     {R0,R1}
   \   000001D8   0521               MOVS     R1,#+5
   \   000001DA   0120               MOVS     R0,#+1
   \   000001DC   03B4               PUSH     {R0,R1}
   \   000001DE   2523               MOVS     R3,#+37
   \   000001E0   0622               MOVS     R2,#+6
   \   000001E2   2900               MOVS     R1,R5
   \   000001E4   95A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x18  ;; 0x30, 0x00, 0x00, 0x00
   8798                
   8799          
   8800                
   8801                Label("0",0,4+1*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000001E6   ........           BL       Label
   \   000001EA   06B0               ADD      SP,SP,#+24
   8802                V_line(6+1*2,Ychart-9,1,1); 
   \   000001EC   0123               MOVS     R3,#+1
   \   000001EE   1A00               MOVS     R2,R3
   \   000001F0   2D21               MOVS     R1,#+45
   \   000001F2   0820               MOVS     R0,#+8
   \   000001F4   ........           BL       V_line
   \   000001F8   82B0               SUB      SP,SP,#+8
   \   000001FA   2800               MOVS     R0,R5
   \   000001FC   0090               STR      R0,[SP, #+0]
   \   000001FE   8021               MOVS     R1,#+128
   \   00000200   03B4               PUSH     {R0,R1}
   \   00000202   0521               MOVS     R1,#+5
   \   00000204   0120               MOVS     R0,#+1
   \   00000206   03B4               PUSH     {R0,R1}
   \   00000208   2523               MOVS     R3,#+37
   \   0000020A   1222               MOVS     R2,#+18
   \   0000020C   2900               MOVS     R1,R5
   \   0000020E   8CA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x1C  ;; 0x36, 0x00, 0x00, 0x00
   8803                Label("6",0,6+6*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000210   ........           BL       Label
   \   00000214   06B0               ADD      SP,SP,#+24
   8804                V_line(6+6*2,Ychart-9,1,1); 
   \   00000216   0123               MOVS     R3,#+1
   \   00000218   1A00               MOVS     R2,R3
   \   0000021A   2D21               MOVS     R1,#+45
   \   0000021C   1220               MOVS     R0,#+18
   \   0000021E   ........           BL       V_line
   \   00000222   82B0               SUB      SP,SP,#+8
   \   00000224   2800               MOVS     R0,R5
   \   00000226   0090               STR      R0,[SP, #+0]
   \   00000228   8021               MOVS     R1,#+128
   \   0000022A   03B4               PUSH     {R0,R1}
   \   0000022C   0521               MOVS     R1,#+5
   \   0000022E   0220               MOVS     R0,#+2
   \   00000230   03B4               PUSH     {R0,R1}
   \   00000232   2523               MOVS     R3,#+37
   \   00000234   1C22               MOVS     R2,#+28
   \   00000236   2900               MOVS     R1,R5
   \   00000238   82A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x20  ;; 0x31, 0x32, 0x00, 0x00
   8805                Label("12",0,4+12*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000023A   ........           BL       Label
   \   0000023E   06B0               ADD      SP,SP,#+24
   8806                V_line(6+12*2,Ychart-9,1,1); 
   \   00000240   0123               MOVS     R3,#+1
   \   00000242   1A00               MOVS     R2,R3
   \   00000244   2D21               MOVS     R1,#+45
   \   00000246   1E20               MOVS     R0,#+30
   \   00000248   ........           BL       V_line
   \   0000024C   82B0               SUB      SP,SP,#+8
   \   0000024E   2800               MOVS     R0,R5
   \   00000250   0090               STR      R0,[SP, #+0]
   \   00000252   8021               MOVS     R1,#+128
   \   00000254   03B4               PUSH     {R0,R1}
   \   00000256   0521               MOVS     R1,#+5
   \   00000258   0220               MOVS     R0,#+2
   \   0000025A   03B4               PUSH     {R0,R1}
   \   0000025C   2523               MOVS     R3,#+37
   \   0000025E   2822               MOVS     R2,#+40
   \   00000260   2900               MOVS     R1,R5
   \   00000262   79A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x24  ;; 0x31, 0x38, 0x00, 0x00
   8807                Label("18",0,4+18*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000264   ........           BL       Label
   \   00000268   06B0               ADD      SP,SP,#+24
   8808                V_line(6+18*2,Ychart-9,1,1); 
   \   0000026A   0123               MOVS     R3,#+1
   \   0000026C   1A00               MOVS     R2,R3
   \   0000026E   2D21               MOVS     R1,#+45
   \   00000270   2A20               MOVS     R0,#+42
   \   00000272   ........           BL       V_line
   \   00000276   82B0               SUB      SP,SP,#+8
   \   00000278   2800               MOVS     R0,R5
   \   0000027A   0090               STR      R0,[SP, #+0]
   \   0000027C   8021               MOVS     R1,#+128
   \   0000027E   03B4               PUSH     {R0,R1}
   \   00000280   0521               MOVS     R1,#+5
   \   00000282   0220               MOVS     R0,#+2
   \   00000284   03B4               PUSH     {R0,R1}
   \   00000286   2523               MOVS     R3,#+37
   \   00000288   3222               MOVS     R2,#+50
   \   0000028A   2900               MOVS     R1,R5
   \   0000028C   6FA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x28  ;; 0x32, 0x33, 0x00, 0x00
   8809                Label("23",0,2+24*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000028E   ........           BL       Label
   \   00000292   06B0               ADD      SP,SP,#+24
   8810                V_line(6+24*2,Ychart-9,1,1);             
   \   00000294   0123               MOVS     R3,#+1
   \   00000296   1A00               MOVS     R2,R3
   \   00000298   2D21               MOVS     R1,#+45
   \   0000029A   3620               MOVS     R0,#+54
   \   0000029C   ........           BL       V_line
   8811                
   8812                
   8813                Ychart=21;
   8814                H_line(1,Ychart+12,62,1); 
   \   000002A0   0123               MOVS     R3,#+1
   \   000002A2   3E22               MOVS     R2,#+62
   \   000002A4   2121               MOVS     R1,#+33
   \   000002A6   1800               MOVS     R0,R3
   \   000002A8   ........           BL       H_line
   8815                 H_line(1,Ychart+11,62,1);  
   \   000002AC   0123               MOVS     R3,#+1
   \   000002AE   3E22               MOVS     R2,#+62
   \   000002B0   2021               MOVS     R1,#+32
   \   000002B2   1800               MOVS     R0,R3
   \   000002B4   ........           BL       H_line
   8816                
   8817                for (char i=0; i<7; i++)
   \   000002B8   2E00               MOVS     R6,R5
   \   000002BA   27E0               B        ??ThermostatAutoSet_Paint_6
   8818                {
   8819                  Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart+2,1,6,0,128,((~(Screen->Thermo.Week>>i)) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatAutoSet_Paint_7:
   \   000002BC   82B0               SUB      SP,SP,#+8
   \   000002BE   9120               MOVS     R0,#+145
   \   000002C0   205C               LDRB     R0,[R4, R0]
   \   000002C2   3041               ASRS     R0,R0,R6
   \   000002C4   0121               MOVS     R1,#+1
   \   000002C6   8143               BICS     R1,R1,R0
   \   000002C8   0091               STR      R1,[SP, #+0]
   \   000002CA   8021               MOVS     R1,#+128
   \   000002CC   2800               MOVS     R0,R5
   \   000002CE   03B4               PUSH     {R0,R1}
   \   000002D0   0621               MOVS     R1,#+6
   \   000002D2   0120               MOVS     R0,#+1
   \   000002D4   03B4               PUSH     {R0,R1}
   \   000002D6   1723               MOVS     R3,#+23
   \   000002D8   F200               LSLS     R2,R6,#+3
   \   000002DA   121D               ADDS     R2,R2,#+4
   \   000002DC   1206               LSLS     R2,R2,#+24
   \   000002DE   120E               LSRS     R2,R2,#+24
   \   000002E0   0221               MOVS     R1,#+2
   \   000002E2   02B5               PUSH     {R1,LR}
   \   000002E4   9446               MOV      R12,R2
   \   000002E6   5149               LDR      R1,??ThermostatAutoSet_Paint_1+0x8  ;; 0x6ea
   \   000002E8   3200               MOVS     R2,R6
   \   000002EA   5148               LDR      R0,??ThermostatAutoSet_Paint_1+0xC  ;; g_leng
   \   000002EC   0068               LDR      R0,[R0, #+0]
   \   000002EE   514F               LDR      R7,??ThermostatAutoSet_Paint_1+0x10  ;; 0xa7d
   \   000002F0   7843               MULS     R0,R7,R0
   \   000002F2   514F               LDR      R7,??ThermostatAutoSet_Paint_1+0x14  ;; Speech
   \   000002F4   3818               ADDS     R0,R7,R0
   \   000002F6   8018               ADDS     R0,R0,R2
   \   000002F8   4018               ADDS     R0,R0,R1
   \   000002FA   6246               MOV      R2,R12
   \   000002FC   0099               LDR      R1,[SP, #0]
   \   000002FE   02B0               ADD      SP,SP,#+8
   \   00000300   ........           BL       Label
   \   00000304   06B0               ADD      SP,SP,#+24
   8820                } 
   \   00000306   761C               ADDS     R6,R6,#+1
   \   00000308   3606               LSLS     R6,R6,#+24
   \   0000030A   360E               LSRS     R6,R6,#+24
   \                     ??ThermostatAutoSet_Paint_6:
   \   0000030C   3000               MOVS     R0,R6
   \   0000030E   0728               CMP      R0,#+7
   \   00000310   D4D3               BCC      ??ThermostatAutoSet_Paint_7
   8821                 
   8822                for (char i=0; i<24; i++)
   \   00000312   18E0               B        ??ThermostatAutoSet_Paint_8
   \                     ??ThermostatAutoSet_Paint_0:
   \   00000314   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000318   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   8823                {
   8824                   V_line(8+(i*2),Ychart-7,4+((Screen->Thermo.Chart[1]>>i) & 0x1 )*2,1);  
   \                     ??ThermostatAutoSet_Paint_9:
   \   0000031C   0123               MOVS     R3,#+1
   \   0000031E   2000               MOVS     R0,R4
   \   00000320   9830               ADDS     R0,R0,#+152
   \   00000322   4068               LDR      R0,[R0, #+4]
   \   00000324   E840               LSRS     R0,R0,R5
   \   00000326   1900               MOVS     R1,R3
   \   00000328   0140               ANDS     R1,R1,R0
   \   0000032A   4A00               LSLS     R2,R1,#+1
   \   0000032C   121D               ADDS     R2,R2,#+4
   \   0000032E   1206               LSLS     R2,R2,#+24
   \   00000330   120E               LSRS     R2,R2,#+24
   \   00000332   0E21               MOVS     R1,#+14
   \   00000334   6800               LSLS     R0,R5,#+1
   \   00000336   0830               ADDS     R0,R0,#+8
   \   00000338   0006               LSLS     R0,R0,#+24
   \   0000033A   000E               LSRS     R0,R0,#+24
   \   0000033C   ........           BL       V_line
   8825                }
   \   00000340   6D1C               ADDS     R5,R5,#+1
   \   00000342   2D06               LSLS     R5,R5,#+24
   \   00000344   2D0E               LSRS     R5,R5,#+24
   \                     ??ThermostatAutoSet_Paint_8:
   \   00000346   2800               MOVS     R0,R5
   \   00000348   1828               CMP      R0,#+24
   \   0000034A   E7D3               BCC      ??ThermostatAutoSet_Paint_9
   8826                
   8827                Label("0",0,4+1*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000034C   82B0               SUB      SP,SP,#+8
   \   0000034E   0020               MOVS     R0,#+0
   \   00000350   0090               STR      R0,[SP, #+0]
   \   00000352   8021               MOVS     R1,#+128
   \   00000354   03B4               PUSH     {R0,R1}
   \   00000356   0521               MOVS     R1,#+5
   \   00000358   0120               MOVS     R0,#+1
   \   0000035A   03B4               PUSH     {R0,R1}
   \   0000035C   0423               MOVS     R3,#+4
   \   0000035E   0622               MOVS     R2,#+6
   \   00000360   0021               MOVS     R1,#+0
   \   00000362   36A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x18  ;; 0x30, 0x00, 0x00, 0x00
   \   00000364   ........           BL       Label
   \   00000368   06B0               ADD      SP,SP,#+24
   8828                V_line(6+1*2,Ychart-9,1,1); 
   \   0000036A   0123               MOVS     R3,#+1
   \   0000036C   1A00               MOVS     R2,R3
   \   0000036E   0C21               MOVS     R1,#+12
   \   00000370   0820               MOVS     R0,#+8
   \   00000372   ........           BL       V_line
   8829                Label("6",0,6+6*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000376   82B0               SUB      SP,SP,#+8
   \   00000378   0020               MOVS     R0,#+0
   \   0000037A   0090               STR      R0,[SP, #+0]
   \   0000037C   8021               MOVS     R1,#+128
   \   0000037E   03B4               PUSH     {R0,R1}
   \   00000380   0521               MOVS     R1,#+5
   \   00000382   0120               MOVS     R0,#+1
   \   00000384   03B4               PUSH     {R0,R1}
   \   00000386   0423               MOVS     R3,#+4
   \   00000388   1222               MOVS     R2,#+18
   \   0000038A   0021               MOVS     R1,#+0
   \   0000038C   2CA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x1C  ;; 0x36, 0x00, 0x00, 0x00
   \   0000038E   ........           BL       Label
   \   00000392   06B0               ADD      SP,SP,#+24
   8830                V_line(6+6*2,Ychart-9,1,1); 
   \   00000394   0123               MOVS     R3,#+1
   \   00000396   1A00               MOVS     R2,R3
   \   00000398   0C21               MOVS     R1,#+12
   \   0000039A   1220               MOVS     R0,#+18
   \   0000039C   ........           BL       V_line
   8831                Label("12",0,4+12*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003A0   82B0               SUB      SP,SP,#+8
   \   000003A2   0020               MOVS     R0,#+0
   \   000003A4   0090               STR      R0,[SP, #+0]
   \   000003A6   8021               MOVS     R1,#+128
   \   000003A8   03B4               PUSH     {R0,R1}
   \   000003AA   0521               MOVS     R1,#+5
   \   000003AC   0220               MOVS     R0,#+2
   \   000003AE   03B4               PUSH     {R0,R1}
   \   000003B0   0423               MOVS     R3,#+4
   \   000003B2   1C22               MOVS     R2,#+28
   \   000003B4   0021               MOVS     R1,#+0
   \   000003B6   23A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x20  ;; 0x31, 0x32, 0x00, 0x00
   \   000003B8   ........           BL       Label
   \   000003BC   06B0               ADD      SP,SP,#+24
   8832                V_line(6+12*2,Ychart-9,1,1); 
   \   000003BE   0123               MOVS     R3,#+1
   \   000003C0   1A00               MOVS     R2,R3
   \   000003C2   0C21               MOVS     R1,#+12
   \   000003C4   1E20               MOVS     R0,#+30
   \   000003C6   ........           BL       V_line
   8833                Label("18",0,4+18*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003CA   82B0               SUB      SP,SP,#+8
   \   000003CC   0020               MOVS     R0,#+0
   \   000003CE   0090               STR      R0,[SP, #+0]
   \   000003D0   8021               MOVS     R1,#+128
   \   000003D2   03B4               PUSH     {R0,R1}
   \   000003D4   0521               MOVS     R1,#+5
   \   000003D6   0220               MOVS     R0,#+2
   \   000003D8   03B4               PUSH     {R0,R1}
   \   000003DA   0423               MOVS     R3,#+4
   \   000003DC   2822               MOVS     R2,#+40
   \   000003DE   0021               MOVS     R1,#+0
   \   000003E0   19A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x24  ;; 0x31, 0x38, 0x00, 0x00
   \   000003E2   ........           BL       Label
   \   000003E6   06B0               ADD      SP,SP,#+24
   8834                V_line(6+18*2,Ychart-9,1,1); 
   \   000003E8   0123               MOVS     R3,#+1
   \   000003EA   1A00               MOVS     R2,R3
   \   000003EC   0C21               MOVS     R1,#+12
   \   000003EE   2A20               MOVS     R0,#+42
   \   000003F0   ........           BL       V_line
   8835                Label("23",0,2+24*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003F4   82B0               SUB      SP,SP,#+8
   \   000003F6   0020               MOVS     R0,#+0
   \   000003F8   0090               STR      R0,[SP, #+0]
   \   000003FA   8021               MOVS     R1,#+128
   \   000003FC   03B4               PUSH     {R0,R1}
   \   000003FE   0521               MOVS     R1,#+5
   \   00000400   0220               MOVS     R0,#+2
   \   00000402   03B4               PUSH     {R0,R1}
   \   00000404   0423               MOVS     R3,#+4
   \   00000406   3222               MOVS     R2,#+50
   \   00000408   0021               MOVS     R1,#+0
   \   0000040A   10A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x28  ;; 0x32, 0x33, 0x00, 0x00
   \   0000040C   ........           BL       Label
   \   00000410   06B0               ADD      SP,SP,#+24
   8836                V_line(6+24*2,Ychart-9,1,1);             
   \   00000412   0123               MOVS     R3,#+1
   \   00000414   1A00               MOVS     R2,R3
   \   00000416   0C21               MOVS     R1,#+12
   \   00000418   3620               MOVS     R0,#+54
   \   0000041A   ........           BL       V_line
   8837                
   8838          }//________________________________________________________________________
   \   0000041E   FEBC               POP      {R1-R7}
   \   00000420   01BC               POP      {R0}
   \   00000422   0047               BX       R0               ;; return
   \                     ??ThermostatAutoSet_Paint_1:
   \   00000424   54310000           DC8      0x54, 0x31, 0x00, 0x00
   \   00000428   54320000           DC8      0x54, 0x32, 0x00, 0x00
   \   0000042C   EA060000           DC32     0x6ea
   \   00000430   ........           DC32     g_leng
   \   00000434   7D0A0000           DC32     0xa7d
   \   00000438   ........           DC32     Speech
   \   0000043C   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000440   36000000           DC8      0x36, 0x00, 0x00, 0x00
   \   00000444   31320000           DC8      0x31, 0x32, 0x00, 0x00
   \   00000448   31380000           DC8      0x31, 0x38, 0x00, 0x00
   \   0000044C   32330000           DC8      0x32, 0x33, 0x00, 0x00
   8839          
   8840              
   8841          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8842          void ThermostatAutoSet_Event(_Screen* Screen)
   8843                {
   \                     ThermostatAutoSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   A24C               LDR      R4,??ThermostatAutoSet_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   235E               LDRSH    R3,[R4, R0]
   \   00000012   A048               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   9F48               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   9F48               LDR      R0,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   0000001E   0025               MOVS     R5,#+0
   \   00000020   405F               LDRSH    R0,[R0, R5]
   8844             
   8845                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   2CD5               BPL      ??ThermostatAutoSet_Event_1
   8846                  {
   8847                     if (ProgramChange) 
   \   0000002C   9C4E               LDR      R6,??ThermostatAutoSet_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   307A               LDRB     R0,[R6, #+8]
   \   00000030   0028               CMP      R0,#+0
   \   00000032   20D0               BEQ      ??ThermostatAutoSet_Event_2
   8848                    {
   8849                        
   8850                        if (((gProg.Screen[CurrentSheet].Thermo.Chart[DateTime.DayOfWeek]>>DateTime.Hour) & 0x1)==1)
   \   00000034   3079               LDRB     R0,[R6, #+4]
   \   00000036   A021               MOVS     R1,#+160
   \   00000038   4843               MULS     R0,R1,R0
   \   0000003A   9A49               LDR      R1,??ThermostatAutoSet_Event_0+0x14  ;; gProg
   \   0000003C   0818               ADDS     R0,R1,R0
   \   0000003E   9A49               LDR      R1,??ThermostatAutoSet_Event_0+0x18  ;; DateTime
   \   00000040   9A4A               LDR      R2,??ThermostatAutoSet_Event_0+0x1C  ;; 0xbc30
   \   00000042   8B79               LDRB     R3,[R1, #+6]
   \   00000044   9B00               LSLS     R3,R3,#+2
   \   00000046   C318               ADDS     R3,R0,R3
   \   00000048   9A58               LDR      R2,[R3, R2]
   \   0000004A   C978               LDRB     R1,[R1, #+3]
   \   0000004C   CA40               LSRS     R2,R2,R1
   \   0000004E   D107               LSLS     R1,R2,#+31
   \   00000050   04D5               BPL      ??ThermostatAutoSet_Event_3
   8851                        {
   8852                          gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[0]; 
   \   00000052   9749               LDR      R1,??ThermostatAutoSet_Event_0+0x20  ;; 0xbc2a
   \   00000054   4018               ADDS     R0,R0,R1
   \   00000056   0188               LDRH     R1,[R0, #+0]
   \   00000058   8180               STRH     R1,[R0, #+4]
   \   0000005A   03E0               B        ??ThermostatAutoSet_Event_4
   8853                        }else{
   8854                          gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[1]; 
   \                     ??ThermostatAutoSet_Event_3:
   \   0000005C   9449               LDR      R1,??ThermostatAutoSet_Event_0+0x20  ;; 0xbc2a
   \   0000005E   4018               ADDS     R0,R0,R1
   \   00000060   4188               LDRH     R1,[R0, #+2]
   \   00000062   8180               STRH     R1,[R0, #+4]
   8855                        }
   8856                        
   8857                        ThermostatsTimeChartExecute(); 
   \                     ??ThermostatAutoSet_Event_4:
   \   00000064   ........           BL       ThermostatsTimeChartExecute
   8858                        ThermostatsExecute();
   \   00000068   ........           BL       ThermostatsExecute
   8859                        
   8860                        MenuLevel=(MenuLevel*10+0); 
   \   0000006C   306D               LDR      R0,[R6, #+80]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   4843               MULS     R0,R1,R0
   \   00000072   3065               STR      R0,[R6, #+80]
   \   00000074   04E0               B        ??ThermostatAutoSet_Event_5
   8861                    }else{
   8862                      MenuLevel=(MenuLevel/10);
   \                     ??ThermostatAutoSet_Event_2:
   \   00000076   306D               LDR      R0,[R6, #+80]
   \   00000078   0A21               MOVS     R1,#+10
   \   0000007A   ........           BL       __aeabi_idivmod
   \   0000007E   3065               STR      R0,[R6, #+80]
   8863                    }
   8864                    MenuPaint();
   \                     ??ThermostatAutoSet_Event_5:
   \   00000080   ........           BL       MenuPaint
   \   00000084   01E1               B        ??ThermostatAutoSet_Event_6
   8865                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ThermostatAutoSet_Event_1:
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   205E               LDRSH    R0,[R4, R0]
   \   0000008A   7028               CMP      R0,#+112
   \   0000008C   05DB               BLT      ??ThermostatAutoSet_Event_7
   \   0000008E   8248               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   7028               CMP      R0,#+112
   \   00000096   00DB               BLT      .+4
   \   00000098   F7E0               B        ??ThermostatAutoSet_Event_6
   8866                  {  
   8867                  
   8868                         char Refresh=0; 
   \                     ??ThermostatAutoSet_Event_7:
   \   0000009A   2F00               MOVS     R7,R5
   8869                        
   8870                        char txt[5]; txt[1]=0; 
   \   0000009C   6E46               MOV      R6,SP
   \   0000009E   2800               MOVS     R0,R5
   \   000000A0   7070               STRB     R0,[R6, #+1]
   \   000000A2   1F20               MOVS     R0,#+31
   \   000000A4   3070               STRB     R0,[R6, #+0]
   8871                        txt[0]=31;//dó³ 
   8872                        if ((Button(txt,2,89,18,18)==2) && (Screen->Thermo.Temperature[0]>0)) {Screen->Thermo.Temperature[0]--; Refresh=1; ProgramChange=1;}
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   1220               MOVS     R0,#+18
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   0300               MOVS     R3,R0
   \   000000AE   5922               MOVS     R2,#+89
   \   000000B0   0221               MOVS     R1,#+2
   \   000000B2   02A8               ADD      R0,SP,#+8
   \   000000B4   ........           BL       Button
   \   000000B8   02B0               ADD      SP,SP,#+8
   \   000000BA   0228               CMP      R0,#+2
   \   000000BC   0DD1               BNE      ??ThermostatAutoSet_Event_8
   \   000000BE   0298               LDR      R0,[SP, #+8]
   \   000000C0   9230               ADDS     R0,R0,#+146
   \   000000C2   0021               MOVS     R1,#+0
   \   000000C4   415E               LDRSH    R1,[R0, R1]
   \   000000C6   0129               CMP      R1,#+1
   \   000000C8   07DB               BLT      ??ThermostatAutoSet_Event_8
   \   000000CA   0021               MOVS     R1,#+0
   \   000000CC   415E               LDRSH    R1,[R0, R1]
   \   000000CE   491E               SUBS     R1,R1,#+1
   \   000000D0   0180               STRH     R1,[R0, #+0]
   \   000000D2   0120               MOVS     R0,#+1
   \   000000D4   0700               MOVS     R7,R0
   \   000000D6   7749               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   000000D8   0870               STRB     R0,[R1, #+0]
   8873                        txt[1]=0; txt[0]=30;//góra 
   \                     ??ThermostatAutoSet_Event_8:
   \   000000DA   2800               MOVS     R0,R5
   \   000000DC   7070               STRB     R0,[R6, #+1]
   \   000000DE   1E20               MOVS     R0,#+30
   \   000000E0   3070               STRB     R0,[R6, #+0]
   8874                        if ((Button(txt,43,89,18,18)==2) && (Screen->Thermo.Temperature[0]<500)) {Screen->Thermo.Temperature[0]++; Refresh=1; ProgramChange=1;}
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   1220               MOVS     R0,#+18
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   0300               MOVS     R3,R0
   \   000000EA   5922               MOVS     R2,#+89
   \   000000EC   2B21               MOVS     R1,#+43
   \   000000EE   02A8               ADD      R0,SP,#+8
   \   000000F0   ........           BL       Button
   \   000000F4   02B0               ADD      SP,SP,#+8
   \   000000F6   0228               CMP      R0,#+2
   \   000000F8   0FD1               BNE      ??ThermostatAutoSet_Event_9
   \   000000FA   0298               LDR      R0,[SP, #+8]
   \   000000FC   9230               ADDS     R0,R0,#+146
   \   000000FE   0021               MOVS     R1,#+0
   \   00000100   415E               LDRSH    R1,[R0, R1]
   \   00000102   FA22               MOVS     R2,#+250
   \   00000104   5200               LSLS     R2,R2,#+1        ;; #+500
   \   00000106   9142               CMP      R1,R2
   \   00000108   07DA               BGE      ??ThermostatAutoSet_Event_9
   \   0000010A   0021               MOVS     R1,#+0
   \   0000010C   415E               LDRSH    R1,[R0, R1]
   \   0000010E   491C               ADDS     R1,R1,#+1
   \   00000110   0180               STRH     R1,[R0, #+0]
   \   00000112   0120               MOVS     R0,#+1
   \   00000114   0700               MOVS     R7,R0
   \   00000116   6749               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   00000118   0870               STRB     R0,[R1, #+0]
   8875                        
   8876                        txt[1]=0; txt[0]=31;//dó³
   \                     ??ThermostatAutoSet_Event_9:
   \   0000011A   2800               MOVS     R0,R5
   \   0000011C   7070               STRB     R0,[R6, #+1]
   \   0000011E   1F20               MOVS     R0,#+31
   \   00000120   3070               STRB     R0,[R6, #+0]
   8877                        if ((Button(txt,2,69,18,18)==2) && (Screen->Thermo.Temperature[1]>0)) {Screen->Thermo.Temperature[1]--;Refresh=1; ProgramChange=1;}
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   1220               MOVS     R0,#+18
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   0300               MOVS     R3,R0
   \   0000012A   4522               MOVS     R2,#+69
   \   0000012C   0221               MOVS     R1,#+2
   \   0000012E   02A8               ADD      R0,SP,#+8
   \   00000130   ........           BL       Button
   \   00000134   02B0               ADD      SP,SP,#+8
   \   00000136   0228               CMP      R0,#+2
   \   00000138   0DD1               BNE      ??ThermostatAutoSet_Event_10
   \   0000013A   0298               LDR      R0,[SP, #+8]
   \   0000013C   9230               ADDS     R0,R0,#+146
   \   0000013E   0221               MOVS     R1,#+2
   \   00000140   415E               LDRSH    R1,[R0, R1]
   \   00000142   0129               CMP      R1,#+1
   \   00000144   07DB               BLT      ??ThermostatAutoSet_Event_10
   \   00000146   0221               MOVS     R1,#+2
   \   00000148   415E               LDRSH    R1,[R0, R1]
   \   0000014A   491E               SUBS     R1,R1,#+1
   \   0000014C   4180               STRH     R1,[R0, #+2]
   \   0000014E   0120               MOVS     R0,#+1
   \   00000150   0700               MOVS     R7,R0
   \   00000152   5849               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   00000154   0870               STRB     R0,[R1, #+0]
   8878                        txt[1]=0; txt[0]=30;//góra 
   \                     ??ThermostatAutoSet_Event_10:
   \   00000156   2800               MOVS     R0,R5
   \   00000158   7070               STRB     R0,[R6, #+1]
   \   0000015A   1E20               MOVS     R0,#+30
   \   0000015C   3070               STRB     R0,[R6, #+0]
   8879                        if ((Button(txt,43,69,18,18)==2) && (Screen->Thermo.Temperature[1]<5000)) {Screen->Thermo.Temperature[1]++;Refresh=1; ProgramChange=1;}
   \   0000015E   82B0               SUB      SP,SP,#+8
   \   00000160   1220               MOVS     R0,#+18
   \   00000162   0090               STR      R0,[SP, #+0]
   \   00000164   0300               MOVS     R3,R0
   \   00000166   4522               MOVS     R2,#+69
   \   00000168   2B21               MOVS     R1,#+43
   \   0000016A   02A8               ADD      R0,SP,#+8
   \   0000016C   ........           BL       Button
   \   00000170   02B0               ADD      SP,SP,#+8
   \   00000172   0228               CMP      R0,#+2
   \   00000174   0ED1               BNE      ??ThermostatAutoSet_Event_11
   \   00000176   0298               LDR      R0,[SP, #+8]
   \   00000178   9230               ADDS     R0,R0,#+146
   \   0000017A   0221               MOVS     R1,#+2
   \   0000017C   415E               LDRSH    R1,[R0, R1]
   \   0000017E   4E4A               LDR      R2,??ThermostatAutoSet_Event_0+0x28  ;; 0x1388
   \   00000180   9142               CMP      R1,R2
   \   00000182   07DA               BGE      ??ThermostatAutoSet_Event_11
   \   00000184   0221               MOVS     R1,#+2
   \   00000186   415E               LDRSH    R1,[R0, R1]
   \   00000188   491C               ADDS     R1,R1,#+1
   \   0000018A   4180               STRH     R1,[R0, #+2]
   \   0000018C   0120               MOVS     R0,#+1
   \   0000018E   0700               MOVS     R7,R0
   \   00000190   4849               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   00000192   0870               STRB     R0,[R1, #+0]
   8880          
   8881                        //je¿eli klikniêto obszar Chart 0
   8882                        if ((Y_up>34) && (Y_up<62) && (X_up>0))  {CurentChartModyfi=0; Refresh=1; MenuLevel=(MenuLevel*10+1);}
   \                     ??ThermostatAutoSet_Event_11:
   \   00000194   4048               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   00000196   0021               MOVS     R1,#+0
   \   00000198   405E               LDRSH    R0,[R0, R1]
   \   0000019A   2328               CMP      R0,#+35
   \   0000019C   0EDB               BLT      ??ThermostatAutoSet_Event_12
   \   0000019E   3E28               CMP      R0,#+62
   \   000001A0   0CDA               BGE      ??ThermostatAutoSet_Event_12
   \   000001A2   3E49               LDR      R1,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   000001A4   0022               MOVS     R2,#+0
   \   000001A6   895E               LDRSH    R1,[R1, R2]
   \   000001A8   0129               CMP      R1,#+1
   \   000001AA   07DB               BLT      ??ThermostatAutoSet_Event_12
   \   000001AC   3C4E               LDR      R6,??ThermostatAutoSet_Event_0+0x10  ;; TextToChangeLength
   \   000001AE   B570               STRB     R5,[R6, #+2]
   \   000001B0   0127               MOVS     R7,#+1
   \   000001B2   316D               LDR      R1,[R6, #+80]
   \   000001B4   0A22               MOVS     R2,#+10
   \   000001B6   5143               MULS     R1,R2,R1
   \   000001B8   491C               ADDS     R1,R1,#+1
   \   000001BA   3165               STR      R1,[R6, #+80]
   8883                        if ((Y_up>0) && (Y_up<30) && (X_up>0))  {CurentChartModyfi=1; Refresh=1; MenuLevel=(MenuLevel*10+1);}
   \                     ??ThermostatAutoSet_Event_12:
   \   000001BC   0128               CMP      R0,#+1
   \   000001BE   10DB               BLT      ??ThermostatAutoSet_Event_13
   \   000001C0   1E28               CMP      R0,#+30
   \   000001C2   0EDA               BGE      ??ThermostatAutoSet_Event_13
   \   000001C4   3548               LDR      R0,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   000001C6   0021               MOVS     R1,#+0
   \   000001C8   405E               LDRSH    R0,[R0, R1]
   \   000001CA   0128               CMP      R0,#+1
   \   000001CC   09DB               BLT      ??ThermostatAutoSet_Event_13
   \   000001CE   344E               LDR      R6,??ThermostatAutoSet_Event_0+0x10  ;; TextToChangeLength
   \   000001D0   0120               MOVS     R0,#+1
   \   000001D2   0100               MOVS     R1,R0
   \   000001D4   B170               STRB     R1,[R6, #+2]
   \   000001D6   0700               MOVS     R7,R0
   \   000001D8   306D               LDR      R0,[R6, #+80]
   \   000001DA   0A21               MOVS     R1,#+10
   \   000001DC   4843               MULS     R0,R1,R0
   \   000001DE   401C               ADDS     R0,R0,#+1
   \   000001E0   3065               STR      R0,[R6, #+80]
   8884                         
   8885                        if ((X_down>0) && (Y_down>0)) Refresh=1;
   \                     ??ThermostatAutoSet_Event_13:
   \   000001E2   2C48               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   000001E4   0021               MOVS     R1,#+0
   \   000001E6   405E               LDRSH    R0,[R0, R1]
   \   000001E8   0128               CMP      R0,#+1
   \   000001EA   04DB               BLT      ??ThermostatAutoSet_Event_14
   \   000001EC   0020               MOVS     R0,#+0
   \   000001EE   205E               LDRSH    R0,[R4, R0]
   \   000001F0   0128               CMP      R0,#+1
   \   000001F2   00DB               BLT      ??ThermostatAutoSet_Event_14
   \   000001F4   0127               MOVS     R7,#+1
   8886                        if (Refresh==1) MenuPaint();  
   \                     ??ThermostatAutoSet_Event_14:
   \   000001F6   012F               CMP      R7,#+1
   \   000001F8   01D1               BNE      ??ThermostatAutoSet_Event_15
   \   000001FA   ........           BL       MenuPaint
   8887                        if ((Y_down>34) && (Y_down<62) && (X_down>0))  {
   \                     ??ThermostatAutoSet_Event_15:
   \   000001FE   0020               MOVS     R0,#+0
   \   00000200   205E               LDRSH    R0,[R4, R0]
   \   00000202   2328               CMP      R0,#+35
   \   00000204   1EDB               BLT      ??ThermostatAutoSet_Event_16
   \   00000206   3E28               CMP      R0,#+62
   \   00000208   1CDA               BGE      ??ThermostatAutoSet_Event_16
   \   0000020A   2248               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   0000020C   0021               MOVS     R1,#+0
   \   0000020E   405E               LDRSH    R0,[R0, R1]
   \   00000210   0128               CMP      R0,#+1
   \   00000212   17DB               BLT      ??ThermostatAutoSet_Event_16
   8888                            V_line(1,32,33,1);
   \   00000214   0123               MOVS     R3,#+1
   \   00000216   2122               MOVS     R2,#+33
   \   00000218   2021               MOVS     R1,#+32
   \   0000021A   1800               MOVS     R0,R3
   \   0000021C   ........           BL       V_line
   8889                            V_line(61,32,33,1);
   \   00000220   0123               MOVS     R3,#+1
   \   00000222   2122               MOVS     R2,#+33
   \   00000224   2021               MOVS     R1,#+32
   \   00000226   3D20               MOVS     R0,#+61
   \   00000228   ........           BL       V_line
   8890                            H_line(1,64,62,1);
   \   0000022C   0123               MOVS     R3,#+1
   \   0000022E   3E22               MOVS     R2,#+62
   \   00000230   4021               MOVS     R1,#+64
   \   00000232   1800               MOVS     R0,R3
   \   00000234   ........           BL       H_line
   8891                            H_line(1,34,62,1);
   \   00000238   0123               MOVS     R3,#+1
   \   0000023A   3E22               MOVS     R2,#+62
   \   0000023C   2221               MOVS     R1,#+34
   \   0000023E   1800               MOVS     R0,R3
   \   00000240   ........           BL       H_line
   8892                         }
   8893                        if ((Y_down>0) && (Y_down<30) && (X_down>0))  {
   \                     ??ThermostatAutoSet_Event_16:
   \   00000244   0020               MOVS     R0,#+0
   \   00000246   205E               LDRSH    R0,[R4, R0]
   \   00000248   0128               CMP      R0,#+1
   \   0000024A   1EDB               BLT      ??ThermostatAutoSet_Event_6
   \   0000024C   1E28               CMP      R0,#+30
   \   0000024E   1CDA               BGE      ??ThermostatAutoSet_Event_6
   \   00000250   1048               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   00000252   0021               MOVS     R1,#+0
   \   00000254   405E               LDRSH    R0,[R0, R1]
   \   00000256   0128               CMP      R0,#+1
   \   00000258   17DB               BLT      ??ThermostatAutoSet_Event_6
   8894                            V_line(1,3,30,1);
   \   0000025A   0123               MOVS     R3,#+1
   \   0000025C   1E22               MOVS     R2,#+30
   \   0000025E   0321               MOVS     R1,#+3
   \   00000260   1800               MOVS     R0,R3
   \   00000262   ........           BL       V_line
   8895                            V_line(61,3,30,1);
   \   00000266   0123               MOVS     R3,#+1
   \   00000268   1E22               MOVS     R2,#+30
   \   0000026A   0321               MOVS     R1,#+3
   \   0000026C   3D20               MOVS     R0,#+61
   \   0000026E   ........           BL       V_line
   8896                            H_line(1,31,62,1);
   \   00000272   0123               MOVS     R3,#+1
   \   00000274   3E22               MOVS     R2,#+62
   \   00000276   1F21               MOVS     R1,#+31
   \   00000278   1800               MOVS     R0,R3
   \   0000027A   ........           BL       H_line
   8897                            H_line(1,2,62,1);
   \   0000027E   0123               MOVS     R3,#+1
   \   00000280   3E22               MOVS     R2,#+62
   \   00000282   0221               MOVS     R1,#+2
   \   00000284   1800               MOVS     R0,R3
   \   00000286   ........           BL       H_line
   8898                         }
   8899                        
   8900                  }
   8901          }//________________________________________________________________________
   \                     ??ThermostatAutoSet_Event_6:
   \   0000028A   FEBC               POP      {R1-R7}
   \   0000028C   01BC               POP      {R0}
   \   0000028E   0047               BX       R0               ;; return
   \                     ??ThermostatAutoSet_Event_0:
   \   00000290   ........           DC32     Y_down
   \   00000294   ........           DC32     X_down
   \   00000298   ........           DC32     Y_up
   \   0000029C   ........           DC32     X_up
   \   000002A0   ........           DC32     TextToChangeLength
   \   000002A4   ........           DC32     gProg
   \   000002A8   ........           DC32     DateTime
   \   000002AC   30BC0000           DC32     0xbc30
   \   000002B0   2ABC0000           DC32     0xbc2a
   \   000002B4   ........           DC32     TextToChangeLength + 8
   \   000002B8   88130000           DC32     0x1388
   8902              
   8903          
   8904          
   8905          
   8906          
   8907          
   8908          char ThermHourModyfi;

   \                                 In section Debug.txt, align 4, keep-with-next
   8909          void ThermostatChartSet_Paint(_Screen* Screen, char Chart)
   8910          {          
   \                     ThermostatChartSet_Paint:
   \   00000000   F3B5               PUSH     {R0,R1,R4-R7,LR}
   \   00000002   83B0               SUB      SP,SP,#+12
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   78A0               ADR      R0,??ThermostatChartSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   7548               LDR      R0,??ThermostatChartSet_Paint_0+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   8911                 List_Paint("Thermo",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   \   00000026   0024               MOVS     R4,#+0
   8912          
   8913          
   8914                
   8915                char day=0;
   8916                char hlight=0;
   8917          
   8918                for (char row=0; row<3; row++)
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   04E0               B        ??ThermostatChartSet_Paint_1
   \                     ??ThermostatChartSet_Paint_2:
   \   0000002E   0098               LDR      R0,[SP, #+0]
   \   00000030   401C               ADDS     R0,R0,#+1
   \   00000032   0006               LSLS     R0,R0,#+24
   \   00000034   000E               LSRS     R0,R0,#+24
   \   00000036   0090               STR      R0,[SP, #+0]
   \                     ??ThermostatChartSet_Paint_1:
   \   00000038   0098               LDR      R0,[SP, #+0]
   \   0000003A   0006               LSLS     R0,R0,#+24
   \   0000003C   000E               LSRS     R0,R0,#+24
   \   0000003E   0328               CMP      R0,#+3
   \   00000040   75D2               BCS      ??ThermostatChartSet_Paint_3
   8919                for (char col=0; col<3; col++)
   \   00000042   0025               MOVS     R5,#+0
   \   00000044   29E0               B        ??ThermostatChartSet_Paint_4
   8920                { 
   8921                  if (++day<8)
   8922                  {
   8923                      H_line(4+col*18,105-row*14,19,1);
   8924                      H_line(4+col*18,105-(row+1)*14,19,1);
   8925                      V_line(4+col*18,105-(row+1)*14,14,1);
   8926                      V_line(4+(col+1)*18,105-(row+1)*14,14,1);
   8927                      
   8928                      if (Chart==1) hlight=(~(Screen->Thermo.Week>>(day-1)) &0x1); else hlight=(((Screen->Thermo.Week>>(day-1))) &0x1);
   \                     ??ThermostatChartSet_Paint_5:
   \   00000046   9130               ADDS     R0,R0,#+145
   \   00000048   0178               LDRB     R1,[R0, #+0]
   \   0000004A   2000               MOVS     R0,R4
   \   0000004C   401E               SUBS     R0,R0,#+1
   \   0000004E   0141               ASRS     R1,R1,R0
   \   00000050   0120               MOVS     R0,#+1
   \   00000052   0840               ANDS     R0,R0,R1
   8929                      Label((char*)DeyOfWeekStr[g_leng][day],2,6+col*18 ,105-(row+1)*14+3,2,14,0,128,hlight);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatChartSet_Paint_6:
   \   00000054   82B0               SUB      SP,SP,#+8
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   8021               MOVS     R1,#+128
   \   0000005A   0020               MOVS     R0,#+0
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   0E21               MOVS     R1,#+14
   \   00000060   0220               MOVS     R0,#+2
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   6C20               MOVS     R0,#+108
   \   00000066   0799               LDR      R1,[SP, #+28]
   \   00000068   431A               SUBS     R3,R0,R1
   \   0000006A   B61D               ADDS     R6,R6,#+6
   \   0000006C   3200               MOVS     R2,R6
   \   0000006E   1206               LSLS     R2,R2,#+24
   \   00000070   120E               LSRS     R2,R2,#+24
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   B027               MOVS     R7,#+176
   \   00000076   7F00               LSLS     R7,R7,#+1        ;; #+352
   \   00000078   2000               MOVS     R0,R4
   \   0000007A   4600               LSLS     R6,R0,#+1
   \   0000007C   B446               MOV      R12,R6
   \   0000007E   5E48               LDR      R0,??ThermostatChartSet_Paint_0+0x8  ;; g_leng
   \   00000080   0068               LDR      R0,[R0, #+0]
   \   00000082   0601               LSLS     R6,R0,#+4
   \   00000084   5D48               LDR      R0,??ThermostatChartSet_Paint_0+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000086   8019               ADDS     R0,R0,R6
   \   00000088   6646               MOV      R6,R12
   \   0000008A   8019               ADDS     R0,R0,R6
   \   0000008C   C019               ADDS     R0,R0,R7
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
   \                     ??ThermostatChartSet_Paint_7:
   \   00000094   6D1C               ADDS     R5,R5,#+1
   \   00000096   2D06               LSLS     R5,R5,#+24
   \   00000098   2D0E               LSRS     R5,R5,#+24
   \                     ??ThermostatChartSet_Paint_4:
   \   0000009A   2800               MOVS     R0,R5
   \   0000009C   0328               CMP      R0,#+3
   \   0000009E   C6D2               BCS      ??ThermostatChartSet_Paint_2
   \   000000A0   641C               ADDS     R4,R4,#+1
   \   000000A2   2406               LSLS     R4,R4,#+24
   \   000000A4   240E               LSRS     R4,R4,#+24
   \   000000A6   2000               MOVS     R0,R4
   \   000000A8   0828               CMP      R0,#+8
   \   000000AA   F3D2               BCS      ??ThermostatChartSet_Paint_7
   \   000000AC   2E00               MOVS     R6,R5
   \   000000AE   1220               MOVS     R0,#+18
   \   000000B0   4643               MULS     R6,R0,R6
   \   000000B2   009F               LDR      R7,[SP, #+0]
   \   000000B4   3F06               LSLS     R7,R7,#+24
   \   000000B6   3F0E               LSRS     R7,R7,#+24
   \   000000B8   0123               MOVS     R3,#+1
   \   000000BA   1322               MOVS     R2,#+19
   \   000000BC   6920               MOVS     R0,#+105
   \   000000BE   0E21               MOVS     R1,#+14
   \   000000C0   7943               MULS     R1,R7,R1
   \   000000C2   411A               SUBS     R1,R0,R1
   \   000000C4   3000               MOVS     R0,R6
   \   000000C6   001D               ADDS     R0,R0,#+4
   \   000000C8   0006               LSLS     R0,R0,#+24
   \   000000CA   000E               LSRS     R0,R0,#+24
   \   000000CC   ........           BL       H_line
   \   000000D0   7F1C               ADDS     R7,R7,#+1
   \   000000D2   0E20               MOVS     R0,#+14
   \   000000D4   4743               MULS     R7,R0,R7
   \   000000D6   0197               STR      R7,[SP, #+4]
   \   000000D8   6920               MOVS     R0,#+105
   \   000000DA   3900               MOVS     R1,R7
   \   000000DC   471A               SUBS     R7,R0,R1
   \   000000DE   0123               MOVS     R3,#+1
   \   000000E0   1322               MOVS     R2,#+19
   \   000000E2   3900               MOVS     R1,R7
   \   000000E4   3000               MOVS     R0,R6
   \   000000E6   001D               ADDS     R0,R0,#+4
   \   000000E8   0006               LSLS     R0,R0,#+24
   \   000000EA   000E               LSRS     R0,R0,#+24
   \   000000EC   ........           BL       H_line
   \   000000F0   0123               MOVS     R3,#+1
   \   000000F2   0E22               MOVS     R2,#+14
   \   000000F4   3900               MOVS     R1,R7
   \   000000F6   3000               MOVS     R0,R6
   \   000000F8   001D               ADDS     R0,R0,#+4
   \   000000FA   0006               LSLS     R0,R0,#+24
   \   000000FC   000E               LSRS     R0,R0,#+24
   \   000000FE   ........           BL       V_line
   \   00000102   0123               MOVS     R3,#+1
   \   00000104   0E22               MOVS     R2,#+14
   \   00000106   3900               MOVS     R1,R7
   \   00000108   3000               MOVS     R0,R6
   \   0000010A   1630               ADDS     R0,R0,#+22
   \   0000010C   0006               LSLS     R0,R0,#+24
   \   0000010E   000E               LSRS     R0,R0,#+24
   \   00000110   ........           BL       V_line
   \   00000114   6846               MOV      R0,SP
   \   00000116   007C               LDRB     R0,[R0, #+16]
   \   00000118   0128               CMP      R0,#+1
   \   0000011A   0398               LDR      R0,[SP, #+12]
   \   0000011C   93D1               BNE      ??ThermostatChartSet_Paint_5
   \   0000011E   9130               ADDS     R0,R0,#+145
   \   00000120   0178               LDRB     R1,[R0, #+0]
   \   00000122   2000               MOVS     R0,R4
   \   00000124   401E               SUBS     R0,R0,#+1
   \   00000126   0141               ASRS     R1,R1,R0
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   8843               BICS     R0,R0,R1
   \   0000012C   92E7               B        ??ThermostatChartSet_Paint_6
   8930          
   8931                  }
   8932                }
   8933                
   8934               
   8935                 
   8936                 
   8937                
   8938                char Ychart=44;
   8939                
   8940                H_line(1,Ychart+14,62,1);  
   \                     ??ThermostatChartSet_Paint_3:
   \   0000012E   0123               MOVS     R3,#+1
   \   00000130   3E22               MOVS     R2,#+62
   \   00000132   3A21               MOVS     R1,#+58
   \   00000134   1800               MOVS     R0,R3
   \   00000136   ........           BL       H_line
   8941                H_line(1,Ychart+13,62,1);  
   \   0000013A   0123               MOVS     R3,#+1
   \   0000013C   3E22               MOVS     R2,#+62
   \   0000013E   3921               MOVS     R1,#+57
   \   00000140   1800               MOVS     R0,R3
   \   00000142   ........           BL       H_line
   8942            
   8943                
   8944                for (char i=0; i<24; i++)
   \   00000146   0024               MOVS     R4,#+0
   \   00000148   19E0               B        ??ThermostatChartSet_Paint_8
   8945                {
   8946                   V_line(8+(i*2),Ychart,5+((Screen->Thermo.Chart[Chart]>>i) & 0x1 )*3,1);  
   \                     ??ThermostatChartSet_Paint_9:
   \   0000014A   0123               MOVS     R3,#+1
   \   0000014C   6846               MOV      R0,SP
   \   0000014E   007C               LDRB     R0,[R0, #+16]
   \   00000150   8000               LSLS     R0,R0,#+2
   \   00000152   0399               LDR      R1,[SP, #+12]
   \   00000154   0818               ADDS     R0,R1,R0
   \   00000156   9830               ADDS     R0,R0,#+152
   \   00000158   0068               LDR      R0,[R0, #+0]
   \   0000015A   E040               LSRS     R0,R0,R4
   \   0000015C   1A00               MOVS     R2,R3
   \   0000015E   0240               ANDS     R2,R2,R0
   \   00000160   0320               MOVS     R0,#+3
   \   00000162   4243               MULS     R2,R0,R2
   \   00000164   521D               ADDS     R2,R2,#+5
   \   00000166   1206               LSLS     R2,R2,#+24
   \   00000168   120E               LSRS     R2,R2,#+24
   \   0000016A   2C21               MOVS     R1,#+44
   \   0000016C   6000               LSLS     R0,R4,#+1
   \   0000016E   0830               ADDS     R0,R0,#+8
   \   00000170   0006               LSLS     R0,R0,#+24
   \   00000172   000E               LSRS     R0,R0,#+24
   \   00000174   ........           BL       V_line
   8947                }
   \   00000178   641C               ADDS     R4,R4,#+1
   \   0000017A   2406               LSLS     R4,R4,#+24
   \   0000017C   240E               LSRS     R4,R4,#+24
   \                     ??ThermostatChartSet_Paint_8:
   \   0000017E   2000               MOVS     R0,R4
   \   00000180   1828               CMP      R0,#+24
   \   00000182   E2D3               BCC      ??ThermostatChartSet_Paint_9
   8948                
   8949                Button("<",4,Ychart-32,17,18); 
   \   00000184   82B0               SUB      SP,SP,#+8
   \   00000186   1220               MOVS     R0,#+18
   \   00000188   0090               STR      R0,[SP, #+0]
   \   0000018A   1123               MOVS     R3,#+17
   \   0000018C   0C22               MOVS     R2,#+12
   \   0000018E   0421               MOVS     R1,#+4
   \   00000190   1BA0               ADR      R0,??ThermostatChartSet_Paint_0+0x10  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000192   ........           BL       Button
   \   00000196   02B0               ADD      SP,SP,#+8
   8950                char txt[2]; txt[1]=0; 
   \   00000198   02A8               ADD      R0,SP,#+8
   \   0000019A   0021               MOVS     R1,#+0
   \   0000019C   4170               STRB     R1,[R0, #+1]
   8951                if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1) txt[0]=31; else txt[0]=30; 
   \   0000019E   6946               MOV      R1,SP
   \   000001A0   097C               LDRB     R1,[R1, #+16]
   \   000001A2   8900               LSLS     R1,R1,#+2
   \   000001A4   039A               LDR      R2,[SP, #+12]
   \   000001A6   5118               ADDS     R1,R2,R1
   \   000001A8   9831               ADDS     R1,R1,#+152
   \   000001AA   0968               LDR      R1,[R1, #+0]
   \   000001AC   154A               LDR      R2,??ThermostatChartSet_Paint_0+0x14  ;; ThermHourModyfi
   \   000001AE   1278               LDRB     R2,[R2, #+0]
   \   000001B0   D140               LSRS     R1,R1,R2
   \   000001B2   C907               LSLS     R1,R1,#+31
   \   000001B4   02D5               BPL      ??ThermostatChartSet_Paint_10
   \   000001B6   1F21               MOVS     R1,#+31
   \   000001B8   0170               STRB     R1,[R0, #+0]
   \   000001BA   01E0               B        ??ThermostatChartSet_Paint_11
   \                     ??ThermostatChartSet_Paint_10:
   \   000001BC   1E21               MOVS     R1,#+30
   \   000001BE   0170               STRB     R1,[R0, #+0]
   8952                Button(txt,23,Ychart-32,17,18); 
   \                     ??ThermostatChartSet_Paint_11:
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   1220               MOVS     R0,#+18
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   1123               MOVS     R3,#+17
   \   000001C8   0C22               MOVS     R2,#+12
   \   000001CA   1721               MOVS     R1,#+23
   \   000001CC   04A8               ADD      R0,SP,#+16
   \   000001CE   ........           BL       Button
   \   000001D2   02B0               ADD      SP,SP,#+8
   8953                Button(">",42,Ychart-32,17,18); 
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   1220               MOVS     R0,#+18
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   1123               MOVS     R3,#+17
   \   000001DC   0C22               MOVS     R2,#+12
   \   000001DE   2A21               MOVS     R1,#+42
   \   000001E0   09A0               ADR      R0,??ThermostatChartSet_Paint_0+0x18  ;; 0x3E, 0x00, 0x00, 0x00
   \   000001E2   ........           BL       Button
   \   000001E6   02B0               ADD      SP,SP,#+8
   8954                
   8955                
   8956                
   8957          }//________________________________________________________________________
   \   000001E8   05B0               ADD      SP,SP,#+20
   \   000001EA   F0BC               POP      {R4-R7}
   \   000001EC   01BC               POP      {R0}
   \   000001EE   0047               BX       R0               ;; return
   \                     ??ThermostatChartSet_Paint_0:
   \   000001F0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001F4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   \   000001F8   ........           DC32     g_leng
   \   000001FC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000200   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   00000204   ........           DC32     ThermHourModyfi
   \   00000208   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   8958          
   8959              
   8960          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8961          void ThermostatChartSet_Event(_Screen* Screen, char Chart)
   8962                {
   \                     ThermostatChartSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   0024               MOVS     R4,#+0
   \   00000008   6A4E               LDR      R6,??ThermostatChartSet_Event_0  ;; Y_down
   \   0000000A   2100               MOVS     R1,R4
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   335E               LDRSH    R3,[R6, R0]
   \   00000016   6848               LDR      R0,??ThermostatChartSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   6748               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   6748               LDR      R0,??ThermostatChartSet_Event_0+0xC  ;; X_up
   \   00000022   0027               MOVS     R7,#+0
   \   00000024   C05F               LDRSH    R0,[R0, R7]
   8963                  char Repaint=0;
   8964                  
   8965                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   08D5               BPL      ??ThermostatChartSet_Event_1
   8966                  {
   8967                    MenuLevel=(MenuLevel/10);
   \   00000030   644C               LDR      R4,??ThermostatChartSet_Event_0+0x10  ;; TextToChangeLength
   \   00000032   206D               LDR      R0,[R4, #+80]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   2065               STR      R0,[R4, #+80]
   8968                    MenuPaint();
   \   0000003C   ........           BL       MenuPaint
   \   00000040   B4E0               B        ??ThermostatChartSet_Event_2
   8969                  } else if ((Y_down<112)  || (Y_up<112))
   \                     ??ThermostatChartSet_Event_1:
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   305E               LDRSH    R0,[R6, R0]
   \   00000046   7028               CMP      R0,#+112
   \   00000048   05DB               BLT      ??ThermostatChartSet_Event_3
   \   0000004A   5C48               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   405E               LDRSH    R0,[R0, R1]
   \   00000050   7028               CMP      R0,#+112
   \   00000052   00DB               BLT      .+4
   \   00000054   AAE0               B        ??ThermostatChartSet_Event_2
   8970                  {  
   8971                     char Ychart=44;
   8972                    
   8973                     if (Button("<",4,Ychart-32,17,18)==1) if (ThermHourModyfi>0) {ThermHourModyfi--; Repaint=1; ProgramChange=1;}
   \                     ??ThermostatChartSet_Event_3:
   \   00000056   5C4E               LDR      R6,??ThermostatChartSet_Event_0+0x14  ;; ThermHourModyfi
   \   00000058   82B0               SUB      SP,SP,#+8
   \   0000005A   1220               MOVS     R0,#+18
   \   0000005C   0090               STR      R0,[SP, #+0]
   \   0000005E   1123               MOVS     R3,#+17
   \   00000060   0C22               MOVS     R2,#+12
   \   00000062   0421               MOVS     R1,#+4
   \   00000064   59A0               ADR      R0,??ThermostatChartSet_Event_0+0x18  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000066   ........           BL       Button
   \   0000006A   02B0               ADD      SP,SP,#+8
   \   0000006C   0128               CMP      R0,#+1
   \   0000006E   08D1               BNE      ??ThermostatChartSet_Event_4
   \   00000070   3078               LDRB     R0,[R6, #+0]
   \   00000072   0028               CMP      R0,#+0
   \   00000074   05D0               BEQ      ??ThermostatChartSet_Event_4
   \   00000076   401E               SUBS     R0,R0,#+1
   \   00000078   3070               STRB     R0,[R6, #+0]
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   0400               MOVS     R4,R0
   \   0000007E   5449               LDR      R1,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   00000080   0870               STRB     R0,[R1, #+0]
   8974                     char txt[2]; txt[1]=0; 
   \                     ??ThermostatChartSet_Event_4:
   \   00000082   6846               MOV      R0,SP
   \   00000084   3900               MOVS     R1,R7
   \   00000086   4170               STRB     R1,[R0, #+1]
   8975                      if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1) txt[0]=31; else txt[0]=30; 
   \   00000088   A900               LSLS     R1,R5,#+2
   \   0000008A   029A               LDR      R2,[SP, #+8]
   \   0000008C   5518               ADDS     R5,R2,R1
   \   0000008E   9835               ADDS     R5,R5,#+152
   \   00000090   2968               LDR      R1,[R5, #+0]
   \   00000092   3278               LDRB     R2,[R6, #+0]
   \   00000094   D140               LSRS     R1,R1,R2
   \   00000096   C907               LSLS     R1,R1,#+31
   \   00000098   02D5               BPL      ??ThermostatChartSet_Event_5
   \   0000009A   1F21               MOVS     R1,#+31
   \   0000009C   0170               STRB     R1,[R0, #+0]
   \   0000009E   01E0               B        ??ThermostatChartSet_Event_6
   \                     ??ThermostatChartSet_Event_5:
   \   000000A0   1E21               MOVS     R1,#+30
   \   000000A2   0170               STRB     R1,[R0, #+0]
   8976                     if (Button(txt,23,Ychart-32,17,18)==1) 
   \                     ??ThermostatChartSet_Event_6:
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   1220               MOVS     R0,#+18
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   1123               MOVS     R3,#+17
   \   000000AC   0C22               MOVS     R2,#+12
   \   000000AE   1721               MOVS     R1,#+23
   \   000000B0   02A8               ADD      R0,SP,#+8
   \   000000B2   ........           BL       Button
   \   000000B6   02B0               ADD      SP,SP,#+8
   \   000000B8   0128               CMP      R0,#+1
   \   000000BA   13D1               BNE      ??ThermostatChartSet_Event_7
   8977                     {
   8978                        if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1)
   \   000000BC   3078               LDRB     R0,[R6, #+0]
   \   000000BE   2968               LDR      R1,[R5, #+0]
   \   000000C0   C140               LSRS     R1,R1,R0
   \   000000C2   C907               LSLS     R1,R1,#+31
   \   000000C4   2968               LDR      R1,[R5, #+0]
   \   000000C6   05D5               BPL      ??ThermostatChartSet_Event_8
   8979                        {
   8980                          Screen->Thermo.Chart[Chart] &= ~(1<<ThermHourModyfi);
   \   000000C8   0122               MOVS     R2,#+1
   \   000000CA   8240               LSLS     R2,R2,R0
   \   000000CC   9143               BICS     R1,R1,R2
   \   000000CE   2960               STR      R1,[R5, #+0]
   8981                          Repaint=1;
   \   000000D0   0124               MOVS     R4,#+1
   \   000000D2   04E0               B        ??ThermostatChartSet_Event_9
   8982                        }else{
   8983                          Screen->Thermo.Chart[Chart] |=  (1<<ThermHourModyfi);
   \                     ??ThermostatChartSet_Event_8:
   \   000000D4   0122               MOVS     R2,#+1
   \   000000D6   8240               LSLS     R2,R2,R0
   \   000000D8   0A43               ORRS     R2,R2,R1
   \   000000DA   2A60               STR      R2,[R5, #+0]
   8984                          Repaint=1;
   \   000000DC   0124               MOVS     R4,#+1
   8985                        }
   8986                        ProgramChange=1;
   \                     ??ThermostatChartSet_Event_9:
   \   000000DE   3C48               LDR      R0,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   000000E0   2100               MOVS     R1,R4
   \   000000E2   0170               STRB     R1,[R0, #+0]
   8987                     }
   8988                     if (Button(">",42,Ychart-32,17,18)==1) {if (ThermHourModyfi<23) ThermHourModyfi++; Repaint=1; ProgramChange=1;}
   \                     ??ThermostatChartSet_Event_7:
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   1220               MOVS     R0,#+18
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   1123               MOVS     R3,#+17
   \   000000EC   0C22               MOVS     R2,#+12
   \   000000EE   2A21               MOVS     R1,#+42
   \   000000F0   38A0               ADR      R0,??ThermostatChartSet_Event_0+0x20  ;; 0x3E, 0x00, 0x00, 0x00
   \   000000F2   ........           BL       Button
   \   000000F6   02B0               ADD      SP,SP,#+8
   \   000000F8   0128               CMP      R0,#+1
   \   000000FA   08D1               BNE      ??ThermostatChartSet_Event_10
   \   000000FC   3078               LDRB     R0,[R6, #+0]
   \   000000FE   1728               CMP      R0,#+23
   \   00000100   01D2               BCS      ??ThermostatChartSet_Event_11
   \   00000102   401C               ADDS     R0,R0,#+1
   \   00000104   3070               STRB     R0,[R6, #+0]
   \                     ??ThermostatChartSet_Event_11:
   \   00000106   0120               MOVS     R0,#+1
   \   00000108   0400               MOVS     R4,R0
   \   0000010A   3149               LDR      R1,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   0000010C   0870               STRB     R0,[R1, #+0]
   8989                
   8990                
   8991                      char day;
   8992                      day=0;
   \                     ??ThermostatChartSet_Event_10:
   \   0000010E   3B00               MOVS     R3,R7
   8993                      for (char row=0; row<3; row++)
   \   00000110   1900               MOVS     R1,R3
   \   00000112   02E0               B        ??ThermostatChartSet_Event_12
   \                     ??ThermostatChartSet_Event_13:
   \   00000114   491C               ADDS     R1,R1,#+1
   \   00000116   0906               LSLS     R1,R1,#+24
   \   00000118   090E               LSRS     R1,R1,#+24
   \                     ??ThermostatChartSet_Event_12:
   \   0000011A   0800               MOVS     R0,R1
   \   0000011C   0328               CMP      R0,#+3
   \   0000011E   41D2               BCS      ??ThermostatChartSet_Event_14
   8994                      for (char col=0; col<3; col++)
   \   00000120   0022               MOVS     R2,#+0
   \   00000122   0AE0               B        ??ThermostatChartSet_Event_15
   8995                      { 
   8996                        if (++day<8)
   8997                        {
   8998                            if ((X_up>4+col*18) && (X_up<4+(col+1)*18) && (Y_up<105-row*14) && (Y_up>105-(row+1)*14))
   8999                            {
   9000                              if ((Screen->Thermo.Week>>(day-1)) & 0x1)  //jezeli dzieñ aktywny to wy³acz je¿eli nie to w³¹cz
   9001                              {
   9002                                 Screen->Thermo.Week &= ~(1<<(day-1));
   9003                              }else{
   9004                                Screen->Thermo.Week |= (1<<(day-1));
   \                     ??ThermostatChartSet_Event_16:
   \   00000124   0126               MOVS     R6,#+1
   \   00000126   8640               LSLS     R6,R6,R0
   \   00000128   2E43               ORRS     R6,R6,R5
   \   0000012A   2670               STRB     R6,[R4, #+0]
   9005                              }
   9006                              Repaint=1;
   \                     ??ThermostatChartSet_Event_17:
   \   0000012C   0120               MOVS     R0,#+1
   \   0000012E   0400               MOVS     R4,R0
   9007                              ProgramChange=1;
   \   00000130   274D               LDR      R5,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   00000132   2870               STRB     R0,[R5, #+0]
   \                     ??ThermostatChartSet_Event_18:
   \   00000134   521C               ADDS     R2,R2,#+1
   \   00000136   1206               LSLS     R2,R2,#+24
   \   00000138   120E               LSRS     R2,R2,#+24
   \                     ??ThermostatChartSet_Event_15:
   \   0000013A   1000               MOVS     R0,R2
   \   0000013C   0328               CMP      R0,#+3
   \   0000013E   E9D2               BCS      ??ThermostatChartSet_Event_13
   \   00000140   5B1C               ADDS     R3,R3,#+1
   \   00000142   1B06               LSLS     R3,R3,#+24
   \   00000144   1B0E               LSRS     R3,R3,#+24
   \   00000146   1800               MOVS     R0,R3
   \   00000148   0828               CMP      R0,#+8
   \   0000014A   F3D2               BCS      ??ThermostatChartSet_Event_18
   \   0000014C   1000               MOVS     R0,R2
   \   0000014E   1225               MOVS     R5,#+18
   \   00000150   6843               MULS     R0,R5,R0
   \   00000152   1B4D               LDR      R5,??ThermostatChartSet_Event_0+0xC  ;; X_up
   \   00000154   0026               MOVS     R6,#+0
   \   00000156   AD5F               LDRSH    R5,[R5, R6]
   \   00000158   0600               MOVS     R6,R0
   \   0000015A   361D               ADDS     R6,R6,#+4
   \   0000015C   AE42               CMP      R6,R5
   \   0000015E   E9DA               BGE      ??ThermostatChartSet_Event_18
   \   00000160   1630               ADDS     R0,R0,#+22
   \   00000162   8542               CMP      R5,R0
   \   00000164   E6DA               BGE      ??ThermostatChartSet_Event_18
   \   00000166   0D00               MOVS     R5,R1
   \   00000168   1448               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   0000016A   0026               MOVS     R6,#+0
   \   0000016C   865F               LDRSH    R6,[R0, R6]
   \   0000016E   6920               MOVS     R0,#+105
   \   00000170   0E27               MOVS     R7,#+14
   \   00000172   6F43               MULS     R7,R5,R7
   \   00000174   C01B               SUBS     R0,R0,R7
   \   00000176   8642               CMP      R6,R0
   \   00000178   DCDA               BGE      ??ThermostatChartSet_Event_18
   \   0000017A   6920               MOVS     R0,#+105
   \   0000017C   6D1C               ADDS     R5,R5,#+1
   \   0000017E   0E27               MOVS     R7,#+14
   \   00000180   7D43               MULS     R5,R7,R5
   \   00000182   401B               SUBS     R0,R0,R5
   \   00000184   B042               CMP      R0,R6
   \   00000186   D5DA               BGE      ??ThermostatChartSet_Event_18
   \   00000188   1800               MOVS     R0,R3
   \   0000018A   401E               SUBS     R0,R0,#+1
   \   0000018C   029C               LDR      R4,[SP, #+8]
   \   0000018E   9134               ADDS     R4,R4,#+145
   \   00000190   2578               LDRB     R5,[R4, #+0]
   \   00000192   0541               ASRS     R5,R5,R0
   \   00000194   ED07               LSLS     R5,R5,#+31
   \   00000196   2578               LDRB     R5,[R4, #+0]
   \   00000198   C4D5               BPL      ??ThermostatChartSet_Event_16
   \   0000019A   0126               MOVS     R6,#+1
   \   0000019C   8640               LSLS     R6,R6,R0
   \   0000019E   B543               BICS     R5,R5,R6
   \   000001A0   2570               STRB     R5,[R4, #+0]
   \   000001A2   C3E7               B        ??ThermostatChartSet_Event_17
   9008                            }
   9009          
   9010                        }
   9011                      }
   9012                     
   9013                     
   9014                     if (Repaint==1) MenuPaint();      
   \                     ??ThermostatChartSet_Event_14:
   \   000001A4   012C               CMP      R4,#+1
   \   000001A6   01D1               BNE      ??ThermostatChartSet_Event_2
   \   000001A8   ........           BL       MenuPaint
   9015                    
   9016                  }
   9017          }//________________________________________________________________________
   \                     ??ThermostatChartSet_Event_2:
   \   000001AC   FEBC               POP      {R1-R7}
   \   000001AE   01BC               POP      {R0}
   \   000001B0   0047               BX       R0               ;; return
   \   000001B2   C046               Nop      
   \                     ??ThermostatChartSet_Event_0:
   \   000001B4   ........           DC32     Y_down
   \   000001B8   ........           DC32     X_down
   \   000001BC   ........           DC32     Y_up
   \   000001C0   ........           DC32     X_up
   \   000001C4   ........           DC32     TextToChangeLength
   \   000001C8   ........           DC32     ThermHourModyfi
   \   000001CC   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   000001D0   ........           DC32     TextToChangeLength + 8
   \   000001D4   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   9018              
   9019                
   9020                

   \                                 In section Debug.txt, align 4, keep-with-next
   9021          void ThermostatChartSet_Refresh(_Screen* Screen, char Chart)
   9022          {          
   \                     ThermostatChartSet_Refresh:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   9023             static char TCSR_Count;
   9024             char kolor=0;
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2300               MOVS     R3,R4
   9025             char Ychart=44;
   9026             if (TCSR_Count<3) TCSR_Count++; else TCSR_Count=0;
   \   00000006   1F4D               LDR      R5,??ThermostatChartSet_Refresh_0  ;; ThermHourModyfi
   \   00000008   6A78               LDRB     R2,[R5, #+1]
   \   0000000A   032A               CMP      R2,#+3
   \   0000000C   02D2               BCS      ??ThermostatChartSet_Refresh_1
   \   0000000E   521C               ADDS     R2,R2,#+1
   \   00000010   6A70               STRB     R2,[R5, #+1]
   \   00000012   00E0               B        ??ThermostatChartSet_Refresh_2
   \                     ??ThermostatChartSet_Refresh_1:
   \   00000014   6C70               STRB     R4,[R5, #+1]
   9027             if (TCSR_Count) kolor=1;
   \                     ??ThermostatChartSet_Refresh_2:
   \   00000016   6A78               LDRB     R2,[R5, #+1]
   \   00000018   002A               CMP      R2,#+0
   \   0000001A   00D0               BEQ      ??ThermostatChartSet_Refresh_3
   \   0000001C   0123               MOVS     R3,#+1
   9028             V_line(8+(ThermHourModyfi*2),Ychart,5+((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1 )*3,kolor);  
   \                     ??ThermostatChartSet_Refresh_3:
   \   0000001E   2E78               LDRB     R6,[R5, #+0]
   \   00000020   8900               LSLS     R1,R1,#+2
   \   00000022   4018               ADDS     R0,R0,R1
   \   00000024   9830               ADDS     R0,R0,#+152
   \   00000026   0068               LDR      R0,[R0, #+0]
   \   00000028   F040               LSRS     R0,R0,R6
   \   0000002A   0122               MOVS     R2,#+1
   \   0000002C   0240               ANDS     R2,R2,R0
   \   0000002E   0320               MOVS     R0,#+3
   \   00000030   4243               MULS     R2,R0,R2
   \   00000032   521D               ADDS     R2,R2,#+5
   \   00000034   1206               LSLS     R2,R2,#+24
   \   00000036   120E               LSRS     R2,R2,#+24
   \   00000038   2C21               MOVS     R1,#+44
   \   0000003A   7000               LSLS     R0,R6,#+1
   \   0000003C   0830               ADDS     R0,R0,#+8
   \   0000003E   0006               LSLS     R0,R0,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   ........           BL       V_line
   9029          
   9030             char txt[3]; txt[1]=0; txt[2]=0;
   \   00000046   6846               MOV      R0,SP
   \   00000048   4470               STRB     R4,[R0, #+1]
   \   0000004A   8470               STRB     R4,[R0, #+2]
   9031             CharToStr(ThermHourModyfi,txt,2);  //(char Value, char *Vstring, char ill) 
   \   0000004C   0222               MOVS     R2,#+2
   \   0000004E   6946               MOV      R1,SP
   \   00000050   2878               LDRB     R0,[R5, #+0]
   \   00000052   ........           BL       CharToStr
   9032             Label(txt,2,ThermHourModyfi*2+2,Ychart-10,2,12,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000056   82B0               SUB      SP,SP,#+8
   \   00000058   2000               MOVS     R0,R4
   \   0000005A   0090               STR      R0,[SP, #+0]
   \   0000005C   8021               MOVS     R1,#+128
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   0C21               MOVS     R1,#+12
   \   00000062   0220               MOVS     R0,#+2
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   2223               MOVS     R3,#+34
   \   00000068   2878               LDRB     R0,[R5, #+0]
   \   0000006A   4200               LSLS     R2,R0,#+1
   \   0000006C   921C               ADDS     R2,R2,#+2
   \   0000006E   1206               LSLS     R2,R2,#+24
   \   00000070   120E               LSRS     R2,R2,#+24
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   06A8               ADD      R0,SP,#+24
   \   00000076   ........           BL       Label
   \   0000007A   06B0               ADD      SP,SP,#+24
   9033          
   9034                
   9035                 
   9036                
   9037          }//________________________________________________________________________
   \   0000007C   7CBC               POP      {R2-R6}
   \   0000007E   01BC               POP      {R0}
   \   00000080   0047               BX       R0               ;; return
   \   00000082   C046               Nop      
   \                     ??ThermostatChartSet_Refresh_0:
   \   00000084   ........           DC32     ThermHourModyfi

   \                                 In section .bss, align 1
   \                     ThermHourModyfi:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   9038          
   9039          
   9040          
   9041          
   9042          
   9043          
   9044          
   9045          
   9046          //*-----------------------------------------------------------------------------
   9047          //* Nazwa funkcji :    Alarm_Paint
   9048          //* Funkcja strony g³ównej menu
   9049          //*-----------------------------------------------------------------------------
   9050          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   9051          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9052          void Alarm_Paint(char CurrentSheet)
   9053          {
   \                     Alarm_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9054            
   9055            
   9056          
   9057          
   9058              
   9059          
   9060                if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   \   00000002   4100               LSLS     R1,R0,#+1
   \   00000004   214A               LDR      R2,??Alarm_Paint_0  ;; AlarmScreenAction
   \   00000006   5118               ADDS     R1,R2,R1
   \   00000008   0A78               LDRB     R2,[R1, #+0]
   \   0000000A   002A               CMP      R2,#+0
   \   0000000C   3AD1               BNE      ??Alarm_Paint_1
   \   0000000E   4978               LDRB     R1,[R1, #+1]
   \   00000010   0029               CMP      R1,#+0
   \   00000012   37D1               BNE      ??Alarm_Paint_1
   9061                {
   9062                  if (CurrentSheet!=0)  List_Paint(Speech[g_leng].Termo_,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000014   0028               CMP      R0,#+0
   \   00000016   16D0               BEQ      ??Alarm_Paint_2
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1BA0               ADR      R0,??Alarm_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   0321               MOVS     R1,#+3
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   0300               MOVS     R3,R0
   \   0000002C   6C22               MOVS     R2,#+108
   \   0000002E   0121               MOVS     R1,#+1
   \   00000030   1848               LDR      R0,??Alarm_Paint_0+0x8  ;; 0x744
   \   00000032   194C               LDR      R4,??Alarm_Paint_0+0xC  ;; g_leng
   \   00000034   2468               LDR      R4,[R4, #+0]
   \   00000036   194D               LDR      R5,??Alarm_Paint_0+0x10  ;; 0xa7d
   \   00000038   6C43               MULS     R4,R5,R4
   \   0000003A   194D               LDR      R5,??Alarm_Paint_0+0x14  ;; Speech
   \   0000003C   2C19               ADDS     R4,R5,R4
   \   0000003E   2018               ADDS     R0,R4,R0
   \   00000040   ........           BL       List_Paint
   \   00000044   0AB0               ADD      SP,SP,#+40
   9063                  Button(Speech[g_leng].WlOchrone,2,40,59,50);
   \                     ??Alarm_Paint_2:
   \   00000046   154C               LDR      R4,??Alarm_Paint_0+0x10  ;; 0xa7d
   \   00000048   134D               LDR      R5,??Alarm_Paint_0+0xC  ;; g_leng
   \   0000004A   154E               LDR      R6,??Alarm_Paint_0+0x14  ;; Speech
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   3220               MOVS     R0,#+50
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   3B23               MOVS     R3,#+59
   \   00000054   2822               MOVS     R2,#+40
   \   00000056   0221               MOVS     R1,#+2
   \   00000058   1248               LDR      R0,??Alarm_Paint_0+0x18  ;; 0x79e
   \   0000005A   2F68               LDR      R7,[R5, #+0]
   \   0000005C   6743               MULS     R7,R4,R7
   \   0000005E   F719               ADDS     R7,R6,R7
   \   00000060   3818               ADDS     R0,R7,R0
   \   00000062   ........           BL       Button
   \   00000066   02B0               ADD      SP,SP,#+8
   9064                  Button(Speech[g_leng].ZmienHaslo,2,4,59,13);
   \   00000068   82B0               SUB      SP,SP,#+8
   \   0000006A   0D20               MOVS     R0,#+13
   \   0000006C   0090               STR      R0,[SP, #+0]
   \   0000006E   3B23               MOVS     R3,#+59
   \   00000070   0422               MOVS     R2,#+4
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   0C48               LDR      R0,??Alarm_Paint_0+0x1C  ;; 0x7ad
   \   00000076   2D68               LDR      R5,[R5, #+0]
   \   00000078   6543               MULS     R5,R4,R5
   \   0000007A   7419               ADDS     R4,R6,R5
   \   0000007C   2018               ADDS     R0,R4,R0
   \   0000007E   ........           BL       Button
   \   00000082   02B0               ADD      SP,SP,#+8
   9065                }
   9066            
   9067                if ((AlarmScreenAction[CurrentSheet].Active==1) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   9068                {
   9069                   
   9070                }
   9071          }//_______________________ Koniec funkcji Alarm_Paint __________________________
   \                     ??Alarm_Paint_1:
   \   00000084   F8BC               POP      {R3-R7}
   \   00000086   01BC               POP      {R0}
   \   00000088   0047               BX       R0               ;; return
   \   0000008A   C046               Nop      
   \                     ??Alarm_Paint_0:
   \   0000008C   ........           DC32     AlarmScreenAction
   \   00000090   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000094   44070000           DC32     0x744
   \   00000098   ........           DC32     g_leng
   \   0000009C   7D0A0000           DC32     0xa7d
   \   000000A0   ........           DC32     Speech
   \   000000A4   9E070000           DC32     0x79e
   \   000000A8   AD070000           DC32     0x7ad
   9072            
   9073          
   9074          
   9075          
   9076          //*-----------------------------------------------------------------------------
   9077          //* Nazwa funkcji :    Alarm_Event
   9078          //* Funkcja strony g³ównej menu
   9079          //*-----------------------------------------------------------------------------
   9080          //*-----------------------------------------------------------------------------
   9081          
   9082          

   \                                 In section Debug.txt, align 4, keep-with-next
   9083          void Alarm_Event(char CurrentSheet)
   9084          {
   \                     Alarm_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0500               MOVS     R5,R0
   \   00000004   0024               MOVS     R4,#+0
   9085            char Repaint=0;
   9086          
   9087          
   9088            
   9089            
   9090           if ((CurrentSheet>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000006   002D               CMP      R5,#+0
   \   00000008   1DD0               BEQ      ??Alarm_Event_0
   \   0000000A   2100               MOVS     R1,R4
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   2D48               LDR      R0,??Alarm_Event_1  ;; Y_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   435E               LDRSH    R3,[R0, R1]
   \   0000001A   2D48               LDR      R0,??Alarm_Event_1+0x4  ;; X_down
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   2D48               LDR      R0,??Alarm_Event_1+0x8  ;; Y_up
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   2D48               LDR      R0,??Alarm_Event_1+0xC  ;; X_up
   \   00000024   0026               MOVS     R6,#+0
   \   00000026   805F               LDRSH    R0,[R0, R6]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   \   0000002E   0021               MOVS     R1,#+0
   \   00000030   C943               MVNS     R1,R1            ;; #-1
   \   00000032   8842               CMP      R0,R1
   \   00000034   07D1               BNE      ??Alarm_Event_0
   9091              {
   9092                 if (SheetHistoryIndex>0)
   \   00000036   2948               LDR      R0,??Alarm_Event_1+0x10  ;; TextToChangeLength
   \   00000038   C179               LDRB     R1,[R0, #+7]
   \   0000003A   0029               CMP      R1,#+0
   \   0000003C   01D0               BEQ      ??Alarm_Event_2
   9093                    {
   9094                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000003E   491E               SUBS     R1,R1,#+1
   \   00000040   C171               STRB     R1,[R0, #+7]
   9095                    } 
   9096                   Repaint=1; 
   \                     ??Alarm_Event_2:
   \   00000042   0124               MOVS     R4,#+1
   \   00000044   3AE0               B        ??Alarm_Event_3
   9097              }else{
   9098          
   9099                if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   \                     ??Alarm_Event_0:
   \   00000046   6800               LSLS     R0,R5,#+1
   \   00000048   2549               LDR      R1,??Alarm_Event_1+0x14  ;; AlarmScreenAction
   \   0000004A   0D18               ADDS     R5,R1,R0
   \   0000004C   2878               LDRB     R0,[R5, #+0]
   \   0000004E   0028               CMP      R0,#+0
   \   00000050   34D1               BNE      ??Alarm_Event_3
   \   00000052   6878               LDRB     R0,[R5, #+1]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   31D1               BNE      ??Alarm_Event_3
   \   00000058   224E               LDR      R6,??Alarm_Event_1+0x18  ;; g_leng
   \   0000005A   234F               LDR      R7,??Alarm_Event_1+0x1C  ;; Speech
   \   0000005C   82B0               SUB      SP,SP,#+8
   \   0000005E   3220               MOVS     R0,#+50
   \   00000060   0090               STR      R0,[SP, #+0]
   \   00000062   3B23               MOVS     R3,#+59
   \   00000064   2822               MOVS     R2,#+40
   \   00000066   0221               MOVS     R1,#+2
   \   00000068   02B5               PUSH     {R1,LR}
   \   0000006A   2049               LDR      R1,??Alarm_Event_1+0x20  ;; 0x79e
   \   0000006C   8C46               MOV      R12,R1
   \   0000006E   3168               LDR      R1,[R6, #+0]
   \   00000070   1F48               LDR      R0,??Alarm_Event_1+0x24  ;; 0xa7d
   \   00000072   4143               MULS     R1,R0,R1
   \   00000074   7818               ADDS     R0,R7,R1
   \   00000076   6146               MOV      R1,R12
   \   00000078   4018               ADDS     R0,R0,R1
   \   0000007A   0099               LDR      R1,[SP, #0]
   \   0000007C   02B0               ADD      SP,SP,#+8
   9100                {
   9101                  if (Button(Speech[g_leng].WlOchrone,2,40,59,50)==1) {
   \   0000007E   ........           BL       Button
   \   00000082   02B0               ADD      SP,SP,#+8
   \   00000084   0128               CMP      R0,#+1
   \   00000086   04D1               BNE      ??Alarm_Event_4
   9102                   AlarmScreenAction[CurrentSheet].SecToActive=AlarmTimeToActive;
   \   00000088   3C20               MOVS     R0,#+60
   \   0000008A   6870               STRB     R0,[R5, #+1]
   9103                   AlarmScreenAction[CurrentSheet].Active=0;
   \   0000008C   2000               MOVS     R0,R4
   \   0000008E   2870               STRB     R0,[R5, #+0]
   9104                   Repaint=1;
   \   00000090   0124               MOVS     R4,#+1
   9105                  } 
   9106                   if (Button(Speech[g_leng].ZmienHaslo,2,4,59,13)==1)
   \                     ??Alarm_Event_4:
   \   00000092   82B0               SUB      SP,SP,#+8
   \   00000094   0D20               MOVS     R0,#+13
   \   00000096   0090               STR      R0,[SP, #+0]
   \   00000098   3B23               MOVS     R3,#+59
   \   0000009A   0422               MOVS     R2,#+4
   \   0000009C   0221               MOVS     R1,#+2
   \   0000009E   1548               LDR      R0,??Alarm_Event_1+0x28  ;; 0x7ad
   \   000000A0   3568               LDR      R5,[R6, #+0]
   \   000000A2   134E               LDR      R6,??Alarm_Event_1+0x24  ;; 0xa7d
   \   000000A4   7543               MULS     R5,R6,R5
   \   000000A6   7D19               ADDS     R5,R7,R5
   \   000000A8   2818               ADDS     R0,R5,R0
   \   000000AA   ........           BL       Button
   \   000000AE   02B0               ADD      SP,SP,#+8
   \   000000B0   0128               CMP      R0,#+1
   \   000000B2   03D1               BNE      ??Alarm_Event_3
   9107                   {
   9108                      MenuLevel=15;
   \   000000B4   1048               LDR      R0,??Alarm_Event_1+0x2C  ;; TextToChangeLength + 80
   \   000000B6   0F21               MOVS     R1,#+15
   \   000000B8   0160               STR      R1,[R0, #+0]
   9109                      Repaint=1;
   \   000000BA   0124               MOVS     R4,#+1
   9110                   }
   9111                  
   9112                }
   9113                
   9114                      
   9115              }
   9116           
   9117           
   9118           
   9119            if (Repaint==1) MenuPaint();
   \                     ??Alarm_Event_3:
   \   000000BC   012C               CMP      R4,#+1
   \   000000BE   01D1               BNE      ??Alarm_Event_5
   \   000000C0   ........           BL       MenuPaint
   9120          }//_______________________ Koniec funkcji Alarm_Event __________________________
   \                     ??Alarm_Event_5:
   \   000000C4   F8BC               POP      {R3-R7}
   \   000000C6   01BC               POP      {R0}
   \   000000C8   0047               BX       R0               ;; return
   \   000000CA   C046               Nop      
   \                     ??Alarm_Event_1:
   \   000000CC   ........           DC32     Y_down
   \   000000D0   ........           DC32     X_down
   \   000000D4   ........           DC32     Y_up
   \   000000D8   ........           DC32     X_up
   \   000000DC   ........           DC32     TextToChangeLength
   \   000000E0   ........           DC32     AlarmScreenAction
   \   000000E4   ........           DC32     g_leng
   \   000000E8   ........           DC32     Speech
   \   000000EC   9E070000           DC32     0x79e
   \   000000F0   7D0A0000           DC32     0xa7d
   \   000000F4   AD070000           DC32     0x7ad
   \   000000F8   ........           DC32     TextToChangeLength + 80
   9121            
   9122          
   9123          
   9124          
   9125          
   9126          
   9127          //*-----------------------------------------------------------------------------
   9128          //* Nazwa funkcji :    Alarm_Refresh
   9129          //* Funkcja strony g³ównej menu
   9130          //*-----------------------------------------------------------------------------
   9131          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9132          void Alarm_Refresh(char CurrentSheet)
   9133          {
   \                     Alarm_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   9134          
   9135            char dl;
   9136            char txt[5];
   9137            static int LastCount;
   9138          
   9139          
   9140            if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive>0) && (g_counter>LastCount+1000))
   \   00000002   4000               LSLS     R0,R0,#+1
   \   00000004   2C49               LDR      R1,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   00000006   0C18               ADDS     R4,R1,R0
   \   00000008   2078               LDRB     R0,[R4, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   50D1               BNE      ??Alarm_Refresh_1
   \   0000000E   6078               LDRB     R0,[R4, #+1]
   \   00000010   0028               CMP      R0,#+0
   \   00000012   4DD0               BEQ      ??Alarm_Refresh_1
   \   00000014   294E               LDR      R6,??Alarm_Refresh_0+0x4  ;; g_counter
   \   00000016   2A4D               LDR      R5,??Alarm_Refresh_0+0x8  ;; ??LastCount
   \   00000018   2868               LDR      R0,[R5, #+0]
   \   0000001A   FA21               MOVS     R1,#+250
   \   0000001C   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   0000001E   4018               ADDS     R0,R0,R1
   \   00000020   C117               ASRS     R1,R0,#+31
   \   00000022   0200               MOVS     R2,R0
   \   00000024   0B00               MOVS     R3,R1
   \   00000026   03CE               LDM      R6!,{R0,R1}
   \   00000028   083E               SUBS     R6,R6,#+8
   \   0000002A   8B42               CMP      R3,R1
   \   0000002C   40D8               BHI      ??Alarm_Refresh_1
   \   0000002E   01D3               BCC      ??Alarm_Refresh_2
   \   00000030   8242               CMP      R2,R0
   \   00000032   3DD2               BCS      ??Alarm_Refresh_1
   9141                {
   9142                  CleanCanvas(); 
   \                     ??Alarm_Refresh_2:
   \   00000034   ........           BL       CleanCanvas
   9143                  AlarmScreenAction[CurrentSheet].SecToActive--;
   \   00000038   6078               LDRB     R0,[R4, #+1]
   \   0000003A   401E               SUBS     R0,R0,#+1
   \   0000003C   6070               STRB     R0,[R4, #+1]
   9144                  Label(Speech[g_leng].AktywacjaZa,2,1,80,15,59,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   0020               MOVS     R0,#+0
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   6921               MOVS     R1,#+105
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   3B21               MOVS     R1,#+59
   \   0000004A   0F20               MOVS     R0,#+15
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   5023               MOVS     R3,#+80
   \   00000050   0122               MOVS     R2,#+1
   \   00000052   0221               MOVS     R1,#+2
   \   00000054   8C46               MOV      R12,R1
   \   00000056   1B49               LDR      R1,??Alarm_Refresh_0+0xC  ;; 0x7cb
   \   00000058   1B48               LDR      R0,??Alarm_Refresh_0+0x10  ;; g_leng
   \   0000005A   0068               LDR      R0,[R0, #+0]
   \   0000005C   1B4F               LDR      R7,??Alarm_Refresh_0+0x14  ;; 0xa7d
   \   0000005E   7843               MULS     R0,R7,R0
   \   00000060   1B4F               LDR      R7,??Alarm_Refresh_0+0x18  ;; Speech
   \   00000062   3818               ADDS     R0,R7,R0
   \   00000064   4018               ADDS     R0,R0,R1
   \   00000066   6146               MOV      R1,R12
   \   00000068   ........           BL       Label
   \   0000006C   06B0               ADD      SP,SP,#+24
   9145          
   9146                  
   9147                  LastCount=g_counter;
   \   0000006E   03CE               LDM      R6!,{R0,R1}
   \   00000070   2860               STR      R0,[R5, #+0]
   9148                  dl=CharToStr(AlarmScreenAction[CurrentSheet].SecToActive, txt,2);
   \   00000072   0222               MOVS     R2,#+2
   \   00000074   6946               MOV      R1,SP
   \   00000076   6078               LDRB     R0,[R4, #+1]
   \   00000078   ........           BL       CharToStr
   \   0000007C   0200               MOVS     R2,R0
   9149                  Label20(txt,2,0,45,dl,64,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                         ^
Warning[Pe223]: function "Label20" declared implicitly
   \   0000007E   82B0               SUB      SP,SP,#+8
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   0090               STR      R0,[SP, #+0]
   \   00000084   6921               MOVS     R1,#+105
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   4021               MOVS     R1,#+64
   \   0000008A   1000               MOVS     R0,R2
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   2D23               MOVS     R3,#+45
   \   00000090   0022               MOVS     R2,#+0
   \   00000092   0221               MOVS     R1,#+2
   \   00000094   06A8               ADD      R0,SP,#+24
   \   00000096   ........           BL       Label20
   \   0000009A   06B0               ADD      SP,SP,#+24
   9150          
   9151                  if (AlarmScreenAction[CurrentSheet].SecToActive==0)
   \   0000009C   6078               LDRB     R0,[R4, #+1]
   \   0000009E   0028               CMP      R0,#+0
   \   000000A0   06D1               BNE      ??Alarm_Refresh_1
   9152                  {
   9153                    MenuLevel=14;
   \   000000A2   0C48               LDR      R0,??Alarm_Refresh_0+0x1C  ;; TextToChangeLength + 80
   \   000000A4   0E21               MOVS     R1,#+14
   \   000000A6   0160               STR      R1,[R0, #+0]
   9154                    AlarmScreenAction[CurrentSheet].Active=1;
   \   000000A8   0120               MOVS     R0,#+1
   \   000000AA   2070               STRB     R0,[R4, #+0]
   9155                    MenuPaint(); 
   \   000000AC   ........           BL       MenuPaint
   9156                  }
   9157                }
   9158          
   9159          }//_______________________ Koniec funkcji Alarm_Refresh __________________________
   \                     ??Alarm_Refresh_1:
   \   000000B0   FEBC               POP      {R1-R7}
   \   000000B2   01BC               POP      {R0}
   \   000000B4   0047               BX       R0               ;; return
   \   000000B6   C046               Nop      
   \                     ??Alarm_Refresh_0:
   \   000000B8   ........           DC32     AlarmScreenAction
   \   000000BC   ........           DC32     g_counter
   \   000000C0   ........           DC32     ??LastCount
   \   000000C4   CB070000           DC32     0x7cb
   \   000000C8   ........           DC32     g_leng
   \   000000CC   7D0A0000           DC32     0xa7d
   \   000000D0   ........           DC32     Speech
   \   000000D4   ........           DC32     TextToChangeLength + 80

   \                                 In section .bss, align 4
   \                     ??LastCount:
   \   00000000                      DS8 4
   9160            
   9161          
   9162          
   9163          
   9164          
   9165          
   9166          
   9167          
   9168          //*-----------------------------------------------------------------------------
   9169          //* Nazwa funkcji :    Alarm_Paint
   9170          //* Funkcja strony g³ównej menu
   9171          //*-----------------------------------------------------------------------------
   9172          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   9173          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9174          void AlarmPass_Paint(char CurrentSheet)
   9175          {
   \                     AlarmPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   9176          
   9177                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   164C               LDR      R4,??AlarmPass_Paint_0  ;; 0xa7d
   \   00000004   164D               LDR      R5,??AlarmPass_Paint_0+0x4  ;; g_leng
   \   00000006   174E               LDR      R6,??AlarmPass_Paint_0+0x8  ;; Speech
   \   00000008   17A2               ADR      R2,??AlarmPass_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000A   18A1               ADR      R1,??AlarmPass_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000C   FF20               MOVS     R0,#+255
   \   0000000E   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000010   2B68               LDR      R3,[R5, #+0]
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   F318               ADDS     R3,R6,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   9178                    Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   7F21               MOVS     R1,#+127
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   3A21               MOVS     R1,#+58
   \   00000028   0F20               MOVS     R0,#+15
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   6623               MOVS     R3,#+102
   \   0000002E   0322               MOVS     R2,#+3
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   FF20               MOVS     R0,#+255
   \   00000034   D230               ADDS     R0,R0,#+210      ;; #+465
   \   00000036   2D68               LDR      R5,[R5, #+0]
   \   00000038   6543               MULS     R5,R4,R5
   \   0000003A   7419               ADDS     R4,R6,R5
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       Label
   \   00000042   06B0               ADD      SP,SP,#+24
   9179                    CleanCanvasArea(0,113,64,15,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \   00000044   82B0               SUB      SP,SP,#+8
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   0090               STR      R0,[SP, #+0]
   \   0000004A   0F23               MOVS     R3,#+15
   \   0000004C   4022               MOVS     R2,#+64
   \   0000004E   7121               MOVS     R1,#+113
   \   00000050   ........           BL       CleanCanvasArea
   \   00000054   02B0               ADD      SP,SP,#+8
   9180                
   9181          }//_______________________ Koniec funkcji AlarmPass_Paint __________________________
   \   00000056   70BC               POP      {R4-R6}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??AlarmPass_Paint_0:
   \   0000005C   7D0A0000           DC32     0xa7d
   \   00000060   ........           DC32     g_leng
   \   00000064   ........           DC32     Speech
   \   00000068   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   0000006C   43000000           DC8      0x43, 0x00, 0x00, 0x00
   9182            
   9183          
   9184          
   9185          
   9186          //*-----------------------------------------------------------------------------
   9187          //* Nazwa funkcji :    AlarmPass_Event
   9188          //*-----------------------------------------------------------------------------
   9189          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9190          void AlarmPass_Event(char CurrentSheet)
   9191          {
   \                     AlarmPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9192            char Repaint=0;
   9193          
   9194          
   9195             int ans;
   9196                  char roz=0;
   9197                    
   9198                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   6348               LDR      R0,??AlarmPass_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   6248               LDR      R0,??AlarmPass_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   6248               LDR      R0,??AlarmPass_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   6248               LDR      R0,??AlarmPass_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Number_Event
   \   0000001A   0400               MOVS     R4,R0
   9199            
   9200                  if (ans>0)          {
   \   0000001C   012C               CMP      R4,#+1
   \   0000001E   00DA               BGE      .+4
   \   00000020   B0E0               B        ??AlarmPass_Event_1
   9201                      
   9202                      if (InsertPass1[4]<=3) 
   \   00000022   5F4D               LDR      R5,??AlarmPass_Event_0+0x10  ;; InsertPass1
   \   00000024   2879               LDRB     R0,[R5, #+4]
   \   00000026   0428               CMP      R0,#+4
   \   00000028   10D2               BCS      ??AlarmPass_Event_2
   9203                      { 
   9204                          if ((ans<10) || (ans==11)) 
   \   0000002A   0A2C               CMP      R4,#+10
   \   0000002C   01DB               BLT      ??AlarmPass_Event_3
   \   0000002E   0B2C               CMP      R4,#+11
   \   00000030   0CD1               BNE      ??AlarmPass_Event_2
   9205                          {
   9206                            if (ans<10) InsertPass1[InsertPass1[4]]=ans+48;
   \                     ??AlarmPass_Event_3:
   \   00000032   0A2C               CMP      R4,#+10
   \   00000034   02DA               BGE      ??AlarmPass_Event_4
   \   00000036   2100               MOVS     R1,R4
   \   00000038   3031               ADDS     R1,R1,#+48
   \   0000003A   2954               STRB     R1,[R5, R0]
   9207                            if (ans==11) InsertPass1[InsertPass1[4]]=ans+37;
   \                     ??AlarmPass_Event_4:
   \   0000003C   0B2C               CMP      R4,#+11
   \   0000003E   02D1               BNE      ??AlarmPass_Event_5
   \   00000040   2879               LDRB     R0,[R5, #+4]
   \   00000042   3021               MOVS     R1,#+48
   \   00000044   2954               STRB     R1,[R5, R0]
   9208                            InsertPass1[4]++;
   \                     ??AlarmPass_Event_5:
   \   00000046   2879               LDRB     R0,[R5, #+4]
   \   00000048   401C               ADDS     R0,R0,#+1
   \   0000004A   2871               STRB     R0,[R5, #+4]
   9209                          }
   9210                          
   9211                      }
   9212                      if ((ans==10) && (InsertPass1[4]>0) ) {InsertPass1[4]--; InsertPass1[InsertPass1[4]]=0;}
   \                     ??AlarmPass_Event_2:
   \   0000004C   0A2C               CMP      R4,#+10
   \   0000004E   08D1               BNE      ??AlarmPass_Event_6
   \   00000050   2879               LDRB     R0,[R5, #+4]
   \   00000052   0028               CMP      R0,#+0
   \   00000054   05D0               BEQ      ??AlarmPass_Event_6
   \   00000056   401E               SUBS     R0,R0,#+1
   \   00000058   2871               STRB     R0,[R5, #+4]
   \   0000005A   0006               LSLS     R0,R0,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   2954               STRB     R1,[R5, R0]
   9213                      
   9214                      
   9215                     char InsertPassVar=0;
   \                     ??AlarmPass_Event_6:
   \   00000062   0026               MOVS     R6,#+0
   \   00000064   3000               MOVS     R0,R6
   9216                     for (char i=0; i<=3; i++)  pass_tmp[i]=0;
   \   00000066   3100               MOVS     R1,R6
   \   00000068   3300               MOVS     R3,R6
   \   0000006A   04E0               B        ??AlarmPass_Event_7
   \                     ??AlarmPass_Event_8:
   \   0000006C   AA18               ADDS     R2,R5,R2
   \   0000006E   1373               STRB     R3,[R2, #+12]
   \   00000070   491C               ADDS     R1,R1,#+1
   \   00000072   0906               LSLS     R1,R1,#+24
   \   00000074   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPass_Event_7:
   \   00000076   0A00               MOVS     R2,R1
   \   00000078   042A               CMP      R2,#+4
   \   0000007A   F7D3               BCC      ??AlarmPass_Event_8
   9217                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<4))
   \                     ??AlarmPass_Event_9:
   \   0000007C   0100               MOVS     R1,R0
   \   0000007E   6A5C               LDRB     R2,[R5, R1]
   \   00000080   002A               CMP      R2,#+0
   \   00000082   09D0               BEQ      ??AlarmPass_Event_10
   \   00000084   0200               MOVS     R2,R0
   \   00000086   042A               CMP      R2,#+4
   \   00000088   06D2               BCS      ??AlarmPass_Event_10
   9218                     {
   9219                       pass_tmp[InsertPassVar]=42; //42="*"
   \   0000008A   6918               ADDS     R1,R5,R1
   \   0000008C   2A22               MOVS     R2,#+42
   \   0000008E   0A73               STRB     R2,[R1, #+12]
   9220                       InsertPassVar++;
   \   00000090   401C               ADDS     R0,R0,#+1
   \   00000092   0006               LSLS     R0,R0,#+24
   \   00000094   000E               LSRS     R0,R0,#+24
   \   00000096   F1E7               B        ??AlarmPass_Event_9
   9221                     }
   9222          
   9223                      
   9224                      //Sprawdzenie has³a
   9225                      if (ans==12)
   \                     ??AlarmPass_Event_10:
   \   00000098   0C2C               CMP      R4,#+12
   \   0000009A   5BD1               BNE      ??AlarmPass_Event_11
   9226                      {
   9227                        roz=0;
   \   0000009C   3000               MOVS     R0,R6
   9228                        for (int i=0; i<=3; i++)
   \   0000009E   3100               MOVS     R1,R6
   \   000000A0   23E0               B        ??AlarmPass_Event_12
   \                     ??AlarmPass_Event_13:
   \   000000A2   6A46               MOV      R2,SP
   \   000000A4   1278               LDRB     R2,[R2, #+0]
   \   000000A6   9200               LSLS     R2,R2,#+2
   \   000000A8   3E4B               LDR      R3,??AlarmPass_Event_0+0x14  ;; 0x13d7ee
   \   000000AA   9A18               ADDS     R2,R3,R2
   \   000000AC   6B5C               LDRB     R3,[R5, R1]
   \   000000AE   575C               LDRB     R7,[R2, R1]
   \   000000B0   BB42               CMP      R3,R7
   \   000000B2   00D0               BEQ      ??AlarmPass_Event_14
   9229                        {
   9230                            if ((InsertPass1[i]!=AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][i])) roz=1;
   \   000000B4   0120               MOVS     R0,#+1
   9231                            if  ((AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][0]==0) && 
   9232                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][1]==0) &&
   9233                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][2]==0) &&
   9234                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][3]==0) &&
   9235                                (InsertPass1[0]=='0') && 
   9236                                  (InsertPass1[1]=='0') && 
   9237                                    (InsertPass1[2]=='0') && 
   9238                                      (InsertPass1[3]=='0'))
   \                     ??AlarmPass_Event_14:
   \   000000B6   1378               LDRB     R3,[R2, #+0]
   \   000000B8   002B               CMP      R3,#+0
   \   000000BA   15D1               BNE      ??AlarmPass_Event_15
   \   000000BC   5378               LDRB     R3,[R2, #+1]
   \   000000BE   002B               CMP      R3,#+0
   \   000000C0   12D1               BNE      ??AlarmPass_Event_15
   \   000000C2   9378               LDRB     R3,[R2, #+2]
   \   000000C4   002B               CMP      R3,#+0
   \   000000C6   0FD1               BNE      ??AlarmPass_Event_15
   \   000000C8   D278               LDRB     R2,[R2, #+3]
   \   000000CA   002A               CMP      R2,#+0
   \   000000CC   0CD1               BNE      ??AlarmPass_Event_15
   \   000000CE   2A78               LDRB     R2,[R5, #+0]
   \   000000D0   302A               CMP      R2,#+48
   \   000000D2   09D1               BNE      ??AlarmPass_Event_15
   \   000000D4   6A78               LDRB     R2,[R5, #+1]
   \   000000D6   302A               CMP      R2,#+48
   \   000000D8   06D1               BNE      ??AlarmPass_Event_15
   \   000000DA   AA78               LDRB     R2,[R5, #+2]
   \   000000DC   302A               CMP      R2,#+48
   \   000000DE   03D1               BNE      ??AlarmPass_Event_15
   \   000000E0   EA78               LDRB     R2,[R5, #+3]
   \   000000E2   302A               CMP      R2,#+48
   \   000000E4   00D1               BNE      ??AlarmPass_Event_15
   9239                                {
   9240                                  roz=0;
   \   000000E6   3000               MOVS     R0,R6
   9241                                }
   9242                        }
   \                     ??AlarmPass_Event_15:
   \   000000E8   491C               ADDS     R1,R1,#+1
   \                     ??AlarmPass_Event_12:
   \   000000EA   0429               CMP      R1,#+4
   \   000000EC   D9DB               BLT      ??AlarmPass_Event_13
   9243                        
   9244                        if (roz==0)                                 //je¿eli poprawne haslo
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   1ED1               BNE      ??AlarmPass_Event_16
   9245                        {
   9246                           for (int i=0; i<=3; i++) InsertPass1[i]=0;
   \   000000F2   3100               MOVS     R1,R6
   \   000000F4   01E0               B        ??AlarmPass_Event_17
   \                     ??AlarmPass_Event_18:
   \   000000F6   2954               STRB     R1,[R5, R0]
   \   000000F8   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Event_17:
   \   000000FA   0428               CMP      R0,#+4
   \   000000FC   FBDB               BLT      ??AlarmPass_Event_18
   9247                           InsertPass1[4]=0;
   \   000000FE   3000               MOVS     R0,R6
   \   00000100   2871               STRB     R0,[R5, #+4]
   9248                           MESSAGE(Speech[g_leng].OchronaWyl); 
   \   00000102   FF20               MOVS     R0,#+255
   \   00000104   C000               LSLS     R0,R0,#+3        ;; #+2040
   \   00000106   2849               LDR      R1,??AlarmPass_Event_0+0x18  ;; g_leng
   \   00000108   0968               LDR      R1,[R1, #+0]
   \   0000010A   284A               LDR      R2,??AlarmPass_Event_0+0x1C  ;; 0xa7d
   \   0000010C   5143               MULS     R1,R2,R1
   \   0000010E   284A               LDR      R2,??AlarmPass_Event_0+0x20  ;; Speech
   \   00000110   5118               ADDS     R1,R2,R1
   \   00000112   0818               ADDS     R0,R1,R0
   \   00000114   ........           BL       MESSAGE
   9249                           AlarmScreenAction[CurrentSheet].Active=0;
   \   00000118   6846               MOV      R0,SP
   \   0000011A   0078               LDRB     R0,[R0, #+0]
   \   0000011C   4000               LSLS     R0,R0,#+1
   \   0000011E   2549               LDR      R1,??AlarmPass_Event_0+0x24  ;; AlarmScreenAction
   \   00000120   3200               MOVS     R2,R6
   \   00000122   0A54               STRB     R2,[R1, R0]
   9250                           AlarmOn=0; 
   \   00000124   2448               LDR      R0,??AlarmPass_Event_0+0x28  ;; AlarmOn
   \   00000126   0670               STRB     R6,[R0, #+0]
   9251                           MenuLevel=1;
   \   00000128   2448               LDR      R0,??AlarmPass_Event_0+0x2C  ;; TextToChangeLength + 80
   \   0000012A   0121               MOVS     R1,#+1
   \   0000012C   0160               STR      R1,[R0, #+0]
   \   0000012E   11E0               B        ??AlarmPass_Event_11
   9252                        } 
   9253                        else
   9254                        {
   9255                           //informacja o b³ednym hale
   9256                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??AlarmPass_Event_16:
   \   00000130   3000               MOVS     R0,R6
   \   00000132   3100               MOVS     R1,R6
   \   00000134   01E0               B        ??AlarmPass_Event_19
   \                     ??AlarmPass_Event_20:
   \   00000136   2954               STRB     R1,[R5, R0]
   \   00000138   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Event_19:
   \   0000013A   0828               CMP      R0,#+8
   \   0000013C   FBDB               BLT      ??AlarmPass_Event_20
   9257                           InsertPass1[4]=0;
   \   0000013E   2E71               STRB     R6,[R5, #+4]
   9258                           MESSAGE(Speech[g_leng].BledneHaslo); 
   \   00000140   1F48               LDR      R0,??AlarmPass_Event_0+0x30  ;; 0x7e9
   \   00000142   1949               LDR      R1,??AlarmPass_Event_0+0x18  ;; g_leng
   \   00000144   0968               LDR      R1,[R1, #+0]
   \   00000146   194A               LDR      R2,??AlarmPass_Event_0+0x1C  ;; 0xa7d
   \   00000148   5143               MULS     R1,R2,R1
   \   0000014A   194A               LDR      R2,??AlarmPass_Event_0+0x20  ;; Speech
   \   0000014C   5118               ADDS     R1,R2,R1
   \   0000014E   0818               ADDS     R0,R1,R0
   \   00000150   ........           BL       MESSAGE
   9259                        }
   9260          
   9261                      }
   9262                     
   9263                      if ((ans>=1) && (ans<=11)) 
   \                     ??AlarmPass_Event_11:
   \   00000154   012C               CMP      R4,#+1
   \   00000156   17DB               BLT      ??AlarmPass_Event_21
   \   00000158   0C2C               CMP      R4,#+12
   \   0000015A   15DA               BGE      ??AlarmPass_Event_21
   9264                      {
   9265                        MenuPaint();
   \                     ??AlarmPass_Event_22:
   \   0000015C   ........           BL       MenuPaint
   9266                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000160   0F4D               LDR      R5,??AlarmPass_Event_0+0x10  ;; InsertPass1
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0020               MOVS     R0,#+0
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   7F21               MOVS     R1,#+127
   \   0000016A   03B4               PUSH     {R0,R1}
   \   0000016C   3721               MOVS     R1,#+55
   \   0000016E   2879               LDRB     R0,[R5, #+4]
   \   00000170   03B4               PUSH     {R0,R1}
   \   00000172   5A23               MOVS     R3,#+90
   \   00000174   0422               MOVS     R2,#+4
   \   00000176   0221               MOVS     R1,#+2
   \   00000178   0C35               ADDS     R5,R5,#+12
   \   0000017A   2800               MOVS     R0,R5
   \   0000017C   ........           BL       Label
   \   00000180   06B0               ADD      SP,SP,#+24
   \   00000182   01E0               B        ??AlarmPass_Event_21
   9267                      }
   9268                      
   9269                    }  
   9270                    else if (ans==0) 
   \                     ??AlarmPass_Event_1:
   \   00000184   002C               CMP      R4,#+0
   \   00000186   E9D0               BEQ      ??AlarmPass_Event_22
   9271                      {
   9272                        MenuPaint();
   9273                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   9274                      } 
   9275             
   9276           
   9277            if (Repaint==1) MenuPaint();
   9278          }//_______________________ Koniec funkcji AlarmPass_Event __________________________
   \                     ??AlarmPass_Event_21:
   \   00000188   F8BC               POP      {R3-R7}
   \   0000018A   01BC               POP      {R0}
   \   0000018C   0047               BX       R0               ;; return
   \   0000018E   C046               Nop      
   \                     ??AlarmPass_Event_0:
   \   00000190   ........           DC32     Y_down
   \   00000194   ........           DC32     X_down
   \   00000198   ........           DC32     Y_up
   \   0000019C   ........           DC32     X_up
   \   000001A0   ........           DC32     InsertPass1
   \   000001A4   EED71300           DC32     0x13d7ee
   \   000001A8   ........           DC32     g_leng
   \   000001AC   7D0A0000           DC32     0xa7d
   \   000001B0   ........           DC32     Speech
   \   000001B4   ........           DC32     AlarmScreenAction
   \   000001B8   ........           DC32     AlarmOn
   \   000001BC   ........           DC32     TextToChangeLength + 80
   \   000001C0   E9070000           DC32     0x7e9
   9279            
   9280          
   9281          
   9282          
   9283          
   9284          
   9285          

   \                                 In section Debug.txt, align 4, keep-with-next
   9286          void AlarmPass_Refresh(void)
   9287          {
   \                     AlarmPass_Refresh:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   8EB0               SUB      SP,SP,#+56
   9288           
   9289                   //wskanik ¿ycia
   9290                    if (CurrentSheet==0) 
   \   00000004   3C48               LDR      R0,??AlarmPass_Refresh_0  ;; TextToChangeLength + 4
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   70D1               BNE      ??AlarmPass_Refresh_1
   9291                    {
   9292                    
   9293                      if ((MainSide_puls==0) || (MainSide_puls>3))
   \   0000000C   3B4C               LDR      R4,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   0000000E   2578               LDRB     R5,[R4, #+0]
   \   00000010   002D               CMP      R5,#+0
   \   00000012   01D0               BEQ      ??AlarmPass_Refresh_2
   \   00000014   042D               CMP      R5,#+4
   \   00000016   39D3               BCC      ??AlarmPass_Refresh_3
   9294                      { 
   9295                        
   9296                        char ekran1[2][13] = {
   9297                                   {0,0,224,24,232,244,244,244,232,24,224,0,0},
   9298                                    {0,0,0,3,2,5,5,5,2,3,0,0,0}
   9299                                    };
   \                     ??AlarmPass_Refresh_2:
   \   00000018   394E               LDR      R6,??AlarmPass_Refresh_0+0x8  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`
   \   0000001A   6846               MOV      R0,SP
   \   0000001C   3100               MOVS     R1,R6
   \   0000001E   1C22               MOVS     R2,#+28
   \   00000020   ........           BL       __aeabi_memcpy4
   9300                  
   9301                        char ekranSlave[2][13] = {
   9302                                    {0,0,224,248,152,124,180,220,56,248,224,0,0},
   9303                                    {0,0,0,3,3,7,5,7,3,3,0,0,0},
   9304                                    };
   \   00000024   07A8               ADD      R0,SP,#+28
   \   00000026   1C36               ADDS     R6,R6,#+28
   \   00000028   3100               MOVS     R1,R6
   \   0000002A   1C22               MOVS     R2,#+28
   \   0000002C   ........           BL       __aeabi_memcpy4
   9305                        
   9306                        if ((SlaveMode) )//je¿eli tryb slave
   \   00000030   3448               LDR      R0,??AlarmPass_Refresh_0+0xC  ;; SlaveMode
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   0028               CMP      R0,#+0
   \   00000036   14D0               BEQ      ??AlarmPass_Refresh_4
   9307                        {
   9308                              for (char i=0; i<=12; i++)
   \   00000038   0021               MOVS     R1,#+0
   \                     ??AlarmPass_Refresh_5:
   \   0000003A   0800               MOVS     R0,R1
   \   0000003C   0D28               CMP      R0,#+13
   \   0000003E   25D2               BCS      ??AlarmPass_Refresh_3
   9309                              {
   9310                           
   9311                              LCD_Canvas[0][i+115]=ekranSlave[0][i];
   \   00000040   0A00               MOVS     R2,R1
   \   00000042   3148               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; LCD_Canvas
   \   00000044   8318               ADDS     R3,R0,R2
   \   00000046   7333               ADDS     R3,R3,#+115
   \   00000048   07AE               ADD      R6,SP,#+28
   \   0000004A   B65C               LDRB     R6,[R6, R2]
   \   0000004C   1E70               STRB     R6,[R3, #+0]
   9312                              LCD_Canvas[1][i+115]=ekranSlave[1][i];
   \   0000004E   8018               ADDS     R0,R0,R2
   \   00000050   F330               ADDS     R0,R0,#+243
   \   00000052   07AB               ADD      R3,SP,#+28
   \   00000054   9A18               ADDS     R2,R3,R2
   \   00000056   527B               LDRB     R2,[R2, #+13]
   \   00000058   0270               STRB     R2,[R0, #+0]
   9313                              }
   \   0000005A   491C               ADDS     R1,R1,#+1
   \   0000005C   0906               LSLS     R1,R1,#+24
   \   0000005E   090E               LSRS     R1,R1,#+24
   \   00000060   EBE7               B        ??AlarmPass_Refresh_5
   9314                        }else{
   9315                          
   9316                            for (char i=0; i<=12; i++)
   \                     ??AlarmPass_Refresh_4:
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   0FE0               B        ??AlarmPass_Refresh_6
   9317                            {
   9318                           
   9319                              LCD_Canvas[0][i+115]=ekran1[0][i];
   \                     ??AlarmPass_Refresh_7:
   \   00000066   0A00               MOVS     R2,R1
   \   00000068   2748               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; LCD_Canvas
   \   0000006A   8318               ADDS     R3,R0,R2
   \   0000006C   7333               ADDS     R3,R3,#+115
   \   0000006E   6E46               MOV      R6,SP
   \   00000070   B65C               LDRB     R6,[R6, R2]
   \   00000072   1E70               STRB     R6,[R3, #+0]
   9320                              LCD_Canvas[1][i+115]=ekran1[1][i];
   \   00000074   8018               ADDS     R0,R0,R2
   \   00000076   F330               ADDS     R0,R0,#+243
   \   00000078   6B46               MOV      R3,SP
   \   0000007A   9A18               ADDS     R2,R3,R2
   \   0000007C   527B               LDRB     R2,[R2, #+13]
   \   0000007E   0270               STRB     R2,[R0, #+0]
   9321                            }
   \   00000080   491C               ADDS     R1,R1,#+1
   \   00000082   0906               LSLS     R1,R1,#+24
   \   00000084   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPass_Refresh_6:
   \   00000086   0800               MOVS     R0,R1
   \   00000088   0D28               CMP      R0,#+13
   \   0000008A   ECD3               BCC      ??AlarmPass_Refresh_7
   9322                          }
   9323                       //if ((!g_SlaveConnect) && (SlaveMode)) H_line(2,121,7,0);
   9324                      }
   9325                      if ((MainSide_puls==1) )
   \                     ??AlarmPass_Refresh_3:
   \   0000008C   012D               CMP      R5,#+1
   \   0000008E   21D1               BNE      ??AlarmPass_Refresh_8
   9326                      {
   9327                        
   9328                        if ((g_SlaveConnect) || (!SlaveMode))
   \   00000090   1E48               LDR      R0,??AlarmPass_Refresh_0+0x14  ;; g_SlaveConnect
   \   00000092   0078               LDRB     R0,[R0, #+0]
   \   00000094   0028               CMP      R0,#+0
   \   00000096   03D1               BNE      ??AlarmPass_Refresh_9
   \   00000098   1A48               LDR      R0,??AlarmPass_Refresh_0+0xC  ;; SlaveMode
   \   0000009A   0078               LDRB     R0,[R0, #+0]
   \   0000009C   0028               CMP      R0,#+0
   \   0000009E   19D1               BNE      ??AlarmPass_Refresh_8
   9329                        {
   9330                          char ekran2[2][13] = {
   9331                                    {240,28,230,250,251,253,253,253,251,250,230,28,240},
   9332                                    {1,7,12,11,27,23,23,23,27,11,12,7,1},
   9333                                    };
   \                     ??AlarmPass_Refresh_9:
   \   000000A0   6846               MOV      R0,SP
   \   000000A2   1B49               LDR      R1,??AlarmPass_Refresh_0+0x18  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2` + 56
   \   000000A4   1C22               MOVS     R2,#+28
   \   000000A6   ........           BL       __aeabi_memcpy4
   9334                        
   9335                          for (char i=0; i<=12; i++)
   \   000000AA   0021               MOVS     R1,#+0
   \   000000AC   0FE0               B        ??AlarmPass_Refresh_10
   9336                          {
   9337                           
   9338                            LCD_Canvas[0][i+115]=ekran2[0][i];
   \                     ??AlarmPass_Refresh_11:
   \   000000AE   0A00               MOVS     R2,R1
   \   000000B0   1548               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; LCD_Canvas
   \   000000B2   8318               ADDS     R3,R0,R2
   \   000000B4   7333               ADDS     R3,R3,#+115
   \   000000B6   6E46               MOV      R6,SP
   \   000000B8   B65C               LDRB     R6,[R6, R2]
   \   000000BA   1E70               STRB     R6,[R3, #+0]
   9339                            LCD_Canvas[1][i+115]=ekran2[1][i];
   \   000000BC   8018               ADDS     R0,R0,R2
   \   000000BE   F330               ADDS     R0,R0,#+243
   \   000000C0   6B46               MOV      R3,SP
   \   000000C2   9A18               ADDS     R2,R3,R2
   \   000000C4   527B               LDRB     R2,[R2, #+13]
   \   000000C6   0270               STRB     R2,[R0, #+0]
   9340                          }
   \   000000C8   491C               ADDS     R1,R1,#+1
   \   000000CA   0906               LSLS     R1,R1,#+24
   \   000000CC   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPass_Refresh_10:
   \   000000CE   0800               MOVS     R0,R1
   \   000000D0   0D28               CMP      R0,#+13
   \   000000D2   ECD3               BCC      ??AlarmPass_Refresh_11
   9341                        }
   9342                  
   9343                      }
   9344                       
   9345                  
   9346                    if (g_Stop_Program==0)
   \                     ??AlarmPass_Refresh_8:
   \   000000D4   0F48               LDR      R0,??AlarmPass_Refresh_0+0x1C  ;; g_Stop_Program
   \   000000D6   0078               LDRB     R0,[R0, #+0]
   \   000000D8   0028               CMP      R0,#+0
   \   000000DA   06D1               BNE      ??AlarmPass_Refresh_12
   9347                    {  
   9348                     if (MainSide_puls>7) {MainSide_puls=0;} else {MainSide_puls++;}    
   \   000000DC   082D               CMP      R5,#+8
   \   000000DE   01D3               BCC      ??AlarmPass_Refresh_13
   \   000000E0   2070               STRB     R0,[R4, #+0]
   \   000000E2   04E0               B        ??AlarmPass_Refresh_1
   \                     ??AlarmPass_Refresh_13:
   \   000000E4   6D1C               ADDS     R5,R5,#+1
   \   000000E6   2570               STRB     R5,[R4, #+0]
   \   000000E8   01E0               B        ??AlarmPass_Refresh_1
   9349                    }else{
   9350                      MainSide_puls=7; 
   \                     ??AlarmPass_Refresh_12:
   \   000000EA   0720               MOVS     R0,#+7
   \   000000EC   2070               STRB     R0,[R4, #+0]
   9351                    }
   9352                     
   9353                    }
   9354          
   9355          }//_______________________ Koniec funkcji AlarmPass_Refresh __________________________
   \                     ??AlarmPass_Refresh_1:
   \   000000EE   0EB0               ADD      SP,SP,#+56
   \   000000F0   70BC               POP      {R4-R6}
   \   000000F2   01BC               POP      {R0}
   \   000000F4   0047               BX       R0               ;; return
   \   000000F6   C046               Nop      
   \                     ??AlarmPass_Refresh_0:
   \   000000F8   ........           DC32     TextToChangeLength + 4
   \   000000FC   ........           DC32     MainSide_puls
   \   00000100   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`
   \   00000104   ........           DC32     SlaveMode
   \   00000108   ........           DC32     LCD_Canvas
   \   0000010C   ........           DC32     g_SlaveConnect
   \   00000110   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2` + 56
   \   00000114   ........           DC32     g_Stop_Program
   9356          
   9357          
   9358          
   9359          
   9360          extern char APC;
   9361          //*-----------------------------------------------------------------------------
   9362          //* Nazwa funkcji :    Alarm_Paint
   9363          //* Funkcja strony g³ównej menu
   9364          //*-----------------------------------------------------------------------------
   9365          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   9366          //*-----------------------------------------------------------------------------
   9367          

   \                                 In section Debug.txt, align 4, keep-with-next
   9368          void AlarmPassChange_Paint(char CurrentSheet)
   9369          {
   \                     AlarmPassChange_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   9370          
   9371                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   224C               LDR      R4,??AlarmPassChange_Paint_0  ;; 0xa7d
   \   00000004   224D               LDR      R5,??AlarmPassChange_Paint_0+0x4  ;; g_leng
   \   00000006   234E               LDR      R6,??AlarmPassChange_Paint_0+0x8  ;; Speech
   \   00000008   23A2               ADR      R2,??AlarmPassChange_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000A   24A1               ADR      R1,??AlarmPassChange_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000C   FF20               MOVS     R0,#+255
   \   0000000E   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000010   2B68               LDR      R3,[R5, #+0]
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   F318               ADDS     R3,R6,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   9372                    if (APC==0)
   \   0000001C   2048               LDR      R0,??AlarmPassChange_Paint_0+0x14  ;; APC
   \   0000001E   0078               LDRB     R0,[R0, #+0]
   \   00000020   0028               CMP      R0,#+0
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   13D1               BNE      ??AlarmPassChange_Paint_1
   9373                    {
   9374                      Label(Speech[g_leng].ObecneHaslo,0,3,102,15,58,0,127,0);
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   0090               STR      R0,[SP, #+0]
   \   0000002A   7F21               MOVS     R1,#+127
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3A21               MOVS     R1,#+58
   \   00000030   0F20               MOVS     R0,#+15
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   6623               MOVS     R3,#+102
   \   00000036   0322               MOVS     R2,#+3
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   FF20               MOVS     R0,#+255
   \   0000003C   7830               ADDS     R0,R0,#+120      ;; #+375
   \   0000003E   2D68               LDR      R5,[R5, #+0]
   \   00000040   6543               MULS     R5,R4,R5
   \   00000042   7419               ADDS     R4,R6,R5
   \   00000044   2018               ADDS     R0,R4,R0
   \   00000046   ........           BL       Label
   \   0000004A   06B0               ADD      SP,SP,#+24
   \   0000004C   12E0               B        ??AlarmPassChange_Paint_2
   9375                    }else{
   9376                      Label(Speech[g_leng].NoweHaslo,0,3,102,15,58,0,127,0);
   \                     ??AlarmPassChange_Paint_1:
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   7F21               MOVS     R1,#+127
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   3A21               MOVS     R1,#+58
   \   00000058   0F20               MOVS     R0,#+15
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   6623               MOVS     R3,#+102
   \   0000005E   0322               MOVS     R2,#+3
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   C320               MOVS     R0,#+195
   \   00000064   4000               LSLS     R0,R0,#+1        ;; #+390
   \   00000066   2D68               LDR      R5,[R5, #+0]
   \   00000068   6543               MULS     R5,R4,R5
   \   0000006A   7419               ADDS     R4,R6,R5
   \   0000006C   2018               ADDS     R0,R4,R0
   \   0000006E   ........           BL       Label
   \   00000072   06B0               ADD      SP,SP,#+24
   9377                    }
   9378                    CleanCanvasArea(0,113,64,15,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??AlarmPassChange_Paint_2:
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   0F23               MOVS     R3,#+15
   \   0000007C   4022               MOVS     R2,#+64
   \   0000007E   7121               MOVS     R1,#+113
   \   00000080   ........           BL       CleanCanvasArea
   \   00000084   02B0               ADD      SP,SP,#+8
   9379                
   9380          }//_______________________ Koniec funkcji AlarmPass_Paint __________________________
   \   00000086   70BC               POP      {R4-R6}
   \   00000088   01BC               POP      {R0}
   \   0000008A   0047               BX       R0               ;; return
   \                     ??AlarmPassChange_Paint_0:
   \   0000008C   7D0A0000           DC32     0xa7d
   \   00000090   ........           DC32     g_leng
   \   00000094   ........           DC32     Speech
   \   00000098   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   0000009C   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   000000A0   ........           DC32     APC
   9381            
   9382          
   9383          
   9384          
   9385          //*-----------------------------------------------------------------------------
   9386          //* Nazwa funkcji :    AlarmPass_Event
   9387          //*-----------------------------------------------------------------------------
   9388          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9389          void AlarmPassChange_Event(char CurrentSheet)
   9390          {
   \                     AlarmPassChange_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   9391            short int Repaint=0;
   \   00000004   0024               MOVS     R4,#+0
   \   00000006   6846               MOV      R0,SP
   \   00000008   2100               MOVS     R1,R4
   \   0000000A   0180               STRH     R1,[R0, #+0]
   9392          
   9393          
   9394          
   9395            short int ans;
   9396                  short int roz=0;
   9397                    
   9398                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000C   6C48               LDR      R0,??AlarmPassChange_Event_0  ;; Y_down
   \   0000000E   435E               LDRSH    R3,[R0, R1]
   \   00000010   6C48               LDR      R0,??AlarmPassChange_Event_0+0x4  ;; X_down
   \   00000012   425E               LDRSH    R2,[R0, R1]
   \   00000014   6C48               LDR      R0,??AlarmPassChange_Event_0+0x8  ;; Y_up
   \   00000016   415E               LDRSH    R1,[R0, R1]
   \   00000018   6C48               LDR      R0,??AlarmPassChange_Event_0+0xC  ;; X_up
   \   0000001A   0025               MOVS     R5,#+0
   \   0000001C   405F               LDRSH    R0,[R0, R5]
   \   0000001E   ........           BL       Number_Event
   \   00000022   0500               MOVS     R5,R0
   \   00000024   2D04               LSLS     R5,R5,#+16
   \   00000026   2D14               ASRS     R5,R5,#+16
   9399            
   9400                  if (ans>0)          {
   \   00000028   012D               CMP      R5,#+1
   \   0000002A   00DA               BGE      .+4
   \   0000002C   BBE0               B        ??AlarmPassChange_Event_1
   9401                      
   9402                      if (InsertPass1[4]<=3) 
   \   0000002E   684F               LDR      R7,??AlarmPassChange_Event_0+0x10  ;; InsertPass1
   \   00000030   3879               LDRB     R0,[R7, #+4]
   \   00000032   0428               CMP      R0,#+4
   \   00000034   10D2               BCS      ??AlarmPassChange_Event_2
   9403                      { 
   9404                          if ((ans<10) || (ans==11)) 
   \   00000036   0A2D               CMP      R5,#+10
   \   00000038   01DB               BLT      ??AlarmPassChange_Event_3
   \   0000003A   0B2D               CMP      R5,#+11
   \   0000003C   0CD1               BNE      ??AlarmPassChange_Event_2
   9405                          {
   9406                            if (ans<10) InsertPass1[InsertPass1[4]]=ans+48;
   \                     ??AlarmPassChange_Event_3:
   \   0000003E   0A2D               CMP      R5,#+10
   \   00000040   02DA               BGE      ??AlarmPassChange_Event_4
   \   00000042   2900               MOVS     R1,R5
   \   00000044   3031               ADDS     R1,R1,#+48
   \   00000046   3954               STRB     R1,[R7, R0]
   9407                            if (ans==11) InsertPass1[InsertPass1[4]]=ans+37;
   \                     ??AlarmPassChange_Event_4:
   \   00000048   0B2D               CMP      R5,#+11
   \   0000004A   02D1               BNE      ??AlarmPassChange_Event_5
   \   0000004C   3879               LDRB     R0,[R7, #+4]
   \   0000004E   3021               MOVS     R1,#+48
   \   00000050   3954               STRB     R1,[R7, R0]
   9408                            InsertPass1[4]++;
   \                     ??AlarmPassChange_Event_5:
   \   00000052   3879               LDRB     R0,[R7, #+4]
   \   00000054   401C               ADDS     R0,R0,#+1
   \   00000056   3871               STRB     R0,[R7, #+4]
   9409                          }
   9410                          
   9411                      }
   9412                      if ((ans==10) && (InsertPass1[4]>0) ) {InsertPass1[4]--; InsertPass1[InsertPass1[4]]=0;}
   \                     ??AlarmPassChange_Event_2:
   \   00000058   0A2D               CMP      R5,#+10
   \   0000005A   08D1               BNE      ??AlarmPassChange_Event_6
   \   0000005C   3879               LDRB     R0,[R7, #+4]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   05D0               BEQ      ??AlarmPassChange_Event_6
   \   00000062   401E               SUBS     R0,R0,#+1
   \   00000064   3871               STRB     R0,[R7, #+4]
   \   00000066   0006               LSLS     R0,R0,#+24
   \   00000068   000E               LSRS     R0,R0,#+24
   \   0000006A   2100               MOVS     R1,R4
   \   0000006C   3954               STRB     R1,[R7, R0]
   9413                      
   9414                      
   9415                     short int InsertPassVar=0;
   \                     ??AlarmPassChange_Event_6:
   \   0000006E   2000               MOVS     R0,R4
   9416                     for (char i=0; i<=3; i++)  pass_tmp[i]=0;
   \   00000070   2100               MOVS     R1,R4
   \   00000072   2300               MOVS     R3,R4
   \   00000074   04E0               B        ??AlarmPassChange_Event_7
   \                     ??AlarmPassChange_Event_8:
   \   00000076   BA18               ADDS     R2,R7,R2
   \   00000078   1373               STRB     R3,[R2, #+12]
   \   0000007A   491C               ADDS     R1,R1,#+1
   \   0000007C   0906               LSLS     R1,R1,#+24
   \   0000007E   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPassChange_Event_7:
   \   00000080   0A00               MOVS     R2,R1
   \   00000082   042A               CMP      R2,#+4
   \   00000084   F7D3               BCC      ??AlarmPassChange_Event_8
   9417                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<4))
   \                     ??AlarmPassChange_Event_9:
   \   00000086   395C               LDRB     R1,[R7, R0]
   \   00000088   0029               CMP      R1,#+0
   \   0000008A   08D0               BEQ      ??AlarmPassChange_Event_10
   \   0000008C   0428               CMP      R0,#+4
   \   0000008E   06DA               BGE      ??AlarmPassChange_Event_10
   9418                     {
   9419                       pass_tmp[InsertPassVar]=42; //42="*"
   \   00000090   3918               ADDS     R1,R7,R0
   \   00000092   2A22               MOVS     R2,#+42
   \   00000094   0A73               STRB     R2,[R1, #+12]
   9420                       InsertPassVar++;
   \   00000096   401C               ADDS     R0,R0,#+1
   \   00000098   0004               LSLS     R0,R0,#+16
   \   0000009A   0014               ASRS     R0,R0,#+16
   \   0000009C   F3E7               B        ??AlarmPassChange_Event_9
   9421                     }
   9422          
   9423                    
   9424                      //Sprawdzenie has³a
   9425                      if (ans==12)
   \                     ??AlarmPassChange_Event_10:
   \   0000009E   0C2D               CMP      R5,#+12
   \   000000A0   69D1               BNE      ??AlarmPassChange_Event_11
   9426                      {
   9427                        
   9428                        roz=0;
   \   000000A2   2000               MOVS     R0,R4
   9429                        for (int i=0; i<=3; i++)
   \   000000A4   2100               MOVS     R1,R4
   \   000000A6   27E0               B        ??AlarmPassChange_Event_12
   9430                        {
   9431                          if (APC==0)
   \                     ??AlarmPassChange_Event_13:
   \   000000A8   4A4A               LDR      R2,??AlarmPassChange_Event_0+0x14  ;; APC
   \   000000AA   1278               LDRB     R2,[R2, #+0]
   \   000000AC   002A               CMP      R2,#+0
   \   000000AE   22D1               BNE      ??AlarmPassChange_Event_14
   9432                          {
   9433                            if ((InsertPass1[i]!=AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][i])) roz=1;
   \   000000B0   6A46               MOV      R2,SP
   \   000000B2   127A               LDRB     R2,[R2, #+8]
   \   000000B4   9200               LSLS     R2,R2,#+2
   \   000000B6   484B               LDR      R3,??AlarmPassChange_Event_0+0x18  ;; 0x13d7ee
   \   000000B8   9A18               ADDS     R2,R3,R2
   \   000000BA   7B5C               LDRB     R3,[R7, R1]
   \   000000BC   565C               LDRB     R6,[R2, R1]
   \   000000BE   B342               CMP      R3,R6
   \   000000C0   00D0               BEQ      ??AlarmPassChange_Event_15
   \   000000C2   0120               MOVS     R0,#+1
   9434                            if  ((AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][0]==0) && 
   9435                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][1]==0) &&
   9436                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][2]==0) &&
   9437                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][3]==0) &&
   9438                                (InsertPass1[0]=='0') && 
   9439                                  (InsertPass1[1]=='0') && 
   9440                                    (InsertPass1[2]=='0') && 
   9441                                      (InsertPass1[3]=='0'))
   \                     ??AlarmPassChange_Event_15:
   \   000000C4   1378               LDRB     R3,[R2, #+0]
   \   000000C6   002B               CMP      R3,#+0
   \   000000C8   15D1               BNE      ??AlarmPassChange_Event_14
   \   000000CA   5378               LDRB     R3,[R2, #+1]
   \   000000CC   002B               CMP      R3,#+0
   \   000000CE   12D1               BNE      ??AlarmPassChange_Event_14
   \   000000D0   9378               LDRB     R3,[R2, #+2]
   \   000000D2   002B               CMP      R3,#+0
   \   000000D4   0FD1               BNE      ??AlarmPassChange_Event_14
   \   000000D6   D278               LDRB     R2,[R2, #+3]
   \   000000D8   002A               CMP      R2,#+0
   \   000000DA   0CD1               BNE      ??AlarmPassChange_Event_14
   \   000000DC   3A78               LDRB     R2,[R7, #+0]
   \   000000DE   302A               CMP      R2,#+48
   \   000000E0   09D1               BNE      ??AlarmPassChange_Event_14
   \   000000E2   7A78               LDRB     R2,[R7, #+1]
   \   000000E4   302A               CMP      R2,#+48
   \   000000E6   06D1               BNE      ??AlarmPassChange_Event_14
   \   000000E8   BA78               LDRB     R2,[R7, #+2]
   \   000000EA   302A               CMP      R2,#+48
   \   000000EC   03D1               BNE      ??AlarmPassChange_Event_14
   \   000000EE   FA78               LDRB     R2,[R7, #+3]
   \   000000F0   302A               CMP      R2,#+48
   \   000000F2   00D1               BNE      ??AlarmPassChange_Event_14
   9442                                {
   9443                                  roz=0;
   \   000000F4   2000               MOVS     R0,R4
   9444                                }
   9445                           
   9446                            
   9447                          }
   9448                        }
   \                     ??AlarmPassChange_Event_14:
   \   000000F6   491C               ADDS     R1,R1,#+1
   \                     ??AlarmPassChange_Event_12:
   \   000000F8   0429               CMP      R1,#+4
   \   000000FA   D5DB               BLT      ??AlarmPassChange_Event_13
   9449                        
   9450                        
   9451                        if (roz==0)                                 //je¿eli poprawne haslo
   \   000000FC   0028               CMP      R0,#+0
   \   000000FE   28D1               BNE      ??AlarmPassChange_Event_16
   9452                        {
   9453                           
   9454                           
   9455          
   9456                           if (APC==1)
   \   00000100   3448               LDR      R0,??AlarmPassChange_Event_0+0x14  ;; APC
   \   00000102   0178               LDRB     R1,[R0, #+0]
   \   00000104   0129               CMP      R1,#+1
   \   00000106   16D1               BNE      ??AlarmPassChange_Event_17
   9457                           {
   9458                              APC=0;
   \   00000108   2100               MOVS     R1,R4
   \   0000010A   0170               STRB     R1,[R0, #+0]
   9459                              MenuLevel=1;
   \   0000010C   3348               LDR      R0,??AlarmPassChange_Event_0+0x1C  ;; TextToChangeLength + 80
   \   0000010E   0121               MOVS     R1,#+1
   \   00000110   0160               STR      R1,[R0, #+0]
   9460                              
   9461                              unsigned int Save = __get_interrupt_state();  
   \   00000112   ........           BL       __iar_get_interrupt_state
   \   00000116   0600               MOVS     R6,R0
   9462                              __disable_interrupt();
   \   00000118   ........           BL       __iar_disable_interrupt
   9463                                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet])), InsertPass1, 4);
                                             ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000011C   0422               MOVS     R2,#+4
   \   0000011E   3900               MOVS     R1,R7
   \   00000120   6846               MOV      R0,SP
   \   00000122   007A               LDRB     R0,[R0, #+8]
   \   00000124   8000               LSLS     R0,R0,#+2
   \   00000126   2C4B               LDR      R3,??AlarmPassChange_Event_0+0x18  ;; 0x13d7ee
   \   00000128   1818               ADDS     R0,R3,R0
   \   0000012A   ........           BL       FlashWrite
   9464                              __set_interrupt_state(Save);
   \   0000012E   3000               MOVS     R0,R6
   \   00000130   ........           BL       __iar_set_interrupt_state
   \   00000134   01E0               B        ??AlarmPassChange_Event_18
   9465                              
   9466                           }else{
   9467                            APC=1; 
   \                     ??AlarmPassChange_Event_17:
   \   00000136   0121               MOVS     R1,#+1
   \   00000138   0170               STRB     R1,[R0, #+0]
   9468                           }
   9469                           for (int i=0; i<=3; i++) InsertPass1[i]=0;
   \                     ??AlarmPassChange_Event_18:
   \   0000013A   2000               MOVS     R0,R4
   \   0000013C   2100               MOVS     R1,R4
   \   0000013E   01E0               B        ??AlarmPassChange_Event_19
   \                     ??AlarmPassChange_Event_20:
   \   00000140   3954               STRB     R1,[R7, R0]
   \   00000142   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPassChange_Event_19:
   \   00000144   0428               CMP      R0,#+4
   \   00000146   FBDB               BLT      ??AlarmPassChange_Event_20
   9470                           InsertPass1[4]=0;
   \   00000148   3C71               STRB     R4,[R7, #+4]
   9471                           Repaint=1;
   \   0000014A   6846               MOV      R0,SP
   \   0000014C   0121               MOVS     R1,#+1
   \   0000014E   0180               STRH     R1,[R0, #+0]
   \   00000150   11E0               B        ??AlarmPassChange_Event_11
   9472                        } 
   9473                        else
   9474                        {
   9475                           //informacja o b³ednym hale
   9476                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??AlarmPassChange_Event_16:
   \   00000152   2000               MOVS     R0,R4
   \   00000154   2100               MOVS     R1,R4
   \   00000156   01E0               B        ??AlarmPassChange_Event_21
   \                     ??AlarmPassChange_Event_22:
   \   00000158   3954               STRB     R1,[R7, R0]
   \   0000015A   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPassChange_Event_21:
   \   0000015C   0828               CMP      R0,#+8
   \   0000015E   FBDB               BLT      ??AlarmPassChange_Event_22
   9477                           InsertPass1[4]=0;
   \   00000160   3C71               STRB     R4,[R7, #+4]
   9478                           MESSAGE(Speech[g_leng].BledneHaslo); 
   \   00000162   1F48               LDR      R0,??AlarmPassChange_Event_0+0x20  ;; 0x7e9
   \   00000164   1F49               LDR      R1,??AlarmPassChange_Event_0+0x24  ;; g_leng
   \   00000166   0968               LDR      R1,[R1, #+0]
   \   00000168   1F4A               LDR      R2,??AlarmPassChange_Event_0+0x28  ;; 0xa7d
   \   0000016A   5143               MULS     R1,R2,R1
   \   0000016C   1F4A               LDR      R2,??AlarmPassChange_Event_0+0x2C  ;; Speech
   \   0000016E   5118               ADDS     R1,R2,R1
   \   00000170   0818               ADDS     R0,R1,R0
   \   00000172   ........           BL       MESSAGE
   9479                        }
   9480                        
   9481          
   9482                      }
   9483                     
   9484                      if ((ans>=1) && (ans<=11)) 
   \                     ??AlarmPassChange_Event_11:
   \   00000176   012D               CMP      R5,#+1
   \   00000178   17DB               BLT      ??AlarmPassChange_Event_23
   \   0000017A   0C2D               CMP      R5,#+12
   \   0000017C   15DA               BGE      ??AlarmPassChange_Event_23
   9485                      {
   9486                        MenuPaint();
   \                     ??AlarmPassChange_Event_24:
   \   0000017E   ........           BL       MenuPaint
   9487                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000182   134F               LDR      R7,??AlarmPassChange_Event_0+0x10  ;; InsertPass1
   \   00000184   82B0               SUB      SP,SP,#+8
   \   00000186   2000               MOVS     R0,R4
   \   00000188   0090               STR      R0,[SP, #+0]
   \   0000018A   7F21               MOVS     R1,#+127
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   3721               MOVS     R1,#+55
   \   00000190   3879               LDRB     R0,[R7, #+4]
   \   00000192   03B4               PUSH     {R0,R1}
   \   00000194   5A23               MOVS     R3,#+90
   \   00000196   0422               MOVS     R2,#+4
   \   00000198   0221               MOVS     R1,#+2
   \   0000019A   0C37               ADDS     R7,R7,#+12
   \   0000019C   3800               MOVS     R0,R7
   \   0000019E   ........           BL       Label
   \   000001A2   06B0               ADD      SP,SP,#+24
   \   000001A4   01E0               B        ??AlarmPassChange_Event_23
   9488                      }
   9489                      
   9490                    }  
   9491                    else if (ans==0) 
   \                     ??AlarmPassChange_Event_1:
   \   000001A6   002D               CMP      R5,#+0
   \   000001A8   E9D0               BEQ      ??AlarmPassChange_Event_24
   9492                      {
   9493                        MenuPaint();
   9494                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   9495                     } 
   9496           
   9497          
   9498           
   9499          
   9500          
   9501           
   9502            if (Repaint==1) MenuPaint();
   \                     ??AlarmPassChange_Event_23:
   \   000001AA   6946               MOV      R1,SP
   \   000001AC   2000               MOVS     R0,R4
   \   000001AE   085E               LDRSH    R0,[R1, R0]
   \   000001B0   0128               CMP      R0,#+1
   \   000001B2   01D1               BNE      ??AlarmPassChange_Event_25
   \   000001B4   ........           BL       MenuPaint
   9503          }//_______________________ Koniec funkcji AlarmPass_Event __________________________
   \                     ??AlarmPassChange_Event_25:
   \   000001B8   FEBC               POP      {R1-R7}
   \   000001BA   01BC               POP      {R0}
   \   000001BC   0047               BX       R0               ;; return
   \   000001BE   C046               Nop      
   \                     ??AlarmPassChange_Event_0:
   \   000001C0   ........           DC32     Y_down
   \   000001C4   ........           DC32     X_down
   \   000001C8   ........           DC32     Y_up
   \   000001CC   ........           DC32     X_up
   \   000001D0   ........           DC32     InsertPass1
   \   000001D4   ........           DC32     APC
   \   000001D8   EED71300           DC32     0x13d7ee
   \   000001DC   ........           DC32     TextToChangeLength + 80
   \   000001E0   E9070000           DC32     0x7e9
   \   000001E4   ........           DC32     g_leng
   \   000001E8   7D0A0000           DC32     0xa7d
   \   000001EC   ........           DC32     Speech
   9504            
   9505          
   9506          
   9507          
   9508          
   9509                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9510                void Node_Paint(char CurrentNode)
   9511                {
   \                     Node_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   \   00000002   0400               MOVS     R4,R0
   9512                  char txt[8];
   9513                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6946               MOV      R1,SP
   \   00000006   4E20               MOVS     R0,#+78
   \   00000008   0870               STRB     R0,[R1, #+0]
   \   0000000A   6F20               MOVS     R0,#+111
   \   0000000C   4870               STRB     R0,[R1, #+1]
   \   0000000E   6420               MOVS     R0,#+100
   \   00000010   8870               STRB     R0,[R1, #+2]
   \   00000012   6520               MOVS     R0,#+101
   \   00000014   C870               STRB     R0,[R1, #+3]
   \   00000016   2020               MOVS     R0,#+32
   \   00000018   0871               STRB     R0,[R1, #+4]
   9514                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   0000001A   0222               MOVS     R2,#+2
   \   0000001C   491D               ADDS     R1,R1,#+5
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       CharToStr
   9515                  
   9516                  if ((TransQuality.Mensur[CurrentNode-1]>0) || (TransQuality.SlowMensur[CurrentNode-1]>0) || (TransQuality.QuickMensur[CurrentNode-1]>0))
   \   00000024   2948               LDR      R0,??Node_Paint_0  ;; TransQuality
   \   00000026   A100               LSLS     R1,R4,#+2
   \   00000028   4118               ADDS     R1,R0,R1
   \   0000002A   896C               LDR      R1,[R1, #+72]
   \   0000002C   0029               CMP      R1,#+0
   \   0000002E   07D1               BNE      ??Node_Paint_1
   \   00000030   0019               ADDS     R0,R0,R4
   \   00000032   8178               LDRB     R1,[R0, #+2]
   \   00000034   0029               CMP      R1,#+0
   \   00000036   03D1               BNE      ??Node_Paint_1
   \   00000038   2530               ADDS     R0,R0,#+37
   \   0000003A   0078               LDRB     R0,[R0, #+0]
   \   0000003C   0028               CMP      R0,#+0
   \   0000003E   23D0               BEQ      ??Node_Paint_2
   9517                  {
   9518                      List_Paint(txt,7,15,0,0,3, Speech[g_leng].ZmID, Speech[g_leng].UsunID, Speech[g_leng].ZmOpis, Speech[g_leng].TestTrans, Speech[g_leng].StanWeWy, Speech[g_leng].Analogi  ,"Info",0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Node_Paint_1:
   \   00000040   2348               LDR      R0,??Node_Paint_0+0x4  ;; g_leng
   \   00000042   0068               LDR      R0,[R0, #+0]
   \   00000044   2349               LDR      R1,??Node_Paint_0+0x8  ;; 0xa7d
   \   00000046   4843               MULS     R0,R1,R0
   \   00000048   2349               LDR      R1,??Node_Paint_0+0xC  ;; Speech
   \   0000004A   0A18               ADDS     R2,R1,R0
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   2348               LDR      R0,??Node_Paint_0+0x10  ;; `?<Constant "Info">`
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   A520               MOVS     R0,#+165
   \   00000054   0001               LSLS     R0,R0,#+4        ;; #+2640
   \   00000056   1118               ADDS     R1,R2,R0
   \   00000058   2148               LDR      R0,??Node_Paint_0+0x14  ;; 0x87f
   \   0000005A   1018               ADDS     R0,R2,R0
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   2148               LDR      R0,??Node_Paint_0+0x18  ;; 0x88e
   \   00000060   1118               ADDS     R1,R2,R0
   \   00000062   1E38               SUBS     R0,R0,#+30
   \   00000064   1018               ADDS     R0,R2,R0
   \   00000066   03B4               PUSH     {R0,R1}
   \   00000068   1F48               LDR      R0,??Node_Paint_0+0x1C  ;; 0x861
   \   0000006A   1118               ADDS     R1,R2,R0
   \   0000006C   0F38               SUBS     R0,R0,#+15
   \   0000006E   1018               ADDS     R0,R2,R0
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   0321               MOVS     R1,#+3
   \   00000074   0020               MOVS     R0,#+0
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   0300               MOVS     R3,R0
   \   0000007A   0F22               MOVS     R2,#+15
   \   0000007C   0721               MOVS     R1,#+7
   \   0000007E   0AA8               ADD      R0,SP,#+40
   \   00000080   ........           BL       List_Paint
   \   00000084   0AB0               ADD      SP,SP,#+40
   \   00000086   1DE0               B        ??Node_Paint_3
   9519                  }else{
   9520                      List_Paint(txt,4,15,0,0,3, Speech[g_leng].ZmID, Speech[g_leng].UsunID, Speech[g_leng].ZmOpis, Speech[g_leng].TestTrans, 0 ,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Node_Paint_2:
   \   00000088   1148               LDR      R0,??Node_Paint_0+0x4  ;; g_leng
   \   0000008A   0068               LDR      R0,[R0, #+0]
   \   0000008C   1149               LDR      R1,??Node_Paint_0+0x8  ;; 0xa7d
   \   0000008E   4843               MULS     R0,R1,R0
   \   00000090   1149               LDR      R1,??Node_Paint_0+0xC  ;; Speech
   \   00000092   0A18               ADDS     R2,R1,R0
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   0800               MOVS     R0,R1
   \   00000098   03B4               PUSH     {R0,R1}
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   1148               LDR      R0,??Node_Paint_0+0x18  ;; 0x88e
   \   0000009E   1118               ADDS     R1,R2,R0
   \   000000A0   1E38               SUBS     R0,R0,#+30
   \   000000A2   1018               ADDS     R0,R2,R0
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   1048               LDR      R0,??Node_Paint_0+0x1C  ;; 0x861
   \   000000A8   1118               ADDS     R1,R2,R0
   \   000000AA   0F38               SUBS     R0,R0,#+15
   \   000000AC   1018               ADDS     R0,R2,R0
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   0321               MOVS     R1,#+3
   \   000000B2   0020               MOVS     R0,#+0
   \   000000B4   03B4               PUSH     {R0,R1}
   \   000000B6   0300               MOVS     R3,R0
   \   000000B8   0F22               MOVS     R2,#+15
   \   000000BA   0421               MOVS     R1,#+4
   \   000000BC   0AA8               ADD      R0,SP,#+40
   \   000000BE   ........           BL       List_Paint
   \   000000C2   0AB0               ADD      SP,SP,#+40
   9521          
   9522                  }   
   9523                  
   9524                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??Node_Paint_3:
   \   000000C4   1CBC               POP      {R2-R4}
   \   000000C6   01BC               POP      {R0}
   \   000000C8   0047               BX       R0               ;; return
   \   000000CA   C046               Nop      
   \                     ??Node_Paint_0:
   \   000000CC   ........           DC32     TransQuality
   \   000000D0   ........           DC32     g_leng
   \   000000D4   7D0A0000           DC32     0xa7d
   \   000000D8   ........           DC32     Speech
   \   000000DC   ........           DC32     `?<Constant "Info">`
   \   000000E0   7F080000           DC32     0x87f
   \   000000E4   8E080000           DC32     0x88e
   \   000000E8   61080000           DC32     0x861
   9525          
   9526          
   9527          
   9528                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9529                void Node_Event(char CurrentNode)
   9530                {
   \                     Node_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9531                  int ans;
   9532                 
   9533                  if ((TransQuality.Mensur[CurrentNode-1]>0) || (TransQuality.SlowMensur[CurrentNode-1]>0) || (TransQuality.QuickMensur[CurrentNode-1]>0))
   \   00000002   0400               MOVS     R4,R0
   \   00000004   A700               LSLS     R7,R4,#+2
   \   00000006   4548               LDR      R0,??Node_Event_0  ;; TransQuality
   \   00000008   C019               ADDS     R0,R0,R7
   \   0000000A   0090               STR      R0,[SP, #+0]
   \   0000000C   806C               LDR      R0,[R0, #+72]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   08D1               BNE      ??Node_Event_1
   \   00000012   4248               LDR      R0,??Node_Event_0  ;; TransQuality
   \   00000014   0019               ADDS     R0,R0,R4
   \   00000016   8178               LDRB     R1,[R0, #+2]
   \   00000018   0029               CMP      R1,#+0
   \   0000001A   03D1               BNE      ??Node_Event_1
   \   0000001C   2530               ADDS     R0,R0,#+37
   \   0000001E   0078               LDRB     R0,[R0, #+0]
   \   00000020   0028               CMP      R0,#+0
   \   00000022   14D0               BEQ      ??Node_Event_2
   9534                  {
   9535                    ans=List_Event(X_up, Y_up, X_down, Y_down, 7 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??Node_Event_1:
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   0800               MOVS     R0,R1
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   0F21               MOVS     R1,#+15
   \   0000002C   0720               MOVS     R0,#+7
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   3B48               LDR      R0,??Node_Event_0+0x4  ;; Y_down
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   435E               LDRSH    R3,[R0, R1]
   \   00000036   3B48               LDR      R0,??Node_Event_0+0x8  ;; X_down
   \   00000038   425E               LDRSH    R2,[R0, R1]
   \   0000003A   3B48               LDR      R0,??Node_Event_0+0xC  ;; Y_up
   \   0000003C   415E               LDRSH    R1,[R0, R1]
   \   0000003E   3B48               LDR      R0,??Node_Event_0+0x10  ;; X_up
   \   00000040   0025               MOVS     R5,#+0
   \   00000042   405F               LDRSH    R0,[R0, R5]
   \   00000044   ........           BL       List_Event
   \   00000048   04B0               ADD      SP,SP,#+16
   \   0000004A   0500               MOVS     R5,R0
   \   0000004C   11E0               B        ??Node_Event_3
   9536                  }else{
   9537                    ans=List_Event(X_up, Y_up, X_down, Y_down, 4 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??Node_Event_2:
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   0F21               MOVS     R1,#+15
   \   00000052   0420               MOVS     R0,#+4
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   3248               LDR      R0,??Node_Event_0+0x4  ;; Y_down
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   435E               LDRSH    R3,[R0, R1]
   \   0000005C   3148               LDR      R0,??Node_Event_0+0x8  ;; X_down
   \   0000005E   425E               LDRSH    R2,[R0, R1]
   \   00000060   3148               LDR      R0,??Node_Event_0+0xC  ;; Y_up
   \   00000062   415E               LDRSH    R1,[R0, R1]
   \   00000064   3148               LDR      R0,??Node_Event_0+0x10  ;; X_up
   \   00000066   0025               MOVS     R5,#+0
   \   00000068   405F               LDRSH    R0,[R0, R5]
   \   0000006A   ........           BL       List_Event
   \   0000006E   04B0               ADD      SP,SP,#+16
   \   00000070   0500               MOVS     R5,R0
   9538                  }
   9539                  if (ans)
   \                     ??Node_Event_3:
   \   00000072   002D               CMP      R5,#+0
   \   00000074   4ED0               BEQ      ??Node_Event_4
   9540                    {
   9541                    if ((ans>0) && (ans<=6)) 
   \   00000076   012D               CMP      R5,#+1
   \   00000078   3EDB               BLT      ??Node_Event_5
   \   0000007A   072D               CMP      R5,#+7
   \   0000007C   3CDA               BGE      ??Node_Event_5
   9542                    {
   9543                      RF_NodeTest.Sent=0;
   \   0000007E   2C48               LDR      R0,??Node_Event_0+0x14  ;; RF_NodeTest
   \   00000080   0026               MOVS     R6,#+0
   \   00000082   4660               STR      R6,[R0, #+4]
   9544                      RF_NodeTest.SentSyn=0;   
   \   00000084   8660               STR      R6,[R0, #+8]
   9545                      RF_NodeTest.Recived=0;
   \   00000086   C660               STR      R6,[R0, #+12]
   9546                      if (ans==2) //je¿eli usun ID
   \   00000088   022D               CMP      R5,#+2
   \   0000008A   25D1               BNE      ??Node_Event_6
   \   0000008C   2948               LDR      R0,??Node_Event_0+0x18  ;; 0xc094
   \   0000008E   2A49               LDR      R1,??Node_Event_0+0x1C  ;; gProg
   \   00000090   C919               ADDS     R1,R1,R7
   \   00000092   0E50               STR      R6,[R1, R0]
   9547                      {
   9548                        gProg.NeuronsIdTab[CurrentNode-1]=0;
   9549                        NeuronsList[CurrentNode-1].NeuronID=0;
   \   00000094   0C20               MOVS     R0,#+12
   \   00000096   6043               MULS     R0,R4,R0
   \   00000098   2849               LDR      R1,??Node_Event_0+0x20  ;; NeuronsList
   \   0000009A   0818               ADDS     R0,R1,R0
   \   0000009C   0C38               SUBS     R0,R0,#+12
   \   0000009E   4660               STR      R6,[R0, #+4]
   9550                        NeuronsList[CurrentNode-1].NeuronType=NoneNodeType;
   \   000000A0   3100               MOVS     R1,R6
   \   000000A2   0170               STRB     R1,[R0, #+0]
   9551                        ProgramChange=1;
   \   000000A4   264F               LDR      R7,??Node_Event_0+0x24  ;; TextToChangeLength
   \   000000A6   0120               MOVS     R0,#+1
   \   000000A8   3872               STRB     R0,[R7, #+8]
   9552                        RefreshNeuronsList(&gProg);
   \   000000AA   2348               LDR      R0,??Node_Event_0+0x1C  ;; gProg
   \   000000AC   ........           BL       RefreshNeuronsList
   9553                        SetTask(&gProg);
   \   000000B0   2148               LDR      R0,??Node_Event_0+0x1C  ;; gProg
   \   000000B2   ........           BL       SetTask
   9554                        TransQuality.SlowMensur[CurrentNode]=0;
   \   000000B6   1948               LDR      R0,??Node_Event_0  ;; TransQuality
   \   000000B8   0019               ADDS     R0,R0,R4
   \   000000BA   0100               MOVS     R1,R0
   \   000000BC   891C               ADDS     R1,R1,#+2
   \   000000BE   3200               MOVS     R2,R6
   \   000000C0   4A70               STRB     R2,[R1, #+1]
   9555                        TransQuality.QuickMensur[CurrentNode]=0;
   \   000000C2   2530               ADDS     R0,R0,#+37
   \   000000C4   3100               MOVS     R1,R6
   \   000000C6   4170               STRB     R1,[R0, #+1]
   9556                        TransQuality.Mensur[CurrentNode]=0;
   \   000000C8   0098               LDR      R0,[SP, #+0]
   \   000000CA   C664               STR      R6,[R0, #+76]
   9557                        MenuLevel=(MenuLevel/10);
   \   000000CC   386D               LDR      R0,[R7, #+80]
   \   000000CE   0A21               MOVS     R1,#+10
   \   000000D0   ........           BL       __aeabi_idivmod
   \   000000D4   3865               STR      R0,[R7, #+80]
   \   000000D6   0FE0               B        ??Node_Event_5
   9558                      }
   9559                      else if (ans==3) //je¿eli zmien opis
   \                     ??Node_Event_6:
   \   000000D8   032D               CMP      R5,#+3
   \   000000DA   194F               LDR      R7,??Node_Event_0+0x24  ;; TextToChangeLength
   \   000000DC   386D               LDR      R0,[R7, #+80]
   \   000000DE   07D1               BNE      ??Node_Event_7
   9560                      {
   9561                        MenuLevel=(MenuLevel/10)*10+2;
   \   000000E0   0A21               MOVS     R1,#+10
   \   000000E2   ........           BL       __aeabi_idivmod
   \   000000E6   0A21               MOVS     R1,#+10
   \   000000E8   4843               MULS     R0,R1,R0
   \   000000EA   801C               ADDS     R0,R0,#+2
   \   000000EC   3865               STR      R0,[R7, #+80]
   \   000000EE   03E0               B        ??Node_Event_5
   9562                      }
   9563                      else{
   9564                        MenuLevel=(MenuLevel*10+ans);
   \                     ??Node_Event_7:
   \   000000F0   0A21               MOVS     R1,#+10
   \   000000F2   4843               MULS     R0,R1,R0
   \   000000F4   4019               ADDS     R0,R0,R5
   \   000000F6   3865               STR      R0,[R7, #+80]
   9565                      }
   9566                    }
   9567                     if (ans<0) {
   \                     ??Node_Event_5:
   \   000000F8   002D               CMP      R5,#+0
   \   000000FA   09D5               BPL      ??Node_Event_8
   9568                      MenuLevel=(MenuLevel/10);
   \   000000FC   104F               LDR      R7,??Node_Event_0+0x24  ;; TextToChangeLength
   \   000000FE   386D               LDR      R0,[R7, #+80]
   \   00000100   0A21               MOVS     R1,#+10
   \   00000102   ........           BL       __aeabi_idivmod
   \   00000106   3865               STR      R0,[R7, #+80]
   9569                      NeuronNrChange=0;
   \   00000108   0026               MOVS     R6,#+0
   \   0000010A   3000               MOVS     R0,R6
   \   0000010C   F870               STRB     R0,[R7, #+3]
   9570                      NeuronIdChange=0;
   \   0000010E   BE66               STR      R6,[R7, #+104]
   9571                    }
   9572                    MenuPaint();
   \                     ??Node_Event_8:
   \   00000110   ........           BL       MenuPaint
   9573                    } 
   9574                }//_______________________________________________________________________
   \                     ??Node_Event_4:
   \   00000114   F8BC               POP      {R3-R7}
   \   00000116   01BC               POP      {R0}
   \   00000118   0047               BX       R0               ;; return
   \   0000011A   C046               Nop      
   \                     ??Node_Event_0:
   \   0000011C   ........           DC32     TransQuality
   \   00000120   ........           DC32     Y_down
   \   00000124   ........           DC32     X_down
   \   00000128   ........           DC32     Y_up
   \   0000012C   ........           DC32     X_up
   \   00000130   ........           DC32     RF_NodeTest
   \   00000134   94C00000           DC32     0xc094
   \   00000138   ........           DC32     gProg
   \   0000013C   ........           DC32     NeuronsList
   \   00000140   ........           DC32     TextToChangeLength
   9575          
   9576                 
   9577          
   9578          
   9579          
   9580                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9581                void NodeTestTrans_Paint(char CurrentNode)
   9582                {  
   \                     NodeTestTrans_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   9583                     List_Paint(Speech[g_leng].TestTrans,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   584C               LDR      R4,??NodeTestTrans_Paint_0  ;; 0xa7d
   \   00000006   594D               LDR      R5,??NodeTestTrans_Paint_0+0x4  ;; g_leng
   \   00000008   594E               LDR      R6,??NodeTestTrans_Paint_0+0x8  ;; Speech
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   57A0               ADR      R0,??NodeTestTrans_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0321               MOVS     R1,#+3
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0300               MOVS     R3,R0
   \   00000020   6C22               MOVS     R2,#+108
   \   00000022   0121               MOVS     R1,#+1
   \   00000024   5448               LDR      R0,??NodeTestTrans_Paint_0+0x10  ;; 0x88e
   \   00000026   2F68               LDR      R7,[R5, #+0]
   \   00000028   6743               MULS     R7,R4,R7
   \   0000002A   F719               ADDS     R7,R6,R7
   \   0000002C   3818               ADDS     R0,R7,R0
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   9584                     RF_NodeTest.NodeNr=CurrentNode;
   \   00000034   514F               LDR      R7,??NodeTestTrans_Paint_0+0x14  ;; RF_NodeTest
   \   00000036   6846               MOV      R0,SP
   \   00000038   007C               LDRB     R0,[R0, #+16]
   \   0000003A   3870               STRB     R0,[R7, #+0]
   9585                     
   9586                      char txt[10];
   9587                     
   9588                    //H_line(0,110,63,1); // (char X, int Y, char lenght, char typ)
   9589                     Label(Speech[g_leng].Dane_wyslane,0,2,100,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   7F21               MOVS     R1,#+127
   \   00000044   0120               MOVS     R0,#+1
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   0821               MOVS     R1,#+8
   \   0000004A   0F20               MOVS     R0,#+15
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   6423               MOVS     R3,#+100
   \   00000050   0222               MOVS     R2,#+2
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8C46               MOV      R12,R1
   \   00000056   4A49               LDR      R1,??NodeTestTrans_Paint_0+0x18  ;; 0x89d
   \   00000058   2868               LDR      R0,[R5, #+0]
   \   0000005A   6043               MULS     R0,R4,R0
   \   0000005C   3018               ADDS     R0,R6,R0
   \   0000005E   4018               ADDS     R0,R0,R1
   \   00000060   6146               MOV      R1,R12
   \   00000062   ........           BL       Label
   \   00000066   06B0               ADD      SP,SP,#+24
   9590                     H_line(0,80,63,1); // (char X, int Y, char lenght, char typ)
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   3F22               MOVS     R2,#+63
   \   0000006C   5021               MOVS     R1,#+80
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   ........           BL       H_line
   9591                     Label(Speech[g_leng].Dane_odebrane,0,2,70,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   7F21               MOVS     R1,#+127
   \   0000007C   0120               MOVS     R0,#+1
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   0821               MOVS     R1,#+8
   \   00000082   0F20               MOVS     R0,#+15
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   4623               MOVS     R3,#+70
   \   00000088   0222               MOVS     R2,#+2
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   8C46               MOV      R12,R1
   \   0000008E   3D49               LDR      R1,??NodeTestTrans_Paint_0+0x1C  ;; 0x8ac
   \   00000090   2868               LDR      R0,[R5, #+0]
   \   00000092   6043               MULS     R0,R4,R0
   \   00000094   3018               ADDS     R0,R6,R0
   \   00000096   4018               ADDS     R0,R0,R1
   \   00000098   6146               MOV      R1,R12
   \   0000009A   ........           BL       Label
   \   0000009E   06B0               ADD      SP,SP,#+24
   9592                     H_line(0,50,63,1); // (char X, int Y, char lenght, char typ)
   \   000000A0   0123               MOVS     R3,#+1
   \   000000A2   3F22               MOVS     R2,#+63
   \   000000A4   3221               MOVS     R1,#+50
   \   000000A6   0020               MOVS     R0,#+0
   \   000000A8   ........           BL       H_line
   9593                     Label(Speech[g_leng].Dane_utracone,0,2,40,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000AC   82B0               SUB      SP,SP,#+8
   \   000000AE   0020               MOVS     R0,#+0
   \   000000B0   0090               STR      R0,[SP, #+0]
   \   000000B2   7F21               MOVS     R1,#+127
   \   000000B4   0120               MOVS     R0,#+1
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   0821               MOVS     R1,#+8
   \   000000BA   0F20               MOVS     R0,#+15
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   2823               MOVS     R3,#+40
   \   000000C0   0222               MOVS     R2,#+2
   \   000000C2   0021               MOVS     R1,#+0
   \   000000C4   3048               LDR      R0,??NodeTestTrans_Paint_0+0x20  ;; 0x8bb
   \   000000C6   2D68               LDR      R5,[R5, #+0]
   \   000000C8   6543               MULS     R5,R4,R5
   \   000000CA   7419               ADDS     R4,R6,R5
   \   000000CC   2018               ADDS     R0,R4,R0
   \   000000CE   ........           BL       Label
   \   000000D2   06B0               ADD      SP,SP,#+24
   9594          
   9595                     short Sent=RF_NodeTest.SentSyn; 
   \   000000D4   BC68               LDR      R4,[R7, #+8]
   \   000000D6   2404               LSLS     R4,R4,#+16
   \   000000D8   2414               ASRS     R4,R4,#+16
   9596                     short Recived=RF_NodeTest.Recived; 
   \   000000DA   FD68               LDR      R5,[R7, #+12]
   \   000000DC   2D04               LSLS     R5,R5,#+16
   \   000000DE   2D14               ASRS     R5,R5,#+16
   9597                     
   9598                     sprintf(txt, "%d", Sent);
                            ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000000E0   2AA6               ADR      R6,??NodeTestTrans_Paint_0+0x24  ;; 0x25, 0x64, 0x00, 0x00
   \   000000E2   2200               MOVS     R2,R4
   \   000000E4   3100               MOVS     R1,R6
   \   000000E6   6846               MOV      R0,SP
   \   000000E8   ........           BL       sprintf
   9599                     Label(txt,1,55,90,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   0020               MOVS     R0,#+0
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   7F21               MOVS     R1,#+127
   \   000000F4   0120               MOVS     R0,#+1
   \   000000F6   03B4               PUSH     {R0,R1}
   \   000000F8   2821               MOVS     R1,#+40
   \   000000FA   0A20               MOVS     R0,#+10
   \   000000FC   03B4               PUSH     {R0,R1}
   \   000000FE   5A23               MOVS     R3,#+90
   \   00000100   3722               MOVS     R2,#+55
   \   00000102   0121               MOVS     R1,#+1
   \   00000104   06A8               ADD      R0,SP,#+24
   \   00000106   ........           BL       Label
   \   0000010A   06B0               ADD      SP,SP,#+24
   9600                            
   9601                     sprintf(txt, "%d", Recived);
   \   0000010C   2A00               MOVS     R2,R5
   \   0000010E   3100               MOVS     R1,R6
   \   00000110   6846               MOV      R0,SP
   \   00000112   ........           BL       sprintf
   9602                     Label(txt,1,55,60,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000116   82B0               SUB      SP,SP,#+8
   \   00000118   0020               MOVS     R0,#+0
   \   0000011A   0090               STR      R0,[SP, #+0]
   \   0000011C   7F21               MOVS     R1,#+127
   \   0000011E   0120               MOVS     R0,#+1
   \   00000120   03B4               PUSH     {R0,R1}
   \   00000122   2821               MOVS     R1,#+40
   \   00000124   0A20               MOVS     R0,#+10
   \   00000126   03B4               PUSH     {R0,R1}
   \   00000128   3C23               MOVS     R3,#+60
   \   0000012A   3722               MOVS     R2,#+55
   \   0000012C   0121               MOVS     R1,#+1
   \   0000012E   06A8               ADD      R0,SP,#+24
   \   00000130   ........           BL       Label
   \   00000134   06B0               ADD      SP,SP,#+24
   9603                            
   9604                     sprintf(txt, "%d", Sent-Recived);
   \   00000136   621B               SUBS     R2,R4,R5
   \   00000138   3100               MOVS     R1,R6
   \   0000013A   6846               MOV      R0,SP
   \   0000013C   ........           BL       sprintf
   9605                     Label(txt,1,55,30,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0020               MOVS     R0,#+0
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   7F21               MOVS     R1,#+127
   \   00000148   0120               MOVS     R0,#+1
   \   0000014A   03B4               PUSH     {R0,R1}
   \   0000014C   2821               MOVS     R1,#+40
   \   0000014E   0A20               MOVS     R0,#+10
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   1E23               MOVS     R3,#+30
   \   00000154   3722               MOVS     R2,#+55
   \   00000156   0121               MOVS     R1,#+1
   \   00000158   06A8               ADD      R0,SP,#+24
   \   0000015A   ........           BL       Label
   \   0000015E   06B0               ADD      SP,SP,#+24
   9606                    
   9607                     
   9608                }//_______________________________________________________________________ 
   \   00000160   05B0               ADD      SP,SP,#+20
   \   00000162   F0BC               POP      {R4-R7}
   \   00000164   01BC               POP      {R0}
   \   00000166   0047               BX       R0               ;; return
   \                     ??NodeTestTrans_Paint_0:
   \   00000168   7D0A0000           DC32     0xa7d
   \   0000016C   ........           DC32     g_leng
   \   00000170   ........           DC32     Speech
   \   00000174   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000178   8E080000           DC32     0x88e
   \   0000017C   ........           DC32     RF_NodeTest
   \   00000180   9D080000           DC32     0x89d
   \   00000184   AC080000           DC32     0x8ac
   \   00000188   BB080000           DC32     0x8bb
   \   0000018C   25640000           DC8      0x25, 0x64, 0x00, 0x00
   9609          
   9610                                  
   9611          
   9612                //*-----------------------------------------------------------------------
   9613                short ValNTT=0;

   \                                 In section Debug.txt, align 4, keep-with-next
   9614                void NodeTestTrans_Event(char CurrentNode)
   9615                {
   \                     NodeTestTrans_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   9616                  int ans;
   9617                 
   9618                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   1248               LDR      R0,??NodeTestTrans_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   1248               LDR      R0,??NodeTestTrans_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   1248               LDR      R0,??NodeTestTrans_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   1248               LDR      R0,??NodeTestTrans_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   9619            
   9620                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   13D0               BEQ      ??NodeTestTrans_Event_1
   9621                    {
   9622                    if (ans<0) {
   \   0000002A   10D5               BPL      ??NodeTestTrans_Event_2
   9623                      ValNTT=0;
   \   0000002C   0E4D               LDR      R5,??NodeTestTrans_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   2000               MOVS     R0,R4
   \   00000030   A886               STRH     R0,[R5, #+52]
   9624                      MenuLevel=(MenuLevel/100);
   \   00000032   286D               LDR      R0,[R5, #+80]
   \   00000034   6421               MOVS     R1,#+100
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   2865               STR      R0,[R5, #+80]
   9625                     NeuronNrChange=0;
   \   0000003C   2000               MOVS     R0,R4
   \   0000003E   E870               STRB     R0,[R5, #+3]
   9626                     NeuronIdChange=0;
   \   00000040   AC66               STR      R4,[R5, #+104]
   9627                     RF_NodeTest.NodeNr=0;
   \   00000042   0A48               LDR      R0,??NodeTestTrans_Event_0+0x14  ;; RF_NodeTest
   \   00000044   2100               MOVS     R1,R4
   \   00000046   0170               STRB     R1,[R0, #+0]
   9628                     RF_NodeTest.Sent=0;
   \   00000048   4460               STR      R4,[R0, #+4]
   9629                     RF_NodeTest.SentSyn=0;   
   \   0000004A   8460               STR      R4,[R0, #+8]
   9630                     RF_NodeTest.Recived=0;
   \   0000004C   C460               STR      R4,[R0, #+12]
   9631                    }
   9632                    MenuPaint();                ;
   \                     ??NodeTestTrans_Event_2:
   \   0000004E   ........           BL       MenuPaint
   9633                    } 
   9634                }//_______________________________________________________________________
   \                     ??NodeTestTrans_Event_1:
   \   00000052   38BC               POP      {R3-R5}
   \   00000054   01BC               POP      {R0}
   \   00000056   0047               BX       R0               ;; return
   \                     ??NodeTestTrans_Event_0:
   \   00000058   ........           DC32     Y_down
   \   0000005C   ........           DC32     X_down
   \   00000060   ........           DC32     Y_up
   \   00000064   ........           DC32     X_up
   \   00000068   ........           DC32     TextToChangeLength
   \   0000006C   ........           DC32     RF_NodeTest
   9635          
   9636          
   9637          
   9638          
   9639          
   9640                //*------------------------------------------------³-----------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9641                void NodeTestTrans_Refresh(char CurrentNode)
   9642                {  
   \                     NodeTestTrans_Refresh:
   \   00000000   7FB5               PUSH     {R0-R6,LR}
   9643                     char txt[10];
   9644                     char il;
   9645                     static char Dziel8;
   9646                     if (Dziel8<8) {Dziel8++;}else
   \   00000002   2948               LDR      R0,??NodeTestTrans_Refresh_0  ;; ??Dziel8
   \   00000004   0178               LDRB     R1,[R0, #+0]
   \   00000006   0829               CMP      R1,#+8
   \   00000008   02D2               BCS      ??NodeTestTrans_Refresh_1
   \   0000000A   491C               ADDS     R1,R1,#+1
   \   0000000C   0170               STRB     R1,[R0, #+0]
   \   0000000E   48E0               B        ??NodeTestTrans_Refresh_2
   9647                     {
   9648                        Dziel8=0;
   \                     ??NodeTestTrans_Refresh_1:
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0170               STRB     R1,[R0, #+0]
   9649                        short Sent=RF_NodeTest.SentSyn; 
   \   00000014   2548               LDR      R0,??NodeTestTrans_Refresh_0+0x4  ;; RF_NodeTest
   \   00000016   8468               LDR      R4,[R0, #+8]
   \   00000018   2404               LSLS     R4,R4,#+16
   \   0000001A   2414               ASRS     R4,R4,#+16
   9650                        short Recived=RF_NodeTest.Recived; 
   \   0000001C   C568               LDR      R5,[R0, #+12]
   \   0000001E   2D04               LSLS     R5,R5,#+16
   \   00000020   2D14               ASRS     R5,R5,#+16
   9651                     
   9652                        sprintf(txt, "%d", Sent);
                               ^
Warning[Pe223]: function "sprintf" declared implicitly

             char il;
                  ^
"D:\Zeuron\Projekty\S300\S300-program v1.3 BETA- 14.03.2013\Framework\ScreenMENU2.c",9644  Warning[Pe177]: 
          variable "il" was declared but never referenced
   \   00000022   23A6               ADR      R6,??NodeTestTrans_Refresh_0+0x8  ;; 0x25, 0x64, 0x00, 0x00
   \   00000024   2200               MOVS     R2,R4
   \   00000026   3100               MOVS     R1,R6
   \   00000028   6846               MOV      R0,SP
   \   0000002A   ........           BL       sprintf
   9653                        Label(txt,1,55,90,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000002E   82B0               SUB      SP,SP,#+8
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   0090               STR      R0,[SP, #+0]
   \   00000034   7F21               MOVS     R1,#+127
   \   00000036   0120               MOVS     R0,#+1
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   2821               MOVS     R1,#+40
   \   0000003C   0A20               MOVS     R0,#+10
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   5A23               MOVS     R3,#+90
   \   00000042   3722               MOVS     R2,#+55
   \   00000044   0121               MOVS     R1,#+1
   \   00000046   06A8               ADD      R0,SP,#+24
   \   00000048   ........           BL       Label
   \   0000004C   06B0               ADD      SP,SP,#+24
   9654                            
   9655                        sprintf(txt, "%d", Recived);
   \   0000004E   2A00               MOVS     R2,R5
   \   00000050   3100               MOVS     R1,R6
   \   00000052   6846               MOV      R0,SP
   \   00000054   ........           BL       sprintf
   9656                        Label(txt,1,55,60,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000058   82B0               SUB      SP,SP,#+8
   \   0000005A   0020               MOVS     R0,#+0
   \   0000005C   0090               STR      R0,[SP, #+0]
   \   0000005E   7F21               MOVS     R1,#+127
   \   00000060   0120               MOVS     R0,#+1
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   2821               MOVS     R1,#+40
   \   00000066   0A20               MOVS     R0,#+10
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   3C23               MOVS     R3,#+60
   \   0000006C   3722               MOVS     R2,#+55
   \   0000006E   0121               MOVS     R1,#+1
   \   00000070   06A8               ADD      R0,SP,#+24
   \   00000072   ........           BL       Label
   \   00000076   06B0               ADD      SP,SP,#+24
   9657                            
   9658                        sprintf(txt, "%d", Sent-Recived);
   \   00000078   621B               SUBS     R2,R4,R5
   \   0000007A   3100               MOVS     R1,R6
   \   0000007C   6846               MOV      R0,SP
   \   0000007E   ........           BL       sprintf
   9659                        Label(txt,1,55,30,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000082   82B0               SUB      SP,SP,#+8
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   0090               STR      R0,[SP, #+0]
   \   00000088   7F21               MOVS     R1,#+127
   \   0000008A   0120               MOVS     R0,#+1
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   2821               MOVS     R1,#+40
   \   00000090   0A20               MOVS     R0,#+10
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   1E23               MOVS     R3,#+30
   \   00000096   3722               MOVS     R2,#+55
   \   00000098   0121               MOVS     R1,#+1
   \   0000009A   06A8               ADD      R0,SP,#+24
   \   0000009C   ........           BL       Label
   \   000000A0   06B0               ADD      SP,SP,#+24
   9660                    
   9661                     }
   9662                }//_______________________________________________________________________ 
   \                     ??NodeTestTrans_Refresh_2:
   \   000000A2   7FBC               POP      {R0-R6}
   \   000000A4   01BC               POP      {R0}
   \   000000A6   0047               BX       R0               ;; return
   \                     ??NodeTestTrans_Refresh_0:
   \   000000A8   ........           DC32     ??Dziel8
   \   000000AC   ........           DC32     RF_NodeTest
   \   000000B0   25640000           DC8      0x25, 0x64, 0x00, 0x00

   \                                 In section .bss, align 1
   \                     ??Dziel8:
   \   00000000                      DS8 1
   9663          
   9664          
   9665          
   9666                char FirstNodeStanIO_Paint=0;
   9667                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9668                void NodeStanIO_Paint(char CurrentNode)
   9669                {  
   \                     NodeStanIO_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   \   00000002   0400               MOVS     R4,R0
   9670                      char txt[8];
   9671                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6946               MOV      R1,SP
   \   00000006   4E20               MOVS     R0,#+78
   \   00000008   0870               STRB     R0,[R1, #+0]
   \   0000000A   6F20               MOVS     R0,#+111
   \   0000000C   4870               STRB     R0,[R1, #+1]
   \   0000000E   6420               MOVS     R0,#+100
   \   00000010   8870               STRB     R0,[R1, #+2]
   \   00000012   6520               MOVS     R0,#+101
   \   00000014   C870               STRB     R0,[R1, #+3]
   \   00000016   2020               MOVS     R0,#+32
   \   00000018   0871               STRB     R0,[R1, #+4]
   9672                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   0000001A   0222               MOVS     R2,#+2
   \   0000001C   491D               ADDS     R1,R1,#+5
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       CharToStr
   9673                  
   9674                     List_Paint(txt,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   0800               MOVS     R0,R1
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0DA0               ADR      R0,??NodeStanIO_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0321               MOVS     R1,#+3
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0300               MOVS     R3,R0
   \   0000003A   6C22               MOVS     R2,#+108
   \   0000003C   0121               MOVS     R1,#+1
   \   0000003E   0AA8               ADD      R0,SP,#+40
   \   00000040   ........           BL       List_Paint
   \   00000044   0AB0               ADD      SP,SP,#+40
   9675           /*
   9676                     CleanCanvasArea(14,6,2,95,1);
   9677                     CleanCanvasArea(14+32,6,2,95,1);
   9678          
   9679                     Label("DI",2,2,99,2,25,1,127,1);
   9680                     Label("DO",2,34,99,2,25,1,127,1); 
   9681             */        
   9682                     NodeStanIO_Refresh(CurrentNode);
   \   00000046   2000               MOVS     R0,R4
   \   00000048   ........           BL       NodeStanIO_Refresh
   9683                     
   9684                     FirstNodeStanIO_Paint=1;
   \   0000004C   0648               LDR      R0,??NodeStanIO_Paint_0+0x4  ;; TextToChangeLength + 31
   \   0000004E   0121               MOVS     R1,#+1
   \   00000050   0170               STRB     R1,[R0, #+0]
   9685                     AddRfTask(SQ, CurrentNode, 0);                //Dodaj rozkaz do tablicy zadañ RF
   \   00000052   0022               MOVS     R2,#+0
   \   00000054   2100               MOVS     R1,R4
   \   00000056   0220               MOVS     R0,#+2
   \   00000058   ........           BL       AddRfTask
   9686                }//_______________________________________________________________________ 
   \   0000005C   1CBC               POP      {R2-R4}
   \   0000005E   01BC               POP      {R0}
   \   00000060   0047               BX       R0               ;; return
   \   00000062   C046               Nop      
   \                     ??NodeStanIO_Paint_0:
   \   00000064   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000068   ........           DC32     TextToChangeLength + 31
   9687          
   9688          
   9689          
   9690          
   9691                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9692                void NodeStanIO_Event(char CurrentNode)
   9693                {
   \                     NodeStanIO_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   3648               LDR      R0,??NodeStanIO_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   3548               LDR      R0,??NodeStanIO_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   3548               LDR      R0,??NodeStanIO_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   3548               LDR      R0,??NodeStanIO_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   9694                  int ans;
   9695                  char NP;
   9696                 
   9697                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0090               STR      R0,[SP, #+0]
   \   0000002A   2200               MOVS     R2,R4
   9698            
   9699                  
   9700                  
   9701                  NP=0;
   9702                  for (char j=0; j<2; j++) 
   \   0000002C   1100               MOVS     R1,R2
   \   0000002E   02E0               B        ??NodeStanIO_Event_1
   \                     ??NodeStanIO_Event_2:
   \   00000030   491C               ADDS     R1,R1,#+1
   \   00000032   0906               LSLS     R1,R1,#+24
   \   00000034   090E               LSRS     R1,R1,#+24
   \                     ??NodeStanIO_Event_1:
   \   00000036   0800               MOVS     R0,R1
   \   00000038   0228               CMP      R0,#+2
   \   0000003A   3FD2               BCS      ??NodeStanIO_Event_3
   9703                    for (char i=0; i<8; i++)
   \   0000003C   0023               MOVS     R3,#+0
   \   0000003E   0DE0               B        ??NodeStanIO_Event_4
   9704                      {  
   9705                        
   9706                        if ((X_up>34+15*j) && (X_up<34+11+15*j) && (Y_up>87-i*12) && (Y_up<87+11-i*12)) 
   9707                        {
   9708                          if  ((MainStage.StageQ[CurrentNode].Port>>NP)&0x1)
   9709                          {
   9710                             MainStage.StageQ[CurrentNode].Port &= ~(1<<NP);
   9711                          }else{
   9712                             MainStage.StageQ[CurrentNode].Port |= (1<<NP);
   \                     ??NodeStanIO_Event_5:
   \   00000040   0127               MOVS     R7,#+1
   \   00000042   9740               LSLS     R7,R7,R2
   \   00000044   3743               ORRS     R7,R7,R6
   \   00000046   0780               STRH     R7,[R0, #+0]
   9713                          }
   9714                          MainStage.SendStageChange[CurrentNode]=ChangeStageFlag;
   \                     ??NodeStanIO_Event_6:
   \   00000048   2B48               LDR      R0,??NodeStanIO_Event_0+0x10  ;; 0x6eb
   \   0000004A   6419               ADDS     R4,R4,R5
   \   0000004C   0A25               MOVS     R5,#+10
   \   0000004E   2554               STRB     R5,[R4, R0]
   9715                        }
   9716                       NP++;
   \                     ??NodeStanIO_Event_7:
   \   00000050   521C               ADDS     R2,R2,#+1
   \   00000052   1206               LSLS     R2,R2,#+24
   \   00000054   120E               LSRS     R2,R2,#+24
   \   00000056   5B1C               ADDS     R3,R3,#+1
   \   00000058   1B06               LSLS     R3,R3,#+24
   \   0000005A   1B0E               LSRS     R3,R3,#+24
   \                     ??NodeStanIO_Event_4:
   \   0000005C   1800               MOVS     R0,R3
   \   0000005E   0828               CMP      R0,#+8
   \   00000060   E6D2               BCS      ??NodeStanIO_Event_2
   \   00000062   0800               MOVS     R0,R1
   \   00000064   0F24               MOVS     R4,#+15
   \   00000066   6043               MULS     R0,R4,R0
   \   00000068   224C               LDR      R4,??NodeStanIO_Event_0+0xC  ;; X_up
   \   0000006A   0025               MOVS     R5,#+0
   \   0000006C   645F               LDRSH    R4,[R4, R5]
   \   0000006E   0500               MOVS     R5,R0
   \   00000070   2235               ADDS     R5,R5,#+34
   \   00000072   A542               CMP      R5,R4
   \   00000074   ECDA               BGE      ??NodeStanIO_Event_7
   \   00000076   2D30               ADDS     R0,R0,#+45
   \   00000078   8442               CMP      R4,R0
   \   0000007A   E9DA               BGE      ??NodeStanIO_Event_7
   \   0000007C   1800               MOVS     R0,R3
   \   0000007E   0C24               MOVS     R4,#+12
   \   00000080   6043               MULS     R0,R4,R0
   \   00000082   1B4C               LDR      R4,??NodeStanIO_Event_0+0x8  ;; Y_up
   \   00000084   0025               MOVS     R5,#+0
   \   00000086   645F               LDRSH    R4,[R4, R5]
   \   00000088   5725               MOVS     R5,#+87
   \   0000008A   2D1A               SUBS     R5,R5,R0
   \   0000008C   A542               CMP      R5,R4
   \   0000008E   DFDA               BGE      ??NodeStanIO_Event_7
   \   00000090   6225               MOVS     R5,#+98
   \   00000092   281A               SUBS     R0,R5,R0
   \   00000094   8442               CMP      R4,R0
   \   00000096   DBDA               BGE      ??NodeStanIO_Event_7
   \   00000098   6846               MOV      R0,SP
   \   0000009A   057A               LDRB     R5,[R0, #+8]
   \   0000009C   174C               LDR      R4,??NodeStanIO_Event_0+0x14  ;; MainStage
   \   0000009E   1848               LDR      R0,??NodeStanIO_Event_0+0x18  ;; 0x3a2
   \   000000A0   1626               MOVS     R6,#+22
   \   000000A2   6E43               MULS     R6,R5,R6
   \   000000A4   A619               ADDS     R6,R4,R6
   \   000000A6   3018               ADDS     R0,R6,R0
   \   000000A8   0688               LDRH     R6,[R0, #+0]
   \   000000AA   3700               MOVS     R7,R6
   \   000000AC   1741               ASRS     R7,R7,R2
   \   000000AE   FF07               LSLS     R7,R7,#+31
   \   000000B0   C6D5               BPL      ??NodeStanIO_Event_5
   \   000000B2   0127               MOVS     R7,#+1
   \   000000B4   9740               LSLS     R7,R7,R2
   \   000000B6   BE43               BICS     R6,R6,R7
   \   000000B8   0680               STRH     R6,[R0, #+0]
   \   000000BA   C5E7               B        ??NodeStanIO_Event_6
   9717                      }
   9718                  
   9719                  
   9720                  
   9721                  if (ans)
   \                     ??NodeStanIO_Event_3:
   \   000000BC   0098               LDR      R0,[SP, #+0]
   \   000000BE   0028               CMP      R0,#+0
   \   000000C0   0FD0               BEQ      ??NodeStanIO_Event_8
   9722                    {
   9723                    if (ans<0) {
   \   000000C2   0CD5               BPL      ??NodeStanIO_Event_9
   9724                      MenuLevel=(MenuLevel/100);
   \   000000C4   0F4C               LDR      R4,??NodeStanIO_Event_0+0x1C  ;; TextToChangeLength
   \   000000C6   206D               LDR      R0,[R4, #+80]
   \   000000C8   6421               MOVS     R1,#+100
   \   000000CA   ........           BL       __aeabi_idivmod
   \   000000CE   2065               STR      R0,[R4, #+80]
   9725                     NeuronNrChange=0;
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   E070               STRB     R0,[R4, #+3]
   9726                     NeuronIdChange=0;
   \   000000D4   A066               STR      R0,[R4, #+104]
   9727                     FirstNodeStanIO_Paint=0;
   \   000000D6   E077               STRB     R0,[R4, #+31]
   9728                     SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   000000D8   0B48               LDR      R0,??NodeStanIO_Event_0+0x20  ;; gProg
   \   000000DA   ........           BL       SetTask
   9729                    }
   9730                    MenuPaint();
   \                     ??NodeStanIO_Event_9:
   \   000000DE   ........           BL       MenuPaint
   9731                    } 
   9732                  
   9733                  
   9734                  
   9735                  
   9736                }//_______________________________________________________________________
   \                     ??NodeStanIO_Event_8:
   \   000000E2   FEBC               POP      {R1-R7}
   \   000000E4   01BC               POP      {R0}
   \   000000E6   0047               BX       R0               ;; return
   \                     ??NodeStanIO_Event_0:
   \   000000E8   ........           DC32     Y_down
   \   000000EC   ........           DC32     X_down
   \   000000F0   ........           DC32     Y_up
   \   000000F4   ........           DC32     X_up
   \   000000F8   EB060000           DC32     0x6eb
   \   000000FC   ........           DC32     MainStage
   \   00000100   A2030000           DC32     0x3a2
   \   00000104   ........           DC32     TextToChangeLength
   \   00000108   ........           DC32     gProg
   9737          
   9738          
   9739          
   9740                
   9741                
   9742                
   9743          
   9744          
   9745                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9746                void NodeStanIO_Refresh(char CurrentNode)
   9747                {  
   \                     NodeStanIO_Refresh:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   9748                     char Txt[6];
   9749                  
   9750                     static char Dziel5=5;
   9751                     if (MainStage.StageI[CurrentNode].Port !=(unsigned short int )0x8AAA) Dziel5=6;
   \   00000004   1621               MOVS     R1,#+22
   \   00000006   4843               MULS     R0,R1,R0
   \   00000008   D749               LDR      R1,??NodeStanIO_Refresh_0  ;; MainStage
   \   0000000A   0818               ADDS     R0,R1,R0
   \   0000000C   0490               STR      R0,[SP, #+16]
   \   0000000E   A030               ADDS     R0,R0,#+160
   \   00000010   0390               STR      R0,[SP, #+12]
   \   00000012   0088               LDRH     R0,[R0, #+0]
   \   00000014   D549               LDR      R1,??NodeStanIO_Refresh_0+0x4  ;; 0x8aaa
   \   00000016   8842               CMP      R0,R1
   \   00000018   02D0               BEQ      ??NodeStanIO_Refresh_1
   \   0000001A   D54A               LDR      R2,??NodeStanIO_Refresh_0+0x8  ;; ??Dziel5_2
   \   0000001C   0623               MOVS     R3,#+6
   \   0000001E   1370               STRB     R3,[R2, #+0]
   9752                     if (Dziel5<5) {Dziel5++;}else
   \                     ??NodeStanIO_Refresh_1:
   \   00000020   D34A               LDR      R2,??NodeStanIO_Refresh_0+0x8  ;; ??Dziel5_2
   \   00000022   1378               LDRB     R3,[R2, #+0]
   \   00000024   052B               CMP      R3,#+5
   \   00000026   02D2               BCS      ??NodeStanIO_Refresh_2
   \   00000028   5B1C               ADDS     R3,R3,#+1
   \   0000002A   1370               STRB     R3,[R2, #+0]
   \   0000002C   97E1               B        ??NodeStanIO_Refresh_3
   \                     ??NodeStanIO_Refresh_2:
   \   0000002E   0023               MOVS     R3,#+0
   \   00000030   1370               STRB     R3,[R2, #+0]
   9753                     {
   9754                       Dziel5=0;
   9755                        if (MainStage.StageI[CurrentNode].Port !=(unsigned short int )0x8AAA) //je¿eli dane wiarygodne
   \   00000032   8842               CMP      R0,R1
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   00D1               BNE      .+4
   \   00000038   38E1               B        ??NodeStanIO_Refresh_4
   9756                         {
   9757                       
   9758                                     
   9759                                     CleanCanvasArea(1,3,61,95,0);
   \   0000003A   1800               MOVS     R0,R3
   \   0000003C   0090               STR      R0,[SP, #+0]
   \   0000003E   5F23               MOVS     R3,#+95
   \   00000040   3D22               MOVS     R2,#+61
   \   00000042   0321               MOVS     R1,#+3
   \   00000044   0120               MOVS     R0,#+1
   \   00000046   ........           BL       CleanCanvasArea
   \   0000004A   02B0               ADD      SP,SP,#+8
   9760                                     CleanCanvasArea(14,6,2,95,1);
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0120               MOVS     R0,#+1
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   5F23               MOVS     R3,#+95
   \   00000054   0222               MOVS     R2,#+2
   \   00000056   0621               MOVS     R1,#+6
   \   00000058   0E20               MOVS     R0,#+14
   \   0000005A   ........           BL       CleanCanvasArea
   \   0000005E   02B0               ADD      SP,SP,#+8
   9761                                     CleanCanvasArea(14+32,6,2,95,1);
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   0120               MOVS     R0,#+1
   \   00000064   0090               STR      R0,[SP, #+0]
   \   00000066   5F23               MOVS     R3,#+95
   \   00000068   0222               MOVS     R2,#+2
   \   0000006A   0621               MOVS     R1,#+6
   \   0000006C   2E20               MOVS     R0,#+46
   \   0000006E   ........           BL       CleanCanvasArea
   \   00000072   02B0               ADD      SP,SP,#+8
   9762                          
   9763                                     Label("DI",2,2,99,2,25,1,127,1);
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0120               MOVS     R0,#+1
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   7F21               MOVS     R1,#+127
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   1921               MOVS     R1,#+25
   \   00000080   0220               MOVS     R0,#+2
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   6323               MOVS     R3,#+99
   \   00000086   0200               MOVS     R2,R0
   \   00000088   0100               MOVS     R1,R0
   \   0000008A   BAA0               ADR      R0,??NodeStanIO_Refresh_0+0xC  ;; 0x44, 0x49, 0x00, 0x00
   \   0000008C   ........           BL       Label
   \   00000090   06B0               ADD      SP,SP,#+24
   9764                                     Label("DO",2,34,99,2,25,1,127,1); 
   \   00000092   82B0               SUB      SP,SP,#+8
   \   00000094   0120               MOVS     R0,#+1
   \   00000096   0090               STR      R0,[SP, #+0]
   \   00000098   7F21               MOVS     R1,#+127
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   1921               MOVS     R1,#+25
   \   0000009E   0220               MOVS     R0,#+2
   \   000000A0   03B4               PUSH     {R0,R1}
   \   000000A2   6323               MOVS     R3,#+99
   \   000000A4   2222               MOVS     R2,#+34
   \   000000A6   0100               MOVS     R1,R0
   \   000000A8   B3A0               ADR      R0,??NodeStanIO_Refresh_0+0x10  ;; 0x44, 0x4F, 0x00, 0x00
   \   000000AA   ........           BL       Label
   \   000000AE   06B0               ADD      SP,SP,#+24
   9765          
   9766                                      char NP=0;
   \   000000B0   0025               MOVS     R5,#+0
   9767                                      for (char j=0; j<2; j++) 
   \   000000B2   2C00               MOVS     R4,R5
   \   000000B4   02E0               B        ??NodeStanIO_Refresh_5
   \                     ??NodeStanIO_Refresh_6:
   \   000000B6   641C               ADDS     R4,R4,#+1
   \   000000B8   2406               LSLS     R4,R4,#+24
   \   000000BA   240E               LSRS     R4,R4,#+24
   \                     ??NodeStanIO_Refresh_5:
   \   000000BC   2000               MOVS     R0,R4
   \   000000BE   0228               CMP      R0,#+2
   \   000000C0   73D2               BCS      ??NodeStanIO_Refresh_7
   9768                                      for (char i=0; i<8; i++)
   \   000000C2   0026               MOVS     R6,#+0
   \   000000C4   37E0               B        ??NodeStanIO_Refresh_8
   9769                                      {
   9770                                        if  ((MainStage.StageI[CurrentNode].Port>>NP)&0x1)
   9771                                        {
   9772                                          CopyToCanvasPoint((char*)&Frame[0][0],2+15*j,87-i*12,11,11);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght)
   9773                                          CharToStr (NP, Txt, 2);
   9774                                          Label(Txt,2,3+15*j,88-i*12,2,8,1,127,1);  
   9775                                        } else{
   9776                                          CopyToCanvasPoint((char*)&Frame[0][0],2+15*j,87-i*12,11,11); 
   \                     ??NodeStanIO_Refresh_9:
   \   000000C6   2700               MOVS     R7,R4
   \   000000C8   0F20               MOVS     R0,#+15
   \   000000CA   4743               MULS     R7,R0,R7
   \   000000CC   3000               MOVS     R0,R6
   \   000000CE   0C21               MOVS     R1,#+12
   \   000000D0   4843               MULS     R0,R1,R0
   \   000000D2   0090               STR      R0,[SP, #+0]
   \   000000D4   82B0               SUB      SP,SP,#+8
   \   000000D6   0B20               MOVS     R0,#+11
   \   000000D8   0090               STR      R0,[SP, #+0]
   \   000000DA   0300               MOVS     R3,R0
   \   000000DC   5720               MOVS     R0,#+87
   \   000000DE   0299               LDR      R1,[SP, #+8]
   \   000000E0   421A               SUBS     R2,R0,R1
   \   000000E2   1206               LSLS     R2,R2,#+24
   \   000000E4   120E               LSRS     R2,R2,#+24
   \   000000E6   3900               MOVS     R1,R7
   \   000000E8   891C               ADDS     R1,R1,#+2
   \   000000EA   0906               LSLS     R1,R1,#+24
   \   000000EC   090E               LSRS     R1,R1,#+24
   \   000000EE   A348               LDR      R0,??NodeStanIO_Refresh_0+0x14  ;; `?<Constant "Reason:">` + 28
   \   000000F0   ........           BL       CopyToCanvasPoint
   \   000000F4   02B0               ADD      SP,SP,#+8
   9777                                          CharToStr (NP, Txt, 2);
   \   000000F6   0222               MOVS     R2,#+2
   \   000000F8   01A9               ADD      R1,SP,#+4
   \   000000FA   2800               MOVS     R0,R5
   \   000000FC   ........           BL       CharToStr
   9778                                          Label(Txt,2,3+15*j,88-i*12,2,8,1,127,0);  
   \   00000100   82B0               SUB      SP,SP,#+8
   \   00000102   0020               MOVS     R0,#+0
   \   00000104   0090               STR      R0,[SP, #+0]
   \   00000106   7F21               MOVS     R1,#+127
   \   00000108   0120               MOVS     R0,#+1
   \   0000010A   03B4               PUSH     {R0,R1}
   \   0000010C   0821               MOVS     R1,#+8
   \   0000010E   0220               MOVS     R0,#+2
   \   00000110   03B4               PUSH     {R0,R1}
   \   00000112   5820               MOVS     R0,#+88
   \   00000114   0699               LDR      R1,[SP, #+24]
   \   00000116   431A               SUBS     R3,R0,R1
   \   00000118   FF1C               ADDS     R7,R7,#+3
   \   0000011A   3A00               MOVS     R2,R7
   \   0000011C   1206               LSLS     R2,R2,#+24
   \   0000011E   120E               LSRS     R2,R2,#+24
   \   00000120   0221               MOVS     R1,#+2
   \   00000122   07A8               ADD      R0,SP,#+28
   \   00000124   ........           BL       Label
   \   00000128   06B0               ADD      SP,SP,#+24
   9779                                        }
   9780                                        NP++;
   \                     ??NodeStanIO_Refresh_10:
   \   0000012A   6D1C               ADDS     R5,R5,#+1
   \   0000012C   2D06               LSLS     R5,R5,#+24
   \   0000012E   2D0E               LSRS     R5,R5,#+24
   \   00000130   761C               ADDS     R6,R6,#+1
   \   00000132   3606               LSLS     R6,R6,#+24
   \   00000134   360E               LSRS     R6,R6,#+24
   \                     ??NodeStanIO_Refresh_8:
   \   00000136   3000               MOVS     R0,R6
   \   00000138   0828               CMP      R0,#+8
   \   0000013A   BCD2               BCS      ??NodeStanIO_Refresh_6
   \   0000013C   0398               LDR      R0,[SP, #+12]
   \   0000013E   0088               LDRH     R0,[R0, #+0]
   \   00000140   2841               ASRS     R0,R0,R5
   \   00000142   C007               LSLS     R0,R0,#+31
   \   00000144   BFD5               BPL      ??NodeStanIO_Refresh_9
   \   00000146   2700               MOVS     R7,R4
   \   00000148   0F20               MOVS     R0,#+15
   \   0000014A   4743               MULS     R7,R0,R7
   \   0000014C   3000               MOVS     R0,R6
   \   0000014E   0C21               MOVS     R1,#+12
   \   00000150   4843               MULS     R0,R1,R0
   \   00000152   0090               STR      R0,[SP, #+0]
   \   00000154   82B0               SUB      SP,SP,#+8
   \   00000156   0B20               MOVS     R0,#+11
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   0300               MOVS     R3,R0
   \   0000015C   5720               MOVS     R0,#+87
   \   0000015E   0299               LDR      R1,[SP, #+8]
   \   00000160   421A               SUBS     R2,R0,R1
   \   00000162   1206               LSLS     R2,R2,#+24
   \   00000164   120E               LSRS     R2,R2,#+24
   \   00000166   3900               MOVS     R1,R7
   \   00000168   891C               ADDS     R1,R1,#+2
   \   0000016A   0906               LSLS     R1,R1,#+24
   \   0000016C   090E               LSRS     R1,R1,#+24
   \   0000016E   8348               LDR      R0,??NodeStanIO_Refresh_0+0x14  ;; `?<Constant "Reason:">` + 28
   \   00000170   ........           BL       CopyToCanvasPoint
   \   00000174   02B0               ADD      SP,SP,#+8
   \   00000176   0222               MOVS     R2,#+2
   \   00000178   01A9               ADD      R1,SP,#+4
   \   0000017A   2800               MOVS     R0,R5
   \   0000017C   ........           BL       CharToStr
   \   00000180   82B0               SUB      SP,SP,#+8
   \   00000182   0120               MOVS     R0,#+1
   \   00000184   0090               STR      R0,[SP, #+0]
   \   00000186   7F21               MOVS     R1,#+127
   \   00000188   03B4               PUSH     {R0,R1}
   \   0000018A   0821               MOVS     R1,#+8
   \   0000018C   0220               MOVS     R0,#+2
   \   0000018E   03B4               PUSH     {R0,R1}
   \   00000190   5820               MOVS     R0,#+88
   \   00000192   0699               LDR      R1,[SP, #+24]
   \   00000194   431A               SUBS     R3,R0,R1
   \   00000196   FF1C               ADDS     R7,R7,#+3
   \   00000198   3A00               MOVS     R2,R7
   \   0000019A   1206               LSLS     R2,R2,#+24
   \   0000019C   120E               LSRS     R2,R2,#+24
   \   0000019E   0221               MOVS     R1,#+2
   \   000001A0   07A8               ADD      R0,SP,#+28
   \   000001A2   ........           BL       Label
   \   000001A6   06B0               ADD      SP,SP,#+24
   \   000001A8   BFE7               B        ??NodeStanIO_Refresh_10
   9781                                      }
   9782                                      
   9783                                      NP=0;
   \                     ??NodeStanIO_Refresh_7:
   \   000001AA   0024               MOVS     R4,#+0
   9784                                      for (char j=0; j<2; j++) 
   \   000001AC   2000               MOVS     R0,R4
   \   000001AE   0090               STR      R0,[SP, #+0]
   \   000001B0   04E0               B        ??NodeStanIO_Refresh_11
   \                     ??NodeStanIO_Refresh_12:
   \   000001B2   0098               LDR      R0,[SP, #+0]
   \   000001B4   401C               ADDS     R0,R0,#+1
   \   000001B6   0006               LSLS     R0,R0,#+24
   \   000001B8   000E               LSRS     R0,R0,#+24
   \   000001BA   0090               STR      R0,[SP, #+0]
   \                     ??NodeStanIO_Refresh_11:
   \   000001BC   0098               LDR      R0,[SP, #+0]
   \   000001BE   0006               LSLS     R0,R0,#+24
   \   000001C0   000E               LSRS     R0,R0,#+24
   \   000001C2   0228               CMP      R0,#+2
   \   000001C4   00D3               BCC      .+4
   \   000001C6   CAE0               B        ??NodeStanIO_Refresh_3
   9785                                      for (char i=0; i<8; i++)
   \   000001C8   0025               MOVS     R5,#+0
   \   000001CA   35E0               B        ??NodeStanIO_Refresh_13
   9786                                      {  
   9787                                        if  ((MainStage.StageQ[CurrentNode].Port>>NP)&0x1)
   9788                                        {
   9789                                          CopyToCanvasPoint((char*)&Frame[0][0],34+15*j,87-i*12,11,11);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght)
   9790                                          CharToStr (NP, Txt, 2);
   9791                                          Label(Txt,2,34+1+15*j,88-i*12,2,8,1,127,1);  
   9792                                        } else{
   9793                                          CopyToCanvasPoint((char*)&Frame[0][0],34+15*j,87-i*12,11,11); 
   \                     ??NodeStanIO_Refresh_14:
   \   000001CC   3606               LSLS     R6,R6,#+24
   \   000001CE   360E               LSRS     R6,R6,#+24
   \   000001D0   0F20               MOVS     R0,#+15
   \   000001D2   4643               MULS     R6,R0,R6
   \   000001D4   2F00               MOVS     R7,R5
   \   000001D6   0C20               MOVS     R0,#+12
   \   000001D8   4743               MULS     R7,R0,R7
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0B20               MOVS     R0,#+11
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   0300               MOVS     R3,R0
   \   000001E2   5720               MOVS     R0,#+87
   \   000001E4   C21B               SUBS     R2,R0,R7
   \   000001E6   1206               LSLS     R2,R2,#+24
   \   000001E8   120E               LSRS     R2,R2,#+24
   \   000001EA   3100               MOVS     R1,R6
   \   000001EC   2231               ADDS     R1,R1,#+34
   \   000001EE   0906               LSLS     R1,R1,#+24
   \   000001F0   090E               LSRS     R1,R1,#+24
   \   000001F2   6248               LDR      R0,??NodeStanIO_Refresh_0+0x14  ;; `?<Constant "Reason:">` + 28
   \   000001F4   ........           BL       CopyToCanvasPoint
   \   000001F8   02B0               ADD      SP,SP,#+8
   9794                                          CharToStr (NP, Txt, 2);
   \   000001FA   0222               MOVS     R2,#+2
   \   000001FC   01A9               ADD      R1,SP,#+4
   \   000001FE   2000               MOVS     R0,R4
   \   00000200   ........           BL       CharToStr
   9795                                          Label(Txt,2,34+1+15*j,88-i*12,2,8,1,127,0);  
   \   00000204   82B0               SUB      SP,SP,#+8
   \   00000206   0020               MOVS     R0,#+0
   \   00000208   0090               STR      R0,[SP, #+0]
   \   0000020A   7F21               MOVS     R1,#+127
   \   0000020C   0120               MOVS     R0,#+1
   \   0000020E   03B4               PUSH     {R0,R1}
   \   00000210   0821               MOVS     R1,#+8
   \   00000212   0220               MOVS     R0,#+2
   \   00000214   03B4               PUSH     {R0,R1}
   \   00000216   5820               MOVS     R0,#+88
   \   00000218   C31B               SUBS     R3,R0,R7
   \   0000021A   2336               ADDS     R6,R6,#+35
   \   0000021C   3200               MOVS     R2,R6
   \   0000021E   1206               LSLS     R2,R2,#+24
   \   00000220   120E               LSRS     R2,R2,#+24
   \   00000222   0221               MOVS     R1,#+2
   \   00000224   07A8               ADD      R0,SP,#+28
   \   00000226   ........           BL       Label
   \   0000022A   06B0               ADD      SP,SP,#+24
   9796                                        }
   9797                                       NP++;
   \                     ??NodeStanIO_Refresh_15:
   \   0000022C   641C               ADDS     R4,R4,#+1
   \   0000022E   2406               LSLS     R4,R4,#+24
   \   00000230   240E               LSRS     R4,R4,#+24
   \   00000232   6D1C               ADDS     R5,R5,#+1
   \   00000234   2D06               LSLS     R5,R5,#+24
   \   00000236   2D0E               LSRS     R5,R5,#+24
   \                     ??NodeStanIO_Refresh_13:
   \   00000238   2800               MOVS     R0,R5
   \   0000023A   0828               CMP      R0,#+8
   \   0000023C   B9D2               BCS      ??NodeStanIO_Refresh_12
   \   0000023E   5048               LDR      R0,??NodeStanIO_Refresh_0+0x18  ;; 0x3a2
   \   00000240   0499               LDR      R1,[SP, #+16]
   \   00000242   085A               LDRH     R0,[R1, R0]
   \   00000244   2041               ASRS     R0,R0,R4
   \   00000246   C007               LSLS     R0,R0,#+31
   \   00000248   009E               LDR      R6,[SP, #+0]
   \   0000024A   BFD5               BPL      ??NodeStanIO_Refresh_14
   \   0000024C   3606               LSLS     R6,R6,#+24
   \   0000024E   360E               LSRS     R6,R6,#+24
   \   00000250   0F20               MOVS     R0,#+15
   \   00000252   4643               MULS     R6,R0,R6
   \   00000254   2F00               MOVS     R7,R5
   \   00000256   0C20               MOVS     R0,#+12
   \   00000258   4743               MULS     R7,R0,R7
   \   0000025A   82B0               SUB      SP,SP,#+8
   \   0000025C   0B20               MOVS     R0,#+11
   \   0000025E   0090               STR      R0,[SP, #+0]
   \   00000260   0300               MOVS     R3,R0
   \   00000262   5720               MOVS     R0,#+87
   \   00000264   C21B               SUBS     R2,R0,R7
   \   00000266   1206               LSLS     R2,R2,#+24
   \   00000268   120E               LSRS     R2,R2,#+24
   \   0000026A   3100               MOVS     R1,R6
   \   0000026C   2231               ADDS     R1,R1,#+34
   \   0000026E   0906               LSLS     R1,R1,#+24
   \   00000270   090E               LSRS     R1,R1,#+24
   \   00000272   4248               LDR      R0,??NodeStanIO_Refresh_0+0x14  ;; `?<Constant "Reason:">` + 28
   \   00000274   ........           BL       CopyToCanvasPoint
   \   00000278   02B0               ADD      SP,SP,#+8
   \   0000027A   0222               MOVS     R2,#+2
   \   0000027C   01A9               ADD      R1,SP,#+4
   \   0000027E   2000               MOVS     R0,R4
   \   00000280   ........           BL       CharToStr
   \   00000284   82B0               SUB      SP,SP,#+8
   \   00000286   0120               MOVS     R0,#+1
   \   00000288   0090               STR      R0,[SP, #+0]
   \   0000028A   7F21               MOVS     R1,#+127
   \   0000028C   03B4               PUSH     {R0,R1}
   \   0000028E   0821               MOVS     R1,#+8
   \   00000290   0220               MOVS     R0,#+2
   \   00000292   03B4               PUSH     {R0,R1}
   \   00000294   5820               MOVS     R0,#+88
   \   00000296   C31B               SUBS     R3,R0,R7
   \   00000298   2336               ADDS     R6,R6,#+35
   \   0000029A   3200               MOVS     R2,R6
   \   0000029C   1206               LSLS     R2,R2,#+24
   \   0000029E   120E               LSRS     R2,R2,#+24
   \   000002A0   0221               MOVS     R1,#+2
   \   000002A2   07A8               ADD      R0,SP,#+28
   \   000002A4   ........           BL       Label
   \   000002A8   06B0               ADD      SP,SP,#+24
   \   000002AA   BFE7               B        ??NodeStanIO_Refresh_15
   9798                                      }
   9799                            
   9800                            
   9801                            }//je¿eli dane niewiarygodne - poinformuj o oczekiwaniu
   9802                         else
   9803                         {
   9804                              CleanCanvasArea(1,3,61,95,0);
   \                     ??NodeStanIO_Refresh_4:
   \   000002AC   1800               MOVS     R0,R3
   \   000002AE   0090               STR      R0,[SP, #+0]
   \   000002B0   5F23               MOVS     R3,#+95
   \   000002B2   3D22               MOVS     R2,#+61
   \   000002B4   0321               MOVS     R1,#+3
   \   000002B6   0120               MOVS     R0,#+1
   \   000002B8   ........           BL       CleanCanvasArea
   \   000002BC   02B0               ADD      SP,SP,#+8
   9805          
   9806                              
   9807                              Label(Speech[g_leng].Czekaj,2,3,80,10,57,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002BE   82B0               SUB      SP,SP,#+8
   \   000002C0   0020               MOVS     R0,#+0
   \   000002C2   0090               STR      R0,[SP, #+0]
   \   000002C4   7F21               MOVS     R1,#+127
   \   000002C6   0120               MOVS     R0,#+1
   \   000002C8   03B4               PUSH     {R0,R1}
   \   000002CA   3921               MOVS     R1,#+57
   \   000002CC   0A20               MOVS     R0,#+10
   \   000002CE   03B4               PUSH     {R0,R1}
   \   000002D0   5023               MOVS     R3,#+80
   \   000002D2   0322               MOVS     R2,#+3
   \   000002D4   0221               MOVS     R1,#+2
   \   000002D6   2B48               LDR      R0,??NodeStanIO_Refresh_0+0x1C  ;; 0xa5f
   \   000002D8   2B4C               LDR      R4,??NodeStanIO_Refresh_0+0x20  ;; g_leng
   \   000002DA   2468               LDR      R4,[R4, #+0]
   \   000002DC   2B4D               LDR      R5,??NodeStanIO_Refresh_0+0x24  ;; 0xa7d
   \   000002DE   6C43               MULS     R4,R5,R4
   \   000002E0   2B4D               LDR      R5,??NodeStanIO_Refresh_0+0x28  ;; Speech
   \   000002E2   2C19               ADDS     R4,R5,R4
   \   000002E4   2018               ADDS     R0,R4,R0
   \   000002E6   ........           BL       Label
   \   000002EA   06B0               ADD      SP,SP,#+24
   9808                              
   9809                              H_line(1,50,61,1); // (char X, int Y, char lenght, char typ)
   \   000002EC   0123               MOVS     R3,#+1
   \   000002EE   3D22               MOVS     R2,#+61
   \   000002F0   3221               MOVS     R1,#+50
   \   000002F2   1800               MOVS     R0,R3
   \   000002F4   ........           BL       H_line
   9810                              Label("Reason:",0,3,40,10,30,1,127,0);
   \   000002F8   264C               LDR      R4,??NodeStanIO_Refresh_0+0x2C  ;; `?<Constant "Reason:">`
   \   000002FA   82B0               SUB      SP,SP,#+8
   \   000002FC   0020               MOVS     R0,#+0
   \   000002FE   0090               STR      R0,[SP, #+0]
   \   00000300   7F21               MOVS     R1,#+127
   \   00000302   0120               MOVS     R0,#+1
   \   00000304   03B4               PUSH     {R0,R1}
   \   00000306   1E21               MOVS     R1,#+30
   \   00000308   0A20               MOVS     R0,#+10
   \   0000030A   03B4               PUSH     {R0,R1}
   \   0000030C   2823               MOVS     R3,#+40
   \   0000030E   0322               MOVS     R2,#+3
   \   00000310   0021               MOVS     R1,#+0
   \   00000312   2000               MOVS     R0,R4
   \   00000314   ........           BL       Label
   \   00000318   06B0               ADD      SP,SP,#+24
   9811                              Label("Unreliable",2,3,27,10,57,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000031A   82B0               SUB      SP,SP,#+8
   \   0000031C   0020               MOVS     R0,#+0
   \   0000031E   0090               STR      R0,[SP, #+0]
   \   00000320   7F21               MOVS     R1,#+127
   \   00000322   0120               MOVS     R0,#+1
   \   00000324   03B4               PUSH     {R0,R1}
   \   00000326   3921               MOVS     R1,#+57
   \   00000328   0A20               MOVS     R0,#+10
   \   0000032A   03B4               PUSH     {R0,R1}
   \   0000032C   1B23               MOVS     R3,#+27
   \   0000032E   0322               MOVS     R2,#+3
   \   00000330   0221               MOVS     R1,#+2
   \   00000332   2000               MOVS     R0,R4
   \   00000334   0830               ADDS     R0,R0,#+8
   \   00000336   ........           BL       Label
   \   0000033A   06B0               ADD      SP,SP,#+24
   9812                              Label("data.",2,3,18,10,57,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000033C   82B0               SUB      SP,SP,#+8
   \   0000033E   0020               MOVS     R0,#+0
   \   00000340   0090               STR      R0,[SP, #+0]
   \   00000342   7F21               MOVS     R1,#+127
   \   00000344   0120               MOVS     R0,#+1
   \   00000346   03B4               PUSH     {R0,R1}
   \   00000348   3921               MOVS     R1,#+57
   \   0000034A   0A20               MOVS     R0,#+10
   \   0000034C   03B4               PUSH     {R0,R1}
   \   0000034E   1223               MOVS     R3,#+18
   \   00000350   0322               MOVS     R2,#+3
   \   00000352   0221               MOVS     R1,#+2
   \   00000354   1434               ADDS     R4,R4,#+20
   \   00000356   2000               MOVS     R0,R4
   \   00000358   ........           BL       Label
   \   0000035C   06B0               ADD      SP,SP,#+24
   9813                         }
   9814               
   9815                     }
   9816                }//_______________________________________________________________________ 
   \                     ??NodeStanIO_Refresh_3:
   \   0000035E   05B0               ADD      SP,SP,#+20
   \   00000360   F0BC               POP      {R4-R7}
   \   00000362   01BC               POP      {R0}
   \   00000364   0047               BX       R0               ;; return
   \   00000366   C046               Nop      
   \                     ??NodeStanIO_Refresh_0:
   \   00000368   ........           DC32     MainStage
   \   0000036C   AA8A0000           DC32     0x8aaa
   \   00000370   ........           DC32     ??Dziel5_2
   \   00000374   44490000           DC8      0x44, 0x49, 0x00, 0x00
   \   00000378   444F0000           DC8      0x44, 0x4F, 0x00, 0x00
   \   0000037C   ........           DC32     `?<Constant "Reason:">` + 28
   \   00000380   A2030000           DC32     0x3a2
   \   00000384   5F0A0000           DC32     0xa5f
   \   00000388   ........           DC32     g_leng
   \   0000038C   7D0A0000           DC32     0xa7d
   \   00000390   ........           DC32     Speech
   \   00000394   ........           DC32     `?<Constant "Reason:">`
   9817                                                                             
   9818          
   9819          
   9820           
   9821           
   9822          
   9823          
   9824          
   9825                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9826                void NodeWeAnalog_Paint(char CurrentNode)
   9827                {  
   \                     NodeWeAnalog_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   9828                      char txt[8];
   9829                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000002   6946               MOV      R1,SP
   \   00000004   4E22               MOVS     R2,#+78
   \   00000006   0A70               STRB     R2,[R1, #+0]
   \   00000008   6F22               MOVS     R2,#+111
   \   0000000A   4A70               STRB     R2,[R1, #+1]
   \   0000000C   6422               MOVS     R2,#+100
   \   0000000E   8A70               STRB     R2,[R1, #+2]
   \   00000010   6522               MOVS     R2,#+101
   \   00000012   CA70               STRB     R2,[R1, #+3]
   \   00000014   2022               MOVS     R2,#+32
   \   00000016   0A71               STRB     R2,[R1, #+4]
   9830                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   00000018   0222               MOVS     R2,#+2
   \   0000001A   491D               ADDS     R1,R1,#+5
   \   0000001C   ........           BL       CharToStr
   9831                  
   9832                     List_Paint(txt,1,107,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   0800               MOVS     R0,R1
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   2DA0               ADR      R0,??NodeWeAnalog_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0321               MOVS     R1,#+3
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0300               MOVS     R3,R0
   \   00000036   6B22               MOVS     R2,#+107
   \   00000038   0121               MOVS     R1,#+1
   \   0000003A   0AA8               ADD      R0,SP,#+40
   \   0000003C   ........           BL       List_Paint
   \   00000040   0AB0               ADD      SP,SP,#+40
   9833          
   9834                     
   9835                     AddRfTask(SI, 1, 1);                //Dodaj rozkaz do tablicy zadañ RF   
   \   00000042   0122               MOVS     R2,#+1
   \   00000044   1100               MOVS     R1,R2
   \   00000046   0800               MOVS     R0,R1
   \   00000048   ........           BL       AddRfTask
   9836                     AddRfTask(SI, 1, 2);                //Dodaj rozkaz do tablicy zadañ RF     
   \   0000004C   0222               MOVS     R2,#+2
   \   0000004E   0121               MOVS     R1,#+1
   \   00000050   0800               MOVS     R0,R1
   \   00000052   ........           BL       AddRfTask
   9837                     AddRfTask(SI, 1, 3);                //Dodaj rozkaz do tablicy zadañ RF     
   \   00000056   0322               MOVS     R2,#+3
   \   00000058   0121               MOVS     R1,#+1
   \   0000005A   0800               MOVS     R0,R1
   \   0000005C   ........           BL       AddRfTask
   9838                     AddRfTask(SI, 1, 4);                //Dodaj rozkaz do tablicy zadañ RF     
   \   00000060   0422               MOVS     R2,#+4
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   0800               MOVS     R0,R1
   \   00000066   ........           BL       AddRfTask
   9839                     AddRfTask(SI, 1, 5);                //Dodaj rozkaz do tablicy zadañ RF     
   \   0000006A   0522               MOVS     R2,#+5
   \   0000006C   0121               MOVS     R1,#+1
   \   0000006E   0800               MOVS     R0,R1
   \   00000070   ........           BL       AddRfTask
   9840                     AddRfTask(SI, 1, 6);                //Dodaj rozkaz do tablicy zadañ RF     
   \   00000074   0622               MOVS     R2,#+6
   \   00000076   0121               MOVS     R1,#+1
   \   00000078   0800               MOVS     R0,R1
   \   0000007A   ........           BL       AddRfTask
   9841                     AddRfTask(SI, 1, 7);                //Dodaj rozkaz do tablicy zadañ RF     
   \   0000007E   0722               MOVS     R2,#+7
   \   00000080   0121               MOVS     R1,#+1
   \   00000082   0800               MOVS     R0,R1
   \   00000084   ........           BL       AddRfTask
   9842                     AddRfTask(SI, 1, 8);                //Dodaj rozkaz do tablicy zadañ RF   
   \   00000088   0822               MOVS     R2,#+8
   \   0000008A   0121               MOVS     R1,#+1
   \   0000008C   0800               MOVS     R0,R1
   \   0000008E   ........           BL       AddRfTask
   9843                     AddRfTask(SI, 1, 9);                //Dodaj rozkaz do tablicy zadañ RF     
   \   00000092   0922               MOVS     R2,#+9
   \   00000094   0121               MOVS     R1,#+1
   \   00000096   0800               MOVS     R0,R1
   \   00000098   ........           BL       AddRfTask
   9844                     
   9845                     Label(Speech[g_leng].Analogi,0,4,100,14,40,1,127,0); 
   \   0000009C   82B0               SUB      SP,SP,#+8
   \   0000009E   0020               MOVS     R0,#+0
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   0120               MOVS     R0,#+1
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   2821               MOVS     R1,#+40
   \   000000AA   0E20               MOVS     R0,#+14
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   6423               MOVS     R3,#+100
   \   000000B0   0422               MOVS     R2,#+4
   \   000000B2   0021               MOVS     R1,#+0
   \   000000B4   A520               MOVS     R0,#+165
   \   000000B6   0001               LSLS     R0,R0,#+4        ;; #+2640
   \   000000B8   0A4C               LDR      R4,??NodeWeAnalog_Paint_0+0x4  ;; g_leng
   \   000000BA   2468               LDR      R4,[R4, #+0]
   \   000000BC   0A4D               LDR      R5,??NodeWeAnalog_Paint_0+0x8  ;; 0xa7d
   \   000000BE   6C43               MULS     R4,R5,R4
   \   000000C0   0A4D               LDR      R5,??NodeWeAnalog_Paint_0+0xC  ;; Speech
   \   000000C2   2C19               ADDS     R4,R5,R4
   \   000000C4   2018               ADDS     R0,R4,R0
   \   000000C6   ........           BL       Label
   \   000000CA   06B0               ADD      SP,SP,#+24
   9846                     
   9847                     
   9848                     V_line(1,2,125,1); // (char X, int Y, char lenght, char typ)
   \   000000CC   0123               MOVS     R3,#+1
   \   000000CE   7D22               MOVS     R2,#+125
   \   000000D0   0221               MOVS     R1,#+2
   \   000000D2   1800               MOVS     R0,R3
   \   000000D4   ........           BL       V_line
   9849                }//_______________________________________________________________________ 
   \   000000D8   3EBC               POP      {R1-R5}
   \   000000DA   01BC               POP      {R0}
   \   000000DC   0047               BX       R0               ;; return
   \   000000DE   C046               Nop      
   \                     ??NodeWeAnalog_Paint_0:
   \   000000E0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000E4   ........           DC32     g_leng
   \   000000E8   7D0A0000           DC32     0xa7d
   \   000000EC   ........           DC32     Speech
   9850          
   9851          
   9852          
   9853          
   9854                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9855                void NodeWeAnalog_Event(char CurrentNode)
   9856                {
   \                     NodeWeAnalog_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   9857                  int ans;
   9858                  char NP;
                              ^
Warning[Pe177]: variable "NP" was declared but never referenced
   9859                 
   9860                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   1148               LDR      R0,??NodeWeAnalog_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   1148               LDR      R0,??NodeWeAnalog_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   1148               LDR      R0,??NodeWeAnalog_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   1148               LDR      R0,??NodeWeAnalog_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   9861            
   9862                  
   9863                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   10D0               BEQ      ??NodeWeAnalog_Event_1
   9864                    {
   9865                    if (ans<0) {
   \   0000002A   0DD5               BPL      ??NodeWeAnalog_Event_2
   9866                      MenuLevel=(MenuLevel/100);
   \   0000002C   0D4C               LDR      R4,??NodeWeAnalog_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   206D               LDR      R0,[R4, #+80]
   \   00000030   6421               MOVS     R1,#+100
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   2065               STR      R0,[R4, #+80]
   9867                     NeuronNrChange=0;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0100               MOVS     R1,R0
   \   0000003C   E170               STRB     R1,[R4, #+3]
   9868                     NeuronIdChange=0;
   \   0000003E   A066               STR      R0,[R4, #+104]
   9869                     FirstNodeStanIO_Paint=0;
   \   00000040   E077               STRB     R0,[R4, #+31]
   9870                     SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   00000042   0948               LDR      R0,??NodeWeAnalog_Event_0+0x14  ;; gProg
   \   00000044   ........           BL       SetTask
   9871                    }
   9872                    MenuPaint();
   \                     ??NodeWeAnalog_Event_2:
   \   00000048   ........           BL       MenuPaint
   9873                    } 
   9874                  
   9875                  
   9876                  
   9877                  
   9878                }//_______________________________________________________________________
   \                     ??NodeWeAnalog_Event_1:
   \   0000004C   10BC               POP      {R4}
   \   0000004E   01BC               POP      {R0}
   \   00000050   0047               BX       R0               ;; return
   \   00000052   C046               Nop      
   \                     ??NodeWeAnalog_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     TextToChangeLength
   \   00000068   ........           DC32     gProg
   9879          
   9880          
   9881          
   9882                
   9883                
   9884                
   9885          
   9886          
   9887                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9888                void NodeWeAnalog_Refresh(char CurrentNode)
   9889                {  
   \                     NodeWeAnalog_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   9890                     char Txt[6];
   9891                  
   9892                     static char Dziel5;
   9893                     Dziel5=6;
   9894                     if (Dziel5<5) {Dziel5++;}else
   9895                     {
   9896                       Dziel5=0;
   \   00000004   3248               LDR      R0,??NodeWeAnalog_Refresh_0  ;; ??Dziel5_3
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0170               STRB     R1,[R0, #+0]
   9897          
   9898                       char PozY=101;
   9899                       for (char i=1; i<10; i++)
   \   0000000A   0124               MOVS     R4,#+1
   \   0000000C   20E0               B        ??NodeWeAnalog_Refresh_1
   9900                       {
   9901                         CharToStr(i, Txt, 2);
   9902                         Label(Txt,0,2,PozY-(11*i)+1,1,10,1,127,1);  
   9903          
   9904                         if (MainStage.StageI[CurrentNode].Value[i] !=(signed short int )0x8AAA) //je¿eli dane wiarygodne
   9905                         {
   9906                           char IlLiter=sIntToStr( MainStage.StageI[CurrentNode].Value[i], &(Txt[0])); //(char Value, char *Vstring, char ill);
   9907                           Label(Txt,0,15,PozY-(11*i)+1,IlLiter,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   9908                         }//je¿eli dane niewiarygodne - poinformuj o oczekiwaniu
   9909                         else
   9910                         {
   9911                           Label(Speech[g_leng].Czekaj,0,15,PozY-(11*i)+1,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??NodeWeAnalog_Refresh_2:
   \   0000000E   82B0               SUB      SP,SP,#+8
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   0090               STR      R0,[SP, #+0]
   \   00000014   7F21               MOVS     R1,#+127
   \   00000016   0120               MOVS     R0,#+1
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   2821               MOVS     R1,#+40
   \   0000001C   0A20               MOVS     R0,#+10
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   3B00               MOVS     R3,R7
   \   00000022   0F22               MOVS     R2,#+15
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   2B48               LDR      R0,??NodeWeAnalog_Refresh_0+0x4  ;; 0xa5f
   \   00000028   2B4D               LDR      R5,??NodeWeAnalog_Refresh_0+0x8  ;; g_leng
   \   0000002A   2D68               LDR      R5,[R5, #+0]
   \   0000002C   2B4F               LDR      R7,??NodeWeAnalog_Refresh_0+0xC  ;; 0xa7d
   \   0000002E   7D43               MULS     R5,R7,R5
   \   00000030   2B4F               LDR      R7,??NodeWeAnalog_Refresh_0+0x10  ;; Speech
   \   00000032   7D19               ADDS     R5,R7,R5
   \   00000034   2818               ADDS     R0,R5,R0
   \   00000036   ........           BL       Label
   \   0000003A   06B0               ADD      SP,SP,#+24
   9912                         }
   9913                         H_line(0,PozY-(11*i),63,1); // (char X, int Y, char lenght, char typ)
   \                     ??NodeWeAnalog_Refresh_3:
   \   0000003C   0123               MOVS     R3,#+1
   \   0000003E   3F22               MOVS     R2,#+63
   \   00000040   6520               MOVS     R0,#+101
   \   00000042   811B               SUBS     R1,R0,R6
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   ........           BL       H_line
   \   0000004A   641C               ADDS     R4,R4,#+1
   \   0000004C   2406               LSLS     R4,R4,#+24
   \   0000004E   240E               LSRS     R4,R4,#+24
   \                     ??NodeWeAnalog_Refresh_1:
   \   00000050   2000               MOVS     R0,R4
   \   00000052   0A28               CMP      R0,#+10
   \   00000054   38D2               BCS      ??NodeWeAnalog_Refresh_4
   \   00000056   0222               MOVS     R2,#+2
   \   00000058   6946               MOV      R1,SP
   \   0000005A   ........           BL       CharToStr
   \   0000005E   2500               MOVS     R5,R4
   \   00000060   0B26               MOVS     R6,#+11
   \   00000062   6E43               MULS     R6,R5,R6
   \   00000064   6620               MOVS     R0,#+102
   \   00000066   871B               SUBS     R7,R0,R6
   \   00000068   82B0               SUB      SP,SP,#+8
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   0090               STR      R0,[SP, #+0]
   \   0000006E   7F21               MOVS     R1,#+127
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   0A21               MOVS     R1,#+10
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   3B00               MOVS     R3,R7
   \   00000078   0222               MOVS     R2,#+2
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   06A8               ADD      R0,SP,#+24
   \   0000007E   ........           BL       Label
   \   00000082   06B0               ADD      SP,SP,#+24
   \   00000084   A020               MOVS     R0,#+160
   \   00000086   6900               LSLS     R1,R5,#+1
   \   00000088   6A46               MOV      R2,SP
   \   0000008A   127A               LDRB     R2,[R2, #+8]
   \   0000008C   1623               MOVS     R3,#+22
   \   0000008E   5A43               MULS     R2,R3,R2
   \   00000090   144B               LDR      R3,??NodeWeAnalog_Refresh_0+0x14  ;; MainStage
   \   00000092   9A18               ADDS     R2,R3,R2
   \   00000094   5118               ADDS     R1,R2,R1
   \   00000096   085E               LDRSH    R0,[R1, R0]
   \   00000098   1349               LDR      R1,??NodeWeAnalog_Refresh_0+0x18  ;; 0xffff8aaa
   \   0000009A   8842               CMP      R0,R1
   \   0000009C   B7D0               BEQ      ??NodeWeAnalog_Refresh_2
   \   0000009E   6946               MOV      R1,SP
   \   000000A0   ........           BL       sIntToStr
   \   000000A4   0200               MOVS     R2,R0
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   0020               MOVS     R0,#+0
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   7F21               MOVS     R1,#+127
   \   000000AE   0120               MOVS     R0,#+1
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   2821               MOVS     R1,#+40
   \   000000B4   1000               MOVS     R0,R2
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   3B00               MOVS     R3,R7
   \   000000BA   0F22               MOVS     R2,#+15
   \   000000BC   0021               MOVS     R1,#+0
   \   000000BE   06A8               ADD      R0,SP,#+24
   \   000000C0   ........           BL       Label
   \   000000C4   06B0               ADD      SP,SP,#+24
   \   000000C6   B9E7               B        ??NodeWeAnalog_Refresh_3
   9914                       }
   9915             
   9916          
   9917                     }
   9918                }//_______________________________________________________________________ 
   \                     ??NodeWeAnalog_Refresh_4:
   \   000000C8   FEBC               POP      {R1-R7}
   \   000000CA   01BC               POP      {R0}
   \   000000CC   0047               BX       R0               ;; return
   \   000000CE   C046               Nop      
   \                     ??NodeWeAnalog_Refresh_0:
   \   000000D0   ........           DC32     ??Dziel5_3
   \   000000D4   5F0A0000           DC32     0xa5f
   \   000000D8   ........           DC32     g_leng
   \   000000DC   7D0A0000           DC32     0xa7d
   \   000000E0   ........           DC32     Speech
   \   000000E4   ........           DC32     MainStage
   \   000000E8   AA8AFFFF           DC32     0xffff8aaa

   \                                 In section .bss, align 1
   \                     ??Dziel5_3:
   \   00000000                      DS8 1
   9919                                                                             
   9920          
   9921               
   9922          
   9923                
   9924          #define MaxWaitForResp  500    //[ms] czas oczekiwania na odpowiedz w tecie
   9925          #define FirstTimeDelay  5000   //czas startowy
   9926          #define ShortTest  100   //iloæ odpytañ w tecie szybkim
   9927          #define LongTest  2000   //iloæ odpytañ w tecie d³ugim      
   9928                
   9929          unsigned short MaxTime;
   9930          unsigned long LastSendTime;
   9931          unsigned long TestStartTime;
   9932          unsigned short TestStep;
   9933          //unsigned char TestMark; //0-testowanie, 1-test przeszed³, 2-test oblany
   9934                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9935                void Tester_MG1_Paint(char CurrentNode)
   9936                {  
   \                     Tester_MG1_Paint:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   \   00000002   0500               MOVS     R5,R0
   9937                      char txt[8];
   9938                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6946               MOV      R1,SP
   \   00000006   4E20               MOVS     R0,#+78
   \   00000008   0870               STRB     R0,[R1, #+0]
   \   0000000A   6F20               MOVS     R0,#+111
   \   0000000C   4870               STRB     R0,[R1, #+1]
   \   0000000E   6420               MOVS     R0,#+100
   \   00000010   8870               STRB     R0,[R1, #+2]
   \   00000012   6520               MOVS     R0,#+101
   \   00000014   C870               STRB     R0,[R1, #+3]
   \   00000016   2020               MOVS     R0,#+32
   \   00000018   0871               STRB     R0,[R1, #+4]
   9939                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   0000001A   0222               MOVS     R2,#+2
   \   0000001C   491D               ADDS     R1,R1,#+5
   \   0000001E   2800               MOVS     R0,R5
   \   00000020   ........           BL       CharToStr
   9940                  
   9941                     List_Paint(txt,1,107,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   0800               MOVS     R0,R1
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   29A0               ADR      R0,??Tester_MG1_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0321               MOVS     R1,#+3
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0300               MOVS     R3,R0
   \   0000003A   6B22               MOVS     R2,#+107
   \   0000003C   0121               MOVS     R1,#+1
   \   0000003E   0AA8               ADD      R0,SP,#+40
   \   00000040   ........           BL       List_Paint
   \   00000044   0AB0               ADD      SP,SP,#+40
   9942          
   9943          
   9944                                            //wyczyæ zadania
   9945                     for (char i=0; i<RF_Tasks; i++) 
   \   00000046   0024               MOVS     R4,#+0
   \   00000048   2000               MOVS     R0,R4
   \   0000004A   08E0               B        ??Tester_MG1_Paint_1
   9946                     {
   9947                      RF_TaskTab[i].Node=0;
   \                     ??Tester_MG1_Paint_2:
   \   0000004C   C900               LSLS     R1,R1,#+3
   \   0000004E   224A               LDR      R2,??Tester_MG1_Paint_0+0x4  ;; RF_TaskTab
   \   00000050   5118               ADDS     R1,R2,R1
   \   00000052   2200               MOVS     R2,R4
   \   00000054   0A70               STRB     R2,[R1, #+0]
   9948                      RF_TaskTab[i].Command.ID=0;
   9949                      RF_TaskTab[i].Command.Order=0;
   9950                      RF_TaskTab[i].Command.Auxi=0;
   \   00000056   4C60               STR      R4,[R1, #+4]
   9951                     }
   \   00000058   401C               ADDS     R0,R0,#+1
   \   0000005A   0006               LSLS     R0,R0,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \                     ??Tester_MG1_Paint_1:
   \   0000005E   0100               MOVS     R1,R0
   \   00000060   4629               CMP      R1,#+70
   \   00000062   F3D3               BCC      ??Tester_MG1_Paint_2
   9952                     
   9953                     AddRfTask(SI, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF  
   \   00000064   2200               MOVS     R2,R4
   \   00000066   0121               MOVS     R1,#+1
   \   00000068   0800               MOVS     R0,R1
   \   0000006A   ........           BL       AddRfTask
   9954                     AddRfTask(SQ, 1, 0);                //Dodaj rozkaz do tablicy zadañ RF 
   \   0000006E   2200               MOVS     R2,R4
   \   00000070   0121               MOVS     R1,#+1
   \   00000072   0220               MOVS     R0,#+2
   \   00000074   ........           BL       AddRfTask
   9955                     PortStageSet((&(MainStage.StageI[CurrentNode].Port)),0,0);
                                         ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   00000078   184E               LDR      R6,??Tester_MG1_Paint_0+0x8  ;; MainStage
   \   0000007A   1620               MOVS     R0,#+22
   \   0000007C   4543               MULS     R5,R0,R5
   \   0000007E   7519               ADDS     R5,R6,R5
   \   00000080   A035               ADDS     R5,R5,#+160
   \   00000082   2200               MOVS     R2,R4
   \   00000084   1100               MOVS     R1,R2
   \   00000086   2800               MOVS     R0,R5
   \   00000088   ........           BL       PortStageSet
   9956                     PortStageSet((&(MainStage.StageI[CurrentNode].Port)),1,0);
                                         ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   0000008C   2200               MOVS     R2,R4
   \   0000008E   0121               MOVS     R1,#+1
   \   00000090   2800               MOVS     R0,R5
   \   00000092   ........           BL       PortStageSet
   9957                     MainStage.SendStageChange[1]=ChangeStageFlag;
   \   00000096   1248               LDR      R0,??Tester_MG1_Paint_0+0xC  ;; 0x6ec
   \   00000098   0A21               MOVS     R1,#+10
   \   0000009A   3154               STRB     R1,[R6, R0]
   9958                     Label("MG1 TEST",0,4,100,14,40,1,127,0); 
   \   0000009C   82B0               SUB      SP,SP,#+8
   \   0000009E   2000               MOVS     R0,R4
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   0120               MOVS     R0,#+1
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   2821               MOVS     R1,#+40
   \   000000AA   0E20               MOVS     R0,#+14
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   6423               MOVS     R3,#+100
   \   000000B0   0422               MOVS     R2,#+4
   \   000000B2   2100               MOVS     R1,R4
   \   000000B4   0B48               LDR      R0,??Tester_MG1_Paint_0+0x10  ;; `?<Constant "MG1 TEST">`
   \   000000B6   ........           BL       Label
   \   000000BA   06B0               ADD      SP,SP,#+24
   9959                     MaxTime=0;
   \   000000BC   0A4A               LDR      R2,??Tester_MG1_Paint_0+0x14  ;; TextToChangeLength
   \   000000BE   2000               MOVS     R0,R4
   \   000000C0   D086               STRH     R0,[R2, #+54]
   9960                     TestStartTime=g_counter;
   \   000000C2   8023               MOVS     R3,#+128
   \   000000C4   0948               LDR      R0,??Tester_MG1_Paint_0+0x18  ;; g_counter
   \   000000C6   03C8               LDM      R0!,{R0,R1}
   \   000000C8   D050               STR      R0,[R2, R3]
   9961                     TestStep=0;
   \   000000CA   1487               STRH     R4,[R2, #+56]
   9962                }//_______________________________________________________________________ 
   \   000000CC   7CBC               POP      {R2-R6}
   \   000000CE   01BC               POP      {R0}
   \   000000D0   0047               BX       R0               ;; return
   \   000000D2   C046               Nop      
   \                     ??Tester_MG1_Paint_0:
   \   000000D4   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000D8   ........           DC32     RF_TaskTab
   \   000000DC   ........           DC32     MainStage
   \   000000E0   EC060000           DC32     0x6ec
   \   000000E4   ........           DC32     `?<Constant "MG1 TEST">`
   \   000000E8   ........           DC32     TextToChangeLength
   \   000000EC   ........           DC32     g_counter

   \                                 In section .data, align 8
   \                     TextToChangeLength:
   \   00000000   00                 DC8 0
   \                     TextToChangeMaxPixSize:
   \   00000001   00                 DC8 0
   \                     CurentChartModyfi:
   \   00000002   00                 DC8 0
   \                     NeuronNrChange:
   \   00000003   00                 DC8 0
   \                     CurrentSheet:
   \   00000004   00                 DC8 0
   \                     CurModifSheet:
   \   00000005   00                 DC8 0
   \                     NeuronsListLine:
   \   00000006   00                 DC8 0
   \                     SheetHistoryIndex:
   \   00000007   00                 DC8 0
   \                     ProgramChange:
   \   00000008   00                 DC8 0
   \                     TmpFlg:
   \   00000009   00                 DC8 0
   \                     DispWait:
   \   0000000A   00                 DC8 0
   \   0000000B   00                 DC8 0
   \   0000000C   00                 DC8 0
   \                     TimetableSet_Hour:
   \   0000000D   00                 DC8 0
   \                     TimetableSet_Minute:
   \   0000000E   00                 DC8 0
   \                     TimetableSet_Week:
   \   0000000F   00                 DC8 0
   \                     LaderLine:
   \   00000010   00                 DC8 0
   \                     LaderCol:
   \   00000011   00                 DC8 0
   \                     ChoseRow:
   \   00000012   00                 DC8 0
   \                     ChoseCol:
   \   00000013   00                 DC8 0
   \                     ProcGlobType_down:
   \   00000014   00                 DC8 0
   \                     OpenScreenSet:
   \   00000015   00                 DC8 0
   \                     MenuPaintExecute:
   \   00000016   00                 DC8 0
   \                     ZoneButtonClick:
   \   00000017   00                 DC8 0
   \                     ZoneGrapfNrClick:
   \   00000018   00                 DC8 0
   \                     ZoneValueNrClick:
   \   00000019   00                 DC8 0
   \                     ZoneLabelClick:
   \   0000001A   00                 DC8 0
   \                     TextChangeCharNr:
   \   0000001B   00                 DC8 0
   \                     TextChangePoz:
   \   0000001C   00                 DC8 0
   \                     AlfaType:
   \   0000001D   00                 DC8 0
   \                     OpisWezl:
   \   0000001E   00                 DC8 0
   \                     FirstNodeStanIO_Paint:
   \   0000001F   00                 DC8 0
   \                     SheetHistory:
   \   00000020   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \                     ValNTT:
   \   00000034   0000               DC16 0
   \                     MaxTime:
   \   00000036   0000               DC8 0, 0
   \                     TestStep:
   \   00000038   0000               DC8 0, 0
   9963          
   9964          
   9965          
   9966            unsigned short  TestAmount=ShortTest;
   \                     TestAmount:
   \   0000003A   6400               DC16 100
   \   0000003C   00000000           DC8 0, 0, 0, 0
   \                     Touch_EventTime:
   \   00000040   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     WaitOnCheckNode:
   \   00000048   000000000000       DC32 0, 0
   \              0000        
   \                     MenuLevel:
   \   00000050   00000000           DC32 0
   \                     Rej_poz:
   \   00000054   00000000           DC32 0
   \                     TextToChange:
   \   00000058   00000000           DC32 0H
   \                     ButtonToChange:
   \   0000005C   00000000           DC32 0H
   \                     NeuronIdToChange:
   \   00000060   00000000           DC8 0, 0, 0, 0
   \                     ValueChange:
   \   00000064   00000000           DC32 0H
   \                     NeuronIdChange:
   \   00000068   00000000           DC32 0H
   \                     AnalogToChange:
   \   0000006C   00000000           DC8 0, 0, 0, 0
   \                     TaskToChange:
   \   00000070   00000000           DC8 0, 0, 0, 0
   \                     row_tmp:
   \   00000074   00000000           DC8 0, 0, 0, 0
   \                     TxtSpaceAvable:
   \   00000078   00000000           DC32 0
   \                     LastSendTime:
   \   0000007C   00000000           DC8 0, 0, 0, 0
   \                     TestStartTime:
   \   00000080   00000000           DC8 0, 0, 0, 0
   \                     NeuronIdAfterChange:
   \   00000084   00000000           DC8 0, 0, 0, 0
   \                     ekran_komunikacja:
   \   00000088   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 34, 2, 2, 2, 34, 28, 0, 0, 0, 0
   \              000000001C22
   \              020202221C00
   \              000000      
   \   0000009D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000B4   0000F808E8E8       DC8 0, 0, 248, 8, 232, 232, 232, 104, 104, 104, 104, 104, 104, 104, 104
   \              E86868686868
   \              686868      
   \   000000C3   68686868E8E8       DC8 104, 104, 104, 104, 232, 232, 232, 8, 248, 0, 0, 0, 0, 0, 0, 0, 0
   \              E808F8000000
   \              0000000000  
   \   000000D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000EB   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 224, 248, 24, 6, 6, 6, 3, 3, 3, 3, 6, 6, 12
   \              0000E0F81806
   \              060603030303
   \              06060C      
   \   00000100   3CF0C0000000       DC8 60, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 33
   \              000000000000
   \              000000000000
   \              1E21        
   \   00000114   212121211E00       DC8 33, 33, 33, 33, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   00000129   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 255, 255, 255, 192
   \              000000000000
   \              00FF00FFFFFF
   \              C0          
   \   0000013C   C0C0C0C0C0C0       DC8 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 255, 255
   \              C0C0C0C0C0FF
   \              FF          
   \   00000149   FF00FF000000       DC8 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   0000015E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
   \              000000000000
   \              000000000000
   \              000000C0    
   \   00000174   E03018000000       DC8 224, 48, 24, 0, 0, 0, 255, 255, 0, 0, 24, 24, 96, 224, 128, 0, 0, 0
   \              FFFF00001818
   \              60E080000000
   \   00000186   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 153, 153, 149, 147, 147
   \              000000000000
   \              919999959393
   \   00000198   910000000000       DC8 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000001AE   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 2, 10, 18, 34, 66, 66, 130, 130, 2
   \              000003020202
   \              0A1222424282
   \              8202        
   \   000001C2   020202020202       DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              020202030000
   \              000000000000
   \              0000000000  
   \   000001D9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001F0   000000C3E170       DC8 0, 0, 0, 195, 225, 112, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48
   \              303030303030
   \              3030303030  
   \   00000201   330300000000       DC8 51, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 76, 76
   \              000000000000
   \              0000000000C8
   \              4C4C        
   \   00000215   CA4949C80000       DC8 202, 73, 73, 200, 0, 0, 0, 4, 4, 4, 60, 68, 68, 60, 0, 0, 0, 0, 0
   \              000404043C44
   \              443C00000000
   \              00          
   \   00000228   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128
   \              000000000000
   \              000000000000
   \              000080      
   \   0000023D   800000000101       DC8 128, 0, 0, 0, 1, 1, 1, 130, 194, 164, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0182C2A41800
   \              000000000000
   \              0000        
   \   00000251   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000268   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 14, 28, 24, 24, 24, 24, 24, 24
   \              000000000007
   \              0E1C18181818
   \              1818        
   \   0000027C   181818181898       DC8 24, 24, 24, 24, 24, 152, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              800000000000
   \              000000000000
   \              0000        
   \   00000290   0000C7202027       DC8 0, 0, 199, 32, 32, 39, 32, 32, 199, 0, 0, 0, 28, 34, 2, 2, 2, 34
   \              2020C7000000
   \              1C2202020222
   \   000002A2   1C0000000000       DC8 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000002B8   000000FFFFFF       DC8 0, 0, 0, 255, 255, 255, 1, 2, 84, 168, 80, 33, 206, 14, 206, 67, 64
   \              010254A85021
   \              CE0ECE4340  
   \   000002C9   404040404040       DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 192, 0
   \              404040404040
   \              404040C000  
   \   000002DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000002F1   000060303018       DC8 0, 0, 96, 48, 48, 24, 24, 12, 12, 28, 28, 96, 96, 96, 96, 48, 63
   \              180C0C1C1C60
   \              606060303F  
   \   00000302   0F0000000000       DC8 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 66, 64, 64, 64
   \              000000000000
   \              000000004142
   \              404040      
   \   00000317   42F100000000       DC8 66, 241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   0000032D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 62, 124
   \              000000000000
   \              0000FFFFFF3E
   \              7C          
   \   00000340   55AA5500FF7E       DC8 85, 170, 85, 0, 255, 126, 255, 0, 255, 255, 255, 255, 255, 255, 255
   \              FF00FFFFFFFF
   \              FFFFFF      
   \   0000034F   FFFFFFFFFFFF       DC8 255, 255, 255, 255, 255, 255, 255, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0
   \              FFFF00FF0000
   \              0000000000  
   \   00000360   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 220
   \              000000000000
   \              000000000000
   \              00F8DC      
   \   00000375   8E0606060606       DC8 142, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 140, 252, 112, 0, 0, 0, 0, 0, 0
   \              06060606068C
   \              FC7000000000
   \              0000        
   \   00000389   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 8, 8, 248, 8, 8, 249, 0, 0, 0, 0, 0
   \              000000F80808
   \              F80808F90000
   \              000000      
   \   0000039E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003B5   000000000000       DC8 0, 0, 0, 0, 0, 0, 63, 127, 255, 192, 128, 81, 162, 85, 0, 255, 248
   \              3F7FFFC08051
   \              A25500FFF8  
   \   000003C6   FF00FFFFFFFF       DC8 255, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
   \              FFFFFFFFFFFF
   \              FFFF        
   \   000003D4   FFFFFF00FF00       DC8 255, 255, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   000003E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 51, 51, 51, 51, 51, 51, 51
   \              000000000030
   \              313333333333
   \              3333        
   \   000003FC   333333333161       DC8 51, 51, 51, 51, 49, 97, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              C00000000000
   \              000000000000
   \              0000        
   \   00000410   00001C244444       DC8 0, 0, 28, 36, 68, 68, 68, 36, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              44241C000000
   \              000000000000
   \              0000        
   \   00000424   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000043B   000000010307       DC8 0, 0, 0, 1, 3, 7, 14, 29, 24, 31, 1, 31, 16, 23, 23, 23, 23, 23, 23
   \              0E1D181F011F
   \              101717171717
   \              17          
   \   0000044E   171717171717       DC8 23, 23, 23, 23, 23, 23, 23, 23, 23, 16, 31, 0, 0, 0, 0, 0, 0, 0, 0
   \              171717101F00
   \              000000000000
   \              00          
   \   00000461   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 108, 198
   \              000000000000
   \              000000000000
   \              386CC6      
   \   00000476   C6C6C6C6C6C6       DC8 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 195, 1, 0, 0
   \              C6C6C6C6C6C3
   \              010000      
   \   00000485   000000             DC8 0, 0, 0

   \                                 In section .data, align 4
   \                     ScrollMenu_poz:
   \   00000000   FFFFFFFF           DC32 -1

   \                                 In section .data, align 4
   \                     ScrollMenu_Paint_exist:
   \   00000000   FFFFFFFF           DC32 -1

   \                                 In section .data, align 1
   \                     SetupTimeCarPoz:
   \   00000000   01                 DC8 1
   \                     SleepModTime:
   \   00000001   00                 DC8 0

   \                                 In section .data, align 1
   \                     SetTimeCell:
   \   00000000   01                 DC8 1

   \                                 In section .data, align 1
   \                     ??Dziel5_2:
   \   00000000   05                 DC8 5
   9967                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9968                void Tester_MG1_Event(char CurrentNode)
   9969                {
   \                     Tester_MG1_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   9970                  int ans;
   9971                  char NP;
                              ^
Warning[Pe177]: variable "NP" was declared but never referenced
   9972                 
   9973                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   2D48               LDR      R0,??Tester_MG1_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   2D48               LDR      R0,??Tester_MG1_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   2D48               LDR      R0,??Tester_MG1_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   2D48               LDR      R0,??Tester_MG1_Event_0+0xC  ;; X_up
   \   0000001C   0025               MOVS     R5,#+0
   \   0000001E   405F               LDRSH    R0,[R0, R5]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   9974            
   9975                  char repaint;
   9976                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   0CD0               BEQ      ??Tester_MG1_Event_1
   9977                    {
   9978                    if (ans<0) {
   \   0000002A   0BD5               BPL      ??Tester_MG1_Event_1
   9979                     MenuLevel=(MenuLevel/10);
   \   0000002C   294E               LDR      R6,??Tester_MG1_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   306D               LDR      R0,[R6, #+80]
   \   00000030   0A21               MOVS     R1,#+10
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   3065               STR      R0,[R6, #+80]
   9980                     TestStep=0;
   \   00000038   2800               MOVS     R0,R5
   \   0000003A   3087               STRH     R0,[R6, #+56]
   9981                     SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   0000003C   2648               LDR      R0,??Tester_MG1_Event_0+0x14  ;; gProg
   \   0000003E   ........           BL       SetTask
   9982                     repaint=1;
   \   00000042   0124               MOVS     R4,#+1
   9983                    }
   9984                    }
   9985                    
   9986                      if (Button("Nowy test",3,18,58,13)==1)
   \                     ??Tester_MG1_Event_1:
   \   00000044   254D               LDR      R5,??Tester_MG1_Event_0+0x18  ;; `?<Constant "Nowy test">`
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0D20               MOVS     R0,#+13
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   3A23               MOVS     R3,#+58
   \   0000004E   1222               MOVS     R2,#+18
   \   00000050   0321               MOVS     R1,#+3
   \   00000052   2800               MOVS     R0,R5
   \   00000054   ........           BL       Button
   \   00000058   02B0               ADD      SP,SP,#+8
   \   0000005A   0128               CMP      R0,#+1
   \   0000005C   0ED1               BNE      ??Tester_MG1_Event_2
   9987                      {
   9988                        TestAmount=ShortTest;
   \   0000005E   1D4E               LDR      R6,??Tester_MG1_Event_0+0x10  ;; TextToChangeLength
   \   00000060   6420               MOVS     R0,#+100
   \   00000062   7087               STRH     R0,[R6, #+58]
   9989                         CleanCanvasArea(2,1,60,61,0); 
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   3D23               MOVS     R3,#+61
   \   0000006C   3C22               MOVS     R2,#+60
   \   0000006E   0121               MOVS     R1,#+1
   \   00000070   0220               MOVS     R0,#+2
   \   00000072   ........           BL       CleanCanvasArea
   \   00000076   02B0               ADD      SP,SP,#+8
   9990                        TestStep=0;
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   3087               STRH     R0,[R6, #+56]
   9991                      }
   9992                      if (Button("Dlugi test",3,4,58,13)==1)
   \                     ??Tester_MG1_Event_2:
   \   0000007C   82B0               SUB      SP,SP,#+8
   \   0000007E   0D20               MOVS     R0,#+13
   \   00000080   0090               STR      R0,[SP, #+0]
   \   00000082   3A23               MOVS     R3,#+58
   \   00000084   0422               MOVS     R2,#+4
   \   00000086   0321               MOVS     R1,#+3
   \   00000088   0C35               ADDS     R5,R5,#+12
   \   0000008A   2800               MOVS     R0,R5
   \   0000008C   ........           BL       Button
   \   00000090   02B0               ADD      SP,SP,#+8
   \   00000092   0128               CMP      R0,#+1
   \   00000094   0FD1               BNE      ??Tester_MG1_Event_3
   9993                      {
   9994                        TestAmount=LongTest;
   \   00000096   0F4E               LDR      R6,??Tester_MG1_Event_0+0x10  ;; TextToChangeLength
   \   00000098   FA20               MOVS     R0,#+250
   \   0000009A   C000               LSLS     R0,R0,#+3        ;; #+2000
   \   0000009C   7087               STRH     R0,[R6, #+58]
   9995                         CleanCanvasArea(2,1,60,61,0); 
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   0020               MOVS     R0,#+0
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   3D23               MOVS     R3,#+61
   \   000000A6   3C22               MOVS     R2,#+60
   \   000000A8   0121               MOVS     R1,#+1
   \   000000AA   0220               MOVS     R0,#+2
   \   000000AC   ........           BL       CleanCanvasArea
   \   000000B0   02B0               ADD      SP,SP,#+8
   9996                        TestStep=0;      
   \   000000B2   0020               MOVS     R0,#+0
   \   000000B4   3087               STRH     R0,[R6, #+56]
   9997                      }
   9998                    
   9999          
  10000                  
  10001                  if (repaint) MenuPaint();
   \                     ??Tester_MG1_Event_3:
   \   000000B6   2406               LSLS     R4,R4,#+24
   \   000000B8   01D0               BEQ      ??Tester_MG1_Event_4
   \   000000BA   ........           BL       MenuPaint
  10002                  
  10003                }//_______________________________________________________________________
   \                     ??Tester_MG1_Event_4:
   \   000000BE   70BC               POP      {R4-R6}
   \   000000C0   01BC               POP      {R0}
   \   000000C2   0047               BX       R0               ;; return
   \                     ??Tester_MG1_Event_0:
   \   000000C4   ........           DC32     Y_down
   \   000000C8   ........           DC32     X_down
   \   000000CC   ........           DC32     Y_up
   \   000000D0   ........           DC32     X_up
   \   000000D4   ........           DC32     TextToChangeLength
   \   000000D8   ........           DC32     gProg
   \   000000DC   ........           DC32     `?<Constant "Nowy test">`
  10004          
  10005          
  10006          
  10007                
  10008                
  10009                
  10010          
  10011          
  10012                //*-----------------------------------------------------------------------
  10013          
  10014          

   \                                 In section Debug.txt, align 4, keep-with-next
  10015                void Tester_MG1_Refresh(char CurrentNode)
  10016                {  
   \                     Tester_MG1_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
  10017                    if ((TestStartTime+1000)>g_counter) return;
   \   00000004   A64E               LDR      R6,??Tester_MG1_Refresh_0  ;; TextToChangeLength
   \   00000006   3000               MOVS     R0,R6
   \   00000008   8030               ADDS     R0,R0,#+128
   \   0000000A   0190               STR      R0,[SP, #+4]
   \   0000000C   A548               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   0000000E   03C8               LDM      R0!,{R0,R1}
   \   00000010   019A               LDR      R2,[SP, #+4]
   \   00000012   1268               LDR      R2,[R2, #+0]
   \   00000014   FA23               MOVS     R3,#+250
   \   00000016   9B00               LSLS     R3,R3,#+2        ;; #+1000
   \   00000018   D218               ADDS     R2,R2,R3
   \   0000001A   0023               MOVS     R3,#+0
   \   0000001C   9942               CMP      R1,R3
   \   0000001E   00D2               BCS      .+4
   \   00000020   9CE3               B        ??Tester_MG1_Refresh_1
   \   00000022   02D8               BHI      ??Tester_MG1_Refresh_2
   \   00000024   9042               CMP      R0,R2
   \   00000026   00D2               BCS      .+4
   \   00000028   98E3               B        ??Tester_MG1_Refresh_1
  10018                  char txt[5];
  10019                        if (TestStep<TestAmount) 
   \                     ??Tester_MG1_Refresh_2:
   \   0000002A   308F               LDRH     R0,[R6, #+56]
   \   0000002C   718F               LDRH     R1,[R6, #+58]
   \   0000002E   8842               CMP      R0,R1
   \   00000030   00D3               BCC      .+4
   \   00000032   A5E1               B        ??Tester_MG1_Refresh_3
  10020                        switch (TestStep%4)
   \   00000034   0100               MOVS     R1,R0
   \   00000036   8908               LSRS     R1,R1,#+2
   \   00000038   8900               LSLS     R1,R1,#+2
   \   0000003A   401A               SUBS     R0,R0,R1
   \   0000003C   08D0               BEQ      ??Tester_MG1_Refresh_4
   \   0000003E   0128               CMP      R0,#+1
   \   00000040   69D0               BEQ      ??Tester_MG1_Refresh_5
   \   00000042   0228               CMP      R0,#+2
   \   00000044   00D1               BNE      .+4
   \   00000046   C9E0               B        ??Tester_MG1_Refresh_6
   \   00000048   0328               CMP      R0,#+3
   \   0000004A   00D1               BNE      .+4
   \   0000004C   38E1               B        ??Tester_MG1_Refresh_7
   \   0000004E   97E1               B        ??Tester_MG1_Refresh_3
   \                     ??Tester_MG1_Refresh_4:
   \   00000050   6846               MOV      R0,SP
   \   00000052   007C               LDRB     R0,[R0, #+16]
   \   00000054   1621               MOVS     R1,#+22
   \   00000056   4843               MULS     R0,R1,R0
   \   00000058   9349               LDR      R1,??Tester_MG1_Refresh_0+0x8  ;; MainStage
   \   0000005A   0818               ADDS     R0,R1,R0
   \   0000005C   0090               STR      R0,[SP, #+0]
   \   0000005E   0700               MOVS     R7,R0
   \   00000060   A037               ADDS     R7,R7,#+160
   \   00000062   1900               MOVS     R1,R3
   \   00000064   3888               LDRH     R0,[R7, #+0]
   \   00000066   0004               LSLS     R0,R0,#+16
   \   00000068   0014               ASRS     R0,R0,#+16
  10021                        {
  10022                          case 0: 
  10023                              if ((PortStageRead(MainStage.StageI[CurrentNode].Port, 0)==0) && ((PortStageRead(MainStage.StageI[CurrentNode].Port, 1)==0)))
   \   0000006A   ........           BL       PortStageRead
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   3BD1               BNE      ??Tester_MG1_Refresh_8
   \   00000072   0121               MOVS     R1,#+1
   \   00000074   3888               LDRH     R0,[R7, #+0]
   \   00000076   0004               LSLS     R0,R0,#+16
   \   00000078   0014               ASRS     R0,R0,#+16
   \   0000007A   ........           BL       PortStageRead
   \   0000007E   0028               CMP      R0,#+0
   \   00000080   33D1               BNE      ??Tester_MG1_Refresh_8
  10024                              {
  10025                                 if ((TestStartTime+10000)<g_counter)
   \   00000082   8848               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   00000084   03C8               LDM      R0!,{R0,R1}
   \   00000086   019A               LDR      R2,[SP, #+4]
   \   00000088   1268               LDR      R2,[R2, #+0]
   \   0000008A   884B               LDR      R3,??Tester_MG1_Refresh_0+0xC  ;; 0x2710
   \   0000008C   D218               ADDS     R2,R2,R3
   \   0000008E   0023               MOVS     R3,#+0
   \   00000090   8B42               CMP      R3,R1
   \   00000092   13D8               BHI      ??Tester_MG1_Refresh_9
   \   00000094   01D3               BCC      ??Tester_MG1_Refresh_10
   \   00000096   8242               CMP      R2,R0
   \   00000098   10D2               BCS      ??Tester_MG1_Refresh_9
  10026                                 {
  10027                                   if ((g_counter-LastSendTime)>MaxTime)  MaxTime=g_counter-LastSendTime;
   \                     ??Tester_MG1_Refresh_10:
   \   0000009A   F76F               LDR      R7,[R6, #+124]
   \   0000009C   F28E               LDRH     R2,[R6, #+54]
   \   0000009E   0CB4               PUSH     {R2,R3}
   \   000000A0   3C00               MOVS     R4,R7
   \   000000A2   0025               MOVS     R5,#+0
   \   000000A4   0200               MOVS     R2,R0
   \   000000A6   0B00               MOVS     R3,R1
   \   000000A8   121B               SUBS     R2,R2,R4
   \   000000AA   AB41               SBCS     R3,R3,R5
   \   000000AC   30BC               POP      {R4,R5}
   \   000000AE   9D42               CMP      R5,R3
   \   000000B0   04D8               BHI      ??Tester_MG1_Refresh_9
   \   000000B2   01D3               BCC      ??Tester_MG1_Refresh_11
   \   000000B4   9442               CMP      R4,R2
   \   000000B6   01D2               BCS      ??Tester_MG1_Refresh_9
   \                     ??Tester_MG1_Refresh_11:
   \   000000B8   C01B               SUBS     R0,R0,R7
   \   000000BA   F086               STRH     R0,[R6, #+54]
  10028                                 }
  10029                                 
  10030                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),0,1);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \                     ??Tester_MG1_Refresh_9:
   \   000000BC   7C48               LDR      R0,??Tester_MG1_Refresh_0+0x10  ;; 0x3a2
   \   000000BE   0099               LDR      R1,[SP, #+0]
   \   000000C0   0D18               ADDS     R5,R1,R0
   \   000000C2   0122               MOVS     R2,#+1
   \   000000C4   0021               MOVS     R1,#+0
   \   000000C6   2800               MOVS     R0,R5
   \   000000C8   ........           BL       PortStageSet
  10031                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),1,0);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   000000CC   0022               MOVS     R2,#+0
   \   000000CE   0121               MOVS     R1,#+1
   \   000000D0   2800               MOVS     R0,R5
   \   000000D2   ........           BL       PortStageSet
  10032                                 MainStage.SendStageChange[1]=ChangeStageFlag;
   \   000000D6   7748               LDR      R0,??Tester_MG1_Refresh_0+0x14  ;; MainStage + 1772
   \   000000D8   0A21               MOVS     R1,#+10
   \   000000DA   0170               STRB     R1,[R0, #+0]
  10033                                 LastSendTime=g_counter;
   \   000000DC   7148               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   000000DE   03C8               LDM      R0!,{R0,R1}
   \   000000E0   F067               STR      R0,[R6, #+124]
  10034                                 TestStep++;
   \   000000E2   308F               LDRH     R0,[R6, #+56]
   \   000000E4   401C               ADDS     R0,R0,#+1
   \   000000E6   3087               STRH     R0,[R6, #+56]
   \   000000E8   4AE1               B        ??Tester_MG1_Refresh_3
  10035                              } else if ((TestStartTime+(TestStep*MaxWaitForResp+FirstTimeDelay))<g_counter)
   \                     ??Tester_MG1_Refresh_8:
   \   000000EA   0198               LDR      R0,[SP, #+4]
   \   000000EC   0068               LDR      R0,[R0, #+0]
   \   000000EE   318F               LDRH     R1,[R6, #+56]
   \   000000F0   FA22               MOVS     R2,#+250
   \   000000F2   5200               LSLS     R2,R2,#+1        ;; #+500
   \   000000F4   5143               MULS     R1,R2,R1
   \   000000F6   704A               LDR      R2,??Tester_MG1_Refresh_0+0x18  ;; 0x1388
   \   000000F8   8918               ADDS     R1,R1,R2
   \   000000FA   4218               ADDS     R2,R0,R1
   \   000000FC   0023               MOVS     R3,#+0
   \   000000FE   6948               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   00000100   03C8               LDM      R0!,{R0,R1}
   \   00000102   8B42               CMP      R3,R1
   \   00000104   00D9               BLS      .+4
   \   00000106   3BE1               B        ??Tester_MG1_Refresh_3
   \   00000108   02D3               BCC      ??Tester_MG1_Refresh_12
   \   0000010A   8242               CMP      R2,R0
   \   0000010C   00D3               BCC      .+4
   \   0000010E   37E1               B        ??Tester_MG1_Refresh_3
  10036                              {
  10037                                 TestStep=0xFFFF; 
   \                     ??Tester_MG1_Refresh_12:
   \   00000110   6A48               LDR      R0,??Tester_MG1_Refresh_0+0x1C  ;; 0xffff
   \   00000112   3087               STRH     R0,[R6, #+56]
   \   00000114   34E1               B        ??Tester_MG1_Refresh_3
  10038                              }
   \                     ??Tester_MG1_Refresh_5:
   \   00000116   6846               MOV      R0,SP
   \   00000118   007C               LDRB     R0,[R0, #+16]
   \   0000011A   1621               MOVS     R1,#+22
   \   0000011C   4843               MULS     R0,R1,R0
   \   0000011E   6249               LDR      R1,??Tester_MG1_Refresh_0+0x8  ;; MainStage
   \   00000120   0818               ADDS     R0,R1,R0
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   0700               MOVS     R7,R0
   \   00000126   A037               ADDS     R7,R7,#+160
   \   00000128   1900               MOVS     R1,R3
   \   0000012A   3888               LDRH     R0,[R7, #+0]
   \   0000012C   0004               LSLS     R0,R0,#+16
   \   0000012E   0014               ASRS     R0,R0,#+16
  10039                          break;
  10040                          case 1: 
  10041                              if ((PortStageRead(MainStage.StageI[CurrentNode].Port, 0)==1) && ((PortStageRead(MainStage.StageI[CurrentNode].Port, 1)==0)))
   \   00000130   ........           BL       PortStageRead
   \   00000134   0128               CMP      R0,#+1
   \   00000136   3BD1               BNE      ??Tester_MG1_Refresh_13
   \   00000138   0121               MOVS     R1,#+1
   \   0000013A   3888               LDRH     R0,[R7, #+0]
   \   0000013C   0004               LSLS     R0,R0,#+16
   \   0000013E   0014               ASRS     R0,R0,#+16
   \   00000140   ........           BL       PortStageRead
   \   00000144   0028               CMP      R0,#+0
   \   00000146   33D1               BNE      ??Tester_MG1_Refresh_13
  10042                              {
  10043                                if ((TestStartTime+10000)<g_counter)
   \   00000148   5648               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   0000014A   03C8               LDM      R0!,{R0,R1}
   \   0000014C   019A               LDR      R2,[SP, #+4]
   \   0000014E   1268               LDR      R2,[R2, #+0]
   \   00000150   564B               LDR      R3,??Tester_MG1_Refresh_0+0xC  ;; 0x2710
   \   00000152   D218               ADDS     R2,R2,R3
   \   00000154   0023               MOVS     R3,#+0
   \   00000156   8B42               CMP      R3,R1
   \   00000158   13D8               BHI      ??Tester_MG1_Refresh_14
   \   0000015A   01D3               BCC      ??Tester_MG1_Refresh_15
   \   0000015C   8242               CMP      R2,R0
   \   0000015E   10D2               BCS      ??Tester_MG1_Refresh_14
  10044                                 {
  10045                                   if ((g_counter-LastSendTime)>MaxTime)  MaxTime=g_counter-LastSendTime;
   \                     ??Tester_MG1_Refresh_15:
   \   00000160   F76F               LDR      R7,[R6, #+124]
   \   00000162   F28E               LDRH     R2,[R6, #+54]
   \   00000164   0CB4               PUSH     {R2,R3}
   \   00000166   3C00               MOVS     R4,R7
   \   00000168   0025               MOVS     R5,#+0
   \   0000016A   0200               MOVS     R2,R0
   \   0000016C   0B00               MOVS     R3,R1
   \   0000016E   121B               SUBS     R2,R2,R4
   \   00000170   AB41               SBCS     R3,R3,R5
   \   00000172   30BC               POP      {R4,R5}
   \   00000174   9D42               CMP      R5,R3
   \   00000176   04D8               BHI      ??Tester_MG1_Refresh_14
   \   00000178   01D3               BCC      ??Tester_MG1_Refresh_16
   \   0000017A   9442               CMP      R4,R2
   \   0000017C   01D2               BCS      ??Tester_MG1_Refresh_14
   \                     ??Tester_MG1_Refresh_16:
   \   0000017E   C01B               SUBS     R0,R0,R7
   \   00000180   F086               STRH     R0,[R6, #+54]
  10046                                 }
  10047                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),0,0);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \                     ??Tester_MG1_Refresh_14:
   \   00000182   4B48               LDR      R0,??Tester_MG1_Refresh_0+0x10  ;; 0x3a2
   \   00000184   0099               LDR      R1,[SP, #+0]
   \   00000186   0D18               ADDS     R5,R1,R0
   \   00000188   0022               MOVS     R2,#+0
   \   0000018A   1100               MOVS     R1,R2
   \   0000018C   2800               MOVS     R0,R5
   \   0000018E   ........           BL       PortStageSet
  10048                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),1,1);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   00000192   0122               MOVS     R2,#+1
   \   00000194   1100               MOVS     R1,R2
   \   00000196   2800               MOVS     R0,R5
   \   00000198   ........           BL       PortStageSet
  10049                                 MainStage.SendStageChange[1]=ChangeStageFlag;
   \   0000019C   4548               LDR      R0,??Tester_MG1_Refresh_0+0x14  ;; MainStage + 1772
   \   0000019E   0A21               MOVS     R1,#+10
   \   000001A0   0170               STRB     R1,[R0, #+0]
  10050                                 LastSendTime=g_counter;
   \   000001A2   4048               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   000001A4   03C8               LDM      R0!,{R0,R1}
   \   000001A6   F067               STR      R0,[R6, #+124]
  10051                                 TestStep++;
   \   000001A8   308F               LDRH     R0,[R6, #+56]
   \   000001AA   401C               ADDS     R0,R0,#+1
   \   000001AC   3087               STRH     R0,[R6, #+56]
   \   000001AE   E7E0               B        ??Tester_MG1_Refresh_3
  10052                              } else if ((TestStartTime+(TestStep*MaxWaitForResp+FirstTimeDelay))<g_counter)
   \                     ??Tester_MG1_Refresh_13:
   \   000001B0   0198               LDR      R0,[SP, #+4]
   \   000001B2   0068               LDR      R0,[R0, #+0]
   \   000001B4   318F               LDRH     R1,[R6, #+56]
   \   000001B6   FA22               MOVS     R2,#+250
   \   000001B8   5200               LSLS     R2,R2,#+1        ;; #+500
   \   000001BA   5143               MULS     R1,R2,R1
   \   000001BC   3E4A               LDR      R2,??Tester_MG1_Refresh_0+0x18  ;; 0x1388
   \   000001BE   8918               ADDS     R1,R1,R2
   \   000001C0   4218               ADDS     R2,R0,R1
   \   000001C2   0023               MOVS     R3,#+0
   \   000001C4   3748               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   000001C6   03C8               LDM      R0!,{R0,R1}
   \   000001C8   8B42               CMP      R3,R1
   \   000001CA   00D9               BLS      .+4
   \   000001CC   D8E0               B        ??Tester_MG1_Refresh_3
   \   000001CE   02D3               BCC      ??Tester_MG1_Refresh_17
   \   000001D0   8242               CMP      R2,R0
   \   000001D2   00D3               BCC      .+4
   \   000001D4   D4E0               B        ??Tester_MG1_Refresh_3
  10053                              {
  10054                                 TestStep=0xFFFF; 
   \                     ??Tester_MG1_Refresh_17:
   \   000001D6   3948               LDR      R0,??Tester_MG1_Refresh_0+0x1C  ;; 0xffff
   \   000001D8   3087               STRH     R0,[R6, #+56]
   \   000001DA   D1E0               B        ??Tester_MG1_Refresh_3
  10055                              }
   \                     ??Tester_MG1_Refresh_6:
   \   000001DC   6846               MOV      R0,SP
   \   000001DE   007C               LDRB     R0,[R0, #+16]
   \   000001E0   1621               MOVS     R1,#+22
   \   000001E2   4843               MULS     R0,R1,R0
   \   000001E4   3049               LDR      R1,??Tester_MG1_Refresh_0+0x8  ;; MainStage
   \   000001E6   0818               ADDS     R0,R1,R0
   \   000001E8   0090               STR      R0,[SP, #+0]
   \   000001EA   0700               MOVS     R7,R0
   \   000001EC   A037               ADDS     R7,R7,#+160
   \   000001EE   1900               MOVS     R1,R3
   \   000001F0   3888               LDRH     R0,[R7, #+0]
   \   000001F2   0004               LSLS     R0,R0,#+16
   \   000001F4   0014               ASRS     R0,R0,#+16
  10056                          break;
  10057                          case 2: 
  10058                              if ((PortStageRead(MainStage.StageI[CurrentNode].Port, 0)==0) && ((PortStageRead(MainStage.StageI[CurrentNode].Port, 1)==1)))
   \   000001F6   ........           BL       PortStageRead
   \   000001FA   0028               CMP      R0,#+0
   \   000001FC   3BD1               BNE      ??Tester_MG1_Refresh_18
   \   000001FE   0121               MOVS     R1,#+1
   \   00000200   3888               LDRH     R0,[R7, #+0]
   \   00000202   0004               LSLS     R0,R0,#+16
   \   00000204   0014               ASRS     R0,R0,#+16
   \   00000206   ........           BL       PortStageRead
   \   0000020A   0128               CMP      R0,#+1
   \   0000020C   33D1               BNE      ??Tester_MG1_Refresh_18
  10059                              {
  10060                                if ((TestStartTime+10000)<g_counter)
   \   0000020E   2548               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   00000210   03C8               LDM      R0!,{R0,R1}
   \   00000212   019A               LDR      R2,[SP, #+4]
   \   00000214   1268               LDR      R2,[R2, #+0]
   \   00000216   254B               LDR      R3,??Tester_MG1_Refresh_0+0xC  ;; 0x2710
   \   00000218   D218               ADDS     R2,R2,R3
   \   0000021A   0023               MOVS     R3,#+0
   \   0000021C   8B42               CMP      R3,R1
   \   0000021E   13D8               BHI      ??Tester_MG1_Refresh_19
   \   00000220   01D3               BCC      ??Tester_MG1_Refresh_20
   \   00000222   8242               CMP      R2,R0
   \   00000224   10D2               BCS      ??Tester_MG1_Refresh_19
  10061                                 {
  10062                                   if ((g_counter-LastSendTime)>MaxTime)  MaxTime=g_counter-LastSendTime;
   \                     ??Tester_MG1_Refresh_20:
   \   00000226   F76F               LDR      R7,[R6, #+124]
   \   00000228   F28E               LDRH     R2,[R6, #+54]
   \   0000022A   0CB4               PUSH     {R2,R3}
   \   0000022C   3C00               MOVS     R4,R7
   \   0000022E   0025               MOVS     R5,#+0
   \   00000230   0200               MOVS     R2,R0
   \   00000232   0B00               MOVS     R3,R1
   \   00000234   121B               SUBS     R2,R2,R4
   \   00000236   AB41               SBCS     R3,R3,R5
   \   00000238   30BC               POP      {R4,R5}
   \   0000023A   9D42               CMP      R5,R3
   \   0000023C   04D8               BHI      ??Tester_MG1_Refresh_19
   \   0000023E   01D3               BCC      ??Tester_MG1_Refresh_21
   \   00000240   9442               CMP      R4,R2
   \   00000242   01D2               BCS      ??Tester_MG1_Refresh_19
   \                     ??Tester_MG1_Refresh_21:
   \   00000244   C01B               SUBS     R0,R0,R7
   \   00000246   F086               STRH     R0,[R6, #+54]
  10063                                 }
  10064                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),0,1);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \                     ??Tester_MG1_Refresh_19:
   \   00000248   1948               LDR      R0,??Tester_MG1_Refresh_0+0x10  ;; 0x3a2
   \   0000024A   0099               LDR      R1,[SP, #+0]
   \   0000024C   0D18               ADDS     R5,R1,R0
   \   0000024E   0122               MOVS     R2,#+1
   \   00000250   0021               MOVS     R1,#+0
   \   00000252   2800               MOVS     R0,R5
   \   00000254   ........           BL       PortStageSet
  10065                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),1,1);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   00000258   0122               MOVS     R2,#+1
   \   0000025A   1100               MOVS     R1,R2
   \   0000025C   2800               MOVS     R0,R5
   \   0000025E   ........           BL       PortStageSet
  10066                                 MainStage.SendStageChange[1]=ChangeStageFlag;
   \   00000262   1448               LDR      R0,??Tester_MG1_Refresh_0+0x14  ;; MainStage + 1772
   \   00000264   0A21               MOVS     R1,#+10
   \   00000266   0170               STRB     R1,[R0, #+0]
  10067                                 LastSendTime=g_counter;
   \   00000268   0E48               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   0000026A   03C8               LDM      R0!,{R0,R1}
   \   0000026C   F067               STR      R0,[R6, #+124]
  10068                                 TestStep++;
   \   0000026E   308F               LDRH     R0,[R6, #+56]
   \   00000270   401C               ADDS     R0,R0,#+1
   \   00000272   3087               STRH     R0,[R6, #+56]
   \   00000274   84E0               B        ??Tester_MG1_Refresh_3
  10069                              } else if ((TestStartTime+(TestStep*MaxWaitForResp+FirstTimeDelay))<g_counter)
   \                     ??Tester_MG1_Refresh_18:
   \   00000276   0198               LDR      R0,[SP, #+4]
   \   00000278   0068               LDR      R0,[R0, #+0]
   \   0000027A   318F               LDRH     R1,[R6, #+56]
   \   0000027C   FA22               MOVS     R2,#+250
   \   0000027E   5200               LSLS     R2,R2,#+1        ;; #+500
   \   00000280   5143               MULS     R1,R2,R1
   \   00000282   0D4A               LDR      R2,??Tester_MG1_Refresh_0+0x18  ;; 0x1388
   \   00000284   8918               ADDS     R1,R1,R2
   \   00000286   4218               ADDS     R2,R0,R1
   \   00000288   0023               MOVS     R3,#+0
   \   0000028A   0648               LDR      R0,??Tester_MG1_Refresh_0+0x4  ;; g_counter
   \   0000028C   03C8               LDM      R0!,{R0,R1}
   \   0000028E   8B42               CMP      R3,R1
   \   00000290   76D8               BHI      ??Tester_MG1_Refresh_3
   \   00000292   01D3               BCC      ??Tester_MG1_Refresh_22
   \   00000294   8242               CMP      R2,R0
   \   00000296   73D2               BCS      ??Tester_MG1_Refresh_3
  10070                              {
  10071                                 TestStep=0xFFFF; 
   \                     ??Tester_MG1_Refresh_22:
   \   00000298   0848               LDR      R0,??Tester_MG1_Refresh_0+0x1C  ;; 0xffff
   \   0000029A   3087               STRH     R0,[R6, #+56]
   \   0000029C   70E0               B        ??Tester_MG1_Refresh_3
   \   0000029E   C046               Nop      
   \                     ??Tester_MG1_Refresh_0:
   \   000002A0   ........           DC32     TextToChangeLength
   \   000002A4   ........           DC32     g_counter
   \   000002A8   ........           DC32     MainStage
   \   000002AC   10270000           DC32     0x2710
   \   000002B0   A2030000           DC32     0x3a2
   \   000002B4   ........           DC32     MainStage + 1772
   \   000002B8   88130000           DC32     0x1388
   \   000002BC   FFFF0000           DC32     0xffff
  10072                              }
   \                     ??Tester_MG1_Refresh_7:
   \   000002C0   6846               MOV      R0,SP
   \   000002C2   007C               LDRB     R0,[R0, #+16]
   \   000002C4   1621               MOVS     R1,#+22
   \   000002C6   4843               MULS     R0,R1,R0
   \   000002C8   C949               LDR      R1,??Tester_MG1_Refresh_23  ;; MainStage
   \   000002CA   0818               ADDS     R0,R1,R0
   \   000002CC   0090               STR      R0,[SP, #+0]
   \   000002CE   0700               MOVS     R7,R0
   \   000002D0   A037               ADDS     R7,R7,#+160
   \   000002D2   1900               MOVS     R1,R3
   \   000002D4   3888               LDRH     R0,[R7, #+0]
   \   000002D6   0004               LSLS     R0,R0,#+16
   \   000002D8   0014               ASRS     R0,R0,#+16
  10073                          break; 
  10074                          case 3: 
  10075                              if ((PortStageRead(MainStage.StageI[CurrentNode].Port, 0)==1) && ((PortStageRead(MainStage.StageI[CurrentNode].Port, 1)==1)))
   \   000002DA   ........           BL       PortStageRead
   \   000002DE   0128               CMP      R0,#+1
   \   000002E0   3BD1               BNE      ??Tester_MG1_Refresh_24
   \   000002E2   0121               MOVS     R1,#+1
   \   000002E4   3888               LDRH     R0,[R7, #+0]
   \   000002E6   0004               LSLS     R0,R0,#+16
   \   000002E8   0014               ASRS     R0,R0,#+16
   \   000002EA   ........           BL       PortStageRead
   \   000002EE   0128               CMP      R0,#+1
   \   000002F0   33D1               BNE      ??Tester_MG1_Refresh_24
  10076                              {
  10077                                if ((TestStartTime+10000)<g_counter)
   \   000002F2   C048               LDR      R0,??Tester_MG1_Refresh_23+0x4  ;; g_counter
   \   000002F4   03C8               LDM      R0!,{R0,R1}
   \   000002F6   019A               LDR      R2,[SP, #+4]
   \   000002F8   1268               LDR      R2,[R2, #+0]
   \   000002FA   BF4B               LDR      R3,??Tester_MG1_Refresh_23+0x8  ;; 0x2710
   \   000002FC   D218               ADDS     R2,R2,R3
   \   000002FE   0023               MOVS     R3,#+0
   \   00000300   8B42               CMP      R3,R1
   \   00000302   13D8               BHI      ??Tester_MG1_Refresh_25
   \   00000304   01D3               BCC      ??Tester_MG1_Refresh_26
   \   00000306   8242               CMP      R2,R0
   \   00000308   10D2               BCS      ??Tester_MG1_Refresh_25
  10078                                 {
  10079                                   if ((g_counter-LastSendTime)>MaxTime)  MaxTime=g_counter-LastSendTime;
   \                     ??Tester_MG1_Refresh_26:
   \   0000030A   F76F               LDR      R7,[R6, #+124]
   \   0000030C   F28E               LDRH     R2,[R6, #+54]
   \   0000030E   0CB4               PUSH     {R2,R3}
   \   00000310   3C00               MOVS     R4,R7
   \   00000312   0025               MOVS     R5,#+0
   \   00000314   0200               MOVS     R2,R0
   \   00000316   0B00               MOVS     R3,R1
   \   00000318   121B               SUBS     R2,R2,R4
   \   0000031A   AB41               SBCS     R3,R3,R5
   \   0000031C   30BC               POP      {R4,R5}
   \   0000031E   9D42               CMP      R5,R3
   \   00000320   04D8               BHI      ??Tester_MG1_Refresh_25
   \   00000322   01D3               BCC      ??Tester_MG1_Refresh_27
   \   00000324   9442               CMP      R4,R2
   \   00000326   01D2               BCS      ??Tester_MG1_Refresh_25
   \                     ??Tester_MG1_Refresh_27:
   \   00000328   C01B               SUBS     R0,R0,R7
   \   0000032A   F086               STRH     R0,[R6, #+54]
  10080                                 }
  10081                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),0,0);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \                     ??Tester_MG1_Refresh_25:
   \   0000032C   B348               LDR      R0,??Tester_MG1_Refresh_23+0xC  ;; 0x3a2
   \   0000032E   0099               LDR      R1,[SP, #+0]
   \   00000330   0D18               ADDS     R5,R1,R0
   \   00000332   0022               MOVS     R2,#+0
   \   00000334   1100               MOVS     R1,R2
   \   00000336   2800               MOVS     R0,R5
   \   00000338   ........           BL       PortStageSet
  10082                                 PortStageSet((&(MainStage.StageQ[CurrentNode].Port)),1,0);
                                                     ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   \   0000033C   0022               MOVS     R2,#+0
   \   0000033E   0121               MOVS     R1,#+1
   \   00000340   2800               MOVS     R0,R5
   \   00000342   ........           BL       PortStageSet
  10083                                 MainStage.SendStageChange[1]=ChangeStageFlag;
   \   00000346   AE48               LDR      R0,??Tester_MG1_Refresh_23+0x10  ;; MainStage + 1772
   \   00000348   0A21               MOVS     R1,#+10
   \   0000034A   0170               STRB     R1,[R0, #+0]
  10084                                 LastSendTime=g_counter;
   \   0000034C   A948               LDR      R0,??Tester_MG1_Refresh_23+0x4  ;; g_counter
   \   0000034E   03C8               LDM      R0!,{R0,R1}
   \   00000350   F067               STR      R0,[R6, #+124]
  10085                                 TestStep++;
   \   00000352   308F               LDRH     R0,[R6, #+56]
   \   00000354   401C               ADDS     R0,R0,#+1
   \   00000356   3087               STRH     R0,[R6, #+56]
   \   00000358   12E0               B        ??Tester_MG1_Refresh_3
  10086                              } else if ((TestStartTime+(TestStep*MaxWaitForResp+FirstTimeDelay))<g_counter)
   \                     ??Tester_MG1_Refresh_24:
   \   0000035A   0198               LDR      R0,[SP, #+4]
   \   0000035C   0068               LDR      R0,[R0, #+0]
   \   0000035E   318F               LDRH     R1,[R6, #+56]
   \   00000360   FA22               MOVS     R2,#+250
   \   00000362   5200               LSLS     R2,R2,#+1        ;; #+500
   \   00000364   5143               MULS     R1,R2,R1
   \   00000366   A74A               LDR      R2,??Tester_MG1_Refresh_23+0x14  ;; 0x1388
   \   00000368   8918               ADDS     R1,R1,R2
   \   0000036A   4218               ADDS     R2,R0,R1
   \   0000036C   0023               MOVS     R3,#+0
   \   0000036E   A148               LDR      R0,??Tester_MG1_Refresh_23+0x4  ;; g_counter
   \   00000370   03C8               LDM      R0!,{R0,R1}
   \   00000372   8B42               CMP      R3,R1
   \   00000374   04D8               BHI      ??Tester_MG1_Refresh_3
   \   00000376   01D3               BCC      ??Tester_MG1_Refresh_28
   \   00000378   8242               CMP      R2,R0
   \   0000037A   01D2               BCS      ??Tester_MG1_Refresh_3
  10087                              {
  10088                                 TestStep=0xFFFF; 
   \                     ??Tester_MG1_Refresh_28:
   \   0000037C   A248               LDR      R0,??Tester_MG1_Refresh_23+0x18  ;; 0xffff
   \   0000037E   3087               STRH     R0,[R6, #+56]
  10089                              }
  10090                          break;           
  10091                                    
  10092                        }     
  10093                        
  10094                        if ((TestStep!=0xFFFF) && (TestAmount>=TestStep))   
   \                     ??Tester_MG1_Refresh_3:
   \   00000380   308F               LDRH     R0,[R6, #+56]
   \   00000382   A14C               LDR      R4,??Tester_MG1_Refresh_23+0x18  ;; 0xffff
   \   00000384   A042               CMP      R0,R4
   \   00000386   1AD0               BEQ      ??Tester_MG1_Refresh_29
   \   00000388   718F               LDRH     R1,[R6, #+58]
   \   0000038A   8142               CMP      R1,R0
   \   0000038C   17D3               BCC      ??Tester_MG1_Refresh_29
  10095                          {
  10096                            char LIL=sprintf(txt, "%d",  (TestAmount-TestStep));
                                            ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000038E   0A1A               SUBS     R2,R1,R0
   \   00000390   9EA1               ADR      R1,??Tester_MG1_Refresh_23+0x1C  ;; 0x25, 0x64, 0x00, 0x00
   \   00000392   02A8               ADD      R0,SP,#+8
   \   00000394   ........           BL       sprintf
   \   00000398   0200               MOVS     R2,R0
   \   0000039A   1206               LSLS     R2,R2,#+24
   \   0000039C   120E               LSRS     R2,R2,#+24
  10097                            Label(txt,2,4,92,LIL,57,1,127,0); 
   \   0000039E   82B0               SUB      SP,SP,#+8
   \   000003A0   0020               MOVS     R0,#+0
   \   000003A2   0090               STR      R0,[SP, #+0]
   \   000003A4   7F21               MOVS     R1,#+127
   \   000003A6   0120               MOVS     R0,#+1
   \   000003A8   03B4               PUSH     {R0,R1}
   \   000003AA   3921               MOVS     R1,#+57
   \   000003AC   1000               MOVS     R0,R2
   \   000003AE   03B4               PUSH     {R0,R1}
   \   000003B0   5C23               MOVS     R3,#+92
   \   000003B2   0422               MOVS     R2,#+4
   \   000003B4   0221               MOVS     R1,#+2
   \   000003B6   08A8               ADD      R0,SP,#+32
   \   000003B8   ........           BL       Label
   \   000003BC   06B0               ADD      SP,SP,#+24
  10098                          }
  10099          
  10100                     
  10101                       
  10102                        
  10103                        
  10104                      //*******************************************
  10105                           char PozY=80;
  10106                           char PozX=3;
  10107                           H_line(PozX,PozY,26,1); 
   \                     ??Tester_MG1_Refresh_29:
   \   000003BE   0123               MOVS     R3,#+1
   \   000003C0   1A22               MOVS     R2,#+26
   \   000003C2   5021               MOVS     R1,#+80
   \   000003C4   0320               MOVS     R0,#+3
   \   000003C6   ........           BL       H_line
  10108                           H_line(PozX,PozY+10,26,1);
   \   000003CA   0123               MOVS     R3,#+1
   \   000003CC   1A22               MOVS     R2,#+26
   \   000003CE   5A21               MOVS     R1,#+90
   \   000003D0   0320               MOVS     R0,#+3
   \   000003D2   ........           BL       H_line
  10109                           V_line(PozX,PozY,10,1);
   \   000003D6   0123               MOVS     R3,#+1
   \   000003D8   0A22               MOVS     R2,#+10
   \   000003DA   5021               MOVS     R1,#+80
   \   000003DC   0320               MOVS     R0,#+3
   \   000003DE   ........           BL       V_line
  10110                           V_line(PozX+26,PozY,10,1); 
   \   000003E2   0123               MOVS     R3,#+1
   \   000003E4   0A22               MOVS     R2,#+10
   \   000003E6   5021               MOVS     R1,#+80
   \   000003E8   1D20               MOVS     R0,#+29
   \   000003EA   ........           BL       V_line
  10111                           Label("Q1",0,PozX+1,PozY+1,2,15,1,127,1); 
   \   000003EE   82B0               SUB      SP,SP,#+8
   \   000003F0   0120               MOVS     R0,#+1
   \   000003F2   0090               STR      R0,[SP, #+0]
   \   000003F4   7F21               MOVS     R1,#+127
   \   000003F6   03B4               PUSH     {R0,R1}
   \   000003F8   0F21               MOVS     R1,#+15
   \   000003FA   0220               MOVS     R0,#+2
   \   000003FC   03B4               PUSH     {R0,R1}
   \   000003FE   5123               MOVS     R3,#+81
   \   00000400   0422               MOVS     R2,#+4
   \   00000402   0021               MOVS     R1,#+0
   \   00000404   D7A0               ADR      R0,??Tester_MG1_Refresh_30  ;; 0x51, 0x31, 0x00, 0x00
   \   00000406   ........           BL       Label
   \   0000040A   06B0               ADD      SP,SP,#+24
   \   0000040C   6846               MOV      R0,SP
   \   0000040E   007C               LDRB     R0,[R0, #+16]
   \   00000410   1621               MOVS     R1,#+22
   \   00000412   4843               MULS     R0,R1,R0
   \   00000414   7649               LDR      R1,??Tester_MG1_Refresh_23  ;; MainStage
   \   00000416   0818               ADDS     R0,R1,R0
   \   00000418   0090               STR      R0,[SP, #+0]
   \   0000041A   7848               LDR      R0,??Tester_MG1_Refresh_23+0xC  ;; 0x3a2
   \   0000041C   0099               LDR      R1,[SP, #+0]
   \   0000041E   0D18               ADDS     R5,R1,R0
   \   00000420   2888               LDRH     R0,[R5, #+0]
   \   00000422   C007               LSLS     R0,R0,#+31
   \   00000424   82B0               SUB      SP,SP,#+8
   \   00000426   09D5               BPL      ??Tester_MG1_Refresh_31
  10112                           
  10113                           if ((MainStage.StageQ[CurrentNode].Port>>0)&0x1)
  10114                           {
  10115                             CleanCanvasArea(PozX+18,PozY+2,7,7,1); 
   \   00000428   0120               MOVS     R0,#+1
   \   0000042A   0090               STR      R0,[SP, #+0]
   \   0000042C   0723               MOVS     R3,#+7
   \   0000042E   1A00               MOVS     R2,R3
   \   00000430   5221               MOVS     R1,#+82
   \   00000432   1520               MOVS     R0,#+21
   \   00000434   ........           BL       CleanCanvasArea
   \   00000438   02B0               ADD      SP,SP,#+8
   \   0000043A   08E0               B        ??Tester_MG1_Refresh_32
  10116                           }else{
  10117                             CleanCanvasArea(PozX+18,PozY+2,7,7,0);
   \                     ??Tester_MG1_Refresh_31:
   \   0000043C   0020               MOVS     R0,#+0
   \   0000043E   0090               STR      R0,[SP, #+0]
   \   00000440   0723               MOVS     R3,#+7
   \   00000442   1A00               MOVS     R2,R3
   \   00000444   5221               MOVS     R1,#+82
   \   00000446   1520               MOVS     R0,#+21
   \   00000448   ........           BL       CleanCanvasArea
   \   0000044C   02B0               ADD      SP,SP,#+8
  10118                           }
  10119                           
  10120                           
  10121                           PozY=80;
  10122                           PozX=33;
  10123                           H_line(PozX,PozY,26,1); 
   \                     ??Tester_MG1_Refresh_32:
   \   0000044E   0123               MOVS     R3,#+1
   \   00000450   1A22               MOVS     R2,#+26
   \   00000452   5021               MOVS     R1,#+80
   \   00000454   2120               MOVS     R0,#+33
   \   00000456   ........           BL       H_line
  10124                           H_line(PozX,PozY+10,26,1);
   \   0000045A   0123               MOVS     R3,#+1
   \   0000045C   1A22               MOVS     R2,#+26
   \   0000045E   5A21               MOVS     R1,#+90
   \   00000460   2120               MOVS     R0,#+33
   \   00000462   ........           BL       H_line
  10125                           V_line(PozX,PozY,10,1);
   \   00000466   0123               MOVS     R3,#+1
   \   00000468   0A22               MOVS     R2,#+10
   \   0000046A   5021               MOVS     R1,#+80
   \   0000046C   2120               MOVS     R0,#+33
   \   0000046E   ........           BL       V_line
  10126                           V_line(PozX+26,PozY,10,1); 
   \   00000472   0123               MOVS     R3,#+1
   \   00000474   0A22               MOVS     R2,#+10
   \   00000476   5021               MOVS     R1,#+80
   \   00000478   3B20               MOVS     R0,#+59
   \   0000047A   ........           BL       V_line
  10127                           Label("In1",0,PozX+1,PozY+1,3,15,1,127,1); 
   \   0000047E   82B0               SUB      SP,SP,#+8
   \   00000480   0120               MOVS     R0,#+1
   \   00000482   0090               STR      R0,[SP, #+0]
   \   00000484   7F21               MOVS     R1,#+127
   \   00000486   03B4               PUSH     {R0,R1}
   \   00000488   0F21               MOVS     R1,#+15
   \   0000048A   0320               MOVS     R0,#+3
   \   0000048C   03B4               PUSH     {R0,R1}
   \   0000048E   5123               MOVS     R3,#+81
   \   00000490   2222               MOVS     R2,#+34
   \   00000492   0021               MOVS     R1,#+0
   \   00000494   B4A0               ADR      R0,??Tester_MG1_Refresh_30+0x4  ;; "In1"
   \   00000496   ........           BL       Label
   \   0000049A   06B0               ADD      SP,SP,#+24
  10128                           
  10129                           if ((MainStage.StageI[CurrentNode].Port>>0)&0x1)
   \   0000049C   009F               LDR      R7,[SP, #+0]
   \   0000049E   A037               ADDS     R7,R7,#+160
   \   000004A0   3888               LDRH     R0,[R7, #+0]
   \   000004A2   C007               LSLS     R0,R0,#+31
   \   000004A4   82B0               SUB      SP,SP,#+8
   \   000004A6   09D5               BPL      ??Tester_MG1_Refresh_33
  10130                           {
  10131                             CleanCanvasArea(PozX+18,PozY+2,7,7,1); 
   \   000004A8   0120               MOVS     R0,#+1
   \   000004AA   0090               STR      R0,[SP, #+0]
   \   000004AC   0723               MOVS     R3,#+7
   \   000004AE   1A00               MOVS     R2,R3
   \   000004B0   5221               MOVS     R1,#+82
   \   000004B2   3320               MOVS     R0,#+51
   \   000004B4   ........           BL       CleanCanvasArea
   \   000004B8   02B0               ADD      SP,SP,#+8
   \   000004BA   08E0               B        ??Tester_MG1_Refresh_34
  10132                           }else{
  10133                             CleanCanvasArea(PozX+18,PozY+2,7,7,0);
   \                     ??Tester_MG1_Refresh_33:
   \   000004BC   0020               MOVS     R0,#+0
   \   000004BE   0090               STR      R0,[SP, #+0]
   \   000004C0   0723               MOVS     R3,#+7
   \   000004C2   1A00               MOVS     R2,R3
   \   000004C4   5221               MOVS     R1,#+82
   \   000004C6   3320               MOVS     R0,#+51
   \   000004C8   ........           BL       CleanCanvasArea
   \   000004CC   02B0               ADD      SP,SP,#+8
  10134                           }
  10135                 
  10136                           PozY=66;
  10137                           PozX=3;
  10138                           H_line(PozX,PozY,26,1); 
   \                     ??Tester_MG1_Refresh_34:
   \   000004CE   0123               MOVS     R3,#+1
   \   000004D0   1A22               MOVS     R2,#+26
   \   000004D2   4221               MOVS     R1,#+66
   \   000004D4   0320               MOVS     R0,#+3
   \   000004D6   ........           BL       H_line
  10139                           H_line(PozX,PozY+10,26,1);
   \   000004DA   0123               MOVS     R3,#+1
   \   000004DC   1A22               MOVS     R2,#+26
   \   000004DE   4C21               MOVS     R1,#+76
   \   000004E0   0320               MOVS     R0,#+3
   \   000004E2   ........           BL       H_line
  10140                           V_line(PozX,PozY,10,1);
   \   000004E6   0123               MOVS     R3,#+1
   \   000004E8   0A22               MOVS     R2,#+10
   \   000004EA   4221               MOVS     R1,#+66
   \   000004EC   0320               MOVS     R0,#+3
   \   000004EE   ........           BL       V_line
  10141                           V_line(PozX+26,PozY,10,1); 
   \   000004F2   0123               MOVS     R3,#+1
   \   000004F4   0A22               MOVS     R2,#+10
   \   000004F6   4221               MOVS     R1,#+66
   \   000004F8   1D20               MOVS     R0,#+29
   \   000004FA   ........           BL       V_line
  10142                           Label("Q2",0,PozX+1,PozY+1,3,15,1,127,1); 
   \   000004FE   82B0               SUB      SP,SP,#+8
   \   00000500   0120               MOVS     R0,#+1
   \   00000502   0090               STR      R0,[SP, #+0]
   \   00000504   7F21               MOVS     R1,#+127
   \   00000506   03B4               PUSH     {R0,R1}
   \   00000508   0F21               MOVS     R1,#+15
   \   0000050A   0320               MOVS     R0,#+3
   \   0000050C   03B4               PUSH     {R0,R1}
   \   0000050E   4323               MOVS     R3,#+67
   \   00000510   0422               MOVS     R2,#+4
   \   00000512   0021               MOVS     R1,#+0
   \   00000514   95A0               ADR      R0,??Tester_MG1_Refresh_30+0x8  ;; 0x51, 0x32, 0x00, 0x00
   \   00000516   ........           BL       Label
   \   0000051A   06B0               ADD      SP,SP,#+24
  10143                           
  10144                           if ((MainStage.StageQ[CurrentNode].Port>>1)&0x1)
   \   0000051C   2888               LDRH     R0,[R5, #+0]
   \   0000051E   8007               LSLS     R0,R0,#+30
   \   00000520   82B0               SUB      SP,SP,#+8
   \   00000522   09D5               BPL      ??Tester_MG1_Refresh_35
  10145                           {
  10146                             CleanCanvasArea(PozX+18,PozY+2,7,7,1); 
   \   00000524   0120               MOVS     R0,#+1
   \   00000526   0090               STR      R0,[SP, #+0]
   \   00000528   0723               MOVS     R3,#+7
   \   0000052A   1A00               MOVS     R2,R3
   \   0000052C   4421               MOVS     R1,#+68
   \   0000052E   1520               MOVS     R0,#+21
   \   00000530   ........           BL       CleanCanvasArea
   \   00000534   02B0               ADD      SP,SP,#+8
   \   00000536   08E0               B        ??Tester_MG1_Refresh_36
  10147                           }else{
  10148                             CleanCanvasArea(PozX+18,PozY+2,7,7,0);
   \                     ??Tester_MG1_Refresh_35:
   \   00000538   0020               MOVS     R0,#+0
   \   0000053A   0090               STR      R0,[SP, #+0]
   \   0000053C   0723               MOVS     R3,#+7
   \   0000053E   1A00               MOVS     R2,R3
   \   00000540   4421               MOVS     R1,#+68
   \   00000542   1520               MOVS     R0,#+21
   \   00000544   ........           BL       CleanCanvasArea
   \   00000548   02B0               ADD      SP,SP,#+8
  10149                           }
  10150                           
  10151                           PozY=66;
  10152                           PozX=33;
  10153                           H_line(PozX,PozY,26,1); 
   \                     ??Tester_MG1_Refresh_36:
   \   0000054A   0123               MOVS     R3,#+1
   \   0000054C   1A22               MOVS     R2,#+26
   \   0000054E   4221               MOVS     R1,#+66
   \   00000550   2120               MOVS     R0,#+33
   \   00000552   ........           BL       H_line
  10154                           H_line(PozX,PozY+10,26,1);
   \   00000556   0123               MOVS     R3,#+1
   \   00000558   1A22               MOVS     R2,#+26
   \   0000055A   4C21               MOVS     R1,#+76
   \   0000055C   2120               MOVS     R0,#+33
   \   0000055E   ........           BL       H_line
  10155                           V_line(PozX,PozY,10,1);
   \   00000562   0123               MOVS     R3,#+1
   \   00000564   0A22               MOVS     R2,#+10
   \   00000566   4221               MOVS     R1,#+66
   \   00000568   2120               MOVS     R0,#+33
   \   0000056A   ........           BL       V_line
  10156                           V_line(PozX+26,PozY,10,1); 
   \   0000056E   0123               MOVS     R3,#+1
   \   00000570   0A22               MOVS     R2,#+10
   \   00000572   4221               MOVS     R1,#+66
   \   00000574   3B20               MOVS     R0,#+59
   \   00000576   ........           BL       V_line
  10157                           Label("In2",0,PozX+1,PozY+1,3,15,1,127,1); 
   \   0000057A   82B0               SUB      SP,SP,#+8
   \   0000057C   0120               MOVS     R0,#+1
   \   0000057E   0090               STR      R0,[SP, #+0]
   \   00000580   7F21               MOVS     R1,#+127
   \   00000582   03B4               PUSH     {R0,R1}
   \   00000584   0F21               MOVS     R1,#+15
   \   00000586   0320               MOVS     R0,#+3
   \   00000588   03B4               PUSH     {R0,R1}
   \   0000058A   4323               MOVS     R3,#+67
   \   0000058C   2222               MOVS     R2,#+34
   \   0000058E   0021               MOVS     R1,#+0
   \   00000590   77A0               ADR      R0,??Tester_MG1_Refresh_30+0xC  ;; "In2"
   \   00000592   ........           BL       Label
   \   00000596   06B0               ADD      SP,SP,#+24
  10158                           
  10159                           if ((MainStage.StageI[CurrentNode].Port>>1)&0x1)
   \   00000598   3888               LDRH     R0,[R7, #+0]
   \   0000059A   8007               LSLS     R0,R0,#+30
   \   0000059C   82B0               SUB      SP,SP,#+8
   \   0000059E   09D5               BPL      ??Tester_MG1_Refresh_37
  10160                           {
  10161                             CleanCanvasArea(PozX+18,PozY+2,7,7,1); 
   \   000005A0   0120               MOVS     R0,#+1
   \   000005A2   0090               STR      R0,[SP, #+0]
   \   000005A4   0723               MOVS     R3,#+7
   \   000005A6   1A00               MOVS     R2,R3
   \   000005A8   4421               MOVS     R1,#+68
   \   000005AA   3320               MOVS     R0,#+51
   \   000005AC   ........           BL       CleanCanvasArea
   \   000005B0   02B0               ADD      SP,SP,#+8
   \   000005B2   08E0               B        ??Tester_MG1_Refresh_38
  10162                           }else{
  10163                             CleanCanvasArea(PozX+18,PozY+2,7,7,0);
   \                     ??Tester_MG1_Refresh_37:
   \   000005B4   0020               MOVS     R0,#+0
   \   000005B6   0090               STR      R0,[SP, #+0]
   \   000005B8   0723               MOVS     R3,#+7
   \   000005BA   1A00               MOVS     R2,R3
   \   000005BC   4421               MOVS     R1,#+68
   \   000005BE   3320               MOVS     R0,#+51
   \   000005C0   ........           BL       CleanCanvasArea
   \   000005C4   02B0               ADD      SP,SP,#+8
  10164                           }
  10165          
  10166                    
  10167                     
  10168                           
  10169                           
  10170                                                     
  10171                          if (TestStep==0xFFFF)   //je¿eli test niezdany
   \                     ??Tester_MG1_Refresh_38:
   \   000005C6   308F               LDRH     R0,[R6, #+56]
   \   000005C8   A042               CMP      R0,R4
   \   000005CA   21D1               BNE      ??Tester_MG1_Refresh_39
  10172                          {
  10173                            Label("Blad testu",2,2,31,10,5,1,127,0); 
   \   000005CC   82B0               SUB      SP,SP,#+8
   \   000005CE   0020               MOVS     R0,#+0
   \   000005D0   0090               STR      R0,[SP, #+0]
   \   000005D2   7F21               MOVS     R1,#+127
   \   000005D4   0120               MOVS     R0,#+1
   \   000005D6   03B4               PUSH     {R0,R1}
   \   000005D8   0521               MOVS     R1,#+5
   \   000005DA   0A20               MOVS     R0,#+10
   \   000005DC   03B4               PUSH     {R0,R1}
   \   000005DE   1F23               MOVS     R3,#+31
   \   000005E0   0222               MOVS     R2,#+2
   \   000005E2   1100               MOVS     R1,R2
   \   000005E4   6348               LDR      R0,??Tester_MG1_Refresh_30+0x10  ;; `?<Constant "Nowy test">` + 24
   \   000005E6   ........           BL       Label
   \   000005EA   06B0               ADD      SP,SP,#+24
   \   000005EC   B6E0               B        ??Tester_MG1_Refresh_1
   \   000005EE   C046               Nop      
   \                     ??Tester_MG1_Refresh_23:
   \   000005F0   ........           DC32     MainStage
   \   000005F4   ........           DC32     g_counter
   \   000005F8   10270000           DC32     0x2710
   \   000005FC   A2030000           DC32     0x3a2
   \   00000600   ........           DC32     MainStage + 1772
   \   00000604   88130000           DC32     0x1388
   \   00000608   FFFF0000           DC32     0xffff
   \   0000060C   25640000           DC8      0x25, 0x64, 0x00, 0x00
  10174                            
  10175                          }else if ((TestStep==TestAmount)|| (TestStep==TestAmount+1)) {
   \                     ??Tester_MG1_Refresh_39:
   \   00000610   718F               LDRH     R1,[R6, #+58]
   \   00000612   8842               CMP      R0,R1
   \   00000614   03D0               BEQ      ??Tester_MG1_Refresh_40
   \   00000616   491C               ADDS     R1,R1,#+1
   \   00000618   8842               CMP      R0,R1
   \   0000061A   00D0               BEQ      .+4
   \   0000061C   9EE0               B        ??Tester_MG1_Refresh_1
  10176                            TestStep++;
   \                     ??Tester_MG1_Refresh_40:
   \   0000061E   401C               ADDS     R0,R0,#+1
   \   00000620   3087               STRH     R0,[R6, #+56]
  10177                            Label("Test OK",2,2,52,10,60,1,127,1); 
   \   00000622   554C               LDR      R4,??Tester_MG1_Refresh_30+0x14  ;; `?<Constant "Nowy test">`
   \   00000624   82B0               SUB      SP,SP,#+8
   \   00000626   0120               MOVS     R0,#+1
   \   00000628   0090               STR      R0,[SP, #+0]
   \   0000062A   7F21               MOVS     R1,#+127
   \   0000062C   03B4               PUSH     {R0,R1}
   \   0000062E   3C21               MOVS     R1,#+60
   \   00000630   0A20               MOVS     R0,#+10
   \   00000632   03B4               PUSH     {R0,R1}
   \   00000634   3423               MOVS     R3,#+52
   \   00000636   0222               MOVS     R2,#+2
   \   00000638   1100               MOVS     R1,R2
   \   0000063A   2000               MOVS     R0,R4
   \   0000063C   2430               ADDS     R0,R0,#+36
   \   0000063E   ........           BL       Label
   \   00000642   06B0               ADD      SP,SP,#+24
  10178                            Label("Czas t:",0,2,42,10,57,1,127,0); 
   \   00000644   82B0               SUB      SP,SP,#+8
   \   00000646   0020               MOVS     R0,#+0
   \   00000648   0090               STR      R0,[SP, #+0]
   \   0000064A   7F21               MOVS     R1,#+127
   \   0000064C   0120               MOVS     R0,#+1
   \   0000064E   03B4               PUSH     {R0,R1}
   \   00000650   3921               MOVS     R1,#+57
   \   00000652   0A20               MOVS     R0,#+10
   \   00000654   03B4               PUSH     {R0,R1}
   \   00000656   2A23               MOVS     R3,#+42
   \   00000658   0222               MOVS     R2,#+2
   \   0000065A   0021               MOVS     R1,#+0
   \   0000065C   2000               MOVS     R0,R4
   \   0000065E   2C30               ADDS     R0,R0,#+44
   \   00000660   ........           BL       Label
   \   00000664   06B0               ADD      SP,SP,#+24
   \   00000666   82B0               SUB      SP,SP,#+8
   \   00000668   2000               MOVS     R0,R4
   \   0000066A   3430               ADDS     R0,R0,#+52
   \   0000066C   0090               STR      R0,[SP, #+0]
   \   0000066E   4348               LDR      R0,??Tester_MG1_Refresh_30+0x18  ;; g_counter
   \   00000670   03C8               LDM      R0!,{R0,R1}
   \   00000672   039A               LDR      R2,[SP, #+12]
   \   00000674   1268               LDR      R2,[R2, #+0]
   \   00000676   0023               MOVS     R3,#+0
   \   00000678   801A               SUBS     R0,R0,R2
   \   0000067A   9941               SBCS     R1,R1,R3
   \   0000067C   FA22               MOVS     R2,#+250
   \   0000067E   9200               LSLS     R2,R2,#+2        ;; #+1000
   \   00000680   ........           BL       __aeabi_uldivmod
   \   00000684   0200               MOVS     R2,R0
   \   00000686   0B00               MOVS     R3,R1
   \   00000688   3DA1               ADR      R1,??Tester_MG1_Refresh_30+0x1C  ;; 0x25, 0x64, 0x00, 0x00
   \   0000068A   04A8               ADD      R0,SP,#+16
  10179                            char Li=sprintf(txt, "%d",  ((g_counter-TestStartTime)/1000), "%d s");
                                           ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000068C   ........           BL       sprintf
   \   00000690   02B0               ADD      SP,SP,#+8
   \   00000692   0200               MOVS     R2,R0
   \   00000694   1206               LSLS     R2,R2,#+24
   \   00000696   120E               LSRS     R2,R2,#+24
  10180                            txt[Li++]='s';
   \   00000698   7325               MOVS     R5,#+115
   \   0000069A   02AF               ADD      R7,SP,#+8
   \   0000069C   1000               MOVS     R0,R2
   \   0000069E   3D54               STRB     R5,[R7, R0]
  10181                            Label(txt,0,32,42,Li,25,1,127,0); 
   \   000006A0   82B0               SUB      SP,SP,#+8
   \   000006A2   0020               MOVS     R0,#+0
   \   000006A4   0090               STR      R0,[SP, #+0]
   \   000006A6   7F21               MOVS     R1,#+127
   \   000006A8   0120               MOVS     R0,#+1
   \   000006AA   03B4               PUSH     {R0,R1}
   \   000006AC   1921               MOVS     R1,#+25
   \   000006AE   521C               ADDS     R2,R2,#+1
   \   000006B0   1000               MOVS     R0,R2
   \   000006B2   0006               LSLS     R0,R0,#+24
   \   000006B4   000E               LSRS     R0,R0,#+24
   \   000006B6   03B4               PUSH     {R0,R1}
   \   000006B8   2A23               MOVS     R3,#+42
   \   000006BA   2022               MOVS     R2,#+32
   \   000006BC   0021               MOVS     R1,#+0
   \   000006BE   08A8               ADD      R0,SP,#+32
   \   000006C0   ........           BL       Label
   \   000006C4   06B0               ADD      SP,SP,#+24
  10182                            
  10183                            Label("Czas p:",0,2,33,10,57,1,127,0); 
   \   000006C6   82B0               SUB      SP,SP,#+8
   \   000006C8   0020               MOVS     R0,#+0
   \   000006CA   0090               STR      R0,[SP, #+0]
   \   000006CC   7F21               MOVS     R1,#+127
   \   000006CE   0120               MOVS     R0,#+1
   \   000006D0   03B4               PUSH     {R0,R1}
   \   000006D2   3921               MOVS     R1,#+57
   \   000006D4   0A20               MOVS     R0,#+10
   \   000006D6   03B4               PUSH     {R0,R1}
   \   000006D8   2123               MOVS     R3,#+33
   \   000006DA   0222               MOVS     R2,#+2
   \   000006DC   0021               MOVS     R1,#+0
   \   000006DE   2000               MOVS     R0,R4
   \   000006E0   3C30               ADDS     R0,R0,#+60
   \   000006E2   ........           BL       Label
   \   000006E6   06B0               ADD      SP,SP,#+24
  10184                            Li=sprintf(txt, "%d",  MaxTime, "%d s");
   \   000006E8   2300               MOVS     R3,R4
   \   000006EA   3433               ADDS     R3,R3,#+52
   \   000006EC   F28E               LDRH     R2,[R6, #+54]
   \   000006EE   24A1               ADR      R1,??Tester_MG1_Refresh_30+0x1C  ;; 0x25, 0x64, 0x00, 0x00
   \   000006F0   02A8               ADD      R0,SP,#+8
   \   000006F2   ........           BL       sprintf
   \   000006F6   0200               MOVS     R2,R0
   \   000006F8   1206               LSLS     R2,R2,#+24
   \   000006FA   120E               LSRS     R2,R2,#+24
  10185                            txt[Li++]='m';
   \   000006FC   1000               MOVS     R0,R2
   \   000006FE   6D21               MOVS     R1,#+109
   \   00000700   3954               STRB     R1,[R7, R0]
   \   00000702   521C               ADDS     R2,R2,#+1
   \   00000704   1206               LSLS     R2,R2,#+24
   \   00000706   120E               LSRS     R2,R2,#+24
  10186                            txt[Li++]='s';
   \   00000708   1000               MOVS     R0,R2
   \   0000070A   3D54               STRB     R5,[R7, R0]
  10187                            Label(txt,0,32,33,Li,25,1,127,0); 
   \   0000070C   82B0               SUB      SP,SP,#+8
   \   0000070E   0020               MOVS     R0,#+0
   \   00000710   0090               STR      R0,[SP, #+0]
   \   00000712   7F21               MOVS     R1,#+127
   \   00000714   0120               MOVS     R0,#+1
   \   00000716   03B4               PUSH     {R0,R1}
   \   00000718   1921               MOVS     R1,#+25
   \   0000071A   521C               ADDS     R2,R2,#+1
   \   0000071C   1000               MOVS     R0,R2
   \   0000071E   0006               LSLS     R0,R0,#+24
   \   00000720   000E               LSRS     R0,R0,#+24
   \   00000722   03B4               PUSH     {R0,R1}
   \   00000724   2123               MOVS     R3,#+33
   \   00000726   2022               MOVS     R2,#+32
   \   00000728   0021               MOVS     R1,#+0
   \   0000072A   08A8               ADD      R0,SP,#+32
   \   0000072C   ........           BL       Label
   \   00000730   06B0               ADD      SP,SP,#+24
  10188                            
  10189                            
  10190                            Button("Nowy test",3,18,58,13);
   \   00000732   82B0               SUB      SP,SP,#+8
   \   00000734   0D20               MOVS     R0,#+13
   \   00000736   0090               STR      R0,[SP, #+0]
   \   00000738   3A23               MOVS     R3,#+58
   \   0000073A   1222               MOVS     R2,#+18
   \   0000073C   0321               MOVS     R1,#+3
   \   0000073E   2000               MOVS     R0,R4
   \   00000740   ........           BL       Button
   \   00000744   02B0               ADD      SP,SP,#+8
  10191                            Button("Dlugi test",3,4,58,13); 
   \   00000746   82B0               SUB      SP,SP,#+8
   \   00000748   0D20               MOVS     R0,#+13
   \   0000074A   0090               STR      R0,[SP, #+0]
   \   0000074C   3A23               MOVS     R3,#+58
   \   0000074E   0422               MOVS     R2,#+4
   \   00000750   0321               MOVS     R1,#+3
   \   00000752   0C34               ADDS     R4,R4,#+12
   \   00000754   2000               MOVS     R0,R4
   \   00000756   ........           BL       Button
   \   0000075A   02B0               ADD      SP,SP,#+8
   \                     ??Tester_MG1_Refresh_1:
   \   0000075C   05B0               ADD      SP,SP,#+20
   \   0000075E   F0BC               POP      {R4-R7}
   \   00000760   01BC               POP      {R0}
   \   00000762   0047               BX       R0               ;; return
   \                     ??Tester_MG1_Refresh_30:
   \   00000764   51310000           DC8      0x51, 0x31, 0x00, 0x00
   \   00000768   496E3100           DC8      "In1"
   \   0000076C   51320000           DC8      0x51, 0x32, 0x00, 0x00
   \   00000770   496E3200           DC8      "In2"
   \   00000774   ........           DC32     `?<Constant "Nowy test">` + 24
   \   00000778   ........           DC32     `?<Constant "Nowy test">`
   \   0000077C   ........           DC32     g_counter
   \   00000780   25640000           DC8      0x25, 0x64, 0x00, 0x00
  10192                              
  10193                          }
  10194                 
  10195          
  10196                     
  10197                }//_______________________________________________________________________ 
  10198                                                                                   
  10199          
  10200          
  10201                
  10202                
  10203                
  10204                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10205                void NodeInfo_Paint(char CurrentNode)
  10206                {  
   \                     NodeInfo_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   \   00000002   0400               MOVS     R4,R0
  10207                      char txt[8];
  10208                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6946               MOV      R1,SP
   \   00000006   4E20               MOVS     R0,#+78
   \   00000008   0870               STRB     R0,[R1, #+0]
   \   0000000A   6F20               MOVS     R0,#+111
   \   0000000C   4870               STRB     R0,[R1, #+1]
   \   0000000E   6420               MOVS     R0,#+100
   \   00000010   8870               STRB     R0,[R1, #+2]
   \   00000012   6520               MOVS     R0,#+101
   \   00000014   C870               STRB     R0,[R1, #+3]
   \   00000016   2020               MOVS     R0,#+32
   \   00000018   0871               STRB     R0,[R1, #+4]
  10209                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   0000001A   0222               MOVS     R2,#+2
   \   0000001C   491D               ADDS     R1,R1,#+5
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       CharToStr
  10210                  
  10211                     List_Paint(txt,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   0800               MOVS     R0,R1
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0BA0               ADR      R0,??NodeInfo_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0321               MOVS     R1,#+3
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0300               MOVS     R3,R0
   \   0000003A   6C22               MOVS     R2,#+108
   \   0000003C   0121               MOVS     R1,#+1
   \   0000003E   0AA8               ADD      R0,SP,#+40
   \   00000040   ........           BL       List_Paint
   \   00000044   0AB0               ADD      SP,SP,#+40
  10212          
  10213                     RefreshNeuronsList(&gProg); 
   \   00000046   0648               LDR      R0,??NodeInfo_Paint_0+0x4  ;; gProg
   \   00000048   ........           BL       RefreshNeuronsList
  10214          
  10215                     AddRfTask(SI, CurrentNode, 0xA);                //Dodaj rozkaz do tablicy zadañ RF odczytu informacji o module
   \   0000004C   0A22               MOVS     R2,#+10
   \   0000004E   2100               MOVS     R1,R4
   \   00000050   0120               MOVS     R0,#+1
   \   00000052   ........           BL       AddRfTask
  10216                }//_______________________________________________________________________ 
   \   00000056   1CBC               POP      {R2-R4}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??NodeInfo_Paint_0:
   \   0000005C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000060   ........           DC32     gProg
  10217          
  10218          
  10219          
  10220                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10221                void NodeInfo_Event(char CurrentNode)
  10222                {
   \                     NodeInfo_Event:
   \   00000000   10B5               PUSH     {R4,LR}
  10223                  int ans;
  10224                  char NP;
                              ^
Warning[Pe177]: variable "NP" was declared but never referenced
  10225                 
  10226                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0E48               LDR      R0,??NodeInfo_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   0E48               LDR      R0,??NodeInfo_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   0E48               LDR      R0,??NodeInfo_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   0E48               LDR      R0,??NodeInfo_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
  10227            
  10228                  
  10229                 
  10230                  
  10231                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   0BD0               BEQ      ??NodeInfo_Event_1
  10232                    {
  10233                    if (ans<0) {
   \   0000002A   08D5               BPL      ??NodeInfo_Event_2
  10234                      MenuLevel=(MenuLevel/100);
   \   0000002C   0A4C               LDR      R4,??NodeInfo_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   206D               LDR      R0,[R4, #+80]
   \   00000030   6421               MOVS     R1,#+100
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   2065               STR      R0,[R4, #+80]
  10235                     //NeuronNrChange=0;
  10236                     //NeuronIdChange=0;
  10237                     //FirstNodeStanIO_Paint=0;
  10238                     SetTask(&gProg);   //usuniêcie nie potrzebnie dodanych zadañ
   \   00000038   0848               LDR      R0,??NodeInfo_Event_0+0x14  ;; gProg
   \   0000003A   ........           BL       SetTask
  10239                    }
  10240                    MenuPaint();
   \                     ??NodeInfo_Event_2:
   \   0000003E   ........           BL       MenuPaint
  10241                    } 
  10242                  
  10243                  
  10244                  
  10245                  
  10246                }//_______________________________________________________________________
   \                     ??NodeInfo_Event_1:
   \   00000042   10BC               POP      {R4}
   \   00000044   01BC               POP      {R0}
   \   00000046   0047               BX       R0               ;; return
   \                     ??NodeInfo_Event_0:
   \   00000048   ........           DC32     Y_down
   \   0000004C   ........           DC32     X_down
   \   00000050   ........           DC32     Y_up
   \   00000054   ........           DC32     X_up
   \   00000058   ........           DC32     TextToChangeLength
   \   0000005C   ........           DC32     gProg
  10247          
  10248          
  10249          
  10250          
  10251          
  10252                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10253                void NodeInfo_Refresh(char CurrentNode)
  10254                {  
   \                     NodeInfo_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
  10255                     char Txt[6];
  10256                  
  10257                     static char Dziel10=0;
  10258                     
  10259                     if (Dziel10<10) {Dziel10++;}else
   \   00000002   4149               LDR      R1,??NodeInfo_Refresh_0  ;; ??Dziel10
   \   00000004   0A78               LDRB     R2,[R1, #+0]
   \   00000006   0A2A               CMP      R2,#+10
   \   00000008   02D2               BCS      ??NodeInfo_Refresh_1
   \   0000000A   521C               ADDS     R2,R2,#+1
   \   0000000C   0A70               STRB     R2,[R1, #+0]
   \   0000000E   78E0               B        ??NodeInfo_Refresh_2
  10260                     {
  10261                       Dziel10=0;
   \                     ??NodeInfo_Refresh_1:
   \   00000010   0022               MOVS     R2,#+0
   \   00000012   0A70               STRB     R2,[R1, #+0]
  10262          
  10263                       unsigned short InfoVal=MainStage.StageI[CurrentNode].Value[0x0A];
   \   00000014   B421               MOVS     R1,#+180
   \   00000016   1622               MOVS     R2,#+22
   \   00000018   5043               MULS     R0,R2,R0
   \   0000001A   3C4A               LDR      R2,??NodeInfo_Refresh_0+0x4  ;; MainStage
   \   0000001C   1018               ADDS     R0,R2,R0
   \   0000001E   445E               LDRSH    R4,[R0, R1]
   \   00000020   2404               LSLS     R4,R4,#+16
   \   00000022   240C               LSRS     R4,R4,#+16
  10264                       
  10265                       char NodeType= (InfoVal/10000);  
   \   00000024   2600               MOVS     R6,R4
   \   00000026   3000               MOVS     R0,R6
   \   00000028   3949               LDR      R1,??NodeInfo_Refresh_0+0x8  ;; 0x2710
   \   0000002A   ........           BL       __aeabi_idivmod
   \   0000002E   0500               MOVS     R5,R0
   \   00000030   2D06               LSLS     R5,R5,#+24
   \   00000032   2D0E               LSRS     R5,R5,#+24
  10266                       char Version=  (InfoVal-(NodeType*10000))/1000;
   \   00000034   2F00               MOVS     R7,R5
   \   00000036   3648               LDR      R0,??NodeInfo_Refresh_0+0x8  ;; 0x2710
   \   00000038   7843               MULS     R0,R7,R0
   \   0000003A   301A               SUBS     R0,R6,R0
   \   0000003C   FA21               MOVS     R1,#+250
   \   0000003E   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   0600               MOVS     R6,R0
   \   00000046   3606               LSLS     R6,R6,#+24
   \   00000048   360E               LSRS     R6,R6,#+24
   \   0000004A   4223               MOVS     R3,#+66
   \   0000004C   3A00               MOVS     R2,R7
   \   0000004E   31A1               ADR      R1,??NodeInfo_Refresh_0+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   00000050   6846               MOV      R0,SP
  10267                       short SubVersion= InfoVal - (NodeType*10000) - Version*1000; 
  10268                         
  10269                     sprintf(Txt, "%d",  NodeType, 'B');
                            ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   00000052   ........           BL       sprintf
  10270                      //char IlLiter=sIntToStr(InfoVal, &(Txt[0])); //(char Value, char *Vstring, char ill);
  10271          
  10272                      Label("Type:",0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000056   304F               LDR      R7,??NodeInfo_Refresh_0+0x10  ;; `?<Constant "Type:">`
   \   00000058   82B0               SUB      SP,SP,#+8
   \   0000005A   0120               MOVS     R0,#+1
   \   0000005C   0090               STR      R0,[SP, #+0]
   \   0000005E   7F21               MOVS     R1,#+127
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   3E21               MOVS     R1,#+62
   \   00000064   0F20               MOVS     R0,#+15
   \   00000066   03B4               PUSH     {R0,R1}
   \   00000068   6123               MOVS     R3,#+97
   \   0000006A   0122               MOVS     R2,#+1
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   3800               MOVS     R0,R7
   \   00000070   ........           BL       Label
   \   00000074   06B0               ADD      SP,SP,#+24
  10273                      Label(Txt,0,10,86,5,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   7F21               MOVS     R1,#+127
   \   0000007E   0120               MOVS     R0,#+1
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   2821               MOVS     R1,#+40
   \   00000084   0520               MOVS     R0,#+5
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   5623               MOVS     R3,#+86
   \   0000008A   0A22               MOVS     R2,#+10
   \   0000008C   0021               MOVS     R1,#+0
   \   0000008E   06A8               ADD      R0,SP,#+24
   \   00000090   ........           BL       Label
   \   00000094   06B0               ADD      SP,SP,#+24
  10274          
  10275                      CharToStr(Version, Txt, 1);  
   \   00000096   0122               MOVS     R2,#+1
   \   00000098   6946               MOV      R1,SP
   \   0000009A   3000               MOVS     R0,R6
   \   0000009C   ........           BL       CharToStr
  10276                      Txt[1]='.';
   \   000000A0   6846               MOV      R0,SP
   \   000000A2   2E21               MOVS     R1,#+46
   \   000000A4   4170               STRB     R1,[R0, #+1]
  10277                      sprintf(&Txt[2], "%d",  SubVersion, 'B');
   \   000000A6   4223               MOVS     R3,#+66
   \   000000A8   1949               LDR      R1,??NodeInfo_Refresh_0+0x8  ;; 0x2710
   \   000000AA   4D43               MULS     R5,R1,R5
   \   000000AC   611B               SUBS     R1,R4,R5
   \   000000AE   FA22               MOVS     R2,#+250
   \   000000B0   9200               LSLS     R2,R2,#+2        ;; #+1000
   \   000000B2   5643               MULS     R6,R2,R6
   \   000000B4   8A1B               SUBS     R2,R1,R6
   \   000000B6   1204               LSLS     R2,R2,#+16
   \   000000B8   1214               ASRS     R2,R2,#+16
   \   000000BA   16A1               ADR      R1,??NodeInfo_Refresh_0+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   000000BC   801C               ADDS     R0,R0,#+2
   \   000000BE   ........           BL       sprintf
  10278                      Label("Soft version:",0,1,75,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0120               MOVS     R0,#+1
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   7F21               MOVS     R1,#+127
   \   000000CA   03B4               PUSH     {R0,R1}
   \   000000CC   3E21               MOVS     R1,#+62
   \   000000CE   0F20               MOVS     R0,#+15
   \   000000D0   03B4               PUSH     {R0,R1}
   \   000000D2   4B23               MOVS     R3,#+75
   \   000000D4   0122               MOVS     R2,#+1
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   0837               ADDS     R7,R7,#+8
   \   000000DA   3800               MOVS     R0,R7
   \   000000DC   ........           BL       Label
   \   000000E0   06B0               ADD      SP,SP,#+24
  10279                      Label(Txt,0,10,64,15,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)    
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   0020               MOVS     R0,#+0
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   7F21               MOVS     R1,#+127
   \   000000EA   0120               MOVS     R0,#+1
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   2821               MOVS     R1,#+40
   \   000000F0   0F20               MOVS     R0,#+15
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   4023               MOVS     R3,#+64
   \   000000F6   0A22               MOVS     R2,#+10
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   06A8               ADD      R0,SP,#+24
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
  10280                         
  10281                         
  10282                         
  10283                     }
  10284                }//_______________________________________________________________________ 
   \                     ??NodeInfo_Refresh_2:
   \   00000102   FEBC               POP      {R1-R7}
   \   00000104   01BC               POP      {R0}
   \   00000106   0047               BX       R0               ;; return
   \                     ??NodeInfo_Refresh_0:
   \   00000108   ........           DC32     ??Dziel10
   \   0000010C   ........           DC32     MainStage
   \   00000110   10270000           DC32     0x2710
   \   00000114   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000118   ........           DC32     `?<Constant "Type:">`

   \                                 In section .bss, align 1
   \                     ??Dziel10:
   \   00000000                      DS8 1
  10285                                                                             
  10286               
  10287                
  10288                
  10289                
  10290                
  10291                
  10292                
  10293                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10294                void Net_Paint(void)
  10295                {
   \                     Net_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
  10296                   if (NET.WiFi.On)
   \   00000002   2848               LDR      R0,??Net_Paint_0  ;; NET + 80
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   23D0               BEQ      ??Net_Paint_1
  10297                   {
  10298                      List_Paint(Speech[g_leng].Siec,6,15,0,0,3, Speech[g_leng].UstawWiFi,"Host" , Speech[g_leng].Okresowosc, Speech[g_leng].Status, "Server reset" ,Speech[g_leng].Wyl_WiFi, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000000A   274C               LDR      R4,??Net_Paint_0+0x4  ;; 0xa7d
   \   0000000C   274D               LDR      R5,??Net_Paint_0+0x8  ;; g_leng
   \   0000000E   284E               LDR      R6,??Net_Paint_0+0xC  ;; Speech
   \   00000010   2868               LDR      R0,[R5, #+0]
   \   00000012   6043               MULS     R0,R4,R0
   \   00000014   3418               ADDS     R4,R6,R0
   \   00000016   274A               LDR      R2,??Net_Paint_0+0x10  ;; `?<Constant "Host">`
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0800               MOVS     R0,R1
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   2648               LDR      R0,??Net_Paint_0+0x14  ;; 0x99c
   \   00000020   2118               ADDS     R1,R4,R0
   \   00000022   1000               MOVS     R0,R2
   \   00000024   0830               ADDS     R0,R0,#+8
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   2448               LDR      R0,??Net_Paint_0+0x18  ;; 0xa14
   \   0000002A   2118               ADDS     R1,R4,R0
   \   0000002C   9638               SUBS     R0,R0,#+150
   \   0000002E   2018               ADDS     R0,R4,R0
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   1100               MOVS     R1,R2
   \   00000034   2248               LDR      R0,??Net_Paint_0+0x1C  ;; 0x8d9
   \   00000036   2018               ADDS     R0,R4,R0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0321               MOVS     R1,#+3
   \   0000003C   0020               MOVS     R0,#+0
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   0300               MOVS     R3,R0
   \   00000042   0F22               MOVS     R2,#+15
   \   00000044   0621               MOVS     R1,#+6
   \   00000046   1F48               LDR      R0,??Net_Paint_0+0x20  ;; 0x8ca
   \   00000048   2018               ADDS     R0,R4,R0
   \   0000004A   ........           BL       List_Paint
   \   0000004E   0AB0               ADD      SP,SP,#+40
   \   00000050   24E0               B        ??Net_Paint_2
  10299                   }else{
  10300                      List_Paint(Speech[g_leng].Siec,1,60,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \                     ??Net_Paint_1:
   \   00000052   154C               LDR      R4,??Net_Paint_0+0x4  ;; 0xa7d
   \   00000054   154D               LDR      R5,??Net_Paint_0+0x8  ;; g_leng
   \   00000056   164E               LDR      R6,??Net_Paint_0+0xC  ;; Speech
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   19A0               ADR      R0,??Net_Paint_0+0x24  ;; 0x20, 0x00, 0x00, 0x00
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   0321               MOVS     R1,#+3
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   0300               MOVS     R3,R0
   \   0000006C   3C22               MOVS     R2,#+60
   \   0000006E   0121               MOVS     R1,#+1
   \   00000070   1448               LDR      R0,??Net_Paint_0+0x20  ;; 0x8ca
   \   00000072   2F68               LDR      R7,[R5, #+0]
   \   00000074   6743               MULS     R7,R4,R7
   \   00000076   F719               ADDS     R7,R6,R7
   \   00000078   3818               ADDS     R0,R7,R0
   \   0000007A   ........           BL       List_Paint
   \   0000007E   0AB0               ADD      SP,SP,#+40
  10301                      Button(Speech[g_leng].Wl_WiFi,7,75,50,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0D20               MOVS     R0,#+13
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   3223               MOVS     R3,#+50
   \   00000088   4B22               MOVS     R2,#+75
   \   0000008A   0721               MOVS     R1,#+7
   \   0000008C   0F48               LDR      R0,??Net_Paint_0+0x28  ;; 0x98d
   \   0000008E   2D68               LDR      R5,[R5, #+0]
   \   00000090   6543               MULS     R5,R4,R5
   \   00000092   7419               ADDS     R4,R6,R5
   \   00000094   2018               ADDS     R0,R4,R0
   \   00000096   ........           BL       Button
   \   0000009A   02B0               ADD      SP,SP,#+8
  10302                   }
  10303                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??Net_Paint_2:
   \   0000009C   F8BC               POP      {R3-R7}
   \   0000009E   01BC               POP      {R0}
   \   000000A0   0047               BX       R0               ;; return
   \   000000A2   C046               Nop      
   \                     ??Net_Paint_0:
   \   000000A4   ........           DC32     NET + 80
   \   000000A8   7D0A0000           DC32     0xa7d
   \   000000AC   ........           DC32     g_leng
   \   000000B0   ........           DC32     Speech
   \   000000B4   ........           DC32     `?<Constant "Host">`
   \   000000B8   9C090000           DC32     0x99c
   \   000000BC   140A0000           DC32     0xa14
   \   000000C0   D9080000           DC32     0x8d9
   \   000000C4   CA080000           DC32     0x8ca
   \   000000C8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000CC   8D090000           DC32     0x98d
  10304          
  10305          
  10306                  
  10307                 
  10308                 
  10309                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10310                void Net_Event(void)
  10311                {
   \                     Net_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
  10312                  if (NET.WiFi.On)
   \   00000002   4A48               LDR      R0,??Net_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   455E               LDRSH    R5,[R0, R1]
   \   00000008   4948               LDR      R0,??Net_Event_0+0x4  ;; Y_up
   \   0000000A   465E               LDRSH    R6,[R0, R1]
   \   0000000C   4948               LDR      R0,??Net_Event_0+0x8  ;; X_down
   \   0000000E   425E               LDRSH    R2,[R0, R1]
   \   00000010   4948               LDR      R0,??Net_Event_0+0xC  ;; Y_down
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   494C               LDR      R4,??Net_Event_0+0x10  ;; NET
   \   00000016   5020               MOVS     R0,#+80
   \   00000018   205C               LDRB     R0,[R4, R0]
   \   0000001A   0028               CMP      R0,#+0
   \   0000001C   3ED0               BEQ      ??Net_Event_1
  10313                   {
  10314                        int ans=List_Event(X_up, Y_up, X_down, Y_down, 6 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000001E   0800               MOVS     R0,R1
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0F21               MOVS     R1,#+15
   \   00000024   0620               MOVS     R0,#+6
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3100               MOVS     R1,R6
   \   0000002A   2800               MOVS     R0,R5
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   \   00000032   0500               MOVS     R5,R0
  10315                  
  10316                        if (ans)
   \   00000034   77D0               BEQ      ??Net_Event_2
  10317                          {
  10318                          if ((ans>0) && (ans<=4)) MenuLevel=(MenuLevel*10+ans);
   \   00000036   012D               CMP      R5,#+1
   \   00000038   07DB               BLT      ??Net_Event_3
   \   0000003A   052D               CMP      R5,#+5
   \   0000003C   05DA               BGE      ??Net_Event_3
   \   0000003E   404E               LDR      R6,??Net_Event_0+0x14  ;; TextToChangeLength
   \   00000040   306D               LDR      R0,[R6, #+80]
   \   00000042   0A21               MOVS     R1,#+10
   \   00000044   4843               MULS     R0,R1,R0
   \   00000046   4019               ADDS     R0,R0,R5
   \   00000048   3065               STR      R0,[R6, #+80]
  10319                          if (ans==5)   //reset - pobranie konfiguracji z hosta
   \                     ??Net_Event_3:
   \   0000004A   052D               CMP      R5,#+5
   \   0000004C   04D1               BNE      ??Net_Event_4
  10320                          {
  10321                            NET.Status.NextHttpOrder=HTTP_GET_Config;
   \   0000004E   1320               MOVS     R0,#+19
   \   00000050   E070               STRB     R0,[R4, #+3]
  10322                            NET.HTTP.LastForseOrderNr=0;
   \   00000052   F420               MOVS     R0,#+244
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   2152               STRH     R1,[R4, R0]
  10323                          }
  10324                          if (ans==6)   //wy³¹cz WiFi
   \                     ??Net_Event_4:
   \   00000058   062D               CMP      R5,#+6
   \   0000005A   12D1               BNE      ??Net_Event_5
  10325                          {
  10326                              NET.WiFi.On=0; 
   \   0000005C   5020               MOVS     R0,#+80
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   2154               STRB     R1,[R4, R0]
  10327                             //zapis do flash
  10328                              unsigned int Save = __get_interrupt_state();  
   \   00000062   ........           BL       __iar_get_interrupt_state
   \   00000066   0600               MOVS     R6,R0
  10329                              __disable_interrupt();
   \   00000068   ........           BL       __iar_disable_interrupt
  10330                              
  10331                                //at91flashWrite((unsigned int)(&(AT91C_IFLASH_MEM->Config.WiFi.On)), 0,  (char*) (&(NET.WiFi.On)), 1);
  10332                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.On)), (char*) (&(NET.WiFi.On)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000006C   0122               MOVS     R2,#+1
   \   0000006E   5034               ADDS     R4,R4,#+80
   \   00000070   2100               MOVS     R1,R4
   \   00000072   3448               LDR      R0,??Net_Event_0+0x18  ;; 0x13d8b8
   \   00000074   ........           BL       FlashWrite
  10333                              __set_interrupt_state(Save);
   \   00000078   3000               MOVS     R0,R6
   \   0000007A   ........           BL       __iar_set_interrupt_state
  10334                              __enable_interrupt();
   \   0000007E   ........           BL       __iar_enable_interrupt
  10335                              //koniec zapisu do flash
  10336                            
  10337                          }
  10338                          if (ans<0) {
   \                     ??Net_Event_5:
   \   00000082   002D               CMP      R5,#+0
   \   00000084   07D5               BPL      ??Net_Event_6
  10339                            MenuLevel=(MenuLevel/10);
   \   00000086   2E4E               LDR      R6,??Net_Event_0+0x14  ;; TextToChangeLength
   \   00000088   306D               LDR      R0,[R6, #+80]
   \   0000008A   0A21               MOVS     R1,#+10
   \   0000008C   ........           BL       __aeabi_idivmod
   \   00000090   3065               STR      R0,[R6, #+80]
  10340                            CurModifSheet=0; 
   \   00000092   0020               MOVS     R0,#+0
   \   00000094   7071               STRB     R0,[R6, #+5]
  10341                          }
  10342                          MenuPaint();
   \                     ??Net_Event_6:
   \   00000096   ........           BL       MenuPaint
   \   0000009A   44E0               B        ??Net_Event_2
  10343                          } 
  10344                   }else{
  10345                       int ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
  10346                        if (ans<0) {
   \                     ??Net_Event_1:
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   0F21               MOVS     R1,#+15
   \   000000A0   03B4               PUSH     {R0,R1}
   \   000000A2   3100               MOVS     R1,R6
   \   000000A4   2800               MOVS     R0,R5
   \   000000A6   ........           BL       List_Event
   \   000000AA   04B0               ADD      SP,SP,#+16
   \   000000AC   0028               CMP      R0,#+0
   \   000000AE   07D5               BPL      ??Net_Event_7
  10347                              MenuLevel=(MenuLevel/10);
   \   000000B0   234E               LDR      R6,??Net_Event_0+0x14  ;; TextToChangeLength
   \   000000B2   306D               LDR      R0,[R6, #+80]
   \   000000B4   0A21               MOVS     R1,#+10
   \   000000B6   ........           BL       __aeabi_idivmod
   \   000000BA   3065               STR      R0,[R6, #+80]
  10348                              CurModifSheet=0; 
   \   000000BC   0020               MOVS     R0,#+0
   \   000000BE   7071               STRB     R0,[R6, #+5]
  10349                            }
  10350                       
  10351                     
  10352                       if (Button(Speech[g_leng].Wl_WiFi,7,75,50,13)==1)
   \                     ??Net_Event_7:
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   0D20               MOVS     R0,#+13
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   3223               MOVS     R3,#+50
   \   000000C8   4B22               MOVS     R2,#+75
   \   000000CA   0721               MOVS     R1,#+7
   \   000000CC   1E48               LDR      R0,??Net_Event_0+0x1C  ;; 0x98d
   \   000000CE   1F4D               LDR      R5,??Net_Event_0+0x20  ;; g_leng
   \   000000D0   2D68               LDR      R5,[R5, #+0]
   \   000000D2   1F4E               LDR      R6,??Net_Event_0+0x24  ;; 0xa7d
   \   000000D4   7543               MULS     R5,R6,R5
   \   000000D6   1F4E               LDR      R6,??Net_Event_0+0x28  ;; Speech
   \   000000D8   7519               ADDS     R5,R6,R5
   \   000000DA   2818               ADDS     R0,R5,R0
   \   000000DC   ........           BL       Button
   \   000000E0   02B0               ADD      SP,SP,#+8
   \   000000E2   0128               CMP      R0,#+1
   \   000000E4   1FD1               BNE      ??Net_Event_2
  10353                       {
  10354                             NET.Status.FreezTime=0;
  10355                             NET.Status.HostLink=DISCONNECTED;
   \   000000E6   0020               MOVS     R0,#+0
   \   000000E8   0100               MOVS     R1,R0
  10356                             NET.Status.AccesPointAssociate=DISCONNECTED;
   \   000000EA   2080               STRH     R0,[R4, #+0]
  10357                             NET.Status.Timeout=0;
   \   000000EC   2200               MOVS     R2,R4
   \   000000EE   3832               ADDS     R2,R2,#+56
   \   000000F0   03C2               STM      R2!,{R0,R1}
  10358                             NET.Status.HttpNextQueryTime=0;
   \   000000F2   2200               MOVS     R2,R4
   \   000000F4   3032               ADDS     R2,R2,#+48
   \   000000F6   03C2               STM      R2!,{R0,R1}
  10359                             NET.Status.FreezTime=0;
   \   000000F8   2064               STR      R0,[R4, #+64]
   \   000000FA   6164               STR      R1,[R4, #+68]
  10360                         
  10361                             NET.WiFi.On=1; 
   \   000000FC   5020               MOVS     R0,#+80
   \   000000FE   0121               MOVS     R1,#+1
   \   00000100   2154               STRB     R1,[R4, R0]
  10362                             //zapis do flash
  10363                              unsigned int Save = __get_interrupt_state();  
   \   00000102   ........           BL       __iar_get_interrupt_state
   \   00000106   0500               MOVS     R5,R0
  10364                              __disable_interrupt();
   \   00000108   ........           BL       __iar_disable_interrupt
  10365                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.On)), (char*) (&(NET.WiFi.On)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000010C   0A00               MOVS     R2,R1
   \   0000010E   5034               ADDS     R4,R4,#+80
   \   00000110   2100               MOVS     R1,R4
   \   00000112   0C48               LDR      R0,??Net_Event_0+0x18  ;; 0x13d8b8
   \   00000114   ........           BL       FlashWrite
  10366                              __set_interrupt_state(Save);
   \   00000118   2800               MOVS     R0,R5
   \   0000011A   ........           BL       __iar_set_interrupt_state
  10367                              __enable_interrupt();
   \   0000011E   ........           BL       __iar_enable_interrupt
  10368                              //koniec zapisu do flash
  10369                              
  10370                              
  10371                         MenuPaint();
   \   00000122   ........           BL       MenuPaint
  10372                       }
  10373                    
  10374                   }
  10375                     
  10376                }//_______________________________________________________________________
   \                     ??Net_Event_2:
   \   00000126   70BC               POP      {R4-R6}
   \   00000128   01BC               POP      {R0}
   \   0000012A   0047               BX       R0               ;; return
   \                     ??Net_Event_0:
   \   0000012C   ........           DC32     X_up
   \   00000130   ........           DC32     Y_up
   \   00000134   ........           DC32     X_down
   \   00000138   ........           DC32     Y_down
   \   0000013C   ........           DC32     NET
   \   00000140   ........           DC32     TextToChangeLength
   \   00000144   B8D81300           DC32     0x13d8b8
   \   00000148   8D090000           DC32     0x98d
   \   0000014C   ........           DC32     g_leng
   \   00000150   7D0A0000           DC32     0xa7d
   \   00000154   ........           DC32     Speech
  10377          
  10378          
  10379          
  10380          
  10381          
  10382                //*------------------------      -----------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10383                void UstawSiec_Paint(void)
  10384                {
   \                     UstawSiec_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
  10385                    List_Paint(Speech[g_leng].Siec,2,15,0,0,3,Speech[g_leng].Punkt_dostepu,"TCP/IP" , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0E48               LDR      R0,??UstawSiec_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0E49               LDR      R1,??UstawSiec_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   0E49               LDR      R1,??UstawSiec_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0B49               LDR      R1,??UstawSiec_Paint_0+0xC  ;; `?<Constant "TCP/IP">`
   \   0000001A   0C48               LDR      R0,??UstawSiec_Paint_0+0x10  ;; 0x8e8
   \   0000001C   2018               ADDS     R0,R4,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0321               MOVS     R1,#+3
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0300               MOVS     R3,R0
   \   00000028   0F22               MOVS     R2,#+15
   \   0000002A   0221               MOVS     R1,#+2
   \   0000002C   0848               LDR      R0,??UstawSiec_Paint_0+0x14  ;; 0x8ca
   \   0000002E   2018               ADDS     R0,R4,R0
   \   00000030   ........           BL       List_Paint
   \   00000034   0AB0               ADD      SP,SP,#+40
  10386                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000036   10BC               POP      {R4}
   \   00000038   01BC               POP      {R0}
   \   0000003A   0047               BX       R0               ;; return
   \                     ??UstawSiec_Paint_0:
   \   0000003C   ........           DC32     g_leng
   \   00000040   7D0A0000           DC32     0xa7d
   \   00000044   ........           DC32     Speech
   \   00000048   ........           DC32     `?<Constant "TCP/IP">`
   \   0000004C   E8080000           DC32     0x8e8
   \   00000050   CA080000           DC32     0x8ca
  10387          
  10388          
  10389          
  10390                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10391                void UstawSiec_Event(void)
  10392                {
   \                     UstawSiec_Event:
   \   00000000   10B5               PUSH     {R4,LR}
  10393                  int ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??UstawSiec_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??UstawSiec_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??UstawSiec_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??UstawSiec_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
  10394            
  10395                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   15D0               BEQ      ??UstawSiec_Event_1
  10396                    {
  10397                    if ((ans>0) && (ans<=2)) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   07DB               BLT      ??UstawSiec_Event_2
   \   00000030   0328               CMP      R0,#+3
   \   00000032   05DA               BGE      ??UstawSiec_Event_2
   \   00000034   0E4C               LDR      R4,??UstawSiec_Event_0+0x10  ;; TextToChangeLength
   \   00000036   216D               LDR      R1,[R4, #+80]
   \   00000038   0A22               MOVS     R2,#+10
   \   0000003A   5143               MULS     R1,R2,R1
   \   0000003C   0918               ADDS     R1,R1,R0
   \   0000003E   2165               STR      R1,[R4, #+80]
  10398                    if (ans<0) {
   \                     ??UstawSiec_Event_2:
   \   00000040   0028               CMP      R0,#+0
   \   00000042   07D5               BPL      ??UstawSiec_Event_3
  10399                      MenuLevel=(MenuLevel/10);
   \   00000044   0A4C               LDR      R4,??UstawSiec_Event_0+0x10  ;; TextToChangeLength
   \   00000046   206D               LDR      R0,[R4, #+80]
   \   00000048   0A21               MOVS     R1,#+10
   \   0000004A   ........           BL       __aeabi_idivmod
   \   0000004E   2065               STR      R0,[R4, #+80]
  10400                     CurModifSheet=0; 
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   6071               STRB     R0,[R4, #+5]
  10401                    }
  10402                    MenuPaint();
   \                     ??UstawSiec_Event_3:
   \   00000054   ........           BL       MenuPaint
  10403                    } 
  10404                }//_______________________________________________________________________
   \                     ??UstawSiec_Event_1:
   \   00000058   10BC               POP      {R4}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??UstawSiec_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
  10405          
  10406                                     
  10407          //#include "WizFi.h"                            
  10408          // extern _Net NET;                         
  10409          
  10410                //*------------------------      -----------------------------------------------
  10411                 

   \                                 In section Debug.txt, align 4, keep-with-next
  10412                void Punkt_dostepuWiFi_Paint(void)
  10413                {
   \                     Punkt_dostepuWiFi_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
  10414              
  10415                    List_Paint(Speech[g_leng].Punkt_dostepu,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   4C4C               LDR      R4,??Punkt_dostepuWiFi_Paint_0  ;; 0xa7d
   \   00000004   4C4D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0x4  ;; g_leng
   \   00000006   4D4E               LDR      R6,??Punkt_dostepuWiFi_Paint_0+0x8  ;; Speech
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   4BA0               ADR      R0,??Punkt_dostepuWiFi_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0321               MOVS     R1,#+3
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   6C22               MOVS     R2,#+108
   \   00000020   0121               MOVS     R1,#+1
   \   00000022   4848               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x10  ;; 0x8e8
   \   00000024   2F68               LDR      R7,[R5, #+0]
   \   00000026   6743               MULS     R7,R4,R7
   \   00000028   F719               ADDS     R7,R6,R7
   \   0000002A   3818               ADDS     R0,R7,R0
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
  10416          
  10417                    Label(Speech[g_leng].Nazwa,0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000032   82B0               SUB      SP,SP,#+8
   \   00000034   0120               MOVS     R0,#+1
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   7F21               MOVS     R1,#+127
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   3E21               MOVS     R1,#+62
   \   0000003E   0F20               MOVS     R0,#+15
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   6123               MOVS     R3,#+97
   \   00000044   0122               MOVS     R2,#+1
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   3F48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x14  ;; 0x8f7
   \   0000004A   2F68               LDR      R7,[R5, #+0]
   \   0000004C   6743               MULS     R7,R4,R7
   \   0000004E   F719               ADDS     R7,R6,R7
   \   00000050   3818               ADDS     R0,R7,R0
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
  10418                    Label(NET.WiFi.SSID,0,2,86,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000058   3C4F               LDR      R7,??Punkt_dostepuWiFi_Paint_0+0x18  ;; NET
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7F21               MOVS     R1,#+127
   \   00000062   0120               MOVS     R0,#+1
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   3B21               MOVS     R1,#+59
   \   00000068   0F20               MOVS     R0,#+15
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   5623               MOVS     R3,#+86
   \   0000006E   0222               MOVS     R2,#+2
   \   00000070   0021               MOVS     R1,#+0
   \   00000072   3800               MOVS     R0,R7
   \   00000074   AE30               ADDS     R0,R0,#+174
   \   00000076   ........           BL       Label
   \   0000007A   06B0               ADD      SP,SP,#+24
  10419                    Button(Speech[g_leng].Zmien,15,68,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000007C   82B0               SUB      SP,SP,#+8
   \   0000007E   0D20               MOVS     R0,#+13
   \   00000080   0090               STR      R0,[SP, #+0]
   \   00000082   2223               MOVS     R3,#+34
   \   00000084   4422               MOVS     R2,#+68
   \   00000086   0F21               MOVS     R1,#+15
   \   00000088   8C46               MOV      R12,R1
   \   0000008A   3149               LDR      R1,??Punkt_dostepuWiFi_Paint_0+0x1C  ;; 0x915
   \   0000008C   2868               LDR      R0,[R5, #+0]
   \   0000008E   6043               MULS     R0,R4,R0
   \   00000090   3018               ADDS     R0,R6,R0
   \   00000092   4018               ADDS     R0,R0,R1
   \   00000094   6146               MOV      R1,R12
   \   00000096   ........           BL       Button
   \   0000009A   02B0               ADD      SP,SP,#+8
  10420                    
  10421                    Label(Speech[g_leng].Klucz_seciowy,0,1,55,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000009C   82B0               SUB      SP,SP,#+8
   \   0000009E   0120               MOVS     R0,#+1
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   3E21               MOVS     R1,#+62
   \   000000A8   0F20               MOVS     R0,#+15
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   3723               MOVS     R3,#+55
   \   000000AE   0122               MOVS     R2,#+1
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   8C46               MOV      R12,R1
   \   000000B4   2749               LDR      R1,??Punkt_dostepuWiFi_Paint_0+0x20  ;; 0x924
   \   000000B6   2868               LDR      R0,[R5, #+0]
   \   000000B8   6043               MULS     R0,R4,R0
   \   000000BA   3018               ADDS     R0,R6,R0
   \   000000BC   4018               ADDS     R0,R0,R1
   \   000000BE   6146               MOV      R1,R12
   \   000000C0   ........           BL       Label
   \   000000C4   06B0               ADD      SP,SP,#+24
  10422                    Label(NET.WiFi.Key,0,2,44,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   0020               MOVS     R0,#+0
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   7F21               MOVS     R1,#+127
   \   000000CE   0120               MOVS     R0,#+1
   \   000000D0   03B4               PUSH     {R0,R1}
   \   000000D2   3B21               MOVS     R1,#+59
   \   000000D4   0F20               MOVS     R0,#+15
   \   000000D6   03B4               PUSH     {R0,R1}
   \   000000D8   2C23               MOVS     R3,#+44
   \   000000DA   0222               MOVS     R2,#+2
   \   000000DC   0021               MOVS     R1,#+0
   \   000000DE   9F37               ADDS     R7,R7,#+159
   \   000000E0   3800               MOVS     R0,R7
   \   000000E2   ........           BL       Label
   \   000000E6   06B0               ADD      SP,SP,#+24
  10423                    Button(Speech[g_leng].Zmien,15,25,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000E8   82B0               SUB      SP,SP,#+8
   \   000000EA   0D20               MOVS     R0,#+13
   \   000000EC   0090               STR      R0,[SP, #+0]
   \   000000EE   2223               MOVS     R3,#+34
   \   000000F0   1922               MOVS     R2,#+25
   \   000000F2   0F21               MOVS     R1,#+15
   \   000000F4   1648               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x1C  ;; 0x915
   \   000000F6   2F68               LDR      R7,[R5, #+0]
   \   000000F8   6743               MULS     R7,R4,R7
   \   000000FA   F719               ADDS     R7,R6,R7
   \   000000FC   3818               ADDS     R0,R7,R0
   \   000000FE   ........           BL       Button
   \   00000102   02B0               ADD      SP,SP,#+8
  10424                    
  10425                    H_line(0,20,63,1); // (char X, int Y, char lenght, char typ)
   \   00000104   0123               MOVS     R3,#+1
   \   00000106   3F22               MOVS     R2,#+63
   \   00000108   1421               MOVS     R1,#+20
   \   0000010A   0020               MOVS     R0,#+0
   \   0000010C   ........           BL       H_line
  10426                    Button(Speech[g_leng].Polacz,4,3,56,16); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000110   82B0               SUB      SP,SP,#+8
   \   00000112   1020               MOVS     R0,#+16
   \   00000114   0090               STR      R0,[SP, #+0]
   \   00000116   3823               MOVS     R3,#+56
   \   00000118   0322               MOVS     R2,#+3
   \   0000011A   0421               MOVS     R1,#+4
   \   0000011C   0E48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x24  ;; 0x906
   \   0000011E   2D68               LDR      R5,[R5, #+0]
   \   00000120   6543               MULS     R5,R4,R5
   \   00000122   7419               ADDS     R4,R6,R5
   \   00000124   2018               ADDS     R0,R4,R0
   \   00000126   ........           BL       Button
   \   0000012A   02B0               ADD      SP,SP,#+8
  10427                
  10428                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000012C   F8BC               POP      {R3-R7}
   \   0000012E   01BC               POP      {R0}
   \   00000130   0047               BX       R0               ;; return
   \   00000132   C046               Nop      
   \                     ??Punkt_dostepuWiFi_Paint_0:
   \   00000134   7D0A0000           DC32     0xa7d
   \   00000138   ........           DC32     g_leng
   \   0000013C   ........           DC32     Speech
   \   00000140   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000144   E8080000           DC32     0x8e8
   \   00000148   F7080000           DC32     0x8f7
   \   0000014C   ........           DC32     NET
   \   00000150   15090000           DC32     0x915
   \   00000154   24090000           DC32     0x924
   \   00000158   06090000           DC32     0x906
  10429                
  10430          
  10431          
  10432          
  10433                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10434                void Punkt_dostepuWiFi_Event(void)
  10435                {
   \                     Punkt_dostepuWiFi_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
  10436                
  10437                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   3F4C               LDR      R4,??Punkt_dostepuWiFi_Event_0  ;; Y_up
   \   00000004   3F4D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   3D48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x8  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   215E               LDRSH    R1,[R4, R0]
   \   0000001C   3B48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   06D5               BPL      ??Punkt_dostepuWiFi_Event_1
  10438                  {
  10439                    MenuLevel=(MenuLevel/10);
   \   0000002C   384C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   206D               LDR      R0,[R4, #+80]
   \   00000030   0A21               MOVS     R1,#+10
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   2065               STR      R0,[R4, #+80]
   \   00000038   5DE0               B        ??Punkt_dostepuWiFi_Event_2
  10440                    
  10441                  } 
  10442                   else if ((Y_down<112) || (Y_up<112))
   \                     ??Punkt_dostepuWiFi_Event_1:
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   285E               LDRSH    R0,[R5, R0]
   \   0000003E   7028               CMP      R0,#+112
   \   00000040   03DB               BLT      ??Punkt_dostepuWiFi_Event_3
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   205E               LDRSH    R0,[R4, R0]
   \   00000046   7028               CMP      R0,#+112
   \   00000048   55DA               BGE      ??Punkt_dostepuWiFi_Event_2
  10443                  {
  10444                      
  10445                      if (Button(Speech[g_leng].Zmien,15,68,34,13)==1)
   \                     ??Punkt_dostepuWiFi_Event_3:
   \   0000004A   324C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x14  ;; 0xa7d
   \   0000004C   324D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x18  ;; g_leng
   \   0000004E   334E               LDR      R6,??Punkt_dostepuWiFi_Event_0+0x1C  ;; Speech
   \   00000050   82B0               SUB      SP,SP,#+8
   \   00000052   0D20               MOVS     R0,#+13
   \   00000054   0090               STR      R0,[SP, #+0]
   \   00000056   2223               MOVS     R3,#+34
   \   00000058   4422               MOVS     R2,#+68
   \   0000005A   0F21               MOVS     R1,#+15
   \   0000005C   3048               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x20  ;; 0x915
   \   0000005E   2F68               LDR      R7,[R5, #+0]
   \   00000060   6743               MULS     R7,R4,R7
   \   00000062   F719               ADDS     R7,R6,R7
   \   00000064   3818               ADDS     R0,R7,R0
   \   00000066   ........           BL       Button
   \   0000006A   02B0               ADD      SP,SP,#+8
   \   0000006C   0128               CMP      R0,#+1
   \   0000006E   0CD1               BNE      ??Punkt_dostepuWiFi_Event_4
  10446                      {
  10447                        TextToChange=NET.WiFi.SSID;
   \   00000070   274C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   00000072   2C48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x24  ;; NET + 174
   \   00000074   A065               STR      R0,[R4, #+88]
  10448                        TextToChangeLength=15;
   \   00000076   0F20               MOVS     R0,#+15
   \   00000078   2070               STRB     R0,[R4, #+0]
  10449                        TextToChangeMaxPixSize=62;
   \   0000007A   3E20               MOVS     R0,#+62
   \   0000007C   6070               STRB     R0,[R4, #+1]
  10450                        MenuLevel=(MenuLevel*10+1);
   \   0000007E   206D               LDR      R0,[R4, #+80]
   \   00000080   0A21               MOVS     R1,#+10
   \   00000082   4843               MULS     R0,R1,R0
   \   00000084   401C               ADDS     R0,R0,#+1
   \   00000086   2065               STR      R0,[R4, #+80]
   \   00000088   35E0               B        ??Punkt_dostepuWiFi_Event_2
  10451                      }else if (Button(Speech[g_leng].Zmien,15,25,34,13)==1)
   \                     ??Punkt_dostepuWiFi_Event_4:
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0D20               MOVS     R0,#+13
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   2223               MOVS     R3,#+34
   \   00000092   1922               MOVS     R2,#+25
   \   00000094   0F21               MOVS     R1,#+15
   \   00000096   2248               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x20  ;; 0x915
   \   00000098   2F68               LDR      R7,[R5, #+0]
   \   0000009A   6743               MULS     R7,R4,R7
   \   0000009C   F719               ADDS     R7,R6,R7
   \   0000009E   3818               ADDS     R0,R7,R0
   \   000000A0   ........           BL       Button
   \   000000A4   02B0               ADD      SP,SP,#+8
   \   000000A6   0128               CMP      R0,#+1
   \   000000A8   0CD1               BNE      ??Punkt_dostepuWiFi_Event_5
  10452                      {
  10453                        TextToChange=NET.WiFi.Key;
   \   000000AA   194C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   000000AC   1E48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x28  ;; NET + 159
   \   000000AE   A065               STR      R0,[R4, #+88]
  10454                        TextToChangeLength=15;
   \   000000B0   0F20               MOVS     R0,#+15
   \   000000B2   2070               STRB     R0,[R4, #+0]
  10455                        TextToChangeMaxPixSize=62;
   \   000000B4   3E20               MOVS     R0,#+62
   \   000000B6   6070               STRB     R0,[R4, #+1]
  10456                        MenuLevel=(MenuLevel*10+1);
   \   000000B8   206D               LDR      R0,[R4, #+80]
   \   000000BA   0A21               MOVS     R1,#+10
   \   000000BC   4843               MULS     R0,R1,R0
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   2065               STR      R0,[R4, #+80]
   \   000000C2   18E0               B        ??Punkt_dostepuWiFi_Event_2
  10457                      }else if (Button(Speech[g_leng].Polacz,4,3,56,16)==1)
   \                     ??Punkt_dostepuWiFi_Event_5:
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   1020               MOVS     R0,#+16
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   3823               MOVS     R3,#+56
   \   000000CC   0322               MOVS     R2,#+3
   \   000000CE   0421               MOVS     R1,#+4
   \   000000D0   1648               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x2C  ;; 0x906
   \   000000D2   2D68               LDR      R5,[R5, #+0]
   \   000000D4   6543               MULS     R5,R4,R5
   \   000000D6   7419               ADDS     R4,R6,R5
   \   000000D8   2018               ADDS     R0,R4,R0
   \   000000DA   ........           BL       Button
   \   000000DE   02B0               ADD      SP,SP,#+8
   \   000000E0   0128               CMP      R0,#+1
   \   000000E2   08D1               BNE      ??Punkt_dostepuWiFi_Event_2
  10458                      {
  10459                         NET.Status.AccesPointAssociateTest=0;
   \   000000E4   1248               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x30  ;; NET + 4
   \   000000E6   0021               MOVS     R1,#+0
   \   000000E8   0170               STRB     R1,[R0, #+0]
  10460                         MenuLevel=(MenuLevel*10+2);
   \   000000EA   094C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   000000EC   206D               LDR      R0,[R4, #+80]
   \   000000EE   0A21               MOVS     R1,#+10
   \   000000F0   4843               MULS     R0,R1,R0
   \   000000F2   801C               ADDS     R0,R0,#+2
   \   000000F4   2065               STR      R0,[R4, #+80]
  10461                      }
  10462                      
  10463                      
  10464                      
  10465                    
  10466                  }
  10467                   MenuPaint();
   \                     ??Punkt_dostepuWiFi_Event_2:
   \   000000F6   ........           BL       MenuPaint
  10468                    
  10469                 
  10470                }//_______________________________________________________________________
   \   000000FA   F8BC               POP      {R3-R7}
   \   000000FC   01BC               POP      {R0}
   \   000000FE   0047               BX       R0               ;; return
   \                     ??Punkt_dostepuWiFi_Event_0:
   \   00000100   ........           DC32     Y_up
   \   00000104   ........           DC32     Y_down
   \   00000108   ........           DC32     X_down
   \   0000010C   ........           DC32     X_up
   \   00000110   ........           DC32     TextToChangeLength
   \   00000114   7D0A0000           DC32     0xa7d
   \   00000118   ........           DC32     g_leng
   \   0000011C   ........           DC32     Speech
   \   00000120   15090000           DC32     0x915
   \   00000124   ........           DC32     NET + 174
   \   00000128   ........           DC32     NET + 159
   \   0000012C   06090000           DC32     0x906
   \   00000130   ........           DC32     NET + 4
  10471          
  10472          
  10473                
  10474           
  10475                 

   \                                 In section Debug.txt, align 4, keep-with-next
  10476                void WiFiConecting_Paint(void)
  10477                {
   \                     WiFiConecting_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10478                  
  10479                    //SetWiFiSuspend();
  10480                    List_Paint(Speech[g_leng].Punkt_dostepu,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0BA0               ADR      R0,??WiFiConecting_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   0848               LDR      R0,??WiFiConecting_Paint_0+0x4  ;; 0x8e8
   \   0000001E   094C               LDR      R4,??WiFiConecting_Paint_0+0x8  ;; g_leng
   \   00000020   2468               LDR      R4,[R4, #+0]
   \   00000022   094D               LDR      R5,??WiFiConecting_Paint_0+0xC  ;; 0xa7d
   \   00000024   6C43               MULS     R4,R5,R4
   \   00000026   094D               LDR      R5,??WiFiConecting_Paint_0+0x10  ;; Speech
   \   00000028   2C19               ADDS     R4,R5,R4
   \   0000002A   2018               ADDS     R0,R4,R0
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
  10481                    Wait_Paint();
   \   00000032   ........           BL       Wait_Paint
  10482                  
  10483                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000036   38BC               POP      {R3-R5}
   \   00000038   01BC               POP      {R0}
   \   0000003A   0047               BX       R0               ;; return
   \                     ??WiFiConecting_Paint_0:
   \   0000003C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000040   E8080000           DC32     0x8e8
   \   00000044   ........           DC32     g_leng
   \   00000048   7D0A0000           DC32     0xa7d
   \   0000004C   ........           DC32     Speech
  10484          
  10485                
  10486                typedef enum {
  10487                WizFi_AT_NC=0,
  10488                WizFi_AT_CONFIG,            //konfiguracja
  10489                WizFi_AT_CONFIG_ERROR,      //b³ad konfiguracji
  10490                WizFi_AT_CONNECTING,           //³¹czenie z hotspotem
  10491                WizFi_AT_CONNECT_ERROR,     //b³¹d po³¹czenia z hotspotem
  10492                WizFi_AT_CONNECTED,         //po³¹czono z hotspotem
  10493              }_WiFiStat;
  10494                

   \                                 In section Debug.txt, align 4, keep-with-next
  10495                void WiFiConecting_Refresh(void)
  10496                {
   \                     WiFiConecting_Refresh:
   \   00000000   70B5               PUSH     {R4-R6,LR}
  10497           
  10498                     static char licz;
  10499                     static char end=0;
  10500                     char cyfra=licz%10;
   \   00000002   734C               LDR      R4,??WiFiConecting_Refresh_0  ;; ??licz
   \   00000004   2578               LDRB     R5,[R4, #+0]
   \   00000006   2800               MOVS     R0,R5
   \   00000008   0A21               MOVS     R1,#+10
   \   0000000A   ........           BL       __aeabi_idivmod
   \   0000000E   0E00               MOVS     R6,R1
   \   00000010   3606               LSLS     R6,R6,#+24
   \   00000012   360E               LSRS     R6,R6,#+24
  10501                     
  10502                     if (licz==0)
   \   00000014   002D               CMP      R5,#+0
   \   00000016   23D1               BNE      ??WiFiConecting_Refresh_1
  10503                     {
  10504                            //zapis do flash
  10505                            unsigned int Save = __get_interrupt_state();  
   \   00000018   ........           BL       __iar_get_interrupt_state
   \   0000001C   0600               MOVS     R6,R0
  10506                            __disable_interrupt();
   \   0000001E   ........           BL       __iar_disable_interrupt
  10507                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.SSID)), (char*) (&(NET.WiFi.SSID)), sizeof(NET.WiFi.SSID));
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000022   6C4D               LDR      R5,??WiFiConecting_Refresh_0+0x4  ;; NET
   \   00000024   0F22               MOVS     R2,#+15
   \   00000026   2900               MOVS     R1,R5
   \   00000028   AE31               ADDS     R1,R1,#+174
   \   0000002A   6B48               LDR      R0,??WiFiConecting_Refresh_0+0x8  ;; 0x13d916
   \   0000002C   ........           BL       FlashWrite
  10508                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Key)), (char*) (&(NET.WiFi.Key)), sizeof(NET.WiFi.Key));
   \   00000030   0F22               MOVS     R2,#+15
   \   00000032   2900               MOVS     R1,R5
   \   00000034   9F31               ADDS     R1,R1,#+159
   \   00000036   6948               LDR      R0,??WiFiConecting_Refresh_0+0xC  ;; 0x13d907
   \   00000038   ........           BL       FlashWrite
  10509                            __set_interrupt_state(Save);
   \   0000003C   3000               MOVS     R0,R6
   \   0000003E   ........           BL       __iar_set_interrupt_state
  10510                            __enable_interrupt();
   \   00000042   ........           BL       __iar_enable_interrupt
  10511                            //koniec zapisu do flash
  10512                       
  10513                       
  10514                       NET.Status.FreezTime=g_counter+FREEZ_TIME;
  10515                       NET.Status.HostLink=DISCONNECTED;
   \   00000046   0026               MOVS     R6,#+0
  10516                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000048   2E80               STRH     R6,[R5, #+0]
  10517                       NET.Status.Timeout=0;
   \   0000004A   3000               MOVS     R0,R6
   \   0000004C   0100               MOVS     R1,R0
   \   0000004E   2A00               MOVS     R2,R5
   \   00000050   3832               ADDS     R2,R2,#+56
   \   00000052   03C2               STM      R2!,{R0,R1}
  10518                       NET.Status.HttpNextQueryTime=0;
   \   00000054   2A00               MOVS     R2,R5
   \   00000056   3032               ADDS     R2,R2,#+48
   \   00000058   03C2               STM      R2!,{R0,R1}
  10519                       NET.Status.FreezTime=0;
   \   0000005A   4035               ADDS     R5,R5,#+64
   \   0000005C   03C5               STM      R5!,{R0,R1}
   \   0000005E   85E0               B        ??WiFiConecting_Refresh_2
  10520                     }
  10521                     else if (end==0)
   \                     ??WiFiConecting_Refresh_1:
   \   00000060   6078               LDRB     R0,[R4, #+1]
   \   00000062   0028               CMP      R0,#+0
   \   00000064   00D0               BEQ      .+4
   \   00000066   81E0               B        ??WiFiConecting_Refresh_2
  10522                     {  
  10523                         if ((NET.Status.AccesPointAssociate==DISCONNECTED) && (NET.Status.AccesPointAssociateTest!=0xFF))
   \   00000068   5A4D               LDR      R5,??WiFiConecting_Refresh_0+0x4  ;; NET
   \   0000006A   2878               LDRB     R0,[R5, #+0]
   \   0000006C   0028               CMP      R0,#+0
   \   0000006E   14D1               BNE      ??WiFiConecting_Refresh_3
   \   00000070   2979               LDRB     R1,[R5, #+4]
   \   00000072   FF29               CMP      R1,#+255
   \   00000074   11D0               BEQ      ??WiFiConecting_Refresh_3
  10524                         {
  10525                           Label("Not connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   7F21               MOVS     R1,#+127
   \   0000007C   0120               MOVS     R0,#+1
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   3B21               MOVS     R1,#+59
   \   00000082   0F20               MOVS     R0,#+15
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   0300               MOVS     R3,R0
   \   00000088   0222               MOVS     R2,#+2
   \   0000008A   1100               MOVS     R1,R2
   \   0000008C   5448               LDR      R0,??WiFiConecting_Refresh_0+0x10  ;; `?<Constant "Not connected">`
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
  10526                           NET.Status.AccesPointAssociateTest=0;
   \   00000094   0020               MOVS     R0,#+0
   \   00000096   2871               STRB     R0,[R5, #+4]
   \   00000098   68E0               B        ??WiFiConecting_Refresh_2
  10527                         }  
  10528                         else if ((NET.Status.AccesPointAssociate==CONNECTING) && (NET.Status.AccesPointAssociateTest!=0xFF))
   \                     ??WiFiConecting_Refresh_3:
   \   0000009A   0228               CMP      R0,#+2
   \   0000009C   4DD1               BNE      ??WiFiConecting_Refresh_4
   \   0000009E   2979               LDRB     R1,[R5, #+4]
   \   000000A0   FF29               CMP      R1,#+255
   \   000000A2   4AD0               BEQ      ??WiFiConecting_Refresh_4
  10529                         {
  10530                           if (cyfra==0) Label("Connecting",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000000A4   3000               MOVS     R0,R6
   \   000000A6   0FD1               BNE      ??WiFiConecting_Refresh_5
   \   000000A8   82B0               SUB      SP,SP,#+8
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   0090               STR      R0,[SP, #+0]
   \   000000AE   7F21               MOVS     R1,#+127
   \   000000B0   0120               MOVS     R0,#+1
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   3B21               MOVS     R1,#+59
   \   000000B6   0F20               MOVS     R0,#+15
   \   000000B8   03B4               PUSH     {R0,R1}
   \   000000BA   0300               MOVS     R3,R0
   \   000000BC   0422               MOVS     R2,#+4
   \   000000BE   0021               MOVS     R1,#+0
   \   000000C0   4848               LDR      R0,??WiFiConecting_Refresh_0+0x14  ;; `?<Constant "Not connected">` + 16
   \   000000C2   ........           BL       Label
   \   000000C6   06B0               ADD      SP,SP,#+24
  10531                           if (cyfra==3) Label("Connecting .",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_5:
   \   000000C8   3000               MOVS     R0,R6
   \   000000CA   0328               CMP      R0,#+3
   \   000000CC   0FD1               BNE      ??WiFiConecting_Refresh_6
   \   000000CE   82B0               SUB      SP,SP,#+8
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   0090               STR      R0,[SP, #+0]
   \   000000D4   7F21               MOVS     R1,#+127
   \   000000D6   0120               MOVS     R0,#+1
   \   000000D8   03B4               PUSH     {R0,R1}
   \   000000DA   3B21               MOVS     R1,#+59
   \   000000DC   0F20               MOVS     R0,#+15
   \   000000DE   03B4               PUSH     {R0,R1}
   \   000000E0   0300               MOVS     R3,R0
   \   000000E2   0422               MOVS     R2,#+4
   \   000000E4   0021               MOVS     R1,#+0
   \   000000E6   4048               LDR      R0,??WiFiConecting_Refresh_0+0x18  ;; `?<Constant "Not connected">` + 28
   \   000000E8   ........           BL       Label
   \   000000EC   06B0               ADD      SP,SP,#+24
  10532                           if (cyfra==5) Label("Connecting ..",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_6:
   \   000000EE   3000               MOVS     R0,R6
   \   000000F0   0528               CMP      R0,#+5
   \   000000F2   0FD1               BNE      ??WiFiConecting_Refresh_7
   \   000000F4   82B0               SUB      SP,SP,#+8
   \   000000F6   0020               MOVS     R0,#+0
   \   000000F8   0090               STR      R0,[SP, #+0]
   \   000000FA   7F21               MOVS     R1,#+127
   \   000000FC   0120               MOVS     R0,#+1
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   3B21               MOVS     R1,#+59
   \   00000102   0F20               MOVS     R0,#+15
   \   00000104   03B4               PUSH     {R0,R1}
   \   00000106   0300               MOVS     R3,R0
   \   00000108   0422               MOVS     R2,#+4
   \   0000010A   0021               MOVS     R1,#+0
   \   0000010C   3748               LDR      R0,??WiFiConecting_Refresh_0+0x1C  ;; `?<Constant "Not connected">` + 44
   \   0000010E   ........           BL       Label
   \   00000112   06B0               ADD      SP,SP,#+24
  10533                           if (cyfra==7) Label("Connecting ...",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_7:
   \   00000114   072E               CMP      R6,#+7
   \   00000116   29D1               BNE      ??WiFiConecting_Refresh_2
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   0020               MOVS     R0,#+0
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   7F21               MOVS     R1,#+127
   \   00000120   0120               MOVS     R0,#+1
   \   00000122   03B4               PUSH     {R0,R1}
   \   00000124   3B21               MOVS     R1,#+59
   \   00000126   0F20               MOVS     R0,#+15
   \   00000128   03B4               PUSH     {R0,R1}
   \   0000012A   0300               MOVS     R3,R0
   \   0000012C   0422               MOVS     R2,#+4
   \   0000012E   0021               MOVS     R1,#+0
   \   00000130   2F48               LDR      R0,??WiFiConecting_Refresh_0+0x20  ;; `?<Constant "Not connected">` + 60
   \   00000132   ........           BL       Label
   \   00000136   06B0               ADD      SP,SP,#+24
   \   00000138   18E0               B        ??WiFiConecting_Refresh_2
  10534                         }else if ((NET.Status.AccesPointAssociate==CONNECTED) || (NET.Status.AccesPointAssociateTest==0xFF))
   \                     ??WiFiConecting_Refresh_4:
   \   0000013A   0328               CMP      R0,#+3
   \   0000013C   02D0               BEQ      ??WiFiConecting_Refresh_8
   \   0000013E   2879               LDRB     R0,[R5, #+4]
   \   00000140   FF28               CMP      R0,#+255
   \   00000142   13D1               BNE      ??WiFiConecting_Refresh_2
  10535                         {
  10536                           end=1;
   \                     ??WiFiConecting_Refresh_8:
   \   00000144   0120               MOVS     R0,#+1
   \   00000146   6070               STRB     R0,[R4, #+1]
  10537                           licz=180;
   \   00000148   B420               MOVS     R0,#+180
   \   0000014A   2070               STRB     R0,[R4, #+0]
  10538                           Label("Connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)            
   \   0000014C   82B0               SUB      SP,SP,#+8
   \   0000014E   0020               MOVS     R0,#+0
   \   00000150   0090               STR      R0,[SP, #+0]
   \   00000152   7F21               MOVS     R1,#+127
   \   00000154   0120               MOVS     R0,#+1
   \   00000156   03B4               PUSH     {R0,R1}
   \   00000158   3B21               MOVS     R1,#+59
   \   0000015A   0F20               MOVS     R0,#+15
   \   0000015C   03B4               PUSH     {R0,R1}
   \   0000015E   0300               MOVS     R3,R0
   \   00000160   0222               MOVS     R2,#+2
   \   00000162   1100               MOVS     R1,R2
   \   00000164   2348               LDR      R0,??WiFiConecting_Refresh_0+0x24  ;; `?<Constant "Not connected">` + 76
   \   00000166   ........           BL       Label
   \   0000016A   06B0               ADD      SP,SP,#+24
  10539                         
  10540                           
  10541          
  10542                         
  10543                         }
  10544                       
  10545                     }
  10546                     
  10547                     if (licz==179) 
   \                     ??WiFiConecting_Refresh_2:
   \   0000016C   2078               LDRB     R0,[R4, #+0]
   \   0000016E   B328               CMP      R0,#+179
   \   00000170   13D1               BNE      ??WiFiConecting_Refresh_9
  10548                     {
  10549                       end=1;
   \   00000172   0120               MOVS     R0,#+1
   \   00000174   6070               STRB     R0,[R4, #+1]
  10550                       licz=180;
   \   00000176   B420               MOVS     R0,#+180
   \   00000178   2070               STRB     R0,[R4, #+0]
  10551                       Label("Not connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   0000017A   82B0               SUB      SP,SP,#+8
   \   0000017C   0020               MOVS     R0,#+0
   \   0000017E   0090               STR      R0,[SP, #+0]
   \   00000180   7F21               MOVS     R1,#+127
   \   00000182   0120               MOVS     R0,#+1
   \   00000184   03B4               PUSH     {R0,R1}
   \   00000186   3B21               MOVS     R1,#+59
   \   00000188   0F20               MOVS     R0,#+15
   \   0000018A   03B4               PUSH     {R0,R1}
   \   0000018C   0300               MOVS     R3,R0
   \   0000018E   0222               MOVS     R2,#+2
   \   00000190   1100               MOVS     R1,R2
   \   00000192   1348               LDR      R0,??WiFiConecting_Refresh_0+0x10  ;; `?<Constant "Not connected">`
   \   00000194   ........           BL       Label
   \   00000198   06B0               ADD      SP,SP,#+24
  10552                     }
  10553                     
  10554                     
  10555                     if (licz<210)
   \                     ??WiFiConecting_Refresh_9:
   \   0000019A   2078               LDRB     R0,[R4, #+0]
   \   0000019C   D228               CMP      R0,#+210
   \   0000019E   08D2               BCS      ??WiFiConecting_Refresh_10
  10556                     {
  10557                        licz++; 
   \   000001A0   401C               ADDS     R0,R0,#+1
   \   000001A2   2070               STRB     R0,[R4, #+0]
  10558                        if (NET.Status.AccesPointAssociateTest<220) NET.Status.AccesPointAssociateTest++;
   \   000001A4   0B4D               LDR      R5,??WiFiConecting_Refresh_0+0x4  ;; NET
   \   000001A6   2879               LDRB     R0,[R5, #+4]
   \   000001A8   DC28               CMP      R0,#+220
   \   000001AA   0DD2               BCS      ??WiFiConecting_Refresh_11
   \   000001AC   401C               ADDS     R0,R0,#+1
   \   000001AE   2871               STRB     R0,[R5, #+4]
   \   000001B0   0AE0               B        ??WiFiConecting_Refresh_11
  10559                     }else{
  10560                        licz=0;
  10561                        end=0;
   \                     ??WiFiConecting_Refresh_10:
   \   000001B2   0026               MOVS     R6,#+0
   \   000001B4   6670               STRB     R6,[R4, #+1]
  10562                        MenuLevel=(MenuLevel/10);
   \   000001B6   104D               LDR      R5,??WiFiConecting_Refresh_0+0x28  ;; TextToChangeLength
   \   000001B8   286D               LDR      R0,[R5, #+80]
   \   000001BA   0A21               MOVS     R1,#+10
   \   000001BC   ........           BL       __aeabi_idivmod
   \   000001C0   2865               STR      R0,[R5, #+80]
  10563                        licz=0;
   \   000001C2   2670               STRB     R6,[R4, #+0]
  10564                        MenuPaint();
   \   000001C4   ........           BL       MenuPaint
  10565                     }
  10566                     
  10567                     
  10568                    
  10569                
  10570                }
   \                     ??WiFiConecting_Refresh_11:
   \   000001C8   70BC               POP      {R4-R6}
   \   000001CA   01BC               POP      {R0}
   \   000001CC   0047               BX       R0               ;; return
   \   000001CE   C046               Nop      
   \                     ??WiFiConecting_Refresh_0:
   \   000001D0   ........           DC32     ??licz
   \   000001D4   ........           DC32     NET
   \   000001D8   16D91300           DC32     0x13d916
   \   000001DC   07D91300           DC32     0x13d907
   \   000001E0   ........           DC32     `?<Constant "Not connected">`
   \   000001E4   ........           DC32     `?<Constant "Not connected">` + 16
   \   000001E8   ........           DC32     `?<Constant "Not connected">` + 28
   \   000001EC   ........           DC32     `?<Constant "Not connected">` + 44
   \   000001F0   ........           DC32     `?<Constant "Not connected">` + 60
   \   000001F4   ........           DC32     `?<Constant "Not connected">` + 76
   \   000001F8   ........           DC32     TextToChangeLength

   \                                 In section .bss, align 1
   \                     ??licz:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
  10571          
  10572              
  10573                
  10574                

   \                                 In section .bss, align 1
  10575                char WiFiReConnect=0;
   \                     WiFiReConnect:
   \   00000000                      DS8 1
  10576                

   \                                 In section Debug.txt, align 4, keep-with-next
  10577                void  Host_WiFi_Paint(void)
  10578                {
   \                     Host_WiFi_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   86A0               ADR      R0,??Host_WiFi_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   8348               LDR      R0,??Host_WiFi_Paint_0+0x4  ;; `?<Constant "Host">`
  10579                    
  10580                    List_Paint("Host",1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000001E   ........           BL       List_Paint
   \   00000022   0AB0               ADD      SP,SP,#+40
  10581          
  10582                    char pY=72;    //pozycja dolna
  10583                    Label(Speech[g_leng].Domena,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000024   824C               LDR      R4,??Host_WiFi_Paint_0+0x8  ;; 0xa7d
   \   00000026   834D               LDR      R5,??Host_WiFi_Paint_0+0xC  ;; g_leng
   \   00000028   834E               LDR      R6,??Host_WiFi_Paint_0+0x10  ;; Speech
   \   0000002A   82B0               SUB      SP,SP,#+8
   \   0000002C   0120               MOVS     R0,#+1
   \   0000002E   0090               STR      R0,[SP, #+0]
   \   00000030   7F21               MOVS     R1,#+127
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   3E21               MOVS     R1,#+62
   \   00000036   0F20               MOVS     R0,#+15
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   6123               MOVS     R3,#+97
   \   0000003C   0122               MOVS     R2,#+1
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   7E48               LDR      R0,??Host_WiFi_Paint_0+0x14  ;; 0x933
   \   00000042   2F68               LDR      R7,[R5, #+0]
   \   00000044   6743               MULS     R7,R4,R7
   \   00000046   F719               ADDS     R7,R6,R7
   \   00000048   3818               ADDS     R0,R7,R0
   \   0000004A   ........           BL       Label
   \   0000004E   06B0               ADD      SP,SP,#+24
  10584                    Label(".................................",0,2,pY+14,25,59,1,127,0);
   \   00000050   82B0               SUB      SP,SP,#+8
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   0090               STR      R0,[SP, #+0]
   \   00000056   7F21               MOVS     R1,#+127
   \   00000058   0120               MOVS     R0,#+1
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   3B21               MOVS     R1,#+59
   \   0000005E   1920               MOVS     R0,#+25
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   5623               MOVS     R3,#+86
   \   00000064   0222               MOVS     R2,#+2
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   7548               LDR      R0,??Host_WiFi_Paint_0+0x18  ;; `?<Constant "Host">` + 24
   \   0000006A   ........           BL       Label
   \   0000006E   06B0               ADD      SP,SP,#+24
  10585                    Label(NET.WiFi.Domena,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000070   744F               LDR      R7,??Host_WiFi_Paint_0+0x1C  ;; NET
   \   00000072   82B0               SUB      SP,SP,#+8
   \   00000074   0020               MOVS     R0,#+0
   \   00000076   0090               STR      R0,[SP, #+0]
   \   00000078   7F21               MOVS     R1,#+127
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   3B21               MOVS     R1,#+59
   \   00000080   0F20               MOVS     R0,#+15
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   5823               MOVS     R3,#+88
   \   00000086   0222               MOVS     R2,#+2
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   3800               MOVS     R0,R7
   \   0000008C   BD30               ADDS     R0,R0,#+189
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
  10586                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000094   82B0               SUB      SP,SP,#+8
   \   00000096   0D20               MOVS     R0,#+13
   \   00000098   0090               STR      R0,[SP, #+0]
   \   0000009A   2223               MOVS     R3,#+34
   \   0000009C   4922               MOVS     R2,#+73
   \   0000009E   0F21               MOVS     R1,#+15
   \   000000A0   8C46               MOV      R12,R1
   \   000000A2   6949               LDR      R1,??Host_WiFi_Paint_0+0x20  ;; 0x915
   \   000000A4   2868               LDR      R0,[R5, #+0]
   \   000000A6   6043               MULS     R0,R4,R0
   \   000000A8   3018               ADDS     R0,R6,R0
   \   000000AA   4018               ADDS     R0,R0,R1
   \   000000AC   6146               MOV      R1,R12
   \   000000AE   ........           BL       Button
   \   000000B2   02B0               ADD      SP,SP,#+8
  10587                    
  10588                    pY=37;    
  10589                    Label(Speech[g_leng].Subdomena,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000B4   82B0               SUB      SP,SP,#+8
   \   000000B6   0120               MOVS     R0,#+1
   \   000000B8   0090               STR      R0,[SP, #+0]
   \   000000BA   7F21               MOVS     R1,#+127
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   3E21               MOVS     R1,#+62
   \   000000C0   0F20               MOVS     R0,#+15
   \   000000C2   03B4               PUSH     {R0,R1}
   \   000000C4   0B00               MOVS     R3,R1
   \   000000C6   0122               MOVS     R2,#+1
   \   000000C8   0021               MOVS     R1,#+0
   \   000000CA   8C46               MOV      R12,R1
   \   000000CC   5F49               LDR      R1,??Host_WiFi_Paint_0+0x24  ;; 0x942
   \   000000CE   2868               LDR      R0,[R5, #+0]
   \   000000D0   6043               MULS     R0,R4,R0
   \   000000D2   3018               ADDS     R0,R6,R0
   \   000000D4   4018               ADDS     R0,R0,R1
   \   000000D6   6146               MOV      R1,R12
   \   000000D8   ........           BL       Label
   \   000000DC   06B0               ADD      SP,SP,#+24
  10590                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   000000DE   82B0               SUB      SP,SP,#+8
   \   000000E0   0020               MOVS     R0,#+0
   \   000000E2   0090               STR      R0,[SP, #+0]
   \   000000E4   7F21               MOVS     R1,#+127
   \   000000E6   0120               MOVS     R0,#+1
   \   000000E8   03B4               PUSH     {R0,R1}
   \   000000EA   3B21               MOVS     R1,#+59
   \   000000EC   1920               MOVS     R0,#+25
   \   000000EE   03B4               PUSH     {R0,R1}
   \   000000F0   3323               MOVS     R3,#+51
   \   000000F2   0222               MOVS     R2,#+2
   \   000000F4   0021               MOVS     R1,#+0
   \   000000F6   5648               LDR      R0,??Host_WiFi_Paint_0+0x28  ;; `?<Constant "Host">` + 60
   \   000000F8   ........           BL       Label
   \   000000FC   06B0               ADD      SP,SP,#+24
  10591                    Label(NET.WiFi.Subdomena,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000000FE   82B0               SUB      SP,SP,#+8
   \   00000100   0020               MOVS     R0,#+0
   \   00000102   0090               STR      R0,[SP, #+0]
   \   00000104   7F21               MOVS     R1,#+127
   \   00000106   0120               MOVS     R0,#+1
   \   00000108   03B4               PUSH     {R0,R1}
   \   0000010A   3B21               MOVS     R1,#+59
   \   0000010C   0F20               MOVS     R0,#+15
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   3523               MOVS     R3,#+53
   \   00000112   0222               MOVS     R2,#+2
   \   00000114   0021               MOVS     R1,#+0
   \   00000116   3800               MOVS     R0,R7
   \   00000118   CC30               ADDS     R0,R0,#+204
   \   0000011A   ........           BL       Label
   \   0000011E   06B0               ADD      SP,SP,#+24
  10592                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0D20               MOVS     R0,#+13
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   2223               MOVS     R3,#+34
   \   00000128   2622               MOVS     R2,#+38
   \   0000012A   0F21               MOVS     R1,#+15
   \   0000012C   8C46               MOV      R12,R1
   \   0000012E   4649               LDR      R1,??Host_WiFi_Paint_0+0x20  ;; 0x915
   \   00000130   2868               LDR      R0,[R5, #+0]
   \   00000132   6043               MULS     R0,R4,R0
   \   00000134   3018               ADDS     R0,R6,R0
   \   00000136   4018               ADDS     R0,R0,R1
   \   00000138   6146               MOV      R1,R12
   \   0000013A   ........           BL       Button
   \   0000013E   02B0               ADD      SP,SP,#+8
  10593                    
  10594                    pY=2;    
  10595                    Label(Speech[g_leng].Scezka,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0120               MOVS     R0,#+1
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   7F21               MOVS     R1,#+127
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   3E21               MOVS     R1,#+62
   \   0000014C   0F20               MOVS     R0,#+15
   \   0000014E   03B4               PUSH     {R0,R1}
   \   00000150   1B23               MOVS     R3,#+27
   \   00000152   0122               MOVS     R2,#+1
   \   00000154   0021               MOVS     R1,#+0
   \   00000156   8C46               MOV      R12,R1
   \   00000158   3E49               LDR      R1,??Host_WiFi_Paint_0+0x2C  ;; 0x951
   \   0000015A   2868               LDR      R0,[R5, #+0]
   \   0000015C   6043               MULS     R0,R4,R0
   \   0000015E   3018               ADDS     R0,R6,R0
   \   00000160   4018               ADDS     R0,R0,R1
   \   00000162   6146               MOV      R1,R12
   \   00000164   ........           BL       Label
   \   00000168   06B0               ADD      SP,SP,#+24
  10596                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   0000016A   82B0               SUB      SP,SP,#+8
   \   0000016C   0020               MOVS     R0,#+0
   \   0000016E   0090               STR      R0,[SP, #+0]
   \   00000170   7F21               MOVS     R1,#+127
   \   00000172   0120               MOVS     R0,#+1
   \   00000174   03B4               PUSH     {R0,R1}
   \   00000176   3B21               MOVS     R1,#+59
   \   00000178   1920               MOVS     R0,#+25
   \   0000017A   03B4               PUSH     {R0,R1}
   \   0000017C   1023               MOVS     R3,#+16
   \   0000017E   0222               MOVS     R2,#+2
   \   00000180   0021               MOVS     R1,#+0
   \   00000182   3348               LDR      R0,??Host_WiFi_Paint_0+0x28  ;; `?<Constant "Host">` + 60
   \   00000184   ........           BL       Label
   \   00000188   06B0               ADD      SP,SP,#+24
  10597                    Label(NET.WiFi.Path,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   0000018A   82B0               SUB      SP,SP,#+8
   \   0000018C   0020               MOVS     R0,#+0
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   7F21               MOVS     R1,#+127
   \   00000192   0120               MOVS     R0,#+1
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   3B21               MOVS     R1,#+59
   \   00000198   0F20               MOVS     R0,#+15
   \   0000019A   03B4               PUSH     {R0,R1}
   \   0000019C   1223               MOVS     R3,#+18
   \   0000019E   0222               MOVS     R2,#+2
   \   000001A0   0021               MOVS     R1,#+0
   \   000001A2   3800               MOVS     R0,R7
   \   000001A4   DB30               ADDS     R0,R0,#+219
   \   000001A6   ........           BL       Label
   \   000001AA   06B0               ADD      SP,SP,#+24
  10598                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000001AC   82B0               SUB      SP,SP,#+8
   \   000001AE   0D20               MOVS     R0,#+13
   \   000001B0   0090               STR      R0,[SP, #+0]
   \   000001B2   2223               MOVS     R3,#+34
   \   000001B4   0322               MOVS     R2,#+3
   \   000001B6   0F21               MOVS     R1,#+15
   \   000001B8   2348               LDR      R0,??Host_WiFi_Paint_0+0x20  ;; 0x915
   \   000001BA   2D68               LDR      R5,[R5, #+0]
   \   000001BC   6543               MULS     R5,R4,R5
   \   000001BE   7419               ADDS     R4,R6,R5
   \   000001C0   2018               ADDS     R0,R4,R0
   \   000001C2   ........           BL       Button
   \   000001C6   02B0               ADD      SP,SP,#+8
  10599                    
  10600                    Button("?",36,112,11,13);
   \   000001C8   82B0               SUB      SP,SP,#+8
   \   000001CA   0D20               MOVS     R0,#+13
   \   000001CC   0090               STR      R0,[SP, #+0]
   \   000001CE   0B23               MOVS     R3,#+11
   \   000001D0   7022               MOVS     R2,#+112
   \   000001D2   2421               MOVS     R1,#+36
   \   000001D4   20A0               ADR      R0,??Host_WiFi_Paint_0+0x30  ;; 0x3F, 0x00, 0x00, 0x00
   \   000001D6   ........           BL       Button
   \   000001DA   02B0               ADD      SP,SP,#+8
  10601                    
  10602                    
  10603                    if (WiFiReConnect)
   \   000001DC   1F4A               LDR      R2,??Host_WiFi_Paint_0+0x34  ;; WiFiReConnect
   \   000001DE   1078               LDRB     R0,[R2, #+0]
   \   000001E0   0028               CMP      R0,#+0
   \   000001E2   1DD0               BEQ      ??Host_WiFi_Paint_1
  10604                    {
  10605                      NET.Status.FreezTime=g_counter+FREEZ_TIME;
   \   000001E4   1E48               LDR      R0,??Host_WiFi_Paint_0+0x38  ;; g_counter
   \   000001E6   03C8               LDM      R0!,{R0,R1}
   \   000001E8   0023               MOVS     R3,#+0
   \   000001EA   3230               ADDS     R0,R0,#+50
   \   000001EC   5941               ADCS     R1,R1,R3
   \   000001EE   3864               STR      R0,[R7, #+64]
   \   000001F0   7964               STR      R1,[R7, #+68]
  10606                       NET.Status.HostLink=DISCONNECTED;
   \   000001F2   1800               MOVS     R0,R3
  10607                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   000001F4   3880               STRH     R0,[R7, #+0]
  10608                       for (char i=0; i<15; i++)NET.Status.DomenaIP[i]=0;
   \   000001F6   1C00               MOVS     R4,R3
   \   000001F8   04E0               B        ??Host_WiFi_Paint_2
   \                     ??Host_WiFi_Paint_3:
   \   000001FA   7918               ADDS     R1,R7,R1
   \   000001FC   8C71               STRB     R4,[R1, #+6]
   \   000001FE   401C               ADDS     R0,R0,#+1
   \   00000200   0006               LSLS     R0,R0,#+24
   \   00000202   000E               LSRS     R0,R0,#+24
   \                     ??Host_WiFi_Paint_2:
   \   00000204   0100               MOVS     R1,R0
   \   00000206   0F29               CMP      R1,#+15
   \   00000208   F7D3               BCC      ??Host_WiFi_Paint_3
  10609                       NET.Status.Timeout=0;
   \   0000020A   1800               MOVS     R0,R3
   \   0000020C   0100               MOVS     R1,R0
   \   0000020E   3C00               MOVS     R4,R7
   \   00000210   3834               ADDS     R4,R4,#+56
   \   00000212   03C4               STM      R4!,{R0,R1}
  10610                       NET.Status.HttpNextQueryTime=0;
   \   00000214   3C00               MOVS     R4,R7
   \   00000216   3034               ADDS     R4,R4,#+48
   \   00000218   03C4               STM      R4!,{R0,R1}
  10611                       NET.Status.FreezTime=0;    
   \   0000021A   4037               ADDS     R7,R7,#+64
   \   0000021C   03C7               STM      R7!,{R0,R1}
  10612                      
  10613                      WiFiReConnect=0;
   \   0000021E   1370               STRB     R3,[R2, #+0]
  10614                    }
  10615                    
  10616                    
  10617                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??Host_WiFi_Paint_1:
   \   00000220   F8BC               POP      {R3-R7}
   \   00000222   01BC               POP      {R0}
   \   00000224   0047               BX       R0               ;; return
   \   00000226   C046               Nop      
   \                     ??Host_WiFi_Paint_0:
   \   00000228   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000022C   ........           DC32     `?<Constant "Host">`
   \   00000230   7D0A0000           DC32     0xa7d
   \   00000234   ........           DC32     g_leng
   \   00000238   ........           DC32     Speech
   \   0000023C   33090000           DC32     0x933
   \   00000240   ........           DC32     `?<Constant "Host">` + 24
   \   00000244   ........           DC32     NET
   \   00000248   15090000           DC32     0x915
   \   0000024C   42090000           DC32     0x942
   \   00000250   ........           DC32     `?<Constant "Host">` + 60
   \   00000254   51090000           DC32     0x951
   \   00000258   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   0000025C   ........           DC32     WiFiReConnect
   \   00000260   ........           DC32     g_counter
  10618          
  10619          
  10620             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10621                void  Host_WiFi_Event(void)
  10622                {
   \                     Host_WiFi_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
  10623                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   5B4C               LDR      R4,??Host_WiFi_Event_0  ;; Y_up
   \   00000004   5B4D               LDR      R5,??Host_WiFi_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   5948               LDR      R0,??Host_WiFi_Event_0+0x8  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   215E               LDRSH    R1,[R4, R0]
   \   0000001C   5748               LDR      R0,??Host_WiFi_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   21D5               BPL      ??Host_WiFi_Event_1
  10624                  {
  10625                    //zapis do flash
  10626                            unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0400               MOVS     R4,R0
  10627                            __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
  10628                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Domena)), (char*) (&(NET.WiFi.Domena)),15);
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   524D               LDR      R5,??Host_WiFi_Event_0+0x10  ;; NET
   \   00000038   0F22               MOVS     R2,#+15
   \   0000003A   2900               MOVS     R1,R5
   \   0000003C   BD31               ADDS     R1,R1,#+189
   \   0000003E   5148               LDR      R0,??Host_WiFi_Event_0+0x14  ;; 0x13d925
   \   00000040   ........           BL       FlashWrite
  10629                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Subdomena)), (char*) (&(NET.WiFi.Subdomena)), 15);
   \   00000044   0F22               MOVS     R2,#+15
   \   00000046   2900               MOVS     R1,R5
   \   00000048   CC31               ADDS     R1,R1,#+204
   \   0000004A   4F48               LDR      R0,??Host_WiFi_Event_0+0x18  ;; 0x13d934
   \   0000004C   ........           BL       FlashWrite
  10630                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Path)), (char*) (&(NET.WiFi.Path)), 15);
   \   00000050   0F22               MOVS     R2,#+15
   \   00000052   DB35               ADDS     R5,R5,#+219
   \   00000054   2900               MOVS     R1,R5
   \   00000056   4D48               LDR      R0,??Host_WiFi_Event_0+0x1C  ;; 0x13d943
   \   00000058   ........           BL       FlashWrite
  10631                            __set_interrupt_state(Save);
   \   0000005C   2000               MOVS     R0,R4
   \   0000005E   ........           BL       __iar_set_interrupt_state
  10632                     //koniec zapisu do flash
  10633                    
  10634                       
  10635                           
  10636                            
  10637                    MenuLevel=(MenuLevel/10);
   \   00000062   4B4F               LDR      R7,??Host_WiFi_Event_0+0x20  ;; TextToChangeLength
   \   00000064   386D               LDR      R0,[R7, #+80]
   \   00000066   0A21               MOVS     R1,#+10
   \   00000068   ........           BL       __aeabi_idivmod
   \   0000006C   3865               STR      R0,[R7, #+80]
   \   0000006E   79E0               B        ??Host_WiFi_Event_2
  10638                    
  10639                     
  10640                    
  10641                  } 
  10642                   else if ((Y_down<112) || (Y_up<112))
   \                     ??Host_WiFi_Event_1:
   \   00000070   0020               MOVS     R0,#+0
   \   00000072   285E               LDRSH    R0,[R5, R0]
   \   00000074   7028               CMP      R0,#+112
   \   00000076   03DB               BLT      ??Host_WiFi_Event_3
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   205E               LDRSH    R0,[R4, R0]
   \   0000007C   7028               CMP      R0,#+112
   \   0000007E   71DA               BGE      ??Host_WiFi_Event_2
  10643                  {
  10644                      char pY=72; 
  10645                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??Host_WiFi_Event_3:
   \   00000080   444C               LDR      R4,??Host_WiFi_Event_0+0x24  ;; 0xa7d
   \   00000082   454D               LDR      R5,??Host_WiFi_Event_0+0x28  ;; g_leng
   \   00000084   454E               LDR      R6,??Host_WiFi_Event_0+0x2C  ;; Speech
   \   00000086   82B0               SUB      SP,SP,#+8
   \   00000088   0D20               MOVS     R0,#+13
   \   0000008A   0090               STR      R0,[SP, #+0]
   \   0000008C   2223               MOVS     R3,#+34
   \   0000008E   4922               MOVS     R2,#+73
   \   00000090   0F21               MOVS     R1,#+15
   \   00000092   4348               LDR      R0,??Host_WiFi_Event_0+0x30  ;; 0x915
   \   00000094   2F68               LDR      R7,[R5, #+0]
   \   00000096   6743               MULS     R7,R4,R7
   \   00000098   F719               ADDS     R7,R6,R7
   \   0000009A   3818               ADDS     R0,R7,R0
   \   0000009C   ........           BL       Button
   \   000000A0   02B0               ADD      SP,SP,#+8
   \   000000A2   0128               CMP      R0,#+1
   \   000000A4   0ED1               BNE      ??Host_WiFi_Event_4
  10646                      {
  10647                        TextToChange=NET.WiFi.Domena;
   \   000000A6   3A4F               LDR      R7,??Host_WiFi_Event_0+0x20  ;; TextToChangeLength
   \   000000A8   3E48               LDR      R0,??Host_WiFi_Event_0+0x34  ;; NET + 189
   \   000000AA   B865               STR      R0,[R7, #+88]
  10648                        TextToChangeLength=15;
   \   000000AC   0F20               MOVS     R0,#+15
   \   000000AE   3870               STRB     R0,[R7, #+0]
  10649                        TextToChangeMaxPixSize=100;
   \   000000B0   6420               MOVS     R0,#+100
   \   000000B2   7870               STRB     R0,[R7, #+1]
  10650                        MenuLevel=(MenuLevel*10+1);
   \   000000B4   386D               LDR      R0,[R7, #+80]
   \   000000B6   0A21               MOVS     R1,#+10
   \   000000B8   4843               MULS     R0,R1,R0
   \   000000BA   401C               ADDS     R0,R0,#+1
   \   000000BC   3865               STR      R0,[R7, #+80]
  10651                        WiFiReConnect=1;
   \   000000BE   3A48               LDR      R0,??Host_WiFi_Event_0+0x38  ;; WiFiReConnect
   \   000000C0   0121               MOVS     R1,#+1
   \   000000C2   0170               STRB     R1,[R0, #+0]
  10652                      }
  10653                      pY=37; 
  10654                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??Host_WiFi_Event_4:
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   0D20               MOVS     R0,#+13
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   2223               MOVS     R3,#+34
   \   000000CC   2622               MOVS     R2,#+38
   \   000000CE   0F21               MOVS     R1,#+15
   \   000000D0   3348               LDR      R0,??Host_WiFi_Event_0+0x30  ;; 0x915
   \   000000D2   2F68               LDR      R7,[R5, #+0]
   \   000000D4   6743               MULS     R7,R4,R7
   \   000000D6   F719               ADDS     R7,R6,R7
   \   000000D8   3818               ADDS     R0,R7,R0
   \   000000DA   ........           BL       Button
   \   000000DE   02B0               ADD      SP,SP,#+8
   \   000000E0   0128               CMP      R0,#+1
   \   000000E2   0ED1               BNE      ??Host_WiFi_Event_5
  10655                      {
  10656                        TextToChange=NET.WiFi.Subdomena;
   \   000000E4   2A4F               LDR      R7,??Host_WiFi_Event_0+0x20  ;; TextToChangeLength
   \   000000E6   3148               LDR      R0,??Host_WiFi_Event_0+0x3C  ;; NET + 204
   \   000000E8   B865               STR      R0,[R7, #+88]
  10657                        TextToChangeLength=15;
   \   000000EA   0F20               MOVS     R0,#+15
   \   000000EC   3870               STRB     R0,[R7, #+0]
  10658                        TextToChangeMaxPixSize=100;
   \   000000EE   6420               MOVS     R0,#+100
   \   000000F0   7870               STRB     R0,[R7, #+1]
  10659                        MenuLevel=(MenuLevel*10+1);
   \   000000F2   386D               LDR      R0,[R7, #+80]
   \   000000F4   0A21               MOVS     R1,#+10
   \   000000F6   4843               MULS     R0,R1,R0
   \   000000F8   401C               ADDS     R0,R0,#+1
   \   000000FA   3865               STR      R0,[R7, #+80]
  10660                        WiFiReConnect=1;
   \   000000FC   2A48               LDR      R0,??Host_WiFi_Event_0+0x38  ;; WiFiReConnect
   \   000000FE   0121               MOVS     R1,#+1
   \   00000100   0170               STRB     R1,[R0, #+0]
  10661                      }
  10662                      pY=2; 
  10663                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??Host_WiFi_Event_5:
   \   00000102   82B0               SUB      SP,SP,#+8
   \   00000104   0D20               MOVS     R0,#+13
   \   00000106   0090               STR      R0,[SP, #+0]
   \   00000108   2223               MOVS     R3,#+34
   \   0000010A   0322               MOVS     R2,#+3
   \   0000010C   0F21               MOVS     R1,#+15
   \   0000010E   2448               LDR      R0,??Host_WiFi_Event_0+0x30  ;; 0x915
   \   00000110   2F68               LDR      R7,[R5, #+0]
   \   00000112   6743               MULS     R7,R4,R7
   \   00000114   F419               ADDS     R4,R6,R7
   \   00000116   2018               ADDS     R0,R4,R0
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   0128               CMP      R0,#+1
   \   00000120   0ED1               BNE      ??Host_WiFi_Event_6
  10664                      {
  10665                        TextToChange=NET.WiFi.Path;
   \   00000122   1B4F               LDR      R7,??Host_WiFi_Event_0+0x20  ;; TextToChangeLength
   \   00000124   2248               LDR      R0,??Host_WiFi_Event_0+0x40  ;; NET + 219
   \   00000126   B865               STR      R0,[R7, #+88]
  10666                        TextToChangeLength=15;
   \   00000128   0F20               MOVS     R0,#+15
   \   0000012A   3870               STRB     R0,[R7, #+0]
  10667                        TextToChangeMaxPixSize=100;
   \   0000012C   6420               MOVS     R0,#+100
   \   0000012E   7870               STRB     R0,[R7, #+1]
  10668                        MenuLevel=(MenuLevel*10+1);
   \   00000130   386D               LDR      R0,[R7, #+80]
   \   00000132   0A21               MOVS     R1,#+10
   \   00000134   4843               MULS     R0,R1,R0
   \   00000136   401C               ADDS     R0,R0,#+1
   \   00000138   3865               STR      R0,[R7, #+80]
  10669                        WiFiReConnect=1;
   \   0000013A   1B48               LDR      R0,??Host_WiFi_Event_0+0x38  ;; WiFiReConnect
   \   0000013C   0121               MOVS     R1,#+1
   \   0000013E   0170               STRB     R1,[R0, #+0]
  10670                        
  10671                      }
  10672                      
  10673                      
  10674                      
  10675                      
  10676                      if (Button("?",36,112,11,13)==1) 
   \                     ??Host_WiFi_Event_6:
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0D20               MOVS     R0,#+13
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   0B23               MOVS     R3,#+11
   \   00000148   7022               MOVS     R2,#+112
   \   0000014A   2421               MOVS     R1,#+36
   \   0000014C   19A0               ADR      R0,??Host_WiFi_Event_0+0x44  ;; 0x3F, 0x00, 0x00, 0x00
   \   0000014E   ........           BL       Button
   \   00000152   02B0               ADD      SP,SP,#+8
   \   00000154   0128               CMP      R0,#+1
   \   00000156   05D1               BNE      ??Host_WiFi_Event_2
  10677                       {
  10678                         if (g_leng==0)
   \   00000158   2868               LDR      R0,[R5, #+0]
   \   0000015A   0028               CMP      R0,#+0
   \   0000015C   02D1               BNE      ??Host_WiFi_Event_2
  10679                         {
  10680                           MESSAGE(Komentarz1_PL); 
   \   0000015E   1648               LDR      R0,??Host_WiFi_Event_0+0x48  ;; `?<Constant "Przyklad:\\n   a.bbb.pl...">`
   \   00000160   ........           BL       MESSAGE
  10681                         }else{
  10682                          // MESSAGE(Komentarz1_En); 
  10683                         }
  10684                       }
  10685                      
  10686                    
  10687                  }
  10688                   MenuPaint();
   \                     ??Host_WiFi_Event_2:
   \   00000164   ........           BL       MenuPaint
  10689                    
  10690                
  10691                }//_______________________________________________________________________
   \   00000168   F8BC               POP      {R3-R7}
   \   0000016A   01BC               POP      {R0}
   \   0000016C   0047               BX       R0               ;; return
   \   0000016E   C046               Nop      
   \                     ??Host_WiFi_Event_0:
   \   00000170   ........           DC32     Y_up
   \   00000174   ........           DC32     Y_down
   \   00000178   ........           DC32     X_down
   \   0000017C   ........           DC32     X_up
   \   00000180   ........           DC32     NET
   \   00000184   25D91300           DC32     0x13d925
   \   00000188   34D91300           DC32     0x13d934
   \   0000018C   43D91300           DC32     0x13d943
   \   00000190   ........           DC32     TextToChangeLength
   \   00000194   7D0A0000           DC32     0xa7d
   \   00000198   ........           DC32     g_leng
   \   0000019C   ........           DC32     Speech
   \   000001A0   15090000           DC32     0x915
   \   000001A4   ........           DC32     NET + 189
   \   000001A8   ........           DC32     WiFiReConnect
   \   000001AC   ........           DC32     NET + 204
   \   000001B0   ........           DC32     NET + 219
   \   000001B4   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   000001B8   ........           DC32     `?<Constant "Przyklad:\\n   a.bbb.pl...">`
  10692              
  10693               
  10694                
  10695                
  10696           
  10697                                                   
  10698          
  10699                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10700                void NetPeriodicity_Paint(void)
  10701                {
   \                     NetPeriodicity_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
  10702            
  10703                      List_Paint(Speech[g_leng].Okresowosc,1,65,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   34A0               ADR      R0,??NetPeriodicity_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   4122               MOVS     R2,#+65
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   3148               LDR      R0,??NetPeriodicity_Paint_0+0x4  ;; 0x97e
   \   0000001E   324C               LDR      R4,??NetPeriodicity_Paint_0+0x8  ;; g_leng
   \   00000020   2468               LDR      R4,[R4, #+0]
   \   00000022   324D               LDR      R5,??NetPeriodicity_Paint_0+0xC  ;; 0xa7d
   \   00000024   6C43               MULS     R4,R5,R4
   \   00000026   324D               LDR      R5,??NetPeriodicity_Paint_0+0x10  ;; Speech
   \   00000028   2C19               ADDS     R4,R5,R4
   \   0000002A   2018               ADDS     R0,R4,R0
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
  10704                      
  10705                      char txt[9];
  10706                      char liter=sprintf(txt, "%d", NET.WiFi.HttpQueryPeriod*100);
                                        ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   00000032   EE20               MOVS     R0,#+238
   \   00000034   2F49               LDR      R1,??NetPeriodicity_Paint_0+0x14  ;; NET
   \   00000036   0A5E               LDRSH    R2,[R1, R0]
   \   00000038   6420               MOVS     R0,#+100
   \   0000003A   4243               MULS     R2,R0,R2
   \   0000003C   2EA1               ADR      R1,??NetPeriodicity_Paint_0+0x18  ;; 0x25, 0x64, 0x00, 0x00
   \   0000003E   6846               MOV      R0,SP
   \   00000040   ........           BL       sprintf
   \   00000044   0200               MOVS     R2,R0
   \   00000046   1206               LSLS     R2,R2,#+24
   \   00000048   120E               LSRS     R2,R2,#+24
  10707                      txt[liter++]=' ';
   \   0000004A   6C46               MOV      R4,SP
   \   0000004C   1000               MOVS     R0,R2
   \   0000004E   2021               MOVS     R1,#+32
   \   00000050   2154               STRB     R1,[R4, R0]
   \   00000052   521C               ADDS     R2,R2,#+1
   \   00000054   1206               LSLS     R2,R2,#+24
   \   00000056   120E               LSRS     R2,R2,#+24
  10708                      txt[liter++]='m';
   \   00000058   1000               MOVS     R0,R2
   \   0000005A   6D21               MOVS     R1,#+109
   \   0000005C   2154               STRB     R1,[R4, R0]
   \   0000005E   521C               ADDS     R2,R2,#+1
   \   00000060   1206               LSLS     R2,R2,#+24
   \   00000062   120E               LSRS     R2,R2,#+24
  10709                      txt[liter++]='s';
   \   00000064   1000               MOVS     R0,R2
   \   00000066   7321               MOVS     R1,#+115
   \   00000068   2154               STRB     R1,[R4, R0]
  10710                      Label(txt,0,13,92,liter,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   0020               MOVS     R0,#+0
   \   0000006E   0090               STR      R0,[SP, #+0]
   \   00000070   7F21               MOVS     R1,#+127
   \   00000072   0120               MOVS     R0,#+1
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   2821               MOVS     R1,#+40
   \   00000078   521C               ADDS     R2,R2,#+1
   \   0000007A   1000               MOVS     R0,R2
   \   0000007C   0006               LSLS     R0,R0,#+24
   \   0000007E   000E               LSRS     R0,R0,#+24
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   5C23               MOVS     R3,#+92
   \   00000084   0D22               MOVS     R2,#+13
   \   00000086   0021               MOVS     R1,#+0
   \   00000088   06A8               ADD      R0,SP,#+24
   \   0000008A   ........           BL       Label
   \   0000008E   06B0               ADD      SP,SP,#+24
  10711                          
  10712                      
  10713                      txt[1]=0;
   \   00000090   0020               MOVS     R0,#+0
   \   00000092   6070               STRB     R0,[R4, #+1]
  10714                      txt[0]=31;
   \   00000094   1F20               MOVS     R0,#+31
   \   00000096   2070               STRB     R0,[R4, #+0]
  10715                      Button(txt,12,68,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   1220               MOVS     R0,#+18
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   1423               MOVS     R3,#+20
   \   000000A0   4422               MOVS     R2,#+68
   \   000000A2   0C21               MOVS     R1,#+12
   \   000000A4   02A8               ADD      R0,SP,#+8
   \   000000A6   ........           BL       Button
   \   000000AA   02B0               ADD      SP,SP,#+8
  10716                      txt[0]=30;
   \   000000AC   1E20               MOVS     R0,#+30
   \   000000AE   2070               STRB     R0,[R4, #+0]
  10717                      Button(txt,32,68,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   1220               MOVS     R0,#+18
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   1423               MOVS     R3,#+20
   \   000000B8   4422               MOVS     R2,#+68
   \   000000BA   2021               MOVS     R1,#+32
   \   000000BC   02A8               ADD      R0,SP,#+8
   \   000000BE   ........           BL       Button
   \   000000C2   02B0               ADD      SP,SP,#+8
  10718                      
  10719                      Button("?",50,90,11,13);
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   0D20               MOVS     R0,#+13
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   0B23               MOVS     R3,#+11
   \   000000CC   5A22               MOVS     R2,#+90
   \   000000CE   3221               MOVS     R1,#+50
   \   000000D0   0AA0               ADR      R0,??NetPeriodicity_Paint_0+0x1C  ;; 0x3F, 0x00, 0x00, 0x00
   \   000000D2   ........           BL       Button
   \   000000D6   02B0               ADD      SP,SP,#+8
  10720                      
  10721                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   000000D8   3EBC               POP      {R1-R5}
   \   000000DA   01BC               POP      {R0}
   \   000000DC   0047               BX       R0               ;; return
   \   000000DE   C046               Nop      
   \                     ??NetPeriodicity_Paint_0:
   \   000000E0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000E4   7E090000           DC32     0x97e
   \   000000E8   ........           DC32     g_leng
   \   000000EC   7D0A0000           DC32     0xa7d
   \   000000F0   ........           DC32     Speech
   \   000000F4   ........           DC32     NET
   \   000000F8   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000000FC   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
  10722           
  10723                
  10724                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10725                void NetPeriodicity_Event(void)
  10726                {
   \                     NetPeriodicity_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
  10727                  
  10728                       int ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   3E48               LDR      R0,??NetPeriodicity_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   3E48               LDR      R0,??NetPeriodicity_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   3E48               LDR      R0,??NetPeriodicity_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   3E48               LDR      R0,??NetPeriodicity_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   \   00000026   0400               MOVS     R4,R0
  10729                        
  10730                      char bt=0; 
   \   00000028   0025               MOVS     R5,#+0
   \   0000002A   2E00               MOVS     R6,R5
  10731                      
  10732                      char LabelButt[2];  
  10733                      LabelButt[1]=0;
   \   0000002C   6F46               MOV      R7,SP
   \   0000002E   2800               MOVS     R0,R5
   \   00000030   7870               STRB     R0,[R7, #+1]
  10734                      LabelButt[0]=31;
   \   00000032   1F20               MOVS     R0,#+31
   \   00000034   3870               STRB     R0,[R7, #+0]
  10735                      if (Button(LabelButt,12,68,20,18)==1) bt=1; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000036   82B0               SUB      SP,SP,#+8
   \   00000038   1220               MOVS     R0,#+18
   \   0000003A   0090               STR      R0,[SP, #+0]
   \   0000003C   1423               MOVS     R3,#+20
   \   0000003E   4422               MOVS     R2,#+68
   \   00000040   0C21               MOVS     R1,#+12
   \   00000042   02A8               ADD      R0,SP,#+8
   \   00000044   ........           BL       Button
   \   00000048   02B0               ADD      SP,SP,#+8
   \   0000004A   0128               CMP      R0,#+1
   \   0000004C   00D1               BNE      ??NetPeriodicity_Event_1
   \   0000004E   0126               MOVS     R6,#+1
  10736                      LabelButt[0]=30;
   \                     ??NetPeriodicity_Event_1:
   \   00000050   1E20               MOVS     R0,#+30
   \   00000052   3870               STRB     R0,[R7, #+0]
  10737                      if (Button(LabelButt,32,68,20,18)==1) bt=2; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000054   82B0               SUB      SP,SP,#+8
   \   00000056   1220               MOVS     R0,#+18
   \   00000058   0090               STR      R0,[SP, #+0]
   \   0000005A   1423               MOVS     R3,#+20
   \   0000005C   4422               MOVS     R2,#+68
   \   0000005E   2021               MOVS     R1,#+32
   \   00000060   02A8               ADD      R0,SP,#+8
   \   00000062   ........           BL       Button
   \   00000066   02B0               ADD      SP,SP,#+8
   \   00000068   0128               CMP      R0,#+1
   \   0000006A   00D1               BNE      ??NetPeriodicity_Event_2
   \   0000006C   0226               MOVS     R6,#+2
  10738                        
  10739                        
  10740                      if ((bt==1) && (NET.WiFi.HttpQueryPeriod>3)) NET.WiFi.HttpQueryPeriod--;
   \                     ??NetPeriodicity_Event_2:
   \   0000006E   3000               MOVS     R0,R6
   \   00000070   0128               CMP      R0,#+1
   \   00000072   06D1               BNE      ??NetPeriodicity_Event_3
   \   00000074   2848               LDR      R0,??NetPeriodicity_Event_0+0x10  ;; NET + 238
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   415E               LDRSH    R1,[R0, R1]
   \   0000007A   0429               CMP      R1,#+4
   \   0000007C   01DB               BLT      ??NetPeriodicity_Event_3
   \   0000007E   491E               SUBS     R1,R1,#+1
   \   00000080   0180               STRH     R1,[R0, #+0]
  10741                      if ((bt==2) && (NET.WiFi.HttpQueryPeriod<51)) NET.WiFi.HttpQueryPeriod++;
   \                     ??NetPeriodicity_Event_3:
   \   00000082   3000               MOVS     R0,R6
   \   00000084   0228               CMP      R0,#+2
   \   00000086   06D1               BNE      ??NetPeriodicity_Event_4
   \   00000088   2348               LDR      R0,??NetPeriodicity_Event_0+0x10  ;; NET + 238
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   415E               LDRSH    R1,[R0, R1]
   \   0000008E   3329               CMP      R1,#+51
   \   00000090   01DA               BGE      ??NetPeriodicity_Event_4
   \   00000092   491C               ADDS     R1,R1,#+1
   \   00000094   0180               STRH     R1,[R0, #+0]
  10742                      
  10743                       if (bt>0)
   \                     ??NetPeriodicity_Event_4:
   \   00000096   002E               CMP      R6,#+0
   \   00000098   01D0               BEQ      ??NetPeriodicity_Event_5
  10744                       {
  10745                           
  10746                         MenuPaint();
   \   0000009A   ........           BL       MenuPaint
  10747                       }
  10748                       
  10749                       if (Button("?",50,90,11,13)==1) 
   \                     ??NetPeriodicity_Event_5:
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   0D20               MOVS     R0,#+13
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   0B23               MOVS     R3,#+11
   \   000000A6   5A22               MOVS     R2,#+90
   \   000000A8   3221               MOVS     R1,#+50
   \   000000AA   1CA0               ADR      R0,??NetPeriodicity_Event_0+0x14  ;; 0x3F, 0x00, 0x00, 0x00
   \   000000AC   ........           BL       Button
   \   000000B0   02B0               ADD      SP,SP,#+8
   \   000000B2   0128               CMP      R0,#+1
   \   000000B4   0AD1               BNE      ??NetPeriodicity_Event_6
  10750                       {
  10751                         if (g_leng==0)
   \   000000B6   1A48               LDR      R0,??NetPeriodicity_Event_0+0x18  ;; g_leng
   \   000000B8   0068               LDR      R0,[R0, #+0]
   \   000000BA   0028               CMP      R0,#+0
   \   000000BC   03D1               BNE      ??NetPeriodicity_Event_7
  10752                         {
  10753                           MESSAGE(Komentarz0_PL); 
   \   000000BE   1948               LDR      R0,??NetPeriodicity_Event_0+0x1C  ;; `?<Constant "Ustaw okresowosc pola...">`
   \   000000C0   ........           BL       MESSAGE
   \   000000C4   02E0               B        ??NetPeriodicity_Event_6
  10754                         }else{
  10755                           MESSAGE(Komentarz0_En); 
   \                     ??NetPeriodicity_Event_7:
   \   000000C6   1848               LDR      R0,??NetPeriodicity_Event_0+0x20  ;; `?<Constant "Ustaw okresowosc pola...">` + 40
   \   000000C8   ........           BL       MESSAGE
  10756                         }
  10757                       }
  10758                       
  10759                      if (ans<0) {
   \                     ??NetPeriodicity_Event_6:
   \   000000CC   002C               CMP      R4,#+0
   \   000000CE   17D5               BPL      ??NetPeriodicity_Event_8
  10760                              //zapis do flash
  10761                              unsigned int Save = __get_interrupt_state();                            
   \   000000D0   ........           BL       __iar_get_interrupt_state
   \   000000D4   0400               MOVS     R4,R0
  10762                              __disable_interrupt();
   \   000000D6   ........           BL       __iar_disable_interrupt
  10763                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.HttpQueryPeriod)), (char*) (&(NET.WiFi.HttpQueryPeriod)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000DA   0122               MOVS     R2,#+1
   \   000000DC   0E49               LDR      R1,??NetPeriodicity_Event_0+0x10  ;; NET + 238
   \   000000DE   1348               LDR      R0,??NetPeriodicity_Event_0+0x24  ;; 0x13d956
   \   000000E0   ........           BL       FlashWrite
  10764                              __set_interrupt_state(Save);
   \   000000E4   2000               MOVS     R0,R4
   \   000000E6   ........           BL       __iar_set_interrupt_state
  10765                              __enable_interrupt();
   \   000000EA   ........           BL       __iar_enable_interrupt
  10766                              //koniec zapisu do flash
  10767                              
  10768                              MenuLevel=(MenuLevel/10);
   \   000000EE   104C               LDR      R4,??NetPeriodicity_Event_0+0x28  ;; TextToChangeLength
   \   000000F0   206D               LDR      R0,[R4, #+80]
   \   000000F2   0A21               MOVS     R1,#+10
   \   000000F4   ........           BL       __aeabi_idivmod
   \   000000F8   2065               STR      R0,[R4, #+80]
  10769                              CurModifSheet=0; 
   \   000000FA   6571               STRB     R5,[R4, #+5]
  10770                              MenuPaint();
   \   000000FC   ........           BL       MenuPaint
  10771                            }
  10772                     
  10773                }//_______________________________________________________________________
   \                     ??NetPeriodicity_Event_8:
   \   00000100   F8BC               POP      {R3-R7}
   \   00000102   01BC               POP      {R0}
   \   00000104   0047               BX       R0               ;; return
   \   00000106   C046               Nop      
   \                     ??NetPeriodicity_Event_0:
   \   00000108   ........           DC32     Y_down
   \   0000010C   ........           DC32     X_down
   \   00000110   ........           DC32     Y_up
   \   00000114   ........           DC32     X_up
   \   00000118   ........           DC32     NET + 238
   \   0000011C   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   00000120   ........           DC32     g_leng
   \   00000124   ........           DC32     `?<Constant "Ustaw okresowosc pola...">`
   \   00000128   ........           DC32     `?<Constant "Ustaw okresowosc pola...">` + 40
   \   0000012C   56D91300           DC32     0x13d956
   \   00000130   ........           DC32     TextToChangeLength
  10774                
  10775                
  10776                
  10777              //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10778                void IpTCP_Paint(void)
  10779                {
   \                     IpTCP_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  10780                   if (NET.WiFi.IpNotAuto==1)
   \   00000002   2348               LDR      R0,??IpTCP_Paint_0  ;; NET + 81
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   1CD1               BNE      ??IpTCP_Paint_1
  10781                   {
  10782                      List_Paint(Speech[g_leng].Siec,2,15,0,0,3, "Auto IP -on", "IP config" , 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000000A   224A               LDR      R2,??IpTCP_Paint_0+0x4  ;; `?<Constant "Auto IP -on">`
   \   0000000C   82B0               SUB      SP,SP,#+8
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   0090               STR      R0,[SP, #+0]
   \   00000012   0100               MOVS     R1,R0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   1100               MOVS     R1,R2
   \   0000001A   0C31               ADDS     R1,R1,#+12
   \   0000001C   1000               MOVS     R0,R2
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0321               MOVS     R1,#+3
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0300               MOVS     R3,R0
   \   00000028   0F22               MOVS     R2,#+15
   \   0000002A   0221               MOVS     R1,#+2
   \   0000002C   1A48               LDR      R0,??IpTCP_Paint_0+0x8  ;; 0x8ca
   \   0000002E   1B4C               LDR      R4,??IpTCP_Paint_0+0xC  ;; g_leng
   \   00000030   2468               LDR      R4,[R4, #+0]
   \   00000032   1B4D               LDR      R5,??IpTCP_Paint_0+0x10  ;; 0xa7d
   \   00000034   6C43               MULS     R4,R5,R4
   \   00000036   1B4D               LDR      R5,??IpTCP_Paint_0+0x14  ;; Speech
   \   00000038   2C19               ADDS     R4,R5,R4
   \   0000003A   2018               ADDS     R0,R4,R0
   \   0000003C   ........           BL       List_Paint
   \   00000040   0AB0               ADD      SP,SP,#+40
   \   00000042   21E0               B        ??IpTCP_Paint_2
  10783                   }else{
  10784                      List_Paint(Speech[g_leng].Siec,1,60,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \                     ??IpTCP_Paint_1:
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   0800               MOVS     R0,R1
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   16A0               ADR      R0,??IpTCP_Paint_0+0x18  ;; 0x20, 0x00, 0x00, 0x00
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0321               MOVS     R1,#+3
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   0300               MOVS     R3,R0
   \   0000005A   3C22               MOVS     R2,#+60
   \   0000005C   0121               MOVS     R1,#+1
   \   0000005E   0E48               LDR      R0,??IpTCP_Paint_0+0x8  ;; 0x8ca
   \   00000060   0E4C               LDR      R4,??IpTCP_Paint_0+0xC  ;; g_leng
   \   00000062   2468               LDR      R4,[R4, #+0]
   \   00000064   0E4D               LDR      R5,??IpTCP_Paint_0+0x10  ;; 0xa7d
   \   00000066   6C43               MULS     R4,R5,R4
   \   00000068   0E4D               LDR      R5,??IpTCP_Paint_0+0x14  ;; Speech
   \   0000006A   2C19               ADDS     R4,R5,R4
   \   0000006C   2018               ADDS     R0,R4,R0
   \   0000006E   ........           BL       List_Paint
   \   00000072   0AB0               ADD      SP,SP,#+40
  10785                      Button("Auto IP -off",2,75,60,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0D20               MOVS     R0,#+13
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   3C23               MOVS     R3,#+60
   \   0000007C   4B22               MOVS     R2,#+75
   \   0000007E   0221               MOVS     R1,#+2
   \   00000080   0A48               LDR      R0,??IpTCP_Paint_0+0x1C  ;; `?<Constant "Auto IP -on">` + 24
   \   00000082   ........           BL       Button
   \   00000086   02B0               ADD      SP,SP,#+8
  10786                   }
  10787                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??IpTCP_Paint_2:
   \   00000088   38BC               POP      {R3-R5}
   \   0000008A   01BC               POP      {R0}
   \   0000008C   0047               BX       R0               ;; return
   \   0000008E   C046               Nop      
   \                     ??IpTCP_Paint_0:
   \   00000090   ........           DC32     NET + 81
   \   00000094   ........           DC32     `?<Constant "Auto IP -on">`
   \   00000098   CA080000           DC32     0x8ca
   \   0000009C   ........           DC32     g_leng
   \   000000A0   7D0A0000           DC32     0xa7d
   \   000000A4   ........           DC32     Speech
   \   000000A8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000AC   ........           DC32     `?<Constant "Auto IP -on">` + 24
  10788          
  10789          
  10790                  
  10791                 
  10792                 
  10793                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10794                void IpTCP_Event(void)
  10795                {
   \                     IpTCP_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
  10796                  if (NET.WiFi.IpNotAuto==1)
   \   00000002   4948               LDR      R0,??IpTCP_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   455E               LDRSH    R5,[R0, R1]
   \   00000008   4848               LDR      R0,??IpTCP_Event_0+0x4  ;; Y_up
   \   0000000A   465E               LDRSH    R6,[R0, R1]
   \   0000000C   4848               LDR      R0,??IpTCP_Event_0+0x8  ;; X_down
   \   0000000E   425E               LDRSH    R2,[R0, R1]
   \   00000010   4848               LDR      R0,??IpTCP_Event_0+0xC  ;; Y_down
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   484C               LDR      R4,??IpTCP_Event_0+0x10  ;; NET
   \   00000016   5120               MOVS     R0,#+81
   \   00000018   205C               LDRB     R0,[R4, R0]
   \   0000001A   0128               CMP      R0,#+1
   \   0000001C   41D1               BNE      ??IpTCP_Event_1
  10797                   {
  10798                        int ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000001E   0800               MOVS     R0,R1
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0F21               MOVS     R1,#+15
   \   00000024   0220               MOVS     R0,#+2
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3100               MOVS     R1,R6
   \   0000002A   2800               MOVS     R0,R5
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   \   00000032   0500               MOVS     R5,R0
  10799                  
  10800                        if (ans)
   \   00000034   75D0               BEQ      ??IpTCP_Event_2
  10801                          {
  10802                          if (ans==2) MenuLevel=(MenuLevel*10+ans);
   \   00000036   022D               CMP      R5,#+2
   \   00000038   05D1               BNE      ??IpTCP_Event_3
   \   0000003A   404E               LDR      R6,??IpTCP_Event_0+0x14  ;; TextToChangeLength
   \   0000003C   306D               LDR      R0,[R6, #+80]
   \   0000003E   0A21               MOVS     R1,#+10
   \   00000040   4843               MULS     R0,R1,R0
   \   00000042   801C               ADDS     R0,R0,#+2
   \   00000044   3065               STR      R0,[R6, #+80]
  10803                          if (ans==1)   //w³¹cz auto
   \                     ??IpTCP_Event_3:
   \   00000046   012D               CMP      R5,#+1
   \   00000048   1ED1               BNE      ??IpTCP_Event_4
  10804                          {
  10805                              NET.WiFi.IpNotAuto=0; 
   \   0000004A   0026               MOVS     R6,#+0
   \   0000004C   5120               MOVS     R0,#+81
   \   0000004E   3100               MOVS     R1,R6
   \   00000050   2154               STRB     R1,[R4, R0]
  10806          
  10807                              
  10808                             //zapis do flash
  10809                              unsigned int Save = __get_interrupt_state();  
   \   00000052   ........           BL       __iar_get_interrupt_state
   \   00000056   0700               MOVS     R7,R0
  10810                              __disable_interrupt();
   \   00000058   ........           BL       __iar_disable_interrupt
  10811                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.IpNotAuto)), (char*) (&(NET.WiFi.IpNotAuto)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000005C   0122               MOVS     R2,#+1
   \   0000005E   2100               MOVS     R1,R4
   \   00000060   5131               ADDS     R1,R1,#+81
   \   00000062   3748               LDR      R0,??IpTCP_Event_0+0x18  ;; 0x13d8b9
   \   00000064   ........           BL       FlashWrite
  10812                              __set_interrupt_state(Save);
   \   00000068   3800               MOVS     R0,R7
   \   0000006A   ........           BL       __iar_set_interrupt_state
  10813                              __enable_interrupt();
   \   0000006E   ........           BL       __iar_enable_interrupt
  10814                              //koniec zapisu do flash
  10815                              
  10816                               NET.Status.FreezTime=0;
  10817                             NET.Status.HostLink=DISCONNECTED;
   \   00000072   3000               MOVS     R0,R6
  10818                             NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000074   2680               STRH     R6,[R4, #+0]
  10819                             NET.Status.Timeout=0;
   \   00000076   0100               MOVS     R1,R0
   \   00000078   2200               MOVS     R2,R4
   \   0000007A   3832               ADDS     R2,R2,#+56
   \   0000007C   03C2               STM      R2!,{R0,R1}
  10820                             NET.Status.HttpNextQueryTime=0;
   \   0000007E   2200               MOVS     R2,R4
   \   00000080   3032               ADDS     R2,R2,#+48
   \   00000082   03C2               STM      R2!,{R0,R1}
  10821                             NET.Status.FreezTime=0;
   \   00000084   4034               ADDS     R4,R4,#+64
   \   00000086   03C4               STM      R4!,{R0,R1}
  10822                            
  10823                          }
  10824                          if (ans<0) {
   \                     ??IpTCP_Event_4:
   \   00000088   002D               CMP      R5,#+0
   \   0000008A   07D5               BPL      ??IpTCP_Event_5
  10825                            MenuLevel=(MenuLevel/10);
   \   0000008C   2B4E               LDR      R6,??IpTCP_Event_0+0x14  ;; TextToChangeLength
   \   0000008E   306D               LDR      R0,[R6, #+80]
   \   00000090   0A21               MOVS     R1,#+10
   \   00000092   ........           BL       __aeabi_idivmod
   \   00000096   3065               STR      R0,[R6, #+80]
  10826                            CurModifSheet=0; 
   \   00000098   0020               MOVS     R0,#+0
   \   0000009A   7071               STRB     R0,[R6, #+5]
  10827                          }
  10828                          MenuPaint();
   \                     ??IpTCP_Event_5:
   \   0000009C   ........           BL       MenuPaint
   \   000000A0   3FE0               B        ??IpTCP_Event_2
  10829                          } 
  10830                   }else{
  10831                       int ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
  10832                        if (ans<0) {
   \                     ??IpTCP_Event_1:
   \   000000A2   0800               MOVS     R0,R1
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   0F21               MOVS     R1,#+15
   \   000000A8   03B4               PUSH     {R0,R1}
   \   000000AA   3100               MOVS     R1,R6
   \   000000AC   2800               MOVS     R0,R5
   \   000000AE   ........           BL       List_Event
   \   000000B2   04B0               ADD      SP,SP,#+16
   \   000000B4   0028               CMP      R0,#+0
   \   000000B6   07D5               BPL      ??IpTCP_Event_6
  10833                              MenuLevel=(MenuLevel/10);
   \   000000B8   204E               LDR      R6,??IpTCP_Event_0+0x14  ;; TextToChangeLength
   \   000000BA   306D               LDR      R0,[R6, #+80]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   ........           BL       __aeabi_idivmod
   \   000000C2   3065               STR      R0,[R6, #+80]
  10834                              CurModifSheet=0; 
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   7071               STRB     R0,[R6, #+5]
  10835                            }
  10836                       
  10837                     
  10838                       if (Button("Auto IP -off",2,75,60,13)==1)
   \                     ??IpTCP_Event_6:
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   0D20               MOVS     R0,#+13
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   3C23               MOVS     R3,#+60
   \   000000D0   4B22               MOVS     R2,#+75
   \   000000D2   0221               MOVS     R1,#+2
   \   000000D4   1B48               LDR      R0,??IpTCP_Event_0+0x1C  ;; `?<Constant "Auto IP -on">` + 24
   \   000000D6   ........           BL       Button
   \   000000DA   02B0               ADD      SP,SP,#+8
   \   000000DC   0128               CMP      R0,#+1
   \   000000DE   20D1               BNE      ??IpTCP_Event_2
  10839                       {
  10840                             NET.Status.FreezTime=0;
  10841                             NET.Status.HostLink=DISCONNECTED;
   \   000000E0   0026               MOVS     R6,#+0
   \   000000E2   3000               MOVS     R0,R6
  10842                             NET.Status.AccesPointAssociate=DISCONNECTED;
   \   000000E4   2680               STRH     R6,[R4, #+0]
  10843                             NET.Status.Timeout=0;
   \   000000E6   0100               MOVS     R1,R0
   \   000000E8   2200               MOVS     R2,R4
   \   000000EA   3832               ADDS     R2,R2,#+56
   \   000000EC   03C2               STM      R2!,{R0,R1}
  10844                             NET.Status.HttpNextQueryTime=0;
   \   000000EE   2200               MOVS     R2,R4
   \   000000F0   3032               ADDS     R2,R2,#+48
   \   000000F2   03C2               STM      R2!,{R0,R1}
  10845                             NET.Status.FreezTime=0;
   \   000000F4   2064               STR      R0,[R4, #+64]
   \   000000F6   6164               STR      R1,[R4, #+68]
  10846                         
  10847                             NET.WiFi.IpNotAuto=1;    //wy³¹cz auto
   \   000000F8   5120               MOVS     R0,#+81
   \   000000FA   0121               MOVS     R1,#+1
   \   000000FC   2154               STRB     R1,[R4, R0]
  10848                             //zapis do flash
  10849                              unsigned int Save = __get_interrupt_state();  
   \   000000FE   ........           BL       __iar_get_interrupt_state
   \   00000102   0500               MOVS     R5,R0
  10850                              __disable_interrupt();
   \   00000104   ........           BL       __iar_disable_interrupt
  10851                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.IpNotAuto)), (char*) (&(NET.WiFi.IpNotAuto)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000108   0A00               MOVS     R2,R1
   \   0000010A   5134               ADDS     R4,R4,#+81
   \   0000010C   2100               MOVS     R1,R4
   \   0000010E   0C48               LDR      R0,??IpTCP_Event_0+0x18  ;; 0x13d8b9
   \   00000110   ........           BL       FlashWrite
  10852                              __set_interrupt_state(Save);
   \   00000114   2800               MOVS     R0,R5
   \   00000116   ........           BL       __iar_set_interrupt_state
  10853                              __enable_interrupt();
   \   0000011A   ........           BL       __iar_enable_interrupt
  10854                              //koniec zapisu do flash
  10855                              
  10856                              
  10857                         MenuPaint();
   \   0000011E   ........           BL       MenuPaint
  10858                       }
  10859                    
  10860                   }
  10861                     
  10862                }//_______________________________________________________________________
   \                     ??IpTCP_Event_2:
   \   00000122   F8BC               POP      {R3-R7}
   \   00000124   01BC               POP      {R0}
   \   00000126   0047               BX       R0               ;; return
   \                     ??IpTCP_Event_0:
   \   00000128   ........           DC32     X_up
   \   0000012C   ........           DC32     Y_up
   \   00000130   ........           DC32     X_down
   \   00000134   ........           DC32     Y_down
   \   00000138   ........           DC32     NET
   \   0000013C   ........           DC32     TextToChangeLength
   \   00000140   B9D81300           DC32     0x13d8b9
   \   00000144   ........           DC32     `?<Constant "Auto IP -on">` + 24
  10863                
  10864                
  10865            
  10866                
  10867          //sprawdza poprawnoæ zapisu IP
  10868          //funkcja czyci wpis je¿eli nie poprawny ze standardem IP       
  10869          //0   -brak wpisu
  10870          //1   -wpis prawid³owy   
  10871          //-1   -wpis niepoprawny       

   \                                 In section Debug.txt, align 4, keep-with-next
  10872          signed char CheckIP(char *Text)
  10873          {
   \                     CheckIP:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0100               MOVS     R1,R0
  10874            signed char IpOk=1;
   \   00000004   0120               MOVS     R0,#+1
  10875            
  10876            char znak=0;
   \   00000006   0022               MOVS     R2,#+0
   \   00000008   1300               MOVS     R3,R2
  10877            
  10878            if (Text[0]==0) IpOk=0; 
   \   0000000A   0C78               LDRB     R4,[R1, #+0]
   \   0000000C   002C               CMP      R4,#+0
   \   0000000E   0DD1               BNE      ??CheckIP_0
   \   00000010   1000               MOVS     R0,R2
   \   00000012   0BE0               B        ??CheckIP_0
  10879            while ((znak<12) && (Text[znak]>0))  
  10880            {
  10881               if (((Text[znak]>='0')&&(Text[znak]<='9')) || (Text[znak]=='.'))  
   \                     ??CheckIP_1:
   \   00000014   302D               CMP      R5,#+48
   \   00000016   01D3               BCC      ??CheckIP_2
   \   00000018   3A2D               CMP      R5,#+58
   \   0000001A   04D3               BCC      ??CheckIP_3
   \                     ??CheckIP_2:
   \   0000001C   2C00               MOVS     R4,R5
   \   0000001E   2E2C               CMP      R4,#+46
   \   00000020   01D0               BEQ      ??CheckIP_3
  10882               {
  10883               }else{
  10884                 IpOk=-1;
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   C043               MVNS     R0,R0            ;; #-1
  10885               }
  10886               znak++; 
   \                     ??CheckIP_3:
   \   00000026   5B1C               ADDS     R3,R3,#+1
   \   00000028   1B06               LSLS     R3,R3,#+24
   \   0000002A   1B0E               LSRS     R3,R3,#+24
  10887            }
   \                     ??CheckIP_0:
   \   0000002C   1C00               MOVS     R4,R3
   \   0000002E   0C2C               CMP      R4,#+12
   \   00000030   03D2               BCS      ??CheckIP_4
   \   00000032   0C19               ADDS     R4,R1,R4
   \   00000034   2578               LDRB     R5,[R4, #+0]
   \   00000036   002D               CMP      R5,#+0
   \   00000038   ECD1               BNE      ??CheckIP_1
  10888            znak=0;
   \                     ??CheckIP_4:
   \   0000003A   1300               MOVS     R3,R2
  10889            if (IpOk<0) while(znak<14) Text[znak++]=0;
   \   0000003C   0028               CMP      R0,#+0
   \   0000003E   08D5               BPL      ??CheckIP_5
   \   00000040   1500               MOVS     R5,R2
   \   00000042   03E0               B        ??CheckIP_6
   \                     ??CheckIP_7:
   \   00000044   0D55               STRB     R5,[R1, R4]
   \   00000046   5B1C               ADDS     R3,R3,#+1
   \   00000048   1B06               LSLS     R3,R3,#+24
   \   0000004A   1B0E               LSRS     R3,R3,#+24
   \                     ??CheckIP_6:
   \   0000004C   1C00               MOVS     R4,R3
   \   0000004E   0E2C               CMP      R4,#+14
   \   00000050   F8D3               BCC      ??CheckIP_7
  10890            return IpOk;
   \                     ??CheckIP_5:
   \   00000052   38BC               POP      {R3-R5}
   \   00000054   02BC               POP      {R1}
   \   00000056   0847               BX       R1               ;; return
  10891          }
  10892                
  10893                
  10894                
  10895                
  10896                

   \                                 In section Debug.txt, align 4, keep-with-next
  10897          void  IpConfig_Paint(void)
  10898                {
   \                     IpConfig_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
  10899                    
  10900                     if (CheckIP(NET.WiFi.IP)<0)
   \   00000002   8F4C               LDR      R4,??IpConfig_Paint_0  ;; NET
   \   00000004   2000               MOVS     R0,R4
   \   00000006   5430               ADDS     R0,R0,#+84
   \   00000008   ........           BL       CheckIP
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   0BD5               BPL      ??IpConfig_Paint_1
  10901                    {
  10902                        if (g_leng==0) MESSAGE(Komentarz2_PL); else  MESSAGE(Komentarz2_En);
   \   00000010   8C48               LDR      R0,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000012   0068               LDR      R0,[R0, #+0]
   \   00000014   0028               CMP      R0,#+0
   \   00000016   03D1               BNE      ??IpConfig_Paint_2
   \   00000018   8B48               LDR      R0,??IpConfig_Paint_0+0x8  ;; `?<Constant "Host">` + 96
   \   0000001A   ........           BL       MESSAGE
   \   0000001E   0BE1               B        ??IpConfig_Paint_3
   \                     ??IpConfig_Paint_2:
   \   00000020   8A48               LDR      R0,??IpConfig_Paint_0+0xC  ;; `?<Constant "Host">` + 112
   \   00000022   ........           BL       MESSAGE
   \   00000026   07E1               B        ??IpConfig_Paint_3
  10903                    }else if (CheckIP(NET.WiFi.Mask)<0)
   \                     ??IpConfig_Paint_1:
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   6330               ADDS     R0,R0,#+99
   \   0000002C   ........           BL       CheckIP
   \   00000030   0028               CMP      R0,#+0
   \   00000032   0BD5               BPL      ??IpConfig_Paint_4
  10904                    {
  10905                        if (g_leng==0) MESSAGE(Komentarz3_PL); else  MESSAGE(Komentarz3_En);
   \   00000034   8348               LDR      R0,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   0028               CMP      R0,#+0
   \   0000003A   03D1               BNE      ??IpConfig_Paint_5
   \   0000003C   8448               LDR      R0,??IpConfig_Paint_0+0x10  ;; `?<Constant "Host">` + 128
   \   0000003E   ........           BL       MESSAGE
   \   00000042   F9E0               B        ??IpConfig_Paint_3
   \                     ??IpConfig_Paint_5:
   \   00000044   8348               LDR      R0,??IpConfig_Paint_0+0x14  ;; `?<Constant "Host">` + 148
   \   00000046   ........           BL       MESSAGE
   \   0000004A   F5E0               B        ??IpConfig_Paint_3
  10906                    }else if (CheckIP(NET.WiFi.Gate)<0)
   \                     ??IpConfig_Paint_4:
   \   0000004C   2000               MOVS     R0,R4
   \   0000004E   7230               ADDS     R0,R0,#+114
   \   00000050   ........           BL       CheckIP
   \   00000054   0028               CMP      R0,#+0
   \   00000056   0BD5               BPL      ??IpConfig_Paint_6
  10907                    {
  10908                        if (g_leng==0) MESSAGE(Komentarz4_PL); else  MESSAGE(Komentarz4_En);
   \   00000058   7A48               LDR      R0,??IpConfig_Paint_0+0x4  ;; g_leng
   \   0000005A   0068               LDR      R0,[R0, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   03D1               BNE      ??IpConfig_Paint_7
   \   00000060   7D48               LDR      R0,??IpConfig_Paint_0+0x18  ;; `?<Constant "Host">` + 168
   \   00000062   ........           BL       MESSAGE
   \   00000066   E7E0               B        ??IpConfig_Paint_3
   \                     ??IpConfig_Paint_7:
   \   00000068   7C48               LDR      R0,??IpConfig_Paint_0+0x1C  ;; `?<Constant "Host">` + 188
   \   0000006A   ........           BL       MESSAGE
   \   0000006E   E3E0               B        ??IpConfig_Paint_3
  10909                    }else{           
   \                     ??IpConfig_Paint_6:
   \   00000070   0021               MOVS     R1,#+0
   \   00000072   0800               MOVS     R0,R1
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   03B4               PUSH     {R0,R1}
   \   0000007A   79A0               ADR      R0,??IpConfig_Paint_0+0x20  ;; 0x20, 0x00, 0x00, 0x00
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0321               MOVS     R1,#+3
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   0300               MOVS     R3,R0
   \   00000086   6C22               MOVS     R2,#+108
   \   00000088   0121               MOVS     R1,#+1
   \   0000008A   7648               LDR      R0,??IpConfig_Paint_0+0x24  ;; `?<Constant "Host">` + 212
  10910          
  10911          
  10912                  
  10913                    List_Paint("IP/TCP",1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000008C   ........           BL       List_Paint
   \   00000090   0AB0               ADD      SP,SP,#+40
  10914          
  10915                    char pY=72;    //pozycja dolna
  10916                    Label(Speech[g_leng].Adres_IP,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000092   754D               LDR      R5,??IpConfig_Paint_0+0x28  ;; 0xa7d
   \   00000094   6B4E               LDR      R6,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000096   754F               LDR      R7,??IpConfig_Paint_0+0x2C  ;; Speech
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   0120               MOVS     R0,#+1
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   7F21               MOVS     R1,#+127
   \   000000A0   03B4               PUSH     {R0,R1}
   \   000000A2   3E21               MOVS     R1,#+62
   \   000000A4   0F20               MOVS     R0,#+15
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   6123               MOVS     R3,#+97
   \   000000AA   0122               MOVS     R2,#+1
   \   000000AC   0021               MOVS     R1,#+0
   \   000000AE   8C46               MOV      R12,R1
   \   000000B0   6F49               LDR      R1,??IpConfig_Paint_0+0x30  ;; 0x9ab
   \   000000B2   3068               LDR      R0,[R6, #+0]
   \   000000B4   6843               MULS     R0,R5,R0
   \   000000B6   3818               ADDS     R0,R7,R0
   \   000000B8   4018               ADDS     R0,R0,R1
   \   000000BA   6146               MOV      R1,R12
   \   000000BC   ........           BL       Label
   \   000000C0   06B0               ADD      SP,SP,#+24
  10917                    Label(".................................",0,2,pY+14,25,59,1,127,0);
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   7F21               MOVS     R1,#+127
   \   000000CA   0120               MOVS     R0,#+1
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   3B21               MOVS     R1,#+59
   \   000000D0   1920               MOVS     R0,#+25
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   5623               MOVS     R3,#+86
   \   000000D6   0222               MOVS     R2,#+2
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   6648               LDR      R0,??IpConfig_Paint_0+0x34  ;; `?<Constant "Host">` + 24
   \   000000DC   ........           BL       Label
   \   000000E0   06B0               ADD      SP,SP,#+24
  10918                    
  10919                    Label(NET.WiFi.IP,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   0020               MOVS     R0,#+0
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   7F21               MOVS     R1,#+127
   \   000000EA   0120               MOVS     R0,#+1
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   3B21               MOVS     R1,#+59
   \   000000F0   0F20               MOVS     R0,#+15
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   5823               MOVS     R3,#+88
   \   000000F6   0222               MOVS     R2,#+2
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   2000               MOVS     R0,R4
   \   000000FC   5430               ADDS     R0,R0,#+84
   \   000000FE   ........           BL       Label
   \   00000102   06B0               ADD      SP,SP,#+24
  10920                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0D20               MOVS     R0,#+13
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   2223               MOVS     R3,#+34
   \   0000010C   4922               MOVS     R2,#+73
   \   0000010E   0F21               MOVS     R1,#+15
   \   00000110   8C46               MOV      R12,R1
   \   00000112   5949               LDR      R1,??IpConfig_Paint_0+0x38  ;; 0x915
   \   00000114   3068               LDR      R0,[R6, #+0]
   \   00000116   6843               MULS     R0,R5,R0
   \   00000118   3818               ADDS     R0,R7,R0
   \   0000011A   4018               ADDS     R0,R0,R1
   \   0000011C   6146               MOV      R1,R12
   \   0000011E   ........           BL       Button
   \   00000122   02B0               ADD      SP,SP,#+8
  10921                    
  10922                    pY=37;    
  10923                    Label(Speech[g_leng].Maska,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0120               MOVS     R0,#+1
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   7F21               MOVS     R1,#+127
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   3E21               MOVS     R1,#+62
   \   00000130   0F20               MOVS     R0,#+15
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   0B00               MOVS     R3,R1
   \   00000136   0122               MOVS     R2,#+1
   \   00000138   0021               MOVS     R1,#+0
   \   0000013A   8C46               MOV      R12,R1
   \   0000013C   4F49               LDR      R1,??IpConfig_Paint_0+0x3C  ;; 0x9ba
   \   0000013E   3068               LDR      R0,[R6, #+0]
   \   00000140   6843               MULS     R0,R5,R0
   \   00000142   3818               ADDS     R0,R7,R0
   \   00000144   4018               ADDS     R0,R0,R1
   \   00000146   6146               MOV      R1,R12
   \   00000148   ........           BL       Label
   \   0000014C   06B0               ADD      SP,SP,#+24
  10924                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   0000014E   82B0               SUB      SP,SP,#+8
   \   00000150   0020               MOVS     R0,#+0
   \   00000152   0090               STR      R0,[SP, #+0]
   \   00000154   7F21               MOVS     R1,#+127
   \   00000156   0120               MOVS     R0,#+1
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   3B21               MOVS     R1,#+59
   \   0000015C   1920               MOVS     R0,#+25
   \   0000015E   03B4               PUSH     {R0,R1}
   \   00000160   3323               MOVS     R3,#+51
   \   00000162   0222               MOVS     R2,#+2
   \   00000164   0021               MOVS     R1,#+0
   \   00000166   4648               LDR      R0,??IpConfig_Paint_0+0x40  ;; `?<Constant "Host">` + 60
   \   00000168   ........           BL       Label
   \   0000016C   06B0               ADD      SP,SP,#+24
  10925                    Label(NET.WiFi.Mask,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   0020               MOVS     R0,#+0
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   7F21               MOVS     R1,#+127
   \   00000176   0120               MOVS     R0,#+1
   \   00000178   03B4               PUSH     {R0,R1}
   \   0000017A   3B21               MOVS     R1,#+59
   \   0000017C   0F20               MOVS     R0,#+15
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   3523               MOVS     R3,#+53
   \   00000182   0222               MOVS     R2,#+2
   \   00000184   0021               MOVS     R1,#+0
   \   00000186   2000               MOVS     R0,R4
   \   00000188   6330               ADDS     R0,R0,#+99
   \   0000018A   ........           BL       Label
   \   0000018E   06B0               ADD      SP,SP,#+24
  10926                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000190   82B0               SUB      SP,SP,#+8
   \   00000192   0D20               MOVS     R0,#+13
   \   00000194   0090               STR      R0,[SP, #+0]
   \   00000196   2223               MOVS     R3,#+34
   \   00000198   2622               MOVS     R2,#+38
   \   0000019A   0F21               MOVS     R1,#+15
   \   0000019C   8C46               MOV      R12,R1
   \   0000019E   3649               LDR      R1,??IpConfig_Paint_0+0x38  ;; 0x915
   \   000001A0   3068               LDR      R0,[R6, #+0]
   \   000001A2   6843               MULS     R0,R5,R0
   \   000001A4   3818               ADDS     R0,R7,R0
   \   000001A6   4018               ADDS     R0,R0,R1
   \   000001A8   6146               MOV      R1,R12
   \   000001AA   ........           BL       Button
   \   000001AE   02B0               ADD      SP,SP,#+8
  10927                    
  10928                    pY=2;    
  10929                    Label(Speech[g_leng].Brama,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001B0   82B0               SUB      SP,SP,#+8
   \   000001B2   0120               MOVS     R0,#+1
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   7F21               MOVS     R1,#+127
   \   000001B8   03B4               PUSH     {R0,R1}
   \   000001BA   3E21               MOVS     R1,#+62
   \   000001BC   0F20               MOVS     R0,#+15
   \   000001BE   03B4               PUSH     {R0,R1}
   \   000001C0   1B23               MOVS     R3,#+27
   \   000001C2   0122               MOVS     R2,#+1
   \   000001C4   0021               MOVS     R1,#+0
   \   000001C6   8C46               MOV      R12,R1
   \   000001C8   2E49               LDR      R1,??IpConfig_Paint_0+0x44  ;; 0x9c9
   \   000001CA   3068               LDR      R0,[R6, #+0]
   \   000001CC   6843               MULS     R0,R5,R0
   \   000001CE   3818               ADDS     R0,R7,R0
   \   000001D0   4018               ADDS     R0,R0,R1
   \   000001D2   6146               MOV      R1,R12
   \   000001D4   ........           BL       Label
   \   000001D8   06B0               ADD      SP,SP,#+24
  10930                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0020               MOVS     R0,#+0
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   7F21               MOVS     R1,#+127
   \   000001E2   0120               MOVS     R0,#+1
   \   000001E4   03B4               PUSH     {R0,R1}
   \   000001E6   3B21               MOVS     R1,#+59
   \   000001E8   1920               MOVS     R0,#+25
   \   000001EA   03B4               PUSH     {R0,R1}
   \   000001EC   1023               MOVS     R3,#+16
   \   000001EE   0222               MOVS     R2,#+2
   \   000001F0   0021               MOVS     R1,#+0
   \   000001F2   2348               LDR      R0,??IpConfig_Paint_0+0x40  ;; `?<Constant "Host">` + 60
   \   000001F4   ........           BL       Label
   \   000001F8   06B0               ADD      SP,SP,#+24
  10931                    Label(NET.WiFi.Gate,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000001FA   82B0               SUB      SP,SP,#+8
   \   000001FC   0020               MOVS     R0,#+0
   \   000001FE   0090               STR      R0,[SP, #+0]
   \   00000200   7F21               MOVS     R1,#+127
   \   00000202   0120               MOVS     R0,#+1
   \   00000204   03B4               PUSH     {R0,R1}
   \   00000206   3B21               MOVS     R1,#+59
   \   00000208   0F20               MOVS     R0,#+15
   \   0000020A   03B4               PUSH     {R0,R1}
   \   0000020C   1223               MOVS     R3,#+18
   \   0000020E   0222               MOVS     R2,#+2
   \   00000210   0021               MOVS     R1,#+0
   \   00000212   7234               ADDS     R4,R4,#+114
   \   00000214   2000               MOVS     R0,R4
   \   00000216   ........           BL       Label
   \   0000021A   06B0               ADD      SP,SP,#+24
  10932                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000021C   82B0               SUB      SP,SP,#+8
   \   0000021E   0D20               MOVS     R0,#+13
   \   00000220   0090               STR      R0,[SP, #+0]
   \   00000222   2223               MOVS     R3,#+34
   \   00000224   0322               MOVS     R2,#+3
   \   00000226   0F21               MOVS     R1,#+15
   \   00000228   1348               LDR      R0,??IpConfig_Paint_0+0x38  ;; 0x915
   \   0000022A   3468               LDR      R4,[R6, #+0]
   \   0000022C   6C43               MULS     R4,R5,R4
   \   0000022E   3C19               ADDS     R4,R7,R4
   \   00000230   2018               ADDS     R0,R4,R0
   \   00000232   ........           BL       Button
   \   00000236   02B0               ADD      SP,SP,#+8
  10933          
  10934                    
  10935                    }
  10936                    
  10937                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??IpConfig_Paint_3:
   \   00000238   F8BC               POP      {R3-R7}
   \   0000023A   01BC               POP      {R0}
   \   0000023C   0047               BX       R0               ;; return
   \   0000023E   C046               Nop      
   \                     ??IpConfig_Paint_0:
   \   00000240   ........           DC32     NET
   \   00000244   ........           DC32     g_leng
   \   00000248   ........           DC32     `?<Constant "Host">` + 96
   \   0000024C   ........           DC32     `?<Constant "Host">` + 112
   \   00000250   ........           DC32     `?<Constant "Host">` + 128
   \   00000254   ........           DC32     `?<Constant "Host">` + 148
   \   00000258   ........           DC32     `?<Constant "Host">` + 168
   \   0000025C   ........           DC32     `?<Constant "Host">` + 188
   \   00000260   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000264   ........           DC32     `?<Constant "Host">` + 212
   \   00000268   7D0A0000           DC32     0xa7d
   \   0000026C   ........           DC32     Speech
   \   00000270   AB090000           DC32     0x9ab
   \   00000274   ........           DC32     `?<Constant "Host">` + 24
   \   00000278   15090000           DC32     0x915
   \   0000027C   BA090000           DC32     0x9ba
   \   00000280   ........           DC32     `?<Constant "Host">` + 60
   \   00000284   C9090000           DC32     0x9c9
  10938          
  10939          
  10940             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  10941                void  IpConfig_Event(void)
  10942                {
   \                     IpConfig_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
  10943                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   714C               LDR      R4,??IpConfig_Event_0  ;; Y_up
   \   00000004   714D               LDR      R5,??IpConfig_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   6F48               LDR      R0,??IpConfig_Event_0+0x8  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   215E               LDRSH    R1,[R4, R0]
   \   0000001C   6D48               LDR      R0,??IpConfig_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   33D5               BPL      ??IpConfig_Event_1
  10944                  {
  10945                    //zapis do flash
  10946                            unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0500               MOVS     R5,R0
  10947                            __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
  10948                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.IP)), (char*) (&(NET.WiFi.IP)),15);
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   684C               LDR      R4,??IpConfig_Event_0+0x10  ;; NET
   \   00000038   0F22               MOVS     R2,#+15
   \   0000003A   2100               MOVS     R1,R4
   \   0000003C   5431               ADDS     R1,R1,#+84
   \   0000003E   6748               LDR      R0,??IpConfig_Event_0+0x14  ;; 0x13d8bc
   \   00000040   ........           BL       FlashWrite
  10949                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Mask)), (char*) (&(NET.WiFi.Mask)), 15);
   \   00000044   0F22               MOVS     R2,#+15
   \   00000046   2100               MOVS     R1,R4
   \   00000048   6331               ADDS     R1,R1,#+99
   \   0000004A   6548               LDR      R0,??IpConfig_Event_0+0x18  ;; 0x13d8cb
   \   0000004C   ........           BL       FlashWrite
  10950                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Gate)), (char*) (&(NET.WiFi.Gate)), 15);
   \   00000050   0F22               MOVS     R2,#+15
   \   00000052   2100               MOVS     R1,R4
   \   00000054   7231               ADDS     R1,R1,#+114
   \   00000056   6348               LDR      R0,??IpConfig_Event_0+0x1C  ;; 0x13d8da
   \   00000058   ........           BL       FlashWrite
  10951                            __set_interrupt_state(Save);
   \   0000005C   2800               MOVS     R0,R5
   \   0000005E   ........           BL       __iar_set_interrupt_state
  10952                     //koniec zapisu do flash
  10953                    
  10954                     NET.Status.FreezTime=g_counter+FREEZ_TIME;
   \   00000062   6148               LDR      R0,??IpConfig_Event_0+0x20  ;; g_counter
   \   00000064   03C8               LDM      R0!,{R0,R1}
   \   00000066   0022               MOVS     R2,#+0
   \   00000068   3230               ADDS     R0,R0,#+50
   \   0000006A   5141               ADCS     R1,R1,R2
   \   0000006C   2064               STR      R0,[R4, #+64]
   \   0000006E   6164               STR      R1,[R4, #+68]
  10955                       NET.Status.HostLink=DISCONNECTED;
   \   00000070   1000               MOVS     R0,R2
   \   00000072   0100               MOVS     R1,R0
  10956                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000074   2080               STRH     R0,[R4, #+0]
  10957                       NET.Status.Timeout=0;
   \   00000076   2200               MOVS     R2,R4
   \   00000078   3832               ADDS     R2,R2,#+56
   \   0000007A   03C2               STM      R2!,{R0,R1}
  10958                       NET.Status.HttpNextQueryTime=0;
   \   0000007C   2200               MOVS     R2,R4
   \   0000007E   3032               ADDS     R2,R2,#+48
   \   00000080   03C2               STM      R2!,{R0,R1}
  10959                       NET.Status.FreezTime=0;        
   \   00000082   4034               ADDS     R4,R4,#+64
   \   00000084   03C4               STM      R4!,{R0,R1}
  10960                            
  10961                    MenuLevel=(MenuLevel/10);
   \   00000086   594F               LDR      R7,??IpConfig_Event_0+0x24  ;; TextToChangeLength
   \   00000088   386D               LDR      R0,[R7, #+80]
   \   0000008A   0A21               MOVS     R1,#+10
   \   0000008C   ........           BL       __aeabi_idivmod
   \   00000090   3865               STR      R0,[R7, #+80]
   \   00000092   94E0               B        ??IpConfig_Event_2
  10962                    
  10963                     
  10964                    
  10965                  } 
  10966                   else if ((Y_down<112) || (Y_up<112))
   \                     ??IpConfig_Event_1:
   \   00000094   0020               MOVS     R0,#+0
   \   00000096   285E               LDRSH    R0,[R5, R0]
   \   00000098   7028               CMP      R0,#+112
   \   0000009A   04DB               BLT      ??IpConfig_Event_3
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   205E               LDRSH    R0,[R4, R0]
   \   000000A0   7028               CMP      R0,#+112
   \   000000A2   00DB               BLT      .+4
   \   000000A4   8BE0               B        ??IpConfig_Event_2
   \                     ??IpConfig_Event_3:
   \   000000A6   524D               LDR      R5,??IpConfig_Event_0+0x28  ;; g_leng
   \   000000A8   524E               LDR      R6,??IpConfig_Event_0+0x2C  ;; Speech
   \   000000AA   82B0               SUB      SP,SP,#+8
   \   000000AC   0D20               MOVS     R0,#+13
   \   000000AE   0090               STR      R0,[SP, #+0]
   \   000000B0   2223               MOVS     R3,#+34
   \   000000B2   4922               MOVS     R2,#+73
   \   000000B4   0F21               MOVS     R1,#+15
   \   000000B6   5048               LDR      R0,??IpConfig_Event_0+0x30  ;; 0x915
   \   000000B8   2C68               LDR      R4,[R5, #+0]
   \   000000BA   504F               LDR      R7,??IpConfig_Event_0+0x34  ;; 0xa7d
   \   000000BC   7C43               MULS     R4,R7,R4
   \   000000BE   3419               ADDS     R4,R6,R4
   \   000000C0   2018               ADDS     R0,R4,R0
  10967                  {
  10968                      char pY=72; 
  10969                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \   000000C2   ........           BL       Button
   \   000000C6   02B0               ADD      SP,SP,#+8
   \   000000C8   0128               CMP      R0,#+1
   \   000000CA   1CD1               BNE      ??IpConfig_Event_4
  10970                      {
  10971                        TextToChange=NET.WiFi.IP;
   \   000000CC   474F               LDR      R7,??IpConfig_Event_0+0x24  ;; TextToChangeLength
   \   000000CE   424C               LDR      R4,??IpConfig_Event_0+0x10  ;; NET
   \   000000D0   2000               MOVS     R0,R4
   \   000000D2   5430               ADDS     R0,R0,#+84
   \   000000D4   B865               STR      R0,[R7, #+88]
  10972                        TextToChangeLength=15;
   \   000000D6   0F20               MOVS     R0,#+15
   \   000000D8   3870               STRB     R0,[R7, #+0]
  10973                        TextToChangeMaxPixSize=100;
   \   000000DA   6420               MOVS     R0,#+100
   \   000000DC   7870               STRB     R0,[R7, #+1]
  10974                        AlfaType=2;
   \   000000DE   0220               MOVS     R0,#+2
   \   000000E0   7877               STRB     R0,[R7, #+29]
  10975                        char znak=0;
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   0100               MOVS     R1,R0
   \   000000E6   0300               MOVS     R3,R0
   \   000000E8   05E0               B        ??IpConfig_Event_5
  10976                        while(znak<14) NET.WiFi.IP[znak++]=0;
   \                     ??IpConfig_Event_6:
   \   000000EA   A218               ADDS     R2,R4,R2
   \   000000EC   5432               ADDS     R2,R2,#+84
   \   000000EE   1370               STRB     R3,[R2, #+0]
   \   000000F0   491C               ADDS     R1,R1,#+1
   \   000000F2   0906               LSLS     R1,R1,#+24
   \   000000F4   090E               LSRS     R1,R1,#+24
   \                     ??IpConfig_Event_5:
   \   000000F6   0A00               MOVS     R2,R1
   \   000000F8   0E2A               CMP      R2,#+14
   \   000000FA   F6D3               BCC      ??IpConfig_Event_6
  10977                        MenuLevel=(MenuLevel*10+1);
   \   000000FC   386D               LDR      R0,[R7, #+80]
   \   000000FE   0A21               MOVS     R1,#+10
   \   00000100   4843               MULS     R0,R1,R0
   \   00000102   401C               ADDS     R0,R0,#+1
   \   00000104   3865               STR      R0,[R7, #+80]
  10978                        
  10979                       
  10980                      }
  10981                      pY=37; 
  10982                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??IpConfig_Event_4:
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   0D20               MOVS     R0,#+13
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   2223               MOVS     R3,#+34
   \   0000010E   2622               MOVS     R2,#+38
   \   00000110   0F21               MOVS     R1,#+15
   \   00000112   3948               LDR      R0,??IpConfig_Event_0+0x30  ;; 0x915
   \   00000114   2C68               LDR      R4,[R5, #+0]
   \   00000116   394F               LDR      R7,??IpConfig_Event_0+0x34  ;; 0xa7d
   \   00000118   7C43               MULS     R4,R7,R4
   \   0000011A   3419               ADDS     R4,R6,R4
   \   0000011C   2018               ADDS     R0,R4,R0
   \   0000011E   ........           BL       Button
   \   00000122   02B0               ADD      SP,SP,#+8
   \   00000124   0128               CMP      R0,#+1
   \   00000126   1CD1               BNE      ??IpConfig_Event_7
  10983                      {
  10984                        TextToChange=NET.WiFi.Mask;
   \   00000128   304F               LDR      R7,??IpConfig_Event_0+0x24  ;; TextToChangeLength
   \   0000012A   2B4C               LDR      R4,??IpConfig_Event_0+0x10  ;; NET
   \   0000012C   2000               MOVS     R0,R4
   \   0000012E   6330               ADDS     R0,R0,#+99
   \   00000130   B865               STR      R0,[R7, #+88]
  10985                        TextToChangeLength=15;        
   \   00000132   0F20               MOVS     R0,#+15
   \   00000134   3870               STRB     R0,[R7, #+0]
  10986                        TextToChangeMaxPixSize=100;
   \   00000136   6420               MOVS     R0,#+100
   \   00000138   7870               STRB     R0,[R7, #+1]
  10987                        AlfaType=2;
   \   0000013A   0220               MOVS     R0,#+2
   \   0000013C   7877               STRB     R0,[R7, #+29]
  10988                        char znak=0;
   \   0000013E   0020               MOVS     R0,#+0
   \   00000140   0100               MOVS     R1,R0
   \   00000142   0300               MOVS     R3,R0
   \   00000144   05E0               B        ??IpConfig_Event_8
  10989                        while(znak<14) NET.WiFi.Mask[znak++]=0;
   \                     ??IpConfig_Event_9:
   \   00000146   A218               ADDS     R2,R4,R2
   \   00000148   6332               ADDS     R2,R2,#+99
   \   0000014A   1370               STRB     R3,[R2, #+0]
   \   0000014C   491C               ADDS     R1,R1,#+1
   \   0000014E   0906               LSLS     R1,R1,#+24
   \   00000150   090E               LSRS     R1,R1,#+24
   \                     ??IpConfig_Event_8:
   \   00000152   0A00               MOVS     R2,R1
   \   00000154   0E2A               CMP      R2,#+14
   \   00000156   F6D3               BCC      ??IpConfig_Event_9
  10990                        MenuLevel=(MenuLevel*10+1);
   \   00000158   386D               LDR      R0,[R7, #+80]
   \   0000015A   0A21               MOVS     R1,#+10
   \   0000015C   4843               MULS     R0,R1,R0
   \   0000015E   401C               ADDS     R0,R0,#+1
   \   00000160   3865               STR      R0,[R7, #+80]
  10991                        
  10992                      }
  10993                      pY=2; 
  10994                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??IpConfig_Event_7:
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0D20               MOVS     R0,#+13
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   2223               MOVS     R3,#+34
   \   0000016A   0322               MOVS     R2,#+3
   \   0000016C   0F21               MOVS     R1,#+15
   \   0000016E   2248               LDR      R0,??IpConfig_Event_0+0x30  ;; 0x915
   \   00000170   2C68               LDR      R4,[R5, #+0]
   \   00000172   224D               LDR      R5,??IpConfig_Event_0+0x34  ;; 0xa7d
   \   00000174   6C43               MULS     R4,R5,R4
   \   00000176   3419               ADDS     R4,R6,R4
   \   00000178   2018               ADDS     R0,R4,R0
   \   0000017A   ........           BL       Button
   \   0000017E   02B0               ADD      SP,SP,#+8
   \   00000180   0128               CMP      R0,#+1
   \   00000182   1CD1               BNE      ??IpConfig_Event_2
  10995                      {
  10996                        TextToChange=NET.WiFi.Gate;
   \   00000184   194F               LDR      R7,??IpConfig_Event_0+0x24  ;; TextToChangeLength
   \   00000186   144C               LDR      R4,??IpConfig_Event_0+0x10  ;; NET
   \   00000188   2000               MOVS     R0,R4
   \   0000018A   7230               ADDS     R0,R0,#+114
   \   0000018C   B865               STR      R0,[R7, #+88]
  10997                        TextToChangeLength=15;
   \   0000018E   0F20               MOVS     R0,#+15
   \   00000190   3870               STRB     R0,[R7, #+0]
  10998                        TextToChangeMaxPixSize=100;
   \   00000192   6420               MOVS     R0,#+100
   \   00000194   7870               STRB     R0,[R7, #+1]
  10999                        AlfaType=2;
   \   00000196   0220               MOVS     R0,#+2
   \   00000198   7877               STRB     R0,[R7, #+29]
  11000                        char znak=0;
   \   0000019A   0020               MOVS     R0,#+0
   \   0000019C   0100               MOVS     R1,R0
   \   0000019E   0300               MOVS     R3,R0
   \   000001A0   05E0               B        ??IpConfig_Event_10
  11001                        while(znak<14) NET.WiFi.Gate[znak++]=0;
   \                     ??IpConfig_Event_11:
   \   000001A2   A218               ADDS     R2,R4,R2
   \   000001A4   7232               ADDS     R2,R2,#+114
   \   000001A6   1370               STRB     R3,[R2, #+0]
   \   000001A8   491C               ADDS     R1,R1,#+1
   \   000001AA   0906               LSLS     R1,R1,#+24
   \   000001AC   090E               LSRS     R1,R1,#+24
   \                     ??IpConfig_Event_10:
   \   000001AE   0A00               MOVS     R2,R1
   \   000001B0   0E2A               CMP      R2,#+14
   \   000001B2   F6D3               BCC      ??IpConfig_Event_11
  11002                        MenuLevel=(MenuLevel*10+1);
   \   000001B4   386D               LDR      R0,[R7, #+80]
   \   000001B6   0A21               MOVS     R1,#+10
   \   000001B8   4843               MULS     R0,R1,R0
   \   000001BA   401C               ADDS     R0,R0,#+1
   \   000001BC   3865               STR      R0,[R7, #+80]
  11003                        
  11004                      }
  11005                      
  11006                      
  11007                      
  11008          
  11009                    
  11010                  }
  11011                   MenuPaint();
   \                     ??IpConfig_Event_2:
   \   000001BE   ........           BL       MenuPaint
  11012                    
  11013                
  11014                }//_______________________________________________________________________
   \   000001C2   F8BC               POP      {R3-R7}
   \   000001C4   01BC               POP      {R0}
   \   000001C6   0047               BX       R0               ;; return
   \                     ??IpConfig_Event_0:
   \   000001C8   ........           DC32     Y_up
   \   000001CC   ........           DC32     Y_down
   \   000001D0   ........           DC32     X_down
   \   000001D4   ........           DC32     X_up
   \   000001D8   ........           DC32     NET
   \   000001DC   BCD81300           DC32     0x13d8bc
   \   000001E0   CBD81300           DC32     0x13d8cb
   \   000001E4   DAD81300           DC32     0x13d8da
   \   000001E8   ........           DC32     g_counter
   \   000001EC   ........           DC32     TextToChangeLength
   \   000001F0   ........           DC32     g_leng
   \   000001F4   ........           DC32     Speech
   \   000001F8   15090000           DC32     0x915
   \   000001FC   7D0A0000           DC32     0xa7d
  11015              
  11016               
  11017          
  11018                
  11019                char TransferInfo=0;

   \                                 In section Debug.txt, align 4, keep-with-next
  11020                void  NetInfo_Paint(void)
  11021                {
   \                     NetInfo_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
  11022                    char txt[14];
  11023                    
  11024                    List_Paint(Speech[g_leng].Status,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000004   6B4E               LDR      R6,??NetInfo_Paint_0  ;; 0xa7d
   \   00000006   6C4D               LDR      R5,??NetInfo_Paint_0+0x4  ;; g_leng
   \   00000008   6C4C               LDR      R4,??NetInfo_Paint_0+0x8  ;; Speech
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   6AA0               ADR      R0,??NetInfo_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0321               MOVS     R1,#+3
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0300               MOVS     R3,R0
   \   00000020   6C22               MOVS     R2,#+108
   \   00000022   0121               MOVS     R1,#+1
   \   00000024   6748               LDR      R0,??NetInfo_Paint_0+0x10  ;; 0xa14
   \   00000026   2F68               LDR      R7,[R5, #+0]
   \   00000028   7743               MULS     R7,R6,R7
   \   0000002A   E719               ADDS     R7,R4,R7
   \   0000002C   3818               ADDS     R0,R7,R0
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
  11025          
  11026                    char pY=100;    //pozycja dolna
  11027                    Label(Speech[g_leng].Punkt_dostepu,0,1,pY,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0120               MOVS     R0,#+1
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   7F21               MOVS     R1,#+127
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   3E21               MOVS     R1,#+62
   \   00000040   0F20               MOVS     R0,#+15
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   6423               MOVS     R3,#+100
   \   00000046   0122               MOVS     R2,#+1
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   5F48               LDR      R0,??NetInfo_Paint_0+0x14  ;; 0x8e8
   \   0000004C   2F68               LDR      R7,[R5, #+0]
   \   0000004E   7743               MULS     R7,R6,R7
   \   00000050   E719               ADDS     R7,R4,R7
   \   00000052   3818               ADDS     R0,R7,R0
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
  11028          
  11029                    Label(Speech[g_leng].Serwer,0,1,pY-20,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0120               MOVS     R0,#+1
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7F21               MOVS     R1,#+127
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   3E21               MOVS     R1,#+62
   \   00000066   0F20               MOVS     R0,#+15
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   5023               MOVS     R3,#+80
   \   0000006C   0122               MOVS     R2,#+1
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   5648               LDR      R0,??NetInfo_Paint_0+0x18  ;; 0x9d8
   \   00000072   2F68               LDR      R7,[R5, #+0]
   \   00000074   7743               MULS     R7,R6,R7
   \   00000076   E719               ADDS     R7,R4,R7
   \   00000078   3818               ADDS     R0,R7,R0
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
  11030          
  11031                    Label(Speech[g_leng].Transfer,0,1,pY-45,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0120               MOVS     R0,#+1
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   7F21               MOVS     R1,#+127
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   3E21               MOVS     R1,#+62
   \   0000008C   0F20               MOVS     R0,#+15
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   3723               MOVS     R3,#+55
   \   00000092   0122               MOVS     R2,#+1
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   4E48               LDR      R0,??NetInfo_Paint_0+0x1C  ;; 0xa05
   \   00000098   2F68               LDR      R7,[R5, #+0]
   \   0000009A   7743               MULS     R7,R6,R7
   \   0000009C   E719               ADDS     R7,R4,R7
   \   0000009E   3818               ADDS     R0,R7,R0
   \   000000A0   ........           BL       Label
   \   000000A4   06B0               ADD      SP,SP,#+24
  11032          
  11033                    
  11034                    CopyToCanvasPoint((char*)Siec, 4, pY-72, 56,24);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   1820               MOVS     R0,#+24
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   3823               MOVS     R3,#+56
   \   000000AE   1C22               MOVS     R2,#+28
   \   000000B0   0421               MOVS     R1,#+4
   \   000000B2   4848               LDR      R0,??NetInfo_Paint_0+0x20  ;; Siec
   \   000000B4   ........           BL       CopyToCanvasPoint
   \   000000B8   02B0               ADD      SP,SP,#+8
  11035                
  11036                    
  11037                    float fHQP;
  11038                    float TRANS;
  11039                    char dl;
  11040                    fHQP= NET.WiFi.HttpQueryPeriod;
  11041                    fHQP/=10; 
  11042                    TRANS= NET.Status.SendBytes+NET.Status.ResBytes;
  11043                    TRANS/=fHQP;     //transfer na sekundê w B
  11044                    TRANS*=2628; //transfer na rok w kB
  11045                    TRANS/=1000000; //transfer na rok w GB
  11046                    
  11047                    dl=FloToStr(TRANS*1.2, txt, 5);
   \   000000BA   474F               LDR      R7,??NetInfo_Paint_0+0x24  ;; NET
   \   000000BC   3800               MOVS     R0,R7
   \   000000BE   1830               ADDS     R0,R0,#+24
   \   000000C0   0522               MOVS     R2,#+5
   \   000000C2   6946               MOV      R1,SP
   \   000000C4   02B5               PUSH     {R1,LR}
   \   000000C6   0192               STR      R2,[SP, #+4]
   \   000000C8   0021               MOVS     R1,#+0
   \   000000CA   415E               LDRSH    R1,[R0, R1]
   \   000000CC   0222               MOVS     R2,#+2
   \   000000CE   805E               LDRSH    R0,[R0, R2]
   \   000000D0   0818               ADDS     R0,R1,R0
   \   000000D2   ........           BL       __aeabi_i2f
   \   000000D6   01B5               PUSH     {R0,LR}
   \   000000D8   EE20               MOVS     R0,#+238
   \   000000DA   385E               LDRSH    R0,[R7, R0]
   \   000000DC   ........           BL       __aeabi_i2f
   \   000000E0   3E49               LDR      R1,??NetInfo_Paint_0+0x28  ;; 0x41200000
   \   000000E2   ........           BL       __aeabi_fdiv
   \   000000E6   0100               MOVS     R1,R0
   \   000000E8   0098               LDR      R0,[SP, #0]
   \   000000EA   02B0               ADD      SP,SP,#+8
   \   000000EC   ........           BL       __aeabi_fdiv
   \   000000F0   3B49               LDR      R1,??NetInfo_Paint_0+0x2C  ;; 0x45244000
   \   000000F2   ........           BL       __aeabi_fmul
   \   000000F6   3B49               LDR      R1,??NetInfo_Paint_0+0x30  ;; 0x49742400
   \   000000F8   ........           BL       __aeabi_fdiv
   \   000000FC   ........           BL       __aeabi_f2d
   \   00000100   0200               MOVS     R2,R0
   \   00000102   0B00               MOVS     R3,R1
   \   00000104   3848               LDR      R0,??NetInfo_Paint_0+0x34  ;; 0x33333333
   \   00000106   3949               LDR      R1,??NetInfo_Paint_0+0x38  ;; 0x3ff33333
   \   00000108   ........           BL       __aeabi_dmul
   \   0000010C   ........           BL       __aeabi_d2f
   \   00000110   019A               LDR      R2,[SP, #+4]
   \   00000112   0099               LDR      R1,[SP, #0]
   \   00000114   02B0               ADD      SP,SP,#+8
   \   00000116   ........           BL       FloToStr
  11048                    txt[dl++]='G';txt[dl++]='B';txt[dl++]='/';txt[dl++]=Speech[g_leng].Miesiac[0];txt[dl++]=Speech[g_leng].Miesiac[1];txt[dl++]=Speech[g_leng].Miesiac[2];txt[dl++]=Speech[g_leng].Miesiac[3]; txt[dl++]='.';   txt[dl]=0;
   \   0000011A   6946               MOV      R1,SP
   \   0000011C   0200               MOVS     R2,R0
   \   0000011E   4723               MOVS     R3,#+71
   \   00000120   8B54               STRB     R3,[R1, R2]
   \   00000122   401C               ADDS     R0,R0,#+1
   \   00000124   0006               LSLS     R0,R0,#+24
   \   00000126   000E               LSRS     R0,R0,#+24
   \   00000128   0200               MOVS     R2,R0
   \   0000012A   4223               MOVS     R3,#+66
   \   0000012C   8B54               STRB     R3,[R1, R2]
   \   0000012E   401C               ADDS     R0,R0,#+1
   \   00000130   0006               LSLS     R0,R0,#+24
   \   00000132   000E               LSRS     R0,R0,#+24
   \   00000134   0200               MOVS     R2,R0
   \   00000136   2F23               MOVS     R3,#+47
   \   00000138   8B54               STRB     R3,[R1, R2]
   \   0000013A   401C               ADDS     R0,R0,#+1
   \   0000013C   0006               LSLS     R0,R0,#+24
   \   0000013E   000E               LSRS     R0,R0,#+24
   \   00000140   2B4A               LDR      R2,??NetInfo_Paint_0+0x3C  ;; 0x582
   \   00000142   2B68               LDR      R3,[R5, #+0]
   \   00000144   7343               MULS     R3,R6,R3
   \   00000146   E318               ADDS     R3,R4,R3
   \   00000148   9A18               ADDS     R2,R3,R2
   \   0000014A   0300               MOVS     R3,R0
   \   0000014C   1478               LDRB     R4,[R2, #+0]
   \   0000014E   CC54               STRB     R4,[R1, R3]
   \   00000150   401C               ADDS     R0,R0,#+1
   \   00000152   0006               LSLS     R0,R0,#+24
   \   00000154   000E               LSRS     R0,R0,#+24
   \   00000156   0300               MOVS     R3,R0
   \   00000158   5478               LDRB     R4,[R2, #+1]
   \   0000015A   CC54               STRB     R4,[R1, R3]
   \   0000015C   401C               ADDS     R0,R0,#+1
   \   0000015E   0006               LSLS     R0,R0,#+24
   \   00000160   000E               LSRS     R0,R0,#+24
   \   00000162   0300               MOVS     R3,R0
   \   00000164   9478               LDRB     R4,[R2, #+2]
   \   00000166   CC54               STRB     R4,[R1, R3]
   \   00000168   401C               ADDS     R0,R0,#+1
   \   0000016A   0006               LSLS     R0,R0,#+24
   \   0000016C   000E               LSRS     R0,R0,#+24
   \   0000016E   0300               MOVS     R3,R0
   \   00000170   D278               LDRB     R2,[R2, #+3]
   \   00000172   CA54               STRB     R2,[R1, R3]
   \   00000174   401C               ADDS     R0,R0,#+1
   \   00000176   0006               LSLS     R0,R0,#+24
   \   00000178   000E               LSRS     R0,R0,#+24
   \   0000017A   0200               MOVS     R2,R0
   \   0000017C   2E23               MOVS     R3,#+46
   \   0000017E   8B54               STRB     R3,[R1, R2]
   \   00000180   401C               ADDS     R0,R0,#+1
   \   00000182   0006               LSLS     R0,R0,#+24
   \   00000184   000E               LSRS     R0,R0,#+24
   \   00000186   0200               MOVS     R2,R0
   \   00000188   0023               MOVS     R3,#+0
   \   0000018A   0B54               STRB     R3,[R1, R0]
  11049                    Label(txt,0,4, pY-88,dl,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000018C   82B0               SUB      SP,SP,#+8
   \   0000018E   1800               MOVS     R0,R3
   \   00000190   0090               STR      R0,[SP, #+0]
   \   00000192   7F21               MOVS     R1,#+127
   \   00000194   0120               MOVS     R0,#+1
   \   00000196   03B4               PUSH     {R0,R1}
   \   00000198   0F21               MOVS     R1,#+15
   \   0000019A   1000               MOVS     R0,R2
   \   0000019C   03B4               PUSH     {R0,R1}
   \   0000019E   0C23               MOVS     R3,#+12
   \   000001A0   0422               MOVS     R2,#+4
   \   000001A2   0021               MOVS     R1,#+0
   \   000001A4   06A8               ADD      R0,SP,#+24
   \   000001A6   ........           BL       Label
   \   000001AA   06B0               ADD      SP,SP,#+24
  11050                 
  11051                    
  11052          
  11053                    
  11054                }//_______________________ Koniec funkcji  __________________________
   \   000001AC   05B0               ADD      SP,SP,#+20
   \   000001AE   F0BC               POP      {R4-R7}
   \   000001B0   01BC               POP      {R0}
   \   000001B2   0047               BX       R0               ;; return
   \                     ??NetInfo_Paint_0:
   \   000001B4   7D0A0000           DC32     0xa7d
   \   000001B8   ........           DC32     g_leng
   \   000001BC   ........           DC32     Speech
   \   000001C0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001C4   140A0000           DC32     0xa14
   \   000001C8   E8080000           DC32     0x8e8
   \   000001CC   D8090000           DC32     0x9d8
   \   000001D0   050A0000           DC32     0xa05
   \   000001D4   ........           DC32     Siec
   \   000001D8   ........           DC32     NET
   \   000001DC   00002041           DC32     0x41200000
   \   000001E0   00402445           DC32     0x45244000
   \   000001E4   00247449           DC32     0x49742400
   \   000001E8   33333333           DC32     0x33333333
   \   000001EC   3333F33F           DC32     0x3ff33333
   \   000001F0   82050000           DC32     0x582
  11055              
  11056                
  11057             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11058                void  NetInfo_Event(void)
  11059                {
   \                     NetInfo_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
  11060                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   194D               LDR      R5,??NetInfo_Event_0  ;; X_down
   \   00000004   194C               LDR      R4,??NetInfo_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   235E               LDRSH    R3,[R4, R0]
   \   00000012   2A5E               LDRSH    R2,[R5, R0]
   \   00000014   1648               LDR      R0,??NetInfo_Event_0+0x8  ;; Y_up
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   1648               LDR      R0,??NetInfo_Event_0+0xC  ;; X_up
   \   0000001C   0026               MOVS     R6,#+0
   \   0000001E   805F               LDRSH    R0,[R0, R6]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   \   00000026   0028               CMP      R0,#+0
   \   00000028   0BD5               BPL      ??NetInfo_Event_1
  11061                  {     
  11062                    TransferInfo=0;         
   \   0000002A   1348               LDR      R0,??NetInfo_Event_0+0x10  ;; TransferInfo
   \   0000002C   3100               MOVS     R1,R6
   \   0000002E   0170               STRB     R1,[R0, #+0]
  11063                    MenuLevel=(MenuLevel/10);
   \   00000030   124C               LDR      R4,??NetInfo_Event_0+0x14  ;; TextToChangeLength
   \   00000032   206D               LDR      R0,[R4, #+80]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   2065               STR      R0,[R4, #+80]
  11064                    MenuPaint();
   \   0000003C   ........           BL       MenuPaint
   \   00000040   0EE0               B        ??NetInfo_Event_2
  11065                  }else{
  11066                      if ((X_down>1) && (X_down<63) && (Y_down>10) && (Y_down<60))
   \                     ??NetInfo_Event_1:
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   285E               LDRSH    R0,[R5, R0]
   \   00000046   0228               CMP      R0,#+2
   \   00000048   0ADB               BLT      ??NetInfo_Event_2
   \   0000004A   3F28               CMP      R0,#+63
   \   0000004C   08DA               BGE      ??NetInfo_Event_2
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   205E               LDRSH    R0,[R4, R0]
   \   00000052   0B28               CMP      R0,#+11
   \   00000054   04DB               BLT      ??NetInfo_Event_2
   \   00000056   3C28               CMP      R0,#+60
   \   00000058   02DA               BGE      ??NetInfo_Event_2
  11067                      {
  11068                         TransferInfo=1;
   \   0000005A   0748               LDR      R0,??NetInfo_Event_0+0x10  ;; TransferInfo
   \   0000005C   0121               MOVS     R1,#+1
   \   0000005E   0170               STRB     R1,[R0, #+0]
  11069                      }
  11070                      
  11071                  }
  11072              
  11073                   
  11074                    
  11075                
  11076                }//_______________________________________________________________________
   \                     ??NetInfo_Event_2:
   \   00000060   70BC               POP      {R4-R6}
   \   00000062   01BC               POP      {R0}
   \   00000064   0047               BX       R0               ;; return
   \   00000066   C046               Nop      
   \                     ??NetInfo_Event_0:
   \   00000068   ........           DC32     X_down
   \   0000006C   ........           DC32     Y_down
   \   00000070   ........           DC32     Y_up
   \   00000074   ........           DC32     X_up
   \   00000078   ........           DC32     TransferInfo
   \   0000007C   ........           DC32     TextToChangeLength
  11077          
  11078                

   \                                 In section Debug.txt, align 4, keep-with-next
  11079                void  NetInfo_Refresh(void)
  11080                {
   \                     NetInfo_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
  11081                  //static char Dziel;
  11082                    char txt[6];
  11083                  //if (Dziel<5)
  11084                  //{
  11085                    static char  AccesPointAssociateTestOk=0;  //0-brak informacji, 1-Nipod³¹czony, 2 pod³¹czony
  11086                    char pY=100;    //pozycja dolna
  11087                    
  11088                    if (NET.Status.AccesPointAssociateTest<200) NET.Status.AccesPointAssociateTest++;
   \   00000002   884C               LDR      R4,??NetInfo_Refresh_0  ;; NET
   \   00000004   2079               LDRB     R0,[R4, #+4]
   \   00000006   C828               CMP      R0,#+200
   \   00000008   01D2               BCS      ??NetInfo_Refresh_1
   \   0000000A   401C               ADDS     R0,R0,#+1
   \   0000000C   2071               STRB     R0,[R4, #+4]
  11089                    if (NET.Status.AccesPointAssociateTest==200)
   \                     ??NetInfo_Refresh_1:
   \   0000000E   2079               LDRB     R0,[R4, #+4]
   \   00000010   C828               CMP      R0,#+200
   \   00000012   04D1               BNE      ??NetInfo_Refresh_2
  11090                    {
  11091                       AccesPointAssociateTestOk=1;
   \   00000014   8448               LDR      R0,??NetInfo_Refresh_0+0x4  ;; TransferInfo + 1
   \   00000016   0121               MOVS     R1,#+1
   \   00000018   0170               STRB     R1,[R0, #+0]
  11092                       NET.Status.AccesPointAssociateTest=0;  
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   2071               STRB     R0,[R4, #+4]
  11093                    }
  11094                    if (NET.Status.AccesPointAssociateTest==0xFF)
   \                     ??NetInfo_Refresh_2:
   \   0000001E   2079               LDRB     R0,[R4, #+4]
   \   00000020   FF28               CMP      R0,#+255
   \   00000022   04D1               BNE      ??NetInfo_Refresh_3
  11095                    {
  11096                       AccesPointAssociateTestOk=2;
   \   00000024   8048               LDR      R0,??NetInfo_Refresh_0+0x4  ;; TransferInfo + 1
   \   00000026   0221               MOVS     R1,#+2
   \   00000028   0170               STRB     R1,[R0, #+0]
  11097                       NET.Status.AccesPointAssociateTest=0;
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   2071               STRB     R0,[R4, #+4]
   \                     ??NetInfo_Refresh_3:
   \   0000002E   7E48               LDR      R0,??NetInfo_Refresh_0+0x4  ;; TransferInfo + 1
   \   00000030   0078               LDRB     R0,[R0, #+0]
   \   00000032   0228               CMP      R0,#+2
   \   00000034   17D1               BNE      ??NetInfo_Refresh_4
  11098                    }
  11099                   
  11100                    if (AccesPointAssociateTestOk==2)
  11101                    {
  11102                      Label(Speech[g_leng].Polaczony,0,6,pY-10,15,53,1,127,0); 
   \   00000036   82B0               SUB      SP,SP,#+8
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0090               STR      R0,[SP, #+0]
   \   0000003C   7F21               MOVS     R1,#+127
   \   0000003E   0120               MOVS     R0,#+1
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   3521               MOVS     R1,#+53
   \   00000044   0F20               MOVS     R0,#+15
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   5A23               MOVS     R3,#+90
   \   0000004A   0622               MOVS     R2,#+6
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   7748               LDR      R0,??NetInfo_Refresh_0+0x8  ;; 0x9e7
   \   00000050   774D               LDR      R5,??NetInfo_Refresh_0+0xC  ;; g_leng
   \   00000052   2D68               LDR      R5,[R5, #+0]
   \   00000054   774E               LDR      R6,??NetInfo_Refresh_0+0x10  ;; 0xa7d
   \   00000056   7543               MULS     R5,R6,R5
   \   00000058   774E               LDR      R6,??NetInfo_Refresh_0+0x14  ;; Speech
   \   0000005A   7519               ADDS     R5,R6,R5
   \   0000005C   2818               ADDS     R0,R5,R0
   \   0000005E   ........           BL       Label
   \   00000062   06B0               ADD      SP,SP,#+24
   \   00000064   2AE0               B        ??NetInfo_Refresh_5
  11103                    }
  11104                    else if  (AccesPointAssociateTestOk==1)
   \                     ??NetInfo_Refresh_4:
   \   00000066   0128               CMP      R0,#+1
   \   00000068   17D1               BNE      ??NetInfo_Refresh_6
  11105                    {
  11106                      Label(Speech[g_leng].Niepolaczony,0,6,pY-10,15,53,1,127,0); 
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   0020               MOVS     R0,#+0
   \   0000006E   0090               STR      R0,[SP, #+0]
   \   00000070   7F21               MOVS     R1,#+127
   \   00000072   0120               MOVS     R0,#+1
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   3521               MOVS     R1,#+53
   \   00000078   0F20               MOVS     R0,#+15
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   5A23               MOVS     R3,#+90
   \   0000007E   0622               MOVS     R2,#+6
   \   00000080   0021               MOVS     R1,#+0
   \   00000082   6E48               LDR      R0,??NetInfo_Refresh_0+0x18  ;; 0x9f6
   \   00000084   6A4D               LDR      R5,??NetInfo_Refresh_0+0xC  ;; g_leng
   \   00000086   2D68               LDR      R5,[R5, #+0]
   \   00000088   6A4E               LDR      R6,??NetInfo_Refresh_0+0x10  ;; 0xa7d
   \   0000008A   7543               MULS     R5,R6,R5
   \   0000008C   6A4E               LDR      R6,??NetInfo_Refresh_0+0x14  ;; Speech
   \   0000008E   7519               ADDS     R5,R6,R5
   \   00000090   2818               ADDS     R0,R5,R0
   \   00000092   ........           BL       Label
   \   00000096   06B0               ADD      SP,SP,#+24
   \   00000098   10E0               B        ??NetInfo_Refresh_5
  11107                    }else if  (AccesPointAssociateTestOk==0)
   \                     ??NetInfo_Refresh_6:
   \   0000009A   0028               CMP      R0,#+0
   \   0000009C   0ED1               BNE      ??NetInfo_Refresh_5
  11108                    {
  11109                      Label("???",0,6,pY-10,15,53,1,127,0); 
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   0120               MOVS     R0,#+1
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   3521               MOVS     R1,#+53
   \   000000AA   0F20               MOVS     R0,#+15
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   5A23               MOVS     R3,#+90
   \   000000B0   0622               MOVS     R2,#+6
   \   000000B2   0021               MOVS     R1,#+0
   \   000000B4   62A0               ADR      R0,??NetInfo_Refresh_0+0x1C  ;; "\?\?\?"
   \   000000B6   ........           BL       Label
   \   000000BA   06B0               ADD      SP,SP,#+24
  11110                    }      
  11111                    
  11112          
  11113                    
  11114                    if (NET.Status.HostLink==CONNECTED)
   \                     ??NetInfo_Refresh_5:
   \   000000BC   6078               LDRB     R0,[R4, #+1]
   \   000000BE   0328               CMP      R0,#+3
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   16D1               BNE      ??NetInfo_Refresh_7
  11115                    {   
  11116                      Label(Speech[g_leng].Polaczony,0,6,pY-30,15,53,1,127,0); 
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   7F21               MOVS     R1,#+127
   \   000000CA   0120               MOVS     R0,#+1
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   3521               MOVS     R1,#+53
   \   000000D0   0F20               MOVS     R0,#+15
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   4623               MOVS     R3,#+70
   \   000000D6   0622               MOVS     R2,#+6
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   5448               LDR      R0,??NetInfo_Refresh_0+0x8  ;; 0x9e7
   \   000000DC   544D               LDR      R5,??NetInfo_Refresh_0+0xC  ;; g_leng
   \   000000DE   2D68               LDR      R5,[R5, #+0]
   \   000000E0   544E               LDR      R6,??NetInfo_Refresh_0+0x10  ;; 0xa7d
   \   000000E2   7543               MULS     R5,R6,R5
   \   000000E4   544E               LDR      R6,??NetInfo_Refresh_0+0x14  ;; Speech
   \   000000E6   7519               ADDS     R5,R6,R5
   \   000000E8   2818               ADDS     R0,R5,R0
   \   000000EA   ........           BL       Label
   \   000000EE   06B0               ADD      SP,SP,#+24
   \   000000F0   15E0               B        ??NetInfo_Refresh_8
  11117                    }else{
  11118                      Label(Speech[g_leng].Niepolaczony,0,6,pY-30,15,53,1,127,0); 
   \                     ??NetInfo_Refresh_7:
   \   000000F2   0020               MOVS     R0,#+0
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   7F21               MOVS     R1,#+127
   \   000000F8   0120               MOVS     R0,#+1
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   3521               MOVS     R1,#+53
   \   000000FE   0F20               MOVS     R0,#+15
   \   00000100   03B4               PUSH     {R0,R1}
   \   00000102   4623               MOVS     R3,#+70
   \   00000104   0622               MOVS     R2,#+6
   \   00000106   0021               MOVS     R1,#+0
   \   00000108   4C48               LDR      R0,??NetInfo_Refresh_0+0x18  ;; 0x9f6
   \   0000010A   494D               LDR      R5,??NetInfo_Refresh_0+0xC  ;; g_leng
   \   0000010C   2D68               LDR      R5,[R5, #+0]
   \   0000010E   494E               LDR      R6,??NetInfo_Refresh_0+0x10  ;; 0xa7d
   \   00000110   7543               MULS     R5,R6,R5
   \   00000112   494E               LDR      R6,??NetInfo_Refresh_0+0x14  ;; Speech
   \   00000114   7519               ADDS     R5,R6,R5
   \   00000116   2818               ADDS     R0,R5,R0
   \   00000118   ........           BL       Label
   \   0000011C   06B0               ADD      SP,SP,#+24
  11119                    }
  11120                    
  11121                    CleanCanvasArea(20, pY-74,15,27,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??NetInfo_Refresh_8:
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   0020               MOVS     R0,#+0
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   1B23               MOVS     R3,#+27
   \   00000126   0F22               MOVS     R2,#+15
   \   00000128   1A21               MOVS     R1,#+26
   \   0000012A   1420               MOVS     R0,#+20
   \   0000012C   ........           BL       CleanCanvasArea
   \   00000130   02B0               ADD      SP,SP,#+8
  11122                    
  11123                    
  11124                            
  11125                    if ((NET.Status.SendPacketTime+250>g_counter) || ((NET.Status.ResPacketTime<NET.Status.SendPacketTime) && (NET.Status.SendPacketTime+12000>g_counter))) 
   \   00000132   2000               MOVS     R0,R4
   \   00000134   2030               ADDS     R0,R0,#+32
   \   00000136   03C8               LDM      R0!,{R0,R1}
   \   00000138   424D               LDR      R5,??NetInfo_Refresh_0+0x20  ;; g_counter
   \   0000013A   C0CD               LDM      R5!,{R6,R7}
   \   0000013C   083D               SUBS     R5,R5,#+8
   \   0000013E   FA22               MOVS     R2,#+250
   \   00000140   0023               MOVS     R3,#+0
   \   00000142   1218               ADDS     R2,R2,R0
   \   00000144   4B41               ADCS     R3,R3,R1
   \   00000146   9F42               CMP      R7,R3
   \   00000148   13D3               BCC      ??NetInfo_Refresh_9
   \   0000014A   01D8               BHI      ??NetInfo_Refresh_10
   \   0000014C   9642               CMP      R6,R2
   \   0000014E   10D3               BCC      ??NetInfo_Refresh_9
   \                     ??NetInfo_Refresh_10:
   \   00000150   2200               MOVS     R2,R4
   \   00000152   2832               ADDS     R2,R2,#+40
   \   00000154   0CCA               LDM      R2!,{R2,R3}
   \   00000156   8B42               CMP      R3,R1
   \   00000158   30D8               BHI      ??NetInfo_Refresh_11
   \   0000015A   01D3               BCC      ??NetInfo_Refresh_12
   \   0000015C   8242               CMP      R2,R0
   \   0000015E   2DD2               BCS      ??NetInfo_Refresh_11
   \                     ??NetInfo_Refresh_12:
   \   00000160   394A               LDR      R2,??NetInfo_Refresh_0+0x24  ;; 0x2ee0
   \   00000162   0023               MOVS     R3,#+0
   \   00000164   1218               ADDS     R2,R2,R0
   \   00000166   4B41               ADCS     R3,R3,R1
   \   00000168   9F42               CMP      R7,R3
   \   0000016A   27D8               BHI      ??NetInfo_Refresh_11
   \   0000016C   01D3               BCC      ??NetInfo_Refresh_9
   \   0000016E   9642               CMP      R6,R2
   \   00000170   24D2               BCS      ??NetInfo_Refresh_11
  11126                    {
  11127                      CopyToCanvasPoint((char*)StrzalkaPrawo,21, pY-60, 11,5);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??NetInfo_Refresh_9:
   \   00000172   82B0               SUB      SP,SP,#+8
   \   00000174   0520               MOVS     R0,#+5
   \   00000176   0090               STR      R0,[SP, #+0]
   \   00000178   0B23               MOVS     R3,#+11
   \   0000017A   2822               MOVS     R2,#+40
   \   0000017C   1521               MOVS     R1,#+21
   \   0000017E   3348               LDR      R0,??NetInfo_Refresh_0+0x28  ;; StrzalkaPrawo
   \   00000180   ........           BL       CopyToCanvasPoint
   \   00000184   02B0               ADD      SP,SP,#+8
  11128                      if (TransferInfo)
   \   00000186   3248               LDR      R0,??NetInfo_Refresh_0+0x2C  ;; TransferInfo
   \   00000188   0078               LDRB     R0,[R0, #+0]
   \   0000018A   0028               CMP      R0,#+0
   \   0000018C   16D0               BEQ      ??NetInfo_Refresh_11
  11129                      {
  11130                        sprintf(txt, "%d",  NET.Status.SendBytes, 'B');
                               ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000018E   4223               MOVS     R3,#+66
   \   00000190   1820               MOVS     R0,#+24
   \   00000192   225E               LDRSH    R2,[R4, R0]
   \   00000194   2FA1               ADR      R1,??NetInfo_Refresh_0+0x30  ;; 0x25, 0x64, 0x00, 0x00
   \   00000196   6846               MOV      R0,SP
   \   00000198   ........           BL       sprintf
  11131                        Label(txt,0,20, pY-56,15,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000019C   82B0               SUB      SP,SP,#+8
   \   0000019E   0020               MOVS     R0,#+0
   \   000001A0   0090               STR      R0,[SP, #+0]
   \   000001A2   7F21               MOVS     R1,#+127
   \   000001A4   0120               MOVS     R0,#+1
   \   000001A6   03B4               PUSH     {R0,R1}
   \   000001A8   0F21               MOVS     R1,#+15
   \   000001AA   0800               MOVS     R0,R1
   \   000001AC   03B4               PUSH     {R0,R1}
   \   000001AE   2C23               MOVS     R3,#+44
   \   000001B0   1422               MOVS     R2,#+20
   \   000001B2   0021               MOVS     R1,#+0
   \   000001B4   06A8               ADD      R0,SP,#+24
   \   000001B6   ........           BL       Label
   \   000001BA   06B0               ADD      SP,SP,#+24
  11132                      }
  11133                    }
  11134                    if (NET.Status.ResPacketTime+250>g_counter) 
   \                     ??NetInfo_Refresh_11:
   \   000001BC   03CD               LDM      R5!,{R0,R1}
   \   000001BE   2200               MOVS     R2,R4
   \   000001C0   2832               ADDS     R2,R2,#+40
   \   000001C2   0CCA               LDM      R2!,{R2,R3}
   \   000001C4   0025               MOVS     R5,#+0
   \   000001C6   FA32               ADDS     R2,R2,#+250
   \   000001C8   6B41               ADCS     R3,R3,R5
   \   000001CA   9942               CMP      R1,R3
   \   000001CC   26D8               BHI      ??NetInfo_Refresh_13
   \   000001CE   01D3               BCC      ??NetInfo_Refresh_14
   \   000001D0   9042               CMP      R0,R2
   \   000001D2   23D2               BCS      ??NetInfo_Refresh_13
  11135                    {
  11136                      CopyToCanvasPoint((char*)StrzalkaLewo, 21, pY-65, 11,5);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??NetInfo_Refresh_14:
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   0520               MOVS     R0,#+5
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   0B23               MOVS     R3,#+11
   \   000001DC   2322               MOVS     R2,#+35
   \   000001DE   1521               MOVS     R1,#+21
   \   000001E0   1D48               LDR      R0,??NetInfo_Refresh_0+0x34  ;; StrzalkaPrawo + 12
   \   000001E2   ........           BL       CopyToCanvasPoint
   \   000001E6   02B0               ADD      SP,SP,#+8
  11137                      if (TransferInfo)
   \   000001E8   1948               LDR      R0,??NetInfo_Refresh_0+0x2C  ;; TransferInfo
   \   000001EA   0078               LDRB     R0,[R0, #+0]
   \   000001EC   0028               CMP      R0,#+0
   \   000001EE   15D0               BEQ      ??NetInfo_Refresh_13
  11138                      {
  11139                      sprintf(txt, "%d",  NET.Status.ResBytes);
                             ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000001F0   1A20               MOVS     R0,#+26
   \   000001F2   225E               LDRSH    R2,[R4, R0]
   \   000001F4   17A1               ADR      R1,??NetInfo_Refresh_0+0x30  ;; 0x25, 0x64, 0x00, 0x00
   \   000001F6   6846               MOV      R0,SP
   \   000001F8   ........           BL       sprintf
  11140                      Label(txt,0,20, pY-74,15,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001FC   82B0               SUB      SP,SP,#+8
   \   000001FE   2800               MOVS     R0,R5
   \   00000200   0090               STR      R0,[SP, #+0]
   \   00000202   7F21               MOVS     R1,#+127
   \   00000204   0120               MOVS     R0,#+1
   \   00000206   03B4               PUSH     {R0,R1}
   \   00000208   0F21               MOVS     R1,#+15
   \   0000020A   0800               MOVS     R0,R1
   \   0000020C   03B4               PUSH     {R0,R1}
   \   0000020E   1A23               MOVS     R3,#+26
   \   00000210   1422               MOVS     R2,#+20
   \   00000212   2900               MOVS     R1,R5
   \   00000214   06A8               ADD      R0,SP,#+24
   \   00000216   ........           BL       Label
   \   0000021A   06B0               ADD      SP,SP,#+24
  11141                      }
  11142                    }
  11143                    
  11144                    
  11145                    
  11146                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??NetInfo_Refresh_13:
   \   0000021C   FEBC               POP      {R1-R7}
   \   0000021E   01BC               POP      {R0}
   \   00000220   0047               BX       R0               ;; return
   \   00000222   C046               Nop      
   \                     ??NetInfo_Refresh_0:
   \   00000224   ........           DC32     NET
   \   00000228   ........           DC32     TransferInfo + 1
   \   0000022C   E7090000           DC32     0x9e7
   \   00000230   ........           DC32     g_leng
   \   00000234   7D0A0000           DC32     0xa7d
   \   00000238   ........           DC32     Speech
   \   0000023C   F6090000           DC32     0x9f6
   \   00000240   3F3F3F00           DC8      "\?\?\?"
   \   00000244   ........           DC32     g_counter
   \   00000248   E02E0000           DC32     0x2ee0
   \   0000024C   ........           DC32     StrzalkaPrawo
   \   00000250   ........           DC32     TransferInfo
   \   00000254   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000258   ........           DC32     StrzalkaPrawo + 12

   \                                 In section .bss, align 1
   \                     TransferInfo:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
  11147          
  11148                
  11149                
  11150                
  11151                
  11152                
  11153              
  11154                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11155                void Zmienne_Paint(void)
  11156                {
   \                     Zmienne_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
  11157          
  11158                   List_Paint(Speech[g_leng].Zmienne,2,15,0,0,3, Speech[g_leng].ZmDwust, Speech[g_leng].ZmAnalog, 0,  0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0F48               LDR      R0,??Zmienne_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0F49               LDR      R1,??Zmienne_Paint_0+0x4  ;; 0xa7d
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   0F49               LDR      R1,??Zmienne_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   2100               MOVS     R1,R4
   \   0000001A   0F31               ADDS     R1,R1,#+15
   \   0000001C   2000               MOVS     R0,R4
   \   0000001E   1E30               ADDS     R0,R0,#+30
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0321               MOVS     R1,#+3
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   0300               MOVS     R3,R0
   \   0000002A   0F22               MOVS     R2,#+15
   \   0000002C   0221               MOVS     R1,#+2
   \   0000002E   0748               LDR      R0,??Zmienne_Paint_0+0xC  ;; 0xa6e
   \   00000030   2018               ADDS     R0,R4,R0
   \   00000032   ........           BL       List_Paint
   \   00000036   0AB0               ADD      SP,SP,#+40
  11159                                                                                                                                         
  11160                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000038   10BC               POP      {R4}
   \   0000003A   01BC               POP      {R0}
   \   0000003C   0047               BX       R0               ;; return
   \   0000003E   C046               Nop      
   \                     ??Zmienne_Paint_0:
   \   00000040   ........           DC32     g_leng
   \   00000044   7D0A0000           DC32     0xa7d
   \   00000048   ........           DC32     Speech
   \   0000004C   6E0A0000           DC32     0xa6e
  11161          
  11162          
  11163          
  11164                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11165                void Zmienne_Event(void)
  11166                {
   \                     Zmienne_Event:
   \   00000000   10B5               PUSH     {R4,LR}
  11167           
  11168                  char ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0F48               LDR      R0,??Zmienne_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   0E48               LDR      R0,??Zmienne_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   0E48               LDR      R0,??Zmienne_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   0E48               LDR      R0,??Zmienne_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0006               LSLS     R0,R0,#+24
   \   0000002A   000E               LSRS     R0,R0,#+24
  11169            
  11170                  if (ans)
   \   0000002C   0BD0               BEQ      ??Zmienne_Event_1
  11171                    {
  11172                    if ((ans>0) && (ans<=2)) MenuLevel=(MenuLevel*10+ans);
   \   0000002E   08D0               BEQ      ??Zmienne_Event_2
   \   00000030   0100               MOVS     R1,R0
   \   00000032   0329               CMP      R1,#+3
   \   00000034   05D2               BCS      ??Zmienne_Event_2
   \   00000036   0949               LDR      R1,??Zmienne_Event_0+0x10  ;; TextToChangeLength
   \   00000038   0A6D               LDR      R2,[R1, #+80]
   \   0000003A   0A23               MOVS     R3,#+10
   \   0000003C   5A43               MULS     R2,R3,R2
   \   0000003E   1018               ADDS     R0,R2,R0
   \   00000040   0865               STR      R0,[R1, #+80]
  11173                    if (ans<0) {
                                  ^
Warning[Pe186]: pointless comparison of unsigned integer with zero
  11174                      MenuLevel=(MenuLevel/10);
  11175                     CurModifSheet=0; 
  11176                    }
  11177                    MenuPaint();
   \                     ??Zmienne_Event_2:
   \   00000042   ........           BL       MenuPaint
  11178                    } 
  11179                }//_______________________________________________________________________
   \                     ??Zmienne_Event_1:
   \   00000046   10BC               POP      {R4}
   \   00000048   01BC               POP      {R0}
   \   0000004A   0047               BX       R0               ;; return
   \                     ??Zmienne_Event_0:
   \   0000004C   ........           DC32     Y_down
   \   00000050   ........           DC32     X_down
   \   00000054   ........           DC32     Y_up
   \   00000058   ........           DC32     X_up
   \   0000005C   ........           DC32     TextToChangeLength
  11180          
  11181                
  11182          
  11183                

   \                                 In section .bss, align 1
  11184                char ZM_OFFSET=0;
   \                     ZM_OFFSET:
   \   00000000                      DS8 1
  11185                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11186                void ZmienneDwustanowe_Paint(void)
  11187                {  
   \                     ZmienneDwustanowe_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
  11188          
  11189                      List_Paint(Speech[g_leng].ZmDwust,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   1AA0               ADR      R0,??ZmienneDwustanowe_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   1748               LDR      R0,??ZmienneDwustanowe_Paint_0+0x4  ;; g_leng
   \   0000001E   0068               LDR      R0,[R0, #+0]
   \   00000020   174C               LDR      R4,??ZmienneDwustanowe_Paint_0+0x8  ;; 0xa7d
   \   00000022   6043               MULS     R0,R4,R0
   \   00000024   174C               LDR      R4,??ZmienneDwustanowe_Paint_0+0xC  ;; Speech
   \   00000026   2018               ADDS     R0,R4,R0
   \   00000028   1E30               ADDS     R0,R0,#+30
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
  11190                      
  11191                      
  11192                     char LabelButt[2];
  11193                     LabelButt[1]=0;
   \   00000030   6C46               MOV      R4,SP
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   6070               STRB     R0,[R4, #+1]
  11194                     LabelButt[0]=30;
   \   00000036   1E20               MOVS     R0,#+30
   \   00000038   2070               STRB     R0,[R4, #+0]
  11195                     Button(LabelButt,34,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000003A   82B0               SUB      SP,SP,#+8
   \   0000003C   1320               MOVS     R0,#+19
   \   0000003E   0090               STR      R0,[SP, #+0]
   \   00000040   0300               MOVS     R3,R0
   \   00000042   0322               MOVS     R2,#+3
   \   00000044   2221               MOVS     R1,#+34
   \   00000046   02A8               ADD      R0,SP,#+8
   \   00000048   ........           BL       Button
   \   0000004C   02B0               ADD      SP,SP,#+8
  11196                     LabelButt[0]=31;
   \   0000004E   1F20               MOVS     R0,#+31
   \   00000050   2070               STRB     R0,[R4, #+0]
  11197                     Button(LabelButt,13,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   1320               MOVS     R0,#+19
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   0300               MOVS     R3,R0
   \   0000005A   0322               MOVS     R2,#+3
   \   0000005C   0D21               MOVS     R1,#+13
   \   0000005E   02A8               ADD      R0,SP,#+8
   \   00000060   ........           BL       Button
   \   00000064   02B0               ADD      SP,SP,#+8
  11198                      V_line(1,2,125,1); // (char X, int Y, char lenght, char typ)
   \   00000066   0123               MOVS     R3,#+1
   \   00000068   7D22               MOVS     R2,#+125
   \   0000006A   0221               MOVS     R1,#+2
   \   0000006C   1800               MOVS     R0,R3
   \   0000006E   ........           BL       V_line
  11199                      
  11200                }//_______________________________________________________________________ 
   \   00000072   1CBC               POP      {R2-R4}
   \   00000074   01BC               POP      {R0}
   \   00000076   0047               BX       R0               ;; return
   \                     ??ZmienneDwustanowe_Paint_0:
   \   00000078   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000007C   ........           DC32     g_leng
   \   00000080   7D0A0000           DC32     0xa7d
   \   00000084   ........           DC32     Speech
  11201          
  11202          
  11203          
  11204          
  11205                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11206                void ZmienneDwustanowe_Event(void)
  11207                {
   \                     ZmienneDwustanowe_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  11208                  int ans;
  11209          
  11210                 
  11211                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   2548               LDR      R0,??ZmienneDwustanowe_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   2548               LDR      R0,??ZmienneDwustanowe_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   2548               LDR      R0,??ZmienneDwustanowe_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   2548               LDR      R0,??ZmienneDwustanowe_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
  11212            
  11213                  char Repaint=0;
   \   00000026   2100               MOVS     R1,R4
  11214          
  11215                  
  11216                  
  11217                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0AD0               BEQ      ??ZmienneDwustanowe_Event_1
  11218                    {
  11219                    if (ans<0) {
   \   0000002C   33D5               BPL      ??ZmienneDwustanowe_Event_2
  11220                      
  11221                      
  11222                      ZM_OFFSET=0;
   \   0000002E   2148               LDR      R0,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   00000030   0170               STRB     R1,[R0, #+0]
  11223                      MenuLevel=(MenuLevel/100);
   \   00000032   214C               LDR      R4,??ZmienneDwustanowe_Event_0+0x14  ;; TextToChangeLength
   \   00000034   206D               LDR      R0,[R4, #+80]
   \   00000036   6421               MOVS     R1,#+100
   \   00000038   ........           BL       __aeabi_idivmod
   \   0000003C   2065               STR      R0,[R4, #+80]
  11224          
  11225                       Repaint=1;
   \   0000003E   0124               MOVS     R4,#+1
   \   00000040   29E0               B        ??ZmienneDwustanowe_Event_2
  11226          
  11227                    }
  11228                    
  11229                    }else{
  11230                        
  11231                        char LabelButt[2];
  11232                        LabelButt[1]=0;
   \                     ??ZmienneDwustanowe_Event_1:
   \   00000042   6D46               MOV      R5,SP
   \   00000044   6970               STRB     R1,[R5, #+1]
  11233                        LabelButt[0]=30;
   \   00000046   1E20               MOVS     R0,#+30
   \   00000048   2870               STRB     R0,[R5, #+0]
  11234                        if (Button(LabelButt,34,3,19,19)==2)
   \   0000004A   82B0               SUB      SP,SP,#+8
   \   0000004C   1320               MOVS     R0,#+19
   \   0000004E   0090               STR      R0,[SP, #+0]
   \   00000050   0300               MOVS     R3,R0
   \   00000052   0322               MOVS     R2,#+3
   \   00000054   2221               MOVS     R1,#+34
   \   00000056   02A8               ADD      R0,SP,#+8
   \   00000058   ........           BL       Button
   \   0000005C   02B0               ADD      SP,SP,#+8
   \   0000005E   0228               CMP      R0,#+2
   \   00000060   05D1               BNE      ??ZmienneDwustanowe_Event_3
  11235                        {
  11236                           if (ZM_OFFSET>0) ZM_OFFSET--;
   \   00000062   1448               LDR      R0,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   00000064   0178               LDRB     R1,[R0, #+0]
   \   00000066   0029               CMP      R1,#+0
   \   00000068   01D0               BEQ      ??ZmienneDwustanowe_Event_3
   \   0000006A   491E               SUBS     R1,R1,#+1
   \   0000006C   0170               STRB     R1,[R0, #+0]
  11237                        }
  11238                        LabelButt[0]=31;
   \                     ??ZmienneDwustanowe_Event_3:
   \   0000006E   1F20               MOVS     R0,#+31
   \   00000070   2870               STRB     R0,[R5, #+0]
  11239                        if (Button(LabelButt,13,3,19,19)==2) 
   \   00000072   82B0               SUB      SP,SP,#+8
   \   00000074   1320               MOVS     R0,#+19
   \   00000076   0090               STR      R0,[SP, #+0]
   \   00000078   0300               MOVS     R3,R0
   \   0000007A   0322               MOVS     R2,#+3
   \   0000007C   0D21               MOVS     R1,#+13
   \   0000007E   02A8               ADD      R0,SP,#+8
   \   00000080   ........           BL       Button
   \   00000084   02B0               ADD      SP,SP,#+8
   \   00000086   0228               CMP      R0,#+2
   \   00000088   05D1               BNE      ??ZmienneDwustanowe_Event_2
  11240                        {  
  11241                          if (ZM_OFFSET<99-8) ZM_OFFSET++;
   \   0000008A   0A48               LDR      R0,??ZmienneDwustanowe_Event_0+0x10  ;; ZM_OFFSET
   \   0000008C   0178               LDRB     R1,[R0, #+0]
   \   0000008E   5B29               CMP      R1,#+91
   \   00000090   01D2               BCS      ??ZmienneDwustanowe_Event_2
   \   00000092   491C               ADDS     R1,R1,#+1
   \   00000094   0170               STRB     R1,[R0, #+0]
  11242                        }
  11243                      
  11244                    } 
  11245                  
  11246                    if (Repaint) MenuPaint();
   \                     ??ZmienneDwustanowe_Event_2:
   \   00000096   002C               CMP      R4,#+0
   \   00000098   01D0               BEQ      ??ZmienneDwustanowe_Event_4
   \   0000009A   ........           BL       MenuPaint
  11247                  
  11248                  
  11249                }//_______________________________________________________________________
   \                     ??ZmienneDwustanowe_Event_4:
   \   0000009E   38BC               POP      {R3-R5}
   \   000000A0   01BC               POP      {R0}
   \   000000A2   0047               BX       R0               ;; return
   \                     ??ZmienneDwustanowe_Event_0:
   \   000000A4   ........           DC32     Y_down
   \   000000A8   ........           DC32     X_down
   \   000000AC   ........           DC32     Y_up
   \   000000B0   ........           DC32     X_up
   \   000000B4   ........           DC32     ZM_OFFSET
   \   000000B8   ........           DC32     TextToChangeLength
  11250                
  11251                
  11252                
  11253                
  11254                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11255                void ZmienneDwustanowe_Repaint(void)
  11256                {
   \                     ZmienneDwustanowe_Repaint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
  11257          
  11258          
  11259                       char PozY=99;
  11260                       for (char i=0; i<8; i++)
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   52E0               B        ??ZmienneDwustanowe_Repaint_0
  11261                       {
  11262                          char Txt[6]="b";
   \                     ??ZmienneDwustanowe_Repaint_1:
   \   00000006   6846               MOV      R0,SP
   \   00000008   2B49               LDR      R1,??ZmienneDwustanowe_Repaint_2  ;; `?<Constant "b">`
   \   0000000A   0CC9               LDM      R1!,{R2,R3}
   \   0000000C   0CC0               STM      R0!,{R2,R3}
   \   0000000E   0222               MOVS     R2,#+2
   \   00000010   6946               MOV      R1,SP
   \   00000012   491C               ADDS     R1,R1,#+1
   \   00000014   2000               MOVS     R0,R4
   \   00000016   294B               LDR      R3,??ZmienneDwustanowe_Repaint_2+0x4  ;; ZM_OFFSET
   \   00000018   1B78               LDRB     R3,[R3, #+0]
   \   0000001A   C018               ADDS     R0,R0,R3
   \   0000001C   0006               LSLS     R0,R0,#+24
   \   0000001E   000E               LSRS     R0,R0,#+24
  11263                          
  11264                         CharToStr(i+ZM_OFFSET, &Txt[1], 2);
   \   00000020   ........           BL       CharToStr
  11265                         Label(Txt,0,2,PozY-(11*i)+1,3,15,1,127,1);  
   \   00000024   2700               MOVS     R7,R4
   \   00000026   0B25               MOVS     R5,#+11
   \   00000028   7D43               MULS     R5,R7,R5
   \   0000002A   6420               MOVS     R0,#+100
   \   0000002C   461B               SUBS     R6,R0,R5
   \   0000002E   82B0               SUB      SP,SP,#+8
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   0090               STR      R0,[SP, #+0]
   \   00000034   7F21               MOVS     R1,#+127
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0F21               MOVS     R1,#+15
   \   0000003A   0320               MOVS     R0,#+3
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   3300               MOVS     R3,R6
   \   00000040   0222               MOVS     R2,#+2
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   06A8               ADD      R0,SP,#+24
   \   00000046   ........           BL       Label
   \   0000004A   06B0               ADD      SP,SP,#+24
  11266          
  11267                         //char IlLiter=sIntToStr( MainStage.StageI[CurrentNode].Value[i], &(Txt[0])); //(char Value, char *Vstring, char ill);
  11268                         
  11269                          
  11270                         char IlLiter=CharToStr((Variables[((i+ZM_OFFSET)/8)]>>((i+ZM_OFFSET)%8)) &0x1, Txt, 1);
   \   0000004C   1B48               LDR      R0,??ZmienneDwustanowe_Repaint_2+0x4  ;; ZM_OFFSET
   \   0000004E   0078               LDRB     R0,[R0, #+0]
   \   00000050   3818               ADDS     R0,R7,R0
   \   00000052   0290               STR      R0,[SP, #+8]
   \   00000054   0100               MOVS     R1,R0
   \   00000056   8910               ASRS     R1,R1,#+2
   \   00000058   490F               LSRS     R1,R1,#+29
   \   0000005A   0918               ADDS     R1,R1,R0
   \   0000005C   0B00               MOVS     R3,R1
   \   0000005E   DB10               ASRS     R3,R3,#+3
   \   00000060   0122               MOVS     R2,#+1
   \   00000062   6946               MOV      R1,SP
   \   00000064   164F               LDR      R7,??ZmienneDwustanowe_Repaint_2+0x8  ;; Variables
   \   00000066   FF5C               LDRB     R7,[R7, R3]
   \   00000068   DB00               LSLS     R3,R3,#+3
   \   0000006A   C01A               SUBS     R0,R0,R3
   \   0000006C   0741               ASRS     R7,R7,R0
   \   0000006E   1000               MOVS     R0,R2
   \   00000070   3840               ANDS     R0,R0,R7
   \   00000072   ........           BL       CharToStr
   \   00000076   0200               MOVS     R2,R0
  11271                         Label(Txt,0,25,PozY-(11*i)+1,IlLiter,35,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   2321               MOVS     R1,#+35
   \   00000086   1000               MOVS     R0,R2
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   3300               MOVS     R3,R6
   \   0000008C   1922               MOVS     R2,#+25
   \   0000008E   0021               MOVS     R1,#+0
   \   00000090   06A8               ADD      R0,SP,#+24
   \   00000092   ........           BL       Label
   \   00000096   06B0               ADD      SP,SP,#+24
  11272                         
  11273                         H_line(0,PozY-(11*i),63,1); // (char X, int Y, char lenght, char typ)
   \   00000098   0123               MOVS     R3,#+1
   \   0000009A   3F22               MOVS     R2,#+63
   \   0000009C   6320               MOVS     R0,#+99
   \   0000009E   411B               SUBS     R1,R0,R5
   \   000000A0   0020               MOVS     R0,#+0
   \   000000A2   ........           BL       H_line
  11274                       }
   \   000000A6   641C               ADDS     R4,R4,#+1
   \   000000A8   2406               LSLS     R4,R4,#+24
   \   000000AA   240E               LSRS     R4,R4,#+24
   \                     ??ZmienneDwustanowe_Repaint_0:
   \   000000AC   2000               MOVS     R0,R4
   \   000000AE   0828               CMP      R0,#+8
   \   000000B0   A9D3               BCC      ??ZmienneDwustanowe_Repaint_1
  11275             
  11276          
  11277               
  11278                  
  11279                }//_______________________________________________________________________
   \   000000B2   FEBC               POP      {R1-R7}
   \   000000B4   01BC               POP      {R0}
   \   000000B6   0047               BX       R0               ;; return
   \                     ??ZmienneDwustanowe_Repaint_2:
   \   000000B8   ........           DC32     `?<Constant "b">`
   \   000000BC   ........           DC32     ZM_OFFSET
   \   000000C0   ........           DC32     Variables
  11280          
  11281          
  11282           
  11283             
  11284          //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11285                void ZmienneAnalogowe_Paint(void)
  11286                {  
   \                     ZmienneAnalogowe_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
  11287          
  11288                      List_Paint(Speech[g_leng].ZmAnalog,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   1AA0               ADR      R0,??ZmienneAnalogowe_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   1748               LDR      R0,??ZmienneAnalogowe_Paint_0+0x4  ;; g_leng
   \   0000001E   0068               LDR      R0,[R0, #+0]
   \   00000020   174C               LDR      R4,??ZmienneAnalogowe_Paint_0+0x8  ;; 0xa7d
   \   00000022   6043               MULS     R0,R4,R0
   \   00000024   174C               LDR      R4,??ZmienneAnalogowe_Paint_0+0xC  ;; Speech
   \   00000026   2018               ADDS     R0,R4,R0
   \   00000028   0F30               ADDS     R0,R0,#+15
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
  11289                      
  11290                      
  11291                     char LabelButt[2];
  11292                     LabelButt[1]=0;
   \   00000030   6C46               MOV      R4,SP
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   6070               STRB     R0,[R4, #+1]
  11293                     LabelButt[0]=30;
   \   00000036   1E20               MOVS     R0,#+30
   \   00000038   2070               STRB     R0,[R4, #+0]
  11294                     Button(LabelButt,34,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000003A   82B0               SUB      SP,SP,#+8
   \   0000003C   1320               MOVS     R0,#+19
   \   0000003E   0090               STR      R0,[SP, #+0]
   \   00000040   0300               MOVS     R3,R0
   \   00000042   0322               MOVS     R2,#+3
   \   00000044   2221               MOVS     R1,#+34
   \   00000046   02A8               ADD      R0,SP,#+8
   \   00000048   ........           BL       Button
   \   0000004C   02B0               ADD      SP,SP,#+8
  11295                     LabelButt[0]=31;
   \   0000004E   1F20               MOVS     R0,#+31
   \   00000050   2070               STRB     R0,[R4, #+0]
  11296                     Button(LabelButt,13,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   1320               MOVS     R0,#+19
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   0300               MOVS     R3,R0
   \   0000005A   0322               MOVS     R2,#+3
   \   0000005C   0D21               MOVS     R1,#+13
   \   0000005E   02A8               ADD      R0,SP,#+8
   \   00000060   ........           BL       Button
   \   00000064   02B0               ADD      SP,SP,#+8
  11297                      V_line(1,2,125,1); // (char X, int Y, char lenght, char typ)
   \   00000066   0123               MOVS     R3,#+1
   \   00000068   7D22               MOVS     R2,#+125
   \   0000006A   0221               MOVS     R1,#+2
   \   0000006C   1800               MOVS     R0,R3
   \   0000006E   ........           BL       V_line
  11298                      
  11299                }//_______________________________________________________________________ 
   \   00000072   1CBC               POP      {R2-R4}
   \   00000074   01BC               POP      {R0}
   \   00000076   0047               BX       R0               ;; return
   \                     ??ZmienneAnalogowe_Paint_0:
   \   00000078   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000007C   ........           DC32     g_leng
   \   00000080   7D0A0000           DC32     0xa7d
   \   00000084   ........           DC32     Speech
  11300          
  11301          
  11302          
  11303          
  11304                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11305                void ZmienneAnalogowe_Event(void)
  11306                {
   \                     ZmienneAnalogowe_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
  11307                  int ans;
  11308          
  11309                 
  11310                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   2548               LDR      R0,??ZmienneAnalogowe_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   2548               LDR      R0,??ZmienneAnalogowe_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   2548               LDR      R0,??ZmienneAnalogowe_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   2548               LDR      R0,??ZmienneAnalogowe_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
  11311            
  11312                  char Repaint=0;
   \   00000026   2100               MOVS     R1,R4
  11313          
  11314                  
  11315                  
  11316                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0AD0               BEQ      ??ZmienneAnalogowe_Event_1
  11317                    {
  11318                    if (ans<0) {
   \   0000002C   33D5               BPL      ??ZmienneAnalogowe_Event_2
  11319                      
  11320                      
  11321                      ZM_OFFSET=0;
   \   0000002E   2148               LDR      R0,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   00000030   0170               STRB     R1,[R0, #+0]
  11322                      MenuLevel=(MenuLevel/100);
   \   00000032   214C               LDR      R4,??ZmienneAnalogowe_Event_0+0x14  ;; TextToChangeLength
   \   00000034   206D               LDR      R0,[R4, #+80]
   \   00000036   6421               MOVS     R1,#+100
   \   00000038   ........           BL       __aeabi_idivmod
   \   0000003C   2065               STR      R0,[R4, #+80]
  11323          
  11324                       Repaint=1;
   \   0000003E   0124               MOVS     R4,#+1
   \   00000040   29E0               B        ??ZmienneAnalogowe_Event_2
  11325          
  11326                    }
  11327                    
  11328                    }else{
  11329                        
  11330                        char LabelButt[2];
  11331                        LabelButt[1]=0;
   \                     ??ZmienneAnalogowe_Event_1:
   \   00000042   6D46               MOV      R5,SP
   \   00000044   6970               STRB     R1,[R5, #+1]
  11332                        LabelButt[0]=30;
   \   00000046   1E20               MOVS     R0,#+30
   \   00000048   2870               STRB     R0,[R5, #+0]
  11333                        if (Button(LabelButt,34,3,19,19)==2)
   \   0000004A   82B0               SUB      SP,SP,#+8
   \   0000004C   1320               MOVS     R0,#+19
   \   0000004E   0090               STR      R0,[SP, #+0]
   \   00000050   0300               MOVS     R3,R0
   \   00000052   0322               MOVS     R2,#+3
   \   00000054   2221               MOVS     R1,#+34
   \   00000056   02A8               ADD      R0,SP,#+8
   \   00000058   ........           BL       Button
   \   0000005C   02B0               ADD      SP,SP,#+8
   \   0000005E   0228               CMP      R0,#+2
   \   00000060   05D1               BNE      ??ZmienneAnalogowe_Event_3
  11334                        {
  11335                           if (ZM_OFFSET>0) ZM_OFFSET--;
   \   00000062   1448               LDR      R0,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   00000064   0178               LDRB     R1,[R0, #+0]
   \   00000066   0029               CMP      R1,#+0
   \   00000068   01D0               BEQ      ??ZmienneAnalogowe_Event_3
   \   0000006A   491E               SUBS     R1,R1,#+1
   \   0000006C   0170               STRB     R1,[R0, #+0]
  11336                        }
  11337                        LabelButt[0]=31;
   \                     ??ZmienneAnalogowe_Event_3:
   \   0000006E   1F20               MOVS     R0,#+31
   \   00000070   2870               STRB     R0,[R5, #+0]
  11338                        if (Button(LabelButt,13,3,19,19)==2) 
   \   00000072   82B0               SUB      SP,SP,#+8
   \   00000074   1320               MOVS     R0,#+19
   \   00000076   0090               STR      R0,[SP, #+0]
   \   00000078   0300               MOVS     R3,R0
   \   0000007A   0322               MOVS     R2,#+3
   \   0000007C   0D21               MOVS     R1,#+13
   \   0000007E   02A8               ADD      R0,SP,#+8
   \   00000080   ........           BL       Button
   \   00000084   02B0               ADD      SP,SP,#+8
   \   00000086   0228               CMP      R0,#+2
   \   00000088   05D1               BNE      ??ZmienneAnalogowe_Event_2
  11339                        {  
  11340                          if (ZM_OFFSET<20-8) ZM_OFFSET++;
   \   0000008A   0A48               LDR      R0,??ZmienneAnalogowe_Event_0+0x10  ;; ZM_OFFSET
   \   0000008C   0178               LDRB     R1,[R0, #+0]
   \   0000008E   0C29               CMP      R1,#+12
   \   00000090   01D2               BCS      ??ZmienneAnalogowe_Event_2
   \   00000092   491C               ADDS     R1,R1,#+1
   \   00000094   0170               STRB     R1,[R0, #+0]
  11341                        }
  11342                      
  11343                    } 
  11344                  
  11345                    if (Repaint) MenuPaint();
   \                     ??ZmienneAnalogowe_Event_2:
   \   00000096   002C               CMP      R4,#+0
   \   00000098   01D0               BEQ      ??ZmienneAnalogowe_Event_4
   \   0000009A   ........           BL       MenuPaint
  11346                  
  11347                  
  11348                }//_______________________________________________________________________
   \                     ??ZmienneAnalogowe_Event_4:
   \   0000009E   38BC               POP      {R3-R5}
   \   000000A0   01BC               POP      {R0}
   \   000000A2   0047               BX       R0               ;; return
   \                     ??ZmienneAnalogowe_Event_0:
   \   000000A4   ........           DC32     Y_down
   \   000000A8   ........           DC32     X_down
   \   000000AC   ........           DC32     Y_up
   \   000000B0   ........           DC32     X_up
   \   000000B4   ........           DC32     ZM_OFFSET
   \   000000B8   ........           DC32     TextToChangeLength
  11349                
  11350                
  11351                
  11352                
  11353                //*------------------------------------------- ----------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
  11354                void ZmienneAnalogowe_Repaint(void)
  11355                {
   \                     ZmienneAnalogowe_Repaint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
  11356          
  11357                       char IlLiter;
  11358                       char PozY=99;
  11359                       for (char i=0; i<8; i++)
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   46E0               B        ??ZmienneAnalogowe_Repaint_0
  11360                       {
  11361                          char Txt[6]="a";
   \                     ??ZmienneAnalogowe_Repaint_1:
   \   00000006   6846               MOV      R0,SP
   \   00000008   2549               LDR      R1,??ZmienneAnalogowe_Repaint_2  ;; `?<Constant "a">`
   \   0000000A   0CC9               LDM      R1!,{R2,R3}
   \   0000000C   0CC0               STM      R0!,{R2,R3}
   \   0000000E   0222               MOVS     R2,#+2
   \   00000010   6946               MOV      R1,SP
   \   00000012   491C               ADDS     R1,R1,#+1
   \   00000014   2000               MOVS     R0,R4
   \   00000016   234B               LDR      R3,??ZmienneAnalogowe_Repaint_2+0x4  ;; ZM_OFFSET
   \   00000018   1B78               LDRB     R3,[R3, #+0]
   \   0000001A   C018               ADDS     R0,R0,R3
   \   0000001C   0006               LSLS     R0,R0,#+24
   \   0000001E   000E               LSRS     R0,R0,#+24
  11362                          
  11363                         CharToStr(i+ZM_OFFSET, &Txt[1], 2);
   \   00000020   ........           BL       CharToStr
  11364                         Label(Txt,0,2,PozY-(11*i)+1,3,15,1,127,1);  
   \   00000024   2700               MOVS     R7,R4
   \   00000026   0B25               MOVS     R5,#+11
   \   00000028   7D43               MULS     R5,R7,R5
   \   0000002A   6420               MOVS     R0,#+100
   \   0000002C   461B               SUBS     R6,R0,R5
   \   0000002E   82B0               SUB      SP,SP,#+8
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   0090               STR      R0,[SP, #+0]
   \   00000034   7F21               MOVS     R1,#+127
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0F21               MOVS     R1,#+15
   \   0000003A   0320               MOVS     R0,#+3
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   3300               MOVS     R3,R6
   \   00000040   0222               MOVS     R2,#+2
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   06A8               ADD      R0,SP,#+24
   \   00000046   ........           BL       Label
   \   0000004A   06B0               ADD      SP,SP,#+24
  11365          
  11366                         IlLiter=sIntToStr( VariablesAnal[i+ZM_OFFSET], &(Txt[0])); //(char Value, char *Vstring, char ill);
   \   0000004C   6946               MOV      R1,SP
   \   0000004E   1548               LDR      R0,??ZmienneAnalogowe_Repaint_2+0x4  ;; ZM_OFFSET
   \   00000050   0078               LDRB     R0,[R0, #+0]
   \   00000052   3818               ADDS     R0,R7,R0
   \   00000054   4000               LSLS     R0,R0,#+1
   \   00000056   144A               LDR      R2,??ZmienneAnalogowe_Repaint_2+0x8  ;; VariablesAnal
   \   00000058   105E               LDRSH    R0,[R2, R0]
   \   0000005A   ........           BL       sIntToStr
   \   0000005E   0200               MOVS     R2,R0
  11367          
  11368                         Label(Txt,0,25,PozY-(11*i)+1,IlLiter,35,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   0020               MOVS     R0,#+0
   \   00000064   0090               STR      R0,[SP, #+0]
   \   00000066   7F21               MOVS     R1,#+127
   \   00000068   0120               MOVS     R0,#+1
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   2321               MOVS     R1,#+35
   \   0000006E   1000               MOVS     R0,R2
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   3300               MOVS     R3,R6
   \   00000074   1922               MOVS     R2,#+25
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   06A8               ADD      R0,SP,#+24
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
  11369                         
  11370                         H_line(0,PozY-(11*i),63,1); // (char X, int Y, char lenght, char typ)
   \   00000080   0123               MOVS     R3,#+1
   \   00000082   3F22               MOVS     R2,#+63
   \   00000084   6320               MOVS     R0,#+99
   \   00000086   411B               SUBS     R1,R0,R5
   \   00000088   0020               MOVS     R0,#+0
   \   0000008A   ........           BL       H_line
  11371                       }
   \   0000008E   641C               ADDS     R4,R4,#+1
   \   00000090   2406               LSLS     R4,R4,#+24
   \   00000092   240E               LSRS     R4,R4,#+24
   \                     ??ZmienneAnalogowe_Repaint_0:
   \   00000094   2000               MOVS     R0,R4
   \   00000096   0828               CMP      R0,#+8
   \   00000098   B5D3               BCC      ??ZmienneAnalogowe_Repaint_1
  11372             
  11373          
  11374               
  11375                  
  11376                }//_______________________________________________________________________
   \   0000009A   FEBC               POP      {R1-R7}
   \   0000009C   01BC               POP      {R0}
   \   0000009E   0047               BX       R0               ;; return
   \                     ??ZmienneAnalogowe_Repaint_2:
   \   000000A0   ........           DC32     `?<Constant "a">`
   \   000000A4   ........           DC32     ZM_OFFSET
   \   000000A8   ........           DC32     VariablesAnal

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   E60A0000           DC32     0xae6

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   DF510F00           DC32     0xf51df

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   B4C30000           DC32     0xc3b4

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     `?<Constant "Info ">`

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   672B0000           DC32     0x2b67

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     g_leng

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   7D0A0000           DC32     0xa7d

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   ........           DC32     Speech

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     `?<Constant "Info ">` + 28

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   98BB0000           DC32     0xbb98

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   ........           DC32     gProg

   \                                 In section .rodata, align 4
   \   00000000   00                 DC8 ""
   \   00000001   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Info ">`:
   \   00000000   496E666F2000       DC8 "Info "
   \   00000006   0000               DC8 0, 0
   \   00000008   4D61783D00         DC8 "Max="
   \   0000000D   000000             DC8 0, 0, 0
   \   00000010   2B2F2D203330       DC8 "+/- 3000 "
   \              30302000    
   \   0000001A   0000               DC8 0, 0
   \   0000001C   526573746172       DC8 "Restart"
   \              7400        
   \   00000024   4D454E5500         DC8 "MENU"
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   50726F677261       DC8 "Program "
   \              6D2000      
   \   00000035   000000             DC8 0, 0, 0
   \   00000038   4D6F64656C3A       DC8 "Model: "
   \              2000        
   \   00000040   4E6F64652049       DC8 "Node ID: "
   \              443A2000    
   \   0000004A   0000               DC8 0, 0
   \   0000004C   5379732E2076       DC8 "Sys. version: "
   \              657273696F6E
   \              3A2000      
   \   0000005B   00                 DC8 0
   \   0000005C   5472616E732E       DC8 "Trans. period: "
   \              20706572696F
   \              643A2000    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Checking Wi-Fi">`:
   \   00000000   436865636B69       DC8 "Checking Wi-Fi"
   \              6E672057692D
   \              466900      
   \   0000000F   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2000               DC8 " "
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant " INFO ">`:
   \   00000000   20494E464F20       DC8 " INFO "
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`:
   \   00000000   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   00000011   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   0000001C   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   0000002B   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   0000000C   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   0000001D   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000028   0000E0F8987C       DC8 0, 0, 224, 248, 152, 124, 180, 220, 56, 248, 224, 0, 0, 0, 0, 0, 3
   \              B4DC38F8E000
   \              0000000003  
   \   00000039   030705070303       DC8 3, 7, 5, 7, 3, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000044   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   00000053   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \                     `?<Constant {{128, 192, 192, 128, 128, 224, 128`:
   \   00000000   80C0C08080E0       DC8 128, 192, 192, 128, 128, 224, 128, 224, 128, 224, 128, 128, 128
   \              80E080E08080
   \              80          
   \   0000000D   808080800003       DC8 128, 128, 128, 128, 0, 3, 7, 7, 3, 3, 3, 3, 3, 2, 2, 2, 14, 2, 14
   \              070703030303
   \              030202020E02
   \              0E          
   \   00000020   020E02010000       DC8 2, 14, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000036   0000               DC8 0, 0
   \   00000038   4175746F00         DC8 "Auto"
   \   0000003D   000000             DC8 0, 0, 0
   \   00000040   4175746F206F       DC8 "Auto off"
   \              666600      
   \   00000049   000000             DC8 0, 0, 0
   \   0000004C   4175746F206F       DC8 "Auto on"
   \              6E00        

   \                                 In section .rodata, align 4
   \                     `?<Constant {130, 0}>`:
   \   00000000   82000000           DC8 130, 0, 0, 0
   \   00000004   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \   00000000   2D00               DC8 "-"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2B00               DC8 "+"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {130, 0}>_1`:
   \   00000000   82000000           DC8 130, 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3A00               DC8 ":"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 240, 252, 127, 143, 243, 251, `:
   \   00000000   00F0FC7F8FF3       DC8 0, 240, 252, 127, 143, 243, 251, 251, 251, 227, 131, 3, 7, 15, 14
   \              FBFBFBE38303
   \              070F0E      
   \   0000000F   1E3C78F0E0C0       DC8 30, 60, 120, 240, 224, 192, 128, 0, 0, 0, 128, 192, 224, 240, 112
   \              8000000080C0
   \              E0F070      
   \   0000001E   389CCEEF7703       DC8 56, 156, 206, 239, 119, 3, 3, 3, 227, 255, 255, 31, 7, 31, 254, 252
   \              0303E3FFFF1F
   \              071FFEFC    
   \   0000002E   FCFFFF00FFFF       DC8 252, 255, 255, 0, 255, 255, 255, 255, 255, 255, 255, 254, 248, 48
   \              FFFFFFFFFFFE
   \              F830        
   \   0000003C   300000000001       DC8 48, 0, 0, 0, 0, 1, 3, 39, 183, 182, 183, 183, 123, 253, 254, 254
   \              0327B7B6B7B7
   \              7BFDFEFE    
   \   0000004C   FFFFFF010000       DC8 255, 255, 255, 1, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 255, 255, 1, 63
   \              0000FFFF0000
   \              0000FFFF013F
   \   0000005E   FFF8C73F7F7F       DC8 255, 248, 199, 63, 127, 127, 127, 31, 7, 1, 128, 128, 192, 224, 240
   \              7F1F07018080
   \              C0E0F0      
   \   0000006D   783C1E0F0703       DC8 120, 60, 30, 15, 7, 3, 3, 3, 7, 15, 30, 61, 123, 247, 239, 223, 158
   \              0303070F1E3D
   \              7BF7EFDF9E  
   \   0000007E   B00000001FFF       DC8 176, 0, 0, 0, 31, 255, 252, 192, 128, 224, 255, 255, 0, 0, 1, 3, 3
   \              FCC080E0FFFF
   \              0000010303  
   \   0000008F   070707070707       DC8 7, 7, 7, 7, 7, 7, 3, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              030303010100
   \              000000000000
   \              0000000000  
   \   000000A6   000000000103       DC8 0, 0, 0, 0, 1, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 3, 1, 0
   \              030303070707
   \              070707030100

   \                                 In section .rodata, align 4
   \   00000000   5800               DC8 "X"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \   00000000   4300               DC8 "C"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   4500               DC8 "E"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "060480">`:
   \   00000000   303630343830       DC8 "060480"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   7300               DC8 "s"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3E2000             DC8 "> "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3C2000             DC8 "< "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2E00               DC8 "."
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3000               DC8 "0"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   4F6B2000           DC8 "Ok "

   \                                 In section .rodata, align 4
   \   00000000   432000             DC8 "C "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3F00               DC8 "?"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Alarm">`:
   \   00000000   416C61726D00       DC8 "Alarm"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4E722E3A0000       DC8 78, 114, 46, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \   00000000   56617200           DC8 "Var"

   \                                 In section .rodata, align 4
   \   00000000   2D316800           DC8 "-1h"

   \                                 In section .rodata, align 4
   \                     `?<Constant {129, 0}>_1`:
   \   00000000   81000000           DC8 129, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant {78, 114, 58, 0, 0}>`:
   \   00000000   4E723A000000       DC8 78, 114, 58, 0, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \   00000000   3C00               DC8 "<"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3E00               DC8 ">"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2E2E2E00           DC8 "..."

   \                                 In section .rodata, align 4
   \   00000000   3C3E00             DC8 "<>"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "New ID">`:
   \   00000000   4E6577204944       DC8 "New ID"
   \              00          
   \   00000007   00                 DC8 0
   \   00000008   494420646F20       DC8 "ID do zmiany"
   \              7A6D69616E79
   \              00          
   \   00000015   000000             DC8 0, 0, 0
   \   00000018   494420706F20       DC8 "ID po zmianie"
   \              7A6D69616E69
   \              6500        
   \   00000026   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   256400             DC8 "%d"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Konwertuj">`:
   \   00000000   4B6F6E776572       DC8 "Konwertuj"
   \              74756A00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "We/Wy">`:
   \   00000000   57652F577900       DC8 "We/Wy"
   \   00000006   0000               DC8 0, 0
   \   00000008   576520616E61       DC8 "We analog."
   \              6C6F672E00  
   \   00000013   00                 DC8 0
   \   00000014   54657374204D       DC8 "Test MG1"
   \              473100      
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   4F64653A00         DC8 "Ode:"
   \   00000025   000000             DC8 0, 0, 0
   \   00000028   5779733A00         DC8 "Wys:"
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   54657374204D       DC8 "Test MR1."
   \              52312E00    
   \   0000003A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4D6173746572       DC8 "Master/Slave "
   \              2F536C617665
   \              2000        
   \   0000001A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4A657A796B00       DC8 "Jezyk"
   \   00000012   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant "060480">_1`:
   \   00000000   303630343830       DC8 "060480"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "------------">`:
   \   00000000   2D2D2D2D2D2D       DC8 "------------"
   \              2D2D2D2D2D2D
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`:
   \   00000000   000000001F00       DC32 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334
   \              00003B000000
   \              5A0000007800
   \              000097000000
   \              B5000000D400
   \              0000F3000000
   \              110100003001
   \              00004E010000

   \                                 In section .rodata, align 4
   \                     `?<Constant {30}>`:
   \   00000000   1E000000           DC8 30, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "On/off">`:
   \   00000000   4F6E2F6F6666       DC8 "On/off"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3A303000           DC8 ":00"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4D6F646500         DC8 "Mode"
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   4D6173746572       DC8 "Master "
   \              2000        
   \   0000001C   536C61766520       DC8 "Slave "
   \              00          
   \   00000023   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   4F4B00             DC8 "OK"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Node ">`:
   \   00000000   4E6F64652000       DC8 "Node "
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   49642000           DC8 "Id "

   \                                 In section .rodata, align 4
   \                     `?<Constant " ID ">`:
   \   00000000   2049442000         DC8 " ID "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   543100             DC8 "T1"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   543200             DC8 "T2"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3600               DC8 "6"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   313200             DC8 "12"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   313800             DC8 "18"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   323300             DC8 "23"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`:
   \   00000000   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   00000011   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   0000001C   0000E0F8987C       DC8 0, 0, 224, 248, 152, 124, 180, 220, 56, 248, 224, 0, 0, 0, 0, 0, 3
   \              B4DC38F8E000
   \              0000000003  
   \   0000002D   030705070303       DC8 3, 7, 5, 7, 3, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000038   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   00000047   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \                     `?<Constant "Info">`:
   \   00000000   496E666F00         DC8 "Info"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   444900             DC8 "DI"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   444F00             DC8 "DO"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "MG1 TEST">`:
   \   00000000   4D4731205445       DC8 "MG1 TEST"
   \              535400      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Nowy test">`:
   \   00000000   4E6F77792074       DC8 "Nowy test"
   \              65737400    
   \   0000000A   0000               DC8 0, 0
   \   0000000C   446C75676920       DC8 "Dlugi test"
   \              7465737400  
   \   00000017   00                 DC8 0
   \   00000018   426C61642074       DC8 "Blad testu"
   \              6573747500  
   \   00000023   00                 DC8 0
   \   00000024   54657374204F       DC8 "Test OK"
   \              4B00        
   \   0000002C   437A61732074       DC8 "Czas t:"
   \              3A00        
   \   00000034   2564207300         DC8 "%d s"
   \   00000039   000000             DC8 0, 0, 0
   \   0000003C   437A61732070       DC8 "Czas p:"
   \              3A00        

   \                                 In section .rodata, align 4
   \   00000000   513100             DC8 "Q1"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   496E3100           DC8 "In1"

   \                                 In section .rodata, align 4
   \   00000000   513200             DC8 "Q2"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   496E3200           DC8 "In2"

   \                                 In section .rodata, align 4
   \                     `?<Constant "Type:">`:
   \   00000000   547970653A00       DC8 "Type:"
   \   00000006   0000               DC8 0, 0
   \   00000008   536F66742076       DC8 "Soft version:"
   \              657273696F6E
   \              3A00        
   \   00000016   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Host">`:
   \   00000000   486F737400         DC8 "Host"
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   536572766572       DC8 "Server reset"
   \              207265736574
   \              00          
   \   00000015   000000             DC8 0, 0, 0
   \   00000018   2E2E2E2E2E2E       DC8 "................................."
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E00    
   \   0000003A   0000               DC8 0, 0
   \   0000003C   2E2E2E2E2E2E       DC8 ".................................."
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E00  
   \   0000005F   00                 DC8 0
   \   00000060   5A6C79206164       DC8 "Zly adres IP"
   \              726573204950
   \              00          
   \   0000006D   000000             DC8 0, 0, 0
   \   00000070   57726F6E6720       DC8 "Wrong IP adress"
   \              495020616472
   \              65737300    
   \   00000080   5A6C79206164       DC8 "Zly adres maski "
   \              726573206D61
   \              736B692000  
   \   00000091   000000             DC8 0, 0, 0
   \   00000094   57726F6E6720       DC8 "Wrong mask adress"
   \              6D61736B2061
   \              647265737300
   \   000000A6   0000               DC8 0, 0
   \   000000A8   5A6C79206164       DC8 "Zly adres bramy "
   \              726573206272
   \              616D792000  
   \   000000B9   000000             DC8 0, 0, 0
   \   000000BC   57726F6E6720       DC8 "Wrong gateway adress"
   \              676174657761
   \              792061647265
   \              737300      
   \   000000D1   000000             DC8 0, 0, 0
   \   000000D4   49502F544350       DC8 "IP/TCP"
   \              00          
   \   000000DB   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "TCP/IP">`:
   \   00000000   5443502F4950       DC8 "TCP/IP"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Not connected">`:
   \   00000000   4E6F7420636F       DC8 "Not connected"
   \              6E6E65637465
   \              6400        
   \   0000000E   0000               DC8 0, 0
   \   00000010   436F6E6E6563       DC8 "Connecting"
   \              74696E6700  
   \   0000001B   00                 DC8 0
   \   0000001C   436F6E6E6563       DC8 "Connecting ."
   \              74696E67202E
   \              00          
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   436F6E6E6563       DC8 "Connecting .."
   \              74696E67202E
   \              2E00        
   \   0000003A   0000               DC8 0, 0
   \   0000003C   436F6E6E6563       DC8 "Connecting ..."
   \              74696E67202E
   \              2E2E00      
   \   0000004B   00                 DC8 0
   \   0000004C   436F6E6E6563       DC8 "Connected"
   \              74656400    
   \   00000056   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Przyklad:\\n   a.bbb.pl...">`:
   \   00000000   50727A796B6C       DC8 50H, 72H, 7AH, 79H, 6BH, 6CH, 61H, 64H
   \              6164        
   \   00000008   3A0A20202061       DC8 3AH, 0AH, 20H, 20H, 20H, 61H, 2EH, 62H
   \              2E62        
   \   00000010   62622E706C2F       DC8 62H, 62H, 2EH, 70H, 6CH, 2FH, 63H, 63H
   \              6363        
   \   00000018   0A0A20446F6D       DC8 0AH, 0AH, 20H, 44H, 6FH, 6DH, 65H, 6EH
   \              656E        
   \   00000020   613A20626262       DC8 61H, 3AH, 20H, 62H, 62H, 62H, 2EH, 70H
   \              2E70        
   \   00000028   6C0A53756264       DC8 6CH, 0AH, 53H, 75H, 62H, 64H, 6FH, 6DH
   \              6F6D        
   \   00000030   656E613A2061       DC8 65H, 6EH, 61H, 3AH, 20H, 61H, 0AH, 20H
   \              0A20        
   \   00000038   536369657A6B       DC8 53H, 63H, 69H, 65H, 7AH, 6BH, 61H, 3AH
   \              613A        
   \   00000040   202F636300         DC8 20H, 2FH, 63H, 63H, 0
   \   00000045   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Ustaw okresowosc pola...">`:
   \   00000000   557374617720       DC8 "Ustaw okresowosc polaczen z serwerem"
   \              6F6B7265736F
   \              776F73632070
   \              6F6C61637A65
   \              6E207A207365
   \              72776572656D
   \              00          
   \   00000025   000000             DC8 0, 0, 0
   \   00000028   536574207468       DC8 "Set the periodicity of server connections"
   \              652070657269
   \              6F6469636974
   \              79206F662073
   \              657276657220
   \              636F6E6E6563
   \              74696F6E7300
   \   00000052   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Auto IP -on">`:
   \   00000000   4175746F2049       DC8 "Auto IP -on"
   \              50202D6F6E00
   \   0000000C   495020636F6E       DC8 "IP config"
   \              66696700    
   \   00000016   0000               DC8 0, 0
   \   00000018   4175746F2049       DC8 "Auto IP -off"
   \              50202D6F6666
   \              00          
   \   00000025   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3F3F3F00           DC8 "???"

   \                                 In section .rodata, align 4
   \                     `?<Constant "b">`:
   \   00000000   6200               DC8 "b"
   \   00000002   000000000000       DC8 0, 0, 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "a">`:
   \   00000000   6100               DC8 "a"
   \   00000002   000000000000       DC8 0, 0, 0, 0, 0, 0
  11377                
  11378                
  11379                
  11380                   
                          ^
Warning[Pe001]: last line of file ends without a newline

   Maximum stack usage in bytes:

     Function                   .cstack
     --------                   -------
     AddRow                         24
     AdvanceSet_Event               24
     AdvanceSet_Paint               48
     AlarmPassChange_Event          56
     AlarmPassChange_Paint          40
     AlarmPass_Event                48
     AlarmPass_Paint                40
     AlarmPass_Refresh              72
     Alarm_Event                    40
     Alarm_Paint                    64
     Alarm_Refresh                  56
     AnalogGraph_Event              40
     AnalogGraph_Paint              88
     Animation_Event                 8
     BigTemperLabel_Event           40
     BigTemperLabel_Paint           72
     ButtonAction_Event             40
     ButtonAction_Paint             72
     ButtonOptions_Event            32
     ButtonOptions_Paint            64
     ChangeID_Event                 40
     ChangeID_Paint                 80
     ChangeID_Refresh               32
     CheckChannel                   32
     CheckIP                        16
     CheckingModule_Event           32
     CheckingModule_Paint           72
     CheckingModule_Refresh         64
     CleanAll_Event                 24
     CleanReg_Event                 16
     ExecuteSpecialThermVar          8
     Host_WiFi_Event                40
     Host_WiFi_Paint                64
     Info_Event                      8
     Info_Paint                     56
     Info_Refresh                   40
     IpConfig_Event                 40
     IpConfig_Paint                 64
     IpTCP_Event                    40
     IpTCP_Paint                    56
     LaderChange_Event              32
     LaderChange_Paint              48
     Lader_Event                    40
     Lader_Paint                    72
     MESSAGE                       168
     MESSAGE_Refresh                40
     MainSide_Event                 56
     MainSide_Paint                 88
     MainSide_Refresh              144
     MasterSlave_Event              32
     MasterSlave_Paint              64
     MenuAccessPass_Event           56
     MenuAccessPass_Paint           48
     MenuAccess_Event               32
     MenuAccess_Paint               64
     MenuPaint                       8
     MenuRefresh                    16
     MenuSide_Event                 24
     MenuSide_Paint                 48
     NetInfo_Event                  32
     NetInfo_Paint                  80
     NetInfo_Refresh                56
     NetPeriodicity_Event           40
     NetPeriodicity_Paint           64
     Net_Event                      32
     Net_Paint                      64
     NeuronNrChange_Evant           48
     NeuronNrChange_Paint           64
     NeuronsList_Event              32
     NeuronsList_Paint              72
     NeuronsList_Refresh            48
     NodeInfo_Event                 24
     NodeInfo_Paint                 56
     NodeInfo_Refresh               56
     NodeStanIO_Event               48
     NodeStanIO_Paint               56
     NodeStanIO_Refresh             64
     NodeTestTrans_Event            32
     NodeTestTrans_Paint            80
     NodeTestTrans_Refresh          56
     NodeWeAnalog_Event             24
     NodeWeAnalog_Paint             64
     NodeWeAnalog_Refresh           56
     Node_Event                     40
     Node_Paint                     56
     Options_Event                  32
     Options_Paint                  48
     PaintProc                      56
     Procedure_Event                40
     Procedure_Paint                96
     Punkt_dostepuWiFi_Event        40
     Punkt_dostepuWiFi_Paint        64
     RF_Channel_Event               48
     RF_Channel_Paint               72
     RF_Channel_Refresh             72
     RemRow                         16
     RemRow_Event                   16
     RemRow_Paint                    8
     Restart_Event                   8
     SaveChanges_Evant              16
     ScreenAlarmSet_Event           48
     ScreenAlarmSet_Paint           72
     ScreenBrightness_Event         40
     ScreenBrightness_Paint         72
     ScreenDesign1_Event            48
     ScreenDesign1_Paint            48
     ScreenEvent                     8
     ScreenGraph                    64
     ScreenSet_Event                40
     ScreenSet_Paint                96
     ScreenSetup_Event              24
     ScreenSetup_Paint              48
     ScreenSever_Event              40
     ScreenSever_Paint              72
     ScreenTimetableSet_Event       40
     ScreenTimetableSet_Paint       80
     SetTouchScreen_Event           40
     SetTouchScreen_Paint           48
     SetupLang_Event                32
     SetupLang_Paint                64
     SetupNewPass_Event             48
     SetupNewPass_Paint             40
     SetupOldPass_Event             56
     SetupOldPass_Paint             40
     SetupPass_Event                32
     SetupPass_Paint                64
     SetupTime_Event                56
     SetupTime_Paint                72
     SetupTime_Refresh              48
     Setup_Event                    32
     Setup_Paint                    64
     StartAnimation_Event            8
     StartAnimation_Paint           40
     Sygnal_Event                   32
     Sygnal_Paint                   48
     Termostat_Event                64
     Termostat_Paint               128
     Termostat_Refresh              56
     Tester_MG1_Event               32
     Tester_MG1_Paint               64
     Tester_MG1_Refresh             64
     TextChange_Evant               80
     TextChange_Paint               72
     TextChange_Refresh             24
     ThermostatAutoSet_Event        48
     ThermostatAutoSet_Paint        72
     ThermostatChartSet_Event       48
     ThermostatChartSet_Paint       80
     ThermostatChartSet_Refresh     48
     ThermostatSet_Event            56
     ThermostatSet_Paint            72
     TimetableSet_Event             40
     TimetableSet_Paint             80
     Timetable_Event                64
     Timetable_Paint                96
     UstawSiec_Event                24
     UstawSiec_Paint                48
     ValueChange_Evant              48
     ValueChange_Paint              64
     Wait_Paint                    200
     WiFiConecting_Paint            56
     WiFiConecting_Refresh          40
     WybProc                        24
     ZmienneAnalogowe_Event         32
     ZmienneAnalogowe_Paint         56
     ZmienneAnalogowe_Repaint       56
     ZmienneDwustanowe_Event        32
     ZmienneDwustanowe_Paint        56
     ZmienneDwustanowe_Repaint      56
     Zmienne_Event                  24
     Zmienne_Paint                  48
     ZoneButon                      48
     ZoneGraph                      56
     ZoneGraph_Event                40
     ZoneGraph_Paint                80
     dzienTygodnia                  64
     przestepny                      8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     ?<Constant {0, 0, 0, 0, 0, 0, 0}>
                                     848
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2
                                     384
     ProcTMRS_graf                    28
     ProcConstAnal_graf               56
     BateriaWyladowana                12
     ?<Constant "Reason:">            52
     MainSide_puls                     1
     wartosc_tmp                       4
     text_label_tmp                   12
     Label_move                        1
     Suw_poz_IO                        4
     Suw_poz_analog                    4
     Suw_poz_dwustan                   4
     Suw_poz_monit                     4
     CyklMonit                         1
     Monitoring_array                240
     Monit_Size_scroll                 4
     MenuPaint                      1264
     ScreenEvent                    1256
     MenuRefresh                     568
     InitPointer                       3
     StartAnimation_Paint            396
     StartAnimation_Event             60
     CheckChannel                    152
     MainSide_Paint                  720
     MESSAGE                         524
     MESSAGE_Refresh                 156
     MainSide_Event                  652
     MainSide_Refresh               1552
     Termostat_Paint                 548
     ExecuteSpecialThermVar           56
     Termostat_Event                 848
     Termostat_Refresh               504
     LastTemp                         36
     Timetable_Paint                 612
     Timetable_Event                 860
     TimetableSet_Paint              596
     TimetableSet_Event              560
     Wait_Paint                       56
     Animation_Event                  56
     AdvanceSet_Paint                 88
     AdvanceSet_Event                124
     CleanAll_Event                  212
     MenuSide_Paint                  112
     MenuSide_Event                  116
     MenuAccess_Paint                136
     MenuAccess_Event                236
     MenuAccessPass_Paint            148
     MenuAccessPass_Event            600
     PaintProc                      3804
     Lader_Paint                     516
     Lader_Event                     744
     WybProc                         100
     Procedure_Paint                3248
     Procedure_Event                3028
     ValueChange_Paint               412
     ValueChange_Evant               820
     LaderChange_Paint                80
     LaderChange_Event               160
     AddRow                          176
     RemRow                          148
     RemRow_Paint                    128
     RemRow_Event                    104
     SaveChanges_Evant               168
     ScreenSet_Paint                 548
     ScreenSet_Event                 380
     ThermostatSet_Paint             968
     ThermostatSet_Event             684
     ScreenTimetableSet_Paint        740
     ScreenTimetableSet_Event        588
     ScreenAlarmSet_Paint            656
     ScreenAlarmSet_Event            584
     ZoneButon                       218
     ZoneGraph                       604
     ScreenGraph                     940
     ScreenDesign1_Paint             592
     ScreenDesign1_Event             672
     ButtonOptions_Paint             148
     ButtonOptions_Event             156
     ButtonAction_Paint              324
     ButtonAction_Event              364
     BigTemperLabel_Paint            336
     BigTemperLabel_Event            372
     ZoneGraph_Paint                1696
     ZoneGraph_Event                1276
     ?<Constant {0, 0}>              572
     ?<Constant {129, 0}>           2092
     abc                               4
     DeyOfWeekLongStr                192
     ?<Constant "Firmware: ">        160
     TouchTestSor                      8
     Klepsydra                         8
     Siec                            168
     StrzalkaPrawo                    24
     TextChange_Paint                476
     TextChange_Refresh              148
     TextChange_Evant               1228
     AnalogGraph_Paint              1008
     AnalogGraph_Event               664
     ?<Constant "Tester">             40
     Options_Paint                   108
     Options_Event                   192
     ChangeID_Paint                  440
     ChangeID_Event                  252
     ChangeID_Refresh                528
     CheckingModule_Paint            428
     CheckingModule_Event            288
     CheckingModule_Refresh          536
     Setup_Paint                     244
     Setup_Event                     220
     SetupLang_Paint                 120
     SetupLang_Event                 136
     SetupPass_Paint                 172
     SetupPass_Event                 272
     SetupOldPass_Paint              136
     SetupOldPass_Event              444
     SetupNewPass_Paint              140
     SetupNewPass_Event              436
     ScreenSetup_Paint                96
     ScreenSetup_Event               108
     SetTouchScreen_Paint            440
     StartAdvance                     36
     InsertPass1                      24
     VCTT_ill                         12
     ptxt                              4
     count                             2
     LastText_EventTime                8
     Dziel5                            1
     Dziel5                            1
     SetTouchScreen_Event            496
     Restart_Event                   100
     CleanReg_Event                  104
     SetupTime_Paint                 740
     SetupTime_Refresh               356
     przestepny                       58
     dzienTygodnia                   132
     SetupTime_Event                 920
     ScreenBrightness_Paint          620
     ScreenBrightness_Event          480
     ScreenSever_Paint               548
     ScreenSever_Event               428
     MasterSlave_Paint               100
     MasterSlave_Event               440
     RF_Channel_nr_tmp                 2
     InsertOldPass1                   24
     RF_Channel_Paint                432
     RF_Channel_Refresh              332
     RF_Channel_Event                556
     Sygnal_Paint                     88
     Sygnal_Event                    116
     NeuronsList_Paint               556
     wpistmp                           4
     NeuronsList_Event               812
     NeuronsList_Refresh             768
     Dzielnik20                        1
     NeuronNrChange_Paint            352
     NeuronNrChange_Evant            592
     Info_Paint                      436
     Info_Refresh                    120
     IRdiv                             4
     Info_Event                       64
     ThermostatAutoSet_Paint        1104
     ThermostatAutoSet_Event         700
     ThermostatChartSet_Paint        524
     ThermostatChartSet_Event        472
     ThermostatChartSet_Refresh      136
     ThermHourModyfi                   2
     Alarm_Paint                     172
     Alarm_Event                     252
     Alarm_Refresh                   216
     LastCount                         4
     AlarmPass_Paint                 112
     AlarmPass_Event                 452
     AlarmPass_Refresh               280
     AlarmPassChange_Paint           164
     AlarmPassChange_Event           496
     Node_Paint                      236
     Node_Event                      324
     NodeTestTrans_Paint             400
     NodeTestTrans_Event             112
     NodeTestTrans_Refresh           180
     Dziel8                            1
     NodeStanIO_Paint                108
     NodeStanIO_Event                268
     NodeStanIO_Refresh              920
     NodeWeAnalog_Paint              240
     NodeWeAnalog_Event              108
     NodeWeAnalog_Refresh            236
     Dziel5                            1
     Tester_MG1_Paint                240
     TextToChangeLength             1160
     ScrollMenu_poz                    4
     ScrollMenu_Paint_exist            4
     SetupTimeCarPoz                   2
     SetTimeCell                       1
     Dziel5                            1
     Tester_MG1_Event                224
     Tester_MG1_Refresh             1924
     NodeInfo_Paint                  100
     NodeInfo_Event                   96
     NodeInfo_Refresh                284
     Dziel10                           1
     Net_Paint                       208
     Net_Event                       344
     UstawSiec_Paint                  84
     UstawSiec_Event                 116
     Punkt_dostepuWiFi_Paint         348
     Punkt_dostepuWiFi_Event         308
     WiFiConecting_Paint              80
     WiFiConecting_Refresh           508
     licz                              2
     WiFiReConnect                     1
     Host_WiFi_Paint                 612
     Host_WiFi_Event                 444
     NetPeriodicity_Paint            256
     NetPeriodicity_Event            308
     IpTCP_Paint                     176
     IpTCP_Event                     328
     CheckIP                          88
     IpConfig_Paint                  648
     IpConfig_Event                  512
     NetInfo_Paint                   500
     NetInfo_Event                   128
     NetInfo_Refresh                 604
     TransferInfo                      2
     Zmienne_Paint                    80
     Zmienne_Event                    96
     ZM_OFFSET                         1
     ZmienneDwustanowe_Paint         136
     ZmienneDwustanowe_Event         188
     ZmienneDwustanowe_Repaint       196
     ZmienneAnalogowe_Paint          136
     ZmienneAnalogowe_Event          188
     ZmienneAnalogowe_Repaint        172
     ??DataTable0                      4
     ??DataTable1                      4
     ??DataTable2                      4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable26                     4
     ??DataTable27                     4
     ??DataTable28                     4
     ??DataTable29                     4
     ??DataTable32                     4
     ??DataTable33                     4
     ?<Constant "">                    4
     ?<Constant "Info ">             108
     ?<Constant "Checking Wi-Fi">     16
     ?<Constant " ">                   4
     ?<Constant " INFO ">              8
     ?<Constant {{0, 0, 224, 24, 232, 244, 244, 244
                                      56
     ?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>
                                      96
     ?<Constant {{128, 192, 192, 128, 128, 224, 128
                                      84
     ?<Constant {130, 0}>             16
     ?<Constant "-">                   4
     ?<Constant "+">                   4
     ?<Constant {130, 0}>_1            4
     ?<Constant ":">                   4
     ?<Constant {{0, 240, 252, 127, 143, 243, 251,
                                     184
     ?<Constant "X">                   4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1
                                      12
     ?<Constant "C">                   4
     ?<Constant "E">                   4
     ?<Constant "060480">              8
     ?<Constant "s">                   4
     ?<Constant "> ">                  4
     ?<Constant "< ">                  4
     ?<Constant ".">                   4
     ?<Constant "0">                   4
     ?<Constant "Ok ">                 4
     ?<Constant "C ">                  4
     ?<Constant "?">                   4
     ?<Constant "Alarm">               8
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3
                                      20
     ?<Constant "Var">                 4
     ?<Constant "-1h">                 4
     ?<Constant {129, 0}>_1            4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4
                                      12
     ?<Constant {78, 114, 58, 0, 0}>
                                       8
     ?<Constant "<">                   4
     ?<Constant ">">                   4
     ?<Constant "...">                 4
     ?<Constant "<>">                  4
     ?<Constant "New ID">             40
     ?<Constant "%d">                  4
     ?<Constant "Konwertuj">          12
     ?<Constant "We/Wy">              60
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5
                                      28
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6
                                      20
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7
                                      12
     ?<Constant "060480">_1            8
     ?<Constant "------------">       16
     ?<Constant {0, 31, 59, 90, 120, 151, 181, 212,
                                      48
     ?<Constant {30}>                  4
     ?<Constant "On/off">              8
     ?<Constant ":00">                 4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8
                                      36
     ?<Constant "OK">                  4
     ?<Constant "Node ">               8
     ?<Constant "Id ">                 4
     ?<Constant " ID ">                8
     ?<Constant "T1">                  4
     ?<Constant "T2">                  4
     ?<Constant "6">                   4
     ?<Constant "12">                  4
     ?<Constant "18">                  4
     ?<Constant "23">                  4
     ?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2
                                      84
     ?<Constant "Info">                8
     ?<Constant "DI">                  4
     ?<Constant "DO">                  4
     ?<Constant "MG1 TEST">           12
     ?<Constant "Nowy test">          68
     ?<Constant "Q1">                  4
     ?<Constant "In1">                 4
     ?<Constant "Q2">                  4
     ?<Constant "In2">                 4
     ?<Constant "Type:">              24
     ?<Constant "Host">              220
     ?<Constant "TCP/IP">              8
     ?<Constant "Not connected">      88
     ?<Constant "Przyklad:\n   a.bbb.pl...">
                                      72
     ?<Constant "Ustaw okresowosc pola...">
                                      84
     ?<Constant "Auto IP -on">        40
     ?<Constant "???">                 4
     ?<Constant "b">                   8
     ?<Constant "a">                   8
      Others                          64

 
    420 bytes in section .bss
  1 208 bytes in section .data
  6 480 bytes in section .rodata
 79 236 bytes in section Debug.txt
 
 79 172 bytes of CODE  memory (+ 64 bytes shared)
  6 480 bytes of CONST memory
  1 628 bytes of DATA  memory

Errors: none
Warnings: 127
