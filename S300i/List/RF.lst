###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           04/Jun/2013  20:18:16 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v1.3 -              #
#                    04.06.2013\Framework\RF.c                                #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v1.3 -             #
#                    04.06.2013\Framework\RF.c" -D AT91SAM7S256 -D            #
#                    AT91SAM7SEK -D iH -D __ALARM -D __WIFI_MODULE -D S300i   #
#                    -lC "D:\Zeuron\Projekty\S300\S300-program v1.3 -         #
#                    04.06.2013\S300i\List\" --diag_suppress Pa082 -o         #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 -             #
#                    04.06.2013\S300i\Obj\" --debug --endian little --cpu     #
#                    ARM7TDMI -e --fpu None --dlib_config "C:\Program Files   #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    5.0\ARM\INC\DLib_Config_Normal.h" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 -             #
#                    04.06.2013\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 -             #
#                    04.06.2013\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 -             #
#                    04.06.2013\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.3 - 04.06.2013\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v1.3 - 04.06.2013\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 -             #
#                    04.06.2013\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v1.3 - 04.06.2013\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.3 -             #
#                    04.06.2013\Framework\Configuration\" -I "C:\Program      #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.0\ARM\INC\" --section .text=Debug.txt --interwork      #
#                    --cpu_mode thumb -Oh                                     #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v1.3 -              #
#                    04.06.2013\S300i\List\RF.lst                             #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v1.3 -              #
#                    04.06.2013\S300i\Obj\RF.o                                #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v1.3 - 04.06.2013\Framework\RF.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                  Microcontroller Software Support                        *//                       
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : RF.c                                     *//
      7          //*  Opis                         : Plik obs³ugi sprzêtowej komunikacji radiowej *//
      8          //*  Autor                        : Pawe³ Narwojsz                           *//
      9          //*  Data utrzorzenia             : 31.06.2010                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*// 
     19          //****************************************************************************//
     20          //****************************************************************************//
     21          
     22          
     23          
     24                #include "RF.h"   
     25                #include "RF_Exe.h"
     26                #include <intrinsics.h>
     27                #include "Framework.h"
     28                #include "core/device.h"   
     29                #include "board.h"   
     30                #include "spi_main.h"
     31                #include "core/trace.h"
     32                #include "InterruptPriority.h"

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v1.3 - 04.06.2013\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline
     33          
     34          
     35          
     36          
     37          

   \                                 In section .bss, align 4
     38          _RF_Rx RF_Rx;
   \                     RF_Rx:
   \   00000000                      DS8 24
     39          _RF_Tx RF_Tx;
     40          
     41          char SPI_RFM12_Read=0;
     42          

   \                                 In section .rodata, align 4
     43          const char Preambu[]={0xAA, 0xAA, 0xAA};  //Preambu³a
   \                     Preambu:
   \   00000000   AAAAAA00           DC8 170, 170, 170, 0

   \                                 In section .rodata, align 4
     44          const char SynKay[]= {0x2D, 0xD4};        //s³owo synchronizacyjne
   \                     SynKay:
   \   00000000   2DD40000           DC8 45, 212, 0, 0
     45          
     46          
     47          
     48          
     49          
     50          
     51          
     52          
     53          
     54          
     55          
     56          //Zmienne globalne -------------------------------------------------------------
     57            _RF_Status RF_Status;
     58          //___________________________Koniec zmiennych globalnych________________________
     59          
     60          
     61            extern unsigned long long  g_counter;
     62            extern char g_RF_TimeOutCounter;
     63            extern volatile char SlaveMode;
     64            
     65           char tmp_int=0;
     66            
     67          //Tworzenie pse³do-klasy RF_Status --------------------------------------------
     68              
     69            //Uruchomienie trybu Nadajnika

   \                                 In section Debug.txt, align 4, keep-with-next
     70            void _RF_EnableTX(void)
     71            {
   \                     _RF_EnableTX:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
     72               
     73              RF_Status.EnRx=0;
   \   00000002   ....               LDR      R4,??DataTable14  ;; RF_Status
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   6070               STRB     R0,[R4, #+1]
     74              RF_Status.EnTx=0;
   \   00000008   A070               STRB     R0,[R4, #+2]
     75              RF_Status.Transmit=0;
   \   0000000A   2072               STRB     R0,[R4, #+8]
     76              RF_Tx.BytesToSend=0;
   \   0000000C   ....               LDR      R1,??DataTable11  ;; RF_Tx + 20
   \   0000000E   0870               STRB     R0,[R1, #+0]
     77              RF_Status.EnRxWait=0;
   \   00000010   A072               STRB     R0,[R4, #+10]
     78              RF_Status.RxStarting=0;
   \   00000012   A071               STRB     R0,[R4, #+6]
     79              RF_Status.TxStarting=1;
   \   00000014   0125               MOVS     R5,#+1
   \   00000016   6571               STRB     R5,[R4, #+5]
     80          
     81              SPI_SendWord(0x8219,Cs_RF);                          //wy³¹cz odbiornik/nadajnik
                     ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000018   0221               MOVS     R1,#+2
   \   0000001A   ....               LDR      R0,??DataTable2  ;; 0x8219
   \   0000001C   ........           BL       SPI_SendWord
     82              RF_Status.InitTx=1;
   \   00000020   E570               STRB     R5,[R4, #+3]
     83          
     84          #ifdef __MaxRf
     85              AT91C_BASE_PIOA->PIO_SODR =TxPin; 
     86          #endif    
     87            }
   \   00000022   38BC               POP      {R3-R5}
   \   00000024   01BC               POP      {R0}
   \   00000026   0047               BX       R0               ;; return
     88          
     89          
     90            
     91            
     92            
     93            
     94           //Uruchomienie trybu odbiornika

   \                                 In section Debug.txt, align 4, keep-with-next
     95           void _RF_EnableRX(void)
     96            {
   \                     _RF_EnableRX:
   \   00000000   10B5               PUSH     {R4,LR}
     97              //Je¿eli przy prubie prze³¹czenia wysy³ane s¹ dane to poczekaj na zakoñczenie wysy³ki
     98              if ((RF_Tx.BytesToSend>0)) 
   \   00000002   ....               LDR      R4,??DataTable15  ;; RF_Tx
   \   00000004   207D               LDRB     R0,[R4, #+20]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   03D0               BEQ      ??_RF_EnableRX_0
     99              {
    100                RF_Status.EnRxWait=1; 
   \   0000000A   0C48               LDR      R0,??_RF_EnableRX_1  ;; RF_Status + 10
   \   0000000C   0121               MOVS     R1,#+1
   \   0000000E   0170               STRB     R1,[R0, #+0]
   \   00000010   10E0               B        ??_RF_EnableRX_2
    101              }else{
    102          
    103                SPI_SendWord(0x8067,Cs_RF); 
                       ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??_RF_EnableRX_0:
   \   00000012   0221               MOVS     R1,#+2
   \   00000014   ....               LDR      R0,??DataTable16  ;; 0x8067
   \   00000016   ........           BL       SPI_SendWord
    104                
    105                RF_Status.EnTx=0;
   \   0000001A   ....               LDR      R0,??DataTable14  ;; RF_Status
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   8170               STRB     R1,[R0, #+2]
    106                RF_Status.EnRx=0;
   \   00000020   4170               STRB     R1,[R0, #+1]
    107                RF_Tx.BytesToSend=0;
   \   00000022   2175               STRB     R1,[R4, #+20]
    108                RF_Status.Transmit=0;
   \   00000024   0172               STRB     R1,[R0, #+8]
    109                RF_Status.TxStarting=0;
   \   00000026   4171               STRB     R1,[R0, #+5]
    110                RF_Status.RxStarting=1;
   \   00000028   0121               MOVS     R1,#+1
   \   0000002A   8171               STRB     R1,[R0, #+6]
    111                
    112                SPI_SendWord(0x8299,Cs_RF);
   \   0000002C   0221               MOVS     R1,#+2
   \   0000002E   ....               LDR      R0,??DataTable6  ;; 0x8299
   \   00000030   ........           BL       SPI_SendWord
    113          
    114          
    115          
    116              }
    117            }
   \                     ??_RF_EnableRX_2:
   \   00000034   10BC               POP      {R4}
   \   00000036   01BC               POP      {R0}
   \   00000038   0047               BX       R0               ;; return
   \   0000003A   C046               Nop      
   \                     ??_RF_EnableRX_1:
   \   0000003C   ........           DC32     RF_Status + 10
    118          
    119            //Konstruktor RF_Status

   \                                 In section Debug.txt, align 4, keep-with-next
    120            void _pRF_Status(void)
    121            {
    122              RF_Status.EnableTX = _RF_EnableTX;
   \                     _pRF_Status:
   \   00000000   ....               LDR      R0,??DataTable14  ;; RF_Status
   \   00000002   0249               LDR      R1,??_pRF_Status_0  ;; _RF_EnableTX
   \   00000004   4162               STR      R1,[R0, #+36]
    123              RF_Status.EnableRX = _RF_EnableRX; 
   \   00000006   0249               LDR      R1,??_pRF_Status_0+0x4  ;; _RF_EnableRX
   \   00000008   8162               STR      R1,[R0, #+40]
    124            }
   \   0000000A   7047               BX       LR               ;; return
   \                     ??_pRF_Status_0:
   \   0000000C   ........           DC32     _RF_EnableTX
   \   00000010   ........           DC32     _RF_EnableRX
    125          
    126          //________koniec tworzenia pse³do-klasy RF_Status _______________________________
    127          
    128          
    129          
    130          
    131          
    132          

   \                                 In section Debug.txt, align 4, keep-with-next
    133          void InitRF_Interrupt(void)
    134          {
    135              AT91F_PIO_CfgInput(IR_PIO_BUS, RfIntBUS);
   \                     InitRF_Interrupt:
   \   00000000   8020               MOVS     R0,#+128
   \   00000002   C000               LSLS     R0,R0,#+3        ;; #+1024
   \   00000004   ....               LDR      R1,??DataTable12  ;; 0xfffff414
   \   00000006   0860               STR      R0,[R1, #+0]
   \   00000008   ....               LDR      R1,??DataTable13  ;; 0xfffff400
   \   0000000A   0860               STR      R0,[R1, #+0]
    136              AT91F_PIO_InterruptEnable(PIO_RfIntBUS, RfIntBUS);
   \   0000000C   0249               LDR      R1,??InitRF_Interrupt_0  ;; 0xfffff440
   \   0000000E   0860               STR      R0,[R1, #+0]
    137              AT91F_AIC_EnableIt(AT91C_BASE_AIC, ID_RfIntBUS);
   \   00000010   0248               LDR      R0,??InitRF_Interrupt_0+0x4  ;; 0xfffff120
   \   00000012   0421               MOVS     R1,#+4
   \   00000014   0160               STR      R1,[R0, #+0]
    138          }
   \   00000016   7047               BX       LR               ;; return
   \                     ??InitRF_Interrupt_0:
   \   00000018   40F4FFFF           DC32     0xfffff440
   \   0000001C   20F1FFFF           DC32     0xfffff120
    139          
    140            
    141            
    142          
    143          

   \                                 In section Debug.txt, align 4, keep-with-next
    144          void RF_Int(void)
    145          {
   \                     RF_Int:
   \   00000000   01B5               PUSH     {R0,LR}
    146            
    147              
    148              //je¿eli uka³d dzia³a jako odbiornik
    149              if (RF_Status.EnRx) 
   \   00000002   ....               LDR      R0,??DataTable14  ;; RF_Status
   \   00000004   4178               LDRB     R1,[R0, #+1]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   06D0               BEQ      ??RF_Int_0
    150              {
    151                if (RF_Status.Init==0) 
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   1BD1               BNE      ??RF_Int_1
    152                {
    153                  SPI_SendWord(0x0000,Cs_RF);
                         ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000010   0221               MOVS     R1,#+2
   \   00000012   ........           BL       SPI_SendWord
   \   00000016   17E0               B        ??RF_Int_1
    154                }
    155              }
    156              //je¿eli uka³d dzia³a jako nadajnik
    157              else if ((RF_Status.EnTx) && (RF_Status.Transmit==1))  
   \                     ??RF_Int_0:
   \   00000018   8178               LDRB     R1,[R0, #+2]
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   14D0               BEQ      ??RF_Int_1
   \   0000001E   017A               LDRB     R1,[R0, #+8]
   \   00000020   0129               CMP      R1,#+1
   \   00000022   11D1               BNE      ??RF_Int_1
    158              {
    159          
    160                
    161                if (RF_Tx.BytesToSend>0) 
   \   00000024   ....               LDR      R1,??DataTable11  ;; RF_Tx + 20
   \   00000026   0978               LDRB     R1,[R1, #+0]
   \   00000028   0029               CMP      R1,#+0
   \   0000002A   02D0               BEQ      ??RF_Int_2
    162                {    
    163                  RF_transmit();
   \   0000002C   ........           BL       RF_transmit
   \   00000030   0AE0               B        ??RF_Int_1
    164                }
    165                else if (RF_Status.EnRxWait)
   \                     ??RF_Int_2:
   \   00000032   817A               LDRB     R1,[R0, #+10]
   \   00000034   0029               CMP      R1,#+0
   \   00000036   06D0               BEQ      ??RF_Int_3
    166                {
    167                  RF_Status.Transmit=0;
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   0172               STRB     R1,[R0, #+8]
    168                  RF_Status.EnRxWait=0;
   \   0000003C   8172               STRB     R1,[R0, #+10]
    169                  RF_Status.EnableRX();
   \   0000003E   806A               LDR      R0,[R0, #+40]
   \   00000040   ........           BL       __iar_via_R0
   \   00000044   00E0               B        ??RF_Int_1
    170                }
    171                else
    172                {
    173                   RF_Status.Transmit=0; 
   \                     ??RF_Int_3:
   \   00000046   0172               STRB     R1,[R0, #+8]
    174                }
    175              }
    176           
    177          
    178          }//_____________________________________________________________________________
   \                     ??RF_Int_1:
   \   00000048   08BC               POP      {R3}
   \   0000004A   01BC               POP      {R0}
   \   0000004C   0047               BX       R0               ;; return
    179          //
    180          
    181          
    182          
    183          
    184          
    185          
    186          

   \                                 In section Debug.txt, align 4, keep-with-next
    187          void ConfigureRFBus(void)
    188          {
    189          #if !defined(IR_RF_DEF)
    190              AT91F_PMC_EnablePeriphClock(AT91C_BASE_PMC, 1 << ID_RfIntBUS);
   \                     ConfigureRFBus:
   \   00000000   0448               LDR      R0,??ConfigureRFBus_0  ;; 0xfffffc10
   \   00000002   0421               MOVS     R1,#+4
   \   00000004   0160               STR      R1,[R0, #+0]
    191              AT91F_PIO_CfgInput(IR_PIO_BUS, RfIntBUS);
   \   00000006   0802               LSLS     R0,R1,#+8
   \   00000008   ....               LDR      R1,??DataTable12  ;; 0xfffff414
   \   0000000A   0860               STR      R0,[R1, #+0]
   \   0000000C   ....               LDR      R1,??DataTable13  ;; 0xfffff400
   \   0000000E   0860               STR      R0,[R1, #+0]
    192              
    193          #endif
    194          }
   \   00000010   7047               BX       LR               ;; return
   \   00000012   C046               Nop      
   \                     ??ConfigureRFBus_0:
   \   00000014   10FCFFFF           DC32     0xfffffc10

   \                                 In section .bss, align 4
   \                     RF_Tx:
   \   00000000                      DS8 24
    195          
    196          
    197          
    198          
    199          char IntCA81Flag=0;
   \                     IntCA81Flag:
   \   00000018                      DS8 1

   \                                 In section .bss, align 1
   \                     SPI_RFM12_Read:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \                     RF_Status:
   \   00000000                      DS8 44

   \                                 In section .bss, align 1
   \                     tmp_int:
   \   00000000                      DS8 1
    200          

   \                                 In section Debug.txt, align 4, keep-with-next
    201          void RF_Init(void)
    202          { 
   \                     RF_Init:
   \   00000000   10B5               PUSH     {R4,LR}
    203            #ifndef RF_Int_Init_DEF
    204            
    205            TRACE_INFO("RF_Init \n\r"); 
    206            
    207                //ustawienia pocz¹tkowe uk³adu
    208                RF_Status.RF_Status = _pRF_Status;
   \   00000002   ....               LDR      R4,??DataTable14  ;; RF_Status
   \   00000004   0B48               LDR      R0,??RF_Init_0   ;; _pRF_Status
   \   00000006   2062               STR      R0,[R4, #+32]
    209                RF_Status.RF_Status();  //konstruktor pse³do-klasy RF_Status
   \   00000008   ........           BL       _pRF_Status
    210                  
    211                
    212                
    213                      RF_Status.EnTx=0;
    214                RF_Status.EnRx=0;
    215                RF_Tx.BytesToSend=0;
    216                RF_Status.Transmit=0;
    217                RF_Status.TxStarting=0;
    218                RF_Status.RxStarting=0;
    219                    RF_Status.EnRx=0;
    220              RF_Status.EnTx=0;
    221              RF_Status.Transmit=0;
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   2072               STRB     R0,[R4, #+8]
    222              RF_Tx.BytesToSend=0;
   \   00000010   ....               LDR      R1,??DataTable15  ;; RF_Tx
   \   00000012   0875               STRB     R0,[R1, #+20]
    223              RF_Status.EnRxWait=0;
   \   00000014   A072               STRB     R0,[R4, #+10]
    224              RF_Status.RxStarting=0;
   \   00000016   A071               STRB     R0,[R4, #+6]
    225              RF_Status.TxStarting=0;
   \   00000018   6071               STRB     R0,[R4, #+5]
    226              RF_Status.RfFuse=0;
   \   0000001A   6074               STRB     R0,[R4, #+17]
    227                
    228                  
    229              //Konfiguracja wstêpna
    230                  #ifdef RF_Master 
    231                        RF_Status.EnTx=1; 
    232                        RF_Status.EnRx=0; 
    233                  #else   
    234                        RF_Status.EnRx=1;
   \   0000001C   0122               MOVS     R2,#+1
   \   0000001E   6270               STRB     R2,[R4, #+1]
    235                        RF_Status.EnTx=0; 
   \   00000020   A070               STRB     R0,[R4, #+2]
    236                  #endif
    237                
    238             
    239                        
    240                  
    241                  IntCA81Flag=0;
   \   00000022   0876               STRB     R0,[R1, #+24]
    242                  RF_Status.Init=1;
   \   00000024   2270               STRB     R2,[R4, #+0]
    243                  SPI_SendWord(0x8067,Cs_RF); //EL,EF,868band,12.0pF   - pierwszy rozkaz konfiguracji
                         ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000026   0221               MOVS     R1,#+2
   \   00000028   ....               LDR      R0,??DataTable16  ;; 0x8067
   \   0000002A   ........           BL       SPI_SendWord
    244          
    245              
    246                 // AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;  
    247                 //ButtonBipCounter=g_counter+1;
    248            
    249                  
    250             #endif
    251          }//_____________________________________________________________________________
   \   0000002E   10BC               POP      {R4}
   \   00000030   01BC               POP      {R0}
   \   00000032   0047               BX       R0               ;; return
   \                     ??RF_Init_0:
   \   00000034   ........           DC32     _pRF_Status
    252          
    253          
    254          
    255          
    256          
    257          
    258          
    259          
    260          
    261          
    262          
    263          
    264          
    265          
    266          

   \                                 In section .data, align 1
    267          char CountVal=16;
   \                     CountVal:
   \   00000000   10                 DC8 16

   \                                 In section Debug.txt, align 4, keep-with-next
    268          void SPI_RFM12_Execute(char *Buffer_Tx, char *Buffer_Rx)                                       
    269          {
   \                     SPI_RFM12_Execute:
   \   00000000   70B5               PUSH     {R4-R6,LR}
    270              int Order=  Buffer_Tx[0] | Buffer_Tx[1]<<8;
   \   00000002   0278               LDRB     R2,[R0, #+0]
   \   00000004   4078               LDRB     R0,[R0, #+1]
   \   00000006   0402               LSLS     R4,R0,#+8
   \   00000008   1443               ORRS     R4,R4,R2
    271          
    272              
    273              //Je¿eli uk³ad RF12 w trakcie inicjalizacji pierwotnej---------------------
    274              
    275          
    276          
    277              
    278              
    279              if (RF_Status.Init)
   \   0000000A   9E4D               LDR      R5,??SPI_RFM12_Execute_0  ;; RF_Status
   \   0000000C   2878               LDRB     R0,[R5, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   00D1               BNE      .+4
   \   00000012   CAE0               B        ??SPI_RFM12_Execute_1
    280              {
    281                         
    282                if (Order==0x8067) 
   \   00000014   9C48               LDR      R0,??SPI_RFM12_Execute_0+0x4  ;; 0x8067
   \   00000016   8442               CMP      R4,R0
   \   00000018   0ED1               BNE      ??SPI_RFM12_Execute_2
    283                //{ if (RF_Status.EnRx)  RF_Status.EnableRX(); else RF_Status.EnableTX(); } //Rozkaz: 0x80E7 - EL,EF,868band,12.0pF 
    284                { SPI_SendWord(0x8219,Cs_RF); 
                         ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000001A   0221               MOVS     R1,#+2
   \   0000001C   9B48               LDR      R0,??SPI_RFM12_Execute_0+0x8  ;; 0x8219
   \   0000001E   ........           BL       SPI_SendWord
    285                 if (RF_Status.EnRx)  SPI_SendWord(0x8299,Cs_RF); else SPI_SendWord(0x8239,Cs_RF); 
   \   00000022   6878               LDRB     R0,[R5, #+1]
   \   00000024   0028               CMP      R0,#+0
   \   00000026   04D0               BEQ      ??SPI_RFM12_Execute_3
   \   00000028   0221               MOVS     R1,#+2
   \   0000002A   9948               LDR      R0,??SPI_RFM12_Execute_0+0xC  ;; 0x8299
   \                     ??SPI_RFM12_Execute_4:
   \   0000002C   ........           BL       SPI_SendWord
   \   00000030   29E0               B        ??SPI_RFM12_Execute_5
   \                     ??SPI_RFM12_Execute_3:
   \   00000032   0221               MOVS     R1,#+2
   \   00000034   9748               LDR      R0,??SPI_RFM12_Execute_0+0x10  ;; 0x8239
   \   00000036   F9E7               B.N      ??SPI_RFM12_Execute_4
    286                } //Rozkaz: 0x80E7 - EL,EF,868band,12.0pF 
    287               
    288          
    289                if ((Order==0x8299) || (Order==0x8239) || (Order==0x8219))
   \                     ??SPI_RFM12_Execute_2:
   \   00000038   9548               LDR      R0,??SPI_RFM12_Execute_0+0xC  ;; 0x8299
   \   0000003A   8442               CMP      R4,R0
   \   0000003C   05D0               BEQ      ??SPI_RFM12_Execute_6
   \   0000003E   6038               SUBS     R0,R0,#+96
   \   00000040   8442               CMP      R4,R0
   \   00000042   02D0               BEQ      ??SPI_RFM12_Execute_6
   \   00000044   2038               SUBS     R0,R0,#+32
   \   00000046   8442               CMP      R4,R0
   \   00000048   1DD1               BNE      ??SPI_RFM12_Execute_5
    290                                 { SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); }       //Rozkaz: 0xA6xx Czêstotliwoæ bazowa (Kana³ 0)  - oryginalnie by³o 0xA640 - 868,0Mhz
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??SPI_RFM12_Execute_6:
   \   0000004A   A87B               LDRB     R0,[R5, #+14]
   \   0000004C   ........           BL       __aeabi_ui2d
   \   00000050   914A               LDR      R2,??SPI_RFM12_Execute_0+0x14  ;; 0x33333333
   \   00000052   924B               LDR      R3,??SPI_RFM12_Execute_0+0x18  ;; 0x3fd33333
   \   00000054   ........           BL       __aeabi_dmul
   \   00000058   914A               LDR      R2,??SPI_RFM12_Execute_0+0x1C  ;; 0x5c28f5c3
   \   0000005A   924B               LDR      R3,??SPI_RFM12_Execute_0+0x20  ;; 0x408ae28f
   \   0000005C   ........           BL       __aeabi_dadd
   \   00000060   0022               MOVS     R2,#+0
   \   00000062   914B               LDR      R3,??SPI_RFM12_Execute_0+0x24  ;; 0x40690000
   \   00000064   ........           BL       __aeabi_dmul
   \   00000068   0022               MOVS     R2,#+0
   \   0000006A   904B               LDR      R3,??SPI_RFM12_Execute_0+0x28  ;; 0xc104ff00
   \   0000006C   ........           BL       __aeabi_dadd
   \   00000070   ........           BL       __aeabi_d2iz
   \   00000074   0004               LSLS     R0,R0,#+16
   \   00000076   0014               ASRS     R0,R0,#+16
   \   00000078   A021               MOVS     R1,#+160
   \   0000007A   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   0000007C   0143               ORRS     R1,R1,R0
   \   0000007E   0800               MOVS     R0,R1
   \   00000080   0221               MOVS     R1,#+2
   \   00000082   ........           BL       SPI_SendWord
    291                if (Order==(0xA000 | RF_SetFreqReg(RF_Status.Ch)))  
   \                     ??SPI_RFM12_Execute_5:
   \   00000086   A87B               LDRB     R0,[R5, #+14]
   \   00000088   ........           BL       __aeabi_ui2d
   \   0000008C   824A               LDR      R2,??SPI_RFM12_Execute_0+0x14  ;; 0x33333333
   \   0000008E   834B               LDR      R3,??SPI_RFM12_Execute_0+0x18  ;; 0x3fd33333
   \   00000090   ........           BL       __aeabi_dmul
   \   00000094   824A               LDR      R2,??SPI_RFM12_Execute_0+0x1C  ;; 0x5c28f5c3
   \   00000096   834B               LDR      R3,??SPI_RFM12_Execute_0+0x20  ;; 0x408ae28f
   \   00000098   ........           BL       __aeabi_dadd
   \   0000009C   0022               MOVS     R2,#+0
   \   0000009E   824B               LDR      R3,??SPI_RFM12_Execute_0+0x24  ;; 0x40690000
   \   000000A0   ........           BL       __aeabi_dmul
   \   000000A4   0022               MOVS     R2,#+0
   \   000000A6   814B               LDR      R3,??SPI_RFM12_Execute_0+0x28  ;; 0xc104ff00
   \   000000A8   ........           BL       __aeabi_dadd
   \   000000AC   ........           BL       __aeabi_d2iz
   \   000000B0   0004               LSLS     R0,R0,#+16
   \   000000B2   0014               ASRS     R0,R0,#+16
   \   000000B4   A021               MOVS     R1,#+160
   \   000000B6   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   000000B8   0143               ORRS     R1,R1,R0
   \   000000BA   8C42               CMP      R4,R1
   \   000000BC   03D1               BNE      ??SPI_RFM12_Execute_7
    292                  
    293                                 { SPI_SendWord(0xC607,Cs_RF); }                          //Rozkaz: 0xC607 Szybkoæ transmisji 43kb/s         - oryginalnie by³o 0xC647 - 4,8kb/s
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000000BE   0221               MOVS     R1,#+2
   \   000000C0   7B48               LDR      R0,??SPI_RFM12_Execute_0+0x2C  ;; 0xc607
   \   000000C2   ........           BL       SPI_SendWord
    294                if (Order==0xC607)  
   \                     ??SPI_RFM12_Execute_7:
   \   000000C6   7A48               LDR      R0,??SPI_RFM12_Execute_0+0x2C  ;; 0xc607
   \   000000C8   8442               CMP      R4,R0
   \   000000CA   04D1               BNE      ??SPI_RFM12_Execute_8
    295                                 { SPI_SendWord(0x94A0,Cs_RF); }                          //Rozkaz: 0x94A0 VDI,FAST,134kHz,0dBm,-103dBm 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000000CC   0221               MOVS     R1,#+2
   \   000000CE   7948               LDR      R0,??SPI_RFM12_Execute_0+0x30  ;; 0x94a0
   \   000000D0   ........           BL       SPI_SendWord
   \   000000D4   D3E0               B        ??SPI_RFM12_Execute_9
    296                if (Order==0x94A0)  
   \                     ??SPI_RFM12_Execute_8:
   \   000000D6   7748               LDR      R0,??SPI_RFM12_Execute_0+0x30  ;; 0x94a0
   \   000000D8   8442               CMP      R4,R0
   \   000000DA   04D1               BNE      ??SPI_RFM12_Execute_10
    297                                 { SPI_SendWord(0xC2AC,Cs_RF); }                          //Rozkaz: 0xC2AC AL,!ml,DIG,DQD4 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000000DC   0221               MOVS     R1,#+2
   \   000000DE   7648               LDR      R0,??SPI_RFM12_Execute_0+0x34  ;; 0xc2ac
   \   000000E0   ........           BL       SPI_SendWord
   \   000000E4   CBE0               B        ??SPI_RFM12_Execute_9
    298                if (Order==0xC2AC)  
   \                     ??SPI_RFM12_Execute_10:
   \   000000E6   7448               LDR      R0,??SPI_RFM12_Execute_0+0x34  ;; 0xc2ac
   \   000000E8   8442               CMP      R4,R0
   \   000000EA   04D1               BNE      ??SPI_RFM12_Execute_11
    299                                 { SPI_SendWord(0xCA81,Cs_RF); }                          //Rozkaz: 0xCA81 FIFO8,SYNC,!ff,DR 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000000EC   0221               MOVS     R1,#+2
   \   000000EE   7348               LDR      R0,??SPI_RFM12_Execute_0+0x38  ;; 0xca81
   \   000000F0   ........           BL       SPI_SendWord
   \   000000F4   C3E0               B        ??SPI_RFM12_Execute_9
    300                if ((Order==0xCA81) && (IntCA81Flag==0))  
   \                     ??SPI_RFM12_Execute_11:
   \   000000F6   7148               LDR      R0,??SPI_RFM12_Execute_0+0x38  ;; 0xca81
   \   000000F8   8442               CMP      R4,R0
   \   000000FA   0AD1               BNE      ??SPI_RFM12_Execute_12
   \   000000FC   704C               LDR      R4,??SPI_RFM12_Execute_0+0x3C  ;; RF_Tx
   \   000000FE   207E               LDRB     R0,[R4, #+24]
   \   00000100   0028               CMP      R0,#+0
   \   00000102   41D1               BNE      ??SPI_RFM12_Execute_13
    301                                 { SPI_SendWord(0xCED4,Cs_RF); IntCA81Flag=1; Order=0xFFFF;}   //Rozkaz: 0xCED4 ustawienie s³owa synchronizacyjnego na 0x2DD4 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000104   0221               MOVS     R1,#+2
   \   00000106   6F48               LDR      R0,??SPI_RFM12_Execute_0+0x40  ;; 0xced4
   \   00000108   ........           BL       SPI_SendWord
   \   0000010C   0120               MOVS     R0,#+1
   \   0000010E   2076               STRB     R0,[R4, #+24]
   \   00000110   B5E0               B        ??SPI_RFM12_Execute_9
    302                if (Order==0xCED4)  
   \                     ??SPI_RFM12_Execute_12:
   \   00000112   6C49               LDR      R1,??SPI_RFM12_Execute_0+0x40  ;; 0xced4
   \   00000114   8C42               CMP      R4,R1
   \   00000116   04D1               BNE      ??SPI_RFM12_Execute_14
    303                                 { SPI_SendWord(0xC493,Cs_RF); }                          //Rozkaz: 0xC493 @PWR, AFC:-80+75Khz ,!st,!fi,OE,EN       - oryginalnie 0xC483 @PWR,AFC - NO RSTRIC,!st,!fi,OE,EN 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000118   0221               MOVS     R1,#+2
   \   0000011A   6B48               LDR      R0,??SPI_RFM12_Execute_0+0x44  ;; 0xc493
   \   0000011C   ........           BL       SPI_SendWord
   \   00000120   ADE0               B        ??SPI_RFM12_Execute_9
    304                if (Order==0xC493)  
   \                     ??SPI_RFM12_Execute_14:
   \   00000122   6949               LDR      R1,??SPI_RFM12_Execute_0+0x44  ;; 0xc493
   \   00000124   8C42               CMP      R4,R1
   \   00000126   04D1               BNE      ??SPI_RFM12_Execute_15
    305                                 { SPI_SendWord(0x9850,Cs_RF); }                          //Rozkaz: 0x9850 !mp,dewiacja +-90kHz ,MAX OUT   
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000128   0221               MOVS     R1,#+2
   \   0000012A   6848               LDR      R0,??SPI_RFM12_Execute_0+0x48  ;; 0x9850
   \   0000012C   ........           BL       SPI_SendWord
   \   00000130   A5E0               B        ??SPI_RFM12_Execute_9
    306                if (Order==0x9850)  
   \                     ??SPI_RFM12_Execute_15:
   \   00000132   6649               LDR      R1,??SPI_RFM12_Execute_0+0x48  ;; 0x9850
   \   00000134   8C42               CMP      R4,R1
   \   00000136   04D1               BNE      ??SPI_RFM12_Execute_16
    307                                 { SPI_SendWord(0xCC17,Cs_RF); }                          //Rozkaz: 0xCC17 OB1COB0, LPX,IddyCDDITC
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000138   0221               MOVS     R1,#+2
   \   0000013A   6548               LDR      R0,??SPI_RFM12_Execute_0+0x4C  ;; 0xcc17
   \   0000013C   ........           BL       SPI_SendWord
   \   00000140   9DE0               B        ??SPI_RFM12_Execute_9
    308                if (Order==0xCC17)  
   \                     ??SPI_RFM12_Execute_16:
   \   00000142   6349               LDR      R1,??SPI_RFM12_Execute_0+0x4C  ;; 0xcc17
   \   00000144   8C42               CMP      R4,R1
   \   00000146   05D1               BNE      ??SPI_RFM12_Execute_17
    309                                 { SPI_SendWord(0xE000,Cs_RF); }                          //Rozkaz: 0xE000
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000148   0221               MOVS     R1,#+2
   \   0000014A   E020               MOVS     R0,#+224
   \   0000014C   0002               LSLS     R0,R0,#+8        ;; #+57344
   \   0000014E   ........           BL       SPI_SendWord
   \   00000152   94E0               B        ??SPI_RFM12_Execute_9
    310                if (Order==0xE000)  
   \                     ??SPI_RFM12_Execute_17:
   \   00000154   E021               MOVS     R1,#+224
   \   00000156   0902               LSLS     R1,R1,#+8        ;; #+57344
   \   00000158   8C42               CMP      R4,R1
   \   0000015A   05D1               BNE      ??SPI_RFM12_Execute_18
    311                                 { SPI_SendWord(0xC800,Cs_RF); }                          //Rozkaz: 0xC800
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000015C   0221               MOVS     R1,#+2
   \   0000015E   C820               MOVS     R0,#+200
   \   00000160   0002               LSLS     R0,R0,#+8        ;; #+51200
   \   00000162   ........           BL       SPI_SendWord
   \   00000166   8AE0               B        ??SPI_RFM12_Execute_9
    312                if (Order==0xC800)  
   \                     ??SPI_RFM12_Execute_18:
   \   00000168   C821               MOVS     R1,#+200
   \   0000016A   0902               LSLS     R1,R1,#+8        ;; #+51200
   \   0000016C   8C42               CMP      R4,R1
   \   0000016E   04D1               BNE      ??SPI_RFM12_Execute_19
    313                                 { SPI_SendWord(0xC040,Cs_RF); }                          //Rozkaz: 0xC040 1.66MHz,2.2V 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000170   0221               MOVS     R1,#+2
   \   00000172   5848               LDR      R0,??SPI_RFM12_Execute_0+0x50  ;; 0xc040
   \   00000174   ........           BL       SPI_SendWord
   \   00000178   81E0               B        ??SPI_RFM12_Execute_9
    314                if (Order==0xC040)  
   \                     ??SPI_RFM12_Execute_19:
   \   0000017A   5649               LDR      R1,??SPI_RFM12_Execute_0+0x50  ;; 0xc040
   \   0000017C   8C42               CMP      R4,R1
   \   0000017E   0AD1               BNE      ??SPI_RFM12_Execute_20
    315                                 { SPI_SendWord(0xCA81,Cs_RF); }                          //Rozkaz: 0xCA81 Start fifo RX
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000180   0221               MOVS     R1,#+2
   \   00000182   ........           BL       SPI_SendWord
   \   00000186   7AE0               B        ??SPI_RFM12_Execute_9
   \                     ??SPI_RFM12_Execute_13:
   \   00000188   0128               CMP      R0,#+1
   \   0000018A   78D1               BNE      ??SPI_RFM12_Execute_9
    316                if ((Order==0xCA81) && (IntCA81Flag==1))  
    317                                 { SPI_SendWord(0xCA83,Cs_RF); }                          //Rozkaz: 0xCA83 Restart fifo RX
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000018C   0221               MOVS     R1,#+2
   \   0000018E   5248               LDR      R0,??SPI_RFM12_Execute_0+0x54  ;; 0xca83
   \   00000190   ........           BL       SPI_SendWord
   \   00000194   73E0               B        ??SPI_RFM12_Execute_9
    318                if (Order==0xCA83)  
   \                     ??SPI_RFM12_Execute_20:
   \   00000196   801C               ADDS     R0,R0,#+2
   \   00000198   8442               CMP      R4,R0
   \   0000019A   70D1               BNE      ??SPI_RFM12_Execute_9
    319                                 { 
    320                
    321          
    322          
    323                  
    324                       
    325                
    326                  RF_Status.EnRx=1;
   \   0000019C   0120               MOVS     R0,#+1
   \   0000019E   6870               STRB     R0,[R5, #+1]
    327                  RF_Status.Init=0; 
   \   000001A0   0020               MOVS     R0,#+0
   \   000001A2   2870               STRB     R0,[R5, #+0]
    328                  
    329                    TRACE_INFO("Enable RX\n\r"); 
    330                    
    331                    InitRF_Interrupt();
   \   000001A4   ........           BL       InitRF_Interrupt
   \   000001A8   69E0               B        ??SPI_RFM12_Execute_9
    332                    
    333                  
    334                  
    335                  
    336                }
    337               
    338                
    339              }//Aktywny RX ---------------------------------------------------------------
    340              else if ((RF_Status.EnRx) && (RF_Status.Init==0))
   \                     ??SPI_RFM12_Execute_1:
   \   000001AA   6878               LDRB     R0,[R5, #+1]
   \   000001AC   0028               CMP      R0,#+0
   \   000001AE   23D0               BEQ      ??SPI_RFM12_Execute_21
    341              {
    342                /*
    343                if  (((Order==0x0000) && (Buffer_Rx[1]&0x80)) 
    344                     ||((Order==0x0000) && ((Buffer_Rx[1]&0x02)==0)))  //zmiana przy v0.8d
    345                */
    346                 if  ((Order==0x0000) && (Buffer_Rx[1]&0x81))                        //zmiana przy v0.8e by³o (Buffer_Rx[1]&0x81) 
   \   000001B0   002C               CMP      R4,#+0
   \   000001B2   09D1               BNE      ??SPI_RFM12_Execute_22
   \   000001B4   4878               LDRB     R0,[R1, #+1]
   \   000001B6   8121               MOVS     R1,#+129
   \   000001B8   0842               TST      R0,R1
   \   000001BA   60D0               BEQ      ??SPI_RFM12_Execute_9
    347                     { 
    348                       SPI_SendWord(0xB000,Cs_RF);
                              ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000001BC   0221               MOVS     R1,#+2
   \   000001BE   B020               MOVS     R0,#+176
   \   000001C0   0002               LSLS     R0,R0,#+8        ;; #+45056
   \   000001C2   ........           BL       SPI_SendWord
   \   000001C6   5AE0               B        ??SPI_RFM12_Execute_9
    349                     }
    350                
    351                if  (Order==0xCA81)   { SPI_SendWord(0xCA83,Cs_RF); }
                                               ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??SPI_RFM12_Execute_22:
   \   000001C8   3C48               LDR      R0,??SPI_RFM12_Execute_0+0x38  ;; 0xca81
   \   000001CA   8442               CMP      R4,R0
   \   000001CC   04D1               BNE      ??SPI_RFM12_Execute_23
   \   000001CE   0221               MOVS     R1,#+2
   \   000001D0   801C               ADDS     R0,R0,#+2
   \   000001D2   ........           BL       SPI_SendWord
   \   000001D6   52E0               B        ??SPI_RFM12_Execute_9
    352                if  (Order==0xCA83)   { SPI_SendWord(0x0000,Cs_RF); }
                                               ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??SPI_RFM12_Execute_23:
   \   000001D8   801C               ADDS     R0,R0,#+2
   \   000001DA   8442               CMP      R4,R0
   \   000001DC   04D1               BNE      ??SPI_RFM12_Execute_24
   \   000001DE   0221               MOVS     R1,#+2
   \   000001E0   0020               MOVS     R0,#+0
   \   000001E2   ........           BL       SPI_SendWord
   \   000001E6   4AE0               B        ??SPI_RFM12_Execute_9
    353                if  (Order==0xB000)  { RF_ReciveByte(Buffer_Rx[0]); }
   \                     ??SPI_RFM12_Execute_24:
   \   000001E8   B020               MOVS     R0,#+176
   \   000001EA   0002               LSLS     R0,R0,#+8        ;; #+45056
   \   000001EC   8442               CMP      R4,R0
   \   000001EE   46D1               BNE      ??SPI_RFM12_Execute_9
   \   000001F0   0878               LDRB     R0,[R1, #+0]
   \   000001F2   ........           BL       RF_ReciveByte
   \   000001F6   42E0               B        ??SPI_RFM12_Execute_9
    354               
    355                
    356          
    357              
    358              
    359              
    360              }//Trzb oczekiwania na prze³¹czenie na TX ---------------------------------------------------------------
    361              else if ((RF_Status.InitTx) && (Order!=0x0000))
   \                     ??SPI_RFM12_Execute_21:
   \   000001F8   E878               LDRB     R0,[R5, #+3]
   \   000001FA   0028               CMP      R0,#+0
   \   000001FC   29D0               BEQ      ??SPI_RFM12_Execute_25
   \   000001FE   002C               CMP      R4,#+0
   \   00000200   17D0               BEQ      ??SPI_RFM12_Execute_26
    362                  {
    363                          
    364                    if (Order==0x8219)
   \   00000202   2248               LDR      R0,??SPI_RFM12_Execute_0+0x8  ;; 0x8219
   \   00000204   8442               CMP      R4,R0
   \   00000206   04D1               BNE      ??SPI_RFM12_Execute_27
    365                    {
    366                      SPI_SendWord(0x80E7,Cs_RF);
                             ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000208   0221               MOVS     R1,#+2
   \   0000020A   3448               LDR      R0,??SPI_RFM12_Execute_0+0x58  ;; 0x80e7
   \   0000020C   ........           BL       SPI_SendWord
   \   00000210   35E0               B        ??SPI_RFM12_Execute_9
    367                    }
    368                    else if (Order==0x80E7)
   \                     ??SPI_RFM12_Execute_27:
   \   00000212   3248               LDR      R0,??SPI_RFM12_Execute_0+0x58  ;; 0x80e7
   \   00000214   8442               CMP      R4,R0
   \   00000216   04D1               BNE      ??SPI_RFM12_Execute_28
    369                    {                                     
    370                      SPI_SendWord(0x8239,Cs_RF);
                             ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000218   0221               MOVS     R1,#+2
   \   0000021A   1E48               LDR      R0,??SPI_RFM12_Execute_0+0x10  ;; 0x8239
   \   0000021C   ........           BL       SPI_SendWord
   \   00000220   2DE0               B        ??SPI_RFM12_Execute_9
    371                    }
    372                    else if (Order==0x8239)
   \                     ??SPI_RFM12_Execute_28:
   \   00000222   1C48               LDR      R0,??SPI_RFM12_Execute_0+0x10  ;; 0x8239
   \   00000224   8442               CMP      R4,R0
   \   00000226   2AD1               BNE      ??SPI_RFM12_Execute_9
    373                    {
    374                      SPI_SendWord(0x0000,Cs_RF);
                             ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000228   0221               MOVS     R1,#+2
   \   0000022A   0020               MOVS     R0,#+0
   \   0000022C   ........           BL       SPI_SendWord
   \   00000230   25E0               B        ??SPI_RFM12_Execute_9
    375                    }
    376                  }  
    377                else if ((RF_Status.InitTx) && (Order==0x0000))
    378                  {    
    379          
    380                    if (Buffer_Rx[1]&0x20)
   \                     ??SPI_RFM12_Execute_26:
   \   00000232   4878               LDRB     R0,[R1, #+1]
   \   00000234   8006               LSLS     R0,R0,#+26
   \   00000236   04D5               BPL      ??SPI_RFM12_Execute_29
    381                    {
    382                      SPI_SendWord(0x0000,Cs_RF);
                             ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000238   0221               MOVS     R1,#+2
   \   0000023A   0020               MOVS     R0,#+0
   \   0000023C   ........           BL       SPI_SendWord
   \   00000240   1DE0               B        ??SPI_RFM12_Execute_9
    383                    }
    384                    //w³¹czenie nadawania danych
    385                    else
    386                    {
    387                      RF_Status.InitTx=0;
   \                     ??SPI_RFM12_Execute_29:
   \   00000242   0020               MOVS     R0,#+0
   \   00000244   E870               STRB     R0,[R5, #+3]
    388                      RF_Status.EnTx=1;
   \   00000246   0120               MOVS     R0,#+1
   \   00000248   A870               STRB     R0,[R5, #+2]
    389                      RF_Status.Transmit=1;
   \   0000024A   2872               STRB     R0,[R5, #+8]
    390                      RF_transmit();
   \   0000024C   ........           BL       RF_transmit
   \   00000250   15E0               B        ??SPI_RFM12_Execute_9
    391                    }
    392                    
    393                   
    394          
    395              }//Aktywny TX ---------------------------------------------------------------
    396              else if (RF_Status.EnTx)
   \                     ??SPI_RFM12_Execute_25:
   \   00000252   A878               LDRB     R0,[R5, #+2]
   \   00000254   0028               CMP      R0,#+0
   \   00000256   12D1               BNE      ??SPI_RFM12_Execute_9
    397              {
    398          
    399          
    400              
    401              }
    402          
    403          
    404              //W³¹czenie odbiornika
    405              else if ((RF_Status.EnRx==0) && (RF_Status.EnTx==0) && (Order==0x8299))
   \   00000258   0D48               LDR      R0,??SPI_RFM12_Execute_0+0xC  ;; 0x8299
   \   0000025A   8442               CMP      R4,R0
   \   0000025C   06D1               BNE      ??SPI_RFM12_Execute_30
    406              {
    407                 RF_Status.EnRx=1;
   \   0000025E   0120               MOVS     R0,#+1
   \   00000260   6870               STRB     R0,[R5, #+1]
    408                 SPI_SendWord(0x0000,Cs_RF);
                        ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000262   0221               MOVS     R1,#+2
   \   00000264   0020               MOVS     R0,#+0
   \   00000266   ........           BL       SPI_SendWord
   \   0000026A   08E0               B        ??SPI_RFM12_Execute_9
    409                 
    410                 #ifdef __MaxRf
    411                      AT91C_BASE_PIOA->PIO_CODR =TxPin; 
    412                 #endif
    413              }
    414          
    415              
    416           
    417              else if ((RF_Status.InitTx==0) && (RF_Status.EnRx==0) && (RF_Status.EnTx==0) && (Order==0x8239))
   \                     ??SPI_RFM12_Execute_30:
   \   0000026C   6038               SUBS     R0,R0,#+96
   \   0000026E   8442               CMP      R4,R0
   \   00000270   05D1               BNE      ??SPI_RFM12_Execute_9
    418              {
    419                RF_Status.InitTx=1;
   \   00000272   0120               MOVS     R0,#+1
   \   00000274   E870               STRB     R0,[R5, #+3]
    420               
    421                SPI_SendWord(0x0000,Cs_RF);    
                       ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000276   0221               MOVS     R1,#+2
   \   00000278   0020               MOVS     R0,#+0
   \   0000027A   ........           BL       SPI_SendWord
    422              }
    423           
    424              
    425            
    426           
    427          }  
   \                     ??SPI_RFM12_Execute_9:
   \   0000027E   70BC               POP      {R4-R6}
   \   00000280   01BC               POP      {R0}
   \   00000282   0047               BX       R0               ;; return
   \                     ??SPI_RFM12_Execute_0:
   \   00000284   ........           DC32     RF_Status
   \   00000288   67800000           DC32     0x8067
   \   0000028C   19820000           DC32     0x8219
   \   00000290   99820000           DC32     0x8299
   \   00000294   39820000           DC32     0x8239
   \   00000298   33333333           DC32     0x33333333
   \   0000029C   3333D33F           DC32     0x3fd33333
   \   000002A0   C3F5285C           DC32     0x5c28f5c3
   \   000002A4   8FE28A40           DC32     0x408ae28f
   \   000002A8   00006940           DC32     0x40690000
   \   000002AC   00FF04C1           DC32     0xc104ff00
   \   000002B0   07C60000           DC32     0xc607
   \   000002B4   A0940000           DC32     0x94a0
   \   000002B8   ACC20000           DC32     0xc2ac
   \   000002BC   81CA0000           DC32     0xca81
   \   000002C0   ........           DC32     RF_Tx
   \   000002C4   D4CE0000           DC32     0xced4
   \   000002C8   93C40000           DC32     0xc493
   \   000002CC   50980000           DC32     0x9850
   \   000002D0   17CC0000           DC32     0xcc17
   \   000002D4   40C00000           DC32     0xc040
   \   000002D8   83CA0000           DC32     0xca83
   \   000002DC   E7800000           DC32     0x80e7
    428          
    429          
    430          
    431          
    432          
    433          
    434          
    435          //-----------------------------------------------------------------------------
    436          //!  Nazwa funkcji :    RF_ReciveByte
    437          //!  Funkcja interpretacji otrzymanego bajtu
    438          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    439          void RF_ReciveByte(char Res)
    440          {
   \                     RF_ReciveByte:
   \   00000000   10B5               PUSH     {R4,LR}
    441               
    442            
    443                    for (char i=0; i<RF_BuffSizeRX-1; i++) {RF_Rx.Buff[i]=RF_Rx.Buff[i+1];}
   \   00000002   264C               LDR      R4,??RF_ReciveByte_0  ;; RF_Rx
   \   00000004   6178               LDRB     R1,[R4, #+1]
   \   00000006   2170               STRB     R1,[R4, #+0]
   \   00000008   2100               MOVS     R1,R4
   \   0000000A   491C               ADDS     R1,R1,#+1
   \   0000000C   0322               MOVS     R2,#+3
   \                     ??RF_ReciveByte_1:
   \   0000000E   4B78               LDRB     R3,[R1, #+1]
   \   00000010   0B70               STRB     R3,[R1, #+0]
   \   00000012   8B78               LDRB     R3,[R1, #+2]
   \   00000014   4B70               STRB     R3,[R1, #+1]
   \   00000016   CB78               LDRB     R3,[R1, #+3]
   \   00000018   8B70               STRB     R3,[R1, #+2]
   \   0000001A   0B79               LDRB     R3,[R1, #+4]
   \   0000001C   CB70               STRB     R3,[R1, #+3]
   \   0000001E   4B79               LDRB     R3,[R1, #+5]
   \   00000020   0B71               STRB     R3,[R1, #+4]
   \   00000022   8B79               LDRB     R3,[R1, #+6]
   \   00000024   4B71               STRB     R3,[R1, #+5]
   \   00000026   891D               ADDS     R1,R1,#+6
   \   00000028   521E               SUBS     R2,R2,#+1
   \   0000002A   F0D1               BNE      ??RF_ReciveByte_1
    444                    RF_Rx.Buff[RF_BuffSizeRX-1]=Res;
   \   0000002C   E074               STRB     R0,[R4, #+19]
    445          
    446                    if (RF_Rx.ReciveBytes<=RF_BuffSizeRX) RF_Rx.ReciveBytes++;
   \   0000002E   207D               LDRB     R0,[R4, #+20]
   \   00000030   1528               CMP      R0,#+21
   \   00000032   01D2               BCS      ??RF_ReciveByte_2
   \   00000034   401C               ADDS     R0,R0,#+1
   \   00000036   2075               STRB     R0,[R4, #+20]
    447          
    448                    //sprawdzenie koñca
    449                    if (
    450                    (RF_Rx.Buff[RF_BuffSizeRX-3]==Preambu[0]) &&
    451                      (RF_Rx.Buff[RF_BuffSizeRX-2]==Preambu[1]) &&
    452                    (RF_Rx.Buff[RF_BuffSizeRX-1]==Preambu[2]) 
    453                    /*  && 
    454                    ((RF_Rx.ReciveBytes%2)!=0)
    455                      */)  
   \                     ??RF_ReciveByte_2:
   \   00000038   607C               LDRB     R0,[R4, #+17]
   \   0000003A   AA28               CMP      R0,#+170
   \   0000003C   2BD1               BNE      ??RF_ReciveByte_3
   \   0000003E   A07C               LDRB     R0,[R4, #+18]
   \   00000040   AA28               CMP      R0,#+170
   \   00000042   28D1               BNE      ??RF_ReciveByte_3
   \   00000044   E07C               LDRB     R0,[R4, #+19]
   \   00000046   AA28               CMP      R0,#+170
   \   00000048   25D1               BNE      ??RF_ReciveByte_3
    456                    {           
    457                      if ((SlaveMode==0) && (RF_Status.ConfResive==0)) RF_Status.ConfResive=1;  //znacznik odebrania danych (dla kontroli kana³u)
   \   0000004A   1548               LDR      R0,??RF_ReciveByte_0+0x4  ;; RF_Status
   \   0000004C   1549               LDR      R1,??RF_ReciveByte_0+0x8  ;; SlaveMode
   \   0000004E   0A78               LDRB     R2,[R1, #+0]
   \   00000050   002A               CMP      R2,#+0
   \   00000052   04D1               BNE      ??RF_ReciveByte_4
   \   00000054   C27A               LDRB     R2,[R0, #+11]
   \   00000056   002A               CMP      R2,#+0
   \   00000058   01D1               BNE      ??RF_ReciveByte_4
   \   0000005A   0122               MOVS     R2,#+1
   \   0000005C   C272               STRB     R2,[R0, #+11]
    458                      if ((SlaveMode==1) && (RF_Status.ConfResiveSlave==0)) RF_Status.ConfResiveSlave=1;  //znacznik odebrania danych (dla kontroli kana³u)
   \                     ??RF_ReciveByte_4:
   \   0000005E   0978               LDRB     R1,[R1, #+0]
   \   00000060   0129               CMP      R1,#+1
   \   00000062   04D1               BNE      ??RF_ReciveByte_5
   \   00000064   017B               LDRB     R1,[R0, #+12]
   \   00000066   0029               CMP      R1,#+0
   \   00000068   01D1               BNE      ??RF_ReciveByte_5
   \   0000006A   0121               MOVS     R1,#+1
   \   0000006C   0173               STRB     R1,[R0, #+12]
    459                      
    460                      RF_Status.RfFuse=1;
   \                     ??RF_ReciveByte_5:
   \   0000006E   0121               MOVS     R1,#+1
   \   00000070   4174               STRB     R1,[R0, #+17]
    461                      RF_ReciveFarm(&RF_Rx.Buff[RF_BuffSizeRX-4], RF_Rx.ReciveBytes-3);  //funkcja interpretacji otrzymanej ramki
   \   00000072   207D               LDRB     R0,[R4, #+20]
   \   00000074   C11E               SUBS     R1,R0,#+3
   \   00000076   0906               LSLS     R1,R1,#+24
   \   00000078   090E               LSRS     R1,R1,#+24
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   1030               ADDS     R0,R0,#+16
   \   0000007E   ........           BL       RF_ReciveFarm
    462                    
    463                       RF_Rx.ReciveBytes=0; 
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   2075               STRB     R0,[R4, #+20]
    464                     
    465                      
    466                      //RF_ReciveFarm(&RF_Rx.Buff[RF_BuffSizeRX-RF_Rx.ReciveBytes], RF_Rx.ReciveBytes-3);  //funkcja interpretacji otrzymanej ramki
    467          
    468                      //RF_Rx.ReciveBytes=0;
    469          
    470                      if (!RF_Tx.BytesToSend) SPI_SendWord(0xCA81,Cs_RF); 
                                                     ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000086   0848               LDR      R0,??RF_ReciveByte_0+0xC  ;; RF_Tx + 20
   \   00000088   0078               LDRB     R0,[R0, #+0]
   \   0000008A   0028               CMP      R0,#+0
   \   0000008C   03D1               BNE      ??RF_ReciveByte_3
   \   0000008E   0221               MOVS     R1,#+2
   \   00000090   0648               LDR      R0,??RF_ReciveByte_0+0x10  ;; 0xca81
   \   00000092   ........           BL       SPI_SendWord
    471                    }
    472          }
   \                     ??RF_ReciveByte_3:
   \   00000096   10BC               POP      {R4}
   \   00000098   01BC               POP      {R0}
   \   0000009A   0047               BX       R0               ;; return
   \                     ??RF_ReciveByte_0:
   \   0000009C   ........           DC32     RF_Rx
   \   000000A0   ........           DC32     RF_Status
   \   000000A4   ........           DC32     SlaveMode
   \   000000A8   ........           DC32     RF_Tx + 20
   \   000000AC   81CA0000           DC32     0xca81
    473          
    474          
    475          
    476          
    477          
    478          //-----------------------------------------------------------------------------
    479          //!  Nazwa funkcji :    RF_SendFarm
    480          //!  Funkcja przygotowuje dane do wys³ania przez RF12. Opakowuje dane w ramkê
    481          //-----------------------------------------------------------------------------
    482          //  *data - wska¿nik na pierwszy bajt
    483          //  *size - iloæ bajtów do wys³ania
    484          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    485          void RF_SendFarm(unsigned char *data, char size)
    486          { 
   \                     RF_SendFarm:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
    487              RF_Status.EnableTX();
   \   00000006   2C4E               LDR      R6,??RF_SendFarm_0  ;; RF_Status
   \   00000008   706A               LDR      R0,[R6, #+36]
   \   0000000A   ........           BL       __iar_via_R0
    488              char BTS;
    489              //char DTS[20];
    490              BTS=RF_Tx.BytesToSend;
   \   0000000E   2B49               LDR      R1,??RF_SendFarm_0+0x4  ;; RF_Tx
   \   00000010   087D               LDRB     R0,[R1, #+20]
    491              
    492               //Wpisanie preambu³y otwieraj¹cej
    493               RF_Tx.Buff[BTS++]=Preambu[0];
   \   00000012   AA22               MOVS     R2,#+170
   \   00000014   0A54               STRB     R2,[R1, R0]
   \   00000016   401C               ADDS     R0,R0,#+1
   \   00000018   0006               LSLS     R0,R0,#+24
   \   0000001A   000E               LSRS     R0,R0,#+24
    494               RF_Tx.Buff[BTS++]=Preambu[1];
   \   0000001C   0A54               STRB     R2,[R1, R0]
   \   0000001E   401C               ADDS     R0,R0,#+1
   \   00000020   0006               LSLS     R0,R0,#+24
   \   00000022   000E               LSRS     R0,R0,#+24
    495               RF_Tx.Buff[BTS++]=Preambu[2];
   \   00000024   0A54               STRB     R2,[R1, R0]
   \   00000026   401C               ADDS     R0,R0,#+1
   \   00000028   0006               LSLS     R0,R0,#+24
   \   0000002A   000E               LSRS     R0,R0,#+24
    496               
    497               //Wpisanie s³owa synchronizuj¹cego
    498               RF_Tx.Buff[BTS++]=SynKay[0];
   \   0000002C   2D27               MOVS     R7,#+45
   \   0000002E   0F54               STRB     R7,[R1, R0]
   \   00000030   401C               ADDS     R0,R0,#+1
   \   00000032   0006               LSLS     R0,R0,#+24
   \   00000034   000E               LSRS     R0,R0,#+24
    499               RF_Tx.Buff[BTS++]=SynKay[1];
   \   00000036   D427               MOVS     R7,#+212
   \   00000038   0F54               STRB     R7,[R1, R0]
   \   0000003A   401C               ADDS     R0,R0,#+1
   \   0000003C   0006               LSLS     R0,R0,#+24
   \   0000003E   000E               LSRS     R0,R0,#+24
    500               
    501               //Wpisanie danych do kolejki
    502               for (char i=0; i<size; i++)
   \   00000040   002D               CMP      R5,#+0
   \   00000042   09D0               BEQ      ??RF_SendFarm_1
    503               {
    504                  if (BTS<=RF_BuffSizeTX-3)
   \                     ??RF_SendFarm_2:
   \   00000044   1228               CMP      R0,#+18
   \   00000046   04D2               BCS      ??RF_SendFarm_3
    505                  {
    506                    RF_Tx.Buff[BTS]=data[i]; 
   \   00000048   2778               LDRB     R7,[R4, #+0]
   \   0000004A   0F54               STRB     R7,[R1, R0]
    507                    BTS++;
   \   0000004C   401C               ADDS     R0,R0,#+1
   \   0000004E   0006               LSLS     R0,R0,#+24
   \   00000050   000E               LSRS     R0,R0,#+24
    508                  }
    509               }
   \                     ??RF_SendFarm_3:
   \   00000052   641C               ADDS     R4,R4,#+1
   \   00000054   6D1E               SUBS     R5,R5,#+1
   \   00000056   F5D1               BNE      ??RF_SendFarm_2
    510               
    511               //Wpisanie preambu³y zamykaj¹cej
    512               RF_Tx.Buff[BTS++]=Preambu[0];
   \                     ??RF_SendFarm_1:
   \   00000058   0A54               STRB     R2,[R1, R0]
   \   0000005A   401C               ADDS     R0,R0,#+1
   \   0000005C   0006               LSLS     R0,R0,#+24
   \   0000005E   000E               LSRS     R0,R0,#+24
    513               RF_Tx.Buff[BTS++]=Preambu[1];
   \   00000060   0A54               STRB     R2,[R1, R0]
   \   00000062   401C               ADDS     R0,R0,#+1
   \   00000064   0006               LSLS     R0,R0,#+24
   \   00000066   000E               LSRS     R0,R0,#+24
    514               RF_Tx.Buff[BTS++]=Preambu[2];
   \   00000068   0A54               STRB     R2,[R1, R0]
   \   0000006A   401C               ADDS     R0,R0,#+1
   \   0000006C   0006               LSLS     R0,R0,#+24
   \   0000006E   000E               LSRS     R0,R0,#+24
    515               RF_Tx.Buff[BTS++]=0x00;
   \   00000070   0022               MOVS     R2,#+0
   \   00000072   0A54               STRB     R2,[R1, R0]
   \   00000074   401C               ADDS     R0,R0,#+1
   \   00000076   0006               LSLS     R0,R0,#+24
   \   00000078   000E               LSRS     R0,R0,#+24
    516               RF_Tx.Buff[BTS]=0x00;
   \   0000007A   0A54               STRB     R2,[R1, R0]
    517               
    518               
    519               //for (char i=0; i<BTS; i++) RF_Tx.Buff[i]=DTS[i];
    520               RF_Tx.BytesToSend=BTS;
   \   0000007C   0875               STRB     R0,[R1, #+20]
    521               if ((RF_Status.Transmit==0) && (RF_Status.EnTx) && (RF_Status.InitTx==0))  RF_transmit();
   \   0000007E   307A               LDRB     R0,[R6, #+8]
   \   00000080   0028               CMP      R0,#+0
   \   00000082   07D1               BNE      ??RF_SendFarm_4
   \   00000084   B078               LDRB     R0,[R6, #+2]
   \   00000086   0028               CMP      R0,#+0
   \   00000088   04D0               BEQ      ??RF_SendFarm_4
   \   0000008A   F078               LDRB     R0,[R6, #+3]
   \   0000008C   0028               CMP      R0,#+0
   \   0000008E   01D1               BNE      ??RF_SendFarm_4
   \   00000090   ........           BL       RF_transmit
    522          
    523               if ((SlaveMode) && (RF_Status.TimeInSlaveMode>MAX_TIME_FOR_SLAVE_ASK))
   \                     ??RF_SendFarm_4:
   \   00000094   0A48               LDR      R0,??RF_SendFarm_0+0x8  ;; SlaveMode
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   06D0               BEQ      ??RF_SendFarm_5
   \   0000009C   F08A               LDRH     R0,[R6, #+22]
   \   0000009E   FF21               MOVS     R1,#+255
   \   000000A0   6031               ADDS     R1,R1,#+96       ;; #+351
   \   000000A2   8842               CMP      R0,R1
   \   000000A4   01D3               BCC      ??RF_SendFarm_5
    524                                {
    525                                 RF_Status.SlaveModeTimeout=4;
   \   000000A6   0420               MOVS     R0,#+4
   \   000000A8   F074               STRB     R0,[R6, #+19]
    526                                }
    527               
    528               RF_Status.EnableRX();
   \                     ??RF_SendFarm_5:
   \   000000AA   B06A               LDR      R0,[R6, #+40]
   \   000000AC   ........           BL       __iar_via_R0
    529          } 
   \   000000B0   F8BC               POP      {R3-R7}
   \   000000B2   01BC               POP      {R0}
   \   000000B4   0047               BX       R0               ;; return
   \   000000B6   C046               Nop      
   \                     ??RF_SendFarm_0:
   \   000000B8   ........           DC32     RF_Status
   \   000000BC   ........           DC32     RF_Tx
   \   000000C0   ........           DC32     SlaveMode
    530          //-----------------------------------------------------------------------------
    531          
    532          
    533          
    534          
    535          
    536          
    537          //-----------------------------------------------------------------------------
    538          //!  Nazwa funkcji :    RF_transmit
    539          //!  Funkcja wysy³a dane przez RF12
    540          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    541          void RF_transmit(void)
    542          {
   \                     RF_transmit:
   \   00000000   10B5               PUSH     {R4,LR}
    543             if ((RF_Tx.BytesToSend==0) || (AT91C_BASE_PIOA->PIO_PDSR & RfIntBUS)) return;
   \   00000002   1148               LDR      R0,??RF_transmit_0  ;; RF_Tx
   \   00000004   017D               LDRB     R1,[R0, #+20]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   1BD0               BEQ      ??RF_transmit_1
   \   0000000A   104A               LDR      R2,??RF_transmit_0+0x4  ;; 0xfffff43c
   \   0000000C   1268               LDR      R2,[R2, #+0]
   \   0000000E   5205               LSLS     R2,R2,#+21
   \   00000010   17D4               BMI      ??RF_transmit_1
    544             
    545             if (RF_Status.Transmit) 
   \   00000012   0F4A               LDR      R2,??RF_transmit_0+0x8  ;; RF_Status + 8
   \   00000014   1278               LDRB     R2,[R2, #+0]
   \   00000016   002A               CMP      R2,#+0
   \   00000018   13D0               BEQ      ??RF_transmit_1
    546             {
    547                char BTS=RF_Tx.Buff[0];
   \   0000001A   0278               LDRB     R2,[R0, #+0]
    548                RF_Tx.BytesToSend--;
   \   0000001C   491E               SUBS     R1,R1,#+1
   \   0000001E   0175               STRB     R1,[R0, #+20]
    549                for (char i=0; i<RF_Tx.BytesToSend; i++)  RF_Tx.Buff[i]=RF_Tx.Buff[i+1]; //przesuñ kolejke
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   05E0               B        ??RF_transmit_2
   \                     ??RF_transmit_3:
   \   00000024   4318               ADDS     R3,R0,R1
   \   00000026   5C78               LDRB     R4,[R3, #+1]
   \   00000028   1C70               STRB     R4,[R3, #+0]
   \   0000002A   491C               ADDS     R1,R1,#+1
   \   0000002C   0906               LSLS     R1,R1,#+24
   \   0000002E   090E               LSRS     R1,R1,#+24
   \                     ??RF_transmit_2:
   \   00000030   047D               LDRB     R4,[R0, #+20]
   \   00000032   A142               CMP      R1,R4
   \   00000034   F6D3               BCC      ??RF_transmit_3
    550                SPI_SendWord((0xB800 | BTS),Cs_RF); //wylij bajt
                       ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000036   0221               MOVS     R1,#+2
   \   00000038   B820               MOVS     R0,#+184
   \   0000003A   0002               LSLS     R0,R0,#+8        ;; #+47104
   \   0000003C   1043               ORRS     R0,R0,R2
   \   0000003E   ........           BL       SPI_SendWord
   \                     ??RF_transmit_1:
   \   00000042   10BC               POP      {R4}
   \   00000044   01BC               POP      {R0}
   \   00000046   0047               BX       R0               ;; return
   \                     ??RF_transmit_0:
   \   00000048   ........           DC32     RF_Tx
   \   0000004C   3CF4FFFF           DC32     0xfffff43c
   \   00000050   ........           DC32     RF_Status + 8
    551             }
    552          }
    553          
    554          
    555          
    556          //-----------------------------------------------------------------------------
    557          //!  Nazwa funkcji :    RF_CheckChannel
    558          //!  Funkcja sprawdza czy kana³ jest wolny
    559          //-----------------------------------------------------------------------------
    560          extern int MenuLevel;
    561          

   \                                 In section Debug.txt, align 4, keep-with-next
    562          char RF_CheckChannel(void)
    563          {
   \                     RF_CheckChannel:
   \   00000000   70B5               PUSH     {R4-R6,LR}
    564               int MenuLevel_Member=MenuLevel;
   \   00000002   0A4C               LDR      R4,??RF_CheckChannel_0  ;; MenuLevel
   \   00000004   2568               LDR      R5,[R4, #+0]
    565               MenuLevel=3;
   \   00000006   0320               MOVS     R0,#+3
   \   00000008   2060               STR      R0,[R4, #+0]
    566               MenuPaint();
   \   0000000A   ........           BL       MenuPaint
    567               
    568               RF_Status.ConfResive=0; 
   \   0000000E   084E               LDR      R6,??RF_CheckChannel_0+0x4  ;; RF_Status
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   F072               STRB     R0,[R6, #+11]
    569               
    570          
    571               
    572               Delay(0x100000);
                      ^
Warning[Pe223]: function "Delay" declared implicitly
   \   00000014   8020               MOVS     R0,#+128
   \   00000016   4003               LSLS     R0,R0,#+13       ;; #+1048576
   \   00000018   ........           BL       Delay
    573          
    574               
    575               
    576               MenuLevel=MenuLevel_Member;  
   \   0000001C   2560               STR      R5,[R4, #+0]
    577               MenuPaint();
   \   0000001E   ........           BL       MenuPaint
    578               return RF_Status.ConfResive;
   \   00000022   F07A               LDRB     R0,[R6, #+11]
   \   00000024   70BC               POP      {R4-R6}
   \   00000026   02BC               POP      {R1}
   \   00000028   0847               BX       R1               ;; return
   \   0000002A   C046               Nop      
   \                     ??RF_CheckChannel_0:
   \   0000002C   ........           DC32     MenuLevel
   \   00000030   ........           DC32     RF_Status
    579          
    580          }

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   19820000           DC32     0x8219

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   99820000           DC32     0x8299

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     RF_Tx + 20

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   14F4FFFF           DC32     0xfffff414

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   00F4FFFF           DC32     0xfffff400

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     RF_Status

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     RF_Tx

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   67800000           DC32     0x8067

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     ConfigureRFBus         0
     InitRF_Interrupt       0
     RF_CheckChannel       16
     RF_Init                8
     RF_Int                 8
     RF_ReciveByte          8
     RF_SendFarm           24
     RF_transmit            8
     SPI_RFM12_Execute     16
     _RF_EnableRX           8
     _RF_EnableTX          16
     _pRF_Status            0


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     RF_Rx               24
     Preambu              4
     SynKay               4
     _RF_EnableTX        40
     _RF_EnableRX        64
     _pRF_Status         20
     InitRF_Interrupt    32
     RF_Int              78
     ConfigureRFBus      24
     RF_Tx               25
     SPI_RFM12_Read       1
     RF_Status           44
     tmp_int              1
     RF_Init             56
     CountVal             1
     SPI_RFM12_Execute  736
     RF_ReciveByte      176
     RF_SendFarm        196
     RF_transmit         84
     RF_CheckChannel     52
     ??DataTable2         4
     ??DataTable6         4
     ??DataTable11        4
     ??DataTable12        4
     ??DataTable13        4
     ??DataTable14        4
     ??DataTable15        4
     ??DataTable16        4
      Others              2

 
    95 bytes in section .bss
     1 byte  in section .data
     8 bytes in section .rodata
 1 592 bytes in section Debug.txt
 
 1 590 bytes of CODE  memory (+ 2 bytes shared)
     8 bytes of CONST memory
    96 bytes of DATA  memory

Errors: none
Warnings: 32
