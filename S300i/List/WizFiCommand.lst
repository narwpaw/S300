###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           04/Sep/2013  19:34:31 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\Framework\WizFiCommand.c                      #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\Framework\WizFiCommand.c" -D AT91SAM7S256 -D  #
#                    AT91SAM7SEK -D iH -D __ALARM -D __WIFI_MODULE -D S300i   #
#                    -lC "D:\Zeuron\Projekty\S300\S300-program v1.4 -         #
#                    12.06.2013\S300i\List\" --diag_suppress Pa082 -o         #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\S300i\Obj\" --debug --endian little --cpu     #
#                    ARM7TDMI -e --fpu None --dlib_config "C:\Program Files   #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    5.0\ARM\INC\DLib_Config_Normal.h" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.4 - 12.06.2013\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v1.4 - 12.06.2013\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v1.4 - 12.06.2013\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\Framework\Configuration\" -I "C:\Program      #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.0\ARM\INC\" --section .text=Debug.txt --interwork      #
#                    --cpu_mode thumb -Oh                                     #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\S300i\List\WizFiCommand.lst                   #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\S300i\Obj\WizFiCommand.o                      #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFiCommand.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                 CEURON                                                   *//
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : WizFiCommacd.c                           *//
      7          //*  Opis                         : Obs³uga komend modu³u WizFi              *//
      8          //*  Autor                        : Pawe³ Narwojsz                           *//
      9          //*  Data utrzorzenia             : 11.04.2012                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*//
     19          //****************************************************************************//
     20          
     21          
     22          
     23          #include "WizFi.h"

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_US_SendFrame(AT91PS_USART, unsigned char *, unsigned int, unsigned char *, unsigned int)
   \                     AT91F_US_SendFrame:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   049C               LDR      R4,[SP, #+16]
   \   00000004   8025               MOVS     R5,#+128
   \   00000006   6D00               LSLS     R5,R5,#+1        ;; #+256
   \   00000008   4019               ADDS     R0,R0,R5
   \   0000000A   C568               LDR      R5,[R0, #+12]
   \   0000000C   002D               CMP      R5,#+0
   \   0000000E   05D1               BNE      ??AT91F_US_SendFrame_0
   \   00000010   8160               STR      R1,[R0, #+8]
   \   00000012   C260               STR      R2,[R0, #+12]
   \   00000014   8361               STR      R3,[R0, #+24]
   \   00000016   C461               STR      R4,[R0, #+28]
   \   00000018   0220               MOVS     R0,#+2
   \   0000001A   07E0               B        ??AT91F_US_SendFrame_1
   \                     ??AT91F_US_SendFrame_0:
   \   0000001C   C369               LDR      R3,[R0, #+28]
   \   0000001E   002B               CMP      R3,#+0
   \   00000020   03D1               BNE      ??AT91F_US_SendFrame_2
   \   00000022   8161               STR      R1,[R0, #+24]
   \   00000024   C261               STR      R2,[R0, #+28]
   \   00000026   0120               MOVS     R0,#+1
   \   00000028   00E0               B        ??AT91F_US_SendFrame_1
   \                     ??AT91F_US_SendFrame_2:
   \   0000002A   0020               MOVS     R0,#+0
   \                     ??AT91F_US_SendFrame_1:
   \   0000002C   38BC               POP      {R3-R5}
   \   0000002E   02BC               POP      {R1}
   \   00000030   0847               BX       R1               ;; return

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline

   
   ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFi.h",172  Warning[Pe001]: 
          last line of file ends without a newline
     24          //#include "Framework.h"
     25          //#include "core/device.h"                                                        //aduje bibliotreki dla odpowiedniego procesora
     26          //#include "main_H.h" 
     27          #include "string.h"
     28          #include "WizFi.h"
     29          
     30          
     31          //Sta³e ------------------------------------------------------------------------

   \                                 In section .rodata, align 4
     32              const char AT[]="AT\r";                                                     //komenda WizFi 
   \                     AT:
   \   00000000   41540D00           DC8 "AT\015"

   \                                 In section .rodata, align 4
     33              const char ATI2[]="ATI2\r";                                                     //komenda WizFi 
   \                     ATI2:
   \   00000000   415449320D00       DC8 "ATI2\015"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     34              const char AT_VER[]="AT+VER=?\r";
   \                     AT_VER:
   \   00000000   41542B564552       DC8 "AT+VER=?\015"
   \              3D3F0D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     35              const char AT_XDUM0[]="AT+XDUM=0\r";                                                //komenda WizFi 
   \                     AT_XDUM0:
   \   00000000   41542B584455       DC8 "AT+XDUM=0\015"
   \              4D3D300D00  
   \   0000000B   00                 DC8 0

   \                                 In section .rodata, align 4
     36              const char AT_WD[]="AT+WD\r";                                               //komenda WizFi 
   \                     AT_WD:
   \   00000000   41542B57440D       DC8 "AT+WD\015"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
     37              const char AT_NDHCP_0[]="AT+NDHCP=0\r";                                     //komenda WizFi   
   \                     AT_NDHCP_0:
   \   00000000   41542B4E4448       DC8 "AT+NDHCP=0\015"
   \              43503D300D00
     38              const char AT_NDHCP_1[]="AT+NDHCP=1\r";                                     //komenda WizFi 
   \                     AT_NDHCP_1:
   \   0000000C   41542B4E4448       DC8 "AT+NDHCP=1\015"
   \              43503D310D00

   \                                 In section .rodata, align 4
     39              const char AT_NSET[]="AT+NSET=";                                          //komenda WizFi  
   \                     AT_NSET:
   \   00000000   41542B4E5345       DC8 "AT+NSET="
   \              543D00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
     40              const char AT_WAUTH_1[]="AT+WAUTH=1\r";                                          //komenda WizFi  
   \                     AT_WAUTH_1:
   \   00000000   41542B574155       DC8 "AT+WAUTH=1\015"
   \              54483D310D00

   \                                 In section .rodata, align 4
     41              const char AT_WWEP1[]="AT+WWEP1=";                                          //komenda WizFi  
   \                     AT_WWEP1:
   \   00000000   41542B575745       DC8 "AT+WWEP1="
   \              50313D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     42              const char AT_WWPA[]="AT+WWPA=";                                            //komenda WizFi  
   \                     AT_WWPA:
   \   00000000   41542B575750       DC8 "AT+WWPA="
   \              413D00      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
     43              const char AT_WA[]="AT+WA=";                                              //komenda WizFi  
   \                     AT_WA:
   \   00000000   41542B57413D       DC8 "AT+WA="
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
     44              const char AT_DNSLOOKUP[]="AT+DNSLOOKUP=";                                              //komenda WizFi  
   \                     AT_DNSLOOKUP:
   \   00000000   41542B444E53       DC8 "AT+DNSLOOKUP="
   \              4C4F4F4B5550
   \              3D00        
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     45              const char AT_NCTCP[]="AT+NCTCP=";                                              //komenda WizFi  
   \                     AT_NCTCP:
   \   00000000   41542B4E4354       DC8 "AT+NCTCP="
   \              43503D00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
     46              const char AT_NCLOSE[]="AT+NCLOSE=";                                              //komenda WizFi  
   \                     AT_NCLOSE:
   \   00000000   41542B4E434C       DC8 "AT+NCLOSE="
   \              4F53453D00  
   \   0000000B   00                 DC8 0
   \   0000000C   5B434F4E4E45       DC8 "[CONNECT"
   \              435400      
   \   00000015   000000             DC8 0, 0, 0
   \   00000018   4E4F20434944       DC8 "NO CID]"
   \              5D00        
   \   00000020   5B4552524F52       DC8 "[ERROR"
   \              00          
   \   00000027   00                 DC8 0
   \   00000028   4E6F2076616C       DC8 "No valid Cids"
   \              696420436964
   \              7300        
   \   00000036   0000               DC8 0, 0
     47              const char AT_NCLOSEALL[]="AT+NCLOSEALL\r";                                              //komenda WizFi  
     48              const char AT_WS[]="AT+WS\r";
     49              const char AT_CID[]="AT+CID=?\r";
     50              const char AT_XRESET[]="AT+XRESET\r";
   \                     AT_XRESET:
   \   00000038   41542B585245       DC8 "AT+XRESET\015"
   \              5345540D00  
   \   00000043   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     AT_NCLOSEALL:
   \   00000000   41542B4E434C       DC8 "AT+NCLOSEALL\015"
   \              4F5345414C4C
   \              0D00        
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     AT_WS:
   \   00000000   41542B57530D       DC8 "AT+WS\015"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     AT_CID:
   \   00000000   41542B434944       DC8 "AT+CID=?\015"
   \              3D3F0D00    
   \   0000000A   0000               DC8 0, 0
     51           //____________________________Koniec sta³ych ___________________________________
     52           
     53          
     54              extern unsigned long long  g_counter;                                              //globalny licznik milisekundowy od w³¹czenia/restartu sterownika
     55              
     56              
     57              
     58              extern char Variables[];    //zmienne
     59              extern char VariablesImpulse[];
     60              extern char VariablesNetTmp[];
     61              extern short int VariablesAnal[];    //zmienne
     62              extern _ProgramTab gProg;
     63              extern _MainStage  MainStage; 
     64              extern _DateTime DateTime;    
     65              extern _TransQuality TransQuality;
     66              extern unsigned char ChangeStageFlag;
     67              extern _RF_Status RF_Status;
     68              extern char WiFiDebug;
     69          
     70          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
     71          void WizFiCommand_AT(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
     72          {
   \                     WizFiCommand_AT:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1600               MOVS     R6,R2
   \   00000006   1D00               MOVS     R5,R3
     73             if (Net->WiFi.SSID[0]==0)
   \   00000008   AE21               MOVS     R1,#+174
   \   0000000A   695C               LDRB     R1,[R5, R1]
   \   0000000C   0029               CMP      R1,#+0
   \   0000000E   0FD1               BNE      ??WizFiCommand_AT_0
     74             {
     75               Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000010   3835               ADDS     R5,R5,#+56
   \   00000012   ....               LDR      R4,??DataTable18  ;; g_counter
   \   00000014   0CCC               LDM      R4!,{R2,R3}
   \   00000016   083C               SUBS     R4,R4,#+8
   \   00000018   ....               LDR      R0,??DataTable14  ;; 0x2710
   \   0000001A   8018               ADDS     R0,R0,R2
   \   0000001C   5941               ADCS     R1,R1,R3
   \   0000001E   03C5               STM      R5!,{R0,R1}
     76               Net->Status.FreezTime=g_counter+1000;
   \   00000020   0CCC               LDM      R4!,{R2,R3}
   \   00000022   FA20               MOVS     R0,#+250
   \   00000024   8000               LSLS     R0,R0,#+2        ;; #+1000
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   8018               ADDS     R0,R0,R2
   \   0000002A   5941               ADCS     R1,R1,R3
   \   0000002C   03C5               STM      R5!,{R0,R1}
   \   0000002E   27E0               B        ??WizFiCommand_AT_1
     77             }else{
     78               for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0; 
   \                     ??WizFiCommand_AT_0:
   \   00000030   9121               MOVS     R1,#+145
   \   00000032   8900               LSLS     R1,R1,#+2        ;; #+580
   \   00000034   ........           BL       __aeabi_memclr
     79               Buff_TX[0]='A';
   \   00000038   4120               MOVS     R0,#+65
   \   0000003A   2070               STRB     R0,[R4, #+0]
     80               Buff_TX[1]='T';
   \   0000003C   5420               MOVS     R0,#+84
   \   0000003E   6070               STRB     R0,[R4, #+1]
     81               Buff_TX[2]=0x0d;
   \   00000040   0D20               MOVS     R0,#+13
   \   00000042   A070               STRB     R0,[R4, #+2]
     82               Buff_TX[3]=0x0A;
   \   00000044   0A20               MOVS     R0,#+10
   \   00000046   E070               STRB     R0,[R4, #+3]
     83               
     84               Net->Status.CurrentOrder=WizFi_AT;
   \   00000048   0120               MOVS     R0,#+1
   \   0000004A   A870               STRB     R0,[R5, #+2]
     85          
     86               AT91F_US_SendFrame(USART,Buff_TX,4,0, 0);                        //Wysyla ramke 
                                               ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   0422               MOVS     R2,#+4
   \   00000056   2100               MOVS     R1,R4
   \   00000058   3000               MOVS     R0,R6
   \   0000005A   ........           BL       AT91F_US_SendFrame
   \   0000005E   02B0               ADD      SP,SP,#+8
     87               Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000060   3835               ADDS     R5,R5,#+56
   \   00000062   ....               LDR      R0,??DataTable18  ;; g_counter
   \   00000064   0CC8               LDM      R0!,{R2,R3}
   \   00000066   ....               LDR      R0,??DataTable14  ;; 0x2710
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   8018               ADDS     R0,R0,R2
   \   0000006C   5941               ADCS     R1,R1,R3
   \   0000006E   03C5               STM      R5!,{R0,R1}
     88               
     89               if (WiFiDebug) SendViaUSB(Buff_TX, 4);
                                                ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000070   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   00000072   0078               LDRB     R0,[R0, #+0]
   \   00000074   0028               CMP      R0,#+0
   \   00000076   03D0               BEQ      ??WizFiCommand_AT_1
   \   00000078   0421               MOVS     R1,#+4
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   ........           BL       SendViaUSB
     90             }
     91          }
   \                     ??WizFiCommand_AT_1:
   \   00000080   ........           BL       ??Subroutine0_0

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ?Subroutine0:
   \   00000000   ....               LDR      R0,??DataTable26  ;; 0x2710
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   8018               ADDS     R0,R0,R2
   \   00000006   5941               ADCS     R1,R1,R3
   \   00000008   03C4               STM      R4!,{R0,R1}
   \                     ??Subroutine0_0:
   \   0000000A   70BC               POP      {R4-R6}
   \   0000000C   01BC               POP      {R0}
   \   0000000E   0047               BX       R0               ;; return
   \                     ??Subroutine0_1:
   \   00000010   ........           DC32     AT_CID
     92          
     93          
     94          
     95          

   \                                 In section Debug.txt, align 4, keep-with-next
     96          char WizFiResponseCommand_AT(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
   \                     WizFiResponseCommand_AT:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   ....               B.N      ?Subroutine1

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ?Subroutine1:
   \   00000000   0700               MOVS     R7,R0
   \   00000002   1C00               MOVS     R4,R3
   \   00000004   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   07D0               BEQ      ??Subroutine1_4
   \   0000000C   3800               MOVS     R0,R7
   \   0000000E   ........           BL       strlen
   \   00000012   0104               LSLS     R1,R0,#+16
   \   00000014   090C               LSRS     R1,R1,#+16
   \   00000016   3800               MOVS     R0,R7
   \   00000018   ........           BL       SendViaUSB
   \                     ??Subroutine1_4:
   \   0000001C   0026               MOVS     R6,#+0
   \   0000001E   0025               MOVS     R5,#+0
   \                     ??Subroutine1_0:
   \   00000020   0DA1               ADR      R1,??Subroutine1_3  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000022   3800               MOVS     R0,R7
   \   00000024   ........           BL       __iar_Strstr
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   10D0               BEQ      ??Subroutine1_1
   \   0000002C   0125               MOVS     R5,#+1
   \   0000002E   3221               MOVS     R1,#+50
   \   00000030   3800               MOVS     R0,R7
   \   00000032   ........           BL       __aeabi_memclr
   \   00000036   2700               MOVS     R7,R4
   \   00000038   3837               ADDS     R7,R7,#+56
   \   0000003A   ....               LDR      R0,??DataTable18  ;; g_counter
   \   0000003C   03C8               LDM      R0!,{R0,R1}
   \   0000003E   0200               MOVS     R2,R0
   \   00000040   0B00               MOVS     R3,R1
   \   00000042   ....               LDR      R0,??DataTable14  ;; 0x2710
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   8018               ADDS     R0,R0,R2
   \   00000048   5941               ADCS     R1,R1,R3
   \   0000004A   03C7               STM      R7!,{R0,R1}
   \   0000004C   6675               STRB     R6,[R4, #+21]
   \                     ??Subroutine1_1:
   \   0000004E   2800               MOVS     R0,R5
   \                     ??Subroutine1_2:
   \   00000050   F8BC               POP      {R3-R7}
   \   00000052   02BC               POP      {R1}
   \   00000054   0847               BX       R1               ;; return
   \   00000056   C046               Nop      
   \                     ??Subroutine1_3:
   \   00000058   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
     97          {
     98             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
     99             char odp=0;
    100             if(strstr(Buff_RX, "OK")!=NULL)
    101                  {
    102                    odp=1;  //ok 
    103                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    104                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    105                    Net->Status.Error=0;
    106                  }
    107          
    108             return odp;
    109          }
    110          
    111          
    112          
    113          
    114          
    115          
    116          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    117          void WizFiCommand_AT_VER(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    118          {
   \                     WizFiCommand_AT_VER:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0500               MOVS     R5,R0
   \   00000004   1600               MOVS     R6,R2
   \   00000006   1C00               MOVS     R4,R3
    119             if (WiFiDebug) SendViaUSB((char*)AT_VER, sizeof(AT_VER)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000008   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   03D0               BEQ      ??WizFiCommand_AT_VER_0
   \   00000010   0921               MOVS     R1,#+9
   \   00000012   0C48               LDR      R0,??WizFiCommand_AT_VER_1  ;; AT_VER
   \   00000014   ........           BL       SendViaUSB
    120             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \                     ??WizFiCommand_AT_VER_0:
   \   00000018   9121               MOVS     R1,#+145
   \   0000001A   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000001C   2800               MOVS     R0,R5
   \   0000001E   ........           BL       __aeabi_memclr
    121             Net->Status.CurrentOrder=WizFi_AT_VER;     
   \   00000022   0220               MOVS     R0,#+2
   \   00000024   A070               STRB     R0,[R4, #+2]
    122             AT91F_US_SendFrame(USART,(char*)AT_VER,sizeof(AT_VER)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   0023               MOVS     R3,#+0
   \   0000002E   0922               MOVS     R2,#+9
   \   00000030   0449               LDR      R1,??WizFiCommand_AT_VER_1  ;; AT_VER
   \   00000032   3000               MOVS     R0,R6
   \   00000034   ........           BL       AT91F_US_SendFrame
   \   00000038   02B0               ADD      SP,SP,#+8
    123             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   0000003A   3834               ADDS     R4,R4,#+56
   \   0000003C   ....               LDR      R0,??DataTable18  ;; g_counter
   \   0000003E   0CC8               LDM      R0!,{R2,R3}
   \   00000040   ........           BL       ?Subroutine0
   \                     ??WizFiCommand_AT_VER_1:
   \   00000044   ........           DC32     AT_VER
    124             
    125             
    126          }
    127          
    128          
    129          
    130          

   \                                 In section Debug.txt, align 4, keep-with-next
    131          char WizFiResponseCommand_AT_VER(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
   \                     WizFiResponseCommand_AT_VER:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   C046               Nop      
   \   00000004                      REQUIRE ?Subroutine1
   \   00000004                      ;; // Fall through to label ?Subroutine1
    132          {
    133             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
    134             char odp=0;
    135             if(strstr(Buff_RX, "OK")!=NULL)
    136                  {
    137                    odp=1;  //ok 
    138                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    139                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    140                    Net->Status.Error=0;
    141                  }
    142             
    143             return odp;
    144          }
    145          
    146          
    147          
    148          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    149          void WizFiCommand_ATI2(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    150          {
   \                     WizFiCommand_ATI2:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    151             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   9121               MOVS     R1,#+145
   \   00000008   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000000A   ........           BL       __aeabi_memclr
    152             Net->Status.CurrentOrder=WizFi_ATI2;
   \   0000000E   0320               MOVS     R0,#+3
   \   00000010   A070               STRB     R0,[R4, #+2]
    153             if (WiFiDebug) SendViaUSB((char*)ATI2, sizeof(ATI2)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000012   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   00000014   0078               LDRB     R0,[R0, #+0]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   03D0               BEQ      ??WizFiCommand_ATI2_0
   \   0000001A   0521               MOVS     R1,#+5
   \   0000001C   0448               LDR      R0,??WizFiCommand_ATI2_1  ;; ATI2
   \   0000001E   ........           BL       SendViaUSB
    154             AT91F_US_SendFrame(USART,(char*)ATI2,sizeof(ATI2)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_ATI2_0:
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0522               MOVS     R2,#+5
   \   0000002C   0049               LDR      R1,??WizFiCommand_ATI2_1  ;; ATI2
   \   0000002E   ....               B.N      ?Subroutine2
   \                     ??WizFiCommand_ATI2_1:
   \   00000030   ........           DC32     ATI2
    155             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    156             
    157             
    158          }

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ?Subroutine2:
   \   00000000   2800               MOVS     R0,R5
   \   00000002   ........           BL       AT91F_US_SendFrame
   \   00000006   02B0               ADD      SP,SP,#+8
   \   00000008   3834               ADDS     R4,R4,#+56
   \                     ??Subroutine2_0:
   \   0000000A   ....               LDR      R0,??DataTable18  ;; g_counter
   \   0000000C   0CC8               LDM      R0!,{R2,R3}
   \   0000000E   ....               LDR      R0,??DataTable14  ;; 0x2710
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   8018               ADDS     R0,R0,R2
   \   00000014   5941               ADCS     R1,R1,R3
   \   00000016   03C4               STM      R4!,{R0,R1}
   \                     ??Subroutine2_1:
   \   00000018   38BC               POP      {R3-R5}
   \   0000001A   01BC               POP      {R0}
   \   0000001C   0047               BX       R0               ;; return
   \   0000001E   C046               Nop      
   \                     ??Subroutine2_2:
   \   00000020   ........           DC32     AT_XDUM0
   \   00000024   ........           DC32     AT_XDUM0
    159          
    160          
    161          
    162          

   \                                 In section Debug.txt, align 4, keep-with-next
    163          char WizFiResponseCommand_ATI2(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    164          {
   \                     WizFiResponseCommand_ATI2:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    165             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   0025               MOVS     R5,#+0
    166             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_ATI2_0
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    167             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_ATI2_0:
   \   00000022   ....               B.N      ??Subroutine1_0
    168                  {
    169                    odp=1;  //ok 
    170                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    171                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    172                    Net->Status.Error=0;
    173                  }
    174             
    175             return odp;
    176          }
    177          
    178          
    179          
    180          
    181          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    182          void WizFiCommand_AT_XDUM0(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    183          {
   \                     WizFiCommand_AT_XDUM0:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    184             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   9121               MOVS     R1,#+145
   \   00000008   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000000A   ........           BL       __aeabi_memclr
    185             Net->Status.CurrentOrder=WizFi_AT_XDUM0;    
   \   0000000E   0420               MOVS     R0,#+4
   \   00000010   A070               STRB     R0,[R4, #+2]
    186             if (WiFiDebug) SendViaUSB((char*)AT_XDUM0, sizeof(AT_XDUM0)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000012   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   00000014   0078               LDRB     R0,[R0, #+0]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   03D0               BEQ      ??WizFiCommand_AT_XDUM0_0
   \   0000001A   0A21               MOVS     R1,#+10
   \   0000001C   ....               LDR      R0,??Subroutine2_2  ;; AT_XDUM0
   \   0000001E   ........           BL       SendViaUSB
    187             AT91F_US_SendFrame(USART,(char*)AT_XDUM0,sizeof(AT_XDUM0)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_XDUM0_0:
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0A22               MOVS     R2,#+10
   \   0000002C   ....               LDR      R1,??Subroutine2_2+0x4  ;; AT_XDUM0
   \   0000002E   C046               Nop      
   \   00000030                      REQUIRE ?Subroutine2
   \   00000030                      ;; // Fall through to label ?Subroutine2
    188             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    189             
    190             
    191             
    192          }
    193          

   \                                 In section Debug.txt, align 4, keep-with-next
    194          char WizFiResponseCommand_AT_XDUM0(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    195          {
   \                     WizFiResponseCommand_AT_XDUM0:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    196             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   0025               MOVS     R5,#+0
    197             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_AT_XDUM0_0
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    198             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_XDUM0_0:
   \   00000022   ....               B.N      ??Subroutine1_0
    199                  {
    200                    odp=1;  //ok 
    201                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    202                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    203                    Net->Status.Error=0;
    204                  }
    205             
    206             return odp;
    207          }
    208          
    209          
    210          
    211          
    212          
    213          
    214          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    215          void WizFiCommand_AT_NCLOSEALL(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    216          {
   \                     WizFiCommand_AT_NCLOSEALL:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1400               MOVS     R4,R2
   \   00000004   1D00               MOVS     R5,R3
    217             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   9121               MOVS     R1,#+145
   \   00000008   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000000A   ........           BL       __aeabi_memclr
    218             Net->Status.CurrentOrder=WizFi_AT_NCLOSEALL;  
   \   0000000E   0F20               MOVS     R0,#+15
   \   00000010   A870               STRB     R0,[R5, #+2]
    219             if (WiFiDebug) SendViaUSB((char*)AT_NCLOSEALL, sizeof(AT_NCLOSEALL)-1);   
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000012   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   00000014   0078               LDRB     R0,[R0, #+0]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   03D0               BEQ      ??WizFiCommand_AT_NCLOSEALL_0
   \   0000001A   0D21               MOVS     R1,#+13
   \   0000001C   0748               LDR      R0,??WizFiCommand_AT_NCLOSEALL_1  ;; AT_NCLOSEALL
   \   0000001E   ........           BL       SendViaUSB
    220             AT91F_US_SendFrame(USART,(char*)AT_NCLOSEALL,sizeof(AT_NCLOSEALL)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NCLOSEALL_0:
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0D22               MOVS     R2,#+13
   \   0000002C   0349               LDR      R1,??WizFiCommand_AT_NCLOSEALL_1  ;; AT_NCLOSEALL
   \   0000002E   2000               MOVS     R0,R4
   \   00000030   ........           BL       AT91F_US_SendFrame
   \   00000034   02B0               ADD      SP,SP,#+8
    221             //Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    222             Net->Status.HostLink=DISCONNECTED; 
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   6870               STRB     R0,[R5, #+1]
    223             
    224             
    225          }
   \   0000003A   ....               B.N      ??Subroutine2_1
   \                     ??WizFiCommand_AT_NCLOSEALL_1:
   \   0000003C   ........           DC32     AT_NCLOSEALL
    226          

   \                                 In section Debug.txt, align 4, keep-with-next
    227          char WizFiResponseCommand_AT_NCLOSEALL0(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    228          {
   \                     WizFiResponseCommand_AT_NCLOSEALL0:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    229             char odp=0;
   \   00000006   0025               MOVS     R5,#+0
   \   00000008   0026               MOVS     R6,#+0
    230             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_AT_NCLOSEALL0_0
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    231             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_NCLOSEALL0_0:
   \   00000022   0BA1               ADR      R1,??WizFiResponseCommand_AT_NCLOSEALL0_1  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3800               MOVS     R0,R7
   \   00000026   ........           BL       __iar_Strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   0DD0               BEQ      ??WizFiResponseCommand_AT_NCLOSEALL0_2
    232                  {
    233                    odp=1;  //ok 
   \   0000002E   0126               MOVS     R6,#+1
    234                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   3221               MOVS     R1,#+50
   \   00000032   3800               MOVS     R0,R7
   \   00000034   ........           BL       __aeabi_memclr
    235                    Net->Status.Timeout=g_counter + FREEZ_TIME;    //przed³u¿enie /restart timeoutu
   \   00000038   2200               MOVS     R2,R4
   \   0000003A   3832               ADDS     R2,R2,#+56
   \   0000003C   ....               LDR      R0,??DataTable18  ;; g_counter
   \   0000003E   03C8               LDM      R0!,{R0,R1}
   \   00000040   0023               MOVS     R3,#+0
   \   00000042   3230               ADDS     R0,R0,#+50
   \   00000044   5941               ADCS     R1,R1,R3
   \   00000046   03C2               STM      R2!,{R0,R1}
    236                     Net->Status.HostLink=DISCONNECTED;
   \   00000048   6570               STRB     R5,[R4, #+1]
    237                  }
    238             
    239             return odp;
   \                     ??WizFiResponseCommand_AT_NCLOSEALL0_2:
   \   0000004A   3000               MOVS     R0,R6
   \   0000004C   ....               B.N      ??Subroutine1_2
   \   0000004E   C046               Nop      
   \                     ??WizFiResponseCommand_AT_NCLOSEALL0_1:
   \   00000050   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
    240          }
    241          
    242          
    243           
    244          
    245          
    246          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    247          void WizFiCommand_AT_WD(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    248          {
   \                     WizFiCommand_AT_WD:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    249             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   9121               MOVS     R1,#+145
   \   00000008   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000000A   ........           BL       __aeabi_memclr
    250             Net->Status.CurrentOrder=WizFi_AT_WD;    
   \   0000000E   0520               MOVS     R0,#+5
   \   00000010   A070               STRB     R0,[R4, #+2]
    251             if (WiFiDebug) SendViaUSB((char*)AT_WD, sizeof(AT_WD)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000012   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   00000014   0078               LDRB     R0,[R0, #+0]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   03D0               BEQ      ??WizFiCommand_AT_WD_0
   \   0000001A   0621               MOVS     R1,#+6
   \   0000001C   0448               LDR      R0,??WizFiCommand_AT_WD_1  ;; AT_WD
   \   0000001E   ........           BL       SendViaUSB
    252             AT91F_US_SendFrame(USART,(char*)AT_WD,sizeof(AT_WD)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_WD_0:
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0622               MOVS     R2,#+6
   \   0000002C   0049               LDR      R1,??WizFiCommand_AT_WD_1  ;; AT_WD
   \   0000002E   ....               B.N      ?Subroutine2
   \                     ??WizFiCommand_AT_WD_1:
   \   00000030   ........           DC32     AT_WD
    253             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    254             
    255             
    256          }
    257          

   \                                 In section Debug.txt, align 4, keep-with-next
    258          char WizFiResponseCommand_AT_WD(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    259          {
   \                     WizFiResponseCommand_AT_WD:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    260             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   0025               MOVS     R5,#+0
    261             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   ....               LDR      R0,??DataTable20  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_AT_WD_0
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    262             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WD_0:
   \   00000022   ....               B.N      ??Subroutine1_0
    263                  {
    264                    odp=1;  //ok 
    265                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    266                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    267                    Net->Status.Error=0;
    268                  }
    269             
    270             return odp;
    271          }
    272          
    273          
    274          
    275          
    276          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    277          void WizFiCommand_AT_NDHCP(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    278          {      
   \                     WizFiCommand_AT_NDHCP:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    279             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   9121               MOVS     R1,#+145
   \   00000008   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000000A   ........           BL       __aeabi_memclr
    280             Net->Status.CurrentOrder=WizFi_AT_NDHCP;  
   \   0000000E   0720               MOVS     R0,#+7
   \   00000010   A070               STRB     R0,[R4, #+2]
    281             if (Net->WiFi.IpNotAuto)
   \   00000012   3834               ADDS     R4,R4,#+56
   \   00000014   1148               LDR      R0,??WizFiCommand_AT_NDHCP_0  ;; WiFiDebug
   \   00000016   0078               LDRB     R0,[R0, #+0]
   \   00000018   617E               LDRB     R1,[R4, #+25]
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   0CD0               BEQ      ??WizFiCommand_AT_NDHCP_1
    282             {  
    283                 if (WiFiDebug) SendViaUSB((char*)AT_NDHCP_0, sizeof(AT_NDHCP_0)-1);
                                                  ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000001E   0028               CMP      R0,#+0
   \   00000020   03D0               BEQ      ??WizFiCommand_AT_NDHCP_2
   \   00000022   0B21               MOVS     R1,#+11
   \   00000024   0E48               LDR      R0,??WizFiCommand_AT_NDHCP_0+0x4  ;; AT_NDHCP_0
   \   00000026   ........           BL       SendViaUSB
    284                 AT91F_US_SendFrame(USART,(char*)AT_NDHCP_0,sizeof(AT_NDHCP_0)-1,0, 0);                        //Wysyla ramke  
                                                 ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NDHCP_2:
   \   0000002A   82B0               SUB      SP,SP,#+8
   \   0000002C   0020               MOVS     R0,#+0
   \   0000002E   0090               STR      R0,[SP, #+0]
   \   00000030   0023               MOVS     R3,#+0
   \   00000032   0B22               MOVS     R2,#+11
   \   00000034   0A49               LDR      R1,??WizFiCommand_AT_NDHCP_0+0x4  ;; AT_NDHCP_0
   \   00000036   0BE0               B.N      ??WizFiCommand_AT_NDHCP_3
    285                 
    286             }else{ 
    287                 if (WiFiDebug) SendViaUSB((char*)AT_NDHCP_1, sizeof(AT_NDHCP_1)-1);
                                                  ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NDHCP_1:
   \   00000038   0028               CMP      R0,#+0
   \   0000003A   03D0               BEQ      ??WizFiCommand_AT_NDHCP_4
   \   0000003C   0B21               MOVS     R1,#+11
   \   0000003E   0948               LDR      R0,??WizFiCommand_AT_NDHCP_0+0x8  ;; AT_NDHCP_0 + 12
   \   00000040   ........           BL       SendViaUSB
    288                 AT91F_US_SendFrame(USART,(char*)AT_NDHCP_1,sizeof(AT_NDHCP_1)-1,0, 0);                        //Wysyla ramke  
                                                 ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NDHCP_4:
   \   00000044   82B0               SUB      SP,SP,#+8
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   0090               STR      R0,[SP, #+0]
   \   0000004A   0023               MOVS     R3,#+0
   \   0000004C   0B22               MOVS     R2,#+11
   \   0000004E   0549               LDR      R1,??WizFiCommand_AT_NDHCP_0+0x8  ;; AT_NDHCP_0 + 12
   \                     ??WizFiCommand_AT_NDHCP_3:
   \   00000050   2800               MOVS     R0,R5
   \   00000052   ........           BL       AT91F_US_SendFrame
   \   00000056   02B0               ADD      SP,SP,#+8
    289                 
    290             }
    291             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu 
   \   00000058   ....               B.N      ??Subroutine2_0
   \   0000005A   C046               Nop      
   \                     ??WizFiCommand_AT_NDHCP_0:
   \   0000005C   ........           DC32     WiFiDebug
   \   00000060   ........           DC32     AT_NDHCP_0
   \   00000064   ........           DC32     AT_NDHCP_0 + 12
    292             
    293          }
    294          

   \                                 In section Debug.txt, align 4, keep-with-next
    295          char WizFiResponseCommand_AT_NDHCP(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    296          {
   \                     WizFiResponseCommand_AT_NDHCP:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    297             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   0025               MOVS     R5,#+0
    298             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   0648               LDR      R0,??WizFiResponseCommand_AT_NDHCP_0  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_AT_NDHCP_1
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    299             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_NDHCP_1:
   \   00000022   ....               B.N      ??Subroutine1_0
   \                     ??WizFiResponseCommand_AT_NDHCP_0:
   \   00000024   ........           DC32     WiFiDebug
    300                  {
    301                    odp=1;  //ok 
    302                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    303                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    304                    Net->Status.Error=0;
    305                  }
    306             
    307             return odp;
    308          }
    309          
    310          
    311          
    312          
    313          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    314          void WizFiCommand_AT_NSET(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    315          {      
   \                     WizFiCommand_AT_NSET:
   \   00000000   F4B5               PUSH     {R2,R4-R7,LR}
   \   00000002   0E00               MOVS     R6,R1
   \   00000004   1D00               MOVS     R5,R3
    316                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   9121               MOVS     R1,#+145
   \   00000008   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000000A   ........           BL       __aeabi_memclr
    317                     Net->Status.CurrentOrder=WizFi_AT_NSET;
   \   0000000E   0620               MOVS     R0,#+6
   \   00000010   A870               STRB     R0,[R5, #+2]
    318                     char BTS=0;
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   0021               MOVS     R1,#+0
    319                     for (char i=0; i<sizeof(AT_NSET); i++)  {Buff_TX[i]=AT_NSET[i];   BTS++;}
   \   00000016   3200               MOVS     R2,R6
   \   00000018   3B4B               LDR      R3,??WizFiCommand_AT_NSET_0  ;; AT_NSET
   \   0000001A   0324               MOVS     R4,#+3
   \                     ??WizFiCommand_AT_NSET_1:
   \   0000001C   1F78               LDRB     R7,[R3, #+0]
   \   0000001E   1770               STRB     R7,[R2, #+0]
   \   00000020   5F78               LDRB     R7,[R3, #+1]
   \   00000022   5770               STRB     R7,[R2, #+1]
   \   00000024   9F78               LDRB     R7,[R3, #+2]
   \   00000026   9770               STRB     R7,[R2, #+2]
   \   00000028   C91C               ADDS     R1,R1,#+3
   \   0000002A   0906               LSLS     R1,R1,#+24
   \   0000002C   090E               LSRS     R1,R1,#+24
   \   0000002E   DB1C               ADDS     R3,R3,#+3
   \   00000030   D21C               ADDS     R2,R2,#+3
   \   00000032   641E               SUBS     R4,R4,#+1
   \   00000034   F2D1               BNE      ??WizFiCommand_AT_NSET_1
    320                     BTS--;
   \   00000036   491E               SUBS     R1,R1,#+1
   \   00000038   0906               LSLS     R1,R1,#+24
   \   0000003A   090E               LSRS     R1,R1,#+24
    321                     char ZN=0;
    322                     ZN=0; while ((Net->WiFi.IP[ZN]>0) && (ZN<=14)) {Buff_TX[BTS+ZN]=Net->WiFi.IP[ZN]; ZN++;}
   \   0000003C   0022               MOVS     R2,#+0
   \   0000003E   04E0               B        ??WizFiCommand_AT_NSET_2
   \                     ??WizFiCommand_AT_NSET_3:
   \   00000040   8C18               ADDS     R4,R1,R2
   \   00000042   3755               STRB     R7,[R6, R4]
   \   00000044   521C               ADDS     R2,R2,#+1
   \   00000046   1206               LSLS     R2,R2,#+24
   \   00000048   120E               LSRS     R2,R2,#+24
   \                     ??WizFiCommand_AT_NSET_2:
   \   0000004A   2C00               MOVS     R4,R5
   \   0000004C   3834               ADDS     R4,R4,#+56
   \   0000004E   2300               MOVS     R3,R4
   \   00000050   1C33               ADDS     R3,R3,#+28
   \   00000052   9B18               ADDS     R3,R3,R2
   \   00000054   1F78               LDRB     R7,[R3, #+0]
   \   00000056   002F               CMP      R7,#+0
   \   00000058   01D0               BEQ      ??WizFiCommand_AT_NSET_4
   \   0000005A   0F2A               CMP      R2,#+15
   \   0000005C   F0D3               BCC      ??WizFiCommand_AT_NSET_3
    323                     BTS+=ZN;
   \                     ??WizFiCommand_AT_NSET_4:
   \   0000005E   8918               ADDS     R1,R1,R2
   \   00000060   0906               LSLS     R1,R1,#+24
   \   00000062   090E               LSRS     R1,R1,#+24
   \   00000064   2C23               MOVS     R3,#+44
   \   00000066   7354               STRB     R3,[R6, R1]
   \   00000068   491C               ADDS     R1,R1,#+1
   \   0000006A   0906               LSLS     R1,R1,#+24
   \   0000006C   090E               LSRS     R1,R1,#+24
    324                     Buff_TX[BTS++]=',';
    325                     ZN=0; while ((Net->WiFi.Mask[ZN]>0) && (ZN<=14)) {Buff_TX[BTS+ZN]=Net->WiFi.Mask[ZN]; ZN++;}
   \   0000006E   0022               MOVS     R2,#+0
   \   00000070   6335               ADDS     R5,R5,#+99
   \   00000072   05E0               B        ??WizFiCommand_AT_NSET_5
   \                     ??WizFiCommand_AT_NSET_6:
   \   00000074   8F18               ADDS     R7,R1,R2
   \   00000076   1B78               LDRB     R3,[R3, #+0]
   \   00000078   F355               STRB     R3,[R6, R7]
   \   0000007A   521C               ADDS     R2,R2,#+1
   \   0000007C   1206               LSLS     R2,R2,#+24
   \   0000007E   120E               LSRS     R2,R2,#+24
   \                     ??WizFiCommand_AT_NSET_5:
   \   00000080   AB18               ADDS     R3,R5,R2
   \   00000082   1F78               LDRB     R7,[R3, #+0]
   \   00000084   002F               CMP      R7,#+0
   \   00000086   01D0               BEQ      ??WizFiCommand_AT_NSET_7
   \   00000088   0F2A               CMP      R2,#+15
   \   0000008A   F3D3               BCC      ??WizFiCommand_AT_NSET_6
    326                     BTS+=ZN;
   \                     ??WizFiCommand_AT_NSET_7:
   \   0000008C   8918               ADDS     R1,R1,R2
   \   0000008E   0906               LSLS     R1,R1,#+24
   \   00000090   090E               LSRS     R1,R1,#+24
    327                     Buff_TX[BTS++]=',';
   \   00000092   2C23               MOVS     R3,#+44
   \   00000094   7354               STRB     R3,[R6, R1]
   \   00000096   491C               ADDS     R1,R1,#+1
   \   00000098   0906               LSLS     R1,R1,#+24
   \   0000009A   090E               LSRS     R1,R1,#+24
    328                     ZN=0; while ((Net->WiFi.Gate[ZN]>0) && (ZN<=14)) {Buff_TX[BTS+ZN]=Net->WiFi.Gate[ZN]; ZN++;}
   \   0000009C   05E0               B        ??WizFiCommand_AT_NSET_8
   \                     ??WizFiCommand_AT_NSET_9:
   \   0000009E   0B18               ADDS     R3,R1,R0
   \   000000A0   1278               LDRB     R2,[R2, #+0]
   \   000000A2   F254               STRB     R2,[R6, R3]
   \   000000A4   401C               ADDS     R0,R0,#+1
   \   000000A6   0006               LSLS     R0,R0,#+24
   \   000000A8   000E               LSRS     R0,R0,#+24
   \                     ??WizFiCommand_AT_NSET_8:
   \   000000AA   2A00               MOVS     R2,R5
   \   000000AC   0F32               ADDS     R2,R2,#+15
   \   000000AE   1218               ADDS     R2,R2,R0
   \   000000B0   1378               LDRB     R3,[R2, #+0]
   \   000000B2   002B               CMP      R3,#+0
   \   000000B4   01D0               BEQ      ??WizFiCommand_AT_NSET_10
   \   000000B6   0F28               CMP      R0,#+15
   \   000000B8   F1D3               BCC      ??WizFiCommand_AT_NSET_9
    329                     
    330                     Buff_TX[BTS+ZN++]=0x0d;
   \                     ??WizFiCommand_AT_NSET_10:
   \   000000BA   0D00               MOVS     R5,R1
   \   000000BC   0200               MOVS     R2,R0
   \   000000BE   AA18               ADDS     R2,R5,R2
   \   000000C0   0D23               MOVS     R3,#+13
   \   000000C2   B354               STRB     R3,[R6, R2]
   \   000000C4   401C               ADDS     R0,R0,#+1
   \   000000C6   0706               LSLS     R7,R0,#+24
   \   000000C8   3F0E               LSRS     R7,R7,#+24
    331                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS+ZN);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000000CA   1048               LDR      R0,??WizFiCommand_AT_NSET_0+0x4  ;; WiFiDebug
   \   000000CC   0078               LDRB     R0,[R0, #+0]
   \   000000CE   0028               CMP      R0,#+0
   \   000000D0   05D0               BEQ      ??WizFiCommand_AT_NSET_11
   \   000000D2   C919               ADDS     R1,R1,R7
   \   000000D4   0904               LSLS     R1,R1,#+16
   \   000000D6   090C               LSRS     R1,R1,#+16
   \   000000D8   3000               MOVS     R0,R6
   \   000000DA   ........           BL       SendViaUSB
    332                     AT91F_US_SendFrame(USART,Buff_TX,BTS+ZN,0, 0);                        //Wysyla ramke  
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NSET_11:
   \   000000DE   82B0               SUB      SP,SP,#+8
   \   000000E0   0020               MOVS     R0,#+0
   \   000000E2   0090               STR      R0,[SP, #+0]
   \   000000E4   0023               MOVS     R3,#+0
   \   000000E6   EA19               ADDS     R2,R5,R7
   \   000000E8   3100               MOVS     R1,R6
   \   000000EA   0298               LDR      R0,[SP, #+8]
   \   000000EC   ........           BL       AT91F_US_SendFrame
   \   000000F0   02B0               ADD      SP,SP,#+8
    333                     Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000000F2   0748               LDR      R0,??WizFiCommand_AT_NSET_0+0x8  ;; g_counter
   \   000000F4   0CC8               LDM      R0!,{R2,R3}
   \   000000F6   0748               LDR      R0,??WizFiCommand_AT_NSET_0+0xC  ;; 0x2710
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   8018               ADDS     R0,R0,R2
   \   000000FC   5941               ADCS     R1,R1,R3
   \   000000FE   03C4               STM      R4!,{R0,R1}
    334                     
    335                     
    336          }
   \   00000100   F8BC               POP      {R3-R7}
   \   00000102   01BC               POP      {R0}
   \   00000104   0047               BX       R0               ;; return
   \   00000106   C046               Nop      
   \                     ??WizFiCommand_AT_NSET_0:
   \   00000108   ........           DC32     AT_NSET
   \   0000010C   ........           DC32     WiFiDebug
   \   00000110   ........           DC32     g_counter
   \   00000114   10270000           DC32     0x2710
    337          

   \                                 In section Debug.txt, align 4, keep-with-next
    338          char WizFiResponseCommand_AT_NSET(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    339          {
   \                     WizFiResponseCommand_AT_NSET:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    340             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   0025               MOVS     R5,#+0
    341             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   0648               LDR      R0,??WizFiResponseCommand_AT_NSET_0  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_AT_NSET_1
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    342             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_NSET_1:
   \   00000022   ....               B.N      ??Subroutine1_0
   \                     ??WizFiResponseCommand_AT_NSET_0:
   \   00000024   ........           DC32     WiFiDebug
    343                  {
    344                    odp=1;  //ok 
    345                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    346                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    347                    Net->Status.Error=0;
    348                  }
    349             
    350             return odp;
    351          }
    352          
    353          
    354          
    355          
    356          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    357          void WizFiCommand_AT_WAUTH_1(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    358          {
   \                     WizFiCommand_AT_WAUTH_1:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   1500               MOVS     R5,R2
   \   00000004   1C00               MOVS     R4,R3
    359             for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   9121               MOVS     R1,#+145
   \   00000008   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000000A   ........           BL       __aeabi_memclr
    360             Net->Status.CurrentOrder=WizFi_AT_WAUTH_1;    
   \   0000000E   0820               MOVS     R0,#+8
   \   00000010   A070               STRB     R0,[R4, #+2]
    361             if (WiFiDebug) SendViaUSB((char*)AT_WAUTH_1, sizeof(AT_WAUTH_1)-1);
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000012   0748               LDR      R0,??WizFiCommand_AT_WAUTH_1_0  ;; WiFiDebug
   \   00000014   0078               LDRB     R0,[R0, #+0]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   03D0               BEQ      ??WizFiCommand_AT_WAUTH_1_1
   \   0000001A   0B21               MOVS     R1,#+11
   \   0000001C   0548               LDR      R0,??WizFiCommand_AT_WAUTH_1_0+0x4  ;; AT_WAUTH_1
   \   0000001E   ........           BL       SendViaUSB
    362             AT91F_US_SendFrame(USART,(char*)AT_WAUTH_1,sizeof(AT_WAUTH_1)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_WAUTH_1_1:
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0B22               MOVS     R2,#+11
   \   0000002C   0149               LDR      R1,??WizFiCommand_AT_WAUTH_1_0+0x4  ;; AT_WAUTH_1
   \   0000002E   ....               B.N      ?Subroutine2
   \                     ??WizFiCommand_AT_WAUTH_1_0:
   \   00000030   ........           DC32     WiFiDebug
   \   00000034   ........           DC32     AT_WAUTH_1
    363             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    364          }
    365          

   \                                 In section Debug.txt, align 4, keep-with-next
    366          char WizFiResponseCommand_AT_WAUTH_1(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    367          {
   \                     WizFiResponseCommand_AT_WAUTH_1:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    368             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   0025               MOVS     R5,#+0
    369             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   0648               LDR      R0,??WizFiResponseCommand_AT_WAUTH_1_0  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_AT_WAUTH_1_1
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    370             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WAUTH_1_1:
   \   00000022   ....               B.N      ??Subroutine1_0
   \                     ??WizFiResponseCommand_AT_WAUTH_1_0:
   \   00000024   ........           DC32     WiFiDebug
    371                  {
    372                    odp=1;  //ok 
    373                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    374                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    375                    Net->Status.Error=0;
    376                  }
    377             
    378             return odp;
    379          }
    380          
    381          
    382          //funkcja konwertuj¹ca string asci na string hex. ka¿da litera rozk³adana jest na dwie cyfry hex które s¹ zapisywane spowrotem jako ascii

   \                                 In section Debug.txt, align 4, keep-with-next
    383          void AsciToHexStr(char *AsciStr, char *HexStr)
    384          {
   \                     AsciToHexStr:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   0025               MOVS     R5,#+0
    385          
    386             
    387             char L=0; //litera
    388             char LHex=0; //cyfra hex
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   14E0               B        ??AsciToHexStr_0
    389             while ((AsciStr[L]>0) && (L<100))
    390             {
    391                CharToStr((AsciStr[L]>>4), &HexStr[LHex++], 1); 
   \                     ??AsciToHexStr_1:
   \   0000000A   0122               MOVS     R2,#+1
   \   0000000C   A119               ADDS     R1,R4,R6
   \   0000000E   0009               LSRS     R0,R0,#+4
   \   00000010   ........           BL       CharToStr
   \   00000014   761C               ADDS     R6,R6,#+1
   \   00000016   3606               LSLS     R6,R6,#+24
   \   00000018   360E               LSRS     R6,R6,#+24
    392                CharToStr((AsciStr[L]&0xF), &HexStr[LHex++], 1); 
   \   0000001A   0122               MOVS     R2,#+1
   \   0000001C   A119               ADDS     R1,R4,R6
   \   0000001E   3878               LDRB     R0,[R7, #+0]
   \   00000020   0007               LSLS     R0,R0,#+28
   \   00000022   000F               LSRS     R0,R0,#+28
   \   00000024   ........           BL       CharToStr
   \   00000028   761C               ADDS     R6,R6,#+1
   \   0000002A   3606               LSLS     R6,R6,#+24
   \   0000002C   360E               LSRS     R6,R6,#+24
    393                L++;
   \   0000002E   6D1C               ADDS     R5,R5,#+1
   \   00000030   2D06               LSLS     R5,R5,#+24
   \   00000032   2D0E               LSRS     R5,R5,#+24
    394             }
   \                     ??AsciToHexStr_0:
   \   00000034   0098               LDR      R0,[SP, #+0]
   \   00000036   4719               ADDS     R7,R0,R5
   \   00000038   3878               LDRB     R0,[R7, #+0]
   \   0000003A   0028               CMP      R0,#+0
   \   0000003C   01D0               BEQ      ??AsciToHexStr_2
   \   0000003E   642D               CMP      R5,#+100
   \   00000040   E3D3               BCC      ??AsciToHexStr_1
    395             HexStr[LHex]=0;
   \                     ??AsciToHexStr_2:
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   A055               STRB     R0,[R4, R6]
    396          }
   \   00000046   F8BC               POP      {R3-R7}
   \   00000048   01BC               POP      {R0}
   \   0000004A   0047               BX       R0               ;; return
    397          
    398          
    399          
    400          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    401          char WizFiCommand_AT_WWEP1(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    402          {
   \                     WizFiCommand_AT_WWEP1:
   \   00000000   FEB5               PUSH     {R1-R7,LR}
    403                     //okrelenie typu wpisu czy? 64bit hex, czy 64bit asci, czy 128bit ASCI  -- 128B hex nie jest obs³ugiwane   
    404                     //5 znaków - kod asci 64b
    405                     //13 znaków - kod asci 128b
    406                     //10 znaków - kod hex 64 bit
    407                     //wartoæ inna to b³¹d lub kodowanie nie WEP
    408                     
    409                     char PassLen=0;
   \   00000002   0027               MOVS     R7,#+0
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   1C00               MOVS     R4,R3
   \   00000008   9F34               ADDS     R4,R4,#+159
   \   0000000A   02E0               B        ??WizFiCommand_AT_WWEP1_0
    410                     while ((Net->WiFi.Key[PassLen]>0) && (PassLen<=15)) PassLen++;
   \                     ??WizFiCommand_AT_WWEP1_1:
   \   0000000C   6D1C               ADDS     R5,R5,#+1
   \   0000000E   2D06               LSLS     R5,R5,#+24
   \   00000010   2D0E               LSRS     R5,R5,#+24
   \                     ??WizFiCommand_AT_WWEP1_0:
   \   00000012   615D               LDRB     R1,[R4, R5]
   \   00000014   0029               CMP      R1,#+0
   \   00000016   01D0               BEQ      ??WizFiCommand_AT_WWEP1_2
   \   00000018   102D               CMP      R5,#+16
   \   0000001A   F7D3               BCC      ??WizFiCommand_AT_WWEP1_1
    411                     
    412                     if ((PassLen!=5) && (PassLen!=13) && (PassLen!=10)) return 0;        //z³a iloc znaków lub nie ten typ kodowania
   \                     ??WizFiCommand_AT_WWEP1_2:
   \   0000001C   052D               CMP      R5,#+5
   \   0000001E   05D0               BEQ      ??WizFiCommand_AT_WWEP1_3
   \   00000020   0D2D               CMP      R5,#+13
   \   00000022   03D0               BEQ      ??WizFiCommand_AT_WWEP1_3
   \   00000024   0A2D               CMP      R5,#+10
   \   00000026   01D0               BEQ      ??WizFiCommand_AT_WWEP1_3
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   5AE0               B        ??WizFiCommand_AT_WWEP1_4
    413             
    414                     
    415                     //wstawienie rozkazu 
    416                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \                     ??WizFiCommand_AT_WWEP1_3:
   \   0000002C   9121               MOVS     R1,#+145
   \   0000002E   8900               LSLS     R1,R1,#+2        ;; #+580
   \   00000030   ........           BL       __aeabi_memclr
    417                    // Net->Status.CurrentOrder=WizFi_AT_WWEP1;
    418                     char BTS=0;
   \   00000034   0020               MOVS     R0,#+0
    419                     for (char i=0; i<sizeof(AT_WWEP1); i++)  {Buff_TX[i]=AT_WWEP1[i];   BTS++;}
   \   00000036   0099               LDR      R1,[SP, #+0]
   \   00000038   2B4A               LDR      R2,??WizFiCommand_AT_WWEP1_5  ;; AT_WWEP1
   \   0000003A   0523               MOVS     R3,#+5
   \                     ??WizFiCommand_AT_WWEP1_6:
   \   0000003C   1678               LDRB     R6,[R2, #+0]
   \   0000003E   0E70               STRB     R6,[R1, #+0]
   \   00000040   5678               LDRB     R6,[R2, #+1]
   \   00000042   4E70               STRB     R6,[R1, #+1]
   \   00000044   801C               ADDS     R0,R0,#+2
   \   00000046   0006               LSLS     R0,R0,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \   0000004A   921C               ADDS     R2,R2,#+2
   \   0000004C   891C               ADDS     R1,R1,#+2
   \   0000004E   5B1E               SUBS     R3,R3,#+1
   \   00000050   F4D1               BNE      ??WizFiCommand_AT_WWEP1_6
    420                     BTS--;
   \   00000052   461E               SUBS     R6,R0,#+1
   \   00000054   3606               LSLS     R6,R6,#+24
   \   00000056   360E               LSRS     R6,R6,#+24
    421                     
    422                     
    423                     //wstawienie klucza
    424                     char Key[15];
    425                     char PassN=0;
    426                     switch (PassLen)
   \   00000058   052D               CMP      R5,#+5
   \   0000005A   04D0               BEQ      ??WizFiCommand_AT_WWEP1_7
   \   0000005C   0A2D               CMP      R5,#+10
   \   0000005E   0BD0               BEQ      ??WizFiCommand_AT_WWEP1_8
   \   00000060   0D2D               CMP      R5,#+13
   \   00000062   07D0               BEQ      ??WizFiCommand_AT_WWEP1_9
   \   00000064   1AE0               B        ??WizFiCommand_AT_WWEP1_10
    427                     {
    428                        case 5:    
    429                            PassN=10;  
   \                     ??WizFiCommand_AT_WWEP1_7:
   \   00000066   0A27               MOVS     R7,#+10
    430                            AsciToHexStr(Net->WiFi.Key, &Buff_TX[BTS]);
   \                     ??WizFiCommand_AT_WWEP1_11:
   \   00000068   0099               LDR      R1,[SP, #+0]
   \   0000006A   8919               ADDS     R1,R1,R6
   \   0000006C   2000               MOVS     R0,R4
   \   0000006E   ........           BL       AsciToHexStr
   \   00000072   13E0               B        ??WizFiCommand_AT_WWEP1_10
    431                        break;
    432          
    433                        case 13:    
    434                            PassN=26; 
   \                     ??WizFiCommand_AT_WWEP1_9:
   \   00000074   1A27               MOVS     R7,#+26
    435                            AsciToHexStr(Net->WiFi.Key, &Buff_TX[BTS]);
   \   00000076   F7E7               B.N      ??WizFiCommand_AT_WWEP1_11
    436                        break;
    437                        
    438                        case 10:    
    439                            PassN=10;  for (char i=0; i<PassN; i++) Buff_TX[BTS+i]=Net->WiFi.Key[i];
   \                     ??WizFiCommand_AT_WWEP1_8:
   \   00000078   0A27               MOVS     R7,#+10
   \   0000007A   0098               LDR      R0,[SP, #+0]
   \   0000007C   8019               ADDS     R0,R0,R6
   \   0000007E   0221               MOVS     R1,#+2
   \                     ??WizFiCommand_AT_WWEP1_12:
   \   00000080   2278               LDRB     R2,[R4, #+0]
   \   00000082   0270               STRB     R2,[R0, #+0]
   \   00000084   6278               LDRB     R2,[R4, #+1]
   \   00000086   4270               STRB     R2,[R0, #+1]
   \   00000088   A278               LDRB     R2,[R4, #+2]
   \   0000008A   8270               STRB     R2,[R0, #+2]
   \   0000008C   E278               LDRB     R2,[R4, #+3]
   \   0000008E   C270               STRB     R2,[R0, #+3]
   \   00000090   2279               LDRB     R2,[R4, #+4]
   \   00000092   0271               STRB     R2,[R0, #+4]
   \   00000094   641D               ADDS     R4,R4,#+5
   \   00000096   401D               ADDS     R0,R0,#+5
   \   00000098   491E               SUBS     R1,R1,#+1
   \   0000009A   F1D1               BNE      ??WizFiCommand_AT_WWEP1_12
   \                     ??WizFiCommand_AT_WWEP1_10:
   \   0000009C   F419               ADDS     R4,R6,R7
   \   0000009E   0098               LDR      R0,[SP, #+0]
   \   000000A0   0D21               MOVS     R1,#+13
   \   000000A2   0155               STRB     R1,[R0, R4]
    440                        break;
    441                     }
    442            
    443          
    444                     
    445                     
    446                      
    447                     Buff_TX[BTS+PassN]=0x0d;
    448                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS+PassN+1);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000000A4   1148               LDR      R0,??WizFiCommand_AT_WWEP1_5+0x4  ;; WiFiDebug
   \   000000A6   0078               LDRB     R0,[R0, #+0]
   \   000000A8   0028               CMP      R0,#+0
   \   000000AA   06D0               BEQ      ??WizFiCommand_AT_WWEP1_13
   \   000000AC   F119               ADDS     R1,R6,R7
   \   000000AE   491C               ADDS     R1,R1,#+1
   \   000000B0   0904               LSLS     R1,R1,#+16
   \   000000B2   090C               LSRS     R1,R1,#+16
   \   000000B4   0098               LDR      R0,[SP, #+0]
   \   000000B6   ........           BL       SendViaUSB
    449                     AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN+1,0, 0);                        //Wysyla ramke  
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"

             char Key[15];
                  ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFiCommand.c",424  Warning[Pe177]: 
          variable "Key" was declared but never referenced
   \                     ??WizFiCommand_AT_WWEP1_13:
   \   000000BA   82B0               SUB      SP,SP,#+8
   \   000000BC   0020               MOVS     R0,#+0
   \   000000BE   0090               STR      R0,[SP, #+0]
   \   000000C0   0023               MOVS     R3,#+0
   \   000000C2   621C               ADDS     R2,R4,#+1
   \   000000C4   0299               LDR      R1,[SP, #+8]
   \   000000C6   0398               LDR      R0,[SP, #+12]
   \   000000C8   ........           BL       AT91F_US_SendFrame
   \   000000CC   02B0               ADD      SP,SP,#+8
    450                     Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000000CE   029C               LDR      R4,[SP, #+8]
   \   000000D0   3834               ADDS     R4,R4,#+56
   \   000000D2   0748               LDR      R0,??WizFiCommand_AT_WWEP1_5+0x8  ;; g_counter
   \   000000D4   0CC8               LDM      R0!,{R2,R3}
   \   000000D6   0748               LDR      R0,??WizFiCommand_AT_WWEP1_5+0xC  ;; 0x2710
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   8018               ADDS     R0,R0,R2
   \   000000DC   5941               ADCS     R1,R1,R3
   \   000000DE   03C4               STM      R4!,{R0,R1}
    451                     
    452                     
    453                     //while ((Net->WiFi.Key[PassN]>0) && (PassN<=15)) {Buff_TX[BTS+PassN]=Net->WiFi.Key[PassN]; PassN++;}
    454             
    455                    return 1;
   \   000000E0   0120               MOVS     R0,#+1
   \                     ??WizFiCommand_AT_WWEP1_4:
   \   000000E2   ........           BL       ??Subroutine3_0
   \   000000E6   C046               Nop      
   \                     ??WizFiCommand_AT_WWEP1_5:
   \   000000E8   ........           DC32     AT_WWEP1
   \   000000EC   ........           DC32     WiFiDebug
   \   000000F0   ........           DC32     g_counter
   \   000000F4   10270000           DC32     0x2710
    456             
    457          }

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ?Subroutine3:
   \   00000000   6846               MOV      R0,SP
   \   00000002   0078               LDRB     R0,[R0, #+0]
   \                     ??Subroutine3_0:
   \   00000004   FEBC               POP      {R1-R7}
   \   00000006   02BC               POP      {R1}
   \   00000008   0847               BX       R1               ;; return
   \   0000000A   C046               Nop      
   \                     ??Subroutine3_1:
   \   0000000C   ........           DC32     AT_NCLOSE
   \   00000010   5B4F4B00           DC8      "[OK"
    458          

   \                                 In section Debug.txt, align 4, keep-with-next
    459          char WizFiResponseCommand_AT_WWEP1(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    460          {
   \                     WizFiResponseCommand_AT_WWEP1:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    461             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   0025               MOVS     R5,#+0
    462             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   0648               LDR      R0,??WizFiResponseCommand_AT_WWEP1_0  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_AT_WWEP1_1
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    463             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WWEP1_1:
   \   00000022   ....               B.N      ??Subroutine1_0
   \                     ??WizFiResponseCommand_AT_WWEP1_0:
   \   00000024   ........           DC32     WiFiDebug
    464                  {
    465                    odp=1;  //ok 
    466                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    467                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    468                    Net->Status.Error=0;
    469                  }
    470             
    471             return odp;
    472          }
    473          
    474          
    475          
    476          
    477          
    478          
    479          
    480          
    481          
    482          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    483          char WizFiCommand_AT_WWPA(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    484          {
   \                     WizFiCommand_AT_WWPA:
   \   00000000   F4B5               PUSH     {R2,R4-R7,LR}
   \   00000002   0E00               MOVS     R6,R1
   \   00000004   1C00               MOVS     R4,R3
    485                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000006   9121               MOVS     R1,#+145
   \   00000008   8900               LSLS     R1,R1,#+2        ;; #+580
   \   0000000A   ........           BL       __aeabi_memclr
    486                     Net->Status.CurrentOrder=WizFi_AT_WWPA;
   \   0000000E   0A20               MOVS     R0,#+10
   \   00000010   A070               STRB     R0,[R4, #+2]
    487                     char BTS=0;
   \   00000012   0025               MOVS     R5,#+0
   \   00000014   0020               MOVS     R0,#+0
    488                     for (char i=0; i<sizeof(AT_WWPA); i++)  {Buff_TX[i]=AT_WWPA[i];   BTS++;}
   \   00000016   3100               MOVS     R1,R6
   \   00000018   254A               LDR      R2,??WizFiCommand_AT_WWPA_0  ;; AT_WWPA
   \   0000001A   0323               MOVS     R3,#+3
   \                     ??WizFiCommand_AT_WWPA_1:
   \   0000001C   1778               LDRB     R7,[R2, #+0]
   \   0000001E   0F70               STRB     R7,[R1, #+0]
   \   00000020   5778               LDRB     R7,[R2, #+1]
   \   00000022   4F70               STRB     R7,[R1, #+1]
   \   00000024   9778               LDRB     R7,[R2, #+2]
   \   00000026   8F70               STRB     R7,[R1, #+2]
   \   00000028   C01C               ADDS     R0,R0,#+3
   \   0000002A   0006               LSLS     R0,R0,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   D21C               ADDS     R2,R2,#+3
   \   00000030   C91C               ADDS     R1,R1,#+3
   \   00000032   5B1E               SUBS     R3,R3,#+1
   \   00000034   F2D1               BNE      ??WizFiCommand_AT_WWPA_1
    489                     BTS--;
   \   00000036   401E               SUBS     R0,R0,#+1
   \   00000038   0006               LSLS     R0,R0,#+24
   \   0000003A   000E               LSRS     R0,R0,#+24
    490                     char PassN=0;
   \   0000003C   05E0               B        ??WizFiCommand_AT_WWPA_2
    491                     while ((Net->WiFi.Key[PassN]>0) && (PassN<=15)) {Buff_TX[BTS+PassN]=Net->WiFi.Key[PassN]; PassN++;}
   \                     ??WizFiCommand_AT_WWPA_3:
   \   0000003E   4219               ADDS     R2,R0,R5
   \   00000040   0978               LDRB     R1,[R1, #+0]
   \   00000042   B154               STRB     R1,[R6, R2]
   \   00000044   6D1C               ADDS     R5,R5,#+1
   \   00000046   2D06               LSLS     R5,R5,#+24
   \   00000048   2D0E               LSRS     R5,R5,#+24
   \                     ??WizFiCommand_AT_WWPA_2:
   \   0000004A   2100               MOVS     R1,R4
   \   0000004C   9F31               ADDS     R1,R1,#+159
   \   0000004E   4919               ADDS     R1,R1,R5
   \   00000050   0A78               LDRB     R2,[R1, #+0]
   \   00000052   002A               CMP      R2,#+0
   \   00000054   01D0               BEQ      ??WizFiCommand_AT_WWPA_4
   \   00000056   102D               CMP      R5,#+16
   \   00000058   F1D3               BCC      ??WizFiCommand_AT_WWPA_3
    492                     
    493                     if (PassN<8) return 0;
   \                     ??WizFiCommand_AT_WWPA_4:
   \   0000005A   2900               MOVS     R1,R5
   \   0000005C   0829               CMP      R1,#+8
   \   0000005E   01D2               BCS      ??WizFiCommand_AT_WWPA_5
   \   00000060   0020               MOVS     R0,#+0
   \   00000062   24E0               B        ??WizFiCommand_AT_WWPA_6
    494                     
    495                     Buff_TX[BTS+PassN++]=0x0d;
   \                     ??WizFiCommand_AT_WWPA_5:
   \   00000064   0700               MOVS     R7,R0
   \   00000066   7918               ADDS     R1,R7,R1
   \   00000068   0D22               MOVS     R2,#+13
   \   0000006A   7254               STRB     R2,[R6, R1]
   \   0000006C   6D1C               ADDS     R5,R5,#+1
   \   0000006E   2D06               LSLS     R5,R5,#+24
   \   00000070   2D0E               LSRS     R5,R5,#+24
    496                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS+PassN);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000072   1049               LDR      R1,??WizFiCommand_AT_WWPA_0+0x4  ;; WiFiDebug
   \   00000074   0978               LDRB     R1,[R1, #+0]
   \   00000076   0029               CMP      R1,#+0
   \   00000078   06D0               BEQ      ??WizFiCommand_AT_WWPA_7
   \   0000007A   2900               MOVS     R1,R5
   \   0000007C   4118               ADDS     R1,R0,R1
   \   0000007E   0904               LSLS     R1,R1,#+16
   \   00000080   090C               LSRS     R1,R1,#+16
   \   00000082   3000               MOVS     R0,R6
   \   00000084   ........           BL       SendViaUSB
    497                     AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN,0, 0);                        //Wysyla ramke 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_WWPA_7:
   \   00000088   82B0               SUB      SP,SP,#+8
   \   0000008A   0020               MOVS     R0,#+0
   \   0000008C   0090               STR      R0,[SP, #+0]
   \   0000008E   0023               MOVS     R3,#+0
   \   00000090   7A19               ADDS     R2,R7,R5
   \   00000092   3100               MOVS     R1,R6
   \   00000094   0298               LDR      R0,[SP, #+8]
   \   00000096   ........           BL       AT91F_US_SendFrame
   \   0000009A   02B0               ADD      SP,SP,#+8
    498                     Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   0000009C   3834               ADDS     R4,R4,#+56
   \   0000009E   0648               LDR      R0,??WizFiCommand_AT_WWPA_0+0x8  ;; g_counter
   \   000000A0   0CC8               LDM      R0!,{R2,R3}
   \   000000A2   0648               LDR      R0,??WizFiCommand_AT_WWPA_0+0xC  ;; 0x2710
   \   000000A4   0021               MOVS     R1,#+0
   \   000000A6   8018               ADDS     R0,R0,R2
   \   000000A8   5941               ADCS     R1,R1,R3
   \   000000AA   03C4               STM      R4!,{R0,R1}
    499                     return 1;
   \   000000AC   0120               MOVS     R0,#+1
   \                     ??WizFiCommand_AT_WWPA_6:
   \   000000AE   ....               B.N      ??Subroutine1_2
   \                     ??WizFiCommand_AT_WWPA_0:
   \   000000B0   ........           DC32     AT_WWPA
   \   000000B4   ........           DC32     WiFiDebug
   \   000000B8   ........           DC32     g_counter
   \   000000BC   10270000           DC32     0x2710
    500                     
    501          }
    502          

   \                                 In section Debug.txt, align 4, keep-with-next
    503          char WizFiResponseCommand_AT_WWPA(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    504          {
   \                     WizFiResponseCommand_AT_WWPA:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    505             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   0025               MOVS     R5,#+0
    506             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   0648               LDR      R0,??WizFiResponseCommand_AT_WWPA_0  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_AT_WWPA_1
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    507             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WWPA_1:
   \   00000022   ....               B.N      ??Subroutine1_0
   \                     ??WizFiResponseCommand_AT_WWPA_0:
   \   00000024   ........           DC32     WiFiDebug
    508                  {
    509                    odp=1;  //ok 
    510                    for (char i=0; i<50; i++) Buff_RX[i]=0;
    511                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    512                    Net->Status.Error=0;
    513                  }
    514             
    515             return odp;
    516          }
    517          
    518          
    519          
    520          
    521          
    522          
    523          
    524          
    525          //³¹czenie z accespointem ------------------------------------------------------
    526          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    527          void WizFiCommand_AT_WA(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    528          {
   \                     WizFiCommand_AT_WA:
   \   00000000   F4B5               PUSH     {R2,R4-R7,LR}
   \   00000002   0D00               MOVS     R5,R1
   \   00000004   1C00               MOVS     R4,R3
    529               if (Net->WiFi.SSID[0]!=0)
   \   00000006   AE21               MOVS     R1,#+174
   \   00000008   615C               LDRB     R1,[R4, R1]
   \   0000000A   0029               CMP      R1,#+0
   \   0000000C   4FD0               BEQ      ??WizFiCommand_AT_WA_0
    530               {
    531                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   0000000E   9121               MOVS     R1,#+145
   \   00000010   8900               LSLS     R1,R1,#+2        ;; #+580
   \   00000012   ........           BL       __aeabi_memclr
    532                     Net->Status.CurrentOrder=WizFi_AT_WA;
   \   00000016   0B20               MOVS     R0,#+11
   \   00000018   A070               STRB     R0,[R4, #+2]
    533          
    534                     char BTS=0;
    535                     for (char i=0; i<sizeof(AT_WA); i++)  {Buff_TX[i]=AT_WA[i];   BTS++;}
   \   0000001A   4120               MOVS     R0,#+65
   \   0000001C   2870               STRB     R0,[R5, #+0]
   \   0000001E   0120               MOVS     R0,#+1
   \   00000020   2900               MOVS     R1,R5
   \   00000022   491C               ADDS     R1,R1,#+1
   \   00000024   234A               LDR      R2,??WizFiCommand_AT_WA_1  ;; AT_WA + 1
   \   00000026   0323               MOVS     R3,#+3
   \                     ??WizFiCommand_AT_WA_2:
   \   00000028   1678               LDRB     R6,[R2, #+0]
   \   0000002A   0E70               STRB     R6,[R1, #+0]
   \   0000002C   5678               LDRB     R6,[R2, #+1]
   \   0000002E   4E70               STRB     R6,[R1, #+1]
   \   00000030   801C               ADDS     R0,R0,#+2
   \   00000032   0006               LSLS     R0,R0,#+24
   \   00000034   000E               LSRS     R0,R0,#+24
   \   00000036   921C               ADDS     R2,R2,#+2
   \   00000038   891C               ADDS     R1,R1,#+2
   \   0000003A   5B1E               SUBS     R3,R3,#+1
   \   0000003C   F4D1               BNE      ??WizFiCommand_AT_WA_2
    536                     BTS--;
   \   0000003E   401E               SUBS     R0,R0,#+1
   \   00000040   0006               LSLS     R0,R0,#+24
   \   00000042   000E               LSRS     R0,R0,#+24
    537                     char PassN=0;
   \   00000044   0027               MOVS     R7,#+0
   \   00000046   05E0               B        ??WizFiCommand_AT_WA_3
    538                     while ((Net->WiFi.SSID[PassN]>0) && (PassN<=15)) {Buff_TX[BTS+PassN]=Net->WiFi.SSID[PassN]; PassN++;}
   \                     ??WizFiCommand_AT_WA_4:
   \   00000048   C219               ADDS     R2,R0,R7
   \   0000004A   0978               LDRB     R1,[R1, #+0]
   \   0000004C   A954               STRB     R1,[R5, R2]
   \   0000004E   7F1C               ADDS     R7,R7,#+1
   \   00000050   3F06               LSLS     R7,R7,#+24
   \   00000052   3F0E               LSRS     R7,R7,#+24
   \                     ??WizFiCommand_AT_WA_3:
   \   00000054   2100               MOVS     R1,R4
   \   00000056   AE31               ADDS     R1,R1,#+174
   \   00000058   C919               ADDS     R1,R1,R7
   \   0000005A   0A78               LDRB     R2,[R1, #+0]
   \   0000005C   002A               CMP      R2,#+0
   \   0000005E   01D0               BEQ      ??WizFiCommand_AT_WA_5
   \   00000060   102F               CMP      R7,#+16
   \   00000062   F1D3               BCC      ??WizFiCommand_AT_WA_4
    539                     Buff_TX[BTS+PassN++]=0x0d;
   \                     ??WizFiCommand_AT_WA_5:
   \   00000064   0600               MOVS     R6,R0
   \   00000066   3900               MOVS     R1,R7
   \   00000068   7118               ADDS     R1,R6,R1
   \   0000006A   0D22               MOVS     R2,#+13
   \   0000006C   6A54               STRB     R2,[R5, R1]
   \   0000006E   7F1C               ADDS     R7,R7,#+1
   \   00000070   3F06               LSLS     R7,R7,#+24
   \   00000072   3F0E               LSRS     R7,R7,#+24
    540                     
    541                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS+PassN);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000074   1049               LDR      R1,??WizFiCommand_AT_WA_1+0x4  ;; WiFiDebug
   \   00000076   0978               LDRB     R1,[R1, #+0]
   \   00000078   0029               CMP      R1,#+0
   \   0000007A   06D0               BEQ      ??WizFiCommand_AT_WA_6
   \   0000007C   3900               MOVS     R1,R7
   \   0000007E   4118               ADDS     R1,R0,R1
   \   00000080   0904               LSLS     R1,R1,#+16
   \   00000082   090C               LSRS     R1,R1,#+16
   \   00000084   2800               MOVS     R0,R5
   \   00000086   ........           BL       SendViaUSB
    542                     AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN,0, 0);                        //Wysyla ramke 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_WA_6:
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0020               MOVS     R0,#+0
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   0023               MOVS     R3,#+0
   \   00000092   F219               ADDS     R2,R6,R7
   \   00000094   2900               MOVS     R1,R5
   \   00000096   0298               LDR      R0,[SP, #+8]
   \   00000098   ........           BL       AT91F_US_SendFrame
   \   0000009C   02B0               ADD      SP,SP,#+8
    543                     Net->Status.Timeout=g_counter + AP_CONNECT_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   0000009E   3834               ADDS     R4,R4,#+56
   \   000000A0   0648               LDR      R0,??WizFiCommand_AT_WA_1+0x8  ;; g_counter
   \   000000A2   0CC8               LDM      R0!,{R2,R3}
   \   000000A4   0648               LDR      R0,??WizFiCommand_AT_WA_1+0xC  ;; 0x4e20
   \   000000A6   0021               MOVS     R1,#+0
   \   000000A8   8018               ADDS     R0,R0,R2
   \   000000AA   5941               ADCS     R1,R1,R3
   \   000000AC   03C4               STM      R4!,{R0,R1}
    544                     
    545                     
    546               }
    547          
    548          
    549          }
   \                     ??WizFiCommand_AT_WA_0:
   \   000000AE   F8BC               POP      {R3-R7}
   \   000000B0   01BC               POP      {R0}
   \   000000B2   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_WA_1:
   \   000000B4   ........           DC32     AT_WA + 1
   \   000000B8   ........           DC32     WiFiDebug
   \   000000BC   ........           DC32     g_counter
   \   000000C0   204E0000           DC32     0x4e20
    550          

   \                                 In section Debug.txt, align 4, keep-with-next
    551          char WizFiResponseCommand_AT_WA(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    552          {
   \                     WizFiResponseCommand_AT_WA:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   1C00               MOVS     R4,R3
    553             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   0025               MOVS     R5,#+0
    554             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000000A   1348               LDR      R0,??WizFiResponseCommand_AT_WA_0  ;; WiFiDebug
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   07D0               BEQ      ??WizFiResponseCommand_AT_WA_1
   \   00000012   3800               MOVS     R0,R7
   \   00000014   ........           BL       strlen
   \   00000018   0104               LSLS     R1,R0,#+16
   \   0000001A   090C               LSRS     R1,R1,#+16
   \   0000001C   3800               MOVS     R0,R7
   \   0000001E   ........           BL       SendViaUSB
    555             if(strstr(Buff_RX, "OK")!=NULL)
   \                     ??WizFiResponseCommand_AT_WA_1:
   \   00000022   0EA1               ADR      R1,??WizFiResponseCommand_AT_WA_0+0x4  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000024   3800               MOVS     R0,R7
   \   00000026   ........           BL       __iar_Strstr
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   12D0               BEQ      ??WizFiResponseCommand_AT_WA_2
    556                  {
    557                    odp=1;  //ok 
   \   0000002E   0125               MOVS     R5,#+1
    558                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000030   3221               MOVS     R1,#+50
   \   00000032   3800               MOVS     R0,R7
   \   00000034   ........           BL       __aeabi_memclr
    559                    
    560                    //Tu mo¿e byæ pobranie otrzymanego IP, Bramy, 
    561          
    562                    //---------------
    563                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000038   2700               MOVS     R7,R4
   \   0000003A   3837               ADDS     R7,R7,#+56
   \   0000003C   0848               LDR      R0,??WizFiResponseCommand_AT_WA_0+0x8  ;; g_counter
   \   0000003E   03C8               LDM      R0!,{R0,R1}
   \   00000040   0200               MOVS     R2,R0
   \   00000042   0B00               MOVS     R3,R1
   \   00000044   0748               LDR      R0,??WizFiResponseCommand_AT_WA_0+0xC  ;; 0x2710
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   8018               ADDS     R0,R0,R2
   \   0000004A   5941               ADCS     R1,R1,R3
   \   0000004C   03C7               STM      R7!,{R0,R1}
    564                    Net->Status.Error=0;
   \   0000004E   6675               STRB     R6,[R4, #+21]
    565                    
    566                    Net->Status.AccesPointAssociateTest=0xFF;           //dla testów ekranowych
   \   00000050   FF20               MOVS     R0,#+255
   \   00000052   2071               STRB     R0,[R4, #+4]
    567                  }
    568               
    569             
    570             return odp;
   \                     ??WizFiResponseCommand_AT_WA_2:
   \   00000054   ....               B.N      ??Subroutine1_1
   \   00000056   C046               Nop      
   \                     ??WizFiResponseCommand_AT_WA_0:
   \   00000058   ........           DC32     WiFiDebug
   \   0000005C   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000060   ........           DC32     g_counter
   \   00000064   10270000           DC32     0x2710
    571          }
    572          
    573          
    574          
    575          
    576          
    577          
    578          //Sprawdzenie czy w WiFi.Domena jest wpisana domena czy IP serwera domeny ------
    579          // odp: 0- domena
    580          // odp: 1 - IP
    581          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    582          char CheckExistDomenaIP(_Net *Net)
    583          {
   \                     CheckExistDomenaIP:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0500               MOVS     R5,R0
    584            char ExistIP=1;
   \   00000004   0124               MOVS     R4,#+1
   \   00000006   0126               MOVS     R6,#+1
    585          
    586            if ((Net->WiFi.Domena[0]<'0') && ((Net->WiFi.Domena[0]>'9'))) ExistIP=0;
   \   00000008   BD30               ADDS     R0,R0,#+189
   \   0000000A   0178               LDRB     R1,[R0, #+0]
   \   0000000C   3029               CMP      R1,#+48
   \   0000000E   02D2               BCS      ??CheckExistDomenaIP_0
   \   00000010   3A29               CMP      R1,#+58
   \   00000012   00D3               BCC      ??CheckExistDomenaIP_0
   \   00000014   0026               MOVS     R6,#+0
    587            
    588            char Size= sizeof(Net->WiFi.Domena);
    589            char Znak=1;
   \                     ??CheckExistDomenaIP_0:
   \   00000016   2800               MOVS     R0,R5
   \   00000018   BD30               ADDS     R0,R0,#+189
   \                     ??CheckExistDomenaIP_1:
   \   0000001A   012E               CMP      R6,#+1
   \   0000001C   0FD1               BNE      ??CheckExistDomenaIP_2
   \   0000001E   0219               ADDS     R2,R0,R4
   \   00000020   1378               LDRB     R3,[R2, #+0]
   \   00000022   002B               CMP      R3,#+0
   \   00000024   0BD0               BEQ      ??CheckExistDomenaIP_2
    590            while ((Znak<Size) && (ExistIP==1)  && (Net->WiFi.Domena[Znak]>0) )  
    591            {
    592               if (((Net->WiFi.Domena[Znak]<'0') || (Net->WiFi.Domena[Znak]>'9')) && (Net->WiFi.Domena[Znak]!='.'))  ExistIP=0;
   \   00000026   302B               CMP      R3,#+48
   \   00000028   01D3               BCC      ??CheckExistDomenaIP_3
   \   0000002A   3A2B               CMP      R3,#+58
   \   0000002C   02D3               BCC      ??CheckExistDomenaIP_4
   \                     ??CheckExistDomenaIP_3:
   \   0000002E   2E2B               CMP      R3,#+46
   \   00000030   00D0               BEQ      ??CheckExistDomenaIP_4
   \   00000032   0026               MOVS     R6,#+0
    593            
    594               Znak++; 
   \                     ??CheckExistDomenaIP_4:
   \   00000034   641C               ADDS     R4,R4,#+1
    595            }
   \   00000036   2206               LSLS     R2,R4,#+24
   \   00000038   120E               LSRS     R2,R2,#+24
   \   0000003A   0F2A               CMP      R2,#+15
   \   0000003C   EDD3               BCC      ??CheckExistDomenaIP_1
    596            
    597            //je¿eli w Net->WiFi.Domena wpisany jest IP tp przepisz do  Net->Status.DomenaIP
    598            if (ExistIP==1)
   \                     ??CheckExistDomenaIP_2:
   \   0000003E   012E               CMP      R6,#+1
   \   00000040   13D1               BNE      ??CheckExistDomenaIP_5
    599            {
    600              Znak=0;
   \   00000042   0024               MOVS     R4,#+0
    601              for (char i=0; i<Size; i++) Net->Status.DomenaIP[i]=0;
   \   00000044   0F21               MOVS     R1,#+15
   \   00000046   2800               MOVS     R0,R5
   \   00000048   801D               ADDS     R0,R0,#+6
   \   0000004A   ........           BL       __aeabi_memclr
   \   0000004E   2800               MOVS     R0,R5
   \   00000050   BD30               ADDS     R0,R0,#+189
   \                     ??CheckExistDomenaIP_6:
   \   00000052   2100               MOVS     R1,R4
   \   00000054   4218               ADDS     R2,R0,R1
   \   00000056   1378               LDRB     R3,[R2, #+0]
   \   00000058   002B               CMP      R3,#+0
   \   0000005A   06D0               BEQ      ??CheckExistDomenaIP_5
    602              while ((Znak<Size) && (ExistIP)  && (Net->WiFi.Domena[Znak]>0))
    603              {
    604                Net->Status.DomenaIP[Znak]=Net->WiFi.Domena[Znak];
   \   0000005C   6918               ADDS     R1,R5,R1
   \   0000005E   8B71               STRB     R3,[R1, #+6]
    605                Znak++;
   \   00000060   641C               ADDS     R4,R4,#+1
   \   00000062   2406               LSLS     R4,R4,#+24
   \   00000064   240E               LSRS     R4,R4,#+24
    606              }
   \   00000066   0F2C               CMP      R4,#+15
   \   00000068   F3D3               BCC      ??CheckExistDomenaIP_6
    607            }
    608            
    609            return ExistIP;
   \                     ??CheckExistDomenaIP_5:
   \   0000006A   3000               MOVS     R0,R6
   \   0000006C   70BC               POP      {R4-R6}
   \   0000006E   02BC               POP      {R1}
   \   00000070   0847               BX       R1               ;; return
    610            
    611          }
    612          
    613          
    614          
    615          
    616          
    617          
    618          //Pobranie adresu domeny ------------------------------------------------------
    619          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    620          void WizFiCommand_AT_DNSLOOKUP(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    621          {
   \                     WizFiCommand_AT_DNSLOOKUP:
   \   00000000   F5B5               PUSH     {R0,R2,R4-R7,LR}
   \   00000002   81B0               SUB      SP,SP,#+4
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   1C00               MOVS     R4,R3
    622                if (Net->WiFi.Domena[0]!=0)
   \   00000008   BD20               MOVS     R0,#+189
   \   0000000A   205C               LDRB     R0,[R4, R0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   62D0               BEQ      ??WizFiCommand_AT_DNSLOOKUP_0
    623                {
    624                    for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000010   9121               MOVS     R1,#+145
   \   00000012   8900               LSLS     R1,R1,#+2        ;; #+580
   \   00000014   0198               LDR      R0,[SP, #+4]
   \   00000016   ........           BL       __aeabi_memclr
    625                    if (CheckExistDomenaIP(Net)==0)                                                  //sprawdzenie czy w WiFi.Domena jest wpisana domena czy IP serwera domeny
   \   0000001A   2000               MOVS     R0,R4
   \   0000001C   ........           BL       CheckExistDomenaIP
   \   00000020   0028               CMP      R0,#+0
   \   00000022   4CD1               BNE      ??WizFiCommand_AT_DNSLOOKUP_1
    626                    {                                                                     //w WiFi.Domena jest wpisana domena
    627                       Net->Status.CurrentOrder=WizFi_AT_DNSLOOKUP;
   \   00000024   0C20               MOVS     R0,#+12
   \   00000026   A070               STRB     R0,[R4, #+2]
    628            
    629                       char BTS=0;
   \   00000028   0027               MOVS     R7,#+0
   \   0000002A   0020               MOVS     R0,#+0
    630                       for (char i=0; i<sizeof(AT_DNSLOOKUP); i++)  {Buff_TX[i]=AT_DNSLOOKUP[i];   BTS++;}
   \   0000002C   2900               MOVS     R1,R5
   \   0000002E   2B4A               LDR      R2,??WizFiCommand_AT_DNSLOOKUP_2  ;; AT_DNSLOOKUP
   \   00000030   0723               MOVS     R3,#+7
   \                     ??WizFiCommand_AT_DNSLOOKUP_3:
   \   00000032   1678               LDRB     R6,[R2, #+0]
   \   00000034   0E70               STRB     R6,[R1, #+0]
   \   00000036   5678               LDRB     R6,[R2, #+1]
   \   00000038   4E70               STRB     R6,[R1, #+1]
   \   0000003A   801C               ADDS     R0,R0,#+2
   \   0000003C   0006               LSLS     R0,R0,#+24
   \   0000003E   000E               LSRS     R0,R0,#+24
   \   00000040   921C               ADDS     R2,R2,#+2
   \   00000042   891C               ADDS     R1,R1,#+2
   \   00000044   5B1E               SUBS     R3,R3,#+1
   \   00000046   F4D1               BNE      ??WizFiCommand_AT_DNSLOOKUP_3
    631                       BTS--;
   \   00000048   401E               SUBS     R0,R0,#+1
   \   0000004A   0006               LSLS     R0,R0,#+24
   \   0000004C   000E               LSRS     R0,R0,#+24
    632                       char PassN=0;
   \   0000004E   05E0               B        ??WizFiCommand_AT_DNSLOOKUP_4
    633                       while ((Net->WiFi.Domena[PassN]>0) && (PassN<=15)) {Buff_TX[BTS+PassN]=Net->WiFi.Domena[PassN]; PassN++;}
   \                     ??WizFiCommand_AT_DNSLOOKUP_5:
   \   00000050   C219               ADDS     R2,R0,R7
   \   00000052   0978               LDRB     R1,[R1, #+0]
   \   00000054   A954               STRB     R1,[R5, R2]
   \   00000056   7F1C               ADDS     R7,R7,#+1
   \   00000058   3F06               LSLS     R7,R7,#+24
   \   0000005A   3F0E               LSRS     R7,R7,#+24
   \                     ??WizFiCommand_AT_DNSLOOKUP_4:
   \   0000005C   2100               MOVS     R1,R4
   \   0000005E   BD31               ADDS     R1,R1,#+189
   \   00000060   C919               ADDS     R1,R1,R7
   \   00000062   0A78               LDRB     R2,[R1, #+0]
   \   00000064   002A               CMP      R2,#+0
   \   00000066   01D0               BEQ      ??WizFiCommand_AT_DNSLOOKUP_6
   \   00000068   102F               CMP      R7,#+16
   \   0000006A   F1D3               BCC      ??WizFiCommand_AT_DNSLOOKUP_5
    634                       Buff_TX[BTS+PassN++]=0x0d;
   \                     ??WizFiCommand_AT_DNSLOOKUP_6:
   \   0000006C   0600               MOVS     R6,R0
   \   0000006E   3900               MOVS     R1,R7
   \   00000070   7118               ADDS     R1,R6,R1
   \   00000072   0D22               MOVS     R2,#+13
   \   00000074   6A54               STRB     R2,[R5, R1]
   \   00000076   7F1C               ADDS     R7,R7,#+1
   \   00000078   3F06               LSLS     R7,R7,#+24
   \   0000007A   3F0E               LSRS     R7,R7,#+24
    635                   
    636                       if (WiFiDebug) SendViaUSB(Buff_RX, BTS+PassN); 
                                                        ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000007C   1849               LDR      R1,??WizFiCommand_AT_DNSLOOKUP_2+0x4  ;; WiFiDebug
   \   0000007E   0978               LDRB     R1,[R1, #+0]
   \   00000080   0029               CMP      R1,#+0
   \   00000082   06D0               BEQ      ??WizFiCommand_AT_DNSLOOKUP_7
   \   00000084   3900               MOVS     R1,R7
   \   00000086   4118               ADDS     R1,R0,R1
   \   00000088   0904               LSLS     R1,R1,#+16
   \   0000008A   090C               LSRS     R1,R1,#+16
   \   0000008C   0198               LDR      R0,[SP, #+4]
   \   0000008E   ........           BL       SendViaUSB
    637                       AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN,0, 0);                        //Wysyla ramke 
                                                       ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_DNSLOOKUP_7:
   \   00000092   82B0               SUB      SP,SP,#+8
   \   00000094   0020               MOVS     R0,#+0
   \   00000096   0090               STR      R0,[SP, #+0]
   \   00000098   0023               MOVS     R3,#+0
   \   0000009A   F219               ADDS     R2,R6,R7
   \   0000009C   2900               MOVS     R1,R5
   \   0000009E   0498               LDR      R0,[SP, #+16]
   \   000000A0   ........           BL       AT91F_US_SendFrame
   \   000000A4   02B0               ADD      SP,SP,#+8
    638                       Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000000A6   2500               MOVS     R5,R4
   \   000000A8   3835               ADDS     R5,R5,#+56
   \   000000AA   0E48               LDR      R0,??WizFiCommand_AT_DNSLOOKUP_2+0x8  ;; g_counter
   \   000000AC   0CC8               LDM      R0!,{R2,R3}
   \   000000AE   0E48               LDR      R0,??WizFiCommand_AT_DNSLOOKUP_2+0xC  ;; 0x2710
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   8018               ADDS     R0,R0,R2
   \   000000B4   5941               ADCS     R1,R1,R3
   \   000000B6   03C5               STM      R5!,{R0,R1}
    639                       Net->Status.NextHttpOrder=HTTP_GET_Config;
   \   000000B8   1420               MOVS     R0,#+20
   \   000000BA   E070               STRB     R0,[R4, #+3]
   \   000000BC   0BE0               B        ??WizFiCommand_AT_DNSLOOKUP_0
    640                       
    641                       
    642                    }
    643                    else                                                                  //je¿eli w WiFi.Domena jest wpisany IP serwera domeny
    644                    {
    645                       Net->Status.AccesPointAssociate=CONNECTED;    
   \                     ??WizFiCommand_AT_DNSLOOKUP_1:
   \   000000BE   0320               MOVS     R0,#+3
   \   000000C0   2070               STRB     R0,[R4, #+0]
    646                       Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   000000C2   0020               MOVS     R0,#+0
   \   000000C4   A070               STRB     R0,[R4, #+2]
    647                       Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000000C6   3834               ADDS     R4,R4,#+56
   \   000000C8   0648               LDR      R0,??WizFiCommand_AT_DNSLOOKUP_2+0x8  ;; g_counter
   \   000000CA   0CC8               LDM      R0!,{R2,R3}
   \   000000CC   0648               LDR      R0,??WizFiCommand_AT_DNSLOOKUP_2+0xC  ;; 0x2710
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   8018               ADDS     R0,R0,R2
   \   000000D2   5941               ADCS     R1,R1,R3
   \   000000D4   03C4               STM      R4!,{R0,R1}
    648                    }
    649                    
    650                }
    651          }
   \                     ??WizFiCommand_AT_DNSLOOKUP_0:
   \   000000D6   FEBC               POP      {R1-R7}
   \   000000D8   01BC               POP      {R0}
   \   000000DA   0047               BX       R0               ;; return
   \                     ??WizFiCommand_AT_DNSLOOKUP_2:
   \   000000DC   ........           DC32     AT_DNSLOOKUP
   \   000000E0   ........           DC32     WiFiDebug
   \   000000E4   ........           DC32     g_counter
   \   000000E8   10270000           DC32     0x2710
    652          
    653          
    654          
    655          /*
    656          //Pobranie adresu domeny ------------------------------------------------------
    657          //------------------------------------------------------------------------------
    658          void WizFiCommand_AT_DNSLOOKUP(char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    659          {
    660                       Net->Status.CurrentOrder=WizFi_AT_DNSLOOKUP;
    661            
    662                       char BTS=0;
    663                       for (char i=0; i<sizeof(AT_DNSLOOKUP); i++)  {Buff_TX[i]=AT_DNSLOOKUP[i];   BTS++;}
    664                       BTS--;
    665                       char PassN=0;
    666                       while ((Net->WiFi.Domena[PassN]>0) && (PassN<=25)) {Buff_TX[BTS+PassN]=Net->WiFi.Domena[PassN]; PassN++;}
    667                       Buff_TX[BTS+PassN++]=0x0d;
    668                   
    669                       AT91F_US_SendFrame(USART,Buff_TX,BTS+PassN,0, 0);                        //Wysyla ramke 
    670                       Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    671                       Net->Status.NextHttpOrder=HTTP_GET_Config;
    672          }
    673          */
    674          
    675          

   \                                 In section Debug.txt, align 4, keep-with-next
    676          char WizFiResponseCommand_AT_DNSLOOKUP(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    677          {
   \                     WizFiResponseCommand_AT_DNSLOOKUP:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   1D00               MOVS     R5,R3
    678             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0670               STRB     R6,[R0, #+0]
    679             char *pTxt;
    680             
    681             pTxt=strstr(Buff_RX, "IP:");
   \   0000000C   20A1               ADR      R1,??WizFiResponseCommand_AT_DNSLOOKUP_0  ;; "IP:"
   \   0000000E   2000               MOVS     R0,R4
   \   00000010   ........           BL       __iar_Strstr
   \   00000014   0700               MOVS     R7,R0
    682             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000016   1F48               LDR      R0,??WizFiResponseCommand_AT_DNSLOOKUP_0+0x4  ;; WiFiDebug
   \   00000018   0078               LDRB     R0,[R0, #+0]
   \   0000001A   0028               CMP      R0,#+0
   \   0000001C   07D0               BEQ      ??WizFiResponseCommand_AT_DNSLOOKUP_1
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       strlen
   \   00000024   0104               LSLS     R1,R0,#+16
   \   00000026   090C               LSRS     R1,R1,#+16
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   ........           BL       SendViaUSB
    683             if((strstr(Buff_RX, "OK")!=NULL) && (pTxt!=NULL))
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_1:
   \   0000002E   1AA1               ADR      R1,??WizFiResponseCommand_AT_DNSLOOKUP_0+0x8  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000030   2000               MOVS     R0,R4
   \   00000032   ........           BL       __iar_Strstr
   \   00000036   0028               CMP      R0,#+0
   \   00000038   25D0               BEQ      ??WizFiResponseCommand_AT_DNSLOOKUP_2
   \   0000003A   002F               CMP      R7,#+0
   \   0000003C   23D0               BEQ      ??WizFiResponseCommand_AT_DNSLOOKUP_2
    684                  {
    685                    odp=1;  //ok 
   \   0000003E   6846               MOV      R0,SP
   \   00000040   0121               MOVS     R1,#+1
   \   00000042   0170               STRB     R1,[R0, #+0]
    686                    
    687                    Net->Status.AccesPointAssociate=CONNECTED;    
   \   00000044   0320               MOVS     R0,#+3
   \   00000046   2870               STRB     R0,[R5, #+0]
    688                    Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   A870               STRB     R0,[R5, #+2]
    689                      
    690                    pTxt+=3;
   \   0000004C   FF1C               ADDS     R7,R7,#+3
    691                    char p=0;
   \   0000004E   05E0               B        ??WizFiResponseCommand_AT_DNSLOOKUP_3
    692                    while ((*pTxt!=0x0d) && (p<=15))  {Net->Status.DomenaIP[p++]=*pTxt; pTxt++;}
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_4:
   \   00000050   2A18               ADDS     R2,R5,R0
   \   00000052   9171               STRB     R1,[R2, #+6]
   \   00000054   401C               ADDS     R0,R0,#+1
   \   00000056   0006               LSLS     R0,R0,#+24
   \   00000058   000E               LSRS     R0,R0,#+24
   \   0000005A   7F1C               ADDS     R7,R7,#+1
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_3:
   \   0000005C   3978               LDRB     R1,[R7, #+0]
   \   0000005E   0D29               CMP      R1,#+13
   \   00000060   01D0               BEQ      ??WizFiResponseCommand_AT_DNSLOOKUP_5
   \   00000062   1028               CMP      R0,#+16
   \   00000064   F4D3               BCC      ??WizFiResponseCommand_AT_DNSLOOKUP_4
    693                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_5:
   \   00000066   2F00               MOVS     R7,R5
   \   00000068   3837               ADDS     R7,R7,#+56
   \   0000006A   0C48               LDR      R0,??WizFiResponseCommand_AT_DNSLOOKUP_0+0xC  ;; g_counter
   \   0000006C   03C8               LDM      R0!,{R0,R1}
   \   0000006E   0200               MOVS     R2,R0
   \   00000070   0B00               MOVS     R3,R1
   \   00000072   0B48               LDR      R0,??WizFiResponseCommand_AT_DNSLOOKUP_0+0x10  ;; 0x2710
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   8018               ADDS     R0,R0,R2
   \   00000078   5941               ADCS     R1,R1,R3
   \   0000007A   03C7               STM      R7!,{R0,R1}
    694                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   0000007C   3221               MOVS     R1,#+50
   \   0000007E   2000               MOVS     R0,R4
   \   00000080   ........           BL       __aeabi_memclr
    695                    Net->Status.Error=0;
   \   00000084   6E75               STRB     R6,[R5, #+21]
    696                  }
    697               
    698             return odp;
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_2:
   \   00000086   6846               MOV      R0,SP
   \   00000088   0078               LDRB     R0,[R0, #+0]
   \   0000008A   ........           BL       ??Subroutine1_2
   \   0000008E   C046               Nop      
   \                     ??WizFiResponseCommand_AT_DNSLOOKUP_0:
   \   00000090   49503A00           DC8      "IP:"
   \   00000094   ........           DC32     WiFiDebug
   \   00000098   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   0000009C   ........           DC32     g_counter
   \   000000A0   10270000           DC32     0x2710
    699          }
    700          
    701          
    702          
    703                         
    704          
    705          
    706          
    707          
    708          
    709          //Rozkaz po³¹czenia z hostem----------------------------------------------------
    710          //------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    711          void WizFiCommand_AT_NCTCP(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    712          {
   \                     WizFiCommand_AT_NCTCP:
   \   00000000   F5B5               PUSH     {R0,R2,R4-R7,LR}
   \   00000002   81B0               SUB      SP,SP,#+4
   \   00000004   0C00               MOVS     R4,R1
   \   00000006   1D00               MOVS     R5,R3
   \   00000008   BD20               MOVS     R0,#+189
   \   0000000A   285C               LDRB     R0,[R5, R0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   00D1               BNE      .+4
   \   00000010   94E0               B        ??WizFiCommand_AT_NCTCP_0
    713               if (Net->WiFi.Domena[0]!=0)
    714               {
    715                     for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   00000012   9121               MOVS     R1,#+145
   \   00000014   8900               LSLS     R1,R1,#+2        ;; #+580
   \   00000016   0198               LDR      R0,[SP, #+4]
   \   00000018   ........           BL       __aeabi_memclr
   \   0000001C   494F               LDR      R7,??WizFiCommand_AT_NCTCP_1  ;; g_counter
   \   0000001E   2A00               MOVS     R2,R5
   \   00000020   2032               ADDS     R2,R2,#+32
   \   00000022   03CF               LDM      R7!,{R0,R1}
   \   00000024   083F               SUBS     R7,R7,#+8
   \   00000026   03C2               STM      R2!,{R0,R1}
    716                     Net->Status.SendPacketTime=g_counter;
    717                     Net->Status.HostLink=CONNECTING;
   \   00000028   2E00               MOVS     R6,R5
   \   0000002A   761C               ADDS     R6,R6,#+1
   \   0000002C   0220               MOVS     R0,#+2
   \   0000002E   3070               STRB     R0,[R6, #+0]
    718                     Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000030   2A00               MOVS     R2,R5
   \   00000032   2032               ADDS     R2,R2,#+32
   \   00000034   1832               ADDS     R2,R2,#+24
   \   00000036   9446               MOV      R12,R2
   \   00000038   03CF               LDM      R7!,{R0,R1}
   \   0000003A   083F               SUBS     R7,R7,#+8
   \   0000003C   0200               MOVS     R2,R0
   \   0000003E   0B00               MOVS     R3,R1
   \   00000040   4148               LDR      R0,??WizFiCommand_AT_NCTCP_1+0x4  ;; 0x2710
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   8018               ADDS     R0,R0,R2
   \   00000046   5941               ADCS     R1,R1,R3
   \   00000048   6246               MOV      R2,R12
   \   0000004A   03C2               STM      R2!,{R0,R1}
    719                     //Net->Status.HttpNextQueryTime=g_counter+100;   //rezerwa czasu pomiêdzy odpytaniami HTTP.
    720                     Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   0000004C   2A00               MOVS     R2,R5
   \   0000004E   2032               ADDS     R2,R2,#+32
   \   00000050   2032               ADDS     R2,R2,#+32
   \   00000052   03CF               LDM      R7!,{R0,R1}
   \   00000054   0023               MOVS     R3,#+0
   \   00000056   3230               ADDS     R0,R0,#+50
   \   00000058   5941               ADCS     R1,R1,R3
   \   0000005A   03C2               STM      R2!,{R0,R1}
    721                     
    722                     Net->Status.CurrentOrder=WizFi_AT_DNSLOOKUP;
   \   0000005C   0C20               MOVS     R0,#+12
   \   0000005E   7070               STRB     R0,[R6, #+1]
    723                     
    724                     char BTS=0;
   \   00000060   0020               MOVS     R0,#+0
   \   00000062   0100               MOVS     R1,R0
    725                     for (char i=0; i<sizeof(AT_NCTCP); i++)  {Buff_TX[i]=AT_NCTCP[i];   BTS++;}
   \   00000064   2200               MOVS     R2,R4
   \   00000066   394B               LDR      R3,??WizFiCommand_AT_NCTCP_1+0x8  ;; AT_NCTCP
   \   00000068   0526               MOVS     R6,#+5
   \                     ??WizFiCommand_AT_NCTCP_2:
   \   0000006A   1F78               LDRB     R7,[R3, #+0]
   \   0000006C   1770               STRB     R7,[R2, #+0]
   \   0000006E   5F78               LDRB     R7,[R3, #+1]
   \   00000070   5770               STRB     R7,[R2, #+1]
   \   00000072   891C               ADDS     R1,R1,#+2
   \   00000074   0906               LSLS     R1,R1,#+24
   \   00000076   090E               LSRS     R1,R1,#+24
   \   00000078   9B1C               ADDS     R3,R3,#+2
   \   0000007A   921C               ADDS     R2,R2,#+2
   \   0000007C   761E               SUBS     R6,R6,#+1
   \   0000007E   F4D1               BNE      ??WizFiCommand_AT_NCTCP_2
    726                     BTS--;
   \   00000080   491E               SUBS     R1,R1,#+1
   \   00000082   0906               LSLS     R1,R1,#+24
   \   00000084   090E               LSRS     R1,R1,#+24
    727                     char PN=0;
   \   00000086   0022               MOVS     R2,#+0
    728                     if ((Net->WiFi.Subdomena[0]>47)&&(Net->WiFi.Subdomena[0]<123)) 
   \   00000088   2B00               MOVS     R3,R5
   \   0000008A   BD33               ADDS     R3,R3,#+189
   \   0000008C   DB7B               LDRB     R3,[R3, #+15]
   \   0000008E   302B               CMP      R3,#+48
   \   00000090   1DD3               BCC      ??WizFiCommand_AT_NCTCP_3
   \   00000092   2B00               MOVS     R3,R5
   \   00000094   BD33               ADDS     R3,R3,#+189
   \   00000096   DB7B               LDRB     R3,[R3, #+15]
   \   00000098   7B2B               CMP      R3,#+123
   \   0000009A   18D2               BCS      ??WizFiCommand_AT_NCTCP_3
   \   0000009C   04E0               B        ??WizFiCommand_AT_NCTCP_4
    729                     {
    730                       while ((Net->WiFi.Subdomena[PN]>0) && (PN<=15)) {Buff_TX[BTS+PN]=Net->WiFi.Subdomena[PN]; PN++;}
   \                     ??WizFiCommand_AT_NCTCP_5:
   \   0000009E   8E19               ADDS     R6,R1,R6
   \   000000A0   A755               STRB     R7,[R4, R6]
   \   000000A2   521C               ADDS     R2,R2,#+1
   \   000000A4   1206               LSLS     R2,R2,#+24
   \   000000A6   120E               LSRS     R2,R2,#+24
   \                     ??WizFiCommand_AT_NCTCP_4:
   \   000000A8   1600               MOVS     R6,R2
   \   000000AA   AB19               ADDS     R3,R5,R6
   \   000000AC   CC33               ADDS     R3,R3,#+204
   \   000000AE   1F78               LDRB     R7,[R3, #+0]
   \   000000B0   002F               CMP      R7,#+0
   \   000000B2   01D0               BEQ      ??WizFiCommand_AT_NCTCP_6
   \   000000B4   102A               CMP      R2,#+16
   \   000000B6   F2D3               BCC      ??WizFiCommand_AT_NCTCP_5
    731                       Buff_TX[BTS+PN]='.';
   \                     ??WizFiCommand_AT_NCTCP_6:
   \   000000B8   0A00               MOVS     R2,R1
   \   000000BA   9219               ADDS     R2,R2,R6
   \   000000BC   2E23               MOVS     R3,#+46
   \   000000BE   A354               STRB     R3,[R4, R2]
    732                     }
    733                     PN=0;
   \   000000C0   05E0               B        ??WizFiCommand_AT_NCTCP_3
    734                     while ((Net->Status.DomenaIP[PN]>0) && (PN<=15)) {Buff_TX[BTS+PN]=Net->Status.DomenaIP[PN]; PN++;}
   \                     ??WizFiCommand_AT_NCTCP_7:
   \   000000C2   0B18               ADDS     R3,R1,R0
   \   000000C4   9279               LDRB     R2,[R2, #+6]
   \   000000C6   E254               STRB     R2,[R4, R3]
   \   000000C8   401C               ADDS     R0,R0,#+1
   \   000000CA   0006               LSLS     R0,R0,#+24
   \   000000CC   000E               LSRS     R0,R0,#+24
   \                     ??WizFiCommand_AT_NCTCP_3:
   \   000000CE   2A18               ADDS     R2,R5,R0
   \   000000D0   9379               LDRB     R3,[R2, #+6]
   \   000000D2   002B               CMP      R3,#+0
   \   000000D4   01D0               BEQ      ??WizFiCommand_AT_NCTCP_8
   \   000000D6   1028               CMP      R0,#+16
   \   000000D8   F3D3               BCC      ??WizFiCommand_AT_NCTCP_7
    735                     Buff_TX[BTS+PN++]=',';
   \                     ??WizFiCommand_AT_NCTCP_8:
   \   000000DA   0E00               MOVS     R6,R1
   \   000000DC   0200               MOVS     R2,R0
   \   000000DE   B218               ADDS     R2,R6,R2
   \   000000E0   2C23               MOVS     R3,#+44
   \   000000E2   A354               STRB     R3,[R4, R2]
   \   000000E4   401C               ADDS     R0,R0,#+1
   \   000000E6   0006               LSLS     R0,R0,#+24
   \   000000E8   000E               LSRS     R0,R0,#+24
    736                     Buff_TX[BTS+PN++]='8';
   \   000000EA   0200               MOVS     R2,R0
   \   000000EC   B218               ADDS     R2,R6,R2
   \   000000EE   3823               MOVS     R3,#+56
   \   000000F0   A354               STRB     R3,[R4, R2]
   \   000000F2   401C               ADDS     R0,R0,#+1
   \   000000F4   0006               LSLS     R0,R0,#+24
   \   000000F6   000E               LSRS     R0,R0,#+24
    737                     Buff_TX[BTS+PN++]='0';
   \   000000F8   0200               MOVS     R2,R0
   \   000000FA   B218               ADDS     R2,R6,R2
   \   000000FC   3023               MOVS     R3,#+48
   \   000000FE   A354               STRB     R3,[R4, R2]
   \   00000100   401C               ADDS     R0,R0,#+1
   \   00000102   0006               LSLS     R0,R0,#+24
   \   00000104   000E               LSRS     R0,R0,#+24
    738                     Buff_TX[BTS+PN++]=0x0d;
   \   00000106   0200               MOVS     R2,R0
   \   00000108   B218               ADDS     R2,R6,R2
   \   0000010A   0D23               MOVS     R3,#+13
   \   0000010C   A354               STRB     R3,[R4, R2]
   \   0000010E   401C               ADDS     R0,R0,#+1
   \   00000110   0506               LSLS     R5,R0,#+24
   \   00000112   2D0E               LSRS     R5,R5,#+24
    739                    
    740                     
    741          
    742                      
    743                      if (WiFiDebug) SendViaUSB(Buff_RX, BTS+PN);  
                                                       ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000114   0E48               LDR      R0,??WizFiCommand_AT_NCTCP_1+0xC  ;; WiFiDebug
   \   00000116   0078               LDRB     R0,[R0, #+0]
   \   00000118   0028               CMP      R0,#+0
   \   0000011A   05D0               BEQ      ??WizFiCommand_AT_NCTCP_9
   \   0000011C   4919               ADDS     R1,R1,R5
   \   0000011E   0904               LSLS     R1,R1,#+16
   \   00000120   090C               LSRS     R1,R1,#+16
   \   00000122   0198               LDR      R0,[SP, #+4]
   \   00000124   ........           BL       SendViaUSB
    744                     AT91F_US_SendFrame(USART,Buff_TX,BTS+PN,0, 0);                        //Wysyla ramke  otwieraj¹c¹ po³¹czenie 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiCommand_AT_NCTCP_9:
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   0020               MOVS     R0,#+0
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   0023               MOVS     R3,#+0
   \   00000130   7219               ADDS     R2,R6,R5
   \   00000132   2100               MOVS     R1,R4
   \   00000134   0498               LDR      R0,[SP, #+16]
   \   00000136   ........           BL       AT91F_US_SendFrame
   \   0000013A   02B0               ADD      SP,SP,#+8
    745                     
    746                    
    747               }
    748          }
   \                     ??WizFiCommand_AT_NCTCP_0:
   \   0000013C   FEBC               POP      {R1-R7}
   \   0000013E   01BC               POP      {R0}
   \   00000140   0047               BX       R0               ;; return
   \   00000142   C046               Nop      
   \                     ??WizFiCommand_AT_NCTCP_1:
   \   00000144   ........           DC32     g_counter
   \   00000148   10270000           DC32     0x2710
   \   0000014C   ........           DC32     AT_NCTCP
   \   00000150   ........           DC32     WiFiDebug
    749          
    750          
    751          

   \                                 In section Debug.txt, align 4, keep-with-next
    752          char WizFiResponseCommand_AT_NCTCP(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
    753          {
   \                     WizFiResponseCommand_AT_NCTCP:
   \   00000000   F5B5               PUSH     {R0,R2,R4-R7,LR}
   \   00000002   81B0               SUB      SP,SP,#+4
   \   00000004   0E00               MOVS     R6,R1
   \   00000006   1C00               MOVS     R4,R3
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0170               STRB     R1,[R0, #+0]
   \   0000000E   6B48               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0  ;; WiFiDebug
   \   00000010   0078               LDRB     R0,[R0, #+0]
   \   00000012   0028               CMP      R0,#+0
   \   00000014   07D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_1
    754             char odp=0;
    755             char *pTxt;
    756             
    757             if (WiFiDebug) SendViaUSB(Buff_RX, strlen(Buff_RX));
                                              ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00000016   0198               LDR      R0,[SP, #+4]
   \   00000018   ........           BL       strlen
   \   0000001C   0104               LSLS     R1,R0,#+16
   \   0000001E   090C               LSRS     R1,R1,#+16
   \   00000020   0198               LDR      R0,[SP, #+4]
   \   00000022   ........           BL       SendViaUSB
   \                     ??WizFiResponseCommand_AT_NCTCP_1:
   \   00000026   6649               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x4  ;; AT_NCLOSE + 12
   \   00000028   0198               LDR      R0,[SP, #+4]
   \   0000002A   ........           BL       __iar_Strstr
   \   0000002E   0500               MOVS     R5,R0
    758             pTxt=strstr(Buff_RX, "[CONNECT");
    759             if ((pTxt!=NULL) && (pTxt[9]!='9')&& (pTxt[9]!='A'))
   \   00000030   00D1               BNE      .+4
   \   00000032   96E0               B        ??WizFiResponseCommand_AT_NCTCP_2
   \   00000034   687A               LDRB     R0,[R5, #+9]
   \   00000036   3928               CMP      R0,#+57
   \   00000038   00D1               BNE      .+4
   \   0000003A   92E0               B        ??WizFiResponseCommand_AT_NCTCP_2
   \   0000003C   4128               CMP      R0,#+65
   \   0000003E   00D1               BNE      .+4
   \   00000040   8FE0               B        ??WizFiResponseCommand_AT_NCTCP_2
   \   00000042   6846               MOV      R0,SP
   \   00000044   0121               MOVS     R1,#+1
   \   00000046   0170               STRB     R1,[R0, #+0]
    760                  {
    761                    odp=1;  //ok 
    762                    pTxt+=9;
   \   00000048   0935               ADDS     R5,R5,#+9
    763                    Net->Status.HostChannel=*pTxt;
   \   0000004A   2878               LDRB     R0,[R5, #+0]
   \   0000004C   A075               STRB     R0,[R4, #+22]
    764                    Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   A070               STRB     R0,[R4, #+2]
   \   00000052   2700               MOVS     R7,R4
   \   00000054   3837               ADDS     R7,R7,#+56
   \   00000056   5B48               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0+0x8  ;; g_counter
   \   00000058   03C8               LDM      R0!,{R0,R1}
   \   0000005A   0200               MOVS     R2,R0
   \   0000005C   0B00               MOVS     R3,R1
   \   0000005E   5A48               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0+0xC  ;; 0x2710
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   8018               ADDS     R0,R0,R2
   \   00000064   5941               ADCS     R1,R1,R3
   \   00000066   03C7               STM      R7!,{R0,R1}
    765                    
    766                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
    767                    
    768          
    769               
    770                    if ((pTxt[0]-48)==6)
   \   00000068   2878               LDRB     R0,[R5, #+0]
   \   0000006A   3038               SUBS     R0,R0,#+48
   \   0000006C   0628               CMP      R0,#+6
   \   0000006E   30D1               BNE      ??WizFiResponseCommand_AT_NCTCP_3
    771                    {
    772                     char BTS=0;
    773                     for (char i=0; i<sizeof(AT_NCLOSE); i++)  {Buff_TX[i]=AT_NCLOSE[i];   BTS++;}
   \   00000070   4120               MOVS     R0,#+65
   \   00000072   3070               STRB     R0,[R6, #+0]
   \   00000074   0120               MOVS     R0,#+1
   \   00000076   3100               MOVS     R1,R6
   \   00000078   491C               ADDS     R1,R1,#+1
   \   0000007A   544A               LDR      R2,??WizFiResponseCommand_AT_NCTCP_0+0x10  ;; AT_NCLOSE + 1
   \   0000007C   0523               MOVS     R3,#+5
   \                     ??WizFiResponseCommand_AT_NCTCP_4:
   \   0000007E   1778               LDRB     R7,[R2, #+0]
   \   00000080   0F70               STRB     R7,[R1, #+0]
   \   00000082   5778               LDRB     R7,[R2, #+1]
   \   00000084   4F70               STRB     R7,[R1, #+1]
   \   00000086   801C               ADDS     R0,R0,#+2
   \   00000088   0006               LSLS     R0,R0,#+24
   \   0000008A   000E               LSRS     R0,R0,#+24
   \   0000008C   921C               ADDS     R2,R2,#+2
   \   0000008E   891C               ADDS     R1,R1,#+2
   \   00000090   5B1E               SUBS     R3,R3,#+1
   \   00000092   F4D1               BNE      ??WizFiResponseCommand_AT_NCTCP_4
    774                     BTS--;
   \   00000094   471E               SUBS     R7,R0,#+1
   \   00000096   3F06               LSLS     R7,R7,#+24
   \   00000098   3F0E               LSRS     R7,R7,#+24
    775                     Buff_TX[BTS++]='0';
   \   0000009A   3021               MOVS     R1,#+48
   \   0000009C   F155               STRB     R1,[R6, R7]
   \   0000009E   7F1C               ADDS     R7,R7,#+1
   \   000000A0   3F06               LSLS     R7,R7,#+24
   \   000000A2   3F0E               LSRS     R7,R7,#+24
    776                     Buff_TX[BTS++]=0x0d; 
   \   000000A4   0D21               MOVS     R1,#+13
   \   000000A6   F155               STRB     R1,[R6, R7]
   \   000000A8   7F1C               ADDS     R7,R7,#+1
   \   000000AA   3F06               LSLS     R7,R7,#+24
   \   000000AC   3F0E               LSRS     R7,R7,#+24
    777                     if (WiFiDebug) SendViaUSB(Buff_RX, BTS); 
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000000AE   4348               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0  ;; WiFiDebug
   \   000000B0   0078               LDRB     R0,[R0, #+0]
   \   000000B2   0028               CMP      R0,#+0
   \   000000B4   03D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_5
   \   000000B6   3900               MOVS     R1,R7
   \   000000B8   0198               LDR      R0,[SP, #+4]
   \   000000BA   ........           BL       SendViaUSB
    778                     AT91F_US_SendFrame(USART,Buff_TX,BTS,0, 0);                        //Wysyla ramke  otwieraj¹c¹ po³¹czenie 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiResponseCommand_AT_NCTCP_5:
   \   000000BE   82B0               SUB      SP,SP,#+8
   \   000000C0   0020               MOVS     R0,#+0
   \   000000C2   0090               STR      R0,[SP, #+0]
   \   000000C4   0023               MOVS     R3,#+0
   \   000000C6   3A00               MOVS     R2,R7
   \   000000C8   3100               MOVS     R1,R6
   \   000000CA   0498               LDR      R0,[SP, #+16]
   \   000000CC   ........           BL       AT91F_US_SendFrame
   \   000000D0   02B0               ADD      SP,SP,#+8
    779                    
    780                    }
    781                    if ((pTxt[0]-48)>6)
   \                     ??WizFiResponseCommand_AT_NCTCP_3:
   \   000000D2   2878               LDRB     R0,[R5, #+0]
   \   000000D4   3038               SUBS     R0,R0,#+48
   \   000000D6   0728               CMP      R0,#+7
   \   000000D8   31DB               BLT      ??WizFiResponseCommand_AT_NCTCP_6
    782                    {
    783                     char BTS=0;
    784                     for (char i=0; i<sizeof(AT_NCLOSE); i++)  {Buff_TX[i]=AT_NCLOSE[i];   BTS++;}
   \   000000DA   4120               MOVS     R0,#+65
   \   000000DC   3070               STRB     R0,[R6, #+0]
   \   000000DE   0120               MOVS     R0,#+1
   \   000000E0   3100               MOVS     R1,R6
   \   000000E2   491C               ADDS     R1,R1,#+1
   \   000000E4   394A               LDR      R2,??WizFiResponseCommand_AT_NCTCP_0+0x10  ;; AT_NCLOSE + 1
   \   000000E6   0523               MOVS     R3,#+5
   \                     ??WizFiResponseCommand_AT_NCTCP_7:
   \   000000E8   1778               LDRB     R7,[R2, #+0]
   \   000000EA   0F70               STRB     R7,[R1, #+0]
   \   000000EC   5778               LDRB     R7,[R2, #+1]
   \   000000EE   4F70               STRB     R7,[R1, #+1]
   \   000000F0   801C               ADDS     R0,R0,#+2
   \   000000F2   0006               LSLS     R0,R0,#+24
   \   000000F4   000E               LSRS     R0,R0,#+24
   \   000000F6   921C               ADDS     R2,R2,#+2
   \   000000F8   891C               ADDS     R1,R1,#+2
   \   000000FA   5B1E               SUBS     R3,R3,#+1
   \   000000FC   F4D1               BNE      ??WizFiResponseCommand_AT_NCTCP_7
    785                     BTS--;
   \   000000FE   471E               SUBS     R7,R0,#+1
   \   00000100   3F06               LSLS     R7,R7,#+24
   \   00000102   3F0E               LSRS     R7,R7,#+24
    786                     Buff_TX[BTS++]=pTxt[0]-1;
   \   00000104   2978               LDRB     R1,[R5, #+0]
   \   00000106   491E               SUBS     R1,R1,#+1
   \   00000108   F155               STRB     R1,[R6, R7]
   \   0000010A   7F1C               ADDS     R7,R7,#+1
   \   0000010C   3F06               LSLS     R7,R7,#+24
   \   0000010E   3F0E               LSRS     R7,R7,#+24
    787                     Buff_TX[BTS++]=0x0d; 
   \   00000110   0D21               MOVS     R1,#+13
   \   00000112   F155               STRB     R1,[R6, R7]
   \   00000114   7F1C               ADDS     R7,R7,#+1
   \   00000116   3F06               LSLS     R7,R7,#+24
   \   00000118   3F0E               LSRS     R7,R7,#+24
    788                     
    789                     if (WiFiDebug) SendViaUSB(Buff_TX, BTS);
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000011A   2848               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0  ;; WiFiDebug
   \   0000011C   0078               LDRB     R0,[R0, #+0]
   \   0000011E   0028               CMP      R0,#+0
   \   00000120   03D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_8
   \   00000122   3900               MOVS     R1,R7
   \   00000124   3000               MOVS     R0,R6
   \   00000126   ........           BL       SendViaUSB
    790                     AT91F_US_SendFrame(USART,Buff_TX,BTS,0, 0);                        //Wysyla ramke  otwieraj¹c¹ po³¹czenie 
                                                     ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiResponseCommand_AT_NCTCP_8:
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   0020               MOVS     R0,#+0
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   0023               MOVS     R3,#+0
   \   00000132   3A00               MOVS     R2,R7
   \   00000134   3100               MOVS     R1,R6
   \   00000136   0498               LDR      R0,[SP, #+16]
   \   00000138   ........           BL       AT91F_US_SendFrame
   \   0000013C   02B0               ADD      SP,SP,#+8
    791          
    792                    }
    793                
    794                    
    795                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \                     ??WizFiResponseCommand_AT_NCTCP_6:
   \   0000013E   3221               MOVS     R1,#+50
   \   00000140   0198               LDR      R0,[SP, #+4]
   \   00000142   ........           BL       __aeabi_memclr
    796                    
    797                    
    798                    Net->Status.HostLink=CONNECTED;
   \   00000146   0320               MOVS     R0,#+3
   \   00000148   6070               STRB     R0,[R4, #+1]
    799                    Net->Status.HttpNextQueryTime=g_counter+100;
   \   0000014A   2200               MOVS     R2,R4
   \   0000014C   3032               ADDS     R2,R2,#+48
   \   0000014E   1D48               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0+0x8  ;; g_counter
   \   00000150   03C8               LDM      R0!,{R0,R1}
   \   00000152   0023               MOVS     R3,#+0
   \   00000154   6430               ADDS     R0,R0,#+100
   \   00000156   5941               ADCS     R1,R1,R3
   \   00000158   03C2               STM      R2!,{R0,R1}
    800                    Net->Status.FreezTime=0;
   \   0000015A   2364               STR      R3,[R4, #+64]
   \   0000015C   6364               STR      R3,[R4, #+68]
    801                    Net->Status.Error=0;
   \   0000015E   6375               STRB     R3,[R4, #+21]
   \   00000160   29E0               B        ??WizFiResponseCommand_AT_NCTCP_9
    802                    
    803          
    804                    
    805                  
    806                    
    807                  }else if (strstr(Buff_RX, "[ERROR")!=NULL)
   \                     ??WizFiResponseCommand_AT_NCTCP_2:
   \   00000162   1B49               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x14  ;; AT_NCLOSE + 32
   \   00000164   0198               LDR      R0,[SP, #+4]
   \   00000166   ........           BL       __iar_Strstr
   \   0000016A   0028               CMP      R0,#+0
   \   0000016C   23D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_9
    808                  {
    809                    if (strstr(Buff_RX, "NO CID]")!=NULL)
   \   0000016E   1949               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x18  ;; AT_NCLOSE + 24
   \   00000170   0198               LDR      R0,[SP, #+4]
   \   00000172   ........           BL       __iar_Strstr
   \   00000176   0028               CMP      R0,#+0
   \   00000178   12D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_10
    810                    {
    811                      
    812                      odp=0;
    813                      
    814                      //radykalne zabezpieczenie - tymczasowe(prawdopodobnie :-)  )
    815                      //AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;   //restart sterownika    
    816                      
    817                       if (WiFiDebug) SendViaUSB((char*)AT_XRESET, sizeof(AT_XRESET)-1);
                                                        ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000017A   1048               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0  ;; WiFiDebug
   \   0000017C   0078               LDRB     R0,[R0, #+0]
   \   0000017E   0028               CMP      R0,#+0
   \   00000180   03D0               BEQ      ??WizFiResponseCommand_AT_NCTCP_11
   \   00000182   0A21               MOVS     R1,#+10
   \   00000184   1448               LDR      R0,??WizFiResponseCommand_AT_NCTCP_0+0x1C  ;; AT_NCLOSE + 56
   \   00000186   ........           BL       SendViaUSB
    818                      AT91F_US_SendFrame(USART,(char*)AT_XRESET,sizeof(AT_XRESET)-1,0, 0);                        //Wysyla ramke resetuj¹c¹ modu³ WiFi 
                                                      ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \                     ??WizFiResponseCommand_AT_NCTCP_11:
   \   0000018A   82B0               SUB      SP,SP,#+8
   \   0000018C   0020               MOVS     R0,#+0
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   0023               MOVS     R3,#+0
   \   00000192   0A22               MOVS     R2,#+10
   \   00000194   1049               LDR      R1,??WizFiResponseCommand_AT_NCTCP_0+0x1C  ;; AT_NCLOSE + 56
   \   00000196   0498               LDR      R0,[SP, #+16]
   \   00000198   ........           BL       AT91F_US_SendFrame
   \   0000019C   02B0               ADD      SP,SP,#+8
   \   0000019E   0AE0               B        ??WizFiResponseCommand_AT_NCTCP_9
    819                      
    820                    #ifdef _ADMINISTRATOR_
    821                                Message_Paint(2,"Reset","WiFi",""," ","");   
    822                    #endif            
    823                    }else{
    824                      odp=0;
    825                      for (char i=0; i<50; i++) Buff_RX[i]=0;                    
   \                     ??WizFiResponseCommand_AT_NCTCP_10:
   \   000001A0   3221               MOVS     R1,#+50
   \   000001A2   0198               LDR      R0,[SP, #+4]
   \   000001A4   ........           BL       __aeabi_memclr
    826                      Net->Status.HostLink=DISCONNECTED;
   \   000001A8   0020               MOVS     R0,#+0
   \   000001AA   6070               STRB     R0,[R4, #+1]
    827                      Net->Status.FreezTime=0;
   \   000001AC   2064               STR      R0,[R4, #+64]
   \   000001AE   6064               STR      R0,[R4, #+68]
    828                      
    829                      Net->Status.Error++;
   \   000001B0   607D               LDRB     R0,[R4, #+21]
   \   000001B2   401C               ADDS     R0,R0,#+1
   \   000001B4   6075               STRB     R0,[R4, #+21]
    830                    }
    831                    
    832                  }
    833                    
    834          
    835             return odp;
   \                     ??WizFiResponseCommand_AT_NCTCP_9:
   \   000001B6   ........           BL       ?Subroutine3
   \   000001BA   C046               Nop      
   \                     ??WizFiResponseCommand_AT_NCTCP_0:
   \   000001BC   ........           DC32     WiFiDebug
   \   000001C0   ........           DC32     AT_NCLOSE + 12
   \   000001C4   ........           DC32     g_counter
   \   000001C8   10270000           DC32     0x2710
   \   000001CC   ........           DC32     AT_NCLOSE + 1
   \   000001D0   ........           DC32     AT_NCLOSE + 32
   \   000001D4   ........           DC32     AT_NCLOSE + 24
   \   000001D8   ........           DC32     AT_NCLOSE + 56
    836          }
    837          
    838          
    839          
    840          
    841           
    842          
    843          
    844          
    845          //funkcja konwertuje napis na wartoæ short int --------------------------------
    846          // Txt  -wskanik na ci¹g
    847          // Cyfr -funkcja zwraca iloæ cyfr w ci¹gu
    848          // funkcja zwraca wartoæ short int

   \                                 In section Debug.txt, align 4, keep-with-next
    849          signed short int StrToWord(char *String, char *Cyfr)
    850          {
   \                     StrToWord:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
    851             char *Txt=String;
   \   00000002   0200               MOVS     R2,R0
   \   00000004   0023               MOVS     R3,#+0
    852             char LiczbaTab[5];
    853             char IlCyfr=0;
    854             signed char Min=1;
   \   00000006   0124               MOVS     R4,#+1
   \   00000008   0125               MOVS     R5,#+1
   \   0000000A   06E0               B        ??StrToWord_0
    855             
    856             while ((((*Txt>='0') && (*Txt<='9')) || (*Txt=='-')) && (IlCyfr<5))
    857             {
    858                if (*Txt=='-')
    859                {
    860                   Min=-1;
    861                }else{
    862                   LiczbaTab[IlCyfr++]=*Txt-48;
   \                     ??StrToWord_1:
   \   0000000C   6F46               MOV      R7,SP
   \   0000000E   3038               SUBS     R0,R0,#+48
   \   00000010   F854               STRB     R0,[R7, R3]
   \   00000012   5B1C               ADDS     R3,R3,#+1
   \   00000014   1B06               LSLS     R3,R3,#+24
   \   00000016   1B0E               LSRS     R3,R3,#+24
    863                }
    864                *Txt++;
   \                     ??StrToWord_2:
   \   00000018   521C               ADDS     R2,R2,#+1
   \                     ??StrToWord_0:
   \   0000001A   1078               LDRB     R0,[R2, #+0]
   \   0000001C   3028               CMP      R0,#+48
   \   0000001E   06D3               BCC      ??StrToWord_3
   \   00000020   3A28               CMP      R0,#+58
   \   00000022   06D3               BCC      ??StrToWord_4
    865             }
    866             *Cyfr=IlCyfr;
   \                     ??StrToWord_5:
   \   00000024   0B70               STRB     R3,[R1, #+0]
    867             
    868             int Mnoz=1;
    869             signed short int Wartosc=0; 
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   1900               MOVS     R1,R3
   \   0000002A   15D1               BNE      ??StrToWord_6
   \   0000002C   16E0               B        ??StrToWord_7
   \                     ??StrToWord_3:
   \   0000002E   2D28               CMP      R0,#+45
   \   00000030   F8D1               BNE      ??StrToWord_5
   \                     ??StrToWord_4:
   \   00000032   052B               CMP      R3,#+5
   \   00000034   F6D2               BCS      ??StrToWord_5
   \   00000036   2D28               CMP      R0,#+45
   \   00000038   E8D1               BNE      ??StrToWord_1
   \   0000003A   0025               MOVS     R5,#+0
   \   0000003C   ED43               MVNS     R5,R5            ;; #-1
   \   0000003E   EBE7               B        ??StrToWord_2
    870             while (IlCyfr>0)
    871             {
    872                 Wartosc+=LiczbaTab[--IlCyfr]*Mnoz;
   \                     ??StrToWord_8:
   \   00000040   5B1E               SUBS     R3,R3,#+1
   \   00000042   1B06               LSLS     R3,R3,#+24
   \   00000044   1B0E               LSRS     R3,R3,#+24
   \   00000046   6A46               MOV      R2,SP
   \   00000048   D15C               LDRB     R1,[R2, R3]
   \   0000004A   2200               MOVS     R2,R4
   \   0000004C   5143               MULS     R1,R2,R1
   \   0000004E   4018               ADDS     R0,R0,R1
   \   00000050   0004               LSLS     R0,R0,#+16
   \   00000052   0014               ASRS     R0,R0,#+16
    873                 Mnoz*=10;
   \   00000054   0A21               MOVS     R1,#+10
   \   00000056   4C43               MULS     R4,R1,R4
    874             }
   \                     ??StrToWord_6:
   \   00000058   1900               MOVS     R1,R3
   \   0000005A   F1D1               BNE      ??StrToWord_8
    875             Wartosc*=Min;
    876             
    877             return Wartosc;
   \                     ??StrToWord_7:
   \   0000005C   6843               MULS     R0,R5,R0
   \   0000005E   0004               LSLS     R0,R0,#+16
   \   00000060   0014               ASRS     R0,R0,#+16
   \   00000062   ........           BL       ??Subroutine3_0
    878          }//_____________________________________________________________________________
    879          
    880          

   \                                 In section Debug.txt, align 4, keep-with-next
    881          unsigned short GetSpecialAnalogVar(char ZmSp)
    882          {
   \                     GetSpecialAnalogVar:
   \   00000000   01B5               PUSH     {R0,LR}
    883             char sc;
    884             
    885             if (ZmSp<ScreenNr)       //zmienne czujnika termostatu
   \   00000002   0828               CMP      R0,#+8
   \   00000004   19D2               BCS      ??GetSpecialAnalogVar_0
    886             {
    887                  sc=ZmSp;
   \   00000006   1749               LDR      R1,??GetSpecialAnalogVar_1  ;; 0xbc27
   \   00000008   A022               MOVS     R2,#+160
   \   0000000A   5043               MULS     R0,R2,R0
   \   0000000C   164A               LDR      R2,??GetSpecialAnalogVar_1+0x4  ;; gProg
   \   0000000E   1018               ADDS     R0,R2,R0
   \   00000010   4118               ADDS     R1,R0,R1
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   0A56               LDRSB    R2,[R1, R0]
   \   00000016   002A               CMP      R2,#+0
   \   00000018   06D5               BPL      ??GetSpecialAnalogVar_2
    888                  if (gProg.Screen[sc].Thermo.SensorNode<0) //je¿eli zmienna
    889                     {
    890                       return VariablesAnal[gProg.Screen[sc].Thermo.SensorReg];
   \   0000001A   4878               LDRB     R0,[R1, #+1]
   \   0000001C   4000               LSLS     R0,R0,#+1
   \   0000001E   1349               LDR      R1,??GetSpecialAnalogVar_1+0x8  ;; VariablesAnal
   \                     ??GetSpecialAnalogVar_3:
   \   00000020   085E               LDRSH    R0,[R1, R0]
   \   00000022   0004               LSLS     R0,R0,#+16
   \   00000024   000C               LSRS     R0,R0,#+16
   \   00000026   19E0               B        ??GetSpecialAnalogVar_4
    891                     }else{
    892                       return MainStage.StageI[gProg.Screen[sc].Thermo.SensorNode].Value[gProg.Screen[sc].Thermo.SensorReg];
   \                     ??GetSpecialAnalogVar_2:
   \   00000028   A020               MOVS     R0,#+160
   \   0000002A   4978               LDRB     R1,[R1, #+1]
   \   0000002C   4900               LSLS     R1,R1,#+1
   \   0000002E   1623               MOVS     R3,#+22
   \   00000030   5A43               MULS     R2,R3,R2
   \   00000032   0F4B               LDR      R3,??GetSpecialAnalogVar_1+0xC  ;; MainStage
   \   00000034   9A18               ADDS     R2,R3,R2
   \   00000036   5118               ADDS     R1,R2,R1
   \   00000038   F2E7               B.N      ??GetSpecialAnalogVar_3
    893                     }
    894             }
    895             else if ((ZmSp>=10) && (ZmSp<10+ScreenNr))       //zmienne czujnika termostatu
   \                     ??GetSpecialAnalogVar_0:
   \   0000003A   0A28               CMP      R0,#+10
   \   0000003C   0DD3               BCC      ??GetSpecialAnalogVar_5
   \   0000003E   1228               CMP      R0,#+18
   \   00000040   0BD2               BCS      ??GetSpecialAnalogVar_5
    896             {
    897                     sc=ZmSp-10;
    898                     return gProg.Screen[sc].Thermo.SetTemperature;
   \   00000042   0C49               LDR      R1,??GetSpecialAnalogVar_1+0x10  ;; 0xbc2e
   \   00000044   0A38               SUBS     R0,R0,#+10
   \   00000046   0006               LSLS     R0,R0,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \   0000004A   A022               MOVS     R2,#+160
   \   0000004C   5043               MULS     R0,R2,R0
   \   0000004E   064A               LDR      R2,??GetSpecialAnalogVar_1+0x4  ;; gProg
   \   00000050   1018               ADDS     R0,R2,R0
   \   00000052   405E               LDRSH    R0,[R0, R1]
   \   00000054   0004               LSLS     R0,R0,#+16
   \   00000056   000C               LSRS     R0,R0,#+16
   \   00000058   00E0               B        ??GetSpecialAnalogVar_4
    899              
    900             }
    901             return 0;
   \                     ??GetSpecialAnalogVar_5:
   \   0000005A   0020               MOVS     R0,#+0
   \                     ??GetSpecialAnalogVar_4:
   \   0000005C   08BC               POP      {R3}
   \   0000005E   02BC               POP      {R1}
   \   00000060   0847               BX       R1               ;; return
   \   00000062   C046               Nop      
   \                     ??GetSpecialAnalogVar_1:
   \   00000064   27BC0000           DC32     0xbc27
   \   00000068   ........           DC32     gProg
   \   0000006C   ........           DC32     VariablesAnal
   \   00000070   ........           DC32     MainStage
   \   00000074   2EBC0000           DC32     0xbc2e
    902            
    903          }
    904          
    905          

   \                                 In section Debug.txt, align 4, keep-with-next
    906          char GetSpecialBinarVar(char ZmSp)
    907          {
   \                     GetSpecialBinarVar:
   \   00000000   10B5               PUSH     {R4,LR}
    908             char sc;
    909            
    910             if (ZmSp<ScreenNr)       //zmienne  termostatu  AutoOn
   \   00000002   0828               CMP      R0,#+8
   \   00000004   06D2               BCS      ??GetSpecialBinarVar_0
    911             {
    912                  return gProg.Screen[ZmSp].Thermo.AutoOn;
   \   00000006   2B49               LDR      R1,??GetSpecialBinarVar_1  ;; 0xbc26
   \   00000008   A022               MOVS     R2,#+160
   \   0000000A   5043               MULS     R0,R2,R0
   \   0000000C   2A4A               LDR      R2,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   0000000E   1018               ADDS     R0,R2,R0
   \   00000010   405C               LDRB     R0,[R0, R1]
   \   00000012   4CE0               B        ??GetSpecialBinarVar_2
    913             }
    914             else if ((ZmSp>=10) && (ZmSp<10+ScreenNr))       //zmienne  termostatu Temp. zad w AutoOn
   \                     ??GetSpecialBinarVar_0:
   \   00000014   0A28               CMP      R0,#+10
   \   00000016   1BD3               BCC      ??GetSpecialBinarVar_3
   \   00000018   1228               CMP      R0,#+18
   \   0000001A   19D2               BCS      ??GetSpecialBinarVar_3
    915             {
    916                 sc=ZmSp-10;
   \   0000001C   0A38               SUBS     R0,R0,#+10
   \   0000001E   0006               LSLS     R0,R0,#+24
   \   00000020   000E               LSRS     R0,R0,#+24
    917                char MaxTmp;
    918                if (gProg.Screen[sc].Thermo.Temperature[0]>gProg.Screen[sc].Thermo.Temperature[1])
   \   00000022   2549               LDR      R1,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   00000024   254A               LDR      R2,??GetSpecialBinarVar_1+0x8  ;; 0xbc2a
   \   00000026   A023               MOVS     R3,#+160
   \   00000028   5843               MULS     R0,R3,R0
   \   0000002A   0818               ADDS     R0,R1,R0
   \   0000002C   8018               ADDS     R0,R0,R2
   \   0000002E   0221               MOVS     R1,#+2
   \   00000030   415E               LDRSH    R1,[R0, R1]
   \   00000032   0022               MOVS     R2,#+0
   \   00000034   825E               LDRSH    R2,[R0, R2]
   \   00000036   9142               CMP      R1,R2
   \   00000038   01DA               BGE      ??GetSpecialBinarVar_4
    919                {
    920                  MaxTmp=gProg.Screen[sc].Thermo.Temperature[0]; 
   \   0000003A   0188               LDRH     R1,[R0, #+0]
   \   0000003C   00E0               B        ??GetSpecialBinarVar_5
    921                }else{
    922                  MaxTmp=gProg.Screen[sc].Thermo.Temperature[1];
   \                     ??GetSpecialBinarVar_4:
   \   0000003E   4188               LDRH     R1,[R0, #+2]
    923                }
    924                
    925                if (gProg.Screen[sc].Thermo.SetTemperature==MaxTmp)
   \                     ??GetSpecialBinarVar_5:
   \   00000040   0422               MOVS     R2,#+4
   \   00000042   805E               LDRSH    R0,[R0, R2]
   \   00000044   0906               LSLS     R1,R1,#+24
   \   00000046   090E               LSRS     R1,R1,#+24
   \   00000048   8842               CMP      R0,R1
   \   0000004A   2FD1               BNE      ??GetSpecialBinarVar_6
    926                {
    927                 return 1;  
   \   0000004C   0120               MOVS     R0,#+1
   \   0000004E   2EE0               B        ??GetSpecialBinarVar_2
    928                }else{
    929                 return 0;      
    930                }     
    931                    
    932                  
    933             }
    934             else if ((ZmSp>=40) && (ZmSp<40+ScreenNr))       //zmienne  termostatu Temp. zad w AutoOn
   \                     ??GetSpecialBinarVar_3:
   \   00000050   2828               CMP      R0,#+40
   \   00000052   2BD3               BCC      ??GetSpecialBinarVar_6
   \   00000054   3028               CMP      R0,#+48
   \   00000056   29D2               BCS      ??GetSpecialBinarVar_6
    935             {
    936                sc=ZmSp-40;
   \   00000058   2838               SUBS     R0,R0,#+40
   \   0000005A   0006               LSLS     R0,R0,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
    937                
    938                char res=0;
   \   0000005E   0024               MOVS     R4,#+0
    939                
    940                  if ((gProg.Screen[sc].Thermo.ActorNode<0xFF) && (gProg.Screen[sc].Thermo.ActorNode>=0))   //je¿eli wêze³
   \   00000060   1549               LDR      R1,??GetSpecialBinarVar_1+0x4  ;; gProg
   \   00000062   174A               LDR      R2,??GetSpecialBinarVar_1+0xC  ;; 0xbc24
   \   00000064   A023               MOVS     R3,#+160
   \   00000066   5843               MULS     R0,R3,R0
   \   00000068   0818               ADDS     R0,R1,R0
   \   0000006A   8218               ADDS     R2,R0,R2
   \   0000006C   5178               LDRB     R1,[R2, #+1]
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   1056               LDRSB    R0,[R2, R0]
   \   00000072   0028               CMP      R0,#+0
   \   00000074   0ED4               BMI      ??GetSpecialBinarVar_7
    941                  {
    942                    if ((PortStageRead(MainStage.StageQ[gProg.Screen[sc].Thermo.ActorNode].Port , gProg.Screen[sc].Thermo.ActorPort))==1) res=1;
   \   00000076   1348               LDR      R0,??GetSpecialBinarVar_1+0x10  ;; 0x3a2
   \   00000078   0023               MOVS     R3,#+0
   \   0000007A   D256               LDRSB    R2,[R2, R3]
   \   0000007C   1623               MOVS     R3,#+22
   \   0000007E   5A43               MULS     R2,R3,R2
   \   00000080   114B               LDR      R3,??GetSpecialBinarVar_1+0x14  ;; MainStage
   \   00000082   9A18               ADDS     R2,R3,R2
   \   00000084   105A               LDRH     R0,[R2, R0]
   \   00000086   0004               LSLS     R0,R0,#+16
   \   00000088   0014               ASRS     R0,R0,#+16
   \   0000008A   ........           BL       PortStageRead
   \   0000008E   0128               CMP      R0,#+1
   \   00000090   0AD1               BNE      ??GetSpecialBinarVar_8
   \   00000092   08E0               B.N      ??GetSpecialBinarVar_9
    943                  }else{  //Je¿eli zmienna
    944                    if(((Variables[gProg.Screen[sc].Thermo.ActorPort/8]>> (gProg.Screen[sc].Thermo.ActorPort%8))&0x1)==1) res=1;
   \                     ??GetSpecialBinarVar_7:
   \   00000094   C810               ASRS     R0,R1,#+3
   \   00000096   0D4A               LDR      R2,??GetSpecialBinarVar_1+0x18  ;; Variables
   \   00000098   105C               LDRB     R0,[R2, R0]
   \   0000009A   CA08               LSRS     R2,R1,#+3
   \   0000009C   D200               LSLS     R2,R2,#+3
   \   0000009E   891A               SUBS     R1,R1,R2
   \   000000A0   0841               ASRS     R0,R0,R1
   \   000000A2   C007               LSLS     R0,R0,#+31
   \   000000A4   00D5               BPL      ??GetSpecialBinarVar_8
   \                     ??GetSpecialBinarVar_9:
   \   000000A6   0124               MOVS     R4,#+1
    945                  }
    946                
    947                
    948                return res;
   \                     ??GetSpecialBinarVar_8:
   \   000000A8   2000               MOVS     R0,R4
   \   000000AA   00E0               B        ??GetSpecialBinarVar_2
    949             }
    950             
    951             return 0;
   \                     ??GetSpecialBinarVar_6:
   \   000000AC   0020               MOVS     R0,#+0
   \                     ??GetSpecialBinarVar_2:
   \   000000AE   10BC               POP      {R4}
   \   000000B0   02BC               POP      {R1}
   \   000000B2   0847               BX       R1               ;; return
   \                     ??GetSpecialBinarVar_1:
   \   000000B4   26BC0000           DC32     0xbc26
   \   000000B8   ........           DC32     gProg
   \   000000BC   2ABC0000           DC32     0xbc2a
   \   000000C0   24BC0000           DC32     0xbc24
   \   000000C4   A2030000           DC32     0x3a2
   \   000000C8   ........           DC32     MainStage
   \   000000CC   ........           DC32     Variables
    952          }  
    953            
    954          
    955          
    956          
    957          

   \                                 In section Debug.txt, align 4, keep-with-next
    958          void SetSpecialBinarVar(char ZmSp, char Val, _Net *Net)
    959          {
   \                     SetSpecialBinarVar:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    960             char sc;
    961            
    962             if (ZmSp<ScreenNr)       //zmienne  termostatu  AutoOn
   \   00000002   0828               CMP      R0,#+8
   \   00000004   16D2               BCS      ??SetSpecialBinarVar_0
    963             {
    964                 
    965                if (Val) gProg.Screen[ZmSp].Thermo.AutoOn=1; else gProg.Screen[ZmSp].Thermo.AutoOn=0;
   \   00000006   314B               LDR      R3,??SetSpecialBinarVar_1  ;; 0xbc26
   \   00000008   A024               MOVS     R4,#+160
   \   0000000A   6043               MULS     R0,R4,R0
   \   0000000C   304C               LDR      R4,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   0000000E   2018               ADDS     R0,R4,R0
   \   00000010   0C00               MOVS     R4,R1
   \   00000012   641E               SUBS     R4,R4,#+1
   \   00000014   A441               SBCS     R4,R4,R4
   \   00000016   E443               MVNS     R4,R4
   \   00000018   E40F               LSRS     R4,R4,#+31
   \   0000001A   C454               STRB     R4,[R0, R3]
    966                Net->Status.NextHttpOrder=HTTP_POST;
   \                     ??SetSpecialBinarVar_2:
   \   0000001C   1220               MOVS     R0,#+18
   \   0000001E   D070               STRB     R0,[R2, #+3]
    967                ThermostatsTimeChartExecute(); 
   \   00000020   ........           BL       ThermostatsTimeChartExecute
    968                ThermostatsExecute();
   \   00000024   ........           BL       ThermostatsExecute
    969                MenuPaint();
   \   00000028   ........           BL       MenuPaint
    970                ExecuteSpecialThermVar();
                       ^
Warning[Pe223]: function "ExecuteSpecialThermVar" declared implicitly
   \   0000002C   ........           BL       ExecuteSpecialThermVar
    971                 
    972             }
    973             else if ((ZmSp>=10) && (ZmSp<10+ScreenNr))       //zmienne  termostatu Temp. zad w AutoOn
    974             {
    975                sc=ZmSp-10;
    976                char MaxTmp;
    977                char MinTmp;
    978                if (gProg.Screen[sc].Thermo.Temperature[0]>gProg.Screen[sc].Thermo.Temperature[1])
    979                {
    980                  MaxTmp=gProg.Screen[sc].Thermo.Temperature[0]; 
    981                  MinTmp=gProg.Screen[sc].Thermo.Temperature[1];
    982                }else{
    983                  MaxTmp=gProg.Screen[sc].Thermo.Temperature[1];
    984                  MinTmp=gProg.Screen[sc].Thermo.Temperature[0];
    985                }
    986                
    987                if (Val)
    988                {
    989                    gProg.Screen[sc].Thermo.SetTemperature=MaxTmp;
    990                }else{
    991                    gProg.Screen[sc].Thermo.SetTemperature=MinTmp; 
    992                }
    993                Net->Status.NextHttpOrder=HTTP_POST;
    994                ThermostatsTimeChartExecute(); 
    995                ThermostatsExecute();
    996                MenuPaint();
    997                ExecuteSpecialThermVar();
                       ^
Warning[Pe223]: function "ExecuteSpecialThermVar" declared implicitly
    998             }else if ((ZmSp>=20) && (ZmSp<20+ScreenNr))       //zmienne  termostatu temp+ w trybie Auto
    999             {
   1000                sc=ZmSp-20;
   1001                if ((gProg.Screen[sc].Thermo.SetTemperature)<500) {gProg.Screen[sc].Thermo.SetTemperature++;}
   1002                Net->Status.NextHttpOrder=HTTP_POST;
   1003                ThermostatsTimeChartExecute(); 
   1004                ThermostatsExecute();
   1005                MenuPaint();
   1006                ExecuteSpecialThermVar();
                       ^
Warning[Pe223]: function "ExecuteSpecialThermVar" declared implicitly
   1007             }else if ((ZmSp>=30) && (ZmSp<30+ScreenNr))       //zmienne  termostatu temp+ w trybie Auto
   1008             {
   1009                sc=ZmSp-30;
   1010                if ((gProg.Screen[sc].Thermo.SetTemperature)>0) {gProg.Screen[sc].Thermo.SetTemperature--;}
   1011                Net->Status.NextHttpOrder=HTTP_POST;
   1012                ThermostatsTimeChartExecute(); 
   1013                ThermostatsExecute();
   1014                MenuPaint();
   1015                ExecuteSpecialThermVar();
                       ^
Warning[Pe223]: function "ExecuteSpecialThermVar" declared implicitly
   1016             }
   1017          
   1018          }  
   \                     ??SetSpecialBinarVar_3:
   \   00000030   ........           BL       ??Subroutine2_1
   \                     ??SetSpecialBinarVar_0:
   \   00000034   0A28               CMP      R0,#+10
   \   00000036   1FD3               BCC      ??SetSpecialBinarVar_4
   \   00000038   1228               CMP      R0,#+18
   \   0000003A   1DD2               BCS      ??SetSpecialBinarVar_4
   \   0000003C   0A38               SUBS     R0,R0,#+10
   \   0000003E   0006               LSLS     R0,R0,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   234B               LDR      R3,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   00000044   234C               LDR      R4,??SetSpecialBinarVar_1+0x8  ;; 0xbc2a
   \   00000046   A025               MOVS     R5,#+160
   \   00000048   6843               MULS     R0,R5,R0
   \   0000004A   1818               ADDS     R0,R3,R0
   \   0000004C   0019               ADDS     R0,R0,R4
   \   0000004E   0223               MOVS     R3,#+2
   \   00000050   C35E               LDRSH    R3,[R0, R3]
   \   00000052   0024               MOVS     R4,#+0
   \   00000054   045F               LDRSH    R4,[R0, R4]
   \   00000056   A342               CMP      R3,R4
   \   00000058   02DA               BGE      ??SetSpecialBinarVar_5
   \   0000005A   0388               LDRH     R3,[R0, #+0]
   \   0000005C   4488               LDRH     R4,[R0, #+2]
   \   0000005E   01E0               B        ??SetSpecialBinarVar_6
   \                     ??SetSpecialBinarVar_5:
   \   00000060   4388               LDRH     R3,[R0, #+2]
   \   00000062   0488               LDRH     R4,[R0, #+0]
   \                     ??SetSpecialBinarVar_6:
   \   00000064   0029               CMP      R1,#+0
   \   00000066   03D0               BEQ      ??SetSpecialBinarVar_7
   \   00000068   1B06               LSLS     R3,R3,#+24
   \   0000006A   1B0E               LSRS     R3,R3,#+24
   \   0000006C   8380               STRH     R3,[R0, #+4]
   \   0000006E   D5E7               B        ??SetSpecialBinarVar_2
   \                     ??SetSpecialBinarVar_7:
   \   00000070   2406               LSLS     R4,R4,#+24
   \   00000072   240E               LSRS     R4,R4,#+24
   \   00000074   8480               STRH     R4,[R0, #+4]
   \   00000076   D1E7               B        ??SetSpecialBinarVar_2
   \                     ??SetSpecialBinarVar_4:
   \   00000078   1428               CMP      R0,#+20
   \   0000007A   13D3               BCC      ??SetSpecialBinarVar_8
   \   0000007C   1C28               CMP      R0,#+28
   \   0000007E   11D2               BCS      ??SetSpecialBinarVar_8
   \   00000080   1438               SUBS     R0,R0,#+20
   \   00000082   0006               LSLS     R0,R0,#+24
   \   00000084   000E               LSRS     R0,R0,#+24
   \   00000086   124B               LDR      R3,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   00000088   1349               LDR      R1,??SetSpecialBinarVar_1+0xC  ;; 0xbc2e
   \   0000008A   A024               MOVS     R4,#+160
   \   0000008C   6043               MULS     R0,R4,R0
   \   0000008E   1818               ADDS     R0,R3,R0
   \   00000090   4018               ADDS     R0,R0,R1
   \   00000092   0021               MOVS     R1,#+0
   \   00000094   415E               LDRSH    R1,[R0, R1]
   \   00000096   FA23               MOVS     R3,#+250
   \   00000098   5B00               LSLS     R3,R3,#+1        ;; #+500
   \   0000009A   9942               CMP      R1,R3
   \   0000009C   BEDA               BGE      ??SetSpecialBinarVar_2
   \   0000009E   491C               ADDS     R1,R1,#+1
   \                     ??SetSpecialBinarVar_9:
   \   000000A0   0180               STRH     R1,[R0, #+0]
   \   000000A2   BBE7               B        ??SetSpecialBinarVar_2
   \                     ??SetSpecialBinarVar_8:
   \   000000A4   1E28               CMP      R0,#+30
   \   000000A6   C3D3               BCC      ??SetSpecialBinarVar_3
   \   000000A8   2628               CMP      R0,#+38
   \   000000AA   C1D2               BCS      ??SetSpecialBinarVar_3
   \   000000AC   1E38               SUBS     R0,R0,#+30
   \   000000AE   0006               LSLS     R0,R0,#+24
   \   000000B0   000E               LSRS     R0,R0,#+24
   \   000000B2   074B               LDR      R3,??SetSpecialBinarVar_1+0x4  ;; gProg
   \   000000B4   0849               LDR      R1,??SetSpecialBinarVar_1+0xC  ;; 0xbc2e
   \   000000B6   A024               MOVS     R4,#+160
   \   000000B8   6043               MULS     R0,R4,R0
   \   000000BA   1818               ADDS     R0,R3,R0
   \   000000BC   4018               ADDS     R0,R0,R1
   \   000000BE   0021               MOVS     R1,#+0
   \   000000C0   415E               LDRSH    R1,[R0, R1]
   \   000000C2   0129               CMP      R1,#+1
   \   000000C4   AADB               BLT      ??SetSpecialBinarVar_2
   \   000000C6   491E               SUBS     R1,R1,#+1
   \   000000C8   EAE7               B.N      ??SetSpecialBinarVar_9
   \   000000CA   C046               Nop      
   \                     ??SetSpecialBinarVar_1:
   \   000000CC   26BC0000           DC32     0xbc26
   \   000000D0   ........           DC32     gProg
   \   000000D4   2ABC0000           DC32     0xbc2a
   \   000000D8   2EBC0000           DC32     0xbc2e
   1019            
   1020          
   1021          
   1022          //Funkcja wys³ania zadania HTTP

   \                                 In section Debug.txt, align 4, keep-with-next
   1023          void HTTP_Query(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
   1024          {
   \                     HTTP_Query:
   \   00000000   FDB5               PUSH     {R0,R2-R7,LR}
   \   00000002   8EB0               SUB      SP,SP,#+56
   \   00000004   0C00               MOVS     R4,R1
   1025          
   1026                          
   1027                     //wysy³anie danych ------------------------------------
   1028                     
   1029                     short BTS=0;
   1030                     for (short i=0; i<sizeof(Buff_TX); i++) Buff_TX[i]=0;
   \   00000006   0421               MOVS     R1,#+4
   \   00000008   2000               MOVS     R0,R4
   \   0000000A   ........           BL       __aeabi_memclr
   \   0000000E   1B20               MOVS     R0,#+27
   \   00000010   2070               STRB     R0,[R4, #+0]
   1031                     Buff_TX[BTS++]=0x1B;
   1032                     Buff_TX[BTS++]='S';
   \   00000012   5320               MOVS     R0,#+83
   \   00000014   6070               STRB     R0,[R4, #+1]
   1033                     Buff_TX[BTS++]=Net->Status.HostChannel;     //numer kana³u [przydzielony przez serwer
   \   00000016   1098               LDR      R0,[SP, #+64]
   \   00000018   401C               ADDS     R0,R0,#+1
   \   0000001A   0490               STR      R0,[SP, #+16]
   \   0000001C   407D               LDRB     R0,[R0, #+21]
   \   0000001E   A070               STRB     R0,[R4, #+2]
   1034                     
   1035                                               
   1036                     char Send=0; 
   1037                     char txt[16]; 
   1038                     //czyszczenie bufora nadawczego
   1039                     char *PozIlByte;
   1040                     switch (Net->Status.CurrentOrder)     
   \   00000020   0498               LDR      R0,[SP, #+16]
   \   00000022   4078               LDRB     R0,[R0, #+1]
   \   00000024   1228               CMP      R0,#+18
   \   00000026   5CD0               BEQ      ??HTTP_Query_0
   \   00000028   1328               CMP      R0,#+19
   \   0000002A   4ED0               BEQ      ??HTTP_Query_1
   \   0000002C   1428               CMP      R0,#+20
   \   0000002E   01D0               BEQ      .+6
   \   00000030   00F00BFC           BL       ??HTTP_Query_2
   1041                     {
   1042                        case HTTP_GET_Config:              //proba o podanie konfiguracji zestawu zmiennych
   1043                              strcat(Buff_TX,"GET ");
   \   00000034   D34D               LDR      R5,??HTTP_Query_3  ;; `?<Constant "GET ">`
   \   00000036   2900               MOVS     R1,R5
   \   00000038   2000               MOVS     R0,R4
   \   0000003A   ........           BL       strcat
   1044                              strcat(Buff_TX,Net->WiFi.Path);
   \   0000003E   1099               LDR      R1,[SP, #+64]
   \   00000040   DB31               ADDS     R1,R1,#+219
   \   00000042   2000               MOVS     R0,R4
   \   00000044   ........           BL       strcat
   1045                              strcat(Buff_TX,"/dc");
   \   00000048   CFA1               ADR      R1,??HTTP_Query_3+0x4  ;; "/dc"
   \                     ??HTTP_Query_4:
   \   0000004A   2000               MOVS     R0,R4
   \   0000004C   ........           BL       strcat
   1046                              sprintf(txt, "%d",RF_Status.RF_ID_R);
                                     ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   00000050   CE48               LDR      R0,??HTTP_Query_3+0x8  ;; RF_Status + 28
   \   00000052   0268               LDR      R2,[R0, #+0]
   \   00000054   CEA1               ADR      R1,??HTTP_Query_3+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   00000056   0AA8               ADD      R0,SP,#+40
   \   00000058   ........           BL       sprintf
   1047                              strcat(Buff_TX,txt);
   \   0000005C   0AA9               ADD      R1,SP,#+40
   \   0000005E   2000               MOVS     R0,R4
   \   00000060   ........           BL       strcat
   1048                              strcat(Buff_TX,".csv HTTP/1.1\r\n");
   \   00000064   2900               MOVS     R1,R5
   \   00000066   0831               ADDS     R1,R1,#+8
   \   00000068   2000               MOVS     R0,R4
   \   0000006A   ........           BL       strcat
   1049                              strcat(Buff_TX,"User-Agent: CEURON\r\nHost: ");
   \   0000006E   2900               MOVS     R1,R5
   \   00000070   1831               ADDS     R1,R1,#+24
   \   00000072   2000               MOVS     R0,R4
   \   00000074   ........           BL       strcat
   1050                              if ((Net->WiFi.Subdomena[0]>47)&&(Net->WiFi.Subdomena[0]<123)) {strcat(Buff_TX,Net->WiFi.Subdomena); strcat(Buff_TX,".");}
   \   00000078   1098               LDR      R0,[SP, #+64]
   \   0000007A   CC30               ADDS     R0,R0,#+204
   \   0000007C   0178               LDRB     R1,[R0, #+0]
   \   0000007E   3029               CMP      R1,#+48
   \   00000080   0AD3               BCC      ??HTTP_Query_5
   \   00000082   7B29               CMP      R1,#+123
   \   00000084   08D2               BCS      ??HTTP_Query_5
   \   00000086   1099               LDR      R1,[SP, #+64]
   \   00000088   CC31               ADDS     R1,R1,#+204
   \   0000008A   2000               MOVS     R0,R4
   \   0000008C   ........           BL       strcat
   \   00000090   C0A1               ADR      R1,??HTTP_Query_3+0x10  ;; 0x2E, 0x00, 0x00, 0x00
   \   00000092   2000               MOVS     R0,R4
   \   00000094   ........           BL       strcat
   1051                              strcat(Buff_TX,Net->WiFi.Domena);
   \                     ??HTTP_Query_5:
   \   00000098   1099               LDR      R1,[SP, #+64]
   \   0000009A   BD31               ADDS     R1,R1,#+189
   \   0000009C   2000               MOVS     R0,R4
   \   0000009E   ........           BL       strcat
   1052                              strcat(Buff_TX,"\r\n");
   \   000000A2   BDA1               ADR      R1,??HTTP_Query_3+0x14  ;; 0x0D, 0x0A, 0x00, 0x00
   \   000000A4   2000               MOVS     R0,R4
   \   000000A6   ........           BL       strcat
   1053                              strcat(Buff_TX,"Connection: keep-alive\r\n");
   \   000000AA   2900               MOVS     R1,R5
   \   000000AC   3431               ADDS     R1,R1,#+52
   \   000000AE   2000               MOVS     R0,R4
   \   000000B0   ........           BL       strcat
   1054                              strcat(Buff_TX,"\r\n\r\n");
   \   000000B4   5035               ADDS     R5,R5,#+80
   \   000000B6   2900               MOVS     R1,R5
   \   000000B8   2000               MOVS     R0,R4
   \   000000BA   ........           BL       strcat
   1055                              BTS=strlen(Buff_TX);
   \   000000BE   2000               MOVS     R0,R4
   \   000000C0   ........           BL       strlen
   \   000000C4   0704               LSLS     R7,R0,#+16
   \   000000C6   3F14               ASRS     R7,R7,#+16
   1056                              Send=1;
   \   000000C8   7BE3               B        ??HTTP_Query_6
   1057          
   1058                        break; 
   1059                        
   1060                        case HTTP_GET:              //proba o podanie konfiguracji zestawu zmiennych
   1061                              strcat(Buff_TX,"GET ");
   \                     ??HTTP_Query_1:
   \   000000CA   AE4D               LDR      R5,??HTTP_Query_3  ;; `?<Constant "GET ">`
   \   000000CC   2900               MOVS     R1,R5
   \   000000CE   2000               MOVS     R0,R4
   \   000000D0   ........           BL       strcat
   1062                              strcat(Buff_TX,Net->WiFi.Path);
   \   000000D4   1099               LDR      R1,[SP, #+64]
   \   000000D6   DB31               ADDS     R1,R1,#+219
   \   000000D8   2000               MOVS     R0,R4
   \   000000DA   ........           BL       strcat
   1063                              strcat(Buff_TX,"/do");
   \   000000DE   AFA1               ADR      R1,??HTTP_Query_3+0x18  ;; "/do"
   \   000000E0   B3E7               B.N      ??HTTP_Query_4
   1064                              sprintf(txt, "%d",RF_Status.RF_ID_R);
   1065                              strcat(Buff_TX,txt);
   1066                              strcat(Buff_TX,".csv HTTP/1.1\r\n");
   1067                              strcat(Buff_TX,"User-Agent: CEURON\r\nHost: ");
   1068                              if ((Net->WiFi.Subdomena[0]>47)&&(Net->WiFi.Subdomena[0]<123)) {strcat(Buff_TX,Net->WiFi.Subdomena); strcat(Buff_TX,".");}
   1069                              strcat(Buff_TX,Net->WiFi.Domena);
   1070                              strcat(Buff_TX,"\r\n");
   1071                              strcat(Buff_TX,"Connection: keep-alive\r\n");
   1072                              strcat(Buff_TX,"\r\n\r\n");
   1073                              BTS=strlen(Buff_TX);
   1074                               Send=1;
   1075                              
   1076                              
   1077                        break; 
   1078                        
   1079                        case HTTP_POST:                   //wys³anie zmiennych
   1080                              
   1081                              //obliczenie max iloci wysy³anych danych
   1082                              //151B(Nag³ówek i stopka) + 45B(Path,Subdomena,Domena) + 40(10B x VAR_SET_AMOUNT lub 7B x VAR_SET_AMOUNT dla dwustanów)  = max 596B. Przy samych dwustanach 476B
   1083                              strcat(Buff_TX,"POST ");
   \                     ??HTTP_Query_0:
   \   000000E2   A84D               LDR      R5,??HTTP_Query_3  ;; `?<Constant "GET ">`
   \   000000E4   2900               MOVS     R1,R5
   \   000000E6   5831               ADDS     R1,R1,#+88
   \   000000E8   2000               MOVS     R0,R4
   \   000000EA   ........           BL       strcat
   1084                              strcat(Buff_TX,Net->WiFi.Path);
   \   000000EE   1099               LDR      R1,[SP, #+64]
   \   000000F0   DB31               ADDS     R1,R1,#+219
   \   000000F2   2000               MOVS     R0,R4
   \   000000F4   ........           BL       strcat
   1085                              strcat(Buff_TX,"/putgate.php HTTP/1.1\r\nUser-Agent: CEURON\r\nHost: ");
   \   000000F8   2900               MOVS     R1,R5
   \   000000FA   6031               ADDS     R1,R1,#+96
   \   000000FC   2000               MOVS     R0,R4
   \   000000FE   ........           BL       strcat
   1086                              if ((Net->WiFi.Subdomena[0]>47)&&(Net->WiFi.Subdomena[0]<123)) {strcat(Buff_TX,Net->WiFi.Subdomena); strcat(Buff_TX,".");}
   \   00000102   1098               LDR      R0,[SP, #+64]
   \   00000104   CC30               ADDS     R0,R0,#+204
   \   00000106   0178               LDRB     R1,[R0, #+0]
   \   00000108   3029               CMP      R1,#+48
   \   0000010A   0AD3               BCC      ??HTTP_Query_7
   \   0000010C   7B29               CMP      R1,#+123
   \   0000010E   08D2               BCS      ??HTTP_Query_7
   \   00000110   1099               LDR      R1,[SP, #+64]
   \   00000112   CC31               ADDS     R1,R1,#+204
   \   00000114   2000               MOVS     R0,R4
   \   00000116   ........           BL       strcat
   \   0000011A   9EA1               ADR      R1,??HTTP_Query_3+0x10  ;; 0x2E, 0x00, 0x00, 0x00
   \   0000011C   2000               MOVS     R0,R4
   \   0000011E   ........           BL       strcat
   1087                              strcat(Buff_TX,Net->WiFi.Domena);
   \                     ??HTTP_Query_7:
   \   00000122   1099               LDR      R1,[SP, #+64]
   \   00000124   BD31               ADDS     R1,R1,#+189
   \   00000126   2000               MOVS     R0,R4
   \   00000128   ........           BL       strcat
   1088                              strcat(Buff_TX,"\r\nContent-Length: ");
   \   0000012C   2900               MOVS     R1,R5
   \   0000012E   9431               ADDS     R1,R1,#+148
   \   00000130   2000               MOVS     R0,R4
   \   00000132   ........           BL       strcat
   1089                              char PozLength=strlen(Buff_TX);
   \   00000136   2000               MOVS     R0,R4
   \   00000138   ........           BL       strlen
   \   0000013C   6946               MOV      R1,SP
   \   0000013E   0876               STRB     R0,[R1, #+24]
   1090                      
   1091                              strcat(Buff_TX,"   ");
   \   00000140   97A1               ADR      R1,??HTTP_Query_3+0x1C  ;; "   "
   \   00000142   2000               MOVS     R0,R4
   \   00000144   ........           BL       strcat
   1092                              strcat(Buff_TX,"\r\nContent-Type: application/x-www-form-urlencoded\r\n\r\nNodeID=");
   \   00000148   2900               MOVS     R1,R5
   \   0000014A   A831               ADDS     R1,R1,#+168
   \   0000014C   2000               MOVS     R0,R4
   \   0000014E   ........           BL       strcat
   1093                              int NAG=strlen(Buff_TX)-7;
   \   00000152   2000               MOVS     R0,R4
   \   00000154   ........           BL       strlen
   \   00000158   C01F               SUBS     R0,R0,#+7
   \   0000015A   0890               STR      R0,[SP, #+32]
   1094                              sprintf(txt, "%d",RF_Status.RF_ID_R);
   \   0000015C   8B48               LDR      R0,??HTTP_Query_3+0x8  ;; RF_Status + 28
   \   0000015E   0268               LDR      R2,[R0, #+0]
   \   00000160   8BA1               ADR      R1,??HTTP_Query_3+0xC  ;; 0x25, 0x64, 0x00, 0x00
   \   00000162   0AA8               ADD      R0,SP,#+40
   \   00000164   ........           BL       sprintf
   1095                              strcat(Buff_TX,txt);
   \   00000168   0AA9               ADD      R1,SP,#+40
   \   0000016A   2000               MOVS     R0,R4
   \   0000016C   ........           BL       strcat
   1096                              
   1097                              strcat(Buff_TX,"&Order=1&Content=;\r\n");
   \   00000170   E835               ADDS     R5,R5,#+232
   \   00000172   2900               MOVS     R1,R5
   \   00000174   2000               MOVS     R0,R4
   \   00000176   ........           BL       strcat
   1098                              BTS=strlen(Buff_TX);
   \   0000017A   2000               MOVS     R0,R4
   \   0000017C   ........           BL       strlen
   \   00000180   0704               LSLS     R7,R0,#+16
   \   00000182   3F14               ASRS     R7,R7,#+16
   \   00000184   0020               MOVS     R0,#+0
   \   00000186   0290               STR      R0,[SP, #+8]
   \   00000188   8648               LDR      R0,??HTTP_Query_3+0x20  ;; MainStage
   \   0000018A   8749               LDR      R1,??HTTP_Query_3+0x24  ;; 0x3a2
   \   0000018C   4118               ADDS     R1,R0,R1
   \   0000018E   0791               STR      R1,[SP, #+28]
   \   00000190   0100               MOVS     R1,R0
   \   00000192   A031               ADDS     R1,R1,#+160
   \   00000194   0391               STR      R1,[SP, #+12]
   \   00000196   A030               ADDS     R0,R0,#+160
   \   00000198   0390               STR      R0,[SP, #+12]
   \   0000019A   1098               LDR      R0,[SP, #+64]
   \   0000019C   F230               ADDS     R0,R0,#+242
   \   0000019E   0590               STR      R0,[SP, #+20]
   \   000001A0   93E0               B        ??HTTP_Query_8
   1099                              //oko³o 179 byte do tej pory
   1100                              char ContentLength=34;
   1101                              char ilLit=0;
   1102                              
   1103                              for (char VSN=0; VSN<Net->HTTP.VarSetCount; VSN++)
   1104                              {
   1105                                switch (Net->HTTP.NetNodeSet[VSN].NetDataType)
   1106                                {
   1107                                  case 'a':  //jezeli zmienna analogowa
   1108                                        
   1109                                        Buff_TX[BTS++]='a';
   \                     ??HTTP_Query_9:
   \   000001A2   E055               STRB     R0,[R4, R7]
   \   000001A4   7F1C               ADDS     R7,R7,#+1
   \   000001A6   3F04               LSLS     R7,R7,#+16
   \   000001A8   3F14               ASRS     R7,R7,#+16
   \   000001AA   0097               STR      R7,[SP, #+0]
   1110                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr/10)+48;
   \   000001AC   1098               LDR      R0,[SP, #+64]
   \   000001AE   4719               ADDS     R7,R0,R5
   \   000001B0   F737               ADDS     R7,R7,#+247
   \   000001B2   3878               LDRB     R0,[R7, #+0]
   \   000001B4   0A21               MOVS     R1,#+10
   \   000001B6   ........           BL       __aeabi_idivmod
   \   000001BA   3030               ADDS     R0,R0,#+48
   \   000001BC   0099               LDR      R1,[SP, #+0]
   \   000001BE   6054               STRB     R0,[R4, R1]
   \   000001C0   009D               LDR      R5,[SP, #+0]
   \   000001C2   6D1C               ADDS     R5,R5,#+1
   \   000001C4   2D04               LSLS     R5,R5,#+16
   \   000001C6   2D14               ASRS     R5,R5,#+16
   1111                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr%10)+48;
   \   000001C8   3878               LDRB     R0,[R7, #+0]
   \   000001CA   0A21               MOVS     R1,#+10
   \   000001CC   ........           BL       __aeabi_idivmod
   \   000001D0   3031               ADDS     R1,R1,#+48
   \   000001D2   6155               STRB     R1,[R4, R5]
   \   000001D4   6D1C               ADDS     R5,R5,#+1
   \   000001D6   2D04               LSLS     R5,R5,#+16
   \   000001D8   2D14               ASRS     R5,R5,#+16
   1112                                        Buff_TX[BTS++]=';';
   \   000001DA   3B20               MOVS     R0,#+59
   \   000001DC   6055               STRB     R0,[R4, R5]
   \   000001DE   6D1C               ADDS     R5,R5,#+1
   \   000001E0   2D04               LSLS     R5,R5,#+16
   \   000001E2   2D14               ASRS     R5,R5,#+16
   1113                                        
   1114                                        if (VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr]==(signed short)0x8000)
   \   000001E4   3878               LDRB     R0,[R7, #+0]
   \   000001E6   4000               LSLS     R0,R0,#+1
   \   000001E8   7049               LDR      R1,??HTTP_Query_3+0x28  ;; VariablesAnal
   \   000001EA   085E               LDRSH    R0,[R1, R0]
   \   000001EC   7049               LDR      R1,??HTTP_Query_3+0x2C  ;; 0xffff8000
   \   000001EE   8842               CMP      R0,R1
   \   000001F0   0FD1               BNE      ??HTTP_Query_10
   1115                                        {
   1116                                           Buff_TX[BTS++]='B';
   \                     ??HTTP_Query_11:
   \   000001F2   4220               MOVS     R0,#+66
   \   000001F4   6055               STRB     R0,[R4, R5]
   \   000001F6   6D1C               ADDS     R5,R5,#+1
   \   000001F8   2F04               LSLS     R7,R5,#+16
   \   000001FA   3F14               ASRS     R7,R7,#+16
   1117                                           Buff_TX[BTS++]='A';
   \   000001FC   4120               MOVS     R0,#+65
   \   000001FE   E055               STRB     R0,[R4, R7]
   \   00000200   7F1C               ADDS     R7,R7,#+1
   \   00000202   3F04               LSLS     R7,R7,#+16
   \   00000204   3F14               ASRS     R7,R7,#+16
   1118                                           Buff_TX[BTS++]='T';
   \   00000206   5420               MOVS     R0,#+84
   \                     ??HTTP_Query_12:
   \   00000208   E055               STRB     R0,[R4, R7]
   \   0000020A   7F1C               ADDS     R7,R7,#+1
   \   0000020C   3F04               LSLS     R7,R7,#+16
   \   0000020E   3F14               ASRS     R7,R7,#+16
   \   00000210   4CE0               B        ??HTTP_Query_13
   1119                                        }else{  
   1120                                         
   1121                                          if ((VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr])>999)
   \                     ??HTTP_Query_10:
   \   00000212   3878               LDRB     R0,[R7, #+0]
   \   00000214   4000               LSLS     R0,R0,#+1
   \   00000216   6549               LDR      R1,??HTTP_Query_3+0x28  ;; VariablesAnal
   \   00000218   085E               LDRSH    R0,[R1, R0]
   \   0000021A   FA21               MOVS     R1,#+250
   \   0000021C   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   0000021E   8842               CMP      R0,R1
   \   00000220   10DB               BLT      ??HTTP_Query_14
   1122                                          {
   1123                                            Buff_TX[BTS++]='>';
   \                     ??HTTP_Query_15:
   \   00000222   3E20               MOVS     R0,#+62
   \   00000224   6055               STRB     R0,[R4, R5]
   \   00000226   6D1C               ADDS     R5,R5,#+1
   \   00000228   2F04               LSLS     R7,R5,#+16
   \   0000022A   3F14               ASRS     R7,R7,#+16
   1124                                            Buff_TX[BTS++]='M';
   \   0000022C   4D20               MOVS     R0,#+77
   \   0000022E   E055               STRB     R0,[R4, R7]
   \   00000230   7F1C               ADDS     R7,R7,#+1
   \   00000232   3F04               LSLS     R7,R7,#+16
   \   00000234   3F14               ASRS     R7,R7,#+16
   1125                                            Buff_TX[BTS++]='A';
   \   00000236   4120               MOVS     R0,#+65
   \   00000238   E055               STRB     R0,[R4, R7]
   \   0000023A   7F1C               ADDS     R7,R7,#+1
   \   0000023C   3F04               LSLS     R7,R7,#+16
   \   0000023E   3F14               ASRS     R7,R7,#+16
   1126                                            Buff_TX[BTS++]='X';
   \   00000240   5820               MOVS     R0,#+88
   \   00000242   E1E7               B.N      ??HTTP_Query_12
   1127                                          }
   1128                                          else if ((VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr])<-999)
   \                     ??HTTP_Query_14:
   \   00000244   3878               LDRB     R0,[R7, #+0]
   \   00000246   4000               LSLS     R0,R0,#+1
   \   00000248   5849               LDR      R1,??HTTP_Query_3+0x28  ;; VariablesAnal
   \   0000024A   085E               LDRSH    R0,[R1, R0]
   \   0000024C   5949               LDR      R1,??HTTP_Query_3+0x30  ;; 0xfffffc19
   \   0000024E   8842               CMP      R0,R1
   \   00000250   14DA               BGE      ??HTTP_Query_16
   1129                                          {
   1130                                            Buff_TX[BTS++]='-';
   \                     ??HTTP_Query_17:
   \   00000252   2D20               MOVS     R0,#+45
   \   00000254   6055               STRB     R0,[R4, R5]
   \   00000256   6D1C               ADDS     R5,R5,#+1
   \   00000258   2F04               LSLS     R7,R5,#+16
   \   0000025A   3F14               ASRS     R7,R7,#+16
   1131                                            Buff_TX[BTS++]='M';
   \   0000025C   4D20               MOVS     R0,#+77
   \   0000025E   E055               STRB     R0,[R4, R7]
   \   00000260   7F1C               ADDS     R7,R7,#+1
   \   00000262   3F04               LSLS     R7,R7,#+16
   \   00000264   3F14               ASRS     R7,R7,#+16
   1132                                            Buff_TX[BTS++]='I';
   \   00000266   4920               MOVS     R0,#+73
   \   00000268   E055               STRB     R0,[R4, R7]
   \   0000026A   7F1C               ADDS     R7,R7,#+1
   \   0000026C   3F04               LSLS     R7,R7,#+16
   \   0000026E   3F14               ASRS     R7,R7,#+16
   1133                                            Buff_TX[BTS++]='N';
   \   00000270   4E20               MOVS     R0,#+78
   \   00000272   E055               STRB     R0,[R4, R7]
   \   00000274   7F1C               ADDS     R7,R7,#+1
   \   00000276   3F04               LSLS     R7,R7,#+16
   \   00000278   3F14               ASRS     R7,R7,#+16
   \   0000027A   17E0               B        ??HTTP_Query_13
   1134                                          }else{
   1135                                            ilLit=sIntToStr(VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr],&Buff_TX[BTS]);
   \                     ??HTTP_Query_16:
   \   0000027C   6119               ADDS     R1,R4,R5
   \   0000027E   3878               LDRB     R0,[R7, #+0]
   \   00000280   4000               LSLS     R0,R0,#+1
   \   00000282   4A4A               LDR      R2,??HTTP_Query_3+0x28  ;; VariablesAnal
   \   00000284   105E               LDRSH    R0,[R2, R0]
   \   00000286   ........           BL       sIntToStr
   1136                                            BTS+=ilLit;
   \   0000028A   2F18               ADDS     R7,R5,R0
   \   0000028C   3F04               LSLS     R7,R7,#+16
   \   0000028E   3F14               ASRS     R7,R7,#+16
   1137             
   1138                                          for (char i=ilLit; i<4; i++) {Buff_TX[BTS++]=' ';}
   \   00000290   0100               MOVS     R1,R0
   \   00000292   0428               CMP      R0,#+4
   \   00000294   06D3               BCC      ??HTTP_Query_18
   \   00000296   09E0               B        ??HTTP_Query_13
   \                     ??HTTP_Query_19:
   \   00000298   2020               MOVS     R0,#+32
   \   0000029A   E055               STRB     R0,[R4, R7]
   \   0000029C   7F1C               ADDS     R7,R7,#+1
   \   0000029E   3F04               LSLS     R7,R7,#+16
   \   000002A0   3F14               ASRS     R7,R7,#+16
   \   000002A2   491C               ADDS     R1,R1,#+1
   \                     ??HTTP_Query_18:
   \   000002A4   0806               LSLS     R0,R1,#+24
   \   000002A6   000E               LSRS     R0,R0,#+24
   \   000002A8   0428               CMP      R0,#+4
   \   000002AA   F5D3               BCC      ??HTTP_Query_19
   1139                                          }
   1140                                        }
   1141                                        
   1142                                        Buff_TX[BTS++]=0xd;
   \                     ??HTTP_Query_13:
   \   000002AC   0D20               MOVS     R0,#+13
   \   000002AE   E055               STRB     R0,[R4, R7]
   \   000002B0   7F1C               ADDS     R7,R7,#+1
   \   000002B2   3F04               LSLS     R7,R7,#+16
   \   000002B4   3F14               ASRS     R7,R7,#+16
   1143                                        Buff_TX[BTS++]=0xa;
   \   000002B6   0A20               MOVS     R0,#+10
   \   000002B8   E055               STRB     R0,[R4, R7]
   \   000002BA   7F1C               ADDS     R7,R7,#+1
   \   000002BC   3F04               LSLS     R7,R7,#+16
   \   000002BE   3F14               ASRS     R7,R7,#+16
   1144                                        ContentLength+=10;
   \                     ??HTTP_Query_20:
   \   000002C0   0298               LDR      R0,[SP, #+8]
   \   000002C2   401C               ADDS     R0,R0,#+1
   \   000002C4   0006               LSLS     R0,R0,#+24
   \   000002C6   000E               LSRS     R0,R0,#+24
   \   000002C8   0290               STR      R0,[SP, #+8]
   \                     ??HTTP_Query_8:
   \   000002CA   0298               LDR      R0,[SP, #+8]
   \   000002CC   0599               LDR      R1,[SP, #+20]
   \   000002CE   0978               LDRB     R1,[R1, #+0]
   \   000002D0   0006               LSLS     R0,R0,#+24
   \   000002D2   000E               LSRS     R0,R0,#+24
   \   000002D4   8842               CMP      R0,R1
   \   000002D6   00D3               BCC      .+4
   \   000002D8   52E2               B        ??HTTP_Query_21
   \   000002DA   029D               LDR      R5,[SP, #+8]
   \   000002DC   0520               MOVS     R0,#+5
   \   000002DE   4543               MULS     R5,R0,R5
   \   000002E0   0598               LDR      R0,[SP, #+20]
   \   000002E2   001D               ADDS     R0,R0,#+4
   \   000002E4   405D               LDRB     R0,[R0, R5]
   \   000002E6   6128               CMP      R0,#+97
   \   000002E8   00D1               BNE      .+4
   \   000002EA   5AE7               B        ??HTTP_Query_9
   \   000002EC   6228               CMP      R0,#+98
   \   000002EE   0ED0               BEQ      ??HTTP_Query_22
   \   000002F0   6328               CMP      R0,#+99
   \   000002F2   63D0               BEQ      ??HTTP_Query_23
   \   000002F4   6428               CMP      R0,#+100
   \   000002F6   00D1               BNE      .+4
   \   000002F8   CDE0               B        ??HTTP_Query_24
   \   000002FA   6928               CMP      R0,#+105
   \   000002FC   00D1               BNE      .+4
   \   000002FE   08E1               B        ??HTTP_Query_25
   \   00000300   7128               CMP      R0,#+113
   \   00000302   00D1               BNE      .+4
   \   00000304   65E1               B        ??HTTP_Query_26
   \   00000306   7228               CMP      R0,#+114
   \   00000308   00D1               BNE      .+4
   \   0000030A   C2E1               B        ??HTTP_Query_27
   \   0000030C   D8E7               B        ??HTTP_Query_20
   1145                                          
   1146                                  break;
   1147                                  
   1148                                  case 'b':  //jezeli zmienna dwustanowa
   1149                                        Buff_TX[BTS++]='b';
   \                     ??HTTP_Query_22:
   \   0000030E   E055               STRB     R0,[R4, R7]
   \   00000310   7F1C               ADDS     R7,R7,#+1
   \   00000312   3F04               LSLS     R7,R7,#+16
   \   00000314   3F14               ASRS     R7,R7,#+16
   \   00000316   0097               STR      R7,[SP, #+0]
   1150                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr/10)+48;
   \   00000318   1098               LDR      R0,[SP, #+64]
   \   0000031A   4719               ADDS     R7,R0,R5
   \   0000031C   F737               ADDS     R7,R7,#+247
   \   0000031E   3E00               MOVS     R6,R7
   \   00000320   3078               LDRB     R0,[R6, #+0]
   \   00000322   0A21               MOVS     R1,#+10
   \   00000324   ........           BL       __aeabi_idivmod
   \   00000328   3030               ADDS     R0,R0,#+48
   \   0000032A   0099               LDR      R1,[SP, #+0]
   \   0000032C   6054               STRB     R0,[R4, R1]
   \   0000032E   009F               LDR      R7,[SP, #+0]
   \   00000330   7F1C               ADDS     R7,R7,#+1
   \   00000332   3F04               LSLS     R7,R7,#+16
   \   00000334   3F14               ASRS     R7,R7,#+16
   1151                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr%10)+48;
   \   00000336   3078               LDRB     R0,[R6, #+0]
   \   00000338   0A21               MOVS     R1,#+10
   \   0000033A   ........           BL       __aeabi_idivmod
   \   0000033E   3031               ADDS     R1,R1,#+48
   \   00000340   E155               STRB     R1,[R4, R7]
   \   00000342   7F1C               ADDS     R7,R7,#+1
   \   00000344   3F04               LSLS     R7,R7,#+16
   \   00000346   3F14               ASRS     R7,R7,#+16
   1152                                        Buff_TX[BTS++]=';';
   \   00000348   3B20               MOVS     R0,#+59
   \   0000034A   E055               STRB     R0,[R4, R7]
   \   0000034C   7F1C               ADDS     R7,R7,#+1
   \   0000034E   3F04               LSLS     R7,R7,#+16
   \   00000350   3F14               ASRS     R7,R7,#+16
   1153                                        Net->HTTP.NetNodeSet[VSN].Value=((Variables[Net->HTTP.NetNodeSet[VSN].VarNr/8]>>(Net->HTTP.NetNodeSet[VSN].VarNr%8))&0x1);
   \   00000352   1098               LDR      R0,[SP, #+64]
   \   00000354   F930               ADDS     R0,R0,#+249
   \   00000356   4119               ADDS     R1,R0,R5
   \   00000358   3078               LDRB     R0,[R6, #+0]
   \   0000035A   C010               ASRS     R0,R0,#+3
   \   0000035C   164A               LDR      R2,??HTTP_Query_3+0x34  ;; Variables
   \   0000035E   125C               LDRB     R2,[R2, R0]
   \   00000360   3078               LDRB     R0,[R6, #+0]
   \   00000362   C308               LSRS     R3,R0,#+3
   \   00000364   DB00               LSLS     R3,R3,#+3
   \   00000366   C01A               SUBS     R0,R0,R3
   \   00000368   0241               ASRS     R2,R2,R0
   \   0000036A   0120               MOVS     R0,#+1
   \   0000036C   1040               ANDS     R0,R0,R2
   \   0000036E   0870               STRB     R0,[R1, #+0]
   \   00000370   0020               MOVS     R0,#+0
   \   00000372   4870               STRB     R0,[R1, #+1]
   1154                                        Buff_TX[BTS++]=Net->HTTP.NetNodeSet[VSN].Value+48;
   \   00000374   0A78               LDRB     R2,[R1, #+0]
   \   00000376   3032               ADDS     R2,R2,#+48
   \   00000378   E255               STRB     R2,[R4, R7]
   \   0000037A   7F1C               ADDS     R7,R7,#+1
   \   0000037C   3F04               LSLS     R7,R7,#+16
   \   0000037E   3F14               ASRS     R7,R7,#+16
   1155                                        Buff_TX[BTS++]=0xd;
   \   00000380   94E7               B.N      ??HTTP_Query_13
   \   00000382   C046               Nop      
   \                     ??HTTP_Query_3:
   \   00000384   ........           DC32     `?<Constant "GET ">`
   \   00000388   2F646300           DC8      "/dc"
   \   0000038C   ........           DC32     RF_Status + 28
   \   00000390   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000394   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   00000398   0D0A0000           DC8      0x0D, 0x0A, 0x00, 0x00
   \   0000039C   2F646F00           DC8      "/do"
   \   000003A0   20202000           DC8      "   "
   \   000003A4   ........           DC32     MainStage
   \   000003A8   A2030000           DC32     0x3a2
   \   000003AC   ........           DC32     VariablesAnal
   \   000003B0   0080FFFF           DC32     0xffff8000
   \   000003B4   19FCFFFF           DC32     0xfffffc19
   \   000003B8   ........           DC32     Variables
   1156                                        Buff_TX[BTS++]=0xa;
   1157                                        ContentLength+=7;
   1158                                  break;
   1159                                  
   1160                                  case 'c':  //jezeli zmienna analogowa specjalna
   1161                                        
   1162                                        Buff_TX[BTS++]='c';
   \                     ??HTTP_Query_23:
   \   000003BC   E055               STRB     R0,[R4, R7]
   \   000003BE   7F1C               ADDS     R7,R7,#+1
   \   000003C0   3F04               LSLS     R7,R7,#+16
   \   000003C2   3F14               ASRS     R7,R7,#+16
   \   000003C4   0097               STR      R7,[SP, #+0]
   1163                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr/10)+48;
   \   000003C6   1098               LDR      R0,[SP, #+64]
   \   000003C8   4719               ADDS     R7,R0,R5
   \   000003CA   F737               ADDS     R7,R7,#+247
   \   000003CC   3E00               MOVS     R6,R7
   \   000003CE   3078               LDRB     R0,[R6, #+0]
   \   000003D0   0A21               MOVS     R1,#+10
   \   000003D2   ........           BL       __aeabi_idivmod
   \   000003D6   3030               ADDS     R0,R0,#+48
   \   000003D8   0099               LDR      R1,[SP, #+0]
   \   000003DA   6054               STRB     R0,[R4, R1]
   \   000003DC   009F               LDR      R7,[SP, #+0]
   \   000003DE   7F1C               ADDS     R7,R7,#+1
   \   000003E0   3F04               LSLS     R7,R7,#+16
   \   000003E2   3F14               ASRS     R7,R7,#+16
   1164                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr%10)+48;
   \   000003E4   3078               LDRB     R0,[R6, #+0]
   \   000003E6   0A21               MOVS     R1,#+10
   \   000003E8   ........           BL       __aeabi_idivmod
   \   000003EC   3031               ADDS     R1,R1,#+48
   \   000003EE   E155               STRB     R1,[R4, R7]
   \   000003F0   7F1C               ADDS     R7,R7,#+1
   \   000003F2   3F04               LSLS     R7,R7,#+16
   \   000003F4   3F14               ASRS     R7,R7,#+16
   1165                                        Buff_TX[BTS++]=';';
   \   000003F6   3B20               MOVS     R0,#+59
   \   000003F8   E055               STRB     R0,[R4, R7]
   \   000003FA   7F1C               ADDS     R7,R7,#+1
   \   000003FC   3F04               LSLS     R7,R7,#+16
   \   000003FE   3F14               ASRS     R7,R7,#+16
   1166                                        if (Net->HTTP.NetNodeSet[VSN].VarNr==99)   //je¿eli propa o podanie czsu
   \   00000400   3078               LDRB     R0,[R6, #+0]
   \   00000402   6328               CMP      R0,#+99
   \   00000404   2DD1               BNE      ??HTTP_Query_28
   1167                                        {
   1168                                          Buff_TX[BTS++]=(DateTime.Hour/10)+48;
   \   00000406   DC48               LDR      R0,??HTTP_Query_29  ;; DateTime + 3
   \   00000408   0078               LDRB     R0,[R0, #+0]
   \   0000040A   0A21               MOVS     R1,#+10
   \   0000040C   ........           BL       __aeabi_idivmod
   \   00000410   3030               ADDS     R0,R0,#+48
   \   00000412   E055               STRB     R0,[R4, R7]
   \   00000414   7F1C               ADDS     R7,R7,#+1
   \   00000416   3F04               LSLS     R7,R7,#+16
   \   00000418   3F14               ASRS     R7,R7,#+16
   1169                                          Buff_TX[BTS++]=(DateTime.Hour%10)+48;
   \   0000041A   D748               LDR      R0,??HTTP_Query_29  ;; DateTime + 3
   \   0000041C   0078               LDRB     R0,[R0, #+0]
   \   0000041E   0A21               MOVS     R1,#+10
   \   00000420   ........           BL       __aeabi_idivmod
   \   00000424   3031               ADDS     R1,R1,#+48
   \   00000426   E155               STRB     R1,[R4, R7]
   \   00000428   7F1C               ADDS     R7,R7,#+1
   \   0000042A   3F04               LSLS     R7,R7,#+16
   \   0000042C   3F14               ASRS     R7,R7,#+16
   1170                                          Buff_TX[BTS++]=':';
   \   0000042E   3A20               MOVS     R0,#+58
   \   00000430   E055               STRB     R0,[R4, R7]
   \   00000432   7F1C               ADDS     R7,R7,#+1
   \   00000434   3F04               LSLS     R7,R7,#+16
   \   00000436   3F14               ASRS     R7,R7,#+16
   1171                                          Buff_TX[BTS++]=(DateTime.Minute/10)+48;
   \   00000438   D048               LDR      R0,??HTTP_Query_29+0x4  ;; DateTime + 4
   \   0000043A   0078               LDRB     R0,[R0, #+0]
   \   0000043C   0A21               MOVS     R1,#+10
   \   0000043E   ........           BL       __aeabi_idivmod
   \   00000442   3030               ADDS     R0,R0,#+48
   \   00000444   E055               STRB     R0,[R4, R7]
   \   00000446   7F1C               ADDS     R7,R7,#+1
   \   00000448   3F04               LSLS     R7,R7,#+16
   \   0000044A   3F14               ASRS     R7,R7,#+16
   1172                                          Buff_TX[BTS++]=(DateTime.Minute%10)+48;
   \   0000044C   CB48               LDR      R0,??HTTP_Query_29+0x4  ;; DateTime + 4
   \   0000044E   0078               LDRB     R0,[R0, #+0]
   \   00000450   0A21               MOVS     R1,#+10
   \   00000452   ........           BL       __aeabi_idivmod
   \   00000456   3031               ADDS     R1,R1,#+48
   \   00000458   E155               STRB     R1,[R4, R7]
   \   0000045A   7F1C               ADDS     R7,R7,#+1
   \   0000045C   3F04               LSLS     R7,R7,#+16
   \   0000045E   3F14               ASRS     R7,R7,#+16
   1173                                          //for (char i=ilLit; i<4; i++) {Buff_TX[BTS++]=' ';}
   1174                                          Buff_TX[BTS++]=0xd;
   \   00000460   24E7               B.N      ??HTTP_Query_13
   1175                                          Buff_TX[BTS++]=0xa;
   1176                                          ContentLength+=11;
   1177                                        }else{
   1178                                          ilLit=sIntToStr(GetSpecialAnalogVar(Net->HTTP.NetNodeSet[VSN].VarNr),&Buff_TX[BTS]);
   \                     ??HTTP_Query_28:
   \   00000462   ........           BL       GetSpecialAnalogVar
   \   00000466   E119               ADDS     R1,R4,R7
   \   00000468   0004               LSLS     R0,R0,#+16
   \   0000046A   0014               ASRS     R0,R0,#+16
   \   0000046C   ........           BL       sIntToStr
   1179                                          BTS+=ilLit;
   \   00000470   3F18               ADDS     R7,R7,R0
   \   00000472   3F04               LSLS     R7,R7,#+16
   \   00000474   3F14               ASRS     R7,R7,#+16
   1180                                          for (char i=ilLit; i<4; i++) {Buff_TX[BTS++]=' ';}
   \   00000476   0100               MOVS     R1,R0
   \   00000478   0428               CMP      R0,#+4
   \   0000047A   00D3               BCC      .+4
   \   0000047C   16E7               B        ??HTTP_Query_13
   \                     ??HTTP_Query_30:
   \   0000047E   0806               LSLS     R0,R1,#+24
   \   00000480   000E               LSRS     R0,R0,#+24
   \   00000482   0428               CMP      R0,#+4
   \   00000484   00D3               BCC      .+4
   \   00000486   11E7               B        ??HTTP_Query_13
   \   00000488   2020               MOVS     R0,#+32
   \   0000048A   E055               STRB     R0,[R4, R7]
   \   0000048C   7F1C               ADDS     R7,R7,#+1
   \   0000048E   3F04               LSLS     R7,R7,#+16
   \   00000490   3F14               ASRS     R7,R7,#+16
   \   00000492   491C               ADDS     R1,R1,#+1
   \   00000494   F3E7               B        ??HTTP_Query_30
   1181                                          Buff_TX[BTS++]=0xd;
   1182                                          Buff_TX[BTS++]=0xa;
   1183                                          ContentLength+=10;
   1184                                        }
   1185                                  break;
   1186                                  
   1187                                   case 'd':  //jezeli zmienna dwustanowa specjalna
   1188                                    
   1189                                        Buff_TX[BTS++]='d';
   \                     ??HTTP_Query_24:
   \   00000496   E055               STRB     R0,[R4, R7]
   \   00000498   7F1C               ADDS     R7,R7,#+1
   \   0000049A   3F04               LSLS     R7,R7,#+16
   \   0000049C   3F14               ASRS     R7,R7,#+16
   \   0000049E   0097               STR      R7,[SP, #+0]
   1190                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr/10)+48;
   \   000004A0   1098               LDR      R0,[SP, #+64]
   \   000004A2   4719               ADDS     R7,R0,R5
   \   000004A4   F737               ADDS     R7,R7,#+247
   \   000004A6   3E00               MOVS     R6,R7
   \   000004A8   3078               LDRB     R0,[R6, #+0]
   \   000004AA   0A21               MOVS     R1,#+10
   \   000004AC   ........           BL       __aeabi_idivmod
   \   000004B0   3030               ADDS     R0,R0,#+48
   \   000004B2   0099               LDR      R1,[SP, #+0]
   \   000004B4   6054               STRB     R0,[R4, R1]
   \   000004B6   009F               LDR      R7,[SP, #+0]
   \   000004B8   7F1C               ADDS     R7,R7,#+1
   \   000004BA   3F04               LSLS     R7,R7,#+16
   \   000004BC   3F14               ASRS     R7,R7,#+16
   1191                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].VarNr%10)+48;
   \   000004BE   3078               LDRB     R0,[R6, #+0]
   \   000004C0   0A21               MOVS     R1,#+10
   \   000004C2   ........           BL       __aeabi_idivmod
   \   000004C6   3031               ADDS     R1,R1,#+48
   \   000004C8   E155               STRB     R1,[R4, R7]
   \   000004CA   7F1C               ADDS     R7,R7,#+1
   \   000004CC   3F04               LSLS     R7,R7,#+16
   \   000004CE   3F14               ASRS     R7,R7,#+16
   1192                                        Buff_TX[BTS++]=';';
   \   000004D0   3B20               MOVS     R0,#+59
   \   000004D2   E055               STRB     R0,[R4, R7]
   \   000004D4   7F1C               ADDS     R7,R7,#+1
   \   000004D6   3F04               LSLS     R7,R7,#+16
   \   000004D8   3F14               ASRS     R7,R7,#+16
   1193                                        Buff_TX[BTS++]=GetSpecialBinarVar(Net->HTTP.NetNodeSet[VSN].VarNr)+48;
   \   000004DA   3078               LDRB     R0,[R6, #+0]
   \   000004DC   ........           BL       GetSpecialBinarVar
   \   000004E0   3030               ADDS     R0,R0,#+48
   \   000004E2   E055               STRB     R0,[R4, R7]
   \   000004E4   7F1C               ADDS     R7,R7,#+1
   \   000004E6   3F04               LSLS     R7,R7,#+16
   \   000004E8   3F14               ASRS     R7,R7,#+16
   1194                                        Buff_TX[BTS++]=0xd;
   \   000004EA   0D20               MOVS     R0,#+13
   \   000004EC   E055               STRB     R0,[R4, R7]
   \   000004EE   7F1C               ADDS     R7,R7,#+1
   \   000004F0   3F04               LSLS     R7,R7,#+16
   \   000004F2   3F14               ASRS     R7,R7,#+16
   1195                                        Buff_TX[BTS++]=0xa;
   \   000004F4   0A20               MOVS     R0,#+10
   \   000004F6   E055               STRB     R0,[R4, R7]
   \   000004F8   7F1C               ADDS     R7,R7,#+1
   \   000004FA   3F04               LSLS     R7,R7,#+16
   \   000004FC   3F14               ASRS     R7,R7,#+16
   1196                                        Net->HTTP.NetNodeSet[VSN].Value=GetSpecialBinarVar(Net->HTTP.NetNodeSet[VSN].VarNr);
   \   000004FE   3078               LDRB     R0,[R6, #+0]
   \   00000500   ........           BL       GetSpecialBinarVar
   \   00000504   1099               LDR      R1,[SP, #+64]
   \   00000506   F931               ADDS     R1,R1,#+249
   \   00000508   4919               ADDS     R1,R1,R5
   \   0000050A   0870               STRB     R0,[R1, #+0]
   \   0000050C   0020               MOVS     R0,#+0
   \   0000050E   4870               STRB     R0,[R1, #+1]
   1197                                          
   1198                                   
   1199                                        ContentLength+=7;
   \   00000510   D6E6               B        ??HTTP_Query_20
   1200                                  break;
   1201                                  
   1202                                  
   1203                                  case 'i':  //jezeli wejcie dwustanowe
   1204                                        Buff_TX[BTS++]='i';
   \                     ??HTTP_Query_25:
   \   00000512   E055               STRB     R0,[R4, R7]
   \   00000514   7F1C               ADDS     R7,R7,#+1
   \   00000516   3F04               LSLS     R7,R7,#+16
   \   00000518   3F14               ASRS     R7,R7,#+16
   \   0000051A   0097               STR      R7,[SP, #+0]
   1205                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr/10)+48;
   \   0000051C   1098               LDR      R0,[SP, #+64]
   \   0000051E   4719               ADDS     R7,R0,R5
   \   00000520   3E00               MOVS     R6,R7
   \   00000522   F736               ADDS     R6,R6,#+247
   \   00000524   3078               LDRB     R0,[R6, #+0]
   \   00000526   0A21               MOVS     R1,#+10
   \   00000528   ........           BL       __aeabi_idivmod
   \   0000052C   3030               ADDS     R0,R0,#+48
   \   0000052E   0099               LDR      R1,[SP, #+0]
   \   00000530   6054               STRB     R0,[R4, R1]
   \   00000532   0098               LDR      R0,[SP, #+0]
   \   00000534   401C               ADDS     R0,R0,#+1
   \   00000536   0004               LSLS     R0,R0,#+16
   \   00000538   0014               ASRS     R0,R0,#+16
   \   0000053A   0190               STR      R0,[SP, #+4]
   1206                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr%10)+48;
   \   0000053C   01B5               PUSH     {R0,LR}
   \   0000053E   3078               LDRB     R0,[R6, #+0]
   \   00000540   0A21               MOVS     R1,#+10
   \   00000542   ........           BL       __aeabi_idivmod
   \   00000546   3031               ADDS     R1,R1,#+48
   \   00000548   0098               LDR      R0,[SP, #0]
   \   0000054A   02B0               ADD      SP,SP,#+8
   \   0000054C   2154               STRB     R1,[R4, R0]
   \   0000054E   0198               LDR      R0,[SP, #+4]
   \   00000550   401C               ADDS     R0,R0,#+1
   \   00000552   0004               LSLS     R0,R0,#+16
   \   00000554   0014               ASRS     R0,R0,#+16
   \   00000556   0090               STR      R0,[SP, #+0]
   1207                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].PortNr/10)+48;
   \   00000558   F837               ADDS     R7,R7,#+248
   \   0000055A   3878               LDRB     R0,[R7, #+0]
   \   0000055C   0A21               MOVS     R1,#+10
   \   0000055E   ........           BL       __aeabi_idivmod
   \   00000562   3030               ADDS     R0,R0,#+48
   \   00000564   0099               LDR      R1,[SP, #+0]
   \   00000566   6054               STRB     R0,[R4, R1]
   \   00000568   0098               LDR      R0,[SP, #+0]
   \   0000056A   401C               ADDS     R0,R0,#+1
   \   0000056C   0004               LSLS     R0,R0,#+16
   \   0000056E   0014               ASRS     R0,R0,#+16
   \   00000570   0190               STR      R0,[SP, #+4]
   1208                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].PortNr%10)+48;
   \   00000572   01B5               PUSH     {R0,LR}
   \   00000574   3878               LDRB     R0,[R7, #+0]
   \   00000576   0A21               MOVS     R1,#+10
   \   00000578   ........           BL       __aeabi_idivmod
   \   0000057C   3031               ADDS     R1,R1,#+48
   \   0000057E   0098               LDR      R0,[SP, #0]
   \   00000580   02B0               ADD      SP,SP,#+8
   \   00000582   2154               STRB     R1,[R4, R0]
   \   00000584   0198               LDR      R0,[SP, #+4]
   \   00000586   401C               ADDS     R0,R0,#+1
   \   00000588   0004               LSLS     R0,R0,#+16
   \   0000058A   0014               ASRS     R0,R0,#+16
   1209                                        Buff_TX[BTS++]=';';
   \   0000058C   3B21               MOVS     R1,#+59
   \   0000058E   2154               STRB     R1,[R4, R0]
   \   00000590   401C               ADDS     R0,R0,#+1
   \   00000592   0004               LSLS     R0,R0,#+16
   \   00000594   0014               ASRS     R0,R0,#+16
   \   00000596   0090               STR      R0,[SP, #+0]
   1210                                        Net->HTTP.NetNodeSet[VSN].Value=PortStageRead(MainStage.StageI[Net->HTTP.NetNodeSet[VSN].NodeNr].Port, Net->HTTP.NetNodeSet[VSN].PortNr); 
   \   00000598   3978               LDRB     R1,[R7, #+0]
   \   0000059A   3078               LDRB     R0,[R6, #+0]
   \   0000059C   1622               MOVS     R2,#+22
   \   0000059E   5043               MULS     R0,R2,R0
   \   000005A0   039A               LDR      R2,[SP, #+12]
   \   000005A2   105A               LDRH     R0,[R2, R0]
   \   000005A4   0004               LSLS     R0,R0,#+16
   \   000005A6   0014               ASRS     R0,R0,#+16
   \   000005A8   ........           BL       PortStageRead
   \   000005AC   1099               LDR      R1,[SP, #+64]
   \   000005AE   F931               ADDS     R1,R1,#+249
   \   000005B0   4919               ADDS     R1,R1,R5
   \   000005B2   0870               STRB     R0,[R1, #+0]
   \   000005B4   0020               MOVS     R0,#+0
   \   000005B6   4870               STRB     R0,[R1, #+1]
   1211                                        Buff_TX[BTS++]=Net->HTTP.NetNodeSet[VSN].Value+48;
   \   000005B8   0098               LDR      R0,[SP, #+0]
   \   000005BA   0B78               LDRB     R3,[R1, #+0]
   \   000005BC   4A78               LDRB     R2,[R1, #+1]
   \   000005BE   1206               LSLS     R2,R2,#+24
   \   000005C0   1214               ASRS     R2,R2,#+16
   \   000005C2   1343               ORRS     R3,R3,R2
   \   000005C4   3033               ADDS     R3,R3,#+48
   \   000005C6   2354               STRB     R3,[R4, R0]
   \   000005C8   009F               LDR      R7,[SP, #+0]
   \   000005CA   7F1C               ADDS     R7,R7,#+1
   \   000005CC   3F04               LSLS     R7,R7,#+16
   \   000005CE   3F14               ASRS     R7,R7,#+16
   1212                                        Buff_TX[BTS++]=0xd;
   \   000005D0   6CE6               B.N      ??HTTP_Query_13
   1213                                        Buff_TX[BTS++]=0xa;
   1214                                        ContentLength+=9;
   1215                                  break;
   1216                                  
   1217                                  case 'q':  //jezeli wejcie dwustanowe
   1218                                        Buff_TX[BTS++]='q';
   \                     ??HTTP_Query_26:
   \   000005D2   E055               STRB     R0,[R4, R7]
   \   000005D4   7F1C               ADDS     R7,R7,#+1
   \   000005D6   3F04               LSLS     R7,R7,#+16
   \   000005D8   3F14               ASRS     R7,R7,#+16
   \   000005DA   0097               STR      R7,[SP, #+0]
   1219                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr/10)+48;
   \   000005DC   1098               LDR      R0,[SP, #+64]
   \   000005DE   4719               ADDS     R7,R0,R5
   \   000005E0   3E00               MOVS     R6,R7
   \   000005E2   F736               ADDS     R6,R6,#+247
   \   000005E4   3078               LDRB     R0,[R6, #+0]
   \   000005E6   0A21               MOVS     R1,#+10
   \   000005E8   ........           BL       __aeabi_idivmod
   \   000005EC   3030               ADDS     R0,R0,#+48
   \   000005EE   0099               LDR      R1,[SP, #+0]
   \   000005F0   6054               STRB     R0,[R4, R1]
   \   000005F2   0098               LDR      R0,[SP, #+0]
   \   000005F4   401C               ADDS     R0,R0,#+1
   \   000005F6   0004               LSLS     R0,R0,#+16
   \   000005F8   0014               ASRS     R0,R0,#+16
   \   000005FA   0190               STR      R0,[SP, #+4]
   1220                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr%10)+48;
   \   000005FC   01B5               PUSH     {R0,LR}
   \   000005FE   3078               LDRB     R0,[R6, #+0]
   \   00000600   0A21               MOVS     R1,#+10
   \   00000602   ........           BL       __aeabi_idivmod
   \   00000606   3031               ADDS     R1,R1,#+48
   \   00000608   0098               LDR      R0,[SP, #0]
   \   0000060A   02B0               ADD      SP,SP,#+8
   \   0000060C   2154               STRB     R1,[R4, R0]
   \   0000060E   0198               LDR      R0,[SP, #+4]
   \   00000610   401C               ADDS     R0,R0,#+1
   \   00000612   0004               LSLS     R0,R0,#+16
   \   00000614   0014               ASRS     R0,R0,#+16
   \   00000616   0090               STR      R0,[SP, #+0]
   1221                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].PortNr/10)+48;
   \   00000618   F837               ADDS     R7,R7,#+248
   \   0000061A   3878               LDRB     R0,[R7, #+0]
   \   0000061C   0A21               MOVS     R1,#+10
   \   0000061E   ........           BL       __aeabi_idivmod
   \   00000622   3030               ADDS     R0,R0,#+48
   \   00000624   0099               LDR      R1,[SP, #+0]
   \   00000626   6054               STRB     R0,[R4, R1]
   \   00000628   0098               LDR      R0,[SP, #+0]
   \   0000062A   401C               ADDS     R0,R0,#+1
   \   0000062C   0004               LSLS     R0,R0,#+16
   \   0000062E   0014               ASRS     R0,R0,#+16
   \   00000630   0190               STR      R0,[SP, #+4]
   1222                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].PortNr%10)+48;
   \   00000632   01B5               PUSH     {R0,LR}
   \   00000634   3878               LDRB     R0,[R7, #+0]
   \   00000636   0A21               MOVS     R1,#+10
   \   00000638   ........           BL       __aeabi_idivmod
   \   0000063C   3031               ADDS     R1,R1,#+48
   \   0000063E   0098               LDR      R0,[SP, #0]
   \   00000640   02B0               ADD      SP,SP,#+8
   \   00000642   2154               STRB     R1,[R4, R0]
   \   00000644   0198               LDR      R0,[SP, #+4]
   \   00000646   401C               ADDS     R0,R0,#+1
   \   00000648   0004               LSLS     R0,R0,#+16
   \   0000064A   0014               ASRS     R0,R0,#+16
   1223                                        Buff_TX[BTS++]=';';
   \   0000064C   3B21               MOVS     R1,#+59
   \   0000064E   2154               STRB     R1,[R4, R0]
   \   00000650   401C               ADDS     R0,R0,#+1
   \   00000652   0004               LSLS     R0,R0,#+16
   \   00000654   0014               ASRS     R0,R0,#+16
   \   00000656   0090               STR      R0,[SP, #+0]
   1224                                        Net->HTTP.NetNodeSet[VSN].Value=PortStageRead(MainStage.StageQ[Net->HTTP.NetNodeSet[VSN].NodeNr].Port, Net->HTTP.NetNodeSet[VSN].PortNr); 
   \   00000658   3978               LDRB     R1,[R7, #+0]
   \   0000065A   3078               LDRB     R0,[R6, #+0]
   \   0000065C   1622               MOVS     R2,#+22
   \   0000065E   5043               MULS     R0,R2,R0
   \   00000660   079A               LDR      R2,[SP, #+28]
   \   00000662   105A               LDRH     R0,[R2, R0]
   \   00000664   0004               LSLS     R0,R0,#+16
   \   00000666   0014               ASRS     R0,R0,#+16
   \   00000668   ........           BL       PortStageRead
   \   0000066C   1099               LDR      R1,[SP, #+64]
   \   0000066E   F931               ADDS     R1,R1,#+249
   \   00000670   4919               ADDS     R1,R1,R5
   \   00000672   0870               STRB     R0,[R1, #+0]
   \   00000674   0020               MOVS     R0,#+0
   \   00000676   4870               STRB     R0,[R1, #+1]
   1225                                        Buff_TX[BTS++]=Net->HTTP.NetNodeSet[VSN].Value+48;
   \   00000678   0098               LDR      R0,[SP, #+0]
   \   0000067A   0B78               LDRB     R3,[R1, #+0]
   \   0000067C   4A78               LDRB     R2,[R1, #+1]
   \   0000067E   1206               LSLS     R2,R2,#+24
   \   00000680   1214               ASRS     R2,R2,#+16
   \   00000682   1343               ORRS     R3,R3,R2
   \   00000684   3033               ADDS     R3,R3,#+48
   \   00000686   2354               STRB     R3,[R4, R0]
   \   00000688   009F               LDR      R7,[SP, #+0]
   \   0000068A   7F1C               ADDS     R7,R7,#+1
   \   0000068C   3F04               LSLS     R7,R7,#+16
   \   0000068E   3F14               ASRS     R7,R7,#+16
   1226                                        Buff_TX[BTS++]=0xd;
   \   00000690   0CE6               B.N      ??HTTP_Query_13
   1227                                        Buff_TX[BTS++]=0xa;
   1228                                        ContentLength+=9;
   1229                                  break;
   1230                                  
   1231                                  case 'r':  //jezeli rejestr wejciowy wêz³a
   1232                                        
   1233                                        Buff_TX[BTS++]='r';
   \                     ??HTTP_Query_27:
   \   00000692   E055               STRB     R0,[R4, R7]
   \   00000694   7F1C               ADDS     R7,R7,#+1
   \   00000696   3F04               LSLS     R7,R7,#+16
   \   00000698   3F14               ASRS     R7,R7,#+16
   \   0000069A   0097               STR      R7,[SP, #+0]
   1234                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr/10)+48;
   \   0000069C   1098               LDR      R0,[SP, #+64]
   \   0000069E   4719               ADDS     R7,R0,R5
   \   000006A0   3E00               MOVS     R6,R7
   \   000006A2   F736               ADDS     R6,R6,#+247
   \   000006A4   3078               LDRB     R0,[R6, #+0]
   \   000006A6   0A21               MOVS     R1,#+10
   \   000006A8   ........           BL       __aeabi_idivmod
   \   000006AC   3030               ADDS     R0,R0,#+48
   \   000006AE   0099               LDR      R1,[SP, #+0]
   \   000006B0   6054               STRB     R0,[R4, R1]
   \   000006B2   009D               LDR      R5,[SP, #+0]
   \   000006B4   6D1C               ADDS     R5,R5,#+1
   \   000006B6   2D04               LSLS     R5,R5,#+16
   \   000006B8   2D14               ASRS     R5,R5,#+16
   1235                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].NodeNr%10)+48;
   \   000006BA   3078               LDRB     R0,[R6, #+0]
   \   000006BC   0A21               MOVS     R1,#+10
   \   000006BE   ........           BL       __aeabi_idivmod
   \   000006C2   3031               ADDS     R1,R1,#+48
   \   000006C4   6155               STRB     R1,[R4, R5]
   \   000006C6   6D1C               ADDS     R5,R5,#+1
   \   000006C8   2D04               LSLS     R5,R5,#+16
   \   000006CA   2D14               ASRS     R5,R5,#+16
   1236                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].RegNr/10)+48;
   \   000006CC   F837               ADDS     R7,R7,#+248
   \   000006CE   3878               LDRB     R0,[R7, #+0]
   \   000006D0   0A21               MOVS     R1,#+10
   \   000006D2   ........           BL       __aeabi_idivmod
   \   000006D6   3030               ADDS     R0,R0,#+48
   \   000006D8   6055               STRB     R0,[R4, R5]
   \   000006DA   6D1C               ADDS     R5,R5,#+1
   \   000006DC   2D04               LSLS     R5,R5,#+16
   \   000006DE   2D14               ASRS     R5,R5,#+16
   1237                                        Buff_TX[BTS++]=(Net->HTTP.NetNodeSet[VSN].RegNr%10)+48;
   \   000006E0   3878               LDRB     R0,[R7, #+0]
   \   000006E2   0A21               MOVS     R1,#+10
   \   000006E4   ........           BL       __aeabi_idivmod
   \   000006E8   3031               ADDS     R1,R1,#+48
   \   000006EA   6155               STRB     R1,[R4, R5]
   \   000006EC   6D1C               ADDS     R5,R5,#+1
   \   000006EE   2D04               LSLS     R5,R5,#+16
   \   000006F0   2D14               ASRS     R5,R5,#+16
   1238                                        Buff_TX[BTS++]=';';
   \   000006F2   3B20               MOVS     R0,#+59
   \   000006F4   6055               STRB     R0,[R4, R5]
   \   000006F6   6D1C               ADDS     R5,R5,#+1
   \   000006F8   2D04               LSLS     R5,R5,#+16
   \   000006FA   2D14               ASRS     R5,R5,#+16
   1239                                        
   1240                                        
   1241                                        if ((MainStage.StageI[Net->HTTP.NetNodeSet[VSN].NodeNr].Value[Net->HTTP.NetNodeSet[VSN].RegNr]==(signed short)0x8000) && (Net->HTTP.NetNodeSet[VSN].RegNr>0))
   \   000006FC   3078               LDRB     R0,[R6, #+0]
   \   000006FE   1621               MOVS     R1,#+22
   \   00000700   4843               MULS     R0,R1,R0
   \   00000702   3978               LDRB     R1,[R7, #+0]
   \   00000704   4900               LSLS     R1,R1,#+1
   \   00000706   039A               LDR      R2,[SP, #+12]
   \   00000708   5118               ADDS     R1,R2,R1
   \   0000070A   085E               LDRSH    R0,[R1, R0]
   \   0000070C   5149               LDR      R1,??HTTP_Query_31  ;; 0xffff8000
   \   0000070E   8842               CMP      R0,R1
   \   00000710   03D1               BNE      ??HTTP_Query_32
   \   00000712   3878               LDRB     R0,[R7, #+0]
   \   00000714   0028               CMP      R0,#+0
   \   00000716   00D0               BEQ      .+4
   \   00000718   6BE5               B        ??HTTP_Query_11
   1242                                        {
   1243                                           Buff_TX[BTS++]='B';
   1244                                           Buff_TX[BTS++]='A';
   1245                                           Buff_TX[BTS++]='T';
   1246                                        }else{  
   1247                                         
   1248                                          if ((VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr])>999)
   \                     ??HTTP_Query_32:
   \   0000071A   3078               LDRB     R0,[R6, #+0]
   \   0000071C   4000               LSLS     R0,R0,#+1
   \   0000071E   4E49               LDR      R1,??HTTP_Query_31+0x4  ;; VariablesAnal
   \   00000720   085E               LDRSH    R0,[R1, R0]
   \   00000722   FA21               MOVS     R1,#+250
   \   00000724   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   00000726   8842               CMP      R0,R1
   \   00000728   00DB               BLT      .+4
   \   0000072A   7AE5               B        ??HTTP_Query_15
   1249                                          {
   1250                                            Buff_TX[BTS++]='>';
   1251                                            Buff_TX[BTS++]='M';
   1252                                            Buff_TX[BTS++]='A';
   1253                                            Buff_TX[BTS++]='X';
   1254                                          }
   1255                                          else if ((VariablesAnal[Net->HTTP.NetNodeSet[VSN].VarNr])<-999)
   \   0000072C   3078               LDRB     R0,[R6, #+0]
   \   0000072E   4000               LSLS     R0,R0,#+1
   \   00000730   4949               LDR      R1,??HTTP_Query_31+0x4  ;; VariablesAnal
   \   00000732   085E               LDRSH    R0,[R1, R0]
   \   00000734   4949               LDR      R1,??HTTP_Query_31+0x8  ;; 0xfffffc19
   \   00000736   8842               CMP      R0,R1
   \   00000738   00DA               BGE      .+4
   \   0000073A   8AE5               B        ??HTTP_Query_17
   1256                                          {
   1257                                            Buff_TX[BTS++]='-';
   1258                                            Buff_TX[BTS++]='M';
   1259                                            Buff_TX[BTS++]='I';
   1260                                            Buff_TX[BTS++]='N';
   1261                                          }else{
   1262                                            ilLit=sIntToStr(MainStage.StageI[Net->HTTP.NetNodeSet[VSN].NodeNr].Value[Net->HTTP.NetNodeSet[VSN].RegNr],&Buff_TX[BTS]);
   \   0000073C   6119               ADDS     R1,R4,R5
   \   0000073E   3078               LDRB     R0,[R6, #+0]
   \   00000740   1622               MOVS     R2,#+22
   \   00000742   5043               MULS     R0,R2,R0
   \   00000744   3A78               LDRB     R2,[R7, #+0]
   \   00000746   5200               LSLS     R2,R2,#+1
   \   00000748   039B               LDR      R3,[SP, #+12]
   \   0000074A   9A18               ADDS     R2,R3,R2
   \   0000074C   105E               LDRSH    R0,[R2, R0]
   \   0000074E   ........           BL       sIntToStr
   1263                                            BTS+=ilLit;
   \   00000752   2F18               ADDS     R7,R5,R0
   \   00000754   3F04               LSLS     R7,R7,#+16
   \   00000756   3F14               ASRS     R7,R7,#+16
   1264             
   1265                                          for (char i=ilLit; i<4; i++) {Buff_TX[BTS++]=' ';}
   \   00000758   0100               MOVS     R1,R0
   \   0000075A   0428               CMP      R0,#+4
   \   0000075C   00D3               BCC      .+4
   \   0000075E   A5E5               B        ??HTTP_Query_13
   \                     ??HTTP_Query_33:
   \   00000760   0806               LSLS     R0,R1,#+24
   \   00000762   000E               LSRS     R0,R0,#+24
   \   00000764   0428               CMP      R0,#+4
   \   00000766   00D3               BCC      .+4
   \   00000768   A0E5               B        ??HTTP_Query_13
   \   0000076A   2020               MOVS     R0,#+32
   \   0000076C   E055               STRB     R0,[R4, R7]
   \   0000076E   7F1C               ADDS     R7,R7,#+1
   \   00000770   3F04               LSLS     R7,R7,#+16
   \   00000772   3F14               ASRS     R7,R7,#+16
   \   00000774   491C               ADDS     R1,R1,#+1
   \   00000776   F3E7               B        ??HTTP_Query_33
   \                     ??HTTP_Query_29:
   \   00000778   ........           DC32     DateTime + 3
   \   0000077C   ........           DC32     DateTime + 4
   1266                                          }
   1267                                        }
   1268                                        
   1269                                        Buff_TX[BTS++]=0xd;
   1270                                        Buff_TX[BTS++]=0xa;
   1271                                        ContentLength+=12;
   1272                                          
   1273                                  break;
   1274                                  
   1275                                }
   1276                              }
   1277                         
   1278                              ContentLength=BTS-NAG;
   1279                              
   1280                               Send=1;
   1281                              char LengthTxt[4];
   1282                              char IlLiczb=CharToStr(ContentLength,LengthTxt,3);    //(char Value, char *Vstring, char ill) 
   \                     ??HTTP_Query_21:
   \   00000780   0322               MOVS     R2,#+3
   \   00000782   09A9               ADD      R1,SP,#+36
   \   00000784   3800               MOVS     R0,R7
   \   00000786   089B               LDR      R3,[SP, #+32]
   \   00000788   C01A               SUBS     R0,R0,R3
   \   0000078A   0006               LSLS     R0,R0,#+24
   \   0000078C   000E               LSRS     R0,R0,#+24
   \   0000078E   ........           BL       CharToStr
   1283                              
   1284                              for (char i=0; i<IlLiczb; i++)
   \   00000792   0021               MOVS     R1,#+0
   \   00000794   0028               CMP      R0,#+0
   \   00000796   0AD0               BEQ      ??HTTP_Query_34
   1285                              {
   1286                                Buff_TX[PozLength+i]=LengthTxt[i];
   \                     ??HTTP_Query_35:
   \   00000798   6A46               MOV      R2,SP
   \   0000079A   127E               LDRB     R2,[R2, #+24]
   \   0000079C   5218               ADDS     R2,R2,R1
   \   0000079E   09AB               ADD      R3,SP,#+36
   \   000007A0   5B5C               LDRB     R3,[R3, R1]
   \   000007A2   A354               STRB     R3,[R4, R2]
   1287                              }
   \   000007A4   491C               ADDS     R1,R1,#+1
   \   000007A6   0A06               LSLS     R2,R1,#+24
   \   000007A8   120E               LSRS     R2,R2,#+24
   \   000007AA   8242               CMP      R2,R0
   \   000007AC   F4D3               BCC      ??HTTP_Query_35
   1288                              
   1289                    
   1290                            Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \                     ??HTTP_Query_34:
   \   000007AE   109D               LDR      R5,[SP, #+64]
   \   000007B0   1835               ADDS     R5,R5,#+24
   \   000007B2   2035               ADDS     R5,R5,#+32
   \   000007B4   2A48               LDR      R0,??HTTP_Query_31+0xC  ;; g_counter
   \   000007B6   0CC8               LDM      R0!,{R2,R3}
   \   000007B8   2A48               LDR      R0,??HTTP_Query_31+0x10  ;; 0x2710
   \   000007BA   0021               MOVS     R1,#+0
   \   000007BC   8018               ADDS     R0,R0,R2
   \   000007BE   5941               ADCS     R1,R1,R3
   \   000007C0   03C5               STM      R5!,{R0,R1}
   1291                      break;              
   1292                    }
   1293                     
   1294                      if (Send)
   1295                      {
   1296                        
   1297                        Buff_TX[BTS++]=0x1B;
   \                     ??HTTP_Query_6:
   \   000007C2   1B20               MOVS     R0,#+27
   \   000007C4   E055               STRB     R0,[R4, R7]
   \   000007C6   7F1C               ADDS     R7,R7,#+1
   \   000007C8   3F04               LSLS     R7,R7,#+16
   \   000007CA   3F14               ASRS     R7,R7,#+16
   1298                        Buff_TX[BTS++]='E';
   \   000007CC   4520               MOVS     R0,#+69
   \   000007CE   E055               STRB     R0,[R4, R7]
   \   000007D0   7F1C               ADDS     R7,R7,#+1
   \   000007D2   3F04               LSLS     R7,R7,#+16
   \   000007D4   3F14               ASRS     R7,R7,#+16
   1299                        for (short i=0; i<US1_BUFFER_Rx_SIZE; i++) Buff_RX[i]=0;
   \   000007D6   9121               MOVS     R1,#+145
   \   000007D8   8900               LSLS     R1,R1,#+2        ;; #+580
   \   000007DA   0E98               LDR      R0,[SP, #+56]
   \   000007DC   ........           BL       __aeabi_memclr
   1300                        if (Net->Status.HostLink==CONNECTED)
   \   000007E0   0498               LDR      R0,[SP, #+16]
   \   000007E2   0078               LDRB     R0,[R0, #+0]
   \   000007E4   0328               CMP      R0,#+3
   \   000007E6   27D1               BNE      ??HTTP_Query_36
   1301                        {
   1302                            
   1303                            Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000007E8   109D               LDR      R5,[SP, #+64]
   \   000007EA   1835               ADDS     R5,R5,#+24
   \   000007EC   1C4E               LDR      R6,??HTTP_Query_31+0xC  ;; g_counter
   \   000007EE   2A00               MOVS     R2,R5
   \   000007F0   2032               ADDS     R2,R2,#+32
   \   000007F2   9446               MOV      R12,R2
   \   000007F4   0CCE               LDM      R6!,{R2,R3}
   \   000007F6   083E               SUBS     R6,R6,#+8
   \   000007F8   1A48               LDR      R0,??HTTP_Query_31+0x10  ;; 0x2710
   \   000007FA   0021               MOVS     R1,#+0
   \   000007FC   8018               ADDS     R0,R0,R2
   \   000007FE   5941               ADCS     R1,R1,R3
   \   00000800   6246               MOV      R2,R12
   \   00000802   03C2               STM      R2!,{R0,R1}
   1304                            Net->Status.HttpNextQueryTime=g_counter+HTTP_QUERY_MAX_TIME;   //restart czasu pomiêdzy odpytaniami HTTP. Ustawienie Maksymalnego czasu na odpowied
   \   00000804   2A00               MOVS     R2,R5
   \   00000806   1832               ADDS     R2,R2,#+24
   \   00000808   9446               MOV      R12,R2
   \   0000080A   0CCE               LDM      R6!,{R2,R3}
   \   0000080C   083E               SUBS     R6,R6,#+8
   \   0000080E   1648               LDR      R0,??HTTP_Query_31+0x14  ;; 0x1388
   \   00000810   0021               MOVS     R1,#+0
   \   00000812   8018               ADDS     R0,R0,R2
   \   00000814   5941               ADCS     R1,R1,R3
   \   00000816   6246               MOV      R2,R12
   \   00000818   03C2               STM      R2!,{R0,R1}
   1305                            
   1306                            
   1307                            AT91F_US_SendFrame(USART,Buff_TX,BTS,0, 0);                        //Wysyla ramke 
                                                            ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000081A   82B0               SUB      SP,SP,#+8
   \   0000081C   0020               MOVS     R0,#+0
   \   0000081E   0090               STR      R0,[SP, #+0]
   \   00000820   0023               MOVS     R3,#+0
   \   00000822   3A00               MOVS     R2,R7
   \   00000824   2100               MOVS     R1,R4
   \   00000826   1198               LDR      R0,[SP, #+68]
   \   00000828   ........           BL       AT91F_US_SendFrame
   \   0000082C   02B0               ADD      SP,SP,#+8
   1308                            
   1309                            Net->Status.SendPacketTime=g_counter;
   \   0000082E   2A00               MOVS     R2,R5
   \   00000830   0832               ADDS     R2,R2,#+8
   \   00000832   03CE               LDM      R6!,{R0,R1}
   \   00000834   03C2               STM      R2!,{R0,R1}
   1310                            Net->Status.SendBytes=BTS;
   \   00000836   2F80               STRH     R7,[R5, #+0]
   1311                            
   1312                        }
   1313                        
   1314                        if (WiFiDebug) 
   \                     ??HTTP_Query_36:
   \   00000838   0C48               LDR      R0,??HTTP_Query_31+0x18  ;; WiFiDebug
   \   0000083A   0078               LDRB     R0,[R0, #+0]
   \   0000083C   0028               CMP      R0,#+0
   \   0000083E   04D0               BEQ      ??HTTP_Query_2
   1315                        {
   1316                          SendViaUSB(Buff_TX, BTS);
                                            ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"

             char *PozIlByte;
                   ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFiCommand.c",1039  Warning[Pe177]: 
          variable "PozIlByte" was declared but never referenced
   \   00000840   3904               LSLS     R1,R7,#+16
   \   00000842   090C               LSRS     R1,R1,#+16
   \   00000844   2000               MOVS     R0,R4
   \   00000846   ........           BL       SendViaUSB
   1317                          /*
   1318                          if (BTS>255)
   1319                          {
   1320                           SendViaUSB(Buff_TX, 255);
   1321                           //SendViaUSB(Buff_TX+255, BTS-255);
   1322                          }else{
   1323                           SendViaUSB(Buff_TX, BTS); 
   1324                          }
   1325                          */
   1326                        }
   1327                      }
   1328            
   1329          }
   \                     ??HTTP_Query_2:
   \   0000084A   11B0               ADD      SP,SP,#+68
   \   0000084C   F0BC               POP      {R4-R7}
   \   0000084E   01BC               POP      {R0}
   \   00000850   0047               BX       R0               ;; return
   \   00000852   C046               Nop      
   \                     ??HTTP_Query_31:
   \   00000854   0080FFFF           DC32     0xffff8000
   \   00000858   ........           DC32     VariablesAnal
   \   0000085C   19FCFFFF           DC32     0xfffffc19
   \   00000860   ........           DC32     g_counter
   \   00000864   10270000           DC32     0x2710
   \   00000868   88130000           DC32     0x1388
   \   0000086C   ........           DC32     WiFiDebug
   1330          
   1331          
   1332          
   1333            
   1334          
   1335          
   1336          
   1337          

   \                                 In section Debug.txt, align 4, keep-with-next
   1338          char HTTP_QueryResponse(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
   1339          {
   \                     HTTP_QueryResponse:
   \   00000000   F9B5               PUSH     {R0,R3-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   1340          
   1341                   char *pTxt;
   1342              
   1343                   //if (WiFiDebug) SendViaUSB(Buff_RX, 580); 
   1344                   
   1345                   if ((Buff_RX[3]=='H') && (Buff_RX[4]=='T')&& (Buff_RX[5]=='T') && (Buff_RX[6]=='P')  ) //(strstr(Buff_RX, "HTTP")!=NULL)
   \   00000004   C078               LDRB     R0,[R0, #+3]
   \   00000006   4828               CMP      R0,#+72
   \   00000008   00D0               BEQ      .+4
   \   0000000A   D5E0               B        ??HTTP_QueryResponse_0
   \   0000000C   0598               LDR      R0,[SP, #+20]
   \   0000000E   0079               LDRB     R0,[R0, #+4]
   \   00000010   5428               CMP      R0,#+84
   \   00000012   00D0               BEQ      .+4
   \   00000014   D0E0               B        ??HTTP_QueryResponse_0
   \   00000016   0598               LDR      R0,[SP, #+20]
   \   00000018   4079               LDRB     R0,[R0, #+5]
   \   0000001A   5428               CMP      R0,#+84
   \   0000001C   00D0               BEQ      .+4
   \   0000001E   CBE0               B        ??HTTP_QueryResponse_0
   \   00000020   0598               LDR      R0,[SP, #+20]
   \   00000022   8079               LDRB     R0,[R0, #+6]
   \   00000024   5028               CMP      R0,#+80
   \   00000026   00D0               BEQ      .+4
   \   00000028   C6E0               B        ??HTTP_QueryResponse_0
   1346                   {
   1347          
   1348                         Net->Status.ResPacketTime=g_counter;
   \   0000002A   1800               MOVS     R0,R3
   \   0000002C   2830               ADDS     R0,R0,#+40
   \   0000002E   0190               STR      R0,[SP, #+4]
   \   00000030   0200               MOVS     R2,R0
   \   00000032   C648               LDR      R0,??HTTP_QueryResponse_1  ;; g_counter
   \   00000034   03C8               LDM      R0!,{R0,R1}
   \   00000036   03C2               STM      R2!,{R0,R1}
   1349                        
   1350                         Net->Status.HttpNextQueryTime=g_counter+(Net->WiFi.HttpQueryPeriod*100); 
   \   00000038   069C               LDR      R4,[SP, #+24]
   \   0000003A   EE34               ADDS     R4,R4,#+238
   \   0000003C   019D               LDR      R5,[SP, #+4]
   \   0000003E   0835               ADDS     R5,R5,#+8
   \   00000040   C248               LDR      R0,??HTTP_QueryResponse_1  ;; g_counter
   \   00000042   0CC8               LDM      R0!,{R2,R3}
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   205E               LDRSH    R0,[R4, R0]
   \   00000048   6421               MOVS     R1,#+100
   \   0000004A   4843               MULS     R0,R1,R0
   \   0000004C   C117               ASRS     R1,R0,#+31
   \   0000004E   8018               ADDS     R0,R0,R2
   \   00000050   5941               ADCS     R1,R1,R3
   \   00000052   03C5               STM      R5!,{R0,R1}
   \   00000054   BE49               LDR      R1,??HTTP_QueryResponse_1+0x4  ;; `?<Constant "GET ">` + 80
   \   00000056   0598               LDR      R0,[SP, #+20]
   \   00000058   ........           BL       __iar_Strstr
   \   0000005C   0500               MOVS     R5,R0
   1351                         pTxt=strstr(Buff_RX, "\r\n\r\n");
   1352                         if ((pTxt!=NULL) && (strstr(Buff_RX, "OK")!=NULL))
   \   0000005E   00D1               BNE      .+4
   \   00000060   AAE0               B        ??HTTP_QueryResponse_0
   \   00000062   BCA1               ADR      R1,??HTTP_QueryResponse_1+0x8  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000064   0598               LDR      R0,[SP, #+20]
   \   00000066   ........           BL       __iar_Strstr
   \   0000006A   0028               CMP      R0,#+0
   \   0000006C   00D1               BNE      .+4
   \   0000006E   A3E0               B        ??HTTP_QueryResponse_0
   1353                         {  
   1354                           pTxt+=4;
   \   00000070   2D1D               ADDS     R5,R5,#+4
   1355                           switch (Net->Status.CurrentOrder)     
   \   00000072   0698               LDR      R0,[SP, #+24]
   \   00000074   401C               ADDS     R0,R0,#+1
   \   00000076   0290               STR      R0,[SP, #+8]
   \   00000078   4078               LDRB     R0,[R0, #+1]
   \   0000007A   1228               CMP      R0,#+18
   \   0000007C   00D1               BNE      .+4
   \   0000007E   9AE1               B        ??HTTP_QueryResponse_2
   \   00000080   1328               CMP      R0,#+19
   \   00000082   00D1               BNE      .+4
   \   00000084   9CE0               B        ??HTTP_QueryResponse_3
   \   00000086   1428               CMP      R0,#+20
   \   00000088   00D0               BEQ      .+4
   \   0000008A   80E0               B        ??HTTP_QueryResponse_4
   1356                                 {
   1357                                    case HTTP_GET_Config:
   1358                                         pTxt+=3;
   \   0000008C   ED1C               ADDS     R5,R5,#+3
   1359                                         Net->HTTP.VarSetCount=0;    
   \   0000008E   0026               MOVS     R6,#+0
   \   00000090   2671               STRB     R6,[R4, #+4]
   1360                                         for (char i=0; i<VAR_SET_AMOUNT; i++) {Net->HTTP.NetNodeSet[i].NetDataType=NO_Var;}  //wyczyszczenie tablicy 
   \   00000092   0698               LDR      R0,[SP, #+24]
   \   00000094   F630               ADDS     R0,R0,#+246
   \   00000096   0821               MOVS     R1,#+8
   \   00000098   0022               MOVS     R2,#+0
   \                     ??HTTP_QueryResponse_5:
   \   0000009A   0270               STRB     R2,[R0, #+0]
   \   0000009C   4271               STRB     R2,[R0, #+5]
   \   0000009E   8272               STRB     R2,[R0, #+10]
   \   000000A0   C273               STRB     R2,[R0, #+15]
   \   000000A2   0275               STRB     R2,[R0, #+20]
   \   000000A4   1930               ADDS     R0,R0,#+25
   \   000000A6   491E               SUBS     R1,R1,#+1
   \   000000A8   F7D1               BNE      ??HTTP_QueryResponse_5
   1361                                         //przepisanie konfiguracji do tabeli VarSet  
   1362                                          while (((pTxt[0]=='a') || (pTxt[0]=='b') || (pTxt[0]=='c') || (pTxt[0]=='d') || (pTxt[0]=='i') || (pTxt[0]=='q') || (pTxt[0]=='r')) && (Net->HTTP.VarSetCount<VAR_SET_AMOUNT))
   \                     ??HTTP_QueryResponse_6:
   \   000000AA   2878               LDRB     R0,[R5, #+0]
   \   000000AC   6128               CMP      R0,#+97
   \   000000AE   0BD0               BEQ      ??HTTP_QueryResponse_7
   \   000000B0   6228               CMP      R0,#+98
   \   000000B2   09D0               BEQ      ??HTTP_QueryResponse_7
   \   000000B4   6328               CMP      R0,#+99
   \   000000B6   07D0               BEQ      ??HTTP_QueryResponse_7
   \   000000B8   6428               CMP      R0,#+100
   \   000000BA   05D0               BEQ      ??HTTP_QueryResponse_7
   \   000000BC   6928               CMP      R0,#+105
   \   000000BE   03D0               BEQ      ??HTTP_QueryResponse_7
   \   000000C0   7128               CMP      R0,#+113
   \   000000C2   01D0               BEQ      ??HTTP_QueryResponse_7
   \   000000C4   7228               CMP      R0,#+114
   \   000000C6   44D1               BNE      ??HTTP_QueryResponse_8
   \                     ??HTTP_QueryResponse_7:
   \   000000C8   2179               LDRB     R1,[R4, #+4]
   \   000000CA   2829               CMP      R1,#+40
   \   000000CC   41D2               BCS      ??HTTP_QueryResponse_8
   1363                                          {
   1364                                             if ((pTxt[0]=='i') || (pTxt[0]=='q') || (pTxt[0]=='r'))  //je¿eli wejcie lub wyjcie wêz³a lub sensor
   \   000000CE   6928               CMP      R0,#+105
   \   000000D0   03D0               BEQ      ??HTTP_QueryResponse_9
   \   000000D2   7128               CMP      R0,#+113
   \   000000D4   01D0               BEQ      ??HTTP_QueryResponse_9
   \   000000D6   7228               CMP      R0,#+114
   \   000000D8   23D1               BNE      ??HTTP_QueryResponse_10
   1365                                             {
   1366                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].NetDataType=pTxt[0];
                                                                                                             ^
Warning[Pe188]: enumerated type mixed with another type
   \                     ??HTTP_QueryResponse_9:
   \   000000DA   0522               MOVS     R2,#+5
   \   000000DC   5143               MULS     R1,R2,R1
   \   000000DE   069A               LDR      R2,[SP, #+24]
   \   000000E0   5118               ADDS     R1,R2,R1
   \   000000E2   F631               ADDS     R1,R1,#+246
   \   000000E4   0870               STRB     R0,[R1, #+0]
   1367                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].NodeNr=(pTxt[1]-48)*10+(pTxt[2]-48);
   \   000000E6   2079               LDRB     R0,[R4, #+4]
   \   000000E8   0521               MOVS     R1,#+5
   \   000000EA   4843               MULS     R0,R1,R0
   \   000000EC   0699               LDR      R1,[SP, #+24]
   \   000000EE   0818               ADDS     R0,R1,R0
   \   000000F0   F730               ADDS     R0,R0,#+247
   \   000000F2   A978               LDRB     R1,[R5, #+2]
   \   000000F4   6A78               LDRB     R2,[R5, #+1]
   \   000000F6   0A23               MOVS     R3,#+10
   \   000000F8   5A43               MULS     R2,R3,R2
   \   000000FA   8918               ADDS     R1,R1,R2
   \   000000FC   1039               SUBS     R1,R1,#+16
   \   000000FE   0170               STRB     R1,[R0, #+0]
   1368                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].PortNr=(pTxt[3]-48)*10+(pTxt[4]-48);
   \   00000100   2079               LDRB     R0,[R4, #+4]
   \   00000102   0521               MOVS     R1,#+5
   \   00000104   4843               MULS     R0,R1,R0
   \   00000106   0699               LDR      R1,[SP, #+24]
   \   00000108   0818               ADDS     R0,R1,R0
   \   0000010A   F830               ADDS     R0,R0,#+248
   \   0000010C   2979               LDRB     R1,[R5, #+4]
   \   0000010E   EA78               LDRB     R2,[R5, #+3]
   \   00000110   5A43               MULS     R2,R3,R2
   \   00000112   8918               ADDS     R1,R1,R2
   \   00000114   1039               SUBS     R1,R1,#+16
   \   00000116   0170               STRB     R1,[R0, #+0]
   1369                                               Net->HTTP.VarSetCount++;
   \   00000118   2079               LDRB     R0,[R4, #+4]
   \   0000011A   401C               ADDS     R0,R0,#+1
   \   0000011C   2071               STRB     R0,[R4, #+4]
   1370                                               pTxt+=9;
   \   0000011E   0935               ADDS     R5,R5,#+9
   \   00000120   C3E7               B        ??HTTP_QueryResponse_6
   1371                                             }else{
   1372                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].NetDataType=pTxt[0];
                                                                                                             ^
Warning[Pe188]: enumerated type mixed with another type
   \                     ??HTTP_QueryResponse_10:
   \   00000122   0522               MOVS     R2,#+5
   \   00000124   5143               MULS     R1,R2,R1
   \   00000126   069A               LDR      R2,[SP, #+24]
   \   00000128   5118               ADDS     R1,R2,R1
   \   0000012A   F631               ADDS     R1,R1,#+246
   \   0000012C   0870               STRB     R0,[R1, #+0]
   1373                                               Net->HTTP.NetNodeSet[Net->HTTP.VarSetCount].VarNr=(pTxt[1]-48)*10+(pTxt[2]-48);
   \   0000012E   2079               LDRB     R0,[R4, #+4]
   \   00000130   0521               MOVS     R1,#+5
   \   00000132   4843               MULS     R0,R1,R0
   \   00000134   0699               LDR      R1,[SP, #+24]
   \   00000136   0818               ADDS     R0,R1,R0
   \   00000138   F730               ADDS     R0,R0,#+247
   \   0000013A   A978               LDRB     R1,[R5, #+2]
   \   0000013C   6A78               LDRB     R2,[R5, #+1]
   \   0000013E   0A23               MOVS     R3,#+10
   \   00000140   5A43               MULS     R2,R3,R2
   \   00000142   8918               ADDS     R1,R1,R2
   \   00000144   1039               SUBS     R1,R1,#+16
   \   00000146   0170               STRB     R1,[R0, #+0]
   1374                                               Net->HTTP.VarSetCount++;
   \   00000148   2079               LDRB     R0,[R4, #+4]
   \   0000014A   401C               ADDS     R0,R0,#+1
   \   0000014C   2071               STRB     R0,[R4, #+4]
   1375                                               pTxt+=7;
   \   0000014E   ED1D               ADDS     R5,R5,#+7
   \   00000150   ABE7               B        ??HTTP_QueryResponse_6
   1376                                             }
   1377                                          }
   1378          
   1379                                         for (char i=0; i<20; i++) Buff_RX[i]=0;
   \                     ??HTTP_QueryResponse_8:
   \   00000152   1421               MOVS     R1,#+20
   \   00000154   0598               LDR      R0,[SP, #+20]
   \   00000156   ........           BL       __aeabi_memclr
   1380                                         Net->Status.NextHttpOrder=HTTP_POST;
   \   0000015A   0298               LDR      R0,[SP, #+8]
   \   0000015C   1221               MOVS     R1,#+18
   \   0000015E   8170               STRB     R1,[R0, #+2]
   1381                                         Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   \   00000160   0298               LDR      R0,[SP, #+8]
   \   00000162   4670               STRB     R6,[R0, #+1]
   1382                                         Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000164   019E               LDR      R6,[SP, #+4]
   \   00000166   1036               ADDS     R6,R6,#+16
   \   00000168   7848               LDR      R0,??HTTP_QueryResponse_1  ;; g_counter
   \   0000016A   0CC8               LDM      R0!,{R2,R3}
   \   0000016C   9848               LDR      R0,??HTTP_QueryResponse_11  ;; 0x2710
   \   0000016E   0021               MOVS     R1,#+0
   \                     ??HTTP_QueryResponse_12:
   \   00000170   8018               ADDS     R0,R0,R2
   \   00000172   5941               ADCS     R1,R1,R3
   \   00000174   03C6               STM      R6!,{R0,R1}
   1383                                         Net->Status.HttpNextQueryTime=g_counter+(Net->WiFi.HttpQueryPeriod*100);   //restart czasu pomiêdzy odpytaniami HTTP.
   \   00000176   019E               LDR      R6,[SP, #+4]
   \   00000178   0836               ADDS     R6,R6,#+8
   \   0000017A   7448               LDR      R0,??HTTP_QueryResponse_1  ;; g_counter
   \   0000017C   03C8               LDM      R0!,{R0,R1}
   \   0000017E   0022               MOVS     R2,#+0
   \   00000180   A25E               LDRSH    R2,[R4, R2]
   \   00000182   6423               MOVS     R3,#+100
   \   00000184   5A43               MULS     R2,R3,R2
   \   00000186   D317               ASRS     R3,R2,#+31
   \   00000188   1218               ADDS     R2,R2,R0
   \   0000018A   4B41               ADCS     R3,R3,R1
   \   0000018C   0CC6               STM      R6!,{R2,R3}
   1384                                         
   1385                                    break; 
   1386                                    
   1387                                    case HTTP_GET: 
   1388                               
   1389                                          pTxt=pTxt;
   1390                                          char ZmType=0;
   1391                                          char ZmNr=0;      //numer zmiennej lub wêz³a
   1392                                          char PortNr=0;
   1393                                          char IlCyfr;
   1394                                          short int NNW=StrToWord(pTxt, &IlCyfr);         //numer najnowszego wpisu
   1395                                          short int NW=NNW;
   1396                                          pTxt+=IlCyfr+1;
   1397                                          ZmType=*pTxt; pTxt++;
   1398                                          ZmNr=(pTxt[0]-48)*10+pTxt[1]-48;
   1399                                          PortNr=(pTxt[2]-48)*10+pTxt[3]-48;
   1400                                          pTxt+=3;
   1401                                          while (((ZmType=='a') || (ZmType=='b') || (ZmType=='c') || (ZmType=='d') || (ZmType=='e') || (ZmType=='q')) && (NW>Net->HTTP.LastForseOrderNr) && (Net->HTTP.LastForseOrderNr!=0) )
   1402                                          {
   1403                                            switch (ZmType) 
   1404                                            {
   1405                                              case 'a': ////zmienne analogowe
   1406                                                  VariablesAnal[ZmNr]=StrToWord(pTxt, &IlCyfr);
   1407                                                  pTxt+=IlCyfr+2;
   1408                                              break;
   1409                                                
   1410                                              case 'b':  //zmienne dwustanowe 
   1411                                                   
   1412                                                if ((*pTxt=='1'))
   1413                                                 {
   1414                                                   Variables[ZmNr/8] |= 1<<(ZmNr%8);
   1415                                                 }
   1416                                                else if ((*pTxt=='2'))
   1417                                                 {
   1418                                                   Variables[ZmNr/8] |= 1<<(ZmNr%8);
   1419                                                   VariablesImpulse[ZmNr/8] |= 1<<(ZmNr%8);
   1420                                                 }
   1421                                                 else
   1422                                                 { 
   1423                                                   Variables[ZmNr/8]&= ~(1<<(ZmNr%8));
   1424                                                 }
   1425                                                   pTxt+=3;
   1426                                              break;  
   1427                                              
   1428                                              case 'c': //zmienne specjalne analogowe
   1429                       
   1430                                                  pTxt+=IlCyfr+2;
   1431                                              break;
   1432                                                
   1433                                              case 'd': //zmienne specjalne dwustanowe
   1434                                                   if (*pTxt=='0') SetSpecialBinarVar(ZmNr, 0, Net); else SetSpecialBinarVar(ZmNr, 1, Net);   
   1435                                                   pTxt+=3;
   1436                                              break;
   1437                                              
   1438                                              case 'e': //konfiguracja
   1439                                                if (ZmNr==1)    //serwer ¿¹da pobrania nowej konfiguracji 
   1440                                                  {
   1441                                                    if (*pTxt=='0') Net->Status.NextHttpOrder=HTTP_GET_Config;
   1442                                                  }                               
   1443                                                   pTxt+=3;
   1444                                              break;
   1445                                              
   1446                                              case 'q':  //zmienne dwustanowe 
   1447                                                pTxt+=2;   
   1448                                                if ((*pTxt=='1'))
   1449                                                 {
   1450                                                    PortStageSet((&(MainStage.StageQ[ZmNr].Port)),PortNr,1);
                                                                        ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   1451                                                 } 
   1452                                                else if ((*pTxt=='2'))
   1453                                                 {
   1454                                                    PortStageSet((&(MainStage.StageQ[ZmNr].Port)),PortNr,1);
                                                                        ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   1455                                                    PortStageSet((&(MainStage.StageQImpulse[ZmNr])),PortNr,1);   //ustawienie flagi impuls
                                                                        ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"
   1456                                                 }
   1457                                                 else
   1458                                                 { 
   1459                                                    PortStageSet((&(MainStage.StageQ[ZmNr].Port)),PortNr,0);
                                                                        ^
Warning[Pe167]: argument of type "unsigned short *" is incompatible with
          parameter of type "short *"

                   switch (Net->Status.CurrentOrder)     
                   ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\WizFiCommand.c",1355  Warning[Pe546]: 
          transfer of control bypasses initialization of:
            variable "ZmType" (declared at line 1390 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
            variable "ZmNr" (declared at line 1391 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
            variable "PortNr" (declared at line 1392 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
            variable "NNW" (declared at line 1394 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
            variable "NW" (declared at line 1395 of
                      "D:\Zeuron\Projekty\S300\S300-program v1.4 -
                      12.06.2013\Framework\WizFiCommand.c")
   1460                                                 }
   1461                                                 if (TransQuality.Mensur[ZmNr-1]>0)  MainStage.SendStageChange[ZmNr]=ChangeStageFlag;
   1462                                                 pTxt+=3;
   1463                                              break;  
   1464                                            }
   1465                                            
   1466                                            
   1467                                            NW=StrToWord(pTxt, &IlCyfr);
   1468                                            pTxt+=IlCyfr+1;
   1469                                            ZmType=*pTxt; pTxt++;
   1470                                            ZmNr=(pTxt[0]-48)*10+pTxt[1]-48;
   1471                                            PortNr=(pTxt[2]-48)*10+pTxt[2]-48;
   1472                                            pTxt+=3;
   1473                                          
   1474                                        }
   1475                                        
   1476                                        if (NNW>Net->HTTP.LastForseOrderNr) 
   1477                                        {
   1478                                          Net->HTTP.LastForseOrderNr=NNW;
   1479                                        }else if ((NNW==0) && (Net->HTTP.LastForseOrderNr>0))
   1480                                        {
   1481                                          Net->HTTP.LastForseOrderNr=0;
   1482                                          Net->Status.NextHttpOrder=HTTP_GET_Config;
   1483                                        }
   1484                                       
   1485                                        for (char i=0; i<20; i++) Buff_RX[i]=0;
   1486                                        Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   1487                                        Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   1488                                        Net->Status.HttpNextQueryTime=g_counter+(Net->WiFi.HttpQueryPeriod*100);   //restart czasu pomiêdzy odpytaniami HTTP.
   1489                                    break; 
   1490                                    
   1491                                    case HTTP_POST:
   1492          
   1493                                        for (char i=0; i<20; i++) Buff_RX[i]=0;
   1494                                        Net->Status.CurrentOrder=WizFi_NC;     //wyczyszczenie rozkazów
   1495                                        Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   1496                                        Net->Status.HttpNextQueryTime=g_counter+(Net->WiFi.HttpQueryPeriod*100);   //restart czasu pomiêdzy odpytaniami HTTP.
   1497                                   break;
   1498                                   
   1499                                   
   1500                               } //koniec switch (Net->Status.CurrentOrder)
   1501                           
   1502                            
   1503                              //Zg³oszone zamkniête po³¹czenie
   1504                           
   1505                              if ((strstr(Buff_RX, "Connection: close")!=NULL) /*&& (Net->Status.HostLink==CONNECTED)*/) 
   \                     ??HTTP_QueryResponse_4:
   \   0000018E   9149               LDR      R1,??HTTP_QueryResponse_11+0x4  ;; `?<Constant "GET ">` + 256
   \   00000190   0598               LDR      R0,[SP, #+20]
   \   00000192   ........           BL       __iar_Strstr
   \   00000196   0028               CMP      R0,#+0
   \   00000198   0AD0               BEQ      ??HTTP_QueryResponse_13
   1506                              {
   1507                                Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   0000019A   019A               LDR      R2,[SP, #+4]
   \   0000019C   1832               ADDS     R2,R2,#+24
   \   0000019E   6B48               LDR      R0,??HTTP_QueryResponse_1  ;; g_counter
   \   000001A0   03C8               LDM      R0!,{R0,R1}
   \   000001A2   0023               MOVS     R3,#+0
   \   000001A4   3230               ADDS     R0,R0,#+50
   \   000001A6   5941               ADCS     R1,R1,R3
   \   000001A8   03C2               STM      R2!,{R0,R1}
   1508                                 Net->Status.HostLink=DISCONNECTING;                             //Roz³¹czenie
   \   000001AA   0298               LDR      R0,[SP, #+8]
   \   000001AC   0121               MOVS     R1,#+1
   \   000001AE   0170               STRB     R1,[R0, #+0]
   1509                              }
   1510                          
   1511                           
   1512                           
   1513                           Net->Status.ResBytes=(int)pTxt -(int)Buff_RX;
   \                     ??HTTP_QueryResponse_13:
   \   000001B0   0698               LDR      R0,[SP, #+24]
   \   000001B2   0599               LDR      R1,[SP, #+20]
   \   000001B4   691A               SUBS     R1,R5,R1
   \   000001B6   4183               STRH     R1,[R0, #+26]
   1514                         } //koniec if(pTxt!=NULL)
   1515                         
   1516          
   1517                   
   1518                   } 
   1519                   
   1520                
   1521            
   1522          }
                 ^
Warning[Pe940]: missing return statement at end of non-void function
          "HTTP_QueryResponse"
   \                     ??HTTP_QueryResponse_0:
   \   000001B8   07B0               ADD      SP,SP,#+28
   \   000001BA   F0BC               POP      {R4-R7}
   \   000001BC   01BC               POP      {R0}
   \   000001BE   0047               BX       R0               ;; return
   \                     ??HTTP_QueryResponse_3:
   \   000001C0   6946               MOV      R1,SP
   \   000001C2   2800               MOVS     R0,R5
   \   000001C4   ........           BL       StrToWord
   \   000001C8   6946               MOV      R1,SP
   \   000001CA   4880               STRH     R0,[R1, #+2]
   \   000001CC   0220               MOVS     R0,#+2
   \   000001CE   085E               LDRSH    R0,[R1, R0]
   \   000001D0   0978               LDRB     R1,[R1, #+0]
   \   000001D2   6D18               ADDS     R5,R5,R1
   \   000001D4   6978               LDRB     R1,[R5, #+1]
   \   000001D6   AD1C               ADDS     R5,R5,#+2
   \   000001D8   2A78               LDRB     R2,[R5, #+0]
   \   000001DA   0A23               MOVS     R3,#+10
   \   000001DC   5A43               MULS     R2,R3,R2
   \   000001DE   6B78               LDRB     R3,[R5, #+1]
   \   000001E0   D718               ADDS     R7,R2,R3
   \   000001E2   103F               SUBS     R7,R7,#+16
   \   000001E4   AA78               LDRB     R2,[R5, #+2]
   \   000001E6   0A23               MOVS     R3,#+10
   \   000001E8   5A43               MULS     R2,R3,R2
   \   000001EA   EB78               LDRB     R3,[R5, #+3]
   \   000001EC   D618               ADDS     R6,R2,R3
   \   000001EE   103E               SUBS     R6,R6,#+16
   \   000001F0   ED1C               ADDS     R5,R5,#+3
   \   000001F2   794A               LDR      R2,??HTTP_QueryResponse_11+0x8  ;; MainStage + 1771
   \   000001F4   0392               STR      R2,[SP, #+12]
   \   000001F6   794A               LDR      R2,??HTTP_QueryResponse_11+0xC  ;; MainStage + 1700
   \   000001F8   0492               STR      R2,[SP, #+16]
   \   000001FA   1FE0               B        ??HTTP_QueryResponse_14
   \                     ??HTTP_QueryResponse_15:
   \   000001FC   6946               MOV      R1,SP
   \   000001FE   2800               MOVS     R0,R5
   \   00000200   ........           BL       StrToWord
   \   00000204   3F06               LSLS     R7,R7,#+24
   \   00000206   F90D               LSRS     R1,R7,#+23
   \   00000208   754A               LDR      R2,??HTTP_QueryResponse_11+0x10  ;; VariablesAnal
   \   0000020A   5052               STRH     R0,[R2, R1]
   \                     ??HTTP_QueryResponse_16:
   \   0000020C   6846               MOV      R0,SP
   \   0000020E   0078               LDRB     R0,[R0, #+0]
   \   00000210   2D18               ADDS     R5,R5,R0
   \   00000212   AD1C               ADDS     R5,R5,#+2
   \                     ??HTTP_QueryResponse_17:
   \   00000214   6946               MOV      R1,SP
   \   00000216   2800               MOVS     R0,R5
   \   00000218   ........           BL       StrToWord
   \   0000021C   6946               MOV      R1,SP
   \   0000021E   0978               LDRB     R1,[R1, #+0]
   \   00000220   6D18               ADDS     R5,R5,R1
   \   00000222   6978               LDRB     R1,[R5, #+1]
   \   00000224   AD1C               ADDS     R5,R5,#+2
   \   00000226   6A78               LDRB     R2,[R5, #+1]
   \   00000228   2B78               LDRB     R3,[R5, #+0]
   \   0000022A   0A26               MOVS     R6,#+10
   \   0000022C   7343               MULS     R3,R6,R3
   \   0000022E   D718               ADDS     R7,R2,R3
   \   00000230   103F               SUBS     R7,R7,#+16
   \   00000232   AE78               LDRB     R6,[R5, #+2]
   \   00000234   0B22               MOVS     R2,#+11
   \   00000236   5643               MULS     R6,R2,R6
   \   00000238   103E               SUBS     R6,R6,#+16
   \   0000023A   ED1C               ADDS     R5,R5,#+3
   \                     ??HTTP_QueryResponse_14:
   \   0000023C   6129               CMP      R1,#+97
   \   0000023E   0AD0               BEQ      ??HTTP_QueryResponse_18
   \   00000240   6229               CMP      R1,#+98
   \   00000242   08D0               BEQ      ??HTTP_QueryResponse_18
   \   00000244   6329               CMP      R1,#+99
   \   00000246   06D0               BEQ      ??HTTP_QueryResponse_18
   \   00000248   6429               CMP      R1,#+100
   \   0000024A   04D0               BEQ      ??HTTP_QueryResponse_18
   \   0000024C   6529               CMP      R1,#+101
   \   0000024E   02D0               BEQ      ??HTTP_QueryResponse_18
   \   00000250   7129               CMP      R1,#+113
   \   00000252   00D0               BEQ      .+4
   \   00000254   96E0               B        ??HTTP_QueryResponse_19
   \                     ??HTTP_QueryResponse_18:
   \   00000256   0622               MOVS     R2,#+6
   \   00000258   A25E               LDRSH    R2,[R4, R2]
   \   0000025A   8242               CMP      R2,R0
   \   0000025C   00DB               BLT      .+4
   \   0000025E   91E0               B        ??HTTP_QueryResponse_19
   \   00000260   002A               CMP      R2,#+0
   \   00000262   00D1               BNE      .+4
   \   00000264   8EE0               B        ??HTTP_QueryResponse_19
   \   00000266   6129               CMP      R1,#+97
   \   00000268   C8D0               BEQ      ??HTTP_QueryResponse_15
   \   0000026A   6229               CMP      R1,#+98
   \   0000026C   08D0               BEQ      ??HTTP_QueryResponse_20
   \   0000026E   6329               CMP      R1,#+99
   \   00000270   CCD0               BEQ      ??HTTP_QueryResponse_16
   \   00000272   6429               CMP      R1,#+100
   \   00000274   38D0               BEQ      ??HTTP_QueryResponse_21
   \   00000276   6529               CMP      R1,#+101
   \   00000278   42D0               BEQ      ??HTTP_QueryResponse_22
   \   0000027A   7129               CMP      R1,#+113
   \   0000027C   4BD0               BEQ      ??HTTP_QueryResponse_23
   \   0000027E   C9E7               B        ??HTTP_QueryResponse_17
   \                     ??HTTP_QueryResponse_20:
   \   00000280   2878               LDRB     R0,[R5, #+0]
   \   00000282   3128               CMP      R0,#+49
   \   00000284   0DD1               BNE      ??HTTP_QueryResponse_24
   \   00000286   3F06               LSLS     R7,R7,#+24
   \   00000288   3F0E               LSRS     R7,R7,#+24
   \   0000028A   FA10               ASRS     R2,R7,#+3
   \   0000028C   5548               LDR      R0,??HTTP_QueryResponse_11+0x14  ;; Variables
   \   0000028E   8018               ADDS     R0,R0,R2
   \   00000290   0178               LDRB     R1,[R0, #+0]
   \   00000292   0122               MOVS     R2,#+1
   \   00000294   FB08               LSRS     R3,R7,#+3
   \   00000296   DB00               LSLS     R3,R3,#+3
   \   00000298   FB1A               SUBS     R3,R7,R3
   \   0000029A   9A40               LSLS     R2,R2,R3
   \   0000029C   0A43               ORRS     R2,R2,R1
   \   0000029E   0270               STRB     R2,[R0, #+0]
   \   000002A0   20E0               B        ??HTTP_QueryResponse_25
   \                     ??HTTP_QueryResponse_24:
   \   000002A2   3228               CMP      R0,#+50
   \   000002A4   11D1               BNE      ??HTTP_QueryResponse_26
   \   000002A6   3F06               LSLS     R7,R7,#+24
   \   000002A8   3F0E               LSRS     R7,R7,#+24
   \   000002AA   0121               MOVS     R1,#+1
   \   000002AC   F808               LSRS     R0,R7,#+3
   \   000002AE   C000               LSLS     R0,R0,#+3
   \   000002B0   381A               SUBS     R0,R7,R0
   \   000002B2   8140               LSLS     R1,R1,R0
   \   000002B4   FA10               ASRS     R2,R7,#+3
   \   000002B6   4B48               LDR      R0,??HTTP_QueryResponse_11+0x14  ;; Variables
   \   000002B8   8018               ADDS     R0,R0,R2
   \   000002BA   0378               LDRB     R3,[R0, #+0]
   \   000002BC   0B43               ORRS     R3,R3,R1
   \   000002BE   0370               STRB     R3,[R0, #+0]
   \   000002C0   4948               LDR      R0,??HTTP_QueryResponse_11+0x18  ;; VariablesImpulse
   \   000002C2   8018               ADDS     R0,R0,R2
   \   000002C4   0278               LDRB     R2,[R0, #+0]
   \   000002C6   1143               ORRS     R1,R1,R2
   \   000002C8   0BE0               B.N      ??HTTP_QueryResponse_27
   \                     ??HTTP_QueryResponse_26:
   \   000002CA   3F06               LSLS     R7,R7,#+24
   \   000002CC   3F0E               LSRS     R7,R7,#+24
   \   000002CE   FA10               ASRS     R2,R7,#+3
   \   000002D0   4448               LDR      R0,??HTTP_QueryResponse_11+0x14  ;; Variables
   \   000002D2   8018               ADDS     R0,R0,R2
   \   000002D4   0178               LDRB     R1,[R0, #+0]
   \   000002D6   0122               MOVS     R2,#+1
   \   000002D8   FB08               LSRS     R3,R7,#+3
   \   000002DA   DB00               LSLS     R3,R3,#+3
   \   000002DC   FB1A               SUBS     R3,R7,R3
   \   000002DE   9A40               LSLS     R2,R2,R3
   \   000002E0   9143               BICS     R1,R1,R2
   \                     ??HTTP_QueryResponse_27:
   \   000002E2   0170               STRB     R1,[R0, #+0]
   \                     ??HTTP_QueryResponse_25:
   \   000002E4   ED1C               ADDS     R5,R5,#+3
   \   000002E6   95E7               B        ??HTTP_QueryResponse_17
   \                     ??HTTP_QueryResponse_21:
   \   000002E8   2878               LDRB     R0,[R5, #+0]
   \   000002EA   3028               CMP      R0,#+48
   \   000002EC   069A               LDR      R2,[SP, #+24]
   \   000002EE   05D1               BNE      ??HTTP_QueryResponse_28
   \   000002F0   0021               MOVS     R1,#+0
   \                     ??HTTP_QueryResponse_29:
   \   000002F2   3806               LSLS     R0,R7,#+24
   \   000002F4   000E               LSRS     R0,R0,#+24
   \   000002F6   ........           BL       SetSpecialBinarVar
   \   000002FA   F3E7               B        ??HTTP_QueryResponse_25
   \                     ??HTTP_QueryResponse_28:
   \   000002FC   0121               MOVS     R1,#+1
   \   000002FE   F8E7               B.N      ??HTTP_QueryResponse_29
   \                     ??HTTP_QueryResponse_22:
   \   00000300   3F06               LSLS     R7,R7,#+24
   \   00000302   3F0E               LSRS     R7,R7,#+24
   \   00000304   012F               CMP      R7,#+1
   \   00000306   EDD1               BNE      ??HTTP_QueryResponse_25
   \   00000308   2878               LDRB     R0,[R5, #+0]
   \   0000030A   3028               CMP      R0,#+48
   \   0000030C   EAD1               BNE      ??HTTP_QueryResponse_25
   \   0000030E   0298               LDR      R0,[SP, #+8]
   \   00000310   1421               MOVS     R1,#+20
   \   00000312   8170               STRB     R1,[R0, #+2]
   \   00000314   E6E7               B        ??HTTP_QueryResponse_25
   \                     ??HTTP_QueryResponse_23:
   \   00000316   AD1C               ADDS     R5,R5,#+2
   \   00000318   2878               LDRB     R0,[R5, #+0]
   \   0000031A   3128               CMP      R0,#+49
   \   0000031C   01D1               BNE      ??HTTP_QueryResponse_30
   \   0000031E   0122               MOVS     R2,#+1
   \   00000320   1BE0               B.N      ??HTTP_QueryResponse_31
   \                     ??HTTP_QueryResponse_30:
   \   00000322   3228               CMP      R0,#+50
   \   00000324   18D1               BNE      ??HTTP_QueryResponse_32
   \   00000326   3F06               LSLS     R7,R7,#+24
   \   00000328   3F0E               LSRS     R7,R7,#+24
   \   0000032A   0122               MOVS     R2,#+1
   \   0000032C   3306               LSLS     R3,R6,#+24
   \   0000032E   1B0E               LSRS     R3,R3,#+24
   \   00000330   1621               MOVS     R1,#+22
   \   00000332   7943               MULS     R1,R7,R1
   \   00000334   2D48               LDR      R0,??HTTP_QueryResponse_11+0x1C  ;; MainStage + 930
   \   00000336   4018               ADDS     R0,R0,R1
   \   00000338   1900               MOVS     R1,R3
   \   0000033A   ........           BL       PortStageSet
   \   0000033E   0122               MOVS     R2,#+1
   \   00000340   3106               LSLS     R1,R6,#+24
   \   00000342   090E               LSRS     R1,R1,#+24
   \   00000344   7800               LSLS     R0,R7,#+1
   \   00000346   049B               LDR      R3,[SP, #+16]
   \   00000348   0EE0               B.N      ??HTTP_QueryResponse_33
   \   0000034A   C046               Nop      
   \                     ??HTTP_QueryResponse_1:
   \   0000034C   ........           DC32     g_counter
   \   00000350   ........           DC32     `?<Constant "GET ">` + 80
   \   00000354   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \                     ??HTTP_QueryResponse_32:
   \   00000358   0022               MOVS     R2,#+0
   \                     ??HTTP_QueryResponse_31:
   \   0000035A   3106               LSLS     R1,R6,#+24
   \   0000035C   090E               LSRS     R1,R1,#+24
   \   0000035E   3F06               LSLS     R7,R7,#+24
   \   00000360   3F0E               LSRS     R7,R7,#+24
   \   00000362   1620               MOVS     R0,#+22
   \   00000364   7843               MULS     R0,R7,R0
   \   00000366   214B               LDR      R3,??HTTP_QueryResponse_11+0x1C  ;; MainStage + 930
   \                     ??HTTP_QueryResponse_33:
   \   00000368   1818               ADDS     R0,R3,R0
   \   0000036A   ........           BL       PortStageSet
   \   0000036E   B800               LSLS     R0,R7,#+2
   \   00000370   1F49               LDR      R1,??HTTP_QueryResponse_11+0x20  ;; TransQuality
   \   00000372   0818               ADDS     R0,R1,R0
   \   00000374   806C               LDR      R0,[R0, #+72]
   \   00000376   0028               CMP      R0,#+0
   \   00000378   B4D0               BEQ      ??HTTP_QueryResponse_25
   \   0000037A   0398               LDR      R0,[SP, #+12]
   \   0000037C   1D49               LDR      R1,??HTTP_QueryResponse_11+0x24  ;; ChangeStageFlag
   \   0000037E   0978               LDRB     R1,[R1, #+0]
   \   00000380   C155               STRB     R1,[R0, R7]
   \   00000382   AFE7               B        ??HTTP_QueryResponse_25
   \                     ??HTTP_QueryResponse_19:
   \   00000384   0620               MOVS     R0,#+6
   \   00000386   205E               LDRSH    R0,[R4, R0]
   \   00000388   6A46               MOV      R2,SP
   \   0000038A   0221               MOVS     R1,#+2
   \   0000038C   515E               LDRSH    R1,[R2, R1]
   \   0000038E   8842               CMP      R0,R1
   \   00000390   03DA               BGE      ??HTTP_QueryResponse_34
   \   00000392   6846               MOV      R0,SP
   \   00000394   4088               LDRH     R0,[R0, #+2]
   \   00000396   E080               STRH     R0,[R4, #+6]
   \   00000398   0DE0               B        ??HTTP_QueryResponse_2
   \                     ??HTTP_QueryResponse_34:
   \   0000039A   6946               MOV      R1,SP
   \   0000039C   0220               MOVS     R0,#+2
   \   0000039E   085E               LDRSH    R0,[R1, R0]
   \   000003A0   0028               CMP      R0,#+0
   \   000003A2   08D1               BNE      ??HTTP_QueryResponse_2
   \   000003A4   0620               MOVS     R0,#+6
   \   000003A6   205E               LDRSH    R0,[R4, R0]
   \   000003A8   0128               CMP      R0,#+1
   \   000003AA   04DB               BLT      ??HTTP_QueryResponse_2
   \   000003AC   0020               MOVS     R0,#+0
   \   000003AE   E080               STRH     R0,[R4, #+6]
   \   000003B0   0298               LDR      R0,[SP, #+8]
   \   000003B2   1421               MOVS     R1,#+20
   \   000003B4   8170               STRB     R1,[R0, #+2]
   \                     ??HTTP_QueryResponse_2:
   \   000003B6   1421               MOVS     R1,#+20
   \   000003B8   0598               LDR      R0,[SP, #+20]
   \   000003BA   ........           BL       __aeabi_memclr
   \   000003BE   0298               LDR      R0,[SP, #+8]
   \   000003C0   0021               MOVS     R1,#+0
   \   000003C2   4170               STRB     R1,[R0, #+1]
   \   000003C4   019E               LDR      R6,[SP, #+4]
   \   000003C6   1036               ADDS     R6,R6,#+16
   \   000003C8   0B48               LDR      R0,??HTTP_QueryResponse_11+0x28  ;; g_counter
   \   000003CA   0CC8               LDM      R0!,{R2,R3}
   \   000003CC   0048               LDR      R0,??HTTP_QueryResponse_11  ;; 0x2710
   \   000003CE   CFE6               B.N      ??HTTP_QueryResponse_12
   \                     ??HTTP_QueryResponse_11:
   \   000003D0   10270000           DC32     0x2710
   \   000003D4   ........           DC32     `?<Constant "GET ">` + 256
   \   000003D8   ........           DC32     MainStage + 1771
   \   000003DC   ........           DC32     MainStage + 1700
   \   000003E0   ........           DC32     VariablesAnal
   \   000003E4   ........           DC32     Variables
   \   000003E8   ........           DC32     VariablesImpulse
   \   000003EC   ........           DC32     MainStage + 930
   \   000003F0   ........           DC32     TransQuality
   \   000003F4   ........           DC32     ChangeStageFlag
   \   000003F8   ........           DC32     g_counter
   1523          
   1524          
   1525          

   \                                 In section Debug.txt, align 4, keep-with-next
   1526          void HTTP_CheckConnection(char *Buff_TX, AT91PS_USART USART, _Net *Net)
   1527          {
   \                     HTTP_CheckConnection:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0E00               MOVS     R6,R1
   \   00000004   1400               MOVS     R4,R2
   1528             Net->Status.FreezTime=g_counter+FREEZ_TIME; //rezerwowanie czasu
   \   00000006   ....               LDR      R5,??DataTable25  ;; g_counter
   \   00000008   03CD               LDM      R5!,{R0,R1}
   \   0000000A   083D               SUBS     R5,R5,#+8
   \   0000000C   0022               MOVS     R2,#+0
   \   0000000E   3230               ADDS     R0,R0,#+50
   \   00000010   5141               ADCS     R1,R1,R2
   \   00000012   2064               STR      R0,[R4, #+64]
   \   00000014   6164               STR      R1,[R4, #+68]
   1529             Net->Status.CurrentOrder=WizFi_AT_CID;     
   \   00000016   1120               MOVS     R0,#+17
   \   00000018   A070               STRB     R0,[R4, #+2]
   1530             AT91F_US_SendFrame(USART,(char*)AT_CID,sizeof(AT_CID)-1,0, 0);                        //Wysyla ramke  
                                             ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   0000001A   82B0               SUB      SP,SP,#+8
   \   0000001C   0092               STR      R2,[SP, #+0]
   \   0000001E   0023               MOVS     R3,#+0
   \   00000020   0922               MOVS     R2,#+9
   \   00000022   ....               LDR      R1,??Subroutine0_1  ;; AT_CID
   \   00000024   3000               MOVS     R0,R6
   \   00000026   ........           BL       AT91F_US_SendFrame
   \   0000002A   02B0               ADD      SP,SP,#+8
   1531             Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   0000002C   3834               ADDS     R4,R4,#+56
   \   0000002E   0CCD               LDM      R5!,{R2,R3}
   \   00000030                      REQUIRE ?Subroutine0
   \   00000030                      ;; // Fall through to label ?Subroutine0
   1532             
   1533          }
   1534          

   \                                 In section Debug.txt, align 4, keep-with-next
   1535          char HTTP_CheckConnectionResponse(char *Buff_RX, char *Buff_TX, AT91PS_USART USART, _Net *Net)
   1536          {
   \                     HTTP_CheckConnectionResponse:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   1D00               MOVS     R5,R3
   1537             char odp=0;
   \   00000006   0026               MOVS     R6,#+0
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0670               STRB     R6,[R0, #+0]
   1538          
   1539          
   1540                  if ((strstr(Buff_RX, "[ERROR")!=NULL) || (strstr(Buff_RX, "No valid Cids")!=NULL))    //((Buff_RX, "[ERROR")!=NULL) ||       strstr(Buff_RX, "No valid Cids")!=NULL)
   \   0000000C   ....               LDR      R7,??Subroutine3_1  ;; AT_NCLOSE
   \   0000000E   3900               MOVS     R1,R7
   \   00000010   2031               ADDS     R1,R1,#+32
   \   00000012   2000               MOVS     R0,R4
   \   00000014   ........           BL       __iar_Strstr
   \   00000018   0028               CMP      R0,#+0
   \   0000001A   06D1               BNE      ??HTTP_CheckConnectionResponse_0
   \   0000001C   2837               ADDS     R7,R7,#+40
   \   0000001E   3900               MOVS     R1,R7
   \   00000020   2000               MOVS     R0,R4
   \   00000022   ........           BL       __iar_Strstr
   \   00000026   0028               CMP      R0,#+0
   \   00000028   11D0               BEQ      ??HTTP_CheckConnectionResponse_1
   1541                  {
   1542                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \                     ??HTTP_CheckConnectionResponse_0:
   \   0000002A   3221               MOVS     R1,#+50
   \   0000002C   2000               MOVS     R0,R4
   \   0000002E   ........           BL       __aeabi_memclr
   1543                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000032   2C00               MOVS     R4,R5
   \   00000034   3834               ADDS     R4,R4,#+56
   \   00000036   ....               LDR      R0,??DataTable25  ;; g_counter
   \   00000038   0CC8               LDM      R0!,{R2,R3}
   \   0000003A   ....               LDR      R0,??DataTable26  ;; 0x2710
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   8018               ADDS     R0,R0,R2
   \   00000040   5941               ADCS     R1,R1,R3
   \   00000042   03C4               STM      R4!,{R0,R1}
   1544                    Net->Status.FreezTime=0;
   \   00000044   2E64               STR      R6,[R5, #+64]
   \   00000046   6E64               STR      R6,[R5, #+68]
   1545                    Net->Status.HostLink=DISCONNECTED;
   \   00000048   6E70               STRB     R6,[R5, #+1]
   1546                    Net->Status.CurrentOrder=WizFi_NC;
   \   0000004A   AE70               STRB     R6,[R5, #+2]
   \   0000004C   22E0               B        ??HTTP_CheckConnectionResponse_2
   1547                  }else if(strstr(Buff_RX, "[OK")!=NULL)
   \                     ??HTTP_CheckConnectionResponse_1:
   \   0000004E   ....               ADR      R1,??Subroutine3_1+0x4  ;; "[OK"
   \   00000050   2000               MOVS     R0,R4
   \   00000052   ........           BL       __iar_Strstr
   \   00000056   0028               CMP      R0,#+0
   \   00000058   1CD0               BEQ      ??HTTP_CheckConnectionResponse_2
   1548                  {
   1549                    odp=1;  //ok 
   \   0000005A   6846               MOV      R0,SP
   \   0000005C   0121               MOVS     R1,#+1
   \   0000005E   0170               STRB     R1,[R0, #+0]
   1550                    for (char i=0; i<50; i++) Buff_RX[i]=0;
   \   00000060   3221               MOVS     R1,#+50
   \   00000062   2000               MOVS     R0,R4
   \   00000064   ........           BL       __aeabi_memclr
   1551                    Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000068   2F00               MOVS     R7,R5
   \   0000006A   3837               ADDS     R7,R7,#+56
   \   0000006C   ....               LDR      R0,??DataTable25  ;; g_counter
   \   0000006E   03C8               LDM      R0!,{R0,R1}
   \   00000070   0200               MOVS     R2,R0
   \   00000072   0B00               MOVS     R3,R1
   \   00000074   ....               LDR      R0,??DataTable26  ;; 0x2710
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   8018               ADDS     R0,R0,R2
   \   0000007A   5941               ADCS     R1,R1,R3
   \   0000007C   03C7               STM      R7!,{R0,R1}
   1552                    Net->Status.CurrentOrder=WizFi_NC;
   \   0000007E   AE70               STRB     R6,[R5, #+2]
   1553                    HTTP_Task(Buff_RX, Buff_TX,USART, Net);                                //wykonaj kolejne zadanie HTTP
   \   00000080   2B00               MOVS     R3,R5
   \   00000082   029A               LDR      R2,[SP, #+8]
   \   00000084   0199               LDR      R1,[SP, #+4]
   \   00000086   2000               MOVS     R0,R4
   \   00000088   ........           BL       HTTP_Task
   1554                    Net->Status.FreezTime=0;
   \   0000008C   4035               ADDS     R5,R5,#+64
   \   0000008E   3000               MOVS     R0,R6
   \   00000090   0100               MOVS     R1,R0
   \   00000092   03C5               STM      R5!,{R0,R1}
   1555                  }
   1556                    
   1557            
   1558             return odp;
   \                     ??HTTP_CheckConnectionResponse_2:
   \   00000094                      REQUIRE ?Subroutine3
   \   00000094                      ;; // Fall through to label ?Subroutine3
   1559          }

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   10270000           DC32     0x2710

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     g_counter

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   ........           DC32     WiFiDebug

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     g_counter

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   10270000           DC32     0x2710

   \                                 In section .rodata, align 4
   \   00000000   4F4B00             DC8 "OK"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   49503A00           DC8 "IP:"

   \                                 In section .rodata, align 4
   \                     `?<Constant "GET ">`:
   \   00000000   4745542000         DC8 "GET "
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   2E6373762048       DC8 ".csv HTTP/1.1\015\012"
   \              5454502F312E
   \              310D0A00    
   \   00000018   557365722D41       DC8 "User-Agent: CEURON\015\012Host: "
   \              67656E743A20
   \              434555524F4E
   \              0D0A486F7374
   \              3A2000      
   \   00000033   00                 DC8 0
   \   00000034   436F6E6E6563       DC8 "Connection: keep-alive\015\012"
   \              74696F6E3A20
   \              6B6565702D61
   \              6C6976650D0A
   \              00          
   \   0000004D   000000             DC8 0, 0, 0
   \   00000050   0D0A0D0A00         DC8 "\015\012\015\012"
   \   00000055   000000             DC8 0, 0, 0
   \   00000058   504F53542000       DC8 "POST "
   \   0000005E   0000               DC8 0, 0
   \   00000060   2F7075746761       DC8 "/putgate.php HTTP/1.1\015\012User-Agent: CEURON\015\012Host: "
   \              74652E706870
   \              20485454502F
   \              312E310D0A55
   \              7365722D4167
   \              656E743A2043
   \              4555524F4E0D
   \              0A486F73743A
   \              2000        
   \   00000092   0000               DC8 0, 0
   \   00000094   0D0A436F6E74       DC8 "\015\012Content-Length: "
   \              656E742D4C65
   \              6E6774683A20
   \              00          
   \   000000A7   00                 DC8 0
   \   000000A8   0D0A436F6E74       DC8 0DH, 0AH, 43H, 6FH, 6EH, 74H, 65H, 6EH
   \              656E        
   \   000000B0   742D54797065       DC8 74H, 2DH, 54H, 79H, 70H, 65H, 3AH, 20H
   \              3A20        
   \   000000B8   6170706C6963       DC8 61H, 70H, 70H, 6CH, 69H, 63H, 61H, 74H
   \              6174        
   \   000000C0   696F6E2F782D       DC8 69H, 6FH, 6EH, 2FH, 78H, 2DH, 77H, 77H
   \              7777        
   \   000000C8   772D666F726D       DC8 77H, 2DH, 66H, 6FH, 72H, 6DH, 2DH, 75H
   \              2D75        
   \   000000D0   726C656E636F       DC8 72H, 6CH, 65H, 6EH, 63H, 6FH, 64H, 65H
   \              6465        
   \   000000D8   640D0A0D0A4E       DC8 64H, 0DH, 0AH, 0DH, 0AH, 4EH, 6FH, 64H
   \              6F64        
   \   000000E0   6549443D00         DC8 65H, 49H, 44H, 3DH, 0
   \   000000E5   000000             DC8 0, 0, 0
   \   000000E8   264F72646572       DC8 "&Order=1&Content=;\015\012"
   \              3D3126436F6E
   \              74656E743D3B
   \              0D0A00      
   \   000000FD   000000             DC8 0, 0, 0
   \   00000100   436F6E6E6563       DC8 "Connection: close"
   \              74696F6E3A20
   \              636C6F736500
   \   00000112   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2F646300           DC8 "/dc"

   \                                 In section .rodata, align 4
   \   00000000   256400             DC8 "%d"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2E00               DC8 "."
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0D0A00             DC8 "\015\012"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2F646F00           DC8 "/do"

   \                                 In section .rodata, align 4
   \   00000000   20202000           DC8 "   "

   \                                 In section .rodata, align 4
   \   00000000   5B4F4B00           DC8 "[OK"

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     AT91F_US_SendFrame                 16
     AsciToHexStr                       24
     CheckExistDomenaIP                 16
     GetSpecialAnalogVar                 8
     GetSpecialBinarVar                  8
     HTTP_CheckConnection               24
     HTTP_CheckConnectionResponse       32
     HTTP_Query                         96
     HTTP_QueryResponse                 48
     SetSpecialBinarVar                 16
     StrToWord                          32
     WizFiCommand_AT                    24
     WizFiCommand_ATI2                  24
     WizFiCommand_AT_DNSLOOKUP          40
     WizFiCommand_AT_NCLOSEALL          24
     WizFiCommand_AT_NCTCP              40
     WizFiCommand_AT_NDHCP              24
     WizFiCommand_AT_NSET               32
     WizFiCommand_AT_VER                24
     WizFiCommand_AT_WA                 32
     WizFiCommand_AT_WAUTH_1            24
     WizFiCommand_AT_WD                 24
     WizFiCommand_AT_WWEP1              40
     WizFiCommand_AT_WWPA               32
     WizFiCommand_AT_XDUM0              24
     WizFiResponseCommand_AT            24
     WizFiResponseCommand_ATI2          24
     WizFiResponseCommand_AT_DNSLOOKUP
                                        24
     WizFiResponseCommand_AT_NCLOSEALL0
                                        24
     WizFiResponseCommand_AT_NCTCP      40
     WizFiResponseCommand_AT_NDHCP      24
     WizFiResponseCommand_AT_NSET       24
     WizFiResponseCommand_AT_VER        24
     WizFiResponseCommand_AT_WA         24
     WizFiResponseCommand_AT_WAUTH_1
                                        24
     WizFiResponseCommand_AT_WD         24
     WizFiResponseCommand_AT_WWEP1      24
     WizFiResponseCommand_AT_WWPA       24
     WizFiResponseCommand_AT_XDUM0      24


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     AT91F_US_SendFrame               50
     AT                                4
     ATI2                              8
     AT_VER                           12
     AT_XDUM0                         12
     AT_WD                             8
     AT_NDHCP_0                       24
     AT_NSET                          12
     AT_WAUTH_1                       12
     AT_WWEP1                         12
     AT_WWPA                          12
     AT_WA                             8
     AT_DNSLOOKUP                     16
     AT_NCTCP                         12
     AT_NCLOSE                        68
     AT_NCLOSEALL                     16
     AT_WS                             8
     AT_CID                           12
     WizFiCommand_AT                 132
     ?Subroutine0                     20
     WizFiResponseCommand_AT           4
     ?Subroutine1                     92
     WizFiCommand_AT_VER              72
     WizFiResponseCommand_AT_VER       4
     WizFiCommand_ATI2                52
     ?Subroutine2                     40
     WizFiResponseCommand_ATI2        36
     WizFiCommand_AT_XDUM0            48
     WizFiResponseCommand_AT_XDUM0    36
     WizFiCommand_AT_NCLOSEALL        64
     WizFiResponseCommand_AT_NCLOSEALL0
                                      84
     WizFiCommand_AT_WD               52
     WizFiResponseCommand_AT_WD       36
     WizFiCommand_AT_NDHCP           104
     WizFiResponseCommand_AT_NDHCP    40
     WizFiCommand_AT_NSET            280
     WizFiResponseCommand_AT_NSET     40
     WizFiCommand_AT_WAUTH_1          56
     WizFiResponseCommand_AT_WAUTH_1
                                      40
     AsciToHexStr                     76
     WizFiCommand_AT_WWEP1           248
     ?Subroutine3                     20
     WizFiResponseCommand_AT_WWEP1    40
     WizFiCommand_AT_WWPA            192
     WizFiResponseCommand_AT_WWPA     40
     WizFiCommand_AT_WA              196
     WizFiResponseCommand_AT_WA      104
     CheckExistDomenaIP              114
     WizFiCommand_AT_DNSLOOKUP       236
     WizFiResponseCommand_AT_DNSLOOKUP
                                     164
     WizFiCommand_AT_NCTCP           340
     WizFiResponseCommand_AT_NCTCP   476
     StrToWord                       102
     GetSpecialAnalogVar             120
     GetSpecialBinarVar              208
     SetSpecialBinarVar              220
     HTTP_Query                     2160
     HTTP_QueryResponse             1020
     HTTP_CheckConnection             48
     HTTP_CheckConnectionResponse    148
     ??DataTable14                     4
     ??DataTable18                     4
     ??DataTable20                     4
     ??DataTable25                     4
     ??DataTable26                     4
     ?<Constant "OK">                  4
     ?<Constant "IP:">                 4
     ?<Constant "GET ">              276
     ?<Constant "/dc">                 4
     ?<Constant "%d">                  4
     ?<Constant ".">                   4
     ?<Constant "\r\n">                4
     ?<Constant "/do">                 4
     ?<Constant "   ">                 4
     ?<Constant "[OK">                 4

 
   568 bytes in section .rodata
 7 674 bytes in section Debug.txt
 
 7 624 bytes of CODE  memory (+ 50 bytes shared)
   568 bytes of CONST memory

Errors: none
Warnings: 70
