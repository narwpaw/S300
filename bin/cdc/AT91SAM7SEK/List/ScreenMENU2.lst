###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           23/Apr/2012  16:53:13 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    13.03.2012\Framework\ScreenMENU2.c                       #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    13.03.2012\Framework\ScreenMENU2.c" -D AT91SAM7S256 -D   #
#                    AT91SAM7SEK -D iH -D __ALARM -lC                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    13.03.2012\bin\cdc\AT91SAM7SEK\List\" --diag_suppress    #
#                    Pa082 -o "D:\Zeuron\Projekty\S300\S300-program v0.6 -    #
#                    13.03.2012\bin\cdc\AT91SAM7SEK\Obj\" --no_unroll         #
#                    --no_inline --no_tbaa --no_scheduling --debug --endian   #
#                    little --cpu ARM7TDMI -e --fpu None --dlib_config        #
#                    "C:\Program Files\IAR Systems\Embedded Workbench         #
#                    5.0\ARM\INC\DLib_Config_Normal.h" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    13.03.2012\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    13.03.2012\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    13.03.2012\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v0.6 - 13.03.2012\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v0.6 - 13.03.2012\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    13.03.2012\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v0.6 - 13.03.2012\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    13.03.2012\Framework\Configuration\" -I "C:\Program      #
#                    Files\IAR Systems\Embedded Workbench 5.0\ARM\INC\"       #
#                    --section .text=Debug.txt --interwork --cpu_mode thumb   #
#                    -Om                                                      #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    13.03.2012\bin\cdc\AT91SAM7SEK\List\ScreenMENU2.lst      #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    13.03.2012\bin\cdc\AT91SAM7SEK\Obj\ScreenMENU2.o         #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v0.6 - 13.03.2012\Framework\ScreenMENU2.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                                 CEURON                                   *//                       
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : Prog.Screen.c                                 *//
      7          //*  Opis                         : Obsluga grafiki i ekranu dotykowego      *//
      8          //*  Autor                        : Pawe³ Narwojsz                           */F/
      9          //*  Data utrzorzenia             : 19.09.2007                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*// 
     19          //****************************************************************************//
     20          //****************************************************************************//
     21          
     22          
     23          
     24          #include "ScreenMENU2.h"
     25          #include "Framework.h "
     26          #include "Language.h"
     27          #include "core/device.h"                                                        //³aduje bibliotreki dla odpowiedniego procesora
     28          #include "LCD.h"
     29          #include "Application_prog.h"
     30          #include <intrinsics.h>
     31          #include "Animation.c"
     32          #include "ScreenSorce.h"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   436F6E73742E       DC8 "Const. "
   \              2000        
   \   00000014   476574207265       DC8 "Get reg."
   \              672E00      
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   536574207265       DC8 "Set reg."
   \              672E00      
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   313E3220513D       DC8 "1>2 Q=1"
   \              3100        
   \   00000034   313D3220513D       DC8 "1=2 Q=1"
   \              3100        
   \   0000003C   513D312B3200       DC8 "Q=1+2"
   \   00000042   0000               DC8 0, 0
   \   00000044   513D312D3200       DC8 "Q=1-2"
   \   0000004A   0000               DC8 0, 0
   \   0000004C   513D31783200       DC8 "Q=1x2"
   \   00000052   0000               DC8 0, 0
   \   00000054   513D312F3200       DC8 "Q=1/2"
   \   0000005A   0000               DC8 0, 0
   \   0000005C   5265673A00         DC8 "Reg:"
   \   00000061   000000             DC8 0, 0, 0
   \   00000064   4163746F7200       DC8 "Actor"
   \   0000006A   0000               DC8 0, 0
   \   0000006C   54656D657065       DC8 "Temeper."
   \              722E00      
   \   00000075   000000             DC8 0, 0, 0
   \   00000078   4E6F64652049       DC8 "Node ID:"
   \              443A00      
   \   00000081   000000             DC8 0, 0, 0
   \   00000084   546865726D6F       DC8 "Thermo"
   \              00          
   \   0000008B   00                 DC8 0
   \   char const __data ProcSt_graf[3][8]
   \                     ProcSt_graf:
   \   0000008C   1818181F1F18       DC8 24, 24, 24, 31, 31, 24, 24, 24, 96, 96, 96, 224, 224, 96, 96, 96, 0
   \              1818606060E0
   \              E060606000  
   \   0000009D   000007070000       DC8 0, 0, 7, 7, 0, 0, 0
   \              00          
   \   char const __data ProcSet_graf[3][9]
   \                     ProcSet_graf:
   \   000000A4   10180C0F0F0C       DC8 16, 24, 12, 15, 15, 12, 24, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3
   \              181000000000
   \              000000000000
   \              0103        
   \   000000B8   060606060301       DC8 6, 6, 6, 6, 3, 1, 0, 0
   \              0000        
   \   char const __data ProcWOUTS_graf[3][9]
   \                     ProcWOUTS_graf:
   \   000000C0   D0188C4F4F4C       DC8 208, 24, 140, 79, 79, 76, 88, 144, 0, 31, 16, 23, 18, 20, 20, 20
   \              5890001F1017
   \              12141414    
   \   000000D0   730001030606       DC8 115, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000
   \   char const __data ProcWOUTR_graf[3][9]
   \                     ProcWOUTR_graf:
   \   000000DC   90584C4F4F8C       DC8 144, 88, 76, 79, 79, 140, 24, 208, 0, 119, 18, 20, 20, 20, 19, 16
   \              18D000771214
   \              14141310    
   \   000000EC   1F0001030606       DC8 31, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000
   \   char const __data ProcWOUTC_graf[3][9]
   \                     ProcWOUTC_graf:
   \   000000F8   08CC26272726       DC8 8, 204, 38, 39, 39, 38, 204, 8, 0, 0, 115, 17, 82, 82, 66, 113, 0
   \              CC0800007311
   \              5252427100  
   \   00000109   000103060606       DC8 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              0603010000  
   \   char const __data ProcSPK_graf[3][9]
   \                     ProcSPK_graf:
   \   00000114   00C0407F7F40       DC8 0, 192, 64, 127, 127, 64, 192, 0, 0, 152, 85, 18, 81, 17, 82, 21
   \              C00000985512
   \              51115215    
   \   00000124   588000000001       DC8 88, 128, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0
   \              000100000000
   \   char const __data ProcTime_graf[3][8]
   \                     ProcTime_graf:
   \   00000130   D050509F1F90       DC8 208, 80, 80, 159, 31, 144, 80, 208, 23, 21, 20, 242, 241, 18, 20
   \              50D0171514F2
   \              F11214      
   \   0000013F   170000000707       DC8 23, 0, 0, 0, 7, 7, 0, 0, 0
   \              000000      
   \   char const __data ProcClock_graf[3][8]
   \                     ProcClock_graf:
   \   00000148   A848282F2F48       DC8 168, 72, 40, 47, 47, 72, 168, 200, 43, 36, 40, 235, 233, 36, 43, 38
   \              A8C82B2428EB
   \              E9242B26    
   \   00000158   000000070700       DC8 0, 0, 0, 7, 7, 0, 0, 0
   \              0000        
   \   char const __data ProcDay_graf[3][8]
   \                     ProcDay_graf:
   \   00000160   FC0434575734       DC8 252, 4, 52, 87, 87, 52, 4, 252, 255, 0, 37, 39, 85, 82, 0, 255, 1
   \              04FCFF002527
   \              555200FF01  
   \   00000171   010107070101       DC8 1, 1, 7, 7, 1, 1, 1
   \              01          
   \   char const __data ProcToggleRS_graf[3][19]
   \                     ProcToggleRS_graf:
   \   00000178   00F808684F2F       DC8 0, 248, 8, 104, 79, 47, 104, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              680808080808
   \              080808F80000
   \              00          
   \   0000018B   00FF80B89494       DC8 0, 255, 128, 184, 148, 148, 136, 128, 128, 128, 133, 131, 133, 131
   \              888080808583
   \              8583        
   \   00000199   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000070700
   \              000000000000
   \              000000      
   \   000001AE   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   char const __data ProcToggleT_graf[3][19]
   \                     ProcToggleT_graf:
   \   000001B4   00F808484F4F       DC8 0, 248, 8, 72, 79, 79, 232, 8, 8, 104, 200, 8, 104, 200, 8, 248, 0
   \              E8080868C808
   \              68C808F800  
   \   000001C5   000000FF80B8       DC8 0, 0, 0, 255, 128, 184, 148, 148, 136, 128, 128, 188, 135, 128, 183
   \              9494888080BC
   \              8780B7      
   \   000001D4   9D80FF000000       DC8 157, 128, 255, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000707
   \              000000000000
   \              000000      
   \   000001E9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
   \   char const __data ProcTLI1_graf[3][19]
   \                     ProcTLI1_graf:
   \   000001F0   00F808080F8F       DC8 0, 248, 8, 8, 15, 143, 8, 8, 8, 168, 72, 8, 104, 200, 8, 248, 0, 0
   \              080808A84808
   \              68C808F80000
   \   00000202   0000FF808282       DC8 0, 0, 255, 128, 130, 130, 130, 131, 130, 128, 187, 132, 128, 183
   \              82838280BB84
   \              80B7        
   \   00000210   9D80FF000000       DC8 157, 128, 255, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000707
   \              000000000000
   \              000000      
   \   00000225   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
   \   char const __data ProcLim_graf[3][18]
   \                     ProcLim_graf:
   \   0000022C   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0, 255
   \              080808080808
   \              0808F8000000
   \              FF          
   \   0000023F   80B894948881       DC8 128, 184, 148, 148, 136, 129, 130, 129, 140, 132, 136, 140, 128
   \              82818C84888C
   \              80          
   \   0000024C   FF0303030000       DC8 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000707000000
   \              000000000000
   \              00000000    
   \   00000262   0000               DC8 0, 0
   \   char const __data ProcEven_graf[3][18]
   \                     ProcEven_graf:
   \   00000264   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0, 255
   \              080808080808
   \              0808F8000000
   \              FF          
   \   00000277   80B894948883       DC8 128, 184, 148, 148, 136, 131, 128, 131, 152, 136, 144, 152, 128
   \              808398889098
   \              80          
   \   00000284   FF0303030000       DC8 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000707000000
   \              000000000000
   \              00000000    
   \   0000029A   0000               DC8 0, 0
   \   char const __data ProcPlus_graf[3][18]
   \                     ProcPlus_graf:
   \   0000029C   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808080808
   \              0808F8000000
   \   000002AE   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 129, 131, 129, 140, 132, 136, 140
   \              8183818C8488
   \              8C          
   \   000002BB   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   000002D0   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcMinus_graf[3][18]
   \                     ProcMinus_graf:
   \   000002D4   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808080808
   \              0808F8000000
   \   000002E6   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 131, 128, 140, 132, 136, 140
   \              8083808C8488
   \              8C          
   \   000002F3   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000308   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcMul_graf[3][18]
   \                     ProcMul_graf:
   \   0000030C   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 136, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808880808
   \              0808F8000000
   \   0000031E   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 130, 129, 154, 136, 144, 152
   \              8082819A8890
   \              98          
   \   0000032B   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000340   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcDiv_graf[3][18]
   \                     ProcDiv_graf:
   \   00000344   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 72, 136, 8, 8, 8, 248, 0, 0, 0
   \              080808488808
   \              0808F8000000
   \   00000356   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 128, 128, 152, 136, 145, 154
   \              808080988891
   \              9A          
   \   00000363   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000378   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcNot_graf[3][8]
   \                     ProcNot_graf:
   \   0000037C   024A6A6B5B5A       DC8 2, 74, 106, 107, 91, 90, 74, 2, 0, 102, 41, 41, 41, 118, 32, 0, 1
   \              4A0200662929
   \              2976200001  
   \   0000038D   010107070101       DC8 1, 1, 7, 7, 1, 1, 1
   \              01          
   \   char const __data ProcGetAnal_graf[3][17]
   \                     ProcGetAnal_graf:
   \   00000394   FE0000000000       DC8 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 236, 42, 106, 34, 236, 255
   \              00000000FE00
   \              EC2A6A22ECFF
   \   000003A6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 132, 132, 132, 132, 142, 3, 6, 4
   \              000000FF0084
   \              8484848E0306
   \              04          
   \   000003B9   040404040404       DC8 4, 4, 4, 4, 4, 4, 6, 3, 0, 2, 2, 1, 2, 1, 0
   \              060300020201
   \              020100      
   \   char const __data ProcSetAnal_graf[3][17]
   \                     ProcSetAnal_graf:
   \   000003C8   FE0301010101       DC8 254, 3, 1, 1, 1, 1, 1, 1, 1, 3, 254, 0, 230, 40, 110, 34, 236, 255
   \              01010103FE00
   \              E6286E22ECFF
   \   000003DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 132, 132, 132, 132, 142, 3, 0, 0
   \              000000FF0084
   \              8484848E0300
   \              00          
   \   000003ED   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 2, 1, 2, 1, 0
   \              000300020201
   \              020100      
   \   char const __data ProcSt_iko[2][8]
   \                     ProcSt_iko:
   \   000003FC   1818181F1F18       DC8 24, 24, 24, 31, 31, 24, 24, 24, 6, 6, 6, 62, 62, 6, 6, 6
   \              18180606063E
   \              3E060606    
   \   char const __data ProcSet_iko[2][8]
   \                     ProcSet_iko:
   \   0000040C   6030181F1F18       DC8 96, 48, 24, 31, 31, 24, 48, 96, 3, 6, 12, 12, 12, 12, 6, 3
   \              306003060C0C
   \              0C0C0603    
   \   char const __data ProcTime_iko[2][12]
   \                     ProcTime_iko:
   \   0000041C   E018040202C1       DC8 224, 24, 4, 2, 2, 193, 65, 66, 66, 68, 24, 224, 0, 3, 4, 8, 8, 17
   \              4142424418E0
   \              000304080811
   \   0000042E   100808040300       DC8 16, 8, 8, 4, 3, 0
   \   char const __data ProcLog_iko[2][8]
   \                     ProcLog_iko:
   \   00000434   00006F919191       DC8 0, 0, 111, 145, 145, 145, 97, 1, 12, 18, 92, 18, 18, 18, 28, 0
   \              61010C125C12
   \              12121C00    
   \   char const __data ProcAnl_iko[2][8]
   \                     ProcAnl_iko:
   \   00000444   0029292FE909       DC8 0, 41, 41, 47, 233, 9, 6, 0, 0, 93, 5, 5, 4, 4, 4, 0
   \              0600005D0505
   \              04040400    
   \   char const __data ProcSt_Button[3][6]
   \                     ProcSt_Button:
   \   00000454   3F3F00F8F0F0       DC8 63, 63, 0, 248, 240, 240, 240, 240, 0, 127, 63, 63, 7, 7, 0, 0, 0
   \              F0F0007F3F3F
   \              0707000000  
   \   00000465   000000             DC8 0, 0, 0
   \   char const __data SPK_1[4][2][5]
   \                     SPK_1:
   \   00000468   3F202020E000       DC8 63, 32, 32, 32, 224, 0, 0, 0, 0, 255, 143, 136, 136, 136, 248, 143
   \              000000FF8F88
   \              8888F88F    
   \   00000478   888888F8E718       DC8 136, 136, 136, 248, 231, 24, 24, 24, 24, 207, 48, 48, 48, 48, 215
   \              181818CF3030
   \              3030D7      
   \   00000487   28282828AF50       DC8 40, 40, 40, 40, 175, 80, 80, 80, 80
   \              505050      
   \   char const __data DeyOfWeekStr[2][8][2]
   \                     DeyOfWeekStr:
   \   00000490   4572506E5774       DC8 69, 114, 80, 110, 87, 116, 83, 114, 67, 122, 80, 116, 83, 111, 78
   \              5372437A5074
   \              536F4E      
   \   0000049F   6445724D6F54       DC8 100, 69, 114, 77, 111, 84, 117, 87, 101, 84, 104, 70, 114, 83, 97
   \              755765546846
   \              725361      
   \   000004AE   5375               DC8 83, 117
   \   char const __data ShortDate[7][3]
   \                     ShortDate:
   \   000004B0   4D3A00443A00       DC8 77, 58, 0, 68, 58, 0, 104, 58, 0, 109, 58, 0, 115, 58, 0
   \              683A006D3A00
   \              733A00      
   \   000004BF   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \   char const __data ProcTMRS_graf[3][9]
   \                     ProcTMRS_graf:
   \   00000000   10180C0F0FCC       DC8 16, 24, 12, 15, 15, 204, 24, 208, 0, 113, 17, 17, 17, 17, 23, 16
   \              18D000711111
   \              11111710    
   \   00000010   1F0001030606       DC8 31, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000

   \                                 In section .rodata, align 4
   \   char const __data ProcConstAnal_graf[3][18]
   \                     ProcConstAnal_graf:
   \   00000000   FE0202020202       DC8 254, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 254, 0, 255, 0, 0
   \              020202020202
   \              02020202FE00
   \              FF0000      
   \   00000015   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 3, 2, 6, 4, 4, 6, 2
   \              000000000000
   \              00FF00030206
   \              04040602    
   \   0000002B   020202020202       DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0
   \              020202030000
   \              00          

   \                                 In section .rodata, align 4
   \   char const __data BateriaWyladowana[1][9]
   \                     BateriaWyladowana:
   \   00000000   3F3131292925       DC8 63, 49, 49, 41, 41, 37, 37, 51, 30, 0, 0, 0
   \              25331E000000

   \                                 In section .rodata, align 4
   \   char const __data Frame[2][11]
   \                     Frame:
   \   00000000   FE0101010101       DC8 254, 1, 1, 1, 1, 1, 1, 1, 1, 1, 254, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4
   \              01010101FE03
   \              040404040404
   \              040404      
   \   00000015   030000             DC8 3, 0, 0
     33          #include "RF_Exe.h"
     34          #include "spi_main.h"
     35           #include "WizFi.h"                            

                                                            
                                                            ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 13.03.2012\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline

        
        ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 13.03.2012\Framework\WizFi.h",143  Warning[Pe001]: 
          last line of file ends without a newline
     36          
     37          
     38          //
     39          
     40          /*
     41          extern char text[10];
     42          extern char text1[10];
     43          extern char text2[10];
     44          extern char text3[10];
     45          extern char text4[10];
     46          extern char text5[10];
     47          extern char text6[10];
     48          extern char text7[10];
     49          extern char textVal1[8];
     50          extern char textVal2[8];
     51          extern char textVal3[8];
     52          extern char textVal4[8];
     53          extern char textVal5[8];
     54          extern char textVal6[8];
     55          extern char textVal7[8];
     56          */
     57          extern _Correct korekta_Y;
     58          extern _Correct korekta_X;
     59          extern char Arial_7[100][10];
     60          
     61          extern char LCD_Canvas[8][128];
     62          extern unsigned int CyklPerSek;
     63          extern char g_level;
     64          extern char g_Password_1[8];
     65          extern char g_Password_2[8];
     66          extern int g_Message;
     67          extern char g_US0_Connect_OK;
     68          extern char g_US1_Connect_OK;
     69          extern char g_Stop_Program;
     70          extern RAM ram;
     71          extern _RF_Status RF_Status;
     72          extern _DateTime DateTime;
     73          extern volatile char SlaveMode;
     74          extern char g_SlaveConnect;
     75          extern unsigned long long  g_counter;
     76          extern volatile char Busy_program;
     77          extern char g_NeedPass;
     78          extern _TransQuality TransQuality; //tablica informacyjna jakoci po³¹czenia pola odpowiadaj¹ polom _ProgramTab.NeuronsIdTab
     79          extern const char identyfikacja;
     80          extern const char system;
     81          extern char AlarmOn;
     82          extern int g_info;

   \                                 In section .bss, align 1
     83          char MainSide_puls=0;
   \                     MainSide_puls:
   \   00000000                      DS8 1
     84          extern _RF_TaskTab  RF_TaskTab;
     85          extern signed char           RF_CurrentTask;
     86          int MenuLevel=0;      //poziom menu
     87          extern unsigned long long g_NextTimeProgram;
     88          extern char ekran_komunikacja[8][128];
     89          extern signed short X_down;
     90          extern signed short Y_down;
     91          extern signed short X_up;
     92          extern signed short Y_up;
     93          extern int  g_leng;
     94          extern LangTab Speech[2];
     95          extern char g_PC_Connected;
     96          extern _ProgramTab gProg;
     97          extern char NumberScene;
     98          extern _NeuronsListUnit NeuronsList[NumberNeurons];
     99          extern char Label (char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw);
    100          extern char FloToStr (float Value, char Vstring[8],char ill) ;
    101          extern _MainStage  MainStage; 
    102          extern _TransQuality TransQuality;
    103          extern _RF_NodeTest  RF_NodeTest; 
    104           extern _Net NET;    
    105          
    106           

   \                                 In section .bss, align 4
    107          float wartosc_tmp;
   \                     wartosc_tmp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    108          char text_label_tmp[10];
   \                     text_label_tmp:
   \   00000000                      DS8 12
    109          
    110          extern char SceneBefOff;
    111          

   \                                 In section .bss, align 1
    112          char Label_move = 0;
   \                     Label_move:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    113          int Suw_poz_IO=0;
   \                     Suw_poz_IO:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    114          int Suw_poz_analog=0;
   \                     Suw_poz_analog:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    115          int Suw_poz_dwustan=0;
   \                     Suw_poz_dwustan:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    116          int Suw_poz_monit=0;
   \                     Suw_poz_monit:
   \   00000000                      DS8 4
    117          int ScrollMenu_poz=-1;
    118          int ScrollMenu_Paint_exist=-1;
    119          int Rej_poz=0;

   \                                 In section .bss, align 1
    120          char CyklMonit=0;
   \                     CyklMonit:
   \   00000000                      DS8 1
    121          char *TextToChange=0;
    122          char TextToChangeLength=0;
    123          char TextToChangeMaxPixSize=0;
    124          _ButtonGraph *ButtonToChange=0;
    125          char CurentChartModyfi;
    126          
    127          
    128          
    129          signed short int *ValueChange=0;
    130          int *NeuronIdChange=0;
    131          char NeuronNrChange=0;
    132          
    133          
    134          _Analog *AnalogToChange;
    135          
    136          char CurrentSheet=0;
    137          char CurModifSheet=0;
    138          char NeuronsListLine=0;
    139          
    140          char SheetHistoryIndex=0;
    141          char SheetHistory[20];
    142          
    143          
    144          extern _ProgramTab gProg;
    145          extern int PtogTime;
    146          
    147          
    148          #define DispWaitOn  1
    149          #define DispWaitOff 2
    150          
    151          

   \                                 In section .bss, align 4
    152          int Monitoring_array[30][2]; //tablica monitoringu 1 kol - adres, 2 kol- typ (0 analog, 1 dwustan, 2 IO)
   \                     Monitoring_array:
   \   00000000                      DS8 240

   \                                 In section .bss, align 4
    153          int Monit_Size_scroll=0;
   \                     Monit_Size_scroll:
   \   00000000                      DS8 4
    154          char SetupTimeCarPoz=1; 
    155          extern char ProgramChange=0;      //Je¿eli 1 - zmiana programu przez u¿ytkownika 
    156          //*-----------------------------------------------------------------------------
    157          //* Nazwa funkcji :    ScreenEvent
    158          //* Funkcja wrysowania menu ekranowego
    159          //*-----------------------------------------------------------------------------
    160          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    161          //*-----------------------------------------------------------------------------
    162          
    163          
    164          
    165          
    166          char TmpFlg=0;

   \                                 In section Debug.txt, align 4, keep-with-next
    167          void MenuPaint(void)
    168          {
   \                     MenuPaint:
   \   00000000   01B5               PUSH     {R0,LR}
    169            
    170            
    171              if (TmpFlg==0)
   \   00000002   BF48               LDR      R0,??MenuPaint_0  ;; TextToChangeLength
   \   00000004   417A               LDRB     R1,[R0, #+9]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   01D1               BNE      ??MenuPaint_1
    172            {
    173              TmpFlg=1;
   \   0000000A   0121               MOVS     R1,#+1
   \   0000000C   4172               STRB     R1,[R0, #+9]
    174          
    175            }
    176          
    177            if (g_Message==0) 
   \                     ??MenuPaint_1:
   \   0000000E   BD49               LDR      R1,??MenuPaint_0+0x4  ;; g_Message
   \   00000010   0968               LDR      R1,[R1, #+0]
   \   00000012   0029               CMP      R1,#+0
   \   00000014   00D0               BEQ      .+4
   \   00000016   F4E1               B        ??MenuPaint_2
    178            switch (MenuLevel)
   \   00000018   816C               LDR      R1,[R0, #+72]
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   00D1               BNE      .+4
   \   0000001E   D5E0               B        ??MenuPaint_3
   \   00000020   491E               SUBS     R1,R1,#+1
   \   00000022   00D1               BNE      .+4
   \   00000024   D5E0               B        ??MenuPaint_4
   \   00000026   891E               SUBS     R1,R1,#+2
   \   00000028   00D1               BNE      .+4
   \   0000002A   DCE0               B        ??MenuPaint_5
   \   0000002C   491E               SUBS     R1,R1,#+1
   \   0000002E   00D1               BNE      .+4
   \   00000030   DCE0               B        ??MenuPaint_6
   \   00000032   491E               SUBS     R1,R1,#+1
   \   00000034   00D1               BNE      .+4
   \   00000036   DCE0               B        ??MenuPaint_7
   \   00000038   491F               SUBS     R1,R1,#+5
   \   0000003A   00D1               BNE      .+4
   \   0000003C   ECE0               B        ??MenuPaint_8
   \   0000003E   491E               SUBS     R1,R1,#+1
   \   00000040   00D1               BNE      .+4
   \   00000042   EDE0               B        ??MenuPaint_9
   \   00000044   491E               SUBS     R1,R1,#+1
   \   00000046   00D1               BNE      .+4
   \   00000048   BCE1               B        ??MenuPaint_10
   \   0000004A   491E               SUBS     R1,R1,#+1
   \   0000004C   00D1               BNE      .+4
   \   0000004E   CEE1               B        ??MenuPaint_11
   \   00000050   491E               SUBS     R1,R1,#+1
   \   00000052   00D1               BNE      .+4
   \   00000054   CEE1               B        ??MenuPaint_12
   \   00000056   491E               SUBS     R1,R1,#+1
   \   00000058   00D1               BNE      .+4
   \   0000005A   CFE1               B        ??MenuPaint_13
   \   0000005C   2439               SUBS     R1,R1,#+36
   \   0000005E   00D1               BNE      .+4
   \   00000060   CAE0               B        ??MenuPaint_14
   \   00000062   3C39               SUBS     R1,R1,#+60
   \   00000064   00D1               BNE      .+4
   \   00000066   DEE0               B        ??MenuPaint_15
   \   00000068   491E               SUBS     R1,R1,#+1
   \   0000006A   00D1               BNE      .+4
   \   0000006C   02E1               B        ??MenuPaint_16
   \   0000006E   491E               SUBS     R1,R1,#+1
   \   00000070   00D1               BNE      .+4
   \   00000072   55E1               B        ??MenuPaint_17
   \   00000074   491E               SUBS     R1,R1,#+1
   \   00000076   00D1               BNE      .+4
   \   00000078   64E1               B        ??MenuPaint_18
   \   0000007A   491E               SUBS     R1,R1,#+1
   \   0000007C   00D1               BNE      .+4
   \   0000007E   7CE1               B        ??MenuPaint_19
   \   00000080   491E               SUBS     R1,R1,#+1
   \   00000082   00D1               BNE      .+4
   \   00000084   8CE1               B        ??MenuPaint_20
   \   00000086   491E               SUBS     R1,R1,#+1
   \   00000088   00D1               BNE      .+4
   \   0000008A   8CE1               B        ??MenuPaint_21
   \   0000008C   C91E               SUBS     R1,R1,#+3
   \   0000008E   00D1               BNE      .+4
   \   00000090   CCE0               B        ??MenuPaint_22
   \   00000092   491E               SUBS     R1,R1,#+1
   \   00000094   00D1               BNE      .+4
   \   00000096   9FE1               B        ??MenuPaint_23
   \   00000098   9B4A               LDR      R2,??MenuPaint_0+0x8  ;; 0x3dd
   \   0000009A   891A               SUBS     R1,R1,R2
   \   0000009C   00D1               BNE      .+4
   \   0000009E   C5E0               B        ??MenuPaint_22
   \   000000A0   491E               SUBS     R1,R1,#+1
   \   000000A2   00D1               BNE      .+4
   \   000000A4   D1E0               B        ??MenuPaint_24
   \   000000A6   491E               SUBS     R1,R1,#+1
   \   000000A8   00D1               BNE      .+4
   \   000000AA   DDE0               B        ??MenuPaint_25
   \   000000AC   0839               SUBS     R1,R1,#+8
   \   000000AE   00D1               BNE      .+4
   \   000000B0   BCE0               B        ??MenuPaint_22
   \   000000B2   491E               SUBS     R1,R1,#+1
   \   000000B4   00D1               BNE      .+4
   \   000000B6   E7E0               B        ??MenuPaint_26
   \   000000B8   491E               SUBS     R1,R1,#+1
   \   000000BA   00D1               BNE      .+4
   \   000000BC   0CE1               B        ??MenuPaint_27
   \   000000BE   491E               SUBS     R1,R1,#+1
   \   000000C0   00D1               BNE      .+4
   \   000000C2   13E1               B        ??MenuPaint_28
   \   000000C4   491E               SUBS     R1,R1,#+1
   \   000000C6   00D1               BNE      .+4
   \   000000C8   20E1               B        ??MenuPaint_29
   \   000000CA   C91F               SUBS     R1,R1,#+7
   \   000000CC   00D1               BNE      .+4
   \   000000CE   2AE1               B        ??MenuPaint_30
   \   000000D0   0A39               SUBS     R1,R1,#+10
   \   000000D2   00D1               BNE      .+4
   \   000000D4   39E1               B        ??MenuPaint_31
   \   000000D6   491E               SUBS     R1,R1,#+1
   \   000000D8   00D1               BNE      .+4
   \   000000DA   39E1               B        ??MenuPaint_32
   \   000000DC   491E               SUBS     R1,R1,#+1
   \   000000DE   00D1               BNE      .+4
   \   000000E0   39E1               B        ??MenuPaint_33
   \   000000E2   491E               SUBS     R1,R1,#+1
   \   000000E4   00D1               BNE      .+4
   \   000000E6   81E0               B        ??MenuPaint_6
   \   000000E8   491E               SUBS     R1,R1,#+1
   \   000000EA   00D1               BNE      .+4
   \   000000EC   3CE1               B        ??MenuPaint_34
   \   000000EE   891E               SUBS     R1,R1,#+2
   \   000000F0   00D1               BNE      .+4
   \   000000F2   3CE1               B        ??MenuPaint_35
   \   000000F4   491E               SUBS     R1,R1,#+1
   \   000000F6   00D1               BNE      .+4
   \   000000F8   3CE1               B        ??MenuPaint_36
   \   000000FA   891E               SUBS     R1,R1,#+2
   \   000000FC   00D1               BNE      .+4
   \   000000FE   95E0               B        ??MenuPaint_22
   \   00000100   491E               SUBS     R1,R1,#+1
   \   00000102   00D1               BNE      .+4
   \   00000104   3CE1               B        ??MenuPaint_37
   \   00000106   491E               SUBS     R1,R1,#+1
   \   00000108   00D1               BNE      .+4
   \   0000010A   D1E0               B        ??MenuPaint_38
   \   0000010C   491E               SUBS     R1,R1,#+1
   \   0000010E   00D1               BNE      .+4
   \   00000110   3AE1               B        ??MenuPaint_39
   \   00000112   1239               SUBS     R1,R1,#+18
   \   00000114   00D1               BNE      .+4
   \   00000116   49E1               B        ??MenuPaint_40
   \   00000118   491E               SUBS     R1,R1,#+1
   \   0000011A   00D1               BNE      .+4
   \   0000011C   4FE1               B        ??MenuPaint_41
   \   0000011E   ....               LDR      R2,??DataTable0  ;; 0x26d3
   \   00000120   891A               SUBS     R1,R1,R2
   \   00000122   00D1               BNE      .+4
   \   00000124   94E0               B        ??MenuPaint_42
   \   00000126   0B39               SUBS     R1,R1,#+11
   \   00000128   00D1               BNE      .+4
   \   0000012A   A0E0               B        ??MenuPaint_43
   \   0000012C   5939               SUBS     R1,R1,#+89
   \   0000012E   00D1               BNE      .+4
   \   00000130   B4E0               B        ??MenuPaint_44
   \   00000132   491E               SUBS     R1,R1,#+1
   \   00000134   00D1               BNE      .+4
   \   00000136   BBE0               B        ??MenuPaint_38
   \   00000138   491E               SUBS     R1,R1,#+1
   \   0000013A   00D1               BNE      .+4
   \   0000013C   BDE0               B        ??MenuPaint_45
   \   0000013E   491E               SUBS     R1,R1,#+1
   \   00000140   00D1               BNE      .+4
   \   00000142   BEE0               B        ??MenuPaint_46
   \   00000144   491E               SUBS     R1,R1,#+1
   \   00000146   00D1               BNE      .+4
   \   00000148   C3E0               B        ??MenuPaint_47
   \   0000014A   0939               SUBS     R1,R1,#+9
   \   0000014C   00D1               BNE      .+4
   \   0000014E   B8E0               B        ??MenuPaint_46
   \   00000150   CF39               SUBS     R1,R1,#+207
   \   00000152   0129               CMP      R1,#+1
   \   00000154   00D8               BHI      .+4
   \   00000156   01E1               B        ??MenuPaint_48
   \   00000158   6439               SUBS     R1,R1,#+100
   \   0000015A   00D1               BNE      .+4
   \   0000015C   10E1               B        ??MenuPaint_37
   \   0000015E   C91E               SUBS     R1,R1,#+3
   \   00000160   00D1               BNE      .+4
   \   00000162   15E1               B        ??MenuPaint_49
   \   00000164   491E               SUBS     R1,R1,#+1
   \   00000166   00D1               BNE      .+4
   \   00000168   16E1               B        ??MenuPaint_50
   \   0000016A   B039               SUBS     R1,R1,#+176
   \   0000016C   00D1               BNE      .+4
   \   0000016E   20E1               B        ??MenuPaint_51
   \   00000170   0A39               SUBS     R1,R1,#+10
   \   00000172   00D1               BNE      .+4
   \   00000174   9CE0               B        ??MenuPaint_38
   \   00000176   ....               LDR      R2,??DataTable1  ;; 0x1843e
   \   00000178   891A               SUBS     R1,R1,R2
   \   0000017A   6DD0               BEQ      ??MenuPaint_52
   \   0000017C   FA22               MOVS     R2,#+250
   \   0000017E   9200               LSLS     R2,R2,#+2        ;; #+1000
   \   00000180   891A               SUBS     R1,R1,R2
   \   00000182   00D1               BNE      .+4
   \   00000184   94E0               B        ??MenuPaint_38
   \   00000186   491E               SUBS     R1,R1,#+1
   \   00000188   00D1               BNE      .+4
   \   0000018A   96E0               B        ??MenuPaint_45
   \   0000018C   1339               SUBS     R1,R1,#+19
   \   0000018E   00D1               BNE      .+4
   \   00000190   8EE0               B        ??MenuPaint_38
   \   00000192   0A39               SUBS     R1,R1,#+10
   \   00000194   00D1               BNE      .+4
   \   00000196   8BE0               B        ??MenuPaint_38
   \   00000198   491E               SUBS     R1,R1,#+1
   \   0000019A   00D1               BNE      .+4
   \   0000019C   95E0               B        ??MenuPaint_53
   \   0000019E   6339               SUBS     R1,R1,#+99
   \   000001A0   00D1               BNE      .+4
   \   000001A2   85E0               B        ??MenuPaint_38
   \   000001A4   491E               SUBS     R1,R1,#+1
   \   000001A6   00D1               BNE      .+4
   \   000001A8   8FE0               B        ??MenuPaint_53
   \   000001AA   ....               LDR      R2,??DataTable2  ;; 0x815
   \   000001AC   891A               SUBS     R1,R1,R2
   \   000001AE   00D1               BNE      .+4
   \   000001B0   D7E0               B        ??MenuPaint_54
   \   000001B2   0A39               SUBS     R1,R1,#+10
   \   000001B4   00D1               BNE      .+4
   \   000001B6   D4E0               B        ??MenuPaint_54
   \   000001B8   ....               LDR      R2,??DataTable3  ;; 0xae6
   \   000001BA   891A               SUBS     R1,R1,R2
   \   000001BC   78D0               BEQ      ??MenuPaint_38
   \   000001BE   491E               SUBS     R1,R1,#+1
   \   000001C0   00D1               BNE      .+4
   \   000001C2   F9E0               B        ??MenuPaint_55
   \   000001C4   ....               LDR      R2,??DataTable4  ;; 0xf51e9
   \   000001C6   891A               SUBS     R1,R1,R2
   \   000001C8   72D0               BEQ      ??MenuPaint_38
   \   000001CA   1AE1               B        ??MenuPaint_2
    179            {
    180              case 0        : StartAnimation_Paint();         break;
   \                     ??MenuPaint_3:
   \   000001CC   ........           BL       StartAnimation_Paint
   \   000001D0   17E1               B        ??MenuPaint_2
    181              case 1        : MainSide_Paint(&gProg.Screen[CurrentSheet]);         break;
   \                     ??MenuPaint_4:
   \   000001D2   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   000001D4   0079               LDRB     R0,[R0, #+4]
   \   000001D6   A022               MOVS     R2,#+160
   \   000001D8   5043               MULS     R0,R2,R0
   \   000001DA   ....               LDR      R2,??DataTable33  ;; gProg
   \   000001DC   1018               ADDS     R0,R2,R0
   \   000001DE   4018               ADDS     R0,R0,R1
   \   000001E0   ........           BL       MainSide_Paint
   \   000001E4   0DE1               B        ??MenuPaint_2
    182              case 3        : CheckChannel();         break;
   \                     ??MenuPaint_5:
   \   000001E6   ........           BL       CheckChannel
   \   000001EA   0AE1               B        ??MenuPaint_2
    183              case 4        : SetTouchScreen_Paint();  break;
   \                     ??MenuPaint_6:
   \   000001EC   ........           BL       SetTouchScreen_Paint
   \   000001F0   07E1               B        ??MenuPaint_2
    184              case 5        : AdvanceSet_Paint();  break;
   \                     ??MenuPaint_7:
   \   000001F2   ........           BL       AdvanceSet_Paint
   \   000001F6   04E1               B        ??MenuPaint_2
    185                case 51     : Ask_Paint(Speech[g_leng].Czysc_pamiec,Speech[g_leng].Potwierdz,"");  break;
   \                     ??MenuPaint_14:
   \   000001F8   ....               LDR      R0,??DataTable27  ;; g_leng
   \   000001FA   0068               LDR      R0,[R0, #+0]
   \   000001FC   9621               MOVS     R1,#+150
   \   000001FE   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000200   4843               MULS     R0,R1,R0
   \   00000202   ....               LDR      R1,??DataTable28  ;; Speech
   \   00000204   0818               ADDS     R0,R1,R0
   \   00000206   80A2               ADR      R2,??MenuPaint_56  ;; 0x00, 0x00, 0x00, 0x00
   \   00000208   FF21               MOVS     R1,#+255
   \   0000020A   F031               ADDS     R1,R1,#+240      ;; #+495
   \   0000020C   4118               ADDS     R1,R0,R1
   \   0000020E   ....               LDR      R3,??DataTable9  ;; 0x771
   \   00000210   C018               ADDS     R0,R0,R3
   \   00000212   ........           BL       Ask_Paint
   \   00000216   F4E0               B        ??MenuPaint_2
    186                
    187                case 10     : MenuAccessPass_Paint(1);  break; 
   \                     ??MenuPaint_8:
   \   00000218   0120               MOVS     R0,#+1
   \   0000021A   ........           BL       MenuAccessPass_Paint
   \   0000021E   F0E0               B        ??MenuPaint_2
    188                case 11     : MenuSide_Paint();         break; 
   \                     ??MenuPaint_9:
   \   00000220   ........           BL       MenuSide_Paint
   \   00000224   EDE0               B        ??MenuPaint_2
    189                      case 111   : Lader_Paint();        break;
   \                     ??MenuPaint_15:
   \   00000226   ........           BL       Lader_Paint
   \   0000022A   EAE0               B        ??MenuPaint_2
    190                          case 1110 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
   \                     ??MenuPaint_22:
   \   0000022C   ....               LDR      R0,??DataTable27  ;; g_leng
   \   0000022E   0068               LDR      R0,[R0, #+0]
   \   00000230   9621               MOVS     R1,#+150
   \   00000232   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000234   4843               MULS     R0,R1,R0
   \   00000236   ....               LDR      R1,??DataTable28  ;; Speech
   \   00000238   0818               ADDS     R0,R1,R0
   \   0000023A   7449               LDR      R1,??MenuPaint_56+0x4  ;; 0x456
   \   0000023C   4218               ADDS     R2,R0,R1
   \   0000023E   0F39               SUBS     R1,R1,#+15
   \   00000240   4118               ADDS     R1,R0,R1
   \   00000242   ....               LDR      R0,??DataTable13  ;; `?<Constant "Info ">`
   \   00000244   ........           BL       Ask_Paint
   \   00000248   DBE0               B        ??MenuPaint_2
    191                          case 1111: Procedure_Paint();  break;
   \                     ??MenuPaint_24:
   \   0000024A   ........           BL       Procedure_Paint
   \   0000024E   D8E0               B        ??MenuPaint_2
    192                            case 11111: ValueChange_Paint(ValueChange);  break;
   \                     ??MenuPaint_42:
   \   00000250   806D               LDR      R0,[R0, #+88]
   \   00000252   ........           BL       ValueChange_Paint
   \   00000256   D4E0               B        ??MenuPaint_2
    193                            case 111111 : Message("Max=", "+/- 3000 ",11111);  break;
   \                     ??MenuPaint_52:
   \   00000258   ....               LDR      R0,??DataTable13  ;; `?<Constant "Info ">`
   \   0000025A   ....               LDR      R2,??DataTable14  ;; 0x2b67
   \   0000025C   0100               MOVS     R1,R0
   \   0000025E   1031               ADDS     R1,R1,#+16
   \   00000260   0830               ADDS     R0,R0,#+8
   \   00000262   ........           BL       Message
   \   00000266   CCE0               B        ??MenuPaint_2
    194                          case 1112: LaderChange_Paint();  break;
   \                     ??MenuPaint_25:
   \   00000268   ........           BL       LaderChange_Paint
   \   0000026C   C9E0               B        ??MenuPaint_2
    195                            case 11122: RemRow_Paint();  break;         
   \                     ??MenuPaint_43:
   \   0000026E   ........           BL       RemRow_Paint
   \   00000272   C6E0               B        ??MenuPaint_2
    196                      case 112  : ScreenSet_Paint(&gProg.Screen[CurModifSheet]);        break;   
   \                     ??MenuPaint_16:
   \   00000274   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   00000276   4079               LDRB     R0,[R0, #+5]
   \   00000278   A022               MOVS     R2,#+160
   \   0000027A   5043               MULS     R0,R2,R0
   \   0000027C   ....               LDR      R2,??DataTable33  ;; gProg
   \   0000027E   1018               ADDS     R0,R2,R0
   \   00000280   4018               ADDS     R0,R0,R1
   \   00000282   ........           BL       ScreenSet_Paint
   \   00000286   BCE0               B        ??MenuPaint_2
    197                          case 1120 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
    198                          case 1121  : ScreenDesign1_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_26:
   \   00000288   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   0000028A   4079               LDRB     R0,[R0, #+5]
   \   0000028C   A022               MOVS     R2,#+160
   \   0000028E   5043               MULS     R0,R2,R0
   \   00000290   ....               LDR      R2,??DataTable33  ;; gProg
   \   00000292   1018               ADDS     R0,R2,R0
   \   00000294   4018               ADDS     R0,R0,R1
   \   00000296   ........           BL       ScreenDesign1_Paint
   \   0000029A   B2E0               B        ??MenuPaint_2
    199                              case 11211  : ZoneGraph_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_44:
   \   0000029C   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   0000029E   4079               LDRB     R0,[R0, #+5]
   \   000002A0   A022               MOVS     R2,#+160
   \   000002A2   5043               MULS     R0,R2,R0
   \   000002A4   ....               LDR      R2,??DataTable33  ;; gProg
   \   000002A6   1018               ADDS     R0,R2,R0
   \   000002A8   4018               ADDS     R0,R0,R1
   \   000002AA   ........           BL       ZoneGraph_Paint
   \   000002AE   A8E0               B        ??MenuPaint_2
    200                                  case 112111  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_38:
   \   000002B0   0100               MOVS     R1,R0
   \   000002B2   006D               LDR      R0,[R0, #+80]
   \   000002B4   ........           BL       TextChange_Paint
   \   000002B8   A3E0               B        ??MenuPaint_2
    201                                  case 112112  :  AnalogGraph_Paint(AnalogToChange);break;
   \                     ??MenuPaint_45:
   \   000002BA   006E               LDR      R0,[R0, #+96]
   \   000002BC   ........           BL       AnalogGraph_Paint
   \   000002C0   9FE0               B        ??MenuPaint_2
    202                                    case 1121121  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    203                              case 11212  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    204                              case 11213  :  AnalogGraph_Paint(AnalogToChange);break;
    205                                case 112131  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    206                              case 11214  :  ButtonOptions_Paint(ButtonToChange); break;
   \                     ??MenuPaint_46:
   \   000002C2   406D               LDR      R0,[R0, #+84]
   \   000002C4   ........           BL       ButtonOptions_Paint
   \   000002C8   9BE0               B        ??MenuPaint_2
    207                                case 112141  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    208                                case 112142  :  ButtonAction_Paint(ButtonToChange); break;
   \                     ??MenuPaint_53:
   \   000002CA   406D               LDR      R0,[R0, #+84]
   \   000002CC   ........           BL       ButtonAction_Paint
   \   000002D0   97E0               B        ??MenuPaint_2
    209                              case 11215  :  BigTemperLabel_Paint(); break;
   \                     ??MenuPaint_47:
   \   000002D2   ........           BL       BigTemperLabel_Paint
   \   000002D6   94E0               B        ??MenuPaint_2
    210                          case 1122  :  ThermostatSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_27:
   \   000002D8   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   000002DA   4079               LDRB     R0,[R0, #+5]
   \   000002DC   A022               MOVS     R2,#+160
   \   000002DE   5043               MULS     R0,R2,R0
   \   000002E0   ....               LDR      R2,??DataTable33  ;; gProg
   \   000002E2   1018               ADDS     R0,R2,R0
   \   000002E4   4018               ADDS     R0,R0,R1
   \   000002E6   ........           BL       ThermostatSet_Paint
   \   000002EA   8AE0               B        ??MenuPaint_2
    211                                case 11224   :  ButtonOptions_Paint(ButtonToChange); break;
    212                                case 112241  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    213                                case 112242  :  ButtonAction_Paint(ButtonToChange); break;
    214                          case 1123  :  ScreenTimetableSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_28:
   \   000002EC   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   000002EE   4079               LDRB     R0,[R0, #+5]
   \   000002F0   A022               MOVS     R2,#+160
   \   000002F2   5043               MULS     R0,R2,R0
   \   000002F4   ....               LDR      R2,??DataTable33  ;; gProg
   \   000002F6   1018               ADDS     R0,R2,R0
   \   000002F8   4018               ADDS     R0,R0,R1
   \   000002FA   ........           BL       ScreenTimetableSet_Paint
   \   000002FE   80E0               B        ??MenuPaint_2
   \                     ??MenuPaint_0:
   \   00000300   ........           DC32     TextToChangeLength
   \   00000304   ........           DC32     g_Message
   \   00000308   DD030000           DC32     0x3dd
    215                          case 1124  :  ScreenAlarmSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_29:
   \   0000030C   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   0000030E   4079               LDRB     R0,[R0, #+5]
   \   00000310   A022               MOVS     R2,#+160
   \   00000312   5043               MULS     R0,R2,R0
   \   00000314   ....               LDR      R2,??DataTable33  ;; gProg
   \   00000316   1018               ADDS     R0,R2,R0
   \   00000318   4018               ADDS     R0,R0,R1
   \   0000031A   ........           BL       ScreenAlarmSet_Paint
   \   0000031E   70E0               B        ??MenuPaint_2
    216                      case 113   : Options_Paint();          break;  
   \                     ??MenuPaint_17:
   \   00000320   ........           BL       Options_Paint
   \   00000324   6DE0               B        ??MenuPaint_2
    217                          case 1131 : Ask_Paint("Restart",Speech[g_leng].Potwierdz,"");  break;
   \                     ??MenuPaint_30:
   \   00000326   38A2               ADR      R2,??MenuPaint_56  ;; 0x00, 0x00, 0x00, 0x00
   \   00000328   FF20               MOVS     R0,#+255
   \   0000032A   F030               ADDS     R0,R0,#+240      ;; #+495
   \   0000032C   ....               LDR      R1,??DataTable27  ;; g_leng
   \   0000032E   0968               LDR      R1,[R1, #+0]
   \   00000330   9623               MOVS     R3,#+150
   \   00000332   1B01               LSLS     R3,R3,#+4        ;; #+2400
   \   00000334   5943               MULS     R1,R3,R1
   \   00000336   ....               LDR      R3,??DataTable28  ;; Speech
   \   00000338   5918               ADDS     R1,R3,R1
   \   0000033A   0918               ADDS     R1,R1,R0
   \   0000033C   ....               LDR      R0,??DataTable29  ;; `?<Constant "Info ">` + 28
   \   0000033E   ........           BL       Ask_Paint
   \   00000342   5EE0               B        ??MenuPaint_2
    218                      case 114   : Setup_Paint();            break;
   \                     ??MenuPaint_18:
   \   00000344   ........           BL       Setup_Paint
   \   00000348   5BE0               B        ??MenuPaint_2
    219                          case 1141 : SetupLang_Paint();         break;
   \                     ??MenuPaint_31:
   \   0000034A   ........           BL       SetupLang_Paint
   \   0000034E   58E0               B        ??MenuPaint_2
    220                          case 1142 : SetupTime_Paint();        break;  
   \                     ??MenuPaint_32:
   \   00000350   ........           BL       SetupTime_Paint
   \   00000354   55E0               B        ??MenuPaint_2
    221                          case 1143 : SetupPass_Paint();         break;
   \                     ??MenuPaint_33:
   \   00000356   ........           BL       SetupPass_Paint
   \   0000035A   52E0               B        ??MenuPaint_2
    222                              case 11431 : SetupOldPass_Paint();         break;
   \                     ??MenuPaint_48:
   \   0000035C   ........           BL       SetupOldPass_Paint
   \   00000360   4FE0               B        ??MenuPaint_2
    223                                  case 114311 : SetupNewPass_Paint();         break;
   \                     ??MenuPaint_54:
   \   00000362   ........           BL       SetupNewPass_Paint
   \   00000366   4CE0               B        ??MenuPaint_2
    224                              case 11432 : SetupOldPass_Paint();         break;
    225                                  case 114321 : SetupNewPass_Paint();         break;     
    226                         case 1144 : SetTouchScreen_Paint();  break;
    227                         case 1145 : ScreenSever_Paint();  break;
   \                     ??MenuPaint_34:
   \   00000368   ........           BL       ScreenSever_Paint
   \   0000036C   49E0               B        ??MenuPaint_2
    228                         case 1147 : MasterSlave_Paint();  break;
   \                     ??MenuPaint_35:
   \   0000036E   ........           BL       MasterSlave_Paint
   \   00000372   46E0               B        ??MenuPaint_2
    229                         case 1148 : RF_Channel_Paint();  break;
   \                     ??MenuPaint_36:
   \   00000374   ........           BL       RF_Channel_Paint
   \   00000378   43E0               B        ??MenuPaint_2
    230                      case 115  : NeuronsList_Paint();    break;
   \                     ??MenuPaint_19:
   \   0000037A   ........           BL       NeuronsList_Paint
   \   0000037E   40E0               B        ??MenuPaint_2
    231                         case 1150 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
    232                         case 1151 : NeuronNrChange_Paint(NeuronIdChange);  break;
   \                     ??MenuPaint_37:
   \   00000380   C06D               LDR      R0,[R0, #+92]
   \   00000382   ........           BL       NeuronNrChange_Paint
   \   00000386   3CE0               B        ??MenuPaint_2
    233                         case 1152 :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    234                         case 1153 :  Node_Paint(NeuronNrChange); break;
   \                     ??MenuPaint_39:
   \   00000388   C078               LDRB     R0,[R0, #+3]
   \   0000038A   ........           BL       Node_Paint
   \   0000038E   38E0               B        ??MenuPaint_2
    235                            case 11531 : NeuronNrChange_Paint(NeuronIdChange);  break;
    236                            case 11534 : NodeTestTrans_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_49:
   \   00000390   C078               LDRB     R0,[R0, #+3]
   \   00000392   ........           BL       NodeTestTrans_Paint
   \   00000396   34E0               B        ??MenuPaint_2
    237                            case 11535 : NodeStanIO_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_50:
   \   00000398   C078               LDRB     R0,[R0, #+3]
   \   0000039A   ........           BL       NodeStanIO_Paint
   \   0000039E   30E0               B        ??MenuPaint_2
    238                      case 116  : Info_Paint();    break;
   \                     ??MenuPaint_20:
   \   000003A0   ........           BL       Info_Paint
   \   000003A4   2DE0               B        ??MenuPaint_2
    239                      case 117  : Net_Paint();     break;
   \                     ??MenuPaint_21:
   \   000003A6   ........           BL       Net_Paint
   \   000003AA   2AE0               B        ??MenuPaint_2
    240                         case 1171  : UstawSiec_Paint();     break;
   \                     ??MenuPaint_40:
   \   000003AC   ........           BL       UstawSiec_Paint
   \   000003B0   27E0               B        ??MenuPaint_2
    241                            case 11711  : Punkt_dostepuWiFi_Paint();     break;
   \                     ??MenuPaint_51:
   \   000003B2   ........           BL       Punkt_dostepuWiFi_Paint
   \   000003B6   24E0               B        ??MenuPaint_2
    242                              case 117111  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    243                              case 117112 :  WiFiConecting_Paint(); break;
   \                     ??MenuPaint_55:
   \   000003B8   ........           BL       WiFiConecting_Paint
   \   000003BC   21E0               B        ??MenuPaint_2
    244                         case 1172 :  Host_WiFi_Paint(); break;
   \                     ??MenuPaint_41:
   \   000003BE   ........           BL       Host_WiFi_Paint
   \   000003C2   1EE0               B        ??MenuPaint_2
    245                            case 11721  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    246                case 12     : ThermostatAutoSet_Paint(&gProg.Screen[CurrentSheet]);         break;  
   \                     ??MenuPaint_10:
   \   000003C4   ....               LDR      R1,??DataTable32  ;; 0xbb98
   \   000003C6   0079               LDRB     R0,[R0, #+4]
   \   000003C8   A022               MOVS     R2,#+160
   \   000003CA   5043               MULS     R0,R2,R0
   \   000003CC   ....               LDR      R2,??DataTable33  ;; gProg
   \   000003CE   1018               ADDS     R0,R2,R0
   \   000003D0   4018               ADDS     R0,R0,R1
   \   000003D2   ........           BL       ThermostatAutoSet_Paint
   \   000003D6   14E0               B        ??MenuPaint_2
    247                      case 120 :   Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
    248                      case 121     : ThermostatChartSet_Paint(&gProg.Screen[CurrentSheet], CurentChartModyfi);         break;  
   \                     ??MenuPaint_23:
   \   000003D8   8178               LDRB     R1,[R0, #+2]
   \   000003DA   ....               LDR      R2,??DataTable32  ;; 0xbb98
   \   000003DC   0079               LDRB     R0,[R0, #+4]
   \   000003DE   A023               MOVS     R3,#+160
   \   000003E0   5843               MULS     R0,R3,R0
   \   000003E2   ....               LDR      R3,??DataTable33  ;; gProg
   \   000003E4   1818               ADDS     R0,R3,R0
   \   000003E6   8018               ADDS     R0,R0,R2
   \   000003E8   ........           BL       ThermostatChartSet_Paint
   \   000003EC   09E0               B        ??MenuPaint_2
    249                case 13     : TimetableSet_Paint();         break;   
   \                     ??MenuPaint_11:
   \   000003EE   ........           BL       TimetableSet_Paint
   \   000003F2   06E0               B        ??MenuPaint_2
    250                case 14     : AlarmPass_Paint(CurrentSheet);         break;   
   \                     ??MenuPaint_12:
   \   000003F4   0079               LDRB     R0,[R0, #+4]
   \   000003F6   ........           BL       AlarmPass_Paint
   \   000003FA   02E0               B        ??MenuPaint_2
    251                case 15     : AlarmPassChange_Paint(CurrentSheet);         break;  
   \                     ??MenuPaint_13:
   \   000003FC   0079               LDRB     R0,[R0, #+4]
   \   000003FE   ........           BL       AlarmPassChange_Paint
    252          
    253                             
    254            }
    255             
    256          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \                     ??MenuPaint_2:
   \   00000402   08BC               POP      {R3}
   \   00000404   01BC               POP      {R0}
   \   00000406   0047               BX       R0               ;; return
   \                     ??MenuPaint_56:
   \   00000408   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   0000040C   56040000           DC32     0x456
    257          
    258          
    259          
    260          
    261          
    262          //*-----------------------------------------------------------------------------
    263          //* Nazwa funkcji :    ScreenEvent
    264          //* Funkcja obs³ugi zdarzenia menu ekranowego
    265          //*-----------------------------------------------------------------------------
    266          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    267          //*-----------------------------------------------------------------------------
    268          
    269          

   \                                 In section Debug.txt, align 4, keep-with-next
    270          void ScreenEvent(void)
    271          {
   \                     ScreenEvent:
   \   00000000   01B5               PUSH     {R0,LR}
    272            
    273          
    274            
    275            if (g_Message==0)
   \   00000002   BA48               LDR      R0,??ScreenEvent_0  ;; g_Message
   \   00000004   0168               LDR      R1,[R0, #+0]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   00D0               BEQ      .+4
   \   0000000A   C8E1               B        ??ScreenEvent_1
    276            {
    277            switch (MenuLevel)
   \   0000000C   B848               LDR      R0,??ScreenEvent_0+0x4  ;; TextToChangeLength
   \   0000000E   816C               LDR      R1,[R0, #+72]
   \   00000010   0029               CMP      R1,#+0
   \   00000012   00D1               BNE      .+4
   \   00000014   C5E0               B        ??ScreenEvent_2
   \   00000016   491E               SUBS     R1,R1,#+1
   \   00000018   00D1               BNE      .+4
   \   0000001A   C5E0               B        ??ScreenEvent_3
   \   0000001C   C91E               SUBS     R1,R1,#+3
   \   0000001E   00D1               BNE      .+4
   \   00000020   CCE0               B        ??ScreenEvent_4
   \   00000022   491E               SUBS     R1,R1,#+1
   \   00000024   00D1               BNE      .+4
   \   00000026   CCE0               B        ??ScreenEvent_5
   \   00000028   491F               SUBS     R1,R1,#+5
   \   0000002A   00D1               BNE      .+4
   \   0000002C   CFE0               B        ??ScreenEvent_6
   \   0000002E   491E               SUBS     R1,R1,#+1
   \   00000030   00D1               BNE      .+4
   \   00000032   D0E0               B        ??ScreenEvent_7
   \   00000034   491E               SUBS     R1,R1,#+1
   \   00000036   00D1               BNE      .+4
   \   00000038   91E1               B        ??ScreenEvent_8
   \   0000003A   491E               SUBS     R1,R1,#+1
   \   0000003C   00D1               BNE      .+4
   \   0000003E   A3E1               B        ??ScreenEvent_9
   \   00000040   491E               SUBS     R1,R1,#+1
   \   00000042   00D1               BNE      .+4
   \   00000044   A3E1               B        ??ScreenEvent_10
   \   00000046   491E               SUBS     R1,R1,#+1
   \   00000048   00D1               BNE      .+4
   \   0000004A   A4E1               B        ??ScreenEvent_11
   \   0000004C   2439               SUBS     R1,R1,#+36
   \   0000004E   00D1               BNE      .+4
   \   00000050   BAE0               B        ??ScreenEvent_12
   \   00000052   3C39               SUBS     R1,R1,#+60
   \   00000054   00D1               BNE      .+4
   \   00000056   C1E0               B        ??ScreenEvent_13
   \   00000058   491E               SUBS     R1,R1,#+1
   \   0000005A   00D1               BNE      .+4
   \   0000005C   D9E0               B        ??ScreenEvent_14
   \   0000005E   491E               SUBS     R1,R1,#+1
   \   00000060   00D1               BNE      .+4
   \   00000062   28E1               B        ??ScreenEvent_15
   \   00000064   491E               SUBS     R1,R1,#+1
   \   00000066   00D1               BNE      .+4
   \   00000068   2BE1               B        ??ScreenEvent_16
   \   0000006A   491E               SUBS     R1,R1,#+1
   \   0000006C   00D1               BNE      .+4
   \   0000006E   54E1               B        ??ScreenEvent_17
   \   00000070   491E               SUBS     R1,R1,#+1
   \   00000072   00D1               BNE      .+4
   \   00000074   64E1               B        ??ScreenEvent_18
   \   00000076   491E               SUBS     R1,R1,#+1
   \   00000078   00D1               BNE      .+4
   \   0000007A   64E1               B        ??ScreenEvent_19
   \   0000007C   C91E               SUBS     R1,R1,#+3
   \   0000007E   00D1               BNE      .+4
   \   00000080   AFE0               B        ??ScreenEvent_20
   \   00000082   491E               SUBS     R1,R1,#+1
   \   00000084   00D1               BNE      .+4
   \   00000086   74E1               B        ??ScreenEvent_21
   \   00000088   9A4A               LDR      R2,??ScreenEvent_0+0x8  ;; 0x3dd
   \   0000008A   891A               SUBS     R1,R1,R2
   \   0000008C   00D1               BNE      .+4
   \   0000008E   A8E0               B        ??ScreenEvent_20
   \   00000090   491E               SUBS     R1,R1,#+1
   \   00000092   00D1               BNE      .+4
   \   00000094   A8E0               B        ??ScreenEvent_22
   \   00000096   491E               SUBS     R1,R1,#+1
   \   00000098   00D1               BNE      .+4
   \   0000009A   B4E0               B        ??ScreenEvent_23
   \   0000009C   0839               SUBS     R1,R1,#+8
   \   0000009E   00D1               BNE      .+4
   \   000000A0   9FE0               B        ??ScreenEvent_20
   \   000000A2   491E               SUBS     R1,R1,#+1
   \   000000A4   00D1               BNE      .+4
   \   000000A6   BEE0               B        ??ScreenEvent_24
   \   000000A8   491E               SUBS     R1,R1,#+1
   \   000000AA   00D1               BNE      .+4
   \   000000AC   E5E0               B        ??ScreenEvent_25
   \   000000AE   491E               SUBS     R1,R1,#+1
   \   000000B0   00D1               BNE      .+4
   \   000000B2   ECE0               B        ??ScreenEvent_26
   \   000000B4   491E               SUBS     R1,R1,#+1
   \   000000B6   00D1               BNE      .+4
   \   000000B8   F3E0               B        ??ScreenEvent_27
   \   000000BA   C91F               SUBS     R1,R1,#+7
   \   000000BC   00D1               BNE      .+4
   \   000000BE   FDE0               B        ??ScreenEvent_28
   \   000000C0   0A39               SUBS     R1,R1,#+10
   \   000000C2   00D1               BNE      .+4
   \   000000C4   00E1               B        ??ScreenEvent_29
   \   000000C6   491E               SUBS     R1,R1,#+1
   \   000000C8   00D1               BNE      .+4
   \   000000CA   00E1               B        ??ScreenEvent_30
   \   000000CC   491E               SUBS     R1,R1,#+1
   \   000000CE   00D1               BNE      .+4
   \   000000D0   00E1               B        ??ScreenEvent_31
   \   000000D2   491E               SUBS     R1,R1,#+1
   \   000000D4   72D0               BEQ      ??ScreenEvent_4
   \   000000D6   491E               SUBS     R1,R1,#+1
   \   000000D8   00D1               BNE      .+4
   \   000000DA   15E1               B        ??ScreenEvent_32
   \   000000DC   891E               SUBS     R1,R1,#+2
   \   000000DE   00D1               BNE      .+4
   \   000000E0   15E1               B        ??ScreenEvent_33
   \   000000E2   491E               SUBS     R1,R1,#+1
   \   000000E4   00D1               BNE      .+4
   \   000000E6   15E1               B        ??ScreenEvent_34
   \   000000E8   891E               SUBS     R1,R1,#+2
   \   000000EA   7AD0               BEQ      ??ScreenEvent_20
   \   000000EC   491E               SUBS     R1,R1,#+1
   \   000000EE   00D1               BNE      .+4
   \   000000F0   16E1               B        ??ScreenEvent_35
   \   000000F2   491E               SUBS     R1,R1,#+1
   \   000000F4   00D1               BNE      .+4
   \   000000F6   AAE0               B        ??ScreenEvent_36
   \   000000F8   491E               SUBS     R1,R1,#+1
   \   000000FA   00D1               BNE      .+4
   \   000000FC   14E1               B        ??ScreenEvent_37
   \   000000FE   1239               SUBS     R1,R1,#+18
   \   00000100   00D1               BNE      .+4
   \   00000102   23E1               B        ??ScreenEvent_38
   \   00000104   491E               SUBS     R1,R1,#+1
   \   00000106   00D1               BNE      .+4
   \   00000108   26E1               B        ??ScreenEvent_39
   \   0000010A   B14A               LDR      R2,??ScreenEvent_40  ;; 0x26d3
   \   0000010C   891A               SUBS     R1,R1,R2
   \   0000010E   6ED0               BEQ      ??ScreenEvent_41
   \   00000110   0B39               SUBS     R1,R1,#+11
   \   00000112   7BD0               BEQ      ??ScreenEvent_42
   \   00000114   5939               SUBS     R1,R1,#+89
   \   00000116   00D1               BNE      .+4
   \   00000118   8FE0               B        ??ScreenEvent_43
   \   0000011A   491E               SUBS     R1,R1,#+1
   \   0000011C   00D1               BNE      .+4
   \   0000011E   96E0               B        ??ScreenEvent_36
   \   00000120   491E               SUBS     R1,R1,#+1
   \   00000122   00D1               BNE      .+4
   \   00000124   9AE0               B        ??ScreenEvent_44
   \   00000126   491E               SUBS     R1,R1,#+1
   \   00000128   00D1               BNE      .+4
   \   0000012A   9BE0               B        ??ScreenEvent_45
   \   0000012C   491E               SUBS     R1,R1,#+1
   \   0000012E   00D1               BNE      .+4
   \   00000130   A0E0               B        ??ScreenEvent_46
   \   00000132   0939               SUBS     R1,R1,#+9
   \   00000134   00D1               BNE      .+4
   \   00000136   95E0               B        ??ScreenEvent_45
   \   00000138   CF39               SUBS     R1,R1,#+207
   \   0000013A   00D1               BNE      .+4
   \   0000013C   CDE0               B        ??ScreenEvent_47
   \   0000013E   491E               SUBS     R1,R1,#+1
   \   00000140   00D1               BNE      .+4
   \   00000142   D9E0               B        ??ScreenEvent_48
   \   00000144   6339               SUBS     R1,R1,#+99
   \   00000146   00D1               BNE      .+4
   \   00000148   EAE0               B        ??ScreenEvent_35
   \   0000014A   C91E               SUBS     R1,R1,#+3
   \   0000014C   00D1               BNE      .+4
   \   0000014E   EFE0               B        ??ScreenEvent_49
   \   00000150   491E               SUBS     R1,R1,#+1
   \   00000152   00D1               BNE      .+4
   \   00000154   F0E0               B        ??ScreenEvent_50
   \   00000156   B039               SUBS     R1,R1,#+176
   \   00000158   00D1               BNE      .+4
   \   0000015A   FAE0               B        ??ScreenEvent_51
   \   0000015C   0A39               SUBS     R1,R1,#+10
   \   0000015E   76D0               BEQ      ??ScreenEvent_36
   \   00000160   9C4A               LDR      R2,??ScreenEvent_40+0x4  ;; 0x1843e
   \   00000162   891A               SUBS     R1,R1,R2
   \   00000164   47D0               BEQ      ??ScreenEvent_52
   \   00000166   FA22               MOVS     R2,#+250
   \   00000168   9200               LSLS     R2,R2,#+2        ;; #+1000
   \   0000016A   891A               SUBS     R1,R1,R2
   \   0000016C   6FD0               BEQ      ??ScreenEvent_36
   \   0000016E   491E               SUBS     R1,R1,#+1
   \   00000170   74D0               BEQ      ??ScreenEvent_44
   \   00000172   1339               SUBS     R1,R1,#+19
   \   00000174   6BD0               BEQ      ??ScreenEvent_36
   \   00000176   0A39               SUBS     R1,R1,#+10
   \   00000178   69D0               BEQ      ??ScreenEvent_36
   \   0000017A   491E               SUBS     R1,R1,#+1
   \   0000017C   76D0               BEQ      ??ScreenEvent_53
   \   0000017E   6339               SUBS     R1,R1,#+99
   \   00000180   65D0               BEQ      ??ScreenEvent_36
   \   00000182   491E               SUBS     R1,R1,#+1
   \   00000184   72D0               BEQ      ??ScreenEvent_53
   \   00000186   944A               LDR      R2,??ScreenEvent_40+0x8  ;; 0x815
   \   00000188   891A               SUBS     R1,R1,R2
   \   0000018A   00D1               BNE      .+4
   \   0000018C   A9E0               B        ??ScreenEvent_54
   \   0000018E   0A39               SUBS     R1,R1,#+10
   \   00000190   00D1               BNE      .+4
   \   00000192   B5E0               B        ??ScreenEvent_55
   \   00000194   914A               LDR      R2,??ScreenEvent_40+0xC  ;; 0xae6
   \   00000196   891A               SUBS     R1,R1,R2
   \   00000198   59D0               BEQ      ??ScreenEvent_36
   \   0000019A   914A               LDR      R2,??ScreenEvent_40+0x10  ;; 0xf51ea
   \   0000019C   891A               SUBS     R1,R1,R2
   \   0000019E   56D0               BEQ      ??ScreenEvent_36
   \   000001A0   0CE1               B        ??ScreenEvent_56
    278            {
    279              case 0     : StartAnimation_Event();  break;
   \                     ??ScreenEvent_2:
   \   000001A2   ........           BL       StartAnimation_Event
   \   000001A6   09E1               B        ??ScreenEvent_56
    280              case 1     : MainSide_Event(&gProg.Screen[CurrentSheet]);              break;
   \                     ??ScreenEvent_3:
   \   000001A8   8E49               LDR      R1,??ScreenEvent_40+0x14  ;; 0xbb98
   \   000001AA   0079               LDRB     R0,[R0, #+4]
   \   000001AC   A022               MOVS     R2,#+160
   \   000001AE   5043               MULS     R0,R2,R0
   \   000001B0   8D4A               LDR      R2,??ScreenEvent_40+0x18  ;; gProg
   \   000001B2   1018               ADDS     R0,R2,R0
   \   000001B4   4018               ADDS     R0,R0,R1
   \   000001B6   ........           BL       MainSide_Event
   \   000001BA   FFE0               B        ??ScreenEvent_56
    281              case 4     : SetTouchScreen_Event();  break; 
   \                     ??ScreenEvent_4:
   \   000001BC   ........           BL       SetTouchScreen_Event
   \   000001C0   FCE0               B        ??ScreenEvent_56
    282              case 5     : AdvanceSet_Event();  break;
   \                     ??ScreenEvent_5:
   \   000001C2   ........           BL       AdvanceSet_Event
   \   000001C6   F9E0               B        ??ScreenEvent_56
    283              case 51    : CleanAll_Event();          break; 
   \                     ??ScreenEvent_12:
   \   000001C8   ........           BL       CleanAll_Event
   \   000001CC   F6E0               B        ??ScreenEvent_56
    284              case 10: MenuAccessPass_Event(1);  break;
   \                     ??ScreenEvent_6:
   \   000001CE   0120               MOVS     R0,#+1
   \   000001D0   ........           BL       MenuAccessPass_Event
   \   000001D4   F2E0               B        ??ScreenEvent_56
    285                case 11: MenuSide_Event(); break;
   \                     ??ScreenEvent_7:
   \   000001D6   ........           BL       MenuSide_Event
   \   000001DA   EFE0               B        ??ScreenEvent_56
    286                
    287                      case 111  : Lader_Event();        break;
   \                     ??ScreenEvent_13:
   \   000001DC   ........           BL       Lader_Event
   \   000001E0   ECE0               B        ??ScreenEvent_56
    288                            case 1110 : SaveChanges_Evant(); break;
   \                     ??ScreenEvent_20:
   \   000001E2   ........           BL       SaveChanges_Evant
   \   000001E6   E9E0               B        ??ScreenEvent_56
    289                            case 1111: Procedure_Event(); break;
   \                     ??ScreenEvent_22:
   \   000001E8   ........           BL       Procedure_Event
   \   000001EC   E6E0               B        ??ScreenEvent_56
    290                              case 11111: ValueChange_Evant(ValueChange);  break;
   \                     ??ScreenEvent_41:
   \   000001EE   806D               LDR      R0,[R0, #+88]
   \   000001F0   ........           BL       ValueChange_Evant
   \   000001F4   E2E0               B        ??ScreenEvent_56
    291                                case 111111 : Message("Max=", "+/- 3000 ",11111);  break;
   \                     ??ScreenEvent_52:
   \   000001F6   7D48               LDR      R0,??ScreenEvent_40+0x1C  ;; `?<Constant "Info ">`
   \   000001F8   7D4A               LDR      R2,??ScreenEvent_40+0x20  ;; 0x2b67
   \   000001FA   0100               MOVS     R1,R0
   \   000001FC   1031               ADDS     R1,R1,#+16
   \   000001FE   0830               ADDS     R0,R0,#+8
   \   00000200   ........           BL       Message
   \   00000204   DAE0               B        ??ScreenEvent_56
    292                            case 1112: LaderChange_Event();  break;
   \                     ??ScreenEvent_23:
   \   00000206   ........           BL       LaderChange_Event
   \   0000020A   D7E0               B        ??ScreenEvent_56
    293                              case 11122: RemRow_Event();  break;
   \                     ??ScreenEvent_42:
   \   0000020C   ........           BL       RemRow_Event
   \   00000210   D4E0               B        ??ScreenEvent_56
    294                            
    295                      case 112  : ScreenSet_Event(&gProg.Screen[CurModifSheet]);        break;
   \                     ??ScreenEvent_14:
   \   00000212   7449               LDR      R1,??ScreenEvent_40+0x14  ;; 0xbb98
   \   00000214   4079               LDRB     R0,[R0, #+5]
   \   00000216   A022               MOVS     R2,#+160
   \   00000218   5043               MULS     R0,R2,R0
   \   0000021A   734A               LDR      R2,??ScreenEvent_40+0x18  ;; gProg
   \   0000021C   1018               ADDS     R0,R2,R0
   \   0000021E   4018               ADDS     R0,R0,R1
   \   00000220   ........           BL       ScreenSet_Event
   \   00000224   CAE0               B        ??ScreenEvent_56
    296                            case 1120 : SaveChanges_Evant(); break;
    297                            case 1121  : ScreenDesign1_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_24:
   \   00000226   6F49               LDR      R1,??ScreenEvent_40+0x14  ;; 0xbb98
   \   00000228   4079               LDRB     R0,[R0, #+5]
   \   0000022A   A022               MOVS     R2,#+160
   \   0000022C   5043               MULS     R0,R2,R0
   \   0000022E   6E4A               LDR      R2,??ScreenEvent_40+0x18  ;; gProg
   \   00000230   1018               ADDS     R0,R2,R0
   \   00000232   4018               ADDS     R0,R0,R1
   \   00000234   ........           BL       ScreenDesign1_Event
   \   00000238   C0E0               B        ??ScreenEvent_56
    298                                case 11211  : ZoneGraph_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_43:
   \   0000023A   6A49               LDR      R1,??ScreenEvent_40+0x14  ;; 0xbb98
   \   0000023C   4079               LDRB     R0,[R0, #+5]
   \   0000023E   A022               MOVS     R2,#+160
   \   00000240   5043               MULS     R0,R2,R0
   \   00000242   694A               LDR      R2,??ScreenEvent_40+0x18  ;; gProg
   \   00000244   1018               ADDS     R0,R2,R0
   \   00000246   4018               ADDS     R0,R0,R1
   \   00000248   ........           BL       ZoneGraph_Event
   \   0000024C   B6E0               B        ??ScreenEvent_56
    299                                    case 112111  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_36:
   \   0000024E   0200               MOVS     R2,R0
   \   00000250   521C               ADDS     R2,R2,#+1
   \   00000252   0100               MOVS     R1,R0
   \   00000254   006D               LDR      R0,[R0, #+80]
   \   00000256   ........           BL       TextChange_Evant
   \   0000025A   AFE0               B        ??ScreenEvent_56
    300                                    case 112112  :  AnalogGraph_Event(AnalogToChange);break;
   \                     ??ScreenEvent_44:
   \   0000025C   006E               LDR      R0,[R0, #+96]
   \   0000025E   ........           BL       AnalogGraph_Event
   \   00000262   ABE0               B        ??ScreenEvent_56
    301                                      case 1121121  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    302                                case 11212  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    303                                case 11213  :  AnalogGraph_Event(AnalogToChange);break;
    304                                    case 112131  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    305                                case 11214   :  ButtonOptions_Event(ButtonToChange); break;
   \                     ??ScreenEvent_45:
   \   00000264   406D               LDR      R0,[R0, #+84]
   \   00000266   ........           BL       ButtonOptions_Event
   \   0000026A   A7E0               B        ??ScreenEvent_56
    306                                case 112141  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    307                                case 112142  :  ButtonAction_Event(ButtonToChange); break;
   \                     ??ScreenEvent_53:
   \   0000026C   406D               LDR      R0,[R0, #+84]
   \   0000026E   ........           BL       ButtonAction_Event
   \   00000272   A3E0               B        ??ScreenEvent_56
    308                                case 11215   :  BigTemperLabel_Event(); break;
   \                     ??ScreenEvent_46:
   \   00000274   ........           BL       BigTemperLabel_Event
   \   00000278   A0E0               B        ??ScreenEvent_56
    309                             case 1122  :  ThermostatSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_25:
   \   0000027A   5A49               LDR      R1,??ScreenEvent_40+0x14  ;; 0xbb98
   \   0000027C   4079               LDRB     R0,[R0, #+5]
   \   0000027E   A022               MOVS     R2,#+160
   \   00000280   5043               MULS     R0,R2,R0
   \   00000282   594A               LDR      R2,??ScreenEvent_40+0x18  ;; gProg
   \   00000284   1018               ADDS     R0,R2,R0
   \   00000286   4018               ADDS     R0,R0,R1
   \   00000288   ........           BL       ThermostatSet_Event
   \   0000028C   96E0               B        ??ScreenEvent_56
    310                                case 11224   :  ButtonOptions_Event(ButtonToChange); break;
    311                                case 112241  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    312                                case 112242  :  ButtonAction_Event(ButtonToChange); break;
    313                             case 1123  :  ScreenTimetableSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_26:
   \   0000028E   5549               LDR      R1,??ScreenEvent_40+0x14  ;; 0xbb98
   \   00000290   4079               LDRB     R0,[R0, #+5]
   \   00000292   A022               MOVS     R2,#+160
   \   00000294   5043               MULS     R0,R2,R0
   \   00000296   544A               LDR      R2,??ScreenEvent_40+0x18  ;; gProg
   \   00000298   1018               ADDS     R0,R2,R0
   \   0000029A   4018               ADDS     R0,R0,R1
   \   0000029C   ........           BL       ScreenTimetableSet_Event
   \   000002A0   8CE0               B        ??ScreenEvent_56
    314                             case 1124  :  ScreenAlarmSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_27:
   \   000002A2   5049               LDR      R1,??ScreenEvent_40+0x14  ;; 0xbb98
   \   000002A4   4079               LDRB     R0,[R0, #+5]
   \   000002A6   A022               MOVS     R2,#+160
   \   000002A8   5043               MULS     R0,R2,R0
   \   000002AA   4F4A               LDR      R2,??ScreenEvent_40+0x18  ;; gProg
   \   000002AC   1018               ADDS     R0,R2,R0
   \   000002AE   4018               ADDS     R0,R0,R1
   \   000002B0   ........           BL       ScreenAlarmSet_Event
   \   000002B4   82E0               B        ??ScreenEvent_56
    315                      case 113  : Options_Event();          break; 
   \                     ??ScreenEvent_15:
   \   000002B6   ........           BL       Options_Event
   \   000002BA   7FE0               B        ??ScreenEvent_56
    316                            case 1131 : Restart_Event();          break; 
   \                     ??ScreenEvent_28:
   \   000002BC   ........           BL       Restart_Event
   \   000002C0   7CE0               B        ??ScreenEvent_56
    317                      case 114  : Setup_Event();            break; 
   \                     ??ScreenEvent_16:
   \   000002C2   ........           BL       Setup_Event
   \   000002C6   79E0               B        ??ScreenEvent_56
    318                            case 1141 : SetupLang_Event();         break;
   \                     ??ScreenEvent_29:
   \   000002C8   ........           BL       SetupLang_Event
   \   000002CC   76E0               B        ??ScreenEvent_56
    319                            case 1142 : SetupTime_Event();        break;
   \                     ??ScreenEvent_30:
   \   000002CE   ........           BL       SetupTime_Event
   \   000002D2   73E0               B        ??ScreenEvent_56
    320                            case 1143 : SetupPass_Event();         break;   
   \                     ??ScreenEvent_31:
   \   000002D4   ........           BL       SetupPass_Event
   \   000002D8   70E0               B        ??ScreenEvent_56
    321                                  case 11431 : SetupOldPass_Event(1);         break;
   \                     ??ScreenEvent_47:
   \   000002DA   0120               MOVS     R0,#+1
   \   000002DC   ........           BL       SetupOldPass_Event
   \   000002E0   6CE0               B        ??ScreenEvent_56
    322                                       case 114311 : SetupNewPass_Event(1);         break;
   \                     ??ScreenEvent_54:
   \   000002E2   0120               MOVS     R0,#+1
   \   000002E4   ........           BL       SetupNewPass_Event
   \   000002E8   68E0               B        ??ScreenEvent_56
   \   000002EA   C046               Nop      
   \                     ??ScreenEvent_0:
   \   000002EC   ........           DC32     g_Message
   \   000002F0   ........           DC32     TextToChangeLength
   \   000002F4   DD030000           DC32     0x3dd
    323                                  case 11432 : SetupOldPass_Event(2);         break;
   \                     ??ScreenEvent_48:
   \   000002F8   0220               MOVS     R0,#+2
   \   000002FA   ........           BL       SetupOldPass_Event
   \   000002FE   5DE0               B        ??ScreenEvent_56
    324                                       case 114321 : SetupNewPass_Event(2);         break;
   \                     ??ScreenEvent_55:
   \   00000300   0220               MOVS     R0,#+2
   \   00000302   ........           BL       SetupNewPass_Event
   \   00000306   59E0               B        ??ScreenEvent_56
    325                            case 1144 : SetTouchScreen_Event();  break;
    326                            case 1145 : ScreenSever_Event();  break;
   \                     ??ScreenEvent_32:
   \   00000308   ........           BL       ScreenSever_Event
   \   0000030C   56E0               B        ??ScreenEvent_56
    327                            case 1147 : MasterSlave_Event();  break;
   \                     ??ScreenEvent_33:
   \   0000030E   ........           BL       MasterSlave_Event
   \   00000312   53E0               B        ??ScreenEvent_56
    328                            case 1148 : RF_Channel_Event();  break;
   \                     ??ScreenEvent_34:
   \   00000314   ........           BL       RF_Channel_Event
   \   00000318   50E0               B        ??ScreenEvent_56
    329                      case 115  : NeuronsList_Event();  break;
   \                     ??ScreenEvent_17:
   \   0000031A   ........           BL       NeuronsList_Event
   \   0000031E   4DE0               B        ??ScreenEvent_56
    330                            case 1150 : SaveChanges_Evant(); break;
    331                            case 1151: NeuronNrChange_Evant(NeuronIdChange);  break;
   \                     ??ScreenEvent_35:
   \   00000320   C06D               LDR      R0,[R0, #+92]
   \   00000322   ........           BL       NeuronNrChange_Evant
   \   00000326   49E0               B        ??ScreenEvent_56
    332                            case 1152  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    333                            case 1153 :  Node_Event(NeuronNrChange); break;
   \                     ??ScreenEvent_37:
   \   00000328   C078               LDRB     R0,[R0, #+3]
   \   0000032A   ........           BL       Node_Event
   \   0000032E   45E0               B        ??ScreenEvent_56
    334                                case 11531 : NeuronNrChange_Evant(NeuronIdChange);  break;
    335                                case 11534 : NodeTestTrans_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_49:
   \   00000330   C078               LDRB     R0,[R0, #+3]
   \   00000332   ........           BL       NodeTestTrans_Event
   \   00000336   41E0               B        ??ScreenEvent_56
    336                                case 11535 : NodeStanIO_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_50:
   \   00000338   C078               LDRB     R0,[R0, #+3]
   \   0000033A   ........           BL       NodeStanIO_Event
   \   0000033E   3DE0               B        ??ScreenEvent_56
    337                      case 116  : Info_Event();    break;
   \                     ??ScreenEvent_18:
   \   00000340   ........           BL       Info_Event
   \   00000344   3AE0               B        ??ScreenEvent_56
    338                      case 117  : Net_Event();     break;
   \                     ??ScreenEvent_19:
   \   00000346   ........           BL       Net_Event
   \   0000034A   37E0               B        ??ScreenEvent_56
    339                            case 1171  : UstawSiec_Event();     break;
   \                     ??ScreenEvent_38:
   \   0000034C   ........           BL       UstawSiec_Event
   \   00000350   34E0               B        ??ScreenEvent_56
    340                                case 11711  : Punkt_dostepuWiFi_Event();     break;
   \                     ??ScreenEvent_51:
   \   00000352   ........           BL       Punkt_dostepuWiFi_Event
   \   00000356   31E0               B        ??ScreenEvent_56
    341                                  case 117111  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    342                            case 1172 : Host_WiFi_Event(); break;  
   \                     ??ScreenEvent_39:
   \   00000358   ........           BL       Host_WiFi_Event
   \   0000035C   2EE0               B        ??ScreenEvent_56
    343                                case 11721  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    344                    case 12     : ThermostatAutoSet_Event(&gProg.Screen[CurrentSheet]);         break;  
   \                     ??ScreenEvent_8:
   \   0000035E   2149               LDR      R1,??ScreenEvent_40+0x14  ;; 0xbb98
   \   00000360   0079               LDRB     R0,[R0, #+4]
   \   00000362   A022               MOVS     R2,#+160
   \   00000364   5043               MULS     R0,R2,R0
   \   00000366   204A               LDR      R2,??ScreenEvent_40+0x18  ;; gProg
   \   00000368   1018               ADDS     R0,R2,R0
   \   0000036A   4018               ADDS     R0,R0,R1
   \   0000036C   ........           BL       ThermostatAutoSet_Event
   \   00000370   24E0               B        ??ScreenEvent_56
    345                      case 120      : SaveChanges_Evant(); break;
    346                      case 121      : ThermostatChartSet_Event(&gProg.Screen[CurrentSheet], CurentChartModyfi);         break;  
   \                     ??ScreenEvent_21:
   \   00000372   8178               LDRB     R1,[R0, #+2]
   \   00000374   1B4A               LDR      R2,??ScreenEvent_40+0x14  ;; 0xbb98
   \   00000376   0079               LDRB     R0,[R0, #+4]
   \   00000378   A023               MOVS     R3,#+160
   \   0000037A   5843               MULS     R0,R3,R0
   \   0000037C   1A4B               LDR      R3,??ScreenEvent_40+0x18  ;; gProg
   \   0000037E   1818               ADDS     R0,R3,R0
   \   00000380   8018               ADDS     R0,R0,R2
   \   00000382   ........           BL       ThermostatChartSet_Event
   \   00000386   19E0               B        ??ScreenEvent_56
    347                    case 13     : TimetableSet_Event();         break;   
   \                     ??ScreenEvent_9:
   \   00000388   ........           BL       TimetableSet_Event
   \   0000038C   16E0               B        ??ScreenEvent_56
    348                    case 14     : AlarmPass_Event(CurrentSheet);         break; 
   \                     ??ScreenEvent_10:
   \   0000038E   0079               LDRB     R0,[R0, #+4]
   \   00000390   ........           BL       AlarmPass_Event
   \   00000394   12E0               B        ??ScreenEvent_56
    349                    case 15     : AlarmPassChange_Event(CurrentSheet);         break;  
   \                     ??ScreenEvent_11:
   \   00000396   0079               LDRB     R0,[R0, #+4]
   \   00000398   ........           BL       AlarmPassChange_Event
   \   0000039C   0EE0               B        ??ScreenEvent_56
    350            } 
    351            }
    352            else
    353            {
    354              if ((X_up>0) && (Y_up>0)  )
   \                     ??ScreenEvent_1:
   \   0000039E   1549               LDR      R1,??ScreenEvent_40+0x24  ;; X_up
   \   000003A0   0022               MOVS     R2,#+0
   \   000003A2   895E               LDRSH    R1,[R1, R2]
   \   000003A4   0129               CMP      R1,#+1
   \   000003A6   09DB               BLT      ??ScreenEvent_56
   \   000003A8   1349               LDR      R1,??ScreenEvent_40+0x28  ;; Y_up
   \   000003AA   895E               LDRSH    R1,[R1, R2]
   \   000003AC   0129               CMP      R1,#+1
   \   000003AE   05DB               BLT      ??ScreenEvent_56
    355              {
    356                  g_Message=0;
   \   000003B0   1100               MOVS     R1,R2
   \   000003B2   0160               STR      R1,[R0, #+0]
    357                  g_info=0;
   \   000003B4   1148               LDR      R0,??ScreenEvent_40+0x2C  ;; g_info
   \   000003B6   0160               STR      R1,[R0, #+0]
    358                  MenuPaint();
   \   000003B8   ........           BL       MenuPaint
    359              }
    360            }
    361            
    362             X_up=-1;
   \                     ??ScreenEvent_56:
   \   000003BC   0020               MOVS     R0,#+0
   \   000003BE   C043               MVNS     R0,R0            ;; #-1
   \   000003C0   0C49               LDR      R1,??ScreenEvent_40+0x24  ;; X_up
   \   000003C2   0880               STRH     R0,[R1, #+0]
    363           Y_up=-1;
   \   000003C4   0C49               LDR      R1,??ScreenEvent_40+0x28  ;; Y_up
   \   000003C6   0880               STRH     R0,[R1, #+0]
    364          
    365          
    366          
    367          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \   000003C8   08BC               POP      {R3}
   \   000003CA   01BC               POP      {R0}
   \   000003CC   0047               BX       R0               ;; return
   \   000003CE   C046               Nop      
   \                     ??ScreenEvent_40:
   \   000003D0   D3260000           DC32     0x26d3
   \   000003D4   3E840100           DC32     0x1843e
   \   000003D8   15080000           DC32     0x815
   \   000003DC   E60A0000           DC32     0xae6
   \   000003E0   EA510F00           DC32     0xf51ea
   \   000003E4   98BB0000           DC32     0xbb98
   \   000003E8   ........           DC32     gProg
   \   000003EC   ........           DC32     `?<Constant "Info ">`
   \   000003F0   672B0000           DC32     0x2b67
   \   000003F4   ........           DC32     X_up
   \   000003F8   ........           DC32     Y_up
   \   000003FC   ........           DC32     g_info
    368          
    369          
    370          
    371          
    372          
    373          //*-----------------------------------------------------------------------------
    374          //* Nazwa funkcji :    ScreenEvent
    375          //* Funkcja wrysowania menu ekranowego
    376          //*-----------------------------------------------------------------------------
    377          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    378          //*-----------------------------------------------------------------------------
    379          char DispWait=0; 

   \                                 In section Debug.txt, align 4, keep-with-next
    380          void MenuRefresh(Void)
    381          {
   \                     MenuRefresh:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    382            
    383           if (g_info==0)
   \   00000002   5E48               LDR      R0,??MenuRefresh_0  ;; g_info
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   00D0               BEQ      .+4
   \   0000000A   B4E0               B        ??MenuRefresh_1
    384            {
    385            static char Message;
    386            
    387            if ((g_counter>g_Message) && (!Message)) 
   \   0000000C   5C4D               LDR      R5,??MenuRefresh_0+0x4  ;; g_counter
   \   0000000E   5D4C               LDR      R4,??MenuRefresh_0+0x8  ;; g_Message
   \   00000010   2268               LDR      R2,[R4, #+0]
   \   00000012   D317               ASRS     R3,R2,#+31
   \   00000014   03CD               LDM      R5!,{R0,R1}
   \   00000016   083D               SUBS     R5,R5,#+8
   \   00000018   8B42               CMP      R3,R1
   \   0000001A   00D9               BLS      .+4
   \   0000001C   7FE0               B        ??MenuRefresh_2
   \   0000001E   01D3               BCC      ??MenuRefresh_3
   \   00000020   8242               CMP      R2,R0
   \   00000022   7CD2               BCS      ??MenuRefresh_2
   \                     ??MenuRefresh_3:
   \   00000024   584A               LDR      R2,??MenuRefresh_0+0xC  ;; TextToChangeLength
   \   00000026   D07A               LDRB     R0,[R2, #+11]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   78D1               BNE      ??MenuRefresh_2
    388            {    
    389              if (DispWait==0)      //tryb wyswietlania menu
   \   0000002C   907A               LDRB     R0,[R2, #+10]
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   6AD1               BNE      ??MenuRefresh_4
    390              {
    391                switch (MenuLevel)
   \   00000032   906C               LDR      R0,[R2, #+72]
   \   00000034   0028               CMP      R0,#+0
   \   00000036   2DD0               BEQ      ??MenuRefresh_5
   \   00000038   401E               SUBS     R0,R0,#+1
   \   0000003A   2ED0               BEQ      ??MenuRefresh_6
   \   0000003C   801E               SUBS     R0,R0,#+2
   \   0000003E   36D0               BEQ      ??MenuRefresh_7
   \   00000040   0B38               SUBS     R0,R0,#+11
   \   00000042   37D0               BEQ      ??MenuRefresh_8
   \   00000044   6538               SUBS     R0,R0,#+101
   \   00000046   4BD0               BEQ      ??MenuRefresh_9
   \   00000048   401E               SUBS     R0,R0,#+1
   \   0000004A   4CD0               BEQ      ??MenuRefresh_10
   \   0000004C   401F               SUBS     R0,R0,#+5
   \   0000004E   50D0               BEQ      ??MenuRefresh_11
   \   00000050   4E49               LDR      R1,??MenuRefresh_0+0x10  ;; 0x3fd
   \   00000052   401A               SUBS     R0,R0,R1
   \   00000054   36D0               BEQ      ??MenuRefresh_12
   \   00000056   801F               SUBS     R0,R0,#+6
   \   00000058   37D0               BEQ      ??MenuRefresh_13
   \   0000005A   001F               SUBS     R0,R0,#+4
   \   0000005C   2DD0               BEQ      ??MenuRefresh_14
   \   0000005E   4C49               LDR      R1,??MenuRefresh_0+0x14  ;; 0x274c
   \   00000060   401A               SUBS     R0,R0,R1
   \   00000062   2AD0               BEQ      ??MenuRefresh_14
   \   00000064   A121               MOVS     R1,#+161
   \   00000066   4900               LSLS     R1,R1,#+1        ;; #+322
   \   00000068   401A               SUBS     R0,R0,R1
   \   0000006A   31D0               BEQ      ??MenuRefresh_15
   \   0000006C   401E               SUBS     R0,R0,#+1
   \   0000006E   33D0               BEQ      ??MenuRefresh_16
   \   00000070   BA38               SUBS     R0,R0,#+186
   \   00000072   22D0               BEQ      ??MenuRefresh_14
   \   00000074   4749               LDR      R1,??MenuRefresh_0+0x18  ;; 0x18826
   \   00000076   401A               SUBS     R0,R0,R1
   \   00000078   1FD0               BEQ      ??MenuRefresh_14
   \   0000007A   1438               SUBS     R0,R0,#+20
   \   0000007C   1DD0               BEQ      ??MenuRefresh_14
   \   0000007E   0A38               SUBS     R0,R0,#+10
   \   00000080   1BD0               BEQ      ??MenuRefresh_14
   \   00000082   4549               LDR      R1,??MenuRefresh_0+0x1C  ;; 0x136a
   \   00000084   401A               SUBS     R0,R0,R1
   \   00000086   18D0               BEQ      ??MenuRefresh_14
   \   00000088   401E               SUBS     R0,R0,#+1
   \   0000008A   2FD0               BEQ      ??MenuRefresh_17
   \   0000008C   4349               LDR      R1,??MenuRefresh_0+0x20  ;; 0xf51e9
   \   0000008E   401A               SUBS     R0,R0,R1
   \   00000090   13D0               BEQ      ??MenuRefresh_14
   \   00000092   44E0               B        ??MenuRefresh_2
    392                {
    393                  case 0        : StartAnimation_Paint();         break;
   \                     ??MenuRefresh_5:
   \   00000094   ........           BL       StartAnimation_Paint
   \   00000098   41E0               B        ??MenuRefresh_2
    394                  case 1        : MainSide_Refresh(&gProg.Screen[CurrentSheet]);         break;
   \                     ??MenuRefresh_6:
   \   0000009A   4148               LDR      R0,??MenuRefresh_0+0x24  ;; 0xbb98
   \   0000009C   1179               LDRB     R1,[R2, #+4]
   \   0000009E   A022               MOVS     R2,#+160
   \   000000A0   5143               MULS     R1,R2,R1
   \   000000A2   404A               LDR      R2,??MenuRefresh_0+0x28  ;; gProg
   \   000000A4   5118               ADDS     R1,R2,R1
   \   000000A6   0818               ADDS     R0,R1,R0
   \   000000A8   ........           BL       MainSide_Refresh
   \   000000AC   37E0               B        ??MenuRefresh_2
    395                  case 3        : CheckChannel();         break;
   \                     ??MenuRefresh_7:
   \   000000AE   ........           BL       CheckChannel
   \   000000B2   34E0               B        ??MenuRefresh_2
    396                  case 14       : AlarmPass_Refresh();break;
   \                     ??MenuRefresh_8:
   \   000000B4   ........           BL       AlarmPass_Refresh
   \   000000B8   31E0               B        ??MenuRefresh_2
    397                      case 112111  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_14:
   \   000000BA   1100               MOVS     R1,R2
   \   000000BC   106D               LDR      R0,[R2, #+80]
   \   000000BE   ........           BL       TextChange_Refresh
   \   000000C2   2CE0               B        ??MenuRefresh_2
    398                      case 1121121  : TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    399                      case 11212  :   TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    400                      case 112131  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    401                      case 112141  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    402                      case 1142    : SetupTime_Refresh();        break;
   \                     ??MenuRefresh_12:
   \   000000C4   ........           BL       SetupTime_Refresh
   \   000000C8   29E0               B        ??MenuRefresh_2
    403                      case 1148    : RF_Channel_Refresh();  break;
   \                     ??MenuRefresh_13:
   \   000000CA   ........           BL       RF_Channel_Refresh
   \   000000CE   26E0               B        ??MenuRefresh_2
    404                      case 1152    :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    405                        case 11534   : NodeTestTrans_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_15:
   \   000000D0   D078               LDRB     R0,[R2, #+3]
   \   000000D2   ........           BL       NodeTestTrans_Refresh
   \   000000D6   22E0               B        ??MenuRefresh_2
    406                        case 11535   : NodeStanIO_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_16:
   \   000000D8   D078               LDRB     R0,[R2, #+3]
   \   000000DA   ........           BL       NodeStanIO_Refresh
   \   000000DE   1EE0               B        ??MenuRefresh_2
    407                        
    408                  case 115  : NeuronsList_Refresh();  break;
   \                     ??MenuRefresh_9:
   \   000000E0   ........           BL       NeuronsList_Refresh
   \   000000E4   1BE0               B        ??MenuRefresh_2
    409                  case 116  : Info_Refresh();    break;
   \                     ??MenuRefresh_10:
   \   000000E6   ........           BL       Info_Refresh
   \   000000EA   18E0               B        ??MenuRefresh_2
    410                       case 117111  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    411                       case 117112 :  WiFiConecting_Refresh(); break;
   \                     ??MenuRefresh_17:
   \   000000EC   ........           BL       WiFiConecting_Refresh
   \   000000F0   15E0               B        ??MenuRefresh_2
    412                       case 11721  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    413                      
    414                  
    415                  case 121     : ThermostatChartSet_Refresh(&gProg.Screen[CurrentSheet], CurentChartModyfi);  break;   
   \                     ??MenuRefresh_11:
   \   000000F2   9178               LDRB     R1,[R2, #+2]
   \   000000F4   2A48               LDR      R0,??MenuRefresh_0+0x24  ;; 0xbb98
   \   000000F6   1279               LDRB     R2,[R2, #+4]
   \   000000F8   A023               MOVS     R3,#+160
   \   000000FA   5A43               MULS     R2,R3,R2
   \   000000FC   294B               LDR      R3,??MenuRefresh_0+0x28  ;; gProg
   \   000000FE   9A18               ADDS     R2,R3,R2
   \   00000100   1018               ADDS     R0,R2,R0
   \   00000102   ........           BL       ThermostatChartSet_Refresh
   \   00000106   0AE0               B        ??MenuRefresh_2
    416                  
    417                }
    418              }
    419              else if(DispWait==DispWaitOn)
   \                     ??MenuRefresh_4:
   \   00000108   0128               CMP      R0,#+1
   \   0000010A   02D1               BNE      ??MenuRefresh_18
    420              {
    421                Wait_Paint();
   \   0000010C   ........           BL       Wait_Paint
   \   00000110   05E0               B        ??MenuRefresh_2
    422              }
    423              else if(DispWait==DispWaitOff)
   \                     ??MenuRefresh_18:
   \   00000112   0228               CMP      R0,#+2
   \   00000114   03D1               BNE      ??MenuRefresh_2
    424              {
    425                DispWait=0;
   \   00000116   0020               MOVS     R0,#+0
   \   00000118   9072               STRB     R0,[R2, #+10]
    426                MenuPaint();
   \   0000011A   ........           BL       MenuPaint
    427              }
    428              
    429            }
    430            
    431            
    432              if ((g_counter>g_Message) && (Message)){Message=0; g_Message=0; MenuPaint();}
   \                     ??MenuRefresh_2:
   \   0000011E   2268               LDR      R2,[R4, #+0]
   \   00000120   D317               ASRS     R3,R2,#+31
   \   00000122   03CD               LDM      R5!,{R0,R1}
   \   00000124   083D               SUBS     R5,R5,#+8
   \   00000126   8B42               CMP      R3,R1
   \   00000128   0CD8               BHI      ??MenuRefresh_19
   \   0000012A   01D3               BCC      ??MenuRefresh_20
   \   0000012C   8242               CMP      R2,R0
   \   0000012E   09D2               BCS      ??MenuRefresh_19
   \                     ??MenuRefresh_20:
   \   00000130   154A               LDR      R2,??MenuRefresh_0+0xC  ;; TextToChangeLength
   \   00000132   D07A               LDRB     R0,[R2, #+11]
   \   00000134   0028               CMP      R0,#+0
   \   00000136   05D0               BEQ      ??MenuRefresh_19
   \   00000138   0020               MOVS     R0,#+0
   \   0000013A   0100               MOVS     R1,R0
   \   0000013C   D172               STRB     R1,[R2, #+11]
   \   0000013E   2060               STR      R0,[R4, #+0]
   \   00000140   ........           BL       MenuPaint
   \                     ??MenuRefresh_19:
   \   00000144   2368               LDR      R3,[R4, #+0]
   \   00000146   DC17               ASRS     R4,R3,#+31
   \   00000148   03CD               LDM      R5!,{R0,R1}
   \   0000014A   A142               CMP      R1,R4
   \   0000014C   08D8               BHI      ??MenuRefresh_21
   \   0000014E   01D3               BCC      ??MenuRefresh_22
   \   00000150   9842               CMP      R0,R3
   \   00000152   05D2               BCS      ??MenuRefresh_21
   \                     ??MenuRefresh_22:
   \   00000154   0C4A               LDR      R2,??MenuRefresh_0+0xC  ;; TextToChangeLength
   \   00000156   D57A               LDRB     R5,[R2, #+11]
   \   00000158   002D               CMP      R5,#+0
   \   0000015A   01D1               BNE      ??MenuRefresh_21
    433            if ((g_counter<g_Message) && (!Message)){Message=1;}
   \   0000015C   0125               MOVS     R5,#+1
   \   0000015E   D572               STRB     R5,[R2, #+11]
    434            if ((g_counter<g_Message) && (MenuLevel<2)) { MESSAGE_Refresh();}
   \                     ??MenuRefresh_21:
   \   00000160   A142               CMP      R1,R4
   \   00000162   08D8               BHI      ??MenuRefresh_1
   \   00000164   01D3               BCC      ??MenuRefresh_23
   \   00000166   9842               CMP      R0,R3
   \   00000168   05D2               BCS      ??MenuRefresh_1
   \                     ??MenuRefresh_23:
   \   0000016A   0F48               LDR      R0,??MenuRefresh_0+0x2C  ;; TextToChangeLength + 72
   \   0000016C   0068               LDR      R0,[R0, #+0]
   \   0000016E   0228               CMP      R0,#+2
   \   00000170   01DA               BGE      ??MenuRefresh_1
   \   00000172   ........           BL       MESSAGE_Refresh
    435            
    436            } 
    437          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \                     ??MenuRefresh_1:
   \   00000176   38BC               POP      {R3-R5}
   \   00000178   01BC               POP      {R0}
   \   0000017A   0047               BX       R0               ;; return
   \                     ??MenuRefresh_0:
   \   0000017C   ........           DC32     g_info
   \   00000180   ........           DC32     g_counter
   \   00000184   ........           DC32     g_Message
   \   00000188   ........           DC32     TextToChangeLength
   \   0000018C   FD030000           DC32     0x3fd
   \   00000190   4C270000           DC32     0x274c
   \   00000194   26880100           DC32     0x18826
   \   00000198   6A130000           DC32     0x136a
   \   0000019C   E9510F00           DC32     0xf51e9
   \   000001A0   98BB0000           DC32     0xbb98
   \   000001A4   ........           DC32     gProg
   \   000001A8   ........           DC32     TextToChangeLength + 72
    438          
    439          
    440          
    441          
    442          extern char Animation_tab[11][8][15];
    443          

   \                                 In section .bss, align 1
    444          char InitPointer=0;
   \                     InitPointer:
   \   00000000                      DS8 1
    445          char CCKier=0;
   \                     CCKier:
   \   00000001                      DS8 1
    446          
    447          //*-----------------------------------------------------------------------------
    448          //* Nazwa funkcji :    MainSide_Paint
    449          //* Funkcja strony g³ównej menu
    450          //*-----------------------------------------------------------------------------
    451          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    452          //*-----------------------------------------------------------------------------
    453          char AnimationNr=0;
   \                     AnimationNr:
   \   00000002                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
    454          void StartAnimation_Paint(void)
    455          {
   \                     StartAnimation_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
    456            CleanCanvas();
   \   00000002   ........           BL       CleanCanvas
    457            
    458            CopyToCanvasPoint((char*)Logo_Ceuron, 0, 70, 64,16);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000006   4B4C               LDR      R4,??StartAnimation_Paint_0  ;; `?<Constant "Firmware: ">`
   \   00000008   82B0               SUB      SP,SP,#+8
   \   0000000A   1020               MOVS     R0,#+16
   \   0000000C   0090               STR      R0,[SP, #+0]
   \   0000000E   4023               MOVS     R3,#+64
   \   00000010   4622               MOVS     R2,#+70
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   2000               MOVS     R0,R4
   \   00000016   0C30               ADDS     R0,R0,#+12
   \   00000018   ........           BL       CopyToCanvasPoint
   \   0000001C   02B0               ADD      SP,SP,#+8
    459          
    460            Label((char*)&identyfikacja,2,0,52,15,63,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000001E   82B0               SUB      SP,SP,#+8
   \   00000020   0020               MOVS     R0,#+0
   \   00000022   0090               STR      R0,[SP, #+0]
   \   00000024   7821               MOVS     R1,#+120
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3F21               MOVS     R1,#+63
   \   0000002A   0F20               MOVS     R0,#+15
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3423               MOVS     R3,#+52
   \   00000030   0022               MOVS     R2,#+0
   \   00000032   0221               MOVS     R1,#+2
   \   00000034   4048               LDR      R0,??StartAnimation_Paint_0+0x4  ;; identyfikacja
   \   00000036   ........           BL       Label
   \   0000003A   06B0               ADD      SP,SP,#+24
    461            Label("Firmware: ",0,5,5,15,63,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   7821               MOVS     R1,#+120
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   3F21               MOVS     R1,#+63
   \   00000048   0F20               MOVS     R0,#+15
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   0523               MOVS     R3,#+5
   \   0000004E   1A00               MOVS     R2,R3
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   2000               MOVS     R0,R4
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
    462            Label((char*)&system,0,48,5,4,14,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7821               MOVS     R1,#+120
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   0E21               MOVS     R1,#+14
   \   00000066   0420               MOVS     R0,#+4
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   0523               MOVS     R3,#+5
   \   0000006C   3022               MOVS     R2,#+48
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   3248               LDR      R0,??StartAnimation_Paint_0+0x8  ;; system
   \   00000072   ........           BL       Label
   \   00000076   06B0               ADD      SP,SP,#+24
    463           
    464            //wskanik postêpu
    465            H_line(InitPointer+5,48,24,1); // (char X, int Y, char lenght, char typ)
   \   00000078   314C               LDR      R4,??StartAnimation_Paint_0+0xC  ;; InitPointer
   \   0000007A   0123               MOVS     R3,#+1
   \   0000007C   1822               MOVS     R2,#+24
   \   0000007E   3021               MOVS     R1,#+48
   \   00000080   2078               LDRB     R0,[R4, #+0]
   \   00000082   401D               ADDS     R0,R0,#+5
   \   00000084   0006               LSLS     R0,R0,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   ........           BL       H_line
    466            H_line(InitPointer+4,49,26,1); // (char X, int Y, char lenght, char typ)
   \   0000008C   0123               MOVS     R3,#+1
   \   0000008E   1A22               MOVS     R2,#+26
   \   00000090   3121               MOVS     R1,#+49
   \   00000092   2078               LDRB     R0,[R4, #+0]
   \   00000094   001D               ADDS     R0,R0,#+4
   \   00000096   0006               LSLS     R0,R0,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   ........           BL       H_line
    467            H_line(InitPointer+5,50,24,1); // (char X, int Y, char lenght, char typ)
   \   0000009E   0123               MOVS     R3,#+1
   \   000000A0   1822               MOVS     R2,#+24
   \   000000A2   3221               MOVS     R1,#+50
   \   000000A4   2078               LDRB     R0,[R4, #+0]
   \   000000A6   401D               ADDS     R0,R0,#+5
   \   000000A8   0006               LSLS     R0,R0,#+24
   \   000000AA   000E               LSRS     R0,R0,#+24
   \   000000AC   ........           BL       H_line
    468            if ((InitPointer<30) && (CCKier==0)) {InitPointer+=2;}else{CCKier=1;}
   \   000000B0   2078               LDRB     R0,[R4, #+0]
   \   000000B2   1E28               CMP      R0,#+30
   \   000000B4   05D2               BCS      ??StartAnimation_Paint_1
   \   000000B6   6178               LDRB     R1,[R4, #+1]
   \   000000B8   0029               CMP      R1,#+0
   \   000000BA   02D1               BNE      ??StartAnimation_Paint_1
   \   000000BC   801C               ADDS     R0,R0,#+2
   \   000000BE   2070               STRB     R0,[R4, #+0]
   \   000000C0   01E0               B        ??StartAnimation_Paint_2
   \                     ??StartAnimation_Paint_1:
   \   000000C2   0120               MOVS     R0,#+1
   \   000000C4   6070               STRB     R0,[R4, #+1]
    469            if ((InitPointer>0) && (CCKier==1)) {InitPointer-=2;}else{CCKier=0;}
   \                     ??StartAnimation_Paint_2:
   \   000000C6   2078               LDRB     R0,[R4, #+0]
   \   000000C8   0028               CMP      R0,#+0
   \   000000CA   05D0               BEQ      ??StartAnimation_Paint_3
   \   000000CC   6178               LDRB     R1,[R4, #+1]
   \   000000CE   0129               CMP      R1,#+1
   \   000000D0   02D1               BNE      ??StartAnimation_Paint_3
   \   000000D2   801E               SUBS     R0,R0,#+2
   \   000000D4   2070               STRB     R0,[R4, #+0]
   \   000000D6   01E0               B        ??StartAnimation_Paint_4
   \                     ??StartAnimation_Paint_3:
   \   000000D8   0020               MOVS     R0,#+0
   \   000000DA   6070               STRB     R0,[R4, #+1]
    470            
    471            
    472            if ((AnimationNr==14) || (SlaveMode))
   \                     ??StartAnimation_Paint_4:
   \   000000DC   A278               LDRB     R2,[R4, #+2]
   \   000000DE   0E2A               CMP      R2,#+14
   \   000000E0   03D0               BEQ      ??StartAnimation_Paint_5
   \   000000E2   1848               LDR      R0,??StartAnimation_Paint_0+0x10  ;; SlaveMode
   \   000000E4   0078               LDRB     R0,[R0, #+0]
   \   000000E6   0028               CMP      R0,#+0
   \   000000E8   1ED0               BEQ      ??StartAnimation_Paint_6
    473            {
    474                korekta_X.A=AT91C_IFLASH_MEM->Config.Cor_X.A;
   \                     ??StartAnimation_Paint_5:
   \   000000EA   1748               LDR      R0,??StartAnimation_Paint_0+0x14  ;; korekta_X
   \   000000EC   1749               LDR      R1,??StartAnimation_Paint_0+0x18  ;; 0x13d828
   \   000000EE   0968               LDR      R1,[R1, #+0]
   \   000000F0   0160               STR      R1,[R0, #+0]
    475                korekta_X.B=AT91C_IFLASH_MEM->Config.Cor_X.B;
   \   000000F2   1749               LDR      R1,??StartAnimation_Paint_0+0x1C  ;; 0x13d82c
   \   000000F4   0968               LDR      R1,[R1, #+0]
   \   000000F6   4160               STR      R1,[R0, #+4]
    476                korekta_Y.A=AT91C_IFLASH_MEM->Config.Cor_Y.A;
   \   000000F8   164B               LDR      R3,??StartAnimation_Paint_0+0x20  ;; korekta_Y
   \   000000FA   1749               LDR      R1,??StartAnimation_Paint_0+0x24  ;; 0x13d820
   \   000000FC   0968               LDR      R1,[R1, #+0]
   \   000000FE   1960               STR      R1,[R3, #+0]
    477                korekta_Y.B=AT91C_IFLASH_MEM->Config.Cor_Y.B;
   \   00000100   1649               LDR      R1,??StartAnimation_Paint_0+0x28  ;; 0x13d824
   \   00000102   0968               LDR      R1,[R1, #+0]
   \   00000104   5960               STR      R1,[R3, #+4]
    478                
    479                //je¿eli brak korekt to ustaw korekty
    480                if ((korekta_X.A==0)||(korekta_Y.A==0))
   \   00000106   0068               LDR      R0,[R0, #+0]
   \   00000108   0021               MOVS     R1,#+0
   \   0000010A   ........           BL       __aeabi_cfcmpeq
   \   0000010E   03D0               BEQ      ??StartAnimation_Paint_7
   \   00000110   1868               LDR      R0,[R3, #+0]
   \   00000112   ........           BL       __aeabi_cfcmpeq
   \   00000116   02D1               BNE      ??StartAnimation_Paint_8
    481                {
    482                  MenuLevel=4;
   \                     ??StartAnimation_Paint_7:
   \   00000118   1148               LDR      R0,??StartAnimation_Paint_0+0x2C  ;; TextToChangeLength + 72
   \   0000011A   0421               MOVS     R1,#+4
   \   0000011C   0160               STR      R1,[R0, #+0]
    483                }else{
    484                 // MenuLevel=1;
    485                }
    486                AnimationNr++;
   \                     ??StartAnimation_Paint_8:
   \   0000011E   521C               ADDS     R2,R2,#+1
   \   00000120   A270               STRB     R2,[R4, #+2]
    487                MenuPaint();
   \   00000122   ........           BL       MenuPaint
   \   00000126   01E0               B        ??StartAnimation_Paint_9
    488            }else{
    489               AnimationNr++; 
   \                     ??StartAnimation_Paint_6:
   \   00000128   521C               ADDS     R2,R2,#+1
   \   0000012A   A270               STRB     R2,[R4, #+2]
    490            }
    491              
    492          
    493          
    494          }
   \                     ??StartAnimation_Paint_9:
   \   0000012C   10BC               POP      {R4}
   \   0000012E   01BC               POP      {R0}
   \   00000130   0047               BX       R0               ;; return
   \   00000132   C046               Nop      
   \                     ??StartAnimation_Paint_0:
   \   00000134   ........           DC32     `?<Constant "Firmware: ">`
   \   00000138   ........           DC32     identyfikacja
   \   0000013C   ........           DC32     system
   \   00000140   ........           DC32     InitPointer
   \   00000144   ........           DC32     SlaveMode
   \   00000148   ........           DC32     korekta_X
   \   0000014C   28D81300           DC32     0x13d828
   \   00000150   2CD81300           DC32     0x13d82c
   \   00000154   ........           DC32     korekta_Y
   \   00000158   20D81300           DC32     0x13d820
   \   0000015C   24D81300           DC32     0x13d824
   \   00000160   ........           DC32     TextToChangeLength + 72
    495          
    496          
    497          //*-----------------------------------------------------------------------------
    498          //* Nazwa funkcji :    StartAnimation_Event
    499          //* Funkcja strony g³ównej menu
    500          //*-----------------------------------------------------------------------------
    501          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    502          //*-----------------------------------------------------------------------------
    503          char StartAdvance=0;

   \                                 In section Debug.txt, align 4, keep-with-next
    504          void StartAnimation_Event(void)
    505          {
   \                     StartAnimation_Event:
   \   00000000   01B5               PUSH     {R0,LR}
    506          
    507              if ((X_up>0) && (Y_up>0))
   \   00000002   0948               LDR      R0,??StartAnimation_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   0128               CMP      R0,#+1
   \   0000000A   0ADB               BLT      ??StartAnimation_Event_1
   \   0000000C   0748               LDR      R0,??StartAnimation_Event_0+0x4  ;; Y_up
   \   0000000E   405E               LDRSH    R0,[R0, R1]
   \   00000010   0128               CMP      R0,#+1
   \   00000012   06DB               BLT      ??StartAnimation_Event_1
    508              {
    509                MenuLevel=4;
   \   00000014   0648               LDR      R0,??StartAnimation_Event_0+0x8  ;; TextToChangeLength
   \   00000016   0421               MOVS     R1,#+4
   \   00000018   8164               STR      R1,[R0, #+72]
    510                StartAdvance=1;
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   0173               STRB     R1,[R0, #+12]
    511                MenuPaint();
   \   0000001E   ........           BL       MenuPaint
    512              }
    513              
    514              
    515               
    516          }//_______________________ Koniec funkcji StartAnimation_Event __________________________
   \                     ??StartAnimation_Event_1:
   \   00000022   08BC               POP      {R3}
   \   00000024   01BC               POP      {R0}
   \   00000026   0047               BX       R0               ;; return
   \                     ??StartAnimation_Event_0:
   \   00000028   ........           DC32     X_up
   \   0000002C   ........           DC32     Y_up
   \   00000030   ........           DC32     TextToChangeLength
    517          
    518          
    519          
    520          
    521          
    522          //*-----------------------------------------------------------------------------
    523          //* Nazwa funkcji :    MainSide_Paint
    524          //* Funkcja strony g³ównej menu
    525          //*-----------------------------------------------------------------------------
    526          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    527          //*-----------------------------------------------------------------------------
    528          

   \                                 In section Debug.txt, align 4, keep-with-next
    529          void CheckChannel(void)
    530          {
   \                     CheckChannel:
   \   00000000   10B5               PUSH     {R4,LR}
    531          
    532            CleanCanvas();
   \   00000002   ........           BL       CleanCanvas
    533          
    534               Label("Checking Wi-Fi",0,1,60,14,6,0,120,0);
   \   00000006   82B0               SUB      SP,SP,#+8
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   0090               STR      R0,[SP, #+0]
   \   0000000C   7821               MOVS     R1,#+120
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0621               MOVS     R1,#+6
   \   00000012   0E20               MOVS     R0,#+14
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   3C23               MOVS     R3,#+60
   \   00000018   0122               MOVS     R2,#+1
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   1C48               LDR      R0,??CheckChannel_0  ;; `?<Constant "Checking Wi-Fi">`
   \   0000001E   ........           BL       Label
   \   00000022   06B0               ADD      SP,SP,#+24
    535          
    536                H_line(InitPointer+5,48,24,1); // (char X, int Y, char lenght, char typ)
   \   00000024   1B4C               LDR      R4,??CheckChannel_0+0x4  ;; InitPointer
   \   00000026   0123               MOVS     R3,#+1
   \   00000028   1822               MOVS     R2,#+24
   \   0000002A   3021               MOVS     R1,#+48
   \   0000002C   2078               LDRB     R0,[R4, #+0]
   \   0000002E   401D               ADDS     R0,R0,#+5
   \   00000030   0006               LSLS     R0,R0,#+24
   \   00000032   000E               LSRS     R0,R0,#+24
   \   00000034   ........           BL       H_line
    537                H_line(InitPointer+4,49,26,1); // (char X, int Y, char lenght, char typ)
   \   00000038   0123               MOVS     R3,#+1
   \   0000003A   1A22               MOVS     R2,#+26
   \   0000003C   3121               MOVS     R1,#+49
   \   0000003E   2078               LDRB     R0,[R4, #+0]
   \   00000040   001D               ADDS     R0,R0,#+4
   \   00000042   0006               LSLS     R0,R0,#+24
   \   00000044   000E               LSRS     R0,R0,#+24
   \   00000046   ........           BL       H_line
    538                H_line(InitPointer+5,50,24,1); // (char X, int Y, char lenght, char typ)
   \   0000004A   0123               MOVS     R3,#+1
   \   0000004C   1822               MOVS     R2,#+24
   \   0000004E   3221               MOVS     R1,#+50
   \   00000050   2078               LDRB     R0,[R4, #+0]
   \   00000052   401D               ADDS     R0,R0,#+5
   \   00000054   0006               LSLS     R0,R0,#+24
   \   00000056   000E               LSRS     R0,R0,#+24
   \   00000058   ........           BL       H_line
    539                if ((InitPointer<30) && (CCKier==0)) {InitPointer+=2;}else{CCKier=1;}
   \   0000005C   2078               LDRB     R0,[R4, #+0]
   \   0000005E   1E28               CMP      R0,#+30
   \   00000060   05D2               BCS      ??CheckChannel_1
   \   00000062   6178               LDRB     R1,[R4, #+1]
   \   00000064   0029               CMP      R1,#+0
   \   00000066   02D1               BNE      ??CheckChannel_1
   \   00000068   801C               ADDS     R0,R0,#+2
   \   0000006A   2070               STRB     R0,[R4, #+0]
   \   0000006C   01E0               B        ??CheckChannel_2
   \                     ??CheckChannel_1:
   \   0000006E   0120               MOVS     R0,#+1
   \   00000070   6070               STRB     R0,[R4, #+1]
    540                if ((InitPointer>0) && (CCKier==1)) {InitPointer-=2;}else{CCKier=0;}
   \                     ??CheckChannel_2:
   \   00000072   2078               LDRB     R0,[R4, #+0]
   \   00000074   0028               CMP      R0,#+0
   \   00000076   05D0               BEQ      ??CheckChannel_3
   \   00000078   6178               LDRB     R1,[R4, #+1]
   \   0000007A   0129               CMP      R1,#+1
   \   0000007C   02D1               BNE      ??CheckChannel_3
   \   0000007E   801E               SUBS     R0,R0,#+2
   \   00000080   2070               STRB     R0,[R4, #+0]
   \   00000082   01E0               B        ??CheckChannel_4
   \                     ??CheckChannel_3:
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   6070               STRB     R0,[R4, #+1]
    541                
    542          }
   \                     ??CheckChannel_4:
   \   00000088   10BC               POP      {R4}
   \   0000008A   01BC               POP      {R0}
   \   0000008C   0047               BX       R0               ;; return
   \   0000008E   C046               Nop      
   \                     ??CheckChannel_0:
   \   00000090   ........           DC32     `?<Constant "Checking Wi-Fi">`
   \   00000094   ........           DC32     InitPointer
    543          
    544          
    545          
    546          
    547          
    548          char ekran_komunikacja[8][128] = {
    549                            {0,0,0,0,0,0,0,0,0,0,28,34,2,2,2,34,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,8,232,232,232,104,104,104,104,104,104,104,104,104,104,104,104,232,232,232,8,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,248,24,6,6,6,3,3,3,3,6,6,12,60,240,192,0,0,0,0,0},
    550                            {0,0,0,0,0,0,0,0,0,0,30,33,33,33,33,33,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,255,255,192,192,192,192,192,192,192,192,192,192,192,192,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,48,24,0,0,0,255,255,0,0,24,24,96,224,128,0,0,0,0,0},
    551                            {0,0,0,0,0,0,0,0,0,0,145,153,153,149,147,147,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,2,10,18,34,66,66,130,130,2,2,2,2,2,2,2,2,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,195,225,112,48,48,48,48,48,48,48,48,48,48,48,51,3,0,0,0,0,0},
    552                            {0,0,0,0,0,0,0,0,0,0,200,76,76,202,73,73,200,0,0,0,4,4,4,60,68,68,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,0,0,0,1,1,1,130,194,164,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,14,28,24,24,24,24,24,24,24,24,24,24,24,152,128,0,0,0,0,0},
    553                            {0,0,0,0,0,0,0,0,0,0,199,32,32,39,32,32,199,0,0,0,28,34,2,2,2,34,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,1,2,84,168,80,33,206,14,206,67,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,48,48,24,24,12,12,28,28,96,96,96,96,48,63,15,0,0,0,0,0},
    554                            {0,0,0,0,0,0,0,0,0,0,65,66,64,64,64,66,241,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,62,124,85,170,85,0,255,126,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,220,142,6,6,6,6,6,6,6,6,6,6,140,252,112,0,0,0,0,0},
    555                            {0,0,0,0,0,0,0,0,0,0,248,8,8,248,8,8,249,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,127,255,192,128,81,162,85,0,255,248,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,51,51,51,51,51,51,51,51,51,51,51,49,97,192,0,0,0,0,0},
    556                            {0,0,0,0,0,0,0,0,0,0,28,36,68,68,68,36,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,7,14,29,24,31,1,31,16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,16,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,108,198,198,198,198,198,198,198,198,198,198,198,198,195,1,0,0,0,0,0},
    557                            };
    558          
    559          
    560          
    561          
    562          //*-----------------------------------------------------------------------------
    563          //* Nazwa funkcji :    MainSide_Paint
    564          //* Funkcja strony g³ównej menu
    565          //*-----------------------------------------------------------------------------
    566          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    567          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    568          void MainSide_Paint(_Screen* ScreenLokal)
    569          {
   \                     MainSide_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
    570            //Komunikacja z komputerem
    571            if (g_PC_Connected==1)
   \   00000004   AB48               LDR      R0,??MainSide_Paint_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0128               CMP      R0,#+1
   \   0000000A   03D1               BNE      ??MainSide_Paint_1
    572            {
    573              CopyToCanvas(ekran_komunikacja);
   \   0000000C   AA48               LDR      R0,??MainSide_Paint_0+0x4  ;; TextToChangeLength + 148
   \   0000000E   ........           BL       CopyToCanvas
   \   00000012   4BE1               B        ??MainSide_Paint_2
    574            }
    575            else
    576            {
    577            
    578                  char PaternDesign=ScreenLokal->PaternDesign;
   \                     ??MainSide_Paint_1:
   \   00000014   0698               LDR      R0,[SP, #+24]
   \   00000016   0478               LDRB     R4,[R0, #+0]
    579                  
    580                  CleanCanvas();
   \   00000018   ........           BL       CleanCanvas
    581                   char txt[10];
    582                 
    583              
    584                //CleanCanvas(); 
    585                
    586                
    587                SheetHistory[0]=0;
   \   0000001C   A749               LDR      R1,??MainSide_Paint_0+0x8  ;; TextToChangeLength
   \   0000001E   2020               MOVS     R0,#+32
   \   00000020   0022               MOVS     R2,#+0
   \   00000022   0A54               STRB     R2,[R1, R0]
    588                
    589                if ((SheetHistory[SheetHistoryIndex]!=CurrentSheet) && (CurrentSheet<sizeof(SheetHistory)-1))
   \   00000024   0879               LDRB     R0,[R1, #+4]
   \   00000026   CA79               LDRB     R2,[R1, #+7]
   \   00000028   8B18               ADDS     R3,R1,R2
   \   0000002A   2033               ADDS     R3,R3,#+32
   \   0000002C   1B78               LDRB     R3,[R3, #+0]
   \   0000002E   8342               CMP      R3,R0
   \   00000030   08D0               BEQ      ??MainSide_Paint_3
   \   00000032   1328               CMP      R0,#+19
   \   00000034   06D2               BCS      ??MainSide_Paint_3
    590                {
    591                    SheetHistory[++SheetHistoryIndex]=CurrentSheet;
   \   00000036   521C               ADDS     R2,R2,#+1
   \   00000038   CA71               STRB     R2,[R1, #+7]
   \   0000003A   1206               LSLS     R2,R2,#+24
   \   0000003C   120E               LSRS     R2,R2,#+24
   \   0000003E   8918               ADDS     R1,R1,R2
   \   00000040   2031               ADDS     R1,R1,#+32
   \   00000042   0870               STRB     R0,[R1, #+0]
    592                }
    593                  
    594                
    595                if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Paint(ScreenLokal);}
   \                     ??MainSide_Paint_3:
   \   00000044   0028               CMP      R0,#+0
   \   00000046   06D1               BNE      ??MainSide_Paint_4
   \   00000048   2100               MOVS     R1,R4
   \   0000004A   0829               CMP      R1,#+8
   \   0000004C   03D1               BNE      ??MainSide_Paint_4
   \                     ??MainSide_Paint_5:
   \   0000004E   0698               LDR      R0,[SP, #+24]
   \   00000050   ........           BL       Termostat_Paint
   \   00000054   2AE1               B        ??MainSide_Paint_2
    596                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Paint(ScreenLokal);}
   \                     ??MainSide_Paint_4:
   \   00000056   0028               CMP      R0,#+0
   \   00000058   02D0               BEQ      ??MainSide_Paint_6
   \   0000005A   2100               MOVS     R1,R4
   \   0000005C   0529               CMP      R1,#+5
   \   0000005E   F6D0               BEQ      ??MainSide_Paint_5
    597                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {Timetable_Paint(CurrentSheet);}
   \                     ??MainSide_Paint_6:
   \   00000060   0028               CMP      R0,#+0
   \   00000062   05D1               BNE      ??MainSide_Paint_7
   \   00000064   2100               MOVS     R1,R4
   \   00000066   0929               CMP      R1,#+9
   \   00000068   02D1               BNE      ??MainSide_Paint_7
   \   0000006A   ........           BL       Timetable_Paint
   \   0000006E   1DE1               B        ??MainSide_Paint_2
    598                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {Timetable_Paint(CurrentSheet);}  
   \                     ??MainSide_Paint_7:
   \   00000070   0028               CMP      R0,#+0
   \   00000072   05D0               BEQ      ??MainSide_Paint_8
   \   00000074   2100               MOVS     R1,R4
   \   00000076   0629               CMP      R1,#+6
   \   00000078   02D1               BNE      ??MainSide_Paint_8
   \   0000007A   ........           BL       Timetable_Paint
   \   0000007E   15E1               B        ??MainSide_Paint_2
    599                #ifdef __ALARM      
    600                      else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Paint(CurrentSheet);}
   \                     ??MainSide_Paint_8:
   \   00000080   0028               CMP      R0,#+0
   \   00000082   05D1               BNE      ??MainSide_Paint_9
   \   00000084   2100               MOVS     R1,R4
   \   00000086   0A29               CMP      R1,#+10
   \   00000088   02D1               BNE      ??MainSide_Paint_9
   \   0000008A   ........           BL       Alarm_Paint
   \   0000008E   0DE1               B        ??MainSide_Paint_2
    601                      else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Paint(CurrentSheet);} 
   \                     ??MainSide_Paint_9:
   \   00000090   0028               CMP      R0,#+0
   \   00000092   05D0               BEQ      ??MainSide_Paint_10
   \   00000094   2100               MOVS     R1,R4
   \   00000096   0729               CMP      R1,#+7
   \   00000098   02D1               BNE      ??MainSide_Paint_10
   \   0000009A   ........           BL       Alarm_Paint
   \   0000009E   05E1               B        ??MainSide_Paint_2
    602                #endif
    603                else  
    604                { 
    605                      
    606                      const _ScreenPaternDesign *ScreenPaternDesign;
    607                      if (CurrentSheet==0) 
   \                     ??MainSide_Paint_10:
   \   000000A0   0028               CMP      R0,#+0
   \   000000A2   02D1               BNE      ??MainSide_Paint_11
    608                      {
    609                        ScreenPaternDesign=ScreenSetTab_0;
   \   000000A4   8648               LDR      R0,??MainSide_Paint_0+0xC  ;; `?<Constant {129, 0}>` + 24
   \   000000A6   0090               STR      R0,[SP, #+0]
   \   000000A8   13E0               B        ??MainSide_Paint_12
    610                      }else{
    611                        ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Paint_11:
   \   000000AA   8648               LDR      R0,??MainSide_Paint_0+0x10  ;; `?<Constant {129, 0}>` + 992
   \   000000AC   0090               STR      R0,[SP, #+0]
    612                        List_Paint(ScreenLokal->Label,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   0800               MOVS     R0,R1
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   03B4               PUSH     {R0,R1}
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   83A0               ADR      R0,??MainSide_Paint_0+0x14  ;; 0x20, 0x00, 0x00, 0x00
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   0321               MOVS     R1,#+3
   \   000000BE   0020               MOVS     R0,#+0
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   0300               MOVS     R3,R0
   \   000000C4   6C22               MOVS     R2,#+108
   \   000000C6   0121               MOVS     R1,#+1
   \   000000C8   1098               LDR      R0,[SP, #+64]
   \   000000CA   401C               ADDS     R0,R0,#+1
   \   000000CC   ........           BL       List_Paint
   \   000000D0   0AB0               ADD      SP,SP,#+40
    613                    
    614                      }  
    615                      
    616                      
    617                      
    618                      //grafika
    619                      for (char i=0; i<ScrenGraphNr; i++)
   \                     ??MainSide_Paint_12:
   \   000000D2   0025               MOVS     R5,#+0
   \   000000D4   1CE0               B        ??MainSide_Paint_13
    620                      {
    621                        if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??MainSide_Paint_14:
   \   000000D6   2000               MOVS     R0,R4
   \   000000D8   5821               MOVS     R1,#+88
   \   000000DA   4843               MULS     R0,R1,R0
   \   000000DC   0099               LDR      R1,[SP, #+0]
   \   000000DE   0818               ADDS     R0,R1,R0
   \   000000E0   2900               MOVS     R1,R5
   \   000000E2   8A00               LSLS     R2,R1,#+2
   \   000000E4   8018               ADDS     R0,R0,R2
   \   000000E6   2430               ADDS     R0,R0,#+36
   \   000000E8   8278               LDRB     R2,[R0, #+2]
   \   000000EA   002A               CMP      R2,#+0
   \   000000EC   0DD0               BEQ      ??MainSide_Paint_15
    622                        {
    623                                ScreenGraph(//(char poz_X , char poz_Y ,char width, char height,_Graph *Graph)
    624                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
    625                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
    626                                ScreenPaternDesign[PaternDesign].Graph[i].Width,
    627                                ScreenPaternDesign[PaternDesign].Graph[i].Height,
    628                                &(ScreenLokal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000000EE   82B0               SUB      SP,SP,#+8
   \   000000F0   0722               MOVS     R2,#+7
   \   000000F2   5143               MULS     R1,R2,R1
   \   000000F4   089A               LDR      R2,[SP, #+32]
   \   000000F6   5118               ADDS     R1,R2,R1
   \   000000F8   5331               ADDS     R1,R1,#+83
   \   000000FA   0091               STR      R1,[SP, #+0]
   \   000000FC   C378               LDRB     R3,[R0, #+3]
   \   000000FE   8278               LDRB     R2,[R0, #+2]
   \   00000100   4178               LDRB     R1,[R0, #+1]
   \   00000102   0078               LDRB     R0,[R0, #+0]
   \   00000104   ........           BL       ScreenGraph
   \   00000108   02B0               ADD      SP,SP,#+8
    629                        
    630                        }
    631                       }
   \                     ??MainSide_Paint_15:
   \   0000010A   6D1C               ADDS     R5,R5,#+1
   \   0000010C   2D06               LSLS     R5,R5,#+24
   \   0000010E   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_13:
   \   00000110   2800               MOVS     R0,R5
   \   00000112   0428               CMP      R0,#+4
   \   00000114   DFD3               BCC      ??MainSide_Paint_14
    632                      
    633                      
    634          
    635                    
    636          
    637                      
    638                      
    639                        //Analogi
    640                      char IlLiter=0;
    641                      signed short Value;
    642                      for (char i=0; i<ScrenAnalogNr; i++)
   \   00000116   0025               MOVS     R5,#+0
   \   00000118   2FE0               B        ??MainSide_Paint_16
    643                      {
    644                        if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
    645                        {         
    646                               if ((ScreenLokal->Analog[i].Nr>0) || ((ScreenLokal->Analog[i].Nr==0)&&(ScreenLokal->Analog[i].Reg>0)))
    647                               {
    648                               IlLiter=0;
    649                               Value=MainStage.StageI[ScreenLokal->Analog[i].Nr].Value[ScreenLokal->Analog[i].Reg];
    650          
    651                               if (Value&0x8000) //je¿eli sygna³ niewiarygodny
    652                               {
    653                                 txt[0]='-'; txt[1]='?';txt[2]='?';txt[3]='?'; txt[4]='-'; IlLiter+=5;
    654                               }else{ //je¿eli sygna³ wiarygodny
    655                                   if (ScreenLokal->Analog[i].Flip)
    656                                   {
    657                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
    658                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {txt[IlLiter++]=ScreenLokal->Analog[i].Text[k];}  
    659                                   }else{
    660                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {IlLiter++; txt[k]=ScreenLokal->Analog[i].Text[k];}  
   \                     ??MainSide_Paint_17:
   \   0000011A   1700               MOVS     R7,R2
   \   0000011C   029B               LDR      R3,[SP, #+8]
   \   0000011E   DB19               ADDS     R3,R3,R7
   \   00000120   7026               MOVS     R6,#+112
   \   00000122   9E5D               LDRB     R6,[R3, R6]
   \   00000124   002E               CMP      R6,#+0
   \   00000126   06D0               BEQ      ??MainSide_Paint_18
   \   00000128   491C               ADDS     R1,R1,#+1
   \   0000012A   0906               LSLS     R1,R1,#+24
   \   0000012C   090E               LSRS     R1,R1,#+24
   \   0000012E   03AE               ADD      R6,SP,#+12
   \   00000130   7033               ADDS     R3,R3,#+112
   \   00000132   1B78               LDRB     R3,[R3, #+0]
   \   00000134   F355               STRB     R3,[R6, R7]
   \                     ??MainSide_Paint_18:
   \   00000136   521C               ADDS     R2,R2,#+1
   \   00000138   1206               LSLS     R2,R2,#+24
   \   0000013A   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Paint_19:
   \   0000013C   1300               MOVS     R3,R2
   \   0000013E   032B               CMP      R3,#+3
   \   00000140   EBD3               BCC      ??MainSide_Paint_17
    661                                       IlLiter+=sIntToStr(Value, &(txt[IlLiter])); //(char Value, char *Vstring, char ill);
   \   00000142   0E00               MOVS     R6,R1
   \   00000144   03AA               ADD      R2,SP,#+12
   \   00000146   5118               ADDS     R1,R2,R1
   \   00000148   ........           BL       sIntToStr
   \   0000014C   3218               ADDS     R2,R6,R0
   \   0000014E   1206               LSLS     R2,R2,#+24
   \   00000150   120E               LSRS     R2,R2,#+24
    662                                   }
    663                               }  
    664                                   Label(txt,0,
    665                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.x, 
    666                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.y,IlLiter,
    667                                         ScreenPaternDesign[PaternDesign].Value[i].Width,
    668                                         0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Paint_20:
   \   00000152   82B0               SUB      SP,SP,#+8
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   0090               STR      R0,[SP, #+0]
   \   00000158   7821               MOVS     R1,#+120
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   0598               LDR      R0,[SP, #+20]
   \   0000015E   8178               LDRB     R1,[R0, #+2]
   \   00000160   1000               MOVS     R0,R2
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   0798               LDR      R0,[SP, #+28]
   \   00000166   4378               LDRB     R3,[R0, #+1]
   \   00000168   0278               LDRB     R2,[R0, #+0]
   \   0000016A   0021               MOVS     R1,#+0
   \   0000016C   09A8               ADD      R0,SP,#+36
   \   0000016E   ........           BL       Label
   \   00000172   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Paint_21:
   \   00000174   6D1C               ADDS     R5,R5,#+1
   \   00000176   2D06               LSLS     R5,R5,#+24
   \   00000178   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_16:
   \   0000017A   2800               MOVS     R0,R5
   \   0000017C   0428               CMP      R0,#+4
   \   0000017E   4ED2               BCS      ??MainSide_Paint_22
   \   00000180   2000               MOVS     R0,R4
   \   00000182   5821               MOVS     R1,#+88
   \   00000184   4843               MULS     R0,R1,R0
   \   00000186   0099               LDR      R1,[SP, #+0]
   \   00000188   0818               ADDS     R0,R1,R0
   \   0000018A   2900               MOVS     R1,R5
   \   0000018C   8A00               LSLS     R2,R1,#+2
   \   0000018E   8018               ADDS     R0,R0,R2
   \   00000190   3430               ADDS     R0,R0,#+52
   \   00000192   0190               STR      R0,[SP, #+4]
   \   00000194   8078               LDRB     R0,[R0, #+2]
   \   00000196   0028               CMP      R0,#+0
   \   00000198   ECD0               BEQ      ??MainSide_Paint_21
   \   0000019A   0720               MOVS     R0,#+7
   \   0000019C   4143               MULS     R1,R0,R1
   \   0000019E   0698               LDR      R0,[SP, #+24]
   \   000001A0   4018               ADDS     R0,R0,R1
   \   000001A2   0290               STR      R0,[SP, #+8]
   \   000001A4   0200               MOVS     R2,R0
   \   000001A6   7332               ADDS     R2,R2,#+115
   \   000001A8   1078               LDRB     R0,[R2, #+0]
   \   000001AA   0028               CMP      R0,#+0
   \   000001AC   03D1               BNE      ??MainSide_Paint_23
   \   000001AE   E1D1               BNE      ??MainSide_Paint_21
   \   000001B0   5078               LDRB     R0,[R2, #+1]
   \   000001B2   0028               CMP      R0,#+0
   \   000001B4   DED0               BEQ      ??MainSide_Paint_21
   \                     ??MainSide_Paint_23:
   \   000001B6   0021               MOVS     R1,#+0
   \   000001B8   A020               MOVS     R0,#+160
   \   000001BA   5378               LDRB     R3,[R2, #+1]
   \   000001BC   5B00               LSLS     R3,R3,#+1
   \   000001BE   1678               LDRB     R6,[R2, #+0]
   \   000001C0   1427               MOVS     R7,#+20
   \   000001C2   7E43               MULS     R6,R7,R6
   \   000001C4   414F               LDR      R7,??MainSide_Paint_0+0x18  ;; MainStage
   \   000001C6   BE19               ADDS     R6,R7,R6
   \   000001C8   F318               ADDS     R3,R6,R3
   \   000001CA   185E               LDRSH    R0,[R3, R0]
   \   000001CC   0304               LSLS     R3,R0,#+16
   \   000001CE   09D5               BPL      ??MainSide_Paint_24
   \   000001D0   2D20               MOVS     R0,#+45
   \   000001D2   03A9               ADD      R1,SP,#+12
   \   000001D4   0870               STRB     R0,[R1, #+0]
   \   000001D6   3F22               MOVS     R2,#+63
   \   000001D8   4A70               STRB     R2,[R1, #+1]
   \   000001DA   8A70               STRB     R2,[R1, #+2]
   \   000001DC   CA70               STRB     R2,[R1, #+3]
   \   000001DE   0871               STRB     R0,[R1, #+4]
   \   000001E0   0522               MOVS     R2,#+5
   \   000001E2   B6E7               B        ??MainSide_Paint_20
   \                     ??MainSide_Paint_24:
   \   000001E4   9278               LDRB     R2,[R2, #+2]
   \   000001E6   002A               CMP      R2,#+0
   \   000001E8   A8D0               BEQ      ??MainSide_Paint_19
   \   000001EA   03A9               ADD      R1,SP,#+12
   \   000001EC   ........           BL       sIntToStr
   \   000001F0   0200               MOVS     R2,R0
   \   000001F2   0020               MOVS     R0,#+0
   \                     ??MainSide_Paint_25:
   \   000001F4   0100               MOVS     R1,R0
   \   000001F6   0329               CMP      R1,#+3
   \   000001F8   ABD2               BCS      ??MainSide_Paint_20
   \   000001FA   029B               LDR      R3,[SP, #+8]
   \   000001FC   5918               ADDS     R1,R3,R1
   \   000001FE   7023               MOVS     R3,#+112
   \   00000200   CB5C               LDRB     R3,[R1, R3]
   \   00000202   002B               CMP      R3,#+0
   \   00000204   07D0               BEQ      ??MainSide_Paint_26
   \   00000206   1300               MOVS     R3,R2
   \   00000208   03AE               ADD      R6,SP,#+12
   \   0000020A   7031               ADDS     R1,R1,#+112
   \   0000020C   0978               LDRB     R1,[R1, #+0]
   \   0000020E   F154               STRB     R1,[R6, R3]
   \   00000210   521C               ADDS     R2,R2,#+1
   \   00000212   1206               LSLS     R2,R2,#+24
   \   00000214   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Paint_26:
   \   00000216   401C               ADDS     R0,R0,#+1
   \   00000218   0006               LSLS     R0,R0,#+24
   \   0000021A   000E               LSRS     R0,R0,#+24
   \   0000021C   EAE7               B        ??MainSide_Paint_25
    669                               
    670                               }
    671                       }
    672                      }
    673                    
    674                       //Linie
    675                       for (char i=0; i<ScrenLineNr; i++)
   \                     ??MainSide_Paint_22:
   \   0000021E   0025               MOVS     R5,#+0
   \   00000220   08E0               B        ??MainSide_Paint_27
    676                       {
    677                        if (ScreenPaternDesign[PaternDesign].Line[i].Width>0)
    678                        {
    679                            if (ScreenPaternDesign[PaternDesign].Line[i].Width>ScreenPaternDesign[PaternDesign].Line[i].Height)
    680                            {
    681                                H_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Width,1); // (char X, int Y, char lenght, char typ)
    682                            }else{
    683                                V_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Height,1); // (char X, int Y, char lenght, char typ)
   \                     ??MainSide_Paint_28:
   \   00000222   0123               MOVS     R3,#+1
   \   00000224   0A00               MOVS     R2,R1
   \   00000226   4178               LDRB     R1,[R0, #+1]
   \   00000228   0078               LDRB     R0,[R0, #+0]
   \   0000022A   ........           BL       V_line
    684                        
    685                            }
   \                     ??MainSide_Paint_29:
   \   0000022E   6D1C               ADDS     R5,R5,#+1
   \   00000230   2D06               LSLS     R5,R5,#+24
   \   00000232   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_27:
   \   00000234   2800               MOVS     R0,R5
   \   00000236   0228               CMP      R0,#+2
   \   00000238   15D2               BCS      ??MainSide_Paint_30
   \   0000023A   2000               MOVS     R0,R4
   \   0000023C   5821               MOVS     R1,#+88
   \   0000023E   4843               MULS     R0,R1,R0
   \   00000240   0099               LDR      R1,[SP, #+0]
   \   00000242   0818               ADDS     R0,R1,R0
   \   00000244   2900               MOVS     R1,R5
   \   00000246   8900               LSLS     R1,R1,#+2
   \   00000248   4018               ADDS     R0,R0,R1
   \   0000024A   4430               ADDS     R0,R0,#+68
   \   0000024C   8178               LDRB     R1,[R0, #+2]
   \   0000024E   0029               CMP      R1,#+0
   \   00000250   EDD0               BEQ      ??MainSide_Paint_29
   \   00000252   C178               LDRB     R1,[R0, #+3]
   \   00000254   8278               LDRB     R2,[R0, #+2]
   \   00000256   9142               CMP      R1,R2
   \   00000258   E3D2               BCS      ??MainSide_Paint_28
   \   0000025A   0123               MOVS     R3,#+1
   \   0000025C   4178               LDRB     R1,[R0, #+1]
   \   0000025E   0078               LDRB     R0,[R0, #+0]
   \   00000260   ........           BL       H_line
   \   00000264   E3E7               B        ??MainSide_Paint_29
    686                        }
    687                       }
    688                      
    689                                  
    690                         //przyciski
    691                      for (char i=0; i<ScrenButtonNr; i++)
   \                     ??MainSide_Paint_30:
   \   00000266   0025               MOVS     R5,#+0
   \   00000268   1DE0               B        ??MainSide_Paint_31
    692                      {
    693                        if ((ScreenPaternDesign[PaternDesign].Button[i].Width>0) && (ScreenLokal->Button[i].Hide==0))
   \                     ??MainSide_Paint_32:
   \   0000026A   2000               MOVS     R0,R4
   \   0000026C   5821               MOVS     R1,#+88
   \   0000026E   4843               MULS     R0,R1,R0
   \   00000270   0099               LDR      R1,[SP, #+0]
   \   00000272   0818               ADDS     R0,R1,R0
   \   00000274   2A00               MOVS     R2,R5
   \   00000276   9100               LSLS     R1,R2,#+2
   \   00000278   4118               ADDS     R1,R0,R1
   \   0000027A   8878               LDRB     R0,[R1, #+2]
   \   0000027C   0028               CMP      R0,#+0
   \   0000027E   0FD0               BEQ      ??MainSide_Paint_33
   \   00000280   D000               LSLS     R0,R2,#+3
   \   00000282   069A               LDR      R2,[SP, #+24]
   \   00000284   1018               ADDS     R0,R2,R0
   \   00000286   827C               LDRB     R2,[R0, #+18]
   \   00000288   D206               LSLS     R2,R2,#+27
   \   0000028A   09D4               BMI      ??MainSide_Paint_33
    694                        {
    695                                Button(ScreenLokal->Button[i].Text,
    696                                ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
    697                                ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
    698                                ScreenPaternDesign[PaternDesign].Button[i].Width,
    699                                ScreenPaternDesign[PaternDesign].Button[i].Height); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000028C   82B0               SUB      SP,SP,#+8
   \   0000028E   CA78               LDRB     R2,[R1, #+3]
   \   00000290   0092               STR      R2,[SP, #+0]
   \   00000292   8B78               LDRB     R3,[R1, #+2]
   \   00000294   4A78               LDRB     R2,[R1, #+1]
   \   00000296   0978               LDRB     R1,[R1, #+0]
   \   00000298   0B30               ADDS     R0,R0,#+11
   \   0000029A   ........           BL       Button
   \   0000029E   02B0               ADD      SP,SP,#+8
    700                       
    701                        }
    702                       }
   \                     ??MainSide_Paint_33:
   \   000002A0   6D1C               ADDS     R5,R5,#+1
   \   000002A2   2D06               LSLS     R5,R5,#+24
   \   000002A4   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_31:
   \   000002A6   2800               MOVS     R0,R5
   \   000002A8   0928               CMP      R0,#+9
   \   000002AA   DED3               BCC      ??MainSide_Paint_32
    703                      
    704                      
    705                      //Du¿a temperatura
    706          
    707                
    708                  
    709                }
    710            }
    711          }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??MainSide_Paint_2:
   \   000002AC   07B0               ADD      SP,SP,#+28
   \   000002AE   F0BC               POP      {R4-R7}
   \   000002B0   01BC               POP      {R0}
   \   000002B2   0047               BX       R0               ;; return
   \                     ??MainSide_Paint_0:
   \   000002B4   ........           DC32     g_PC_Connected
   \   000002B8   ........           DC32     TextToChangeLength + 148
   \   000002BC   ........           DC32     TextToChangeLength
   \   000002C0   ........           DC32     `?<Constant {129, 0}>` + 24
   \   000002C4   ........           DC32     `?<Constant {129, 0}>` + 992
   \   000002C8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002CC   ........           DC32     MainStage
    712          
    713          
    714          
    715          
    716          //*-----------------------------------------------------------------------------
    717          //* Nazwa funkcji :    Message
    718          //* Funkcja wywietlenia wiadomoci   
    719          //*-----------------------------------------------------------------------------
    720          //*  String   - wskanik na tekst
    721          //*  StringLength - d³ugoæ tekstu
    722          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    723          void MESSAGE(char *String)
    724          {
   \                     MESSAGE:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   9EB0               SUB      SP,SP,#+120
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   02E0               B        ??MESSAGE_0
    725               char StrTmp[8][15];
    726               char StringLength=0;
    727               
    728               while (String[StringLength]>0) StringLength++;                             //okrelenie d³ugoci stringu
   \                     ??MESSAGE_1:
   \   00000008   401C               ADDS     R0,R0,#+1
   \   0000000A   0006               LSLS     R0,R0,#+24
   \   0000000C   000E               LSRS     R0,R0,#+24
   \                     ??MESSAGE_0:
   \   0000000E   0100               MOVS     R1,R0
   \   00000010   1E9A               LDR      R2,[SP, #+120]
   \   00000012   515C               LDRB     R1,[R2, R1]
   \   00000014   0029               CMP      R1,#+0
   \   00000016   F7D1               BNE      ??MESSAGE_1
    729               
    730               for (char i=0; i<8; i++) for (char j=0; j<15; j++) StrTmp[i][j]=0;             //czyszczenie stringów
   \   00000018   0FE0               B        ??MESSAGE_2
   \                     ??MESSAGE_3:
   \   0000001A   0C00               MOVS     R4,R1
   \   0000001C   0F25               MOVS     R5,#+15
   \   0000001E   6C43               MULS     R4,R5,R4
   \   00000020   6D46               MOV      R5,SP
   \   00000022   2C19               ADDS     R4,R5,R4
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   E554               STRB     R5,[R4, R3]
   \   00000028   521C               ADDS     R2,R2,#+1
   \   0000002A   1206               LSLS     R2,R2,#+24
   \   0000002C   120E               LSRS     R2,R2,#+24
   \                     ??MESSAGE_4:
   \   0000002E   1300               MOVS     R3,R2
   \   00000030   0F2B               CMP      R3,#+15
   \   00000032   F2D3               BCC      ??MESSAGE_3
   \   00000034   491C               ADDS     R1,R1,#+1
   \   00000036   0906               LSLS     R1,R1,#+24
   \   00000038   090E               LSRS     R1,R1,#+24
   \                     ??MESSAGE_2:
   \   0000003A   0A00               MOVS     R2,R1
   \   0000003C   082A               CMP      R2,#+8
   \   0000003E   01D2               BCS      ??MESSAGE_5
   \   00000040   0022               MOVS     R2,#+0
   \   00000042   F4E7               B        ??MESSAGE_4
    731               
    732               char IdxChar=0;
   \                     ??MESSAGE_5:
   \   00000044   0021               MOVS     R1,#+0
    733               char IdxStr=0;     
   \   00000046   0C00               MOVS     R4,R1
    734               char NWS=0;
    735               //przepisanie tekstu
    736               for (char i=0; i<StringLength; i++)
   \   00000048   0A00               MOVS     R2,R1
   \   0000004A   21E0               B        ??MESSAGE_6
    737               {
    738                    if ((String[i]==0xA) && (IdxChar>0))           //je¿eli nastêpna linia "\n"
    739                    {
    740                      IdxStr++;
    741                      IdxChar=0;
    742                      i++;
    743                      if (String[i]==0x20) i++;
    744                    }
    745                    
    746                    if ((IdxChar==0) && (String[i]==0x20)) i++;     //je¿eli na pocz¹tku linijki pusty znak
    747                      
    748                   StrTmp[IdxStr][IdxChar]=String[i];
    749                 
    750                   if(IdxChar<12)
    751                   {
    752                     NWS=0;
    753                     while ((String[i+NWS+1]>0) && (String[i+NWS+1] != 0x20) && (String[i+NWS+1] != 0x0)) NWS++;              //okrelenie d³ugoci nastêpnego wyrazu
    754                     if (IdxChar+NWS<12) {IdxChar++; }
    755                      else 
    756                      {
    757                        IdxChar=0;
   \                     ??MESSAGE_7:
   \   0000004C   0021               MOVS     R1,#+0
    758                        IdxStr++;
   \   0000004E   641C               ADDS     R4,R4,#+1
   \   00000050   2406               LSLS     R4,R4,#+24
   \   00000052   240E               LSRS     R4,R4,#+24
    759                      } 
    760                   }else{
    761                     IdxChar=0;
    762                     IdxStr++;
    763                   } 
    764                   if (IdxStr>7) {StrTmp[6][0]=0x2E; StrTmp[6][1]=0x20; StrTmp[6][2]=0x2E; StrTmp[6][3]=0x20; StrTmp[6][4]=0x2E; StrTmp[6][5]=0x20; StrTmp[6][6]=0; i=StringLength; IdxStr=7;}
   \                     ??MESSAGE_8:
   \   00000054   2500               MOVS     R5,R4
   \   00000056   082D               CMP      R5,#+8
   \   00000058   17D3               BCC      ??MESSAGE_9
   \   0000005A   2E22               MOVS     R2,#+46
   \   0000005C   5A24               MOVS     R4,#+90
   \   0000005E   1A55               STRB     R2,[R3, R4]
   \   00000060   2024               MOVS     R4,#+32
   \   00000062   1D00               MOVS     R5,R3
   \   00000064   5A35               ADDS     R5,R5,#+90
   \   00000066   6C70               STRB     R4,[R5, #+1]
   \   00000068   1D00               MOVS     R5,R3
   \   0000006A   5A35               ADDS     R5,R5,#+90
   \   0000006C   AA70               STRB     R2,[R5, #+2]
   \   0000006E   1D00               MOVS     R5,R3
   \   00000070   5A35               ADDS     R5,R5,#+90
   \   00000072   EC70               STRB     R4,[R5, #+3]
   \   00000074   1D00               MOVS     R5,R3
   \   00000076   5A35               ADDS     R5,R5,#+90
   \   00000078   2A71               STRB     R2,[R5, #+4]
   \   0000007A   1A00               MOVS     R2,R3
   \   0000007C   5A32               ADDS     R2,R2,#+90
   \   0000007E   5471               STRB     R4,[R2, #+5]
   \   00000080   5A33               ADDS     R3,R3,#+90
   \   00000082   0022               MOVS     R2,#+0
   \   00000084   9A71               STRB     R2,[R3, #+6]
   \   00000086   0200               MOVS     R2,R0
   \   00000088   0724               MOVS     R4,#+7
   \                     ??MESSAGE_9:
   \   0000008A   521C               ADDS     R2,R2,#+1
   \   0000008C   1206               LSLS     R2,R2,#+24
   \   0000008E   120E               LSRS     R2,R2,#+24
   \                     ??MESSAGE_6:
   \   00000090   1300               MOVS     R3,R2
   \   00000092   0500               MOVS     R5,R0
   \   00000094   AB42               CMP      R3,R5
   \   00000096   46D2               BCS      ??MESSAGE_10
   \   00000098   1E9D               LDR      R5,[SP, #+120]
   \   0000009A   EB5C               LDRB     R3,[R5, R3]
   \   0000009C   0A2B               CMP      R3,#+10
   \   0000009E   0FD1               BNE      ??MESSAGE_11
   \   000000A0   0B00               MOVS     R3,R1
   \   000000A2   0DD0               BEQ      ??MESSAGE_11
   \   000000A4   641C               ADDS     R4,R4,#+1
   \   000000A6   2406               LSLS     R4,R4,#+24
   \   000000A8   240E               LSRS     R4,R4,#+24
   \   000000AA   0021               MOVS     R1,#+0
   \   000000AC   521C               ADDS     R2,R2,#+1
   \   000000AE   1206               LSLS     R2,R2,#+24
   \   000000B0   120E               LSRS     R2,R2,#+24
   \   000000B2   1300               MOVS     R3,R2
   \   000000B4   EB5C               LDRB     R3,[R5, R3]
   \   000000B6   202B               CMP      R3,#+32
   \   000000B8   02D1               BNE      ??MESSAGE_11
   \   000000BA   521C               ADDS     R2,R2,#+1
   \   000000BC   1206               LSLS     R2,R2,#+24
   \   000000BE   120E               LSRS     R2,R2,#+24
   \                     ??MESSAGE_11:
   \   000000C0   0B00               MOVS     R3,R1
   \   000000C2   06D1               BNE      ??MESSAGE_12
   \   000000C4   1300               MOVS     R3,R2
   \   000000C6   EB5C               LDRB     R3,[R5, R3]
   \   000000C8   202B               CMP      R3,#+32
   \   000000CA   02D1               BNE      ??MESSAGE_12
   \   000000CC   521C               ADDS     R2,R2,#+1
   \   000000CE   1206               LSLS     R2,R2,#+24
   \   000000D0   120E               LSRS     R2,R2,#+24
   \                     ??MESSAGE_12:
   \   000000D2   6B46               MOV      R3,SP
   \   000000D4   0F00               MOVS     R7,R1
   \   000000D6   2500               MOVS     R5,R4
   \   000000D8   0F26               MOVS     R6,#+15
   \   000000DA   7543               MULS     R5,R6,R5
   \   000000DC   5E19               ADDS     R6,R3,R5
   \   000000DE   B446               MOV      R12,R6
   \   000000E0   1600               MOVS     R6,R2
   \   000000E2   1E9D               LDR      R5,[SP, #+120]
   \   000000E4   AD5D               LDRB     R5,[R5, R6]
   \   000000E6   6646               MOV      R6,R12
   \   000000E8   F555               STRB     R5,[R6, R7]
   \   000000EA   0D00               MOVS     R5,R1
   \   000000EC   0C2D               CMP      R5,#+12
   \   000000EE   ADD2               BCS      ??MESSAGE_7
   \   000000F0   0025               MOVS     R5,#+0
   \   000000F2   02E0               B        ??MESSAGE_13
   \                     ??MESSAGE_14:
   \   000000F4   6D1C               ADDS     R5,R5,#+1
   \   000000F6   2D06               LSLS     R5,R5,#+24
   \   000000F8   2D0E               LSRS     R5,R5,#+24
   \                     ??MESSAGE_13:
   \   000000FA   1600               MOVS     R6,R2
   \   000000FC   2F00               MOVS     R7,R5
   \   000000FE   F619               ADDS     R6,R6,R7
   \   00000100   1E9F               LDR      R7,[SP, #+120]
   \   00000102   BE19               ADDS     R6,R7,R6
   \   00000104   7778               LDRB     R7,[R6, #+1]
   \   00000106   002F               CMP      R7,#+0
   \   00000108   03D0               BEQ      ??MESSAGE_15
   \   0000010A   202F               CMP      R7,#+32
   \   0000010C   01D0               BEQ      ??MESSAGE_15
   \   0000010E   3E00               MOVS     R6,R7
   \   00000110   F0D1               BNE      ??MESSAGE_14
   \                     ??MESSAGE_15:
   \   00000112   0E00               MOVS     R6,R1
   \   00000114   7519               ADDS     R5,R6,R5
   \   00000116   2D04               LSLS     R5,R5,#+16
   \   00000118   2D0C               LSRS     R5,R5,#+16
   \   0000011A   0C2D               CMP      R5,#+12
   \   0000011C   96D2               BCS      ??MESSAGE_7
   \   0000011E   491C               ADDS     R1,R1,#+1
   \   00000120   0906               LSLS     R1,R1,#+24
   \   00000122   090E               LSRS     R1,R1,#+24
   \   00000124   96E7               B        ??MESSAGE_8
    765               }
    766               
    767          
    768          
    769              CleanCanvas();
   \                     ??MESSAGE_10:
   \   00000126   ........           BL       CleanCanvas
    770              
    771              char BazeY=56+10*(IdxStr/2);
   \   0000012A   2000               MOVS     R0,R4
   \   0000012C   0500               MOVS     R5,R0
   \   0000012E   2D06               LSLS     R5,R5,#+24
   \   00000130   2D0E               LSRS     R5,R5,#+24
   \   00000132   6D08               LSRS     R5,R5,#+1
   \   00000134   0A26               MOVS     R6,#+10
   \   00000136   6E43               MULS     R6,R5,R6
   \   00000138   3836               ADDS     R6,R6,#+56
   \   0000013A   3606               LSLS     R6,R6,#+24
   \   0000013C   360E               LSRS     R6,R6,#+24
    772             
    773               Label(" INFO ",2,2,BazeY+17,15,59,0,127,1);      //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000013E   82B0               SUB      SP,SP,#+8
   \   00000140   0120               MOVS     R0,#+1
   \   00000142   0090               STR      R0,[SP, #+0]
   \   00000144   7F21               MOVS     R1,#+127
   \   00000146   0020               MOVS     R0,#+0
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   3B21               MOVS     R1,#+59
   \   0000014C   0F20               MOVS     R0,#+15
   \   0000014E   03B4               PUSH     {R0,R1}
   \   00000150   3300               MOVS     R3,R6
   \   00000152   1133               ADDS     R3,R3,#+17
   \   00000154   0222               MOVS     R2,#+2
   \   00000156   1100               MOVS     R1,R2
   \   00000158   3348               LDR      R0,??MESSAGE_16  ;; `?<Constant " INFO ">`
   \   0000015A   ........           BL       Label
   \   0000015E   06B0               ADD      SP,SP,#+24
    774                  
    775              for (char i=0; i<=IdxStr; i++)
   \   00000160   0027               MOVS     R7,#+0
   \   00000162   1AE0               B        ??MESSAGE_17
    776              {
    777                  Label(StrTmp[i],0,4,BazeY,15,56,0,127,0);      //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??MESSAGE_18:
   \   00000164   82B0               SUB      SP,SP,#+8
   \   00000166   0020               MOVS     R0,#+0
   \   00000168   0090               STR      R0,[SP, #+0]
   \   0000016A   7F21               MOVS     R1,#+127
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   3821               MOVS     R1,#+56
   \   00000170   0F20               MOVS     R0,#+15
   \   00000172   03B4               PUSH     {R0,R1}
   \   00000174   3300               MOVS     R3,R6
   \   00000176   0422               MOVS     R2,#+4
   \   00000178   0021               MOVS     R1,#+0
   \   0000017A   8C46               MOV      R12,R1
   \   0000017C   3800               MOVS     R0,R7
   \   0000017E   0F21               MOVS     R1,#+15
   \   00000180   4843               MULS     R0,R1,R0
   \   00000182   06A9               ADD      R1,SP,#+24
   \   00000184   0818               ADDS     R0,R1,R0
   \   00000186   6146               MOV      R1,R12
   \   00000188   ........           BL       Label
   \   0000018C   06B0               ADD      SP,SP,#+24
    778                  BazeY=BazeY-10;
   \   0000018E   0A3E               SUBS     R6,R6,#+10
   \   00000190   3606               LSLS     R6,R6,#+24
   \   00000192   360E               LSRS     R6,R6,#+24
    779              }
   \   00000194   7F1C               ADDS     R7,R7,#+1
   \   00000196   3F06               LSLS     R7,R7,#+24
   \   00000198   3F0E               LSRS     R7,R7,#+24
   \                     ??MESSAGE_17:
   \   0000019A   2000               MOVS     R0,R4
   \   0000019C   3900               MOVS     R1,R7
   \   0000019E   8842               CMP      R0,R1
   \   000001A0   E0D2               BCS      ??MESSAGE_18
    780             
    781              
    782              char PozD=BazeY+3; 
   \   000001A2   3000               MOVS     R0,R6
   \   000001A4   C01C               ADDS     R0,R0,#+3
   \   000001A6   0006               LSLS     R0,R0,#+24
   \   000001A8   000E               LSRS     R0,R0,#+24
    783              char PozG=BazeY+10*(IdxStr+1)+15; 
   \   000001AA   0A21               MOVS     R1,#+10
   \   000001AC   4C43               MULS     R4,R1,R4
   \   000001AE   3419               ADDS     R4,R6,R4
   \   000001B0   1934               ADDS     R4,R4,#+25
   \   000001B2   2406               LSLS     R4,R4,#+24
   \   000001B4   240E               LSRS     R4,R4,#+24
    784              char Wys=PozG-PozD;
   \   000001B6   2100               MOVS     R1,R4
   \   000001B8   0200               MOVS     R2,R0
   \   000001BA   8F1A               SUBS     R7,R1,R2
   \   000001BC   3F06               LSLS     R7,R7,#+24
   \   000001BE   3F0E               LSRS     R7,R7,#+24
    785              V_line(0,PozD-2,Wys+14,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001C0   801E               SUBS     R0,R0,#+2
   \   000001C2   0600               MOVS     R6,R0
   \   000001C4   0E37               ADDS     R7,R7,#+14
   \   000001C6   0123               MOVS     R3,#+1
   \   000001C8   3A00               MOVS     R2,R7
   \   000001CA   1206               LSLS     R2,R2,#+24
   \   000001CC   120E               LSRS     R2,R2,#+24
   \   000001CE   3100               MOVS     R1,R6
   \   000001D0   0020               MOVS     R0,#+0
   \   000001D2   ........           BL       V_line
    786              V_line(63,PozD-2,Wys+14,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001D6   0123               MOVS     R3,#+1
   \   000001D8   3A00               MOVS     R2,R7
   \   000001DA   1206               LSLS     R2,R2,#+24
   \   000001DC   120E               LSRS     R2,R2,#+24
   \   000001DE   3100               MOVS     R1,R6
   \   000001E0   3F20               MOVS     R0,#+63
   \   000001E2   ........           BL       V_line
    787              H_line(0,PozG+12,74,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001E6   0123               MOVS     R3,#+1
   \   000001E8   4A22               MOVS     R2,#+74
   \   000001EA   2100               MOVS     R1,R4
   \   000001EC   0C31               ADDS     R1,R1,#+12
   \   000001EE   0020               MOVS     R0,#+0
   \   000001F0   ........           BL       H_line
    788              H_line(2,PozG,60,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001F4   0123               MOVS     R3,#+1
   \   000001F6   3C22               MOVS     R2,#+60
   \   000001F8   2100               MOVS     R1,R4
   \   000001FA   0220               MOVS     R0,#+2
   \   000001FC   ........           BL       H_line
    789              H_line(0,PozD-2,64,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   00000200   0123               MOVS     R3,#+1
   \   00000202   4022               MOVS     R2,#+64
   \   00000204   3100               MOVS     R1,R6
   \   00000206   0020               MOVS     R0,#+0
   \   00000208   ........           BL       H_line
    790          
    791              
    792              g_Message=g_counter+(3+(IdxStr/2))*700;         //czas wywietlania wiadomoci (jednostka- ms)
   \   0000020C   074A               LDR      R2,??MESSAGE_16+0x4  ;; g_Message
   \   0000020E   0848               LDR      R0,??MESSAGE_16+0x8  ;; g_counter
   \   00000210   03C8               LDM      R0!,{R0,R1}
   \   00000212   ED1C               ADDS     R5,R5,#+3
   \   00000214   AF21               MOVS     R1,#+175
   \   00000216   8900               LSLS     R1,R1,#+2        ;; #+700
   \   00000218   4D43               MULS     R5,R1,R5
   \   0000021A   4019               ADDS     R0,R0,R5
   \   0000021C   1060               STR      R0,[R2, #+0]
    793          }
   \   0000021E   1FB0               ADD      SP,SP,#+124
   \   00000220   F0BC               POP      {R4-R7}
   \   00000222   01BC               POP      {R0}
   \   00000224   0047               BX       R0               ;; return
   \   00000226   C046               Nop      
   \                     ??MESSAGE_16:
   \   00000228   ........           DC32     `?<Constant " INFO ">`
   \   0000022C   ........           DC32     g_Message
   \   00000230   ........           DC32     g_counter
    794          
    795          
    796          
    797          
    798          //*-----------------------------------------------------------------------------
    799          //* Nazwa funkcji :    MainSide_Refresh
    800          //* Funkcja strony g³ównej menu
    801          //*-----------------------------------------------------------------------------
    802          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    803          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    804          void MESSAGE_Refresh(void)
    805          {
   \                     MESSAGE_Refresh:
   \   00000000   30B5               PUSH     {R4,R5,LR}
   \   00000002   87B0               SUB      SP,SP,#+28
    806          
    807             
    808             if ((MainSide_puls==0) || (MainSide_puls>1))
   \   00000004   214C               LDR      R4,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   00000006   2578               LDRB     R5,[R4, #+0]
   \   00000008   002D               CMP      R5,#+0
   \   0000000A   01D0               BEQ      ??MESSAGE_Refresh_1
   \   0000000C   022D               CMP      R5,#+2
   \   0000000E   17D3               BCC      ??MESSAGE_Refresh_2
    809              { 
    810                char ekran1[2][13] = {
    811                           {0,0,224,24,232,244,244,244,232,24,224,0,0},
    812                            {0,0,0,3,2,5,5,5,2,3,0,0,0}
    813                            };
   \                     ??MESSAGE_Refresh_1:
   \   00000010   6846               MOV      R0,SP
   \   00000012   1F49               LDR      R1,??MESSAGE_Refresh_0+0x4  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`
   \   00000014   1C22               MOVS     R2,#+28
   \   00000016   ........           BL       __aeabi_memcpy4
    814                
    815                for (char i=0; i<=12; i++)
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   0DE0               B        ??MESSAGE_Refresh_3
    816                {
    817                   
    818                    LCD_Canvas[0][i]=ekran1[0][i];
   \                     ??MESSAGE_Refresh_4:
   \   0000001E   0A00               MOVS     R2,R1
   \   00000020   1C48               LDR      R0,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   00000022   6B46               MOV      R3,SP
   \   00000024   9B5C               LDRB     R3,[R3, R2]
   \   00000026   8354               STRB     R3,[R0, R2]
    819                    LCD_Canvas[1][i]=ekran1[1][i];
   \   00000028   8018               ADDS     R0,R0,R2
   \   0000002A   8030               ADDS     R0,R0,#+128
   \   0000002C   6B46               MOV      R3,SP
   \   0000002E   9A18               ADDS     R2,R3,R2
   \   00000030   527B               LDRB     R2,[R2, #+13]
   \   00000032   0270               STRB     R2,[R0, #+0]
    820                }
   \   00000034   491C               ADDS     R1,R1,#+1
   \   00000036   0906               LSLS     R1,R1,#+24
   \   00000038   090E               LSRS     R1,R1,#+24
   \                     ??MESSAGE_Refresh_3:
   \   0000003A   0800               MOVS     R0,R1
   \   0000003C   0D28               CMP      R0,#+13
   \   0000003E   EED3               BCC      ??MESSAGE_Refresh_4
    821                
    822              }
    823              if ((MainSide_puls==1))
   \                     ??MESSAGE_Refresh_2:
   \   00000040   012D               CMP      R5,#+1
   \   00000042   17D1               BNE      ??MESSAGE_Refresh_5
    824              {
    825                
    826                
    827                char ekran2[2][13] = {
    828                            {240,28,230,250,251,253,253,253,251,250,230,28,240},
    829                            {1,7,12,11,27,23,23,23,27,11,12,7,1},
    830                            };
   \   00000044   6846               MOV      R0,SP
   \   00000046   1449               LDR      R1,??MESSAGE_Refresh_0+0xC  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244` + 28
   \   00000048   1C22               MOVS     R2,#+28
   \   0000004A   ........           BL       __aeabi_memcpy4
    831                
    832                for (char i=0; i<=12; i++)
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   0DE0               B        ??MESSAGE_Refresh_6
    833                {
    834                   
    835                    LCD_Canvas[0][i]=ekran2[0][i];
   \                     ??MESSAGE_Refresh_7:
   \   00000052   0A00               MOVS     R2,R1
   \   00000054   0F48               LDR      R0,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   00000056   6B46               MOV      R3,SP
   \   00000058   9B5C               LDRB     R3,[R3, R2]
   \   0000005A   8354               STRB     R3,[R0, R2]
    836                    LCD_Canvas[1][i]=ekran2[1][i];
   \   0000005C   8018               ADDS     R0,R0,R2
   \   0000005E   8030               ADDS     R0,R0,#+128
   \   00000060   6B46               MOV      R3,SP
   \   00000062   9A18               ADDS     R2,R3,R2
   \   00000064   527B               LDRB     R2,[R2, #+13]
   \   00000066   0270               STRB     R2,[R0, #+0]
    837                }         
   \   00000068   491C               ADDS     R1,R1,#+1
   \   0000006A   0906               LSLS     R1,R1,#+24
   \   0000006C   090E               LSRS     R1,R1,#+24
   \                     ??MESSAGE_Refresh_6:
   \   0000006E   0800               MOVS     R0,R1
   \   00000070   0D28               CMP      R0,#+13
   \   00000072   EED3               BCC      ??MESSAGE_Refresh_7
    838              }
    839               
    840              if (MainSide_puls>3) {MainSide_puls=0;} else {MainSide_puls++;} 
   \                     ??MESSAGE_Refresh_5:
   \   00000074   042D               CMP      R5,#+4
   \   00000076   02D3               BCC      ??MESSAGE_Refresh_8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   2070               STRB     R0,[R4, #+0]
   \   0000007C   01E0               B        ??MESSAGE_Refresh_9
   \                     ??MESSAGE_Refresh_8:
   \   0000007E   6D1C               ADDS     R5,R5,#+1
   \   00000080   2570               STRB     R5,[R4, #+0]
    841            
    842          }//_______________________ Koniec funkcji MainSide_Refresh __________________________
   \                     ??MESSAGE_Refresh_9:
   \   00000082   07B0               ADD      SP,SP,#+28
   \   00000084   30BC               POP      {R4,R5}
   \   00000086   01BC               POP      {R0}
   \   00000088   0047               BX       R0               ;; return
   \   0000008A   C046               Nop      
   \                     ??MESSAGE_Refresh_0:
   \   0000008C   ........           DC32     MainSide_puls
   \   00000090   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`
   \   00000094   ........           DC32     LCD_Canvas
   \   00000098   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244` + 28
    843          
    844          
    845          
    846          
    847          
    848          
    849          
    850          
    851          
    852          
    853          //*-----------------------------------------------------------------------------
    854          //* Nazwa funkcji :    MainSide_Paint
    855          //* Funkcja strony g³ównej menu
    856          //*-----------------------------------------------------------------------------
    857          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    858          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    859          void MainSide_Event(_Screen* ScreenLokal)
    860          {
   \                     MainSide_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
    861            signed char BODP=-1;
    862            
    863            if (!g_PC_Connected)
   \   00000004   9048               LDR      R0,??MainSide_Event_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   69D1               BNE      ??MainSide_Event_1
   \   0000000C   0025               MOVS     R5,#+0
    864            {
    865            char ChangeSheet=0;
    866            char MenuPaintExecute=0;
   \   0000000E   6846               MOV      R0,SP
   \   00000010   2900               MOVS     R1,R5
   \   00000012   0171               STRB     R1,[R0, #+4]
    867            static char Xdown=0;
    868            
    869            char PaternDesign=(ScreenLokal->PaternDesign);
   \   00000014   0498               LDR      R0,[SP, #+16]
   \   00000016   0078               LDRB     R0,[R0, #+0]
   \   00000018   0090               STR      R0,[SP, #+0]
    870            
    871            const _ScreenPaternDesign *ScreenPaternDesign;
    872            if (CurrentSheet==0) 
   \   0000001A   8C4C               LDR      R4,??MainSide_Event_0+0x4  ;; TextToChangeLength
   \   0000001C   2079               LDRB     R0,[R4, #+4]
   \   0000001E   0028               CMP      R0,#+0
   \   00000020   02D1               BNE      ??MainSide_Event_2
    873            {
    874              ScreenPaternDesign=ScreenSetTab_0;
   \   00000022   8B48               LDR      R0,??MainSide_Event_0+0x8  ;; `?<Constant {129, 0}>` + 24
   \   00000024   0290               STR      R0,[SP, #+8]
   \   00000026   25E0               B        ??MainSide_Event_3
    875            }else{
    876              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Event_2:
   \   00000028   8A48               LDR      R0,??MainSide_Event_0+0xC  ;; `?<Constant {129, 0}>` + 992
   \   0000002A   0290               STR      R0,[SP, #+8]
    877              if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1)
   \   0000002C   0800               MOVS     R0,R1
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0F21               MOVS     R1,#+15
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   8848               LDR      R0,??MainSide_Event_0+0x10  ;; Y_down
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   435E               LDRSH    R3,[R0, R1]
   \   0000003A   8848               LDR      R0,??MainSide_Event_0+0x14  ;; X_down
   \   0000003C   425E               LDRSH    R2,[R0, R1]
   \   0000003E   8848               LDR      R0,??MainSide_Event_0+0x18  ;; Y_up
   \   00000040   415E               LDRSH    R1,[R0, R1]
   \   00000042   8848               LDR      R0,??MainSide_Event_0+0x1C  ;; X_up
   \   00000044   0026               MOVS     R6,#+0
   \   00000046   805F               LDRSH    R0,[R0, R6]
   \   00000048   ........           BL       List_Event
   \   0000004C   04B0               ADD      SP,SP,#+16
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   C943               MVNS     R1,R1            ;; #-1
   \   00000052   8842               CMP      R0,R1
   \   00000054   0ED1               BNE      ??MainSide_Event_3
    878              {
    879                   if (SheetHistoryIndex>0)
   \   00000056   E079               LDRB     R0,[R4, #+7]
   \   00000058   0028               CMP      R0,#+0
   \   0000005A   07D0               BEQ      ??MainSide_Event_4
    880                    {
    881                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000005C   401E               SUBS     R0,R0,#+1
   \   0000005E   E071               STRB     R0,[R4, #+7]
   \   00000060   0006               LSLS     R0,R0,#+24
   \   00000062   000E               LSRS     R0,R0,#+24
   \   00000064   2018               ADDS     R0,R4,R0
   \   00000066   2030               ADDS     R0,R0,#+32
   \   00000068   0078               LDRB     R0,[R0, #+0]
   \   0000006A   2071               STRB     R0,[R4, #+4]
    882                    } 
    883                   ChangeSheet=1;
   \                     ??MainSide_Event_4:
   \   0000006C   0121               MOVS     R1,#+1
   \   0000006E   0D00               MOVS     R5,R1
    884                   MenuPaintExecute=1;
   \   00000070   6846               MOV      R0,SP
   \   00000072   0171               STRB     R1,[R0, #+4]
    885              }
    886            }  
    887            
    888            
    889            
    890            if (ChangeSheet==0)
   \                     ??MainSide_Event_3:
   \   00000074   002D               CMP      R5,#+0
   \   00000076   2DD1               BNE      ??MainSide_Event_5
   \   00000078   7A48               LDR      R0,??MainSide_Event_0+0x1C  ;; X_up
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   405E               LDRSH    R0,[R0, R1]
   \   0000007E   0228               CMP      R0,#+2
   \   00000080   32DB               BLT      ??MainSide_Event_6
   \   00000082   0F28               CMP      R0,#+15
   \   00000084   30DA               BGE      ??MainSide_Event_6
   \   00000086   7648               LDR      R0,??MainSide_Event_0+0x18  ;; Y_up
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   7428               CMP      R0,#+116
   \   0000008C   2CDB               BLT      ??MainSide_Event_6
   \   0000008E   8028               CMP      R0,#+128
   \   00000090   2ADA               BGE      ??MainSide_Event_6
    891            {
    892            
    893            
    894              //akcja przycisku menu
    895              if ((X_up>1) && (X_up<15) && (Y_up>115) && (Y_up<128))
    896              {
    897                #ifdef  NOPASS
    898                  MenuLevel=11;
    899                #else
    900                  if ((g_level==0) && (g_NeedPass==1))
   \   00000092   7548               LDR      R0,??MainSide_Event_0+0x20  ;; g_level
   \   00000094   0078               LDRB     R0,[R0, #+0]
   \   00000096   0028               CMP      R0,#+0
   \   00000098   06D1               BNE      ??MainSide_Event_7
   \   0000009A   7448               LDR      R0,??MainSide_Event_0+0x24  ;; g_NeedPass
   \   0000009C   0078               LDRB     R0,[R0, #+0]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   02D1               BNE      ??MainSide_Event_7
    901                  {
    902                    MenuLevel=10;
   \   000000A2   0A20               MOVS     R0,#+10
   \   000000A4   A064               STR      R0,[R4, #+72]
   \   000000A6   01E0               B        ??MainSide_Event_8
    903                  }else{
    904                    MenuLevel=11;
   \                     ??MainSide_Event_7:
   \   000000A8   0B20               MOVS     R0,#+11
   \   000000AA   A064               STR      R0,[R4, #+72]
    905                  }
    906                #endif
    907                
    908                MenuPaintExecute=1;
   \                     ??MainSide_Event_8:
   \   000000AC   6846               MOV      R0,SP
   \   000000AE   0121               MOVS     R1,#+1
   \   000000B0   0171               STRB     R1,[R0, #+4]
    909                  
    910                if ((!(AT91C_IFLASH_MEM->Config.SoundOff))) {
   \   000000B2   6F48               LDR      R0,??MainSide_Event_0+0x28  ;; 0x13d7e9
   \   000000B4   0078               LDRB     R0,[R0, #+0]
   \   000000B6   0028               CMP      R0,#+0
   \   000000B8   0AD1               BNE      ??MainSide_Event_9
    911                  ButtonBipCounter=g_counter+8;
   \   000000BA   6E4A               LDR      R2,??MainSide_Event_0+0x2C  ;; ButtonBipCounter
   \   000000BC   6E48               LDR      R0,??MainSide_Event_0+0x30  ;; g_counter
   \   000000BE   03C8               LDM      R0!,{R0,R1}
   \   000000C0   0023               MOVS     R3,#+0
   \   000000C2   0830               ADDS     R0,R0,#+8
   \   000000C4   5941               ADCS     R1,R1,R3
   \   000000C6   03C2               STM      R2!,{R0,R1}
    912                    AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;
                                                      ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000C8   6C48               LDR      R0,??MainSide_Event_0+0x34  ;; 0xfffff430
   \   000000CA   8021               MOVS     R1,#+128
   \   000000CC   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000CE   0160               STR      R1,[R0, #+0]
    913                  } 
    914                Xdown=0;
   \                     ??MainSide_Event_9:
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   6073               STRB     R0,[R4, #+13]
    915              }
    916              else  if ((X_down>1) && (X_down<15) && (Y_down>115) && (Y_down<128))
    917              {
    918                 if ((!(AT91C_IFLASH_MEM->Config.SoundOff)) && (Xdown==0)) {
    919                  ButtonBipCounter=g_counter+8;
    920                    AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;
                                                      ^
Warning[Pe068]: integer conversion resulted in a change of sign
    921                  } 
    922                 Xdown=1;
    923              }
    924              else
    925              {
    926          
    927                Xdown=0;
    928                
    929              //STREFY przycisków
    930                if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Event(ScreenLokal);}
    931                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Event(ScreenLokal);}
    932                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {Timetable_Event(CurrentSheet);}
    933                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {Timetable_Event(CurrentSheet);}    
    934                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Event(CurrentSheet);}
    935                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Event(CurrentSheet);}   
    936                else {  
    937                
    938                
    939                    for (char i=0; i<ScrenButtonNr; i++)
    940                    {
    941                      
    942                      if ((ScreenPaternDesign[PaternDesign].Button[i].Width>0) && (ScreenLokal->Button[i].Hide==0))
    943                      {
    944                      
    945                            BODP=Button(ScreenLokal->Button[i].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
    946                            ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
    947                            ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
    948                            ScreenPaternDesign[PaternDesign].Button[i].Width,
    949                            ScreenPaternDesign[PaternDesign].Button[i].Height
    950                            );
    951                         
    952                          MenuPaintExecute=1;  
    953                         if (BODP==1)
    954                           {   
    955                            //je¿eli ustawiona akcja otwarcia strony 
    956                            if (ScreenLokal->Button[i].OpenPage) 
    957                             {
    958                               CurrentSheet=ScreenLokal->Button[i].OpenPage-1;
    959                               
    960                             }
    961                           }
    962                          if (BODP==2)
    963                           {
    964                             if (MainStage.StageButton[i+1+(10*CurrentSheet)]==0) 
    965                             {
    966                               MainStage.StageButton[i+1+(10*CurrentSheet)]=1;
    967                               g_NextTimeProgram=g_counter+ProgramPeriod;
    968                               Program(&gProg);
    969                             }
    970                            
    971                             
    972                           }else{
    973                             MainStage.StageButton[i+1+(10*CurrentSheet)]=0;
    974                             
    975                           }
    976                      }
    977                    }
    978                }
    979              }
    980          
    981            
    982            }
    983            
    984            if (MenuPaintExecute) MenuPaint();
   \                     ??MainSide_Event_5:
   \   000000D4   6846               MOV      R0,SP
   \   000000D6   0079               LDRB     R0,[R0, #+4]
   \   000000D8   0028               CMP      R0,#+0
   \   000000DA   01D0               BEQ      ??MainSide_Event_1
   \   000000DC   ........           BL       MenuPaint
    985              
    986            }
    987          }//_______________________ Koniec funkcji MainSide_Event __________________________
   \                     ??MainSide_Event_1:
   \   000000E0   05B0               ADD      SP,SP,#+20
   \   000000E2   F0BC               POP      {R4-R7}
   \   000000E4   01BC               POP      {R0}
   \   000000E6   0047               BX       R0               ;; return
   \                     ??MainSide_Event_6:
   \   000000E8   5C48               LDR      R0,??MainSide_Event_0+0x14  ;; X_down
   \   000000EA   405E               LDRSH    R0,[R0, R1]
   \   000000EC   0228               CMP      R0,#+2
   \   000000EE   1ADB               BLT      ??MainSide_Event_10
   \   000000F0   0F28               CMP      R0,#+15
   \   000000F2   18DA               BGE      ??MainSide_Event_10
   \   000000F4   5848               LDR      R0,??MainSide_Event_0+0x10  ;; Y_down
   \   000000F6   405E               LDRSH    R0,[R0, R1]
   \   000000F8   7428               CMP      R0,#+116
   \   000000FA   14DB               BLT      ??MainSide_Event_10
   \   000000FC   8028               CMP      R0,#+128
   \   000000FE   12DA               BGE      ??MainSide_Event_10
   \   00000100   5B48               LDR      R0,??MainSide_Event_0+0x28  ;; 0x13d7e9
   \   00000102   0078               LDRB     R0,[R0, #+0]
   \   00000104   617B               LDRB     R1,[R4, #+13]
   \   00000106   0143               ORRS     R1,R1,R0
   \   00000108   0AD1               BNE      ??MainSide_Event_11
   \   0000010A   5A4A               LDR      R2,??MainSide_Event_0+0x2C  ;; ButtonBipCounter
   \   0000010C   5A48               LDR      R0,??MainSide_Event_0+0x30  ;; g_counter
   \   0000010E   03C8               LDM      R0!,{R0,R1}
   \   00000110   0023               MOVS     R3,#+0
   \   00000112   0830               ADDS     R0,R0,#+8
   \   00000114   5941               ADCS     R1,R1,R3
   \   00000116   03C2               STM      R2!,{R0,R1}
   \   00000118   5848               LDR      R0,??MainSide_Event_0+0x34  ;; 0xfffff430
   \   0000011A   8021               MOVS     R1,#+128
   \   0000011C   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000011E   0160               STR      R1,[R0, #+0]
   \                     ??MainSide_Event_11:
   \   00000120   0120               MOVS     R0,#+1
   \   00000122   6073               STRB     R0,[R4, #+13]
   \   00000124   D6E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_10:
   \   00000126   0800               MOVS     R0,R1
   \   00000128   6073               STRB     R0,[R4, #+13]
   \   0000012A   2079               LDRB     R0,[R4, #+4]
   \   0000012C   0028               CMP      R0,#+0
   \   0000012E   08D1               BNE      ??MainSide_Event_12
   \   00000130   0099               LDR      R1,[SP, #+0]
   \   00000132   0906               LSLS     R1,R1,#+24
   \   00000134   090E               LSRS     R1,R1,#+24
   \   00000136   0829               CMP      R1,#+8
   \   00000138   03D1               BNE      ??MainSide_Event_12
   \                     ??MainSide_Event_13:
   \   0000013A   0498               LDR      R0,[SP, #+16]
   \   0000013C   ........           BL       Termostat_Event
   \   00000140   C8E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_12:
   \   00000142   0028               CMP      R0,#+0
   \   00000144   04D0               BEQ      ??MainSide_Event_14
   \   00000146   0099               LDR      R1,[SP, #+0]
   \   00000148   0906               LSLS     R1,R1,#+24
   \   0000014A   090E               LSRS     R1,R1,#+24
   \   0000014C   0529               CMP      R1,#+5
   \   0000014E   F4D0               BEQ      ??MainSide_Event_13
   \                     ??MainSide_Event_14:
   \   00000150   0028               CMP      R0,#+0
   \   00000152   07D1               BNE      ??MainSide_Event_15
   \   00000154   0099               LDR      R1,[SP, #+0]
   \   00000156   0906               LSLS     R1,R1,#+24
   \   00000158   090E               LSRS     R1,R1,#+24
   \   0000015A   0929               CMP      R1,#+9
   \   0000015C   02D1               BNE      ??MainSide_Event_15
   \   0000015E   ........           BL       Timetable_Event
   \   00000162   B7E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_15:
   \   00000164   0028               CMP      R0,#+0
   \   00000166   07D0               BEQ      ??MainSide_Event_16
   \   00000168   0099               LDR      R1,[SP, #+0]
   \   0000016A   0906               LSLS     R1,R1,#+24
   \   0000016C   090E               LSRS     R1,R1,#+24
   \   0000016E   0629               CMP      R1,#+6
   \   00000170   02D1               BNE      ??MainSide_Event_16
   \   00000172   ........           BL       Timetable_Event
   \   00000176   ADE7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_16:
   \   00000178   0028               CMP      R0,#+0
   \   0000017A   07D1               BNE      ??MainSide_Event_17
   \   0000017C   0099               LDR      R1,[SP, #+0]
   \   0000017E   0906               LSLS     R1,R1,#+24
   \   00000180   090E               LSRS     R1,R1,#+24
   \   00000182   0A29               CMP      R1,#+10
   \   00000184   02D1               BNE      ??MainSide_Event_17
   \   00000186   ........           BL       Alarm_Event
   \   0000018A   A3E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_17:
   \   0000018C   0028               CMP      R0,#+0
   \   0000018E   11D0               BEQ      ??MainSide_Event_18
   \   00000190   0099               LDR      R1,[SP, #+0]
   \   00000192   0906               LSLS     R1,R1,#+24
   \   00000194   090E               LSRS     R1,R1,#+24
   \   00000196   0729               CMP      R1,#+7
   \   00000198   0CD1               BNE      ??MainSide_Event_18
   \   0000019A   ........           BL       Alarm_Event
   \   0000019E   99E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_19:
   \   000001A0   0A21               MOVS     R1,#+10
   \   000001A2   4843               MULS     R0,R1,R0
   \   000001A4   3018               ADDS     R0,R6,R0
   \   000001A6   3649               LDR      R1,??MainSide_Event_0+0x38  ;; MainStage
   \   000001A8   0818               ADDS     R0,R1,R0
   \   000001AA   0021               MOVS     R1,#+0
   \   000001AC   4170               STRB     R1,[R0, #+1]
   \                     ??MainSide_Event_20:
   \   000001AE   6D1C               ADDS     R5,R5,#+1
   \   000001B0   2D06               LSLS     R5,R5,#+24
   \   000001B2   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Event_18:
   \   000001B4   2800               MOVS     R0,R5
   \   000001B6   0928               CMP      R0,#+9
   \   000001B8   8CD2               BCS      ??MainSide_Event_5
   \   000001BA   2E00               MOVS     R6,R5
   \   000001BC   B000               LSLS     R0,R6,#+2
   \   000001BE   0099               LDR      R1,[SP, #+0]
   \   000001C0   0906               LSLS     R1,R1,#+24
   \   000001C2   090E               LSRS     R1,R1,#+24
   \   000001C4   5822               MOVS     R2,#+88
   \   000001C6   5143               MULS     R1,R2,R1
   \   000001C8   029A               LDR      R2,[SP, #+8]
   \   000001CA   5118               ADDS     R1,R2,R1
   \   000001CC   0818               ADDS     R0,R1,R0
   \   000001CE   8178               LDRB     R1,[R0, #+2]
   \   000001D0   0029               CMP      R1,#+0
   \   000001D2   ECD0               BEQ      ??MainSide_Event_20
   \   000001D4   F100               LSLS     R1,R6,#+3
   \   000001D6   049A               LDR      R2,[SP, #+16]
   \   000001D8   5718               ADDS     R7,R2,R1
   \   000001DA   B97C               LDRB     R1,[R7, #+18]
   \   000001DC   C906               LSLS     R1,R1,#+27
   \   000001DE   E6D4               BMI      ??MainSide_Event_20
   \   000001E0   82B0               SUB      SP,SP,#+8
   \   000001E2   C178               LDRB     R1,[R0, #+3]
   \   000001E4   0091               STR      R1,[SP, #+0]
   \   000001E6   8378               LDRB     R3,[R0, #+2]
   \   000001E8   4278               LDRB     R2,[R0, #+1]
   \   000001EA   0178               LDRB     R1,[R0, #+0]
   \   000001EC   3800               MOVS     R0,R7
   \   000001EE   0B30               ADDS     R0,R0,#+11
   \   000001F0   ........           BL       Button
   \   000001F4   02B0               ADD      SP,SP,#+8
   \   000001F6   0006               LSLS     R0,R0,#+24
   \   000001F8   0016               ASRS     R0,R0,#+24
   \   000001FA   0121               MOVS     R1,#+1
   \   000001FC   6A46               MOV      R2,SP
   \   000001FE   0B00               MOVS     R3,R1
   \   00000200   1371               STRB     R3,[R2, #+4]
   \   00000202   0128               CMP      R0,#+1
   \   00000204   06D1               BNE      ??MainSide_Event_21
   \   00000206   0F22               MOVS     R2,#+15
   \   00000208   BB7C               LDRB     R3,[R7, #+18]
   \   0000020A   1342               TST      R3,R2
   \   0000020C   02D0               BEQ      ??MainSide_Event_21
   \   0000020E   1A40               ANDS     R2,R2,R3
   \   00000210   521E               SUBS     R2,R2,#+1
   \   00000212   2271               STRB     R2,[R4, #+4]
   \                     ??MainSide_Event_21:
   \   00000214   0228               CMP      R0,#+2
   \   00000216   2079               LDRB     R0,[R4, #+4]
   \   00000218   C2D1               BNE      ??MainSide_Event_19
   \   0000021A   0A22               MOVS     R2,#+10
   \   0000021C   5043               MULS     R0,R2,R0
   \   0000021E   3018               ADDS     R0,R6,R0
   \   00000220   174A               LDR      R2,??MainSide_Event_0+0x38  ;; MainStage
   \   00000222   1018               ADDS     R0,R2,R0
   \   00000224   4278               LDRB     R2,[R0, #+1]
   \   00000226   002A               CMP      R2,#+0
   \   00000228   C1D1               BNE      ??MainSide_Event_20
   \   0000022A   4170               STRB     R1,[R0, #+1]
   \   0000022C   154E               LDR      R6,??MainSide_Event_0+0x3C  ;; g_NextTimeProgram
   \   0000022E   1248               LDR      R0,??MainSide_Event_0+0x30  ;; g_counter
   \   00000230   0CC8               LDM      R0!,{R2,R3}
   \   00000232   AF20               MOVS     R0,#+175
   \   00000234   4000               LSLS     R0,R0,#+1        ;; #+350
   \   00000236   0021               MOVS     R1,#+0
   \   00000238   8018               ADDS     R0,R0,R2
   \   0000023A   5941               ADCS     R1,R1,R3
   \   0000023C   03C6               STM      R6!,{R0,R1}
   \   0000023E   1248               LDR      R0,??MainSide_Event_0+0x40  ;; gProg
   \   00000240   ........           BL       Program
   \   00000244   B3E7               B        ??MainSide_Event_20
   \   00000246   C046               Nop      
   \                     ??MainSide_Event_0:
   \   00000248   ........           DC32     g_PC_Connected
   \   0000024C   ........           DC32     TextToChangeLength
   \   00000250   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000254   ........           DC32     `?<Constant {129, 0}>` + 992
   \   00000258   ........           DC32     Y_down
   \   0000025C   ........           DC32     X_down
   \   00000260   ........           DC32     Y_up
   \   00000264   ........           DC32     X_up
   \   00000268   ........           DC32     g_level
   \   0000026C   ........           DC32     g_NeedPass
   \   00000270   E9D71300           DC32     0x13d7e9
   \   00000274   ........           DC32     ButtonBipCounter
   \   00000278   ........           DC32     g_counter
   \   0000027C   30F4FFFF           DC32     0xfffff430
   \   00000280   ........           DC32     MainStage
   \   00000284   ........           DC32     g_NextTimeProgram
   \   00000288   ........           DC32     gProg
    988          
    989          
    990          
    991          
    992          
    993          //*-----------------------------------------------------------------------------
    994          //* Nazwa funkcji :    MainSide_Refresh
    995          //* Funkcja strony g³ównej menu
    996          //*-----------------------------------------------------------------------------
    997          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    998          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    999          void MainSide_Refresh(_Screen* ScreenLokal)
   1000          {
   \                     MainSide_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   98B0               SUB      SP,SP,#+96
   1001            if (!g_PC_Connected)
   \   00000004   BD48               LDR      R0,??MainSide_Refresh_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   00D0               BEQ      .+4
   \   0000000C   9CE2               B        ??MainSide_Refresh_1
   1002            {
   1003            
   1004            char PaternDesign=(ScreenLokal->PaternDesign);
   \   0000000E   1898               LDR      R0,[SP, #+96]
   \   00000010   0478               LDRB     R4,[R0, #+0]
   \   00000012   BB48               LDR      R0,??MainSide_Refresh_0+0x4  ;; TextToChangeLength + 4
   \   00000014   0078               LDRB     R0,[R0, #+0]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   02D1               BNE      ??MainSide_Refresh_2
   1005            
   1006            
   1007            const _ScreenPaternDesign *ScreenPaternDesign;
   1008            if (CurrentSheet==0) 
   1009            {
   1010              ScreenPaternDesign=ScreenSetTab_0;
   \   0000001A   BA49               LDR      R1,??MainSide_Refresh_0+0x8  ;; `?<Constant {129, 0}>` + 24
   \   0000001C   0091               STR      R1,[SP, #+0]
   \   0000001E   01E0               B        ??MainSide_Refresh_3
   1011            }else{
   1012              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Refresh_2:
   \   00000020   B949               LDR      R1,??MainSide_Refresh_0+0xC  ;; `?<Constant {129, 0}>` + 992
   \   00000022   0091               STR      R1,[SP, #+0]
   1013            }  
   1014            
   1015          
   1016                   
   1017                
   1018            if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Refresh(ScreenLokal);}
   \                     ??MainSide_Refresh_3:
   \   00000024   06D1               BNE      ??MainSide_Refresh_4
   \   00000026   2100               MOVS     R1,R4
   \   00000028   0829               CMP      R1,#+8
   \   0000002A   03D1               BNE      ??MainSide_Refresh_4
   \                     ??MainSide_Refresh_5:
   \   0000002C   1898               LDR      R0,[SP, #+96]
   \   0000002E   ........           BL       Termostat_Refresh
   \   00000032   13E2               B        ??MainSide_Refresh_6
   1019            else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Refresh(ScreenLokal);}
   \                     ??MainSide_Refresh_4:
   \   00000034   0028               CMP      R0,#+0
   \   00000036   02D0               BEQ      ??MainSide_Refresh_7
   \   00000038   2100               MOVS     R1,R4
   \   0000003A   0529               CMP      R1,#+5
   \   0000003C   F6D0               BEQ      ??MainSide_Refresh_5
   1020                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {  }
   \                     ??MainSide_Refresh_7:
   \   0000003E   0028               CMP      R0,#+0
   \   00000040   03D1               BNE      ??MainSide_Refresh_8
   \   00000042   2100               MOVS     R1,R4
   \   00000044   0929               CMP      R1,#+9
   \   00000046   00D1               BNE      .+4
   \   00000048   08E2               B        ??MainSide_Refresh_6
   1021                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {  }    
   \                     ??MainSide_Refresh_8:
   \   0000004A   0028               CMP      R0,#+0
   \   0000004C   03D0               BEQ      ??MainSide_Refresh_9
   \   0000004E   2100               MOVS     R1,R4
   \   00000050   0629               CMP      R1,#+6
   \   00000052   00D1               BNE      .+4
   \   00000054   02E2               B        ??MainSide_Refresh_6
   1022                #ifdef __ALARM
   1023                  else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Refresh(CurrentSheet);}
   \                     ??MainSide_Refresh_9:
   \   00000056   0028               CMP      R0,#+0
   \   00000058   05D1               BNE      ??MainSide_Refresh_10
   \   0000005A   2100               MOVS     R1,R4
   \   0000005C   0A29               CMP      R1,#+10
   \   0000005E   02D1               BNE      ??MainSide_Refresh_10
   \   00000060   ........           BL       Alarm_Refresh
   \   00000064   FAE1               B        ??MainSide_Refresh_6
   1024                  else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Refresh(CurrentSheet);} 
   \                     ??MainSide_Refresh_10:
   \   00000066   0028               CMP      R0,#+0
   \   00000068   05D0               BEQ      ??MainSide_Refresh_11
   \   0000006A   2100               MOVS     R1,R4
   \   0000006C   0729               CMP      R1,#+7
   \   0000006E   02D1               BNE      ??MainSide_Refresh_11
   \   00000070   ........           BL       Alarm_Refresh
   \   00000074   F2E1               B        ??MainSide_Refresh_6
   \                     ??MainSide_Refresh_11:
   \   00000076   0025               MOVS     R5,#+0
   \   00000078   1EE0               B        ??MainSide_Refresh_12
   1025                #endif
   1026                else   
   1027                {  
   1028            
   1029            
   1030                    
   1031                    //on/off
   1032                      for (char i=0; i<ScrenGraphNr; i++)
   1033                      {
   1034                          if ((ScreenLokal->Graph[i].Type==GraphOnOff)&& (ScreenLokal->Graph[i].PlusOnOff==0))
   1035                          {
   1036                             if (PortStageRead(MainStage.StageI[ScreenLokal->Graph[i].Nr].Port, ScreenLokal->Graph[i].Port))
   1037                             {
   1038                                Label("On",2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-3,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1039                             }else{
   1040                                Label("Off",2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-3,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1041                             }
   1042                          }
   1043                          
   1044                          if (((ScreenLokal->Graph[i].Type==GraphText) || (ScreenLokal->Graph[i].Type==GraphOnOff)) && (ScreenLokal->Graph[i].PlusOnOff==1))
   1045                          {
   1046                             if (PortStageRead(MainStage.StageI[ScreenLokal->Graph[i].Nr].Port, ScreenLokal->Graph[i].Port))
   1047                             {
   1048                                Label("On",2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-7,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1049                             }else{
   1050                                Label("Off",2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-7,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Refresh_13:
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   5821               MOVS     R1,#+88
   \   0000007E   4843               MULS     R0,R1,R0
   \   00000080   0099               LDR      R1,[SP, #+0]
   \   00000082   0818               ADDS     R0,R1,R0
   \   00000084   B100               LSLS     R1,R6,#+2
   \   00000086   4218               ADDS     R2,R0,R1
   \   00000088   2432               ADDS     R2,R2,#+36
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0020               MOVS     R0,#+0
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   7F21               MOVS     R1,#+127
   \   00000092   0120               MOVS     R0,#+1
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   9178               LDRB     R1,[R2, #+2]
   \   00000098   0320               MOVS     R0,#+3
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   5078               LDRB     R0,[R2, #+1]
   \   0000009E   D178               LDRB     R1,[R2, #+3]
   \   000000A0   4908               LSRS     R1,R1,#+1
   \   000000A2   4318               ADDS     R3,R0,R1
   \   000000A4   DB1F               SUBS     R3,R3,#+7
   \   000000A6   1278               LDRB     R2,[R2, #+0]
   \   000000A8   0221               MOVS     R1,#+2
   \   000000AA   98A0               ADR      R0,??MainSide_Refresh_0+0x10  ;; "Off"
   \   000000AC   ........           BL       Label
   \   000000B0   06B0               ADD      SP,SP,#+24
   1051                             }
   \                     ??MainSide_Refresh_14:
   \   000000B2   6D1C               ADDS     R5,R5,#+1
   \   000000B4   2D06               LSLS     R5,R5,#+24
   \   000000B6   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Refresh_12:
   \   000000B8   2800               MOVS     R0,R5
   \   000000BA   0428               CMP      R0,#+4
   \   000000BC   00D3               BCC      .+4
   \   000000BE   86E0               B        ??MainSide_Refresh_15
   \   000000C0   2E00               MOVS     R6,R5
   \   000000C2   0720               MOVS     R0,#+7
   \   000000C4   7043               MULS     R0,R6,R0
   \   000000C6   1899               LDR      R1,[SP, #+96]
   \   000000C8   0F18               ADDS     R7,R1,R0
   \   000000CA   5337               ADDS     R7,R7,#+83
   \   000000CC   3878               LDRB     R0,[R7, #+0]
   \   000000CE   0B28               CMP      R0,#+11
   \   000000D0   49D1               BNE      ??MainSide_Refresh_16
   \   000000D2   B879               LDRB     R0,[R7, #+6]
   \   000000D4   C007               LSLS     R0,R0,#+31
   \   000000D6   46D4               BMI      ??MainSide_Refresh_16
   \   000000D8   7979               LDRB     R1,[R7, #+5]
   \   000000DA   3879               LDRB     R0,[R7, #+4]
   \   000000DC   1422               MOVS     R2,#+20
   \   000000DE   5043               MULS     R0,R2,R0
   \   000000E0   8B4A               LDR      R2,??MainSide_Refresh_0+0x14  ;; MainStage
   \   000000E2   1018               ADDS     R0,R2,R0
   \   000000E4   A030               ADDS     R0,R0,#+160
   \   000000E6   0088               LDRH     R0,[R0, #+0]
   \   000000E8   0004               LSLS     R0,R0,#+16
   \   000000EA   0014               ASRS     R0,R0,#+16
   \   000000EC   ........           BL       PortStageRead
   \   000000F0   0028               CMP      R0,#+0
   \   000000F2   1CD0               BEQ      ??MainSide_Refresh_17
   \   000000F4   2000               MOVS     R0,R4
   \   000000F6   5821               MOVS     R1,#+88
   \   000000F8   4843               MULS     R0,R1,R0
   \   000000FA   0099               LDR      R1,[SP, #+0]
   \   000000FC   0818               ADDS     R0,R1,R0
   \   000000FE   B100               LSLS     R1,R6,#+2
   \   00000100   4218               ADDS     R2,R0,R1
   \   00000102   2432               ADDS     R2,R2,#+36
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0020               MOVS     R0,#+0
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   7F21               MOVS     R1,#+127
   \   0000010C   0120               MOVS     R0,#+1
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   9178               LDRB     R1,[R2, #+2]
   \   00000112   0320               MOVS     R0,#+3
   \   00000114   03B4               PUSH     {R0,R1}
   \   00000116   5078               LDRB     R0,[R2, #+1]
   \   00000118   D178               LDRB     R1,[R2, #+3]
   \   0000011A   4908               LSRS     R1,R1,#+1
   \   0000011C   4318               ADDS     R3,R0,R1
   \   0000011E   DB1E               SUBS     R3,R3,#+3
   \   00000120   1278               LDRB     R2,[R2, #+0]
   \   00000122   0221               MOVS     R1,#+2
   \   00000124   7BA0               ADR      R0,??MainSide_Refresh_0+0x18  ;; 0x4F, 0x6E, 0x00, 0x00
   \   00000126   ........           BL       Label
   \   0000012A   06B0               ADD      SP,SP,#+24
   \   0000012C   1BE0               B        ??MainSide_Refresh_16
   \                     ??MainSide_Refresh_17:
   \   0000012E   2000               MOVS     R0,R4
   \   00000130   5821               MOVS     R1,#+88
   \   00000132   4843               MULS     R0,R1,R0
   \   00000134   0099               LDR      R1,[SP, #+0]
   \   00000136   0818               ADDS     R0,R1,R0
   \   00000138   B100               LSLS     R1,R6,#+2
   \   0000013A   4218               ADDS     R2,R0,R1
   \   0000013C   2432               ADDS     R2,R2,#+36
   \   0000013E   82B0               SUB      SP,SP,#+8
   \   00000140   0020               MOVS     R0,#+0
   \   00000142   0090               STR      R0,[SP, #+0]
   \   00000144   7F21               MOVS     R1,#+127
   \   00000146   0120               MOVS     R0,#+1
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   9178               LDRB     R1,[R2, #+2]
   \   0000014C   0320               MOVS     R0,#+3
   \   0000014E   03B4               PUSH     {R0,R1}
   \   00000150   5078               LDRB     R0,[R2, #+1]
   \   00000152   D178               LDRB     R1,[R2, #+3]
   \   00000154   4908               LSRS     R1,R1,#+1
   \   00000156   4318               ADDS     R3,R0,R1
   \   00000158   DB1E               SUBS     R3,R3,#+3
   \   0000015A   1278               LDRB     R2,[R2, #+0]
   \   0000015C   0221               MOVS     R1,#+2
   \   0000015E   6BA0               ADR      R0,??MainSide_Refresh_0+0x10  ;; "Off"
   \   00000160   ........           BL       Label
   \   00000164   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Refresh_16:
   \   00000166   3878               LDRB     R0,[R7, #+0]
   \   00000168   0828               CMP      R0,#+8
   \   0000016A   01D0               BEQ      ??MainSide_Refresh_18
   \   0000016C   0B28               CMP      R0,#+11
   \   0000016E   A0D1               BNE      ??MainSide_Refresh_14
   \                     ??MainSide_Refresh_18:
   \   00000170   B879               LDRB     R0,[R7, #+6]
   \   00000172   C007               LSLS     R0,R0,#+31
   \   00000174   9DD5               BPL      ??MainSide_Refresh_14
   \   00000176   7979               LDRB     R1,[R7, #+5]
   \   00000178   3879               LDRB     R0,[R7, #+4]
   \   0000017A   1422               MOVS     R2,#+20
   \   0000017C   5043               MULS     R0,R2,R0
   \   0000017E   644A               LDR      R2,??MainSide_Refresh_0+0x14  ;; MainStage
   \   00000180   1018               ADDS     R0,R2,R0
   \   00000182   A030               ADDS     R0,R0,#+160
   \   00000184   0088               LDRH     R0,[R0, #+0]
   \   00000186   0004               LSLS     R0,R0,#+16
   \   00000188   0014               ASRS     R0,R0,#+16
   \   0000018A   ........           BL       PortStageRead
   \   0000018E   0028               CMP      R0,#+0
   \   00000190   00D1               BNE      .+4
   \   00000192   72E7               B        ??MainSide_Refresh_13
   \   00000194   2000               MOVS     R0,R4
   \   00000196   5821               MOVS     R1,#+88
   \   00000198   4843               MULS     R0,R1,R0
   \   0000019A   0099               LDR      R1,[SP, #+0]
   \   0000019C   0818               ADDS     R0,R1,R0
   \   0000019E   B100               LSLS     R1,R6,#+2
   \   000001A0   4218               ADDS     R2,R0,R1
   \   000001A2   2432               ADDS     R2,R2,#+36
   \   000001A4   82B0               SUB      SP,SP,#+8
   \   000001A6   0020               MOVS     R0,#+0
   \   000001A8   0090               STR      R0,[SP, #+0]
   \   000001AA   7F21               MOVS     R1,#+127
   \   000001AC   0120               MOVS     R0,#+1
   \   000001AE   03B4               PUSH     {R0,R1}
   \   000001B0   9178               LDRB     R1,[R2, #+2]
   \   000001B2   0320               MOVS     R0,#+3
   \   000001B4   03B4               PUSH     {R0,R1}
   \   000001B6   5078               LDRB     R0,[R2, #+1]
   \   000001B8   D178               LDRB     R1,[R2, #+3]
   \   000001BA   4908               LSRS     R1,R1,#+1
   \   000001BC   4318               ADDS     R3,R0,R1
   \   000001BE   DB1F               SUBS     R3,R3,#+7
   \   000001C0   1278               LDRB     R2,[R2, #+0]
   \   000001C2   0221               MOVS     R1,#+2
   \   000001C4   53A0               ADR      R0,??MainSide_Refresh_0+0x18  ;; 0x4F, 0x6E, 0x00, 0x00
   \   000001C6   ........           BL       Label
   \   000001CA   06B0               ADD      SP,SP,#+24
   \   000001CC   71E7               B        ??MainSide_Refresh_14
   1052                          }
   1053                       }
   1054                    
   1055          
   1056           
   1057                            
   1058                  //analogi
   1059                    char IlLiter=0;
   1060                    char txt[10]={0,0,0,0,0,0,0,0,0,0};
   \                     ??MainSide_Refresh_15:
   \   000001CE   03A8               ADD      R0,SP,#+12
   \   000001D0   0C21               MOVS     R1,#+12
   \   000001D2   ........           BL       __aeabi_memclr4
   1061                    signed short Value;
   1062                    for (char i=0; i<ScrenAnalogNr; i++)
   \   000001D6   0025               MOVS     R5,#+0
   \   000001D8   2FE0               B        ??MainSide_Refresh_19
   1063                    {
   1064                      if ((ScreenPaternDesign[PaternDesign].Value[i].Width>0)  & ((ScreenLokal->Analog[i].Nr>0) || ((ScreenLokal->Analog[i].Nr==0)&&(ScreenLokal->Analog[i].Reg>0))))
   1065                               {
   1066                               IlLiter=0;
   1067                               Value=MainStage.StageI[ScreenLokal->Analog[i].Nr].Value[ScreenLokal->Analog[i].Reg];
   1068          
   1069                               if (Value==(signed short)0x8AAA)  //je¿eli sygna³ niewiarygodny
   1070                               {
   1071                                 txt[0]='-'; txt[1]='?';txt[2]='?';txt[3]='?'; txt[4]='-'; IlLiter+=5;
   1072                               }else{ //je¿eli sygna³ wiarygodny
   1073                                   if (ScreenLokal->Analog[i].Flip)
   1074                                   {
   1075                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   1076                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {txt[IlLiter++]=ScreenLokal->Analog[i].Text[k];}  
   1077                                   }else{
   1078                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {IlLiter++; txt[k]=ScreenLokal->Analog[i].Text[k];}  
   \                     ??MainSide_Refresh_20:
   \   000001DA   1700               MOVS     R7,R2
   \   000001DC   029B               LDR      R3,[SP, #+8]
   \   000001DE   DB19               ADDS     R3,R3,R7
   \   000001E0   7026               MOVS     R6,#+112
   \   000001E2   9E5D               LDRB     R6,[R3, R6]
   \   000001E4   002E               CMP      R6,#+0
   \   000001E6   06D0               BEQ      ??MainSide_Refresh_21
   \   000001E8   491C               ADDS     R1,R1,#+1
   \   000001EA   0906               LSLS     R1,R1,#+24
   \   000001EC   090E               LSRS     R1,R1,#+24
   \   000001EE   03AE               ADD      R6,SP,#+12
   \   000001F0   7033               ADDS     R3,R3,#+112
   \   000001F2   1B78               LDRB     R3,[R3, #+0]
   \   000001F4   F355               STRB     R3,[R6, R7]
   \                     ??MainSide_Refresh_21:
   \   000001F6   521C               ADDS     R2,R2,#+1
   \   000001F8   1206               LSLS     R2,R2,#+24
   \   000001FA   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Refresh_22:
   \   000001FC   1300               MOVS     R3,R2
   \   000001FE   032B               CMP      R3,#+3
   \   00000200   EBD3               BCC      ??MainSide_Refresh_20
   1079                                       IlLiter+=sIntToStr(Value, &(txt[IlLiter])); //(char Value, char *Vstring, char ill);
   \   00000202   0E00               MOVS     R6,R1
   \   00000204   03AA               ADD      R2,SP,#+12
   \   00000206   5118               ADDS     R1,R2,R1
   \   00000208   ........           BL       sIntToStr
   \   0000020C   3218               ADDS     R2,R6,R0
   \   0000020E   1206               LSLS     R2,R2,#+24
   \   00000210   120E               LSRS     R2,R2,#+24
   1080                                   }
   1081                               }   
   1082                                   Label(txt,0,
   1083                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.x, 
   1084                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.y,IlLiter,
   1085                                         ScreenPaternDesign[PaternDesign].Value[i].Width,
   1086                                         0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Refresh_23:
   \   00000212   82B0               SUB      SP,SP,#+8
   \   00000214   0020               MOVS     R0,#+0
   \   00000216   0090               STR      R0,[SP, #+0]
   \   00000218   7821               MOVS     R1,#+120
   \   0000021A   03B4               PUSH     {R0,R1}
   \   0000021C   0598               LDR      R0,[SP, #+20]
   \   0000021E   8178               LDRB     R1,[R0, #+2]
   \   00000220   1000               MOVS     R0,R2
   \   00000222   03B4               PUSH     {R0,R1}
   \   00000224   0798               LDR      R0,[SP, #+28]
   \   00000226   4378               LDRB     R3,[R0, #+1]
   \   00000228   0278               LDRB     R2,[R0, #+0]
   \   0000022A   0021               MOVS     R1,#+0
   \   0000022C   09A8               ADD      R0,SP,#+36
   \   0000022E   ........           BL       Label
   \   00000232   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Refresh_24:
   \   00000234   6D1C               ADDS     R5,R5,#+1
   \   00000236   2D06               LSLS     R5,R5,#+24
   \   00000238   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Refresh_19:
   \   0000023A   2800               MOVS     R0,R5
   \   0000023C   0428               CMP      R0,#+4
   \   0000023E   5BD2               BCS      ??MainSide_Refresh_25
   \   00000240   2000               MOVS     R0,R4
   \   00000242   5821               MOVS     R1,#+88
   \   00000244   4843               MULS     R0,R1,R0
   \   00000246   0099               LDR      R1,[SP, #+0]
   \   00000248   0818               ADDS     R0,R1,R0
   \   0000024A   2900               MOVS     R1,R5
   \   0000024C   8A00               LSLS     R2,R1,#+2
   \   0000024E   8018               ADDS     R0,R0,R2
   \   00000250   3430               ADDS     R0,R0,#+52
   \   00000252   0190               STR      R0,[SP, #+4]
   \   00000254   8278               LDRB     R2,[R0, #+2]
   \   00000256   501E               SUBS     R0,R2,#+1
   \   00000258   8041               SBCS     R0,R0,R0
   \   0000025A   C043               MVNS     R0,R0
   \   0000025C   C00F               LSRS     R0,R0,#+31
   \   0000025E   0722               MOVS     R2,#+7
   \   00000260   5143               MULS     R1,R2,R1
   \   00000262   189A               LDR      R2,[SP, #+96]
   \   00000264   5118               ADDS     R1,R2,R1
   \   00000266   0291               STR      R1,[SP, #+8]
   \   00000268   0A00               MOVS     R2,R1
   \   0000026A   7332               ADDS     R2,R2,#+115
   \   0000026C   1178               LDRB     R1,[R2, #+0]
   \   0000026E   0029               CMP      R1,#+0
   \   00000270   06D1               BNE      ??MainSide_Refresh_26
   \   00000272   07D1               BNE      ??MainSide_Refresh_27
   \   00000274   5378               LDRB     R3,[R2, #+1]
   \   00000276   591E               SUBS     R1,R3,#+1
   \   00000278   8941               SBCS     R1,R1,R1
   \   0000027A   C943               MVNS     R1,R1
   \   0000027C   C90F               LSRS     R1,R1,#+31
   \   0000027E   04E0               B        ??MainSide_Refresh_28
   \                     ??MainSide_Refresh_26:
   \   00000280   0121               MOVS     R1,#+1
   \   00000282   02E0               B        ??MainSide_Refresh_28
   \                     ??MainSide_Refresh_27:
   \   00000284   0023               MOVS     R3,#+0
   \   00000286   0121               MOVS     R1,#+1
   \   00000288   1940               ANDS     R1,R1,R3
   \                     ??MainSide_Refresh_28:
   \   0000028A   0842               TST      R0,R1
   \   0000028C   D2D0               BEQ      ??MainSide_Refresh_24
   \   0000028E   0021               MOVS     R1,#+0
   \   00000290   A020               MOVS     R0,#+160
   \   00000292   5378               LDRB     R3,[R2, #+1]
   \   00000294   5B00               LSLS     R3,R3,#+1
   \   00000296   1678               LDRB     R6,[R2, #+0]
   \   00000298   1427               MOVS     R7,#+20
   \   0000029A   7E43               MULS     R6,R7,R6
   \   0000029C   1C4F               LDR      R7,??MainSide_Refresh_0+0x14  ;; MainStage
   \   0000029E   BE19               ADDS     R6,R7,R6
   \   000002A0   F318               ADDS     R3,R6,R3
   \   000002A2   185E               LDRSH    R0,[R3, R0]
   \   000002A4   AA4B               LDR      R3,??MainSide_Refresh_29  ;; 0xffff8aaa
   \   000002A6   9842               CMP      R0,R3
   \   000002A8   09D1               BNE      ??MainSide_Refresh_30
   \   000002AA   2D21               MOVS     R1,#+45
   \   000002AC   03A8               ADD      R0,SP,#+12
   \   000002AE   0170               STRB     R1,[R0, #+0]
   \   000002B0   3F22               MOVS     R2,#+63
   \   000002B2   4270               STRB     R2,[R0, #+1]
   \   000002B4   8270               STRB     R2,[R0, #+2]
   \   000002B6   C270               STRB     R2,[R0, #+3]
   \   000002B8   0171               STRB     R1,[R0, #+4]
   \   000002BA   0522               MOVS     R2,#+5
   \   000002BC   A9E7               B        ??MainSide_Refresh_23
   \                     ??MainSide_Refresh_30:
   \   000002BE   9278               LDRB     R2,[R2, #+2]
   \   000002C0   002A               CMP      R2,#+0
   \   000002C2   9BD0               BEQ      ??MainSide_Refresh_22
   \   000002C4   03A9               ADD      R1,SP,#+12
   \   000002C6   ........           BL       sIntToStr
   \   000002CA   0200               MOVS     R2,R0
   \   000002CC   0020               MOVS     R0,#+0
   \                     ??MainSide_Refresh_31:
   \   000002CE   0100               MOVS     R1,R0
   \   000002D0   0329               CMP      R1,#+3
   \   000002D2   9ED2               BCS      ??MainSide_Refresh_23
   \   000002D4   029B               LDR      R3,[SP, #+8]
   \   000002D6   5918               ADDS     R1,R3,R1
   \   000002D8   7023               MOVS     R3,#+112
   \   000002DA   CB5C               LDRB     R3,[R1, R3]
   \   000002DC   002B               CMP      R3,#+0
   \   000002DE   07D0               BEQ      ??MainSide_Refresh_32
   \   000002E0   1300               MOVS     R3,R2
   \   000002E2   03AE               ADD      R6,SP,#+12
   \   000002E4   7031               ADDS     R1,R1,#+112
   \   000002E6   0978               LDRB     R1,[R1, #+0]
   \   000002E8   F154               STRB     R1,[R6, R3]
   \   000002EA   521C               ADDS     R2,R2,#+1
   \   000002EC   1206               LSLS     R2,R2,#+24
   \   000002EE   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Refresh_32:
   \   000002F0   401C               ADDS     R0,R0,#+1
   \   000002F2   0006               LSLS     R0,R0,#+24
   \   000002F4   000E               LSRS     R0,R0,#+24
   \   000002F6   EAE7               B        ??MainSide_Refresh_31
   1087                                   
   1088                               }
   1089                    }
   1090                    
   1091                    
   1092                    
   1093                    //grafika
   1094                      for (char i=0; i<ScrenGraphNr; i++)
   \                     ??MainSide_Refresh_25:
   \   000002F8   0025               MOVS     R5,#+0
   \   000002FA   2EE0               B        ??MainSide_Refresh_33
   \                     ??MainSide_Refresh_0:
   \   000002FC   ........           DC32     g_PC_Connected
   \   00000300   ........           DC32     TextToChangeLength + 4
   \   00000304   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000308   ........           DC32     `?<Constant {129, 0}>` + 992
   \   0000030C   4F666600           DC8      "Off"
   \   00000310   ........           DC32     MainStage
   \   00000314   4F6E0000           DC8      0x4F, 0x6E, 0x00, 0x00
   1095                      {
   1096                        if (ScreenLokal->Graph[i].Type==GraphWartosc)
   \                     ??MainSide_Refresh_34:
   \   00000318   2900               MOVS     R1,R5
   \   0000031A   0720               MOVS     R0,#+7
   \   0000031C   4843               MULS     R0,R1,R0
   \   0000031E   189A               LDR      R2,[SP, #+96]
   \   00000320   1218               ADDS     R2,R2,R0
   \   00000322   5320               MOVS     R0,#+83
   \   00000324   105C               LDRB     R0,[R2, R0]
   \   00000326   0A28               CMP      R0,#+10
   \   00000328   14D1               BNE      ??MainSide_Refresh_35
   1097                        if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \   0000032A   2000               MOVS     R0,R4
   \   0000032C   5823               MOVS     R3,#+88
   \   0000032E   5843               MULS     R0,R3,R0
   \   00000330   009B               LDR      R3,[SP, #+0]
   \   00000332   1818               ADDS     R0,R3,R0
   \   00000334   8900               LSLS     R1,R1,#+2
   \   00000336   4018               ADDS     R0,R0,R1
   \   00000338   2430               ADDS     R0,R0,#+36
   \   0000033A   8178               LDRB     R1,[R0, #+2]
   \   0000033C   0029               CMP      R1,#+0
   \   0000033E   09D0               BEQ      ??MainSide_Refresh_35
   1098                        {
   1099                                ScreenGraph(//(char poz_X , char poz_Y ,char width, char height,_Graph *Graph)
   1100                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   1101                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   1102                                ScreenPaternDesign[PaternDesign].Graph[i].Width,
   1103                                ScreenPaternDesign[PaternDesign].Graph[i].Height,
   1104                                &(ScreenLokal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000340   82B0               SUB      SP,SP,#+8
   \   00000342   5332               ADDS     R2,R2,#+83
   \   00000344   0092               STR      R2,[SP, #+0]
   \   00000346   C378               LDRB     R3,[R0, #+3]
   \   00000348   8278               LDRB     R2,[R0, #+2]
   \   0000034A   4178               LDRB     R1,[R0, #+1]
   \   0000034C   0078               LDRB     R0,[R0, #+0]
   \   0000034E   ........           BL       ScreenGraph
   \   00000352   02B0               ADD      SP,SP,#+8
   1105                        
   1106                        }
   1107                       }
   \                     ??MainSide_Refresh_35:
   \   00000354   6D1C               ADDS     R5,R5,#+1
   \   00000356   2D06               LSLS     R5,R5,#+24
   \   00000358   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Refresh_33:
   \   0000035A   2800               MOVS     R0,R5
   \   0000035C   0428               CMP      R0,#+4
   \   0000035E   DBD3               BCC      ??MainSide_Refresh_34
   1108                    
   1109                    
   1110                    
   1111                    
   1112                      //Du¿a temperatura
   1113                      if ((ScreenPaternDesign[PaternDesign].Temperature.Width>0))
   \   00000360   5820               MOVS     R0,#+88
   \   00000362   4443               MULS     R4,R0,R4
   \   00000364   0098               LDR      R0,[SP, #+0]
   \   00000366   0019               ADDS     R0,R0,R4
   \   00000368   4D30               ADDS     R0,R0,#+77
   \   0000036A   0400               MOVS     R4,R0
   \   0000036C   6078               LDRB     R0,[R4, #+1]
   \   0000036E   0028               CMP      R0,#+0
   \   00000370   3AD0               BEQ      ??MainSide_Refresh_36
   1114                        {
   1115                            char dl=0;
   1116                            signed short Value=MainStage.StageI[ScreenLokal->Analog[0].Nr].Value[ScreenLokal->Analog[0].Reg];
   1117                            
   1118                            //je¿eli sygna³ nie wiarygodny
   1119                            if  ((Value)!=(signed short)0x8AAA)          
   \   00000372   1899               LDR      R1,[SP, #+96]
   \   00000374   7331               ADDS     R1,R1,#+115
   \   00000376   A020               MOVS     R0,#+160
   \   00000378   4A78               LDRB     R2,[R1, #+1]
   \   0000037A   5200               LSLS     R2,R2,#+1
   \   0000037C   0978               LDRB     R1,[R1, #+0]
   \   0000037E   1423               MOVS     R3,#+20
   \   00000380   5943               MULS     R1,R3,R1
   \   00000382   744B               LDR      R3,??MainSide_Refresh_29+0x4  ;; MainStage
   \   00000384   5918               ADDS     R1,R3,R1
   \   00000386   8918               ADDS     R1,R1,R2
   \   00000388   085E               LDRSH    R0,[R1, R0]
   \   0000038A   7149               LDR      R1,??MainSide_Refresh_29  ;; 0xffff8aaa
   \   0000038C   8842               CMP      R0,R1
   \   0000038E   0CD0               BEQ      ??MainSide_Refresh_37
   1120                            { 
   1121                              txt[0]='-';txt[1]=' ';txt[2]='?'; txt[3]=' ';txt[4]='-'; txt[5]=0;
   \   00000390   2D21               MOVS     R1,#+45
   \   00000392   03A8               ADD      R0,SP,#+12
   \   00000394   0170               STRB     R1,[R0, #+0]
   \   00000396   2022               MOVS     R2,#+32
   \   00000398   4270               STRB     R2,[R0, #+1]
   \   0000039A   3F23               MOVS     R3,#+63
   \   0000039C   8370               STRB     R3,[R0, #+2]
   \   0000039E   C270               STRB     R2,[R0, #+3]
   \   000003A0   0171               STRB     R1,[R0, #+4]
   \   000003A2   0021               MOVS     R1,#+0
   \   000003A4   4171               STRB     R1,[R0, #+5]
   1122                              dl=5;                    
   \   000003A6   0522               MOVS     R2,#+5
   \   000003A8   0FE0               B        ??MainSide_Refresh_38
   1123                            }//je¿eli s³aba bateria
   1124                            else if  ((Value)&(signed short)0x8000)          
   1125                            { 
   1126                              txt[0]='B';txt[1]='A';txt[2]='T'; txt[3]='E';txt[4]='R'; txt[5]='Y'; txt[5]=0;
   \                     ??MainSide_Refresh_37:
   \   000003AA   03A8               ADD      R0,SP,#+12
   \   000003AC   4221               MOVS     R1,#+66
   \   000003AE   0170               STRB     R1,[R0, #+0]
   \   000003B0   4121               MOVS     R1,#+65
   \   000003B2   4170               STRB     R1,[R0, #+1]
   \   000003B4   5421               MOVS     R1,#+84
   \   000003B6   8170               STRB     R1,[R0, #+2]
   \   000003B8   4521               MOVS     R1,#+69
   \   000003BA   C170               STRB     R1,[R0, #+3]
   \   000003BC   5221               MOVS     R1,#+82
   \   000003BE   0171               STRB     R1,[R0, #+4]
   \   000003C0   5921               MOVS     R1,#+89
   \   000003C2   4171               STRB     R1,[R0, #+5]
   \   000003C4   0021               MOVS     R1,#+0
   \   000003C6   4171               STRB     R1,[R0, #+5]
   1127                              dl=6;    
   \   000003C8   0622               MOVS     R2,#+6
   1128                            }else{
   1129                              
   1130                              dl=sIntToStr(Value,txt);
   1131                              txt[dl++]=127;
   1132                            }
   1133                            Label20(txt,2,0,ScreenPaternDesign[PaternDesign].Temperature.Poz.y,dl,64,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                                   ^
Warning[Pe223]: function "Label20" declared implicitly
   \                     ??MainSide_Refresh_38:
   \   000003CA   82B0               SUB      SP,SP,#+8
   \   000003CC   0800               MOVS     R0,R1
   \   000003CE   0090               STR      R0,[SP, #+0]
   \   000003D0   6921               MOVS     R1,#+105
   \   000003D2   03B4               PUSH     {R0,R1}
   \   000003D4   4021               MOVS     R1,#+64
   \   000003D6   1000               MOVS     R0,R2
   \   000003D8   03B4               PUSH     {R0,R1}
   \   000003DA   2378               LDRB     R3,[R4, #+0]
   \   000003DC   0022               MOVS     R2,#+0
   \   000003DE   0221               MOVS     R1,#+2
   \   000003E0   09A8               ADD      R0,SP,#+36
   \   000003E2   ........           BL       Label20
   \   000003E6   06B0               ADD      SP,SP,#+24
   1134          
   1135                        }
   1136                    
   1137                     char time_char[9];
   1138                      //Czas
   1139                      if ((ScreenPaternDesign[PaternDesign].Time.Width>0))
   \                     ??MainSide_Refresh_36:
   \   000003E8   6079               LDRB     R0,[R4, #+5]
   \   000003EA   0028               CMP      R0,#+0
   \   000003EC   19D0               BEQ      ??MainSide_Refresh_39
   1140                        {                  
   1141                            
   1142                            TimeToStr(DateTime.Hour,DateTime.Minute,DateTime.Second,time_char);
   \   000003EE   5A48               LDR      R0,??MainSide_Refresh_29+0x8  ;; DateTime
   \   000003F0   06AB               ADD      R3,SP,#+24
   \   000003F2   4279               LDRB     R2,[R0, #+5]
   \   000003F4   0179               LDRB     R1,[R0, #+4]
   \   000003F6   C078               LDRB     R0,[R0, #+3]
   \   000003F8   ........           BL       TimeToStr
   1143                            time_char[8]=0;
   \   000003FC   06A8               ADD      R0,SP,#+24
   \   000003FE   0021               MOVS     R1,#+0
   \   00000400   0172               STRB     R1,[R0, #+8]
   1144                            Label(time_char,0,
   1145                                  ScreenPaternDesign[PaternDesign].Time.Poz.x,
   1146                                  ScreenPaternDesign[PaternDesign].Time.Poz.y,8,43,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000402   82B0               SUB      SP,SP,#+8
   \   00000404   0800               MOVS     R0,R1
   \   00000406   0090               STR      R0,[SP, #+0]
   \   00000408   7F21               MOVS     R1,#+127
   \   0000040A   0120               MOVS     R0,#+1
   \   0000040C   03B4               PUSH     {R0,R1}
   \   0000040E   2B21               MOVS     R1,#+43
   \   00000410   0820               MOVS     R0,#+8
   \   00000412   03B4               PUSH     {R0,R1}
   \   00000414   2379               LDRB     R3,[R4, #+4]
   \   00000416   E278               LDRB     R2,[R4, #+3]
   \   00000418   0021               MOVS     R1,#+0
   \   0000041A   0CA8               ADD      R0,SP,#+48
   \   0000041C   ........           BL       Label
   \   00000420   06B0               ADD      SP,SP,#+24
   1147                        }
   1148                    
   1149                      //Date
   1150                      if ((ScreenPaternDesign[PaternDesign].Date.Width>0))
   \                     ??MainSide_Refresh_39:
   \   00000422   607A               LDRB     R0,[R4, #+9]
   \   00000424   0028               CMP      R0,#+0
   \   00000426   19D0               BEQ      ??MainSide_Refresh_6
   1151                        {                  
   1152                            DateToStr(DateTime.Day,DateTime.Mounth,DateTime.Year,time_char);//(char dzin, char mies, char rok, char Vstring[8])
   \   00000428   4B48               LDR      R0,??MainSide_Refresh_29+0x8  ;; DateTime
   \   0000042A   06AB               ADD      R3,SP,#+24
   \   0000042C   0278               LDRB     R2,[R0, #+0]
   \   0000042E   4178               LDRB     R1,[R0, #+1]
   \   00000430   8078               LDRB     R0,[R0, #+2]
   \   00000432   ........           BL       DateToStr
   1153                            time_char[8]=0;
   \   00000436   06A8               ADD      R0,SP,#+24
   \   00000438   0021               MOVS     R1,#+0
   \   0000043A   0172               STRB     R1,[R0, #+8]
   1154                            Label(time_char,0,
   1155                                  ScreenPaternDesign[PaternDesign].Date.Poz.x,
   1156                                  ScreenPaternDesign[PaternDesign].Date.Poz.y,
   1157                                  8,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000043C   82B0               SUB      SP,SP,#+8
   \   0000043E   0800               MOVS     R0,R1
   \   00000440   0090               STR      R0,[SP, #+0]
   \   00000442   7F21               MOVS     R1,#+127
   \   00000444   0120               MOVS     R0,#+1
   \   00000446   03B4               PUSH     {R0,R1}
   \   00000448   2121               MOVS     R1,#+33
   \   0000044A   0820               MOVS     R0,#+8
   \   0000044C   03B4               PUSH     {R0,R1}
   \   0000044E   237A               LDRB     R3,[R4, #+8]
   \   00000450   E279               LDRB     R2,[R4, #+7]
   \   00000452   0021               MOVS     R1,#+0
   \   00000454   0CA8               ADD      R0,SP,#+48
   \   00000456   ........           BL       Label
   \   0000045A   06B0               ADD      SP,SP,#+24
   1158                        }          
   1159              
   1160                } 
   1161                      //wskanik ¿ycia
   1162                    if (CurrentSheet==0) 
   \                     ??MainSide_Refresh_6:
   \   0000045C   3F48               LDR      R0,??MainSide_Refresh_29+0xC  ;; TextToChangeLength + 4
   \   0000045E   0078               LDRB     R0,[R0, #+0]
   \   00000460   0028               CMP      R0,#+0
   \   00000462   71D1               BNE      ??MainSide_Refresh_1
   1163                    {
   1164                    
   1165                      if ((MainSide_puls==0) || (MainSide_puls>3))
   \   00000464   3E4C               LDR      R4,??MainSide_Refresh_29+0x10  ;; MainSide_puls
   \   00000466   2578               LDRB     R5,[R4, #+0]
   \   00000468   002D               CMP      R5,#+0
   \   0000046A   01D0               BEQ      ??MainSide_Refresh_40
   \   0000046C   042D               CMP      R5,#+4
   \   0000046E   3AD3               BCC      ??MainSide_Refresh_41
   1166                      { 
   1167                        
   1168                        char ekran1[2][13] = {
   1169                                   {0,0,224,24,232,244,244,244,232,24,224,0,0},
   1170                                    {0,0,0,3,2,5,5,5,2,3,0,0,0}
   1171                                    };
   \                     ??MainSide_Refresh_40:
   \   00000470   3C4E               LDR      R6,??MainSide_Refresh_29+0x14  ;; `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>`
   \   00000472   09A8               ADD      R0,SP,#+36
   \   00000474   3100               MOVS     R1,R6
   \   00000476   0C31               ADDS     R1,R1,#+12
   \   00000478   1C22               MOVS     R2,#+28
   \   0000047A   ........           BL       __aeabi_memcpy4
   1172                  
   1173                        char ekranSlave[2][13] = {
   1174                                    {0,0,224,248,152,124,180,220,56,248,224,0,0},
   1175                                    {0,0,0,3,3,7,5,7,3,3,0,0,0},
   1176                                    };
   \   0000047E   10A8               ADD      R0,SP,#+64
   \   00000480   2836               ADDS     R6,R6,#+40
   \   00000482   3100               MOVS     R1,R6
   \   00000484   1C22               MOVS     R2,#+28
   \   00000486   ........           BL       __aeabi_memcpy4
   1177                        
   1178                        if ((SlaveMode) )//je¿eli tryb slave
   \   0000048A   3748               LDR      R0,??MainSide_Refresh_29+0x18  ;; SlaveMode
   \   0000048C   0078               LDRB     R0,[R0, #+0]
   \   0000048E   0028               CMP      R0,#+0
   \   00000490   14D0               BEQ      ??MainSide_Refresh_42
   1179                        {
   1180                              for (char i=0; i<=12; i++)
   \   00000492   0021               MOVS     R1,#+0
   \                     ??MainSide_Refresh_43:
   \   00000494   0800               MOVS     R0,R1
   \   00000496   0D28               CMP      R0,#+13
   \   00000498   25D2               BCS      ??MainSide_Refresh_41
   1181                              {
   1182                           
   1183                              LCD_Canvas[0][i+115]=ekranSlave[0][i];
   \   0000049A   0A00               MOVS     R2,R1
   \   0000049C   3348               LDR      R0,??MainSide_Refresh_29+0x1C  ;; LCD_Canvas
   \   0000049E   8318               ADDS     R3,R0,R2
   \   000004A0   7333               ADDS     R3,R3,#+115
   \   000004A2   10AE               ADD      R6,SP,#+64
   \   000004A4   B65C               LDRB     R6,[R6, R2]
   \   000004A6   1E70               STRB     R6,[R3, #+0]
   1184                              LCD_Canvas[1][i+115]=ekranSlave[1][i];
   \   000004A8   8018               ADDS     R0,R0,R2
   \   000004AA   F330               ADDS     R0,R0,#+243
   \   000004AC   10AB               ADD      R3,SP,#+64
   \   000004AE   9A18               ADDS     R2,R3,R2
   \   000004B0   527B               LDRB     R2,[R2, #+13]
   \   000004B2   0270               STRB     R2,[R0, #+0]
   1185                              }
   \   000004B4   491C               ADDS     R1,R1,#+1
   \   000004B6   0906               LSLS     R1,R1,#+24
   \   000004B8   090E               LSRS     R1,R1,#+24
   \   000004BA   EBE7               B        ??MainSide_Refresh_43
   1186                        }else{
   1187                          
   1188                            for (char i=0; i<=12; i++)
   \                     ??MainSide_Refresh_42:
   \   000004BC   0021               MOVS     R1,#+0
   \   000004BE   0FE0               B        ??MainSide_Refresh_44
   1189                            {
   1190                           
   1191                              LCD_Canvas[0][i+115]=ekran1[0][i];
   \                     ??MainSide_Refresh_45:
   \   000004C0   0A00               MOVS     R2,R1
   \   000004C2   2A48               LDR      R0,??MainSide_Refresh_29+0x1C  ;; LCD_Canvas
   \   000004C4   8318               ADDS     R3,R0,R2
   \   000004C6   7333               ADDS     R3,R3,#+115
   \   000004C8   09AE               ADD      R6,SP,#+36
   \   000004CA   B65C               LDRB     R6,[R6, R2]
   \   000004CC   1E70               STRB     R6,[R3, #+0]
   1192                              LCD_Canvas[1][i+115]=ekran1[1][i];
   \   000004CE   8018               ADDS     R0,R0,R2
   \   000004D0   F330               ADDS     R0,R0,#+243
   \   000004D2   09AB               ADD      R3,SP,#+36
   \   000004D4   9A18               ADDS     R2,R3,R2
   \   000004D6   527B               LDRB     R2,[R2, #+13]
   \   000004D8   0270               STRB     R2,[R0, #+0]
   1193                            }
   \   000004DA   491C               ADDS     R1,R1,#+1
   \   000004DC   0906               LSLS     R1,R1,#+24
   \   000004DE   090E               LSRS     R1,R1,#+24
   \                     ??MainSide_Refresh_44:
   \   000004E0   0800               MOVS     R0,R1
   \   000004E2   0D28               CMP      R0,#+13
   \   000004E4   ECD3               BCC      ??MainSide_Refresh_45
   1194                          }
   1195                       //if ((!g_SlaveConnect) && (SlaveMode)) H_line(2,121,7,0);
   1196                      }
   1197                      if ((MainSide_puls==1) )
   \                     ??MainSide_Refresh_41:
   \   000004E6   012D               CMP      R5,#+1
   \   000004E8   21D1               BNE      ??MainSide_Refresh_46
   1198                      {
   1199                        
   1200                        if ((g_SlaveConnect) || (!SlaveMode))
   \   000004EA   2148               LDR      R0,??MainSide_Refresh_29+0x20  ;; g_SlaveConnect
   \   000004EC   0078               LDRB     R0,[R0, #+0]
   \   000004EE   0028               CMP      R0,#+0
   \   000004F0   03D1               BNE      ??MainSide_Refresh_47
   \   000004F2   1D48               LDR      R0,??MainSide_Refresh_29+0x18  ;; SlaveMode
   \   000004F4   0078               LDRB     R0,[R0, #+0]
   \   000004F6   0028               CMP      R0,#+0
   \   000004F8   19D1               BNE      ??MainSide_Refresh_46
   1201                        {
   1202                          char ekran2[2][13] = {
   1203                                    {240,28,230,250,251,253,253,253,251,250,230,28,240},
   1204                                    {1,7,12,11,27,23,23,23,27,11,12,7,1},
   1205                                    };
   \                     ??MainSide_Refresh_47:
   \   000004FA   09A8               ADD      R0,SP,#+36
   \   000004FC   1D49               LDR      R1,??MainSide_Refresh_29+0x24  ;; `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>` + 68
   \   000004FE   1C22               MOVS     R2,#+28
   \   00000500   ........           BL       __aeabi_memcpy4
   1206                        
   1207                          for (char i=0; i<=12; i++)
   \   00000504   0021               MOVS     R1,#+0
   \   00000506   0FE0               B        ??MainSide_Refresh_48
   1208                          {
   1209                           
   1210                            LCD_Canvas[0][i+115]=ekran2[0][i];
   \                     ??MainSide_Refresh_49:
   \   00000508   0A00               MOVS     R2,R1
   \   0000050A   1848               LDR      R0,??MainSide_Refresh_29+0x1C  ;; LCD_Canvas
   \   0000050C   8318               ADDS     R3,R0,R2
   \   0000050E   7333               ADDS     R3,R3,#+115
   \   00000510   09AE               ADD      R6,SP,#+36
   \   00000512   B65C               LDRB     R6,[R6, R2]
   \   00000514   1E70               STRB     R6,[R3, #+0]
   1211                            LCD_Canvas[1][i+115]=ekran2[1][i];
   \   00000516   8018               ADDS     R0,R0,R2
   \   00000518   F330               ADDS     R0,R0,#+243
   \   0000051A   09AB               ADD      R3,SP,#+36
   \   0000051C   9A18               ADDS     R2,R3,R2
   \   0000051E   527B               LDRB     R2,[R2, #+13]
   \   00000520   0270               STRB     R2,[R0, #+0]
   1212                          }
   \   00000522   491C               ADDS     R1,R1,#+1
   \   00000524   0906               LSLS     R1,R1,#+24
   \   00000526   090E               LSRS     R1,R1,#+24
   \                     ??MainSide_Refresh_48:
   \   00000528   0800               MOVS     R0,R1
   \   0000052A   0D28               CMP      R0,#+13
   \   0000052C   ECD3               BCC      ??MainSide_Refresh_49
   1213                        }
   1214                  
   1215                      }
   1216                       
   1217                  
   1218                    if (g_Stop_Program==0)
   \                     ??MainSide_Refresh_46:
   \   0000052E   1248               LDR      R0,??MainSide_Refresh_29+0x28  ;; g_Stop_Program
   \   00000530   0078               LDRB     R0,[R0, #+0]
   \   00000532   0028               CMP      R0,#+0
   \   00000534   06D1               BNE      ??MainSide_Refresh_50
   1219                    {  
   1220                     if (MainSide_puls>7) {MainSide_puls=0;} else {MainSide_puls++;}    
   \   00000536   082D               CMP      R5,#+8
   \   00000538   01D3               BCC      ??MainSide_Refresh_51
   \   0000053A   2070               STRB     R0,[R4, #+0]
   \   0000053C   04E0               B        ??MainSide_Refresh_1
   \                     ??MainSide_Refresh_51:
   \   0000053E   6D1C               ADDS     R5,R5,#+1
   \   00000540   2570               STRB     R5,[R4, #+0]
   \   00000542   01E0               B        ??MainSide_Refresh_1
   1221                    }else{
   1222                      MainSide_puls=7; 
   \                     ??MainSide_Refresh_50:
   \   00000544   0720               MOVS     R0,#+7
   \   00000546   2070               STRB     R0,[R4, #+0]
   1223                    }
   1224                     
   1225                    }
   1226                    
   1227                  
   1228                    
   1229          
   1230                
   1231            
   1232            }  
   1233          }//_______________________ Koniec funkcji MainSide_Refresh __________________________
   \                     ??MainSide_Refresh_1:
   \   00000548   19B0               ADD      SP,SP,#+100
   \   0000054A   F0BC               POP      {R4-R7}
   \   0000054C   01BC               POP      {R0}
   \   0000054E   0047               BX       R0               ;; return
   \                     ??MainSide_Refresh_29:
   \   00000550   AA8AFFFF           DC32     0xffff8aaa
   \   00000554   ........           DC32     MainStage
   \   00000558   ........           DC32     DateTime
   \   0000055C   ........           DC32     TextToChangeLength + 4
   \   00000560   ........           DC32     MainSide_puls
   \   00000564   ........           DC32     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>`
   \   00000568   ........           DC32     SlaveMode
   \   0000056C   ........           DC32     LCD_Canvas
   \   00000570   ........           DC32     g_SlaveConnect
   \   00000574   ........           DC32     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>` + 68
   \   00000578   ........           DC32     g_Stop_Program
   1234          
   1235          
   1236          
   1237          
   1238          
   1239          
   1240          
   1241          
   1242          //*-----------------------------------------------------------------------------
   1243          //* Nazwa funkcji :    Termostat_Paint
   1244          //* Funkcja strony g³ównej menu
   1245          //*-----------------------------------------------------------------------------
   1246          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   1247          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1248          void Termostat_Paint(_Screen* ScreenLokal)
   1249          {
   \                     Termostat_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   91B0               SUB      SP,SP,#+68
   \   00000004   0400               MOVS     R4,R0
   1250            if (CurrentSheet!=0)  List_Paint(Speech[g_leng].Termo_,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   804D               LDR      R5,??Termostat_Paint_0  ;; TextToChangeLength
   \   00000008   2879               LDRB     R0,[R5, #+4]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   18D0               BEQ      ??Termostat_Paint_1
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   7CA0               ADR      R0,??Termostat_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0300               MOVS     R3,R0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   7948               LDR      R0,??Termostat_Paint_0+0x8  ;; 0x735
   \   0000002A   7A4E               LDR      R6,??Termostat_Paint_0+0xC  ;; g_leng
   \   0000002C   3668               LDR      R6,[R6, #+0]
   \   0000002E   9627               MOVS     R7,#+150
   \   00000030   3F01               LSLS     R7,R7,#+4        ;; #+2400
   \   00000032   7E43               MULS     R6,R7,R6
   \   00000034   784F               LDR      R7,??Termostat_Paint_0+0x10  ;; Speech
   \   00000036   BE19               ADDS     R6,R7,R6
   \   00000038   3018               ADDS     R0,R6,R0
   \   0000003A   ........           BL       List_Paint
   \   0000003E   0AB0               ADD      SP,SP,#+40
   1251                    
   1252            char txt[7];
   1253          
   1254            H_line(0,70,65,1);
   \                     ??Termostat_Paint_1:
   \   00000040   0123               MOVS     R3,#+1
   \   00000042   4122               MOVS     R2,#+65
   \   00000044   4621               MOVS     R1,#+70
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   ........           BL       H_line
   1255            char GraphTermometr[3][18] = 
   1256                              { 
   1257                               {128,192,192,128,128,224,128,224,128,224,128,128,128,128,128,128,128,0},
   1258                               {3,7,7,3,3,3,3,3,2,2,2,14,2,14,2,14,2,1},
   1259                               {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
   1260                            };
   \   0000004C   734E               LDR      R6,??Termostat_Paint_0+0x14  ;; `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   0000004E   03A8               ADD      R0,SP,#+12
   \   00000050   3100               MOVS     R1,R6
   \   00000052   3822               MOVS     R2,#+56
   \   00000054   ........           BL       __aeabi_memcpy4
   1261            
   1262            CopyToCanvasPoint(GraphTermometr[0], 1, 33, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000058   82B0               SUB      SP,SP,#+8
   \   0000005A   1220               MOVS     R0,#+18
   \   0000005C   0090               STR      R0,[SP, #+0]
   \   0000005E   0300               MOVS     R3,R0
   \   00000060   2122               MOVS     R2,#+33
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   05A8               ADD      R0,SP,#+20
   \   00000066   ........           BL       CopyToCanvasPoint
   \   0000006A   02B0               ADD      SP,SP,#+8
   1263          
   1264            
   1265            if (ScreenLokal->Thermo.AutoOn==1)
   \   0000006C   2700               MOVS     R7,R4
   \   0000006E   8E37               ADDS     R7,R7,#+142
   \   00000070   3878               LDRB     R0,[R7, #+0]
   \   00000072   0128               CMP      R0,#+1
   \   00000074   6CD1               BNE      ??Termostat_Paint_2
   1266            {
   1267                      
   1268                Label("Auto",0,17,52,6,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   6921               MOVS     R1,#+105
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   1421               MOVS     R1,#+20
   \   00000082   0620               MOVS     R0,#+6
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   3423               MOVS     R3,#+52
   \   00000088   1122               MOVS     R2,#+17
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   3000               MOVS     R0,R6
   \   0000008E   3830               ADDS     R0,R0,#+56
   \   00000090   ........           BL       Label
   \   00000094   06B0               ADD      SP,SP,#+24
   1269                
   1270                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \   00000096   6946               MOV      R1,SP
   \   00000098   0820               MOVS     R0,#+8
   \   0000009A   385E               LDRSH    R0,[R7, R0]
   \   0000009C   ........           BL       sIntToStr
   \   000000A0   0200               MOVS     R2,R0
   1271                txt[dl++]=127;
   \   000000A2   1300               MOVS     R3,R2
   \   000000A4   6846               MOV      R0,SP
   \   000000A6   7F21               MOVS     R1,#+127
   \   000000A8   C154               STRB     R1,[R0, R3]
   1272                Label(txt,0,17,43,dl,30,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000AA   82B0               SUB      SP,SP,#+8
   \   000000AC   0020               MOVS     R0,#+0
   \   000000AE   0090               STR      R0,[SP, #+0]
   \   000000B0   6921               MOVS     R1,#+105
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   1E21               MOVS     R1,#+30
   \   000000B6   521C               ADDS     R2,R2,#+1
   \   000000B8   1000               MOVS     R0,R2
   \   000000BA   0006               LSLS     R0,R0,#+24
   \   000000BC   000E               LSRS     R0,R0,#+24
   \   000000BE   03B4               PUSH     {R0,R1}
   \   000000C0   2B23               MOVS     R3,#+43
   \   000000C2   1122               MOVS     R2,#+17
   \   000000C4   0021               MOVS     R1,#+0
   \   000000C6   06A8               ADD      R0,SP,#+24
   \   000000C8   ........           BL       Label
   \   000000CC   06B0               ADD      SP,SP,#+24
   1273                char txt[2]; txt[1]=0; 
   \   000000CE   02A8               ADD      R0,SP,#+8
   \   000000D0   0021               MOVS     R1,#+0
   \   000000D2   4170               STRB     R1,[R0, #+1]
   1274                
   1275                
   1276                char MaxTmp;
   1277                if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \   000000D4   0621               MOVS     R1,#+6
   \   000000D6   795E               LDRSH    R1,[R7, R1]
   \   000000D8   0422               MOVS     R2,#+4
   \   000000DA   BA5E               LDRSH    R2,[R7, R2]
   \   000000DC   9142               CMP      R1,R2
   \   000000DE   01DA               BGE      ??Termostat_Paint_3
   1278                {
   1279                  MaxTmp=ScreenLokal->Thermo.Temperature[0]; 
   \   000000E0   B988               LDRH     R1,[R7, #+4]
   \   000000E2   00E0               B        ??Termostat_Paint_4
   1280                }else{
   1281                  MaxTmp=ScreenLokal->Thermo.Temperature[1];
   \                     ??Termostat_Paint_3:
   \   000000E4   F988               LDRH     R1,[R7, #+6]
   1282                }
   1283                
   1284                if (ScreenLokal->Thermo.SetTemperature==MaxTmp)
   \                     ??Termostat_Paint_4:
   \   000000E6   0822               MOVS     R2,#+8
   \   000000E8   BA5E               LDRSH    R2,[R7, R2]
   \   000000EA   0906               LSLS     R1,R1,#+24
   \   000000EC   090E               LSRS     R1,R1,#+24
   \   000000EE   8A42               CMP      R2,R1
   \   000000F0   02D1               BNE      ??Termostat_Paint_5
   1285                {
   1286                 txt[0]=31; 
   \   000000F2   1F21               MOVS     R1,#+31
   \   000000F4   0170               STRB     R1,[R0, #+0]
   \   000000F6   01E0               B        ??Termostat_Paint_6
   1287                }else{
   1288                 txt[0]=30;       
   \                     ??Termostat_Paint_5:
   \   000000F8   1E21               MOVS     R1,#+30
   \   000000FA   0170               STRB     R1,[R0, #+0]
   1289                }
   1290                
   1291                Button(txt,45,44,15,17);
   \                     ??Termostat_Paint_6:
   \   000000FC   82B0               SUB      SP,SP,#+8
   \   000000FE   1120               MOVS     R0,#+17
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   0F23               MOVS     R3,#+15
   \   00000104   2C22               MOVS     R2,#+44
   \   00000106   2D21               MOVS     R1,#+45
   \   00000108   04A8               ADD      R0,SP,#+16
   \   0000010A   ........           BL       Button
   \   0000010E   02B0               ADD      SP,SP,#+8
   1292                Button(Speech[g_leng].Ustaw,17,26,43,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000110   82B0               SUB      SP,SP,#+8
   \   00000112   0D20               MOVS     R0,#+13
   \   00000114   0090               STR      R0,[SP, #+0]
   \   00000116   2B23               MOVS     R3,#+43
   \   00000118   1A22               MOVS     R2,#+26
   \   0000011A   1121               MOVS     R1,#+17
   \   0000011C   8C46               MOV      R12,R1
   \   0000011E   4049               LDR      R1,??Termostat_Paint_0+0x18  ;; 0x726
   \   00000120   3C48               LDR      R0,??Termostat_Paint_0+0xC  ;; g_leng
   \   00000122   0068               LDR      R0,[R0, #+0]
   \   00000124   9627               MOVS     R7,#+150
   \   00000126   3F01               LSLS     R7,R7,#+4        ;; #+2400
   \   00000128   7843               MULS     R0,R7,R0
   \   0000012A   3B4F               LDR      R7,??Termostat_Paint_0+0x10  ;; Speech
   \   0000012C   3818               ADDS     R0,R7,R0
   \   0000012E   4018               ADDS     R0,R0,R1
   \   00000130   6146               MOV      R1,R12
   \   00000132   ........           BL       Button
   \   00000136   02B0               ADD      SP,SP,#+8
   1293                Button("Auto off",4,3,56,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0D20               MOVS     R0,#+13
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   3823               MOVS     R3,#+56
   \   00000140   0322               MOVS     R2,#+3
   \   00000142   0421               MOVS     R1,#+4
   \   00000144   4036               ADDS     R6,R6,#+64
   \   00000146   3000               MOVS     R0,R6
   \   00000148   ........           BL       Button
   \   0000014C   02B0               ADD      SP,SP,#+8
   \   0000014E   45E0               B        ??Termostat_Paint_7
   1294          
   1295          }else{
   1296          
   1297                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \                     ??Termostat_Paint_2:
   \   00000150   6946               MOV      R1,SP
   \   00000152   0820               MOVS     R0,#+8
   \   00000154   385E               LDRSH    R0,[R7, R0]
   \   00000156   ........           BL       sIntToStr
   \   0000015A   0200               MOVS     R2,R0
   1298                txt[dl++]=' ';
   \   0000015C   6F46               MOV      R7,SP
   \   0000015E   2021               MOVS     R1,#+32
   \   00000160   3954               STRB     R1,[R7, R0]
   \   00000162   521C               ADDS     R2,R2,#+1
   \   00000164   1206               LSLS     R2,R2,#+24
   \   00000166   120E               LSRS     R2,R2,#+24
   1299                txt[dl++]=127;
   \   00000168   1000               MOVS     R0,R2
   \   0000016A   7F21               MOVS     R1,#+127
   \   0000016C   3954               STRB     R1,[R7, R0]
   1300                Label(txt,2,20,39,dl,40,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   0020               MOVS     R0,#+0
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   6921               MOVS     R1,#+105
   \   00000176   03B4               PUSH     {R0,R1}
   \   00000178   2821               MOVS     R1,#+40
   \   0000017A   521C               ADDS     R2,R2,#+1
   \   0000017C   1000               MOVS     R0,R2
   \   0000017E   0006               LSLS     R0,R0,#+24
   \   00000180   000E               LSRS     R0,R0,#+24
   \   00000182   03B4               PUSH     {R0,R1}
   \   00000184   2723               MOVS     R3,#+39
   \   00000186   1422               MOVS     R2,#+20
   \   00000188   0221               MOVS     R1,#+2
   \   0000018A   06A8               ADD      R0,SP,#+24
   \   0000018C   ........           BL       Label
   \   00000190   06B0               ADD      SP,SP,#+24
   1301                txt[1]=0; txt[0]=30;
   \   00000192   0020               MOVS     R0,#+0
   \   00000194   7870               STRB     R0,[R7, #+1]
   \   00000196   1E20               MOVS     R0,#+30
   \   00000198   3870               STRB     R0,[R7, #+0]
   1302                Button(txt,19,48,41,18);
   \   0000019A   82B0               SUB      SP,SP,#+8
   \   0000019C   1220               MOVS     R0,#+18
   \   0000019E   0090               STR      R0,[SP, #+0]
   \   000001A0   2923               MOVS     R3,#+41
   \   000001A2   3022               MOVS     R2,#+48
   \   000001A4   1321               MOVS     R1,#+19
   \   000001A6   02A8               ADD      R0,SP,#+8
   \   000001A8   ........           BL       Button
   \   000001AC   02B0               ADD      SP,SP,#+8
   1303                txt[0]=31;
   \   000001AE   1F20               MOVS     R0,#+31
   \   000001B0   3870               STRB     R0,[R7, #+0]
   1304                Button(txt,19,21,41,18);
   \   000001B2   82B0               SUB      SP,SP,#+8
   \   000001B4   1220               MOVS     R0,#+18
   \   000001B6   0090               STR      R0,[SP, #+0]
   \   000001B8   2923               MOVS     R3,#+41
   \   000001BA   1522               MOVS     R2,#+21
   \   000001BC   1321               MOVS     R1,#+19
   \   000001BE   02A8               ADD      R0,SP,#+8
   \   000001C0   ........           BL       Button
   \   000001C4   02B0               ADD      SP,SP,#+8
   1305                Button("Auto on",4,3,56,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height) 
   \   000001C6   82B0               SUB      SP,SP,#+8
   \   000001C8   0D20               MOVS     R0,#+13
   \   000001CA   0090               STR      R0,[SP, #+0]
   \   000001CC   3823               MOVS     R3,#+56
   \   000001CE   0322               MOVS     R2,#+3
   \   000001D0   0421               MOVS     R1,#+4
   \   000001D2   4C36               ADDS     R6,R6,#+76
   \   000001D4   3000               MOVS     R0,R6
   \   000001D6   ........           BL       Button
   \   000001DA   02B0               ADD      SP,SP,#+8
   1306            }
   1307            
   1308            if ((ScreenLokal->Button[0].Hide==0) && (CurrentSheet==0))
   \                     ??Termostat_Paint_7:
   \   000001DC   A07C               LDRB     R0,[R4, #+18]
   \   000001DE   C006               LSLS     R0,R0,#+27
   \   000001E0   0DD4               BMI      ??Termostat_Paint_8
   \   000001E2   2879               LDRB     R0,[R5, #+4]
   \   000001E4   0028               CMP      R0,#+0
   \   000001E6   0AD1               BNE      ??Termostat_Paint_8
   1309            {
   1310              Button(ScreenLokal->Button[0].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1311                            25,103,39,22 // X,Y,Width,Height
   1312                            );
   \   000001E8   82B0               SUB      SP,SP,#+8
   \   000001EA   1620               MOVS     R0,#+22
   \   000001EC   0090               STR      R0,[SP, #+0]
   \   000001EE   2723               MOVS     R3,#+39
   \   000001F0   6722               MOVS     R2,#+103
   \   000001F2   1921               MOVS     R1,#+25
   \   000001F4   0B34               ADDS     R4,R4,#+11
   \   000001F6   2000               MOVS     R0,R4
   \   000001F8   ........           BL       Button
   \   000001FC   02B0               ADD      SP,SP,#+8
   1313            }
   1314          }//_______________________ Koniec funkcji Termostat_Paint __________________________
   \                     ??Termostat_Paint_8:
   \   000001FE   11B0               ADD      SP,SP,#+68
   \   00000200   F0BC               POP      {R4-R7}
   \   00000202   01BC               POP      {R0}
   \   00000204   0047               BX       R0               ;; return
   \   00000206   C046               Nop      
   \                     ??Termostat_Paint_0:
   \   00000208   ........           DC32     TextToChangeLength
   \   0000020C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000210   35070000           DC32     0x735
   \   00000214   ........           DC32     g_leng
   \   00000218   ........           DC32     Speech
   \   0000021C   ........           DC32     `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   00000220   26070000           DC32     0x726
   1315            
   1316          
   1317          
   1318          
   1319          //*-----------------------------------------------------------------------------
   1320          //* Nazwa funkcji :    Termostat_Event
   1321          //* Funkcja strony g³ównej menu
   1322          //*-----------------------------------------------------------------------------
   1323          //*-----------------------------------------------------------------------------
   1324          
   1325          

   \                                 In section Debug.txt, align 4, keep-with-next
   1326          void Termostat_Event(_Screen* ScreenLokal)
   1327          {
   \                     Termostat_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   \   00000004   0026               MOVS     R6,#+0
   1328            char Repaint=0;
   1329            char WriteTmp;
   1330            char txt[5];
   1331            char txt2[5];
   1332          
   1333           if ((CurrentSheet>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000006   BF4C               LDR      R4,??Termostat_Event_0  ;; TextToChangeLength
   \   00000008   2079               LDRB     R0,[R4, #+4]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   22D0               BEQ      ??Termostat_Event_1
   \   0000000E   3100               MOVS     R1,R6
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0F21               MOVS     R1,#+15
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   BB48               LDR      R0,??Termostat_Event_0+0x4  ;; Y_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   435E               LDRSH    R3,[R0, R1]
   \   0000001E   BB48               LDR      R0,??Termostat_Event_0+0x8  ;; X_down
   \   00000020   425E               LDRSH    R2,[R0, R1]
   \   00000022   BB48               LDR      R0,??Termostat_Event_0+0xC  ;; Y_up
   \   00000024   415E               LDRSH    R1,[R0, R1]
   \   00000026   BB48               LDR      R0,??Termostat_Event_0+0x10  ;; X_up
   \   00000028   0025               MOVS     R5,#+0
   \   0000002A   405F               LDRSH    R0,[R0, R5]
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   C943               MVNS     R1,R1            ;; #-1
   \   00000036   8842               CMP      R0,R1
   \   00000038   0CD1               BNE      ??Termostat_Event_1
   1334              {
   1335                 if (SheetHistoryIndex>0)
   \   0000003A   E079               LDRB     R0,[R4, #+7]
   \   0000003C   0028               CMP      R0,#+0
   \   0000003E   07D0               BEQ      ??Termostat_Event_2
   1336                    {
   1337                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   00000040   401E               SUBS     R0,R0,#+1
   \   00000042   E071               STRB     R0,[R4, #+7]
   \   00000044   0006               LSLS     R0,R0,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   2018               ADDS     R0,R4,R0
   \   0000004A   2030               ADDS     R0,R0,#+32
   \   0000004C   0078               LDRB     R0,[R0, #+0]
   \   0000004E   2071               STRB     R0,[R4, #+4]
   1338                    } 
   1339                   Repaint=1; 
   \                     ??Termostat_Event_2:
   \   00000050   0126               MOVS     R6,#+1
   \   00000052   4AE1               B        ??Termostat_Event_3
   1340              }else{
   1341            
   1342                      //przycisk opcjonalny
   1343                          if ((ScreenLokal->Button[0].Hide==0) && (CurrentSheet==0))
   \                     ??Termostat_Event_1:
   \   00000054   0698               LDR      R0,[SP, #+24]
   \   00000056   807C               LDRB     R0,[R0, #+18]
   \   00000058   C006               LSLS     R0,R0,#+27
   \   0000005A   21D4               BMI      ??Termostat_Event_4
   \   0000005C   2079               LDRB     R0,[R4, #+4]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   1ED1               BNE      ??Termostat_Event_4
   1344                          {
   1345                             if (Button(ScreenLokal->Button[0].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1346                                      25,103,39,22 // X,Y,Width,Height
   1347                                      )==1)
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   1620               MOVS     R0,#+22
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   2723               MOVS     R3,#+39
   \   0000006A   6722               MOVS     R2,#+103
   \   0000006C   1921               MOVS     R1,#+25
   \   0000006E   0898               LDR      R0,[SP, #+32]
   \   00000070   0B30               ADDS     R0,R0,#+11
   \   00000072   ........           BL       Button
   \   00000076   02B0               ADD      SP,SP,#+8
   \   00000078   0128               CMP      R0,#+1
   \   0000007A   11D1               BNE      ??Termostat_Event_4
   1348                                 {
   1349                                   MainStage.StageButton[1+(10*CurrentSheet)]=1;
   \   0000007C   2179               LDRB     R1,[R4, #+4]
   \   0000007E   0A22               MOVS     R2,#+10
   \   00000080   5143               MULS     R1,R2,R1
   \   00000082   A54A               LDR      R2,??Termostat_Event_0+0x14  ;; MainStage
   \   00000084   5118               ADDS     R1,R2,R1
   \   00000086   0200               MOVS     R2,R0
   \   00000088   4A70               STRB     R2,[R1, #+1]
   1350                                   
   1351                                   //je¿eli ustawiona akcja otwarcia strony
   1352                                   if (ScreenLokal->Button[0].OpenPage) 
   \   0000008A   0F21               MOVS     R1,#+15
   \   0000008C   069A               LDR      R2,[SP, #+24]
   \   0000008E   927C               LDRB     R2,[R2, #+18]
   \   00000090   0A42               TST      R2,R1
   \   00000092   05D0               BEQ      ??Termostat_Event_4
   1353                                   {
   1354                                     CurrentSheet=ScreenLokal->Button[0].OpenPage-1;
   \   00000094   069A               LDR      R2,[SP, #+24]
   \   00000096   927C               LDRB     R2,[R2, #+18]
   \   00000098   1140               ANDS     R1,R1,R2
   \   0000009A   491E               SUBS     R1,R1,#+1
   \   0000009C   2171               STRB     R1,[R4, #+4]
   1355                                     Repaint=1;
   \   0000009E   0600               MOVS     R6,R0
   1356                                   }
   1357                                   
   1358                                 }
   1359                          }
   1360                
   1361                          
   1362                          
   1363                
   1364                      _ProgramTab *pProgramTab=(_ProgramTab*)((AT91C_IFLASH_MEM->FlashProgram));
   1365                      
   1366                      
   1367                      //je¿eli AutoOn
   1368                      if (ScreenLokal->Thermo.AutoOn==1)
   \                     ??Termostat_Event_4:
   \   000000A0   069D               LDR      R5,[SP, #+24]
   \   000000A2   8E35               ADDS     R5,R5,#+142
   \   000000A4   9D48               LDR      R0,??Termostat_Event_0+0x18  ;; `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   000000A6   2978               LDRB     R1,[R5, #+0]
   \   000000A8   0129               CMP      R1,#+1
   \   000000AA   00D0               BEQ      .+4
   \   000000AC   7FE0               B        ??Termostat_Event_5
   1369                      {
   1370                            txt[1]=0; txt[0]=31;
   \   000000AE   01AF               ADD      R7,SP,#+4
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   7970               STRB     R1,[R7, #+1]
   \   000000B4   1F21               MOVS     R1,#+31
   \   000000B6   3970               STRB     R1,[R7, #+0]
   1371                      
   1372                          if (Button("Auto off",4,3,56,13)==1)  //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   0D21               MOVS     R1,#+13
   \   000000BC   0091               STR      R1,[SP, #+0]
   \   000000BE   3823               MOVS     R3,#+56
   \   000000C0   0322               MOVS     R2,#+3
   \   000000C2   0421               MOVS     R1,#+4
   \   000000C4   4030               ADDS     R0,R0,#+64
   \   000000C6   ........           BL       Button
   \   000000CA   02B0               ADD      SP,SP,#+8
   \   000000CC   0128               CMP      R0,#+1
   \   000000CE   27D1               BNE      ??Termostat_Event_6
   1373                              {
   1374                              Repaint=1; 
   \   000000D0   0126               MOVS     R6,#+1
   1375                                          
   1376                                //zapis do flash
   1377                                  WriteTmp=0;
   \   000000D2   6846               MOV      R0,SP
   \   000000D4   0021               MOVS     R1,#+0
   \   000000D6   0170               STRB     R1,[R0, #+0]
   1378                                  ScreenLokal->Thermo.AutoOn=WriteTmp;
   \   000000D8   0800               MOVS     R0,R1
   \   000000DA   2870               STRB     R0,[R5, #+0]
   1379                                  unsigned int Save = __get_interrupt_state();  
   \   000000DC   ........           BL       __iar_get_interrupt_state
   \   000000E0   0590               STR      R0,[SP, #+20]
   1380                                  __disable_interrupt();
   \   000000E2   ........           BL       __iar_disable_interrupt
   1381                                  FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.AutoOn),&WriteTmp,1);
                                         ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000E6   3200               MOVS     R2,R6
   \   000000E8   6946               MOV      R1,SP
   \   000000EA   8C46               MOV      R12,R1
   \   000000EC   8C49               LDR      R1,??Termostat_Event_0+0x1C  ;; 0xbc26
   \   000000EE   2079               LDRB     R0,[R4, #+4]
   \   000000F0   A023               MOVS     R3,#+160
   \   000000F2   5843               MULS     R0,R3,R0
   \   000000F4   8B4B               LDR      R3,??Termostat_Event_0+0x20  ;; 0x130100
   \   000000F6   1818               ADDS     R0,R3,R0
   \   000000F8   4018               ADDS     R0,R0,R1
   \   000000FA   6146               MOV      R1,R12
   \   000000FC   ........           BL       FlashWrite
   1382                                  __set_interrupt_state(Save);
   \   00000100   0598               LDR      R0,[SP, #+20]
   \   00000102   ........           BL       __iar_set_interrupt_state
   1383                                  //koniec zapisu do flash
   1384                                  
   1385                                  gProg.Screen[CurrentSheet].Thermo.SetTemperature=pProgramTab->Screen[CurrentSheet].Thermo.SetTemperature;
   \   00000106   2179               LDRB     R1,[R4, #+4]
   \   00000108   A020               MOVS     R0,#+160
   \   0000010A   4143               MULS     R1,R0,R1
   \   0000010C   864A               LDR      R2,??Termostat_Event_0+0x24  ;; 0xbc2e
   \   0000010E   8748               LDR      R0,??Termostat_Event_0+0x28  ;; gProg
   \   00000110   4318               ADDS     R3,R0,R1
   \   00000112   1000               MOVS     R0,R2
   \   00000114   8446               MOV      R12,R0
   \   00000116   8348               LDR      R0,??Termostat_Event_0+0x20  ;; 0x130100
   \   00000118   4018               ADDS     R0,R0,R1
   \   0000011A   6146               MOV      R1,R12
   \   0000011C   405A               LDRH     R0,[R0, R1]
   \   0000011E   9852               STRH     R0,[R3, R2]
   1386                             }
   1387                          
   1388                          if (Button(Speech[g_leng].Ustaw,17,26,43,13)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??Termostat_Event_6:
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0D20               MOVS     R0,#+13
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   2B23               MOVS     R3,#+43
   \   00000128   1A22               MOVS     R2,#+26
   \   0000012A   1121               MOVS     R1,#+17
   \   0000012C   02B5               PUSH     {R1,LR}
   \   0000012E   9446               MOV      R12,R2
   \   00000130   7F49               LDR      R1,??Termostat_Event_0+0x2C  ;; 0x726
   \   00000132   8048               LDR      R0,??Termostat_Event_0+0x30  ;; g_leng
   \   00000134   0068               LDR      R0,[R0, #+0]
   \   00000136   9622               MOVS     R2,#+150
   \   00000138   1201               LSLS     R2,R2,#+4        ;; #+2400
   \   0000013A   5043               MULS     R0,R2,R0
   \   0000013C   7E4A               LDR      R2,??Termostat_Event_0+0x34  ;; Speech
   \   0000013E   1018               ADDS     R0,R2,R0
   \   00000140   4018               ADDS     R0,R0,R1
   \   00000142   6246               MOV      R2,R12
   \   00000144   0099               LDR      R1,[SP, #0]
   \   00000146   02B0               ADD      SP,SP,#+8
   \   00000148   ........           BL       Button
   \   0000014C   02B0               ADD      SP,SP,#+8
   \   0000014E   0128               CMP      R0,#+1
   \   00000150   02D1               BNE      ??Termostat_Event_7
   1389                          {
   1390                            MenuLevel=12;
   \   00000152   0C20               MOVS     R0,#+12
   \   00000154   A064               STR      R0,[R4, #+72]
   1391                            Repaint=1; 
   \   00000156   0126               MOVS     R6,#+1
   1392                          }
   1393                          
   1394                          
   1395                                 //prze³¹czenie temperatur w trybie auto
   1396                          
   1397                          signed   short H_Tmp;
   1398                          if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \                     ??Termostat_Event_7:
   \   00000158   0620               MOVS     R0,#+6
   \   0000015A   285E               LDRSH    R0,[R5, R0]
   \   0000015C   0421               MOVS     R1,#+4
   \   0000015E   695E               LDRSH    R1,[R5, R1]
   \   00000160   8842               CMP      R0,R1
   \   00000162   00DA               BGE      ??Termostat_Event_8
   \   00000164   0800               MOVS     R0,R1
   1399                          {
   1400                            H_Tmp=ScreenLokal->Thermo.Temperature[0]; 
   1401                          }else{
   1402                            H_Tmp=ScreenLokal->Thermo.Temperature[1];
   1403                          }
   1404                          
   1405                          if (ScreenLokal->Thermo.SetTemperature==H_Tmp)
   \                     ??Termostat_Event_8:
   \   00000166   0821               MOVS     R1,#+8
   \   00000168   695E               LDRSH    R1,[R5, R1]
   \   0000016A   8142               CMP      R1,R0
   \   0000016C   02D1               BNE      ??Termostat_Event_9
   1406                          {
   1407                           txt[0]=31; 
   \   0000016E   1F20               MOVS     R0,#+31
   \   00000170   3870               STRB     R0,[R7, #+0]
   \   00000172   01E0               B        ??Termostat_Event_10
   1408                          }else{
   1409                           txt[0]=30;       
   \                     ??Termostat_Event_9:
   \   00000174   1E20               MOVS     R0,#+30
   \   00000176   3870               STRB     R0,[R7, #+0]
   1410                          }
   1411                      
   1412                            if (Button(txt,45,44,15,17)==1)
   \                     ??Termostat_Event_10:
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   1120               MOVS     R0,#+17
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   0F23               MOVS     R3,#+15
   \   00000180   2C22               MOVS     R2,#+44
   \   00000182   2D21               MOVS     R1,#+45
   \   00000184   03A8               ADD      R0,SP,#+12
   \   00000186   ........           BL       Button
   \   0000018A   02B0               ADD      SP,SP,#+8
   \   0000018C   0128               CMP      R0,#+1
   \   0000018E   00D0               BEQ      .+4
   \   00000190   ABE0               B        ??Termostat_Event_3
   1413                            {
   1414                                if (ScreenLokal->Thermo.SetTemperature==ScreenLokal->Thermo.Temperature[0])
   \   00000192   0820               MOVS     R0,#+8
   \   00000194   285E               LDRSH    R0,[R5, R0]
   \   00000196   0421               MOVS     R1,#+4
   \   00000198   695E               LDRSH    R1,[R5, R1]
   \   0000019A   8842               CMP      R0,R1
   \   0000019C   03D1               BNE      ??Termostat_Event_11
   1415                                {      
   1416                                    ScreenLokal->Thermo.SetTemperature=ScreenLokal->Thermo.Temperature[1];
   \   0000019E   E888               LDRH     R0,[R5, #+6]
   \   000001A0   2881               STRH     R0,[R5, #+8]
   1417                                    Repaint=1;
   \   000001A2   0126               MOVS     R6,#+1
   \   000001A4   A1E0               B        ??Termostat_Event_3
   1418                                  
   1419                                }else{
   1420                                    ScreenLokal->Thermo.SetTemperature=ScreenLokal->Thermo.Temperature[0];
   \                     ??Termostat_Event_11:
   \   000001A6   A888               LDRH     R0,[R5, #+4]
   \   000001A8   2881               STRH     R0,[R5, #+8]
   1421                                    Repaint=1;
   \   000001AA   0126               MOVS     R6,#+1
   \   000001AC   9DE0               B        ??Termostat_Event_3
   1422                                }
   1423                            }
   1424                            
   1425                          
   1426                      }
   1427                      else
   1428                      {
   1429                   
   1430                          if (Button("Auto on",4,3,56,13)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height) 
   \                     ??Termostat_Event_5:
   \   000001AE   82B0               SUB      SP,SP,#+8
   \   000001B0   0D21               MOVS     R1,#+13
   \   000001B2   0091               STR      R1,[SP, #+0]
   \   000001B4   3823               MOVS     R3,#+56
   \   000001B6   0322               MOVS     R2,#+3
   \   000001B8   0421               MOVS     R1,#+4
   \   000001BA   4C30               ADDS     R0,R0,#+76
   \   000001BC   ........           BL       Button
   \   000001C0   02B0               ADD      SP,SP,#+8
   \   000001C2   0128               CMP      R0,#+1
   \   000001C4   2FD1               BNE      ??Termostat_Event_12
   1431                            {
   1432                              Repaint=1; 
   \   000001C6   0600               MOVS     R6,R0
   1433                                          
   1434                                //zapis do flash
   1435                                  WriteTmp=1;
   \   000001C8   6946               MOV      R1,SP
   \   000001CA   0200               MOVS     R2,R0
   \   000001CC   0A70               STRB     R2,[R1, #+0]
   1436                                  ScreenLokal->Thermo.AutoOn=WriteTmp;
   \   000001CE   2870               STRB     R0,[R5, #+0]
   1437                                  unsigned int Save = __get_interrupt_state();  
   \   000001D0   ........           BL       __iar_get_interrupt_state
   \   000001D4   0700               MOVS     R7,R0
   1438                                  __disable_interrupt();
   \   000001D6   ........           BL       __iar_disable_interrupt
   1439                                  FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.AutoOn),&WriteTmp,1);
                                         ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000001DA   8C46               MOV      R12,R1
   \   000001DC   5049               LDR      R1,??Termostat_Event_0+0x1C  ;; 0xbc26
   \   000001DE   2079               LDRB     R0,[R4, #+4]
   \   000001E0   A023               MOVS     R3,#+160
   \   000001E2   5843               MULS     R0,R3,R0
   \   000001E4   4F4B               LDR      R3,??Termostat_Event_0+0x20  ;; 0x130100
   \   000001E6   1818               ADDS     R0,R3,R0
   \   000001E8   4018               ADDS     R0,R0,R1
   \   000001EA   6146               MOV      R1,R12
   \   000001EC   ........           BL       FlashWrite
   1440                                  __set_interrupt_state(Save);
   \   000001F0   3800               MOVS     R0,R7
   \   000001F2   ........           BL       __iar_set_interrupt_state
   \   000001F6   2079               LDRB     R0,[R4, #+4]
   \   000001F8   A021               MOVS     R1,#+160
   \   000001FA   4843               MULS     R0,R1,R0
   \   000001FC   4B49               LDR      R1,??Termostat_Event_0+0x28  ;; gProg
   \   000001FE   0818               ADDS     R0,R1,R0
   \   00000200   4E49               LDR      R1,??Termostat_Event_0+0x38  ;; DateTime
   \   00000202   4F4A               LDR      R2,??Termostat_Event_0+0x3C  ;; 0xbc30
   \   00000204   8B79               LDRB     R3,[R1, #+6]
   \   00000206   9B00               LSLS     R3,R3,#+2
   \   00000208   C318               ADDS     R3,R0,R3
   \   0000020A   9A58               LDR      R2,[R3, R2]
   \   0000020C   C978               LDRB     R1,[R1, #+3]
   \   0000020E   CA40               LSRS     R2,R2,R1
   \   00000210   D107               LSLS     R1,R2,#+31
   \   00000212   04D5               BPL      ??Termostat_Event_13
   1441                                  //koniec zapisu do flash
   1442                                  
   1443                                  if (((gProg.Screen[CurrentSheet].Thermo.Chart[DateTime.DayOfWeek]>>DateTime.Hour) & 0x1)==1)
   1444                                  {
   1445                                    gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[0]; 
   \   00000214   4B49               LDR      R1,??Termostat_Event_0+0x40  ;; 0xbc2a
   \   00000216   4018               ADDS     R0,R0,R1
   \   00000218   0188               LDRH     R1,[R0, #+0]
   \   0000021A   8180               STRH     R1,[R0, #+4]
   \   0000021C   03E0               B        ??Termostat_Event_12
   1446                                  }else{
   1447                                    gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[1]; 
   \                     ??Termostat_Event_13:
   \   0000021E   4949               LDR      R1,??Termostat_Event_0+0x40  ;; 0xbc2a
   \   00000220   4018               ADDS     R0,R0,R1
   \   00000222   4188               LDRH     R1,[R0, #+2]
   \   00000224   8180               STRH     R1,[R0, #+4]
   1448                                  }
   1449                      
   1450                                  
   1451                             }
   1452                      
   1453                      
   1454                          txt[1]=0; txt[0]=30;
   \                     ??Termostat_Event_12:
   \   00000226   01AF               ADD      R7,SP,#+4
   \   00000228   0020               MOVS     R0,#+0
   \   0000022A   7870               STRB     R0,[R7, #+1]
   \   0000022C   1E20               MOVS     R0,#+30
   \   0000022E   3870               STRB     R0,[R7, #+0]
   1455                          if ((Button(txt,19,48,41,18)==2)  && ((ScreenLokal->Thermo.SetTemperature)<500)) {((ScreenLokal->Thermo.SetTemperature))++;  Repaint=1;}  //w górê
   \   00000230   82B0               SUB      SP,SP,#+8
   \   00000232   1220               MOVS     R0,#+18
   \   00000234   0090               STR      R0,[SP, #+0]
   \   00000236   2923               MOVS     R3,#+41
   \   00000238   3022               MOVS     R2,#+48
   \   0000023A   1321               MOVS     R1,#+19
   \   0000023C   03A8               ADD      R0,SP,#+12
   \   0000023E   ........           BL       Button
   \   00000242   02B0               ADD      SP,SP,#+8
   \   00000244   0228               CMP      R0,#+2
   \   00000246   0AD1               BNE      ??Termostat_Event_14
   \   00000248   0820               MOVS     R0,#+8
   \   0000024A   285E               LDRSH    R0,[R5, R0]
   \   0000024C   FA21               MOVS     R1,#+250
   \   0000024E   4900               LSLS     R1,R1,#+1        ;; #+500
   \   00000250   8842               CMP      R0,R1
   \   00000252   04DA               BGE      ??Termostat_Event_14
   \   00000254   0820               MOVS     R0,#+8
   \   00000256   285E               LDRSH    R0,[R5, R0]
   \   00000258   401C               ADDS     R0,R0,#+1
   \   0000025A   2881               STRH     R0,[R5, #+8]
   \   0000025C   0126               MOVS     R6,#+1
   1456                      
   1457                          txt2[0]=31; txt2[1]=0;
   \                     ??Termostat_Event_14:
   \   0000025E   03A8               ADD      R0,SP,#+12
   \   00000260   1F21               MOVS     R1,#+31
   \   00000262   0170               STRB     R1,[R0, #+0]
   \   00000264   0021               MOVS     R1,#+0
   \   00000266   4170               STRB     R1,[R0, #+1]
   1458                          if ((Button(txt2,19,21,41,18)==2) && ((ScreenLokal->Thermo.SetTemperature)>0)) {((ScreenLokal->Thermo.SetTemperature))--; Repaint=1; }   //w dó³
   \   00000268   82B0               SUB      SP,SP,#+8
   \   0000026A   1220               MOVS     R0,#+18
   \   0000026C   0090               STR      R0,[SP, #+0]
   \   0000026E   2923               MOVS     R3,#+41
   \   00000270   1522               MOVS     R2,#+21
   \   00000272   1321               MOVS     R1,#+19
   \   00000274   05A8               ADD      R0,SP,#+20
   \   00000276   ........           BL       Button
   \   0000027A   02B0               ADD      SP,SP,#+8
   \   0000027C   0228               CMP      R0,#+2
   \   0000027E   08D1               BNE      ??Termostat_Event_15
   \   00000280   0820               MOVS     R0,#+8
   \   00000282   285E               LDRSH    R0,[R5, R0]
   \   00000284   0128               CMP      R0,#+1
   \   00000286   04DB               BLT      ??Termostat_Event_15
   \   00000288   0820               MOVS     R0,#+8
   \   0000028A   285E               LDRSH    R0,[R5, R0]
   \   0000028C   401E               SUBS     R0,R0,#+1
   \   0000028E   2881               STRH     R0,[R5, #+8]
   \   00000290   0126               MOVS     R6,#+1
   1459                      
   1460                           //zapis zmiany temperatury zadanej w trybie manualnym
   1461                           if ((Button(txt,19,48,41,18)==1) || (Button(txt2,19,21,41,18)==1))
   \                     ??Termostat_Event_15:
   \   00000292   82B0               SUB      SP,SP,#+8
   \   00000294   1220               MOVS     R0,#+18
   \   00000296   0090               STR      R0,[SP, #+0]
   \   00000298   2923               MOVS     R3,#+41
   \   0000029A   3022               MOVS     R2,#+48
   \   0000029C   1321               MOVS     R1,#+19
   \   0000029E   03A8               ADD      R0,SP,#+12
   \   000002A0   ........           BL       Button
   \   000002A4   02B0               ADD      SP,SP,#+8
   \   000002A6   0128               CMP      R0,#+1
   \   000002A8   0BD0               BEQ      ??Termostat_Event_16
   \   000002AA   82B0               SUB      SP,SP,#+8
   \   000002AC   1220               MOVS     R0,#+18
   \   000002AE   0090               STR      R0,[SP, #+0]
   \   000002B0   2923               MOVS     R3,#+41
   \   000002B2   1522               MOVS     R2,#+21
   \   000002B4   1321               MOVS     R1,#+19
   \   000002B6   05A8               ADD      R0,SP,#+20
   \   000002B8   ........           BL       Button
   \   000002BC   02B0               ADD      SP,SP,#+8
   \   000002BE   0128               CMP      R0,#+1
   \   000002C0   13D1               BNE      ??Termostat_Event_3
   1462                           {
   1463                                //zapis do flash
   1464                                  unsigned int Save = __get_interrupt_state();  
   \                     ??Termostat_Event_16:
   \   000002C2   ........           BL       __iar_get_interrupt_state
   \   000002C6   0500               MOVS     R5,R0
   1465                                  __disable_interrupt();
   \   000002C8   ........           BL       __iar_disable_interrupt
   1466                                    FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.SetTemperature),&ScreenLokal->Thermo.SetTemperature,1);
                                           ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000002CC   0122               MOVS     R2,#+1
   \   000002CE   0699               LDR      R1,[SP, #+24]
   \   000002D0   9631               ADDS     R1,R1,#+150
   \   000002D2   1548               LDR      R0,??Termostat_Event_0+0x24  ;; 0xbc2e
   \   000002D4   2379               LDRB     R3,[R4, #+4]
   \   000002D6   A024               MOVS     R4,#+160
   \   000002D8   6343               MULS     R3,R4,R3
   \   000002DA   124C               LDR      R4,??Termostat_Event_0+0x20  ;; 0x130100
   \   000002DC   E318               ADDS     R3,R4,R3
   \   000002DE   1818               ADDS     R0,R3,R0
   \   000002E0   ........           BL       FlashWrite
   1467                                  __set_interrupt_state(Save);
   \   000002E4   2800               MOVS     R0,R5
   \   000002E6   ........           BL       __iar_set_interrupt_state
   1468                                  //koniec zapisu do flash
   1469                           }
   1470          
   1471                      }
   1472                      
   1473                      
   1474          
   1475                      
   1476              }
   1477           
   1478           
   1479          
   1480           
   1481           if (Repaint==1) 
   \                     ??Termostat_Event_3:
   \   000002EA   012E               CMP      R6,#+1
   \   000002EC   05D1               BNE      ??Termostat_Event_17
   1482           {
   1483             ThermostatsTimeChartExecute(); 
   \   000002EE   ........           BL       ThermostatsTimeChartExecute
   1484             ThermostatsExecute();
   \   000002F2   ........           BL       ThermostatsExecute
   1485             MenuPaint();
   \   000002F6   ........           BL       MenuPaint
   1486           }
   1487          }//_______________________ Koniec funkcji Termostat_Event __________________________
   \                     ??Termostat_Event_17:
   \   000002FA   07B0               ADD      SP,SP,#+28
   \   000002FC   F0BC               POP      {R4-R7}
   \   000002FE   01BC               POP      {R0}
   \   00000300   0047               BX       R0               ;; return
   \   00000302   C046               Nop      
   \                     ??Termostat_Event_0:
   \   00000304   ........           DC32     TextToChangeLength
   \   00000308   ........           DC32     Y_down
   \   0000030C   ........           DC32     X_down
   \   00000310   ........           DC32     Y_up
   \   00000314   ........           DC32     X_up
   \   00000318   ........           DC32     MainStage
   \   0000031C   ........           DC32     `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   00000320   26BC0000           DC32     0xbc26
   \   00000324   00011300           DC32     0x130100
   \   00000328   2EBC0000           DC32     0xbc2e
   \   0000032C   ........           DC32     gProg
   \   00000330   26070000           DC32     0x726
   \   00000334   ........           DC32     g_leng
   \   00000338   ........           DC32     Speech
   \   0000033C   ........           DC32     DateTime
   \   00000340   30BC0000           DC32     0xbc30
   \   00000344   2ABC0000           DC32     0xbc2a
   1488            
   1489          
   1490          
   1491          
   1492          
   1493          //*-----------------------------------------------------------------------------
   1494          //* Nazwa funkcji :    Termostat_Refresh
   1495          //* Funkcja strony g³ównej menu
   1496          //*-----------------------------------------------------------------------------
   1497          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1498          void Termostat_Refresh(_Screen* ScreenLokal)
   1499          {
   \                     Termostat_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   1500          
   1501            char dl;
   1502            char txt[6];
   1503            signed short Value=MainStage.StageI[ScreenLokal->Thermo.SensorNode].Value[ScreenLokal->Thermo.SensorReg];
   \   00000004   0400               MOVS     R4,R0
   \   00000006   8C34               ADDS     R4,R4,#+140
   \   00000008   A020               MOVS     R0,#+160
   \   0000000A   2179               LDRB     R1,[R4, #+4]
   \   0000000C   4900               LSLS     R1,R1,#+1
   \   0000000E   E278               LDRB     R2,[R4, #+3]
   \   00000010   1423               MOVS     R3,#+20
   \   00000012   5A43               MULS     R2,R3,R2
   \   00000014   714B               LDR      R3,??Termostat_Refresh_0  ;; MainStage
   \   00000016   9A18               ADDS     R2,R3,R2
   \   00000018   5118               ADDS     R1,R2,R1
   \   0000001A   0D5E               LDRSH    R5,[R1, R0]
   1504            
   1505             if (ScreenLokal->Thermo.AutoOn==1)
   \   0000001C   A078               LDRB     R0,[R4, #+2]
   \   0000001E   0128               CMP      R0,#+1
   \   00000020   1AD1               BNE      ??Termostat_Refresh_1
   1506            {
   1507                     
   1508                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \   00000022   6946               MOV      R1,SP
   \   00000024   0A20               MOVS     R0,#+10
   \   00000026   205E               LDRSH    R0,[R4, R0]
   \   00000028   ........           BL       sIntToStr
   \   0000002C   0200               MOVS     R2,R0
   1509                txt[dl++]=127;
   \   0000002E   6946               MOV      R1,SP
   \   00000030   7F23               MOVS     R3,#+127
   \   00000032   0B54               STRB     R3,[R1, R0]
   1510                Label(txt,0,17,43,dl,27,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   6921               MOVS     R1,#+105
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   1B21               MOVS     R1,#+27
   \   00000040   521C               ADDS     R2,R2,#+1
   \   00000042   1000               MOVS     R0,R2
   \   00000044   0006               LSLS     R0,R0,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   2B23               MOVS     R3,#+43
   \   0000004C   1122               MOVS     R2,#+17
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   06A8               ADD      R0,SP,#+24
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   \                     ??Termostat_Refresh_1:
   \   00000058   6148               LDR      R0,??Termostat_Refresh_0+0x4  ;; 0xffff8aaa
   \   0000005A   8542               CMP      R5,R0
   \   0000005C   14D0               BEQ      ??Termostat_Refresh_2
   1511                
   1512            }
   1513            
   1514            
   1515             if  ((Value)!=(signed short)0x8AAA)          
   1516            { 
   1517              
   1518              dl=sIntToStr((MainStage.StageI[ScreenLokal->Thermo.SensorNode].Value[ScreenLokal->Thermo.SensorReg]),txt);
   \   0000005E   6946               MOV      R1,SP
   \   00000060   A020               MOVS     R0,#+160
   \   00000062   2279               LDRB     R2,[R4, #+4]
   \   00000064   5200               LSLS     R2,R2,#+1
   \   00000066   E378               LDRB     R3,[R4, #+3]
   \   00000068   1426               MOVS     R6,#+20
   \   0000006A   7343               MULS     R3,R6,R3
   \   0000006C   5B4E               LDR      R6,??Termostat_Refresh_0  ;; MainStage
   \   0000006E   F318               ADDS     R3,R6,R3
   \   00000070   9A18               ADDS     R2,R3,R2
   \   00000072   105E               LDRSH    R0,[R2, R0]
   \   00000074   ........           BL       sIntToStr
   \   00000078   0200               MOVS     R2,R0
   1519              txt[dl++]=127;
   \   0000007A   6946               MOV      R1,SP
   \   0000007C   7F23               MOVS     R3,#+127
   \   0000007E   0B54               STRB     R3,[R1, R0]
   \   00000080   521C               ADDS     R2,R2,#+1
   \   00000082   1206               LSLS     R2,R2,#+24
   \   00000084   120E               LSRS     R2,R2,#+24
   \   00000086   0BE0               B        ??Termostat_Refresh_3
   1520            }else{
   1521              txt[0]='-';txt[1]=' ';txt[2]='?'; txt[3]=' ';txt[4]='-'; txt[5]=0;
   \                     ??Termostat_Refresh_2:
   \   00000088   2D20               MOVS     R0,#+45
   \   0000008A   6946               MOV      R1,SP
   \   0000008C   0870               STRB     R0,[R1, #+0]
   \   0000008E   2022               MOVS     R2,#+32
   \   00000090   4A70               STRB     R2,[R1, #+1]
   \   00000092   3F23               MOVS     R3,#+63
   \   00000094   8B70               STRB     R3,[R1, #+2]
   \   00000096   CA70               STRB     R2,[R1, #+3]
   \   00000098   0871               STRB     R0,[R1, #+4]
   \   0000009A   0020               MOVS     R0,#+0
   \   0000009C   4871               STRB     R0,[R1, #+5]
   1522              dl=5;
   \   0000009E   0522               MOVS     R2,#+5
   1523            }
   1524          
   1525            char Ypoz=81;
   \                     ??Termostat_Refresh_3:
   \   000000A0   5127               MOVS     R7,#+81
   1526            if ((ScreenLokal->Button[0].Hide==0) || (CurrentSheet>0))
   \   000000A2   0298               LDR      R0,[SP, #+8]
   \   000000A4   807C               LDRB     R0,[R0, #+18]
   \   000000A6   C006               LSLS     R0,R0,#+27
   \   000000A8   03D5               BPL      ??Termostat_Refresh_4
   \   000000AA   4E48               LDR      R0,??Termostat_Refresh_0+0x8  ;; TextToChangeLength + 4
   \   000000AC   0078               LDRB     R0,[R0, #+0]
   \   000000AE   0028               CMP      R0,#+0
   \   000000B0   00D0               BEQ      ??Termostat_Refresh_5
   1527            {
   1528              Ypoz=73;
   \                     ??Termostat_Refresh_4:
   \   000000B2   4927               MOVS     R7,#+73
   1529            }
   1530            
   1531            
   1532            static DzielBat;
                          ^
Warning[Pe260]: explicit type is missing ("int" assumed)
   1533            
   1534            
   1535            if (DzielBat<20) {DzielBat++;} else {DzielBat=0;} 
   \                     ??Termostat_Refresh_5:
   \   000000B4   4C4E               LDR      R6,??Termostat_Refresh_0+0xC  ;; TextToChangeLength
   \   000000B6   706E               LDR      R0,[R6, #+100]
   \   000000B8   1428               CMP      R0,#+20
   \   000000BA   02DA               BGE      ??Termostat_Refresh_6
   \   000000BC   401C               ADDS     R0,R0,#+1
   \   000000BE   7066               STR      R0,[R6, #+100]
   \   000000C0   01E0               B        ??Termostat_Refresh_7
   \                     ??Termostat_Refresh_6:
   \   000000C2   0020               MOVS     R0,#+0
   \   000000C4   7066               STR      R0,[R6, #+100]
   1536            
   1537            if((MainStage.StageI[ScreenLokal->Thermo.SensorNode].Port & 0x8000) && (DzielBat>12) && ((Value)!=(signed short)0x8AAA))
   \                     ??Termostat_Refresh_7:
   \   000000C6   E078               LDRB     R0,[R4, #+3]
   \   000000C8   1421               MOVS     R1,#+20
   \   000000CA   4843               MULS     R0,R1,R0
   \   000000CC   4349               LDR      R1,??Termostat_Refresh_0  ;; MainStage
   \   000000CE   0818               ADDS     R0,R1,R0
   \   000000D0   A030               ADDS     R0,R0,#+160
   \   000000D2   0088               LDRH     R0,[R0, #+0]
   \   000000D4   0004               LSLS     R0,R0,#+16
   \   000000D6   21D5               BPL      ??Termostat_Refresh_8
   \   000000D8   706E               LDR      R0,[R6, #+100]
   \   000000DA   0D28               CMP      R0,#+13
   \   000000DC   1EDB               BLT      ??Termostat_Refresh_8
   \   000000DE   4048               LDR      R0,??Termostat_Refresh_0+0x4  ;; 0xffff8aaa
   \   000000E0   8542               CMP      R5,R0
   \   000000E2   1BD0               BEQ      ??Termostat_Refresh_8
   1538            {
   1539              Label20(0,2,0,Ypoz,0,64,0,105,0);
                     ^
Warning[Pe223]: function "Label20" declared implicitly
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   0020               MOVS     R0,#+0
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   6921               MOVS     R1,#+105
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   4021               MOVS     R1,#+64
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   3B00               MOVS     R3,R7
   \   000000F4   0200               MOVS     R2,R0
   \   000000F6   0221               MOVS     R1,#+2
   \   000000F8   ........           BL       Label20
   \   000000FC   06B0               ADD      SP,SP,#+24
   1540              CopyToCanvasPoint((char*)BateriaWyladowanaDuza, 24, Ypoz+10, 19,8);
   \   000000FE   82B0               SUB      SP,SP,#+8
   \   00000100   0820               MOVS     R0,#+8
   \   00000102   0090               STR      R0,[SP, #+0]
   \   00000104   1323               MOVS     R3,#+19
   \   00000106   0A37               ADDS     R7,R7,#+10
   \   00000108   3A00               MOVS     R2,R7
   \   0000010A   1206               LSLS     R2,R2,#+24
   \   0000010C   120E               LSRS     R2,R2,#+24
   \   0000010E   1821               MOVS     R1,#+24
   \   00000110   3000               MOVS     R0,R6
   \   00000112   7C30               ADDS     R0,R0,#+124
   \   00000114   ........           BL       CopyToCanvasPoint
   \   00000118   02B0               ADD      SP,SP,#+8
   \   0000011A   0EE0               B        ??Termostat_Refresh_9
   1541            }  
   1542            else
   1543            {  
   1544              Label20(txt,2,0,Ypoz,dl,64,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                     ^
Warning[Pe223]: function "Label20" declared implicitly
   \                     ??Termostat_Refresh_8:
   \   0000011C   82B0               SUB      SP,SP,#+8
   \   0000011E   0020               MOVS     R0,#+0
   \   00000120   0090               STR      R0,[SP, #+0]
   \   00000122   6921               MOVS     R1,#+105
   \   00000124   03B4               PUSH     {R0,R1}
   \   00000126   4021               MOVS     R1,#+64
   \   00000128   1000               MOVS     R0,R2
   \   0000012A   03B4               PUSH     {R0,R1}
   \   0000012C   3B00               MOVS     R3,R7
   \   0000012E   0022               MOVS     R2,#+0
   \   00000130   0221               MOVS     R1,#+2
   \   00000132   06A8               ADD      R0,SP,#+24
   \   00000134   ........           BL       Label20
   \   00000138   06B0               ADD      SP,SP,#+24
   1545            }
   1546            
   1547            
   1548            
   1549            V_line(9,36,12,0);
   \                     ??Termostat_Refresh_9:
   \   0000013A   0023               MOVS     R3,#+0
   \   0000013C   0C22               MOVS     R2,#+12
   \   0000013E   2421               MOVS     R1,#+36
   \   00000140   0920               MOVS     R0,#+9
   \   00000142   ........           BL       V_line
   1550            
   1551            static int TermAmionation;
   1552            
   1553            TermAmionation++;
   \   00000146   B06E               LDR      R0,[R6, #+104]
   \   00000148   401C               ADDS     R0,R0,#+1
   \   0000014A   B066               STR      R0,[R6, #+104]
   1554            if (TermAmionation>12) TermAmionation=1;
   \   0000014C   0D28               CMP      R0,#+13
   \   0000014E   01DB               BLT      ??Termostat_Refresh_10
   \   00000150   0120               MOVS     R0,#+1
   \   00000152   B066               STR      R0,[R6, #+104]
   1555            if ((PortStageRead(MainStage.StageQ[ScreenLokal->Thermo.ActorNode].Port , ScreenLokal->Thermo.ActorPort))==0) TermAmionation=4;
   \                     ??Termostat_Refresh_10:
   \   00000154   6178               LDRB     R1,[R4, #+1]
   \   00000156   D720               MOVS     R0,#+215
   \   00000158   8000               LSLS     R0,R0,#+2        ;; #+860
   \   0000015A   2278               LDRB     R2,[R4, #+0]
   \   0000015C   1423               MOVS     R3,#+20
   \   0000015E   5A43               MULS     R2,R3,R2
   \   00000160   1E4B               LDR      R3,??Termostat_Refresh_0  ;; MainStage
   \   00000162   9A18               ADDS     R2,R3,R2
   \   00000164   105A               LDRH     R0,[R2, R0]
   \   00000166   0004               LSLS     R0,R0,#+16
   \   00000168   0014               ASRS     R0,R0,#+16
   \   0000016A   ........           BL       PortStageRead
   \   0000016E   0028               CMP      R0,#+0
   \   00000170   01D1               BNE      ??Termostat_Refresh_11
   \   00000172   0420               MOVS     R0,#+4
   \   00000174   B066               STR      R0,[R6, #+104]
   1556          
   1557            V_line(9,36,TermAmionation,1);
   \                     ??Termostat_Refresh_11:
   \   00000176   0123               MOVS     R3,#+1
   \   00000178   B26E               LDR      R2,[R6, #+104]
   \   0000017A   1206               LSLS     R2,R2,#+24
   \   0000017C   120E               LSRS     R2,R2,#+24
   \   0000017E   2421               MOVS     R1,#+36
   \   00000180   0920               MOVS     R0,#+9
   \   00000182   ........           BL       V_line
   1558          
   1559            static short int LastTemp;
   1560            
   1561            if (LastTemp!=ScreenLokal->Thermo.SetTemperature)
   \   00000186   3420               MOVS     R0,#+52
   \   00000188   305E               LDRSH    R0,[R6, R0]
   \   0000018A   0A21               MOVS     R1,#+10
   \   0000018C   615E               LDRSH    R1,[R4, R1]
   \   0000018E   8842               CMP      R0,R1
   \   00000190   21D0               BEQ      ??Termostat_Refresh_12
   1562            {  
   1563          
   1564                  signed   short H_Tmp;
   1565                if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \   00000192   0820               MOVS     R0,#+8
   \   00000194   205E               LDRSH    R0,[R4, R0]
   \   00000196   0621               MOVS     R1,#+6
   \   00000198   615E               LDRSH    R1,[R4, R1]
   \   0000019A   8842               CMP      R0,R1
   \   0000019C   00DA               BGE      ??Termostat_Refresh_13
   \   0000019E   0800               MOVS     R0,R1
   1566                {
   1567                  H_Tmp=ScreenLokal->Thermo.Temperature[0]; 
   1568                }else{
   1569                  H_Tmp=ScreenLokal->Thermo.Temperature[1];
   1570                }
   1571                
   1572                if (ScreenLokal->Thermo.AutoOn==1)
   \                     ??Termostat_Refresh_13:
   \   000001A0   A178               LDRB     R1,[R4, #+2]
   \   000001A2   0129               CMP      R1,#+1
   \   000001A4   15D1               BNE      ??Termostat_Refresh_14
   1573                {
   1574                  if (ScreenLokal->Thermo.SetTemperature==H_Tmp)
   \   000001A6   0A21               MOVS     R1,#+10
   \   000001A8   615E               LDRSH    R1,[R4, R1]
   \   000001AA   8142               CMP      R1,R0
   \   000001AC   6846               MOV      R0,SP
   \   000001AE   02D1               BNE      ??Termostat_Refresh_15
   1575                  {
   1576                   txt[0]=31; 
   \   000001B0   1F21               MOVS     R1,#+31
   \   000001B2   0170               STRB     R1,[R0, #+0]
   \   000001B4   01E0               B        ??Termostat_Refresh_16
   1577                  }else{
   1578                   txt[0]=30;       
   \                     ??Termostat_Refresh_15:
   \   000001B6   1E21               MOVS     R1,#+30
   \   000001B8   0170               STRB     R1,[R0, #+0]
   1579                  }
   1580                  txt[1]=0; 
   \                     ??Termostat_Refresh_16:
   \   000001BA   0021               MOVS     R1,#+0
   \   000001BC   4170               STRB     R1,[R0, #+1]
   1581                  
   1582                  Button(txt,45,44,15,17);
   \   000001BE   82B0               SUB      SP,SP,#+8
   \   000001C0   1120               MOVS     R0,#+17
   \   000001C2   0090               STR      R0,[SP, #+0]
   \   000001C4   0F23               MOVS     R3,#+15
   \   000001C6   2C22               MOVS     R2,#+44
   \   000001C8   2D21               MOVS     R1,#+45
   \   000001CA   02A8               ADD      R0,SP,#+8
   \   000001CC   ........           BL       Button
   \   000001D0   02B0               ADD      SP,SP,#+8
   1583                }
   1584                LastTemp=ScreenLokal->Thermo.SetTemperature;
   \                     ??Termostat_Refresh_14:
   \   000001D2   6089               LDRH     R0,[R4, #+10]
   \   000001D4   B086               STRH     R0,[R6, #+52]
   1585            }
   1586          
   1587            
   1588          }//_______________________ Koniec funkcji Termostat_Refresh __________________________
   \                     ??Termostat_Refresh_12:
   \   000001D6   FEBC               POP      {R1-R7}
   \   000001D8   01BC               POP      {R0}
   \   000001DA   0047               BX       R0               ;; return
   \                     ??Termostat_Refresh_0:
   \   000001DC   ........           DC32     MainStage
   \   000001E0   AA8AFFFF           DC32     0xffff8aaa
   \   000001E4   ........           DC32     TextToChangeLength + 4
   \   000001E8   ........           DC32     TextToChangeLength
   1589            
   1590          
   1591          
   1592          
   1593          
   1594          
   1595          

   \                                 In section Debug.txt, align 4, keep-with-next
   1596          void Timetable_Paint(char Screen)
   1597          {         
   \                     Timetable_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   89B0               SUB      SP,SP,#+36
   \   00000004   0400               MOVS     R4,R0
   1598            
   1599               if(Screen) List_Paint(Speech[g_leng].Terminarz,0,1,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   18D0               BEQ      ??Timetable_Paint_0
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   8AA0               ADR      R0,??Timetable_Paint_1  ;; 0x20, 0x00, 0x00, 0x00
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0321               MOVS     R1,#+3
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   0122               MOVS     R2,#+1
   \   00000020   0100               MOVS     R1,R0
   \   00000022   8748               LDR      R0,??Timetable_Paint_1+0x4  ;; 0x753
   \   00000024   874D               LDR      R5,??Timetable_Paint_1+0x8  ;; g_leng
   \   00000026   2D68               LDR      R5,[R5, #+0]
   \   00000028   9626               MOVS     R6,#+150
   \   0000002A   3601               LSLS     R6,R6,#+4        ;; #+2400
   \   0000002C   7543               MULS     R5,R6,R5
   \   0000002E   864E               LDR      R6,??Timetable_Paint_1+0xC  ;; Speech
   \   00000030   7519               ADDS     R5,R6,R5
   \   00000032   2818               ADDS     R0,R5,R0
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   1600          
   1601          
   1602              char L_TaskAmount;
   1603            
   1604              L_TaskAmount=AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount;
   \                     ??Timetable_Paint_0:
   \   0000003A   1120               MOVS     R0,#+17
   \   0000003C   4443               MULS     R4,R0,R4
   \   0000003E   8348               LDR      R0,??Timetable_Paint_1+0x10  ;; 0x13d830
   \   00000040   0019               ADDS     R0,R0,R4
   \   00000042   0290               STR      R0,[SP, #+8]
   \   00000044   6846               MOV      R0,SP
   \   00000046   0299               LDR      R1,[SP, #+8]
   \   00000048   0978               LDRB     R1,[R1, #+0]
   \   0000004A   0170               STRB     R1,[R0, #+0]
   1605              if (L_TaskAmount>4) L_TaskAmount=4;
   \   0000004C   0800               MOVS     R0,R1
   \   0000004E   0528               CMP      R0,#+5
   \   00000050   02D3               BCC      ??Timetable_Paint_2
   \   00000052   6846               MOV      R0,SP
   \   00000054   0421               MOVS     R1,#+4
   \   00000056   0170               STRB     R1,[R0, #+0]
   1606              char *ptTaskAmount=&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount);
   \                     ??Timetable_Paint_2:
   \   00000058   029B               LDR      R3,[SP, #+8]
   1607              if (L_TaskAmount==0)
   \   0000005A   6846               MOV      R0,SP
   \   0000005C   0078               LDRB     R0,[R0, #+0]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   11D1               BNE      ??Timetable_Paint_3
   1608              {
   1609                L_TaskAmount=1;
   \   00000062   6846               MOV      R0,SP
   \   00000064   0121               MOVS     R1,#+1
   \   00000066   0170               STRB     R1,[R0, #+0]
   1610                
   1611                        //zapis do flash
   1612                    unsigned int Save = __get_interrupt_state();  
   \   00000068   ........           BL       __iar_get_interrupt_state
   \   0000006C   0400               MOVS     R4,R0
   1613                    __disable_interrupt();
   \   0000006E   ........           BL       __iar_disable_interrupt
   1614                    //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)),0, &L_TaskAmount,1);
   1615                    FlashWrite(ptTaskAmount, &L_TaskAmount, 1);
                           ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000072   0A00               MOVS     R2,R1
   \   00000074   6946               MOV      R1,SP
   \   00000076   1800               MOVS     R0,R3
   \   00000078   ........           BL       FlashWrite
   1616                    __set_interrupt_state(Save);
   \   0000007C   2000               MOVS     R0,R4
   \   0000007E   ........           BL       __iar_set_interrupt_state
   1617                    __enable_interrupt();
   \   00000082   ........           BL       __iar_enable_interrupt
   1618                    //koniec zapisu do flash
   1619            
   1620              }
   1621             
   1622                
   1623                
   1624                char Ychart=108;
   \                     ??Timetable_Paint_3:
   \   00000086   6C24               MOVS     R4,#+108
   \   00000088   05A8               ADD      R0,SP,#+20
   \   0000008A   7149               LDR      R1,??Timetable_Paint_1+0x14  ;; `?<Constant {130, 0}>`
   \   0000008C   0A68               LDR      R2,[R1, #0]
   \   0000008E   0260               STR      R2,[R0, #0]
   \   00000090   03A8               ADD      R0,SP,#+12
   \   00000092   0021               MOVS     R1,#+0
   \   00000094   4171               STRB     R1,[R0, #+5]
   1625                char CharOnOff[]={130,0};
   1626                char TimeString[6];
   1627                TimeString[5]=0;
   1628                for (char TN=0; TN<L_TaskAmount; TN++)
   \   00000096   0D00               MOVS     R5,R1
   \   00000098   49E0               B        ??Timetable_Paint_4
   1629                {
   1630                    
   1631                    H_line(1,Ychart,62,1);  
   1632                    H_line(1,Ychart-1,62,1);  
   1633                    H_line(1,Ychart-27,62,1);   
   1634                    V_line(0,Ychart-26,26,1); 
   1635                    V_line(63,Ychart-26,26,1); 
   1636                    
   1637                    
   1638                    Button(CharOnOff,2,Ychart-15,13,13);
   1639                    if ((TN>0) && (TN==L_TaskAmount-1)) Button("-",53,Ychart-13,11,14);
   1640                    
   1641                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   1642                    char LabelNeg=0;
   1643                    if (AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable) 
   1644                    {
   1645                     CopyToCanvasPoint((char *)ekran_tab,44,Ychart-13,8,10);   
   1646                     LabelNeg=1;
   1647                    }
   1648                    
   1649                    CharToStr2(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Hour, TimeString); //(char Value, char *Vstring, char ill);
                           ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   1650                    TimeString[2]=':';
   1651                    CharToStr2(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Minute, &(TimeString[3])); //(char Value, char *Vstring, char ill);
   1652                    Label(TimeString,2,17,Ychart-13,5,25,0,128,LabelNeg);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   1653                 
   1654                          
   1655                    for (char i=0; i<7; i++)
   1656                    {
   1657                      Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart-25,1,6,0,128,((AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Week>>i) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??Timetable_Paint_5:
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0398               LDR      R0,[SP, #+12]
   \   0000009E   8078               LDRB     R0,[R0, #+2]
   \   000000A0   3041               ASRS     R0,R0,R6
   \   000000A2   0121               MOVS     R1,#+1
   \   000000A4   0140               ANDS     R1,R1,R0
   \   000000A6   0091               STR      R1,[SP, #+0]
   \   000000A8   8021               MOVS     R1,#+128
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   0621               MOVS     R1,#+6
   \   000000B0   0120               MOVS     R0,#+1
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   3B00               MOVS     R3,R7
   \   000000B6   193B               SUBS     R3,R3,#+25
   \   000000B8   F200               LSLS     R2,R6,#+3
   \   000000BA   121D               ADDS     R2,R2,#+4
   \   000000BC   1206               LSLS     R2,R2,#+24
   \   000000BE   120E               LSRS     R2,R2,#+24
   \   000000C0   0221               MOVS     R1,#+2
   \   000000C2   02B5               PUSH     {R1,LR}
   \   000000C4   0192               STR      R2,[SP, #+4]
   \   000000C6   9C46               MOV      R12,R3
   \   000000C8   6249               LDR      R1,??Timetable_Paint_1+0x18  ;; 0x6db
   \   000000CA   3200               MOVS     R2,R6
   \   000000CC   5D48               LDR      R0,??Timetable_Paint_1+0x8  ;; g_leng
   \   000000CE   0068               LDR      R0,[R0, #+0]
   \   000000D0   9623               MOVS     R3,#+150
   \   000000D2   1B01               LSLS     R3,R3,#+4        ;; #+2400
   \   000000D4   5843               MULS     R0,R3,R0
   \   000000D6   5C4B               LDR      R3,??Timetable_Paint_1+0xC  ;; Speech
   \   000000D8   1818               ADDS     R0,R3,R0
   \   000000DA   8018               ADDS     R0,R0,R2
   \   000000DC   4018               ADDS     R0,R0,R1
   \   000000DE   6346               MOV      R3,R12
   \   000000E0   019A               LDR      R2,[SP, #+4]
   \   000000E2   0099               LDR      R1,[SP, #0]
   \   000000E4   02B0               ADD      SP,SP,#+8
   \   000000E6   ........           BL       Label
   \   000000EA   06B0               ADD      SP,SP,#+24
   1658                    }
   \   000000EC   761C               ADDS     R6,R6,#+1
   \   000000EE   3606               LSLS     R6,R6,#+24
   \   000000F0   360E               LSRS     R6,R6,#+24
   \                     ??Timetable_Paint_6:
   \   000000F2   3000               MOVS     R0,R6
   \   000000F4   0728               CMP      R0,#+7
   \   000000F6   D0D3               BCC      ??Timetable_Paint_5
   1659                    
   1660          
   1661                    
   1662                    Ychart=Ychart-27;
   \   000000F8   1B3C               SUBS     R4,R4,#+27
   \   000000FA   2406               LSLS     R4,R4,#+24
   \   000000FC   240E               LSRS     R4,R4,#+24
   1663                    
   1664                    if ((TN==L_TaskAmount-1)&& (TN<3)) Button("+",53,Ychart-13,11,14);
   \   000000FE   2800               MOVS     R0,R5
   \   00000100   6946               MOV      R1,SP
   \   00000102   0978               LDRB     R1,[R1, #+0]
   \   00000104   491E               SUBS     R1,R1,#+1
   \   00000106   8842               CMP      R0,R1
   \   00000108   0ED1               BNE      ??Timetable_Paint_7
   \   0000010A   0328               CMP      R0,#+3
   \   0000010C   0CD2               BCS      ??Timetable_Paint_7
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   0E20               MOVS     R0,#+14
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   0B23               MOVS     R3,#+11
   \   00000116   2200               MOVS     R2,R4
   \   00000118   0D3A               SUBS     R2,R2,#+13
   \   0000011A   1206               LSLS     R2,R2,#+24
   \   0000011C   120E               LSRS     R2,R2,#+24
   \   0000011E   3521               MOVS     R1,#+53
   \   00000120   4DA0               ADR      R0,??Timetable_Paint_1+0x1C  ;; 0x2B, 0x00, 0x00, 0x00
   \   00000122   ........           BL       Button
   \   00000126   02B0               ADD      SP,SP,#+8
   \                     ??Timetable_Paint_7:
   \   00000128   6D1C               ADDS     R5,R5,#+1
   \   0000012A   2D06               LSLS     R5,R5,#+24
   \   0000012C   2D0E               LSRS     R5,R5,#+24
   \                     ??Timetable_Paint_4:
   \   0000012E   2800               MOVS     R0,R5
   \   00000130   6946               MOV      R1,SP
   \   00000132   0978               LDRB     R1,[R1, #+0]
   \   00000134   8842               CMP      R0,R1
   \   00000136   7DD2               BCS      ??Timetable_Paint_8
   \   00000138   2700               MOVS     R7,R4
   \   0000013A   0123               MOVS     R3,#+1
   \   0000013C   3E22               MOVS     R2,#+62
   \   0000013E   3900               MOVS     R1,R7
   \   00000140   1800               MOVS     R0,R3
   \   00000142   ........           BL       H_line
   \   00000146   0123               MOVS     R3,#+1
   \   00000148   3E22               MOVS     R2,#+62
   \   0000014A   791E               SUBS     R1,R7,#+1
   \   0000014C   1800               MOVS     R0,R3
   \   0000014E   ........           BL       H_line
   \   00000152   0123               MOVS     R3,#+1
   \   00000154   3E22               MOVS     R2,#+62
   \   00000156   3900               MOVS     R1,R7
   \   00000158   1B39               SUBS     R1,R1,#+27
   \   0000015A   1800               MOVS     R0,R3
   \   0000015C   ........           BL       H_line
   \   00000160   3E00               MOVS     R6,R7
   \   00000162   1A3E               SUBS     R6,R6,#+26
   \   00000164   0123               MOVS     R3,#+1
   \   00000166   1A22               MOVS     R2,#+26
   \   00000168   3100               MOVS     R1,R6
   \   0000016A   0020               MOVS     R0,#+0
   \   0000016C   ........           BL       V_line
   \   00000170   0123               MOVS     R3,#+1
   \   00000172   1A22               MOVS     R2,#+26
   \   00000174   3100               MOVS     R1,R6
   \   00000176   3F20               MOVS     R0,#+63
   \   00000178   ........           BL       V_line
   \   0000017C   82B0               SUB      SP,SP,#+8
   \   0000017E   0D20               MOVS     R0,#+13
   \   00000180   0090               STR      R0,[SP, #+0]
   \   00000182   0300               MOVS     R3,R0
   \   00000184   2200               MOVS     R2,R4
   \   00000186   0F3A               SUBS     R2,R2,#+15
   \   00000188   1206               LSLS     R2,R2,#+24
   \   0000018A   120E               LSRS     R2,R2,#+24
   \   0000018C   0221               MOVS     R1,#+2
   \   0000018E   07A8               ADD      R0,SP,#+28
   \   00000190   ........           BL       Button
   \   00000194   02B0               ADD      SP,SP,#+8
   \   00000196   2800               MOVS     R0,R5
   \   00000198   11D0               BEQ      ??Timetable_Paint_9
   \   0000019A   6946               MOV      R1,SP
   \   0000019C   0978               LDRB     R1,[R1, #+0]
   \   0000019E   491E               SUBS     R1,R1,#+1
   \   000001A0   8842               CMP      R0,R1
   \   000001A2   0CD1               BNE      ??Timetable_Paint_9
   \   000001A4   82B0               SUB      SP,SP,#+8
   \   000001A6   0E20               MOVS     R0,#+14
   \   000001A8   0090               STR      R0,[SP, #+0]
   \   000001AA   0B23               MOVS     R3,#+11
   \   000001AC   2200               MOVS     R2,R4
   \   000001AE   0D3A               SUBS     R2,R2,#+13
   \   000001B0   1206               LSLS     R2,R2,#+24
   \   000001B2   120E               LSRS     R2,R2,#+24
   \   000001B4   3521               MOVS     R1,#+53
   \   000001B6   29A0               ADR      R0,??Timetable_Paint_1+0x20  ;; 0x2D, 0x00, 0x00, 0x00
   \   000001B8   ........           BL       Button
   \   000001BC   02B0               ADD      SP,SP,#+8
   \                     ??Timetable_Paint_9:
   \   000001BE   06A8               ADD      R0,SP,#+24
   \   000001C0   2749               LDR      R1,??Timetable_Paint_1+0x24  ;; `?<Constant {130, 0}>` + 4
   \   000001C2   4CC9               LDM      R1!,{R2,R3,R6}
   \   000001C4   4CC0               STM      R0!,{R2,R3,R6}
   \   000001C6   0026               MOVS     R6,#+0
   \   000001C8   2800               MOVS     R0,R5
   \   000001CA   8000               LSLS     R0,R0,#+2
   \   000001CC   0299               LDR      R1,[SP, #+8]
   \   000001CE   0818               ADDS     R0,R1,R0
   \   000001D0   0190               STR      R0,[SP, #+4]
   \   000001D2   4078               LDRB     R0,[R0, #+1]
   \   000001D4   0028               CMP      R0,#+0
   \   000001D6   0DD0               BEQ      ??Timetable_Paint_10
   \   000001D8   82B0               SUB      SP,SP,#+8
   \   000001DA   0A20               MOVS     R0,#+10
   \   000001DC   0090               STR      R0,[SP, #+0]
   \   000001DE   0823               MOVS     R3,#+8
   \   000001E0   2200               MOVS     R2,R4
   \   000001E2   0D3A               SUBS     R2,R2,#+13
   \   000001E4   1206               LSLS     R2,R2,#+24
   \   000001E6   120E               LSRS     R2,R2,#+24
   \   000001E8   2C21               MOVS     R1,#+44
   \   000001EA   08A8               ADD      R0,SP,#+32
   \   000001EC   ........           BL       CopyToCanvasPoint
   \   000001F0   02B0               ADD      SP,SP,#+8
   \   000001F2   0126               MOVS     R6,#+1
   \                     ??Timetable_Paint_10:
   \   000001F4   03A9               ADD      R1,SP,#+12
   \   000001F6   0198               LDR      R0,[SP, #+4]
   \   000001F8   C078               LDRB     R0,[R0, #+3]
   \   000001FA   ........           BL       CharToStr2
   \   000001FE   03A8               ADD      R0,SP,#+12
   \   00000200   3A21               MOVS     R1,#+58
   \   00000202   8170               STRB     R1,[R0, #+2]
   \   00000204   03A9               ADD      R1,SP,#+12
   \   00000206   C91C               ADDS     R1,R1,#+3
   \   00000208   0198               LDR      R0,[SP, #+4]
   \   0000020A   0079               LDRB     R0,[R0, #+4]
   \   0000020C   ........           BL       CharToStr2
   \   00000210   82B0               SUB      SP,SP,#+8
   \   00000212   0096               STR      R6,[SP, #+0]
   \   00000214   8021               MOVS     R1,#+128
   \   00000216   0020               MOVS     R0,#+0
   \   00000218   03B4               PUSH     {R0,R1}
   \   0000021A   1921               MOVS     R1,#+25
   \   0000021C   0520               MOVS     R0,#+5
   \   0000021E   03B4               PUSH     {R0,R1}
   \   00000220   3B00               MOVS     R3,R7
   \   00000222   0D3B               SUBS     R3,R3,#+13
   \   00000224   1122               MOVS     R2,#+17
   \   00000226   0221               MOVS     R1,#+2
   \   00000228   09A8               ADD      R0,SP,#+36
   \   0000022A   ........           BL       Label
   \   0000022E   06B0               ADD      SP,SP,#+24
   \   00000230   0026               MOVS     R6,#+0
   \   00000232   5EE7               B        ??Timetable_Paint_6
   1665           
   1666                }
   1667                
   1668              
   1669          
   1670                
   1671          
   1672          }//________________________________________________________________________
   \                     ??Timetable_Paint_8:
   \   00000234   09B0               ADD      SP,SP,#+36
   \   00000236   F0BC               POP      {R4-R7}
   \   00000238   01BC               POP      {R0}
   \   0000023A   0047               BX       R0               ;; return
   \                     ??Timetable_Paint_1:
   \   0000023C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000240   53070000           DC32     0x753
   \   00000244   ........           DC32     g_leng
   \   00000248   ........           DC32     Speech
   \   0000024C   30D81300           DC32     0x13d830
   \   00000250   ........           DC32     `?<Constant {130, 0}>`
   \   00000254   DB060000           DC32     0x6db
   \   00000258   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   0000025C   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000260   ........           DC32     `?<Constant {130, 0}>` + 4
   1673          
   1674          
   1675          
   1676          __Task *TaskToChange;
   1677          char TimetableSet_Hour;
   1678          char TimetableSet_Minute;
   1679          char TimetableSet_Week;

   \                                 In section Debug.txt, align 4, keep-with-next
   1680          void Timetable_Event(char Screen)
   1681          {      
   \                     Timetable_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   87B0               SUB      SP,SP,#+28
   \   00000004   0026               MOVS     R6,#+0
   1682             char Repaint=0;
   1683             char CharToSave=0;
   \   00000006   6946               MOV      R1,SP
   \   00000008   3200               MOVS     R2,R6
   \   0000000A   8A70               STRB     R2,[R1, #+2]
   1684             char TaskAmount=AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount;
   \   0000000C   1121               MOVS     R1,#+17
   \   0000000E   4843               MULS     R0,R1,R0
   \   00000010   C949               LDR      R1,??Timetable_Event_0  ;; 0x13d830
   \   00000012   0818               ADDS     R0,R1,R0
   \   00000014   0390               STR      R0,[SP, #+12]
   \   00000016   6846               MOV      R0,SP
   \   00000018   0399               LDR      R1,[SP, #+12]
   \   0000001A   0978               LDRB     R1,[R1, #+0]
   \   0000001C   0170               STRB     R1,[R0, #+0]
   1685          
   1686             if (TaskAmount>4) TaskAmount=4;
   \   0000001E   0800               MOVS     R0,R1
   \   00000020   0528               CMP      R0,#+5
   \   00000022   02D3               BCC      ??Timetable_Event_1
   \   00000024   6846               MOV      R0,SP
   \   00000026   0421               MOVS     R1,#+4
   \   00000028   0170               STRB     R1,[R0, #+0]
   \                     ??Timetable_Event_1:
   \   0000002A   1100               MOVS     R1,R2
   \   0000002C   0800               MOVS     R0,R1
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0F21               MOVS     R1,#+15
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   C148               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   435E               LDRSH    R3,[R0, R1]
   \   0000003A   C148               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   0000003C   425E               LDRSH    R2,[R0, R1]
   \   0000003E   C148               LDR      R0,??Timetable_Event_0+0xC  ;; Y_up
   \   00000040   415E               LDRSH    R1,[R0, R1]
   \   00000042   C148               LDR      R0,??Timetable_Event_0+0x10  ;; X_up
   \   00000044   0024               MOVS     R4,#+0
   \   00000046   005F               LDRSH    R0,[R0, R4]
   1687             
   1688             if ((ScreenNr>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000048   ........           BL       List_Event
   \   0000004C   04B0               ADD      SP,SP,#+16
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   C943               MVNS     R1,R1            ;; #-1
   \   00000052   8842               CMP      R0,R1
   \   00000054   14D1               BNE      ??Timetable_Event_2
   1689              {
   1690                 if (SheetHistoryIndex>0)
   \   00000056   BD48               LDR      R0,??Timetable_Event_0+0x14  ;; TextToChangeLength
   \   00000058   C179               LDRB     R1,[R0, #+7]
   \   0000005A   0029               CMP      R1,#+0
   \   0000005C   07D0               BEQ      ??Timetable_Event_3
   1691                    {
   1692                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000005E   491E               SUBS     R1,R1,#+1
   \   00000060   C171               STRB     R1,[R0, #+7]
   \   00000062   0906               LSLS     R1,R1,#+24
   \   00000064   090E               LSRS     R1,R1,#+24
   \   00000066   4118               ADDS     R1,R0,R1
   \   00000068   2031               ADDS     R1,R1,#+32
   \   0000006A   0978               LDRB     R1,[R1, #+0]
   \   0000006C   0171               STRB     R1,[R0, #+4]
   1693                    } 
   1694                   Repaint=1; 
   \                     ??Timetable_Event_3:
   \   0000006E   0126               MOVS     R6,#+1
   1695              }else{
   1696                      
   1697                char Ychart=108;
   1698               
   1699                if ((X_down>1) && (X_down<63) && (Y_down>108)&& (Y_down<128)) Repaint=1;
   1700                
   1701               char PlusMinButton=0;  
   1702                
   1703                char CharOnOff[]={130,0};
   1704                char ButtonRes;
   1705                for (char TN=0; TN<TaskAmount; TN++)
   1706                {
   1707                  if ((TN==TaskAmount-1)&& (TN<3)) 
   1708                  {
   1709                      ButtonRes=Button("+",53,Ychart-13-27,11,14);
   1710                      if (ButtonRes==1)
   1711                      {
   1712                        TaskAmount++;
   1713                        //zapis do flash
   1714                        unsigned int Save = __get_interrupt_state();  
   1715                        __disable_interrupt();
   1716                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)), (char*) (&(TaskAmount)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1717                        __set_interrupt_state(Save);
   1718                        __enable_interrupt();
   1719                        //koniec zapisu do flash
   1720                        Repaint=1; 
   1721                        PlusMinButton=1;
   1722                      }
   1723                      if (ButtonRes==2)
   1724                      {
   1725                        PlusMinButton=1;
   1726                      }
   1727                  }
   1728                  
   1729                  if ((PlusMinButton==0) && (TN>0) && (TN==TaskAmount-1)) 
   1730                  {
   1731                    ButtonRes=Button("-",53,Ychart-13,11,14);
   1732                    if (ButtonRes==1)
   1733                    {
   1734                        TaskAmount--;
   1735                        //zapis do flash
   1736                        unsigned int Save = __get_interrupt_state();  
   1737                        __disable_interrupt();
   1738                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)), (char*) (&(TaskAmount)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1739                        __set_interrupt_state(Save);
   1740                        __enable_interrupt();
   1741                        //koniec zapisu do flash
   1742                        Repaint=1; 
   1743                        PlusMinButton=1;
   1744                    }
   1745                    if (ButtonRes==2)
   1746                    {
   1747                        PlusMinButton=1;
   1748                    }
   1749                     
   1750                  }
   1751                  
   1752                  if (AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable) 
   1753                  {
   1754                      if (Button(CharOnOff,2,Ychart-15,13,13)==1)
   1755                      {
   1756                         CharToSave=0;
   1757                        //zapis do flash
   1758                          unsigned int Save = __get_interrupt_state();  
   1759                          __disable_interrupt();
   1760                          FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable)), (char*) (&(CharToSave)), 1);
                                 ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1761                          __set_interrupt_state(Save);
   1762                          __enable_interrupt();
   1763                          //koniec zapisu do flash
   1764                          Repaint=1; 
   1765                      } 
   1766                   }else{
   1767                        if(Button(CharOnOff,2,Ychart-15,13,13)==1)
   1768                        {
   1769                           CharToSave=1;
   1770                          //zapis do flash
   1771                            unsigned int Save = __get_interrupt_state();  
   1772                            __disable_interrupt();
   1773                            FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable)), (char*) (&(CharToSave)), 1);
                                   ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1774                            __set_interrupt_state(Save);
   1775                            __enable_interrupt();
   1776                            //koniec zapisu do flash
   1777                            Repaint=1; 
   1778                        }
   1779                      }
   1780                      
   1781                      //wybór strefy 
   1782                      if ((Button(CharOnOff,2,Ychart-15,13,13)==0) && (PlusMinButton==0) && (X_down>1) && (X_down<63) && (Y_down>Ychart-27)&& (Y_down<Ychart))
   1783                      {
   1784                        MenuPaint();
   1785                        H_line(1,Ychart-2,62,1);  
   1786                        H_line(1,Ychart-26,62,1);   
   1787                        V_line(1,Ychart-26,24,1); 
   1788                        V_line(62,Ychart-26,26,1); 
   1789                      }
   1790                  
   1791                      //edycja strefy 
   1792                      if ((Button(CharOnOff,2,Ychart-15,13,13)==0) && (PlusMinButton==0) && (X_up>1) && (X_up<63) && (Y_up>Ychart-27)&& (Y_up<Ychart))
   1793                      {
   1794                          TaskToChange=&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN]);
   1795                          TimetableSet_Hour=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Hour;
   1796                          TimetableSet_Minute=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Minute;
   1797                          TimetableSet_Week=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Week;
   1798                          MenuLevel=13;
   1799                          Repaint=1; 
   1800                      }
   1801                  
   1802                      
   1803                  
   1804                    Ychart=Ychart-27;
   1805          
   1806                  }//koniec for (TN)
   1807                
   1808                
   1809            
   1810              }
   1811             if (Repaint) MenuPaint();
   \                     ??Timetable_Event_4:
   \   00000070   002E               CMP      R6,#+0
   \   00000072   01D0               BEQ      ??Timetable_Event_5
   \   00000074   ........           BL       MenuPaint
   1812          }
   \                     ??Timetable_Event_5:
   \   00000078   07B0               ADD      SP,SP,#+28
   \   0000007A   F0BC               POP      {R4-R7}
   \   0000007C   01BC               POP      {R0}
   \   0000007E   0047               BX       R0               ;; return
   \                     ??Timetable_Event_2:
   \   00000080   6C24               MOVS     R4,#+108
   \   00000082   AF48               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   405E               LDRSH    R0,[R0, R1]
   \   00000088   0228               CMP      R0,#+2
   \   0000008A   08DB               BLT      ??Timetable_Event_6
   \   0000008C   3F28               CMP      R0,#+63
   \   0000008E   06DA               BGE      ??Timetable_Event_6
   \   00000090   AA48               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   6D28               CMP      R0,#+109
   \   00000096   02DB               BLT      ??Timetable_Event_6
   \   00000098   8028               CMP      R0,#+128
   \   0000009A   00DA               BGE      ??Timetable_Event_6
   \   0000009C   0126               MOVS     R6,#+1
   \                     ??Timetable_Event_6:
   \   0000009E   6846               MOV      R0,SP
   \   000000A0   4170               STRB     R1,[R0, #+1]
   \   000000A2   04A8               ADD      R0,SP,#+16
   \   000000A4   AA49               LDR      R1,??Timetable_Event_0+0x18  ;; `?<Constant {130, 0}>_1`
   \   000000A6   0A68               LDR      R2,[R1, #0]
   \   000000A8   0260               STR      R2,[R0, #0]
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   0290               STR      R0,[SP, #+8]
   \   000000AE   96E0               B        ??Timetable_Event_7
   \                     ??Timetable_Event_8:
   \   000000B0   0D20               MOVS     R0,#+13
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   0300               MOVS     R3,R0
   \   000000B6   2A00               MOVS     R2,R5
   \   000000B8   1206               LSLS     R2,R2,#+24
   \   000000BA   120E               LSRS     R2,R2,#+24
   \   000000BC   0221               MOVS     R1,#+2
   \   000000BE   06A8               ADD      R0,SP,#+24
   \   000000C0   ........           BL       Button
   \   000000C4   02B0               ADD      SP,SP,#+8
   \   000000C6   0128               CMP      R0,#+1
   \   000000C8   15D1               BNE      ??Timetable_Event_9
   \   000000CA   0127               MOVS     R7,#+1
   \   000000CC   6846               MOV      R0,SP
   \   000000CE   3900               MOVS     R1,R7
   \   000000D0   8170               STRB     R1,[R0, #+2]
   \   000000D2   ........           BL       __iar_get_interrupt_state
   \   000000D6   0600               MOVS     R6,R0
   \   000000D8   ........           BL       __iar_disable_interrupt
   \   000000DC   0A00               MOVS     R2,R1
   \   000000DE   00A9               ADD      R1,SP,#+0
   \   000000E0   891C               ADDS     R1,R1,#+2
   \   000000E2   0198               LDR      R0,[SP, #+4]
   \   000000E4   401C               ADDS     R0,R0,#+1
   \   000000E6   ........           BL       FlashWrite
   \   000000EA   3000               MOVS     R0,R6
   \   000000EC   ........           BL       __iar_set_interrupt_state
   \   000000F0   ........           BL       __iar_enable_interrupt
   \   000000F4   3E00               MOVS     R6,R7
   \                     ??Timetable_Event_9:
   \   000000F6   82B0               SUB      SP,SP,#+8
   \   000000F8   0D20               MOVS     R0,#+13
   \   000000FA   0090               STR      R0,[SP, #+0]
   \   000000FC   0300               MOVS     R3,R0
   \   000000FE   2A00               MOVS     R2,R5
   \   00000100   1206               LSLS     R2,R2,#+24
   \   00000102   120E               LSRS     R2,R2,#+24
   \   00000104   0221               MOVS     R1,#+2
   \   00000106   06A8               ADD      R0,SP,#+24
   \   00000108   ........           BL       Button
   \   0000010C   02B0               ADD      SP,SP,#+8
   \   0000010E   6946               MOV      R1,SP
   \   00000110   4978               LDRB     R1,[R1, #+1]
   \   00000112   0143               ORRS     R1,R1,R0
   \   00000114   2BD1               BNE      ??Timetable_Event_10
   \   00000116   8A48               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   00000118   0021               MOVS     R1,#+0
   \   0000011A   405E               LDRSH    R0,[R0, R1]
   \   0000011C   0228               CMP      R0,#+2
   \   0000011E   26DB               BLT      ??Timetable_Event_10
   \   00000120   3F28               CMP      R0,#+63
   \   00000122   24DA               BGE      ??Timetable_Event_10
   \   00000124   2700               MOVS     R7,R4
   \   00000126   8548               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000128   405E               LDRSH    R0,[R0, R1]
   \   0000012A   3900               MOVS     R1,R7
   \   0000012C   1B39               SUBS     R1,R1,#+27
   \   0000012E   8142               CMP      R1,R0
   \   00000130   1DDA               BGE      ??Timetable_Event_10
   \   00000132   2100               MOVS     R1,R4
   \   00000134   8842               CMP      R0,R1
   \   00000136   1ADA               BGE      ??Timetable_Event_10
   \   00000138   ........           BL       MenuPaint
   \   0000013C   0123               MOVS     R3,#+1
   \   0000013E   3E22               MOVS     R2,#+62
   \   00000140   B91E               SUBS     R1,R7,#+2
   \   00000142   1800               MOVS     R0,R3
   \   00000144   ........           BL       H_line
   \   00000148   1A3F               SUBS     R7,R7,#+26
   \   0000014A   0123               MOVS     R3,#+1
   \   0000014C   3E22               MOVS     R2,#+62
   \   0000014E   3900               MOVS     R1,R7
   \   00000150   1800               MOVS     R0,R3
   \   00000152   ........           BL       H_line
   \   00000156   0123               MOVS     R3,#+1
   \   00000158   1822               MOVS     R2,#+24
   \   0000015A   3900               MOVS     R1,R7
   \   0000015C   1800               MOVS     R0,R3
   \   0000015E   ........           BL       V_line
   \   00000162   0123               MOVS     R3,#+1
   \   00000164   1A22               MOVS     R2,#+26
   \   00000166   3900               MOVS     R1,R7
   \   00000168   3E20               MOVS     R0,#+62
   \   0000016A   ........           BL       V_line
   \                     ??Timetable_Event_10:
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   0D20               MOVS     R0,#+13
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   0300               MOVS     R3,R0
   \   00000176   2A00               MOVS     R2,R5
   \   00000178   1206               LSLS     R2,R2,#+24
   \   0000017A   120E               LSRS     R2,R2,#+24
   \   0000017C   0221               MOVS     R1,#+2
   \   0000017E   06A8               ADD      R0,SP,#+24
   \   00000180   ........           BL       Button
   \   00000184   02B0               ADD      SP,SP,#+8
   \   00000186   6946               MOV      R1,SP
   \   00000188   4978               LDRB     R1,[R1, #+1]
   \   0000018A   0143               ORRS     R1,R1,R0
   \   0000018C   1FD1               BNE      ??Timetable_Event_11
   \   0000018E   6E48               LDR      R0,??Timetable_Event_0+0x10  ;; X_up
   \   00000190   0021               MOVS     R1,#+0
   \   00000192   405E               LDRSH    R0,[R0, R1]
   \   00000194   0228               CMP      R0,#+2
   \   00000196   1ADB               BLT      ??Timetable_Event_11
   \   00000198   3F28               CMP      R0,#+63
   \   0000019A   18DA               BGE      ??Timetable_Event_11
   \   0000019C   6948               LDR      R0,??Timetable_Event_0+0xC  ;; Y_up
   \   0000019E   405E               LDRSH    R0,[R0, R1]
   \   000001A0   2100               MOVS     R1,R4
   \   000001A2   1B39               SUBS     R1,R1,#+27
   \   000001A4   8142               CMP      R1,R0
   \   000001A6   12DA               BGE      ??Timetable_Event_11
   \   000001A8   2100               MOVS     R1,R4
   \   000001AA   8842               CMP      R0,R1
   \   000001AC   0FDA               BGE      ??Timetable_Event_11
   \   000001AE   6748               LDR      R0,??Timetable_Event_0+0x14  ;; TextToChangeLength
   \   000001B0   0199               LDR      R1,[SP, #+4]
   \   000001B2   491C               ADDS     R1,R1,#+1
   \   000001B4   C166               STR      R1,[R0, #+108]
   \   000001B6   0199               LDR      R1,[SP, #+4]
   \   000001B8   C978               LDRB     R1,[R1, #+3]
   \   000001BA   8173               STRB     R1,[R0, #+14]
   \   000001BC   0199               LDR      R1,[SP, #+4]
   \   000001BE   0979               LDRB     R1,[R1, #+4]
   \   000001C0   C173               STRB     R1,[R0, #+15]
   \   000001C2   0199               LDR      R1,[SP, #+4]
   \   000001C4   8978               LDRB     R1,[R1, #+2]
   \   000001C6   0174               STRB     R1,[R0, #+16]
   \   000001C8   0D21               MOVS     R1,#+13
   \   000001CA   8164               STR      R1,[R0, #+72]
   \   000001CC   0126               MOVS     R6,#+1
   \                     ??Timetable_Event_11:
   \   000001CE   1B3C               SUBS     R4,R4,#+27
   \   000001D0   2406               LSLS     R4,R4,#+24
   \   000001D2   240E               LSRS     R4,R4,#+24
   \   000001D4   0298               LDR      R0,[SP, #+8]
   \   000001D6   401C               ADDS     R0,R0,#+1
   \   000001D8   0006               LSLS     R0,R0,#+24
   \   000001DA   000E               LSRS     R0,R0,#+24
   \   000001DC   0290               STR      R0,[SP, #+8]
   \                     ??Timetable_Event_7:
   \   000001DE   0298               LDR      R0,[SP, #+8]
   \   000001E0   6946               MOV      R1,SP
   \   000001E2   0978               LDRB     R1,[R1, #+0]
   \   000001E4   0006               LSLS     R0,R0,#+24
   \   000001E6   000E               LSRS     R0,R0,#+24
   \   000001E8   8842               CMP      R0,R1
   \   000001EA   00D3               BCC      .+4
   \   000001EC   40E7               B        ??Timetable_Event_4
   \   000001EE   0298               LDR      R0,[SP, #+8]
   \   000001F0   0006               LSLS     R0,R0,#+24
   \   000001F2   000E               LSRS     R0,R0,#+24
   \   000001F4   0590               STR      R0,[SP, #+20]
   \   000001F6   6946               MOV      R1,SP
   \   000001F8   0978               LDRB     R1,[R1, #+0]
   \   000001FA   491E               SUBS     R1,R1,#+1
   \   000001FC   8842               CMP      R0,R1
   \   000001FE   31D1               BNE      ??Timetable_Event_12
   \   00000200   0298               LDR      R0,[SP, #+8]
   \   00000202   0006               LSLS     R0,R0,#+24
   \   00000204   000E               LSRS     R0,R0,#+24
   \   00000206   0328               CMP      R0,#+3
   \   00000208   2CD2               BCS      ??Timetable_Event_12
   \   0000020A   82B0               SUB      SP,SP,#+8
   \   0000020C   0E20               MOVS     R0,#+14
   \   0000020E   0090               STR      R0,[SP, #+0]
   \   00000210   0B23               MOVS     R3,#+11
   \   00000212   2200               MOVS     R2,R4
   \   00000214   283A               SUBS     R2,R2,#+40
   \   00000216   1206               LSLS     R2,R2,#+24
   \   00000218   120E               LSRS     R2,R2,#+24
   \   0000021A   3521               MOVS     R1,#+53
   \   0000021C   4DA0               ADR      R0,??Timetable_Event_0+0x1C  ;; 0x2B, 0x00, 0x00, 0x00
   \   0000021E   ........           BL       Button
   \   00000222   02B0               ADD      SP,SP,#+8
   \   00000224   0500               MOVS     R5,R0
   \   00000226   0128               CMP      R0,#+1
   \   00000228   17D1               BNE      ??Timetable_Event_13
   \   0000022A   6846               MOV      R0,SP
   \   0000022C   6946               MOV      R1,SP
   \   0000022E   0978               LDRB     R1,[R1, #+0]
   \   00000230   491C               ADDS     R1,R1,#+1
   \   00000232   0170               STRB     R1,[R0, #+0]
   \   00000234   ........           BL       __iar_get_interrupt_state
   \   00000238   0600               MOVS     R6,R0
   \   0000023A   ........           BL       __iar_disable_interrupt
   \   0000023E   0122               MOVS     R2,#+1
   \   00000240   6946               MOV      R1,SP
   \   00000242   0398               LDR      R0,[SP, #+12]
   \   00000244   ........           BL       FlashWrite
   \   00000248   3000               MOVS     R0,R6
   \   0000024A   ........           BL       __iar_set_interrupt_state
   \   0000024E   ........           BL       __iar_enable_interrupt
   \   00000252   0127               MOVS     R7,#+1
   \   00000254   3E00               MOVS     R6,R7
   \   00000256   6846               MOV      R0,SP
   \   00000258   4770               STRB     R7,[R0, #+1]
   \                     ??Timetable_Event_13:
   \   0000025A   022D               CMP      R5,#+2
   \   0000025C   02D1               BNE      ??Timetable_Event_12
   \   0000025E   6846               MOV      R0,SP
   \   00000260   0121               MOVS     R1,#+1
   \   00000262   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_12:
   \   00000264   6846               MOV      R0,SP
   \   00000266   4078               LDRB     R0,[R0, #+1]
   \   00000268   0028               CMP      R0,#+0
   \   0000026A   35D1               BNE      ??Timetable_Event_14
   \   0000026C   0298               LDR      R0,[SP, #+8]
   \   0000026E   0006               LSLS     R0,R0,#+24
   \   00000270   32D0               BEQ      ??Timetable_Event_14
   \   00000272   0598               LDR      R0,[SP, #+20]
   \   00000274   6946               MOV      R1,SP
   \   00000276   0978               LDRB     R1,[R1, #+0]
   \   00000278   491E               SUBS     R1,R1,#+1
   \   0000027A   8842               CMP      R0,R1
   \   0000027C   2CD1               BNE      ??Timetable_Event_14
   \   0000027E   82B0               SUB      SP,SP,#+8
   \   00000280   0E20               MOVS     R0,#+14
   \   00000282   0090               STR      R0,[SP, #+0]
   \   00000284   0B23               MOVS     R3,#+11
   \   00000286   2200               MOVS     R2,R4
   \   00000288   0D3A               SUBS     R2,R2,#+13
   \   0000028A   1206               LSLS     R2,R2,#+24
   \   0000028C   120E               LSRS     R2,R2,#+24
   \   0000028E   3521               MOVS     R1,#+53
   \   00000290   31A0               ADR      R0,??Timetable_Event_0+0x20  ;; 0x2D, 0x00, 0x00, 0x00
   \   00000292   ........           BL       Button
   \   00000296   02B0               ADD      SP,SP,#+8
   \   00000298   0500               MOVS     R5,R0
   \   0000029A   0128               CMP      R0,#+1
   \   0000029C   17D1               BNE      ??Timetable_Event_15
   \   0000029E   6846               MOV      R0,SP
   \   000002A0   6946               MOV      R1,SP
   \   000002A2   0978               LDRB     R1,[R1, #+0]
   \   000002A4   491E               SUBS     R1,R1,#+1
   \   000002A6   0170               STRB     R1,[R0, #+0]
   \   000002A8   ........           BL       __iar_get_interrupt_state
   \   000002AC   0600               MOVS     R6,R0
   \   000002AE   ........           BL       __iar_disable_interrupt
   \   000002B2   0122               MOVS     R2,#+1
   \   000002B4   6946               MOV      R1,SP
   \   000002B6   0398               LDR      R0,[SP, #+12]
   \   000002B8   ........           BL       FlashWrite
   \   000002BC   3000               MOVS     R0,R6
   \   000002BE   ........           BL       __iar_set_interrupt_state
   \   000002C2   ........           BL       __iar_enable_interrupt
   \   000002C6   0127               MOVS     R7,#+1
   \   000002C8   3E00               MOVS     R6,R7
   \   000002CA   6846               MOV      R0,SP
   \   000002CC   4770               STRB     R7,[R0, #+1]
   \                     ??Timetable_Event_15:
   \   000002CE   022D               CMP      R5,#+2
   \   000002D0   02D1               BNE      ??Timetable_Event_14
   \   000002D2   6846               MOV      R0,SP
   \   000002D4   0121               MOVS     R1,#+1
   \   000002D6   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_14:
   \   000002D8   0598               LDR      R0,[SP, #+20]
   \   000002DA   8000               LSLS     R0,R0,#+2
   \   000002DC   0399               LDR      R1,[SP, #+12]
   \   000002DE   0818               ADDS     R0,R1,R0
   \   000002E0   0190               STR      R0,[SP, #+4]
   \   000002E2   2500               MOVS     R5,R4
   \   000002E4   0F3D               SUBS     R5,R5,#+15
   \   000002E6   4078               LDRB     R0,[R0, #+1]
   \   000002E8   0028               CMP      R0,#+0
   \   000002EA   82B0               SUB      SP,SP,#+8
   \   000002EC   00D1               BNE      .+4
   \   000002EE   DFE6               B        ??Timetable_Event_8
   \   000002F0   0D20               MOVS     R0,#+13
   \   000002F2   0090               STR      R0,[SP, #+0]
   \   000002F4   0300               MOVS     R3,R0
   \   000002F6   2A00               MOVS     R2,R5
   \   000002F8   1206               LSLS     R2,R2,#+24
   \   000002FA   120E               LSRS     R2,R2,#+24
   \   000002FC   0221               MOVS     R1,#+2
   \   000002FE   06A8               ADD      R0,SP,#+24
   \   00000300   ........           BL       Button
   \   00000304   02B0               ADD      SP,SP,#+8
   \   00000306   0128               CMP      R0,#+1
   \   00000308   00D0               BEQ      .+4
   \   0000030A   F4E6               B        ??Timetable_Event_9
   \   0000030C   6846               MOV      R0,SP
   \   0000030E   0021               MOVS     R1,#+0
   \   00000310   8170               STRB     R1,[R0, #+2]
   \   00000312   ........           BL       __iar_get_interrupt_state
   \   00000316   0600               MOVS     R6,R0
   \   00000318   ........           BL       __iar_disable_interrupt
   \   0000031C   0122               MOVS     R2,#+1
   \   0000031E   00A9               ADD      R1,SP,#+0
   \   00000320   891C               ADDS     R1,R1,#+2
   \   00000322   0198               LDR      R0,[SP, #+4]
   \   00000324   401C               ADDS     R0,R0,#+1
   \   00000326   ........           BL       FlashWrite
   \   0000032A   3000               MOVS     R0,R6
   \   0000032C   ........           BL       __iar_set_interrupt_state
   \   00000330   ........           BL       __iar_enable_interrupt
   \   00000334   0126               MOVS     R6,#+1
   \   00000336   DEE6               B        ??Timetable_Event_9
   \                     ??Timetable_Event_0:
   \   00000338   30D81300           DC32     0x13d830
   \   0000033C   ........           DC32     Y_down
   \   00000340   ........           DC32     X_down
   \   00000344   ........           DC32     Y_up
   \   00000348   ........           DC32     X_up
   \   0000034C   ........           DC32     TextToChangeLength
   \   00000350   ........           DC32     `?<Constant {130, 0}>_1`
   \   00000354   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   00000358   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   1813          
   1814          
   1815          
   1816          
   1817          
   1818          

   \                                 In section Debug.txt, align 4, keep-with-next
   1819          void TimetableSet_Paint(void)
   1820          {          
   \                     TimetableSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   89A0               ADR      R0,??TimetableSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   8648               LDR      R0,??TimetableSet_Paint_0+0x4  ;; 0x753
   \   00000020   864C               LDR      R4,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   00000022   2468               LDR      R4,[R4, #+0]
   \   00000024   9625               MOVS     R5,#+150
   \   00000026   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000028   6C43               MULS     R4,R5,R4
   \   0000002A   854D               LDR      R5,??TimetableSet_Paint_0+0xC  ;; Speech
   \   0000002C   2C19               ADDS     R4,R5,R4
   \   0000002E   2018               ADDS     R0,R4,R0
   1821                 List_Paint(Speech[g_leng].Terminarz,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000030   ........           BL       List_Paint
   \   00000034   0AB0               ADD      SP,SP,#+40
   \   00000036   0025               MOVS     R5,#+0
   1822                
   1823                char day=0;
   1824                char hlight=0;
   1825          
   1826                for (char row=0; row<3; row++)
   \   00000038   2800               MOVS     R0,R5
   \   0000003A   0190               STR      R0,[SP, #+4]
   \   0000003C   6BE0               B        ??TimetableSet_Paint_1
   1827                for (char col=0; col<3; col++)
   1828                { 
   1829                  if (++day<8)
   \                     ??TimetableSet_Paint_2:
   \   0000003E   6D1C               ADDS     R5,R5,#+1
   \   00000040   2D06               LSLS     R5,R5,#+24
   \   00000042   2D0E               LSRS     R5,R5,#+24
   \   00000044   2800               MOVS     R0,R5
   \   00000046   0828               CMP      R0,#+8
   \   00000048   5AD2               BCS      ??TimetableSet_Paint_3
   1830                  {
   1831                      H_line(4+col*18,105-row*14,19,1);
   \   0000004A   2600               MOVS     R6,R4
   \   0000004C   1220               MOVS     R0,#+18
   \   0000004E   4643               MULS     R6,R0,R6
   \   00000050   019F               LDR      R7,[SP, #+4]
   \   00000052   3F06               LSLS     R7,R7,#+24
   \   00000054   3F0E               LSRS     R7,R7,#+24
   \   00000056   0123               MOVS     R3,#+1
   \   00000058   1322               MOVS     R2,#+19
   \   0000005A   6920               MOVS     R0,#+105
   \   0000005C   0E21               MOVS     R1,#+14
   \   0000005E   7943               MULS     R1,R7,R1
   \   00000060   411A               SUBS     R1,R0,R1
   \   00000062   3000               MOVS     R0,R6
   \   00000064   001D               ADDS     R0,R0,#+4
   \   00000066   0006               LSLS     R0,R0,#+24
   \   00000068   000E               LSRS     R0,R0,#+24
   \   0000006A   ........           BL       H_line
   1832                      H_line(4+col*18,105-(row+1)*14,19,1);
   \   0000006E   7F1C               ADDS     R7,R7,#+1
   \   00000070   0E20               MOVS     R0,#+14
   \   00000072   4743               MULS     R7,R0,R7
   \   00000074   0397               STR      R7,[SP, #+12]
   \   00000076   6920               MOVS     R0,#+105
   \   00000078   3900               MOVS     R1,R7
   \   0000007A   471A               SUBS     R7,R0,R1
   \   0000007C   0123               MOVS     R3,#+1
   \   0000007E   1322               MOVS     R2,#+19
   \   00000080   3900               MOVS     R1,R7
   \   00000082   3000               MOVS     R0,R6
   \   00000084   001D               ADDS     R0,R0,#+4
   \   00000086   0006               LSLS     R0,R0,#+24
   \   00000088   000E               LSRS     R0,R0,#+24
   \   0000008A   ........           BL       H_line
   1833                      V_line(4+col*18,105-(row+1)*14,14,1);
   \   0000008E   0123               MOVS     R3,#+1
   \   00000090   0E22               MOVS     R2,#+14
   \   00000092   3900               MOVS     R1,R7
   \   00000094   3000               MOVS     R0,R6
   \   00000096   001D               ADDS     R0,R0,#+4
   \   00000098   0006               LSLS     R0,R0,#+24
   \   0000009A   000E               LSRS     R0,R0,#+24
   \   0000009C   ........           BL       V_line
   1834                      V_line(4+(col+1)*18,105-(row+1)*14,14,1);
   \   000000A0   0123               MOVS     R3,#+1
   \   000000A2   0E22               MOVS     R2,#+14
   \   000000A4   3900               MOVS     R1,R7
   \   000000A6   3000               MOVS     R0,R6
   \   000000A8   1630               ADDS     R0,R0,#+22
   \   000000AA   0006               LSLS     R0,R0,#+24
   \   000000AC   000E               LSRS     R0,R0,#+24
   \   000000AE   ........           BL       V_line
   1835                      
   1836                      hlight=(((TimetableSet_Week>>(day-1))) &0x1);
   1837                      Label((char*)DeyOfWeekStr[g_leng][day],2,6+col*18 ,105-(row+1)*14+3,2,14,0,128,hlight);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000000B2   82B0               SUB      SP,SP,#+8
   \   000000B4   6348               LDR      R0,??TimetableSet_Paint_0+0x10  ;; TextToChangeLength + 16
   \   000000B6   0078               LDRB     R0,[R0, #+0]
   \   000000B8   2900               MOVS     R1,R5
   \   000000BA   491E               SUBS     R1,R1,#+1
   \   000000BC   0841               ASRS     R0,R0,R1
   \   000000BE   0121               MOVS     R1,#+1
   \   000000C0   0140               ANDS     R1,R1,R0
   \   000000C2   0091               STR      R1,[SP, #+0]
   \   000000C4   8021               MOVS     R1,#+128
   \   000000C6   0020               MOVS     R0,#+0
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   0E21               MOVS     R1,#+14
   \   000000CC   0220               MOVS     R0,#+2
   \   000000CE   03B4               PUSH     {R0,R1}
   \   000000D0   6C20               MOVS     R0,#+108
   \   000000D2   0999               LDR      R1,[SP, #+36]
   \   000000D4   431A               SUBS     R3,R0,R1
   \   000000D6   B61D               ADDS     R6,R6,#+6
   \   000000D8   3200               MOVS     R2,R6
   \   000000DA   1206               LSLS     R2,R2,#+24
   \   000000DC   120E               LSRS     R2,R2,#+24
   \   000000DE   0221               MOVS     R1,#+2
   \   000000E0   9227               MOVS     R7,#+146
   \   000000E2   FF00               LSLS     R7,R7,#+3        ;; #+1168
   \   000000E4   2800               MOVS     R0,R5
   \   000000E6   4600               LSLS     R6,R0,#+1
   \   000000E8   B446               MOV      R12,R6
   \   000000EA   5448               LDR      R0,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   000000EC   0068               LDR      R0,[R0, #+0]
   \   000000EE   0601               LSLS     R6,R0,#+4
   \   000000F0   5548               LDR      R0,??TimetableSet_Paint_0+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   000000F2   8019               ADDS     R0,R0,R6
   \   000000F4   6646               MOV      R6,R12
   \   000000F6   8019               ADDS     R0,R0,R6
   \   000000F8   C019               ADDS     R0,R0,R7
   \   000000FA   ........           BL       Label
   \   000000FE   06B0               ADD      SP,SP,#+24
   1838          
   1839                  }
   1840                }
   \                     ??TimetableSet_Paint_3:
   \   00000100   641C               ADDS     R4,R4,#+1
   \   00000102   2406               LSLS     R4,R4,#+24
   \   00000104   240E               LSRS     R4,R4,#+24
   \                     ??TimetableSet_Paint_4:
   \   00000106   2000               MOVS     R0,R4
   \   00000108   0328               CMP      R0,#+3
   \   0000010A   98D3               BCC      ??TimetableSet_Paint_2
   \   0000010C   0198               LDR      R0,[SP, #+4]
   \   0000010E   401C               ADDS     R0,R0,#+1
   \   00000110   0006               LSLS     R0,R0,#+24
   \   00000112   000E               LSRS     R0,R0,#+24
   \   00000114   0190               STR      R0,[SP, #+4]
   \                     ??TimetableSet_Paint_1:
   \   00000116   0198               LDR      R0,[SP, #+4]
   \   00000118   0006               LSLS     R0,R0,#+24
   \   0000011A   000E               LSRS     R0,R0,#+24
   \   0000011C   0328               CMP      R0,#+3
   \   0000011E   01D2               BCS      ??TimetableSet_Paint_5
   \   00000120   0024               MOVS     R4,#+0
   \   00000122   F0E7               B        ??TimetableSet_Paint_4
   1841                
   1842                 Label(Speech[g_leng].Godzina,0,5,51,12,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??TimetableSet_Paint_5:
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   7F21               MOVS     R1,#+127
   \   0000012C   0120               MOVS     R0,#+1
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   2821               MOVS     R1,#+40
   \   00000132   0C20               MOVS     R0,#+12
   \   00000134   03B4               PUSH     {R0,R1}
   \   00000136   3323               MOVS     R3,#+51
   \   00000138   0522               MOVS     R2,#+5
   \   0000013A   0021               MOVS     R1,#+0
   \   0000013C   B420               MOVS     R0,#+180
   \   0000013E   C000               LSLS     R0,R0,#+3        ;; #+1440
   \   00000140   3E4C               LDR      R4,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   00000142   2468               LDR      R4,[R4, #+0]
   \   00000144   9625               MOVS     R5,#+150
   \   00000146   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000148   6C43               MULS     R4,R5,R4
   \   0000014A   3D4D               LDR      R5,??TimetableSet_Paint_0+0xC  ;; Speech
   \   0000014C   2C19               ADDS     R4,R5,R4
   \   0000014E   2018               ADDS     R0,R4,R0
   \   00000150   ........           BL       Label
   \   00000154   06B0               ADD      SP,SP,#+24
   1843                        
   1844                char LabelButt[2];
   1845                  
   1846                LabelButt[1]=0;
   \   00000156   6C46               MOV      R4,SP
   \   00000158   0020               MOVS     R0,#+0
   \   0000015A   6070               STRB     R0,[R4, #+1]
   1847                LabelButt[0]=30; //góra - godzina
   \   0000015C   1E25               MOVS     R5,#+30
   \   0000015E   2570               STRB     R5,[R4, #+0]
   1848                Button(LabelButt,5,35,26,15);
   \   00000160   82B0               SUB      SP,SP,#+8
   \   00000162   0F20               MOVS     R0,#+15
   \   00000164   0090               STR      R0,[SP, #+0]
   \   00000166   1A23               MOVS     R3,#+26
   \   00000168   2322               MOVS     R2,#+35
   \   0000016A   0521               MOVS     R1,#+5
   \   0000016C   02A8               ADD      R0,SP,#+8
   \   0000016E   ........           BL       Button
   \   00000172   02B0               ADD      SP,SP,#+8
   1849                LabelButt[0]=30; //góra- minuta
   \   00000174   2570               STRB     R5,[R4, #+0]
   1850                Button(LabelButt,34,35,26,15);
   \   00000176   82B0               SUB      SP,SP,#+8
   \   00000178   0F20               MOVS     R0,#+15
   \   0000017A   0090               STR      R0,[SP, #+0]
   \   0000017C   1A23               MOVS     R3,#+26
   \   0000017E   2322               MOVS     R2,#+35
   \   00000180   2221               MOVS     R1,#+34
   \   00000182   02A8               ADD      R0,SP,#+8
   \   00000184   ........           BL       Button
   \   00000188   02B0               ADD      SP,SP,#+8
   1851                
   1852                char time_char[2];
   1853                
   1854                 CharToStr2(TimetableSet_Hour, time_char); //(char Value, char *Vstring, char ill);
                        ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   \   0000018A   304D               LDR      R5,??TimetableSet_Paint_0+0x18  ;; TextToChangeLength
   \   0000018C   02A9               ADD      R1,SP,#+8
   \   0000018E   A87B               LDRB     R0,[R5, #+14]
   \   00000190   ........           BL       CharToStr2
   1855                 Label(time_char,1,29,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000194   82B0               SUB      SP,SP,#+8
   \   00000196   0020               MOVS     R0,#+0
   \   00000198   0090               STR      R0,[SP, #+0]
   \   0000019A   7F21               MOVS     R1,#+127
   \   0000019C   0120               MOVS     R0,#+1
   \   0000019E   03B4               PUSH     {R0,R1}
   \   000001A0   0F21               MOVS     R1,#+15
   \   000001A2   0220               MOVS     R0,#+2
   \   000001A4   03B4               PUSH     {R0,R1}
   \   000001A6   1923               MOVS     R3,#+25
   \   000001A8   1D22               MOVS     R2,#+29
   \   000001AA   0121               MOVS     R1,#+1
   \   000001AC   08A8               ADD      R0,SP,#+32
   \   000001AE   ........           BL       Label
   \   000001B2   06B0               ADD      SP,SP,#+24
   1856                 
   1857                 Label(":",0,32,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001B4   82B0               SUB      SP,SP,#+8
   \   000001B6   0020               MOVS     R0,#+0
   \   000001B8   0090               STR      R0,[SP, #+0]
   \   000001BA   7F21               MOVS     R1,#+127
   \   000001BC   0120               MOVS     R0,#+1
   \   000001BE   03B4               PUSH     {R0,R1}
   \   000001C0   0F21               MOVS     R1,#+15
   \   000001C2   0220               MOVS     R0,#+2
   \   000001C4   03B4               PUSH     {R0,R1}
   \   000001C6   1923               MOVS     R3,#+25
   \   000001C8   2022               MOVS     R2,#+32
   \   000001CA   0021               MOVS     R1,#+0
   \   000001CC   20A0               ADR      R0,??TimetableSet_Paint_0+0x1C  ;; 0x3A, 0x00, 0x00, 0x00
   \   000001CE   ........           BL       Label
   \   000001D2   06B0               ADD      SP,SP,#+24
   1858                 
   1859                 CharToStr2(TimetableSet_Minute, time_char); //(char Value, char *Vstring, char ill);
   \   000001D4   02A9               ADD      R1,SP,#+8
   \   000001D6   E87B               LDRB     R0,[R5, #+15]
   \   000001D8   ........           BL       CharToStr2
   1860                 Label(time_char,0,36,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001DC   82B0               SUB      SP,SP,#+8
   \   000001DE   0020               MOVS     R0,#+0
   \   000001E0   0090               STR      R0,[SP, #+0]
   \   000001E2   7F21               MOVS     R1,#+127
   \   000001E4   0120               MOVS     R0,#+1
   \   000001E6   03B4               PUSH     {R0,R1}
   \   000001E8   0F21               MOVS     R1,#+15
   \   000001EA   0220               MOVS     R0,#+2
   \   000001EC   03B4               PUSH     {R0,R1}
   \   000001EE   1923               MOVS     R3,#+25
   \   000001F0   2422               MOVS     R2,#+36
   \   000001F2   0021               MOVS     R1,#+0
   \   000001F4   08A8               ADD      R0,SP,#+32
   \   000001F6   ........           BL       Label
   \   000001FA   06B0               ADD      SP,SP,#+24
   1861                        
   1862                
   1863          
   1864                LabelButt[0]=31; //dó³ godzina
   \   000001FC   1F25               MOVS     R5,#+31
   \   000001FE   2570               STRB     R5,[R4, #+0]
   1865                Button(LabelButt,5, 9,26,15);
   \   00000200   82B0               SUB      SP,SP,#+8
   \   00000202   0F20               MOVS     R0,#+15
   \   00000204   0090               STR      R0,[SP, #+0]
   \   00000206   1A23               MOVS     R3,#+26
   \   00000208   0922               MOVS     R2,#+9
   \   0000020A   0521               MOVS     R1,#+5
   \   0000020C   02A8               ADD      R0,SP,#+8
   \   0000020E   ........           BL       Button
   \   00000212   02B0               ADD      SP,SP,#+8
   1866                LabelButt[0]=31; //dó³ minuta
   \   00000214   2570               STRB     R5,[R4, #+0]
   1867                Button(LabelButt,34, 9,26,15);
   \   00000216   82B0               SUB      SP,SP,#+8
   \   00000218   0F20               MOVS     R0,#+15
   \   0000021A   0090               STR      R0,[SP, #+0]
   \   0000021C   1A23               MOVS     R3,#+26
   \   0000021E   0922               MOVS     R2,#+9
   \   00000220   2221               MOVS     R1,#+34
   \   00000222   02A8               ADD      R0,SP,#+8
   \   00000224   ........           BL       Button
   \   00000228   02B0               ADD      SP,SP,#+8
   1868                 
   1869          
   1870                 
   1871          }//________________________________________________________________________
   \   0000022A   05B0               ADD      SP,SP,#+20
   \   0000022C   F0BC               POP      {R4-R7}
   \   0000022E   01BC               POP      {R0}
   \   00000230   0047               BX       R0               ;; return
   \   00000232   C046               Nop      
   \                     ??TimetableSet_Paint_0:
   \   00000234   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000238   53070000           DC32     0x753
   \   0000023C   ........           DC32     g_leng
   \   00000240   ........           DC32     Speech
   \   00000244   ........           DC32     TextToChangeLength + 16
   \   00000248   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   0000024C   ........           DC32     TextToChangeLength
   \   00000250   3A000000           DC8      0x3A, 0x00, 0x00, 0x00
   1872          
   1873              
   1874          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1875          void TimetableSet_Event(void)
   1876                {
   \                     TimetableSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   814D               LDR      R5,??TimetableSet_Event_0  ;; Y_down
   \   00000006   2100               MOVS     R1,R4
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   7F48               LDR      R0,??TimetableSet_Event_0+0x4  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   7E48               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   7E48               LDR      R0,??TimetableSet_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   1877          
   1878                   char Repaint=0;
   1879                  
   1880            
   1881                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   27D5               BPL      ??TimetableSet_Event_1
   1882                  {
   1883                     //zapis do flash
   1884                            unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0400               MOVS     R4,R0
   1885                            __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
   1886                            FlashWrite((char*)(&(TaskToChange->Hour)), (char*) (&(TimetableSet_Hour)), 1);
                                   ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   794D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000038   0122               MOVS     R2,#+1
   \   0000003A   2900               MOVS     R1,R5
   \   0000003C   0E31               ADDS     R1,R1,#+14
   \   0000003E   E86E               LDR      R0,[R5, #+108]
   \   00000040   801C               ADDS     R0,R0,#+2
   \   00000042   ........           BL       FlashWrite
   1887                            FlashWrite((char*)(&(TaskToChange->Minute)), (char*) (&(TimetableSet_Minute)), 1);
   \   00000046   0122               MOVS     R2,#+1
   \   00000048   2900               MOVS     R1,R5
   \   0000004A   0F31               ADDS     R1,R1,#+15
   \   0000004C   E86E               LDR      R0,[R5, #+108]
   \   0000004E   C01C               ADDS     R0,R0,#+3
   \   00000050   ........           BL       FlashWrite
   1888                            FlashWrite((char*)(&(TaskToChange->Week)), (char*) (&(TimetableSet_Week)), 1);
   \   00000054   0122               MOVS     R2,#+1
   \   00000056   2900               MOVS     R1,R5
   \   00000058   1031               ADDS     R1,R1,#+16
   \   0000005A   E86E               LDR      R0,[R5, #+108]
   \   0000005C   401C               ADDS     R0,R0,#+1
   \   0000005E   ........           BL       FlashWrite
   1889                            __set_interrupt_state(Save);
   \   00000062   2000               MOVS     R0,R4
   \   00000064   ........           BL       __iar_set_interrupt_state
   1890                            __enable_interrupt();
   \   00000068   ........           BL       __iar_enable_interrupt
   1891                            //koniec zapisu do flash
   1892                    
   1893                    
   1894                    MenuLevel=(MenuLevel/10);
   \   0000006C   A86C               LDR      R0,[R5, #+72]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   A864               STR      R0,[R5, #+72]
   1895                    MenuPaint();
   \   00000076   ........           BL       MenuPaint
   \   0000007A   C3E0               B        ??TimetableSet_Event_2
   1896                  } else if ((Y_down<112)  || (Y_up<112))
   \                     ??TimetableSet_Event_1:
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   285E               LDRSH    R0,[R5, R0]
   \   00000080   7028               CMP      R0,#+112
   \   00000082   05DB               BLT      ??TimetableSet_Event_3
   \   00000084   6348               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   00000086   0021               MOVS     R1,#+0
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   7028               CMP      R0,#+112
   \   0000008C   00DB               BLT      .+4
   \   0000008E   B9E0               B        ??TimetableSet_Event_2
   1897                  {  
   1898                      char day;
   1899                      day=0;
   1900                      for (char row=0; row<3; row++)
   \                     ??TimetableSet_Event_3:
   \   00000090   2200               MOVS     R2,R4
   \   00000092   02E0               B        ??TimetableSet_Event_4
   \                     ??TimetableSet_Event_5:
   \   00000094   521C               ADDS     R2,R2,#+1
   \   00000096   1206               LSLS     R2,R2,#+24
   \   00000098   120E               LSRS     R2,R2,#+24
   \                     ??TimetableSet_Event_4:
   \   0000009A   1000               MOVS     R0,R2
   \   0000009C   0328               CMP      R0,#+3
   \   0000009E   4CD2               BCS      ??TimetableSet_Event_6
   1901                      for (char col=0; col<3; col++)
   \   000000A0   0023               MOVS     R3,#+0
   \   000000A2   07E0               B        ??TimetableSet_Event_7
   1902                      { 
   1903                        if (++day<8)
   1904                        {
   1905                            if ((X_up>4+col*18) && (X_up<4+(col+1)*18) && (Y_up<105-row*14) && (Y_up>105-(row+1)*14))
   1906                            {
   1907                              if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                           ^
Warning[Pe068]: integer conversion resulted in a change of sign
   1908                              if ((TimetableSet_Week>>(day-1)) & 0x1)  //jezeli dzieñ aktywny to wy³acz je¿eli nie to w³¹cz
   1909                              {
   1910                                 TimetableSet_Week &= ~(1<<(day-1));
   1911                              }else{
   1912                                 TimetableSet_Week |= (1<<(day-1));
   \                     ??TimetableSet_Event_8:
   \   000000A4   0124               MOVS     R4,#+1
   \   000000A6   8440               LSLS     R4,R4,R0
   \   000000A8   0C43               ORRS     R4,R4,R1
   \   000000AA   2C74               STRB     R4,[R5, #+16]
   1913                              }
   1914          
   1915                              Repaint=1;
   \                     ??TimetableSet_Event_9:
   \   000000AC   0124               MOVS     R4,#+1
   \                     ??TimetableSet_Event_10:
   \   000000AE   5B1C               ADDS     R3,R3,#+1
   \   000000B0   1B06               LSLS     R3,R3,#+24
   \   000000B2   1B0E               LSRS     R3,R3,#+24
   \                     ??TimetableSet_Event_7:
   \   000000B4   1800               MOVS     R0,R3
   \   000000B6   0328               CMP      R0,#+3
   \   000000B8   ECD2               BCS      ??TimetableSet_Event_5
   \   000000BA   761C               ADDS     R6,R6,#+1
   \   000000BC   3606               LSLS     R6,R6,#+24
   \   000000BE   360E               LSRS     R6,R6,#+24
   \   000000C0   3000               MOVS     R0,R6
   \   000000C2   0828               CMP      R0,#+8
   \   000000C4   F3D2               BCS      ??TimetableSet_Event_10
   \   000000C6   1800               MOVS     R0,R3
   \   000000C8   1221               MOVS     R1,#+18
   \   000000CA   4843               MULS     R0,R1,R0
   \   000000CC   5249               LDR      R1,??TimetableSet_Event_0+0xC  ;; X_up
   \   000000CE   0025               MOVS     R5,#+0
   \   000000D0   495F               LDRSH    R1,[R1, R5]
   \   000000D2   0500               MOVS     R5,R0
   \   000000D4   2D1D               ADDS     R5,R5,#+4
   \   000000D6   8D42               CMP      R5,R1
   \   000000D8   E9DA               BGE      ??TimetableSet_Event_10
   \   000000DA   1630               ADDS     R0,R0,#+22
   \   000000DC   8142               CMP      R1,R0
   \   000000DE   E6DA               BGE      ??TimetableSet_Event_10
   \   000000E0   1100               MOVS     R1,R2
   \   000000E2   4C48               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   000000E4   0025               MOVS     R5,#+0
   \   000000E6   455F               LDRSH    R5,[R0, R5]
   \   000000E8   6920               MOVS     R0,#+105
   \   000000EA   0E27               MOVS     R7,#+14
   \   000000EC   4F43               MULS     R7,R1,R7
   \   000000EE   C01B               SUBS     R0,R0,R7
   \   000000F0   8542               CMP      R5,R0
   \   000000F2   DCDA               BGE      ??TimetableSet_Event_10
   \   000000F4   6920               MOVS     R0,#+105
   \   000000F6   491C               ADDS     R1,R1,#+1
   \   000000F8   0E27               MOVS     R7,#+14
   \   000000FA   7943               MULS     R1,R7,R1
   \   000000FC   401A               SUBS     R0,R0,R1
   \   000000FE   A842               CMP      R0,R5
   \   00000100   D5DA               BGE      ??TimetableSet_Event_10
   \   00000102   4748               LDR      R0,??TimetableSet_Event_0+0x14  ;; 0x13d7e9
   \   00000104   0078               LDRB     R0,[R0, #+0]
   \   00000106   0028               CMP      R0,#+0
   \   00000108   0AD1               BNE      ??TimetableSet_Event_11
   \   0000010A   4648               LDR      R0,??TimetableSet_Event_0+0x18  ;; 0xfffff430
   \   0000010C   8021               MOVS     R1,#+128
   \   0000010E   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000110   0160               STR      R1,[R0, #+0]
   \   00000112   454C               LDR      R4,??TimetableSet_Event_0+0x1C  ;; ButtonBipCounter
   \   00000114   4548               LDR      R0,??TimetableSet_Event_0+0x20  ;; g_counter
   \   00000116   03C8               LDM      R0!,{R0,R1}
   \   00000118   0025               MOVS     R5,#+0
   \   0000011A   0830               ADDS     R0,R0,#+8
   \   0000011C   6941               ADCS     R1,R1,R5
   \   0000011E   03C4               STM      R4!,{R0,R1}
   \                     ??TimetableSet_Event_11:
   \   00000120   3000               MOVS     R0,R6
   \   00000122   401E               SUBS     R0,R0,#+1
   \   00000124   3D4D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000126   297C               LDRB     R1,[R5, #+16]
   \   00000128   0C00               MOVS     R4,R1
   \   0000012A   0441               ASRS     R4,R4,R0
   \   0000012C   E407               LSLS     R4,R4,#+31
   \   0000012E   B9D5               BPL      ??TimetableSet_Event_8
   \   00000130   0124               MOVS     R4,#+1
   \   00000132   8440               LSLS     R4,R4,R0
   \   00000134   A143               BICS     R1,R1,R4
   \   00000136   2974               STRB     R1,[R5, #+16]
   \   00000138   B8E7               B        ??TimetableSet_Event_9
   1916                  
   1917                            }
   1918          
   1919                        }
   1920                      }
   1921                      
   1922                      
   1923                            char LabelButt[2];
   1924                  
   1925                      
   1926                      LabelButt[1]=0;
   \                     ??TimetableSet_Event_6:
   \   0000013A   6E46               MOV      R6,SP
   \   0000013C   0020               MOVS     R0,#+0
   \   0000013E   7070               STRB     R0,[R6, #+1]
   1927                      LabelButt[0]=30; //góra - godzina
   \   00000140   1E27               MOVS     R7,#+30
   \   00000142   3770               STRB     R7,[R6, #+0]
   1928                      if (Button(LabelButt,5,35,26,15)==2){Repaint=1; if (TimetableSet_Hour<23) TimetableSet_Hour++; else TimetableSet_Hour=0; }
   \   00000144   82B0               SUB      SP,SP,#+8
   \   00000146   0F20               MOVS     R0,#+15
   \   00000148   0090               STR      R0,[SP, #+0]
   \   0000014A   1A23               MOVS     R3,#+26
   \   0000014C   2322               MOVS     R2,#+35
   \   0000014E   0521               MOVS     R1,#+5
   \   00000150   02A8               ADD      R0,SP,#+8
   \   00000152   ........           BL       Button
   \   00000156   02B0               ADD      SP,SP,#+8
   \   00000158   0228               CMP      R0,#+2
   \   0000015A   09D1               BNE      ??TimetableSet_Event_12
   \   0000015C   0124               MOVS     R4,#+1
   \   0000015E   2F4D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000160   A87B               LDRB     R0,[R5, #+14]
   \   00000162   1728               CMP      R0,#+23
   \   00000164   02D2               BCS      ??TimetableSet_Event_13
   \   00000166   401C               ADDS     R0,R0,#+1
   \   00000168   A873               STRB     R0,[R5, #+14]
   \   0000016A   01E0               B        ??TimetableSet_Event_12
   \                     ??TimetableSet_Event_13:
   \   0000016C   0020               MOVS     R0,#+0
   \   0000016E   A873               STRB     R0,[R5, #+14]
   1929                      LabelButt[0]=30; //góra- minuta
   \                     ??TimetableSet_Event_12:
   \   00000170   3770               STRB     R7,[R6, #+0]
   1930                      if (Button(LabelButt,34,35,26,15)==2){Repaint=1; if (TimetableSet_Minute<59) TimetableSet_Minute++; else TimetableSet_Minute=0;}
   \   00000172   82B0               SUB      SP,SP,#+8
   \   00000174   0F20               MOVS     R0,#+15
   \   00000176   0090               STR      R0,[SP, #+0]
   \   00000178   1A23               MOVS     R3,#+26
   \   0000017A   2322               MOVS     R2,#+35
   \   0000017C   2221               MOVS     R1,#+34
   \   0000017E   02A8               ADD      R0,SP,#+8
   \   00000180   ........           BL       Button
   \   00000184   02B0               ADD      SP,SP,#+8
   \   00000186   0228               CMP      R0,#+2
   \   00000188   09D1               BNE      ??TimetableSet_Event_14
   \   0000018A   0124               MOVS     R4,#+1
   \   0000018C   234D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   0000018E   E87B               LDRB     R0,[R5, #+15]
   \   00000190   3B28               CMP      R0,#+59
   \   00000192   02D2               BCS      ??TimetableSet_Event_15
   \   00000194   401C               ADDS     R0,R0,#+1
   \   00000196   E873               STRB     R0,[R5, #+15]
   \   00000198   01E0               B        ??TimetableSet_Event_14
   \                     ??TimetableSet_Event_15:
   \   0000019A   0020               MOVS     R0,#+0
   \   0000019C   E873               STRB     R0,[R5, #+15]
   1931                      
   1932                
   1933                      LabelButt[0]=31; //dó³ godzina
   \                     ??TimetableSet_Event_14:
   \   0000019E   1F27               MOVS     R7,#+31
   \   000001A0   3770               STRB     R7,[R6, #+0]
   1934                      if (Button(LabelButt,5, 9,26,15)==2){Repaint=1; if (TimetableSet_Hour>0) TimetableSet_Hour--; else TimetableSet_Hour=23;}
   \   000001A2   82B0               SUB      SP,SP,#+8
   \   000001A4   0F20               MOVS     R0,#+15
   \   000001A6   0090               STR      R0,[SP, #+0]
   \   000001A8   1A23               MOVS     R3,#+26
   \   000001AA   0922               MOVS     R2,#+9
   \   000001AC   0521               MOVS     R1,#+5
   \   000001AE   02A8               ADD      R0,SP,#+8
   \   000001B0   ........           BL       Button
   \   000001B4   02B0               ADD      SP,SP,#+8
   \   000001B6   0228               CMP      R0,#+2
   \   000001B8   09D1               BNE      ??TimetableSet_Event_16
   \   000001BA   0124               MOVS     R4,#+1
   \   000001BC   174D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   000001BE   A87B               LDRB     R0,[R5, #+14]
   \   000001C0   0028               CMP      R0,#+0
   \   000001C2   02D0               BEQ      ??TimetableSet_Event_17
   \   000001C4   401E               SUBS     R0,R0,#+1
   \   000001C6   A873               STRB     R0,[R5, #+14]
   \   000001C8   01E0               B        ??TimetableSet_Event_16
   \                     ??TimetableSet_Event_17:
   \   000001CA   1720               MOVS     R0,#+23
   \   000001CC   A873               STRB     R0,[R5, #+14]
   1935                      LabelButt[0]=31; //dó³ minuta
   \                     ??TimetableSet_Event_16:
   \   000001CE   3770               STRB     R7,[R6, #+0]
   1936                      if (Button(LabelButt,34, 9,26,15)==2){Repaint=1; if (TimetableSet_Minute>0) TimetableSet_Minute--; else TimetableSet_Minute=59;}
   \   000001D0   82B0               SUB      SP,SP,#+8
   \   000001D2   0F20               MOVS     R0,#+15
   \   000001D4   0090               STR      R0,[SP, #+0]
   \   000001D6   1A23               MOVS     R3,#+26
   \   000001D8   0922               MOVS     R2,#+9
   \   000001DA   2221               MOVS     R1,#+34
   \   000001DC   02A8               ADD      R0,SP,#+8
   \   000001DE   ........           BL       Button
   \   000001E2   02B0               ADD      SP,SP,#+8
   \   000001E4   0228               CMP      R0,#+2
   \   000001E6   09D1               BNE      ??TimetableSet_Event_18
   \   000001E8   0124               MOVS     R4,#+1
   \   000001EA   0C4D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   000001EC   E87B               LDRB     R0,[R5, #+15]
   \   000001EE   0028               CMP      R0,#+0
   \   000001F0   02D0               BEQ      ??TimetableSet_Event_19
   \   000001F2   401E               SUBS     R0,R0,#+1
   \   000001F4   E873               STRB     R0,[R5, #+15]
   \   000001F6   01E0               B        ??TimetableSet_Event_18
   \                     ??TimetableSet_Event_19:
   \   000001F8   3B20               MOVS     R0,#+59
   \   000001FA   E873               STRB     R0,[R5, #+15]
   1937                          
   1938                     
   1939                     
   1940                     if (Repaint==1) MenuPaint();      
   \                     ??TimetableSet_Event_18:
   \   000001FC   012C               CMP      R4,#+1
   \   000001FE   01D1               BNE      ??TimetableSet_Event_2
   \   00000200   ........           BL       MenuPaint
   1941                    
   1942                  }
   1943          }//________________________________________________________________________
   \                     ??TimetableSet_Event_2:
   \   00000204   F8BC               POP      {R3-R7}
   \   00000206   01BC               POP      {R0}
   \   00000208   0047               BX       R0               ;; return
   \   0000020A   C046               Nop      
   \                     ??TimetableSet_Event_0:
   \   0000020C   ........           DC32     Y_down
   \   00000210   ........           DC32     X_down
   \   00000214   ........           DC32     Y_up
   \   00000218   ........           DC32     X_up
   \   0000021C   ........           DC32     TextToChangeLength
   \   00000220   E9D71300           DC32     0x13d7e9
   \   00000224   30F4FFFF           DC32     0xfffff430
   \   00000228   ........           DC32     ButtonBipCounter
   \   0000022C   ........           DC32     g_counter
   1944              
   1945          
   1946          
   1947          
   1948          
   1949          
   1950          
   1951          
   1952          
   1953          
   1954          
   1955          
   1956          
   1957          
   1958          
   1959          //*-----------------------------------------------------------------------------
   1960          //* Nazwa funkcji :    Wait_Paint
   1961          //* Funkcja strony g³ównej menu
   1962          //*-----------------------------------------------------------------------------
   1963          //* Efekt widoczny po odwierzeniu LCD (Wait_Paint)
   1964          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1965          void Wait_Paint(void)
   1966          {
   \                     Wait_Paint:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   AFB0               SUB      SP,SP,#+188
   1967              CleanCanvas(); 
   \   00000004   ........           BL       CleanCanvas
   1968              
   1969              char ekran_tab[4][46] = {
   1970                            {0,240,252,127,143,243,251,251,251,227,131,3,7,15,14,30,60,120,240,224,192,128,0,0,0,128,192,224,240,112,56,156,206,239,119,3,3,3,227,255,255,31,7,31,254,252},
   1971                            {252,255,255,0,255,255,255,255,255,255,255,254,248,48,48,0,0,0,0,1,3,39,183,182,183,183,123,253,254,254,255,255,255,1,0,0,0,0,255,255,0,0,0,0,255,255},
   1972                            {1,63,255,248,199,63,127,127,127,31,7,1,128,128,192,224,240,120,60,30,15,7,3,3,3,7,15,30,61,123,247,239,223,158,176,0,0,0,31,255,252,192,128,224,255,255},
   1973                            {0,0,1,3,3,7,7,7,7,7,7,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,7,7,7,7,7,7,3,1,0},
   1974                            };
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0A49               LDR      R1,??Wait_Paint_0  ;; `?<Constant {{0, 240, 252, 127, 143, 243, 251, `
   \   0000000C   B822               MOVS     R2,#+184
   \   0000000E   ........           BL       __aeabi_memcpy4
   1975              
   1976          
   1977              CopyToCanvasPoint((char*)ekran_tab, 20, 40, 32,46);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   2E20               MOVS     R0,#+46
   \   00000016   0090               STR      R0,[SP, #+0]
   \   00000018   2023               MOVS     R3,#+32
   \   0000001A   2822               MOVS     R2,#+40
   \   0000001C   1421               MOVS     R1,#+20
   \   0000001E   02A8               ADD      R0,SP,#+8
   \   00000020   ........           BL       CopyToCanvasPoint
   \   00000024   02B0               ADD      SP,SP,#+8
   1978          
   1979           
   1980              RepaintLCD();
   \   00000026   ........           BL       RepaintLCD
   1981              RepaintLCD();
   \   0000002A   ........           BL       RepaintLCD
   1982          }//_______________________ Koniec funkcji Wait_Paint __________________________
   \   0000002E   2FB0               ADD      SP,SP,#+188
   \   00000030   01BC               POP      {R0}
   \   00000032   0047               BX       R0               ;; return
   \                     ??Wait_Paint_0:
   \   00000034   ........           DC32     `?<Constant {{0, 240, 252, 127, 143, 243, 251, `
   1983          
   1984          
   1985          
   1986          
   1987          
   1988          
   1989          
   1990          
   1991          
   1992          //******************************************************************************************************************************
   1993          //******************************************************************************************************************************
   1994          //******************************************************************************************************************************
   1995          //******************************************************************************************************************************
   1996          //******************************************************************************************************************************
   1997          
   1998          
   1999          
   2000          
   2001          
   2002          //*-----------------------------------------------------------------------------
   2003          //* Nazwa funkcji :    MainSide_Paint
   2004          //* Funkcja strony g³ównej menu
   2005          //*-----------------------------------------------------------------------------
   2006          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   2007          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2008          void Animation_Event(void)
   2009          {
   \                     Animation_Event:
   \   00000000   01B5               PUSH     {R0,LR}
   2010            
   2011              //akcja przycisku menu
   2012              if ((X_up>1) && (X_up<60) && (Y_up>1) && (Y_up<128))
   \   00000002   0A48               LDR      R0,??Animation_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   0228               CMP      R0,#+2
   \   0000000A   0CDB               BLT      ??Animation_Event_1
   \   0000000C   3C28               CMP      R0,#+60
   \   0000000E   0ADA               BGE      ??Animation_Event_1
   \   00000010   0748               LDR      R0,??Animation_Event_0+0x4  ;; Y_up
   \   00000012   405E               LDRSH    R0,[R0, R1]
   \   00000014   0228               CMP      R0,#+2
   \   00000016   06DB               BLT      ??Animation_Event_1
   \   00000018   8028               CMP      R0,#+128
   \   0000001A   04DA               BGE      ??Animation_Event_1
   2013              {
   2014                MenuLevel=4;
   \   0000001C   0548               LDR      R0,??Animation_Event_0+0x8  ;; TextToChangeLength + 72
   \   0000001E   0421               MOVS     R1,#+4
   \   00000020   0160               STR      R1,[R0, #+0]
   2015                MenuPaint();
   \   00000022   ........           BL       MenuPaint
   2016              }
   2017          }//_______________________ Koniec funkcji MainSide_Event __________________________
   \                     ??Animation_Event_1:
   \   00000026   08BC               POP      {R3}
   \   00000028   01BC               POP      {R0}
   \   0000002A   0047               BX       R0               ;; return
   \                     ??Animation_Event_0:
   \   0000002C   ........           DC32     X_up
   \   00000030   ........           DC32     Y_up
   \   00000034   ........           DC32     TextToChangeLength + 72
   2018          
   2019          
   2020          
   2021          
   2022          
   2023          
   2024          
   2025          
   2026                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2027                void AdvanceSet_Paint(void)
   2028                {
   \                     AdvanceSet_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   2029                  
   2030                  List_Paint(Speech[g_leng].Serwis,3,15,15,0,3, "Restart", Speech[g_leng].Czysc_pamiec, Speech[g_leng].Wyjdz , 0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   1048               LDR      R0,??AdvanceSet_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   9621               MOVS     R1,#+150
   \   00000008   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000000A   4843               MULS     R0,R1,R0
   \   0000000C   0E49               LDR      R1,??AdvanceSet_Paint_0+0x4  ;; Speech
   \   0000000E   0C18               ADDS     R4,R1,R0
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   F020               MOVS     R0,#+240
   \   0000001A   C000               LSLS     R0,R0,#+3        ;; #+1920
   \   0000001C   2018               ADDS     R0,R4,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0A48               LDR      R0,??AdvanceSet_Paint_0+0x8  ;; 0x771
   \   00000022   2118               ADDS     R1,R4,R0
   \   00000024   0A48               LDR      R0,??AdvanceSet_Paint_0+0xC  ;; `?<Constant "Info ">` + 28
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   0321               MOVS     R1,#+3
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0F23               MOVS     R3,#+15
   \   00000030   1A00               MOVS     R2,R3
   \   00000032   0848               LDR      R0,??AdvanceSet_Paint_0+0x10  ;; 0x762
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   2031          
   2032                  
   2033                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000003C   10BC               POP      {R4}
   \   0000003E   01BC               POP      {R0}
   \   00000040   0047               BX       R0               ;; return
   \   00000042   C046               Nop      
   \                     ??AdvanceSet_Paint_0:
   \   00000044   ........           DC32     g_leng
   \   00000048   ........           DC32     Speech
   \   0000004C   71070000           DC32     0x771
   \   00000050   ........           DC32     `?<Constant "Info ">` + 28
   \   00000054   62070000           DC32     0x762
   2034          
   2035          
   2036                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2037                void AdvanceSet_Event(void)
   2038                {
   \                     AdvanceSet_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   2039                  //char podswietl=0;
   2040                  int ans;
   2041                  
   2042                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,15); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0F21               MOVS     R1,#+15
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0320               MOVS     R0,#+3
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   1348               LDR      R0,??AdvanceSet_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   1348               LDR      R0,??AdvanceSet_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   1348               LDR      R0,??AdvanceSet_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   1348               LDR      R0,??AdvanceSet_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   2043            
   2044                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   15D0               BEQ      ??AdvanceSet_Event_1
   2045                    {
   2046                      if (ans==1) 
   \   0000002A   0128               CMP      R0,#+1
   \   0000002C   02D1               BNE      ??AdvanceSet_Event_2
   2047                      {
   2048                        //restart
   2049                        
   2050                        AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   0000002E   0F49               LDR      R1,??AdvanceSet_Event_0+0x10  ;; 0xfffffd00
   \   00000030   0F4A               LDR      R2,??AdvanceSet_Event_0+0x14  ;; 0xa5000005
   \   00000032   0A60               STR      R2,[R1, #+0]
   2051                      }
   2052                      if (ans==2) 
   \                     ??AdvanceSet_Event_2:
   \   00000034   0228               CMP      R0,#+2
   \   00000036   05D1               BNE      ??AdvanceSet_Event_3
   2053                      {
   2054                        MenuLevel=(MenuLevel*10+1);
   \   00000038   0E49               LDR      R1,??AdvanceSet_Event_0+0x18  ;; TextToChangeLength
   \   0000003A   8A6C               LDR      R2,[R1, #+72]
   \   0000003C   0A23               MOVS     R3,#+10
   \   0000003E   5A43               MULS     R2,R3,R2
   \   00000040   521C               ADDS     R2,R2,#+1
   \   00000042   8A64               STR      R2,[R1, #+72]
   2055                        //czyæ wczystko
   2056                        
   2057                      }
   2058                      
   2059                    if ((ans<0) || (ans==3)) MenuLevel=1;
   \                     ??AdvanceSet_Event_3:
   \   00000044   0028               CMP      R0,#+0
   \   00000046   01D4               BMI      ??AdvanceSet_Event_4
   \   00000048   0328               CMP      R0,#+3
   \   0000004A   02D1               BNE      ??AdvanceSet_Event_5
   \                     ??AdvanceSet_Event_4:
   \   0000004C   0A48               LDR      R0,??AdvanceSet_Event_0+0x1C  ;; TextToChangeLength + 72
   \   0000004E   0121               MOVS     R1,#+1
   \   00000050   0160               STR      R1,[R0, #+0]
   2060                    MenuPaint();
   \                     ??AdvanceSet_Event_5:
   \   00000052   ........           BL       MenuPaint
   2061                    } 
   2062                }//_______________________________________________________________________
   \                     ??AdvanceSet_Event_1:
   \   00000056   10BC               POP      {R4}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??AdvanceSet_Event_0:
   \   0000005C   ........           DC32     Y_down
   \   00000060   ........           DC32     X_down
   \   00000064   ........           DC32     Y_up
   \   00000068   ........           DC32     X_up
   \   0000006C   00FDFFFF           DC32     0xfffffd00
   \   00000070   050000A5           DC32     0xa5000005
   \   00000074   ........           DC32     TextToChangeLength
   \   00000078   ........           DC32     TextToChangeLength + 72
   2063          
   2064          
   2065             
   2066              //Wyczyæ wsyzstko
   2067                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2068                void CleanAll_Event(void)
   2069                {
   \                     CleanAll_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   2070                  AT91S_RSTC  g_AT91S_RSTC;
   2071                  int ans;
   2072           
   2073                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   2648               LDR      R0,??CleanAll_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   2548               LDR      R0,??CleanAll_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   2548               LDR      R0,??CleanAll_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   2548               LDR      R0,??CleanAll_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   2074            
   2075                  if (ans)
   \   0000001C   3AD0               BEQ      ??CleanAll_Event_1
   2076                    {
   2077                    if (ans==2) 
   \   0000001E   022C               CMP      R4,#+2
   \   00000020   2CD1               BNE      ??CleanAll_Event_2
   2078                    {
   2079                            korekta_X.A=AT91C_IFLASH_MEM->Config.Cor_X.A;
   \   00000022   224D               LDR      R5,??CleanAll_Event_0+0x10  ;; korekta_X
   \   00000024   2248               LDR      R0,??CleanAll_Event_0+0x14  ;; 0x13d828
   \   00000026   0068               LDR      R0,[R0, #+0]
   \   00000028   2860               STR      R0,[R5, #+0]
   2080                            korekta_X.B=AT91C_IFLASH_MEM->Config.Cor_X.B;
   \   0000002A   2248               LDR      R0,??CleanAll_Event_0+0x18  ;; 0x13d82c
   \   0000002C   0068               LDR      R0,[R0, #+0]
   \   0000002E   6860               STR      R0,[R5, #+4]
   2081                            korekta_Y.A=AT91C_IFLASH_MEM->Config.Cor_Y.A;
   \   00000030   214E               LDR      R6,??CleanAll_Event_0+0x1C  ;; korekta_Y
   \   00000032   2248               LDR      R0,??CleanAll_Event_0+0x20  ;; 0x13d820
   \   00000034   0068               LDR      R0,[R0, #+0]
   \   00000036   3060               STR      R0,[R6, #+0]
   2082                            korekta_Y.B=AT91C_IFLASH_MEM->Config.Cor_Y.B;
   \   00000038   2148               LDR      R0,??CleanAll_Event_0+0x24  ;; 0x13d824
   \   0000003A   0068               LDR      R0,[R0, #+0]
   \   0000003C   7060               STR      R0,[R6, #+4]
   2083                      
   2084                      //czyæ wszystko 
   2085                            unsigned int Save = __get_interrupt_state();  
   \   0000003E   ........           BL       __iar_get_interrupt_state
   \   00000042   0700               MOVS     R7,R0
   2086                            __disable_interrupt();
   \   00000044   ........           BL       __iar_disable_interrupt
   2087                             CleanFlash((char*)(AT91C_IFLASH_MEM),64+sizeof(AT91S_MEM)+sizeof(_Config));
                                    ^
Warning[Pe223]: function "CleanFlash" declared implicitly
   \   00000048   1E49               LDR      R1,??CleanAll_Event_0+0x28  ;; 0xdb20
   \   0000004A   9820               MOVS     R0,#+152
   \   0000004C   4003               LSLS     R0,R0,#+13       ;; #+1245184
   \   0000004E   ........           BL       CleanFlash
   2088                                               
   2089                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_X)), (char*) (&(korekta_X.A)), sizeof(korekta_X));
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000052   0822               MOVS     R2,#+8
   \   00000054   2900               MOVS     R1,R5
   \   00000056   1648               LDR      R0,??CleanAll_Event_0+0x14  ;; 0x13d828
   \   00000058   ........           BL       FlashWrite
   2090                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_Y)), (char*) (&(korekta_Y.A)), sizeof(korekta_Y));
   \   0000005C   0822               MOVS     R2,#+8
   \   0000005E   3100               MOVS     R1,R6
   \   00000060   1648               LDR      R0,??CleanAll_Event_0+0x20  ;; 0x13d820
   \   00000062   ........           BL       FlashWrite
   2091                            __set_interrupt_state(Save);
   \   00000066   3800               MOVS     R0,R7
   \   00000068   ........           BL       __iar_set_interrupt_state
   2092                            __enable_interrupt();
   \   0000006C   ........           BL       __iar_enable_interrupt
   2093                            
   2094                                //restar
   2095                            AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   00000070   1548               LDR      R0,??CleanAll_Event_0+0x2C  ;; 0xfffffd00
   \   00000072   1649               LDR      R1,??CleanAll_Event_0+0x30  ;; 0xa5000005
   \   00000074   0160               STR      R1,[R0, #+0]
   2096          
   2097          
   2098                          __set_interrupt_state(Save);
   \   00000076   3800               MOVS     R0,R7
   \   00000078   ........           BL       __iar_set_interrupt_state
   2099                          //koniec zapisu do flash
   2100                          
   2101                    }
   2102                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??CleanAll_Event_2:
   \   0000007C   002C               CMP      R4,#+0
   \   0000007E   01D4               BMI      ??CleanAll_Event_3
   \   00000080   012C               CMP      R4,#+1
   \   00000082   05D1               BNE      ??CleanAll_Event_4
   \                     ??CleanAll_Event_3:
   \   00000084   124C               LDR      R4,??CleanAll_Event_0+0x34  ;; TextToChangeLength
   \   00000086   A06C               LDR      R0,[R4, #+72]
   \   00000088   0A21               MOVS     R1,#+10
   \   0000008A   ........           BL       __aeabi_idivmod
   \   0000008E   A064               STR      R0,[R4, #+72]
   2103                    MenuPaint();
   \                     ??CleanAll_Event_4:
   \   00000090   ........           BL       MenuPaint
   2104                    } 
   2105                }//_______________________________________________________________________
   \                     ??CleanAll_Event_1:
   \   00000094   F8BC               POP      {R3-R7}
   \   00000096   01BC               POP      {R0}
   \   00000098   0047               BX       R0               ;; return
   \   0000009A   C046               Nop      
   \                     ??CleanAll_Event_0:
   \   0000009C   ........           DC32     Y_down
   \   000000A0   ........           DC32     X_down
   \   000000A4   ........           DC32     Y_up
   \   000000A8   ........           DC32     X_up
   \   000000AC   ........           DC32     korekta_X
   \   000000B0   28D81300           DC32     0x13d828
   \   000000B4   2CD81300           DC32     0x13d82c
   \   000000B8   ........           DC32     korekta_Y
   \   000000BC   20D81300           DC32     0x13d820
   \   000000C0   24D81300           DC32     0x13d824
   \   000000C4   20DB0000           DC32     0xdb20
   \   000000C8   00FDFFFF           DC32     0xfffffd00
   \   000000CC   050000A5           DC32     0xa5000005
   \   000000D0   ........           DC32     TextToChangeLength
   2106              
   2107              
   2108          
   2109          
   2110          //Lista MENU ******************************************************************************************************************
   2111          
   2112          
   2113                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2114                void MenuSide_Paint(void)
   2115                {
   \                     MenuSide_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   2116                  
   2117                  #ifdef __WIFI_MODULE   
   2118                    List_Paint("MENU",7,15,0,0,3, "Program ", Speech[g_leng].Ekran, Speech[g_leng].Opcje , Speech[g_leng].Ustawienia,Speech[g_leng].Wezly,"Info ",Speech[g_leng].Siec,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   2119                  #else
   2120                    List_Paint("MENU",6,15,0,0,3, "Program ", Speech[g_leng].Ekran, Speech[g_leng].Opcje , Speech[g_leng].Ustawienia,Speech[g_leng].Wezly,"Info ",0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   1448               LDR      R0,??MenuSide_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   9621               MOVS     R1,#+150
   \   00000008   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000000A   4843               MULS     R0,R1,R0
   \   0000000C   1249               LDR      R1,??MenuSide_Paint_0+0x4  ;; Speech
   \   0000000E   0A18               ADDS     R2,R1,R0
   \   00000010   124C               LDR      R4,??MenuSide_Paint_0+0x8  ;; `?<Constant "Info ">`
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   0800               MOVS     R0,R1
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   2100               MOVS     R1,R4
   \   0000001A   1148               LDR      R0,??MenuSide_Paint_0+0xC  ;; 0x627
   \   0000001C   1018               ADDS     R0,R2,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1100               MOVS     R1,R2
   \   00000022   3C31               ADDS     R1,R1,#+60
   \   00000024   8720               MOVS     R0,#+135
   \   00000026   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000028   1018               ADDS     R0,R2,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0D48               LDR      R0,??MenuSide_Paint_0+0x10  ;; 0x4dd
   \   0000002E   1118               ADDS     R1,R2,R0
   \   00000030   2000               MOVS     R0,R4
   \   00000032   2C30               ADDS     R0,R0,#+44
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   0321               MOVS     R1,#+3
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   0300               MOVS     R3,R0
   \   0000003E   0F22               MOVS     R2,#+15
   \   00000040   0621               MOVS     R1,#+6
   \   00000042   2434               ADDS     R4,R4,#+36
   \   00000044   2000               MOVS     R0,R4
   \   00000046   ........           BL       List_Paint
   \   0000004A   0AB0               ADD      SP,SP,#+40
   2121                  #endif
   2122                                                                                                                                                              
   2123                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000004C   10BC               POP      {R4}
   \   0000004E   01BC               POP      {R0}
   \   00000050   0047               BX       R0               ;; return
   \   00000052   C046               Nop      
   \                     ??MenuSide_Paint_0:
   \   00000054   ........           DC32     g_leng
   \   00000058   ........           DC32     Speech
   \   0000005C   ........           DC32     `?<Constant "Info ">`
   \   00000060   27060000           DC32     0x627
   \   00000064   DD040000           DC32     0x4dd
   2124          
   2125          
   2126          
   2127                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2128                void MenuSide_Event(void)
   2129                {
   \                     MenuSide_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   2130                  //char podswietl=0;
   2131                  int ans;
   2132                  
   2133                  #ifdef __WIFI_MODULE  
   2134                    char il=7;
   2135                  #else
   2136                    char il=6;
   2137                  #endif
   2138          
   2139           
   2140                  ans=List_Event(X_up, Y_up, X_down, Y_down, il , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0620               MOVS     R0,#+6
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??MenuSide_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??MenuSide_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??MenuSide_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??MenuSide_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   2141            
   2142                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   15D0               BEQ      ??MenuSide_Event_1
   2143                    {
   2144                    if ((ans>0) && (ans<=il)) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   07DB               BLT      ??MenuSide_Event_2
   \   00000030   0728               CMP      R0,#+7
   \   00000032   05DA               BGE      ??MenuSide_Event_2
   \   00000034   0E4C               LDR      R4,??MenuSide_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A16C               LDR      R1,[R4, #+72]
   \   00000038   0A22               MOVS     R2,#+10
   \   0000003A   5143               MULS     R1,R2,R1
   \   0000003C   0918               ADDS     R1,R1,R0
   \   0000003E   A164               STR      R1,[R4, #+72]
   2145                    if (ans<0) {
   \                     ??MenuSide_Event_2:
   \   00000040   0028               CMP      R0,#+0
   \   00000042   07D5               BPL      ??MenuSide_Event_3
   2146                      MenuLevel=(MenuLevel/10);
   \   00000044   0A4C               LDR      R4,??MenuSide_Event_0+0x10  ;; TextToChangeLength
   \   00000046   A06C               LDR      R0,[R4, #+72]
   \   00000048   0A21               MOVS     R1,#+10
   \   0000004A   ........           BL       __aeabi_idivmod
   \   0000004E   A064               STR      R0,[R4, #+72]
   2147                     CurModifSheet=0; 
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   6071               STRB     R0,[R4, #+5]
   2148                    }
   2149                    MenuPaint();
   \                     ??MenuSide_Event_3:
   \   00000054   ........           BL       MenuPaint
   2150                    } 
   2151                }//_______________________________________________________________________
   \                     ??MenuSide_Event_1:
   \   00000058   10BC               POP      {R4}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??MenuSide_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
   2152          
   2153          
   2154          
   2155          
   2156          
   2157          //Wybór poziomu dostêpu *************************************************************************************************************
   2158                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2159                void MenuAccess_Paint(void)
   2160                {
   \                     MenuAccess_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   2161                    #define  Y   4   //przesuniêcie w dó³
   2162                    List_Paint("X",3,15,Y,5,0,Speech[g_leng].Poziom1, Speech[g_leng].Poziom2,  Speech[g_leng].Poziom3,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   1B48               LDR      R0,??MenuAccess_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   9621               MOVS     R1,#+150
   \   00000008   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000000A   4843               MULS     R0,R1,R0
   \   0000000C   1949               LDR      R1,??MenuAccess_Paint_0+0x4  ;; Speech
   \   0000000E   0A18               ADDS     R2,R1,R0
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   A520               MOVS     R0,#+165
   \   0000001A   4000               LSLS     R0,R0,#+1        ;; #+330
   \   0000001C   1018               ADDS     R0,R2,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   FF20               MOVS     R0,#+255
   \   00000022   3C30               ADDS     R0,R0,#+60       ;; #+315
   \   00000024   1118               ADDS     R1,R2,R0
   \   00000026   0F38               SUBS     R0,R0,#+15
   \   00000028   1018               ADDS     R0,R2,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   0520               MOVS     R0,#+5
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0423               MOVS     R3,#+4
   \   00000034   0F22               MOVS     R2,#+15
   \   00000036   0321               MOVS     R1,#+3
   \   00000038   0FA0               ADR      R0,??MenuAccess_Paint_0+0x8  ;; 0x58, 0x00, 0x00, 0x00
   \   0000003A   ........           BL       List_Paint
   \   0000003E   0AB0               ADD      SP,SP,#+40
   2163                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   00000040   6846               MOV      R0,SP
   \   00000042   0E49               LDR      R1,??MenuAccess_Paint_0+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`
   \   00000044   1CC9               LDM      R1!,{R2-R4}
   \   00000046   1CC0               STM      R0!,{R2-R4}
   2164                    CopyToCanvasPoint((char *)ekran_tab,49,97-Y-(15*(g_level)),8,10); 
   \   00000048   82B0               SUB      SP,SP,#+8
   \   0000004A   0A20               MOVS     R0,#+10
   \   0000004C   0090               STR      R0,[SP, #+0]
   \   0000004E   0823               MOVS     R3,#+8
   \   00000050   5D20               MOVS     R0,#+93
   \   00000052   0B49               LDR      R1,??MenuAccess_Paint_0+0x10  ;; g_level
   \   00000054   0978               LDRB     R1,[R1, #+0]
   \   00000056   0F22               MOVS     R2,#+15
   \   00000058   5143               MULS     R1,R2,R1
   \   0000005A   421A               SUBS     R2,R0,R1
   \   0000005C   1206               LSLS     R2,R2,#+24
   \   0000005E   120E               LSRS     R2,R2,#+24
   \   00000060   3121               MOVS     R1,#+49
   \   00000062   02A8               ADD      R0,SP,#+8
   \   00000064   ........           BL       CopyToCanvasPoint
   \   00000068   02B0               ADD      SP,SP,#+8
   2165                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000006A   1FBC               POP      {R0-R4}
   \   0000006C   01BC               POP      {R0}
   \   0000006E   0047               BX       R0               ;; return
   \                     ??MenuAccess_Paint_0:
   \   00000070   ........           DC32     g_leng
   \   00000074   ........           DC32     Speech
   \   00000078   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   0000007C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`
   \   00000080   ........           DC32     g_level
   2166          
   2167          
   2168                  char pass_tmp[9]={0,0,0,0,0,0,0,0,0};
   2169                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2170                void MenuAccess_Event(void)
   2171                {
   \                     MenuAccess_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   2172                  #define  Y   4   //przesuniêcie w dó³
   2173                  int ans;
   2174           
   2175                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 5,Y); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   2F4D               LDR      R5,??MenuAccess_Event_0  ;; X_up
   \   00000004   2F4E               LDR      R6,??MenuAccess_Event_0+0x4  ;; Y_up
   \   00000006   0421               MOVS     R1,#+4
   \   00000008   0520               MOVS     R0,#+5
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0320               MOVS     R0,#+3
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   2D48               LDR      R0,??MenuAccess_Event_0+0x8  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   2C48               LDR      R0,??MenuAccess_Event_0+0xC  ;; X_down
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   315E               LDRSH    R1,[R6, R0]
   \   00000020   285E               LDRSH    R0,[R5, R0]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0400               MOVS     R4,R0
   2176            
   2177                  if (ans)
   \   0000002A   36D0               BEQ      ??MenuAccess_Event_1
   2178                    {
   2179                      if ((ans>0) && (ans<4))
   \   0000002C   012C               CMP      R4,#+1
   \   0000002E   44DB               BLT      ??MenuAccess_Event_2
   \   00000030   042C               CMP      R4,#+4
   \   00000032   42DA               BGE      ??MenuAccess_Event_2
   2180                      {
   2181                        if (ans>1)
   \   00000034   022C               CMP      R4,#+2
   \   00000036   15DB               BLT      ??MenuAccess_Event_3
   2182                        {
   2183                          for (char i=0; i<8; i++) pass_tmp[i]=0;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0100               MOVS     R1,R0
   \   0000003C   06E0               B        ??MenuAccess_Event_4
   \                     ??MenuAccess_Event_5:
   \   0000003E   244B               LDR      R3,??MenuAccess_Event_0+0x10  ;; InsertPass1
   \   00000040   9A18               ADDS     R2,R3,R2
   \   00000042   0300               MOVS     R3,R0
   \   00000044   1373               STRB     R3,[R2, #+12]
   \   00000046   491C               ADDS     R1,R1,#+1
   \   00000048   0906               LSLS     R1,R1,#+24
   \   0000004A   090E               LSRS     R1,R1,#+24
   \                     ??MenuAccess_Event_4:
   \   0000004C   0A00               MOVS     R2,R1
   \   0000004E   082A               CMP      R2,#+8
   \   00000050   F5D3               BCC      ??MenuAccess_Event_5
   2184                          MenuLevel=(MenuLevel*10+ans);
   \   00000052   204D               LDR      R5,??MenuAccess_Event_0+0x14  ;; TextToChangeLength
   \   00000054   A86C               LDR      R0,[R5, #+72]
   \   00000056   0A21               MOVS     R1,#+10
   \   00000058   4843               MULS     R0,R1,R0
   \   0000005A   0019               ADDS     R0,R0,R4
   \   0000005C   A864               STR      R0,[R5, #+72]
   2185                          MenuPaint();
   \   0000005E   ........           BL       MenuPaint
   \   00000062   2AE0               B        ??MenuAccess_Event_2
   2186                         
   2187                        }
   2188                        else
   2189                        {
   2190                           MenuLevel=(MenuLevel/10);
   \                     ??MenuAccess_Event_3:
   \   00000064   1B4D               LDR      R5,??MenuAccess_Event_0+0x14  ;; TextToChangeLength
   \   00000066   A86C               LDR      R0,[R5, #+72]
   \   00000068   0A21               MOVS     R1,#+10
   \   0000006A   ........           BL       __aeabi_idivmod
   \   0000006E   A864               STR      R0,[R5, #+72]
   2191                           g_level=ans-1;
   \   00000070   1948               LDR      R0,??MenuAccess_Event_0+0x18  ;; g_level
   \   00000072   611E               SUBS     R1,R4,#+1
   \   00000074   0170               STRB     R1,[R0, #+0]
   2192                           Message_Paint(2,"","",Speech[g_leng].Poziom1,"","");
   \   00000076   19A1               ADR      R1,??MenuAccess_Event_0+0x1C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000078   0800               MOVS     R0,R1
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   9620               MOVS     R0,#+150
   \   0000007E   4000               LSLS     R0,R0,#+1        ;; #+300
   \   00000080   174A               LDR      R2,??MenuAccess_Event_0+0x20  ;; g_leng
   \   00000082   1268               LDR      R2,[R2, #+0]
   \   00000084   C300               LSLS     R3,R0,#+3
   \   00000086   5A43               MULS     R2,R3,R2
   \   00000088   164B               LDR      R3,??MenuAccess_Event_0+0x24  ;; Speech
   \   0000008A   9A18               ADDS     R2,R3,R2
   \   0000008C   1318               ADDS     R3,R2,R0
   \   0000008E   0A00               MOVS     R2,R1
   \   00000090   0220               MOVS     R0,#+2
   \   00000092   ........           BL       Message_Paint
   \   00000096   02B0               ADD      SP,SP,#+8
   \   00000098   0FE0               B        ??MenuAccess_Event_2
   2193                        }
   2194                      }
   2195                      
   2196                    }
   2197                  else
   2198                    {
   2199                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??MenuAccess_Event_1:
   \   0000009A   0020               MOVS     R0,#+0
   \   0000009C   285E               LDRSH    R0,[R5, R0]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   0BDB               BLT      ??MenuAccess_Event_2
   \   000000A2   0020               MOVS     R0,#+0
   \   000000A4   305E               LDRSH    R0,[R6, R0]
   \   000000A6   0128               CMP      R0,#+1
   \   000000A8   07DB               BLT      ??MenuAccess_Event_2
   2200                      {
   2201                        MenuLevel=(MenuLevel/10);
   \   000000AA   0A4D               LDR      R5,??MenuAccess_Event_0+0x14  ;; TextToChangeLength
   \   000000AC   A86C               LDR      R0,[R5, #+72]
   \   000000AE   0A21               MOVS     R1,#+10
   \   000000B0   ........           BL       __aeabi_idivmod
   \   000000B4   A864               STR      R0,[R5, #+72]
   2202                        MenuPaint();
   \   000000B6   ........           BL       MenuPaint
   2203                      }
   2204                    }
   2205                }//_______________________________________________________________________
   \                     ??MenuAccess_Event_2:
   \   000000BA   70BC               POP      {R4-R6}
   \   000000BC   01BC               POP      {R0}
   \   000000BE   0047               BX       R0               ;; return
   \                     ??MenuAccess_Event_0:
   \   000000C0   ........           DC32     X_up
   \   000000C4   ........           DC32     Y_up
   \   000000C8   ........           DC32     Y_down
   \   000000CC   ........           DC32     X_down
   \   000000D0   ........           DC32     InsertPass1
   \   000000D4   ........           DC32     TextToChangeLength
   \   000000D8   ........           DC32     g_level
   \   000000DC   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000000E0   ........           DC32     g_leng
   \   000000E4   ........           DC32     Speech

   \                                 In section .bss, align 4
   2206          
   2207          
   2208          
   2209          
   2210          
   2211          //has³o poziomu 1/2*************************************************************************************************************
   2212          char InsertPass1[9]= {0,0,0,0,0,0,0,0,0};
   \                     InsertPass1:
   \   00000000                      DS8 12
   \                     pass_tmp:
   \   0000000C                      DS8 12
   2213          
   2214                //*-----------------------------------------------------------------------
   2215          

   \                                 In section Debug.txt, align 4, keep-with-next
   2216                void MenuAccessPass_Paint(char level)
   2217                {
   \                     MenuAccessPass_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   2218                   Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000004   9625               MOVS     R5,#+150
   \   00000006   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000008   1E4E               LDR      R6,??MenuAccessPass_Paint_0  ;; g_leng
   \   0000000A   1F4F               LDR      R7,??MenuAccessPass_Paint_0+0x4  ;; Speech
   \   0000000C   1FA2               ADR      R2,??MenuAccessPass_Paint_0+0x8  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000E   20A1               ADR      R1,??MenuAccessPass_Paint_0+0xC  ;; 0x43, 0x00, 0x00, 0x00
   \   00000010   FF20               MOVS     R0,#+255
   \   00000012   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000014   3368               LDR      R3,[R6, #+0]
   \   00000016   6B43               MULS     R3,R5,R3
   \   00000018   FB18               ADDS     R3,R7,R3
   \   0000001A   1818               ADDS     R0,R3,R0
   \   0000001C   ........           BL       Number_Paint
   2219                    
   2220                   if (level==1) Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000020   012C               CMP      R4,#+1
   \   00000022   15D1               BNE      ??MenuAccessPass_Paint_1
   \   00000024   82B0               SUB      SP,SP,#+8
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   0090               STR      R0,[SP, #+0]
   \   0000002A   7F21               MOVS     R1,#+127
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3A21               MOVS     R1,#+58
   \   00000030   0F20               MOVS     R0,#+15
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   6623               MOVS     R3,#+102
   \   00000036   0322               MOVS     R2,#+3
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   8C46               MOV      R12,R1
   \   0000003C   FF21               MOVS     R1,#+255
   \   0000003E   D231               ADDS     R1,R1,#+210      ;; #+465
   \   00000040   3068               LDR      R0,[R6, #+0]
   \   00000042   6843               MULS     R0,R5,R0
   \   00000044   3818               ADDS     R0,R7,R0
   \   00000046   4018               ADDS     R0,R0,R1
   \   00000048   6146               MOV      R1,R12
   \   0000004A   ........           BL       Label
   \   0000004E   06B0               ADD      SP,SP,#+24
   2221                   if (level==2) Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??MenuAccessPass_Paint_1:
   \   00000050   022C               CMP      R4,#+2
   \   00000052   13D1               BNE      ??MenuAccessPass_Paint_2
   \   00000054   82B0               SUB      SP,SP,#+8
   \   00000056   0020               MOVS     R0,#+0
   \   00000058   0090               STR      R0,[SP, #+0]
   \   0000005A   7F21               MOVS     R1,#+127
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   3A21               MOVS     R1,#+58
   \   00000060   0F20               MOVS     R0,#+15
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   6623               MOVS     R3,#+102
   \   00000066   0322               MOVS     R2,#+3
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   FF20               MOVS     R0,#+255
   \   0000006C   D230               ADDS     R0,R0,#+210      ;; #+465
   \   0000006E   3468               LDR      R4,[R6, #+0]
   \   00000070   6C43               MULS     R4,R5,R4
   \   00000072   3C19               ADDS     R4,R7,R4
   \   00000074   2018               ADDS     R0,R4,R0
   \   00000076   ........           BL       Label
   \   0000007A   06B0               ADD      SP,SP,#+24
   2222                   
   2223                   
   2224                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??MenuAccessPass_Paint_2:
   \   0000007C   F8BC               POP      {R3-R7}
   \   0000007E   01BC               POP      {R0}
   \   00000080   0047               BX       R0               ;; return
   \   00000082   C046               Nop      
   \                     ??MenuAccessPass_Paint_0:
   \   00000084   ........           DC32     g_leng
   \   00000088   ........           DC32     Speech
   \   0000008C   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000090   43000000           DC8      0x43, 0x00, 0x00, 0x00
   2225          
   2226          
   2227          
   2228          
   2229                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2230                void MenuAccessPass_Event(char level)
   2231                {
   \                     MenuAccessPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   2232                  int ans;
   2233                  char roz=0;
   2234           
   2235                  
   2236                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   8648               LDR      R0,??MenuAccessPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   8648               LDR      R0,??MenuAccessPass_Event_0+0x4  ;; X_down
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   8648               LDR      R0,??MenuAccessPass_Event_0+0x8  ;; Y_up
   \   00000010   415E               LDRSH    R1,[R0, R1]
   \   00000012   8648               LDR      R0,??MenuAccessPass_Event_0+0xC  ;; X_up
   \   00000014   0024               MOVS     R4,#+0
   \   00000016   005F               LDRSH    R0,[R0, R4]
   \   00000018   ........           BL       Number_Event
   \   0000001C   0400               MOVS     R4,R0
   2237            
   2238                  if (ans>0)          {
   \   0000001E   012C               CMP      R4,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   E3E0               B        ??MenuAccessPass_Event_1
   2239                      
   2240                      if (InsertPass1[8]<=7) 
   \   00000024   824D               LDR      R5,??MenuAccessPass_Event_0+0x10  ;; InsertPass1
   \   00000026   287A               LDRB     R0,[R5, #+8]
   \   00000028   0828               CMP      R0,#+8
   \   0000002A   10D2               BCS      ??MenuAccessPass_Event_2
   2241                      { 
   2242                          if ((ans<10) || (ans==11)) 
   \   0000002C   0A2C               CMP      R4,#+10
   \   0000002E   01DB               BLT      ??MenuAccessPass_Event_3
   \   00000030   0B2C               CMP      R4,#+11
   \   00000032   0CD1               BNE      ??MenuAccessPass_Event_2
   2243                          {
   2244                            if (ans<10) InsertPass1[InsertPass1[8]]=ans+48;
   \                     ??MenuAccessPass_Event_3:
   \   00000034   0A2C               CMP      R4,#+10
   \   00000036   02DA               BGE      ??MenuAccessPass_Event_4
   \   00000038   2100               MOVS     R1,R4
   \   0000003A   3031               ADDS     R1,R1,#+48
   \   0000003C   2954               STRB     R1,[R5, R0]
   2245                            if (ans==11) InsertPass1[InsertPass1[8]]=ans+37;
   \                     ??MenuAccessPass_Event_4:
   \   0000003E   0B2C               CMP      R4,#+11
   \   00000040   02D1               BNE      ??MenuAccessPass_Event_5
   \   00000042   287A               LDRB     R0,[R5, #+8]
   \   00000044   3021               MOVS     R1,#+48
   \   00000046   2954               STRB     R1,[R5, R0]
   2246                            InsertPass1[8]++;
   \                     ??MenuAccessPass_Event_5:
   \   00000048   287A               LDRB     R0,[R5, #+8]
   \   0000004A   401C               ADDS     R0,R0,#+1
   \   0000004C   2872               STRB     R0,[R5, #+8]
   2247                          }
   2248                          
   2249                      }
   2250                      if ((ans==10) && (InsertPass1[8]>0) ) {InsertPass1[8]--; InsertPass1[InsertPass1[8]]=0;}
   \                     ??MenuAccessPass_Event_2:
   \   0000004E   0A2C               CMP      R4,#+10
   \   00000050   08D1               BNE      ??MenuAccessPass_Event_6
   \   00000052   287A               LDRB     R0,[R5, #+8]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   05D0               BEQ      ??MenuAccessPass_Event_6
   \   00000058   401E               SUBS     R0,R0,#+1
   \   0000005A   2872               STRB     R0,[R5, #+8]
   \   0000005C   0006               LSLS     R0,R0,#+24
   \   0000005E   000E               LSRS     R0,R0,#+24
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   2954               STRB     R1,[R5, R0]
   2251                      
   2252                      
   2253                     char InsertPassVar=0;
   \                     ??MenuAccessPass_Event_6:
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0100               MOVS     R1,R0
   2254                     for (char i=0; i<=8; i++)  pass_tmp[i]=0;
   \   00000068   0200               MOVS     R2,R0
   \   0000006A   0600               MOVS     R6,R0
   \   0000006C   04E0               B        ??MenuAccessPass_Event_7
   \                     ??MenuAccessPass_Event_8:
   \   0000006E   EB18               ADDS     R3,R5,R3
   \   00000070   1E73               STRB     R6,[R3, #+12]
   \   00000072   521C               ADDS     R2,R2,#+1
   \   00000074   1206               LSLS     R2,R2,#+24
   \   00000076   120E               LSRS     R2,R2,#+24
   \                     ??MenuAccessPass_Event_7:
   \   00000078   1300               MOVS     R3,R2
   \   0000007A   092B               CMP      R3,#+9
   \   0000007C   F7D3               BCC      ??MenuAccessPass_Event_8
   2255                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<8))
   \                     ??MenuAccessPass_Event_9:
   \   0000007E   0A00               MOVS     R2,R1
   \   00000080   AB5C               LDRB     R3,[R5, R2]
   \   00000082   002B               CMP      R3,#+0
   \   00000084   09D0               BEQ      ??MenuAccessPass_Event_10
   \   00000086   0B00               MOVS     R3,R1
   \   00000088   082B               CMP      R3,#+8
   \   0000008A   06D2               BCS      ??MenuAccessPass_Event_10
   2256                     {
   2257                       pass_tmp[InsertPassVar]=42; //42="*"
   \   0000008C   AA18               ADDS     R2,R5,R2
   \   0000008E   2A23               MOVS     R3,#+42
   \   00000090   1373               STRB     R3,[R2, #+12]
   2258                       InsertPassVar++;
   \   00000092   491C               ADDS     R1,R1,#+1
   \   00000094   0906               LSLS     R1,R1,#+24
   \   00000096   090E               LSRS     R1,R1,#+24
   \   00000098   F1E7               B        ??MenuAccessPass_Event_9
   2259                     }
   2260          
   2261                      
   2262                      //Sprawdzenie has³a
   2263                      if (ans==12)
   \                     ??MenuAccessPass_Event_10:
   \   0000009A   0C2C               CMP      R4,#+12
   \   0000009C   00D0               BEQ      .+4
   \   0000009E   8DE0               B        ??MenuAccessPass_Event_11
   2264                      {
   2265                        roz=0;
   \   000000A0   0100               MOVS     R1,R0
   2266                        for (int i=0; i<=7; i++)
   \   000000A2   0200               MOVS     R2,R0
   \   000000A4   13E0               B        ??MenuAccessPass_Event_12
   2267                        {
   2268                            if ((g_Password_1[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \                     ??MenuAccessPass_Event_13:
   \   000000A6   AB5C               LDRB     R3,[R5, R2]
   \   000000A8   624E               LDR      R6,??MenuAccessPass_Event_0+0x14  ;; g_Password_1
   \   000000AA   B65C               LDRB     R6,[R6, R2]
   \   000000AC   9E42               CMP      R6,R3
   \   000000AE   04D0               BEQ      ??MenuAccessPass_Event_14
   \   000000B0   6E46               MOV      R6,SP
   \   000000B2   367A               LDRB     R6,[R6, #+8]
   \   000000B4   012E               CMP      R6,#+1
   \   000000B6   00D1               BNE      ??MenuAccessPass_Event_14
   \   000000B8   0121               MOVS     R1,#+1
   2269                            if ((g_Password_2[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??MenuAccessPass_Event_14:
   \   000000BA   5F4E               LDR      R6,??MenuAccessPass_Event_0+0x18  ;; g_Password_2
   \   000000BC   B65C               LDRB     R6,[R6, R2]
   \   000000BE   9E42               CMP      R6,R3
   \   000000C0   04D0               BEQ      ??MenuAccessPass_Event_15
   \   000000C2   6B46               MOV      R3,SP
   \   000000C4   1B7A               LDRB     R3,[R3, #+8]
   \   000000C6   022B               CMP      R3,#+2
   \   000000C8   00D1               BNE      ??MenuAccessPass_Event_15
   \   000000CA   0121               MOVS     R1,#+1
   2270                        }
   \                     ??MenuAccessPass_Event_15:
   \   000000CC   521C               ADDS     R2,R2,#+1
   \                     ??MenuAccessPass_Event_12:
   \   000000CE   082A               CMP      R2,#+8
   \   000000D0   E9DB               BLT      ??MenuAccessPass_Event_13
   2271                        //has³o programisty
   2272                        if (roz)
   \   000000D2   0029               CMP      R1,#+0
   \   000000D4   19D0               BEQ      ??MenuAccessPass_Event_16
   2273                        {
   2274                          char MHS[]="060480";
   \   000000D6   6A46               MOV      R2,SP
   \   000000D8   584B               LDR      R3,??MenuAccessPass_Event_0+0x1C  ;; `?<Constant "060480">`
   \   000000DA   C0CB               LDM      R3!,{R6,R7}
   \   000000DC   C0C2               STM      R2!,{R6,R7}
   2275                            for (int i=0; i<6; i++)
   \   000000DE   0200               MOVS     R2,R0
   \   000000E0   11E0               B        ??MenuAccessPass_Event_17
   2276                            {
   2277                                if ((MHS[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \                     ??MenuAccessPass_Event_18:
   \   000000E2   AB5C               LDRB     R3,[R5, R2]
   \   000000E4   6E46               MOV      R6,SP
   \   000000E6   B65C               LDRB     R6,[R6, R2]
   \   000000E8   9E42               CMP      R6,R3
   \   000000EA   04D0               BEQ      ??MenuAccessPass_Event_19
   \   000000EC   6F46               MOV      R7,SP
   \   000000EE   3F7A               LDRB     R7,[R7, #+8]
   \   000000F0   012F               CMP      R7,#+1
   \   000000F2   00D1               BNE      ??MenuAccessPass_Event_19
   \   000000F4   0121               MOVS     R1,#+1
   2278                                if ((MHS[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??MenuAccessPass_Event_19:
   \   000000F6   9E42               CMP      R6,R3
   \   000000F8   04D0               BEQ      ??MenuAccessPass_Event_20
   \   000000FA   6B46               MOV      R3,SP
   \   000000FC   1B7A               LDRB     R3,[R3, #+8]
   \   000000FE   022B               CMP      R3,#+2
   \   00000100   00D1               BNE      ??MenuAccessPass_Event_20
   \   00000102   0121               MOVS     R1,#+1
   2279                            }              
   \                     ??MenuAccessPass_Event_20:
   \   00000104   521C               ADDS     R2,R2,#+1
   \                     ??MenuAccessPass_Event_17:
   \   00000106   062A               CMP      R2,#+6
   \   00000108   EBDB               BLT      ??MenuAccessPass_Event_18
   2280                        }
   2281                        
   2282                        
   2283                        if (roz==0)                                 //je¿eli poprawne haslo
   \                     ??MenuAccessPass_Event_16:
   \   0000010A   0029               CMP      R1,#+0
   \   0000010C   3BD1               BNE      ??MenuAccessPass_Event_21
   2284                        {
   2285                           MenuLevel=11;
   \   0000010E   4C49               LDR      R1,??MenuAccessPass_Event_0+0x20  ;; TextToChangeLength + 72
   \   00000110   0B22               MOVS     R2,#+11
   \   00000112   0A60               STR      R2,[R1, #+0]
   2286                           g_level=level;         //poziom dostêpu 1
   \   00000114   4B49               LDR      R1,??MenuAccessPass_Event_0+0x24  ;; g_level
   \   00000116   6A46               MOV      R2,SP
   \   00000118   127A               LDRB     R2,[R2, #+8]
   \   0000011A   0A70               STRB     R2,[R1, #+0]
   2287                           for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \   0000011C   0100               MOVS     R1,R0
   \   0000011E   0200               MOVS     R2,R0
   \   00000120   01E0               B        ??MenuAccessPass_Event_22
   \                     ??MenuAccessPass_Event_23:
   \   00000122   6A54               STRB     R2,[R5, R1]
   \   00000124   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_22:
   \   00000126   0829               CMP      R1,#+8
   \   00000128   FBDB               BLT      ??MenuAccessPass_Event_23
   2288                           InsertPass1[8]=0;
   \   0000012A   2872               STRB     R0,[R5, #+8]
   2289                           if (level==1)  Message_Paint(2,"","",Speech[g_leng].Poziom2,"","");
   \   0000012C   6846               MOV      R0,SP
   \   0000012E   007A               LDRB     R0,[R0, #+8]
   \   00000130   0128               CMP      R0,#+1
   \   00000132   11D1               BNE      ??MenuAccessPass_Event_24
   \   00000134   44A1               ADR      R1,??MenuAccessPass_Event_0+0x28  ;; 0x00, 0x00, 0x00, 0x00
   \   00000136   0800               MOVS     R0,R1
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   FF20               MOVS     R0,#+255
   \   0000013C   3C30               ADDS     R0,R0,#+60       ;; #+315
   \   0000013E   434A               LDR      R2,??MenuAccessPass_Event_0+0x2C  ;; g_leng
   \   00000140   1268               LDR      R2,[R2, #+0]
   \   00000142   9623               MOVS     R3,#+150
   \   00000144   1B01               LSLS     R3,R3,#+4        ;; #+2400
   \   00000146   5A43               MULS     R2,R3,R2
   \   00000148   414B               LDR      R3,??MenuAccessPass_Event_0+0x30  ;; Speech
   \   0000014A   9A18               ADDS     R2,R3,R2
   \   0000014C   1318               ADDS     R3,R2,R0
   \   0000014E   0A00               MOVS     R2,R1
   \   00000150   0220               MOVS     R0,#+2
   \   00000152   ........           BL       Message_Paint
   \   00000156   02B0               ADD      SP,SP,#+8
   2290                           if (level==2)  Message_Paint(2,"","",Speech[g_leng].Poziom3,"","");
   \                     ??MenuAccessPass_Event_24:
   \   00000158   6846               MOV      R0,SP
   \   0000015A   007A               LDRB     R0,[R0, #+8]
   \   0000015C   0228               CMP      R0,#+2
   \   0000015E   2DD1               BNE      ??MenuAccessPass_Event_11
   \   00000160   39A1               ADR      R1,??MenuAccessPass_Event_0+0x28  ;; 0x00, 0x00, 0x00, 0x00
   \   00000162   0800               MOVS     R0,R1
   \   00000164   03B4               PUSH     {R0,R1}
   \   00000166   A520               MOVS     R0,#+165
   \   00000168   4000               LSLS     R0,R0,#+1        ;; #+330
   \   0000016A   384A               LDR      R2,??MenuAccessPass_Event_0+0x2C  ;; g_leng
   \   0000016C   1268               LDR      R2,[R2, #+0]
   \   0000016E   9623               MOVS     R3,#+150
   \   00000170   1B01               LSLS     R3,R3,#+4        ;; #+2400
   \   00000172   5A43               MULS     R2,R3,R2
   \   00000174   364B               LDR      R3,??MenuAccessPass_Event_0+0x30  ;; Speech
   \   00000176   9A18               ADDS     R2,R3,R2
   \   00000178   1318               ADDS     R3,R2,R0
   \   0000017A   0A00               MOVS     R2,R1
   \   0000017C   0220               MOVS     R0,#+2
   \   0000017E   ........           BL       Message_Paint
   \   00000182   02B0               ADD      SP,SP,#+8
   \   00000184   1AE0               B        ??MenuAccessPass_Event_11
   2291                        } 
   2292                        else
   2293                        {
   2294                           //informacja o b³ednym hale
   2295                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??MenuAccessPass_Event_21:
   \   00000186   0100               MOVS     R1,R0
   \   00000188   0200               MOVS     R2,R0
   \   0000018A   01E0               B        ??MenuAccessPass_Event_25
   \                     ??MenuAccessPass_Event_26:
   \   0000018C   6A54               STRB     R2,[R5, R1]
   \   0000018E   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_25:
   \   00000190   0829               CMP      R1,#+8
   \   00000192   FBDB               BLT      ??MenuAccessPass_Event_26
   2296                           InsertPass1[8]=0;
   \   00000194   2872               STRB     R0,[R5, #+8]
   \   00000196   2D48               LDR      R0,??MenuAccessPass_Event_0+0x2C  ;; g_leng
   \   00000198   0068               LDR      R0,[R0, #+0]
   \   0000019A   9621               MOVS     R1,#+150
   \   0000019C   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000019E   4843               MULS     R0,R1,R0
   \   000001A0   2B49               LDR      R1,??MenuAccessPass_Event_0+0x30  ;; Speech
   \   000001A2   0A18               ADDS     R2,R1,R0
   \   000001A4   28A1               ADR      R1,??MenuAccessPass_Event_0+0x28  ;; 0x00, 0x00, 0x00, 0x00
   \   000001A6   0800               MOVS     R0,R1
   \   000001A8   03B4               PUSH     {R0,R1}
   \   000001AA   FF20               MOVS     R0,#+255
   \   000001AC   B430               ADDS     R0,R0,#+180      ;; #+435
   \   000001AE   1318               ADDS     R3,R2,R0
   \   000001B0   0F38               SUBS     R0,R0,#+15
   \   000001B2   1218               ADDS     R2,R2,R0
   \   000001B4   0220               MOVS     R0,#+2
   2297                        
   2298                           Message_Paint(2,"",Speech[g_leng].Bledne,Speech[g_leng].haslo,"","");
   \   000001B6   ........           BL       Message_Paint
   \   000001BA   02B0               ADD      SP,SP,#+8
   2299                        }
   2300                        //MenuPaint();
   2301                      }
   2302                     
   2303                     
   2304                      
   2305                      //MenuPaint();
   2306                      //Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   2307            
   2308                      if ((ans>=1) && (ans<=11)) 
   \                     ??MenuAccessPass_Event_11:
   \   000001BC   012C               CMP      R4,#+1
   \   000001BE   2BDB               BLT      ??MenuAccessPass_Event_27
   \   000001C0   0C2C               CMP      R4,#+12
   \   000001C2   29DA               BGE      ??MenuAccessPass_Event_27
   2309                      {
   2310                        MenuPaint();
   \                     ??MenuAccessPass_Event_28:
   \   000001C4   ........           BL       MenuPaint
   2311                        Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001C8   194D               LDR      R5,??MenuAccessPass_Event_0+0x10  ;; InsertPass1
   \   000001CA   82B0               SUB      SP,SP,#+8
   \   000001CC   0020               MOVS     R0,#+0
   \   000001CE   0090               STR      R0,[SP, #+0]
   \   000001D0   7F21               MOVS     R1,#+127
   \   000001D2   03B4               PUSH     {R0,R1}
   \   000001D4   3721               MOVS     R1,#+55
   \   000001D6   287A               LDRB     R0,[R5, #+8]
   \   000001D8   03B4               PUSH     {R0,R1}
   \   000001DA   5A23               MOVS     R3,#+90
   \   000001DC   0422               MOVS     R2,#+4
   \   000001DE   0221               MOVS     R1,#+2
   \   000001E0   0C35               ADDS     R5,R5,#+12
   \   000001E2   2800               MOVS     R0,R5
   \   000001E4   ........           BL       Label
   \   000001E8   06B0               ADD      SP,SP,#+24
   \   000001EA   15E0               B        ??MenuAccessPass_Event_27
   2312                      }
   2313                      
   2314                    }  
   2315                    else if (ans==0) 
   \                     ??MenuAccessPass_Event_1:
   \   000001EC   002C               CMP      R4,#+0
   \   000001EE   E9D0               BEQ      ??MenuAccessPass_Event_28
   2316                      {
   2317                        MenuPaint();
   2318                        Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   2319                      }
   2320                  
   2321                   else if (ans<0)
   \   000001F0   12D5               BPL      ??MenuAccessPass_Event_27
   2322                    {
   2323                        MenuLevel=(MenuLevel/100);
   \   000001F2   184C               LDR      R4,??MenuAccessPass_Event_0+0x34  ;; TextToChangeLength
   \   000001F4   A06C               LDR      R0,[R4, #+72]
   \   000001F6   6421               MOVS     R1,#+100
   \   000001F8   ........           BL       __aeabi_idivmod
   \   000001FC   A064               STR      R0,[R4, #+72]
   2324                        MenuPaint();
   \   000001FE   ........           BL       MenuPaint
   2325                        for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \   00000202   0020               MOVS     R0,#+0
   \   00000204   0100               MOVS     R1,R0
   \   00000206   0A4A               LDR      R2,??MenuAccessPass_Event_0+0x10  ;; InsertPass1
   \   00000208   0300               MOVS     R3,R0
   \   0000020A   01E0               B        ??MenuAccessPass_Event_29
   \                     ??MenuAccessPass_Event_30:
   \   0000020C   5354               STRB     R3,[R2, R1]
   \   0000020E   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_29:
   \   00000210   0829               CMP      R1,#+8
   \   00000212   FBDB               BLT      ??MenuAccessPass_Event_30
   2326                        InsertPass1[8]=0;
   \   00000214   1049               LDR      R1,??MenuAccessPass_Event_0+0x38  ;; InsertPass1 + 8
   \   00000216   0870               STRB     R0,[R1, #+0]
   2327                    }
   2328                 
   2329                }//_______________________________________________________________________
   \                     ??MenuAccessPass_Event_27:
   \   00000218   FEBC               POP      {R1-R7}
   \   0000021A   01BC               POP      {R0}
   \   0000021C   0047               BX       R0               ;; return
   \   0000021E   C046               Nop      
   \                     ??MenuAccessPass_Event_0:
   \   00000220   ........           DC32     Y_down
   \   00000224   ........           DC32     X_down
   \   00000228   ........           DC32     Y_up
   \   0000022C   ........           DC32     X_up
   \   00000230   ........           DC32     InsertPass1
   \   00000234   ........           DC32     g_Password_1
   \   00000238   ........           DC32     g_Password_2
   \   0000023C   ........           DC32     `?<Constant "060480">`
   \   00000240   ........           DC32     TextToChangeLength + 72
   \   00000244   ........           DC32     g_level
   \   00000248   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   0000024C   ........           DC32     g_leng
   \   00000250   ........           DC32     Speech
   \   00000254   ........           DC32     TextToChangeLength
   \   00000258   ........           DC32     InsertPass1 + 8
   2330          
   2331          
   2332                
   2333                
   2334          //Odrysuj procedurê **************************************************************************************************************
   2335          //*  x,y          - wspó³¿êdna lewego dolnego rogu boksu procedury
   2336          

   \                                 In section Debug.txt, align 4, keep-with-next
   2337                void PaintProc(char x, char y, _Procedure *Proc)
   2338                {   
   \                     PaintProc:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0F00               MOVS     R7,R1
   2339                    char PixPlab;
   2340                    char txt[7];
   2341                    char ind;
   2342                    switch (Proc->Type)
   \   00000006   1000               MOVS     R0,R2
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   801E               SUBS     R0,R0,#+2
   \   0000000C   3D28               CMP      R0,#+61
   \   0000000E   01D9               BLS      .+6
   \   00000010   00F035FF           BL       ??PaintProc_1
   \   00000014   01A1               ADR      R1,??PaintProc_0
   \   00000016   4000               LSLS     R0,R0,#+1
   \   00000018   095A               LDRH     R1,[R1, R0]
   \   0000001A   8F44               ADD      PC,PC,R1
   \                     ??PaintProc_0:
   \   0000001C   9E00BE000201       DC16     +158,+190,+258,+326
   \              4601        
   \   00000024   8A01CE011C02       DC16     +394,+462,+540,+122
   \              7A00        
   \   0000002C   6A028E02B202       DC16     +618,+654,+690,+3680
   \              600E        
   \   00000034   600E600E600E       DC16     +3680,+3680,+3680,+3680
   \              600E        
   \   0000003C   600E600EAE03       DC16     +3680,+3680,+942,+1178
   \              9A04        
   \   00000044   6E05B6062E06       DC16     +1390,+1718,+1582,+3680
   \              600E        
   \   0000004C   600E600E600E       DC16     +3680,+3680,+3680,+3680
   \              600E        
   \   00000054   600E600E1007       DC16     +3680,+3680,+1808,+1998
   \              CE07        
   \   0000005C   6E08C2086C09       DC16     +2158,+2242,+2412,+2614
   \              360A        
   \   00000064   BA0A1609600E       DC16     +2746,+2326,+3680,+3680
   \              600E        
   \   0000006C   600E600E600E       DC16     +3680,+3680,+3680,+2878
   \              3E0B        
   \   00000074   DA0B6A0C600E       DC16     +3034,+3178,+3680,+3680
   \              600E        
   \   0000007C   600E600E600E       DC16     +3680,+3680,+3680,+3680
   \              600E        
   \   00000084   600ECC0C820D       DC16     +3680,+3276,+3458,+3570
   \              F20D        
   \   0000008C   D602FA021E03       DC16     +726,+762,+798,+834
   \              4203        
   \   00000094   66038A03           DC16     +870,+906
   2343                    {
   2344                      
   2345                    case ProcNOT:
   2346                        CopyToCanvasPoint((char*)ProcNot_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_2:
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   0820               MOVS     R0,#+8
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   1323               MOVS     R3,#+19
   \   000000A0   FF1C               ADDS     R7,R7,#+3
   \   000000A2   3A00               MOVS     R2,R7
   \   000000A4   1206               LSLS     R2,R2,#+24
   \   000000A6   120E               LSRS     R2,R2,#+24
   \   000000A8   641C               ADDS     R4,R4,#+1
   \   000000AA   2100               MOVS     R1,R4
   \   000000AC   0906               LSLS     R1,R1,#+24
   \   000000AE   090E               LSRS     R1,R1,#+24
   \   000000B0   DB48               LDR      R0,??PaintProc_3  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 892
   \   000000B2   ........           BL       CopyToCanvasPoint
   \   000000B6   02B0               ADD      SP,SP,#+8
   \   000000B8   00F0E1FE           BL       ??PaintProc_1
   2347                    break;  
   2348                    
   2349                    case ProcConect:
   2350                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_4:
   \   000000BC   0123               MOVS     R3,#+1
   \   000000BE   1522               MOVS     R2,#+21
   \   000000C0   3900               MOVS     R1,R7
   \   000000C2   891D               ADDS     R1,R1,#+6
   \   000000C4   2000               MOVS     R0,R4
   \   000000C6   ........           BL       H_line
   2351                        H_line(x,y+7,21,1); 
   \   000000CA   0123               MOVS     R3,#+1
   \   000000CC   1522               MOVS     R2,#+21
   \   000000CE   FF1D               ADDS     R7,R7,#+7
   \   000000D0   3900               MOVS     R1,R7
   \   000000D2   2000               MOVS     R0,R4
   \   000000D4   ........           BL       H_line
   \   000000D8   00F0D1FE           BL       ??PaintProc_1
   2352                    break;  
   2353                      
   2354                    case ProcDown:
   2355                        H_line(x,y+6,11,1); 
   \                     ??PaintProc_5:
   \   000000DC   0123               MOVS     R3,#+1
   \   000000DE   0B22               MOVS     R2,#+11
   \   000000E0   3900               MOVS     R1,R7
   \   000000E2   891D               ADDS     R1,R1,#+6
   \   000000E4   2000               MOVS     R0,R4
   \   000000E6   ........           BL       H_line
   2356                        H_line(x,y+7,11,1);
   \   000000EA   0123               MOVS     R3,#+1
   \   000000EC   0B22               MOVS     R2,#+11
   \   000000EE   3900               MOVS     R1,R7
   \   000000F0   C91D               ADDS     R1,R1,#+7
   \   000000F2   2000               MOVS     R0,R4
   \   000000F4   ........           BL       H_line
   2357                        V_line(x+9,y,6,1);
   \   000000F8   0123               MOVS     R3,#+1
   \   000000FA   0622               MOVS     R2,#+6
   \   000000FC   3900               MOVS     R1,R7
   \   000000FE   2000               MOVS     R0,R4
   \   00000100   0930               ADDS     R0,R0,#+9
   \   00000102   0006               LSLS     R0,R0,#+24
   \   00000104   000E               LSRS     R0,R0,#+24
   \   00000106   ........           BL       V_line
   2358                        V_line(x+10,y,6,1); 
   \   0000010A   0123               MOVS     R3,#+1
   \   0000010C   0622               MOVS     R2,#+6
   \   0000010E   3900               MOVS     R1,R7
   \   00000110   0A34               ADDS     R4,R4,#+10
   \   00000112   2000               MOVS     R0,R4
   \   00000114   0006               LSLS     R0,R0,#+24
   \   00000116   000E               LSRS     R0,R0,#+24
   \   00000118   ........           BL       V_line
   \   0000011C   00F0AFFE           BL       ??PaintProc_1
   2359                    break;  
   2360                    
   2361                    case ProcDownRight:
   2362                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_6:
   \   00000120   0123               MOVS     R3,#+1
   \   00000122   1522               MOVS     R2,#+21
   \   00000124   3900               MOVS     R1,R7
   \   00000126   891D               ADDS     R1,R1,#+6
   \   00000128   2000               MOVS     R0,R4
   \   0000012A   ........           BL       H_line
   2363                        H_line(x,y+7,21,1);
   \   0000012E   0123               MOVS     R3,#+1
   \   00000130   1522               MOVS     R2,#+21
   \   00000132   3900               MOVS     R1,R7
   \   00000134   C91D               ADDS     R1,R1,#+7
   \   00000136   2000               MOVS     R0,R4
   \   00000138   ........           BL       H_line
   2364                        V_line(x+9,y,6,1);
   \   0000013C   0123               MOVS     R3,#+1
   \   0000013E   0622               MOVS     R2,#+6
   \   00000140   3900               MOVS     R1,R7
   \   00000142   2000               MOVS     R0,R4
   \   00000144   0930               ADDS     R0,R0,#+9
   \   00000146   0006               LSLS     R0,R0,#+24
   \   00000148   000E               LSRS     R0,R0,#+24
   \   0000014A   ........           BL       V_line
   2365                        V_line(x+10,y,6,1); 
   \   0000014E   0123               MOVS     R3,#+1
   \   00000150   0622               MOVS     R2,#+6
   \   00000152   3900               MOVS     R1,R7
   \   00000154   0A34               ADDS     R4,R4,#+10
   \   00000156   2000               MOVS     R0,R4
   \   00000158   0006               LSLS     R0,R0,#+24
   \   0000015A   000E               LSRS     R0,R0,#+24
   \   0000015C   ........           BL       V_line
   \   00000160   00F08DFE           BL       ??PaintProc_1
   2366                    break;  
   2367          
   2368                    case ProcSumLogDown:
   2369                        H_line(x,y+6,9,1); 
   \                     ??PaintProc_7:
   \   00000164   0123               MOVS     R3,#+1
   \   00000166   0922               MOVS     R2,#+9
   \   00000168   3900               MOVS     R1,R7
   \   0000016A   891D               ADDS     R1,R1,#+6
   \   0000016C   2000               MOVS     R0,R4
   \   0000016E   ........           BL       H_line
   2370                        H_line(x,y+7,9,1);
   \   00000172   0123               MOVS     R3,#+1
   \   00000174   0922               MOVS     R2,#+9
   \   00000176   3900               MOVS     R1,R7
   \   00000178   C91D               ADDS     R1,R1,#+7
   \   0000017A   2000               MOVS     R0,R4
   \   0000017C   ........           BL       H_line
   2371                        V_line(x+9,y,21,1);
   \   00000180   0123               MOVS     R3,#+1
   \   00000182   1522               MOVS     R2,#+21
   \   00000184   3900               MOVS     R1,R7
   \   00000186   2000               MOVS     R0,R4
   \   00000188   0930               ADDS     R0,R0,#+9
   \   0000018A   0006               LSLS     R0,R0,#+24
   \   0000018C   000E               LSRS     R0,R0,#+24
   \   0000018E   ........           BL       V_line
   2372                        V_line(x+10,y,21,1); 
   \   00000192   0123               MOVS     R3,#+1
   \   00000194   1522               MOVS     R2,#+21
   \   00000196   3900               MOVS     R1,R7
   \   00000198   0A34               ADDS     R4,R4,#+10
   \   0000019A   2000               MOVS     R0,R4
   \   0000019C   0006               LSLS     R0,R0,#+24
   \   0000019E   000E               LSRS     R0,R0,#+24
   \   000001A0   ........           BL       V_line
   \   000001A4   00F06BFE           BL       ??PaintProc_1
   2373                    break;  
   2374                    
   2375                    case ProcSumLogRight:
   2376                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_8:
   \   000001A8   0123               MOVS     R3,#+1
   \   000001AA   1522               MOVS     R2,#+21
   \   000001AC   3900               MOVS     R1,R7
   \   000001AE   891D               ADDS     R1,R1,#+6
   \   000001B0   2000               MOVS     R0,R4
   \   000001B2   ........           BL       H_line
   2377                        H_line(x,y+7,21,1);
   \   000001B6   FF1D               ADDS     R7,R7,#+7
   \   000001B8   0123               MOVS     R3,#+1
   \   000001BA   1522               MOVS     R2,#+21
   \   000001BC   3900               MOVS     R1,R7
   \   000001BE   2000               MOVS     R0,R4
   \   000001C0   ........           BL       H_line
   2378                        V_line(x+9,y+7,14,1);
   \   000001C4   0123               MOVS     R3,#+1
   \   000001C6   0E22               MOVS     R2,#+14
   \   000001C8   3900               MOVS     R1,R7
   \   000001CA   2000               MOVS     R0,R4
   \   000001CC   0930               ADDS     R0,R0,#+9
   \   000001CE   0006               LSLS     R0,R0,#+24
   \   000001D0   000E               LSRS     R0,R0,#+24
   \   000001D2   ........           BL       V_line
   2379                        V_line(x+10,y+7,14,1); 
   \   000001D6   0123               MOVS     R3,#+1
   \   000001D8   0E22               MOVS     R2,#+14
   \   000001DA   3900               MOVS     R1,R7
   \   000001DC   0A34               ADDS     R4,R4,#+10
   \   000001DE   2000               MOVS     R0,R4
   \   000001E0   0006               LSLS     R0,R0,#+24
   \   000001E2   000E               LSRS     R0,R0,#+24
   \   000001E4   ........           BL       V_line
   \   000001E8   00F049FE           BL       ??PaintProc_1
   2380                    break;  
   2381                    
   2382                    case ProcUpToRight:
   2383                        H_line(x+9 ,y+6,12,1); 
   \                     ??PaintProc_9:
   \   000001EC   2500               MOVS     R5,R4
   \   000001EE   0935               ADDS     R5,R5,#+9
   \   000001F0   0123               MOVS     R3,#+1
   \   000001F2   0C22               MOVS     R2,#+12
   \   000001F4   3900               MOVS     R1,R7
   \   000001F6   891D               ADDS     R1,R1,#+6
   \   000001F8   2800               MOVS     R0,R5
   \   000001FA   0006               LSLS     R0,R0,#+24
   \   000001FC   000E               LSRS     R0,R0,#+24
   \   000001FE   ........           BL       H_line
   2384                        H_line(x+9,y+7,12,1);
   \   00000202   FF1D               ADDS     R7,R7,#+7
   \   00000204   0123               MOVS     R3,#+1
   \   00000206   0C22               MOVS     R2,#+12
   \   00000208   3900               MOVS     R1,R7
   \   0000020A   2800               MOVS     R0,R5
   \   0000020C   0006               LSLS     R0,R0,#+24
   \   0000020E   000E               LSRS     R0,R0,#+24
   \   00000210   ........           BL       H_line
   2385                        V_line(x+9,y+7,15,1);
   \   00000214   0123               MOVS     R3,#+1
   \   00000216   0F22               MOVS     R2,#+15
   \   00000218   3900               MOVS     R1,R7
   \   0000021A   2800               MOVS     R0,R5
   \   0000021C   0006               LSLS     R0,R0,#+24
   \   0000021E   000E               LSRS     R0,R0,#+24
   \   00000220   ........           BL       V_line
   2386                        V_line(x+10,y+7,15,1); 
   \   00000224   0123               MOVS     R3,#+1
   \   00000226   0F22               MOVS     R2,#+15
   \   00000228   3900               MOVS     R1,R7
   \   0000022A   0A34               ADDS     R4,R4,#+10
   \   0000022C   2000               MOVS     R0,R4
   \   0000022E   0006               LSLS     R0,R0,#+24
   \   00000230   000E               LSRS     R0,R0,#+24
   \   00000232   ........           BL       V_line
   \   00000236   00F022FE           BL       ??PaintProc_1
   2387                    break;  
   2388          
   2389                    
   2390                    case ProcUpToRightDown:
   2391                        H_line(x+9 ,y+6,12,1); 
   \                     ??PaintProc_10:
   \   0000023A   2500               MOVS     R5,R4
   \   0000023C   0935               ADDS     R5,R5,#+9
   \   0000023E   0123               MOVS     R3,#+1
   \   00000240   0C22               MOVS     R2,#+12
   \   00000242   3900               MOVS     R1,R7
   \   00000244   891D               ADDS     R1,R1,#+6
   \   00000246   2800               MOVS     R0,R5
   \   00000248   0006               LSLS     R0,R0,#+24
   \   0000024A   000E               LSRS     R0,R0,#+24
   \   0000024C   ........           BL       H_line
   2392                        H_line(x+9,y+7,12,1);
   \   00000250   0123               MOVS     R3,#+1
   \   00000252   0C22               MOVS     R2,#+12
   \   00000254   3900               MOVS     R1,R7
   \   00000256   C91D               ADDS     R1,R1,#+7
   \   00000258   2800               MOVS     R0,R5
   \   0000025A   0006               LSLS     R0,R0,#+24
   \   0000025C   000E               LSRS     R0,R0,#+24
   \   0000025E   ........           BL       H_line
   2393                        V_line(x+9,y,21,1);
   \   00000262   0123               MOVS     R3,#+1
   \   00000264   1522               MOVS     R2,#+21
   \   00000266   3900               MOVS     R1,R7
   \   00000268   2800               MOVS     R0,R5
   \   0000026A   0006               LSLS     R0,R0,#+24
   \   0000026C   000E               LSRS     R0,R0,#+24
   \   0000026E   ........           BL       V_line
   2394                        V_line(x+10,y,21,1); 
   \   00000272   0123               MOVS     R3,#+1
   \   00000274   1522               MOVS     R2,#+21
   \   00000276   3900               MOVS     R1,R7
   \   00000278   0A34               ADDS     R4,R4,#+10
   \   0000027A   2000               MOVS     R0,R4
   \   0000027C   0006               LSLS     R0,R0,#+24
   \   0000027E   000E               LSRS     R0,R0,#+24
   \   00000280   ........           BL       V_line
   \   00000284   00F0FBFD           BL       ??PaintProc_1
   2395                    break;  
   2396                    
   2397                    
   2398                    case ProcToggleRS:
   2399                        CopyToCanvasPoint((char*)ProcToggleRS_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_11:
   \   00000288   82B0               SUB      SP,SP,#+8
   \   0000028A   1320               MOVS     R0,#+19
   \   0000028C   0090               STR      R0,[SP, #+0]
   \   0000028E   0300               MOVS     R3,R0
   \   00000290   BF1C               ADDS     R7,R7,#+2
   \   00000292   3A00               MOVS     R2,R7
   \   00000294   1206               LSLS     R2,R2,#+24
   \   00000296   120E               LSRS     R2,R2,#+24
   \   00000298   641C               ADDS     R4,R4,#+1
   \   0000029A   2100               MOVS     R1,R4
   \   0000029C   0906               LSLS     R1,R1,#+24
   \   0000029E   090E               LSRS     R1,R1,#+24
   \   000002A0   6048               LDR      R0,??PaintProc_3+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 376
   \   000002A2   ........           BL       CopyToCanvasPoint
   \   000002A6   02B0               ADD      SP,SP,#+8
   \   000002A8   00F0E9FD           BL       ??PaintProc_1
   2400                    break;   
   2401          
   2402                    case ProcToggleT:
   2403                        CopyToCanvasPoint((char*)ProcToggleT_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_12:
   \   000002AC   82B0               SUB      SP,SP,#+8
   \   000002AE   1320               MOVS     R0,#+19
   \   000002B0   0090               STR      R0,[SP, #+0]
   \   000002B2   0300               MOVS     R3,R0
   \   000002B4   BF1C               ADDS     R7,R7,#+2
   \   000002B6   3A00               MOVS     R2,R7
   \   000002B8   1206               LSLS     R2,R2,#+24
   \   000002BA   120E               LSRS     R2,R2,#+24
   \   000002BC   641C               ADDS     R4,R4,#+1
   \   000002BE   2100               MOVS     R1,R4
   \   000002C0   0906               LSLS     R1,R1,#+24
   \   000002C2   090E               LSRS     R1,R1,#+24
   \   000002C4   5848               LDR      R0,??PaintProc_3+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 436
   \   000002C6   ........           BL       CopyToCanvasPoint
   \   000002CA   02B0               ADD      SP,SP,#+8
   \   000002CC   00F0D7FD           BL       ??PaintProc_1
   2404                    break;             
   2405                    
   2406                    case ProcTLI1:
   2407                        CopyToCanvasPoint((char*)ProcTLI1_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_13:
   \   000002D0   82B0               SUB      SP,SP,#+8
   \   000002D2   1320               MOVS     R0,#+19
   \   000002D4   0090               STR      R0,[SP, #+0]
   \   000002D6   0300               MOVS     R3,R0
   \   000002D8   BF1C               ADDS     R7,R7,#+2
   \   000002DA   3A00               MOVS     R2,R7
   \   000002DC   1206               LSLS     R2,R2,#+24
   \   000002DE   120E               LSRS     R2,R2,#+24
   \   000002E0   641C               ADDS     R4,R4,#+1
   \   000002E2   2100               MOVS     R1,R4
   \   000002E4   0906               LSLS     R1,R1,#+24
   \   000002E6   090E               LSRS     R1,R1,#+24
   \   000002E8   5048               LDR      R0,??PaintProc_3+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 496
   \   000002EA   ........           BL       CopyToCanvasPoint
   \   000002EE   02B0               ADD      SP,SP,#+8
   \   000002F0   00F0C5FD           BL       ??PaintProc_1
   2408                    break;      
   2409          
   2410                    case ProcLim:
   2411                        CopyToCanvasPoint((char*)ProcLim_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_14:
   \   000002F4   82B0               SUB      SP,SP,#+8
   \   000002F6   1220               MOVS     R0,#+18
   \   000002F8   0090               STR      R0,[SP, #+0]
   \   000002FA   1323               MOVS     R3,#+19
   \   000002FC   FF1C               ADDS     R7,R7,#+3
   \   000002FE   3A00               MOVS     R2,R7
   \   00000300   1206               LSLS     R2,R2,#+24
   \   00000302   120E               LSRS     R2,R2,#+24
   \   00000304   641C               ADDS     R4,R4,#+1
   \   00000306   2100               MOVS     R1,R4
   \   00000308   0906               LSLS     R1,R1,#+24
   \   0000030A   090E               LSRS     R1,R1,#+24
   \   0000030C   4848               LDR      R0,??PaintProc_3+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 556
   \   0000030E   ........           BL       CopyToCanvasPoint
   \   00000312   02B0               ADD      SP,SP,#+8
   \   00000314   00F0B3FD           BL       ??PaintProc_1
   2412                    break;  
   2413                    
   2414                    
   2415                    case ProcEven:
   2416                        CopyToCanvasPoint((char*)ProcEven_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_15:
   \   00000318   82B0               SUB      SP,SP,#+8
   \   0000031A   1220               MOVS     R0,#+18
   \   0000031C   0090               STR      R0,[SP, #+0]
   \   0000031E   1323               MOVS     R3,#+19
   \   00000320   FF1C               ADDS     R7,R7,#+3
   \   00000322   3A00               MOVS     R2,R7
   \   00000324   1206               LSLS     R2,R2,#+24
   \   00000326   120E               LSRS     R2,R2,#+24
   \   00000328   641C               ADDS     R4,R4,#+1
   \   0000032A   2100               MOVS     R1,R4
   \   0000032C   0906               LSLS     R1,R1,#+24
   \   0000032E   090E               LSRS     R1,R1,#+24
   \   00000330   4048               LDR      R0,??PaintProc_3+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 612
   \   00000332   ........           BL       CopyToCanvasPoint
   \   00000336   02B0               ADD      SP,SP,#+8
   \   00000338   00F0A1FD           BL       ??PaintProc_1
   2417                    break;  
   2418                    
   2419          
   2420                    case ProcPlus:
   2421                        CopyToCanvasPoint((char*)ProcPlus_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_16:
   \   0000033C   82B0               SUB      SP,SP,#+8
   \   0000033E   1220               MOVS     R0,#+18
   \   00000340   0090               STR      R0,[SP, #+0]
   \   00000342   1323               MOVS     R3,#+19
   \   00000344   FF1C               ADDS     R7,R7,#+3
   \   00000346   3A00               MOVS     R2,R7
   \   00000348   1206               LSLS     R2,R2,#+24
   \   0000034A   120E               LSRS     R2,R2,#+24
   \   0000034C   641C               ADDS     R4,R4,#+1
   \   0000034E   2100               MOVS     R1,R4
   \   00000350   0906               LSLS     R1,R1,#+24
   \   00000352   090E               LSRS     R1,R1,#+24
   \   00000354   3848               LDR      R0,??PaintProc_3+0x18  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 668
   \   00000356   ........           BL       CopyToCanvasPoint
   \   0000035A   02B0               ADD      SP,SP,#+8
   \   0000035C   00F08FFD           BL       ??PaintProc_1
   2422                    break;  
   2423                    
   2424                    case ProcMinus:
   2425                        CopyToCanvasPoint((char*)ProcMinus_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_17:
   \   00000360   82B0               SUB      SP,SP,#+8
   \   00000362   1220               MOVS     R0,#+18
   \   00000364   0090               STR      R0,[SP, #+0]
   \   00000366   1323               MOVS     R3,#+19
   \   00000368   FF1C               ADDS     R7,R7,#+3
   \   0000036A   3A00               MOVS     R2,R7
   \   0000036C   1206               LSLS     R2,R2,#+24
   \   0000036E   120E               LSRS     R2,R2,#+24
   \   00000370   641C               ADDS     R4,R4,#+1
   \   00000372   2100               MOVS     R1,R4
   \   00000374   0906               LSLS     R1,R1,#+24
   \   00000376   090E               LSRS     R1,R1,#+24
   \   00000378   3048               LDR      R0,??PaintProc_3+0x1C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 724
   \   0000037A   ........           BL       CopyToCanvasPoint
   \   0000037E   02B0               ADD      SP,SP,#+8
   \   00000380   00F07DFD           BL       ??PaintProc_1
   2426                    break;  
   2427          
   2428                    case ProcMul:
   2429                        CopyToCanvasPoint((char*)ProcMul_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_18:
   \   00000384   82B0               SUB      SP,SP,#+8
   \   00000386   1220               MOVS     R0,#+18
   \   00000388   0090               STR      R0,[SP, #+0]
   \   0000038A   1323               MOVS     R3,#+19
   \   0000038C   FF1C               ADDS     R7,R7,#+3
   \   0000038E   3A00               MOVS     R2,R7
   \   00000390   1206               LSLS     R2,R2,#+24
   \   00000392   120E               LSRS     R2,R2,#+24
   \   00000394   641C               ADDS     R4,R4,#+1
   \   00000396   2100               MOVS     R1,R4
   \   00000398   0906               LSLS     R1,R1,#+24
   \   0000039A   090E               LSRS     R1,R1,#+24
   \   0000039C   2848               LDR      R0,??PaintProc_3+0x20  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 780
   \   0000039E   ........           BL       CopyToCanvasPoint
   \   000003A2   02B0               ADD      SP,SP,#+8
   \   000003A4   00F06BFD           BL       ??PaintProc_1
   2430                    break;  
   2431          
   2432                    case ProcDiv:
   2433                        CopyToCanvasPoint((char*)ProcDiv_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_19:
   \   000003A8   82B0               SUB      SP,SP,#+8
   \   000003AA   1220               MOVS     R0,#+18
   \   000003AC   0090               STR      R0,[SP, #+0]
   \   000003AE   1323               MOVS     R3,#+19
   \   000003B0   FF1C               ADDS     R7,R7,#+3
   \   000003B2   3A00               MOVS     R2,R7
   \   000003B4   1206               LSLS     R2,R2,#+24
   \   000003B6   120E               LSRS     R2,R2,#+24
   \   000003B8   641C               ADDS     R4,R4,#+1
   \   000003BA   2100               MOVS     R1,R4
   \   000003BC   0906               LSLS     R1,R1,#+24
   \   000003BE   090E               LSRS     R1,R1,#+24
   \   000003C0   2048               LDR      R0,??PaintProc_3+0x24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 836
   \   000003C2   ........           BL       CopyToCanvasPoint
   \   000003C6   02B0               ADD      SP,SP,#+8
   \   000003C8   00F059FD           BL       ??PaintProc_1
   2434                    break;  
   2435          
   2436                    
   2437                    case ProcStI:
   2438                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_20:
   \   000003CC   82B0               SUB      SP,SP,#+8
   \   000003CE   0820               MOVS     R0,#+8
   \   000003D0   0090               STR      R0,[SP, #+0]
   \   000003D2   1323               MOVS     R3,#+19
   \   000003D4   3A00               MOVS     R2,R7
   \   000003D6   D21C               ADDS     R2,R2,#+3
   \   000003D8   1206               LSLS     R2,R2,#+24
   \   000003DA   120E               LSRS     R2,R2,#+24
   \   000003DC   2100               MOVS     R1,R4
   \   000003DE   491C               ADDS     R1,R1,#+1
   \   000003E0   0906               LSLS     R1,R1,#+24
   \   000003E2   090E               LSRS     R1,R1,#+24
   \   000003E4   1848               LDR      R0,??PaintProc_3+0x28  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   000003E6   ........           BL       CopyToCanvasPoint
   \   000003EA   02B0               ADD      SP,SP,#+8
   2439                        
   2440                        if (Proc->Nr>=0)
   \   000003EC   0120               MOVS     R0,#+1
   \   000003EE   0299               LDR      R1,[SP, #+8]
   \   000003F0   0856               LDRSB    R0,[R1, R0]
   \   000003F2   0028               CMP      R0,#+0
   \   000003F4   2AD4               BMI      ??PaintProc_21
   2441                        {
   2442                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000003F6   0222               MOVS     R2,#+2
   \   000003F8   6946               MOV      R1,SP
   \   000003FA   0120               MOVS     R0,#+1
   \   000003FC   029B               LDR      R3,[SP, #+8]
   \   000003FE   1856               LDRSB    R0,[R3, R0]
   \   00000400   0006               LSLS     R0,R0,#+24
   \   00000402   000E               LSRS     R0,R0,#+24
   \   00000404   ........           BL       CharToStr
   \   00000408   0600               MOVS     R6,R0
   2443                          txt[ind]='.';
   \   0000040A   6D46               MOV      R5,SP
   \   0000040C   A919               ADDS     R1,R5,R6
   \   0000040E   2E20               MOVS     R0,#+46
   \   00000410   0870               STRB     R0,[R1, #+0]
   2444                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000412   0222               MOVS     R2,#+2
   \   00000414   491C               ADDS     R1,R1,#+1
   \   00000416   0298               LDR      R0,[SP, #+8]
   \   00000418   007A               LDRB     R0,[R0, #+8]
   \   0000041A   ........           BL       CharToStr
   \   0000041E   1FE0               B        ??PaintProc_22
   \                     ??PaintProc_3:
   \   00000420   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 892
   \   00000424   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 376
   \   00000428   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 436
   \   0000042C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 496
   \   00000430   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 556
   \   00000434   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 612
   \   00000438   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 668
   \   0000043C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 724
   \   00000440   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 780
   \   00000444   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 836
   \   00000448   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   2445                        }else{
   2446                          txt[0]='v';
   \                     ??PaintProc_21:
   \   0000044C   6D46               MOV      R5,SP
   \   0000044E   7620               MOVS     R0,#+118
   \   00000450   2870               STRB     R0,[R5, #+0]
   2447                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000452   0222               MOVS     R2,#+2
   \   00000454   6D1C               ADDS     R5,R5,#+1
   \   00000456   2900               MOVS     R1,R5
   \   00000458   0298               LDR      R0,[SP, #+8]
   \   0000045A   007A               LDRB     R0,[R0, #+8]
   \   0000045C   ........           BL       CharToStr
   2448                        }     
   2449                        
   2450                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_22:
   \   00000460   82B0               SUB      SP,SP,#+8
   \   00000462   0020               MOVS     R0,#+0
   \   00000464   0090               STR      R0,[SP, #+0]
   \   00000466   7821               MOVS     R1,#+120
   \   00000468   03B4               PUSH     {R0,R1}
   \   0000046A   0C21               MOVS     R1,#+12
   \   0000046C   0520               MOVS     R0,#+5
   \   0000046E   03B4               PUSH     {R0,R1}
   \   00000470   3B00               MOVS     R3,R7
   \   00000472   0B33               ADDS     R3,R3,#+11
   \   00000474   2200               MOVS     R2,R4
   \   00000476   121D               ADDS     R2,R2,#+4
   \   00000478   1206               LSLS     R2,R2,#+24
   \   0000047A   120E               LSRS     R2,R2,#+24
   \   0000047C   0221               MOVS     R1,#+2
   \   0000047E   06A8               ADD      R0,SP,#+24
   \   00000480   ........           BL       Label
   \   00000484   06B0               ADD      SP,SP,#+24
   2451                        txt[0]='I'; txt[1]=0;
   \   00000486   6D46               MOV      R5,SP
   \   00000488   4920               MOVS     R0,#+73
   \   0000048A   2870               STRB     R0,[R5, #+0]
   \   0000048C   0020               MOVS     R0,#+0
   \   0000048E   6870               STRB     R0,[R5, #+1]
   2452                        Label(txt,2,x+6,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000490   82B0               SUB      SP,SP,#+8
   \   00000492   0090               STR      R0,[SP, #+0]
   \   00000494   7821               MOVS     R1,#+120
   \   00000496   03B4               PUSH     {R0,R1}
   \   00000498   0621               MOVS     R1,#+6
   \   0000049A   0120               MOVS     R0,#+1
   \   0000049C   03B4               PUSH     {R0,R1}
   \   0000049E   BF1C               ADDS     R7,R7,#+2
   \   000004A0   3B00               MOVS     R3,R7
   \   000004A2   A41D               ADDS     R4,R4,#+6
   \   000004A4   2200               MOVS     R2,R4
   \   000004A6   1206               LSLS     R2,R2,#+24
   \   000004A8   120E               LSRS     R2,R2,#+24
   \   000004AA   0221               MOVS     R1,#+2
   \   000004AC   06A8               ADD      R0,SP,#+24
   \   000004AE   ........           BL       Label
   \   000004B2   06B0               ADD      SP,SP,#+24
   \   000004B4   00F0E3FC           BL       ??PaintProc_1
   2453                    break;
   2454          
   2455                    case ProcStNI:
   2456                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_23:
   \   000004B8   82B0               SUB      SP,SP,#+8
   \   000004BA   0820               MOVS     R0,#+8
   \   000004BC   0090               STR      R0,[SP, #+0]
   \   000004BE   1323               MOVS     R3,#+19
   \   000004C0   3A00               MOVS     R2,R7
   \   000004C2   D21C               ADDS     R2,R2,#+3
   \   000004C4   1206               LSLS     R2,R2,#+24
   \   000004C6   120E               LSRS     R2,R2,#+24
   \   000004C8   2100               MOVS     R1,R4
   \   000004CA   491C               ADDS     R1,R1,#+1
   \   000004CC   0906               LSLS     R1,R1,#+24
   \   000004CE   090E               LSRS     R1,R1,#+24
   \   000004D0   EA48               LDR      R0,??PaintProc_24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   000004D2   ........           BL       CopyToCanvasPoint
   \   000004D6   02B0               ADD      SP,SP,#+8
   2457                        H_line(x+7,y+11,6,1);
   \   000004D8   0123               MOVS     R3,#+1
   \   000004DA   0622               MOVS     R2,#+6
   \   000004DC   3900               MOVS     R1,R7
   \   000004DE   0B31               ADDS     R1,R1,#+11
   \   000004E0   2000               MOVS     R0,R4
   \   000004E2   C01D               ADDS     R0,R0,#+7
   \   000004E4   0006               LSLS     R0,R0,#+24
   \   000004E6   000E               LSRS     R0,R0,#+24
   \   000004E8   ........           BL       H_line
   2458                        
   2459                        if (Proc->Nr>=0)
   \   000004EC   0120               MOVS     R0,#+1
   \   000004EE   0299               LDR      R1,[SP, #+8]
   \   000004F0   0856               LDRSB    R0,[R1, R0]
   \   000004F2   0028               CMP      R0,#+0
   \   000004F4   14D4               BMI      ??PaintProc_25
   2460                        {
   2461                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000004F6   0222               MOVS     R2,#+2
   \   000004F8   6946               MOV      R1,SP
   \   000004FA   0120               MOVS     R0,#+1
   \   000004FC   029B               LDR      R3,[SP, #+8]
   \   000004FE   1856               LDRSB    R0,[R3, R0]
   \   00000500   0006               LSLS     R0,R0,#+24
   \   00000502   000E               LSRS     R0,R0,#+24
   \   00000504   ........           BL       CharToStr
   \   00000508   0600               MOVS     R6,R0
   2462                          txt[ind]='.';
   \   0000050A   6D46               MOV      R5,SP
   \   0000050C   A919               ADDS     R1,R5,R6
   \   0000050E   2E20               MOVS     R0,#+46
   \   00000510   0870               STRB     R0,[R1, #+0]
   2463                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000512   0222               MOVS     R2,#+2
   \   00000514   491C               ADDS     R1,R1,#+1
   \   00000516   0298               LDR      R0,[SP, #+8]
   \   00000518   007A               LDRB     R0,[R0, #+8]
   \   0000051A   ........           BL       CharToStr
   \   0000051E   09E0               B        ??PaintProc_26
   2464                        }else{
   2465                          txt[0]='v';
   \                     ??PaintProc_25:
   \   00000520   6D46               MOV      R5,SP
   \   00000522   7620               MOVS     R0,#+118
   \   00000524   2870               STRB     R0,[R5, #+0]
   2466                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000526   0222               MOVS     R2,#+2
   \   00000528   6D1C               ADDS     R5,R5,#+1
   \   0000052A   2900               MOVS     R1,R5
   \   0000052C   0298               LDR      R0,[SP, #+8]
   \   0000052E   007A               LDRB     R0,[R0, #+8]
   \   00000530   ........           BL       CharToStr
   2467                        }   
   2468                        Label(txt,2,x+4,y+12,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_26:
   \   00000534   82B0               SUB      SP,SP,#+8
   \   00000536   0020               MOVS     R0,#+0
   \   00000538   0090               STR      R0,[SP, #+0]
   \   0000053A   7821               MOVS     R1,#+120
   \   0000053C   03B4               PUSH     {R0,R1}
   \   0000053E   0C21               MOVS     R1,#+12
   \   00000540   0520               MOVS     R0,#+5
   \   00000542   03B4               PUSH     {R0,R1}
   \   00000544   3B00               MOVS     R3,R7
   \   00000546   0C33               ADDS     R3,R3,#+12
   \   00000548   2200               MOVS     R2,R4
   \   0000054A   121D               ADDS     R2,R2,#+4
   \   0000054C   1206               LSLS     R2,R2,#+24
   \   0000054E   120E               LSRS     R2,R2,#+24
   \   00000550   0221               MOVS     R1,#+2
   \   00000552   06A8               ADD      R0,SP,#+24
   \   00000554   ........           BL       Label
   \   00000558   06B0               ADD      SP,SP,#+24
   2469                        txt[0]='I'; txt[1]=0;
   \   0000055A   6D46               MOV      R5,SP
   \   0000055C   4920               MOVS     R0,#+73
   \   0000055E   2870               STRB     R0,[R5, #+0]
   \   00000560   0020               MOVS     R0,#+0
   \   00000562   6870               STRB     R0,[R5, #+1]
   2470                        Label(txt,2,x+6,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000564   82B0               SUB      SP,SP,#+8
   \   00000566   0090               STR      R0,[SP, #+0]
   \   00000568   7821               MOVS     R1,#+120
   \   0000056A   03B4               PUSH     {R0,R1}
   \   0000056C   0621               MOVS     R1,#+6
   \   0000056E   0120               MOVS     R0,#+1
   \   00000570   03B4               PUSH     {R0,R1}
   \   00000572   BF1C               ADDS     R7,R7,#+2
   \   00000574   3B00               MOVS     R3,R7
   \   00000576   A41D               ADDS     R4,R4,#+6
   \   00000578   2200               MOVS     R2,R4
   \   0000057A   1206               LSLS     R2,R2,#+24
   \   0000057C   120E               LSRS     R2,R2,#+24
   \   0000057E   0221               MOVS     R1,#+2
   \   00000580   06A8               ADD      R0,SP,#+24
   \   00000582   ........           BL       Label
   \   00000586   06B0               ADD      SP,SP,#+24
   \   00000588   00F079FC           BL       ??PaintProc_1
   2471                    break;
   2472                    
   2473                    
   2474                    case ProcStQ:
   2475                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_27:
   \   0000058C   82B0               SUB      SP,SP,#+8
   \   0000058E   0820               MOVS     R0,#+8
   \   00000590   0090               STR      R0,[SP, #+0]
   \   00000592   1323               MOVS     R3,#+19
   \   00000594   3A00               MOVS     R2,R7
   \   00000596   D21C               ADDS     R2,R2,#+3
   \   00000598   1206               LSLS     R2,R2,#+24
   \   0000059A   120E               LSRS     R2,R2,#+24
   \   0000059C   2100               MOVS     R1,R4
   \   0000059E   491C               ADDS     R1,R1,#+1
   \   000005A0   0906               LSLS     R1,R1,#+24
   \   000005A2   090E               LSRS     R1,R1,#+24
   \   000005A4   B548               LDR      R0,??PaintProc_24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   000005A6   ........           BL       CopyToCanvasPoint
   \   000005AA   02B0               ADD      SP,SP,#+8
   2476                        if (Proc->Nr>=0)
   \   000005AC   0120               MOVS     R0,#+1
   \   000005AE   0299               LDR      R1,[SP, #+8]
   \   000005B0   0856               LDRSB    R0,[R1, R0]
   \   000005B2   0028               CMP      R0,#+0
   \   000005B4   14D4               BMI      ??PaintProc_28
   2477                        {
   2478                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000005B6   0222               MOVS     R2,#+2
   \   000005B8   6946               MOV      R1,SP
   \   000005BA   0120               MOVS     R0,#+1
   \   000005BC   029B               LDR      R3,[SP, #+8]
   \   000005BE   1856               LDRSB    R0,[R3, R0]
   \   000005C0   0006               LSLS     R0,R0,#+24
   \   000005C2   000E               LSRS     R0,R0,#+24
   \   000005C4   ........           BL       CharToStr
   \   000005C8   0600               MOVS     R6,R0
   2479                          txt[ind]='.';
   \   000005CA   6D46               MOV      R5,SP
   \   000005CC   A919               ADDS     R1,R5,R6
   \   000005CE   2E20               MOVS     R0,#+46
   \   000005D0   0870               STRB     R0,[R1, #+0]
   2480                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   000005D2   0222               MOVS     R2,#+2
   \   000005D4   491C               ADDS     R1,R1,#+1
   \   000005D6   0298               LDR      R0,[SP, #+8]
   \   000005D8   007A               LDRB     R0,[R0, #+8]
   \   000005DA   ........           BL       CharToStr
   \   000005DE   09E0               B        ??PaintProc_29
   2481                        }else{
   2482                          txt[0]='v';
   \                     ??PaintProc_28:
   \   000005E0   6D46               MOV      R5,SP
   \   000005E2   7620               MOVS     R0,#+118
   \   000005E4   2870               STRB     R0,[R5, #+0]
   2483                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   000005E6   0222               MOVS     R2,#+2
   \   000005E8   6D1C               ADDS     R5,R5,#+1
   \   000005EA   2900               MOVS     R1,R5
   \   000005EC   0298               LDR      R0,[SP, #+8]
   \   000005EE   007A               LDRB     R0,[R0, #+8]
   \   000005F0   ........           BL       CharToStr
   2484                        } 
   2485                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_29:
   \   000005F4   82B0               SUB      SP,SP,#+8
   \   000005F6   0020               MOVS     R0,#+0
   \   000005F8   0090               STR      R0,[SP, #+0]
   \   000005FA   7821               MOVS     R1,#+120
   \   000005FC   03B4               PUSH     {R0,R1}
   \   000005FE   0C21               MOVS     R1,#+12
   \   00000600   0520               MOVS     R0,#+5
   \   00000602   03B4               PUSH     {R0,R1}
   \   00000604   3B00               MOVS     R3,R7
   \   00000606   0B33               ADDS     R3,R3,#+11
   \   00000608   2200               MOVS     R2,R4
   \   0000060A   121D               ADDS     R2,R2,#+4
   \   0000060C   1206               LSLS     R2,R2,#+24
   \   0000060E   120E               LSRS     R2,R2,#+24
   \   00000610   0221               MOVS     R1,#+2
   \   00000612   06A8               ADD      R0,SP,#+24
   \   00000614   ........           BL       Label
   \   00000618   06B0               ADD      SP,SP,#+24
   2486                        txt[0]='Q'; txt[1]=0;
   \   0000061A   6D46               MOV      R5,SP
   \   0000061C   5120               MOVS     R0,#+81
   \   0000061E   2870               STRB     R0,[R5, #+0]
   \   00000620   0020               MOVS     R0,#+0
   \   00000622   6870               STRB     R0,[R5, #+1]
   2487                        Label(txt,2,x+7,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000624   82B0               SUB      SP,SP,#+8
   \   00000626   0090               STR      R0,[SP, #+0]
   \   00000628   7821               MOVS     R1,#+120
   \   0000062A   03B4               PUSH     {R0,R1}
   \   0000062C   0621               MOVS     R1,#+6
   \   0000062E   0120               MOVS     R0,#+1
   \   00000630   03B4               PUSH     {R0,R1}
   \   00000632   BF1C               ADDS     R7,R7,#+2
   \   00000634   3B00               MOVS     R3,R7
   \   00000636   E41D               ADDS     R4,R4,#+7
   \   00000638   2200               MOVS     R2,R4
   \   0000063A   1206               LSLS     R2,R2,#+24
   \   0000063C   120E               LSRS     R2,R2,#+24
   \   0000063E   0221               MOVS     R1,#+2
   \   00000640   06A8               ADD      R0,SP,#+24
   \   00000642   ........           BL       Label
   \   00000646   06B0               ADD      SP,SP,#+24
   \   00000648   00F019FC           BL       ??PaintProc_1
   2488                    break;
   2489          
   2490                    case ProcStS:
   2491                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_30:
   \   0000064C   82B0               SUB      SP,SP,#+8
   \   0000064E   0820               MOVS     R0,#+8
   \   00000650   0090               STR      R0,[SP, #+0]
   \   00000652   1323               MOVS     R3,#+19
   \   00000654   3A00               MOVS     R2,R7
   \   00000656   D21C               ADDS     R2,R2,#+3
   \   00000658   1206               LSLS     R2,R2,#+24
   \   0000065A   120E               LSRS     R2,R2,#+24
   \   0000065C   2100               MOVS     R1,R4
   \   0000065E   491C               ADDS     R1,R1,#+1
   \   00000660   0906               LSLS     R1,R1,#+24
   \   00000662   090E               LSRS     R1,R1,#+24
   \   00000664   8548               LDR      R0,??PaintProc_24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   00000666   ........           BL       CopyToCanvasPoint
   \   0000066A   02B0               ADD      SP,SP,#+8
   2492                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000066C   0222               MOVS     R2,#+2
   \   0000066E   6946               MOV      R1,SP
   \   00000670   0120               MOVS     R0,#+1
   \   00000672   029B               LDR      R3,[SP, #+8]
   \   00000674   1856               LDRSB    R0,[R3, R0]
   \   00000676   0006               LSLS     R0,R0,#+24
   \   00000678   000E               LSRS     R0,R0,#+24
   \   0000067A   ........           BL       CharToStr
   2493          
   2494                        Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000067E   82B0               SUB      SP,SP,#+8
   \   00000680   0020               MOVS     R0,#+0
   \   00000682   0090               STR      R0,[SP, #+0]
   \   00000684   7821               MOVS     R1,#+120
   \   00000686   03B4               PUSH     {R0,R1}
   \   00000688   0C21               MOVS     R1,#+12
   \   0000068A   0220               MOVS     R0,#+2
   \   0000068C   03B4               PUSH     {R0,R1}
   \   0000068E   3B00               MOVS     R3,R7
   \   00000690   0B33               ADDS     R3,R3,#+11
   \   00000692   2200               MOVS     R2,R4
   \   00000694   121D               ADDS     R2,R2,#+4
   \   00000696   1206               LSLS     R2,R2,#+24
   \   00000698   120E               LSRS     R2,R2,#+24
   \   0000069A   0100               MOVS     R1,R0
   \   0000069C   06A8               ADD      R0,SP,#+24
   \   0000069E   ........           BL       Label
   \   000006A2   06B0               ADD      SP,SP,#+24
   2495                        txt[0]='S'; txt[1]=0;
   \   000006A4   6D46               MOV      R5,SP
   \   000006A6   5320               MOVS     R0,#+83
   \   000006A8   2870               STRB     R0,[R5, #+0]
   \   000006AA   0020               MOVS     R0,#+0
   \   000006AC   6870               STRB     R0,[R5, #+1]
   2496                        Label(txt,2,x+7,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000006AE   82B0               SUB      SP,SP,#+8
   \   000006B0   0090               STR      R0,[SP, #+0]
   \   000006B2   7821               MOVS     R1,#+120
   \   000006B4   03B4               PUSH     {R0,R1}
   \   000006B6   0621               MOVS     R1,#+6
   \   000006B8   0120               MOVS     R0,#+1
   \   000006BA   03B4               PUSH     {R0,R1}
   \   000006BC   BF1C               ADDS     R7,R7,#+2
   \   000006BE   3B00               MOVS     R3,R7
   \   000006C0   E41D               ADDS     R4,R4,#+7
   \   000006C2   2200               MOVS     R2,R4
   \   000006C4   1206               LSLS     R2,R2,#+24
   \   000006C6   120E               LSRS     R2,R2,#+24
   \   000006C8   0221               MOVS     R1,#+2
   \   000006CA   06A8               ADD      R0,SP,#+24
   \   000006CC   ........           BL       Label
   \   000006D0   06B0               ADD      SP,SP,#+24
   \   000006D2   D4E3               B        ??PaintProc_1
   2497                    break;      
   2498                    
   2499                    
   2500                    case ProcStB:
   2501                        CopyToCanvasPoint((char*)ProcSt_Button, x+1, y+6, 19,6);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_31:
   \   000006D4   82B0               SUB      SP,SP,#+8
   \   000006D6   0620               MOVS     R0,#+6
   \   000006D8   0090               STR      R0,[SP, #+0]
   \   000006DA   1323               MOVS     R3,#+19
   \   000006DC   3A00               MOVS     R2,R7
   \   000006DE   921D               ADDS     R2,R2,#+6
   \   000006E0   1206               LSLS     R2,R2,#+24
   \   000006E2   120E               LSRS     R2,R2,#+24
   \   000006E4   2100               MOVS     R1,R4
   \   000006E6   491C               ADDS     R1,R1,#+1
   \   000006E8   0906               LSLS     R1,R1,#+24
   \   000006EA   090E               LSRS     R1,R1,#+24
   \   000006EC   6448               LDR      R0,??PaintProc_24+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1108
   \   000006EE   ........           BL       CopyToCanvasPoint
   \   000006F2   02B0               ADD      SP,SP,#+8
   2502                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000006F4   0222               MOVS     R2,#+2
   \   000006F6   6946               MOV      R1,SP
   \   000006F8   0120               MOVS     R0,#+1
   \   000006FA   029B               LDR      R3,[SP, #+8]
   \   000006FC   1856               LDRSB    R0,[R3, R0]
   \   000006FE   0006               LSLS     R0,R0,#+24
   \   00000700   000E               LSRS     R0,R0,#+24
   \   00000702   ........           BL       CharToStr
   2503          
   2504                        Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000706   82B0               SUB      SP,SP,#+8
   \   00000708   0020               MOVS     R0,#+0
   \   0000070A   0090               STR      R0,[SP, #+0]
   \   0000070C   7821               MOVS     R1,#+120
   \   0000070E   03B4               PUSH     {R0,R1}
   \   00000710   0C21               MOVS     R1,#+12
   \   00000712   0220               MOVS     R0,#+2
   \   00000714   03B4               PUSH     {R0,R1}
   \   00000716   0B37               ADDS     R7,R7,#+11
   \   00000718   3B00               MOVS     R3,R7
   \   0000071A   241D               ADDS     R4,R4,#+4
   \   0000071C   2200               MOVS     R2,R4
   \   0000071E   1206               LSLS     R2,R2,#+24
   \   00000720   120E               LSRS     R2,R2,#+24
   \   00000722   0100               MOVS     R1,R0
   \   00000724   06A8               ADD      R0,SP,#+24
   \   00000726   ........           BL       Label
   \   0000072A   06B0               ADD      SP,SP,#+24
   \   0000072C   A7E3               B        ??PaintProc_1
   2505                    break;   
   2506                    
   2507                    
   2508          
   2509                    
   2510                    case ProcWOUT:
   2511                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_32:
   \   0000072E   82B0               SUB      SP,SP,#+8
   \   00000730   0920               MOVS     R0,#+9
   \   00000732   0090               STR      R0,[SP, #+0]
   \   00000734   1323               MOVS     R3,#+19
   \   00000736   3A00               MOVS     R2,R7
   \   00000738   D21C               ADDS     R2,R2,#+3
   \   0000073A   1206               LSLS     R2,R2,#+24
   \   0000073C   120E               LSRS     R2,R2,#+24
   \   0000073E   2100               MOVS     R1,R4
   \   00000740   491C               ADDS     R1,R1,#+1
   \   00000742   0906               LSLS     R1,R1,#+24
   \   00000744   090E               LSRS     R1,R1,#+24
   \   00000746   4F48               LDR      R0,??PaintProc_24+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 164
   \   00000748   ........           BL       CopyToCanvasPoint
   \   0000074C   02B0               ADD      SP,SP,#+8
   2512                        if (Proc->Nr>=0)
   \   0000074E   0120               MOVS     R0,#+1
   \   00000750   0299               LDR      R1,[SP, #+8]
   \   00000752   0856               LDRSB    R0,[R1, R0]
   \   00000754   0028               CMP      R0,#+0
   \   00000756   14D4               BMI      ??PaintProc_33
   2513                        {
   2514                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000758   0222               MOVS     R2,#+2
   \   0000075A   6946               MOV      R1,SP
   \   0000075C   0120               MOVS     R0,#+1
   \   0000075E   029B               LDR      R3,[SP, #+8]
   \   00000760   1856               LDRSB    R0,[R3, R0]
   \   00000762   0006               LSLS     R0,R0,#+24
   \   00000764   000E               LSRS     R0,R0,#+24
   \   00000766   ........           BL       CharToStr
   \   0000076A   0600               MOVS     R6,R0
   2515                          txt[ind]='.';
   \   0000076C   6D46               MOV      R5,SP
   \   0000076E   A919               ADDS     R1,R5,R6
   \   00000770   2E20               MOVS     R0,#+46
   \   00000772   0870               STRB     R0,[R1, #+0]
   2516                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000774   0222               MOVS     R2,#+2
   \   00000776   491C               ADDS     R1,R1,#+1
   \   00000778   0298               LDR      R0,[SP, #+8]
   \   0000077A   007A               LDRB     R0,[R0, #+8]
   \   0000077C   ........           BL       CharToStr
   \   00000780   09E0               B        ??PaintProc_34
   2517                        }else{
   2518                          txt[0]='v';
   \                     ??PaintProc_33:
   \   00000782   6D46               MOV      R5,SP
   \   00000784   7620               MOVS     R0,#+118
   \   00000786   2870               STRB     R0,[R5, #+0]
   2519                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000788   0222               MOVS     R2,#+2
   \   0000078A   6D1C               ADDS     R5,R5,#+1
   \   0000078C   2900               MOVS     R1,R5
   \   0000078E   0298               LDR      R0,[SP, #+8]
   \   00000790   007A               LDRB     R0,[R0, #+8]
   \   00000792   ........           BL       CharToStr
   2520                        } 
   2521                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_34:
   \   00000796   82B0               SUB      SP,SP,#+8
   \   00000798   0020               MOVS     R0,#+0
   \   0000079A   0090               STR      R0,[SP, #+0]
   \   0000079C   7821               MOVS     R1,#+120
   \   0000079E   03B4               PUSH     {R0,R1}
   \   000007A0   0C21               MOVS     R1,#+12
   \   000007A2   0520               MOVS     R0,#+5
   \   000007A4   03B4               PUSH     {R0,R1}
   \   000007A6   3B00               MOVS     R3,R7
   \   000007A8   0B33               ADDS     R3,R3,#+11
   \   000007AA   2200               MOVS     R2,R4
   \   000007AC   121D               ADDS     R2,R2,#+4
   \   000007AE   1206               LSLS     R2,R2,#+24
   \   000007B0   120E               LSRS     R2,R2,#+24
   \   000007B2   0221               MOVS     R1,#+2
   \   000007B4   06A8               ADD      R0,SP,#+24
   \   000007B6   ........           BL       Label
   \   000007BA   06B0               ADD      SP,SP,#+24
   2522                        txt[0]='Q'; txt[1]=0;
   \   000007BC   6D46               MOV      R5,SP
   \   000007BE   5120               MOVS     R0,#+81
   \   000007C0   2870               STRB     R0,[R5, #+0]
   \   000007C2   0020               MOVS     R0,#+0
   \   000007C4   6870               STRB     R0,[R5, #+1]
   2523                        Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000007C6   82B0               SUB      SP,SP,#+8
   \   000007C8   0090               STR      R0,[SP, #+0]
   \   000007CA   7821               MOVS     R1,#+120
   \   000007CC   03B4               PUSH     {R0,R1}
   \   000007CE   0621               MOVS     R1,#+6
   \   000007D0   0120               MOVS     R0,#+1
   \   000007D2   03B4               PUSH     {R0,R1}
   \   000007D4   BF1C               ADDS     R7,R7,#+2
   \   000007D6   3B00               MOVS     R3,R7
   \   000007D8   0834               ADDS     R4,R4,#+8
   \   000007DA   2200               MOVS     R2,R4
   \   000007DC   1206               LSLS     R2,R2,#+24
   \   000007DE   120E               LSRS     R2,R2,#+24
   \   000007E0   0221               MOVS     R1,#+2
   \   000007E2   06A8               ADD      R0,SP,#+24
   \   000007E4   ........           BL       Label
   \   000007E8   06B0               ADD      SP,SP,#+24
   \   000007EA   48E3               B        ??PaintProc_1
   2524                    break;
   2525                    
   2526                    
   2527                    
   2528                    case ProcWOUTS:
   2529                        CopyToCanvasPoint((char*)ProcWOUTS_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_35:
   \   000007EC   82B0               SUB      SP,SP,#+8
   \   000007EE   0920               MOVS     R0,#+9
   \   000007F0   0090               STR      R0,[SP, #+0]
   \   000007F2   1323               MOVS     R3,#+19
   \   000007F4   3A00               MOVS     R2,R7
   \   000007F6   D21C               ADDS     R2,R2,#+3
   \   000007F8   1206               LSLS     R2,R2,#+24
   \   000007FA   120E               LSRS     R2,R2,#+24
   \   000007FC   2100               MOVS     R1,R4
   \   000007FE   491C               ADDS     R1,R1,#+1
   \   00000800   0906               LSLS     R1,R1,#+24
   \   00000802   090E               LSRS     R1,R1,#+24
   \   00000804   2048               LDR      R0,??PaintProc_24+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 192
   \   00000806   ........           BL       CopyToCanvasPoint
   \   0000080A   02B0               ADD      SP,SP,#+8
   2530                        if (Proc->Nr>=0)
   \   0000080C   0120               MOVS     R0,#+1
   \   0000080E   0299               LDR      R1,[SP, #+8]
   \   00000810   0856               LDRSB    R0,[R1, R0]
   \   00000812   0028               CMP      R0,#+0
   \   00000814   14D4               BMI      ??PaintProc_36
   2531                        {
   2532                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000816   0222               MOVS     R2,#+2
   \   00000818   6946               MOV      R1,SP
   \   0000081A   0120               MOVS     R0,#+1
   \   0000081C   029B               LDR      R3,[SP, #+8]
   \   0000081E   1856               LDRSB    R0,[R3, R0]
   \   00000820   0006               LSLS     R0,R0,#+24
   \   00000822   000E               LSRS     R0,R0,#+24
   \   00000824   ........           BL       CharToStr
   \   00000828   0600               MOVS     R6,R0
   2533                          txt[ind]='.';
   \   0000082A   6D46               MOV      R5,SP
   \   0000082C   A919               ADDS     R1,R5,R6
   \   0000082E   2E20               MOVS     R0,#+46
   \   00000830   0870               STRB     R0,[R1, #+0]
   2534                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000832   0222               MOVS     R2,#+2
   \   00000834   491C               ADDS     R1,R1,#+1
   \   00000836   0298               LDR      R0,[SP, #+8]
   \   00000838   007A               LDRB     R0,[R0, #+8]
   \   0000083A   ........           BL       CharToStr
   \   0000083E   09E0               B        ??PaintProc_37
   2535                        }else{
   2536                          txt[0]='v';
   \                     ??PaintProc_36:
   \   00000840   6D46               MOV      R5,SP
   \   00000842   7620               MOVS     R0,#+118
   \   00000844   2870               STRB     R0,[R5, #+0]
   2537                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000846   0222               MOVS     R2,#+2
   \   00000848   6D1C               ADDS     R5,R5,#+1
   \   0000084A   2900               MOVS     R1,R5
   \   0000084C   0298               LDR      R0,[SP, #+8]
   \   0000084E   007A               LDRB     R0,[R0, #+8]
   \   00000850   ........           BL       CharToStr
   2538                        } 
   2539                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_37:
   \   00000854   82B0               SUB      SP,SP,#+8
   \   00000856   0020               MOVS     R0,#+0
   \   00000858   0090               STR      R0,[SP, #+0]
   \   0000085A   7821               MOVS     R1,#+120
   \   0000085C   03B4               PUSH     {R0,R1}
   \   0000085E   0C21               MOVS     R1,#+12
   \   00000860   0520               MOVS     R0,#+5
   \   00000862   03B4               PUSH     {R0,R1}
   \   00000864   0B37               ADDS     R7,R7,#+11
   \   00000866   3B00               MOVS     R3,R7
   \   00000868   241D               ADDS     R4,R4,#+4
   \   0000086A   2200               MOVS     R2,R4
   \   0000086C   1206               LSLS     R2,R2,#+24
   \   0000086E   120E               LSRS     R2,R2,#+24
   \   00000870   0221               MOVS     R1,#+2
   \   00000872   06A8               ADD      R0,SP,#+24
   \   00000874   ........           BL       Label
   \   00000878   06B0               ADD      SP,SP,#+24
   \   0000087A   00E3               B        ??PaintProc_1
   \                     ??PaintProc_24:
   \   0000087C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   00000880   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1108
   \   00000884   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 164
   \   00000888   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 192
   2540                        //txt[0]='Q'; txt[1]=0;
   2541                        //Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2542                    break;
   2543                    
   2544                    case ProcWOUTR:
   2545                        CopyToCanvasPoint((char*)ProcWOUTR_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_38:
   \   0000088C   82B0               SUB      SP,SP,#+8
   \   0000088E   0920               MOVS     R0,#+9
   \   00000890   0090               STR      R0,[SP, #+0]
   \   00000892   1323               MOVS     R3,#+19
   \   00000894   3A00               MOVS     R2,R7
   \   00000896   D21C               ADDS     R2,R2,#+3
   \   00000898   1206               LSLS     R2,R2,#+24
   \   0000089A   120E               LSRS     R2,R2,#+24
   \   0000089C   2100               MOVS     R1,R4
   \   0000089E   491C               ADDS     R1,R1,#+1
   \   000008A0   0906               LSLS     R1,R1,#+24
   \   000008A2   090E               LSRS     R1,R1,#+24
   \   000008A4   D048               LDR      R0,??PaintProc_39  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 220
   \   000008A6   ........           BL       CopyToCanvasPoint
   \   000008AA   02B0               ADD      SP,SP,#+8
   2546                        if (Proc->Nr>=0)
   \   000008AC   0120               MOVS     R0,#+1
   \   000008AE   0299               LDR      R1,[SP, #+8]
   \   000008B0   0856               LDRSB    R0,[R1, R0]
   \   000008B2   0028               CMP      R0,#+0
   \   000008B4   C4D4               BMI      ??PaintProc_36
   2547                        {
   2548                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000008B6   0222               MOVS     R2,#+2
   \   000008B8   6946               MOV      R1,SP
   \   000008BA   0120               MOVS     R0,#+1
   \   000008BC   029B               LDR      R3,[SP, #+8]
   \   000008BE   1856               LDRSB    R0,[R3, R0]
   \   000008C0   0006               LSLS     R0,R0,#+24
   \   000008C2   000E               LSRS     R0,R0,#+24
   \   000008C4   ........           BL       CharToStr
   \   000008C8   0600               MOVS     R6,R0
   2549                          txt[ind]='.';
   \   000008CA   6D46               MOV      R5,SP
   \   000008CC   A919               ADDS     R1,R5,R6
   \   000008CE   2E20               MOVS     R0,#+46
   \   000008D0   0870               STRB     R0,[R1, #+0]
   2550                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   000008D2   0222               MOVS     R2,#+2
   \   000008D4   491C               ADDS     R1,R1,#+1
   \   000008D6   0298               LDR      R0,[SP, #+8]
   \   000008D8   007A               LDRB     R0,[R0, #+8]
   \   000008DA   ........           BL       CharToStr
   \   000008DE   B9E7               B        ??PaintProc_37
   2551                        }else{
   2552                          txt[0]='v';
   2553                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   2554                        } 
   2555                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2556                    break;  
   2557                    
   2558                    
   2559                    case ProcWOUTC:
   2560                        CopyToCanvasPoint((char*)ProcWOUTC_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_40:
   \   000008E0   82B0               SUB      SP,SP,#+8
   \   000008E2   0920               MOVS     R0,#+9
   \   000008E4   0090               STR      R0,[SP, #+0]
   \   000008E6   1323               MOVS     R3,#+19
   \   000008E8   3A00               MOVS     R2,R7
   \   000008EA   D21C               ADDS     R2,R2,#+3
   \   000008EC   1206               LSLS     R2,R2,#+24
   \   000008EE   120E               LSRS     R2,R2,#+24
   \   000008F0   2100               MOVS     R1,R4
   \   000008F2   491C               ADDS     R1,R1,#+1
   \   000008F4   0906               LSLS     R1,R1,#+24
   \   000008F6   090E               LSRS     R1,R1,#+24
   \   000008F8   BC48               LDR      R0,??PaintProc_39+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 248
   \   000008FA   ........           BL       CopyToCanvasPoint
   \   000008FE   02B0               ADD      SP,SP,#+8
   2561                        if (Proc->Nr>=0)
   \   00000900   0120               MOVS     R0,#+1
   \   00000902   0299               LDR      R1,[SP, #+8]
   \   00000904   0856               LDRSB    R0,[R1, R0]
   \   00000906   0028               CMP      R0,#+0
   \   00000908   9AD4               BMI      ??PaintProc_36
   2562                        {
   2563                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000090A   0222               MOVS     R2,#+2
   \   0000090C   6946               MOV      R1,SP
   \   0000090E   0120               MOVS     R0,#+1
   \   00000910   029B               LDR      R3,[SP, #+8]
   \   00000912   1856               LDRSB    R0,[R3, R0]
   \   00000914   0006               LSLS     R0,R0,#+24
   \   00000916   000E               LSRS     R0,R0,#+24
   \   00000918   ........           BL       CharToStr
   \   0000091C   0600               MOVS     R6,R0
   2564                          txt[ind]='.';
   \   0000091E   6D46               MOV      R5,SP
   \   00000920   A919               ADDS     R1,R5,R6
   \   00000922   2E20               MOVS     R0,#+46
   \   00000924   0870               STRB     R0,[R1, #+0]
   2565                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000926   0222               MOVS     R2,#+2
   \   00000928   491C               ADDS     R1,R1,#+1
   \   0000092A   0298               LDR      R0,[SP, #+8]
   \   0000092C   007A               LDRB     R0,[R0, #+8]
   \   0000092E   ........           BL       CharToStr
   \   00000932   8FE7               B        ??PaintProc_37
   2566                        }else{
   2567                          txt[0]='v';
   2568                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   2569                        } 
   2570                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2571                    break; 
   2572                    
   2573                    case ProcSPK:
   2574                        CopyToCanvasPoint((char*)ProcSPK_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_41:
   \   00000934   AE4D               LDR      R5,??PaintProc_39+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000936   82B0               SUB      SP,SP,#+8
   \   00000938   0920               MOVS     R0,#+9
   \   0000093A   0090               STR      R0,[SP, #+0]
   \   0000093C   1323               MOVS     R3,#+19
   \   0000093E   3A00               MOVS     R2,R7
   \   00000940   D21C               ADDS     R2,R2,#+3
   \   00000942   1206               LSLS     R2,R2,#+24
   \   00000944   120E               LSRS     R2,R2,#+24
   \   00000946   2100               MOVS     R1,R4
   \   00000948   491C               ADDS     R1,R1,#+1
   \   0000094A   0906               LSLS     R1,R1,#+24
   \   0000094C   090E               LSRS     R1,R1,#+24
   \   0000094E   8A20               MOVS     R0,#+138
   \   00000950   4000               LSLS     R0,R0,#+1        ;; #+276
   \   00000952   2818               ADDS     R0,R5,R0
   \   00000954   ........           BL       CopyToCanvasPoint
   \   00000958   02B0               ADD      SP,SP,#+8
   2575                        CopyToCanvasPoint((char*)SPK_1[Proc->Tag.SpeakerType], x+3,y+13, 16,5); 
   \   0000095A   82B0               SUB      SP,SP,#+8
   \   0000095C   0520               MOVS     R0,#+5
   \   0000095E   0090               STR      R0,[SP, #+0]
   \   00000960   1023               MOVS     R3,#+16
   \   00000962   0D37               ADDS     R7,R7,#+13
   \   00000964   3A00               MOVS     R2,R7
   \   00000966   1206               LSLS     R2,R2,#+24
   \   00000968   120E               LSRS     R2,R2,#+24
   \   0000096A   E41C               ADDS     R4,R4,#+3
   \   0000096C   2100               MOVS     R1,R4
   \   0000096E   0906               LSLS     R1,R1,#+24
   \   00000970   090E               LSRS     R1,R1,#+24
   \   00000972   8D20               MOVS     R0,#+141
   \   00000974   C000               LSLS     R0,R0,#+3        ;; #+1128
   \   00000976   049C               LDR      R4,[SP, #+16]
   \   00000978   247A               LDRB     R4,[R4, #+8]
   \   0000097A   0A26               MOVS     R6,#+10
   \   0000097C   7443               MULS     R4,R6,R4
   \   0000097E   2C19               ADDS     R4,R5,R4
   \   00000980   2018               ADDS     R0,R4,R0
   \   00000982   ........           BL       CopyToCanvasPoint
   \   00000986   02B0               ADD      SP,SP,#+8
   \   00000988   79E2               B        ??PaintProc_1
   2576          
   2577                    break;  
   2578          
   2579          
   2580                    
   2581                    
   2582                    case ProcSetScn:
   2583                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_42:
   \   0000098A   82B0               SUB      SP,SP,#+8
   \   0000098C   0920               MOVS     R0,#+9
   \   0000098E   0090               STR      R0,[SP, #+0]
   \   00000990   1323               MOVS     R3,#+19
   \   00000992   3A00               MOVS     R2,R7
   \   00000994   D21C               ADDS     R2,R2,#+3
   \   00000996   1206               LSLS     R2,R2,#+24
   \   00000998   120E               LSRS     R2,R2,#+24
   \   0000099A   2100               MOVS     R1,R4
   \   0000099C   491C               ADDS     R1,R1,#+1
   \   0000099E   0906               LSLS     R1,R1,#+24
   \   000009A0   090E               LSRS     R1,R1,#+24
   \   000009A2   9448               LDR      R0,??PaintProc_39+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 164
   \   000009A4   ........           BL       CopyToCanvasPoint
   \   000009A8   02B0               ADD      SP,SP,#+8
   2584                       if (Proc->Nr==0)
   \   000009AA   0120               MOVS     R0,#+1
   \   000009AC   0299               LDR      R1,[SP, #+8]
   \   000009AE   0856               LDRSB    R0,[R1, R0]
   \   000009B0   0028               CMP      R0,#+0
   \   000009B2   1BD1               BNE      ??PaintProc_43
   2585                        {
   2586                          txt[0]='0'; txt[1]='/'; txt[2]='1'; txt[3]=0; //(char Value, char *Vstring, char ill);
   \   000009B4   6D46               MOV      R5,SP
   \   000009B6   3020               MOVS     R0,#+48
   \   000009B8   2870               STRB     R0,[R5, #+0]
   \   000009BA   2F20               MOVS     R0,#+47
   \   000009BC   6870               STRB     R0,[R5, #+1]
   \   000009BE   3120               MOVS     R0,#+49
   \   000009C0   A870               STRB     R0,[R5, #+2]
   \   000009C2   0020               MOVS     R0,#+0
   \   000009C4   E870               STRB     R0,[R5, #+3]
   2587                          Label(txt,2,x+3,y+11,3,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000009C6   82B0               SUB      SP,SP,#+8
   \   000009C8   0090               STR      R0,[SP, #+0]
   \   000009CA   7821               MOVS     R1,#+120
   \   000009CC   03B4               PUSH     {R0,R1}
   \   000009CE   0C21               MOVS     R1,#+12
   \   000009D0   0320               MOVS     R0,#+3
   \   000009D2   03B4               PUSH     {R0,R1}
   \   000009D4   3B00               MOVS     R3,R7
   \   000009D6   0B33               ADDS     R3,R3,#+11
   \   000009D8   2200               MOVS     R2,R4
   \   000009DA   D21C               ADDS     R2,R2,#+3
   \   000009DC   1206               LSLS     R2,R2,#+24
   \   000009DE   120E               LSRS     R2,R2,#+24
   \   000009E0   0221               MOVS     R1,#+2
   \   000009E2   06A8               ADD      R0,SP,#+24
   \   000009E4   ........           BL       Label
   \   000009E8   06B0               ADD      SP,SP,#+24
   \   000009EA   1BE0               B        ??PaintProc_44
   2588                        }else{
   2589                          ind=CharToStr(Proc->Nr, txt, 3); //(char Value, char *Vstring, char ill);
   \                     ??PaintProc_43:
   \   000009EC   0322               MOVS     R2,#+3
   \   000009EE   6946               MOV      R1,SP
   \   000009F0   0120               MOVS     R0,#+1
   \   000009F2   029B               LDR      R3,[SP, #+8]
   \   000009F4   1856               LDRSB    R0,[R3, R0]
   \   000009F6   0006               LSLS     R0,R0,#+24
   \   000009F8   000E               LSRS     R0,R0,#+24
   \   000009FA   ........           BL       CharToStr
   2590                          Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000009FE   82B0               SUB      SP,SP,#+8
   \   00000A00   0020               MOVS     R0,#+0
   \   00000A02   0090               STR      R0,[SP, #+0]
   \   00000A04   7821               MOVS     R1,#+120
   \   00000A06   03B4               PUSH     {R0,R1}
   \   00000A08   0C21               MOVS     R1,#+12
   \   00000A0A   0220               MOVS     R0,#+2
   \   00000A0C   03B4               PUSH     {R0,R1}
   \   00000A0E   3B00               MOVS     R3,R7
   \   00000A10   0B33               ADDS     R3,R3,#+11
   \   00000A12   2200               MOVS     R2,R4
   \   00000A14   121D               ADDS     R2,R2,#+4
   \   00000A16   1206               LSLS     R2,R2,#+24
   \   00000A18   120E               LSRS     R2,R2,#+24
   \   00000A1A   0100               MOVS     R1,R0
   \   00000A1C   06A8               ADD      R0,SP,#+24
   \   00000A1E   ........           BL       Label
   \   00000A22   06B0               ADD      SP,SP,#+24
   2591                        }
   2592                        
   2593                        txt[0]='S'; txt[1]=0;
   \                     ??PaintProc_44:
   \   00000A24   6D46               MOV      R5,SP
   \   00000A26   5320               MOVS     R0,#+83
   \   00000A28   2870               STRB     R0,[R5, #+0]
   \   00000A2A   0020               MOVS     R0,#+0
   \   00000A2C   6870               STRB     R0,[R5, #+1]
   2594                        Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A2E   82B0               SUB      SP,SP,#+8
   \   00000A30   0090               STR      R0,[SP, #+0]
   \   00000A32   7821               MOVS     R1,#+120
   \   00000A34   03B4               PUSH     {R0,R1}
   \   00000A36   0621               MOVS     R1,#+6
   \   00000A38   0120               MOVS     R0,#+1
   \   00000A3A   03B4               PUSH     {R0,R1}
   \   00000A3C   BF1C               ADDS     R7,R7,#+2
   \   00000A3E   3B00               MOVS     R3,R7
   \   00000A40   0834               ADDS     R4,R4,#+8
   \   00000A42   2200               MOVS     R2,R4
   \   00000A44   1206               LSLS     R2,R2,#+24
   \   00000A46   120E               LSRS     R2,R2,#+24
   \   00000A48   0221               MOVS     R1,#+2
   \   00000A4A   06A8               ADD      R0,SP,#+24
   \   00000A4C   ........           BL       Label
   \   00000A50   06B0               ADD      SP,SP,#+24
   \   00000A52   14E2               B        ??PaintProc_1
   2595                    break;             
   2596            
   2597                    case ProcInc:
   2598                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_45:
   \   00000A54   82B0               SUB      SP,SP,#+8
   \   00000A56   0920               MOVS     R0,#+9
   \   00000A58   0090               STR      R0,[SP, #+0]
   \   00000A5A   1323               MOVS     R3,#+19
   \   00000A5C   3A00               MOVS     R2,R7
   \   00000A5E   D21C               ADDS     R2,R2,#+3
   \   00000A60   1206               LSLS     R2,R2,#+24
   \   00000A62   120E               LSRS     R2,R2,#+24
   \   00000A64   2100               MOVS     R1,R4
   \   00000A66   491C               ADDS     R1,R1,#+1
   \   00000A68   0906               LSLS     R1,R1,#+24
   \   00000A6A   090E               LSRS     R1,R1,#+24
   \   00000A6C   6148               LDR      R0,??PaintProc_39+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 164
   \   00000A6E   ........           BL       CopyToCanvasPoint
   \   00000A72   02B0               ADD      SP,SP,#+8
   2599                        txt[0]='+'; txt[1]=0; txt[2]=0;
   \   00000A74   6D46               MOV      R5,SP
   \   00000A76   2B20               MOVS     R0,#+43
   \   00000A78   2870               STRB     R0,[R5, #+0]
   \   00000A7A   0020               MOVS     R0,#+0
   \   00000A7C   6870               STRB     R0,[R5, #+1]
   \   00000A7E   A870               STRB     R0,[R5, #+2]
   2600                        Label(txt,2,x+7,y+4,1,9,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A80   82B0               SUB      SP,SP,#+8
   \   00000A82   0090               STR      R0,[SP, #+0]
   \   00000A84   7821               MOVS     R1,#+120
   \   00000A86   03B4               PUSH     {R0,R1}
   \   00000A88   0921               MOVS     R1,#+9
   \   00000A8A   0120               MOVS     R0,#+1
   \   00000A8C   03B4               PUSH     {R0,R1}
   \   00000A8E   3B00               MOVS     R3,R7
   \   00000A90   1B1D               ADDS     R3,R3,#+4
   \   00000A92   2200               MOVS     R2,R4
   \   00000A94   D21D               ADDS     R2,R2,#+7
   \   00000A96   1206               LSLS     R2,R2,#+24
   \   00000A98   120E               LSRS     R2,R2,#+24
   \   00000A9A   0221               MOVS     R1,#+2
   \   00000A9C   06A8               ADD      R0,SP,#+24
   \   00000A9E   ........           BL       Label
   \   00000AA2   06B0               ADD      SP,SP,#+24
   2601                        txt[0]='S';txt[1]='c';txt[2]='n';
   \   00000AA4   5320               MOVS     R0,#+83
   \   00000AA6   2870               STRB     R0,[R5, #+0]
   \   00000AA8   6320               MOVS     R0,#+99
   \   00000AAA   6870               STRB     R0,[R5, #+1]
   \   00000AAC   6E20               MOVS     R0,#+110
   \   00000AAE   A870               STRB     R0,[R5, #+2]
   2602                        Label(txt,2,x+4,y+11,3,11,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000AB0   82B0               SUB      SP,SP,#+8
   \   00000AB2   0020               MOVS     R0,#+0
   \   00000AB4   0090               STR      R0,[SP, #+0]
   \   00000AB6   7821               MOVS     R1,#+120
   \   00000AB8   03B4               PUSH     {R0,R1}
   \   00000ABA   0B21               MOVS     R1,#+11
   \   00000ABC   0320               MOVS     R0,#+3
   \   00000ABE   03B4               PUSH     {R0,R1}
   \   00000AC0   0B37               ADDS     R7,R7,#+11
   \   00000AC2   3B00               MOVS     R3,R7
   \   00000AC4   241D               ADDS     R4,R4,#+4
   \   00000AC6   2200               MOVS     R2,R4
   \   00000AC8   1206               LSLS     R2,R2,#+24
   \   00000ACA   120E               LSRS     R2,R2,#+24
   \   00000ACC   0221               MOVS     R1,#+2
   \   00000ACE   06A8               ADD      R0,SP,#+24
   \   00000AD0   ........           BL       Label
   \   00000AD4   06B0               ADD      SP,SP,#+24
   \   00000AD6   D2E1               B        ??PaintProc_1
   2603                         
   2604                   break;               
   2605            
   2606                    case ProcDec:
   2607                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_46:
   \   00000AD8   82B0               SUB      SP,SP,#+8
   \   00000ADA   0920               MOVS     R0,#+9
   \   00000ADC   0090               STR      R0,[SP, #+0]
   \   00000ADE   1323               MOVS     R3,#+19
   \   00000AE0   3A00               MOVS     R2,R7
   \   00000AE2   D21C               ADDS     R2,R2,#+3
   \   00000AE4   1206               LSLS     R2,R2,#+24
   \   00000AE6   120E               LSRS     R2,R2,#+24
   \   00000AE8   2100               MOVS     R1,R4
   \   00000AEA   491C               ADDS     R1,R1,#+1
   \   00000AEC   0906               LSLS     R1,R1,#+24
   \   00000AEE   090E               LSRS     R1,R1,#+24
   \   00000AF0   4048               LDR      R0,??PaintProc_39+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 164
   \   00000AF2   ........           BL       CopyToCanvasPoint
   \   00000AF6   02B0               ADD      SP,SP,#+8
   2608                      
   2609                        txt[0]='-'; txt[1]='-'; txt[2]=0;
   \   00000AF8   2D20               MOVS     R0,#+45
   \   00000AFA   6D46               MOV      R5,SP
   \   00000AFC   2870               STRB     R0,[R5, #+0]
   \   00000AFE   6870               STRB     R0,[R5, #+1]
   \   00000B00   0020               MOVS     R0,#+0
   \   00000B02   A870               STRB     R0,[R5, #+2]
   2610                        Label(txt,2,x+7,y+4,2,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000B04   82B0               SUB      SP,SP,#+8
   \   00000B06   0090               STR      R0,[SP, #+0]
   \   00000B08   7821               MOVS     R1,#+120
   \   00000B0A   03B4               PUSH     {R0,R1}
   \   00000B0C   0621               MOVS     R1,#+6
   \   00000B0E   0220               MOVS     R0,#+2
   \   00000B10   03B4               PUSH     {R0,R1}
   \   00000B12   3B00               MOVS     R3,R7
   \   00000B14   1B1D               ADDS     R3,R3,#+4
   \   00000B16   2200               MOVS     R2,R4
   \   00000B18   D21D               ADDS     R2,R2,#+7
   \   00000B1A   1206               LSLS     R2,R2,#+24
   \   00000B1C   120E               LSRS     R2,R2,#+24
   \   00000B1E   0100               MOVS     R1,R0
   \   00000B20   06A8               ADD      R0,SP,#+24
   \   00000B22   ........           BL       Label
   \   00000B26   06B0               ADD      SP,SP,#+24
   2611                        txt[0]='S';txt[1]='c';txt[2]='n';
   \   00000B28   5320               MOVS     R0,#+83
   \   00000B2A   2870               STRB     R0,[R5, #+0]
   \   00000B2C   6320               MOVS     R0,#+99
   \   00000B2E   6870               STRB     R0,[R5, #+1]
   \   00000B30   6E20               MOVS     R0,#+110
   \   00000B32   A870               STRB     R0,[R5, #+2]
   2612                        Label(txt,2,x+4,y+11,3,11,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000B34   82B0               SUB      SP,SP,#+8
   \   00000B36   0020               MOVS     R0,#+0
   \   00000B38   0090               STR      R0,[SP, #+0]
   \   00000B3A   7821               MOVS     R1,#+120
   \   00000B3C   03B4               PUSH     {R0,R1}
   \   00000B3E   0B21               MOVS     R1,#+11
   \   00000B40   0320               MOVS     R0,#+3
   \   00000B42   03B4               PUSH     {R0,R1}
   \   00000B44   0B37               ADDS     R7,R7,#+11
   \   00000B46   3B00               MOVS     R3,R7
   \   00000B48   241D               ADDS     R4,R4,#+4
   \   00000B4A   2200               MOVS     R2,R4
   \   00000B4C   1206               LSLS     R2,R2,#+24
   \   00000B4E   120E               LSRS     R2,R2,#+24
   \   00000B50   0221               MOVS     R1,#+2
   \   00000B52   06A8               ADD      R0,SP,#+24
   \   00000B54   ........           BL       Label
   \   00000B58   06B0               ADD      SP,SP,#+24
   \   00000B5A   90E1               B        ??PaintProc_1
   2613                       
   2614                    break;    
   2615                    
   2616                    case ProcTimerSet:
   2617                        
   2618                        CopyToCanvasPoint((char*)ProcTime_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_47:
   \   00000B5C   82B0               SUB      SP,SP,#+8
   \   00000B5E   0820               MOVS     R0,#+8
   \   00000B60   0090               STR      R0,[SP, #+0]
   \   00000B62   1323               MOVS     R3,#+19
   \   00000B64   3A00               MOVS     R2,R7
   \   00000B66   D21C               ADDS     R2,R2,#+3
   \   00000B68   1206               LSLS     R2,R2,#+24
   \   00000B6A   120E               LSRS     R2,R2,#+24
   \   00000B6C   2100               MOVS     R1,R4
   \   00000B6E   491C               ADDS     R1,R1,#+1
   \   00000B70   0906               LSLS     R1,R1,#+24
   \   00000B72   090E               LSRS     R1,R1,#+24
   \   00000B74   C348               LDR      R0,??PaintProc_48  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 304
   \   00000B76   ........           BL       CopyToCanvasPoint
   \   00000B7A   02B0               ADD      SP,SP,#+8
   2619                      
   2620                        ind=FloToStr(Proc->Tag.SetCounter, txt, 5); //(char Value, char *Vstring, char ill);
   \   00000B7C   0522               MOVS     R2,#+5
   \   00000B7E   6946               MOV      R1,SP
   \   00000B80   0D00               MOVS     R5,R1
   \   00000B82   1600               MOVS     R6,R2
   \   00000B84   0298               LDR      R0,[SP, #+8]
   \   00000B86   8068               LDR      R0,[R0, #+8]
   \   00000B88   ........           BL       __aeabi_ui2f
   \   00000B8C   3200               MOVS     R2,R6
   \   00000B8E   2900               MOVS     R1,R5
   \   00000B90   ........           BL       FloToStr
   2621                        PixPlab=Label(txt,0,x+2,y+11,4,17,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000B94   0B37               ADDS     R7,R7,#+11
   \   00000B96   82B0               SUB      SP,SP,#+8
   \   00000B98   0020               MOVS     R0,#+0
   \   00000B9A   0090               STR      R0,[SP, #+0]
   \   00000B9C   7821               MOVS     R1,#+120
   \   00000B9E   03B4               PUSH     {R0,R1}
   \   00000BA0   1121               MOVS     R1,#+17
   \   00000BA2   0420               MOVS     R0,#+4
   \   00000BA4   03B4               PUSH     {R0,R1}
   \   00000BA6   3B00               MOVS     R3,R7
   \   00000BA8   2200               MOVS     R2,R4
   \   00000BAA   921C               ADDS     R2,R2,#+2
   \   00000BAC   1206               LSLS     R2,R2,#+24
   \   00000BAE   120E               LSRS     R2,R2,#+24
   \   00000BB0   0021               MOVS     R1,#+0
   \   00000BB2   06A8               ADD      R0,SP,#+24
   \   00000BB4   ........           BL       Label
   \   00000BB8   06B0               ADD      SP,SP,#+24
   \   00000BBA   0200               MOVS     R2,R0
   2622                        if(PixPlab<14) Label("s",0,x+3+PixPlab,y+11,1,4,0,120,0);
   \   00000BBC   0E28               CMP      R0,#+14
   \   00000BBE   00D3               BCC      .+4
   \   00000BC0   5DE1               B        ??PaintProc_1
   \   00000BC2   82B0               SUB      SP,SP,#+8
   \   00000BC4   0020               MOVS     R0,#+0
   \   00000BC6   0090               STR      R0,[SP, #+0]
   \   00000BC8   7821               MOVS     R1,#+120
   \   00000BCA   03B4               PUSH     {R0,R1}
   \   00000BCC   0421               MOVS     R1,#+4
   \   00000BCE   0120               MOVS     R0,#+1
   \   00000BD0   03B4               PUSH     {R0,R1}
   \   00000BD2   3B00               MOVS     R3,R7
   \   00000BD4   A218               ADDS     R2,R4,R2
   \   00000BD6   D21C               ADDS     R2,R2,#+3
   \   00000BD8   1206               LSLS     R2,R2,#+24
   \   00000BDA   120E               LSRS     R2,R2,#+24
   \   00000BDC   0021               MOVS     R1,#+0
   \   00000BDE   AAA0               ADR      R0,??PaintProc_48+0x4  ;; 0x73, 0x00, 0x00, 0x00
   \   00000BE0   ........           BL       Label
   \   00000BE4   06B0               ADD      SP,SP,#+24
   \   00000BE6   4AE1               B        ??PaintProc_1
   \                     ??PaintProc_39:
   \   00000BE8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 220
   \   00000BEC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 248
   \   00000BF0   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000BF4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 164
   2623                    break;   
   2624                    
   2625          
   2626                      
   2627                    case ProcClock:
   2628                      
   2629                        CopyToCanvasPoint((char*)ProcClock_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_49:
   \   00000BF8   A44D               LDR      R5,??PaintProc_48+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000BFA   82B0               SUB      SP,SP,#+8
   \   00000BFC   0820               MOVS     R0,#+8
   \   00000BFE   0090               STR      R0,[SP, #+0]
   \   00000C00   1323               MOVS     R3,#+19
   \   00000C02   3A00               MOVS     R2,R7
   \   00000C04   D21C               ADDS     R2,R2,#+3
   \   00000C06   1206               LSLS     R2,R2,#+24
   \   00000C08   120E               LSRS     R2,R2,#+24
   \   00000C0A   2100               MOVS     R1,R4
   \   00000C0C   491C               ADDS     R1,R1,#+1
   \   00000C0E   0906               LSLS     R1,R1,#+24
   \   00000C10   090E               LSRS     R1,R1,#+24
   \   00000C12   A420               MOVS     R0,#+164
   \   00000C14   4000               LSLS     R0,R0,#+1        ;; #+328
   \   00000C16   2818               ADDS     R0,R5,R0
   \   00000C18   ........           BL       CopyToCanvasPoint
   \   00000C1C   02B0               ADD      SP,SP,#+8
   2630          
   2631                        Label((char*)ShortDate[Proc->Tag.ClkPrcType],0,x+2,y+11,1,17,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000C1E   0B37               ADDS     R7,R7,#+11
   \   00000C20   82B0               SUB      SP,SP,#+8
   \   00000C22   0020               MOVS     R0,#+0
   \   00000C24   0090               STR      R0,[SP, #+0]
   \   00000C26   7821               MOVS     R1,#+120
   \   00000C28   03B4               PUSH     {R0,R1}
   \   00000C2A   1121               MOVS     R1,#+17
   \   00000C2C   0120               MOVS     R0,#+1
   \   00000C2E   03B4               PUSH     {R0,R1}
   \   00000C30   3B00               MOVS     R3,R7
   \   00000C32   2200               MOVS     R2,R4
   \   00000C34   921C               ADDS     R2,R2,#+2
   \   00000C36   1206               LSLS     R2,R2,#+24
   \   00000C38   120E               LSRS     R2,R2,#+24
   \   00000C3A   0021               MOVS     R1,#+0
   \   00000C3C   9620               MOVS     R0,#+150
   \   00000C3E   C000               LSLS     R0,R0,#+3        ;; #+1200
   \   00000C40   8446               MOV      R12,R0
   \   00000C42   0898               LDR      R0,[SP, #+32]
   \   00000C44   067A               LDRB     R6,[R0, #+8]
   \   00000C46   0320               MOVS     R0,#+3
   \   00000C48   4643               MULS     R6,R0,R6
   \   00000C4A   AD19               ADDS     R5,R5,R6
   \   00000C4C   6046               MOV      R0,R12
   \   00000C4E   2818               ADDS     R0,R5,R0
   \   00000C50   ........           BL       Label
   \   00000C54   06B0               ADD      SP,SP,#+24
   2632                        CharToStr(Proc->Tag.ClkPrcVal, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000C56   0222               MOVS     R2,#+2
   \   00000C58   6946               MOV      R1,SP
   \   00000C5A   0298               LDR      R0,[SP, #+8]
   \   00000C5C   007A               LDRB     R0,[R0, #+8]
   \   00000C5E   ........           BL       CharToStr
   2633                        Label(txt,0,x+10,y+11,5,9,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000C62   82B0               SUB      SP,SP,#+8
   \   00000C64   0020               MOVS     R0,#+0
   \   00000C66   0090               STR      R0,[SP, #+0]
   \   00000C68   7821               MOVS     R1,#+120
   \   00000C6A   03B4               PUSH     {R0,R1}
   \   00000C6C   0921               MOVS     R1,#+9
   \   00000C6E   0520               MOVS     R0,#+5
   \   00000C70   03B4               PUSH     {R0,R1}
   \   00000C72   3B00               MOVS     R3,R7
   \   00000C74   0A34               ADDS     R4,R4,#+10
   \   00000C76   2200               MOVS     R2,R4
   \   00000C78   1206               LSLS     R2,R2,#+24
   \   00000C7A   120E               LSRS     R2,R2,#+24
   \   00000C7C   0021               MOVS     R1,#+0
   \   00000C7E   06A8               ADD      R0,SP,#+24
   \   00000C80   ........           BL       Label
   \   00000C84   06B0               ADD      SP,SP,#+24
   \   00000C86   FAE0               B        ??PaintProc_1
   2634                                
   2635                      break;         
   2636                    
   2637          
   2638                    case ProcDay:
   2639                      
   2640                        CopyToCanvasPoint((char*)ProcDay_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_50:
   \   00000C88   804D               LDR      R5,??PaintProc_48+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000C8A   82B0               SUB      SP,SP,#+8
   \   00000C8C   0820               MOVS     R0,#+8
   \   00000C8E   0090               STR      R0,[SP, #+0]
   \   00000C90   1323               MOVS     R3,#+19
   \   00000C92   3A00               MOVS     R2,R7
   \   00000C94   D21C               ADDS     R2,R2,#+3
   \   00000C96   1206               LSLS     R2,R2,#+24
   \   00000C98   120E               LSRS     R2,R2,#+24
   \   00000C9A   2100               MOVS     R1,R4
   \   00000C9C   491C               ADDS     R1,R1,#+1
   \   00000C9E   0906               LSLS     R1,R1,#+24
   \   00000CA0   090E               LSRS     R1,R1,#+24
   \   00000CA2   B020               MOVS     R0,#+176
   \   00000CA4   4000               LSLS     R0,R0,#+1        ;; #+352
   \   00000CA6   2818               ADDS     R0,R5,R0
   \   00000CA8   ........           BL       CopyToCanvasPoint
   \   00000CAC   02B0               ADD      SP,SP,#+8
   2641                        Label((char*)DeyOfWeekStr[g_leng][Proc->Tag.DayOfWeek],0,x+4,y+11,2,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000CAE   82B0               SUB      SP,SP,#+8
   \   00000CB0   0020               MOVS     R0,#+0
   \   00000CB2   0090               STR      R0,[SP, #+0]
   \   00000CB4   7821               MOVS     R1,#+120
   \   00000CB6   03B4               PUSH     {R0,R1}
   \   00000CB8   0F21               MOVS     R1,#+15
   \   00000CBA   0220               MOVS     R0,#+2
   \   00000CBC   03B4               PUSH     {R0,R1}
   \   00000CBE   0B37               ADDS     R7,R7,#+11
   \   00000CC0   3B00               MOVS     R3,R7
   \   00000CC2   241D               ADDS     R4,R4,#+4
   \   00000CC4   2200               MOVS     R2,R4
   \   00000CC6   1206               LSLS     R2,R2,#+24
   \   00000CC8   120E               LSRS     R2,R2,#+24
   \   00000CCA   0021               MOVS     R1,#+0
   \   00000CCC   9220               MOVS     R0,#+146
   \   00000CCE   C000               LSLS     R0,R0,#+3        ;; #+1168
   \   00000CD0   089C               LDR      R4,[SP, #+32]
   \   00000CD2   247A               LDRB     R4,[R4, #+8]
   \   00000CD4   6400               LSLS     R4,R4,#+1
   \   00000CD6   6E4E               LDR      R6,??PaintProc_48+0xC  ;; g_leng
   \   00000CD8   3668               LDR      R6,[R6, #+0]
   \   00000CDA   3601               LSLS     R6,R6,#+4
   \   00000CDC   AD19               ADDS     R5,R5,R6
   \   00000CDE   2C19               ADDS     R4,R5,R4
   \   00000CE0   2018               ADDS     R0,R4,R0
   \   00000CE2   ........           BL       Label
   \   00000CE6   06B0               ADD      SP,SP,#+24
   \   00000CE8   C9E0               B        ??PaintProc_1
   2642                     
   2643                      break;         
   2644                    
   2645                    
   2646                    case ProcConstAnal:
   2647                      
   2648                        //CopyToCanvasPoint((char*)ProcConstAnal_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   2649                        
   2650          
   2651                        H_line(x+2 ,y+2,19,1);
   \                     ??PaintProc_51:
   \   00000CEA   0123               MOVS     R3,#+1
   \   00000CEC   1322               MOVS     R2,#+19
   \   00000CEE   3900               MOVS     R1,R7
   \   00000CF0   891C               ADDS     R1,R1,#+2
   \   00000CF2   2000               MOVS     R0,R4
   \   00000CF4   801C               ADDS     R0,R0,#+2
   \   00000CF6   0006               LSLS     R0,R0,#+24
   \   00000CF8   000E               LSRS     R0,R0,#+24
   \   00000CFA   ........           BL       H_line
   2652                        V_line(x+20 ,y+3,6,1);
   \   00000CFE   3D00               MOVS     R5,R7
   \   00000D00   ED1C               ADDS     R5,R5,#+3
   \   00000D02   0123               MOVS     R3,#+1
   \   00000D04   0622               MOVS     R2,#+6
   \   00000D06   2900               MOVS     R1,R5
   \   00000D08   2000               MOVS     R0,R4
   \   00000D0A   1430               ADDS     R0,R0,#+20
   \   00000D0C   0006               LSLS     R0,R0,#+24
   \   00000D0E   000E               LSRS     R0,R0,#+24
   \   00000D10   ........           BL       V_line
   2653                        
   2654                        ind=sIntToStr(Proc->Tag.ConstAnValue, txt);
   \   00000D14   6946               MOV      R1,SP
   \   00000D16   0820               MOVS     R0,#+8
   \   00000D18   029A               LDR      R2,[SP, #+8]
   \   00000D1A   105E               LDRSH    R0,[R2, R0]
   \   00000D1C   ........           BL       sIntToStr
   \   00000D20   0600               MOVS     R6,R0
   2655                        
   2656                        if (ind>4)
   \   00000D22   0528               CMP      R0,#+5
   \   00000D24   29D3               BCC      ??PaintProc_52
   2657                        { 
   2658                          Label(txt,1,x+18,y+11,ind-4 ,4,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000D26   1234               ADDS     R4,R4,#+18
   \   00000D28   82B0               SUB      SP,SP,#+8
   \   00000D2A   0020               MOVS     R0,#+0
   \   00000D2C   0090               STR      R0,[SP, #+0]
   \   00000D2E   7821               MOVS     R1,#+120
   \   00000D30   03B4               PUSH     {R0,R1}
   \   00000D32   0421               MOVS     R1,#+4
   \   00000D34   3000               MOVS     R0,R6
   \   00000D36   001F               SUBS     R0,R0,#+4
   \   00000D38   0006               LSLS     R0,R0,#+24
   \   00000D3A   000E               LSRS     R0,R0,#+24
   \   00000D3C   03B4               PUSH     {R0,R1}
   \   00000D3E   0B37               ADDS     R7,R7,#+11
   \   00000D40   3B00               MOVS     R3,R7
   \   00000D42   2200               MOVS     R2,R4
   \   00000D44   1206               LSLS     R2,R2,#+24
   \   00000D46   120E               LSRS     R2,R2,#+24
   \   00000D48   0121               MOVS     R1,#+1
   \   00000D4A   06A8               ADD      R0,SP,#+24
   \   00000D4C   ........           BL       Label
   \   00000D50   06B0               ADD      SP,SP,#+24
   2659                          Label(&(txt[ind-4]),1,x+18,y+3,4 ,16,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000D52   82B0               SUB      SP,SP,#+8
   \   00000D54   0020               MOVS     R0,#+0
   \   00000D56   0090               STR      R0,[SP, #+0]
   \   00000D58   7821               MOVS     R1,#+120
   \   00000D5A   03B4               PUSH     {R0,R1}
   \   00000D5C   1021               MOVS     R1,#+16
   \   00000D5E   0420               MOVS     R0,#+4
   \   00000D60   03B4               PUSH     {R0,R1}
   \   00000D62   2B00               MOVS     R3,R5
   \   00000D64   2200               MOVS     R2,R4
   \   00000D66   1206               LSLS     R2,R2,#+24
   \   00000D68   120E               LSRS     R2,R2,#+24
   \   00000D6A   0121               MOVS     R1,#+1
   \   00000D6C   06A8               ADD      R0,SP,#+24
   \   00000D6E   8019               ADDS     R0,R0,R6
   \   00000D70   001F               SUBS     R0,R0,#+4
   \   00000D72   ........           BL       Label
   \   00000D76   06B0               ADD      SP,SP,#+24
   \   00000D78   81E0               B        ??PaintProc_1
   2660                        }else{
   2661                          Label(txt,1,x+19,y+3,ind,16,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_52:
   \   00000D7A   82B0               SUB      SP,SP,#+8
   \   00000D7C   0020               MOVS     R0,#+0
   \   00000D7E   0090               STR      R0,[SP, #+0]
   \   00000D80   7821               MOVS     R1,#+120
   \   00000D82   03B4               PUSH     {R0,R1}
   \   00000D84   1021               MOVS     R1,#+16
   \   00000D86   3000               MOVS     R0,R6
   \   00000D88   03B4               PUSH     {R0,R1}
   \   00000D8A   2B00               MOVS     R3,R5
   \   00000D8C   1334               ADDS     R4,R4,#+19
   \   00000D8E   2200               MOVS     R2,R4
   \   00000D90   1206               LSLS     R2,R2,#+24
   \   00000D92   120E               LSRS     R2,R2,#+24
   \   00000D94   0121               MOVS     R1,#+1
   \   00000D96   06A8               ADD      R0,SP,#+24
   \   00000D98   ........           BL       Label
   \   00000D9C   06B0               ADD      SP,SP,#+24
   \   00000D9E   6EE0               B        ??PaintProc_1
   2662                         
   2663                        }
   2664                        //Label((char*)DeyOfWeekStr[g_leng][Proc->Tag.DayOfWeek],0,x+4,y+11,2,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2665                         
   2666                       
   2667                        
   2668                        
   2669                      break;   
   2670                      
   2671                     case ProcGetReg:
   2672                        CopyToCanvasPoint((char*)ProcGetAnal_graf, x+1, y+3, 19,17);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_53:
   \   00000DA0   82B0               SUB      SP,SP,#+8
   \   00000DA2   1120               MOVS     R0,#+17
   \   00000DA4   0090               STR      R0,[SP, #+0]
   \   00000DA6   1323               MOVS     R3,#+19
   \   00000DA8   3A00               MOVS     R2,R7
   \   00000DAA   D21C               ADDS     R2,R2,#+3
   \   00000DAC   1206               LSLS     R2,R2,#+24
   \   00000DAE   120E               LSRS     R2,R2,#+24
   \   00000DB0   2100               MOVS     R1,R4
   \   00000DB2   491C               ADDS     R1,R1,#+1
   \   00000DB4   0906               LSLS     R1,R1,#+24
   \   00000DB6   090E               LSRS     R1,R1,#+24
   \   00000DB8   3648               LDR      R0,??PaintProc_48+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 916
   \   00000DBA   ........           BL       CopyToCanvasPoint
   \   00000DBE   02B0               ADD      SP,SP,#+8
   2673                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000DC0   0222               MOVS     R2,#+2
   \   00000DC2   6946               MOV      R1,SP
   \   00000DC4   0120               MOVS     R0,#+1
   \   00000DC6   029B               LDR      R3,[SP, #+8]
   \   00000DC8   1856               LDRSB    R0,[R3, R0]
   \   00000DCA   0006               LSLS     R0,R0,#+24
   \   00000DCC   000E               LSRS     R0,R0,#+24
   \   00000DCE   ........           BL       CharToStr
   \   00000DD2   0600               MOVS     R6,R0
   2674                        txt[ind]='.';
   \   00000DD4   6D46               MOV      R5,SP
   \   00000DD6   A919               ADDS     R1,R5,R6
   \   00000DD8   2E20               MOVS     R0,#+46
   \   00000DDA   0870               STRB     R0,[R1, #+0]
   2675                        CharToStr(Proc->Tag.RegNr, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000DDC   0222               MOVS     R2,#+2
   \   00000DDE   491C               ADDS     R1,R1,#+1
   \   00000DE0   0298               LDR      R0,[SP, #+8]
   \   00000DE2   007A               LDRB     R0,[R0, #+8]
   \   00000DE4   ........           BL       CharToStr
   2676                       
   2677                        Label(txt,0,x+2, y+4,5,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000DE8   82B0               SUB      SP,SP,#+8
   \   00000DEA   0020               MOVS     R0,#+0
   \   00000DEC   0090               STR      R0,[SP, #+0]
   \   00000DEE   7821               MOVS     R1,#+120
   \   00000DF0   03B4               PUSH     {R0,R1}
   \   00000DF2   0F21               MOVS     R1,#+15
   \   00000DF4   0520               MOVS     R0,#+5
   \   00000DF6   03B4               PUSH     {R0,R1}
   \   00000DF8   3F1D               ADDS     R7,R7,#+4
   \   00000DFA   3B00               MOVS     R3,R7
   \   00000DFC   A41C               ADDS     R4,R4,#+2
   \   00000DFE   2200               MOVS     R2,R4
   \   00000E00   1206               LSLS     R2,R2,#+24
   \   00000E02   120E               LSRS     R2,R2,#+24
   \   00000E04   0021               MOVS     R1,#+0
   \   00000E06   06A8               ADD      R0,SP,#+24
   \   00000E08   ........           BL       Label
   \   00000E0C   06B0               ADD      SP,SP,#+24
   \   00000E0E   36E0               B        ??PaintProc_1
   2678          
   2679                      break;   
   2680                      
   2681                      case ProcSetReg:
   2682                        CopyToCanvasPoint((char*)ProcSetAnal_graf, x+1, y+3, 19,17);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_54:
   \   00000E10   82B0               SUB      SP,SP,#+8
   \   00000E12   1120               MOVS     R0,#+17
   \   00000E14   0090               STR      R0,[SP, #+0]
   \   00000E16   1323               MOVS     R3,#+19
   \   00000E18   3A00               MOVS     R2,R7
   \   00000E1A   D21C               ADDS     R2,R2,#+3
   \   00000E1C   1206               LSLS     R2,R2,#+24
   \   00000E1E   120E               LSRS     R2,R2,#+24
   \   00000E20   2100               MOVS     R1,R4
   \   00000E22   491C               ADDS     R1,R1,#+1
   \   00000E24   0906               LSLS     R1,R1,#+24
   \   00000E26   090E               LSRS     R1,R1,#+24
   \   00000E28   1B48               LDR      R0,??PaintProc_48+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 968
   \   00000E2A   ........           BL       CopyToCanvasPoint
   \   00000E2E   02B0               ADD      SP,SP,#+8
   2683                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000E30   0222               MOVS     R2,#+2
   \   00000E32   6946               MOV      R1,SP
   \   00000E34   0120               MOVS     R0,#+1
   \   00000E36   029B               LDR      R3,[SP, #+8]
   \   00000E38   1856               LDRSB    R0,[R3, R0]
   \   00000E3A   0006               LSLS     R0,R0,#+24
   \   00000E3C   000E               LSRS     R0,R0,#+24
   \   00000E3E   ........           BL       CharToStr
   \   00000E42   0600               MOVS     R6,R0
   2684                        txt[ind]='.';
   \   00000E44   6D46               MOV      R5,SP
   \   00000E46   A919               ADDS     R1,R5,R6
   \   00000E48   2E20               MOVS     R0,#+46
   \   00000E4A   0870               STRB     R0,[R1, #+0]
   2685                        CharToStr(Proc->Tag.RegNr, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000E4C   0222               MOVS     R2,#+2
   \   00000E4E   491C               ADDS     R1,R1,#+1
   \   00000E50   0298               LDR      R0,[SP, #+8]
   \   00000E52   007A               LDRB     R0,[R0, #+8]
   \   00000E54   ........           BL       CharToStr
   2686                       
   2687                        Label(txt,0,x+3, y+4,5,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000E58   82B0               SUB      SP,SP,#+8
   \   00000E5A   0020               MOVS     R0,#+0
   \   00000E5C   0090               STR      R0,[SP, #+0]
   \   00000E5E   7821               MOVS     R1,#+120
   \   00000E60   03B4               PUSH     {R0,R1}
   \   00000E62   0F21               MOVS     R1,#+15
   \   00000E64   0520               MOVS     R0,#+5
   \   00000E66   03B4               PUSH     {R0,R1}
   \   00000E68   3F1D               ADDS     R7,R7,#+4
   \   00000E6A   3B00               MOVS     R3,R7
   \   00000E6C   E41C               ADDS     R4,R4,#+3
   \   00000E6E   2200               MOVS     R2,R4
   \   00000E70   1206               LSLS     R2,R2,#+24
   \   00000E72   120E               LSRS     R2,R2,#+24
   \   00000E74   0021               MOVS     R1,#+0
   \   00000E76   06A8               ADD      R0,SP,#+24
   \   00000E78   ........           BL       Label
   \   00000E7C   06B0               ADD      SP,SP,#+24
   2688          
   2689                      break;   
   2690                      
   2691                      
   2692                    }
   2693                    
   2694                    
   2695                    
   2696                }//_______________________________________________________________________
   \                     ??PaintProc_1:
   \   00000E7E   FEBC               POP      {R1-R7}
   \   00000E80   01BC               POP      {R0}
   \   00000E82   0047               BX       R0               ;; return
   \                     ??PaintProc_48:
   \   00000E84   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 304
   \   00000E88   73000000           DC8      0x73, 0x00, 0x00, 0x00
   \   00000E8C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000E90   ........           DC32     g_leng
   \   00000E94   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 916
   \   00000E98   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 968
   2697                
   2698                
   2699                
   2700          
   2701          //lader **************************************************************************************************************
   2702                char LaderLine=0;
   2703                char LaderCol=0;
   2704                //*----------------------------------------------------------------------------
   2705                #define MaxRow 3
   2706                #define MaxCol 3
   2707                

   \                                 In section Debug.txt, align 4, keep-with-next
   2708                void Lader_Paint(void)
   2709                {  
   \                     Lader_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   2710                  
   2711                char txt[5];
   2712                 
   2713                
   2714                 List_Paint("Program ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   78A0               ADR      R0,??Lader_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   7548               LDR      R0,??Lader_Paint_0+0x4  ;; `?<Constant "Info ">` + 44
   \   0000001E   ........           BL       List_Paint
   \   00000022   0AB0               ADD      SP,SP,#+40
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   3DE0               B        ??Lader_Paint_1
   2715          
   2716                //siatka
   2717                
   2718                for (char i=0; i<4; i++)
   2719                {
   2720                    H_line(3,44+i*21,58,2);   
   \                     ??Lader_Paint_2:
   \   00000028   2E00               MOVS     R6,R5
   \   0000002A   1520               MOVS     R0,#+21
   \   0000002C   4643               MULS     R6,R0,R6
   \   0000002E   0223               MOVS     R3,#+2
   \   00000030   3A22               MOVS     R2,#+58
   \   00000032   3100               MOVS     R1,R6
   \   00000034   2C31               ADDS     R1,R1,#+44
   \   00000036   0320               MOVS     R0,#+3
   \   00000038   ........           BL       H_line
   \   0000003C   6E48               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 18
   \   0000003E   0078               LDRB     R0,[R0, #+0]
   \   00000040   0028               CMP      R0,#+0
   \   00000042   2CD1               BNE      ??Lader_Paint_3
   \   00000044   2800               MOVS     R0,R5
   \   00000046   0328               CMP      R0,#+3
   \   00000048   29D2               BCS      ??Lader_Paint_3
   2721                    if ((LaderCol==0) && (i<3))
   2722                    { 
   2723                       CharToStr(LaderLine+3-i, txt, 3); //(char Value, char *Vstring, char ill);
   \   0000004A   0322               MOVS     R2,#+3
   \   0000004C   01A9               ADD      R1,SP,#+4
   \   0000004E   6B48               LDR      R0,??Lader_Paint_0+0xC  ;; TextToChangeLength + 17
   \   00000050   0078               LDRB     R0,[R0, #+0]
   \   00000052   C01C               ADDS     R0,R0,#+3
   \   00000054   2B00               MOVS     R3,R5
   \   00000056   C01A               SUBS     R0,R0,R3
   \   00000058   0006               LSLS     R0,R0,#+24
   \   0000005A   000E               LSRS     R0,R0,#+24
   \   0000005C   ........           BL       CharToStr
   2724                       Label(txt,0,3,51+i*21,4,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000060   3400               MOVS     R4,R6
   \   00000062   3334               ADDS     R4,R4,#+51
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   6921               MOVS     R1,#+105
   \   0000006C   1020               MOVS     R0,#+16
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   1721               MOVS     R1,#+23
   \   00000072   0420               MOVS     R0,#+4
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   2300               MOVS     R3,R4
   \   00000078   0322               MOVS     R2,#+3
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   07A8               ADD      R0,SP,#+28
   \   0000007E   ........           BL       Label
   \   00000082   06B0               ADD      SP,SP,#+24
   2725          
   2726                       H_line(17,50+i*21,5,1); 
   \   00000084   0123               MOVS     R3,#+1
   \   00000086   0522               MOVS     R2,#+5
   \   00000088   3236               ADDS     R6,R6,#+50
   \   0000008A   3100               MOVS     R1,R6
   \   0000008C   1120               MOVS     R0,#+17
   \   0000008E   ........           BL       H_line
   2727                       H_line(17,51+i*21,5,1); 
   \   00000092   0123               MOVS     R3,#+1
   \   00000094   0522               MOVS     R2,#+5
   \   00000096   2100               MOVS     R1,R4
   \   00000098   1120               MOVS     R0,#+17
   \   0000009A   ........           BL       H_line
   2728                    }
   2729                }
   \                     ??Lader_Paint_3:
   \   0000009E   6D1C               ADDS     R5,R5,#+1
   \   000000A0   2D06               LSLS     R5,R5,#+24
   \   000000A2   2D0E               LSRS     R5,R5,#+24
   \                     ??Lader_Paint_1:
   \   000000A4   2800               MOVS     R0,R5
   \   000000A6   0428               CMP      R0,#+4
   \   000000A8   BED3               BCC      ??Lader_Paint_2
   2730                for (char i=0; i<4; i++)
   \   000000AA   0024               MOVS     R4,#+0
   \   000000AC   1425               MOVS     R5,#+20
   \   000000AE   0BE0               B        ??Lader_Paint_4
   2731                {
   2732                    V_line(1+i*20,44,64,2);         
   \                     ??Lader_Paint_5:
   \   000000B0   0223               MOVS     R3,#+2
   \   000000B2   4022               MOVS     R2,#+64
   \   000000B4   2C21               MOVS     R1,#+44
   \   000000B6   6843               MULS     R0,R5,R0
   \   000000B8   401C               ADDS     R0,R0,#+1
   \   000000BA   0006               LSLS     R0,R0,#+24
   \   000000BC   000E               LSRS     R0,R0,#+24
   \   000000BE   ........           BL       V_line
   2733                }
   \   000000C2   641C               ADDS     R4,R4,#+1
   \   000000C4   2406               LSLS     R4,R4,#+24
   \   000000C6   240E               LSRS     R4,R4,#+24
   \                     ??Lader_Paint_4:
   \   000000C8   2000               MOVS     R0,R4
   \   000000CA   0428               CMP      R0,#+4
   \   000000CC   F0D3               BCC      ??Lader_Paint_5
   \   000000CE   4A48               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 18
   \   000000D0   0078               LDRB     R0,[R0, #+0]
   \   000000D2   0028               CMP      R0,#+0
   \   000000D4   11D1               BNE      ??Lader_Paint_6
   2734                //------koniec siatki
   2735                
   2736                
   2737                if (LaderCol==0)
   2738                {
   2739                   V_line(16,44,64,1);
   \   000000D6   0123               MOVS     R3,#+1
   \   000000D8   4022               MOVS     R2,#+64
   \   000000DA   2C21               MOVS     R1,#+44
   \   000000DC   1020               MOVS     R0,#+16
   \   000000DE   ........           BL       V_line
   2740                   V_line(17,44,64,1);  
   \   000000E2   0123               MOVS     R3,#+1
   \   000000E4   4022               MOVS     R2,#+64
   \   000000E6   2C21               MOVS     R1,#+44
   \   000000E8   1120               MOVS     R0,#+17
   \   000000EA   ........           BL       V_line
   2741                   V_line(18,44,64,1); 
   \   000000EE   0123               MOVS     R3,#+1
   \   000000F0   4022               MOVS     R2,#+64
   \   000000F2   2C21               MOVS     R1,#+44
   \   000000F4   1220               MOVS     R0,#+18
   \   000000F6   ........           BL       V_line
   2742                }
   2743                
   2744                CharToStr(LaderCol, txt, 2); //(char Value, char *Vstring, char ill);
   \                     ??Lader_Paint_6:
   \   000000FA   0222               MOVS     R2,#+2
   \   000000FC   01A9               ADD      R1,SP,#+4
   \   000000FE   3E48               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 18
   \   00000100   0078               LDRB     R0,[R0, #+0]
   \   00000102   ........           BL       CharToStr
   2745                Label(txt,0,8,35,8,23,16,105,0);
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   0020               MOVS     R0,#+0
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   6921               MOVS     R1,#+105
   \   0000010E   1020               MOVS     R0,#+16
   \   00000110   03B4               PUSH     {R0,R1}
   \   00000112   1721               MOVS     R1,#+23
   \   00000114   0820               MOVS     R0,#+8
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   2323               MOVS     R3,#+35
   \   0000011A   0200               MOVS     R2,R0
   \   0000011C   0021               MOVS     R1,#+0
   \   0000011E   07A8               ADD      R0,SP,#+28
   \   00000120   ........           BL       Label
   \   00000124   06B0               ADD      SP,SP,#+24
   2746                  
   2747                
   2748                  //Label(Speech[g_leng].UruchomienieSter,0,2,j+(Label_move*2)-8,15,8,16,96,0); break;
   2749                   
   2750                      char LabelButt[2];
   2751                      LabelButt[1]=0;
   \   00000126   6C46               MOV      R4,SP
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   6070               STRB     R0,[R4, #+1]
   2752                      LabelButt[0]=30;
   \   0000012C   1E20               MOVS     R0,#+30
   \   0000012E   2070               STRB     R0,[R4, #+0]
   2753                      Button(LabelButt,22,23,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000130   82B0               SUB      SP,SP,#+8
   \   00000132   1220               MOVS     R0,#+18
   \   00000134   0090               STR      R0,[SP, #+0]
   \   00000136   2B00               MOVS     R3,R5
   \   00000138   1722               MOVS     R2,#+23
   \   0000013A   1621               MOVS     R1,#+22
   \   0000013C   02A8               ADD      R0,SP,#+8
   \   0000013E   ........           BL       Button
   \   00000142   02B0               ADD      SP,SP,#+8
   2754                      LabelButt[0]=31;
   \   00000144   1F20               MOVS     R0,#+31
   \   00000146   2070               STRB     R0,[R4, #+0]
   2755                      Button(LabelButt,22,3,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   1220               MOVS     R0,#+18
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   2B00               MOVS     R3,R5
   \   00000150   0322               MOVS     R2,#+3
   \   00000152   1621               MOVS     R1,#+22
   \   00000154   02A8               ADD      R0,SP,#+8
   \   00000156   ........           BL       Button
   \   0000015A   02B0               ADD      SP,SP,#+8
   2756                      LabelButt[0]='>';
   \   0000015C   3E20               MOVS     R0,#+62
   \   0000015E   2070               STRB     R0,[R4, #+0]
   2757                      Button(LabelButt,42,13,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000160   82B0               SUB      SP,SP,#+8
   \   00000162   1220               MOVS     R0,#+18
   \   00000164   0090               STR      R0,[SP, #+0]
   \   00000166   2B00               MOVS     R3,R5
   \   00000168   0D22               MOVS     R2,#+13
   \   0000016A   2A21               MOVS     R1,#+42
   \   0000016C   02A8               ADD      R0,SP,#+8
   \   0000016E   ........           BL       Button
   \   00000172   02B0               ADD      SP,SP,#+8
   2758                      LabelButt[0]='<';
   \   00000174   3C20               MOVS     R0,#+60
   \   00000176   2070               STRB     R0,[R4, #+0]
   2759                      Button(LabelButt,2,13,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   1220               MOVS     R0,#+18
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   2B00               MOVS     R3,R5
   \   00000180   0D22               MOVS     R2,#+13
   \   00000182   0221               MOVS     R1,#+2
   \   00000184   02A8               ADD      R0,SP,#+8
   \   00000186   ........           BL       Button
   \   0000018A   02B0               ADD      SP,SP,#+8
   2760                     
   2761                  char row, col;
   2762          
   2763          
   2764              
   2765                  row=LaderLine; 
   \   0000018C   1B48               LDR      R0,??Lader_Paint_0+0xC  ;; TextToChangeLength + 17
   \   0000018E   0478               LDRB     R4,[R0, #+0]
   2766                  for (int j=(MaxRow-1); j>=0; j--)
   \   00000190   0225               MOVS     R5,#+2
   \   00000192   24E0               B        ??Lader_Paint_7
   2767                  {
   2768                    
   2769                    col=LaderCol;
   2770                    for (int i=0; i<MaxCol; i++)
   2771                    {
   2772                      
   2773                      //if (LaderCol) PaintProc(21+j*20,44+i*21,&gProg.Line[row].Proc[col-1]);
   2774                      if ((LaderCol) || ((LaderCol==0)&&(i!=0)))  PaintProc(1+i*20,44+j*21,&gProg.Line[row].Proc[col-1]);
   \                     ??Lader_Paint_8:
   \   00000194   1848               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 18
   \   00000196   0078               LDRB     R0,[R0, #+0]
   \   00000198   0028               CMP      R0,#+0
   \   0000019A   01D1               BNE      ??Lader_Paint_9
   \   0000019C   002E               CMP      R6,#+0
   \   0000019E   14D0               BEQ      ??Lader_Paint_10
   \                     ??Lader_Paint_9:
   \   000001A0   3800               MOVS     R0,R7
   \   000001A2   1821               MOVS     R1,#+24
   \   000001A4   4843               MULS     R0,R1,R0
   \   000001A6   2100               MOVS     R1,R4
   \   000001A8   F022               MOVS     R2,#+240
   \   000001AA   5143               MULS     R1,R2,R1
   \   000001AC   144A               LDR      R2,??Lader_Paint_0+0x10  ;; gProg
   \   000001AE   5118               ADDS     R1,R2,R1
   \   000001B0   0A18               ADDS     R2,R1,R0
   \   000001B2   1521               MOVS     R1,#+21
   \   000001B4   6943               MULS     R1,R5,R1
   \   000001B6   2C31               ADDS     R1,R1,#+44
   \   000001B8   0906               LSLS     R1,R1,#+24
   \   000001BA   090E               LSRS     R1,R1,#+24
   \   000001BC   1420               MOVS     R0,#+20
   \   000001BE   7043               MULS     R0,R6,R0
   \   000001C0   401C               ADDS     R0,R0,#+1
   \   000001C2   0006               LSLS     R0,R0,#+24
   \   000001C4   000E               LSRS     R0,R0,#+24
   \   000001C6   ........           BL       PaintProc
   2775                      col++;
   \                     ??Lader_Paint_10:
   \   000001CA   7F1C               ADDS     R7,R7,#+1
   \   000001CC   3F06               LSLS     R7,R7,#+24
   \   000001CE   3F0E               LSRS     R7,R7,#+24
   2776                    }
   \   000001D0   761C               ADDS     R6,R6,#+1
   \                     ??Lader_Paint_11:
   \   000001D2   032E               CMP      R6,#+3
   \   000001D4   DEDB               BLT      ??Lader_Paint_8
   2777                    row++;
   \   000001D6   641C               ADDS     R4,R4,#+1
   \   000001D8   2406               LSLS     R4,R4,#+24
   \   000001DA   240E               LSRS     R4,R4,#+24
   \   000001DC   6D1E               SUBS     R5,R5,#+1
   \                     ??Lader_Paint_7:
   \   000001DE   002D               CMP      R5,#+0
   \   000001E0   03D4               BMI      ??Lader_Paint_12
   \   000001E2   0548               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 18
   \   000001E4   0778               LDRB     R7,[R0, #+0]
   \   000001E6   0026               MOVS     R6,#+0
   \   000001E8   F3E7               B        ??Lader_Paint_11
   2778                  }
   2779                  
   2780                }//________________________________________________________________________
   \                     ??Lader_Paint_12:
   \   000001EA   FEBC               POP      {R1-R7}
   \   000001EC   01BC               POP      {R0}
   \   000001EE   0047               BX       R0               ;; return
   \                     ??Lader_Paint_0:
   \   000001F0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001F4   ........           DC32     `?<Constant "Info ">` + 44
   \   000001F8   ........           DC32     TextToChangeLength + 18
   \   000001FC   ........           DC32     TextToChangeLength + 17
   \   00000200   ........           DC32     gProg
   2781          
   2782              
   2783                //*-----------------------------------------------------------------------------
   2784                long long int Touch_EventTime;
   2785                char ChoseRow, ChoseCol;

   \                                 In section Debug.txt, align 4, keep-with-next
   2786                void Lader_Event(void)
   2787                {
   \                     Lader_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   6D46               MOV      R5,SP
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   6870               STRB     R0,[R5, #+1]
   2788                 char LabelButt[2];
   2789                      LabelButt[1]=0;
   2790                      LabelButt[0]='>';
   \   00000008   3E20               MOVS     R0,#+62
   \   0000000A   2870               STRB     R0,[R5, #+0]
   2791                      if ((Button(LabelButt,42,13,20,18)) && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) && (LaderCol<=MaxPrcInLine-MaxCol))
   \   0000000C   82B0               SUB      SP,SP,#+8
   \   0000000E   1220               MOVS     R0,#+18
   \   00000010   0090               STR      R0,[SP, #+0]
   \   00000012   1423               MOVS     R3,#+20
   \   00000014   0D22               MOVS     R2,#+13
   \   00000016   2A21               MOVS     R1,#+42
   \   00000018   02A8               ADD      R0,SP,#+8
   \   0000001A   ........           BL       Button
   \   0000001E   02B0               ADD      SP,SP,#+8
   \   00000020   0028               CMP      R0,#+0
   \   00000022   1DD0               BEQ      ??Lader_Event_0
   \   00000024   AB4C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   00000026   2000               MOVS     R0,R4
   \   00000028   3830               ADDS     R0,R0,#+56
   \   0000002A   C0C8               LDM      R0!,{R6,R7}
   \   0000002C   AA48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   0000002E   03C8               LDM      R0!,{R0,R1}
   \   00000030   C822               MOVS     R2,#+200
   \   00000032   0023               MOVS     R3,#+0
   \   00000034   9219               ADDS     R2,R2,R6
   \   00000036   7B41               ADCS     R3,R3,R7
   \   00000038   8B42               CMP      R3,R1
   \   0000003A   07D3               BCC      ??Lader_Event_2
   \   0000003C   01D8               BHI      ??Lader_Event_3
   \   0000003E   8242               CMP      R2,R0
   \   00000040   04D3               BCC      ??Lader_Event_2
   \                     ??Lader_Event_3:
   \   00000042   B942               CMP      R1,R7
   \   00000044   0CD8               BHI      ??Lader_Event_0
   \   00000046   01D3               BCC      ??Lader_Event_2
   \   00000048   B042               CMP      R0,R6
   \   0000004A   09D2               BCS      ??Lader_Event_0
   \                     ??Lader_Event_2:
   \   0000004C   A27C               LDRB     R2,[R4, #+18]
   \   0000004E   082A               CMP      R2,#+8
   \   00000050   06D2               BCS      ??Lader_Event_0
   2792                      {
   2793                        Touch_EventTime=g_counter;
   \   00000052   2300               MOVS     R3,R4
   \   00000054   3833               ADDS     R3,R3,#+56
   \   00000056   03C3               STM      R3!,{R0,R1}
   2794                        LaderCol++;    //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000058   521C               ADDS     R2,R2,#+1
   \   0000005A   A274               STRB     R2,[R4, #+18]
   2795                        MenuPaint();
   \   0000005C   ........           BL       MenuPaint
   2796                      }
   2797                      LabelButt[0]='<';
   \                     ??Lader_Event_0:
   \   00000060   3C20               MOVS     R0,#+60
   \   00000062   2870               STRB     R0,[R5, #+0]
   2798                      if ((Button(LabelButt,2,13,20,18))  && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) && (LaderCol>0))            
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   1220               MOVS     R0,#+18
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   1423               MOVS     R3,#+20
   \   0000006C   0D22               MOVS     R2,#+13
   \   0000006E   0221               MOVS     R1,#+2
   \   00000070   02A8               ADD      R0,SP,#+8
   \   00000072   ........           BL       Button
   \   00000076   02B0               ADD      SP,SP,#+8
   \   00000078   0028               CMP      R0,#+0
   \   0000007A   1DD0               BEQ      ??Lader_Event_4
   \   0000007C   954C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   0000007E   2000               MOVS     R0,R4
   \   00000080   3830               ADDS     R0,R0,#+56
   \   00000082   C0C8               LDM      R0!,{R6,R7}
   \   00000084   9448               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000086   03C8               LDM      R0!,{R0,R1}
   \   00000088   C822               MOVS     R2,#+200
   \   0000008A   0023               MOVS     R3,#+0
   \   0000008C   9219               ADDS     R2,R2,R6
   \   0000008E   7B41               ADCS     R3,R3,R7
   \   00000090   8B42               CMP      R3,R1
   \   00000092   07D3               BCC      ??Lader_Event_5
   \   00000094   01D8               BHI      ??Lader_Event_6
   \   00000096   8242               CMP      R2,R0
   \   00000098   04D3               BCC      ??Lader_Event_5
   \                     ??Lader_Event_6:
   \   0000009A   B942               CMP      R1,R7
   \   0000009C   0CD8               BHI      ??Lader_Event_4
   \   0000009E   01D3               BCC      ??Lader_Event_5
   \   000000A0   B042               CMP      R0,R6
   \   000000A2   09D2               BCS      ??Lader_Event_4
   \                     ??Lader_Event_5:
   \   000000A4   A27C               LDRB     R2,[R4, #+18]
   \   000000A6   002A               CMP      R2,#+0
   \   000000A8   06D0               BEQ      ??Lader_Event_4
   2799                      {
   2800                        Touch_EventTime=g_counter;
   \   000000AA   2300               MOVS     R3,R4
   \   000000AC   3833               ADDS     R3,R3,#+56
   \   000000AE   03C3               STM      R3!,{R0,R1}
   2801                        LaderCol--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B0   501E               SUBS     R0,R2,#+1
   \   000000B2   A074               STRB     R0,[R4, #+18]
   2802                        MenuPaint();
   \   000000B4   ........           BL       MenuPaint
   2803                      } 
   2804                      
   2805                      LabelButt[0]=30;
   \                     ??Lader_Event_4:
   \   000000B8   1E20               MOVS     R0,#+30
   \   000000BA   2870               STRB     R0,[R5, #+0]
   2806                      if ((Button(LabelButt,22,23,20,18))  && ((g_counter>Touch_EventTime+50) || (Touch_EventTime>g_counter)) && (LaderLine>0))            
   \   000000BC   82B0               SUB      SP,SP,#+8
   \   000000BE   1220               MOVS     R0,#+18
   \   000000C0   0090               STR      R0,[SP, #+0]
   \   000000C2   1423               MOVS     R3,#+20
   \   000000C4   1722               MOVS     R2,#+23
   \   000000C6   1621               MOVS     R1,#+22
   \   000000C8   02A8               ADD      R0,SP,#+8
   \   000000CA   ........           BL       Button
   \   000000CE   02B0               ADD      SP,SP,#+8
   \   000000D0   0028               CMP      R0,#+0
   \   000000D2   1DD0               BEQ      ??Lader_Event_7
   \   000000D4   7F4C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   000000D6   2000               MOVS     R0,R4
   \   000000D8   3830               ADDS     R0,R0,#+56
   \   000000DA   C0C8               LDM      R0!,{R6,R7}
   \   000000DC   7E48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000000DE   03C8               LDM      R0!,{R0,R1}
   \   000000E0   3222               MOVS     R2,#+50
   \   000000E2   0023               MOVS     R3,#+0
   \   000000E4   9219               ADDS     R2,R2,R6
   \   000000E6   7B41               ADCS     R3,R3,R7
   \   000000E8   8B42               CMP      R3,R1
   \   000000EA   07D3               BCC      ??Lader_Event_8
   \   000000EC   01D8               BHI      ??Lader_Event_9
   \   000000EE   8242               CMP      R2,R0
   \   000000F0   04D3               BCC      ??Lader_Event_8
   \                     ??Lader_Event_9:
   \   000000F2   B942               CMP      R1,R7
   \   000000F4   0CD8               BHI      ??Lader_Event_7
   \   000000F6   01D3               BCC      ??Lader_Event_8
   \   000000F8   B042               CMP      R0,R6
   \   000000FA   09D2               BCS      ??Lader_Event_7
   \                     ??Lader_Event_8:
   \   000000FC   627C               LDRB     R2,[R4, #+17]
   \   000000FE   002A               CMP      R2,#+0
   \   00000100   06D0               BEQ      ??Lader_Event_7
   2807                      {
   2808                        Touch_EventTime=g_counter;
   \   00000102   2300               MOVS     R3,R4
   \   00000104   3833               ADDS     R3,R3,#+56
   \   00000106   03C3               STM      R3!,{R0,R1}
   2809                        LaderLine--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000108   501E               SUBS     R0,R2,#+1
   \   0000010A   6074               STRB     R0,[R4, #+17]
   2810                        MenuPaint();
   \   0000010C   ........           BL       MenuPaint
   2811                      } 
   2812                      
   2813                      LabelButt[0]=31;
   \                     ??Lader_Event_7:
   \   00000110   1F20               MOVS     R0,#+31
   \   00000112   2870               STRB     R0,[R5, #+0]
   2814                      if ((Button(LabelButt,22,3,20,18)) && ((g_counter>Touch_EventTime+50) || (Touch_EventTime>g_counter)) && (LaderLine<MaxPrcLines-MaxRow))
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   1220               MOVS     R0,#+18
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   1423               MOVS     R3,#+20
   \   0000011C   0322               MOVS     R2,#+3
   \   0000011E   1621               MOVS     R1,#+22
   \   00000120   02A8               ADD      R0,SP,#+8
   \   00000122   ........           BL       Button
   \   00000126   02B0               ADD      SP,SP,#+8
   \   00000128   0028               CMP      R0,#+0
   \   0000012A   1DD0               BEQ      ??Lader_Event_10
   \   0000012C   694C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   0000012E   2000               MOVS     R0,R4
   \   00000130   3830               ADDS     R0,R0,#+56
   \   00000132   C0C8               LDM      R0!,{R6,R7}
   \   00000134   6848               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000136   03C8               LDM      R0!,{R0,R1}
   \   00000138   3222               MOVS     R2,#+50
   \   0000013A   0023               MOVS     R3,#+0
   \   0000013C   9219               ADDS     R2,R2,R6
   \   0000013E   7B41               ADCS     R3,R3,R7
   \   00000140   8B42               CMP      R3,R1
   \   00000142   07D3               BCC      ??Lader_Event_11
   \   00000144   01D8               BHI      ??Lader_Event_12
   \   00000146   8242               CMP      R2,R0
   \   00000148   04D3               BCC      ??Lader_Event_11
   \                     ??Lader_Event_12:
   \   0000014A   B942               CMP      R1,R7
   \   0000014C   0CD8               BHI      ??Lader_Event_10
   \   0000014E   01D3               BCC      ??Lader_Event_11
   \   00000150   B042               CMP      R0,R6
   \   00000152   09D2               BCS      ??Lader_Event_10
   \                     ??Lader_Event_11:
   \   00000154   627C               LDRB     R2,[R4, #+17]
   \   00000156   C52A               CMP      R2,#+197
   \   00000158   06D2               BCS      ??Lader_Event_10
   2815                      {
   2816                        Touch_EventTime=g_counter;
   \   0000015A   2300               MOVS     R3,R4
   \   0000015C   3833               ADDS     R3,R3,#+56
   \   0000015E   03C3               STM      R3!,{R0,R1}
   2817                        LaderLine++;    
   \   00000160   521C               ADDS     R2,R2,#+1
   \   00000162   6274               STRB     R2,[R4, #+17]
   2818                        MenuPaint();
   \   00000164   ........           BL       MenuPaint
   2819                      }
   2820                      
   2821          
   2822                  //zdarzenie typu down "X"
   2823                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \                     ??Lader_Event_10:
   \   00000168   5C48               LDR      R0,??Lader_Event_1+0x8  ;; X_down
   \   0000016A   0021               MOVS     R1,#+0
   \   0000016C   405E               LDRSH    R0,[R0, R1]
   \   0000016E   2F28               CMP      R0,#+47
   \   00000170   2EDB               BLT      ??Lader_Event_13
   \   00000172   3F28               CMP      R0,#+63
   \   00000174   2CDA               BGE      ??Lader_Event_13
   \   00000176   5A48               LDR      R0,??Lader_Event_1+0xC  ;; Y_down
   \   00000178   405E               LDRSH    R0,[R0, R1]
   \   0000017A   7128               CMP      R0,#+113
   \   0000017C   28DB               BLT      ??Lader_Event_13
   \   0000017E   7F28               CMP      R0,#+127
   \   00000180   26DA               BGE      ??Lader_Event_13
   2824                  {
   2825                    //MenuPaint();
   2826                    H_line(49,114,10,0);
   \   00000182   0B00               MOVS     R3,R1
   \   00000184   0A22               MOVS     R2,#+10
   \   00000186   7221               MOVS     R1,#+114
   \   00000188   3120               MOVS     R0,#+49
   \   0000018A   ........           BL       H_line
   2827                    H_line(49,123,10,0); 
   \   0000018E   0023               MOVS     R3,#+0
   \   00000190   0A22               MOVS     R2,#+10
   \   00000192   7B21               MOVS     R1,#+123
   \   00000194   3120               MOVS     R0,#+49
   \   00000196   ........           BL       H_line
   2828                    V_line(49,114,10,0); 
   \   0000019A   0023               MOVS     R3,#+0
   \   0000019C   0A22               MOVS     R2,#+10
   \   0000019E   7221               MOVS     R1,#+114
   \   000001A0   3120               MOVS     R0,#+49
   \   000001A2   ........           BL       V_line
   2829                    V_line(58,114,10,0); 
   \   000001A6   0023               MOVS     R3,#+0
   \   000001A8   0A22               MOVS     R2,#+10
   \   000001AA   7221               MOVS     R1,#+114
   \   000001AC   3A20               MOVS     R0,#+58
   \   000001AE   ........           BL       V_line
   2830                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000001B2   4C48               LDR      R0,??Lader_Event_1+0x10  ;; 0x13d7e9
   \   000001B4   0078               LDRB     R0,[R0, #+0]
   \   000001B6   0028               CMP      R0,#+0
   \   000001B8   0AD1               BNE      ??Lader_Event_13
   \   000001BA   4B48               LDR      R0,??Lader_Event_1+0x14  ;; 0xfffff430
   \   000001BC   8021               MOVS     R1,#+128
   \   000001BE   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000001C0   0160               STR      R1,[R0, #+0]
   \   000001C2   4A4A               LDR      R2,??Lader_Event_1+0x18  ;; ButtonBipCounter
   \   000001C4   4448               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000001C6   03C8               LDM      R0!,{R0,R1}
   \   000001C8   0023               MOVS     R3,#+0
   \   000001CA   0830               ADDS     R0,R0,#+8
   \   000001CC   5941               ADCS     R1,R1,R3
   \   000001CE   03C2               STM      R2!,{R0,R1}
   2831                    
   2832                  }
   2833            
   2834                  
   2835          
   2836                  
   2837                  //edycja procedury
   2838                  char row, col;
   2839                  
   2840                  row=LaderLine; 
   \                     ??Lader_Event_13:
   \   000001D0   404C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   000001D2   607C               LDRB     R0,[R4, #+17]
   \   000001D4   0190               STR      R0,[SP, #+4]
   2841                  for (int j=(MaxRow-1); j>=0; j--)
   \   000001D6   0227               MOVS     R7,#+2
   \   000001D8   05E0               B        ??Lader_Event_14
   2842                  {          
   2843                    col=LaderCol;
   2844                    for (int i=0; i<MaxCol; i++)
   2845                    {
   2846                        if ((X_up>1+i*20) && (X_up<1+(i+1)*20) && (Y_up>44+j*21) && (Y_up<44+(j+1)*21))                    //"X"
   2847                        {
   2848                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   2849                          
   2850                          ChoseRow=row;
   2851                          ChoseCol=col-1;
   2852                          if (ChoseCol!=0xff)  //je¿eli nie zerowa kolumna
   2853                          {
   2854                          MenuLevel=MenuLevel*10+1;
   2855                          }else{
   2856                          MenuLevel=MenuLevel*10+2;  
   2857                          }
   2858                          
   2859                          MenuPaint();
   2860                         
   2861                        }  
   2862                      col++;
   2863                    }
   2864                    row++;
   \                     ??Lader_Event_15:
   \   000001DA   0198               LDR      R0,[SP, #+4]
   \   000001DC   401C               ADDS     R0,R0,#+1
   \   000001DE   0006               LSLS     R0,R0,#+24
   \   000001E0   000E               LSRS     R0,R0,#+24
   \   000001E2   0190               STR      R0,[SP, #+4]
   \   000001E4   7F1E               SUBS     R7,R7,#+1
   \                     ??Lader_Event_14:
   \   000001E6   002F               CMP      R7,#+0
   \   000001E8   44D4               BMI      ??Lader_Event_16
   \   000001EA   A57C               LDRB     R5,[R4, #+18]
   \   000001EC   0026               MOVS     R6,#+0
   \   000001EE   09E0               B        ??Lader_Event_17
   \                     ??Lader_Event_18:
   \   000001F0   0A21               MOVS     R1,#+10
   \   000001F2   4843               MULS     R0,R1,R0
   \   000001F4   801C               ADDS     R0,R0,#+2
   \   000001F6   A064               STR      R0,[R4, #+72]
   \                     ??Lader_Event_19:
   \   000001F8   ........           BL       MenuPaint
   \                     ??Lader_Event_20:
   \   000001FC   6D1C               ADDS     R5,R5,#+1
   \   000001FE   2D06               LSLS     R5,R5,#+24
   \   00000200   2D0E               LSRS     R5,R5,#+24
   \   00000202   761C               ADDS     R6,R6,#+1
   \                     ??Lader_Event_17:
   \   00000204   032E               CMP      R6,#+3
   \   00000206   E8DA               BGE      ??Lader_Event_15
   \   00000208   3948               LDR      R0,??Lader_Event_1+0x1C  ;; X_up
   \   0000020A   0021               MOVS     R1,#+0
   \   0000020C   405E               LDRSH    R0,[R0, R1]
   \   0000020E   1421               MOVS     R1,#+20
   \   00000210   7143               MULS     R1,R6,R1
   \   00000212   0A00               MOVS     R2,R1
   \   00000214   521C               ADDS     R2,R2,#+1
   \   00000216   8242               CMP      R2,R0
   \   00000218   F0DA               BGE      ??Lader_Event_20
   \   0000021A   1531               ADDS     R1,R1,#+21
   \   0000021C   8842               CMP      R0,R1
   \   0000021E   EDDA               BGE      ??Lader_Event_20
   \   00000220   3448               LDR      R0,??Lader_Event_1+0x20  ;; Y_up
   \   00000222   0021               MOVS     R1,#+0
   \   00000224   405E               LDRSH    R0,[R0, R1]
   \   00000226   1521               MOVS     R1,#+21
   \   00000228   7943               MULS     R1,R7,R1
   \   0000022A   0A00               MOVS     R2,R1
   \   0000022C   2C32               ADDS     R2,R2,#+44
   \   0000022E   8242               CMP      R2,R0
   \   00000230   E4DA               BGE      ??Lader_Event_20
   \   00000232   4131               ADDS     R1,R1,#+65
   \   00000234   8842               CMP      R0,R1
   \   00000236   E1DA               BGE      ??Lader_Event_20
   \   00000238   2A48               LDR      R0,??Lader_Event_1+0x10  ;; 0x13d7e9
   \   0000023A   0078               LDRB     R0,[R0, #+0]
   \   0000023C   0028               CMP      R0,#+0
   \   0000023E   0AD1               BNE      ??Lader_Event_21
   \   00000240   2948               LDR      R0,??Lader_Event_1+0x14  ;; 0xfffff430
   \   00000242   8021               MOVS     R1,#+128
   \   00000244   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000246   0160               STR      R1,[R0, #+0]
   \   00000248   284A               LDR      R2,??Lader_Event_1+0x18  ;; ButtonBipCounter
   \   0000024A   2348               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   0000024C   03C8               LDM      R0!,{R0,R1}
   \   0000024E   0023               MOVS     R3,#+0
   \   00000250   0830               ADDS     R0,R0,#+8
   \   00000252   5941               ADCS     R1,R1,R3
   \   00000254   03C2               STM      R2!,{R0,R1}
   \                     ??Lader_Event_21:
   \   00000256   0198               LDR      R0,[SP, #+4]
   \   00000258   E074               STRB     R0,[R4, #+19]
   \   0000025A   2800               MOVS     R0,R5
   \   0000025C   401E               SUBS     R0,R0,#+1
   \   0000025E   2075               STRB     R0,[R4, #+20]
   \   00000260   0006               LSLS     R0,R0,#+24
   \   00000262   000E               LSRS     R0,R0,#+24
   \   00000264   FF28               CMP      R0,#+255
   \   00000266   A06C               LDR      R0,[R4, #+72]
   \   00000268   C2D0               BEQ      ??Lader_Event_18
   \   0000026A   0A21               MOVS     R1,#+10
   \   0000026C   4843               MULS     R0,R1,R0
   \   0000026E   401C               ADDS     R0,R0,#+1
   \   00000270   A064               STR      R0,[R4, #+72]
   \   00000272   C1E7               B        ??Lader_Event_19
   2865                  }
   2866                  
   2867                   
   2868          
   2869          
   2870              
   2871                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??Lader_Event_16:
   \   00000274   1E48               LDR      R0,??Lader_Event_1+0x1C  ;; X_up
   \   00000276   0021               MOVS     R1,#+0
   \   00000278   405E               LDRSH    R0,[R0, R1]
   \   0000027A   2F28               CMP      R0,#+47
   \   0000027C   26DB               BLT      ??Lader_Event_22
   \   0000027E   3F28               CMP      R0,#+63
   \   00000280   24DA               BGE      ??Lader_Event_22
   \   00000282   1C48               LDR      R0,??Lader_Event_1+0x20  ;; Y_up
   \   00000284   405E               LDRSH    R0,[R0, R1]
   \   00000286   7128               CMP      R0,#+113
   \   00000288   20DB               BLT      ??Lader_Event_22
   \   0000028A   7F28               CMP      R0,#+127
   \   0000028C   1EDA               BGE      ??Lader_Event_22
   2872                  {
   2873                    Rej_poz=0;
   \   0000028E   0800               MOVS     R0,R1
   \   00000290   E064               STR      R0,[R4, #+76]
   2874                    if (ProgramChange) 
   \   00000292   207A               LDRB     R0,[R4, #+8]
   \   00000294   0028               CMP      R0,#+0
   \   00000296   A06C               LDR      R0,[R4, #+72]
   \   00000298   03D0               BEQ      ??Lader_Event_23
   2875                    {
   2876                     
   2877                      MenuLevel=(MenuLevel*10+0);
   \   0000029A   0A21               MOVS     R1,#+10
   \   0000029C   4843               MULS     R0,R1,R0
   \   0000029E   A064               STR      R0,[R4, #+72]
   \   000002A0   03E0               B        ??Lader_Event_24
   2878                       
   2879                      
   2880                    }else{
   2881                      MenuLevel=(MenuLevel/10);
   \                     ??Lader_Event_23:
   \   000002A2   0A21               MOVS     R1,#+10
   \   000002A4   ........           BL       __aeabi_idivmod
   \   000002A8   A064               STR      R0,[R4, #+72]
   2882                    }
   2883                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \                     ??Lader_Event_24:
   \   000002AA   0E48               LDR      R0,??Lader_Event_1+0x10  ;; 0x13d7e9
   \   000002AC   0078               LDRB     R0,[R0, #+0]
   \   000002AE   0028               CMP      R0,#+0
   \   000002B0   0AD1               BNE      ??Lader_Event_25
   \   000002B2   0D48               LDR      R0,??Lader_Event_1+0x14  ;; 0xfffff430
   \   000002B4   8021               MOVS     R1,#+128
   \   000002B6   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000002B8   0160               STR      R1,[R0, #+0]
   \   000002BA   0C4A               LDR      R2,??Lader_Event_1+0x18  ;; ButtonBipCounter
   \   000002BC   0648               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000002BE   03C8               LDM      R0!,{R0,R1}
   \   000002C0   0023               MOVS     R3,#+0
   \   000002C2   0830               ADDS     R0,R0,#+8
   \   000002C4   5941               ADCS     R1,R1,R3
   \   000002C6   03C2               STM      R2!,{R0,R1}
   2884                    MenuPaint();
   \                     ??Lader_Event_25:
   \   000002C8   ........           BL       MenuPaint
   2885                  }  
   2886            
   2887               
   2888          
   2889                }//________________________________________________________________________
   \                     ??Lader_Event_22:
   \   000002CC   FEBC               POP      {R1-R7}
   \   000002CE   01BC               POP      {R0}
   \   000002D0   0047               BX       R0               ;; return
   \   000002D2   C046               Nop      
   \                     ??Lader_Event_1:
   \   000002D4   ........           DC32     TextToChangeLength
   \   000002D8   ........           DC32     g_counter
   \   000002DC   ........           DC32     X_down
   \   000002E0   ........           DC32     Y_down
   \   000002E4   E9D71300           DC32     0x13d7e9
   \   000002E8   30F4FFFF           DC32     0xfffff430
   \   000002EC   ........           DC32     ButtonBipCounter
   \   000002F0   ........           DC32     X_up
   \   000002F4   ........           DC32     Y_up
   2890              

   \                                 In section Debug.txt, align 4, keep-with-next
   2891          void WybProc(char col, char row)
   2892          {
   \                     WybProc:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   2893             row=2-row;
   \   00000002   0222               MOVS     R2,#+2
   \   00000004   561A               SUBS     R6,R2,R1
   2894             H_line(4+col*19,50+row*19,17,1);  
   \   00000006   3606               LSLS     R6,R6,#+24
   \   00000008   360E               LSRS     R6,R6,#+24
   \   0000000A   1321               MOVS     R1,#+19
   \   0000000C   4E43               MULS     R6,R1,R6
   \   0000000E   3400               MOVS     R4,R6
   \   00000010   3234               ADDS     R4,R4,#+50
   \   00000012   4843               MULS     R0,R1,R0
   \   00000014   0700               MOVS     R7,R0
   \   00000016   0123               MOVS     R3,#+1
   \   00000018   1122               MOVS     R2,#+17
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   001D               ADDS     R0,R0,#+4
   \   0000001E   0006               LSLS     R0,R0,#+24
   \   00000020   000E               LSRS     R0,R0,#+24
   \   00000022   ........           BL       H_line
   \   00000026   3D00               MOVS     R5,R7
   \   00000028   ED1C               ADDS     R5,R5,#+3
   \   0000002A   0123               MOVS     R3,#+1
   \   0000002C   1122               MOVS     R2,#+17
   \   0000002E   4336               ADDS     R6,R6,#+67
   \   00000030   3100               MOVS     R1,R6
   \   00000032   2800               MOVS     R0,R5
   \   00000034   0006               LSLS     R0,R0,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   2895             H_line(3+col*19,50+17+row*19,17,1); 
   \   00000038   ........           BL       H_line
   2896             V_line(3+col*19,50+row*19,18,1); 
   \   0000003C   0123               MOVS     R3,#+1
   \   0000003E   1222               MOVS     R2,#+18
   \   00000040   2100               MOVS     R1,R4
   \   00000042   2800               MOVS     R0,R5
   \   00000044   0006               LSLS     R0,R0,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   ........           BL       V_line
   2897             V_line(3+17+col*19,50+row*19,18,1); 
   \   0000004C   0123               MOVS     R3,#+1
   \   0000004E   1222               MOVS     R2,#+18
   \   00000050   2100               MOVS     R1,R4
   \   00000052   1437               ADDS     R7,R7,#+20
   \   00000054   3800               MOVS     R0,R7
   \   00000056   0006               LSLS     R0,R0,#+24
   \   00000058   000E               LSRS     R0,R0,#+24
   \   0000005A   ........           BL       V_line
   2898          }
   \   0000005E   F8BC               POP      {R3-R7}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   2899          
   2900          char SetTimeCell=1;

   \                                 In section Debug.txt, align 4, keep-with-next
   2901          void Procedure_Paint(void)
   2902                { 
   \                     Procedure_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   89B0               SUB      SP,SP,#+36
   2903                  
   2904                  
   2905                  List_Paint(Speech[g_leng].Procedura,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   9624               MOVS     R4,#+150
   \   00000006   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000008   D84D               LDR      R5,??Procedure_Paint_1  ;; g_leng
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   D6A0               ADR      R0,??Procedure_Paint_1+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0321               MOVS     R1,#+3
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0300               MOVS     R3,R0
   \   00000020   6C22               MOVS     R2,#+108
   \   00000022   0121               MOVS     R1,#+1
   \   00000024   D348               LDR      R0,??Procedure_Paint_1+0x8  ;; 0x2ee
   \   00000026   2E68               LDR      R6,[R5, #+0]
   \   00000028   6643               MULS     R6,R4,R6
   \   0000002A   D34F               LDR      R7,??Procedure_Paint_1+0xC  ;; Speech
   \   0000002C   BE19               ADDS     R6,R7,R6
   \   0000002E   3018               ADDS     R0,R6,R0
   \   00000030   ........           BL       List_Paint
   \   00000034   0AB0               ADD      SP,SP,#+40
   \   00000036   0126               MOVS     R6,#+1
   \   00000038   18E0               B        ??Procedure_Paint_2
   2906                
   2907                   char txt[5];
   2908                   //CharToStr(LaderLine+3-i, txt, 2); //(char Value, char *Vstring, char ill);
   2909          
   2910                   
   2911                   for (char i=1; i<4; i++)
   2912                   {
   2913                    H_line(3,49+i*19,18,3);  
   \                     ??Procedure_Paint_3:
   \   0000003A   3700               MOVS     R7,R6
   \   0000003C   1320               MOVS     R0,#+19
   \   0000003E   4743               MULS     R7,R0,R7
   \   00000040   3137               ADDS     R7,R7,#+49
   \   00000042   0323               MOVS     R3,#+3
   \   00000044   1222               MOVS     R2,#+18
   \   00000046   3900               MOVS     R1,R7
   \   00000048   1800               MOVS     R0,R3
   \   0000004A   ........           BL       H_line
   2914                    H_line(22,49+i*19,18,3);  
   \   0000004E   0323               MOVS     R3,#+3
   \   00000050   1222               MOVS     R2,#+18
   \   00000052   3900               MOVS     R1,R7
   \   00000054   1620               MOVS     R0,#+22
   \   00000056   ........           BL       H_line
   2915                    H_line(41,49+i*19,18,3);  
   \   0000005A   0323               MOVS     R3,#+3
   \   0000005C   1222               MOVS     R2,#+18
   \   0000005E   3900               MOVS     R1,R7
   \   00000060   2920               MOVS     R0,#+41
   \   00000062   ........           BL       H_line
   2916                    }
   \   00000066   761C               ADDS     R6,R6,#+1
   \   00000068   3606               LSLS     R6,R6,#+24
   \   0000006A   360E               LSRS     R6,R6,#+24
   \                     ??Procedure_Paint_2:
   \   0000006C   3000               MOVS     R0,R6
   \   0000006E   0428               CMP      R0,#+4
   \   00000070   E3D3               BCC      ??Procedure_Paint_3
   \   00000072   0026               MOVS     R6,#+0
   \   00000074   16E0               B        ??Procedure_Paint_4
   2917                    for (char i=0; i<4; i++)
   2918                    {
   2919                    V_line(2+i*19,69,18,3);  
   \                     ??Procedure_Paint_5:
   \   00000076   3700               MOVS     R7,R6
   \   00000078   1320               MOVS     R0,#+19
   \   0000007A   4743               MULS     R7,R0,R7
   \   0000007C   BF1C               ADDS     R7,R7,#+2
   \   0000007E   0323               MOVS     R3,#+3
   \   00000080   1222               MOVS     R2,#+18
   \   00000082   4521               MOVS     R1,#+69
   \   00000084   3800               MOVS     R0,R7
   \   00000086   0006               LSLS     R0,R0,#+24
   \   00000088   000E               LSRS     R0,R0,#+24
   \   0000008A   ........           BL       V_line
   2920                    V_line(2+i*19,88,18,3);  
   \   0000008E   0323               MOVS     R3,#+3
   \   00000090   1222               MOVS     R2,#+18
   \   00000092   5821               MOVS     R1,#+88
   \   00000094   3800               MOVS     R0,R7
   \   00000096   0006               LSLS     R0,R0,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   ........           BL       V_line
   2921                    }
   \   0000009E   761C               ADDS     R6,R6,#+1
   \   000000A0   3606               LSLS     R6,R6,#+24
   \   000000A2   360E               LSRS     R6,R6,#+24
   \                     ??Procedure_Paint_4:
   \   000000A4   3000               MOVS     R0,R6
   \   000000A6   0428               CMP      R0,#+4
   \   000000A8   E5D3               BCC      ??Procedure_Paint_5
   \   000000AA   82B0               SUB      SP,SP,#+8
   \   000000AC   0820               MOVS     R0,#+8
   \   000000AE   0090               STR      R0,[SP, #+0]
   \   000000B0   1023               MOVS     R3,#+16
   \   000000B2   5D22               MOVS     R2,#+93
   \   000000B4   1821               MOVS     R1,#+24
   \   000000B6   B148               LDR      R0,??Procedure_Paint_1+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1020
   2922                   
   2923                   CopyToCanvasPoint((char*)ProcSt_iko, 24, 93,16,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000B8   ........           BL       CopyToCanvasPoint
   \   000000BC   02B0               ADD      SP,SP,#+8
   2924                   CopyToCanvasPoint((char*)ProcSet_iko, 43, 93,16,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000BE   82B0               SUB      SP,SP,#+8
   \   000000C0   0820               MOVS     R0,#+8
   \   000000C2   0090               STR      R0,[SP, #+0]
   \   000000C4   1023               MOVS     R3,#+16
   \   000000C6   5D22               MOVS     R2,#+93
   \   000000C8   2B21               MOVS     R1,#+43
   \   000000CA   AD48               LDR      R0,??Procedure_Paint_1+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1036
   \   000000CC   ........           BL       CopyToCanvasPoint
   \   000000D0   02B0               ADD      SP,SP,#+8
   2925                   CopyToCanvasPoint((char*)ProcLog_iko, 5, 73,15,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000D2   82B0               SUB      SP,SP,#+8
   \   000000D4   0820               MOVS     R0,#+8
   \   000000D6   0090               STR      R0,[SP, #+0]
   \   000000D8   0F23               MOVS     R3,#+15
   \   000000DA   4922               MOVS     R2,#+73
   \   000000DC   0521               MOVS     R1,#+5
   \   000000DE   A948               LDR      R0,??Procedure_Paint_1+0x18  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1076
   \   000000E0   ........           BL       CopyToCanvasPoint
   \   000000E4   02B0               ADD      SP,SP,#+8
   2926                   CopyToCanvasPoint((char*)ProcTime_iko, 25, 72,13,12);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000E6   82B0               SUB      SP,SP,#+8
   \   000000E8   0C20               MOVS     R0,#+12
   \   000000EA   0090               STR      R0,[SP, #+0]
   \   000000EC   0D23               MOVS     R3,#+13
   \   000000EE   4822               MOVS     R2,#+72
   \   000000F0   1921               MOVS     R1,#+25
   \   000000F2   A548               LDR      R0,??Procedure_Paint_1+0x1C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1052
   \   000000F4   ........           BL       CopyToCanvasPoint
   \   000000F8   02B0               ADD      SP,SP,#+8
   2927                   CopyToCanvasPoint((char*)ProcAnl_iko, 43, 73,15,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   0820               MOVS     R0,#+8
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   0F23               MOVS     R3,#+15
   \   00000102   4922               MOVS     R2,#+73
   \   00000104   2B21               MOVS     R1,#+43
   \   00000106   A148               LDR      R0,??Procedure_Paint_1+0x20  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1092
   \   00000108   ........           BL       CopyToCanvasPoint
   \   0000010C   02B0               ADD      SP,SP,#+8
   2928                   
   2929          
   2930                           
   2931                   
   2932                   //jaka procedura
   2933                   
   2934                   _Procedure Prc=(gProg.Line[ChoseRow].Proc[ChoseCol]);
   \   0000010E   A04A               LDR      R2,??Procedure_Paint_1+0x24  ;; TextToChangeLength
   \   00000110   02A8               ADD      R0,SP,#+8
   \   00000112   117D               LDRB     R1,[R2, #+20]
   \   00000114   1823               MOVS     R3,#+24
   \   00000116   5943               MULS     R1,R3,R1
   \   00000118   D27C               LDRB     R2,[R2, #+19]
   \   0000011A   F023               MOVS     R3,#+240
   \   0000011C   5A43               MULS     R2,R3,R2
   \   0000011E   9D4B               LDR      R3,??Procedure_Paint_1+0x28  ;; gProg
   \   00000120   9A18               ADDS     R2,R3,R2
   \   00000122   5118               ADDS     R1,R2,R1
   \   00000124   1831               ADDS     R1,R1,#+24
   \   00000126   1822               MOVS     R2,#+24
   \   00000128   ........           BL       __aeabi_memcpy4
   2935                   
   2936                   
   2937                      if  (Prc.Type==None)
   \   0000012C   02AE               ADD      R6,SP,#+8
   \   0000012E   3078               LDRB     R0,[R6, #+0]
   \   00000130   0028               CMP      R0,#+0
   \   00000132   02D1               BNE      ??Procedure_Paint_6
   2938                      {
   2939                        WybProc(0,0);
   \   00000134   0021               MOVS     R1,#+0
   \   00000136   ........           BL       WybProc
   2940                      }
   2941          
   2942                      
   2943                      if  ((Prc.Type>ProcLogStart) && (Prc.Type<ProcLogStop))
   \                     ??Procedure_Paint_6:
   \   0000013A   3078               LDRB     R0,[R6, #+0]
   \   0000013C   0228               CMP      R0,#+2
   \   0000013E   25D3               BCC      ??Procedure_Paint_7
   \   00000140   0D28               CMP      R0,#+13
   \   00000142   23D2               BCS      ??Procedure_Paint_7
   2944                      { 
   2945                        WybProc(0,1);
   \   00000144   0121               MOVS     R1,#+1
   \   00000146   0020               MOVS     R0,#+0
   \   00000148   ........           BL       WybProc
   2946                        txt[1]=0;
   \   0000014C   6F46               MOV      R7,SP
   \   0000014E   0020               MOVS     R0,#+0
   \   00000150   7870               STRB     R0,[R7, #+1]
   2947                        txt[0]='>';
   \   00000152   3E20               MOVS     R0,#+62
   \   00000154   3870               STRB     R0,[R7, #+0]
   2948                        Button(txt,43,39,18,18);
   \   00000156   82B0               SUB      SP,SP,#+8
   \   00000158   1220               MOVS     R0,#+18
   \   0000015A   0090               STR      R0,[SP, #+0]
   \   0000015C   0300               MOVS     R3,R0
   \   0000015E   2722               MOVS     R2,#+39
   \   00000160   2B21               MOVS     R1,#+43
   \   00000162   02A8               ADD      R0,SP,#+8
   \   00000164   ........           BL       Button
   \   00000168   02B0               ADD      SP,SP,#+8
   2949                        txt[0]='<';
   \   0000016A   3C20               MOVS     R0,#+60
   \   0000016C   3870               STRB     R0,[R7, #+0]
   2950                        Button(txt,2,39,18,18);
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   1220               MOVS     R0,#+18
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   0300               MOVS     R3,R0
   \   00000176   2722               MOVS     R2,#+39
   \   00000178   0221               MOVS     R1,#+2
   \   0000017A   02A8               ADD      R0,SP,#+8
   \   0000017C   ........           BL       Button
   \   00000180   02B0               ADD      SP,SP,#+8
   2951                        PaintProc(21, 40, &Prc);
   \   00000182   02AA               ADD      R2,SP,#+8
   \   00000184   2821               MOVS     R1,#+40
   \   00000186   1520               MOVS     R0,#+21
   \   00000188   ........           BL       PaintProc
   2952                      }
   2953                      
   2954                      
   2955                      
   2956                      if  (((Prc.Type>ProcStStart) && (Prc.Type<ProcStStop)) || 
   2957                           ((Prc.Type>ProcSetStart) && (Prc.Type<ProcSetStop))||
   2958                           ((Prc.Type>ProcTimeStart) && (Prc.Type<ProcTimeStop))||
   2959                           ((Prc.Type>ProcAnalogStart) && (Prc.Type<ProcAnalogStop))
   2960                           ) 
   \                     ??Procedure_Paint_7:
   \   0000018C   3078               LDRB     R0,[R6, #+0]
   \   0000018E   1428               CMP      R0,#+20
   \   00000190   01D3               BCC      ??Procedure_Paint_8
   \   00000192   1928               CMP      R0,#+25
   \   00000194   0DD3               BCC      ??Procedure_Paint_9
   \                     ??Procedure_Paint_8:
   \   00000196   2028               CMP      R0,#+32
   \   00000198   01D3               BCC      ??Procedure_Paint_10
   \   0000019A   2828               CMP      R0,#+40
   \   0000019C   09D3               BCC      ??Procedure_Paint_9
   \                     ??Procedure_Paint_10:
   \   0000019E   2D28               CMP      R0,#+45
   \   000001A0   01D3               BCC      ??Procedure_Paint_11
   \   000001A2   3028               CMP      R0,#+48
   \   000001A4   05D3               BCC      ??Procedure_Paint_9
   \                     ??Procedure_Paint_11:
   \   000001A6   3728               CMP      R0,#+55
   \   000001A8   00D2               BCS      .+4
   \   000001AA   B3E3               B        ??Procedure_Paint_12
   \   000001AC   4028               CMP      R0,#+64
   \   000001AE   00D3               BCC      .+4
   \   000001B0   B0E3               B        ??Procedure_Paint_12
   2961                          
   2962                      { 
   2963                        txt[1]=0;
   \                     ??Procedure_Paint_9:
   \   000001B2   6F46               MOV      R7,SP
   \   000001B4   0020               MOVS     R0,#+0
   \   000001B6   7870               STRB     R0,[R7, #+1]
   \   000001B8   3E20               MOVS     R0,#+62
   \   000001BA   3870               STRB     R0,[R7, #+0]
   2964                        txt[0]='>';
   2965                        if (Prc.Type>ProcStStart) Button(txt,43,46,18,18);
   \   000001BC   3078               LDRB     R0,[R6, #+0]
   \   000001BE   1428               CMP      R0,#+20
   \   000001C0   09D3               BCC      ??Procedure_Paint_13
   \   000001C2   82B0               SUB      SP,SP,#+8
   \   000001C4   1220               MOVS     R0,#+18
   \   000001C6   0090               STR      R0,[SP, #+0]
   \   000001C8   0300               MOVS     R3,R0
   \   000001CA   2E22               MOVS     R2,#+46
   \   000001CC   2B21               MOVS     R1,#+43
   \   000001CE   02A8               ADD      R0,SP,#+8
   \   000001D0   ........           BL       Button
   \   000001D4   02B0               ADD      SP,SP,#+8
   2966                        
   2967                        
   2968                        if (
   2969                           (Prc.Type==ProcConstAnal) ||
   2970                           (Prc.Type==ProcLim) ||
   2971                           (Prc.Type==ProcEven) || 
   2972                           (Prc.Type==ProcPlus) || 
   2973                           (Prc.Type==ProcMinus) || 
   2974                           (Prc.Type==ProcMul) ||
   2975                           (Prc.Type==ProcDiv)
   2976                           )
   \                     ??Procedure_Paint_13:
   \   000001D6   3078               LDRB     R0,[R6, #+0]
   \   000001D8   3728               CMP      R0,#+55
   \   000001DA   0BD0               BEQ      ??Procedure_Paint_14
   \   000001DC   3A28               CMP      R0,#+58
   \   000001DE   09D0               BEQ      ??Procedure_Paint_14
   \   000001E0   3B28               CMP      R0,#+59
   \   000001E2   07D0               BEQ      ??Procedure_Paint_14
   \   000001E4   3C28               CMP      R0,#+60
   \   000001E6   05D0               BEQ      ??Procedure_Paint_14
   \   000001E8   3D28               CMP      R0,#+61
   \   000001EA   03D0               BEQ      ??Procedure_Paint_14
   \   000001EC   3E28               CMP      R0,#+62
   \   000001EE   01D0               BEQ      ??Procedure_Paint_14
   \   000001F0   3F28               CMP      R0,#+63
   \   000001F2   05D1               BNE      ??Procedure_Paint_15
   2977                        {
   2978                          PaintProc(20, 38, &Prc);
   \                     ??Procedure_Paint_14:
   \   000001F4   02AA               ADD      R2,SP,#+8
   \   000001F6   2621               MOVS     R1,#+38
   \   000001F8   1420               MOVS     R0,#+20
   \   000001FA   ........           BL       PaintProc
   \   000001FE   2EE0               B        ??Procedure_Paint_16
   2979                        }else if 
   2980                          (
   2981                           (Prc.Type==ProcGetReg) || 
   2982                           (Prc.Type==ProcSetReg)  
   2983                          )
   \                     ??Procedure_Paint_15:
   \   00000200   3828               CMP      R0,#+56
   \   00000202   01D0               BEQ      ??Procedure_Paint_17
   \   00000204   3928               CMP      R0,#+57
   \   00000206   15D1               BNE      ??Procedure_Paint_18
   2984                          
   2985                        {  
   2986                          PaintProc(20, 41, &Prc);
   \                     ??Procedure_Paint_17:
   \   00000208   02AA               ADD      R2,SP,#+8
   \   0000020A   2921               MOVS     R1,#+41
   \   0000020C   1420               MOVS     R0,#+20
   \   0000020E   ........           BL       PaintProc
   2987                          Label(" ",0,3,55,15,39,16,105,0);
   \   00000212   82B0               SUB      SP,SP,#+8
   \   00000214   0020               MOVS     R0,#+0
   \   00000216   0090               STR      R0,[SP, #+0]
   \   00000218   6921               MOVS     R1,#+105
   \   0000021A   1020               MOVS     R0,#+16
   \   0000021C   03B4               PUSH     {R0,R1}
   \   0000021E   2721               MOVS     R1,#+39
   \   00000220   0F20               MOVS     R0,#+15
   \   00000222   03B4               PUSH     {R0,R1}
   \   00000224   3723               MOVS     R3,#+55
   \   00000226   0322               MOVS     R2,#+3
   \   00000228   0021               MOVS     R1,#+0
   \   0000022A   51A0               ADR      R0,??Procedure_Paint_1+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   0000022C   ........           BL       Label
   \   00000230   06B0               ADD      SP,SP,#+24
   \   00000232   14E0               B        ??Procedure_Paint_16
   2988                        }else{
   2989                          PaintProc(20, 43, &Prc);
   \                     ??Procedure_Paint_18:
   \   00000234   02AA               ADD      R2,SP,#+8
   \   00000236   2B21               MOVS     R1,#+43
   \   00000238   1420               MOVS     R0,#+20
   \   0000023A   ........           BL       PaintProc
   2990                          Label(" ",0,3,55,15,39,16,105,0);
   \   0000023E   82B0               SUB      SP,SP,#+8
   \   00000240   0020               MOVS     R0,#+0
   \   00000242   0090               STR      R0,[SP, #+0]
   \   00000244   6921               MOVS     R1,#+105
   \   00000246   1020               MOVS     R0,#+16
   \   00000248   03B4               PUSH     {R0,R1}
   \   0000024A   2721               MOVS     R1,#+39
   \   0000024C   0F20               MOVS     R0,#+15
   \   0000024E   03B4               PUSH     {R0,R1}
   \   00000250   3723               MOVS     R3,#+55
   \   00000252   0322               MOVS     R2,#+3
   \   00000254   0021               MOVS     R1,#+0
   \   00000256   46A0               ADR      R0,??Procedure_Paint_1+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000258   ........           BL       Label
   \   0000025C   06B0               ADD      SP,SP,#+24
   2991                        }
   2992                        char Htmp=58;  //po³o¿enie napisu
   2993                        
   2994                        switch (Prc.Type)
   \                     ??Procedure_Paint_16:
   \   0000025E   3078               LDRB     R0,[R6, #+0]
   \   00000260   1438               SUBS     R0,R0,#+20
   \   00000262   2B28               CMP      R0,#+43
   \   00000264   00D9               BLS      .+4
   \   00000266   81E2               B        ??Procedure_Paint_19
   \   00000268   01A1               ADR      R1,??Procedure_Paint_0
   \   0000026A   4000               LSLS     R0,R0,#+1
   \   0000026C   095A               LDRH     R1,[R1, R0]
   \   0000026E   8F44               ADD      PC,PC,R1
   \                     ??Procedure_Paint_0:
   \   00000270   56008C00C400       DC16     +86,+140,+196,+1274
   \              FA04        
   \   00000278   2E01FA04FA04       DC16     +302,+1274,+1274,+1274
   \              FA04        
   \   00000280   FA04FA04FA04       DC16     +1274,+1274,+1274,+1274
   \              FA04        
   \   00000288   66019C01D201       DC16     +358,+412,+466,+466
   \              D201        
   \   00000290   08023E027402       DC16     +520,+574,+628,+682
   \              AA02        
   \   00000298   FA04FA04FA04       DC16     +1274,+1274,+1274,+1274
   \              FA04        
   \   000002A0   FA04E2021803       DC16     +1274,+738,+792,+846
   \              4E03        
   \   000002A8   FA04FA04FA04       DC16     +1274,+1274,+1274,+1274
   \              FA04        
   \   000002B0   FA04FA04FA04       DC16     +1274,+1274,+1274,+900
   \              8403        
   \   000002B8   A603C803EA03       DC16     +934,+968,+1002,+1036
   \              0C04        
   \   000002C0   2E0450047204       DC16     +1070,+1104,+1138,+1242
   \              DA04        
   2995                        {
   2996                          case ProcStI: Label(Speech[g_leng].StanWejscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_20:
   \   000002C8   82B0               SUB      SP,SP,#+8
   \   000002CA   0020               MOVS     R0,#+0
   \   000002CC   0090               STR      R0,[SP, #+0]
   \   000002CE   6921               MOVS     R1,#+105
   \   000002D0   1020               MOVS     R0,#+16
   \   000002D2   03B4               PUSH     {R0,R1}
   \   000002D4   2721               MOVS     R1,#+39
   \   000002D6   0F20               MOVS     R0,#+15
   \   000002D8   03B4               PUSH     {R0,R1}
   \   000002DA   3A23               MOVS     R3,#+58
   \   000002DC   0322               MOVS     R2,#+3
   \   000002DE   0021               MOVS     R1,#+0
   \   000002E0   02B5               PUSH     {R1,LR}
   \   000002E2   2D49               LDR      R1,??Procedure_Paint_1+0x2C  ;; 0x2fd
   \   000002E4   8C46               MOV      R12,R1
   \   000002E6   2968               LDR      R1,[R5, #+0]
   \   000002E8   6143               MULS     R1,R4,R1
   \   000002EA   2348               LDR      R0,??Procedure_Paint_1+0xC  ;; Speech
   \   000002EC   4018               ADDS     R0,R0,R1
   \   000002EE   6146               MOV      R1,R12
   \   000002F0   4018               ADDS     R0,R0,R1
   \   000002F2   0099               LDR      R1,[SP, #0]
   \   000002F4   02B0               ADD      SP,SP,#+8
   \   000002F6   ........           BL       Label
   \   000002FA   06B0               ADD      SP,SP,#+24
   \   000002FC   36E2               B        ??Procedure_Paint_19
   2997                          case ProcStNI: Label(Speech[g_leng].NegWejscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_21:
   \   000002FE   82B0               SUB      SP,SP,#+8
   \   00000300   0020               MOVS     R0,#+0
   \   00000302   0090               STR      R0,[SP, #+0]
   \   00000304   6921               MOVS     R1,#+105
   \   00000306   1020               MOVS     R0,#+16
   \   00000308   03B4               PUSH     {R0,R1}
   \   0000030A   2721               MOVS     R1,#+39
   \   0000030C   0F20               MOVS     R0,#+15
   \   0000030E   03B4               PUSH     {R0,R1}
   \   00000310   3A23               MOVS     R3,#+58
   \   00000312   0322               MOVS     R2,#+3
   \   00000314   0021               MOVS     R1,#+0
   \   00000316   02B5               PUSH     {R1,LR}
   \   00000318   C321               MOVS     R1,#+195
   \   0000031A   8900               LSLS     R1,R1,#+2        ;; #+780
   \   0000031C   8C46               MOV      R12,R1
   \   0000031E   2968               LDR      R1,[R5, #+0]
   \   00000320   6143               MULS     R1,R4,R1
   \   00000322   1548               LDR      R0,??Procedure_Paint_1+0xC  ;; Speech
   \   00000324   4018               ADDS     R0,R0,R1
   \   00000326   6146               MOV      R1,R12
   \   00000328   4018               ADDS     R0,R0,R1
   \   0000032A   0099               LDR      R1,[SP, #0]
   \   0000032C   02B0               ADD      SP,SP,#+8
   \   0000032E   ........           BL       Label
   \   00000332   06B0               ADD      SP,SP,#+24
   \   00000334   1AE2               B        ??Procedure_Paint_19
   2998                          case ProcStQ: Label(Speech[g_leng].StanWyjscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_22:
   \   00000336   82B0               SUB      SP,SP,#+8
   \   00000338   0020               MOVS     R0,#+0
   \   0000033A   0090               STR      R0,[SP, #+0]
   \   0000033C   6921               MOVS     R1,#+105
   \   0000033E   1020               MOVS     R0,#+16
   \   00000340   03B4               PUSH     {R0,R1}
   \   00000342   2721               MOVS     R1,#+39
   \   00000344   0F20               MOVS     R0,#+15
   \   00000346   03B4               PUSH     {R0,R1}
   \   00000348   3A23               MOVS     R3,#+58
   \   0000034A   0322               MOVS     R2,#+3
   \   0000034C   0021               MOVS     R1,#+0
   \   0000034E   02B5               PUSH     {R1,LR}
   \   00000350   1249               LDR      R1,??Procedure_Paint_1+0x30  ;; 0x31b
   \   00000352   8C46               MOV      R12,R1
   \   00000354   2968               LDR      R1,[R5, #+0]
   \   00000356   6143               MULS     R1,R4,R1
   \   00000358   0748               LDR      R0,??Procedure_Paint_1+0xC  ;; Speech
   \   0000035A   4018               ADDS     R0,R0,R1
   \   0000035C   6146               MOV      R1,R12
   \   0000035E   4018               ADDS     R0,R0,R1
   \   00000360   0099               LDR      R1,[SP, #0]
   \   00000362   02B0               ADD      SP,SP,#+8
   \   00000364   ........           BL       Label
   \   00000368   06B0               ADD      SP,SP,#+24
   \   0000036A   FFE1               B        ??Procedure_Paint_19
   \                     ??Procedure_Paint_1:
   \   0000036C   ........           DC32     g_leng
   \   00000370   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000374   EE020000           DC32     0x2ee
   \   00000378   ........           DC32     Speech
   \   0000037C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1020
   \   00000380   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1036
   \   00000384   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1076
   \   00000388   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1052
   \   0000038C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 1092
   \   00000390   ........           DC32     TextToChangeLength
   \   00000394   ........           DC32     gProg
   \   00000398   FD020000           DC32     0x2fd
   \   0000039C   1B030000           DC32     0x31b
   2999                          case ProcStS: Label(Speech[g_leng].StSceny,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_23:
   \   000003A0   82B0               SUB      SP,SP,#+8
   \   000003A2   0020               MOVS     R0,#+0
   \   000003A4   0090               STR      R0,[SP, #+0]
   \   000003A6   6921               MOVS     R1,#+105
   \   000003A8   1020               MOVS     R0,#+16
   \   000003AA   03B4               PUSH     {R0,R1}
   \   000003AC   2721               MOVS     R1,#+39
   \   000003AE   0F20               MOVS     R0,#+15
   \   000003B0   03B4               PUSH     {R0,R1}
   \   000003B2   3A23               MOVS     R3,#+58
   \   000003B4   0322               MOVS     R2,#+3
   \   000003B6   0021               MOVS     R1,#+0
   \   000003B8   02B5               PUSH     {R1,LR}
   \   000003BA   FF21               MOVS     R1,#+255
   \   000003BC   8900               LSLS     R1,R1,#+2        ;; #+1020
   \   000003BE   8C46               MOV      R12,R1
   \   000003C0   2968               LDR      R1,[R5, #+0]
   \   000003C2   6143               MULS     R1,R4,R1
   \   000003C4   D048               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000003C6   4018               ADDS     R0,R0,R1
   \   000003C8   6146               MOV      R1,R12
   \   000003CA   4018               ADDS     R0,R0,R1
   \   000003CC   0099               LDR      R1,[SP, #0]
   \   000003CE   02B0               ADD      SP,SP,#+8
   \   000003D0   ........           BL       Label
   \   000003D4   06B0               ADD      SP,SP,#+24
   \   000003D6   C9E1               B        ??Procedure_Paint_19
   3000                         // case ProcStT: Label(Speech[g_leng].StanTimera,0,3,Htmp,15,39,16,105,0); break;
   3001                         // case ProcStNT: Label(Speech[g_leng].StanTimeraNeg,0,3,Htmp,15,39,16,105,0); break;
   3002                          case ProcWOUT: Label(Speech[g_leng].UstawWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_25:
   \   000003D8   82B0               SUB      SP,SP,#+8
   \   000003DA   0020               MOVS     R0,#+0
   \   000003DC   0090               STR      R0,[SP, #+0]
   \   000003DE   6921               MOVS     R1,#+105
   \   000003E0   1020               MOVS     R0,#+16
   \   000003E2   03B4               PUSH     {R0,R1}
   \   000003E4   2721               MOVS     R1,#+39
   \   000003E6   0F20               MOVS     R0,#+15
   \   000003E8   03B4               PUSH     {R0,R1}
   \   000003EA   3A23               MOVS     R3,#+58
   \   000003EC   0222               MOVS     R2,#+2
   \   000003EE   0021               MOVS     R1,#+0
   \   000003F0   02B5               PUSH     {R1,LR}
   \   000003F2   C649               LDR      R1,??Procedure_Paint_24+0x4  ;; 0x357
   \   000003F4   8C46               MOV      R12,R1
   \   000003F6   2968               LDR      R1,[R5, #+0]
   \   000003F8   6143               MULS     R1,R4,R1
   \   000003FA   C348               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000003FC   4018               ADDS     R0,R0,R1
   \   000003FE   6146               MOV      R1,R12
   \   00000400   4018               ADDS     R0,R0,R1
   \   00000402   0099               LDR      R1,[SP, #0]
   \   00000404   02B0               ADD      SP,SP,#+8
   \   00000406   ........           BL       Label
   \   0000040A   06B0               ADD      SP,SP,#+24
   \   0000040C   AEE1               B        ??Procedure_Paint_19
   3003                          case ProcWOUTS: Label(Speech[g_leng].WlaczWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_26:
   \   0000040E   82B0               SUB      SP,SP,#+8
   \   00000410   0020               MOVS     R0,#+0
   \   00000412   0090               STR      R0,[SP, #+0]
   \   00000414   6921               MOVS     R1,#+105
   \   00000416   1020               MOVS     R0,#+16
   \   00000418   03B4               PUSH     {R0,R1}
   \   0000041A   2721               MOVS     R1,#+39
   \   0000041C   0F20               MOVS     R0,#+15
   \   0000041E   03B4               PUSH     {R0,R1}
   \   00000420   3A23               MOVS     R3,#+58
   \   00000422   0222               MOVS     R2,#+2
   \   00000424   0021               MOVS     R1,#+0
   \   00000426   02B5               PUSH     {R1,LR}
   \   00000428   B949               LDR      R1,??Procedure_Paint_24+0x8  ;; 0x366
   \   0000042A   8C46               MOV      R12,R1
   \   0000042C   2968               LDR      R1,[R5, #+0]
   \   0000042E   6143               MULS     R1,R4,R1
   \   00000430   B548               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000432   4018               ADDS     R0,R0,R1
   \   00000434   6146               MOV      R1,R12
   \   00000436   4018               ADDS     R0,R0,R1
   \   00000438   0099               LDR      R1,[SP, #0]
   \   0000043A   02B0               ADD      SP,SP,#+8
   \   0000043C   ........           BL       Label
   \   00000440   06B0               ADD      SP,SP,#+24
   \   00000442   93E1               B        ??Procedure_Paint_19
   3004                          case ProcWOUTR: Label(Speech[g_leng].ZerujWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_27:
   \   00000444   82B0               SUB      SP,SP,#+8
   \   00000446   0020               MOVS     R0,#+0
   \   00000448   0090               STR      R0,[SP, #+0]
   \   0000044A   6921               MOVS     R1,#+105
   \   0000044C   1020               MOVS     R0,#+16
   \   0000044E   03B4               PUSH     {R0,R1}
   \   00000450   2721               MOVS     R1,#+39
   \   00000452   0F20               MOVS     R0,#+15
   \   00000454   03B4               PUSH     {R0,R1}
   \   00000456   3A23               MOVS     R3,#+58
   \   00000458   0222               MOVS     R2,#+2
   \   0000045A   0021               MOVS     R1,#+0
   \   0000045C   02B5               PUSH     {R1,LR}
   \   0000045E   AD49               LDR      R1,??Procedure_Paint_24+0xC  ;; 0x375
   \   00000460   8C46               MOV      R12,R1
   \   00000462   2968               LDR      R1,[R5, #+0]
   \   00000464   6143               MULS     R1,R4,R1
   \   00000466   A848               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000468   4018               ADDS     R0,R0,R1
   \   0000046A   6146               MOV      R1,R12
   \   0000046C   4018               ADDS     R0,R0,R1
   \   0000046E   0099               LDR      R1,[SP, #0]
   \   00000470   02B0               ADD      SP,SP,#+8
   \   00000472   ........           BL       Label
   \   00000476   06B0               ADD      SP,SP,#+24
   \   00000478   78E1               B        ??Procedure_Paint_19
   3005                          case ProcWOUTC: Label(Speech[g_leng].ZerujWyjscie,0,2,Htmp,15,39,16,105,0); break;
   3006                          case ProcSetScn: Label(Speech[g_leng].W³Scene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_28:
   \   0000047A   82B0               SUB      SP,SP,#+8
   \   0000047C   0020               MOVS     R0,#+0
   \   0000047E   0090               STR      R0,[SP, #+0]
   \   00000480   6921               MOVS     R1,#+105
   \   00000482   1020               MOVS     R0,#+16
   \   00000484   03B4               PUSH     {R0,R1}
   \   00000486   2721               MOVS     R1,#+39
   \   00000488   0F20               MOVS     R0,#+15
   \   0000048A   03B4               PUSH     {R0,R1}
   \   0000048C   3A23               MOVS     R3,#+58
   \   0000048E   0222               MOVS     R2,#+2
   \   00000490   0021               MOVS     R1,#+0
   \   00000492   02B5               PUSH     {R1,LR}
   \   00000494   A049               LDR      R1,??Procedure_Paint_24+0x10  ;; 0x3a2
   \   00000496   8C46               MOV      R12,R1
   \   00000498   2968               LDR      R1,[R5, #+0]
   \   0000049A   6143               MULS     R1,R4,R1
   \   0000049C   9A48               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   0000049E   4018               ADDS     R0,R0,R1
   \   000004A0   6146               MOV      R1,R12
   \   000004A2   4018               ADDS     R0,R0,R1
   \   000004A4   0099               LDR      R1,[SP, #0]
   \   000004A6   02B0               ADD      SP,SP,#+8
   \   000004A8   ........           BL       Label
   \   000004AC   06B0               ADD      SP,SP,#+24
   \   000004AE   5DE1               B        ??Procedure_Paint_19
   3007                          case ProcInc: Label(Speech[g_leng].IncScene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_29:
   \   000004B0   82B0               SUB      SP,SP,#+8
   \   000004B2   0020               MOVS     R0,#+0
   \   000004B4   0090               STR      R0,[SP, #+0]
   \   000004B6   6921               MOVS     R1,#+105
   \   000004B8   1020               MOVS     R0,#+16
   \   000004BA   03B4               PUSH     {R0,R1}
   \   000004BC   2721               MOVS     R1,#+39
   \   000004BE   0F20               MOVS     R0,#+15
   \   000004C0   03B4               PUSH     {R0,R1}
   \   000004C2   3A23               MOVS     R3,#+58
   \   000004C4   0222               MOVS     R2,#+2
   \   000004C6   0021               MOVS     R1,#+0
   \   000004C8   02B5               PUSH     {R1,LR}
   \   000004CA   9449               LDR      R1,??Procedure_Paint_24+0x14  ;; 0x3b1
   \   000004CC   8C46               MOV      R12,R1
   \   000004CE   2968               LDR      R1,[R5, #+0]
   \   000004D0   6143               MULS     R1,R4,R1
   \   000004D2   8D48               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000004D4   4018               ADDS     R0,R0,R1
   \   000004D6   6146               MOV      R1,R12
   \   000004D8   4018               ADDS     R0,R0,R1
   \   000004DA   0099               LDR      R1,[SP, #0]
   \   000004DC   02B0               ADD      SP,SP,#+8
   \   000004DE   ........           BL       Label
   \   000004E2   06B0               ADD      SP,SP,#+24
   \   000004E4   42E1               B        ??Procedure_Paint_19
   3008                          case ProcDec: Label(Speech[g_leng].DecScene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_30:
   \   000004E6   82B0               SUB      SP,SP,#+8
   \   000004E8   0020               MOVS     R0,#+0
   \   000004EA   0090               STR      R0,[SP, #+0]
   \   000004EC   6921               MOVS     R1,#+105
   \   000004EE   1020               MOVS     R0,#+16
   \   000004F0   03B4               PUSH     {R0,R1}
   \   000004F2   2721               MOVS     R1,#+39
   \   000004F4   0F20               MOVS     R0,#+15
   \   000004F6   03B4               PUSH     {R0,R1}
   \   000004F8   3A23               MOVS     R3,#+58
   \   000004FA   0222               MOVS     R2,#+2
   \   000004FC   0021               MOVS     R1,#+0
   \   000004FE   02B5               PUSH     {R1,LR}
   \   00000500   8101               LSLS     R1,R0,#+6
   \   00000502   8C46               MOV      R12,R1
   \   00000504   2968               LDR      R1,[R5, #+0]
   \   00000506   6143               MULS     R1,R4,R1
   \   00000508   7F48               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   0000050A   4018               ADDS     R0,R0,R1
   \   0000050C   6146               MOV      R1,R12
   \   0000050E   4018               ADDS     R0,R0,R1
   \   00000510   0099               LDR      R1,[SP, #0]
   \   00000512   02B0               ADD      SP,SP,#+8
   \   00000514   ........           BL       Label
   \   00000518   06B0               ADD      SP,SP,#+24
   \   0000051A   27E1               B        ??Procedure_Paint_19
   3009                          case ProcSPK: Label(Speech[g_leng].Glosnik,0,2,Htmp,15,34,16,105,0); break;
   \                     ??Procedure_Paint_31:
   \   0000051C   82B0               SUB      SP,SP,#+8
   \   0000051E   0020               MOVS     R0,#+0
   \   00000520   0090               STR      R0,[SP, #+0]
   \   00000522   6921               MOVS     R1,#+105
   \   00000524   1020               MOVS     R0,#+16
   \   00000526   03B4               PUSH     {R0,R1}
   \   00000528   2221               MOVS     R1,#+34
   \   0000052A   0F20               MOVS     R0,#+15
   \   0000052C   03B4               PUSH     {R0,R1}
   \   0000052E   3A23               MOVS     R3,#+58
   \   00000530   0222               MOVS     R2,#+2
   \   00000532   0021               MOVS     R1,#+0
   \   00000534   02B5               PUSH     {R1,LR}
   \   00000536   FF21               MOVS     R1,#+255
   \   00000538   C900               LSLS     R1,R1,#+3        ;; #+2040
   \   0000053A   8C46               MOV      R12,R1
   \   0000053C   2968               LDR      R1,[R5, #+0]
   \   0000053E   6143               MULS     R1,R4,R1
   \   00000540   7148               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000542   4018               ADDS     R0,R0,R1
   \   00000544   6146               MOV      R1,R12
   \   00000546   4018               ADDS     R0,R0,R1
   \   00000548   0099               LDR      R1,[SP, #0]
   \   0000054A   02B0               ADD      SP,SP,#+8
   \   0000054C   ........           BL       Label
   \   00000550   06B0               ADD      SP,SP,#+24
   \   00000552   0BE1               B        ??Procedure_Paint_19
   3010                          case ProcTimerSet: Label(Speech[g_leng].Timer,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_32:
   \   00000554   82B0               SUB      SP,SP,#+8
   \   00000556   0020               MOVS     R0,#+0
   \   00000558   0090               STR      R0,[SP, #+0]
   \   0000055A   6921               MOVS     R1,#+105
   \   0000055C   1020               MOVS     R0,#+16
   \   0000055E   03B4               PUSH     {R0,R1}
   \   00000560   2721               MOVS     R1,#+39
   \   00000562   0F20               MOVS     R0,#+15
   \   00000564   03B4               PUSH     {R0,R1}
   \   00000566   3A23               MOVS     R3,#+58
   \   00000568   0222               MOVS     R2,#+2
   \   0000056A   0021               MOVS     R1,#+0
   \   0000056C   02B5               PUSH     {R1,LR}
   \   0000056E   6C49               LDR      R1,??Procedure_Paint_24+0x18  ;; 0x3cf
   \   00000570   8C46               MOV      R12,R1
   \   00000572   2968               LDR      R1,[R5, #+0]
   \   00000574   6143               MULS     R1,R4,R1
   \   00000576   6448               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000578   4018               ADDS     R0,R0,R1
   \   0000057A   6146               MOV      R1,R12
   \   0000057C   4018               ADDS     R0,R0,R1
   \   0000057E   0099               LDR      R1,[SP, #0]
   \   00000580   02B0               ADD      SP,SP,#+8
   \   00000582   ........           BL       Label
   \   00000586   06B0               ADD      SP,SP,#+24
   \   00000588   F0E0               B        ??Procedure_Paint_19
   3011                          case ProcClock: Label(Speech[g_leng].Zegar,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_33:
   \   0000058A   82B0               SUB      SP,SP,#+8
   \   0000058C   0020               MOVS     R0,#+0
   \   0000058E   0090               STR      R0,[SP, #+0]
   \   00000590   6921               MOVS     R1,#+105
   \   00000592   1020               MOVS     R0,#+16
   \   00000594   03B4               PUSH     {R0,R1}
   \   00000596   2721               MOVS     R1,#+39
   \   00000598   0F20               MOVS     R0,#+15
   \   0000059A   03B4               PUSH     {R0,R1}
   \   0000059C   3A23               MOVS     R3,#+58
   \   0000059E   0222               MOVS     R2,#+2
   \   000005A0   0021               MOVS     R1,#+0
   \   000005A2   02B5               PUSH     {R1,LR}
   \   000005A4   5F49               LDR      R1,??Procedure_Paint_24+0x1C  ;; 0x3de
   \   000005A6   8C46               MOV      R12,R1
   \   000005A8   2968               LDR      R1,[R5, #+0]
   \   000005AA   6143               MULS     R1,R4,R1
   \   000005AC   5648               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000005AE   4018               ADDS     R0,R0,R1
   \   000005B0   6146               MOV      R1,R12
   \   000005B2   4018               ADDS     R0,R0,R1
   \   000005B4   0099               LDR      R1,[SP, #0]
   \   000005B6   02B0               ADD      SP,SP,#+8
   \   000005B8   ........           BL       Label
   \   000005BC   06B0               ADD      SP,SP,#+24
   \   000005BE   D5E0               B        ??Procedure_Paint_19
   3012                          case ProcDay: Label(Speech[g_leng].DzienTygodnia,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_34:
   \   000005C0   82B0               SUB      SP,SP,#+8
   \   000005C2   0020               MOVS     R0,#+0
   \   000005C4   0090               STR      R0,[SP, #+0]
   \   000005C6   6921               MOVS     R1,#+105
   \   000005C8   1020               MOVS     R0,#+16
   \   000005CA   03B4               PUSH     {R0,R1}
   \   000005CC   2721               MOVS     R1,#+39
   \   000005CE   0F20               MOVS     R0,#+15
   \   000005D0   03B4               PUSH     {R0,R1}
   \   000005D2   3A23               MOVS     R3,#+58
   \   000005D4   0222               MOVS     R2,#+2
   \   000005D6   0021               MOVS     R1,#+0
   \   000005D8   02B5               PUSH     {R1,LR}
   \   000005DA   5349               LDR      R1,??Procedure_Paint_24+0x20  ;; 0x564
   \   000005DC   8C46               MOV      R12,R1
   \   000005DE   2968               LDR      R1,[R5, #+0]
   \   000005E0   6143               MULS     R1,R4,R1
   \   000005E2   4948               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000005E4   4018               ADDS     R0,R0,R1
   \   000005E6   6146               MOV      R1,R12
   \   000005E8   4018               ADDS     R0,R0,R1
   \   000005EA   0099               LDR      R1,[SP, #0]
   \   000005EC   02B0               ADD      SP,SP,#+8
   \   000005EE   ........           BL       Label
   \   000005F2   06B0               ADD      SP,SP,#+24
   \   000005F4   BAE0               B        ??Procedure_Paint_19
   3013                          case ProcConstAnal: Label("Const. ",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_35:
   \   000005F6   82B0               SUB      SP,SP,#+8
   \   000005F8   0020               MOVS     R0,#+0
   \   000005FA   0090               STR      R0,[SP, #+0]
   \   000005FC   6921               MOVS     R1,#+105
   \   000005FE   1020               MOVS     R0,#+16
   \   00000600   03B4               PUSH     {R0,R1}
   \   00000602   2721               MOVS     R1,#+39
   \   00000604   0F20               MOVS     R0,#+15
   \   00000606   03B4               PUSH     {R0,R1}
   \   00000608   3A23               MOVS     R3,#+58
   \   0000060A   0222               MOVS     R2,#+2
   \   0000060C   0021               MOVS     R1,#+0
   \   0000060E   4748               LDR      R0,??Procedure_Paint_24+0x24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 12
   \   00000610   ........           BL       Label
   \   00000614   06B0               ADD      SP,SP,#+24
   \   00000616   A9E0               B        ??Procedure_Paint_19
   3014                          case ProcGetReg: Label("Get reg.",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_36:
   \   00000618   82B0               SUB      SP,SP,#+8
   \   0000061A   0020               MOVS     R0,#+0
   \   0000061C   0090               STR      R0,[SP, #+0]
   \   0000061E   6921               MOVS     R1,#+105
   \   00000620   1020               MOVS     R0,#+16
   \   00000622   03B4               PUSH     {R0,R1}
   \   00000624   2721               MOVS     R1,#+39
   \   00000626   0F20               MOVS     R0,#+15
   \   00000628   03B4               PUSH     {R0,R1}
   \   0000062A   3A23               MOVS     R3,#+58
   \   0000062C   0222               MOVS     R2,#+2
   \   0000062E   0021               MOVS     R1,#+0
   \   00000630   3F48               LDR      R0,??Procedure_Paint_24+0x28  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 20
   \   00000632   ........           BL       Label
   \   00000636   06B0               ADD      SP,SP,#+24
   \   00000638   98E0               B        ??Procedure_Paint_19
   3015                          case ProcSetReg: Label("Set reg.",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_37:
   \   0000063A   82B0               SUB      SP,SP,#+8
   \   0000063C   0020               MOVS     R0,#+0
   \   0000063E   0090               STR      R0,[SP, #+0]
   \   00000640   6921               MOVS     R1,#+105
   \   00000642   1020               MOVS     R0,#+16
   \   00000644   03B4               PUSH     {R0,R1}
   \   00000646   2721               MOVS     R1,#+39
   \   00000648   0F20               MOVS     R0,#+15
   \   0000064A   03B4               PUSH     {R0,R1}
   \   0000064C   3A23               MOVS     R3,#+58
   \   0000064E   0222               MOVS     R2,#+2
   \   00000650   0021               MOVS     R1,#+0
   \   00000652   3848               LDR      R0,??Procedure_Paint_24+0x2C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 32
   \   00000654   ........           BL       Label
   \   00000658   06B0               ADD      SP,SP,#+24
   \   0000065A   87E0               B        ??Procedure_Paint_19
   3016                          case ProcLim: Label("1>2 Q=1",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_38:
   \   0000065C   82B0               SUB      SP,SP,#+8
   \   0000065E   0020               MOVS     R0,#+0
   \   00000660   0090               STR      R0,[SP, #+0]
   \   00000662   6921               MOVS     R1,#+105
   \   00000664   1020               MOVS     R0,#+16
   \   00000666   03B4               PUSH     {R0,R1}
   \   00000668   2721               MOVS     R1,#+39
   \   0000066A   0F20               MOVS     R0,#+15
   \   0000066C   03B4               PUSH     {R0,R1}
   \   0000066E   3A23               MOVS     R3,#+58
   \   00000670   0222               MOVS     R2,#+2
   \   00000672   0021               MOVS     R1,#+0
   \   00000674   3048               LDR      R0,??Procedure_Paint_24+0x30  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 44
   \   00000676   ........           BL       Label
   \   0000067A   06B0               ADD      SP,SP,#+24
   \   0000067C   76E0               B        ??Procedure_Paint_19
   3017                          case ProcEven: Label("1=2 Q=1",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_39:
   \   0000067E   82B0               SUB      SP,SP,#+8
   \   00000680   0020               MOVS     R0,#+0
   \   00000682   0090               STR      R0,[SP, #+0]
   \   00000684   6921               MOVS     R1,#+105
   \   00000686   1020               MOVS     R0,#+16
   \   00000688   03B4               PUSH     {R0,R1}
   \   0000068A   2721               MOVS     R1,#+39
   \   0000068C   0F20               MOVS     R0,#+15
   \   0000068E   03B4               PUSH     {R0,R1}
   \   00000690   3A23               MOVS     R3,#+58
   \   00000692   0222               MOVS     R2,#+2
   \   00000694   0021               MOVS     R1,#+0
   \   00000696   2948               LDR      R0,??Procedure_Paint_24+0x34  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 52
   \   00000698   ........           BL       Label
   \   0000069C   06B0               ADD      SP,SP,#+24
   \   0000069E   65E0               B        ??Procedure_Paint_19
   3018                          case ProcPlus: Label("Q=1+2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_40:
   \   000006A0   82B0               SUB      SP,SP,#+8
   \   000006A2   0020               MOVS     R0,#+0
   \   000006A4   0090               STR      R0,[SP, #+0]
   \   000006A6   6921               MOVS     R1,#+105
   \   000006A8   1020               MOVS     R0,#+16
   \   000006AA   03B4               PUSH     {R0,R1}
   \   000006AC   2721               MOVS     R1,#+39
   \   000006AE   0F20               MOVS     R0,#+15
   \   000006B0   03B4               PUSH     {R0,R1}
   \   000006B2   3A23               MOVS     R3,#+58
   \   000006B4   0222               MOVS     R2,#+2
   \   000006B6   0021               MOVS     R1,#+0
   \   000006B8   2148               LDR      R0,??Procedure_Paint_24+0x38  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 60
   \   000006BA   ........           BL       Label
   \   000006BE   06B0               ADD      SP,SP,#+24
   \   000006C0   54E0               B        ??Procedure_Paint_19
   3019                          case ProcMinus: Label("Q=1-2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_41:
   \   000006C2   82B0               SUB      SP,SP,#+8
   \   000006C4   0020               MOVS     R0,#+0
   \   000006C6   0090               STR      R0,[SP, #+0]
   \   000006C8   6921               MOVS     R1,#+105
   \   000006CA   1020               MOVS     R0,#+16
   \   000006CC   03B4               PUSH     {R0,R1}
   \   000006CE   2721               MOVS     R1,#+39
   \   000006D0   0F20               MOVS     R0,#+15
   \   000006D2   03B4               PUSH     {R0,R1}
   \   000006D4   3A23               MOVS     R3,#+58
   \   000006D6   0222               MOVS     R2,#+2
   \   000006D8   0021               MOVS     R1,#+0
   \   000006DA   1A48               LDR      R0,??Procedure_Paint_24+0x3C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 68
   \   000006DC   ........           BL       Label
   \   000006E0   06B0               ADD      SP,SP,#+24
   \   000006E2   43E0               B        ??Procedure_Paint_19
   3020                          case ProcMul: Label("Q=1x2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_42:
   \   000006E4   82B0               SUB      SP,SP,#+8
   \   000006E6   0020               MOVS     R0,#+0
   \   000006E8   0090               STR      R0,[SP, #+0]
   \   000006EA   6921               MOVS     R1,#+105
   \   000006EC   1020               MOVS     R0,#+16
   \   000006EE   03B4               PUSH     {R0,R1}
   \   000006F0   2721               MOVS     R1,#+39
   \   000006F2   0F20               MOVS     R0,#+15
   \   000006F4   03B4               PUSH     {R0,R1}
   \   000006F6   3A23               MOVS     R3,#+58
   \   000006F8   0222               MOVS     R2,#+2
   \   000006FA   0021               MOVS     R1,#+0
   \   000006FC   1248               LDR      R0,??Procedure_Paint_24+0x40  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 76
   \   000006FE   ........           BL       Label
   \   00000702   06B0               ADD      SP,SP,#+24
   \   00000704   32E0               B        ??Procedure_Paint_19
   \   00000706   C046               Nop      
   \                     ??Procedure_Paint_24:
   \   00000708   ........           DC32     Speech
   \   0000070C   57030000           DC32     0x357
   \   00000710   66030000           DC32     0x366
   \   00000714   75030000           DC32     0x375
   \   00000718   A2030000           DC32     0x3a2
   \   0000071C   B1030000           DC32     0x3b1
   \   00000720   CF030000           DC32     0x3cf
   \   00000724   DE030000           DC32     0x3de
   \   00000728   64050000           DC32     0x564
   \   0000072C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 12
   \   00000730   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 20
   \   00000734   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 32
   \   00000738   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 44
   \   0000073C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 52
   \   00000740   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 60
   \   00000744   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 68
   \   00000748   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 76
   3021                          case ProcDiv: Label("Q=1/2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_43:
   \   0000074C   82B0               SUB      SP,SP,#+8
   \   0000074E   0020               MOVS     R0,#+0
   \   00000750   0090               STR      R0,[SP, #+0]
   \   00000752   6921               MOVS     R1,#+105
   \   00000754   1020               MOVS     R0,#+16
   \   00000756   03B4               PUSH     {R0,R1}
   \   00000758   2721               MOVS     R1,#+39
   \   0000075A   0F20               MOVS     R0,#+15
   \   0000075C   03B4               PUSH     {R0,R1}
   \   0000075E   3A23               MOVS     R3,#+58
   \   00000760   0222               MOVS     R2,#+2
   \   00000762   0021               MOVS     R1,#+0
   \   00000764   5348               LDR      R0,??Procedure_Paint_44  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 84
   \   00000766   ........           BL       Label
   \   0000076A   06B0               ADD      SP,SP,#+24
   3022          
   3023                                       
   3024                        }
   3025                        
   3026                        
   3027                        
   3028                        if (
   3029                           (Prc.Type!=ProcInc) && 
   3030                           (Prc.Type!=ProcDec) &&
   3031                           ((Prc.Type<ProcTimeStart)
   3032                            || (Prc.Type==ProcGetReg)
   3033                            || (Prc.Type==ProcSetReg)
   3034                           )
   3035                          )
   \                     ??Procedure_Paint_19:
   \   0000076C   3078               LDRB     R0,[R6, #+0]
   \   0000076E   2528               CMP      R0,#+37
   \   00000770   67D0               BEQ      ??Procedure_Paint_45
   \   00000772   2628               CMP      R0,#+38
   \   00000774   65D0               BEQ      ??Procedure_Paint_45
   \   00000776   2C28               CMP      R0,#+44
   \   00000778   03D3               BCC      ??Procedure_Paint_46
   \   0000077A   3828               CMP      R0,#+56
   \   0000077C   01D0               BEQ      ??Procedure_Paint_46
   \   0000077E   3928               CMP      R0,#+57
   \   00000780   5FD1               BNE      ??Procedure_Paint_45
   3036                        {
   3037                          txt[0]='>';
   \                     ??Procedure_Paint_46:
   \   00000782   3E20               MOVS     R0,#+62
   \   00000784   3870               STRB     R0,[R7, #+0]
   3038                          Button(txt,43,25,18,18);
   \   00000786   82B0               SUB      SP,SP,#+8
   \   00000788   1220               MOVS     R0,#+18
   \   0000078A   0090               STR      R0,[SP, #+0]
   \   0000078C   0300               MOVS     R3,R0
   \   0000078E   1922               MOVS     R2,#+25
   \   00000790   2B21               MOVS     R1,#+43
   \   00000792   02A8               ADD      R0,SP,#+8
   \   00000794   ........           BL       Button
   \   00000798   02B0               ADD      SP,SP,#+8
   3039                          txt[0]='<';
   \   0000079A   3C20               MOVS     R0,#+60
   \   0000079C   3870               STRB     R0,[R7, #+0]
   3040                          Button(txt,2,25,18,18);
   \   0000079E   82B0               SUB      SP,SP,#+8
   \   000007A0   1220               MOVS     R0,#+18
   \   000007A2   0090               STR      R0,[SP, #+0]
   \   000007A4   0300               MOVS     R3,R0
   \   000007A6   1922               MOVS     R2,#+25
   \   000007A8   0221               MOVS     R1,#+2
   \   000007AA   02A8               ADD      R0,SP,#+8
   \   000007AC   ........           BL       Button
   \   000007B0   02B0               ADD      SP,SP,#+8
   3041                         
   3042                          if (Prc.Type!=ProcSPK)
   \   000007B2   3078               LDRB     R0,[R6, #+0]
   \   000007B4   2728               CMP      R0,#+39
   \   000007B6   29D0               BEQ      ??Procedure_Paint_47
   3043                          {
   3044                            if (Prc.Nr>=0)
   \   000007B8   0120               MOVS     R0,#+1
   \   000007BA   3056               LDRSB    R0,[R6, R0]
   \   000007BC   0028               CMP      R0,#+0
   \   000007BE   0FD4               BMI      ??Procedure_Paint_48
   3045                            {
   3046                              txt[0]='N';txt[1]='r';txt[2]=':';
   \   000007C0   4E20               MOVS     R0,#+78
   \   000007C2   3870               STRB     R0,[R7, #+0]
   \   000007C4   7220               MOVS     R0,#+114
   \   000007C6   7870               STRB     R0,[R7, #+1]
   \   000007C8   3A20               MOVS     R0,#+58
   \   000007CA   B870               STRB     R0,[R7, #+2]
   3047                              CharToStr(Prc.Nr, &txt[3], 2); //(char Value, char *Vstring, char ill);
   \   000007CC   0222               MOVS     R2,#+2
   \   000007CE   3900               MOVS     R1,R7
   \   000007D0   C91C               ADDS     R1,R1,#+3
   \   000007D2   0120               MOVS     R0,#+1
   \   000007D4   3056               LDRSB    R0,[R6, R0]
   \   000007D6   0006               LSLS     R0,R0,#+24
   \   000007D8   000E               LSRS     R0,R0,#+24
   \   000007DA   ........           BL       CharToStr
   \   000007DE   05E0               B        ??Procedure_Paint_49
   3048                              
   3049                            }else{
   3050                              txt[0]='V';txt[1]='a';txt[2]='r';
   \                     ??Procedure_Paint_48:
   \   000007E0   5620               MOVS     R0,#+86
   \   000007E2   3870               STRB     R0,[R7, #+0]
   \   000007E4   6120               MOVS     R0,#+97
   \   000007E6   7870               STRB     R0,[R7, #+1]
   \   000007E8   7220               MOVS     R0,#+114
   \   000007EA   B870               STRB     R0,[R7, #+2]
   3051                            }
   3052                            Label(txt,2,21,29,5,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \                     ??Procedure_Paint_49:
   \   000007EC   82B0               SUB      SP,SP,#+8
   \   000007EE   0020               MOVS     R0,#+0
   \   000007F0   0090               STR      R0,[SP, #+0]
   \   000007F2   6921               MOVS     R1,#+105
   \   000007F4   03B4               PUSH     {R0,R1}
   \   000007F6   1421               MOVS     R1,#+20
   \   000007F8   0520               MOVS     R0,#+5
   \   000007FA   03B4               PUSH     {R0,R1}
   \   000007FC   1D23               MOVS     R3,#+29
   \   000007FE   1522               MOVS     R2,#+21
   \   00000800   0221               MOVS     R1,#+2
   \   00000802   06A8               ADD      R0,SP,#+24
   \   00000804   ........           BL       Label
   \   00000808   06B0               ADD      SP,SP,#+24
   \   0000080A   1AE0               B        ??Procedure_Paint_45
   3053                          }else{
   3054                            if(Prc.Tag.SpeakerType>SPK_Amount-1) Prc.Tag.SpeakerType=0;
   \                     ??Procedure_Paint_47:
   \   0000080C   307A               LDRB     R0,[R6, #+8]
   \   0000080E   0428               CMP      R0,#+4
   \   00000810   01D3               BCC      ??Procedure_Paint_50
   \   00000812   0020               MOVS     R0,#+0
   \   00000814   3072               STRB     R0,[R6, #+8]
   3055                            CopyToCanvasPoint((char*)SPK_1[Prc.Tag.SpeakerType], 23,31, 16,5); 
   \                     ??Procedure_Paint_50:
   \   00000816   82B0               SUB      SP,SP,#+8
   \   00000818   0520               MOVS     R0,#+5
   \   0000081A   0090               STR      R0,[SP, #+0]
   \   0000081C   1023               MOVS     R3,#+16
   \   0000081E   1F22               MOVS     R2,#+31
   \   00000820   1721               MOVS     R1,#+23
   \   00000822   02B5               PUSH     {R1,LR}
   \   00000824   9446               MOV      R12,R2
   \   00000826   8D21               MOVS     R1,#+141
   \   00000828   C900               LSLS     R1,R1,#+3        ;; #+1128
   \   0000082A   307A               LDRB     R0,[R6, #+8]
   \   0000082C   0A22               MOVS     R2,#+10
   \   0000082E   5043               MULS     R0,R2,R0
   \   00000830   214A               LDR      R2,??Procedure_Paint_44+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000832   1018               ADDS     R0,R2,R0
   \   00000834   4018               ADDS     R0,R0,R1
   \   00000836   6246               MOV      R2,R12
   \   00000838   0099               LDR      R1,[SP, #0]
   \   0000083A   02B0               ADD      SP,SP,#+8
   \   0000083C   ........           BL       CopyToCanvasPoint
   \   00000840   02B0               ADD      SP,SP,#+8
   3056                          }
   3057                        }
   3058                        
   3059                        if ((Prc.Type==ProcStI) || (Prc.Type==ProcStNI) || (Prc.Type==ProcStQ) || (Prc.Type==ProcWOUT) || (Prc.Type==ProcWOUTS) || (Prc.Type==ProcWOUTR)|| (Prc.Type==ProcWOUTC))
   \                     ??Procedure_Paint_45:
   \   00000842   3078               LDRB     R0,[R6, #+0]
   \   00000844   1428               CMP      R0,#+20
   \   00000846   0BD0               BEQ      ??Procedure_Paint_51
   \   00000848   1528               CMP      R0,#+21
   \   0000084A   09D0               BEQ      ??Procedure_Paint_51
   \   0000084C   1628               CMP      R0,#+22
   \   0000084E   07D0               BEQ      ??Procedure_Paint_51
   \   00000850   2028               CMP      R0,#+32
   \   00000852   05D0               BEQ      ??Procedure_Paint_51
   \   00000854   2128               CMP      R0,#+33
   \   00000856   03D0               BEQ      ??Procedure_Paint_51
   \   00000858   2228               CMP      R0,#+34
   \   0000085A   01D0               BEQ      ??Procedure_Paint_51
   \   0000085C   2328               CMP      R0,#+35
   \   0000085E   59D1               BNE      ??Procedure_Paint_12
   3060                        {
   3061                          txt[1]=0;
   \                     ??Procedure_Paint_51:
   \   00000860   0020               MOVS     R0,#+0
   \   00000862   7870               STRB     R0,[R7, #+1]
   3062                          txt[0]='>';
   \   00000864   3E20               MOVS     R0,#+62
   \   00000866   3870               STRB     R0,[R7, #+0]
   3063                          Button(txt,43,4,18,18);
   \   00000868   82B0               SUB      SP,SP,#+8
   \   0000086A   1220               MOVS     R0,#+18
   \   0000086C   0090               STR      R0,[SP, #+0]
   \   0000086E   0300               MOVS     R3,R0
   \   00000870   0422               MOVS     R2,#+4
   \   00000872   2B21               MOVS     R1,#+43
   \   00000874   02A8               ADD      R0,SP,#+8
   \   00000876   ........           BL       Button
   \   0000087A   02B0               ADD      SP,SP,#+8
   3064                          txt[0]='<';
   \   0000087C   3C20               MOVS     R0,#+60
   \   0000087E   3870               STRB     R0,[R7, #+0]
   3065                          Button(txt,2,4,18,18);
   \   00000880   82B0               SUB      SP,SP,#+8
   \   00000882   1220               MOVS     R0,#+18
   \   00000884   0090               STR      R0,[SP, #+0]
   \   00000886   0300               MOVS     R3,R0
   \   00000888   0422               MOVS     R2,#+4
   \   0000088A   0221               MOVS     R1,#+2
   \   0000088C   02A8               ADD      R0,SP,#+8
   \   0000088E   ........           BL       Button
   \   00000892   02B0               ADD      SP,SP,#+8
   3066                          if (Prc.Nr>=0)
   \   00000894   0120               MOVS     R0,#+1
   \   00000896   3056               LDRSB    R0,[R6, R0]
   \   00000898   0028               CMP      R0,#+0
   \   0000089A   0FD4               BMI      ??Procedure_Paint_52
   3067                            {
   3068                              txt[0]='P';txt[1]='o';txt[2]='r';txt[3]='t';txt[4]=':';
   \   0000089C   5020               MOVS     R0,#+80
   \   0000089E   3870               STRB     R0,[R7, #+0]
   \   000008A0   6F20               MOVS     R0,#+111
   \   000008A2   7870               STRB     R0,[R7, #+1]
   \   000008A4   7220               MOVS     R0,#+114
   \   000008A6   B870               STRB     R0,[R7, #+2]
   \   000008A8   7420               MOVS     R0,#+116
   \   000008AA   F870               STRB     R0,[R7, #+3]
   \   000008AC   3A20               MOVS     R0,#+58
   \   000008AE   3871               STRB     R0,[R7, #+4]
   \   000008B0   0AE0               B        ??Procedure_Paint_53
   \   000008B2   C046               Nop      
   \                     ??Procedure_Paint_44:
   \   000008B4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 84
   \   000008B8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   3069                            }else{
   3070                              txt[0]='N';txt[1]='r';txt[2]=':';
   \                     ??Procedure_Paint_52:
   \   000008BC   4E20               MOVS     R0,#+78
   \   000008BE   3870               STRB     R0,[R7, #+0]
   \   000008C0   7220               MOVS     R0,#+114
   \   000008C2   7870               STRB     R0,[R7, #+1]
   \   000008C4   3A20               MOVS     R0,#+58
   \   000008C6   B870               STRB     R0,[R7, #+2]
   3071                            }
   3072                          Label(txt,2,21,12,5,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??Procedure_Paint_53:
   \   000008C8   82B0               SUB      SP,SP,#+8
   \   000008CA   0020               MOVS     R0,#+0
   \   000008CC   0090               STR      R0,[SP, #+0]
   \   000008CE   6921               MOVS     R1,#+105
   \   000008D0   03B4               PUSH     {R0,R1}
   \   000008D2   1421               MOVS     R1,#+20
   \   000008D4   0520               MOVS     R0,#+5
   \   000008D6   03B4               PUSH     {R0,R1}
   \   000008D8   0C23               MOVS     R3,#+12
   \   000008DA   1522               MOVS     R2,#+21
   \   000008DC   0221               MOVS     R1,#+2
   \   000008DE   06A8               ADD      R0,SP,#+24
   \   000008E0   ........           BL       Label
   \   000008E4   06B0               ADD      SP,SP,#+24
   3073                          txt[1]=0;txt[2]=0;
   \   000008E6   0020               MOVS     R0,#+0
   \   000008E8   7870               STRB     R0,[R7, #+1]
   \   000008EA   B870               STRB     R0,[R7, #+2]
   3074                          CharToStr(Prc.Tag.Port, txt, 2); //(char Value, char *Vstring, char ill);
   \   000008EC   0222               MOVS     R2,#+2
   \   000008EE   6946               MOV      R1,SP
   \   000008F0   307A               LDRB     R0,[R6, #+8]
   \   000008F2   ........           BL       CharToStr
   3075                          Label(txt,0,26,4,2,10,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000008F6   82B0               SUB      SP,SP,#+8
   \   000008F8   0020               MOVS     R0,#+0
   \   000008FA   0090               STR      R0,[SP, #+0]
   \   000008FC   6921               MOVS     R1,#+105
   \   000008FE   03B4               PUSH     {R0,R1}
   \   00000900   0A21               MOVS     R1,#+10
   \   00000902   0220               MOVS     R0,#+2
   \   00000904   03B4               PUSH     {R0,R1}
   \   00000906   0423               MOVS     R3,#+4
   \   00000908   1A22               MOVS     R2,#+26
   \   0000090A   0021               MOVS     R1,#+0
   \   0000090C   06A8               ADD      R0,SP,#+24
   \   0000090E   ........           BL       Label
   \   00000912   06B0               ADD      SP,SP,#+24
   3076                        }
   3077                      }
   3078          
   3079                    
   3080                      if ((Prc.Type>ProcStStart) && (Prc.Type<ProcStStop)) WybProc(1,0);
   \                     ??Procedure_Paint_12:
   \   00000914   3078               LDRB     R0,[R6, #+0]
   \   00000916   1428               CMP      R0,#+20
   \   00000918   05D3               BCC      ??Procedure_Paint_54
   \   0000091A   1928               CMP      R0,#+25
   \   0000091C   03D2               BCS      ??Procedure_Paint_54
   \   0000091E   0021               MOVS     R1,#+0
   \   00000920   0120               MOVS     R0,#+1
   \   00000922   ........           BL       WybProc
   3081                        
   3082                      
   3083                      
   3084                      if  ((Prc.Type>ProcSetStart) && (Prc.Type<ProcSetStop))
   \                     ??Procedure_Paint_54:
   \   00000926   3078               LDRB     R0,[R6, #+0]
   \   00000928   2028               CMP      R0,#+32
   \   0000092A   05D3               BCC      ??Procedure_Paint_55
   \   0000092C   2828               CMP      R0,#+40
   \   0000092E   03D2               BCS      ??Procedure_Paint_55
   3085                      { 
   3086                        WybProc(2,0);
   \   00000930   0021               MOVS     R1,#+0
   \   00000932   0220               MOVS     R0,#+2
   \   00000934   ........           BL       WybProc
   3087                      }
   3088          
   3089           
   3090          
   3091                      if  ((Prc.Type>ProcTimeStart) && (Prc.Type<ProcTimeStop))
   \                     ??Procedure_Paint_55:
   \   00000938   3078               LDRB     R0,[R6, #+0]
   \   0000093A   2D28               CMP      R0,#+45
   \   0000093C   05D3               BCC      ??Procedure_Paint_56
   \   0000093E   3028               CMP      R0,#+48
   \   00000940   03D2               BCS      ??Procedure_Paint_56
   3092                      { 
   3093                        WybProc(1,1);
   \   00000942   0121               MOVS     R1,#+1
   \   00000944   0800               MOVS     R0,R1
   \   00000946   ........           BL       WybProc
   3094                      } 
   3095          
   3096                      if  ((Prc.Type>ProcAnalogStart) && (Prc.Type<ProcAnalogStop))
   \                     ??Procedure_Paint_56:
   \   0000094A   3078               LDRB     R0,[R6, #+0]
   \   0000094C   3728               CMP      R0,#+55
   \   0000094E   05D3               BCC      ??Procedure_Paint_57
   \   00000950   4028               CMP      R0,#+64
   \   00000952   03D2               BCS      ??Procedure_Paint_57
   3097                      { 
   3098                        WybProc(2,1);
   \   00000954   0121               MOVS     R1,#+1
   \   00000956   0220               MOVS     R0,#+2
   \   00000958   ........           BL       WybProc
   3099                      } 
   3100                      
   3101                  if ((Prc.Type==ProcTimerSet))
   \                     ??Procedure_Paint_57:
   \   0000095C   3078               LDRB     R0,[R6, #+0]
   \   0000095E   2D28               CMP      R0,#+45
   \   00000960   65D1               BNE      ??Procedure_Paint_58
   3102                  {
   3103                    Label(Speech[g_leng].IleSek,0,3,37,13,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000962   82B0               SUB      SP,SP,#+8
   \   00000964   0020               MOVS     R0,#+0
   \   00000966   0090               STR      R0,[SP, #+0]
   \   00000968   7F21               MOVS     R1,#+127
   \   0000096A   0120               MOVS     R0,#+1
   \   0000096C   03B4               PUSH     {R0,R1}
   \   0000096E   2121               MOVS     R1,#+33
   \   00000970   0D20               MOVS     R0,#+13
   \   00000972   03B4               PUSH     {R0,R1}
   \   00000974   2523               MOVS     R3,#+37
   \   00000976   0322               MOVS     R2,#+3
   \   00000978   0021               MOVS     R1,#+0
   \   0000097A   BA4F               LDR      R7,??Procedure_Paint_59  ;; 0x3ed
   \   0000097C   BC46               MOV      R12,R7
   \   0000097E   2F68               LDR      R7,[R5, #+0]
   \   00000980   6743               MULS     R7,R4,R7
   \   00000982   B948               LDR      R0,??Procedure_Paint_59+0x4  ;; Speech
   \   00000984   C019               ADDS     R0,R0,R7
   \   00000986   6746               MOV      R7,R12
   \   00000988   C019               ADDS     R0,R0,R7
   \   0000098A   ........           BL       Label
   \   0000098E   06B0               ADD      SP,SP,#+24
   3104                              
   3105                    FloToStr(Prc.Tag.SetCounter , txt, 9); //(char Value, char *Vstring, char ill);
   \   00000990   0922               MOVS     R2,#+9
   \   00000992   6946               MOV      R1,SP
   \   00000994   02B5               PUSH     {R1,LR}
   \   00000996   1700               MOVS     R7,R2
   \   00000998   0698               LDR      R0,[SP, #+24]
   \   0000099A   ........           BL       __aeabi_ui2f
   \   0000099E   3A00               MOVS     R2,R7
   \   000009A0   0099               LDR      R1,[SP, #0]
   \   000009A2   02B0               ADD      SP,SP,#+8
   \   000009A4   ........           BL       FloToStr
   3106                    Label(txt,0,12,26,9,44,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000009A8   82B0               SUB      SP,SP,#+8
   \   000009AA   0020               MOVS     R0,#+0
   \   000009AC   0090               STR      R0,[SP, #+0]
   \   000009AE   7F21               MOVS     R1,#+127
   \   000009B0   0120               MOVS     R0,#+1
   \   000009B2   03B4               PUSH     {R0,R1}
   \   000009B4   2C21               MOVS     R1,#+44
   \   000009B6   3800               MOVS     R0,R7
   \   000009B8   03B4               PUSH     {R0,R1}
   \   000009BA   1A23               MOVS     R3,#+26
   \   000009BC   0C22               MOVS     R2,#+12
   \   000009BE   0021               MOVS     R1,#+0
   \   000009C0   06A8               ADD      R0,SP,#+24
   \   000009C2   ........           BL       Label
   \   000009C6   06B0               ADD      SP,SP,#+24
   3107          
   3108                    H_line(10,36,46,1); // (char X, int Y, char lenght, char typ) 
   \   000009C8   0123               MOVS     R3,#+1
   \   000009CA   2E22               MOVS     R2,#+46
   \   000009CC   2421               MOVS     R1,#+36
   \   000009CE   0A20               MOVS     R0,#+10
   \   000009D0   ........           BL       H_line
   3109                    H_line(10,24,46,1); // (char X, int Y, char lenght, char typ) 
   \   000009D4   0123               MOVS     R3,#+1
   \   000009D6   2E22               MOVS     R2,#+46
   \   000009D8   1821               MOVS     R1,#+24
   \   000009DA   0A20               MOVS     R0,#+10
   \   000009DC   ........           BL       H_line
   3110                    V_line(10,25,11,1); // (char X, int Y, char lenght, char typ) 
   \   000009E0   0123               MOVS     R3,#+1
   \   000009E2   0B22               MOVS     R2,#+11
   \   000009E4   1921               MOVS     R1,#+25
   \   000009E6   0A20               MOVS     R0,#+10
   \   000009E8   ........           BL       V_line
   3111                    V_line(55,25,11,1); // (char X, int Y, char lenght, char typ) 
   \   000009EC   0123               MOVS     R3,#+1
   \   000009EE   0B22               MOVS     R2,#+11
   \   000009F0   1921               MOVS     R1,#+25
   \   000009F2   3720               MOVS     R0,#+55
   \   000009F4   ........           BL       V_line
   3112                    
   3113                    
   3114                    
   3115                    txt[1]=0;
   \   000009F8   6F46               MOV      R7,SP
   \   000009FA   0020               MOVS     R0,#+0
   \   000009FC   7870               STRB     R0,[R7, #+1]
   3116                    txt[0]=30;
   \   000009FE   1E20               MOVS     R0,#+30
   \   00000A00   3870               STRB     R0,[R7, #+0]
   3117                    Button(txt,33,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000A02   82B0               SUB      SP,SP,#+8
   \   00000A04   1320               MOVS     R0,#+19
   \   00000A06   0090               STR      R0,[SP, #+0]
   \   00000A08   0300               MOVS     R3,R0
   \   00000A0A   0322               MOVS     R2,#+3
   \   00000A0C   2121               MOVS     R1,#+33
   \   00000A0E   02A8               ADD      R0,SP,#+8
   \   00000A10   ........           BL       Button
   \   00000A14   02B0               ADD      SP,SP,#+8
   3118                    txt[0]=31;
   \   00000A16   1F20               MOVS     R0,#+31
   \   00000A18   3870               STRB     R0,[R7, #+0]
   3119                    Button(txt,12,3,19,19); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000A1A   82B0               SUB      SP,SP,#+8
   \   00000A1C   1320               MOVS     R0,#+19
   \   00000A1E   0090               STR      R0,[SP, #+0]
   \   00000A20   0300               MOVS     R3,R0
   \   00000A22   0322               MOVS     R2,#+3
   \   00000A24   0C21               MOVS     R1,#+12
   \   00000A26   02A8               ADD      R0,SP,#+8
   \   00000A28   ........           BL       Button
   \   00000A2C   02B0               ADD      SP,SP,#+8
   3120                 
   3121                  }
   3122                  
   3123                  
   3124                  
   3125                  if (Prc.Type==ProcClock)
   \                     ??Procedure_Paint_58:
   \   00000A2E   3078               LDRB     R0,[R6, #+0]
   \   00000A30   2E28               CMP      R0,#+46
   \   00000A32   00D0               BEQ      .+4
   \   00000A34   86E0               B        ??Procedure_Paint_60
   3126                  {
   3127          
   3128                 
   3129                 Label(   Speech[g_leng].Typ_,0,4,33,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A36   82B0               SUB      SP,SP,#+8
   \   00000A38   0020               MOVS     R0,#+0
   \   00000A3A   0090               STR      R0,[SP, #+0]
   \   00000A3C   7F21               MOVS     R1,#+127
   \   00000A3E   0120               MOVS     R0,#+1
   \   00000A40   03B4               PUSH     {R0,R1}
   \   00000A42   2121               MOVS     R1,#+33
   \   00000A44   0A20               MOVS     R0,#+10
   \   00000A46   03B4               PUSH     {R0,R1}
   \   00000A48   0B00               MOVS     R3,R1
   \   00000A4A   0422               MOVS     R2,#+4
   \   00000A4C   0021               MOVS     R1,#+0
   \   00000A4E   874F               LDR      R7,??Procedure_Paint_59+0x8  ;; 0x5cd
   \   00000A50   BC46               MOV      R12,R7
   \   00000A52   2F68               LDR      R7,[R5, #+0]
   \   00000A54   6743               MULS     R7,R4,R7
   \   00000A56   8448               LDR      R0,??Procedure_Paint_59+0x4  ;; Speech
   \   00000A58   C019               ADDS     R0,R0,R7
   \   00000A5A   6746               MOV      R7,R12
   \   00000A5C   C019               ADDS     R0,R0,R7
   \   00000A5E   ........           BL       Label
   \   00000A62   06B0               ADD      SP,SP,#+24
   3130                       
   3131                 Label(   Speech[g_leng].Miesiac+(Prc.Tag.ClkPrcType  *15),0,4,24,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A64   82B0               SUB      SP,SP,#+8
   \   00000A66   0020               MOVS     R0,#+0
   \   00000A68   0090               STR      R0,[SP, #+0]
   \   00000A6A   7F21               MOVS     R1,#+127
   \   00000A6C   0120               MOVS     R0,#+1
   \   00000A6E   03B4               PUSH     {R0,R1}
   \   00000A70   2121               MOVS     R1,#+33
   \   00000A72   0A20               MOVS     R0,#+10
   \   00000A74   03B4               PUSH     {R0,R1}
   \   00000A76   1823               MOVS     R3,#+24
   \   00000A78   0422               MOVS     R2,#+4
   \   00000A7A   0021               MOVS     R1,#+0
   \   00000A7C   02B5               PUSH     {R1,LR}
   \   00000A7E   4B3F               SUBS     R7,R7,#+75
   \   00000A80   317A               LDRB     R1,[R6, #+8]
   \   00000A82   0F20               MOVS     R0,#+15
   \   00000A84   4143               MULS     R1,R0,R1
   \   00000A86   8C46               MOV      R12,R1
   \   00000A88   2968               LDR      R1,[R5, #+0]
   \   00000A8A   6143               MULS     R1,R4,R1
   \   00000A8C   7648               LDR      R0,??Procedure_Paint_59+0x4  ;; Speech
   \   00000A8E   4018               ADDS     R0,R0,R1
   \   00000A90   6146               MOV      R1,R12
   \   00000A92   4018               ADDS     R0,R0,R1
   \   00000A94   C019               ADDS     R0,R0,R7
   \   00000A96   0099               LDR      R1,[SP, #0]
   \   00000A98   02B0               ADD      SP,SP,#+8
   \   00000A9A   ........           BL       Label
   \   00000A9E   06B0               ADD      SP,SP,#+24
   3132                              
   3133          
   3134                 
   3135                 CharToStr(Prc.Tag.ClkPrcVal, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000AA0   0222               MOVS     R2,#+2
   \   00000AA2   6946               MOV      R1,SP
   \   00000AA4   307A               LDRB     R0,[R6, #+8]
   \   00000AA6   ........           BL       CharToStr
   3136                 Label(txt,2,24,7,2,14,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000AAA   82B0               SUB      SP,SP,#+8
   \   00000AAC   0020               MOVS     R0,#+0
   \   00000AAE   0090               STR      R0,[SP, #+0]
   \   00000AB0   7F21               MOVS     R1,#+127
   \   00000AB2   0120               MOVS     R0,#+1
   \   00000AB4   03B4               PUSH     {R0,R1}
   \   00000AB6   0E21               MOVS     R1,#+14
   \   00000AB8   0220               MOVS     R0,#+2
   \   00000ABA   03B4               PUSH     {R0,R1}
   \   00000ABC   0723               MOVS     R3,#+7
   \   00000ABE   1822               MOVS     R2,#+24
   \   00000AC0   0100               MOVS     R1,R0
   \   00000AC2   06A8               ADD      R0,SP,#+24
   \   00000AC4   ........           BL       Label
   \   00000AC8   06B0               ADD      SP,SP,#+24
   3137                  
   3138                 
   3139                 //przycisk zmiany typu procedury zegara (godzina, minuta,...)
   3140                 Button("> ",43,24,18,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000ACA   82B0               SUB      SP,SP,#+8
   \   00000ACC   1320               MOVS     R0,#+19
   \   00000ACE   0090               STR      R0,[SP, #+0]
   \   00000AD0   1223               MOVS     R3,#+18
   \   00000AD2   1822               MOVS     R2,#+24
   \   00000AD4   2B21               MOVS     R1,#+43
   \   00000AD6   66A0               ADR      R0,??Procedure_Paint_59+0xC  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000AD8   ........           BL       Button
   \   00000ADC   02B0               ADD      SP,SP,#+8
   3141                 
   3142                 H_line(23,17,17,1); // (char X, int Y, char lenght, char typ) 
   \   00000ADE   0123               MOVS     R3,#+1
   \   00000AE0   1122               MOVS     R2,#+17
   \   00000AE2   1100               MOVS     R1,R2
   \   00000AE4   1720               MOVS     R0,#+23
   \   00000AE6   ........           BL       H_line
   3143                 H_line(23,6,17,1); // (char X, int Y, char lenght, char typ) 
   \   00000AEA   0123               MOVS     R3,#+1
   \   00000AEC   1122               MOVS     R2,#+17
   \   00000AEE   0621               MOVS     R1,#+6
   \   00000AF0   1720               MOVS     R0,#+23
   \   00000AF2   ........           BL       H_line
   3144                 V_line(23,6,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000AF6   0123               MOVS     R3,#+1
   \   00000AF8   0B22               MOVS     R2,#+11
   \   00000AFA   0621               MOVS     R1,#+6
   \   00000AFC   1720               MOVS     R0,#+23
   \   00000AFE   ........           BL       V_line
   3145                 V_line(39,6,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000B02   0123               MOVS     R3,#+1
   \   00000B04   0B22               MOVS     R2,#+11
   \   00000B06   0621               MOVS     R1,#+6
   \   00000B08   2720               MOVS     R0,#+39
   \   00000B0A   ........           BL       V_line
   3146          
   3147                 
   3148                
   3149                 
   3150          
   3151                 txt[1]=0;
   \   00000B0E   6F46               MOV      R7,SP
   \   00000B10   0020               MOVS     R0,#+0
   \   00000B12   7870               STRB     R0,[R7, #+1]
   3152                 txt[0]=30;
   \   00000B14   1E20               MOVS     R0,#+30
   \   00000B16   3870               STRB     R0,[R7, #+0]
   3153                 Button(txt,43,3,18,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000B18   82B0               SUB      SP,SP,#+8
   \   00000B1A   1320               MOVS     R0,#+19
   \   00000B1C   0090               STR      R0,[SP, #+0]
   \   00000B1E   1223               MOVS     R3,#+18
   \   00000B20   0322               MOVS     R2,#+3
   \   00000B22   2B21               MOVS     R1,#+43
   \   00000B24   02A8               ADD      R0,SP,#+8
   \   00000B26   ........           BL       Button
   \   00000B2A   02B0               ADD      SP,SP,#+8
   3154                 txt[0]=31;
   \   00000B2C   1F20               MOVS     R0,#+31
   \   00000B2E   3870               STRB     R0,[R7, #+0]
   3155                 Button(txt,2,3,18,19); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000B30   82B0               SUB      SP,SP,#+8
   \   00000B32   1320               MOVS     R0,#+19
   \   00000B34   0090               STR      R0,[SP, #+0]
   \   00000B36   1223               MOVS     R3,#+18
   \   00000B38   0322               MOVS     R2,#+3
   \   00000B3A   0221               MOVS     R1,#+2
   \   00000B3C   02A8               ADD      R0,SP,#+8
   \   00000B3E   ........           BL       Button
   \   00000B42   02B0               ADD      SP,SP,#+8
   3156                 
   3157                        
   3158                      }   
   3159                /*   
   3160                 if (Prc.Type==ProcStartTimer) 
   3161                 {
   3162                   Button("> ",2,46,18,11); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   3163                 }
   3164                */   
   3165                 
   3166                 if (Prc.Type==ProcDay) 
   \                     ??Procedure_Paint_60:
   \   00000B44   3078               LDRB     R0,[R6, #+0]
   \   00000B46   2F28               CMP      R0,#+47
   \   00000B48   35D1               BNE      ??Procedure_Paint_61
   3167                 {
   3168                          Button("> ",43,25,18,18);
   \   00000B4A   82B0               SUB      SP,SP,#+8
   \   00000B4C   1220               MOVS     R0,#+18
   \   00000B4E   0090               STR      R0,[SP, #+0]
   \   00000B50   0300               MOVS     R3,R0
   \   00000B52   1922               MOVS     R2,#+25
   \   00000B54   2B21               MOVS     R1,#+43
   \   00000B56   46A0               ADR      R0,??Procedure_Paint_59+0xC  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000B58   ........           BL       Button
   \   00000B5C   02B0               ADD      SP,SP,#+8
   3169                          Button("< ",2,25,18,18);
   \   00000B5E   82B0               SUB      SP,SP,#+8
   \   00000B60   1220               MOVS     R0,#+18
   \   00000B62   0090               STR      R0,[SP, #+0]
   \   00000B64   0300               MOVS     R3,R0
   \   00000B66   1922               MOVS     R2,#+25
   \   00000B68   0221               MOVS     R1,#+2
   \   00000B6A   42A0               ADR      R0,??Procedure_Paint_59+0x10  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000B6C   ........           BL       Button
   \   00000B70   02B0               ADD      SP,SP,#+8
   3170                          
   3171                          if(Prc.Tag.DayOfWeek==0) Prc.Tag.DayOfWeek=1;
   \   00000B72   307A               LDRB     R0,[R6, #+8]
   \   00000B74   0028               CMP      R0,#+0
   \   00000B76   01D1               BNE      ??Procedure_Paint_62
   \   00000B78   0120               MOVS     R0,#+1
   \   00000B7A   3072               STRB     R0,[R6, #+8]
   3172                          Label((char*)DeyOfWeekStr[g_leng][Prc.Tag.DayOfWeek],2,20,29,2,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \                     ??Procedure_Paint_62:
   \   00000B7C   82B0               SUB      SP,SP,#+8
   \   00000B7E   0020               MOVS     R0,#+0
   \   00000B80   0090               STR      R0,[SP, #+0]
   \   00000B82   6921               MOVS     R1,#+105
   \   00000B84   03B4               PUSH     {R0,R1}
   \   00000B86   1421               MOVS     R1,#+20
   \   00000B88   0220               MOVS     R0,#+2
   \   00000B8A   03B4               PUSH     {R0,R1}
   \   00000B8C   1D23               MOVS     R3,#+29
   \   00000B8E   0A00               MOVS     R2,R1
   \   00000B90   0100               MOVS     R1,R0
   \   00000B92   02B5               PUSH     {R1,LR}
   \   00000B94   9227               MOVS     R7,#+146
   \   00000B96   FF00               LSLS     R7,R7,#+3        ;; #+1168
   \   00000B98   307A               LDRB     R0,[R6, #+8]
   \   00000B9A   4100               LSLS     R1,R0,#+1
   \   00000B9C   8C46               MOV      R12,R1
   \   00000B9E   2868               LDR      R0,[R5, #+0]
   \   00000BA0   0101               LSLS     R1,R0,#+4
   \   00000BA2   3548               LDR      R0,??Procedure_Paint_59+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000BA4   4018               ADDS     R0,R0,R1
   \   00000BA6   6146               MOV      R1,R12
   \   00000BA8   4018               ADDS     R0,R0,R1
   \   00000BAA   C019               ADDS     R0,R0,R7
   \   00000BAC   0099               LDR      R1,[SP, #0]
   \   00000BAE   02B0               ADD      SP,SP,#+8
   \   00000BB0   ........           BL       Label
   \   00000BB4   06B0               ADD      SP,SP,#+24
   3173                        
   3174                 }
   3175                 
   3176                 
   3177                 if (Prc.Type==ProcConstAnal) 
   \                     ??Procedure_Paint_61:
   \   00000BB6   3078               LDRB     R0,[R6, #+0]
   \   00000BB8   3728               CMP      R0,#+55
   \   00000BBA   0ED1               BNE      ??Procedure_Paint_63
   3178                 {
   3179                          Button(Speech[g_leng].Zmiana,10,16,40,18);
   \   00000BBC   82B0               SUB      SP,SP,#+8
   \   00000BBE   1220               MOVS     R0,#+18
   \   00000BC0   0090               STR      R0,[SP, #+0]
   \   00000BC2   2823               MOVS     R3,#+40
   \   00000BC4   1022               MOVS     R2,#+16
   \   00000BC6   0A21               MOVS     R1,#+10
   \   00000BC8   2C48               LDR      R0,??Procedure_Paint_59+0x18  ;; 0x50a
   \   00000BCA   2D68               LDR      R5,[R5, #+0]
   \   00000BCC   6543               MULS     R5,R4,R5
   \   00000BCE   264C               LDR      R4,??Procedure_Paint_59+0x4  ;; Speech
   \   00000BD0   6419               ADDS     R4,R4,R5
   \   00000BD2   2018               ADDS     R0,R4,R0
   \   00000BD4   ........           BL       Button
   \   00000BD8   02B0               ADD      SP,SP,#+8
   3180                 
   3181                 }
   3182                 
   3183                 if ((Prc.Type==ProcGetReg) || (Prc.Type==ProcSetReg) )
   \                     ??Procedure_Paint_63:
   \   00000BDA   3078               LDRB     R0,[R6, #+0]
   \   00000BDC   3828               CMP      R0,#+56
   \   00000BDE   01D0               BEQ      ??Procedure_Paint_64
   \   00000BE0   3928               CMP      R0,#+57
   \   00000BE2   3BD1               BNE      ??Procedure_Paint_65
   3184                 {
   3185                 
   3186                     Button("> ",43,5,18,18);
   \                     ??Procedure_Paint_64:
   \   00000BE4   82B0               SUB      SP,SP,#+8
   \   00000BE6   1220               MOVS     R0,#+18
   \   00000BE8   0090               STR      R0,[SP, #+0]
   \   00000BEA   0300               MOVS     R3,R0
   \   00000BEC   0522               MOVS     R2,#+5
   \   00000BEE   2B21               MOVS     R1,#+43
   \   00000BF0   1FA0               ADR      R0,??Procedure_Paint_59+0xC  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000BF2   ........           BL       Button
   \   00000BF6   02B0               ADD      SP,SP,#+8
   3187                     Button("< ",2, 5,18,18);
   \   00000BF8   82B0               SUB      SP,SP,#+8
   \   00000BFA   1220               MOVS     R0,#+18
   \   00000BFC   0090               STR      R0,[SP, #+0]
   \   00000BFE   0300               MOVS     R3,R0
   \   00000C00   0522               MOVS     R2,#+5
   \   00000C02   0221               MOVS     R1,#+2
   \   00000C04   1BA0               ADR      R0,??Procedure_Paint_59+0x10  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000C06   ........           BL       Button
   \   00000C0A   02B0               ADD      SP,SP,#+8
   3188                     Label("Reg:",0,22,15,4,14,1,127,0);
   \   00000C0C   82B0               SUB      SP,SP,#+8
   \   00000C0E   0020               MOVS     R0,#+0
   \   00000C10   0090               STR      R0,[SP, #+0]
   \   00000C12   7F21               MOVS     R1,#+127
   \   00000C14   0120               MOVS     R0,#+1
   \   00000C16   03B4               PUSH     {R0,R1}
   \   00000C18   0E21               MOVS     R1,#+14
   \   00000C1A   0420               MOVS     R0,#+4
   \   00000C1C   03B4               PUSH     {R0,R1}
   \   00000C1E   0F23               MOVS     R3,#+15
   \   00000C20   1622               MOVS     R2,#+22
   \   00000C22   0021               MOVS     R1,#+0
   \   00000C24   1648               LDR      R0,??Procedure_Paint_59+0x1C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 92
   \   00000C26   ........           BL       Label
   \   00000C2A   06B0               ADD      SP,SP,#+24
   3189                     txt[1]=0;
   \   00000C2C   6846               MOV      R0,SP
   \   00000C2E   0021               MOVS     R1,#+0
   \   00000C30   4170               STRB     R1,[R0, #+1]
   3190                     char il=CharToStr(Prc.Tag.RegNr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000C32   0222               MOVS     R2,#+2
   \   00000C34   6946               MOV      R1,SP
   \   00000C36   307A               LDRB     R0,[R6, #+8]
   \   00000C38   ........           BL       CharToStr
   3191                     Label(txt,2,22,5,4,18,1,127,0);
   \   00000C3C   82B0               SUB      SP,SP,#+8
   \   00000C3E   0020               MOVS     R0,#+0
   \   00000C40   0090               STR      R0,[SP, #+0]
   \   00000C42   7F21               MOVS     R1,#+127
   \   00000C44   0120               MOVS     R0,#+1
   \   00000C46   03B4               PUSH     {R0,R1}
   \   00000C48   1221               MOVS     R1,#+18
   \   00000C4A   0420               MOVS     R0,#+4
   \   00000C4C   03B4               PUSH     {R0,R1}
   \   00000C4E   0523               MOVS     R3,#+5
   \   00000C50   1622               MOVS     R2,#+22
   \   00000C52   0221               MOVS     R1,#+2
   \   00000C54   06A8               ADD      R0,SP,#+24
   \   00000C56   ........           BL       Label
   \   00000C5A   06B0               ADD      SP,SP,#+24
   3192                 }
   3193                 
   3194                }
   \                     ??Procedure_Paint_65:
   \   00000C5C   09B0               ADD      SP,SP,#+36
   \   00000C5E   F0BC               POP      {R4-R7}
   \   00000C60   01BC               POP      {R0}
   \   00000C62   0047               BX       R0               ;; return
   \                     ??Procedure_Paint_59:
   \   00000C64   ED030000           DC32     0x3ed
   \   00000C68   ........           DC32     Speech
   \   00000C6C   CD050000           DC32     0x5cd
   \   00000C70   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000C74   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000C78   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000C7C   0A050000           DC32     0x50a
   \   00000C80   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 92
   3195                
   3196          char ProcGlobType_down;
   3197          
   3198          

   \                                 In section Debug.txt, align 4, keep-with-next
   3199          void Procedure_Event(void)
   3200                {
   \                     Procedure_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0026               MOVS     R6,#+0
   3201                 char MenuPaintExecut=0;
   3202                 char ProcGlobType_up;
   3203                 char ind;
   3204                 char txt[2];
   3205                 char exit;
   3206                 
   3207                 
   3208                        exit=0;
   \   00000004   3400               MOVS     R4,R6
   3209                 //zdarzenie typu down "X"
   3210                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000006   C348               LDR      R0,??Procedure_Event_3  ;; X_down
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   405E               LDRSH    R0,[R0, R1]
   \   0000000C   2F28               CMP      R0,#+47
   \   0000000E   2FDB               BLT      ??Procedure_Event_4
   \   00000010   3F28               CMP      R0,#+63
   \   00000012   2DDA               BGE      ??Procedure_Event_4
   \   00000014   C048               LDR      R0,??Procedure_Event_3+0x4  ;; Y_down
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   7128               CMP      R0,#+113
   \   0000001A   29DB               BLT      ??Procedure_Event_4
   \   0000001C   7F28               CMP      R0,#+127
   \   0000001E   27DA               BGE      ??Procedure_Event_4
   3211                  {
   3212                    //MenuPaint();
   3213                    H_line(49,114,10,0);
   \   00000020   0B00               MOVS     R3,R1
   \   00000022   0A22               MOVS     R2,#+10
   \   00000024   7221               MOVS     R1,#+114
   \   00000026   3120               MOVS     R0,#+49
   \   00000028   ........           BL       H_line
   3214                    H_line(49,123,10,0); 
   \   0000002C   2300               MOVS     R3,R4
   \   0000002E   0A22               MOVS     R2,#+10
   \   00000030   7B21               MOVS     R1,#+123
   \   00000032   3120               MOVS     R0,#+49
   \   00000034   ........           BL       H_line
   3215                    V_line(49,114,10,0); 
   \   00000038   2300               MOVS     R3,R4
   \   0000003A   0A22               MOVS     R2,#+10
   \   0000003C   7221               MOVS     R1,#+114
   \   0000003E   3120               MOVS     R0,#+49
   \   00000040   ........           BL       V_line
   3216                    V_line(58,114,10,0); 
   \   00000044   2300               MOVS     R3,R4
   \   00000046   0A22               MOVS     R2,#+10
   \   00000048   7221               MOVS     R1,#+114
   \   0000004A   3A20               MOVS     R0,#+58
   \   0000004C   ........           BL       V_line
   3217                    exit=1;
   \   00000050   0124               MOVS     R4,#+1
   3218                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000052   B248               LDR      R0,??Procedure_Event_3+0x8  ;; 0x13d7e9
   \   00000054   0078               LDRB     R0,[R0, #+0]
   \   00000056   0028               CMP      R0,#+0
   \   00000058   0AD1               BNE      ??Procedure_Event_4
   \   0000005A   B148               LDR      R0,??Procedure_Event_3+0xC  ;; 0xfffff430
   \   0000005C   8021               MOVS     R1,#+128
   \   0000005E   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000060   0160               STR      R1,[R0, #+0]
   \   00000062   B04A               LDR      R2,??Procedure_Event_3+0x10  ;; ButtonBipCounter
   \   00000064   B048               LDR      R0,??Procedure_Event_3+0x14  ;; g_counter
   \   00000066   03C8               LDM      R0!,{R0,R1}
   \   00000068   0023               MOVS     R3,#+0
   \   0000006A   0830               ADDS     R0,R0,#+8
   \   0000006C   5941               ADCS     R1,R1,R3
   \   0000006E   03C2               STM      R2!,{R0,R1}
   \                     ??Procedure_Event_4:
   \   00000070   AE48               LDR      R0,??Procedure_Event_3+0x18  ;; X_up
   \   00000072   0021               MOVS     R1,#+0
   \   00000074   405E               LDRSH    R0,[R0, R1]
   \   00000076   2F28               CMP      R0,#+47
   \   00000078   26DB               BLT      ??Procedure_Event_5
   \   0000007A   3F28               CMP      R0,#+63
   \   0000007C   24DA               BGE      ??Procedure_Event_5
   \   0000007E   AC48               LDR      R0,??Procedure_Event_3+0x1C  ;; Y_up
   \   00000080   405E               LDRSH    R0,[R0, R1]
   \   00000082   7128               CMP      R0,#+113
   \   00000084   20DB               BLT      ??Procedure_Event_5
   \   00000086   7F28               CMP      R0,#+127
   \   00000088   1EDA               BGE      ??Procedure_Event_5
   3219                  }
   3220            
   3221              
   3222                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   3223                  {
   3224                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000008A   A448               LDR      R0,??Procedure_Event_3+0x8  ;; 0x13d7e9
   \   0000008C   0078               LDRB     R0,[R0, #+0]
   \   0000008E   0028               CMP      R0,#+0
   \   00000090   0AD1               BNE      ??Procedure_Event_6
   \   00000092   A348               LDR      R0,??Procedure_Event_3+0xC  ;; 0xfffff430
   \   00000094   8021               MOVS     R1,#+128
   \   00000096   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000098   0160               STR      R1,[R0, #+0]
   \   0000009A   A24A               LDR      R2,??Procedure_Event_3+0x10  ;; ButtonBipCounter
   \   0000009C   A248               LDR      R0,??Procedure_Event_3+0x14  ;; g_counter
   \   0000009E   03C8               LDM      R0!,{R0,R1}
   \   000000A0   0023               MOVS     R3,#+0
   \   000000A2   0830               ADDS     R0,R0,#+8
   \   000000A4   5941               ADCS     R1,R1,R3
   \   000000A6   03C2               STM      R2!,{R0,R1}
   3225                    exit=1;
   \                     ??Procedure_Event_6:
   \   000000A8   0127               MOVS     R7,#+1
   \   000000AA   3C00               MOVS     R4,R7
   \   000000AC   A148               LDR      R0,??Procedure_Event_3+0x20  ;; TextToChangeLength + 76
   \   000000AE   3100               MOVS     R1,R6
   \   000000B0   0160               STR      R1,[R0, #+0]
   3226                    Rej_poz=0;
   3227          
   3228                    CountLines(&gProg);
   \   000000B2   A148               LDR      R0,??Procedure_Event_3+0x24  ;; gProg
   \   000000B4   ........           BL       CountLines
   3229            
   3230                    
   3231                      MenuLevel=(MenuLevel/10);
   \   000000B8   A048               LDR      R0,??Procedure_Event_3+0x28  ;; TextToChangeLength + 72
   \   000000BA   0068               LDR      R0,[R0, #+0]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   ........           BL       __aeabi_idivmod
   \   000000C2   9E49               LDR      R1,??Procedure_Event_3+0x28  ;; TextToChangeLength + 72
   \   000000C4   0860               STR      R0,[R1, #+0]
   3232                      MenuPaintExecut=1;
   \   000000C6   3E00               MOVS     R6,R7
   3233          
   3234                  }  
   3235                 
   3236          if (exit==0)       
   \                     ??Procedure_Event_5:
   \   000000C8   002C               CMP      R4,#+0
   \   000000CA   01D0               BEQ      .+6
   \   000000CC   00F03DFD           BL       ??Procedure_Event_7
   3237          {
   3238                  
   3239                  ProgramChange=1;  
   \   000000D0   0127               MOVS     R7,#+1
   \   000000D2   9B48               LDR      R0,??Procedure_Event_3+0x2C  ;; TextToChangeLength + 8
   \   000000D4   3900               MOVS     R1,R7
   \   000000D6   0170               STRB     R1,[R0, #+0]
   3240                  ProcGlobType_up=0;
   \   000000D8   0020               MOVS     R0,#+0
   \   000000DA   0190               STR      R0,[SP, #+4]
   3241                  ind=0;
   \   000000DC   0222               MOVS     R2,#+2
   \   000000DE   49E0               B        ??Procedure_Event_8
   3242                  for (char j=2; j>=1; j--)
   3243                   for(char i=0; i<3; i++)
   3244                   {
   3245                      ind++;
   \                     ??Procedure_Event_9:
   \   000000E0   641C               ADDS     R4,R4,#+1
   \   000000E2   2406               LSLS     R4,R4,#+24
   \   000000E4   240E               LSRS     R4,R4,#+24
   3246                      if ((X_up>2+i*19) && (X_up<2+17+i*19) && (Y_up>51+j*19) && (Y_up<50+17+j*19))    //"X"
   \   000000E6   1321               MOVS     R1,#+19
   \   000000E8   4843               MULS     R0,R1,R0
   \   000000EA   9049               LDR      R1,??Procedure_Event_3+0x18  ;; X_up
   \   000000EC   0025               MOVS     R5,#+0
   \   000000EE   495F               LDRSH    R1,[R1, R5]
   \   000000F0   0500               MOVS     R5,R0
   \   000000F2   AD1C               ADDS     R5,R5,#+2
   \   000000F4   8D42               CMP      R5,R1
   \   000000F6   34DA               BGE      ??Procedure_Event_10
   \   000000F8   1330               ADDS     R0,R0,#+19
   \   000000FA   8142               CMP      R1,R0
   \   000000FC   31DA               BGE      ??Procedure_Event_10
   \   000000FE   1100               MOVS     R1,R2
   \   00000100   1320               MOVS     R0,#+19
   \   00000102   4143               MULS     R1,R0,R1
   \   00000104   8A48               LDR      R0,??Procedure_Event_3+0x1C  ;; Y_up
   \   00000106   0025               MOVS     R5,#+0
   \   00000108   405F               LDRSH    R0,[R0, R5]
   \   0000010A   0D00               MOVS     R5,R1
   \   0000010C   3335               ADDS     R5,R5,#+51
   \   0000010E   8542               CMP      R5,R0
   \   00000110   27DA               BGE      ??Procedure_Event_10
   \   00000112   4331               ADDS     R1,R1,#+67
   \   00000114   8842               CMP      R0,R1
   \   00000116   24DA               BGE      ??Procedure_Event_10
   3247                      {
   3248                        ProcGlobType_up=ind;
   \   00000118   0194               STR      R4,[SP, #+4]
   3249                        gProg.Line[ChoseRow].Proc[ChoseCol].Tag.Tag=0;
   \   0000011A   8748               LDR      R0,??Procedure_Event_3+0x24  ;; gProg
   \   0000011C   8949               LDR      R1,??Procedure_Event_3+0x30  ;; TextToChangeLength + 20
   \   0000011E   0978               LDRB     R1,[R1, #+0]
   \   00000120   1825               MOVS     R5,#+24
   \   00000122   6943               MULS     R1,R5,R1
   \   00000124   8C46               MOV      R12,R1
   \   00000126   8849               LDR      R1,??Procedure_Event_3+0x34  ;; TextToChangeLength + 19
   \   00000128   0D78               LDRB     R5,[R1, #+0]
   \   0000012A   F021               MOVS     R1,#+240
   \   0000012C   4D43               MULS     R5,R1,R5
   \   0000012E   4019               ADDS     R0,R0,R5
   \   00000130   6146               MOV      R1,R12
   \   00000132   4518               ADDS     R5,R0,R1
   \   00000134   2035               ADDS     R5,R5,#+32
   \   00000136   0020               MOVS     R0,#+0
   \   00000138   0100               MOVS     R1,R0
   \   0000013A   03C5               STM      R5!,{R0,R1}
   \   0000013C   083D               SUBS     R5,R5,#+8
   3250                        gProg.Line[ChoseRow].Proc[ChoseCol].LastIn=0;
   \   0000013E   2872               STRB     R0,[R5, #+8]
   3251                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000140   7648               LDR      R0,??Procedure_Event_3+0x8  ;; 0x13d7e9
   \   00000142   0078               LDRB     R0,[R0, #+0]
   \   00000144   0028               CMP      R0,#+0
   \   00000146   0CD1               BNE      ??Procedure_Event_10
   \   00000148   7548               LDR      R0,??Procedure_Event_3+0xC  ;; 0xfffff430
   \   0000014A   8021               MOVS     R1,#+128
   \   0000014C   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000014E   0160               STR      R1,[R0, #+0]
   \   00000150   744D               LDR      R5,??Procedure_Event_3+0x10  ;; ButtonBipCounter
   \   00000152   AC46               MOV      R12,R5
   \   00000154   7448               LDR      R0,??Procedure_Event_3+0x14  ;; g_counter
   \   00000156   03C8               LDM      R0!,{R0,R1}
   \   00000158   0025               MOVS     R5,#+0
   \   0000015A   0830               ADDS     R0,R0,#+8
   \   0000015C   6941               ADCS     R1,R1,R5
   \   0000015E   6546               MOV      R5,R12
   \   00000160   03C5               STM      R5!,{R0,R1}
   3252                        
   3253                      }
   3254                      
   3255                   }
   \                     ??Procedure_Event_10:
   \   00000162   5B1C               ADDS     R3,R3,#+1
   \   00000164   1B06               LSLS     R3,R3,#+24
   \   00000166   1B0E               LSRS     R3,R3,#+24
   \                     ??Procedure_Event_11:
   \   00000168   1800               MOVS     R0,R3
   \   0000016A   0328               CMP      R0,#+3
   \   0000016C   B8D3               BCC      ??Procedure_Event_9
   \   0000016E   521E               SUBS     R2,R2,#+1
   \   00000170   1206               LSLS     R2,R2,#+24
   \   00000172   120E               LSRS     R2,R2,#+24
   \                     ??Procedure_Event_8:
   \   00000174   1000               MOVS     R0,R2
   \   00000176   01D0               BEQ      ??Procedure_Event_12
   \   00000178   0023               MOVS     R3,#+0
   \   0000017A   F5E7               B        ??Procedure_Event_11
   3256          
   3257              ProcGlobType_down=ProcGlobType_up;
   \                     ??Procedure_Event_12:
   \   0000017C   7348               LDR      R0,??Procedure_Event_3+0x38  ;; TextToChangeLength + 21
   \   0000017E   0199               LDR      R1,[SP, #+4]
   \   00000180   0170               STRB     R1,[R0, #+0]
   3258                
   3259              _Procedure *TypePrc=&(gProg.Line[ChoseRow].Proc[ChoseCol]);
   \   00000182   6D48               LDR      R0,??Procedure_Event_3+0x24  ;; gProg
   \   00000184   6F49               LDR      R1,??Procedure_Event_3+0x30  ;; TextToChangeLength + 20
   \   00000186   0978               LDRB     R1,[R1, #+0]
   \   00000188   1822               MOVS     R2,#+24
   \   0000018A   5143               MULS     R1,R2,R1
   \   0000018C   6E4A               LDR      R2,??Procedure_Event_3+0x34  ;; TextToChangeLength + 19
   \   0000018E   1278               LDRB     R2,[R2, #+0]
   \   00000190   F023               MOVS     R3,#+240
   \   00000192   5A43               MULS     R2,R3,R2
   \   00000194   8018               ADDS     R0,R0,R2
   \   00000196   4018               ADDS     R0,R0,R1
   \   00000198   1830               ADDS     R0,R0,#+24
   \   0000019A   0400               MOVS     R4,R0
   3260                   
   3261                  
   3262          
   3263                      
   3264                     
   3265                 if ((ProcGlobType_up>0) && (ProcGlobType_down==ProcGlobType_up) && (exit==0))
   \   0000019C   0199               LDR      R1,[SP, #+4]
   \   0000019E   0906               LSLS     R1,R1,#+24
   \   000001A0   21D0               BEQ      ??Procedure_Event_13
   3266                 {
   3267                 ProcGlobType_down=0;
   \   000001A2   6A49               LDR      R1,??Procedure_Event_3+0x38  ;; TextToChangeLength + 21
   \   000001A4   0022               MOVS     R2,#+0
   \   000001A6   0A70               STRB     R2,[R1, #+0]
   3268                 switch (ProcGlobType_up)
   \   000001A8   0199               LDR      R1,[SP, #+4]
   \   000001AA   0906               LSLS     R1,R1,#+24
   \   000001AC   090E               LSRS     R1,R1,#+24
   \   000001AE   491E               SUBS     R1,R1,#+1
   \   000001B0   0529               CMP      R1,#+5
   \   000001B2   17D8               BHI      ??Procedure_Event_14
   \   000001B4   01A2               ADR      R2,??Procedure_Event_0
   \   000001B6   525C               LDRB     R2,[R2, R1]
   \   000001B8   9744               ADD      PC,PC,R2
   \   000001BA   C046               Nop      
   \                     ??Procedure_Event_0:
   \   000001BC   060C1218           DC8      +6,+12,+18,+24
   \   000001C0   1E24               DC8      +30,+36
   3269                 {
   3270                   case 1:  //Pusty
   3271                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=None;
   \                     ??Procedure_Event_15:
   \   000001C2   0021               MOVS     R1,#+0
   \   000001C4   0170               STRB     R1,[R0, #+0]
   \   000001C6   0DE0               B        ??Procedure_Event_14
   3272                   break;
   3273                   
   3274                   
   3275                   case 2: //Stan
   3276                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcStStart+1);
   \                     ??Procedure_Event_16:
   \   000001C8   1421               MOVS     R1,#+20
   \   000001CA   0170               STRB     R1,[R0, #+0]
   \   000001CC   0AE0               B        ??Procedure_Event_14
   3277                   break;
   3278                   
   3279                   
   3280                   case 3: //ustaw
   3281                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcSetStart+1);
   \                     ??Procedure_Event_17:
   \   000001CE   2021               MOVS     R1,#+32
   \   000001D0   0170               STRB     R1,[R0, #+0]
   \   000001D2   07E0               B        ??Procedure_Event_14
   3282                   break;
   3283                   
   3284                   
   3285                   case 4: //Logika
   3286                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcLogStart+1);
   \                     ??Procedure_Event_18:
   \   000001D4   0221               MOVS     R1,#+2
   \   000001D6   0170               STRB     R1,[R0, #+0]
   \   000001D8   04E0               B        ??Procedure_Event_14
   3287                   break;
   3288                   
   3289                   
   3290                   case 5: //timery, zegary
   3291                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcTimeStart+1);
   \                     ??Procedure_Event_19:
   \   000001DA   2D21               MOVS     R1,#+45
   \   000001DC   0170               STRB     R1,[R0, #+0]
   \   000001DE   01E0               B        ??Procedure_Event_14
   3292                   break;
   3293                   
   3294                   
   3295                   case 6: //timery, zegary
   3296                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcAnalogStart+1);
   \                     ??Procedure_Event_20:
   \   000001E0   3721               MOVS     R1,#+55
   \   000001E2   0170               STRB     R1,[R0, #+0]
   3297                   break;
   3298                 }
   3299                 
   3300                
   3301                   MenuPaintExecut=1; 
   \                     ??Procedure_Event_14:
   \   000001E4   3E00               MOVS     R6,R7
   3302                   
   3303                 }
   3304                   
   3305          
   3306                 
   3307                 //Je¿eli logika
   3308                  if  ((TypePrc->Type>ProcLogStart) && (TypePrc->Type<ProcLogStop))
   \                     ??Procedure_Event_13:
   \   000001E6   2078               LDRB     R0,[R4, #+0]
   \   000001E8   0228               CMP      R0,#+2
   \   000001EA   3AD3               BCC      ??Procedure_Event_21
   \   000001EC   0D28               CMP      R0,#+13
   \   000001EE   38D2               BCS      ??Procedure_Event_21
   3309                      {     
   3310                        txt[0]='>';
   \   000001F0   6D46               MOV      R5,SP
   \   000001F2   3E20               MOVS     R0,#+62
   \   000001F4   2870               STRB     R0,[R5, #+0]
   3311                        txt[1]=0;
   \   000001F6   0020               MOVS     R0,#+0
   \   000001F8   6870               STRB     R0,[R5, #+1]
   3312                        if (Button(txt,43,39,18,18)==1) 
   \   000001FA   82B0               SUB      SP,SP,#+8
   \   000001FC   1220               MOVS     R0,#+18
   \   000001FE   0090               STR      R0,[SP, #+0]
   \   00000200   0300               MOVS     R3,R0
   \   00000202   2722               MOVS     R2,#+39
   \   00000204   2B21               MOVS     R1,#+43
   \   00000206   02A8               ADD      R0,SP,#+8
   \   00000208   ........           BL       Button
   \   0000020C   02B0               ADD      SP,SP,#+8
   \   0000020E   0128               CMP      R0,#+1
   \   00000210   0DD1               BNE      ??Procedure_Event_22
   3313                          if (TypePrc->Type+1<ProcLogStop) {TypePrc->Type++;MenuPaintExecut=1;  } else {TypePrc->Type=(_ProcType)(ProcLogStart+1);MenuPaintExecut=1;  }
   \   00000212   2078               LDRB     R0,[R4, #+0]
   \   00000214   401C               ADDS     R0,R0,#+1
   \   00000216   0004               LSLS     R0,R0,#+16
   \   00000218   000C               LSRS     R0,R0,#+16
   \   0000021A   0D28               CMP      R0,#+13
   \   0000021C   04D2               BCS      ??Procedure_Event_23
   \   0000021E   2078               LDRB     R0,[R4, #+0]
   \   00000220   401C               ADDS     R0,R0,#+1
   \   00000222   2070               STRB     R0,[R4, #+0]
   \   00000224   3E00               MOVS     R6,R7
   \   00000226   02E0               B        ??Procedure_Event_22
   \                     ??Procedure_Event_23:
   \   00000228   0220               MOVS     R0,#+2
   \   0000022A   2070               STRB     R0,[R4, #+0]
   \   0000022C   3E00               MOVS     R6,R7
   3314                        txt[0]='<';
   \                     ??Procedure_Event_22:
   \   0000022E   3C20               MOVS     R0,#+60
   \   00000230   2870               STRB     R0,[R5, #+0]
   3315                        if (Button(txt,2,39,18,18)==1) 
   \   00000232   82B0               SUB      SP,SP,#+8
   \   00000234   1220               MOVS     R0,#+18
   \   00000236   0090               STR      R0,[SP, #+0]
   \   00000238   0300               MOVS     R3,R0
   \   0000023A   2722               MOVS     R2,#+39
   \   0000023C   0221               MOVS     R1,#+2
   \   0000023E   02A8               ADD      R0,SP,#+8
   \   00000240   ........           BL       Button
   \   00000244   02B0               ADD      SP,SP,#+8
   \   00000246   0128               CMP      R0,#+1
   \   00000248   0BD1               BNE      ??Procedure_Event_21
   3316                          if (TypePrc->Type-1>ProcLogStart) {TypePrc->Type--;MenuPaintExecut=1;  } else {TypePrc->Type=(_ProcType)(ProcLogStop-1);MenuPaintExecut=1;  }
   \   0000024A   2078               LDRB     R0,[R4, #+0]
   \   0000024C   401E               SUBS     R0,R0,#+1
   \   0000024E   0228               CMP      R0,#+2
   \   00000250   04DB               BLT      ??Procedure_Event_24
   \   00000252   2078               LDRB     R0,[R4, #+0]
   \   00000254   401E               SUBS     R0,R0,#+1
   \   00000256   2070               STRB     R0,[R4, #+0]
   \   00000258   3E00               MOVS     R6,R7
   \   0000025A   02E0               B        ??Procedure_Event_21
   \                     ??Procedure_Event_24:
   \   0000025C   0C20               MOVS     R0,#+12
   \   0000025E   2070               STRB     R0,[R4, #+0]
   \   00000260   3E00               MOVS     R6,R7
   3317                   
   3318                      }
   3319           
   3320                 
   3321                 //zmiana numeru procedur
   3322                 if ((((TypePrc->Type>ProcStStart) && (TypePrc->Type<ProcTimeStart))
   3323                     || (TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg)   
   3324                     ) && (TypePrc->Type!=ProcInc) && (TypePrc->Type!=ProcInc))
   \                     ??Procedure_Event_21:
   \   00000262   2078               LDRB     R0,[R4, #+0]
   \   00000264   1428               CMP      R0,#+20
   \   00000266   01D3               BCC      ??Procedure_Event_25
   \   00000268   2C28               CMP      R0,#+44
   \   0000026A   04D3               BCC      ??Procedure_Event_26
   \                     ??Procedure_Event_25:
   \   0000026C   3828               CMP      R0,#+56
   \   0000026E   02D0               BEQ      ??Procedure_Event_26
   \   00000270   3928               CMP      R0,#+57
   \   00000272   00D0               BEQ      .+4
   \   00000274   C4E1               B        ??Procedure_Event_27
   \                     ??Procedure_Event_26:
   \   00000276   2528               CMP      R0,#+37
   \   00000278   00D1               BNE      .+4
   \   0000027A   C1E1               B        ??Procedure_Event_27
   3325                 {  
   3326                    txt[1]=0;
   \   0000027C   6D46               MOV      R5,SP
   \   0000027E   0020               MOVS     R0,#+0
   \   00000280   6870               STRB     R0,[R5, #+1]
   3327                    txt[0]='>';
   \   00000282   3E20               MOVS     R0,#+62
   \   00000284   2870               STRB     R0,[R5, #+0]
   3328                    if (Button(txt,43,25,18,18)==1) 
   \   00000286   82B0               SUB      SP,SP,#+8
   \   00000288   1220               MOVS     R0,#+18
   \   0000028A   0090               STR      R0,[SP, #+0]
   \   0000028C   0300               MOVS     R3,R0
   \   0000028E   1922               MOVS     R2,#+25
   \   00000290   2B21               MOVS     R1,#+43
   \   00000292   02A8               ADD      R0,SP,#+8
   \   00000294   ........           BL       Button
   \   00000298   02B0               ADD      SP,SP,#+8
   \   0000029A   0128               CMP      R0,#+1
   \   0000029C   00D0               BEQ      .+4
   \   0000029E   EBE0               B        ??Procedure_Event_28
   3329                    {
   3330                      switch (TypePrc->Type)
   \   000002A0   2078               LDRB     R0,[R4, #+0]
   \   000002A2   1438               SUBS     R0,R0,#+20
   \   000002A4   2528               CMP      R0,#+37
   \   000002A6   00D9               BLS      .+4
   \   000002A8   E5E0               B        ??Procedure_Event_29
   \   000002AA   02A1               ADR      R1,??Procedure_Event_1
   \   000002AC   095C               LDRB     R1,[R1, R0]
   \   000002AE   4900               LSLS     R1,R1,#+1
   \   000002B0   8F44               ADD      PC,PC,R1
   \   000002B2   C046               Nop      
   \                     ??Procedure_Event_1:
   \   000002B4   13214E5C           DC8      +19,+33,+78,+92
   \   000002B8   69E1E1E1           DC8      +105,+225,+225,+225
   \   000002BC   E1E1E1E1           DC8      +225,+225,+225,+225
   \   000002C0   768492A0           DC8      +118,+132,+146,+160
   \   000002C4   AEE1E1D5           DC8      +174,+225,+225,+213
   \   000002C8   E1E1E1E1           DC8      +225,+225,+225,+225
   \   000002CC   E1E1E1E1           DC8      +225,+225,+225,+225
   \   000002D0   E1E1E1E1           DC8      +225,+225,+225,+225
   \   000002D4   E1E1E1E1           DC8      +225,+225,+225,+225
   \   000002D8   BBC8               DC8      +187,+200
   3331                      {
   3332                        case ProcStI: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_30:
   \   000002DA   3800               MOVS     R0,R7
   \   000002DC   2056               LDRSB    R0,[R4, R0]
   \   000002DE   401C               ADDS     R0,R0,#+1
   \   000002E0   2328               CMP      R0,#+35
   \   000002E2   04DA               BGE      ??Procedure_Event_31
   \   000002E4   3800               MOVS     R0,R7
   \   000002E6   2056               LDRSB    R0,[R4, R0]
   \   000002E8   401C               ADDS     R0,R0,#+1
   \   000002EA   6070               STRB     R0,[R4, #+1]
   \   000002EC   C3E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_31:
   \   000002EE   0020               MOVS     R0,#+0
   \   000002F0   C043               MVNS     R0,R0            ;; #-1
   \   000002F2   6070               STRB     R0,[R4, #+1]
   \   000002F4   BFE0               B        ??Procedure_Event_29
   3333                        case ProcStNI: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_32:
   \   000002F6   3800               MOVS     R0,R7
   \   000002F8   2056               LDRSB    R0,[R4, R0]
   \   000002FA   401C               ADDS     R0,R0,#+1
   \   000002FC   2328               CMP      R0,#+35
   \   000002FE   04DA               BGE      ??Procedure_Event_33
   \   00000300   3800               MOVS     R0,R7
   \   00000302   2056               LDRSB    R0,[R4, R0]
   \   00000304   401C               ADDS     R0,R0,#+1
   \   00000306   6070               STRB     R0,[R4, #+1]
   \   00000308   B5E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_33:
   \   0000030A   0020               MOVS     R0,#+0
   \   0000030C   C043               MVNS     R0,R0            ;; #-1
   \   0000030E   6070               STRB     R0,[R4, #+1]
   \   00000310   B1E0               B        ??Procedure_Event_29
   \   00000312   C046               Nop      
   \                     ??Procedure_Event_3:
   \   00000314   ........           DC32     X_down
   \   00000318   ........           DC32     Y_down
   \   0000031C   E9D71300           DC32     0x13d7e9
   \   00000320   30F4FFFF           DC32     0xfffff430
   \   00000324   ........           DC32     ButtonBipCounter
   \   00000328   ........           DC32     g_counter
   \   0000032C   ........           DC32     X_up
   \   00000330   ........           DC32     Y_up
   \   00000334   ........           DC32     TextToChangeLength + 76
   \   00000338   ........           DC32     gProg
   \   0000033C   ........           DC32     TextToChangeLength + 72
   \   00000340   ........           DC32     TextToChangeLength + 8
   \   00000344   ........           DC32     TextToChangeLength + 20
   \   00000348   ........           DC32     TextToChangeLength + 19
   \   0000034C   ........           DC32     TextToChangeLength + 21
   3334                        case ProcStQ: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_34:
   \   00000350   3800               MOVS     R0,R7
   \   00000352   2056               LDRSB    R0,[R4, R0]
   \   00000354   401C               ADDS     R0,R0,#+1
   \   00000356   2328               CMP      R0,#+35
   \   00000358   04DA               BGE      ??Procedure_Event_35
   \   0000035A   3800               MOVS     R0,R7
   \   0000035C   2056               LDRSB    R0,[R4, R0]
   \   0000035E   401C               ADDS     R0,R0,#+1
   \   00000360   6070               STRB     R0,[R4, #+1]
   \   00000362   88E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_35:
   \   00000364   0020               MOVS     R0,#+0
   \   00000366   C043               MVNS     R0,R0            ;; #-1
   \   00000368   6070               STRB     R0,[R4, #+1]
   \   0000036A   84E0               B        ??Procedure_Event_29
   3335                        case ProcStB: if (TypePrc->Nr+1<NumberButton) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_36:
   \   0000036C   3800               MOVS     R0,R7
   \   0000036E   2056               LDRSB    R0,[R4, R0]
   \   00000370   401C               ADDS     R0,R0,#+1
   \   00000372   5028               CMP      R0,#+80
   \   00000374   04DA               BGE      ??Procedure_Event_37
   \   00000376   3800               MOVS     R0,R7
   \   00000378   2056               LDRSB    R0,[R4, R0]
   \   0000037A   401C               ADDS     R0,R0,#+1
   \   0000037C   6070               STRB     R0,[R4, #+1]
   \   0000037E   7AE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_37:
   \   00000380   0020               MOVS     R0,#+0
   \   00000382   6070               STRB     R0,[R4, #+1]
   \   00000384   77E0               B        ??Procedure_Event_29
   3336                        case ProcStS: if (TypePrc->Nr+1<NumberSceneMax) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_38:
   \   00000386   3800               MOVS     R0,R7
   \   00000388   2056               LDRSB    R0,[R4, R0]
   \   0000038A   401C               ADDS     R0,R0,#+1
   \   0000038C   0A28               CMP      R0,#+10
   \   0000038E   04DA               BGE      ??Procedure_Event_39
   \   00000390   3800               MOVS     R0,R7
   \   00000392   2056               LDRSB    R0,[R4, R0]
   \   00000394   401C               ADDS     R0,R0,#+1
   \   00000396   6070               STRB     R0,[R4, #+1]
   \   00000398   6DE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_39:
   \   0000039A   0020               MOVS     R0,#+0
   \   0000039C   6070               STRB     R0,[R4, #+1]
   \   0000039E   6AE0               B        ??Procedure_Event_29
   3337                        case ProcWOUT: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_40:
   \   000003A0   3800               MOVS     R0,R7
   \   000003A2   2056               LDRSB    R0,[R4, R0]
   \   000003A4   401C               ADDS     R0,R0,#+1
   \   000003A6   2328               CMP      R0,#+35
   \   000003A8   04DA               BGE      ??Procedure_Event_41
   \   000003AA   3800               MOVS     R0,R7
   \   000003AC   2056               LDRSB    R0,[R4, R0]
   \   000003AE   401C               ADDS     R0,R0,#+1
   \   000003B0   6070               STRB     R0,[R4, #+1]
   \   000003B2   60E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_41:
   \   000003B4   0020               MOVS     R0,#+0
   \   000003B6   C043               MVNS     R0,R0            ;; #-1
   \   000003B8   6070               STRB     R0,[R4, #+1]
   \   000003BA   5CE0               B        ??Procedure_Event_29
   3338                        case ProcWOUTS: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_42:
   \   000003BC   3800               MOVS     R0,R7
   \   000003BE   2056               LDRSB    R0,[R4, R0]
   \   000003C0   401C               ADDS     R0,R0,#+1
   \   000003C2   2328               CMP      R0,#+35
   \   000003C4   04DA               BGE      ??Procedure_Event_43
   \   000003C6   3800               MOVS     R0,R7
   \   000003C8   2056               LDRSB    R0,[R4, R0]
   \   000003CA   401C               ADDS     R0,R0,#+1
   \   000003CC   6070               STRB     R0,[R4, #+1]
   \   000003CE   52E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_43:
   \   000003D0   0020               MOVS     R0,#+0
   \   000003D2   C043               MVNS     R0,R0            ;; #-1
   \   000003D4   6070               STRB     R0,[R4, #+1]
   \   000003D6   4EE0               B        ??Procedure_Event_29
   3339                        case ProcWOUTR: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_44:
   \   000003D8   3800               MOVS     R0,R7
   \   000003DA   2056               LDRSB    R0,[R4, R0]
   \   000003DC   401C               ADDS     R0,R0,#+1
   \   000003DE   2328               CMP      R0,#+35
   \   000003E0   04DA               BGE      ??Procedure_Event_45
   \   000003E2   3800               MOVS     R0,R7
   \   000003E4   2056               LDRSB    R0,[R4, R0]
   \   000003E6   401C               ADDS     R0,R0,#+1
   \   000003E8   6070               STRB     R0,[R4, #+1]
   \   000003EA   44E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_45:
   \   000003EC   0020               MOVS     R0,#+0
   \   000003EE   C043               MVNS     R0,R0            ;; #-1
   \   000003F0   6070               STRB     R0,[R4, #+1]
   \   000003F2   40E0               B        ??Procedure_Event_29
   3340                        case ProcWOUTC: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_46:
   \   000003F4   3800               MOVS     R0,R7
   \   000003F6   2056               LDRSB    R0,[R4, R0]
   \   000003F8   401C               ADDS     R0,R0,#+1
   \   000003FA   2328               CMP      R0,#+35
   \   000003FC   04DA               BGE      ??Procedure_Event_47
   \   000003FE   3800               MOVS     R0,R7
   \   00000400   2056               LDRSB    R0,[R4, R0]
   \   00000402   401C               ADDS     R0,R0,#+1
   \   00000404   6070               STRB     R0,[R4, #+1]
   \   00000406   36E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_47:
   \   00000408   0020               MOVS     R0,#+0
   \   0000040A   C043               MVNS     R0,R0            ;; #-1
   \   0000040C   6070               STRB     R0,[R4, #+1]
   \   0000040E   32E0               B        ??Procedure_Event_29
   3341                        case ProcSetScn: if (TypePrc->Nr+1<NumberSceneMax) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_48:
   \   00000410   3800               MOVS     R0,R7
   \   00000412   2056               LDRSB    R0,[R4, R0]
   \   00000414   401C               ADDS     R0,R0,#+1
   \   00000416   0A28               CMP      R0,#+10
   \   00000418   04DA               BGE      ??Procedure_Event_49
   \   0000041A   3800               MOVS     R0,R7
   \   0000041C   2056               LDRSB    R0,[R4, R0]
   \   0000041E   401C               ADDS     R0,R0,#+1
   \   00000420   6070               STRB     R0,[R4, #+1]
   \   00000422   28E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_49:
   \   00000424   0020               MOVS     R0,#+0
   \   00000426   6070               STRB     R0,[R4, #+1]
   \   00000428   25E0               B        ??Procedure_Event_29
   3342                        case ProcGetReg: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_50:
   \   0000042A   3800               MOVS     R0,R7
   \   0000042C   2056               LDRSB    R0,[R4, R0]
   \   0000042E   401C               ADDS     R0,R0,#+1
   \   00000430   2328               CMP      R0,#+35
   \   00000432   04DA               BGE      ??Procedure_Event_51
   \   00000434   3800               MOVS     R0,R7
   \   00000436   2056               LDRSB    R0,[R4, R0]
   \   00000438   401C               ADDS     R0,R0,#+1
   \   0000043A   6070               STRB     R0,[R4, #+1]
   \   0000043C   1BE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_51:
   \   0000043E   0020               MOVS     R0,#+0
   \   00000440   6070               STRB     R0,[R4, #+1]
   \   00000442   18E0               B        ??Procedure_Event_29
   3343                        case ProcSetReg: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_52:
   \   00000444   3800               MOVS     R0,R7
   \   00000446   2056               LDRSB    R0,[R4, R0]
   \   00000448   401C               ADDS     R0,R0,#+1
   \   0000044A   2328               CMP      R0,#+35
   \   0000044C   04DA               BGE      ??Procedure_Event_53
   \   0000044E   3800               MOVS     R0,R7
   \   00000450   2056               LDRSB    R0,[R4, R0]
   \   00000452   401C               ADDS     R0,R0,#+1
   \   00000454   6070               STRB     R0,[R4, #+1]
   \   00000456   0EE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_53:
   \   00000458   0020               MOVS     R0,#+0
   \   0000045A   6070               STRB     R0,[R4, #+1]
   \   0000045C   0BE0               B        ??Procedure_Event_29
   3344                        case ProcSPK: if (TypePrc->Tag.SpeakerType+1<SPK_Amount) {TypePrc->Tag.SpeakerType++;} else {TypePrc->Tag.SpeakerType=0;} break;
   \                     ??Procedure_Event_54:
   \   0000045E   207A               LDRB     R0,[R4, #+8]
   \   00000460   401C               ADDS     R0,R0,#+1
   \   00000462   0004               LSLS     R0,R0,#+16
   \   00000464   000C               LSRS     R0,R0,#+16
   \   00000466   0428               CMP      R0,#+4
   \   00000468   03D2               BCS      ??Procedure_Event_55
   \   0000046A   207A               LDRB     R0,[R4, #+8]
   \   0000046C   401C               ADDS     R0,R0,#+1
   \   0000046E   2072               STRB     R0,[R4, #+8]
   \   00000470   01E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_55:
   \   00000472   0020               MOVS     R0,#+0
   \   00000474   2072               STRB     R0,[R4, #+8]
   3345                        
   3346          
   3347                      }
   3348                      
   3349                      
   3350                      
   3351                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_29:
   \   00000476   3E00               MOVS     R6,R7
   3352                    }
   3353                    txt[0]='<';
   \                     ??Procedure_Event_28:
   \   00000478   3C20               MOVS     R0,#+60
   \   0000047A   2870               STRB     R0,[R5, #+0]
   3354                    if (Button(txt,2,25,18,18)==1) 
   \   0000047C   82B0               SUB      SP,SP,#+8
   \   0000047E   1220               MOVS     R0,#+18
   \   00000480   0090               STR      R0,[SP, #+0]
   \   00000482   0300               MOVS     R3,R0
   \   00000484   1922               MOVS     R2,#+25
   \   00000486   0221               MOVS     R1,#+2
   \   00000488   02A8               ADD      R0,SP,#+8
   \   0000048A   ........           BL       Button
   \   0000048E   02B0               ADD      SP,SP,#+8
   \   00000490   0128               CMP      R0,#+1
   \   00000492   00D0               BEQ      .+4
   \   00000494   B4E0               B        ??Procedure_Event_27
   3355                    {
   3356                      
   3357                      switch (TypePrc->Type)
   \   00000496   2078               LDRB     R0,[R4, #+0]
   \   00000498   1438               SUBS     R0,R0,#+20
   \   0000049A   2528               CMP      R0,#+37
   \   0000049C   00D9               BLS      .+4
   \   0000049E   AEE0               B        ??Procedure_Event_56
   \   000004A0   01A1               ADR      R1,??Procedure_Event_2
   \   000004A2   095C               LDRB     R1,[R1, R0]
   \   000004A4   4900               LSLS     R1,R1,#+1
   \   000004A6   8F44               ADD      PC,PC,R1
   \                     ??Procedure_Event_2:
   \   000004A8   121E2A42           DC8      +18,+30,+42,+66
   \   000004AC   36AAAAAA           DC8      +54,+170,+170,+170
   \   000004B0   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004B4   4E5A6672           DC8      +78,+90,+102,+114
   \   000004B8   7EAAAAA2           DC8      +126,+170,+170,+162
   \   000004BC   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004C0   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004C4   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004C8   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004CC   8A96               DC8      +138,+150
   3358                      {
   3359                        case ProcStI: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_57:
   \   000004CE   3800               MOVS     R0,R7
   \   000004D0   2056               LDRSB    R0,[R4, R0]
   \   000004D2   0028               CMP      R0,#+0
   \   000004D4   04D4               BMI      ??Procedure_Event_58
   \   000004D6   3800               MOVS     R0,R7
   \   000004D8   2056               LDRSB    R0,[R4, R0]
   \   000004DA   401E               SUBS     R0,R0,#+1
   \   000004DC   6070               STRB     R0,[R4, #+1]
   \   000004DE   8EE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_58:
   \   000004E0   2220               MOVS     R0,#+34
   \   000004E2   6070               STRB     R0,[R4, #+1]
   \   000004E4   8BE0               B        ??Procedure_Event_56
   3360                        case ProcStNI: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_59:
   \   000004E6   3800               MOVS     R0,R7
   \   000004E8   2056               LDRSB    R0,[R4, R0]
   \   000004EA   0028               CMP      R0,#+0
   \   000004EC   04D4               BMI      ??Procedure_Event_60
   \   000004EE   3800               MOVS     R0,R7
   \   000004F0   2056               LDRSB    R0,[R4, R0]
   \   000004F2   401E               SUBS     R0,R0,#+1
   \   000004F4   6070               STRB     R0,[R4, #+1]
   \   000004F6   82E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_60:
   \   000004F8   2220               MOVS     R0,#+34
   \   000004FA   6070               STRB     R0,[R4, #+1]
   \   000004FC   7FE0               B        ??Procedure_Event_56
   3361                        case ProcStQ: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_61:
   \   000004FE   3800               MOVS     R0,R7
   \   00000500   2056               LDRSB    R0,[R4, R0]
   \   00000502   0028               CMP      R0,#+0
   \   00000504   04D4               BMI      ??Procedure_Event_62
   \   00000506   3800               MOVS     R0,R7
   \   00000508   2056               LDRSB    R0,[R4, R0]
   \   0000050A   401E               SUBS     R0,R0,#+1
   \   0000050C   6070               STRB     R0,[R4, #+1]
   \   0000050E   76E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_62:
   \   00000510   2220               MOVS     R0,#+34
   \   00000512   6070               STRB     R0,[R4, #+1]
   \   00000514   73E0               B        ??Procedure_Event_56
   3362                        case ProcStS: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberSceneMax-1;} break;
   \                     ??Procedure_Event_63:
   \   00000516   3800               MOVS     R0,R7
   \   00000518   2056               LDRSB    R0,[R4, R0]
   \   0000051A   0128               CMP      R0,#+1
   \   0000051C   04DB               BLT      ??Procedure_Event_64
   \   0000051E   3800               MOVS     R0,R7
   \   00000520   2056               LDRSB    R0,[R4, R0]
   \   00000522   401E               SUBS     R0,R0,#+1
   \   00000524   6070               STRB     R0,[R4, #+1]
   \   00000526   6AE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_64:
   \   00000528   0920               MOVS     R0,#+9
   \   0000052A   6070               STRB     R0,[R4, #+1]
   \   0000052C   67E0               B        ??Procedure_Event_56
   3363                        case ProcStB: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_65:
   \   0000052E   3800               MOVS     R0,R7
   \   00000530   2056               LDRSB    R0,[R4, R0]
   \   00000532   0128               CMP      R0,#+1
   \   00000534   04DB               BLT      ??Procedure_Event_66
   \   00000536   3800               MOVS     R0,R7
   \   00000538   2056               LDRSB    R0,[R4, R0]
   \   0000053A   401E               SUBS     R0,R0,#+1
   \   0000053C   6070               STRB     R0,[R4, #+1]
   \   0000053E   5EE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_66:
   \   00000540   2220               MOVS     R0,#+34
   \   00000542   6070               STRB     R0,[R4, #+1]
   \   00000544   5BE0               B        ??Procedure_Event_56
   3364                        case ProcWOUT: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_67:
   \   00000546   3800               MOVS     R0,R7
   \   00000548   2056               LDRSB    R0,[R4, R0]
   \   0000054A   0028               CMP      R0,#+0
   \   0000054C   04D4               BMI      ??Procedure_Event_68
   \   0000054E   3800               MOVS     R0,R7
   \   00000550   2056               LDRSB    R0,[R4, R0]
   \   00000552   401E               SUBS     R0,R0,#+1
   \   00000554   6070               STRB     R0,[R4, #+1]
   \   00000556   52E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_68:
   \   00000558   2220               MOVS     R0,#+34
   \   0000055A   6070               STRB     R0,[R4, #+1]
   \   0000055C   4FE0               B        ??Procedure_Event_56
   3365                        case ProcWOUTS: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_69:
   \   0000055E   3800               MOVS     R0,R7
   \   00000560   2056               LDRSB    R0,[R4, R0]
   \   00000562   0028               CMP      R0,#+0
   \   00000564   04D4               BMI      ??Procedure_Event_70
   \   00000566   3800               MOVS     R0,R7
   \   00000568   2056               LDRSB    R0,[R4, R0]
   \   0000056A   401E               SUBS     R0,R0,#+1
   \   0000056C   6070               STRB     R0,[R4, #+1]
   \   0000056E   46E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_70:
   \   00000570   2220               MOVS     R0,#+34
   \   00000572   6070               STRB     R0,[R4, #+1]
   \   00000574   43E0               B        ??Procedure_Event_56
   3366                        case ProcWOUTR: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_71:
   \   00000576   3800               MOVS     R0,R7
   \   00000578   2056               LDRSB    R0,[R4, R0]
   \   0000057A   0028               CMP      R0,#+0
   \   0000057C   04D4               BMI      ??Procedure_Event_72
   \   0000057E   3800               MOVS     R0,R7
   \   00000580   2056               LDRSB    R0,[R4, R0]
   \   00000582   401E               SUBS     R0,R0,#+1
   \   00000584   6070               STRB     R0,[R4, #+1]
   \   00000586   3AE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_72:
   \   00000588   2220               MOVS     R0,#+34
   \   0000058A   6070               STRB     R0,[R4, #+1]
   \   0000058C   37E0               B        ??Procedure_Event_56
   3367                        case ProcWOUTC: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_73:
   \   0000058E   3800               MOVS     R0,R7
   \   00000590   2056               LDRSB    R0,[R4, R0]
   \   00000592   0028               CMP      R0,#+0
   \   00000594   04D4               BMI      ??Procedure_Event_74
   \   00000596   3800               MOVS     R0,R7
   \   00000598   2056               LDRSB    R0,[R4, R0]
   \   0000059A   401E               SUBS     R0,R0,#+1
   \   0000059C   6070               STRB     R0,[R4, #+1]
   \   0000059E   2EE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_74:
   \   000005A0   2220               MOVS     R0,#+34
   \   000005A2   6070               STRB     R0,[R4, #+1]
   \   000005A4   2BE0               B        ??Procedure_Event_56
   3368                        case ProcSetScn: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberSceneMax-1;} break;
   \                     ??Procedure_Event_75:
   \   000005A6   3800               MOVS     R0,R7
   \   000005A8   2056               LDRSB    R0,[R4, R0]
   \   000005AA   0128               CMP      R0,#+1
   \   000005AC   04DB               BLT      ??Procedure_Event_76
   \   000005AE   3800               MOVS     R0,R7
   \   000005B0   2056               LDRSB    R0,[R4, R0]
   \   000005B2   401E               SUBS     R0,R0,#+1
   \   000005B4   6070               STRB     R0,[R4, #+1]
   \   000005B6   22E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_76:
   \   000005B8   0920               MOVS     R0,#+9
   \   000005BA   6070               STRB     R0,[R4, #+1]
   \   000005BC   1FE0               B        ??Procedure_Event_56
   3369                        case ProcGetReg: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_77:
   \   000005BE   3800               MOVS     R0,R7
   \   000005C0   2056               LDRSB    R0,[R4, R0]
   \   000005C2   0128               CMP      R0,#+1
   \   000005C4   04DB               BLT      ??Procedure_Event_78
   \   000005C6   3800               MOVS     R0,R7
   \   000005C8   2056               LDRSB    R0,[R4, R0]
   \   000005CA   401E               SUBS     R0,R0,#+1
   \   000005CC   6070               STRB     R0,[R4, #+1]
   \   000005CE   16E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_78:
   \   000005D0   2220               MOVS     R0,#+34
   \   000005D2   6070               STRB     R0,[R4, #+1]
   \   000005D4   13E0               B        ??Procedure_Event_56
   3370                        case ProcSetReg: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_79:
   \   000005D6   3800               MOVS     R0,R7
   \   000005D8   2056               LDRSB    R0,[R4, R0]
   \   000005DA   0128               CMP      R0,#+1
   \   000005DC   04DB               BLT      ??Procedure_Event_80
   \   000005DE   3800               MOVS     R0,R7
   \   000005E0   2056               LDRSB    R0,[R4, R0]
   \   000005E2   401E               SUBS     R0,R0,#+1
   \   000005E4   6070               STRB     R0,[R4, #+1]
   \   000005E6   0AE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_80:
   \   000005E8   2220               MOVS     R0,#+34
   \   000005EA   6070               STRB     R0,[R4, #+1]
   \   000005EC   07E0               B        ??Procedure_Event_56
   3371                        case ProcSPK: if (TypePrc->Tag.SpeakerType>0) {TypePrc->Tag.SpeakerType--;} else {TypePrc->Tag.SpeakerType=SPK_Amount-1;} break;
   \                     ??Procedure_Event_81:
   \   000005EE   207A               LDRB     R0,[R4, #+8]
   \   000005F0   0028               CMP      R0,#+0
   \   000005F2   02D0               BEQ      ??Procedure_Event_82
   \   000005F4   401E               SUBS     R0,R0,#+1
   \   000005F6   2072               STRB     R0,[R4, #+8]
   \   000005F8   01E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_82:
   \   000005FA   0320               MOVS     R0,#+3
   \   000005FC   2072               STRB     R0,[R4, #+8]
   3372                      }
   3373                      
   3374          
   3375                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_56:
   \   000005FE   3E00               MOVS     R6,R7
   3376                    }
   3377                 }
   3378                 
   3379          
   3380                 //zmiana numeru portu
   3381                 if(((TypePrc->Type==ProcStI) ||
   3382                    (TypePrc->Type==ProcStNI) ||
   3383                    (TypePrc->Type==ProcStQ) ||
   3384                    (TypePrc->Type==ProcWOUT) ||
   3385                    (TypePrc->Type==ProcWOUTS) ||
   3386                    (TypePrc->Type==ProcWOUTR) ||
   3387                    (TypePrc->Type==ProcWOUTC)  
   3388                      )
   3389                   && (TypePrc->Type<ProcTimeStart))
   \                     ??Procedure_Event_27:
   \   00000600   2078               LDRB     R0,[R4, #+0]
   \   00000602   1428               CMP      R0,#+20
   \   00000604   0CD0               BEQ      ??Procedure_Event_83
   \   00000606   1528               CMP      R0,#+21
   \   00000608   0AD0               BEQ      ??Procedure_Event_83
   \   0000060A   1628               CMP      R0,#+22
   \   0000060C   08D0               BEQ      ??Procedure_Event_83
   \   0000060E   2028               CMP      R0,#+32
   \   00000610   06D0               BEQ      ??Procedure_Event_83
   \   00000612   2128               CMP      R0,#+33
   \   00000614   04D0               BEQ      ??Procedure_Event_83
   \   00000616   2228               CMP      R0,#+34
   \   00000618   02D0               BEQ      ??Procedure_Event_83
   \   0000061A   2328               CMP      R0,#+35
   \   0000061C   00D0               BEQ      .+4
   \   0000061E   ADE0               B        ??Procedure_Event_84
   \                     ??Procedure_Event_83:
   \   00000620   2C28               CMP      R0,#+44
   \   00000622   00D3               BCC      .+4
   \   00000624   AAE0               B        ??Procedure_Event_84
   3390                 {  
   3391                    txt[1]=0;
   \   00000626   6D46               MOV      R5,SP
   \   00000628   0020               MOVS     R0,#+0
   \   0000062A   6870               STRB     R0,[R5, #+1]
   3392                    txt[0]='>';
   \   0000062C   3E20               MOVS     R0,#+62
   \   0000062E   2870               STRB     R0,[R5, #+0]
   3393                    if (Button(txt,43,4,18,18)==1) 
   \   00000630   82B0               SUB      SP,SP,#+8
   \   00000632   1220               MOVS     R0,#+18
   \   00000634   0090               STR      R0,[SP, #+0]
   \   00000636   0300               MOVS     R3,R0
   \   00000638   0422               MOVS     R2,#+4
   \   0000063A   2B21               MOVS     R1,#+43
   \   0000063C   02A8               ADD      R0,SP,#+8
   \   0000063E   ........           BL       Button
   \   00000642   02B0               ADD      SP,SP,#+8
   \   00000644   0128               CMP      R0,#+1
   \   00000646   1DD1               BNE      ??Procedure_Event_85
   3394                    {
   3395                      switch (TypePrc->Type)
   \   00000648   2078               LDRB     R0,[R4, #+0]
   \   0000064A   1438               SUBS     R0,R0,#+20
   \   0000064C   0228               CMP      R0,#+2
   \   0000064E   02D9               BLS      ??Procedure_Event_86
   \   00000650   0C38               SUBS     R0,R0,#+12
   \   00000652   0328               CMP      R0,#+3
   \   00000654   15D8               BHI      ??Procedure_Event_87
   3396                      {
   3397                        case ProcStI: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)   || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_86:
   \   00000656   207A               LDRB     R0,[R4, #+8]
   \   00000658   401C               ADDS     R0,R0,#+1
   \   0000065A   0004               LSLS     R0,R0,#+16
   \   0000065C   000C               LSRS     R0,R0,#+16
   \   0000065E   1028               CMP      R0,#+16
   \   00000660   09D3               BCC      ??Procedure_Event_88
   \   00000662   3800               MOVS     R0,R7
   \   00000664   2056               LDRSB    R0,[R4, R0]
   \   00000666   0028               CMP      R0,#+0
   \   00000668   09D5               BPL      ??Procedure_Event_89
   \   0000066A   207A               LDRB     R0,[R4, #+8]
   \   0000066C   401C               ADDS     R0,R0,#+1
   \   0000066E   0004               LSLS     R0,R0,#+16
   \   00000670   000C               LSRS     R0,R0,#+16
   \   00000672   6328               CMP      R0,#+99
   \   00000674   03D2               BCS      ??Procedure_Event_89
   \                     ??Procedure_Event_88:
   \   00000676   207A               LDRB     R0,[R4, #+8]
   \   00000678   401C               ADDS     R0,R0,#+1
   \   0000067A   2072               STRB     R0,[R4, #+8]
   \   0000067C   01E0               B        ??Procedure_Event_87
   \                     ??Procedure_Event_89:
   \   0000067E   0020               MOVS     R0,#+0
   \   00000680   2072               STRB     R0,[R4, #+8]
   3398                        case ProcStNI: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)  || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3399                        case ProcStQ: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)   || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3400                        case ProcWOUT: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)  || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3401                        case ProcWOUTS: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3402                        case ProcWOUTR: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3403                        case ProcWOUTC: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3404                      }
   3405                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_87:
   \   00000682   3E00               MOVS     R6,R7
   3406                    }
   3407                    txt[0]='<';
   \                     ??Procedure_Event_85:
   \   00000684   3C20               MOVS     R0,#+60
   \   00000686   2870               STRB     R0,[R5, #+0]
   3408                    if (Button(txt,2,4,18,18)==1) 
   \   00000688   82B0               SUB      SP,SP,#+8
   \   0000068A   1220               MOVS     R0,#+18
   \   0000068C   0090               STR      R0,[SP, #+0]
   \   0000068E   0300               MOVS     R3,R0
   \   00000690   0422               MOVS     R2,#+4
   \   00000692   0221               MOVS     R1,#+2
   \   00000694   02A8               ADD      R0,SP,#+8
   \   00000696   ........           BL       Button
   \   0000069A   02B0               ADD      SP,SP,#+8
   \   0000069C   0128               CMP      R0,#+1
   \   0000069E   6DD1               BNE      ??Procedure_Event_84
   3409                    {
   3410                      switch (TypePrc->Type)
   \   000006A0   2078               LDRB     R0,[R4, #+0]
   \   000006A2   1428               CMP      R0,#+20
   \   000006A4   0CD0               BEQ      ??Procedure_Event_90
   \   000006A6   1528               CMP      R0,#+21
   \   000006A8   1AD0               BEQ      ??Procedure_Event_91
   \   000006AA   1628               CMP      R0,#+22
   \   000006AC   25D0               BEQ      ??Procedure_Event_92
   \   000006AE   2028               CMP      R0,#+32
   \   000006B0   30D0               BEQ      ??Procedure_Event_93
   \   000006B2   2128               CMP      R0,#+33
   \   000006B4   3BD0               BEQ      ??Procedure_Event_94
   \   000006B6   2228               CMP      R0,#+34
   \   000006B8   46D0               BEQ      ??Procedure_Event_95
   \   000006BA   2328               CMP      R0,#+35
   \   000006BC   51D0               BEQ      ??Procedure_Event_96
   \   000006BE   5CE0               B        ??Procedure_Event_97
   3411                      {
   3412                        case ProcStI: if (TypePrc->Tag.Port>0)  {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_90:
   \   000006C0   207A               LDRB     R0,[R4, #+8]
   \   000006C2   0028               CMP      R0,#+0
   \   000006C4   02D0               BEQ      ??Procedure_Event_98
   \                     ??Procedure_Event_99:
   \   000006C6   401E               SUBS     R0,R0,#+1
   \   000006C8   2072               STRB     R0,[R4, #+8]
   \   000006CA   56E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_98:
   \   000006CC   3800               MOVS     R0,R7
   \   000006CE   2056               LDRSB    R0,[R4, R0]
   \   000006D0   0128               CMP      R0,#+1
   \   000006D2   02DB               BLT      ??Procedure_Event_100
   \   000006D4   0F20               MOVS     R0,#+15
   \   000006D6   2072               STRB     R0,[R4, #+8]
   \   000006D8   4FE0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_100:
   \   000006DA   6320               MOVS     R0,#+99
   \   000006DC   2072               STRB     R0,[R4, #+8]
   \   000006DE   4CE0               B        ??Procedure_Event_97
   3413                        case ProcStNI: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0)  TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_91:
   \   000006E0   207A               LDRB     R0,[R4, #+8]
   \   000006E2   0028               CMP      R0,#+0
   \   000006E4   EFD1               BNE      ??Procedure_Event_99
   \   000006E6   3800               MOVS     R0,R7
   \   000006E8   2056               LDRSB    R0,[R4, R0]
   \   000006EA   0128               CMP      R0,#+1
   \   000006EC   02DB               BLT      ??Procedure_Event_101
   \   000006EE   0F20               MOVS     R0,#+15
   \   000006F0   2072               STRB     R0,[R4, #+8]
   \   000006F2   42E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_101:
   \   000006F4   6320               MOVS     R0,#+99
   \   000006F6   2072               STRB     R0,[R4, #+8]
   \   000006F8   3FE0               B        ??Procedure_Event_97
   3414                        case ProcStQ: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_92:
   \   000006FA   207A               LDRB     R0,[R4, #+8]
   \   000006FC   0028               CMP      R0,#+0
   \   000006FE   E2D1               BNE      ??Procedure_Event_99
   \   00000700   3800               MOVS     R0,R7
   \   00000702   2056               LDRSB    R0,[R4, R0]
   \   00000704   0128               CMP      R0,#+1
   \   00000706   02DB               BLT      ??Procedure_Event_102
   \   00000708   0F20               MOVS     R0,#+15
   \   0000070A   2072               STRB     R0,[R4, #+8]
   \   0000070C   35E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_102:
   \   0000070E   6320               MOVS     R0,#+99
   \   00000710   2072               STRB     R0,[R4, #+8]
   \   00000712   32E0               B        ??Procedure_Event_97
   3415                        case ProcWOUT: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_93:
   \   00000714   207A               LDRB     R0,[R4, #+8]
   \   00000716   0028               CMP      R0,#+0
   \   00000718   D5D1               BNE      ??Procedure_Event_99
   \   0000071A   3800               MOVS     R0,R7
   \   0000071C   2056               LDRSB    R0,[R4, R0]
   \   0000071E   0128               CMP      R0,#+1
   \   00000720   02DB               BLT      ??Procedure_Event_103
   \   00000722   0F20               MOVS     R0,#+15
   \   00000724   2072               STRB     R0,[R4, #+8]
   \   00000726   28E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_103:
   \   00000728   6320               MOVS     R0,#+99
   \   0000072A   2072               STRB     R0,[R4, #+8]
   \   0000072C   25E0               B        ??Procedure_Event_97
   3416                        case ProcWOUTS: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_94:
   \   0000072E   207A               LDRB     R0,[R4, #+8]
   \   00000730   0028               CMP      R0,#+0
   \   00000732   C8D1               BNE      ??Procedure_Event_99
   \   00000734   3800               MOVS     R0,R7
   \   00000736   2056               LDRSB    R0,[R4, R0]
   \   00000738   0128               CMP      R0,#+1
   \   0000073A   02DB               BLT      ??Procedure_Event_104
   \   0000073C   0F20               MOVS     R0,#+15
   \   0000073E   2072               STRB     R0,[R4, #+8]
   \   00000740   1BE0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_104:
   \   00000742   6320               MOVS     R0,#+99
   \   00000744   2072               STRB     R0,[R4, #+8]
   \   00000746   18E0               B        ??Procedure_Event_97
   3417                        case ProcWOUTR: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_95:
   \   00000748   207A               LDRB     R0,[R4, #+8]
   \   0000074A   0028               CMP      R0,#+0
   \   0000074C   BBD1               BNE      ??Procedure_Event_99
   \   0000074E   3800               MOVS     R0,R7
   \   00000750   2056               LDRSB    R0,[R4, R0]
   \   00000752   0128               CMP      R0,#+1
   \   00000754   02DB               BLT      ??Procedure_Event_105
   \   00000756   0F20               MOVS     R0,#+15
   \   00000758   2072               STRB     R0,[R4, #+8]
   \   0000075A   0EE0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_105:
   \   0000075C   6320               MOVS     R0,#+99
   \   0000075E   2072               STRB     R0,[R4, #+8]
   \   00000760   0BE0               B        ??Procedure_Event_97
   3418                        case ProcWOUTC: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_96:
   \   00000762   207A               LDRB     R0,[R4, #+8]
   \   00000764   0028               CMP      R0,#+0
   \   00000766   AED1               BNE      ??Procedure_Event_99
   \   00000768   3800               MOVS     R0,R7
   \   0000076A   2056               LDRSB    R0,[R4, R0]
   \   0000076C   0128               CMP      R0,#+1
   \   0000076E   02DB               BLT      ??Procedure_Event_106
   \   00000770   0F20               MOVS     R0,#+15
   \   00000772   2072               STRB     R0,[R4, #+8]
   \   00000774   01E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_106:
   \   00000776   6320               MOVS     R0,#+99
   \   00000778   2072               STRB     R0,[R4, #+8]
   3419                      }
   3420                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_97:
   \   0000077A   3E00               MOVS     R6,R7
   3421                    }
   3422                 }
   3423                 
   3424                 //Zmiana typu procedury w ramach grupy
   3425                 txt[1]=0;
   \                     ??Procedure_Event_84:
   \   0000077C   6D46               MOV      R5,SP
   \   0000077E   0020               MOVS     R0,#+0
   \   00000780   6870               STRB     R0,[R5, #+1]
   3426                 txt[0]='>';
   \   00000782   3E20               MOVS     R0,#+62
   \   00000784   2870               STRB     R0,[R5, #+0]
   3427                 if ((TypePrc->Type>ProcStStart) )
   \   00000786   2078               LDRB     R0,[R4, #+0]
   \   00000788   1428               CMP      R0,#+20
   \   0000078A   66D3               BCC      ??Procedure_Event_107
   3428                 if (Button(txt,43,46,18,18)==1)
   \   0000078C   82B0               SUB      SP,SP,#+8
   \   0000078E   1220               MOVS     R0,#+18
   \   00000790   0090               STR      R0,[SP, #+0]
   \   00000792   0300               MOVS     R3,R0
   \   00000794   2E22               MOVS     R2,#+46
   \   00000796   2B21               MOVS     R1,#+43
   \   00000798   02A8               ADD      R0,SP,#+8
   \   0000079A   ........           BL       Button
   \   0000079E   02B0               ADD      SP,SP,#+8
   \   000007A0   0128               CMP      R0,#+1
   \   000007A2   5AD1               BNE      ??Procedure_Event_107
   3429                 {
   3430                   //je¿eli stany
   3431                   if  ((TypePrc->Type>ProcStStart) && (TypePrc->Type<ProcStStop))
   \   000007A4   2078               LDRB     R0,[R4, #+0]
   \   000007A6   1428               CMP      R0,#+20
   \   000007A8   14D3               BCC      ??Procedure_Event_108
   \   000007AA   1928               CMP      R0,#+25
   \   000007AC   12D2               BCS      ??Procedure_Event_108
   3432                      { 
   3433                        if (TypePrc->Type+1<ProcStStop) 
   \   000007AE   401C               ADDS     R0,R0,#+1
   \   000007B0   0004               LSLS     R0,R0,#+16
   \   000007B2   000C               LSRS     R0,R0,#+16
   \   000007B4   1928               CMP      R0,#+25
   \   000007B6   0AD2               BCS      ??Procedure_Event_109
   3434                        {
   3435                          TypePrc->Type++;MenuPaintExecut=1;  
   \   000007B8   2078               LDRB     R0,[R4, #+0]
   \   000007BA   401C               ADDS     R0,R0,#+1
   \   000007BC   2070               STRB     R0,[R4, #+0]
   \   000007BE   3E00               MOVS     R6,R7
   3436                          if (TypePrc->Type>ProcStQ) {TypePrc->Nr=0; TypePrc->Tag.Port=0;}
   \   000007C0   2078               LDRB     R0,[R4, #+0]
   \   000007C2   1728               CMP      R0,#+23
   \   000007C4   06D3               BCC      ??Procedure_Event_108
   \   000007C6   0020               MOVS     R0,#+0
   \   000007C8   6070               STRB     R0,[R4, #+1]
   \   000007CA   2072               STRB     R0,[R4, #+8]
   \   000007CC   02E0               B        ??Procedure_Event_108
   3437                        } else {TypePrc->Type=(_ProcType)(ProcStStart+1);MenuPaintExecut=1;  }
   \                     ??Procedure_Event_109:
   \   000007CE   1420               MOVS     R0,#+20
   \   000007D0   2070               STRB     R0,[R4, #+0]
   \   000007D2   3E00               MOVS     R6,R7
   3438                      }
   3439                   if  ((TypePrc->Type>ProcSetStart) && (TypePrc->Type<ProcSetStop))
   \                     ??Procedure_Event_108:
   \   000007D4   2078               LDRB     R0,[R4, #+0]
   \   000007D6   2028               CMP      R0,#+32
   \   000007D8   14D3               BCC      ??Procedure_Event_110
   \   000007DA   2828               CMP      R0,#+40
   \   000007DC   12D2               BCS      ??Procedure_Event_110
   3440                      { 
   3441                        if (TypePrc->Type+1<ProcSetStop) 
   \   000007DE   401C               ADDS     R0,R0,#+1
   \   000007E0   0004               LSLS     R0,R0,#+16
   \   000007E2   000C               LSRS     R0,R0,#+16
   \   000007E4   2828               CMP      R0,#+40
   \   000007E6   0AD2               BCS      ??Procedure_Event_111
   3442                        {
   3443                          TypePrc->Type++;MenuPaintExecut=1;  
   \   000007E8   2078               LDRB     R0,[R4, #+0]
   \   000007EA   401C               ADDS     R0,R0,#+1
   \   000007EC   2070               STRB     R0,[R4, #+0]
   \   000007EE   3E00               MOVS     R6,R7
   3444                          if (TypePrc->Type>ProcWOUTC) {TypePrc->Nr=0; TypePrc->Tag.Port=0;}
   \   000007F0   2078               LDRB     R0,[R4, #+0]
   \   000007F2   2428               CMP      R0,#+36
   \   000007F4   06D3               BCC      ??Procedure_Event_110
   \   000007F6   0020               MOVS     R0,#+0
   \   000007F8   6070               STRB     R0,[R4, #+1]
   \   000007FA   2072               STRB     R0,[R4, #+8]
   \   000007FC   02E0               B        ??Procedure_Event_110
   3445                        } else {TypePrc->Type=(_ProcType)(ProcSetStart+1);MenuPaintExecut=1;  }
   \                     ??Procedure_Event_111:
   \   000007FE   2020               MOVS     R0,#+32
   \   00000800   2070               STRB     R0,[R4, #+0]
   \   00000802   3E00               MOVS     R6,R7
   3446                      }
   3447                   
   3448                   
   3449                   if  ((TypePrc->Type>ProcTimeStart) && (TypePrc->Type<ProcTimeStop))
   \                     ??Procedure_Event_110:
   \   00000804   2078               LDRB     R0,[R4, #+0]
   \   00000806   2D28               CMP      R0,#+45
   \   00000808   0ED3               BCC      ??Procedure_Event_112
   \   0000080A   3028               CMP      R0,#+48
   \   0000080C   0CD2               BCS      ??Procedure_Event_112
   3450                   {  
   3451                      if (TypePrc->Type+1<ProcTimeStop) 
   \   0000080E   401C               ADDS     R0,R0,#+1
   \   00000810   0004               LSLS     R0,R0,#+16
   \   00000812   000C               LSRS     R0,R0,#+16
   \   00000814   3028               CMP      R0,#+48
   \   00000816   04D2               BCS      ??Procedure_Event_113
   3452                      {TypePrc->Type++;MenuPaintExecut=1;  
   \   00000818   2078               LDRB     R0,[R4, #+0]
   \   0000081A   401C               ADDS     R0,R0,#+1
   \   0000081C   2070               STRB     R0,[R4, #+0]
   \   0000081E   3E00               MOVS     R6,R7
   \   00000820   02E0               B        ??Procedure_Event_112
   3453                      } else {
   3454                        TypePrc->Type=(_ProcType)(ProcTimeStart+1);MenuPaintExecut=1;  
   \                     ??Procedure_Event_113:
   \   00000822   2D20               MOVS     R0,#+45
   \   00000824   2070               STRB     R0,[R4, #+0]
   \   00000826   3E00               MOVS     R6,R7
   3455                      }
   3456          
   3457                   }
   3458                   
   3459                   if  ((TypePrc->Type>ProcAnalogStart) && (TypePrc->Type<ProcAnalogStop))
   \                     ??Procedure_Event_112:
   \   00000828   2078               LDRB     R0,[R4, #+0]
   \   0000082A   3728               CMP      R0,#+55
   \   0000082C   0ED3               BCC      ??Procedure_Event_114
   \   0000082E   4028               CMP      R0,#+64
   \   00000830   0CD2               BCS      ??Procedure_Event_114
   3460                      { 
   3461                        if (TypePrc->Type+1<ProcAnalogStop) 
   \   00000832   401C               ADDS     R0,R0,#+1
   \   00000834   0004               LSLS     R0,R0,#+16
   \   00000836   000C               LSRS     R0,R0,#+16
   \   00000838   4028               CMP      R0,#+64
   \   0000083A   04D2               BCS      ??Procedure_Event_115
   3462                        {TypePrc->Type++;MenuPaintExecut=1;  } else {TypePrc->Type=ProcAnalogStart+1;MenuPaintExecut=1;  }
                                                                                         ^
Warning[Pe188]: enumerated type mixed with another type
   \   0000083C   2078               LDRB     R0,[R4, #+0]
   \   0000083E   401C               ADDS     R0,R0,#+1
   \   00000840   2070               STRB     R0,[R4, #+0]
   \   00000842   3E00               MOVS     R6,R7
   \   00000844   02E0               B        ??Procedure_Event_114
   \                     ??Procedure_Event_115:
   \   00000846   3720               MOVS     R0,#+55
   \   00000848   2070               STRB     R0,[R4, #+0]
   \   0000084A   3E00               MOVS     R6,R7
   3463                      }
   3464                   
   3465                   
   3466                   
   3467                   if ((TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg) )
   \                     ??Procedure_Event_114:
   \   0000084C   2078               LDRB     R0,[R4, #+0]
   \   0000084E   3828               CMP      R0,#+56
   \   00000850   01D0               BEQ      ??Procedure_Event_116
   \   00000852   3928               CMP      R0,#+57
   \   00000854   01D1               BNE      ??Procedure_Event_107
   3468                        {
   3469                          TypePrc->Tag.RegNr=1;
   \                     ??Procedure_Event_116:
   \   00000856   3800               MOVS     R0,R7
   \   00000858   2072               STRB     R0,[R4, #+8]
   3470                        }
   3471                   
   3472                   
   3473                 }
   3474                 
   3475                 
   3476                 /*
   3477                 if (TypePrc->Type==ProcStartTimer)
   3478                 if (Button("> ",2,46,18,11)==1)
   3479                 {
   3480                   if (TypePrc->Nr+1<NumberTimer) {TypePrc->Nr++;} else {TypePrc->Nr=0;}   
   3481                   
   3482                   MenuPaintExecut=1; 
   3483                 }
   3484                 */
   3485                 
   3486                 if (TypePrc->Type==ProcClock)
   \                     ??Procedure_Event_107:
   \   0000085A   2078               LDRB     R0,[R4, #+0]
   \   0000085C   2E28               CMP      R0,#+46
   \   0000085E   00D0               BEQ      .+4
   \   00000860   90E0               B        ??Procedure_Event_117
   3487                 {
   3488          
   3489                    txt[1]=0;
   \   00000862   0020               MOVS     R0,#+0
   \   00000864   6870               STRB     R0,[R5, #+1]
   3490                    txt[0]=30;
   \   00000866   1E20               MOVS     R0,#+30
   \   00000868   2870               STRB     R0,[R5, #+0]
   3491                    if (Button(txt,43,3,18,19)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   0000086A   82B0               SUB      SP,SP,#+8
   \   0000086C   1320               MOVS     R0,#+19
   \   0000086E   0090               STR      R0,[SP, #+0]
   \   00000870   1223               MOVS     R3,#+18
   \   00000872   0322               MOVS     R2,#+3
   \   00000874   2B21               MOVS     R1,#+43
   \   00000876   02A8               ADD      R0,SP,#+8
   \   00000878   ........           BL       Button
   \   0000087C   02B0               ADD      SP,SP,#+8
   \   0000087E   0128               CMP      R0,#+1
   \   00000880   23D1               BNE      ??Procedure_Event_118
   3492                    {
   3493                    
   3494                      if ((TypePrc->Tag.ClkPrcType==PrcMounth) && (TypePrc->Tag.ClkPrcVal<12)) 
   \   00000882   207A               LDRB     R0,[R4, #+8]
   \   00000884   0028               CMP      R0,#+0
   \   00000886   03D1               BNE      ??Procedure_Event_119
   \   00000888   0C28               CMP      R0,#+12
   \   0000088A   01D2               BCS      ??Procedure_Event_119
   3495                          {TypePrc->Tag.ClkPrcVal++;} 
   \   0000088C   401C               ADDS     R0,R0,#+1
   \   0000088E   2072               STRB     R0,[R4, #+8]
   3496                      if ((TypePrc->Tag.ClkPrcType==PrcDay) &&(TypePrc->Tag.ClkPrcVal<31)) 
   \                     ??Procedure_Event_119:
   \   00000890   207A               LDRB     R0,[R4, #+8]
   \   00000892   0128               CMP      R0,#+1
   \   00000894   03D1               BNE      ??Procedure_Event_120
   \   00000896   1F28               CMP      R0,#+31
   \   00000898   01D2               BCS      ??Procedure_Event_120
   3497                          {TypePrc->Tag.ClkPrcVal++;}
   \   0000089A   401C               ADDS     R0,R0,#+1
   \   0000089C   2072               STRB     R0,[R4, #+8]
   3498                      if ((TypePrc->Tag.ClkPrcType==PrcHour) &&(TypePrc->Tag.ClkPrcVal<23)) 
   \                     ??Procedure_Event_120:
   \   0000089E   207A               LDRB     R0,[R4, #+8]
   \   000008A0   0228               CMP      R0,#+2
   \   000008A2   03D1               BNE      ??Procedure_Event_121
   \   000008A4   1728               CMP      R0,#+23
   \   000008A6   01D2               BCS      ??Procedure_Event_121
   3499                         {TypePrc->Tag.ClkPrcVal++;} 
   \   000008A8   401C               ADDS     R0,R0,#+1
   \   000008AA   2072               STRB     R0,[R4, #+8]
   3500                      if ((TypePrc->Tag.ClkPrcType==PrcMinute) &&(TypePrc->Tag.ClkPrcVal<59)) 
   \                     ??Procedure_Event_121:
   \   000008AC   207A               LDRB     R0,[R4, #+8]
   \   000008AE   0328               CMP      R0,#+3
   \   000008B0   03D1               BNE      ??Procedure_Event_122
   \   000008B2   3B28               CMP      R0,#+59
   \   000008B4   01D2               BCS      ??Procedure_Event_122
   3501                          {TypePrc->Tag.ClkPrcVal++;} 
   \   000008B6   401C               ADDS     R0,R0,#+1
   \   000008B8   2072               STRB     R0,[R4, #+8]
   3502                      if ((TypePrc->Tag.ClkPrcType==PrcSecond) &&(TypePrc->Tag.ClkPrcVal<59)) 
   \                     ??Procedure_Event_122:
   \   000008BA   207A               LDRB     R0,[R4, #+8]
   \   000008BC   0428               CMP      R0,#+4
   \   000008BE   03D1               BNE      ??Procedure_Event_123
   \   000008C0   3B28               CMP      R0,#+59
   \   000008C2   01D2               BCS      ??Procedure_Event_123
   3503                          {TypePrc->Tag.ClkPrcVal++;}
   \   000008C4   401C               ADDS     R0,R0,#+1
   \   000008C6   2072               STRB     R0,[R4, #+8]
   3504                    
   3505                       
   3506                       
   3507                       
   3508                       MenuPaintExecut=1;  
   \                     ??Procedure_Event_123:
   \   000008C8   3E00               MOVS     R6,R7
   \                     ??Procedure_Event_118:
   \   000008CA   1F20               MOVS     R0,#+31
   \   000008CC   2870               STRB     R0,[R5, #+0]
   3509                    }
   3510              
   3511                    
   3512                    txt[0]=31;
   3513                    if  (Button(txt,2,3,18,19)==1)//(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000008CE   82B0               SUB      SP,SP,#+8
   \   000008D0   1320               MOVS     R0,#+19
   \   000008D2   0090               STR      R0,[SP, #+0]
   \   000008D4   1223               MOVS     R3,#+18
   \   000008D6   0322               MOVS     R2,#+3
   \   000008D8   0221               MOVS     R1,#+2
   \   000008DA   02A8               ADD      R0,SP,#+8
   \   000008DC   ........           BL       Button
   \   000008E0   02B0               ADD      SP,SP,#+8
   \   000008E2   0128               CMP      R0,#+1
   \   000008E4   32D1               BNE      ??Procedure_Event_124
   3514                    { 
   3515                      if (TypePrc->Tag.ClkPrcType==PrcMounth) if (TypePrc->Tag.ClkPrcVal>1)
   \   000008E6   207A               LDRB     R0,[R4, #+8]
   \   000008E8   0028               CMP      R0,#+0
   \   000008EA   06D1               BNE      ??Procedure_Event_125
   \   000008EC   0228               CMP      R0,#+2
   \   000008EE   02D3               BCC      ??Procedure_Event_126
   3516                          {TypePrc->Tag.ClkPrcVal--; } else {TypePrc->Tag.ClkPrcVal=12;}
   \   000008F0   401E               SUBS     R0,R0,#+1
   \   000008F2   2072               STRB     R0,[R4, #+8]
   \   000008F4   01E0               B        ??Procedure_Event_125
   \                     ??Procedure_Event_126:
   \   000008F6   0C20               MOVS     R0,#+12
   \   000008F8   2072               STRB     R0,[R4, #+8]
   3517                      if (TypePrc->Tag.ClkPrcType==PrcDay) if(TypePrc->Tag.ClkPrcVal>1) 
   \                     ??Procedure_Event_125:
   \   000008FA   207A               LDRB     R0,[R4, #+8]
   \   000008FC   0128               CMP      R0,#+1
   \   000008FE   06D1               BNE      ??Procedure_Event_127
   \   00000900   0228               CMP      R0,#+2
   \   00000902   02D3               BCC      ??Procedure_Event_128
   3518                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=31;}
   \   00000904   401E               SUBS     R0,R0,#+1
   \   00000906   2072               STRB     R0,[R4, #+8]
   \   00000908   01E0               B        ??Procedure_Event_127
   \                     ??Procedure_Event_128:
   \   0000090A   1F20               MOVS     R0,#+31
   \   0000090C   2072               STRB     R0,[R4, #+8]
   3519                      if (TypePrc->Tag.ClkPrcType==PrcHour) if(TypePrc->Tag.ClkPrcVal>0)
   \                     ??Procedure_Event_127:
   \   0000090E   207A               LDRB     R0,[R4, #+8]
   \   00000910   0228               CMP      R0,#+2
   \   00000912   06D1               BNE      ??Procedure_Event_129
   \   00000914   0028               CMP      R0,#+0
   \   00000916   02D0               BEQ      ??Procedure_Event_130
   3520                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=23;}
   \   00000918   401E               SUBS     R0,R0,#+1
   \   0000091A   2072               STRB     R0,[R4, #+8]
   \   0000091C   01E0               B        ??Procedure_Event_129
   \                     ??Procedure_Event_130:
   \   0000091E   1720               MOVS     R0,#+23
   \   00000920   2072               STRB     R0,[R4, #+8]
   3521                      if (TypePrc->Tag.ClkPrcType==PrcMinute) if(TypePrc->Tag.ClkPrcVal>0) 
   \                     ??Procedure_Event_129:
   \   00000922   207A               LDRB     R0,[R4, #+8]
   \   00000924   0328               CMP      R0,#+3
   \   00000926   06D1               BNE      ??Procedure_Event_131
   \   00000928   0028               CMP      R0,#+0
   \   0000092A   02D0               BEQ      ??Procedure_Event_132
   3522                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=59;}
   \   0000092C   401E               SUBS     R0,R0,#+1
   \   0000092E   2072               STRB     R0,[R4, #+8]
   \   00000930   01E0               B        ??Procedure_Event_131
   \                     ??Procedure_Event_132:
   \   00000932   3B20               MOVS     R0,#+59
   \   00000934   2072               STRB     R0,[R4, #+8]
   3523                      if (TypePrc->Tag.ClkPrcType==PrcSecond) if(TypePrc->Tag.ClkPrcVal>0) 
   \                     ??Procedure_Event_131:
   \   00000936   207A               LDRB     R0,[R4, #+8]
   \   00000938   0428               CMP      R0,#+4
   \   0000093A   06D1               BNE      ??Procedure_Event_133
   \   0000093C   0028               CMP      R0,#+0
   \   0000093E   02D0               BEQ      ??Procedure_Event_134
   3524                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=59;}
   \   00000940   401E               SUBS     R0,R0,#+1
   \   00000942   2072               STRB     R0,[R4, #+8]
   \   00000944   01E0               B        ??Procedure_Event_133
   \                     ??Procedure_Event_134:
   \   00000946   3B20               MOVS     R0,#+59
   \   00000948   2072               STRB     R0,[R4, #+8]
   3525                        
   3526                       MenuPaintExecut=1;  
   \                     ??Procedure_Event_133:
   \   0000094A   3E00               MOVS     R6,R7
   3527                      
   3528                    }
   3529               
   3530                    
   3531                   //przycisk zmiany typu procedury zegara (godzina, minuta,...)
   3532                   if (Button("> ",43,24,18,19)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??Procedure_Event_124:
   \   0000094C   82B0               SUB      SP,SP,#+8
   \   0000094E   1320               MOVS     R0,#+19
   \   00000950   0090               STR      R0,[SP, #+0]
   \   00000952   1223               MOVS     R3,#+18
   \   00000954   1822               MOVS     R2,#+24
   \   00000956   2B21               MOVS     R1,#+43
   \   00000958   7FA0               ADR      R0,??Procedure_Event_135  ;; 0x3E, 0x20, 0x00, 0x00
   \   0000095A   ........           BL       Button
   \   0000095E   02B0               ADD      SP,SP,#+8
   \   00000960   0128               CMP      R0,#+1
   \   00000962   0FD1               BNE      ??Procedure_Event_117
   3533                   {
   3534                     if (TypePrc->Tag.ClkPrcType<PrcSecond) 
   \   00000964   207A               LDRB     R0,[R4, #+8]
   \   00000966   0428               CMP      R0,#+4
   \   00000968   02D2               BCS      ??Procedure_Event_136
   3535                     {
   3536                       TypePrc->Tag.ClkPrcType++;
   \   0000096A   401C               ADDS     R0,R0,#+1
   \   0000096C   2072               STRB     R0,[R4, #+8]
   \   0000096E   01E0               B        ??Procedure_Event_137
   3537                     }else{
   3538                       TypePrc->Tag.ClkPrcType=PrcMounth;
   \                     ??Procedure_Event_136:
   \   00000970   0020               MOVS     R0,#+0
   \   00000972   2072               STRB     R0,[R4, #+8]
   3539                     }
   3540          
   3541                       TypePrc->Tag.ClkPrcVal=0; 
   \                     ??Procedure_Event_137:
   \   00000974   0020               MOVS     R0,#+0
   \   00000976   2072               STRB     R0,[R4, #+8]
   3542                       if ((TypePrc->Tag.ClkPrcType==PrcMounth) || (TypePrc->Tag.ClkPrcType==PrcDay)) TypePrc->Tag.ClkPrcVal=1; 
   \   00000978   01D0               BEQ      ??Procedure_Event_138
   \   0000097A   0128               CMP      R0,#+1
   \   0000097C   01D1               BNE      ??Procedure_Event_139
   \                     ??Procedure_Event_138:
   \   0000097E   3800               MOVS     R0,R7
   \   00000980   2072               STRB     R0,[R4, #+8]
   3543          
   3544          
   3545                     
   3546                     MenuPaintExecut=1; 
   \                     ??Procedure_Event_139:
   \   00000982   3E00               MOVS     R6,R7
   3547                     
   3548                   }
   3549                    
   3550                 }
   3551               
   3552                 if (TypePrc->Type==ProcTimerSet)
   \                     ??Procedure_Event_117:
   \   00000984   2078               LDRB     R0,[R4, #+0]
   \   00000986   2D28               CMP      R0,#+45
   \   00000988   64D1               BNE      ??Procedure_Event_140
   3553                 {  
   3554                   
   3555                    txt[1]=0;
   \   0000098A   0020               MOVS     R0,#+0
   \   0000098C   6870               STRB     R0,[R5, #+1]
   3556                    txt[0]=30;
   \   0000098E   1E20               MOVS     R0,#+30
   \   00000990   2870               STRB     R0,[R5, #+0]
   3557                    if ((Button(txt,33,3,19,19)) &&  ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) )//(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000992   82B0               SUB      SP,SP,#+8
   \   00000994   1320               MOVS     R0,#+19
   \   00000996   0090               STR      R0,[SP, #+0]
   \   00000998   0300               MOVS     R3,R0
   \   0000099A   0322               MOVS     R2,#+3
   \   0000099C   2121               MOVS     R1,#+33
   \   0000099E   02A8               ADD      R0,SP,#+8
   \   000009A0   ........           BL       Button
   \   000009A4   02B0               ADD      SP,SP,#+8
   \   000009A6   0028               CMP      R0,#+0
   \   000009A8   27D0               BEQ      ??Procedure_Event_141
   \   000009AA   6C48               LDR      R0,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   000009AC   03C8               LDM      R0!,{R0,R1}
   \   000009AE   0022               MOVS     R2,#+0
   \   000009B0   C830               ADDS     R0,R0,#+200
   \   000009B2   5141               ADCS     R1,R1,R2
   \   000009B4   0200               MOVS     R2,R0
   \   000009B6   0B00               MOVS     R3,R1
   \   000009B8   6948               LDR      R0,??Procedure_Event_135+0x8  ;; g_counter
   \   000009BA   03C8               LDM      R0!,{R0,R1}
   \   000009BC   8B42               CMP      R3,R1
   \   000009BE   0DD3               BCC      ??Procedure_Event_142
   \   000009C0   01D8               BHI      ??Procedure_Event_143
   \   000009C2   8242               CMP      R2,R0
   \   000009C4   0AD3               BCC      ??Procedure_Event_142
   \                     ??Procedure_Event_143:
   \   000009C6   6648               LDR      R0,??Procedure_Event_135+0x8  ;; g_counter
   \   000009C8   03C8               LDM      R0!,{R0,R1}
   \   000009CA   0200               MOVS     R2,R0
   \   000009CC   0B00               MOVS     R3,R1
   \   000009CE   6348               LDR      R0,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   000009D0   03C8               LDM      R0!,{R0,R1}
   \   000009D2   8B42               CMP      R3,R1
   \   000009D4   11D8               BHI      ??Procedure_Event_141
   \   000009D6   01D3               BCC      ??Procedure_Event_142
   \   000009D8   8242               CMP      R2,R0
   \   000009DA   0ED2               BCS      ??Procedure_Event_141
   3558                    {
   3559                      Touch_EventTime=g_counter;
   \                     ??Procedure_Event_142:
   \   000009DC   5F4A               LDR      R2,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   000009DE   6048               LDR      R0,??Procedure_Event_135+0x8  ;; g_counter
   \   000009E0   03C8               LDM      R0!,{R0,R1}
   \   000009E2   03C2               STM      R2!,{R0,R1}
   3560                      if (TypePrc->Tag.SetCounter<10000)  
   \   000009E4   A068               LDR      R0,[R4, #+8]
   \   000009E6   5F49               LDR      R1,??Procedure_Event_135+0xC  ;; 0x2710
   \   000009E8   8842               CMP      R0,R1
   \   000009EA   03D2               BCS      ??Procedure_Event_144
   3561                      { 
   3562                       TypePrc->Tag.SetCounter++;
   \   000009EC   A068               LDR      R0,[R4, #+8]
   \   000009EE   401C               ADDS     R0,R0,#+1
   \   000009F0   A060               STR      R0,[R4, #+8]
   \   000009F2   01E0               B        ??Procedure_Event_145
   3563                       
   3564                      }else {
   3565                       TypePrc->Tag.SetCounter=0; 
   \                     ??Procedure_Event_144:
   \   000009F4   0020               MOVS     R0,#+0
   \   000009F6   A060               STR      R0,[R4, #+8]
   3566                      }
   3567                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_145:
   \   000009F8   3E00               MOVS     R6,R7
   3568                    }
   3569                    
   3570                    txt[0]=31;
   \                     ??Procedure_Event_141:
   \   000009FA   1F20               MOVS     R0,#+31
   \   000009FC   2870               STRB     R0,[R5, #+0]
   3571                    if ((Button(txt,12,3,19,19)) && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter))) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000009FE   82B0               SUB      SP,SP,#+8
   \   00000A00   1320               MOVS     R0,#+19
   \   00000A02   0090               STR      R0,[SP, #+0]
   \   00000A04   0300               MOVS     R3,R0
   \   00000A06   0322               MOVS     R2,#+3
   \   00000A08   0C21               MOVS     R1,#+12
   \   00000A0A   02A8               ADD      R0,SP,#+8
   \   00000A0C   ........           BL       Button
   \   00000A10   02B0               ADD      SP,SP,#+8
   \   00000A12   0028               CMP      R0,#+0
   \   00000A14   1ED0               BEQ      ??Procedure_Event_140
   \   00000A16   5248               LDR      R0,??Procedure_Event_135+0x8  ;; g_counter
   \   00000A18   0CC8               LDM      R0!,{R2,R3}
   \   00000A1A   5048               LDR      R0,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   00000A1C   03C8               LDM      R0!,{R0,R1}
   \   00000A1E   0025               MOVS     R5,#+0
   \   00000A20   C830               ADDS     R0,R0,#+200
   \   00000A22   6941               ADCS     R1,R1,R5
   \   00000A24   9942               CMP      R1,R3
   \   00000A26   09D3               BCC      ??Procedure_Event_146
   \   00000A28   01D8               BHI      ??Procedure_Event_147
   \   00000A2A   9042               CMP      R0,R2
   \   00000A2C   06D3               BCC      ??Procedure_Event_146
   \                     ??Procedure_Event_147:
   \   00000A2E   4B48               LDR      R0,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   00000A30   03C8               LDM      R0!,{R0,R1}
   \   00000A32   8B42               CMP      R3,R1
   \   00000A34   0ED8               BHI      ??Procedure_Event_140
   \   00000A36   01D3               BCC      ??Procedure_Event_146
   \   00000A38   8242               CMP      R2,R0
   \   00000A3A   0BD2               BCS      ??Procedure_Event_140
   3572                    {
   3573                      Touch_EventTime=g_counter;
   \                     ??Procedure_Event_146:
   \   00000A3C   4748               LDR      R0,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   00000A3E   0CC0               STM      R0!,{R2,R3}
   3574                      if (TypePrc->Tag.SetCounter>0) 
   \   00000A40   A068               LDR      R0,[R4, #+8]
   \   00000A42   0028               CMP      R0,#+0
   \   00000A44   03D0               BEQ      ??Procedure_Event_148
   3575                      {
   3576                       TypePrc->Tag.SetCounter--;
   \   00000A46   A068               LDR      R0,[R4, #+8]
   \   00000A48   401E               SUBS     R0,R0,#+1
   \   00000A4A   A060               STR      R0,[R4, #+8]
   \   00000A4C   01E0               B        ??Procedure_Event_149
   3577                       
   3578                      }else{
   3579                        TypePrc->Tag.SetCounter=100000;
   \                     ??Procedure_Event_148:
   \   00000A4E   4648               LDR      R0,??Procedure_Event_135+0x10  ;; 0x186a0
   \   00000A50   A060               STR      R0,[R4, #+8]
   3580                      }
   3581                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_149:
   \   00000A52   3E00               MOVS     R6,R7
   3582                    }
   3583                 }
   3584                 
   3585                        //zmiana numeru procedur Dnia
   3586                 if (TypePrc->Type==ProcDay)
   \                     ??Procedure_Event_140:
   \   00000A54   2078               LDRB     R0,[R4, #+0]
   \   00000A56   2F28               CMP      R0,#+47
   \   00000A58   29D1               BNE      ??Procedure_Event_150
   3587                 {  
   3588          
   3589                    
   3590                    if (Button("> ",43,25,18,18)==1) 
   \   00000A5A   82B0               SUB      SP,SP,#+8
   \   00000A5C   1220               MOVS     R0,#+18
   \   00000A5E   0090               STR      R0,[SP, #+0]
   \   00000A60   0300               MOVS     R3,R0
   \   00000A62   1922               MOVS     R2,#+25
   \   00000A64   2B21               MOVS     R1,#+43
   \   00000A66   3CA0               ADR      R0,??Procedure_Event_135  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000A68   ........           BL       Button
   \   00000A6C   02B0               ADD      SP,SP,#+8
   \   00000A6E   0128               CMP      R0,#+1
   \   00000A70   08D1               BNE      ??Procedure_Event_151
   3591                    {
   3592            
   3593                      if (TypePrc->Tag.DayOfWeek<Sunday) {TypePrc->Tag.DayOfWeek++;} else {TypePrc->Tag.DayOfWeek=Monday;}
   \   00000A72   207A               LDRB     R0,[R4, #+8]
   \   00000A74   0728               CMP      R0,#+7
   \   00000A76   02D2               BCS      ??Procedure_Event_152
   \   00000A78   401C               ADDS     R0,R0,#+1
   \   00000A7A   2072               STRB     R0,[R4, #+8]
   \   00000A7C   01E0               B        ??Procedure_Event_153
   \                     ??Procedure_Event_152:
   \   00000A7E   3800               MOVS     R0,R7
   \   00000A80   2072               STRB     R0,[R4, #+8]
   3594                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_153:
   \   00000A82   3E00               MOVS     R6,R7
   3595                    }
   3596              
   3597                    if (Button("< ",2,25,18,18)==1) 
   \                     ??Procedure_Event_151:
   \   00000A84   82B0               SUB      SP,SP,#+8
   \   00000A86   1220               MOVS     R0,#+18
   \   00000A88   0090               STR      R0,[SP, #+0]
   \   00000A8A   0300               MOVS     R3,R0
   \   00000A8C   1922               MOVS     R2,#+25
   \   00000A8E   0221               MOVS     R1,#+2
   \   00000A90   36A0               ADR      R0,??Procedure_Event_135+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000A92   ........           BL       Button
   \   00000A96   02B0               ADD      SP,SP,#+8
   \   00000A98   0128               CMP      R0,#+1
   \   00000A9A   08D1               BNE      ??Procedure_Event_150
   3598                    {
   3599                      
   3600                        if (TypePrc->Tag.DayOfWeek>Monday) {TypePrc->Tag.DayOfWeek--;} else {TypePrc->Tag.DayOfWeek=Sunday;}
   \   00000A9C   207A               LDRB     R0,[R4, #+8]
   \   00000A9E   0228               CMP      R0,#+2
   \   00000AA0   02D3               BCC      ??Procedure_Event_154
   \   00000AA2   401E               SUBS     R0,R0,#+1
   \   00000AA4   2072               STRB     R0,[R4, #+8]
   \   00000AA6   01E0               B        ??Procedure_Event_155
   \                     ??Procedure_Event_154:
   \   00000AA8   0720               MOVS     R0,#+7
   \   00000AAA   2072               STRB     R0,[R4, #+8]
   3601          
   3602                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_155:
   \   00000AAC   3E00               MOVS     R6,R7
   3603                    }
   3604                 }
   3605                 
   3606                 
   3607                  if (TypePrc->Type==ProcConstAnal) 
   \                     ??Procedure_Event_150:
   \   00000AAE   2078               LDRB     R0,[R4, #+0]
   \   00000AB0   3728               CMP      R0,#+55
   \   00000AB2   21D1               BNE      ??Procedure_Event_156
   3608                 {
   3609                         if  (Button(Speech[g_leng].Zmiana,10,16,40,18)==1)
   \   00000AB4   82B0               SUB      SP,SP,#+8
   \   00000AB6   1220               MOVS     R0,#+18
   \   00000AB8   0090               STR      R0,[SP, #+0]
   \   00000ABA   2823               MOVS     R3,#+40
   \   00000ABC   1022               MOVS     R2,#+16
   \   00000ABE   0A21               MOVS     R1,#+10
   \   00000AC0   8C46               MOV      R12,R1
   \   00000AC2   2B49               LDR      R1,??Procedure_Event_135+0x18  ;; 0x50a
   \   00000AC4   2B48               LDR      R0,??Procedure_Event_135+0x1C  ;; g_leng
   \   00000AC6   0068               LDR      R0,[R0, #+0]
   \   00000AC8   9625               MOVS     R5,#+150
   \   00000ACA   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000ACC   6843               MULS     R0,R5,R0
   \   00000ACE   2A4D               LDR      R5,??Procedure_Event_135+0x20  ;; Speech
   \   00000AD0   2818               ADDS     R0,R5,R0
   \   00000AD2   4018               ADDS     R0,R0,R1
   \   00000AD4   6146               MOV      R1,R12
   \   00000AD6   ........           BL       Button
   \   00000ADA   02B0               ADD      SP,SP,#+8
   \   00000ADC   0128               CMP      R0,#+1
   \   00000ADE   0BD1               BNE      ??Procedure_Event_156
   3610                         {
   3611                           ValueChange= &(TypePrc->Tag.ConstAnValue);
   \   00000AE0   2648               LDR      R0,??Procedure_Event_135+0x24  ;; TextToChangeLength + 88
   \   00000AE2   2100               MOVS     R1,R4
   \   00000AE4   0831               ADDS     R1,R1,#+8
   \   00000AE6   0160               STR      R1,[R0, #+0]
   3612                           MenuLevel=(MenuLevel*10+1);
   \   00000AE8   2548               LDR      R0,??Procedure_Event_135+0x28  ;; TextToChangeLength + 72
   \   00000AEA   2549               LDR      R1,??Procedure_Event_135+0x28  ;; TextToChangeLength + 72
   \   00000AEC   0968               LDR      R1,[R1, #+0]
   \   00000AEE   0A22               MOVS     R2,#+10
   \   00000AF0   5143               MULS     R1,R2,R1
   \   00000AF2   491C               ADDS     R1,R1,#+1
   \   00000AF4   0160               STR      R1,[R0, #+0]
   3613                           MenuPaintExecut=1;
   \   00000AF6   3E00               MOVS     R6,R7
   3614                         }
   3615                 }
   3616                 
   3617                 
   3618                  if ((TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg)    )
   \                     ??Procedure_Event_156:
   \   00000AF8   2078               LDRB     R0,[R4, #+0]
   \   00000AFA   3828               CMP      R0,#+56
   \   00000AFC   01D0               BEQ      ??Procedure_Event_157
   \   00000AFE   3928               CMP      R0,#+57
   \   00000B00   23D1               BNE      ??Procedure_Event_7
   3619                 {
   3620                 
   3621                      if (Button("> ",43,5,18,18)==1) 
   \                     ??Procedure_Event_157:
   \   00000B02   82B0               SUB      SP,SP,#+8
   \   00000B04   1220               MOVS     R0,#+18
   \   00000B06   0090               STR      R0,[SP, #+0]
   \   00000B08   0300               MOVS     R3,R0
   \   00000B0A   0522               MOVS     R2,#+5
   \   00000B0C   2B21               MOVS     R1,#+43
   \   00000B0E   12A0               ADR      R0,??Procedure_Event_135  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000B10   ........           BL       Button
   \   00000B14   02B0               ADD      SP,SP,#+8
   \   00000B16   0128               CMP      R0,#+1
   \   00000B18   05D1               BNE      ??Procedure_Event_158
   3622                      {
   3623                        if (TypePrc->Tag.RegNr<NumberReg-1) TypePrc->Tag.RegNr++;
   \   00000B1A   207A               LDRB     R0,[R4, #+8]
   \   00000B1C   0928               CMP      R0,#+9
   \   00000B1E   01D2               BCS      ??Procedure_Event_159
   \   00000B20   401C               ADDS     R0,R0,#+1
   \   00000B22   2072               STRB     R0,[R4, #+8]
   3624                        MenuPaintExecut=1;
   \                     ??Procedure_Event_159:
   \   00000B24   3E00               MOVS     R6,R7
   3625                      }
   3626                      
   3627                      if (Button("< ",2,5,18,18)==1)
   \                     ??Procedure_Event_158:
   \   00000B26   82B0               SUB      SP,SP,#+8
   \   00000B28   1220               MOVS     R0,#+18
   \   00000B2A   0090               STR      R0,[SP, #+0]
   \   00000B2C   0300               MOVS     R3,R0
   \   00000B2E   0522               MOVS     R2,#+5
   \   00000B30   0221               MOVS     R1,#+2
   \   00000B32   0EA0               ADR      R0,??Procedure_Event_135+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000B34   ........           BL       Button
   \   00000B38   02B0               ADD      SP,SP,#+8
   \   00000B3A   0128               CMP      R0,#+1
   \   00000B3C   05D1               BNE      ??Procedure_Event_7
   3628                      {
   3629                        if (TypePrc->Tag.RegNr>1) TypePrc->Tag.RegNr--;
   \   00000B3E   207A               LDRB     R0,[R4, #+8]
   \   00000B40   0228               CMP      R0,#+2
   \   00000B42   01D3               BCC      ??Procedure_Event_160
   \   00000B44   401E               SUBS     R0,R0,#+1
   \   00000B46   2072               STRB     R0,[R4, #+8]
   3630                        MenuPaintExecut=1;
   \                     ??Procedure_Event_160:
   \   00000B48   3E00               MOVS     R6,R7
   3631                      }
   3632                 }
   3633                 
   3634          }
   3635                 
   3636            
   3637                 if ((X_up>0) && (Y_up>0))   exit=0;                 
   3638                  
   3639                 
   3640                 if (MenuPaintExecut) MenuPaint();
   \                     ??Procedure_Event_7:
   \   00000B4A   002E               CMP      R6,#+0
   \   00000B4C   01D0               BEQ      ??Procedure_Event_161
   \   00000B4E   ........           BL       MenuPaint
   3641          
   3642                }//________________________________________________________________________
   \                     ??Procedure_Event_161:
   \   00000B52   FEBC               POP      {R1-R7}
   \   00000B54   01BC               POP      {R0}
   \   00000B56   0047               BX       R0               ;; return
   \                     ??Procedure_Event_135:
   \   00000B58   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000B5C   ........           DC32     TextToChangeLength + 56
   \   00000B60   ........           DC32     g_counter
   \   00000B64   10270000           DC32     0x2710
   \   00000B68   A0860100           DC32     0x186a0
   \   00000B6C   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000B70   0A050000           DC32     0x50a
   \   00000B74   ........           DC32     g_leng
   \   00000B78   ........           DC32     Speech
   \   00000B7C   ........           DC32     TextToChangeLength + 88
   \   00000B80   ........           DC32     TextToChangeLength + 72
   3643                   
   3644          
   3645          
   3646            

   \                                 In section .bss, align 4
   3647          char ValueChangeTxtTmp[8]; 
   3648          char VCTT_ill=0;   //iloæ znaków napisu ValueChangeTxtTmp
   \                     VCTT_ill:
   \   00000000                      DS8 1
   3649          char VCTT_point_flag=0;  //pozycja kropki
   \                     VCTT_point_flag:
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \                     ValueChangeTxtTmp:
   \   00000004                      DS8 8
   3650          

   \                                 In section Debug.txt, align 4, keep-with-next
   3651          void ValueChange_Paint( short int *ValToChange)
   3652                { 
   \                     ValueChange_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   3653                  List_Paint(Speech[g_leng].Wartosc,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   58A0               ADR      R0,??ValueChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   5548               LDR      R0,??ValueChange_Paint_0+0x4  ;; 0x5dc
   \   0000001E   564C               LDR      R4,??ValueChange_Paint_0+0x8  ;; g_leng
   \   00000020   2468               LDR      R4,[R4, #+0]
   \   00000022   9625               MOVS     R5,#+150
   \   00000024   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000026   6C43               MULS     R4,R5,R4
   \   00000028   544D               LDR      R5,??ValueChange_Paint_0+0xC  ;; Speech
   \   0000002A   2C19               ADDS     R4,R5,R4
   \   0000002C   2018               ADDS     R0,R4,R0
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   3654                  
   3655             
   3656                  if (VCTT_ill==0) for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   00000034   524D               LDR      R5,??ValueChange_Paint_0+0x10  ;; VCTT_ill
   \   00000036   2878               LDRB     R0,[R5, #+0]
   \   00000038   0028               CMP      R0,#+0
   \   0000003A   0AD1               BNE      ??ValueChange_Paint_1
   \   0000003C   0024               MOVS     R4,#+0
   \   0000003E   2200               MOVS     R2,R4
   \   00000040   04E0               B        ??ValueChange_Paint_2
   \                     ??ValueChange_Paint_3:
   \   00000042   6918               ADDS     R1,R5,R1
   \   00000044   0A71               STRB     R2,[R1, #+4]
   \   00000046   401C               ADDS     R0,R0,#+1
   \   00000048   0006               LSLS     R0,R0,#+24
   \   0000004A   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Paint_2:
   \   0000004C   0100               MOVS     R1,R0
   \   0000004E   0729               CMP      R1,#+7
   \   00000050   F7D3               BCC      ??ValueChange_Paint_3
   3657                  
   3658                  H_line(11,106,40,1);
   \                     ??ValueChange_Paint_1:
   \   00000052   0123               MOVS     R3,#+1
   \   00000054   2822               MOVS     R2,#+40
   \   00000056   6A21               MOVS     R1,#+106
   \   00000058   0B20               MOVS     R0,#+11
   \   0000005A   ........           BL       H_line
   3659                  H_line(11,96,40,1);
   \   0000005E   0123               MOVS     R3,#+1
   \   00000060   2822               MOVS     R2,#+40
   \   00000062   6021               MOVS     R1,#+96
   \   00000064   0B20               MOVS     R0,#+11
   \   00000066   ........           BL       H_line
   3660                  V_line(10,97,9,1); 
   \   0000006A   0123               MOVS     R3,#+1
   \   0000006C   0922               MOVS     R2,#+9
   \   0000006E   6121               MOVS     R1,#+97
   \   00000070   0A20               MOVS     R0,#+10
   \   00000072   ........           BL       V_line
   3661                  V_line(51,97,9,1); 
   \   00000076   0123               MOVS     R3,#+1
   \   00000078   0922               MOVS     R2,#+9
   \   0000007A   6121               MOVS     R1,#+97
   \   0000007C   3320               MOVS     R0,#+51
   \   0000007E   ........           BL       V_line
   3662          
   3663                  
   3664                  //char txt[7];
   3665                  
   3666                 
   3667                  //tmpVal=*ValueChange;
   3668                  //char dl=sIntToStr(tmpVal, txt);
   3669                  
   3670                  Label(ValueChangeTxtTmp,1,50,97,7,38,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000082   82B0               SUB      SP,SP,#+8
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   0090               STR      R0,[SP, #+0]
   \   00000088   8021               MOVS     R1,#+128
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   2621               MOVS     R1,#+38
   \   0000008E   0720               MOVS     R0,#+7
   \   00000090   03B4               PUSH     {R0,R1}
   \   00000092   6123               MOVS     R3,#+97
   \   00000094   3222               MOVS     R2,#+50
   \   00000096   0121               MOVS     R1,#+1
   \   00000098   2D1D               ADDS     R5,R5,#+4
   \   0000009A   2800               MOVS     R0,R5
   \   0000009C   ........           BL       Label
   \   000000A0   06B0               ADD      SP,SP,#+24
   3671                                
   3672          
   3673                  
   3674                  char txt[2];
   3675                  txt[1]=0;
   \   000000A2   0024               MOVS     R4,#+0
   \   000000A4   6846               MOV      R0,SP
   \   000000A6   2100               MOVS     R1,R4
   \   000000A8   4170               STRB     R1,[R0, #+1]
   3676                  char ind=0;
   \   000000AA   2700               MOVS     R7,R4
   3677                  for (char j=0; j<3; j++)
   \   000000AC   2500               MOVS     R5,R4
   \   000000AE   25E0               B        ??ValueChange_Paint_4
   3678                    for (char i=0; i<3; i++)
   3679                    {
   3680                      ind++;
   \                     ??ValueChange_Paint_5:
   \   000000B0   7F1C               ADDS     R7,R7,#+1
   \   000000B2   3F06               LSLS     R7,R7,#+24
   \   000000B4   3F0E               LSRS     R7,R7,#+24
   3681                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   000000B6   0122               MOVS     R2,#+1
   \   000000B8   6946               MOV      R1,SP
   \   000000BA   3800               MOVS     R0,R7
   \   000000BC   ........           BL       CharToStr
   3682                      Button(txt,2+20*i,76-(19*j),18,17);
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   1120               MOVS     R0,#+17
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   1223               MOVS     R3,#+18
   \   000000C8   4C20               MOVS     R0,#+76
   \   000000CA   2900               MOVS     R1,R5
   \   000000CC   1322               MOVS     R2,#+19
   \   000000CE   5143               MULS     R1,R2,R1
   \   000000D0   421A               SUBS     R2,R0,R1
   \   000000D2   1206               LSLS     R2,R2,#+24
   \   000000D4   120E               LSRS     R2,R2,#+24
   \   000000D6   3100               MOVS     R1,R6
   \   000000D8   1420               MOVS     R0,#+20
   \   000000DA   4143               MULS     R1,R0,R1
   \   000000DC   891C               ADDS     R1,R1,#+2
   \   000000DE   0906               LSLS     R1,R1,#+24
   \   000000E0   090E               LSRS     R1,R1,#+24
   \   000000E2   02A8               ADD      R0,SP,#+8
   \   000000E4   ........           BL       Button
   \   000000E8   02B0               ADD      SP,SP,#+8
   3683                    }
   \   000000EA   761C               ADDS     R6,R6,#+1
   \   000000EC   3606               LSLS     R6,R6,#+24
   \   000000EE   360E               LSRS     R6,R6,#+24
   \                     ??ValueChange_Paint_6:
   \   000000F0   3000               MOVS     R0,R6
   \   000000F2   0328               CMP      R0,#+3
   \   000000F4   DCD3               BCC      ??ValueChange_Paint_5
   \   000000F6   6D1C               ADDS     R5,R5,#+1
   \   000000F8   2D06               LSLS     R5,R5,#+24
   \   000000FA   2D0E               LSRS     R5,R5,#+24
   \                     ??ValueChange_Paint_4:
   \   000000FC   2800               MOVS     R0,R5
   \   000000FE   0328               CMP      R0,#+3
   \   00000100   01D2               BCS      ??ValueChange_Paint_7
   \   00000102   2600               MOVS     R6,R4
   \   00000104   F4E7               B        ??ValueChange_Paint_6
   3684                  Button(".",2+20*0,76-(19*3),18,17);
   \                     ??ValueChange_Paint_7:
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   1120               MOVS     R0,#+17
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   1223               MOVS     R3,#+18
   \   0000010E   1322               MOVS     R2,#+19
   \   00000110   0221               MOVS     R1,#+2
   \   00000112   1CA0               ADR      R0,??ValueChange_Paint_0+0x14  ;; 0x2E, 0x00, 0x00, 0x00
   \   00000114   ........           BL       Button
   \   00000118   02B0               ADD      SP,SP,#+8
   3685                  Button("0",2+20*1,76-(19*3),18,17);
   \   0000011A   82B0               SUB      SP,SP,#+8
   \   0000011C   1120               MOVS     R0,#+17
   \   0000011E   0090               STR      R0,[SP, #+0]
   \   00000120   1223               MOVS     R3,#+18
   \   00000122   1322               MOVS     R2,#+19
   \   00000124   1621               MOVS     R1,#+22
   \   00000126   18A0               ADR      R0,??ValueChange_Paint_0+0x18  ;; 0x30, 0x00, 0x00, 0x00
   \   00000128   ........           BL       Button
   \   0000012C   02B0               ADD      SP,SP,#+8
   3686                  Button("-",2+20*2,76-(19*3),18,17);
   \   0000012E   82B0               SUB      SP,SP,#+8
   \   00000130   1120               MOVS     R0,#+17
   \   00000132   0090               STR      R0,[SP, #+0]
   \   00000134   1223               MOVS     R3,#+18
   \   00000136   1322               MOVS     R2,#+19
   \   00000138   2A21               MOVS     R1,#+42
   \   0000013A   14A0               ADR      R0,??ValueChange_Paint_0+0x1C  ;; 0x2D, 0x00, 0x00, 0x00
   \   0000013C   ........           BL       Button
   \   00000140   02B0               ADD      SP,SP,#+8
   3687                  
   3688                  Button("Ok ",22,4,38,13);
   \   00000142   82B0               SUB      SP,SP,#+8
   \   00000144   0D20               MOVS     R0,#+13
   \   00000146   0090               STR      R0,[SP, #+0]
   \   00000148   2623               MOVS     R3,#+38
   \   0000014A   0422               MOVS     R2,#+4
   \   0000014C   1621               MOVS     R1,#+22
   \   0000014E   10A0               ADR      R0,??ValueChange_Paint_0+0x20  ;; "Ok "
   \   00000150   ........           BL       Button
   \   00000154   02B0               ADD      SP,SP,#+8
   3689                  Button("C ",3,4,17,13);
   \   00000156   82B0               SUB      SP,SP,#+8
   \   00000158   0D20               MOVS     R0,#+13
   \   0000015A   0090               STR      R0,[SP, #+0]
   \   0000015C   1123               MOVS     R3,#+17
   \   0000015E   0422               MOVS     R2,#+4
   \   00000160   0321               MOVS     R1,#+3
   \   00000162   0CA0               ADR      R0,??ValueChange_Paint_0+0x24  ;; 0x43, 0x20, 0x00, 0x00
   \   00000164   ........           BL       Button
   \   00000168   02B0               ADD      SP,SP,#+8
   3690                }
   \   0000016A   F8BC               POP      {R3-R7}
   \   0000016C   01BC               POP      {R0}
   \   0000016E   0047               BX       R0               ;; return
   \                     ??ValueChange_Paint_0:
   \   00000170   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000174   DC050000           DC32     0x5dc
   \   00000178   ........           DC32     g_leng
   \   0000017C   ........           DC32     Speech
   \   00000180   ........           DC32     VCTT_ill
   \   00000184   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   00000188   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   0000018C   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000190   4F6B2000           DC8      "Ok "
   \   00000194   43200000           DC8      0x43, 0x20, 0x00, 0x00
   3691          
   3692          
   3693          

   \                                 In section Debug.txt, align 4, keep-with-next
   3694          void ValueChange_Evant( short int *ValToChange)
   3695                { 
   \                     ValueChange_Evant:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   0024               MOVS     R4,#+0
   3696                 int ValueTmp=0; 
   3697                 char ind=0;
   \   00000006   2700               MOVS     R7,R4
   3698                 char txt[2];
   3699                 char Refresh=0;
   \   00000008   6846               MOV      R0,SP
   \   0000000A   2100               MOVS     R1,R4
   \   0000000C   4170               STRB     R1,[R0, #+1]
   3700                 char MaxChar;
   3701                 
   3702          
   3703                 txt[1]=0;
   \   0000000E   02A8               ADD      R0,SP,#+8
   \   00000010   4170               STRB     R1,[R0, #+1]
   3704                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000012   BE48               LDR      R0,??ValueChange_Evant_0  ;; X_up
   \   00000014   405E               LDRSH    R0,[R0, R1]
   \   00000016   2F28               CMP      R0,#+47
   \   00000018   21DB               BLT      ??ValueChange_Evant_1
   \   0000001A   3F28               CMP      R0,#+63
   \   0000001C   1FDA               BGE      ??ValueChange_Evant_1
   \   0000001E   BC48               LDR      R0,??ValueChange_Evant_0+0x4  ;; Y_up
   \   00000020   405E               LDRSH    R0,[R0, R1]
   \   00000022   7128               CMP      R0,#+113
   \   00000024   1BDB               BLT      ??ValueChange_Evant_1
   \   00000026   7F28               CMP      R0,#+127
   \   00000028   19DA               BGE      ??ValueChange_Evant_1
   3705                  {
   3706                       for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   0000002A   0800               MOVS     R0,R1
   \   0000002C   06E0               B        ??ValueChange_Evant_2
   \                     ??ValueChange_Evant_3:
   \   0000002E   B94A               LDR      R2,??ValueChange_Evant_0+0x8  ;; VCTT_ill
   \   00000030   5118               ADDS     R1,R2,R1
   \   00000032   2200               MOVS     R2,R4
   \   00000034   0A71               STRB     R2,[R1, #+4]
   \   00000036   401C               ADDS     R0,R0,#+1
   \   00000038   0006               LSLS     R0,R0,#+24
   \   0000003A   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Evant_2:
   \   0000003C   0100               MOVS     R1,R0
   \   0000003E   0729               CMP      R1,#+7
   \   00000040   F5D3               BCC      ??ValueChange_Evant_3
   3707                          ValueTmp=0;
   3708                          VCTT_ill=0;
   \   00000042   B44D               LDR      R5,??ValueChange_Evant_0+0x8  ;; VCTT_ill
   \   00000044   2000               MOVS     R0,R4
   \   00000046   2870               STRB     R0,[R5, #+0]
   3709                          VCTT_point_flag=0;
   \   00000048   6870               STRB     R0,[R5, #+1]
   3710                    
   3711                      MenuLevel=(MenuLevel/10);
   \   0000004A   B34E               LDR      R6,??ValueChange_Evant_0+0xC  ;; TextToChangeLength
   \   0000004C   B06C               LDR      R0,[R6, #+72]
   \   0000004E   0A21               MOVS     R1,#+10
   \   00000050   ........           BL       __aeabi_idivmod
   \   00000054   B064               STR      R0,[R6, #+72]
   3712                      Refresh=1;
   \   00000056   6846               MOV      R0,SP
   \   00000058   0121               MOVS     R1,#+1
   \   0000005A   4170               STRB     R1,[R0, #+1]
   \   0000005C   4BE1               B        ??ValueChange_Evant_4
   3713                  } else {
   3714                    
   3715                           
   3716                    if (ValueChangeTxtTmp[0]=='-')
   \                     ??ValueChange_Evant_1:
   \   0000005E   AD4D               LDR      R5,??ValueChange_Evant_0+0x8  ;; VCTT_ill
   \   00000060   6878               LDRB     R0,[R5, #+1]
   \   00000062   2979               LDRB     R1,[R5, #+4]
   \   00000064   2D29               CMP      R1,#+45
   \   00000066   08D1               BNE      ??ValueChange_Evant_5
   3717                    {
   3718                      if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   6846               MOV      R0,SP
   \   0000006C   02D0               BEQ      ??ValueChange_Evant_6
   \   0000006E   0721               MOVS     R1,#+7
   \   00000070   0170               STRB     R1,[R0, #+0]
   \   00000072   0AE0               B        ??ValueChange_Evant_7
   \                     ??ValueChange_Evant_6:
   \   00000074   0521               MOVS     R1,#+5
   \   00000076   0170               STRB     R1,[R0, #+0]
   \   00000078   07E0               B        ??ValueChange_Evant_7
   3719                    }else{
   3720                      if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   \                     ??ValueChange_Evant_5:
   \   0000007A   0028               CMP      R0,#+0
   \   0000007C   6846               MOV      R0,SP
   \   0000007E   02D0               BEQ      ??ValueChange_Evant_8
   \   00000080   0621               MOVS     R1,#+6
   \   00000082   0170               STRB     R1,[R0, #+0]
   \   00000084   01E0               B        ??ValueChange_Evant_7
   \                     ??ValueChange_Evant_8:
   \   00000086   0421               MOVS     R1,#+4
   \   00000088   0170               STRB     R1,[R0, #+0]
   3721                    }
   3722                   
   3723                       
   3724                    for (char j=0; j<3; j++)
   \                     ??ValueChange_Evant_7:
   \   0000008A   2000               MOVS     R0,R4
   \   0000008C   0190               STR      R0,[SP, #+4]
   \   0000008E   40E0               B        ??ValueChange_Evant_9
   3725                    {
   3726                    for (char i=0; i<3; i++)
   3727                    {
   3728                      ind++;
   \                     ??ValueChange_Evant_10:
   \   00000090   7F1C               ADDS     R7,R7,#+1
   \   00000092   3F06               LSLS     R7,R7,#+24
   \   00000094   3F0E               LSRS     R7,R7,#+24
   3729                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   00000096   0122               MOVS     R2,#+1
   \   00000098   02A9               ADD      R1,SP,#+8
   \   0000009A   3800               MOVS     R0,R7
   \   0000009C   ........           BL       CharToStr
   3730                      if ((Button(txt,2+20*i,76-(19*j),18,17)==1) && (VCTT_ill<MaxChar) && ((VCTT_point_flag==0) || (VCTT_ill<=VCTT_point_flag+1) ) ){ValueChangeTxtTmp[VCTT_ill++]=48+ind;   Refresh=1;}
   \   000000A0   82B0               SUB      SP,SP,#+8
   \   000000A2   1120               MOVS     R0,#+17
   \   000000A4   0090               STR      R0,[SP, #+0]
   \   000000A6   1223               MOVS     R3,#+18
   \   000000A8   4C20               MOVS     R0,#+76
   \   000000AA   0399               LDR      R1,[SP, #+12]
   \   000000AC   0906               LSLS     R1,R1,#+24
   \   000000AE   090E               LSRS     R1,R1,#+24
   \   000000B0   1322               MOVS     R2,#+19
   \   000000B2   5143               MULS     R1,R2,R1
   \   000000B4   421A               SUBS     R2,R0,R1
   \   000000B6   1206               LSLS     R2,R2,#+24
   \   000000B8   120E               LSRS     R2,R2,#+24
   \   000000BA   3100               MOVS     R1,R6
   \   000000BC   1420               MOVS     R0,#+20
   \   000000BE   4143               MULS     R1,R0,R1
   \   000000C0   891C               ADDS     R1,R1,#+2
   \   000000C2   0906               LSLS     R1,R1,#+24
   \   000000C4   090E               LSRS     R1,R1,#+24
   \   000000C6   04A8               ADD      R0,SP,#+16
   \   000000C8   ........           BL       Button
   \   000000CC   02B0               ADD      SP,SP,#+8
   \   000000CE   0128               CMP      R0,#+1
   \   000000D0   14D1               BNE      ??ValueChange_Evant_11
   \   000000D2   2878               LDRB     R0,[R5, #+0]
   \   000000D4   6946               MOV      R1,SP
   \   000000D6   0978               LDRB     R1,[R1, #+0]
   \   000000D8   8842               CMP      R0,R1
   \   000000DA   0FD2               BCS      ??ValueChange_Evant_11
   \   000000DC   0100               MOVS     R1,R0
   \   000000DE   6A78               LDRB     R2,[R5, #+1]
   \   000000E0   002A               CMP      R2,#+0
   \   000000E2   02D0               BEQ      ??ValueChange_Evant_12
   \   000000E4   521C               ADDS     R2,R2,#+1
   \   000000E6   8A42               CMP      R2,R1
   \   000000E8   08DB               BLT      ??ValueChange_Evant_11
   \                     ??ValueChange_Evant_12:
   \   000000EA   6918               ADDS     R1,R5,R1
   \   000000EC   3A00               MOVS     R2,R7
   \   000000EE   3032               ADDS     R2,R2,#+48
   \   000000F0   0A71               STRB     R2,[R1, #+4]
   \   000000F2   401C               ADDS     R0,R0,#+1
   \   000000F4   2870               STRB     R0,[R5, #+0]
   \   000000F6   6846               MOV      R0,SP
   \   000000F8   0121               MOVS     R1,#+1
   \   000000FA   4170               STRB     R1,[R0, #+1]
   3731                      
   3732                     }
   \                     ??ValueChange_Evant_11:
   \   000000FC   761C               ADDS     R6,R6,#+1
   \   000000FE   3606               LSLS     R6,R6,#+24
   \   00000100   360E               LSRS     R6,R6,#+24
   \                     ??ValueChange_Evant_13:
   \   00000102   3000               MOVS     R0,R6
   \   00000104   0328               CMP      R0,#+3
   \   00000106   C3D3               BCC      ??ValueChange_Evant_10
   \   00000108   0198               LDR      R0,[SP, #+4]
   \   0000010A   401C               ADDS     R0,R0,#+1
   \   0000010C   0006               LSLS     R0,R0,#+24
   \   0000010E   000E               LSRS     R0,R0,#+24
   \   00000110   0190               STR      R0,[SP, #+4]
   \                     ??ValueChange_Evant_9:
   \   00000112   0198               LDR      R0,[SP, #+4]
   \   00000114   0006               LSLS     R0,R0,#+24
   \   00000116   000E               LSRS     R0,R0,#+24
   \   00000118   0328               CMP      R0,#+3
   \   0000011A   01D2               BCS      ??ValueChange_Evant_14
   \   0000011C   2600               MOVS     R6,R4
   \   0000011E   F0E7               B        ??ValueChange_Evant_13
   3733                    }
   3734                      
   3735                      
   3736                      if ((Button(".",2+20*0,76-(19*3),18,17)==1) && (VCTT_ill<MaxChar+2) && (VCTT_point_flag==0)) 
   \                     ??ValueChange_Evant_14:
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   1120               MOVS     R0,#+17
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   1223               MOVS     R3,#+18
   \   00000128   1322               MOVS     R2,#+19
   \   0000012A   0221               MOVS     R1,#+2
   \   0000012C   7BA0               ADR      R0,??ValueChange_Evant_0+0x10  ;; 0x2E, 0x00, 0x00, 0x00
   \   0000012E   ........           BL       Button
   \   00000132   02B0               ADD      SP,SP,#+8
   \   00000134   0128               CMP      R0,#+1
   \   00000136   27D1               BNE      ??ValueChange_Evant_15
   \   00000138   2878               LDRB     R0,[R5, #+0]
   \   0000013A   0100               MOVS     R1,R0
   \   0000013C   6A46               MOV      R2,SP
   \   0000013E   1278               LDRB     R2,[R2, #+0]
   \   00000140   921C               ADDS     R2,R2,#+2
   \   00000142   9142               CMP      R1,R2
   \   00000144   20DA               BGE      ??ValueChange_Evant_15
   \   00000146   6A78               LDRB     R2,[R5, #+1]
   \   00000148   002A               CMP      R2,#+0
   \   0000014A   1DD1               BNE      ??ValueChange_Evant_15
   3737                      {ValueChangeTxtTmp[VCTT_ill++]='.';   Refresh=1; VCTT_point_flag=VCTT_ill-1;
   \   0000014C   6918               ADDS     R1,R5,R1
   \   0000014E   2E22               MOVS     R2,#+46
   \   00000150   0A71               STRB     R2,[R1, #+4]
   \   00000152   401C               ADDS     R0,R0,#+1
   \   00000154   2870               STRB     R0,[R5, #+0]
   \   00000156   6946               MOV      R1,SP
   \   00000158   0122               MOVS     R2,#+1
   \   0000015A   4A70               STRB     R2,[R1, #+1]
   \   0000015C   401E               SUBS     R0,R0,#+1
   \   0000015E   6870               STRB     R0,[R5, #+1]
   3738                        if (ValueChangeTxtTmp[0]=='-')
   \   00000160   2979               LDRB     R1,[R5, #+4]
   \   00000162   2D29               CMP      R1,#+45
   \   00000164   08D1               BNE      ??ValueChange_Evant_16
   3739                         {
   3740                          if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   00000166   0028               CMP      R0,#+0
   \   00000168   6846               MOV      R0,SP
   \   0000016A   02D0               BEQ      ??ValueChange_Evant_17
   \   0000016C   0721               MOVS     R1,#+7
   \   0000016E   0170               STRB     R1,[R0, #+0]
   \   00000170   0AE0               B        ??ValueChange_Evant_15
   \                     ??ValueChange_Evant_17:
   \   00000172   0521               MOVS     R1,#+5
   \   00000174   0170               STRB     R1,[R0, #+0]
   \   00000176   07E0               B        ??ValueChange_Evant_15
   3741                          }else{
   3742                          if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   \                     ??ValueChange_Evant_16:
   \   00000178   0028               CMP      R0,#+0
   \   0000017A   6846               MOV      R0,SP
   \   0000017C   02D0               BEQ      ??ValueChange_Evant_18
   \   0000017E   0621               MOVS     R1,#+6
   \   00000180   0170               STRB     R1,[R0, #+0]
   \   00000182   01E0               B        ??ValueChange_Evant_15
   \                     ??ValueChange_Evant_18:
   \   00000184   0421               MOVS     R1,#+4
   \   00000186   0170               STRB     R1,[R0, #+0]
   3743                          }
   3744                      }
   3745                      
   3746                   
   3747                      if ((Button("0",2+20*1,76-(19*3),18,17)==1) && (VCTT_ill<MaxChar) && ((VCTT_point_flag==0) || (VCTT_ill<=VCTT_point_flag+1))) {ValueChangeTxtTmp[VCTT_ill++]=48;    Refresh=1;}
   \                     ??ValueChange_Evant_15:
   \   00000188   82B0               SUB      SP,SP,#+8
   \   0000018A   1120               MOVS     R0,#+17
   \   0000018C   0090               STR      R0,[SP, #+0]
   \   0000018E   1223               MOVS     R3,#+18
   \   00000190   1322               MOVS     R2,#+19
   \   00000192   1621               MOVS     R1,#+22
   \   00000194   62A0               ADR      R0,??ValueChange_Evant_0+0x14  ;; 0x30, 0x00, 0x00, 0x00
   \   00000196   ........           BL       Button
   \   0000019A   02B0               ADD      SP,SP,#+8
   \   0000019C   0128               CMP      R0,#+1
   \   0000019E   13D1               BNE      ??ValueChange_Evant_19
   \   000001A0   2878               LDRB     R0,[R5, #+0]
   \   000001A2   6946               MOV      R1,SP
   \   000001A4   0978               LDRB     R1,[R1, #+0]
   \   000001A6   8842               CMP      R0,R1
   \   000001A8   0ED2               BCS      ??ValueChange_Evant_19
   \   000001AA   0100               MOVS     R1,R0
   \   000001AC   6A78               LDRB     R2,[R5, #+1]
   \   000001AE   002A               CMP      R2,#+0
   \   000001B0   02D0               BEQ      ??ValueChange_Evant_20
   \   000001B2   521C               ADDS     R2,R2,#+1
   \   000001B4   8A42               CMP      R2,R1
   \   000001B6   07DB               BLT      ??ValueChange_Evant_19
   \                     ??ValueChange_Evant_20:
   \   000001B8   6918               ADDS     R1,R5,R1
   \   000001BA   3022               MOVS     R2,#+48
   \   000001BC   0A71               STRB     R2,[R1, #+4]
   \   000001BE   401C               ADDS     R0,R0,#+1
   \   000001C0   2870               STRB     R0,[R5, #+0]
   \   000001C2   6846               MOV      R0,SP
   \   000001C4   0121               MOVS     R1,#+1
   \   000001C6   4170               STRB     R1,[R0, #+1]
   3748                      if ((Button("-",2+20*2,76-(19*3),18,17)==1) && (VCTT_ill==0))
   \                     ??ValueChange_Evant_19:
   \   000001C8   82B0               SUB      SP,SP,#+8
   \   000001CA   1120               MOVS     R0,#+17
   \   000001CC   0090               STR      R0,[SP, #+0]
   \   000001CE   1223               MOVS     R3,#+18
   \   000001D0   1322               MOVS     R2,#+19
   \   000001D2   2A21               MOVS     R1,#+42
   \   000001D4   53A0               ADR      R0,??ValueChange_Evant_0+0x18  ;; 0x2D, 0x00, 0x00, 0x00
   \   000001D6   ........           BL       Button
   \   000001DA   02B0               ADD      SP,SP,#+8
   \   000001DC   0128               CMP      R0,#+1
   \   000001DE   09D1               BNE      ??ValueChange_Evant_21
   \   000001E0   2878               LDRB     R0,[R5, #+0]
   \   000001E2   0028               CMP      R0,#+0
   \   000001E4   06D1               BNE      ??ValueChange_Evant_21
   3749                      {
   3750                        ValueChangeTxtTmp[VCTT_ill++]='-';    
   \   000001E6   2D20               MOVS     R0,#+45
   \   000001E8   2871               STRB     R0,[R5, #+4]
   \   000001EA   0120               MOVS     R0,#+1
   \   000001EC   0100               MOVS     R1,R0
   \   000001EE   2970               STRB     R1,[R5, #+0]
   3751                        if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   3752                        Refresh=1;
   \   000001F0   6946               MOV      R1,SP
   \   000001F2   4870               STRB     R0,[R1, #+1]
   3753                      }
   3754                      
   3755                      
   3756                  
   3757                      
   3758                      if (Button("C ",3,4,17,13)==1)
   \                     ??ValueChange_Evant_21:
   \   000001F4   82B0               SUB      SP,SP,#+8
   \   000001F6   0D20               MOVS     R0,#+13
   \   000001F8   0090               STR      R0,[SP, #+0]
   \   000001FA   1123               MOVS     R3,#+17
   \   000001FC   0422               MOVS     R2,#+4
   \   000001FE   0321               MOVS     R1,#+3
   \   00000200   49A0               ADR      R0,??ValueChange_Evant_0+0x1C  ;; 0x43, 0x20, 0x00, 0x00
   \   00000202   ........           BL       Button
   \   00000206   02B0               ADD      SP,SP,#+8
   \   00000208   0128               CMP      R0,#+1
   \   0000020A   10D1               BNE      ??ValueChange_Evant_22
   3759                      {
   3760                        if (VCTT_ill) VCTT_ill--;
   \   0000020C   2878               LDRB     R0,[R5, #+0]
   \   0000020E   0028               CMP      R0,#+0
   \   00000210   01D0               BEQ      ??ValueChange_Evant_23
   \   00000212   401E               SUBS     R0,R0,#+1
   \   00000214   2870               STRB     R0,[R5, #+0]
   3761                        if (ValueChangeTxtTmp[VCTT_ill]=='.') VCTT_point_flag=0;
   \                     ??ValueChange_Evant_23:
   \   00000216   2878               LDRB     R0,[R5, #+0]
   \   00000218   2818               ADDS     R0,R5,R0
   \   0000021A   0179               LDRB     R1,[R0, #+4]
   \   0000021C   2E29               CMP      R1,#+46
   \   0000021E   01D1               BNE      ??ValueChange_Evant_24
   \   00000220   2100               MOVS     R1,R4
   \   00000222   6970               STRB     R1,[R5, #+1]
   3762                        ValueChangeTxtTmp[VCTT_ill]=0;
   \                     ??ValueChange_Evant_24:
   \   00000224   2100               MOVS     R1,R4
   \   00000226   0171               STRB     R1,[R0, #+4]
   3763                        
   3764                        if (ValueChangeTxtTmp[0]=='-')
   3765                        {
   3766                          if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   3767                        }else{
   3768                          if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   3769                        }
   3770                        Refresh=1;
   \   00000228   6846               MOV      R0,SP
   \   0000022A   0121               MOVS     R1,#+1
   \   0000022C   4170               STRB     R1,[R0, #+1]
   3771                      }
   3772                    
   3773                  
   3774                      int mnz=10;     
   \                     ??ValueChange_Evant_22:
   \   0000022E   0A26               MOVS     R6,#+10
   3775                      char prs=0;
   \   00000230   2700               MOVS     R7,R4
   3776                      if (ValueChangeTxtTmp[0]=='-')  prs=1; 
   \   00000232   2879               LDRB     R0,[R5, #+4]
   \   00000234   2D28               CMP      R0,#+45
   \   00000236   00D1               BNE      ??ValueChange_Evant_25
   \   00000238   0127               MOVS     R7,#+1
   3777                      //zapamiêtanie wartoci
   3778                      if (Button("Ok ",22,4,38,13)==1)
   \                     ??ValueChange_Evant_25:
   \   0000023A   82B0               SUB      SP,SP,#+8
   \   0000023C   0D20               MOVS     R0,#+13
   \   0000023E   0090               STR      R0,[SP, #+0]
   \   00000240   2623               MOVS     R3,#+38
   \   00000242   0422               MOVS     R2,#+4
   \   00000244   1621               MOVS     R1,#+22
   \   00000246   39A0               ADR      R0,??ValueChange_Evant_0+0x20  ;; "Ok "
   \   00000248   ........           BL       Button
   \   0000024C   02B0               ADD      SP,SP,#+8
   \   0000024E   0128               CMP      R0,#+1
   \   00000250   51D1               BNE      ??ValueChange_Evant_4
   \   00000252   6878               LDRB     R0,[R5, #+1]
   \   00000254   0028               CMP      R0,#+0
   \   00000256   11D1               BNE      ??ValueChange_Evant_26
   3779                      {
   3780                        //je¿eli nie ma kropki 
   3781                        if (VCTT_point_flag==0)
   3782                        {
   3783                          for (char i=0; i<VCTT_ill-prs; i++)
   \                     ??ValueChange_Evant_27:
   \   00000258   0100               MOVS     R1,R0
   \   0000025A   2A78               LDRB     R2,[R5, #+0]
   \   0000025C   3B00               MOVS     R3,R7
   \   0000025E   D31A               SUBS     R3,R2,R3
   \   00000260   9942               CMP      R1,R3
   \   00000262   22DA               BGE      ??ValueChange_Evant_28
   3784                          {
   3785                             ValueTmp+=(ValueChangeTxtTmp[VCTT_ill-i-1]-48)*mnz;
   \   00000264   511A               SUBS     R1,R2,R1
   \   00000266   6918               ADDS     R1,R5,R1
   \   00000268   C978               LDRB     R1,[R1, #+3]
   \   0000026A   3039               SUBS     R1,R1,#+48
   \   0000026C   7143               MULS     R1,R6,R1
   \   0000026E   6418               ADDS     R4,R4,R1
   3786                             mnz*=10;
   \   00000270   0A21               MOVS     R1,#+10
   \   00000272   4E43               MULS     R6,R1,R6
   3787                          }
   \   00000274   401C               ADDS     R0,R0,#+1
   \   00000276   0006               LSLS     R0,R0,#+24
   \   00000278   000E               LSRS     R0,R0,#+24
   \   0000027A   EDE7               B        ??ValueChange_Evant_27
   3788                          
   3789                          
   3790                        }else{
   3791                          ValueTmp+=ValueChangeTxtTmp[VCTT_ill-1]-48;
   \                     ??ValueChange_Evant_26:
   \   0000027C   2878               LDRB     R0,[R5, #+0]
   \   0000027E   2818               ADDS     R0,R5,R0
   \   00000280   C478               LDRB     R4,[R0, #+3]
   \   00000282   303C               SUBS     R4,R4,#+48
   3792                          
   3793                          for (char i=1; i<=VCTT_point_flag-prs; i++)
   \   00000284   0120               MOVS     R0,#+1
   \   00000286   0AE0               B        ??ValueChange_Evant_29
   3794                          {
   3795                             ValueTmp+=(ValueChangeTxtTmp[VCTT_point_flag-i]-48)*mnz;
   \                     ??ValueChange_Evant_30:
   \   00000288   891A               SUBS     R1,R1,R2
   \   0000028A   6918               ADDS     R1,R5,R1
   \   0000028C   0979               LDRB     R1,[R1, #+4]
   \   0000028E   3039               SUBS     R1,R1,#+48
   \   00000290   7143               MULS     R1,R6,R1
   \   00000292   6418               ADDS     R4,R4,R1
   3796                             mnz*=10;
   \   00000294   0A21               MOVS     R1,#+10
   \   00000296   4E43               MULS     R6,R1,R6
   3797                          }
   \   00000298   401C               ADDS     R0,R0,#+1
   \   0000029A   0006               LSLS     R0,R0,#+24
   \   0000029C   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Evant_29:
   \   0000029E   6978               LDRB     R1,[R5, #+1]
   \   000002A0   0200               MOVS     R2,R0
   \   000002A2   3B00               MOVS     R3,R7
   \   000002A4   CB1A               SUBS     R3,R1,R3
   \   000002A6   9342               CMP      R3,R2
   \   000002A8   EEDA               BGE      ??ValueChange_Evant_30
   3798                          
   3799                        }
   3800                        if (ValueTmp>30000) 
   \                     ??ValueChange_Evant_28:
   \   000002AA   2148               LDR      R0,??ValueChange_Evant_0+0x24  ;; 0x7531
   \   000002AC   8442               CMP      R4,R0
   \   000002AE   1A4E               LDR      R6,??ValueChange_Evant_0+0xC  ;; TextToChangeLength
   \   000002B0   B06C               LDR      R0,[R6, #+72]
   \   000002B2   04DB               BLT      ??ValueChange_Evant_31
   3801                        {
   3802                          //ValueTmp=30000;
   3803                          MenuLevel=MenuLevel*10+1;
   \   000002B4   0A21               MOVS     R1,#+10
   \   000002B6   4843               MULS     R0,R1,R0
   \   000002B8   401C               ADDS     R0,R0,#+1
   \   000002BA   B064               STR      R0,[R6, #+72]
   \   000002BC   18E0               B        ??ValueChange_Evant_32
   3804                        }else{
   3805                          MenuLevel/=10; 
   \                     ??ValueChange_Evant_31:
   \   000002BE   0A21               MOVS     R1,#+10
   \   000002C0   ........           BL       __aeabi_idivmod
   \   000002C4   B064               STR      R0,[R6, #+72]
   3806                          if (ValueChangeTxtTmp[0]=='-')  ValueTmp*=-1; 
   \   000002C6   2879               LDRB     R0,[R5, #+4]
   \   000002C8   2D28               CMP      R0,#+45
   \   000002CA   01D1               BNE      ??ValueChange_Evant_33
   \   000002CC   2000               MOVS     R0,R4
   \   000002CE   4442               RSBS     R4,R0,#+0
   3807                          *ValToChange=ValueTmp;
   \                     ??ValueChange_Evant_33:
   \   000002D0   0498               LDR      R0,[SP, #+16]
   \   000002D2   0480               STRH     R4,[R0, #+0]
   3808                          for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   000002D4   0020               MOVS     R0,#+0
   \   000002D6   0200               MOVS     R2,R0
   \   000002D8   04E0               B        ??ValueChange_Evant_34
   \                     ??ValueChange_Evant_35:
   \   000002DA   6918               ADDS     R1,R5,R1
   \   000002DC   0A71               STRB     R2,[R1, #+4]
   \   000002DE   401C               ADDS     R0,R0,#+1
   \   000002E0   0006               LSLS     R0,R0,#+24
   \   000002E2   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Evant_34:
   \   000002E4   0100               MOVS     R1,R0
   \   000002E6   0729               CMP      R1,#+7
   \   000002E8   F7D3               BCC      ??ValueChange_Evant_35
   3809                          ValueTmp=0;
   3810                          VCTT_ill=0;
   \   000002EA   1000               MOVS     R0,R2
   \   000002EC   2870               STRB     R0,[R5, #+0]
   3811                          VCTT_point_flag=0;
   \   000002EE   6870               STRB     R0,[R5, #+1]
   3812                          
   3813                        }
   3814                        
   3815                        
   3816                        Refresh=1;
   \                     ??ValueChange_Evant_32:
   \   000002F0   6846               MOV      R0,SP
   \   000002F2   0121               MOVS     R1,#+1
   \   000002F4   4170               STRB     R1,[R0, #+1]
   3817                        
   3818                      }
   3819                    
   3820                    
   3821                  }
   3822                  
   3823                  
   3824                  if (Refresh==1) MenuPaint();
   \                     ??ValueChange_Evant_4:
   \   000002F6   6846               MOV      R0,SP
   \   000002F8   4078               LDRB     R0,[R0, #+1]
   \   000002FA   0128               CMP      R0,#+1
   \   000002FC   01D1               BNE      ??ValueChange_Evant_36
   \   000002FE   ........           BL       MenuPaint
   3825                  
   3826          }
   \                     ??ValueChange_Evant_36:
   \   00000302   05B0               ADD      SP,SP,#+20
   \   00000304   F0BC               POP      {R4-R7}
   \   00000306   01BC               POP      {R0}
   \   00000308   0047               BX       R0               ;; return
   \   0000030A   C046               Nop      
   \                     ??ValueChange_Evant_0:
   \   0000030C   ........           DC32     X_up
   \   00000310   ........           DC32     Y_up
   \   00000314   ........           DC32     VCTT_ill
   \   00000318   ........           DC32     TextToChangeLength
   \   0000031C   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   00000320   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000324   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000328   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   0000032C   4F6B2000           DC8      "Ok "
   \   00000330   31750000           DC32     0x7531
   3827                
   3828          
   3829          //*-----------------------------------------------------------------------

   \                                 In section .bss, align 4
   3830          char *ptxt;
   \                     ptxt:
   \   00000000                      DS8 4

   \                                 In section Debug.txt, align 4, keep-with-next
   3831          void LaderChange_Paint(void)
   3832                { 
   \                     LaderChange_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   3833                 char y=20;   //przesuniêcie w dó³
   3834          
   3835                 
   3836                  List_Paint(Speech[g_leng].Opcje,2,15,y,0,3,Speech[g_leng].DodajWiersz, Speech[g_leng].UsunWiersz, 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   1048               LDR      R0,??LaderChange_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   9621               MOVS     R1,#+150
   \   00000008   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000000A   4843               MULS     R0,R1,R0
   \   0000000C   0E49               LDR      R1,??LaderChange_Paint_0+0x4  ;; Speech
   \   0000000E   0C18               ADDS     R4,R1,R0
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0C48               LDR      R0,??LaderChange_Paint_0+0x8  ;; 0x41a
   \   0000001C   2118               ADDS     R1,R4,R0
   \   0000001E   0F38               SUBS     R0,R0,#+15
   \   00000020   2018               ADDS     R0,R4,R0
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   0321               MOVS     R1,#+3
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   1423               MOVS     R3,#+20
   \   0000002C   0F22               MOVS     R2,#+15
   \   0000002E   0221               MOVS     R1,#+2
   \   00000030   8720               MOVS     R0,#+135
   \   00000032   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000034   2018               ADDS     R0,R4,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   3837          
   3838          
   3839                }
   \   0000003C   10BC               POP      {R4}
   \   0000003E   01BC               POP      {R0}
   \   00000040   0047               BX       R0               ;; return
   \   00000042   C046               Nop      
   \                     ??LaderChange_Paint_0:
   \   00000044   ........           DC32     g_leng
   \   00000048   ........           DC32     Speech
   \   0000004C   1A040000           DC32     0x41a
   3840          
   3841          
   3842          

   \                                 In section Debug.txt, align 4, keep-with-next
   3843          void LaderChange_Event(void)
   3844                { 
   \                     LaderChange_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   3845                  char y=20;   //przesuniêcie w dó³
   3846                  int ans;
   3847                  char Repaint=0;
   \   00000002   0024               MOVS     R4,#+0
   3848          
   3849                  
   3850                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,y); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   214D               LDR      R5,??LaderChange_Event_0  ;; X_up
   \   00000006   224E               LDR      R6,??LaderChange_Event_0+0x4  ;; Y_up
   \   00000008   1421               MOVS     R1,#+20
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0F21               MOVS     R1,#+15
   \   00000010   0220               MOVS     R0,#+2
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   1F48               LDR      R0,??LaderChange_Event_0+0x8  ;; Y_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   435E               LDRSH    R3,[R0, R1]
   \   0000001A   1F48               LDR      R0,??LaderChange_Event_0+0xC  ;; X_down
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   315E               LDRSH    R1,[R6, R0]
   \   00000022   285E               LDRSH    R0,[R5, R0]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   3851            
   3852                  if (ans>0)
   \   0000002A   0128               CMP      R0,#+1
   \   0000002C   15DB               BLT      ??LaderChange_Event_1
   3853                    {
   3854                      if ((ans>0) && (ans<3))
   \   0000002E   0128               CMP      R0,#+1
   \   00000030   24DB               BLT      ??LaderChange_Event_2
   \   00000032   0328               CMP      R0,#+3
   \   00000034   22DA               BGE      ??LaderChange_Event_2
   3855                      {
   3856                        if (ans==1) 
   \   00000036   0128               CMP      R0,#+1
   \   00000038   184C               LDR      R4,??LaderChange_Event_0+0x10  ;; TextToChangeLength
   \   0000003A   07D1               BNE      ??LaderChange_Event_3
   3857                        {
   3858                          MenuLevel=(MenuLevel/10);
   \   0000003C   A06C               LDR      R0,[R4, #+72]
   \   0000003E   0A21               MOVS     R1,#+10
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   A064               STR      R0,[R4, #+72]
   3859                          AddRow();
   \   00000046   ........           BL       AddRow
   \   0000004A   04E0               B        ??LaderChange_Event_4
   3860                          
   3861                        }else{
   3862                          MenuLevel=(MenuLevel*10+ans);
   \                     ??LaderChange_Event_3:
   \   0000004C   A16C               LDR      R1,[R4, #+72]
   \   0000004E   0A22               MOVS     R2,#+10
   \   00000050   5143               MULS     R1,R2,R1
   \   00000052   0818               ADDS     R0,R1,R0
   \   00000054   A064               STR      R0,[R4, #+72]
   3863                        }
   3864                        Repaint=1;
   \                     ??LaderChange_Event_4:
   \   00000056   0124               MOVS     R4,#+1
   \   00000058   10E0               B        ??LaderChange_Event_2
   3865                      }
   3866                      
   3867                    }
   3868                  else if (ans<0)
   \                     ??LaderChange_Event_1:
   \   0000005A   0028               CMP      R0,#+0
   \   0000005C   0ED5               BPL      ??LaderChange_Event_2
   3869                    {
   3870                      
   3871                      if ((X_up>0) &&(Y_up>0)) 
   \   0000005E   0020               MOVS     R0,#+0
   \   00000060   285E               LDRSH    R0,[R5, R0]
   \   00000062   0128               CMP      R0,#+1
   \   00000064   0ADB               BLT      ??LaderChange_Event_2
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   305E               LDRSH    R0,[R6, R0]
   \   0000006A   0128               CMP      R0,#+1
   \   0000006C   06DB               BLT      ??LaderChange_Event_2
   3872                      {
   3873                        MenuLevel=(MenuLevel/10);
   \   0000006E   0B4C               LDR      R4,??LaderChange_Event_0+0x10  ;; TextToChangeLength
   \   00000070   A06C               LDR      R0,[R4, #+72]
   \   00000072   0A21               MOVS     R1,#+10
   \   00000074   ........           BL       __aeabi_idivmod
   \   00000078   A064               STR      R0,[R4, #+72]
   3874                        Repaint=1;
   \   0000007A   0124               MOVS     R4,#+1
   3875                        
   3876                      }
   3877                      
   3878                    }
   3879                  if (Repaint) MenuPaint();
   \                     ??LaderChange_Event_2:
   \   0000007C   002C               CMP      R4,#+0
   \   0000007E   01D0               BEQ      ??LaderChange_Event_5
   \   00000080   ........           BL       MenuPaint
   3880          }
   \                     ??LaderChange_Event_5:
   \   00000084   70BC               POP      {R4-R6}
   \   00000086   01BC               POP      {R0}
   \   00000088   0047               BX       R0               ;; return
   \   0000008A   C046               Nop      
   \                     ??LaderChange_Event_0:
   \   0000008C   ........           DC32     X_up
   \   00000090   ........           DC32     Y_up
   \   00000094   ........           DC32     Y_down
   \   00000098   ........           DC32     X_down
   \   0000009C   ........           DC32     TextToChangeLength
   3881          
   3882          
   3883          
   3884          int row_tmp;

   \                                 In section Debug.txt, align 4, keep-with-next
   3885          void AddRow(void)
   3886                { 
   \                     AddRow:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \                     ??AddRow_0:
   \   00000002   2848               LDR      R0,??AddRow_1    ;; Busy_program
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   FBD1               BNE      ??AddRow_0
   \   0000000A   2648               LDR      R0,??AddRow_1    ;; Busy_program
   \   0000000C   0121               MOVS     R1,#+1
   \   0000000E   0170               STRB     R1,[R0, #+0]
   3887              
   3888                  while (Busy_program) {}
   3889           
   3890                Busy_program=1;
   3891                    //for ( row_tmp=5; row_tmp>ChoseRow; row_tmp--)
   3892                    for ( row_tmp=MaxPrcLines-1; row_tmp>ChoseRow; row_tmp--)
   \   00000010   254A               LDR      R2,??AddRow_1+0x4  ;; TextToChangeLength
   \   00000012   C720               MOVS     R0,#+199
   \   00000014   1067               STR      R0,[R2, #+112]
   \   00000016   20E0               B        ??AddRow_2
   3893                    {
   3894          
   3895                      for (char col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   3896                      {
   3897                     
   3898                        gProg.Line[row_tmp].Proc[col_tmp].Type=gProg.Line[row_tmp-1].Proc[col_tmp].Type;
   \                     ??AddRow_3:
   \   00000018   2448               LDR      R0,??AddRow_1+0x8  ;; gProg
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   1825               MOVS     R5,#+24
   \   0000001E   6943               MULS     R1,R5,R1
   \   00000020   F025               MOVS     R5,#+240
   \   00000022   5D43               MULS     R5,R3,R5
   \   00000024   4019               ADDS     R0,R0,R5
   \   00000026   4018               ADDS     R0,R0,R1
   \   00000028   0500               MOVS     R5,R0
   \   0000002A   1835               ADDS     R5,R5,#+24
   \   0000002C   0600               MOVS     R6,R0
   \   0000002E   D83E               SUBS     R6,R6,#+216
   \   00000030   3178               LDRB     R1,[R6, #+0]
   \   00000032   2970               STRB     R1,[R5, #+0]
   3899                        gProg.Line[row_tmp].Proc[col_tmp].Nr=gProg.Line[row_tmp-1].Proc[col_tmp].Nr;
   \   00000034   7178               LDRB     R1,[R6, #+1]
   \   00000036   6970               STRB     R1,[R5, #+1]
   3900                        gProg.Line[row_tmp].Proc[col_tmp].Tag=gProg.Line[row_tmp-1].Proc[col_tmp].Tag;
   \   00000038   0700               MOVS     R7,R0
   \   0000003A   2037               ADDS     R7,R7,#+32
   \   0000003C   D038               SUBS     R0,R0,#+208
   \   0000003E   03C8               LDM      R0!,{R0,R1}
   \   00000040   03C7               STM      R7!,{R0,R1}
   3901                        gProg.Line[row_tmp].Proc[col_tmp].LastIn=gProg.Line[row_tmp-1].Proc[col_tmp].LastIn;
   \   00000042   307C               LDRB     R0,[R6, #+16]
   \   00000044   2874               STRB     R0,[R5, #+16]
   3902                        gProg.Line[row_tmp].Proc[col_tmp].Out=gProg.Line[row_tmp-1].Proc[col_tmp].Out;
   \   00000046   708A               LDRH     R0,[R6, #+18]
   \   00000048   6882               STRH     R0,[R5, #+18]
   3903          
   3904                      }
   \   0000004A   641C               ADDS     R4,R4,#+1
   \   0000004C   2406               LSLS     R4,R4,#+24
   \   0000004E   240E               LSRS     R4,R4,#+24
   \                     ??AddRow_4:
   \   00000050   2000               MOVS     R0,R4
   \   00000052   0A28               CMP      R0,#+10
   \   00000054   E0D3               BCC      ??AddRow_3
   \   00000056   5B1E               SUBS     R3,R3,#+1
   \   00000058   1367               STR      R3,[R2, #+112]
   \                     ??AddRow_2:
   \   0000005A   D47C               LDRB     R4,[R2, #+19]
   \   0000005C   136F               LDR      R3,[R2, #+112]
   \   0000005E   9C42               CMP      R4,R3
   \   00000060   01DA               BGE      ??AddRow_5
   \   00000062   0024               MOVS     R4,#+0
   \   00000064   F4E7               B        ??AddRow_4
   3905                    }
   3906                  
   3907                     for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \                     ??AddRow_5:
   \   00000066   0023               MOVS     R3,#+0
   \   00000068   1D00               MOVS     R5,R3
   \   0000006A   11E0               B        ??AddRow_6
   3908                      {
   3909                        gProg.Line[ChoseRow].Proc[col_tmp].Type=None;
   \                     ??AddRow_7:
   \   0000006C   0F48               LDR      R0,??AddRow_1+0x8  ;; gProg
   \   0000006E   1821               MOVS     R1,#+24
   \   00000070   6943               MULS     R1,R5,R1
   \   00000072   F026               MOVS     R6,#+240
   \   00000074   6643               MULS     R6,R4,R6
   \   00000076   8019               ADDS     R0,R0,R6
   \   00000078   4618               ADDS     R6,R0,R1
   \   0000007A   1836               ADDS     R6,R6,#+24
   \   0000007C   1800               MOVS     R0,R3
   \   0000007E   3070               STRB     R0,[R6, #+0]
   3910                        gProg.Line[ChoseRow].Proc[col_tmp].Nr=0;
   \   00000080   7070               STRB     R0,[R6, #+1]
   3911                        gProg.Line[ChoseRow].Proc[col_tmp].Tag.Tag=0;
   \   00000082   3700               MOVS     R7,R6
   \   00000084   0837               ADDS     R7,R7,#+8
   \   00000086   0100               MOVS     R1,R0
   \   00000088   03C7               STM      R7!,{R0,R1}
   3912                        gProg.Line[ChoseRow].Proc[col_tmp].LastIn=0;
   \   0000008A   3074               STRB     R0,[R6, #+16]
   3913                        gProg.Line[ChoseRow].Proc[col_tmp].Out=0;
   \   0000008C   7082               STRH     R0,[R6, #+18]
   3914          
   3915                      }
   \   0000008E   6D1C               ADDS     R5,R5,#+1
   \                     ??AddRow_6:
   \   00000090   0A2D               CMP      R5,#+10
   \   00000092   EBDB               BLT      ??AddRow_7
   3916                  
   3917                    ProgramChange=1;
   \   00000094   0120               MOVS     R0,#+1
   \   00000096   1072               STRB     R0,[R2, #+8]
   3918          
   3919                  Busy_program=0;
   \   00000098   0248               LDR      R0,??AddRow_1    ;; Busy_program
   \   0000009A   0370               STRB     R3,[R0, #+0]
   3920            
   3921          }
   \   0000009C   F8BC               POP      {R3-R7}
   \   0000009E   01BC               POP      {R0}
   \   000000A0   0047               BX       R0               ;; return
   \   000000A2   C046               Nop      
   \                     ??AddRow_1:
   \   000000A4   ........           DC32     Busy_program
   \   000000A8   ........           DC32     TextToChangeLength
   \   000000AC   ........           DC32     gProg
   3922              
   3923          
   3924          
   3925          //procedura usuniêcia lini

   \                                 In section Debug.txt, align 4, keep-with-next
   3926          void RemRow(void)
   3927          {
   \                     RemRow:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   3928                    for (int row_tmp=ChoseRow; row_tmp<MaxPrcLines-1; row_tmp++)
   \   00000002   2148               LDR      R0,??RemRow_0    ;; TextToChangeLength + 19
   \   00000004   0278               LDRB     R2,[R0, #+0]
   \   00000006   22E0               B        ??RemRow_1
   3929                    {
   3930                      for (char col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   3931                      {
   3932                     
   3933                        gProg.Line[row_tmp].Proc[col_tmp].Type=gProg.Line[row_tmp+1].Proc[col_tmp].Type;
   \                     ??RemRow_2:
   \   00000008   2048               LDR      R0,??RemRow_0+0x4  ;; gProg
   \   0000000A   1900               MOVS     R1,R3
   \   0000000C   1824               MOVS     R4,#+24
   \   0000000E   6143               MULS     R1,R4,R1
   \   00000010   F024               MOVS     R4,#+240
   \   00000012   5443               MULS     R4,R2,R4
   \   00000014   0019               ADDS     R0,R0,R4
   \   00000016   4018               ADDS     R0,R0,R1
   \   00000018   0400               MOVS     R4,R0
   \   0000001A   1834               ADDS     R4,R4,#+24
   \   0000001C   8421               MOVS     R1,#+132
   \   0000001E   4900               LSLS     R1,R1,#+1        ;; #+264
   \   00000020   4518               ADDS     R5,R0,R1
   \   00000022   2978               LDRB     R1,[R5, #+0]
   \   00000024   2170               STRB     R1,[R4, #+0]
   3934                        gProg.Line[row_tmp].Proc[col_tmp].Nr=gProg.Line[row_tmp+1].Proc[col_tmp].Nr;
   \   00000026   6978               LDRB     R1,[R5, #+1]
   \   00000028   6170               STRB     R1,[R4, #+1]
   3935                        gProg.Line[row_tmp].Proc[col_tmp].Tag=gProg.Line[row_tmp+1].Proc[col_tmp].Tag;
   \   0000002A   0600               MOVS     R6,R0
   \   0000002C   2036               ADDS     R6,R6,#+32
   \   0000002E   8821               MOVS     R1,#+136
   \   00000030   4900               LSLS     R1,R1,#+1        ;; #+272
   \   00000032   4018               ADDS     R0,R0,R1
   \   00000034   03C8               LDM      R0!,{R0,R1}
   \   00000036   03C6               STM      R6!,{R0,R1}
   3936                        gProg.Line[row_tmp].Proc[col_tmp].LastIn=gProg.Line[row_tmp+1].Proc[col_tmp].LastIn;
   \   00000038   287C               LDRB     R0,[R5, #+16]
   \   0000003A   2074               STRB     R0,[R4, #+16]
   3937                        gProg.Line[row_tmp].Proc[col_tmp].Out=gProg.Line[row_tmp+1].Proc[col_tmp].Out;
   \   0000003C   688A               LDRH     R0,[R5, #+18]
   \   0000003E   6082               STRH     R0,[R4, #+18]
   3938                      }
   \   00000040   5B1C               ADDS     R3,R3,#+1
   \   00000042   1B06               LSLS     R3,R3,#+24
   \   00000044   1B0E               LSRS     R3,R3,#+24
   \                     ??RemRow_3:
   \   00000046   1800               MOVS     R0,R3
   \   00000048   0A28               CMP      R0,#+10
   \   0000004A   DDD3               BCC      ??RemRow_2
   \   0000004C   521C               ADDS     R2,R2,#+1
   \                     ??RemRow_1:
   \   0000004E   C72A               CMP      R2,#+199
   \   00000050   01DA               BGE      ??RemRow_4
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   F7E7               B        ??RemRow_3
   3939                    }
   3940                    
   3941                     for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \                     ??RemRow_4:
   \   00000056   0022               MOVS     R2,#+0
   \   00000058   1300               MOVS     R3,R2
   \   0000005A   0FE0               B        ??RemRow_5
   3942                      {
   3943                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Type=None;
   \                     ??RemRow_6:
   \   0000005C   0B48               LDR      R0,??RemRow_0+0x4  ;; gProg
   \   0000005E   0C49               LDR      R1,??RemRow_0+0x8  ;; 0xbaa8
   \   00000060   1824               MOVS     R4,#+24
   \   00000062   5C43               MULS     R4,R3,R4
   \   00000064   0019               ADDS     R0,R0,R4
   \   00000066   4418               ADDS     R4,R0,R1
   \   00000068   1000               MOVS     R0,R2
   \   0000006A   2070               STRB     R0,[R4, #+0]
   3944                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Nr=0;
   \   0000006C   6070               STRB     R0,[R4, #+1]
   3945                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Tag.Tag=0;
   \   0000006E   2500               MOVS     R5,R4
   \   00000070   0835               ADDS     R5,R5,#+8
   \   00000072   0100               MOVS     R1,R0
   \   00000074   03C5               STM      R5!,{R0,R1}
   3946                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].LastIn=0;
   \   00000076   2074               STRB     R0,[R4, #+16]
   3947                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Out=0;
   \   00000078   6082               STRH     R0,[R4, #+18]
   3948          
   3949                      }
   \   0000007A   5B1C               ADDS     R3,R3,#+1
   \                     ??RemRow_5:
   \   0000007C   0A2B               CMP      R3,#+10
   \   0000007E   EDDB               BLT      ??RemRow_6
   3950            
   3951          }
   \   00000080   70BC               POP      {R4-R6}
   \   00000082   01BC               POP      {R0}
   \   00000084   0047               BX       R0               ;; return
   \   00000086   C046               Nop      
   \                     ??RemRow_0:
   \   00000088   ........           DC32     TextToChangeLength + 19
   \   0000008C   ........           DC32     gProg
   \   00000090   A8BA0000           DC32     0xbaa8
   3952          
   3953          
   3954          

   \                                 In section Debug.txt, align 4, keep-with-next
   3955          void RemRow_Paint(void)
   3956                { 
   \                     RemRow_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   3957          
   3958                  //czy s¹ procedury na lini do usuniêia
   3959                  char ProcExst=0;
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   3960                  for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \   00000006   0DE0               B        ??RemRow_Paint_0
   3961                      {
   3962                        if (gProg.Line[ChoseRow].Proc[col_tmp].Type!=None) ProcExst=1;
   \                     ??RemRow_Paint_1:
   \   00000008   1822               MOVS     R2,#+24
   \   0000000A   4A43               MULS     R2,R1,R2
   \   0000000C   164B               LDR      R3,??RemRow_Paint_2  ;; TextToChangeLength + 19
   \   0000000E   1B78               LDRB     R3,[R3, #+0]
   \   00000010   F024               MOVS     R4,#+240
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   154C               LDR      R4,??RemRow_Paint_2+0x4  ;; gProg
   \   00000016   E318               ADDS     R3,R4,R3
   \   00000018   9A18               ADDS     R2,R3,R2
   \   0000001A   127E               LDRB     R2,[R2, #+24]
   \   0000001C   002A               CMP      R2,#+0
   \   0000001E   00D0               BEQ      ??RemRow_Paint_3
   \   00000020   0120               MOVS     R0,#+1
   3963                        
   3964                      }
   \                     ??RemRow_Paint_3:
   \   00000022   491C               ADDS     R1,R1,#+1
   \                     ??RemRow_Paint_0:
   \   00000024   0A29               CMP      R1,#+10
   \   00000026   EFDB               BLT      ??RemRow_Paint_1
   3965                  
   3966                  //je¿eli s¹ procedury w lini
   3967                  if (ProcExst)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0FD0               BEQ      ??RemRow_Paint_4
   3968                  {
   3969                    Ask_Paint("?",Speech[g_leng].UsunWiersz,Speech[g_leng].Zprocedurami);  
   \   0000002C   1048               LDR      R0,??RemRow_Paint_2+0x8  ;; g_leng
   \   0000002E   0068               LDR      R0,[R0, #+0]
   \   00000030   9621               MOVS     R1,#+150
   \   00000032   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000034   4843               MULS     R0,R1,R0
   \   00000036   0F49               LDR      R1,??RemRow_Paint_2+0xC  ;; Speech
   \   00000038   0818               ADDS     R0,R1,R0
   \   0000003A   8721               MOVS     R1,#+135
   \   0000003C   C900               LSLS     R1,R1,#+3        ;; #+1080
   \   0000003E   4218               ADDS     R2,R0,R1
   \   00000040   1E39               SUBS     R1,R1,#+30
   \   00000042   4118               ADDS     R1,R0,R1
   \   00000044   0CA0               ADR      R0,??RemRow_Paint_2+0x10  ;; 0x3F, 0x00, 0x00, 0x00
   \   00000046   ........           BL       Ask_Paint
   \   0000004A   09E0               B        ??RemRow_Paint_5
   3970          
   3971                  }else{  //je¿eli linia pusta
   3972                    RemRow();
   \                     ??RemRow_Paint_4:
   \   0000004C   ........           BL       RemRow
   3973                    MenuLevel=(MenuLevel/100);
   \   00000050   0A4C               LDR      R4,??RemRow_Paint_2+0x14  ;; TextToChangeLength
   \   00000052   A06C               LDR      R0,[R4, #+72]
   \   00000054   6421               MOVS     R1,#+100
   \   00000056   ........           BL       __aeabi_idivmod
   \   0000005A   A064               STR      R0,[R4, #+72]
   3974                    MenuPaint();
   \   0000005C   ........           BL       MenuPaint
   3975                  }
   3976                  
   3977                }
   \                     ??RemRow_Paint_5:
   \   00000060   10BC               POP      {R4}
   \   00000062   01BC               POP      {R0}
   \   00000064   0047               BX       R0               ;; return
   \   00000066   C046               Nop      
   \                     ??RemRow_Paint_2:
   \   00000068   ........           DC32     TextToChangeLength + 19
   \   0000006C   ........           DC32     gProg
   \   00000070   ........           DC32     g_leng
   \   00000074   ........           DC32     Speech
   \   00000078   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   0000007C   ........           DC32     TextToChangeLength
   3978          
   3979          
   3980          
   3981          //restart
   3982                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   3983                void RemRow_Event(void)
   3984                {
   \                     RemRow_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   3985                  int ans;
   3986                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1448               LDR      R0,??RemRow_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1348               LDR      R0,??RemRow_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1348               LDR      R0,??RemRow_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1348               LDR      R0,??RemRow_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   3987            
   3988                  if (ans)
   \   0000001C   17D0               BEQ      ??RemRow_Event_1
   3989                    {
   3990                    if (ans==2) 
   \   0000001E   022C               CMP      R4,#+2
   \   00000020   09D1               BNE      ??RemRow_Event_2
   3991                    {
   3992                      RemRow();
   \   00000022   ........           BL       RemRow
   3993                      MenuLevel=(MenuLevel/100);
   \   00000026   0F4D               LDR      R5,??RemRow_Event_0+0x10  ;; TextToChangeLength
   \   00000028   A86C               LDR      R0,[R5, #+72]
   \   0000002A   6421               MOVS     R1,#+100
   \   0000002C   ........           BL       __aeabi_idivmod
   \   00000030   A864               STR      R0,[R5, #+72]
   3994                      ProgramChange=1;
   \   00000032   0120               MOVS     R0,#+1
   \   00000034   2872               STRB     R0,[R5, #+8]
   3995                    }
   3996                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/100);
   \                     ??RemRow_Event_2:
   \   00000036   002C               CMP      R4,#+0
   \   00000038   01D4               BMI      ??RemRow_Event_3
   \   0000003A   012C               CMP      R4,#+1
   \   0000003C   05D1               BNE      ??RemRow_Event_4
   \                     ??RemRow_Event_3:
   \   0000003E   094D               LDR      R5,??RemRow_Event_0+0x10  ;; TextToChangeLength
   \   00000040   A86C               LDR      R0,[R5, #+72]
   \   00000042   6421               MOVS     R1,#+100
   \   00000044   ........           BL       __aeabi_idivmod
   \   00000048   A864               STR      R0,[R5, #+72]
   3997                    MenuPaint();
   \                     ??RemRow_Event_4:
   \   0000004A   ........           BL       MenuPaint
   3998                    } 
   3999                }//_______________________________________________________________________
   \                     ??RemRow_Event_1:
   \   0000004E   38BC               POP      {R3-R5}
   \   00000050   01BC               POP      {R0}
   \   00000052   0047               BX       R0               ;; return
   \                     ??RemRow_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     TextToChangeLength
   4000              
   4001            
   4002          
   4003          
   4004          //SaveChanges_Evant****************************************************************

   \                                 In section Debug.txt, align 4, keep-with-next
   4005          void SaveChanges_Evant(void)
   4006          {
   \                     SaveChanges_Evant:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   4007                    int ans;
   4008                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1F48               LDR      R0,??SaveChanges_Evant_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1E48               LDR      R0,??SaveChanges_Evant_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1E48               LDR      R0,??SaveChanges_Evant_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1E48               LDR      R0,??SaveChanges_Evant_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   4009            
   4010                  if (ans)
   \   0000001C   2CD0               BEQ      ??SaveChanges_Evant_1
   4011                    {
   4012                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000001E   1C48               LDR      R0,??SaveChanges_Evant_0+0x10  ;; 0x13d7e9
   \   00000020   0078               LDRB     R0,[R0, #+0]
   \   00000022   0028               CMP      R0,#+0
   \   00000024   0AD1               BNE      ??SaveChanges_Evant_2
   \   00000026   1B48               LDR      R0,??SaveChanges_Evant_0+0x14  ;; 0xfffff430
   \   00000028   8021               MOVS     R1,#+128
   \   0000002A   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000002C   0160               STR      R1,[R0, #+0]
   \   0000002E   1A4A               LDR      R2,??SaveChanges_Evant_0+0x18  ;; ButtonBipCounter
   \   00000030   1A48               LDR      R0,??SaveChanges_Evant_0+0x1C  ;; g_counter
   \   00000032   03C8               LDM      R0!,{R0,R1}
   \   00000034   0023               MOVS     R3,#+0
   \   00000036   0830               ADDS     R0,R0,#+8
   \   00000038   5941               ADCS     R1,R1,R3
   \   0000003A   03C2               STM      R2!,{R0,R1}
   4013                    if (ans==2) 
   \                     ??SaveChanges_Evant_2:
   \   0000003C   022C               CMP      R4,#+2
   \   0000003E   0CD1               BNE      ??SaveChanges_Evant_3
   4014                    {
   4015                       ProgramChange=0;
   \   00000040   174D               LDR      R5,??SaveChanges_Evant_0+0x20  ;; TextToChangeLength
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   2872               STRB     R0,[R5, #+8]
   4016                        
   4017                      ProgramChangeExecute(&gProg); 
   \   00000046   1748               LDR      R0,??SaveChanges_Evant_0+0x24  ;; gProg
   \   00000048   ........           BL       ProgramChangeExecute
   4018                      RamToFlash();
   \   0000004C   ........           BL       RamToFlash
   4019                      
   4020                      MenuLevel=(MenuLevel/100);
   \   00000050   A86C               LDR      R0,[R5, #+72]
   \   00000052   6421               MOVS     R1,#+100
   \   00000054   ........           BL       __aeabi_idivmod
   \   00000058   A864               STR      R0,[R5, #+72]
   4021                    }
   4022          
   4023                      ProgramChangeExecute(&gProg);
   \                     ??SaveChanges_Evant_3:
   \   0000005A   1248               LDR      R0,??SaveChanges_Evant_0+0x24  ;; gProg
   \   0000005C   ........           BL       ProgramChangeExecute
   4024                   
   4025                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/100);
   \   00000060   002C               CMP      R4,#+0
   \   00000062   01D4               BMI      ??SaveChanges_Evant_4
   \   00000064   012C               CMP      R4,#+1
   \   00000066   05D1               BNE      ??SaveChanges_Evant_5
   \                     ??SaveChanges_Evant_4:
   \   00000068   0D4D               LDR      R5,??SaveChanges_Evant_0+0x20  ;; TextToChangeLength
   \   0000006A   A86C               LDR      R0,[R5, #+72]
   \   0000006C   6421               MOVS     R1,#+100
   \   0000006E   ........           BL       __aeabi_idivmod
   \   00000072   A864               STR      R0,[R5, #+72]
   4026                    MenuPaint();
   \                     ??SaveChanges_Evant_5:
   \   00000074   ........           BL       MenuPaint
   4027                    } 
   4028            
   4029          }
   \                     ??SaveChanges_Evant_1:
   \   00000078   38BC               POP      {R3-R5}
   \   0000007A   01BC               POP      {R0}
   \   0000007C   0047               BX       R0               ;; return
   \   0000007E   C046               Nop      
   \                     ??SaveChanges_Evant_0:
   \   00000080   ........           DC32     Y_down
   \   00000084   ........           DC32     X_down
   \   00000088   ........           DC32     Y_up
   \   0000008C   ........           DC32     X_up
   \   00000090   E9D71300           DC32     0x13d7e9
   \   00000094   30F4FFFF           DC32     0xfffff430
   \   00000098   ........           DC32     ButtonBipCounter
   \   0000009C   ........           DC32     g_counter
   \   000000A0   ........           DC32     TextToChangeLength
   \   000000A4   ........           DC32     gProg
   4030          
   4031          
   4032                   
   4033          
   4034                    
   4035          
   4036          char OpenScreenSet=0;
   4037          
   4038          //Ustawienie grafiki ekranu******************************************************************************************************************

   \                                 In section Debug.txt, align 4, keep-with-next
   4039          void ScreenSet_Paint(_Screen* ScreenLokal)
   4040          {
   \                     ScreenSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0400               MOVS     R4,R0
   4041            char PaternDesignNr;
   4042            
   4043            if (CurModifSheet==0) 
   \   00000006   764D               LDR      R5,??ScreenSet_Paint_0  ;; TextToChangeLength
   \   00000008   6879               LDRB     R0,[R5, #+5]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D1               BNE      ??ScreenSet_Paint_1
   4044            {
   4045              PaternDesignNr=ScreenSetTab_0_Nr;
   \   0000000E   0827               MOVS     R7,#+8
   \   00000010   00E0               B        ??ScreenSet_Paint_2
   4046            }else{
   4047              PaternDesignNr=ScreenSetTab_1_Nr; 
   \                     ??ScreenSet_Paint_1:
   \   00000012   0527               MOVS     R7,#+5
   4048            }      
   4049            
   4050            if (OpenScreenSet==0)
   \                     ??ScreenSet_Paint_2:
   \   00000014   A97D               LDRB     R1,[R5, #+22]
   \   00000016   0029               CMP      R1,#+0
   \   00000018   0CD1               BNE      ??ScreenSet_Paint_3
   4051            {
   4052              OpenScreenSet=1; 
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   A975               STRB     R1,[R5, #+22]
   4053              if (ScreenLokal->PaternDesign>4)    if (CurModifSheet==0) RowsPoz=3; else RowsPoz=2;
   \   0000001E   2178               LDRB     R1,[R4, #+0]
   \   00000020   0529               CMP      R1,#+5
   \   00000022   07D3               BCC      ??ScreenSet_Paint_3
   \   00000024   0028               CMP      R0,#+0
   \   00000026   6F49               LDR      R1,??ScreenSet_Paint_0+0x4  ;; RowsPoz
   \   00000028   02D1               BNE      ??ScreenSet_Paint_4
   \   0000002A   0322               MOVS     R2,#+3
   \   0000002C   0A70               STRB     R2,[R1, #+0]
   \   0000002E   01E0               B        ??ScreenSet_Paint_3
   \                     ??ScreenSet_Paint_4:
   \   00000030   0222               MOVS     R2,#+2
   \   00000032   0A70               STRB     R2,[R1, #+0]
   4054            }
   4055            
   4056            
   4057          
   4058          #ifdef __ALARM 
   4059            if (CurModifSheet==0)
   \                     ??ScreenSet_Paint_3:
   \   00000034   0028               CMP      R0,#+0
   \   00000036   6C48               LDR      R0,??ScreenSet_Paint_0+0x8  ;; g_leng
   \   00000038   0068               LDR      R0,[R0, #+0]
   \   0000003A   2FD1               BNE      ??ScreenSet_Paint_5
   4060            {
   4061              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+4,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Styl6,Speech[g_leng].Styl7, Speech[g_leng].Styl8,Speech[g_leng].Termostat,Speech[g_leng].Terminarz, "Alarm"); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000003C   9621               MOVS     R1,#+150
   \   0000003E   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000040   4843               MULS     R0,R1,R0
   \   00000042   6A49               LDR      R1,??ScreenSet_Paint_0+0xC  ;; Speech
   \   00000044   0E18               ADDS     R6,R1,R0
   \   00000046   6A49               LDR      R1,??ScreenSet_Paint_0+0x10  ;; `?<Constant "Alarm">`
   \   00000048   6A48               LDR      R0,??ScreenSet_Paint_0+0x14  ;; 0x753
   \   0000004A   3018               ADDS     R0,R6,R0
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   6A48               LDR      R0,??ScreenSet_Paint_0+0x18  ;; 0x6cc
   \   00000050   3118               ADDS     R1,R6,R0
   \   00000052   6A48               LDR      R0,??ScreenSet_Paint_0+0x1C  ;; 0x4ce
   \   00000054   3018               ADDS     R0,R6,R0
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   6948               LDR      R0,??ScreenSet_Paint_0+0x20  ;; 0x4bf
   \   0000005A   3118               ADDS     R1,R6,R0
   \   0000005C   0F38               SUBS     R0,R0,#+15
   \   0000005E   3018               ADDS     R0,R6,R0
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   6848               LDR      R0,??ScreenSet_Paint_0+0x24  ;; 0x4a1
   \   00000064   3118               ADDS     R1,R6,R0
   \   00000066   0F38               SUBS     R0,R0,#+15
   \   00000068   3018               ADDS     R0,R6,R0
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   6648               LDR      R0,??ScreenSet_Paint_0+0x28  ;; 0x483
   \   0000006E   3118               ADDS     R1,R6,R0
   \   00000070   0F38               SUBS     R0,R0,#+15
   \   00000072   3018               ADDS     R0,R6,R0
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   6548               LDR      R0,??ScreenSet_Paint_0+0x2C  ;; 0x465
   \   00000078   3118               ADDS     R1,R6,R0
   \   0000007A   65A0               ADR      R0,??ScreenSet_Paint_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0021               MOVS     R1,#+0
   \   00000080   0800               MOVS     R0,R1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   0300               MOVS     R3,R0
   \   00000086   0D22               MOVS     R2,#+13
   \   00000088   3F1D               ADDS     R7,R7,#+4
   \   0000008A   3900               MOVS     R1,R7
   \   0000008C   0906               LSLS     R1,R1,#+24
   \   0000008E   090E               LSRS     R1,R1,#+24
   \   00000090   6048               LDR      R0,??ScreenSet_Paint_0+0x34  ;; 0x4dd
   \   00000092   3018               ADDS     R0,R6,R0
   \   00000094   ........           BL       List_Paint
   \   00000098   0EB0               ADD      SP,SP,#+56
   \   0000009A   28E0               B        ??ScreenSet_Paint_6
   4062            }else{
   4063              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+4,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Termostat,Speech[g_leng].Terminarz, "Alarm"); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??ScreenSet_Paint_5:
   \   0000009C   9621               MOVS     R1,#+150
   \   0000009E   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   000000A0   4843               MULS     R0,R1,R0
   \   000000A2   5249               LDR      R1,??ScreenSet_Paint_0+0xC  ;; Speech
   \   000000A4   0E18               ADDS     R6,R1,R0
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   5148               LDR      R0,??ScreenSet_Paint_0+0x10  ;; `?<Constant "Alarm">`
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   5148               LDR      R0,??ScreenSet_Paint_0+0x14  ;; 0x753
   \   000000AE   3118               ADDS     R1,R6,R0
   \   000000B0   8738               SUBS     R0,R0,#+135
   \   000000B2   3018               ADDS     R0,R6,R0
   \   000000B4   03B4               PUSH     {R0,R1}
   \   000000B6   5348               LDR      R0,??ScreenSet_Paint_0+0x24  ;; 0x4a1
   \   000000B8   3118               ADDS     R1,R6,R0
   \   000000BA   0F38               SUBS     R0,R0,#+15
   \   000000BC   3018               ADDS     R0,R6,R0
   \   000000BE   03B4               PUSH     {R0,R1}
   \   000000C0   5148               LDR      R0,??ScreenSet_Paint_0+0x28  ;; 0x483
   \   000000C2   3118               ADDS     R1,R6,R0
   \   000000C4   0F38               SUBS     R0,R0,#+15
   \   000000C6   3018               ADDS     R0,R6,R0
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   5048               LDR      R0,??ScreenSet_Paint_0+0x2C  ;; 0x465
   \   000000CC   3118               ADDS     R1,R6,R0
   \   000000CE   50A0               ADR      R0,??ScreenSet_Paint_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   000000D0   03B4               PUSH     {R0,R1}
   \   000000D2   0021               MOVS     R1,#+0
   \   000000D4   0800               MOVS     R0,R1
   \   000000D6   03B4               PUSH     {R0,R1}
   \   000000D8   0300               MOVS     R3,R0
   \   000000DA   0D22               MOVS     R2,#+13
   \   000000DC   3F1D               ADDS     R7,R7,#+4
   \   000000DE   3900               MOVS     R1,R7
   \   000000E0   0906               LSLS     R1,R1,#+24
   \   000000E2   090E               LSRS     R1,R1,#+24
   \   000000E4   4B48               LDR      R0,??ScreenSet_Paint_0+0x34  ;; 0x4dd
   \   000000E6   3018               ADDS     R0,R6,R0
   \   000000E8   ........           BL       List_Paint
   \   000000EC   0CB0               ADD      SP,SP,#+48
   4064            }
   4065          #else  
   4066            if (CurModifSheet==0)
   4067            {
   4068              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+3,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Styl6,Speech[g_leng].Styl7, Speech[g_leng].Styl8,Speech[g_leng].Termostat,Speech[g_leng].Terminarz); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4069            }else{
   4070              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+3,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Termostat,Speech[g_leng].Terminarz); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4071            }
   4072          #endif
   4073            
   4074             char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \                     ??ScreenSet_Paint_6:
   \   000000EE   4A4E               LDR      R6,??ScreenSet_Paint_0+0x38  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`
   \   000000F0   02A8               ADD      R0,SP,#+8
   \   000000F2   0ECE               LDM      R6!,{R1-R3}
   \   000000F4   0EC0               STM      R0!,{R1-R3}
   \   000000F6   0C3E               SUBS     R6,R6,#+12
   4075             char MarkPoz= ScreenLokal->PaternDesign+1-RowsPoz; 
   \   000000F8   2078               LDRB     R0,[R4, #+0]
   \   000000FA   401C               ADDS     R0,R0,#+1
   \   000000FC   3949               LDR      R1,??ScreenSet_Paint_0+0x4  ;; RowsPoz
   \   000000FE   0978               LDRB     R1,[R1, #+0]
   \   00000100   401A               SUBS     R0,R0,R1
   \   00000102   0006               LSLS     R0,R0,#+24
   \   00000104   000E               LSRS     R0,R0,#+24
   4076             if (CurModifSheet==0)
   \   00000106   6979               LDRB     R1,[R5, #+5]
   \   00000108   0029               CMP      R1,#+0
   \   0000010A   13D1               BNE      ??ScreenSet_Paint_7
   4077               {
   4078                if ((MarkPoz!=0) && (MarkPoz<=6))   CopyToCanvasPoint((char *)ekran_tab,52,98-(13*( MarkPoz)),8,10);  
   \   0000010C   0100               MOVS     R1,R0
   \   0000010E   24D0               BEQ      ??ScreenSet_Paint_8
   \   00000110   0729               CMP      R1,#+7
   \   00000112   22D2               BCS      ??ScreenSet_Paint_8
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   0A21               MOVS     R1,#+10
   \   00000118   0091               STR      R1,[SP, #+0]
   \   0000011A   0823               MOVS     R3,#+8
   \   0000011C   6221               MOVS     R1,#+98
   \   0000011E   0D22               MOVS     R2,#+13
   \   00000120   5043               MULS     R0,R2,R0
   \   00000122   0A1A               SUBS     R2,R1,R0
   \   00000124   1206               LSLS     R2,R2,#+24
   \   00000126   120E               LSRS     R2,R2,#+24
   \   00000128   3421               MOVS     R1,#+52
   \   0000012A   04A8               ADD      R0,SP,#+16
   \   0000012C   ........           BL       CopyToCanvasPoint
   \   00000130   02B0               ADD      SP,SP,#+8
   \   00000132   12E0               B        ??ScreenSet_Paint_8
   4079               }else{
   4080                if ((MarkPoz!=0) && (MarkPoz<=6))   CopyToCanvasPoint((char *)ekran_tab,52,98-(13*( MarkPoz)),8,10); 
   \                     ??ScreenSet_Paint_7:
   \   00000134   0100               MOVS     R1,R0
   \   00000136   10D0               BEQ      ??ScreenSet_Paint_8
   \   00000138   0729               CMP      R1,#+7
   \   0000013A   0ED2               BCS      ??ScreenSet_Paint_8
   \   0000013C   82B0               SUB      SP,SP,#+8
   \   0000013E   0A21               MOVS     R1,#+10
   \   00000140   0091               STR      R1,[SP, #+0]
   \   00000142   0823               MOVS     R3,#+8
   \   00000144   6221               MOVS     R1,#+98
   \   00000146   0D22               MOVS     R2,#+13
   \   00000148   5043               MULS     R0,R2,R0
   \   0000014A   0A1A               SUBS     R2,R1,R0
   \   0000014C   1206               LSLS     R2,R2,#+24
   \   0000014E   120E               LSRS     R2,R2,#+24
   \   00000150   3421               MOVS     R1,#+52
   \   00000152   04A8               ADD      R0,SP,#+16
   \   00000154   ........           BL       CopyToCanvasPoint
   \   00000158   02B0               ADD      SP,SP,#+8
   4081               }
   4082          
   4083            
   4084            CleanCanvasArea(1,97,60,11,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??ScreenSet_Paint_8:
   \   0000015A   82B0               SUB      SP,SP,#+8
   \   0000015C   0020               MOVS     R0,#+0
   \   0000015E   0090               STR      R0,[SP, #+0]
   \   00000160   0B23               MOVS     R3,#+11
   \   00000162   3C22               MOVS     R2,#+60
   \   00000164   6121               MOVS     R1,#+97
   \   00000166   0120               MOVS     R0,#+1
   \   00000168   ........           BL       CleanCanvasArea
   \   0000016C   02B0               ADD      SP,SP,#+8
   4085              
   4086            Button("< ",1,96,15,13);
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   0D20               MOVS     R0,#+13
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   0F23               MOVS     R3,#+15
   \   00000176   6022               MOVS     R2,#+96
   \   00000178   0121               MOVS     R1,#+1
   \   0000017A   28A0               ADR      R0,??ScreenSet_Paint_0+0x3C  ;; 0x3C, 0x20, 0x00, 0x00
   \   0000017C   ........           BL       Button
   \   00000180   02B0               ADD      SP,SP,#+8
   4087            Button("> ",47,96,15,13);
   \   00000182   82B0               SUB      SP,SP,#+8
   \   00000184   0D20               MOVS     R0,#+13
   \   00000186   0090               STR      R0,[SP, #+0]
   \   00000188   0F23               MOVS     R3,#+15
   \   0000018A   6022               MOVS     R2,#+96
   \   0000018C   2F21               MOVS     R1,#+47
   \   0000018E   24A0               ADR      R0,??ScreenSet_Paint_0+0x40  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000190   ........           BL       Button
   \   00000194   02B0               ADD      SP,SP,#+8
   4088            
   4089            char txt[5]={'N', 'r', '.',':', 0,};
   \   00000196   6846               MOV      R0,SP
   \   00000198   0C36               ADDS     R6,R6,#+12
   \   0000019A   06CE               LDM      R6!,{R1,R2}
   \   0000019C   06C0               STM      R0!,{R1,R2}
   4090            
   4091            CharToStr(CurModifSheet, &txt[4], 1); //(char Value, char *Vstring, char ill);
   \   0000019E   0122               MOVS     R2,#+1
   \   000001A0   6946               MOV      R1,SP
   \   000001A2   091D               ADDS     R1,R1,#+4
   \   000001A4   6879               LDRB     R0,[R5, #+5]
   \   000001A6   ........           BL       CharToStr
   4092            Label(txt,0,22,98,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001AA   82B0               SUB      SP,SP,#+8
   \   000001AC   0020               MOVS     R0,#+0
   \   000001AE   0090               STR      R0,[SP, #+0]
   \   000001B0   7F21               MOVS     R1,#+127
   \   000001B2   0120               MOVS     R0,#+1
   \   000001B4   03B4               PUSH     {R0,R1}
   \   000001B6   1421               MOVS     R1,#+20
   \   000001B8   0520               MOVS     R0,#+5
   \   000001BA   03B4               PUSH     {R0,R1}
   \   000001BC   6223               MOVS     R3,#+98
   \   000001BE   1622               MOVS     R2,#+22
   \   000001C0   0021               MOVS     R1,#+0
   \   000001C2   06A8               ADD      R0,SP,#+24
   \   000001C4   ........           BL       Label
   \   000001C8   06B0               ADD      SP,SP,#+24
   4093          
   4094            H_line(0,95,61,1); 
   \   000001CA   0123               MOVS     R3,#+1
   \   000001CC   3D22               MOVS     R2,#+61
   \   000001CE   5F21               MOVS     R1,#+95
   \   000001D0   0020               MOVS     R0,#+0
   \   000001D2   ........           BL       H_line
   4095          
   4096          }
   \   000001D6   05B0               ADD      SP,SP,#+20
   \   000001D8   F0BC               POP      {R4-R7}
   \   000001DA   01BC               POP      {R0}
   \   000001DC   0047               BX       R0               ;; return
   \   000001DE   C046               Nop      
   \                     ??ScreenSet_Paint_0:
   \   000001E0   ........           DC32     TextToChangeLength
   \   000001E4   ........           DC32     RowsPoz
   \   000001E8   ........           DC32     g_leng
   \   000001EC   ........           DC32     Speech
   \   000001F0   ........           DC32     `?<Constant "Alarm">`
   \   000001F4   53070000           DC32     0x753
   \   000001F8   CC060000           DC32     0x6cc
   \   000001FC   CE040000           DC32     0x4ce
   \   00000200   BF040000           DC32     0x4bf
   \   00000204   A1040000           DC32     0x4a1
   \   00000208   83040000           DC32     0x483
   \   0000020C   65040000           DC32     0x465
   \   00000210   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000214   DD040000           DC32     0x4dd
   \   00000218   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`
   \   0000021C   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000220   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   4097          
   4098              char MenuPaintExecute=0;
   4099          

   \                                 In section Debug.txt, align 4, keep-with-next
   4100          void ScreenSet_Event(_Screen* ScreenLokal)
   4101          {
   \                     ScreenSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4102              char PaternDesignNr;
   4103          
   4104              MenuPaintExecute=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   554E               LDR      R6,??ScreenSet_Event_0  ;; TextToChangeLength
   \   00000008   2800               MOVS     R0,R5
   \   0000000A   F075               STRB     R0,[R6, #+23]
   4105            if (CurModifSheet==0) 
   \   0000000C   7079               LDRB     R0,[R6, #+5]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   01D1               BNE      ??ScreenSet_Event_1
   4106            {
   4107              PaternDesignNr=ScreenSetTab_0_Nr;
   \   00000012   0822               MOVS     R2,#+8
   \   00000014   00E0               B        ??ScreenSet_Event_2
   4108            }else{
   4109              PaternDesignNr=ScreenSetTab_1_Nr; 
   \                     ??ScreenSet_Event_1:
   \   00000016   0522               MOVS     R2,#+5
   4110            }      
   4111          
   4112                  int ans;
   4113          #ifdef __ALARM
   4114                  ans= List_Event(X_up, Y_up, X_down, Y_down, PaternDesignNr+4 , 13, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??ScreenSet_Event_2:
   \   00000018   2900               MOVS     R1,R5
   \   0000001A   0800               MOVS     R0,R1
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0D21               MOVS     R1,#+13
   \   00000020   121D               ADDS     R2,R2,#+4
   \   00000022   1000               MOVS     R0,R2
   \   00000024   0006               LSLS     R0,R0,#+24
   \   00000026   000E               LSRS     R0,R0,#+24
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   4D48               LDR      R0,??ScreenSet_Event_0+0x4  ;; Y_down
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   435E               LDRSH    R3,[R0, R1]
   \   00000030   4C48               LDR      R0,??ScreenSet_Event_0+0x8  ;; X_down
   \   00000032   425E               LDRSH    R2,[R0, R1]
   \   00000034   4C48               LDR      R0,??ScreenSet_Event_0+0xC  ;; Y_up
   \   00000036   415E               LDRSH    R1,[R0, R1]
   \   00000038   4C48               LDR      R0,??ScreenSet_Event_0+0x10  ;; X_up
   \   0000003A   0027               MOVS     R7,#+0
   \   0000003C   C05F               LDRSH    R0,[R0, R7]
   \   0000003E   ........           BL       List_Event
   \   00000042   04B0               ADD      SP,SP,#+16
   \   00000044   0700               MOVS     R7,R0
   4115          #else
   4116                  ans= List_Event(X_up, Y_up, X_down, Y_down, PaternDesignNr+3 , 13, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   4117          #endif        
   4118                  if ((ans>0) && (RowsPoz+1>=ans)) ans=0;
   \   00000046   012F               CMP      R7,#+1
   \   00000048   05DB               BLT      ??ScreenSet_Event_3
   \   0000004A   4948               LDR      R0,??ScreenSet_Event_0+0x14  ;; RowsPoz
   \   0000004C   0078               LDRB     R0,[R0, #+0]
   \   0000004E   401C               ADDS     R0,R0,#+1
   \   00000050   B842               CMP      R0,R7
   \   00000052   00DB               BLT      ??ScreenSet_Event_3
   \   00000054   2F00               MOVS     R7,R5
   4119                      
   4120                        if (ans>1) 
   \                     ??ScreenSet_Event_3:
   \   00000056   022F               CMP      R7,#+2
   \   00000058   38DB               BLT      ??ScreenSet_Event_4
   4121                        { 
   4122                          OpenScreenSet=0;
   \   0000005A   2800               MOVS     R0,R5
   \   0000005C   B075               STRB     R0,[R6, #+22]
   4123                          ScreenLokal->PaternDesign=ans-2;
   \   0000005E   3800               MOVS     R0,R7
   \   00000060   801E               SUBS     R0,R0,#+2
   \   00000062   2070               STRB     R0,[R4, #+0]
   4124                          if (((CurModifSheet==0) && (ans==PaternDesignThermoMS) ) || ((CurModifSheet>0) && (ans==PaternDesignThermoSS)))
   \   00000064   7079               LDRB     R0,[R6, #+5]
   \   00000066   0028               CMP      R0,#+0
   \   00000068   01D1               BNE      ??ScreenSet_Event_5
   \   0000006A   0A2F               CMP      R7,#+10
   \   0000006C   03D0               BEQ      ??ScreenSet_Event_6
   \                     ??ScreenSet_Event_5:
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   07D0               BEQ      ??ScreenSet_Event_7
   \   00000072   072F               CMP      R7,#+7
   \   00000074   05D1               BNE      ??ScreenSet_Event_7
   4125                          {
   4126                            MenuLevel=(MenuLevel*10+2);         //uruchomienie ustawiania termostatu
   \                     ??ScreenSet_Event_6:
   \   00000076   B06C               LDR      R0,[R6, #+72]
   \   00000078   0A21               MOVS     R1,#+10
   \   0000007A   4843               MULS     R0,R1,R0
   \   0000007C   801C               ADDS     R0,R0,#+2
   \   0000007E   B064               STR      R0,[R6, #+72]
   \   00000080   20E0               B        ??ScreenSet_Event_8
   4127                          }
   4128                          else if (((CurModifSheet==0) && (ans==PaternDesignTimetableMS) ) || ((CurModifSheet>0) && (ans==PaternDesignTimetableSS)))
   \                     ??ScreenSet_Event_7:
   \   00000082   0028               CMP      R0,#+0
   \   00000084   01D1               BNE      ??ScreenSet_Event_9
   \   00000086   0B2F               CMP      R7,#+11
   \   00000088   03D0               BEQ      ??ScreenSet_Event_10
   \                     ??ScreenSet_Event_9:
   \   0000008A   0028               CMP      R0,#+0
   \   0000008C   07D0               BEQ      ??ScreenSet_Event_11
   \   0000008E   082F               CMP      R7,#+8
   \   00000090   05D1               BNE      ??ScreenSet_Event_11
   4129                          {
   4130                            MenuLevel=(MenuLevel*10+3);         //ustawianie ekranów
   \                     ??ScreenSet_Event_10:
   \   00000092   B06C               LDR      R0,[R6, #+72]
   \   00000094   0A21               MOVS     R1,#+10
   \   00000096   4843               MULS     R0,R1,R0
   \   00000098   C01C               ADDS     R0,R0,#+3
   \   0000009A   B064               STR      R0,[R6, #+72]
   \   0000009C   12E0               B        ??ScreenSet_Event_8
   4131                      
   4132                          #ifdef __ALARM
   4133                          }
   4134                          else if (((CurModifSheet==0) && (ans==PaternDesignAlarmMS) ) || ((CurModifSheet>0) && (ans==PaternDesignAlarmSS)))
   \                     ??ScreenSet_Event_11:
   \   0000009E   0028               CMP      R0,#+0
   \   000000A0   01D1               BNE      ??ScreenSet_Event_12
   \   000000A2   0C2F               CMP      R7,#+12
   \   000000A4   03D0               BEQ      ??ScreenSet_Event_13
   \                     ??ScreenSet_Event_12:
   \   000000A6   0028               CMP      R0,#+0
   \   000000A8   07D0               BEQ      ??ScreenSet_Event_14
   \   000000AA   092F               CMP      R7,#+9
   \   000000AC   05D1               BNE      ??ScreenSet_Event_14
   4135                          {
   4136                          MenuLevel=(MenuLevel*10+4);         //ustawianie ekranów
   \                     ??ScreenSet_Event_13:
   \   000000AE   B06C               LDR      R0,[R6, #+72]
   \   000000B0   0A21               MOVS     R1,#+10
   \   000000B2   4843               MULS     R0,R1,R0
   \   000000B4   001D               ADDS     R0,R0,#+4
   \   000000B6   B064               STR      R0,[R6, #+72]
   \   000000B8   04E0               B        ??ScreenSet_Event_8
   4137                          #endif
   4138                          }else{
   4139                            MenuLevel=(MenuLevel*10+1);         //ustawianie ekranów
   \                     ??ScreenSet_Event_14:
   \   000000BA   B06C               LDR      R0,[R6, #+72]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   4843               MULS     R0,R1,R0
   \   000000C0   401C               ADDS     R0,R0,#+1
   \   000000C2   B064               STR      R0,[R6, #+72]
   4140                          }
   4141                          MenuPaintExecute=1;
   \                     ??ScreenSet_Event_8:
   \   000000C4   0120               MOVS     R0,#+1
   \   000000C6   0100               MOVS     R1,R0
   \   000000C8   F175               STRB     R1,[R6, #+23]
   4142                          ProgramChange=1;
   \   000000CA   3072               STRB     R0,[R6, #+8]
   4143                        }else if (ans==1)
   4144                        {
   4145          
   4146                        }  
   4147                        
   4148                                        
   4149                          if ((Button("< ",1,96,15,13)==1) && (CurModifSheet>0)) {MenuPaintExecute=1; CurModifSheet--; RowsPoz=0; OpenScreenSet=0;}
   \                     ??ScreenSet_Event_4:
   \   000000CC   82B0               SUB      SP,SP,#+8
   \   000000CE   0D20               MOVS     R0,#+13
   \   000000D0   0090               STR      R0,[SP, #+0]
   \   000000D2   0F23               MOVS     R3,#+15
   \   000000D4   6022               MOVS     R2,#+96
   \   000000D6   0121               MOVS     R1,#+1
   \   000000D8   26A0               ADR      R0,??ScreenSet_Event_0+0x18  ;; 0x3C, 0x20, 0x00, 0x00
   \   000000DA   ........           BL       Button
   \   000000DE   02B0               ADD      SP,SP,#+8
   \   000000E0   0128               CMP      R0,#+1
   \   000000E2   0BD1               BNE      ??ScreenSet_Event_15
   \   000000E4   7079               LDRB     R0,[R6, #+5]
   \   000000E6   0028               CMP      R0,#+0
   \   000000E8   08D0               BEQ      ??ScreenSet_Event_15
   \   000000EA   0121               MOVS     R1,#+1
   \   000000EC   F175               STRB     R1,[R6, #+23]
   \   000000EE   401E               SUBS     R0,R0,#+1
   \   000000F0   7071               STRB     R0,[R6, #+5]
   \   000000F2   1F48               LDR      R0,??ScreenSet_Event_0+0x14  ;; RowsPoz
   \   000000F4   2900               MOVS     R1,R5
   \   000000F6   0170               STRB     R1,[R0, #+0]
   \   000000F8   2800               MOVS     R0,R5
   \   000000FA   B075               STRB     R0,[R6, #+22]
   4150                          if ((Button("> ",47,96,15,13)==1)&& (CurModifSheet<ScreenNr-1)) {
   \                     ??ScreenSet_Event_15:
   \   000000FC   82B0               SUB      SP,SP,#+8
   \   000000FE   0D20               MOVS     R0,#+13
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   0F23               MOVS     R3,#+15
   \   00000104   6022               MOVS     R2,#+96
   \   00000106   2F21               MOVS     R1,#+47
   \   00000108   1BA0               ADR      R0,??ScreenSet_Event_0+0x1C  ;; 0x3E, 0x20, 0x00, 0x00
   \   0000010A   ........           BL       Button
   \   0000010E   02B0               ADD      SP,SP,#+8
   \   00000110   0128               CMP      R0,#+1
   \   00000112   0BD1               BNE      ??ScreenSet_Event_16
   \   00000114   7079               LDRB     R0,[R6, #+5]
   \   00000116   0728               CMP      R0,#+7
   \   00000118   08D2               BCS      ??ScreenSet_Event_16
   4151                            OpenScreenSet=0;
   \   0000011A   2900               MOVS     R1,R5
   \   0000011C   B175               STRB     R1,[R6, #+22]
   4152                            RowsPoz=0;
   \   0000011E   1449               LDR      R1,??ScreenSet_Event_0+0x14  ;; RowsPoz
   \   00000120   0D70               STRB     R5,[R1, #+0]
   4153                            MenuPaintExecute=1; 
   \   00000122   0121               MOVS     R1,#+1
   \   00000124   F175               STRB     R1,[R6, #+23]
   4154                            CurModifSheet++; 
   \   00000126   401C               ADDS     R0,R0,#+1
   \   00000128   7071               STRB     R0,[R6, #+5]
   \   0000012A   0FE0               B        ??ScreenSet_Event_17
   4155                             }
   4156                          
   4157                        
   4158                        else if (ans<0)
   \                     ??ScreenSet_Event_16:
   \   0000012C   002F               CMP      R7,#+0
   \   0000012E   0DD5               BPL      ??ScreenSet_Event_17
   4159                        {
   4160                             if (ProgramChange) 
   \   00000130   307A               LDRB     R0,[R6, #+8]
   \   00000132   0028               CMP      R0,#+0
   \   00000134   B06C               LDR      R0,[R6, #+72]
   \   00000136   03D0               BEQ      ??ScreenSet_Event_18
   4161                              {
   4162                                  MenuLevel=(MenuLevel*10+0);
   \   00000138   0A21               MOVS     R1,#+10
   \   0000013A   4843               MULS     R0,R1,R0
   \   0000013C   B064               STR      R0,[R6, #+72]
   \   0000013E   03E0               B        ??ScreenSet_Event_19
   4163                              }else{
   4164                                  MenuLevel=(MenuLevel/10);
   \                     ??ScreenSet_Event_18:
   \   00000140   0A21               MOVS     R1,#+10
   \   00000142   ........           BL       __aeabi_idivmod
   \   00000146   B064               STR      R0,[R6, #+72]
   4165                              }
   4166                                MenuPaintExecute=1;
   \                     ??ScreenSet_Event_19:
   \   00000148   0120               MOVS     R0,#+1
   \   0000014A   F075               STRB     R0,[R6, #+23]
   4167                          
   4168                        }else{
   4169          
   4170                        }
   4171                        
   4172                        
   4173                        
   4174                        if (MenuPaintExecute) MenuPaint(); 
   \                     ??ScreenSet_Event_17:
   \   0000014C   F07D               LDRB     R0,[R6, #+23]
   \   0000014E   0028               CMP      R0,#+0
   \   00000150   01D0               BEQ      ??ScreenSet_Event_20
   \   00000152   ........           BL       MenuPaint
   4175                     
   4176             
   4177          }
   \                     ??ScreenSet_Event_20:
   \   00000156   F8BC               POP      {R3-R7}
   \   00000158   01BC               POP      {R0}
   \   0000015A   0047               BX       R0               ;; return
   \                     ??ScreenSet_Event_0:
   \   0000015C   ........           DC32     TextToChangeLength
   \   00000160   ........           DC32     Y_down
   \   00000164   ........           DC32     X_down
   \   00000168   ........           DC32     Y_up
   \   0000016C   ........           DC32     X_up
   \   00000170   ........           DC32     RowsPoz
   \   00000174   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000178   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   4178          
   4179          
   4180          
   4181          

   \                                 In section Debug.txt, align 4, keep-with-next
   4182          void ThermostatSet_Paint(_Screen* Screen)
   4183          {          
   \                     ThermostatSet_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0300               MOVS     R3,R0
   \   00000016   6C22               MOVS     R2,#+108
   \   00000018   0121               MOVS     R1,#+1
   \   0000001A   9E48               LDR      R0,??ThermostatSet_Paint_0  ;; `?<Constant {129, 0}>` + 4
   4184                  List_Paint("Therm set ",1,108,0,0,3,0,0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   0000001C   ........           BL       List_Paint
   \   00000020   0AB0               ADD      SP,SP,#+40
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3421               MOVS     R1,#+52
   \   00000030   0A20               MOVS     R0,#+10
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   6423               MOVS     R3,#+100
   \   00000036   0522               MOVS     R2,#+5
   \   00000038   0221               MOVS     R1,#+2
   \   0000003A   9748               LDR      R0,??ThermostatSet_Paint_0+0x4  ;; 0x6ea
   \   0000003C   974C               LDR      R4,??ThermostatSet_Paint_0+0x8  ;; g_leng
   \   0000003E   2468               LDR      R4,[R4, #+0]
   \   00000040   9625               MOVS     R5,#+150
   \   00000042   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000044   6C43               MULS     R4,R5,R4
   \   00000046   964D               LDR      R5,??ThermostatSet_Paint_0+0xC  ;; Speech
   \   00000048   2C19               ADDS     R4,R5,R4
   \   0000004A   2018               ADDS     R0,R4,R0
   4185                 
   4186                 char txt[8];
   4187                 
   4188                 
   4189                    Label(Speech[g_leng].Czujnik,2,5, 100 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000004C   ........           BL       Label
   \   00000050   06B0               ADD      SP,SP,#+24
   \   00000052   6C46               MOV      R4,SP
   \   00000054   4920               MOVS     R0,#+73
   \   00000056   2070               STRB     R0,[R4, #+0]
   \   00000058   6420               MOVS     R0,#+100
   \   0000005A   6070               STRB     R0,[R4, #+1]
   \   0000005C   3A20               MOVS     R0,#+58
   \   0000005E   A070               STRB     R0,[R4, #+2]
   \   00000060   2020               MOVS     R0,#+32
   \   00000062   E070               STRB     R0,[R4, #+3]
   4190                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   4191                    char ind=CharToStr(Screen->Thermo.SensorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000064   0498               LDR      R0,[SP, #+16]
   \   00000066   8C30               ADDS     R0,R0,#+140
   \   00000068   0290               STR      R0,[SP, #+8]
   \   0000006A   0222               MOVS     R2,#+2
   \   0000006C   2100               MOVS     R1,R4
   \   0000006E   C91C               ADDS     R1,R1,#+3
   \   00000070   C078               LDRB     R0,[R0, #+3]
   \   00000072   ........           BL       CharToStr
   \   00000076   0200               MOVS     R2,R0
   4192                    Label(txt,2,20, 88 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   1621               MOVS     R1,#+22
   \   00000086   D21C               ADDS     R2,R2,#+3
   \   00000088   1000               MOVS     R0,R2
   \   0000008A   0006               LSLS     R0,R0,#+24
   \   0000008C   000E               LSRS     R0,R0,#+24
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   5823               MOVS     R3,#+88
   \   00000092   1422               MOVS     R2,#+20
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   06A8               ADD      R0,SP,#+24
   \   00000098   ........           BL       Label
   \   0000009C   06B0               ADD      SP,SP,#+24
   4193                  
   4194                    txt[0]='<';txt[1]=0;
   \   0000009E   3C25               MOVS     R5,#+60
   \   000000A0   2570               STRB     R5,[R4, #+0]
   \   000000A2   0026               MOVS     R6,#+0
   \   000000A4   3000               MOVS     R0,R6
   \   000000A6   6070               STRB     R0,[R4, #+1]
   4195                    Button(txt,3,85,15,15); 
   \   000000A8   82B0               SUB      SP,SP,#+8
   \   000000AA   0F20               MOVS     R0,#+15
   \   000000AC   0090               STR      R0,[SP, #+0]
   \   000000AE   0300               MOVS     R3,R0
   \   000000B0   5522               MOVS     R2,#+85
   \   000000B2   0321               MOVS     R1,#+3
   \   000000B4   02A8               ADD      R0,SP,#+8
   \   000000B6   ........           BL       Button
   \   000000BA   02B0               ADD      SP,SP,#+8
   4196                    txt[0]='>';
   \   000000BC   3E27               MOVS     R7,#+62
   \   000000BE   2770               STRB     R7,[R4, #+0]
   4197                    Button(txt,45,85,15,15); 
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   0F20               MOVS     R0,#+15
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   0300               MOVS     R3,R0
   \   000000C8   5522               MOVS     R2,#+85
   \   000000CA   2D21               MOVS     R1,#+45
   \   000000CC   02A8               ADD      R0,SP,#+8
   \   000000CE   ........           BL       Button
   \   000000D2   02B0               ADD      SP,SP,#+8
   4198                    
   4199                    txt[0]='R'; txt[1]='e'; txt[2]='g'; txt[3]=':'; txt[4]=' ';
   \   000000D4   5220               MOVS     R0,#+82
   \   000000D6   2070               STRB     R0,[R4, #+0]
   \   000000D8   6520               MOVS     R0,#+101
   \   000000DA   6070               STRB     R0,[R4, #+1]
   \   000000DC   6720               MOVS     R0,#+103
   \   000000DE   A070               STRB     R0,[R4, #+2]
   \   000000E0   3A20               MOVS     R0,#+58
   \   000000E2   E070               STRB     R0,[R4, #+3]
   \   000000E4   2020               MOVS     R0,#+32
   \   000000E6   2071               STRB     R0,[R4, #+4]
   4200                    ind=CharToStr(Screen->Thermo.SensorReg, &(txt[4]), 2); //(char Value, char *Vstring, char ill);
   \   000000E8   0222               MOVS     R2,#+2
   \   000000EA   2100               MOVS     R1,R4
   \   000000EC   091D               ADDS     R1,R1,#+4
   \   000000EE   0298               LDR      R0,[SP, #+8]
   \   000000F0   0079               LDRB     R0,[R0, #+4]
   \   000000F2   ........           BL       CharToStr
   \   000000F6   0200               MOVS     R2,R0
   4201                   
   4202                    Label(txt,2,20, 72 ,ind+4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000F8   82B0               SUB      SP,SP,#+8
   \   000000FA   3000               MOVS     R0,R6
   \   000000FC   0090               STR      R0,[SP, #+0]
   \   000000FE   7F21               MOVS     R1,#+127
   \   00000100   0120               MOVS     R0,#+1
   \   00000102   03B4               PUSH     {R0,R1}
   \   00000104   1621               MOVS     R1,#+22
   \   00000106   121D               ADDS     R2,R2,#+4
   \   00000108   1000               MOVS     R0,R2
   \   0000010A   0006               LSLS     R0,R0,#+24
   \   0000010C   000E               LSRS     R0,R0,#+24
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   4823               MOVS     R3,#+72
   \   00000112   1422               MOVS     R2,#+20
   \   00000114   0221               MOVS     R1,#+2
   \   00000116   06A8               ADD      R0,SP,#+24
   \   00000118   ........           BL       Label
   \   0000011C   06B0               ADD      SP,SP,#+24
   4203                  
   4204                    txt[0]='<';txt[1]=0;
   \   0000011E   2570               STRB     R5,[R4, #+0]
   \   00000120   3000               MOVS     R0,R6
   \   00000122   6070               STRB     R0,[R4, #+1]
   4205                    Button(txt,3,69,15,15); 
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0F20               MOVS     R0,#+15
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   0300               MOVS     R3,R0
   \   0000012C   4522               MOVS     R2,#+69
   \   0000012E   0321               MOVS     R1,#+3
   \   00000130   02A8               ADD      R0,SP,#+8
   \   00000132   ........           BL       Button
   \   00000136   02B0               ADD      SP,SP,#+8
   4206                    txt[0]='>';
   \   00000138   2770               STRB     R7,[R4, #+0]
   4207                    Button(txt,45,69,15,15); 
   \   0000013A   82B0               SUB      SP,SP,#+8
   \   0000013C   0F20               MOVS     R0,#+15
   \   0000013E   0090               STR      R0,[SP, #+0]
   \   00000140   0300               MOVS     R3,R0
   \   00000142   4522               MOVS     R2,#+69
   \   00000144   2D21               MOVS     R1,#+45
   \   00000146   02A8               ADD      R0,SP,#+8
   \   00000148   ........           BL       Button
   \   0000014C   02B0               ADD      SP,SP,#+8
   4208            
   4209                    
   4210                    
   4211                    
   4212                    Label(Speech[g_leng].Wykonawca,2,5, 58 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000014E   82B0               SUB      SP,SP,#+8
   \   00000150   3000               MOVS     R0,R6
   \   00000152   0090               STR      R0,[SP, #+0]
   \   00000154   7F21               MOVS     R1,#+127
   \   00000156   0120               MOVS     R0,#+1
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   3421               MOVS     R1,#+52
   \   0000015C   0A20               MOVS     R0,#+10
   \   0000015E   03B4               PUSH     {R0,R1}
   \   00000160   3A23               MOVS     R3,#+58
   \   00000162   0522               MOVS     R2,#+5
   \   00000164   0221               MOVS     R1,#+2
   \   00000166   02B5               PUSH     {R1,LR}
   \   00000168   9446               MOV      R12,R2
   \   0000016A   4E49               LDR      R1,??ThermostatSet_Paint_0+0x10  ;; 0x6f9
   \   0000016C   4B48               LDR      R0,??ThermostatSet_Paint_0+0x8  ;; g_leng
   \   0000016E   0068               LDR      R0,[R0, #+0]
   \   00000170   9622               MOVS     R2,#+150
   \   00000172   1201               LSLS     R2,R2,#+4        ;; #+2400
   \   00000174   5043               MULS     R0,R2,R0
   \   00000176   4A4A               LDR      R2,??ThermostatSet_Paint_0+0xC  ;; Speech
   \   00000178   1018               ADDS     R0,R2,R0
   \   0000017A   4018               ADDS     R0,R0,R1
   \   0000017C   6246               MOV      R2,R12
   \   0000017E   0099               LDR      R1,[SP, #0]
   \   00000180   02B0               ADD      SP,SP,#+8
   \   00000182   ........           BL       Label
   \   00000186   06B0               ADD      SP,SP,#+24
   4213                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   00000188   4920               MOVS     R0,#+73
   \   0000018A   2070               STRB     R0,[R4, #+0]
   \   0000018C   6420               MOVS     R0,#+100
   \   0000018E   6070               STRB     R0,[R4, #+1]
   \   00000190   3A20               MOVS     R0,#+58
   \   00000192   A070               STRB     R0,[R4, #+2]
   \   00000194   2020               MOVS     R0,#+32
   \   00000196   E070               STRB     R0,[R4, #+3]
   4214                    ind=CharToStr(Screen->Thermo.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000198   0222               MOVS     R2,#+2
   \   0000019A   2100               MOVS     R1,R4
   \   0000019C   C91C               ADDS     R1,R1,#+3
   \   0000019E   0298               LDR      R0,[SP, #+8]
   \   000001A0   0078               LDRB     R0,[R0, #+0]
   \   000001A2   ........           BL       CharToStr
   \   000001A6   0200               MOVS     R2,R0
   4215                    Label(txt,2,20, 45 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001A8   82B0               SUB      SP,SP,#+8
   \   000001AA   3000               MOVS     R0,R6
   \   000001AC   0090               STR      R0,[SP, #+0]
   \   000001AE   7F21               MOVS     R1,#+127
   \   000001B0   0120               MOVS     R0,#+1
   \   000001B2   03B4               PUSH     {R0,R1}
   \   000001B4   1621               MOVS     R1,#+22
   \   000001B6   D21C               ADDS     R2,R2,#+3
   \   000001B8   1000               MOVS     R0,R2
   \   000001BA   0006               LSLS     R0,R0,#+24
   \   000001BC   000E               LSRS     R0,R0,#+24
   \   000001BE   03B4               PUSH     {R0,R1}
   \   000001C0   2D23               MOVS     R3,#+45
   \   000001C2   1422               MOVS     R2,#+20
   \   000001C4   0221               MOVS     R1,#+2
   \   000001C6   06A8               ADD      R0,SP,#+24
   \   000001C8   ........           BL       Label
   \   000001CC   06B0               ADD      SP,SP,#+24
   4216                  
   4217                    txt[0]='<';txt[1]=0;
   \   000001CE   2570               STRB     R5,[R4, #+0]
   \   000001D0   3000               MOVS     R0,R6
   \   000001D2   6070               STRB     R0,[R4, #+1]
   4218                    Button(txt,3,42,15,15); 
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   0F20               MOVS     R0,#+15
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   0300               MOVS     R3,R0
   \   000001DC   2A22               MOVS     R2,#+42
   \   000001DE   0321               MOVS     R1,#+3
   \   000001E0   02A8               ADD      R0,SP,#+8
   \   000001E2   ........           BL       Button
   \   000001E6   02B0               ADD      SP,SP,#+8
   4219                    txt[0]='>';
   \   000001E8   2770               STRB     R7,[R4, #+0]
   4220                    Button(txt,45,42,15,15); 
   \   000001EA   82B0               SUB      SP,SP,#+8
   \   000001EC   0F20               MOVS     R0,#+15
   \   000001EE   0090               STR      R0,[SP, #+0]
   \   000001F0   0300               MOVS     R3,R0
   \   000001F2   2A22               MOVS     R2,#+42
   \   000001F4   2D21               MOVS     R1,#+45
   \   000001F6   02A8               ADD      R0,SP,#+8
   \   000001F8   ........           BL       Button
   \   000001FC   02B0               ADD      SP,SP,#+8
   4221                    
   4222                    txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   000001FE   5020               MOVS     R0,#+80
   \   00000200   2070               STRB     R0,[R4, #+0]
   \   00000202   3A20               MOVS     R0,#+58
   \   00000204   6070               STRB     R0,[R4, #+1]
   \   00000206   2020               MOVS     R0,#+32
   \   00000208   A070               STRB     R0,[R4, #+2]
   4223                    ind=CharToStr(Screen->Thermo.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000020A   0222               MOVS     R2,#+2
   \   0000020C   2100               MOVS     R1,R4
   \   0000020E   891C               ADDS     R1,R1,#+2
   \   00000210   0298               LDR      R0,[SP, #+8]
   \   00000212   4078               LDRB     R0,[R0, #+1]
   \   00000214   ........           BL       CharToStr
   \   00000218   0200               MOVS     R2,R0
   4224                   
   4225                    Label(txt,2,20, 29 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000021A   82B0               SUB      SP,SP,#+8
   \   0000021C   3000               MOVS     R0,R6
   \   0000021E   0090               STR      R0,[SP, #+0]
   \   00000220   7F21               MOVS     R1,#+127
   \   00000222   0120               MOVS     R0,#+1
   \   00000224   03B4               PUSH     {R0,R1}
   \   00000226   1621               MOVS     R1,#+22
   \   00000228   921C               ADDS     R2,R2,#+2
   \   0000022A   1000               MOVS     R0,R2
   \   0000022C   0006               LSLS     R0,R0,#+24
   \   0000022E   000E               LSRS     R0,R0,#+24
   \   00000230   03B4               PUSH     {R0,R1}
   \   00000232   1D23               MOVS     R3,#+29
   \   00000234   1422               MOVS     R2,#+20
   \   00000236   0221               MOVS     R1,#+2
   \   00000238   06A8               ADD      R0,SP,#+24
   \   0000023A   ........           BL       Label
   \   0000023E   06B0               ADD      SP,SP,#+24
   4226                  
   4227                    txt[0]='<';txt[1]=0;
   \   00000240   2570               STRB     R5,[R4, #+0]
   \   00000242   6670               STRB     R6,[R4, #+1]
   4228                    Button(txt,3,26,15,15); 
   \   00000244   82B0               SUB      SP,SP,#+8
   \   00000246   0F20               MOVS     R0,#+15
   \   00000248   0090               STR      R0,[SP, #+0]
   \   0000024A   0300               MOVS     R3,R0
   \   0000024C   1A22               MOVS     R2,#+26
   \   0000024E   0321               MOVS     R1,#+3
   \   00000250   02A8               ADD      R0,SP,#+8
   \   00000252   ........           BL       Button
   \   00000256   02B0               ADD      SP,SP,#+8
   4229                    txt[0]='>';
   \   00000258   2770               STRB     R7,[R4, #+0]
   4230                    Button(txt,45,26,15,15); 
   \   0000025A   82B0               SUB      SP,SP,#+8
   \   0000025C   0F20               MOVS     R0,#+15
   \   0000025E   0090               STR      R0,[SP, #+0]
   \   00000260   0300               MOVS     R3,R0
   \   00000262   1A22               MOVS     R2,#+26
   \   00000264   2D21               MOVS     R1,#+45
   \   00000266   02A8               ADD      R0,SP,#+8
   \   00000268   ........           BL       Button
   \   0000026C   02B0               ADD      SP,SP,#+8
   4231          
   4232                    if (CurModifSheet==0) ZoneButon(Screen->Button[0].Text,4,3,56,22,(char*)ButtonName[10*CurModifSheet]); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000026E   0E48               LDR      R0,??ThermostatSet_Paint_0+0x14  ;; TextToChangeLength + 5
   \   00000270   0078               LDRB     R0,[R0, #+0]
   \   00000272   0028               CMP      R0,#+0
   \   00000274   0AD1               BNE      ??ThermostatSet_Paint_1
   \   00000276   0D49               LDR      R1,??ThermostatSet_Paint_0+0x18  ;; `?<Constant {129, 0}>` + 1696
   \   00000278   1620               MOVS     R0,#+22
   \   0000027A   03B4               PUSH     {R0,R1}
   \   0000027C   3823               MOVS     R3,#+56
   \   0000027E   0322               MOVS     R2,#+3
   \   00000280   0421               MOVS     R1,#+4
   \   00000282   0698               LDR      R0,[SP, #+24]
   \   00000284   0B30               ADDS     R0,R0,#+11
   \   00000286   ........           BL       ZoneButon
   \   0000028A   02B0               ADD      SP,SP,#+8
   4233             
   4234                 
   4235          }
   \                     ??ThermostatSet_Paint_1:
   \   0000028C   05B0               ADD      SP,SP,#+20
   \   0000028E   F0BC               POP      {R4-R7}
   \   00000290   01BC               POP      {R0}
   \   00000292   0047               BX       R0               ;; return
   \                     ??ThermostatSet_Paint_0:
   \   00000294   ........           DC32     `?<Constant {129, 0}>` + 4
   \   00000298   EA060000           DC32     0x6ea
   \   0000029C   ........           DC32     g_leng
   \   000002A0   ........           DC32     Speech
   \   000002A4   F9060000           DC32     0x6f9
   \   000002A8   ........           DC32     TextToChangeLength + 5
   \   000002AC   ........           DC32     `?<Constant {129, 0}>` + 1696
   4236          

   \                                 In section Debug.txt, align 4, keep-with-next
   4237          void ThermostatSet_Event(_Screen* Screen)
   4238          {
   \                     ThermostatSet_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4239            char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   2E00               MOVS     R6,R5
   \   00000008   954F               LDR      R7,??ThermostatSet_Event_0  ;; Y_down
   \   0000000A   2900               MOVS     R1,R5
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   3B5E               LDRSH    R3,[R7, R0]
   \   00000016   9348               LDR      R0,??ThermostatSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   9248               LDR      R0,??ThermostatSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   8C46               MOV      R12,R1
   \   00000022   9248               LDR      R0,??ThermostatSet_Event_0+0xC  ;; X_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   405E               LDRSH    R0,[R0, R1]
   \   00000028   6146               MOV      R1,R12
   4240                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   07D5               BPL      ??ThermostatSet_Event_1
   4241                  {
   4242                    MenuLevel=(MenuLevel/10);
   \   00000034   8E4D               LDR      R5,??ThermostatSet_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A86C               LDR      R0,[R5, #+72]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   A864               STR      R0,[R5, #+72]
   4243                    Repaint=1;
   \   00000040   0126               MOVS     R6,#+1
   \   00000042   05E1               B        ??ThermostatSet_Event_2
   4244                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ThermostatSet_Event_1:
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   385E               LDRSH    R0,[R7, R0]
   \   00000048   7028               CMP      R0,#+112
   \   0000004A   05DB               BLT      ??ThermostatSet_Event_3
   \   0000004C   8648               LDR      R0,??ThermostatSet_Event_0+0x8  ;; Y_up
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   405E               LDRSH    R0,[R0, R1]
   \   00000052   7028               CMP      R0,#+112
   \   00000054   00DB               BLT      .+4
   \   00000056   FBE0               B        ??ThermostatSet_Event_2
   \                     ??ThermostatSet_Event_3:
   \   00000058   6F46               MOV      R7,SP
   \   0000005A   3C20               MOVS     R0,#+60
   \   0000005C   3870               STRB     R0,[R7, #+0]
   4245                  { 
   4246                    
   4247                    char txt[5];         
   4248                    txt[0]='<';txt[1]=0;
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   7870               STRB     R0,[R7, #+1]
   4249                    if (Button(txt,3,85,15,15)==1) { if(Screen->Thermo.SensorNode>0) Screen->Thermo.SensorNode--; else Screen->Thermo.SensorNode=NumberNeurons-1; Repaint=1;}  
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0F20               MOVS     R0,#+15
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   0300               MOVS     R3,R0
   \   0000006A   5522               MOVS     R2,#+85
   \   0000006C   0321               MOVS     R1,#+3
   \   0000006E   02A8               ADD      R0,SP,#+8
   \   00000070   ........           BL       Button
   \   00000074   02B0               ADD      SP,SP,#+8
   \   00000076   0128               CMP      R0,#+1
   \   00000078   0AD1               BNE      ??ThermostatSet_Event_4
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   8C30               ADDS     R0,R0,#+140
   \   0000007E   C178               LDRB     R1,[R0, #+3]
   \   00000080   0029               CMP      R1,#+0
   \   00000082   02D0               BEQ      ??ThermostatSet_Event_5
   \   00000084   491E               SUBS     R1,R1,#+1
   \   00000086   C170               STRB     R1,[R0, #+3]
   \   00000088   01E0               B        ??ThermostatSet_Event_6
   \                     ??ThermostatSet_Event_5:
   \   0000008A   2221               MOVS     R1,#+34
   \   0000008C   C170               STRB     R1,[R0, #+3]
   \                     ??ThermostatSet_Event_6:
   \   0000008E   0126               MOVS     R6,#+1
   \                     ??ThermostatSet_Event_4:
   \   00000090   3E20               MOVS     R0,#+62
   \   00000092   3870               STRB     R0,[R7, #+0]
   4250                    txt[0]='>';
   4251                    if (Button(txt,45,85,15,15)==1) { if(Screen->Thermo.SensorNode+1<NumberNeurons) Screen->Thermo.SensorNode++; else Screen->Thermo.SensorNode=0; Repaint=1;} 
   \   00000094   82B0               SUB      SP,SP,#+8
   \   00000096   0F20               MOVS     R0,#+15
   \   00000098   0090               STR      R0,[SP, #+0]
   \   0000009A   0300               MOVS     R3,R0
   \   0000009C   5522               MOVS     R2,#+85
   \   0000009E   2D21               MOVS     R1,#+45
   \   000000A0   02A8               ADD      R0,SP,#+8
   \   000000A2   ........           BL       Button
   \   000000A6   02B0               ADD      SP,SP,#+8
   \   000000A8   0128               CMP      R0,#+1
   \   000000AA   0ED1               BNE      ??ThermostatSet_Event_7
   \   000000AC   2000               MOVS     R0,R4
   \   000000AE   8C30               ADDS     R0,R0,#+140
   \   000000B0   C178               LDRB     R1,[R0, #+3]
   \   000000B2   491C               ADDS     R1,R1,#+1
   \   000000B4   0904               LSLS     R1,R1,#+16
   \   000000B6   090C               LSRS     R1,R1,#+16
   \   000000B8   2329               CMP      R1,#+35
   \   000000BA   03D2               BCS      ??ThermostatSet_Event_8
   \   000000BC   C178               LDRB     R1,[R0, #+3]
   \   000000BE   491C               ADDS     R1,R1,#+1
   \   000000C0   C170               STRB     R1,[R0, #+3]
   \   000000C2   01E0               B        ??ThermostatSet_Event_9
   \                     ??ThermostatSet_Event_8:
   \   000000C4   2900               MOVS     R1,R5
   \   000000C6   C170               STRB     R1,[R0, #+3]
   \                     ??ThermostatSet_Event_9:
   \   000000C8   0126               MOVS     R6,#+1
   4252                   
   4253                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_7:
   \   000000CA   3C20               MOVS     R0,#+60
   \   000000CC   3870               STRB     R0,[R7, #+0]
   \   000000CE   2800               MOVS     R0,R5
   \   000000D0   7870               STRB     R0,[R7, #+1]
   4254                    if (Button(txt,3,69,15,15)==1) { if(Screen->Thermo.SensorReg>1) Screen->Thermo.SensorReg--; else Screen->Thermo.SensorReg=NumberReg-1; Repaint=1;}  
   \   000000D2   82B0               SUB      SP,SP,#+8
   \   000000D4   0F20               MOVS     R0,#+15
   \   000000D6   0090               STR      R0,[SP, #+0]
   \   000000D8   0300               MOVS     R3,R0
   \   000000DA   4522               MOVS     R2,#+69
   \   000000DC   0321               MOVS     R1,#+3
   \   000000DE   02A8               ADD      R0,SP,#+8
   \   000000E0   ........           BL       Button
   \   000000E4   02B0               ADD      SP,SP,#+8
   \   000000E6   0128               CMP      R0,#+1
   \   000000E8   0AD1               BNE      ??ThermostatSet_Event_10
   \   000000EA   2000               MOVS     R0,R4
   \   000000EC   8C30               ADDS     R0,R0,#+140
   \   000000EE   0179               LDRB     R1,[R0, #+4]
   \   000000F0   0229               CMP      R1,#+2
   \   000000F2   02D3               BCC      ??ThermostatSet_Event_11
   \   000000F4   491E               SUBS     R1,R1,#+1
   \   000000F6   0171               STRB     R1,[R0, #+4]
   \   000000F8   01E0               B        ??ThermostatSet_Event_12
   \                     ??ThermostatSet_Event_11:
   \   000000FA   0921               MOVS     R1,#+9
   \   000000FC   0171               STRB     R1,[R0, #+4]
   \                     ??ThermostatSet_Event_12:
   \   000000FE   0126               MOVS     R6,#+1
   4255                    txt[0]='>';
   \                     ??ThermostatSet_Event_10:
   \   00000100   3E20               MOVS     R0,#+62
   \   00000102   3870               STRB     R0,[R7, #+0]
   4256                    if (Button(txt,45,69,15,15)==1) { if(Screen->Thermo.SensorReg+1<NumberReg) Screen->Thermo.SensorReg++; else Screen->Thermo.SensorReg=1; Repaint=1;} 
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0F20               MOVS     R0,#+15
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   0300               MOVS     R3,R0
   \   0000010C   4522               MOVS     R2,#+69
   \   0000010E   2D21               MOVS     R1,#+45
   \   00000110   02A8               ADD      R0,SP,#+8
   \   00000112   ........           BL       Button
   \   00000116   02B0               ADD      SP,SP,#+8
   \   00000118   0128               CMP      R0,#+1
   \   0000011A   0ED1               BNE      ??ThermostatSet_Event_13
   \   0000011C   2000               MOVS     R0,R4
   \   0000011E   8C30               ADDS     R0,R0,#+140
   \   00000120   0179               LDRB     R1,[R0, #+4]
   \   00000122   491C               ADDS     R1,R1,#+1
   \   00000124   0904               LSLS     R1,R1,#+16
   \   00000126   090C               LSRS     R1,R1,#+16
   \   00000128   0A29               CMP      R1,#+10
   \   0000012A   03D2               BCS      ??ThermostatSet_Event_14
   \   0000012C   0179               LDRB     R1,[R0, #+4]
   \   0000012E   491C               ADDS     R1,R1,#+1
   \   00000130   0171               STRB     R1,[R0, #+4]
   \   00000132   01E0               B        ??ThermostatSet_Event_15
   \                     ??ThermostatSet_Event_14:
   \   00000134   0121               MOVS     R1,#+1
   \   00000136   0171               STRB     R1,[R0, #+4]
   \                     ??ThermostatSet_Event_15:
   \   00000138   0126               MOVS     R6,#+1
   4257                   
   4258                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_13:
   \   0000013A   3C20               MOVS     R0,#+60
   \   0000013C   3870               STRB     R0,[R7, #+0]
   \   0000013E   2800               MOVS     R0,R5
   \   00000140   7870               STRB     R0,[R7, #+1]
   4259                    if (Button(txt,3,42,15,15)==1) { if(Screen->Thermo.ActorNode-1>0) Screen->Thermo.ActorNode--; else Screen->Thermo.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   00000142   82B0               SUB      SP,SP,#+8
   \   00000144   0F20               MOVS     R0,#+15
   \   00000146   0090               STR      R0,[SP, #+0]
   \   00000148   0300               MOVS     R3,R0
   \   0000014A   2A22               MOVS     R2,#+42
   \   0000014C   0321               MOVS     R1,#+3
   \   0000014E   02A8               ADD      R0,SP,#+8
   \   00000150   ........           BL       Button
   \   00000154   02B0               ADD      SP,SP,#+8
   \   00000156   0128               CMP      R0,#+1
   \   00000158   0CD1               BNE      ??ThermostatSet_Event_16
   \   0000015A   2000               MOVS     R0,R4
   \   0000015C   8C30               ADDS     R0,R0,#+140
   \   0000015E   0178               LDRB     R1,[R0, #+0]
   \   00000160   491E               SUBS     R1,R1,#+1
   \   00000162   0129               CMP      R1,#+1
   \   00000164   03DB               BLT      ??ThermostatSet_Event_17
   \   00000166   0178               LDRB     R1,[R0, #+0]
   \   00000168   491E               SUBS     R1,R1,#+1
   \   0000016A   0170               STRB     R1,[R0, #+0]
   \   0000016C   01E0               B        ??ThermostatSet_Event_18
   \                     ??ThermostatSet_Event_17:
   \   0000016E   2221               MOVS     R1,#+34
   \   00000170   0170               STRB     R1,[R0, #+0]
   \                     ??ThermostatSet_Event_18:
   \   00000172   0126               MOVS     R6,#+1
   4260                    txt[0]='>';
   \                     ??ThermostatSet_Event_16:
   \   00000174   3E20               MOVS     R0,#+62
   \   00000176   3870               STRB     R0,[R7, #+0]
   4261                    if (Button(txt,45,42,15,15)==1) { if(Screen->Thermo.ActorNode+1<NumberNeurons) Screen->Thermo.ActorNode++; else Screen->Thermo.ActorNode=0; Repaint=1;} 
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   0F20               MOVS     R0,#+15
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   0300               MOVS     R3,R0
   \   00000180   2A22               MOVS     R2,#+42
   \   00000182   2D21               MOVS     R1,#+45
   \   00000184   02A8               ADD      R0,SP,#+8
   \   00000186   ........           BL       Button
   \   0000018A   02B0               ADD      SP,SP,#+8
   \   0000018C   0128               CMP      R0,#+1
   \   0000018E   0ED1               BNE      ??ThermostatSet_Event_19
   \   00000190   2000               MOVS     R0,R4
   \   00000192   8C30               ADDS     R0,R0,#+140
   \   00000194   0178               LDRB     R1,[R0, #+0]
   \   00000196   491C               ADDS     R1,R1,#+1
   \   00000198   0904               LSLS     R1,R1,#+16
   \   0000019A   090C               LSRS     R1,R1,#+16
   \   0000019C   2329               CMP      R1,#+35
   \   0000019E   03D2               BCS      ??ThermostatSet_Event_20
   \   000001A0   0178               LDRB     R1,[R0, #+0]
   \   000001A2   491C               ADDS     R1,R1,#+1
   \   000001A4   0170               STRB     R1,[R0, #+0]
   \   000001A6   01E0               B        ??ThermostatSet_Event_21
   \                     ??ThermostatSet_Event_20:
   \   000001A8   2900               MOVS     R1,R5
   \   000001AA   0170               STRB     R1,[R0, #+0]
   \                     ??ThermostatSet_Event_21:
   \   000001AC   0126               MOVS     R6,#+1
   4262                   
   4263                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_19:
   \   000001AE   3C20               MOVS     R0,#+60
   \   000001B0   3870               STRB     R0,[R7, #+0]
   \   000001B2   2800               MOVS     R0,R5
   \   000001B4   7870               STRB     R0,[R7, #+1]
   4264                    if (Button(txt,3,26,15,15)==1) { if(Screen->Thermo.ActorPort-1>0) Screen->Thermo.ActorPort--; else Screen->Thermo.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   000001B6   82B0               SUB      SP,SP,#+8
   \   000001B8   0F20               MOVS     R0,#+15
   \   000001BA   0090               STR      R0,[SP, #+0]
   \   000001BC   0300               MOVS     R3,R0
   \   000001BE   1A22               MOVS     R2,#+26
   \   000001C0   0321               MOVS     R1,#+3
   \   000001C2   02A8               ADD      R0,SP,#+8
   \   000001C4   ........           BL       Button
   \   000001C8   02B0               ADD      SP,SP,#+8
   \   000001CA   0128               CMP      R0,#+1
   \   000001CC   0CD1               BNE      ??ThermostatSet_Event_22
   \   000001CE   2000               MOVS     R0,R4
   \   000001D0   8C30               ADDS     R0,R0,#+140
   \   000001D2   4178               LDRB     R1,[R0, #+1]
   \   000001D4   491E               SUBS     R1,R1,#+1
   \   000001D6   0129               CMP      R1,#+1
   \   000001D8   03DB               BLT      ??ThermostatSet_Event_23
   \   000001DA   4178               LDRB     R1,[R0, #+1]
   \   000001DC   491E               SUBS     R1,R1,#+1
   \   000001DE   4170               STRB     R1,[R0, #+1]
   \   000001E0   01E0               B        ??ThermostatSet_Event_24
   \                     ??ThermostatSet_Event_23:
   \   000001E2   0F21               MOVS     R1,#+15
   \   000001E4   4170               STRB     R1,[R0, #+1]
   \                     ??ThermostatSet_Event_24:
   \   000001E6   0126               MOVS     R6,#+1
   4265                    txt[0]='>';
   \                     ??ThermostatSet_Event_22:
   \   000001E8   3E20               MOVS     R0,#+62
   \   000001EA   3870               STRB     R0,[R7, #+0]
   4266                    if (Button(txt,45,26,15,15)==1) { if(Screen->Thermo.ActorPort+1<NumberNeuronsPort) Screen->Thermo.ActorPort++; else Screen->Thermo.ActorPort=0; Repaint=1;} 
   \   000001EC   82B0               SUB      SP,SP,#+8
   \   000001EE   0F20               MOVS     R0,#+15
   \   000001F0   0090               STR      R0,[SP, #+0]
   \   000001F2   0300               MOVS     R3,R0
   \   000001F4   1A22               MOVS     R2,#+26
   \   000001F6   2D21               MOVS     R1,#+45
   \   000001F8   02A8               ADD      R0,SP,#+8
   \   000001FA   ........           BL       Button
   \   000001FE   02B0               ADD      SP,SP,#+8
   \   00000200   0128               CMP      R0,#+1
   \   00000202   0DD1               BNE      ??ThermostatSet_Event_25
   \   00000204   2000               MOVS     R0,R4
   \   00000206   8C30               ADDS     R0,R0,#+140
   \   00000208   4178               LDRB     R1,[R0, #+1]
   \   0000020A   491C               ADDS     R1,R1,#+1
   \   0000020C   0904               LSLS     R1,R1,#+16
   \   0000020E   090C               LSRS     R1,R1,#+16
   \   00000210   1029               CMP      R1,#+16
   \   00000212   03D2               BCS      ??ThermostatSet_Event_26
   \   00000214   4178               LDRB     R1,[R0, #+1]
   \   00000216   491C               ADDS     R1,R1,#+1
   \   00000218   4170               STRB     R1,[R0, #+1]
   \   0000021A   00E0               B        ??ThermostatSet_Event_27
   \                     ??ThermostatSet_Event_26:
   \   0000021C   4570               STRB     R5,[R0, #+1]
   \                     ??ThermostatSet_Event_27:
   \   0000021E   0126               MOVS     R6,#+1
   4267                        
   4268                    
   4269                    if (CurModifSheet==0) 
   \                     ??ThermostatSet_Event_25:
   \   00000220   134D               LDR      R5,??ThermostatSet_Event_0+0x10  ;; TextToChangeLength
   \   00000222   6879               LDRB     R0,[R5, #+5]
   \   00000224   0028               CMP      R0,#+0
   \   00000226   13D1               BNE      ??ThermostatSet_Event_2
   4270                    if (
   4271                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   4272                            4,3,56,22,
   4273                            2)==1
   4274                           )
   \   00000228   0221               MOVS     R1,#+2
   \   0000022A   1620               MOVS     R0,#+22
   \   0000022C   03B4               PUSH     {R0,R1}
   \   0000022E   3823               MOVS     R3,#+56
   \   00000230   0322               MOVS     R2,#+3
   \   00000232   0421               MOVS     R1,#+4
   \   00000234   0020               MOVS     R0,#+0
   \   00000236   ........           BL       Zone
   \   0000023A   02B0               ADD      SP,SP,#+8
   \   0000023C   0128               CMP      R0,#+1
   \   0000023E   07D1               BNE      ??ThermostatSet_Event_2
   4275                           {
   4276                              ButtonToChange=&(Screen->Button[0]);
   \   00000240   0B34               ADDS     R4,R4,#+11
   \   00000242   6C65               STR      R4,[R5, #+84]
   4277                              MenuLevel=(MenuLevel*10+4); Repaint=1;
   \   00000244   A86C               LDR      R0,[R5, #+72]
   \   00000246   0A21               MOVS     R1,#+10
   \   00000248   4843               MULS     R0,R1,R0
   \   0000024A   001D               ADDS     R0,R0,#+4
   \   0000024C   A864               STR      R0,[R5, #+72]
   \   0000024E   0126               MOVS     R6,#+1
   4278                           }
   4279                    
   4280                    
   4281                    
   4282                  }
   4283                  if (Repaint) MenuPaint();
   \                     ??ThermostatSet_Event_2:
   \   00000250   002E               CMP      R6,#+0
   \   00000252   01D0               BEQ      ??ThermostatSet_Event_28
   \   00000254   ........           BL       MenuPaint
   4284          }
   \                     ??ThermostatSet_Event_28:
   \   00000258   FEBC               POP      {R1-R7}
   \   0000025A   01BC               POP      {R0}
   \   0000025C   0047               BX       R0               ;; return
   \   0000025E   C046               Nop      
   \                     ??ThermostatSet_Event_0:
   \   00000260   ........           DC32     Y_down
   \   00000264   ........           DC32     X_down
   \   00000268   ........           DC32     Y_up
   \   0000026C   ........           DC32     X_up
   \   00000270   ........           DC32     TextToChangeLength
   4285          
   4286          
   4287          
   4288          
   4289          
   4290          
   4291          

   \                                 In section Debug.txt, align 4, keep-with-next
   4292          void ScreenTimetableSet_Paint(_Screen* Screen)
   4293          {          
   \                     ScreenTimetableSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0500               MOVS     R5,R0
   4294                 //List_Paint(Speech[g_leng].Opcje,2,15,y,0,3,Speech[g_leng].DodajWiersz, Speech[g_leng].UsunWiersz, 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4295                 List_Paint("Actor",0,108,0,0,3,0,0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   B14C               LDR      R4,??ScreenTimetableSet_Paint_0  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0321               MOVS     R1,#+3
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0100               MOVS     R1,R0
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   6430               ADDS     R0,R0,#+100
   \   00000022   ........           BL       List_Paint
   \   00000026   0AB0               ADD      SP,SP,#+40
   4296                 
   4297                 char txt[8];
   4298                 
   4299          
   4300          
   4301                    char ind=0;
   4302                    
   4303                    Label(Speech[g_leng].Wykonawca,2,5, 88 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   00000028   82B0               SUB      SP,SP,#+8
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   0090               STR      R0,[SP, #+0]
   \   0000002E   7F21               MOVS     R1,#+127
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   3421               MOVS     R1,#+52
   \   00000036   0A20               MOVS     R0,#+10
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   5823               MOVS     R3,#+88
   \   0000003C   0522               MOVS     R2,#+5
   \   0000003E   0221               MOVS     R1,#+2
   \   00000040   A348               LDR      R0,??ScreenTimetableSet_Paint_0+0x4  ;; 0x6f9
   \   00000042   A44E               LDR      R6,??ScreenTimetableSet_Paint_0+0x8  ;; g_leng
   \   00000044   3668               LDR      R6,[R6, #+0]
   \   00000046   9627               MOVS     R7,#+150
   \   00000048   3F01               LSLS     R7,R7,#+4        ;; #+2400
   \   0000004A   7E43               MULS     R6,R7,R6
   \   0000004C   A24F               LDR      R7,??ScreenTimetableSet_Paint_0+0xC  ;; Speech
   \   0000004E   BE19               ADDS     R6,R7,R6
   \   00000050   3018               ADDS     R0,R6,R0
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   4304                   
   4305                    if (Screen->Timetable.ActorNode>=0)
   \   00000058   8C35               ADDS     R5,R5,#+140
   \   0000005A   0020               MOVS     R0,#+0
   \   0000005C   2856               LDRSB    R0,[R5, R0]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   26D4               BMI      ??ScreenTimetableSet_Paint_1
   4306                    {
   4307                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   00000062   6E46               MOV      R6,SP
   \   00000064   4920               MOVS     R0,#+73
   \   00000066   3070               STRB     R0,[R6, #+0]
   \   00000068   6420               MOVS     R0,#+100
   \   0000006A   7070               STRB     R0,[R6, #+1]
   \   0000006C   3A20               MOVS     R0,#+58
   \   0000006E   B070               STRB     R0,[R6, #+2]
   \   00000070   2020               MOVS     R0,#+32
   \   00000072   F070               STRB     R0,[R6, #+3]
   4308                      ind=CharToStr(Screen->Timetable.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000074   0222               MOVS     R2,#+2
   \   00000076   F61C               ADDS     R6,R6,#+3
   \   00000078   3100               MOVS     R1,R6
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   2856               LDRSB    R0,[R5, R0]
   \   0000007E   0006               LSLS     R0,R0,#+24
   \   00000080   000E               LSRS     R0,R0,#+24
   \   00000082   ........           BL       CharToStr
   \   00000086   0200               MOVS     R2,R0
   4309                      Label(txt,2,20, 75 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000088   82B0               SUB      SP,SP,#+8
   \   0000008A   0020               MOVS     R0,#+0
   \   0000008C   0090               STR      R0,[SP, #+0]
   \   0000008E   7F21               MOVS     R1,#+127
   \   00000090   0120               MOVS     R0,#+1
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   1621               MOVS     R1,#+22
   \   00000096   D21C               ADDS     R2,R2,#+3
   \   00000098   1000               MOVS     R0,R2
   \   0000009A   0006               LSLS     R0,R0,#+24
   \   0000009C   000E               LSRS     R0,R0,#+24
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   4B23               MOVS     R3,#+75
   \   000000A2   1422               MOVS     R2,#+20
   \   000000A4   0221               MOVS     R1,#+2
   \   000000A6   06A8               ADD      R0,SP,#+24
   \   000000A8   ........           BL       Label
   \   000000AC   06B0               ADD      SP,SP,#+24
   \   000000AE   0FE0               B        ??ScreenTimetableSet_Paint_2
   4310                    }else{
   4311                      Label("Var",2,20, 75 ,ind+3,22,1,127,0);  
   \                     ??ScreenTimetableSet_Paint_1:
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   0020               MOVS     R0,#+0
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   7F21               MOVS     R1,#+127
   \   000000B8   0120               MOVS     R0,#+1
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   1621               MOVS     R1,#+22
   \   000000BE   0320               MOVS     R0,#+3
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   4B23               MOVS     R3,#+75
   \   000000C4   1422               MOVS     R2,#+20
   \   000000C6   0221               MOVS     R1,#+2
   \   000000C8   84A0               ADR      R0,??ScreenTimetableSet_Paint_0+0x10  ;; "Var"
   \   000000CA   ........           BL       Label
   \   000000CE   06B0               ADD      SP,SP,#+24
   \                     ??ScreenTimetableSet_Paint_2:
   \   000000D0   6E46               MOV      R6,SP
   \   000000D2   3C20               MOVS     R0,#+60
   \   000000D4   3070               STRB     R0,[R6, #+0]
   4312                    }
   4313                    txt[0]='<';txt[1]=0;
   \   000000D6   0027               MOVS     R7,#+0
   \   000000D8   3800               MOVS     R0,R7
   \   000000DA   7070               STRB     R0,[R6, #+1]
   4314                    Button(txt,3,72,15,15); 
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0F20               MOVS     R0,#+15
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   0300               MOVS     R3,R0
   \   000000E4   4822               MOVS     R2,#+72
   \   000000E6   0321               MOVS     R1,#+3
   \   000000E8   02A8               ADD      R0,SP,#+8
   \   000000EA   ........           BL       Button
   \   000000EE   02B0               ADD      SP,SP,#+8
   \   000000F0   3E20               MOVS     R0,#+62
   \   000000F2   3070               STRB     R0,[R6, #+0]
   4315                    txt[0]='>';
   4316                    Button(txt,45,72,15,15); 
   \   000000F4   82B0               SUB      SP,SP,#+8
   \   000000F6   0F20               MOVS     R0,#+15
   \   000000F8   0090               STR      R0,[SP, #+0]
   \   000000FA   0300               MOVS     R3,R0
   \   000000FC   4822               MOVS     R2,#+72
   \   000000FE   2D21               MOVS     R1,#+45
   \   00000100   02A8               ADD      R0,SP,#+8
   \   00000102   ........           BL       Button
   \   00000106   02B0               ADD      SP,SP,#+8
   4317                    
   4318                    if (Screen->Timetable.ActorNode>=0)
   \   00000108   0020               MOVS     R0,#+0
   \   0000010A   2856               LDRSB    R0,[R5, R0]
   \   0000010C   0028               CMP      R0,#+0
   \   0000010E   0ED4               BMI      ??ScreenTimetableSet_Paint_3
   4319                    {
   4320                      txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   00000110   5020               MOVS     R0,#+80
   \   00000112   3070               STRB     R0,[R6, #+0]
   \   00000114   3A20               MOVS     R0,#+58
   \   00000116   7070               STRB     R0,[R6, #+1]
   \   00000118   2020               MOVS     R0,#+32
   \   0000011A   B070               STRB     R0,[R6, #+2]
   4321                       ind=CharToStr(Screen->Timetable.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000011C   0222               MOVS     R2,#+2
   \   0000011E   3100               MOVS     R1,R6
   \   00000120   891C               ADDS     R1,R1,#+2
   \   00000122   6878               LDRB     R0,[R5, #+1]
   \   00000124   ........           BL       CharToStr
   \   00000128   0200               MOVS     R2,R0
   4322                       ind+=2;
   \   0000012A   921C               ADDS     R2,R2,#+2
   \   0000012C   0FE0               B        ??ScreenTimetableSet_Paint_4
   4323                    }else{
   4324                      txt[0]='N'; txt[1]='r'; txt[2]=':'; txt[3]=' '; 
   \                     ??ScreenTimetableSet_Paint_3:
   \   0000012E   4E20               MOVS     R0,#+78
   \   00000130   3070               STRB     R0,[R6, #+0]
   \   00000132   7220               MOVS     R0,#+114
   \   00000134   7070               STRB     R0,[R6, #+1]
   \   00000136   3A20               MOVS     R0,#+58
   \   00000138   B070               STRB     R0,[R6, #+2]
   \   0000013A   2020               MOVS     R0,#+32
   \   0000013C   F070               STRB     R0,[R6, #+3]
   4325                       ind=CharToStr(Screen->Timetable.ActorPort, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   0000013E   0222               MOVS     R2,#+2
   \   00000140   3100               MOVS     R1,R6
   \   00000142   C91C               ADDS     R1,R1,#+3
   \   00000144   6878               LDRB     R0,[R5, #+1]
   \   00000146   ........           BL       CharToStr
   \   0000014A   0200               MOVS     R2,R0
   4326                       ind+=3;
   \   0000014C   D21C               ADDS     R2,R2,#+3
   4327                    }
   4328                    
   4329                   
   4330                   
   4331                    Label(txt,2,20, 55 ,ind,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenTimetableSet_Paint_4:
   \   0000014E   82B0               SUB      SP,SP,#+8
   \   00000150   3800               MOVS     R0,R7
   \   00000152   0090               STR      R0,[SP, #+0]
   \   00000154   7F21               MOVS     R1,#+127
   \   00000156   0120               MOVS     R0,#+1
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   1621               MOVS     R1,#+22
   \   0000015C   1000               MOVS     R0,R2
   \   0000015E   0006               LSLS     R0,R0,#+24
   \   00000160   000E               LSRS     R0,R0,#+24
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   3723               MOVS     R3,#+55
   \   00000166   1422               MOVS     R2,#+20
   \   00000168   0221               MOVS     R1,#+2
   \   0000016A   06A8               ADD      R0,SP,#+24
   \   0000016C   ........           BL       Label
   \   00000170   06B0               ADD      SP,SP,#+24
   4332                
   4333                    
   4334                    
   4335                    txt[0]='<';txt[1]=0;
   \   00000172   3C20               MOVS     R0,#+60
   \   00000174   3070               STRB     R0,[R6, #+0]
   \   00000176   3800               MOVS     R0,R7
   \   00000178   7070               STRB     R0,[R6, #+1]
   4336                    Button(txt,3,52,15,15); 
   \   0000017A   82B0               SUB      SP,SP,#+8
   \   0000017C   0F20               MOVS     R0,#+15
   \   0000017E   0090               STR      R0,[SP, #+0]
   \   00000180   0300               MOVS     R3,R0
   \   00000182   3422               MOVS     R2,#+52
   \   00000184   0321               MOVS     R1,#+3
   \   00000186   02A8               ADD      R0,SP,#+8
   \   00000188   ........           BL       Button
   \   0000018C   02B0               ADD      SP,SP,#+8
   4337                    txt[0]='>';
   \   0000018E   3E20               MOVS     R0,#+62
   \   00000190   3070               STRB     R0,[R6, #+0]
   4338                    Button(txt,45,52,15,15); 
   \   00000192   82B0               SUB      SP,SP,#+8
   \   00000194   0F20               MOVS     R0,#+15
   \   00000196   0090               STR      R0,[SP, #+0]
   \   00000198   0300               MOVS     R3,R0
   \   0000019A   3422               MOVS     R2,#+52
   \   0000019C   2D21               MOVS     R1,#+45
   \   0000019E   02A8               ADD      R0,SP,#+8
   \   000001A0   ........           BL       Button
   \   000001A4   02B0               ADD      SP,SP,#+8
   4339          
   4340                   
   4341                    txt[0]='<';txt[1]=0;
   \   000001A6   3C20               MOVS     R0,#+60
   \   000001A8   3070               STRB     R0,[R6, #+0]
   \   000001AA   3800               MOVS     R0,R7
   \   000001AC   7070               STRB     R0,[R6, #+1]
   4342                    Button(txt,3,24,15,15); 
   \   000001AE   82B0               SUB      SP,SP,#+8
   \   000001B0   0F20               MOVS     R0,#+15
   \   000001B2   0090               STR      R0,[SP, #+0]
   \   000001B4   0300               MOVS     R3,R0
   \   000001B6   1822               MOVS     R2,#+24
   \   000001B8   0321               MOVS     R1,#+3
   \   000001BA   02A8               ADD      R0,SP,#+8
   \   000001BC   ........           BL       Button
   \   000001C0   02B0               ADD      SP,SP,#+8
   4343                    txt[0]='>';
   \   000001C2   3E20               MOVS     R0,#+62
   \   000001C4   3070               STRB     R0,[R6, #+0]
   4344                    Button(txt,45,24,15,15); 
   \   000001C6   82B0               SUB      SP,SP,#+8
   \   000001C8   0F20               MOVS     R0,#+15
   \   000001CA   0090               STR      R0,[SP, #+0]
   \   000001CC   0300               MOVS     R3,R0
   \   000001CE   1822               MOVS     R2,#+24
   \   000001D0   2D21               MOVS     R1,#+45
   \   000001D2   02A8               ADD      R0,SP,#+8
   \   000001D4   ........           BL       Button
   \   000001D8   02B0               ADD      SP,SP,#+8
   4345                 
   4346                    switch (Screen->Timetable.ActionType)
   \   000001DA   A878               LDRB     R0,[R5, #+2]
   \   000001DC   0028               CMP      R0,#+0
   \   000001DE   04D0               BEQ      ??ScreenTimetableSet_Paint_5
   \   000001E0   0128               CMP      R0,#+1
   \   000001E2   20D0               BEQ      ??ScreenTimetableSet_Paint_6
   \   000001E4   0228               CMP      R0,#+2
   \   000001E6   2AD0               BEQ      ??ScreenTimetableSet_Paint_7
   \   000001E8   34E0               B        ??ScreenTimetableSet_Paint_8
   4347                    {
   4348                      case 0: CopyToCanvasPoint((char*)ProcSet_graf, 21, 27,24,9); 
   \                     ??ScreenTimetableSet_Paint_5:
   \   000001EA   82B0               SUB      SP,SP,#+8
   \   000001EC   0920               MOVS     R0,#+9
   \   000001EE   0090               STR      R0,[SP, #+0]
   \   000001F0   1823               MOVS     R3,#+24
   \   000001F2   1B22               MOVS     R2,#+27
   \   000001F4   1521               MOVS     R1,#+21
   \   000001F6   2000               MOVS     R0,R4
   \   000001F8   A430               ADDS     R0,R0,#+164
   \   000001FA   ........           BL       CopyToCanvasPoint
   \   000001FE   02B0               ADD      SP,SP,#+8
   4349                                txt[0]='Q'; txt[1]=0;
   \   00000200   5120               MOVS     R0,#+81
   \   00000202   3070               STRB     R0,[R6, #+0]
   \   00000204   7770               STRB     R7,[R6, #+1]
   4350                                Label(txt,2,28,27,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000206   82B0               SUB      SP,SP,#+8
   \   00000208   3800               MOVS     R0,R7
   \   0000020A   0090               STR      R0,[SP, #+0]
   \   0000020C   7821               MOVS     R1,#+120
   \   0000020E   03B4               PUSH     {R0,R1}
   \   00000210   0621               MOVS     R1,#+6
   \   00000212   0120               MOVS     R0,#+1
   \   00000214   03B4               PUSH     {R0,R1}
   \   00000216   1B23               MOVS     R3,#+27
   \   00000218   1C22               MOVS     R2,#+28
   \   0000021A   0221               MOVS     R1,#+2
   \   0000021C   06A8               ADD      R0,SP,#+24
   \   0000021E   ........           BL       Label
   \   00000222   06B0               ADD      SP,SP,#+24
   \   00000224   16E0               B        ??ScreenTimetableSet_Paint_8
   4351          
   4352                      
   4353                                break; //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght); 
   4354                      case 1: CopyToCanvasPoint((char*)ProcWOUTS_graf, 21, 27,24,9); break;
   \                     ??ScreenTimetableSet_Paint_6:
   \   00000226   82B0               SUB      SP,SP,#+8
   \   00000228   0920               MOVS     R0,#+9
   \   0000022A   0090               STR      R0,[SP, #+0]
   \   0000022C   1823               MOVS     R3,#+24
   \   0000022E   1B22               MOVS     R2,#+27
   \   00000230   1521               MOVS     R1,#+21
   \   00000232   2000               MOVS     R0,R4
   \   00000234   C030               ADDS     R0,R0,#+192
   \   00000236   ........           BL       CopyToCanvasPoint
   \   0000023A   02B0               ADD      SP,SP,#+8
   \   0000023C   0AE0               B        ??ScreenTimetableSet_Paint_8
   4355                      case 2: CopyToCanvasPoint((char*)ProcWOUTR_graf, 21, 27,24,9); break;
   \                     ??ScreenTimetableSet_Paint_7:
   \   0000023E   82B0               SUB      SP,SP,#+8
   \   00000240   0920               MOVS     R0,#+9
   \   00000242   0090               STR      R0,[SP, #+0]
   \   00000244   1823               MOVS     R3,#+24
   \   00000246   1B22               MOVS     R2,#+27
   \   00000248   1521               MOVS     R1,#+21
   \   0000024A   2000               MOVS     R0,R4
   \   0000024C   DC30               ADDS     R0,R0,#+220
   \   0000024E   ........           BL       CopyToCanvasPoint
   \   00000252   02B0               ADD      SP,SP,#+8
   4356                    }
   4357                    
   4358          
   4359                      
   4360                    
   4361                    Label( "-1h",1,27,6,5,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenTimetableSet_Paint_8:
   \   00000254   82B0               SUB      SP,SP,#+8
   \   00000256   3800               MOVS     R0,R7
   \   00000258   0090               STR      R0,[SP, #+0]
   \   0000025A   7F21               MOVS     R1,#+127
   \   0000025C   0120               MOVS     R0,#+1
   \   0000025E   03B4               PUSH     {R0,R1}
   \   00000260   2121               MOVS     R1,#+33
   \   00000262   0520               MOVS     R0,#+5
   \   00000264   03B4               PUSH     {R0,R1}
   \   00000266   0623               MOVS     R3,#+6
   \   00000268   1B22               MOVS     R2,#+27
   \   0000026A   0121               MOVS     R1,#+1
   \   0000026C   1CA0               ADR      R0,??ScreenTimetableSet_Paint_0+0x14  ;; "-1h"
   \   0000026E   ........           BL       Label
   \   00000272   06B0               ADD      SP,SP,#+24
   4362                    H_line(30,4,12,1); 
   \   00000274   0123               MOVS     R3,#+1
   \   00000276   0C22               MOVS     R2,#+12
   \   00000278   0421               MOVS     R1,#+4
   \   0000027A   1E20               MOVS     R0,#+30
   \   0000027C   ........           BL       H_line
   4363                    H_line(30,16,12,1); 
   \   00000280   0123               MOVS     R3,#+1
   \   00000282   0C22               MOVS     R2,#+12
   \   00000284   1021               MOVS     R1,#+16
   \   00000286   1E20               MOVS     R0,#+30
   \   00000288   ........           BL       H_line
   4364                    V_line(30,4,12,1);
   \   0000028C   0123               MOVS     R3,#+1
   \   0000028E   0C22               MOVS     R2,#+12
   \   00000290   0421               MOVS     R1,#+4
   \   00000292   1E20               MOVS     R0,#+30
   \   00000294   ........           BL       V_line
   4365                    V_line(42,4,13,1); 
   \   00000298   0123               MOVS     R3,#+1
   \   0000029A   0D22               MOVS     R2,#+13
   \   0000029C   0421               MOVS     R1,#+4
   \   0000029E   2A20               MOVS     R0,#+42
   \   000002A0   ........           BL       V_line
   4366                    
   4367          
   4368                    if (Screen->Timetable.Min1h)
   \   000002A4   E878               LDRB     R0,[R5, #+3]
   \   000002A6   0028               CMP      R0,#+0
   \   000002A8   0CD0               BEQ      ??ScreenTimetableSet_Paint_9
   4369                    {
   4370                       char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   000002AA   02A8               ADD      R0,SP,#+8
   \   000002AC   0ECC               LDM      R4!,{R1-R3}
   \   000002AE   0EC0               STM      R0!,{R1-R3}
   4371                      CopyToCanvasPoint((char *)ekran_tab,33,5,8,10);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght
   \   000002B0   82B0               SUB      SP,SP,#+8
   \   000002B2   0A20               MOVS     R0,#+10
   \   000002B4   0090               STR      R0,[SP, #+0]
   \   000002B6   0823               MOVS     R3,#+8
   \   000002B8   0522               MOVS     R2,#+5
   \   000002BA   2121               MOVS     R1,#+33
   \   000002BC   04A8               ADD      R0,SP,#+16
   \   000002BE   ........           BL       CopyToCanvasPoint
   \   000002C2   02B0               ADD      SP,SP,#+8
   4372                    }
   4373          
   4374          }
   \                     ??ScreenTimetableSet_Paint_9:
   \   000002C4   05B0               ADD      SP,SP,#+20
   \   000002C6   F0BC               POP      {R4-R7}
   \   000002C8   01BC               POP      {R0}
   \   000002CA   0047               BX       R0               ;; return
   \                     ??ScreenTimetableSet_Paint_0:
   \   000002CC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   000002D0   F9060000           DC32     0x6f9
   \   000002D4   ........           DC32     g_leng
   \   000002D8   ........           DC32     Speech
   \   000002DC   56617200           DC8      "Var"
   \   000002E0   2D316800           DC8      "-1h"
   4375          

   \                                 In section Debug.txt, align 4, keep-with-next
   4376          void ScreenTimetableSet_Event(_Screen* Screen)
   4377          {
   \                     ScreenTimetableSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4378            char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   2E00               MOVS     R6,R5
   \   00000008   8B4F               LDR      R7,??ScreenTimetableSet_Event_0  ;; Y_down
   \   0000000A   2900               MOVS     R1,R5
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   3B5E               LDRSH    R3,[R7, R0]
   \   00000016   8948               LDR      R0,??ScreenTimetableSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   8848               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   8C46               MOV      R12,R1
   \   00000022   8848               LDR      R0,??ScreenTimetableSet_Event_0+0xC  ;; X_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   405E               LDRSH    R0,[R0, R1]
   \   00000028   6146               MOV      R1,R12
   4379                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   07D5               BPL      ??ScreenTimetableSet_Event_1
   4380                  {
   4381                    MenuLevel=(MenuLevel/10);
   \   00000034   844C               LDR      R4,??ScreenTimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A06C               LDR      R0,[R4, #+72]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   A064               STR      R0,[R4, #+72]
   4382                    Repaint=1;
   \   00000040   0126               MOVS     R6,#+1
   \   00000042   F1E0               B        ??ScreenTimetableSet_Event_2
   4383                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ScreenTimetableSet_Event_1:
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   385E               LDRSH    R0,[R7, R0]
   \   00000048   7028               CMP      R0,#+112
   \   0000004A   05DB               BLT      ??ScreenTimetableSet_Event_3
   \   0000004C   7C48               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   405E               LDRSH    R0,[R0, R1]
   \   00000052   7028               CMP      R0,#+112
   \   00000054   00DB               BLT      .+4
   \   00000056   E7E0               B        ??ScreenTimetableSet_Event_2
   \                     ??ScreenTimetableSet_Event_3:
   \   00000058   6F46               MOV      R7,SP
   \   0000005A   3C20               MOVS     R0,#+60
   \   0000005C   3870               STRB     R0,[R7, #+0]
   4384                  { 
   4385                    char txt[3];
   4386                    txt[0]='<';txt[1]=0;
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   7870               STRB     R0,[R7, #+1]
   4387                    if (Button(txt,3,72,15,15)==1) { if(Screen->Timetable.ActorNode>-1) Screen->Timetable.ActorNode--; else Screen->Timetable.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   00000062   8C34               ADDS     R4,R4,#+140
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   0F20               MOVS     R0,#+15
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   0300               MOVS     R3,R0
   \   0000006C   4822               MOVS     R2,#+72
   \   0000006E   0321               MOVS     R1,#+3
   \   00000070   02A8               ADD      R0,SP,#+8
   \   00000072   ........           BL       Button
   \   00000076   02B0               ADD      SP,SP,#+8
   \   00000078   0128               CMP      R0,#+1
   \   0000007A   0BD1               BNE      ??ScreenTimetableSet_Event_4
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   2056               LDRSB    R0,[R4, R0]
   \   00000080   0028               CMP      R0,#+0
   \   00000082   04D4               BMI      ??ScreenTimetableSet_Event_5
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   2056               LDRSB    R0,[R4, R0]
   \   00000088   401E               SUBS     R0,R0,#+1
   \   0000008A   2070               STRB     R0,[R4, #+0]
   \   0000008C   01E0               B        ??ScreenTimetableSet_Event_6
   \                     ??ScreenTimetableSet_Event_5:
   \   0000008E   2220               MOVS     R0,#+34
   \   00000090   2070               STRB     R0,[R4, #+0]
   \                     ??ScreenTimetableSet_Event_6:
   \   00000092   0126               MOVS     R6,#+1
   \                     ??ScreenTimetableSet_Event_4:
   \   00000094   3E20               MOVS     R0,#+62
   \   00000096   3870               STRB     R0,[R7, #+0]
   4388                    txt[0]='>';
   4389                    if (Button(txt,45,72,15,15)==1) { if(Screen->Timetable.ActorNode+1<NumberNeurons) Screen->Timetable.ActorNode++; else Screen->Timetable.ActorNode=-1; Repaint=1;} 
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   0F20               MOVS     R0,#+15
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   0300               MOVS     R3,R0
   \   000000A0   4822               MOVS     R2,#+72
   \   000000A2   2D21               MOVS     R1,#+45
   \   000000A4   02A8               ADD      R0,SP,#+8
   \   000000A6   ........           BL       Button
   \   000000AA   02B0               ADD      SP,SP,#+8
   \   000000AC   0128               CMP      R0,#+1
   \   000000AE   0DD1               BNE      ??ScreenTimetableSet_Event_7
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   2056               LDRSB    R0,[R4, R0]
   \   000000B4   401C               ADDS     R0,R0,#+1
   \   000000B6   2328               CMP      R0,#+35
   \   000000B8   04DA               BGE      ??ScreenTimetableSet_Event_8
   \   000000BA   0020               MOVS     R0,#+0
   \   000000BC   2056               LDRSB    R0,[R4, R0]
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   2070               STRB     R0,[R4, #+0]
   \   000000C2   02E0               B        ??ScreenTimetableSet_Event_9
   \                     ??ScreenTimetableSet_Event_8:
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   C043               MVNS     R0,R0            ;; #-1
   \   000000C8   2070               STRB     R0,[R4, #+0]
   \                     ??ScreenTimetableSet_Event_9:
   \   000000CA   0126               MOVS     R6,#+1
   4390                   
   4391                    
   4392                    if (Screen->Timetable.ActorNode>=0)
   \                     ??ScreenTimetableSet_Event_7:
   \   000000CC   0020               MOVS     R0,#+0
   \   000000CE   2056               LDRSB    R0,[R4, R0]
   \   000000D0   0028               CMP      R0,#+0
   \   000000D2   49D4               BMI      ??ScreenTimetableSet_Event_10
   4393                    {
   4394                      txt[0]='<';txt[1]=0;
   \   000000D4   3C20               MOVS     R0,#+60
   \   000000D6   3870               STRB     R0,[R7, #+0]
   \   000000D8   2800               MOVS     R0,R5
   \   000000DA   7870               STRB     R0,[R7, #+1]
   4395                      if (Button(txt,3,52,15,15)==1) { if(Screen->Timetable.ActorPort>0) Screen->Timetable.ActorPort--; else Screen->Timetable.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0F20               MOVS     R0,#+15
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   0300               MOVS     R3,R0
   \   000000E4   3422               MOVS     R2,#+52
   \   000000E6   0321               MOVS     R1,#+3
   \   000000E8   02A8               ADD      R0,SP,#+8
   \   000000EA   ........           BL       Button
   \   000000EE   02B0               ADD      SP,SP,#+8
   \   000000F0   0128               CMP      R0,#+1
   \   000000F2   08D1               BNE      ??ScreenTimetableSet_Event_11
   \   000000F4   6078               LDRB     R0,[R4, #+1]
   \   000000F6   0028               CMP      R0,#+0
   \   000000F8   02D0               BEQ      ??ScreenTimetableSet_Event_12
   \   000000FA   401E               SUBS     R0,R0,#+1
   \   000000FC   6070               STRB     R0,[R4, #+1]
   \   000000FE   01E0               B        ??ScreenTimetableSet_Event_13
   \                     ??ScreenTimetableSet_Event_12:
   \   00000100   0F20               MOVS     R0,#+15
   \   00000102   6070               STRB     R0,[R4, #+1]
   \                     ??ScreenTimetableSet_Event_13:
   \   00000104   0126               MOVS     R6,#+1
   4396                      txt[0]='>';
   \                     ??ScreenTimetableSet_Event_11:
   \   00000106   3E20               MOVS     R0,#+62
   \   00000108   3870               STRB     R0,[R7, #+0]
   4397                      if (Button(txt,45,52,15,15)==1) { if(Screen->Timetable.ActorPort+1<NumberNeuronsPort) Screen->Timetable.ActorPort++; else Screen->Timetable.ActorPort=0; Repaint=1;} 
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0F20               MOVS     R0,#+15
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   0300               MOVS     R3,R0
   \   00000112   3422               MOVS     R2,#+52
   \   00000114   2D21               MOVS     R1,#+45
   \   00000116   02A8               ADD      R0,SP,#+8
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   0128               CMP      R0,#+1
   \   00000120   0CD1               BNE      ??ScreenTimetableSet_Event_14
   \   00000122   6078               LDRB     R0,[R4, #+1]
   \   00000124   401C               ADDS     R0,R0,#+1
   \   00000126   0004               LSLS     R0,R0,#+16
   \   00000128   000C               LSRS     R0,R0,#+16
   \   0000012A   1028               CMP      R0,#+16
   \   0000012C   03D2               BCS      ??ScreenTimetableSet_Event_15
   \   0000012E   6078               LDRB     R0,[R4, #+1]
   \   00000130   401C               ADDS     R0,R0,#+1
   \   00000132   6070               STRB     R0,[R4, #+1]
   \   00000134   01E0               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_15:
   \   00000136   2800               MOVS     R0,R5
   \   00000138   6070               STRB     R0,[R4, #+1]
   \                     ??ScreenTimetableSet_Event_16:
   \   0000013A   0126               MOVS     R6,#+1
   4398                    }else{
   4399                      //je¿eli znienna 
   4400                      txt[0]='<';txt[1]=0;
   4401                      if (Button(txt,3,52,15,15)==1) { if(Screen->Timetable.ActorPort>0) Screen->Timetable.ActorPort--; else Screen->Timetable.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   4402                      txt[0]='>';
   4403                      if (Button(txt,45,52,15,15)==1) { if(Screen->Timetable.ActorPort+1<NumberNeuronsPort) Screen->Timetable.ActorPort++; else Screen->Timetable.ActorPort=99; Repaint=1;} 
   4404                    }
   4405                      
   4406                    
   4407                    txt[0]='<';txt[1]=0;
   \                     ??ScreenTimetableSet_Event_14:
   \   0000013C   3C20               MOVS     R0,#+60
   \   0000013E   3870               STRB     R0,[R7, #+0]
   \   00000140   2800               MOVS     R0,R5
   \   00000142   7870               STRB     R0,[R7, #+1]
   4408                    if (Button(txt,3,24,15,15)==1) {if (Screen->Timetable.ActionType>0) Screen->Timetable.ActionType--; else Screen->Timetable.ActionType=2; Repaint=1;} 
   \   00000144   82B0               SUB      SP,SP,#+8
   \   00000146   0F20               MOVS     R0,#+15
   \   00000148   0090               STR      R0,[SP, #+0]
   \   0000014A   0300               MOVS     R3,R0
   \   0000014C   1822               MOVS     R2,#+24
   \   0000014E   0321               MOVS     R1,#+3
   \   00000150   02A8               ADD      R0,SP,#+8
   \   00000152   ........           BL       Button
   \   00000156   02B0               ADD      SP,SP,#+8
   \   00000158   0128               CMP      R0,#+1
   \   0000015A   3CD1               BNE      ??ScreenTimetableSet_Event_17
   \   0000015C   A078               LDRB     R0,[R4, #+2]
   \   0000015E   0028               CMP      R0,#+0
   \   00000160   36D0               BEQ      ??ScreenTimetableSet_Event_18
   \   00000162   401E               SUBS     R0,R0,#+1
   \   00000164   A070               STRB     R0,[R4, #+2]
   \   00000166   35E0               B        ??ScreenTimetableSet_Event_19
   \                     ??ScreenTimetableSet_Event_10:
   \   00000168   3C20               MOVS     R0,#+60
   \   0000016A   3870               STRB     R0,[R7, #+0]
   \   0000016C   2800               MOVS     R0,R5
   \   0000016E   7870               STRB     R0,[R7, #+1]
   \   00000170   82B0               SUB      SP,SP,#+8
   \   00000172   0F20               MOVS     R0,#+15
   \   00000174   0090               STR      R0,[SP, #+0]
   \   00000176   0300               MOVS     R3,R0
   \   00000178   3422               MOVS     R2,#+52
   \   0000017A   0321               MOVS     R1,#+3
   \   0000017C   02A8               ADD      R0,SP,#+8
   \   0000017E   ........           BL       Button
   \   00000182   02B0               ADD      SP,SP,#+8
   \   00000184   0128               CMP      R0,#+1
   \   00000186   08D1               BNE      ??ScreenTimetableSet_Event_20
   \   00000188   6078               LDRB     R0,[R4, #+1]
   \   0000018A   0028               CMP      R0,#+0
   \   0000018C   02D0               BEQ      ??ScreenTimetableSet_Event_21
   \   0000018E   401E               SUBS     R0,R0,#+1
   \   00000190   6070               STRB     R0,[R4, #+1]
   \   00000192   01E0               B        ??ScreenTimetableSet_Event_22
   \                     ??ScreenTimetableSet_Event_21:
   \   00000194   0F20               MOVS     R0,#+15
   \   00000196   6070               STRB     R0,[R4, #+1]
   \                     ??ScreenTimetableSet_Event_22:
   \   00000198   0126               MOVS     R6,#+1
   \                     ??ScreenTimetableSet_Event_20:
   \   0000019A   3E20               MOVS     R0,#+62
   \   0000019C   3870               STRB     R0,[R7, #+0]
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0F20               MOVS     R0,#+15
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   0300               MOVS     R3,R0
   \   000001A6   3422               MOVS     R2,#+52
   \   000001A8   2D21               MOVS     R1,#+45
   \   000001AA   02A8               ADD      R0,SP,#+8
   \   000001AC   ........           BL       Button
   \   000001B0   02B0               ADD      SP,SP,#+8
   \   000001B2   0128               CMP      R0,#+1
   \   000001B4   C2D1               BNE      ??ScreenTimetableSet_Event_14
   \   000001B6   6078               LDRB     R0,[R4, #+1]
   \   000001B8   401C               ADDS     R0,R0,#+1
   \   000001BA   0004               LSLS     R0,R0,#+16
   \   000001BC   000C               LSRS     R0,R0,#+16
   \   000001BE   1028               CMP      R0,#+16
   \   000001C0   03D2               BCS      ??ScreenTimetableSet_Event_23
   \   000001C2   6078               LDRB     R0,[R4, #+1]
   \   000001C4   401C               ADDS     R0,R0,#+1
   \   000001C6   6070               STRB     R0,[R4, #+1]
   \   000001C8   B7E7               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_23:
   \   000001CA   6320               MOVS     R0,#+99
   \   000001CC   6070               STRB     R0,[R4, #+1]
   \   000001CE   B4E7               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_18:
   \   000001D0   0220               MOVS     R0,#+2
   \   000001D2   A070               STRB     R0,[R4, #+2]
   \                     ??ScreenTimetableSet_Event_19:
   \   000001D4   0126               MOVS     R6,#+1
   4409                    txt[0]='>';
   \                     ??ScreenTimetableSet_Event_17:
   \   000001D6   3E20               MOVS     R0,#+62
   \   000001D8   3870               STRB     R0,[R7, #+0]
   4410                    if (Button(txt,45,24,15,15)==1) {if (Screen->Timetable.ActionType<2) Screen->Timetable.ActionType++; else Screen->Timetable.ActionType=0; Repaint=1;}  
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0F20               MOVS     R0,#+15
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   0300               MOVS     R3,R0
   \   000001E2   1822               MOVS     R2,#+24
   \   000001E4   2D21               MOVS     R1,#+45
   \   000001E6   02A8               ADD      R0,SP,#+8
   \   000001E8   ........           BL       Button
   \   000001EC   02B0               ADD      SP,SP,#+8
   \   000001EE   0128               CMP      R0,#+1
   \   000001F0   07D1               BNE      ??ScreenTimetableSet_Event_24
   \   000001F2   A078               LDRB     R0,[R4, #+2]
   \   000001F4   0228               CMP      R0,#+2
   \   000001F6   02D2               BCS      ??ScreenTimetableSet_Event_25
   \   000001F8   401C               ADDS     R0,R0,#+1
   \   000001FA   A070               STRB     R0,[R4, #+2]
   \   000001FC   00E0               B        ??ScreenTimetableSet_Event_26
   \                     ??ScreenTimetableSet_Event_25:
   \   000001FE   A570               STRB     R5,[R4, #+2]
   \                     ??ScreenTimetableSet_Event_26:
   \   00000200   0126               MOVS     R6,#+1
   4411                    
   4412                    //jezeli przyciniêto znacznik -1h
   4413                    if ((X_up>=30) && (X_up<=42) && (Y_up>=4) && (Y_up<=16)) {if (Screen->Timetable.Min1h) Screen->Timetable.Min1h=0; else Screen->Timetable.Min1h=1;  Repaint=1;}
   \                     ??ScreenTimetableSet_Event_24:
   \   00000202   1048               LDR      R0,??ScreenTimetableSet_Event_0+0xC  ;; X_up
   \   00000204   0021               MOVS     R1,#+0
   \   00000206   405E               LDRSH    R0,[R0, R1]
   \   00000208   1E28               CMP      R0,#+30
   \   0000020A   0DDB               BLT      ??ScreenTimetableSet_Event_2
   \   0000020C   2B28               CMP      R0,#+43
   \   0000020E   0BDA               BGE      ??ScreenTimetableSet_Event_2
   \   00000210   0B48               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   00000212   405E               LDRSH    R0,[R0, R1]
   \   00000214   0428               CMP      R0,#+4
   \   00000216   07DB               BLT      ??ScreenTimetableSet_Event_2
   \   00000218   1128               CMP      R0,#+17
   \   0000021A   05DA               BGE      ??ScreenTimetableSet_Event_2
   \   0000021C   E078               LDRB     R0,[R4, #+3]
   \   0000021E   411E               SUBS     R1,R0,#+1
   \   00000220   8941               SBCS     R1,R1,R1
   \   00000222   C90F               LSRS     R1,R1,#+31
   \   00000224   E170               STRB     R1,[R4, #+3]
   \   00000226   0126               MOVS     R6,#+1
   4414                  }  
   4415                  if (Repaint) MenuPaint();
   \                     ??ScreenTimetableSet_Event_2:
   \   00000228   002E               CMP      R6,#+0
   \   0000022A   01D0               BEQ      ??ScreenTimetableSet_Event_27
   \   0000022C   ........           BL       MenuPaint
   4416                  
   4417          
   4418          }
   \                     ??ScreenTimetableSet_Event_27:
   \   00000230   F8BC               POP      {R3-R7}
   \   00000232   01BC               POP      {R0}
   \   00000234   0047               BX       R0               ;; return
   \   00000236   C046               Nop      
   \                     ??ScreenTimetableSet_Event_0:
   \   00000238   ........           DC32     Y_down
   \   0000023C   ........           DC32     X_down
   \   00000240   ........           DC32     Y_up
   \   00000244   ........           DC32     X_up
   \   00000248   ........           DC32     TextToChangeLength
   4419          
   4420          
   4421          
   4422          
   4423          
   4424          
   4425          

   \                                 In section Debug.txt, align 4, keep-with-next
   4426          void ScreenAlarmSet_Paint(_Screen* Screen)
   4427          {          
   \                     ScreenAlarmSet_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   4428                 List_Paint("Alarm",1,108,0,0,3,0,0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0300               MOVS     R3,R0
   \   00000016   6C22               MOVS     R2,#+108
   \   00000018   0121               MOVS     R1,#+1
   \   0000001A   9648               LDR      R0,??ScreenAlarmSet_Paint_0  ;; `?<Constant "Alarm">`
   \   0000001C   ........           BL       List_Paint
   \   00000020   0AB0               ADD      SP,SP,#+40
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3421               MOVS     R1,#+52
   \   00000030   0A20               MOVS     R0,#+10
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   6423               MOVS     R3,#+100
   \   00000036   0522               MOVS     R2,#+5
   \   00000038   0221               MOVS     R1,#+2
   \   0000003A   8F48               LDR      R0,??ScreenAlarmSet_Paint_0+0x4  ;; 0x6ea
   \   0000003C   8F4C               LDR      R4,??ScreenAlarmSet_Paint_0+0x8  ;; g_leng
   \   0000003E   2468               LDR      R4,[R4, #+0]
   \   00000040   9625               MOVS     R5,#+150
   \   00000042   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000044   6C43               MULS     R4,R5,R4
   \   00000046   8E4D               LDR      R5,??ScreenAlarmSet_Paint_0+0xC  ;; Speech
   \   00000048   2C19               ADDS     R4,R5,R4
   \   0000004A   2018               ADDS     R0,R4,R0
   4429                 
   4430                 char txt[8];
   4431                 
   4432                    Label(Speech[g_leng].Czujnik,2,5, 100 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000004C   ........           BL       Label
   \   00000050   06B0               ADD      SP,SP,#+24
   \   00000052   6C46               MOV      R4,SP
   \   00000054   4920               MOVS     R0,#+73
   \   00000056   2070               STRB     R0,[R4, #+0]
   \   00000058   6420               MOVS     R0,#+100
   \   0000005A   6070               STRB     R0,[R4, #+1]
   \   0000005C   3A20               MOVS     R0,#+58
   \   0000005E   A070               STRB     R0,[R4, #+2]
   \   00000060   2020               MOVS     R0,#+32
   \   00000062   E070               STRB     R0,[R4, #+3]
   \   00000064   0222               MOVS     R2,#+2
   \   00000066   2100               MOVS     R1,R4
   \   00000068   C91C               ADDS     R1,R1,#+3
   \   0000006A   0298               LDR      R0,[SP, #+8]
   \   0000006C   8C30               ADDS     R0,R0,#+140
   \   0000006E   8078               LDRB     R0,[R0, #+2]
   4433                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   4434                    char ind=CharToStr(Screen->Alarm.SensorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000070   ........           BL       CharToStr
   \   00000074   0200               MOVS     R2,R0
   4435                    Label(txt,2,20, 88 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   7F21               MOVS     R1,#+127
   \   0000007E   0120               MOVS     R0,#+1
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   1621               MOVS     R1,#+22
   \   00000084   D21C               ADDS     R2,R2,#+3
   \   00000086   1000               MOVS     R0,R2
   \   00000088   0006               LSLS     R0,R0,#+24
   \   0000008A   000E               LSRS     R0,R0,#+24
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   5823               MOVS     R3,#+88
   \   00000090   1422               MOVS     R2,#+20
   \   00000092   0221               MOVS     R1,#+2
   \   00000094   06A8               ADD      R0,SP,#+24
   \   00000096   ........           BL       Label
   \   0000009A   06B0               ADD      SP,SP,#+24
   4436                  
   4437                    txt[0]='<';txt[1]=0;
   \   0000009C   3C25               MOVS     R5,#+60
   \   0000009E   2570               STRB     R5,[R4, #+0]
   \   000000A0   0026               MOVS     R6,#+0
   \   000000A2   3000               MOVS     R0,R6
   \   000000A4   6070               STRB     R0,[R4, #+1]
   4438                    Button(txt,3,85,15,15); 
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   0F20               MOVS     R0,#+15
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   0300               MOVS     R3,R0
   \   000000AE   5522               MOVS     R2,#+85
   \   000000B0   0321               MOVS     R1,#+3
   \   000000B2   02A8               ADD      R0,SP,#+8
   \   000000B4   ........           BL       Button
   \   000000B8   02B0               ADD      SP,SP,#+8
   4439                    txt[0]='>';
   \   000000BA   3E27               MOVS     R7,#+62
   \   000000BC   2770               STRB     R7,[R4, #+0]
   4440                    Button(txt,45,85,15,15); 
   \   000000BE   82B0               SUB      SP,SP,#+8
   \   000000C0   0F20               MOVS     R0,#+15
   \   000000C2   0090               STR      R0,[SP, #+0]
   \   000000C4   0300               MOVS     R3,R0
   \   000000C6   5522               MOVS     R2,#+85
   \   000000C8   2D21               MOVS     R1,#+45
   \   000000CA   02A8               ADD      R0,SP,#+8
   \   000000CC   ........           BL       Button
   \   000000D0   02B0               ADD      SP,SP,#+8
   \   000000D2   5020               MOVS     R0,#+80
   \   000000D4   2070               STRB     R0,[R4, #+0]
   4441                    
   4442                    txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   000000D6   3A20               MOVS     R0,#+58
   \   000000D8   6070               STRB     R0,[R4, #+1]
   \   000000DA   2020               MOVS     R0,#+32
   \   000000DC   A070               STRB     R0,[R4, #+2]
   4443                    ind=CharToStr(Screen->Alarm.SensorPort, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   000000DE   0222               MOVS     R2,#+2
   \   000000E0   2100               MOVS     R1,R4
   \   000000E2   C91C               ADDS     R1,R1,#+3
   \   000000E4   0298               LDR      R0,[SP, #+8]
   \   000000E6   8C30               ADDS     R0,R0,#+140
   \   000000E8   C078               LDRB     R0,[R0, #+3]
   \   000000EA   ........           BL       CharToStr
   \   000000EE   0200               MOVS     R2,R0
   4444                   
   4445                    Label(txt,2,20, 72 ,ind+4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   3000               MOVS     R0,R6
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   7F21               MOVS     R1,#+127
   \   000000F8   0120               MOVS     R0,#+1
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   1621               MOVS     R1,#+22
   \   000000FE   121D               ADDS     R2,R2,#+4
   \   00000100   1000               MOVS     R0,R2
   \   00000102   0006               LSLS     R0,R0,#+24
   \   00000104   000E               LSRS     R0,R0,#+24
   \   00000106   03B4               PUSH     {R0,R1}
   \   00000108   4823               MOVS     R3,#+72
   \   0000010A   1422               MOVS     R2,#+20
   \   0000010C   0221               MOVS     R1,#+2
   \   0000010E   06A8               ADD      R0,SP,#+24
   \   00000110   ........           BL       Label
   \   00000114   06B0               ADD      SP,SP,#+24
   4446                  
   4447                    txt[0]='<';txt[1]=0;
   \   00000116   2570               STRB     R5,[R4, #+0]
   \   00000118   3000               MOVS     R0,R6
   \   0000011A   6070               STRB     R0,[R4, #+1]
   4448                    Button(txt,3,69,15,15); 
   \   0000011C   82B0               SUB      SP,SP,#+8
   \   0000011E   0F20               MOVS     R0,#+15
   \   00000120   0090               STR      R0,[SP, #+0]
   \   00000122   0300               MOVS     R3,R0
   \   00000124   4522               MOVS     R2,#+69
   \   00000126   0321               MOVS     R1,#+3
   \   00000128   02A8               ADD      R0,SP,#+8
   \   0000012A   ........           BL       Button
   \   0000012E   02B0               ADD      SP,SP,#+8
   4449                    txt[0]='>';
   \   00000130   2770               STRB     R7,[R4, #+0]
   4450                    Button(txt,45,69,15,15);   
   \   00000132   82B0               SUB      SP,SP,#+8
   \   00000134   0F20               MOVS     R0,#+15
   \   00000136   0090               STR      R0,[SP, #+0]
   \   00000138   0300               MOVS     R3,R0
   \   0000013A   4522               MOVS     R2,#+69
   \   0000013C   2D21               MOVS     R1,#+45
   \   0000013E   02A8               ADD      R0,SP,#+8
   \   00000140   ........           BL       Button
   \   00000144   02B0               ADD      SP,SP,#+8
   4451                    
   4452                    Label(Speech[g_leng].Syrena,2,5, 58 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   3000               MOVS     R0,R6
   \   0000014A   0090               STR      R0,[SP, #+0]
   \   0000014C   7F21               MOVS     R1,#+127
   \   0000014E   0120               MOVS     R0,#+1
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   3421               MOVS     R1,#+52
   \   00000154   0A20               MOVS     R0,#+10
   \   00000156   03B4               PUSH     {R0,R1}
   \   00000158   3A23               MOVS     R3,#+58
   \   0000015A   0522               MOVS     R2,#+5
   \   0000015C   0221               MOVS     R1,#+2
   \   0000015E   02B5               PUSH     {R1,LR}
   \   00000160   9446               MOV      R12,R2
   \   00000162   4849               LDR      R1,??ScreenAlarmSet_Paint_0+0x10  ;; 0x7ad
   \   00000164   4548               LDR      R0,??ScreenAlarmSet_Paint_0+0x8  ;; g_leng
   \   00000166   0068               LDR      R0,[R0, #+0]
   \   00000168   9622               MOVS     R2,#+150
   \   0000016A   1201               LSLS     R2,R2,#+4        ;; #+2400
   \   0000016C   5043               MULS     R0,R2,R0
   \   0000016E   444A               LDR      R2,??ScreenAlarmSet_Paint_0+0xC  ;; Speech
   \   00000170   1018               ADDS     R0,R2,R0
   \   00000172   4018               ADDS     R0,R0,R1
   \   00000174   6246               MOV      R2,R12
   \   00000176   0099               LDR      R1,[SP, #0]
   \   00000178   02B0               ADD      SP,SP,#+8
   \   0000017A   ........           BL       Label
   \   0000017E   06B0               ADD      SP,SP,#+24
   4453                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   00000180   4920               MOVS     R0,#+73
   \   00000182   2070               STRB     R0,[R4, #+0]
   \   00000184   6420               MOVS     R0,#+100
   \   00000186   6070               STRB     R0,[R4, #+1]
   \   00000188   3A20               MOVS     R0,#+58
   \   0000018A   A070               STRB     R0,[R4, #+2]
   \   0000018C   2020               MOVS     R0,#+32
   \   0000018E   E070               STRB     R0,[R4, #+3]
   4454                    ind=CharToStr(Screen->Alarm.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000190   0222               MOVS     R2,#+2
   \   00000192   2100               MOVS     R1,R4
   \   00000194   C91C               ADDS     R1,R1,#+3
   \   00000196   8C20               MOVS     R0,#+140
   \   00000198   029B               LDR      R3,[SP, #+8]
   \   0000019A   1856               LDRSB    R0,[R3, R0]
   \   0000019C   0006               LSLS     R0,R0,#+24
   \   0000019E   000E               LSRS     R0,R0,#+24
   \   000001A0   ........           BL       CharToStr
   \   000001A4   0200               MOVS     R2,R0
   4455                    Label(txt,2,20, 45 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001A6   82B0               SUB      SP,SP,#+8
   \   000001A8   3000               MOVS     R0,R6
   \   000001AA   0090               STR      R0,[SP, #+0]
   \   000001AC   7F21               MOVS     R1,#+127
   \   000001AE   0120               MOVS     R0,#+1
   \   000001B0   03B4               PUSH     {R0,R1}
   \   000001B2   1621               MOVS     R1,#+22
   \   000001B4   D21C               ADDS     R2,R2,#+3
   \   000001B6   1000               MOVS     R0,R2
   \   000001B8   0006               LSLS     R0,R0,#+24
   \   000001BA   000E               LSRS     R0,R0,#+24
   \   000001BC   03B4               PUSH     {R0,R1}
   \   000001BE   2D23               MOVS     R3,#+45
   \   000001C0   1422               MOVS     R2,#+20
   \   000001C2   0221               MOVS     R1,#+2
   \   000001C4   06A8               ADD      R0,SP,#+24
   \   000001C6   ........           BL       Label
   \   000001CA   06B0               ADD      SP,SP,#+24
   4456                  
   4457                    txt[0]='<';txt[1]=0;
   \   000001CC   2570               STRB     R5,[R4, #+0]
   \   000001CE   3000               MOVS     R0,R6
   \   000001D0   6070               STRB     R0,[R4, #+1]
   4458                    Button(txt,3,42,15,15); 
   \   000001D2   82B0               SUB      SP,SP,#+8
   \   000001D4   0F20               MOVS     R0,#+15
   \   000001D6   0090               STR      R0,[SP, #+0]
   \   000001D8   0300               MOVS     R3,R0
   \   000001DA   2A22               MOVS     R2,#+42
   \   000001DC   0321               MOVS     R1,#+3
   \   000001DE   02A8               ADD      R0,SP,#+8
   \   000001E0   ........           BL       Button
   \   000001E4   02B0               ADD      SP,SP,#+8
   4459                    txt[0]='>';
   \   000001E6   2770               STRB     R7,[R4, #+0]
   4460                    Button(txt,45,42,15,15); 
   \   000001E8   82B0               SUB      SP,SP,#+8
   \   000001EA   0F20               MOVS     R0,#+15
   \   000001EC   0090               STR      R0,[SP, #+0]
   \   000001EE   0300               MOVS     R3,R0
   \   000001F0   2A22               MOVS     R2,#+42
   \   000001F2   2D21               MOVS     R1,#+45
   \   000001F4   02A8               ADD      R0,SP,#+8
   \   000001F6   ........           BL       Button
   \   000001FA   02B0               ADD      SP,SP,#+8
   4461                    
   4462                    txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   000001FC   5020               MOVS     R0,#+80
   \   000001FE   2070               STRB     R0,[R4, #+0]
   \   00000200   3A20               MOVS     R0,#+58
   \   00000202   6070               STRB     R0,[R4, #+1]
   \   00000204   2020               MOVS     R0,#+32
   \   00000206   A070               STRB     R0,[R4, #+2]
   4463                    ind=CharToStr(Screen->Alarm.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   00000208   0222               MOVS     R2,#+2
   \   0000020A   2100               MOVS     R1,R4
   \   0000020C   891C               ADDS     R1,R1,#+2
   \   0000020E   0298               LDR      R0,[SP, #+8]
   \   00000210   8C30               ADDS     R0,R0,#+140
   \   00000212   4078               LDRB     R0,[R0, #+1]
   \   00000214   ........           BL       CharToStr
   \   00000218   0200               MOVS     R2,R0
   4464                   
   4465                    Label(txt,2,20, 29 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000021A   82B0               SUB      SP,SP,#+8
   \   0000021C   3000               MOVS     R0,R6
   \   0000021E   0090               STR      R0,[SP, #+0]
   \   00000220   7F21               MOVS     R1,#+127
   \   00000222   0120               MOVS     R0,#+1
   \   00000224   03B4               PUSH     {R0,R1}
   \   00000226   1621               MOVS     R1,#+22
   \   00000228   921C               ADDS     R2,R2,#+2
   \   0000022A   1000               MOVS     R0,R2
   \   0000022C   0006               LSLS     R0,R0,#+24
   \   0000022E   000E               LSRS     R0,R0,#+24
   \   00000230   03B4               PUSH     {R0,R1}
   \   00000232   1D23               MOVS     R3,#+29
   \   00000234   1422               MOVS     R2,#+20
   \   00000236   0221               MOVS     R1,#+2
   \   00000238   06A8               ADD      R0,SP,#+24
   \   0000023A   ........           BL       Label
   \   0000023E   06B0               ADD      SP,SP,#+24
   4466                  
   4467                    txt[0]='<';txt[1]=0;
   \   00000240   2570               STRB     R5,[R4, #+0]
   \   00000242   6670               STRB     R6,[R4, #+1]
   4468                    Button(txt,3,26,15,15); 
   \   00000244   82B0               SUB      SP,SP,#+8
   \   00000246   0F20               MOVS     R0,#+15
   \   00000248   0090               STR      R0,[SP, #+0]
   \   0000024A   0300               MOVS     R3,R0
   \   0000024C   1A22               MOVS     R2,#+26
   \   0000024E   0321               MOVS     R1,#+3
   \   00000250   02A8               ADD      R0,SP,#+8
   \   00000252   ........           BL       Button
   \   00000256   02B0               ADD      SP,SP,#+8
   4469                    txt[0]='>';
   \   00000258   2770               STRB     R7,[R4, #+0]
   4470                    Button(txt,45,26,15,15);       
   \   0000025A   82B0               SUB      SP,SP,#+8
   \   0000025C   0F20               MOVS     R0,#+15
   \   0000025E   0090               STR      R0,[SP, #+0]
   \   00000260   0300               MOVS     R3,R0
   \   00000262   1A22               MOVS     R2,#+26
   \   00000264   2D21               MOVS     R1,#+45
   \   00000266   02A8               ADD      R0,SP,#+8
   \   00000268   ........           BL       Button
   \   0000026C   02B0               ADD      SP,SP,#+8
   4471          }
   \   0000026E   FEBC               POP      {R1-R7}
   \   00000270   01BC               POP      {R0}
   \   00000272   0047               BX       R0               ;; return
   \                     ??ScreenAlarmSet_Paint_0:
   \   00000274   ........           DC32     `?<Constant "Alarm">`
   \   00000278   EA060000           DC32     0x6ea
   \   0000027C   ........           DC32     g_leng
   \   00000280   ........           DC32     Speech
   \   00000284   AD070000           DC32     0x7ad
   4472          

   \                                 In section Debug.txt, align 4, keep-with-next
   4473          void ScreenAlarmSet_Event(_Screen* Screen)
   4474          {
   \                     ScreenAlarmSet_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4475             char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   2E00               MOVS     R6,R5
   \   00000008   894F               LDR      R7,??ScreenAlarmSet_Event_0  ;; Y_down
   \   0000000A   2900               MOVS     R1,R5
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   3B5E               LDRSH    R3,[R7, R0]
   \   00000016   8748               LDR      R0,??ScreenAlarmSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   8648               LDR      R0,??ScreenAlarmSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   8C46               MOV      R12,R1
   \   00000022   8648               LDR      R0,??ScreenAlarmSet_Event_0+0xC  ;; X_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   405E               LDRSH    R0,[R0, R1]
   \   00000028   6146               MOV      R1,R12
   4476                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   07D5               BPL      ??ScreenAlarmSet_Event_1
   4477                  {
   4478                    MenuLevel=(MenuLevel/10);
   \   00000034   824C               LDR      R4,??ScreenAlarmSet_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A06C               LDR      R0,[R4, #+72]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   A064               STR      R0,[R4, #+72]
   4479                    Repaint=1;
   \   00000040   0126               MOVS     R6,#+1
   \   00000042   EDE0               B        ??ScreenAlarmSet_Event_2
   4480                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ScreenAlarmSet_Event_1:
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   385E               LDRSH    R0,[R7, R0]
   \   00000048   7028               CMP      R0,#+112
   \   0000004A   05DB               BLT      ??ScreenAlarmSet_Event_3
   \   0000004C   7A48               LDR      R0,??ScreenAlarmSet_Event_0+0x8  ;; Y_up
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   405E               LDRSH    R0,[R0, R1]
   \   00000052   7028               CMP      R0,#+112
   \   00000054   00DB               BLT      .+4
   \   00000056   E3E0               B        ??ScreenAlarmSet_Event_2
   \                     ??ScreenAlarmSet_Event_3:
   \   00000058   6F46               MOV      R7,SP
   \   0000005A   3C20               MOVS     R0,#+60
   \   0000005C   3870               STRB     R0,[R7, #+0]
   4481                  { 
   4482                    
   4483                    char txt[5];         
   4484                    txt[0]='<';txt[1]=0;
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   7870               STRB     R0,[R7, #+1]
   4485                    if (Button(txt,3,85,15,15)==1) { if(Screen->Alarm.SensorNode>0) Screen->Alarm.SensorNode--; else Screen->Alarm.SensorNode=NumberNeurons-1; Repaint=1;}  
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0F20               MOVS     R0,#+15
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   0300               MOVS     R3,R0
   \   0000006A   5522               MOVS     R2,#+85
   \   0000006C   0321               MOVS     R1,#+3
   \   0000006E   02A8               ADD      R0,SP,#+8
   \   00000070   ........           BL       Button
   \   00000074   02B0               ADD      SP,SP,#+8
   \   00000076   0128               CMP      R0,#+1
   \   00000078   0AD1               BNE      ??ScreenAlarmSet_Event_4
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   8C30               ADDS     R0,R0,#+140
   \   0000007E   8178               LDRB     R1,[R0, #+2]
   \   00000080   0029               CMP      R1,#+0
   \   00000082   02D0               BEQ      ??ScreenAlarmSet_Event_5
   \   00000084   491E               SUBS     R1,R1,#+1
   \   00000086   8170               STRB     R1,[R0, #+2]
   \   00000088   01E0               B        ??ScreenAlarmSet_Event_6
   \                     ??ScreenAlarmSet_Event_5:
   \   0000008A   2221               MOVS     R1,#+34
   \   0000008C   8170               STRB     R1,[R0, #+2]
   \                     ??ScreenAlarmSet_Event_6:
   \   0000008E   0126               MOVS     R6,#+1
   \                     ??ScreenAlarmSet_Event_4:
   \   00000090   3E20               MOVS     R0,#+62
   \   00000092   3870               STRB     R0,[R7, #+0]
   4486                    txt[0]='>';
   4487                    if (Button(txt,45,85,15,15)==1) { if(Screen->Alarm.SensorNode+1<NumberNeurons) Screen->Alarm.SensorNode++; else Screen->Alarm.SensorNode=0; Repaint=1;} 
   \   00000094   82B0               SUB      SP,SP,#+8
   \   00000096   0F20               MOVS     R0,#+15
   \   00000098   0090               STR      R0,[SP, #+0]
   \   0000009A   0300               MOVS     R3,R0
   \   0000009C   5522               MOVS     R2,#+85
   \   0000009E   2D21               MOVS     R1,#+45
   \   000000A0   02A8               ADD      R0,SP,#+8
   \   000000A2   ........           BL       Button
   \   000000A6   02B0               ADD      SP,SP,#+8
   \   000000A8   0128               CMP      R0,#+1
   \   000000AA   0ED1               BNE      ??ScreenAlarmSet_Event_7
   \   000000AC   2000               MOVS     R0,R4
   \   000000AE   8C30               ADDS     R0,R0,#+140
   \   000000B0   8178               LDRB     R1,[R0, #+2]
   \   000000B2   491C               ADDS     R1,R1,#+1
   \   000000B4   0904               LSLS     R1,R1,#+16
   \   000000B6   090C               LSRS     R1,R1,#+16
   \   000000B8   2329               CMP      R1,#+35
   \   000000BA   03D2               BCS      ??ScreenAlarmSet_Event_8
   \   000000BC   8178               LDRB     R1,[R0, #+2]
   \   000000BE   491C               ADDS     R1,R1,#+1
   \   000000C0   8170               STRB     R1,[R0, #+2]
   \   000000C2   01E0               B        ??ScreenAlarmSet_Event_9
   \                     ??ScreenAlarmSet_Event_8:
   \   000000C4   2900               MOVS     R1,R5
   \   000000C6   8170               STRB     R1,[R0, #+2]
   \                     ??ScreenAlarmSet_Event_9:
   \   000000C8   0126               MOVS     R6,#+1
   4488                   
   4489                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_7:
   \   000000CA   3C20               MOVS     R0,#+60
   \   000000CC   3870               STRB     R0,[R7, #+0]
   \   000000CE   2800               MOVS     R0,R5
   \   000000D0   7870               STRB     R0,[R7, #+1]
   4490                    if (Button(txt,3,69,15,15)==1) { if(Screen->Alarm.SensorPort>0) Screen->Alarm.SensorPort--; else Screen->Alarm.SensorPort=NumberReg-1; Repaint=1;}  
   \   000000D2   82B0               SUB      SP,SP,#+8
   \   000000D4   0F20               MOVS     R0,#+15
   \   000000D6   0090               STR      R0,[SP, #+0]
   \   000000D8   0300               MOVS     R3,R0
   \   000000DA   4522               MOVS     R2,#+69
   \   000000DC   0321               MOVS     R1,#+3
   \   000000DE   02A8               ADD      R0,SP,#+8
   \   000000E0   ........           BL       Button
   \   000000E4   02B0               ADD      SP,SP,#+8
   \   000000E6   0128               CMP      R0,#+1
   \   000000E8   0AD1               BNE      ??ScreenAlarmSet_Event_10
   \   000000EA   2000               MOVS     R0,R4
   \   000000EC   8C30               ADDS     R0,R0,#+140
   \   000000EE   C178               LDRB     R1,[R0, #+3]
   \   000000F0   0029               CMP      R1,#+0
   \   000000F2   02D0               BEQ      ??ScreenAlarmSet_Event_11
   \   000000F4   491E               SUBS     R1,R1,#+1
   \   000000F6   C170               STRB     R1,[R0, #+3]
   \   000000F8   01E0               B        ??ScreenAlarmSet_Event_12
   \                     ??ScreenAlarmSet_Event_11:
   \   000000FA   0921               MOVS     R1,#+9
   \   000000FC   C170               STRB     R1,[R0, #+3]
   \                     ??ScreenAlarmSet_Event_12:
   \   000000FE   0126               MOVS     R6,#+1
   4491                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_10:
   \   00000100   3E20               MOVS     R0,#+62
   \   00000102   3870               STRB     R0,[R7, #+0]
   4492                    if (Button(txt,45,69,15,15)==1) { if(Screen->Alarm.SensorPort+1<NumberReg) Screen->Alarm.SensorPort++; else Screen->Alarm.SensorPort=0; Repaint=1;} 
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0F20               MOVS     R0,#+15
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   0300               MOVS     R3,R0
   \   0000010C   4522               MOVS     R2,#+69
   \   0000010E   2D21               MOVS     R1,#+45
   \   00000110   02A8               ADD      R0,SP,#+8
   \   00000112   ........           BL       Button
   \   00000116   02B0               ADD      SP,SP,#+8
   \   00000118   0128               CMP      R0,#+1
   \   0000011A   0ED1               BNE      ??ScreenAlarmSet_Event_13
   \   0000011C   2000               MOVS     R0,R4
   \   0000011E   8C30               ADDS     R0,R0,#+140
   \   00000120   C178               LDRB     R1,[R0, #+3]
   \   00000122   491C               ADDS     R1,R1,#+1
   \   00000124   0904               LSLS     R1,R1,#+16
   \   00000126   090C               LSRS     R1,R1,#+16
   \   00000128   0A29               CMP      R1,#+10
   \   0000012A   03D2               BCS      ??ScreenAlarmSet_Event_14
   \   0000012C   C178               LDRB     R1,[R0, #+3]
   \   0000012E   491C               ADDS     R1,R1,#+1
   \   00000130   C170               STRB     R1,[R0, #+3]
   \   00000132   01E0               B        ??ScreenAlarmSet_Event_15
   \                     ??ScreenAlarmSet_Event_14:
   \   00000134   2900               MOVS     R1,R5
   \   00000136   C170               STRB     R1,[R0, #+3]
   \                     ??ScreenAlarmSet_Event_15:
   \   00000138   0126               MOVS     R6,#+1
   4493                   
   4494                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_13:
   \   0000013A   3C20               MOVS     R0,#+60
   \   0000013C   3870               STRB     R0,[R7, #+0]
   \   0000013E   2800               MOVS     R0,R5
   \   00000140   7870               STRB     R0,[R7, #+1]
   4495                    if (Button(txt,3,42,15,15)==1) { if(Screen->Alarm.ActorNode-1>0) Screen->Alarm.ActorNode--; else Screen->Alarm.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   00000142   82B0               SUB      SP,SP,#+8
   \   00000144   0F20               MOVS     R0,#+15
   \   00000146   0090               STR      R0,[SP, #+0]
   \   00000148   0300               MOVS     R3,R0
   \   0000014A   2A22               MOVS     R2,#+42
   \   0000014C   0321               MOVS     R1,#+3
   \   0000014E   02A8               ADD      R0,SP,#+8
   \   00000150   ........           BL       Button
   \   00000154   02B0               ADD      SP,SP,#+8
   \   00000156   0128               CMP      R0,#+1
   \   00000158   0ED1               BNE      ??ScreenAlarmSet_Event_16
   \   0000015A   2000               MOVS     R0,R4
   \   0000015C   8C30               ADDS     R0,R0,#+140
   \   0000015E   0021               MOVS     R1,#+0
   \   00000160   4156               LDRSB    R1,[R0, R1]
   \   00000162   491E               SUBS     R1,R1,#+1
   \   00000164   0129               CMP      R1,#+1
   \   00000166   04DB               BLT      ??ScreenAlarmSet_Event_17
   \   00000168   0021               MOVS     R1,#+0
   \   0000016A   4156               LDRSB    R1,[R0, R1]
   \   0000016C   491E               SUBS     R1,R1,#+1
   \   0000016E   0170               STRB     R1,[R0, #+0]
   \   00000170   01E0               B        ??ScreenAlarmSet_Event_18
   \                     ??ScreenAlarmSet_Event_17:
   \   00000172   2221               MOVS     R1,#+34
   \   00000174   0170               STRB     R1,[R0, #+0]
   \                     ??ScreenAlarmSet_Event_18:
   \   00000176   0126               MOVS     R6,#+1
   4496                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_16:
   \   00000178   3E20               MOVS     R0,#+62
   \   0000017A   3870               STRB     R0,[R7, #+0]
   4497                    if (Button(txt,45,42,15,15)==1) { if(Screen->Alarm.ActorNode+1<NumberNeurons) Screen->Alarm.ActorNode++; else Screen->Alarm.ActorNode=0; Repaint=1;} 
   \   0000017C   82B0               SUB      SP,SP,#+8
   \   0000017E   0F20               MOVS     R0,#+15
   \   00000180   0090               STR      R0,[SP, #+0]
   \   00000182   0300               MOVS     R3,R0
   \   00000184   2A22               MOVS     R2,#+42
   \   00000186   2D21               MOVS     R1,#+45
   \   00000188   02A8               ADD      R0,SP,#+8
   \   0000018A   ........           BL       Button
   \   0000018E   02B0               ADD      SP,SP,#+8
   \   00000190   0128               CMP      R0,#+1
   \   00000192   0ED1               BNE      ??ScreenAlarmSet_Event_19
   \   00000194   2000               MOVS     R0,R4
   \   00000196   8C30               ADDS     R0,R0,#+140
   \   00000198   0021               MOVS     R1,#+0
   \   0000019A   4156               LDRSB    R1,[R0, R1]
   \   0000019C   491C               ADDS     R1,R1,#+1
   \   0000019E   2329               CMP      R1,#+35
   \   000001A0   04DA               BGE      ??ScreenAlarmSet_Event_20
   \   000001A2   0021               MOVS     R1,#+0
   \   000001A4   4156               LDRSB    R1,[R0, R1]
   \   000001A6   491C               ADDS     R1,R1,#+1
   \   000001A8   0170               STRB     R1,[R0, #+0]
   \   000001AA   01E0               B        ??ScreenAlarmSet_Event_21
   \                     ??ScreenAlarmSet_Event_20:
   \   000001AC   2900               MOVS     R1,R5
   \   000001AE   0170               STRB     R1,[R0, #+0]
   \                     ??ScreenAlarmSet_Event_21:
   \   000001B0   0126               MOVS     R6,#+1
   4498                   
   4499                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_19:
   \   000001B2   3C20               MOVS     R0,#+60
   \   000001B4   3870               STRB     R0,[R7, #+0]
   \   000001B6   2800               MOVS     R0,R5
   \   000001B8   7870               STRB     R0,[R7, #+1]
   4500                    if (Button(txt,3,26,15,15)==1) { if(Screen->Alarm.ActorPort>0) Screen->Alarm.ActorPort--; else Screen->Alarm.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   000001BA   82B0               SUB      SP,SP,#+8
   \   000001BC   0F20               MOVS     R0,#+15
   \   000001BE   0090               STR      R0,[SP, #+0]
   \   000001C0   0300               MOVS     R3,R0
   \   000001C2   1A22               MOVS     R2,#+26
   \   000001C4   0321               MOVS     R1,#+3
   \   000001C6   02A8               ADD      R0,SP,#+8
   \   000001C8   ........           BL       Button
   \   000001CC   02B0               ADD      SP,SP,#+8
   \   000001CE   0128               CMP      R0,#+1
   \   000001D0   0AD1               BNE      ??ScreenAlarmSet_Event_22
   \   000001D2   2000               MOVS     R0,R4
   \   000001D4   8C30               ADDS     R0,R0,#+140
   \   000001D6   4178               LDRB     R1,[R0, #+1]
   \   000001D8   0029               CMP      R1,#+0
   \   000001DA   02D0               BEQ      ??ScreenAlarmSet_Event_23
   \   000001DC   491E               SUBS     R1,R1,#+1
   \   000001DE   4170               STRB     R1,[R0, #+1]
   \   000001E0   01E0               B        ??ScreenAlarmSet_Event_24
   \                     ??ScreenAlarmSet_Event_23:
   \   000001E2   0F21               MOVS     R1,#+15
   \   000001E4   4170               STRB     R1,[R0, #+1]
   \                     ??ScreenAlarmSet_Event_24:
   \   000001E6   0126               MOVS     R6,#+1
   4501                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_22:
   \   000001E8   3E20               MOVS     R0,#+62
   \   000001EA   3870               STRB     R0,[R7, #+0]
   4502                    if (Button(txt,45,26,15,15)==1) { if(Screen->Alarm.ActorPort+1<NumberNeuronsPort) Screen->Alarm.ActorPort++; else Screen->Alarm.ActorPort=0; Repaint=1;} 
   \   000001EC   82B0               SUB      SP,SP,#+8
   \   000001EE   0F20               MOVS     R0,#+15
   \   000001F0   0090               STR      R0,[SP, #+0]
   \   000001F2   0300               MOVS     R3,R0
   \   000001F4   1A22               MOVS     R2,#+26
   \   000001F6   2D21               MOVS     R1,#+45
   \   000001F8   02A8               ADD      R0,SP,#+8
   \   000001FA   ........           BL       Button
   \   000001FE   02B0               ADD      SP,SP,#+8
   \   00000200   0128               CMP      R0,#+1
   \   00000202   0DD1               BNE      ??ScreenAlarmSet_Event_2
   \   00000204   8C34               ADDS     R4,R4,#+140
   \   00000206   2000               MOVS     R0,R4
   \   00000208   4178               LDRB     R1,[R0, #+1]
   \   0000020A   491C               ADDS     R1,R1,#+1
   \   0000020C   0904               LSLS     R1,R1,#+16
   \   0000020E   090C               LSRS     R1,R1,#+16
   \   00000210   1029               CMP      R1,#+16
   \   00000212   03D2               BCS      ??ScreenAlarmSet_Event_25
   \   00000214   4178               LDRB     R1,[R0, #+1]
   \   00000216   491C               ADDS     R1,R1,#+1
   \   00000218   4170               STRB     R1,[R0, #+1]
   \   0000021A   00E0               B        ??ScreenAlarmSet_Event_26
   \                     ??ScreenAlarmSet_Event_25:
   \   0000021C   4570               STRB     R5,[R0, #+1]
   \                     ??ScreenAlarmSet_Event_26:
   \   0000021E   0126               MOVS     R6,#+1
   4503          
   4504                  }
   4505                  if (Repaint) MenuPaint();
   \                     ??ScreenAlarmSet_Event_2:
   \   00000220   002E               CMP      R6,#+0
   \   00000222   01D0               BEQ      ??ScreenAlarmSet_Event_27
   \   00000224   ........           BL       MenuPaint
   4506          }
   \                     ??ScreenAlarmSet_Event_27:
   \   00000228   FEBC               POP      {R1-R7}
   \   0000022A   01BC               POP      {R0}
   \   0000022C   0047               BX       R0               ;; return
   \   0000022E   C046               Nop      
   \                     ??ScreenAlarmSet_Event_0:
   \   00000230   ........           DC32     Y_down
   \   00000234   ........           DC32     X_down
   \   00000238   ........           DC32     Y_up
   \   0000023C   ........           DC32     X_up
   \   00000240   ........           DC32     TextToChangeLength
   4507          
   4508          
   4509          
   4510          
   4511          
   4512          

   \                                 In section Debug.txt, align 4, keep-with-next
   4513          void ZoneButon(char _Label[15], char poz_X , char poz_Y ,char width, char height, char *Vstring)
   4514          {
   \                     ZoneButon:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1500               MOVS     R5,R2
   \   00000006   1E00               MOVS     R6,R3
   \   00000008   6846               MOV      R0,SP
   \   0000000A   077E               LDRB     R7,[R0, #+24]
   4515           if (height>12)
   \   0000000C   0D2F               CMP      R7,#+13
   \   0000000E   30D3               BCC      ??ZoneButon_0
   4516           {
   4517            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000010   0221               MOVS     R1,#+2
   \   00000012   3800               MOVS     R0,R7
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   2100               MOVS     R1,R4
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   ........           BL       Zone
   \   0000001E   02B0               ADD      SP,SP,#+8
   4518            Label(Vstring,0,poz_X+2,poz_Y+height-10,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000020   A41C               ADDS     R4,R4,#+2
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0A21               MOVS     R1,#+10
   \   00000030   0320               MOVS     R0,#+3
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   EB19               ADDS     R3,R5,R7
   \   00000036   0A3B               SUBS     R3,R3,#+10
   \   00000038   2200               MOVS     R2,R4
   \   0000003A   1206               LSLS     R2,R2,#+24
   \   0000003C   120E               LSRS     R2,R2,#+24
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   0D98               LDR      R0,[SP, #+52]
   \   00000042   ........           BL       Label
   \   00000046   06B0               ADD      SP,SP,#+24
   4519            Zone(_Label,poz_X+2,poz_Y+2,width-4,height-12,1); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with 
   \   00000048   0121               MOVS     R1,#+1
   \   0000004A   0C3F               SUBS     R7,R7,#+12
   \   0000004C   3800               MOVS     R0,R7
   \   0000004E   0006               LSLS     R0,R0,#+24
   \   00000050   000E               LSRS     R0,R0,#+24
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   331F               SUBS     R3,R6,#+4
   \   00000056   1B06               LSLS     R3,R3,#+24
   \   00000058   1B0E               LSRS     R3,R3,#+24
   \   0000005A   AD1C               ADDS     R5,R5,#+2
   \   0000005C   2A00               MOVS     R2,R5
   \   0000005E   1206               LSLS     R2,R2,#+24
   \   00000060   120E               LSRS     R2,R2,#+24
   \   00000062   2100               MOVS     R1,R4
   \   00000064   0906               LSLS     R1,R1,#+24
   \   00000066   090E               LSRS     R1,R1,#+24
   \   00000068   0298               LDR      R0,[SP, #+8]
   \   0000006A   ........           BL       Zone
   \   0000006E   02B0               ADD      SP,SP,#+8
   \   00000070   30E0               B        ??ZoneButon_1
   4520           }else{
   4521            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with, LineType- typ lini 0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana
   \                     ??ZoneButon_0:
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   3800               MOVS     R0,R7
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   2100               MOVS     R1,R4
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   ........           BL       Zone
   \   00000080   02B0               ADD      SP,SP,#+8
   4522            
   4523            Label(Vstring,0,poz_X+2,poz_Y+1,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000082   82B0               SUB      SP,SP,#+8
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   0090               STR      R0,[SP, #+0]
   \   00000088   7F21               MOVS     R1,#+127
   \   0000008A   0120               MOVS     R0,#+1
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   0A21               MOVS     R1,#+10
   \   00000090   0320               MOVS     R0,#+3
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   2B00               MOVS     R3,R5
   \   00000096   5B1C               ADDS     R3,R3,#+1
   \   00000098   2200               MOVS     R2,R4
   \   0000009A   921C               ADDS     R2,R2,#+2
   \   0000009C   1206               LSLS     R2,R2,#+24
   \   0000009E   120E               LSRS     R2,R2,#+24
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   0D98               LDR      R0,[SP, #+52]
   \   000000A4   ........           BL       Label
   \   000000A8   06B0               ADD      SP,SP,#+24
   4524            Zone(_Label,poz_X+17,poz_Y+2,width-19,height-4,1); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with 
   \   000000AA   0121               MOVS     R1,#+1
   \   000000AC   381F               SUBS     R0,R7,#+4
   \   000000AE   0006               LSLS     R0,R0,#+24
   \   000000B0   000E               LSRS     R0,R0,#+24
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   133E               SUBS     R6,R6,#+19
   \   000000B6   3300               MOVS     R3,R6
   \   000000B8   1B06               LSLS     R3,R3,#+24
   \   000000BA   1B0E               LSRS     R3,R3,#+24
   \   000000BC   AD1C               ADDS     R5,R5,#+2
   \   000000BE   2A00               MOVS     R2,R5
   \   000000C0   1206               LSLS     R2,R2,#+24
   \   000000C2   120E               LSRS     R2,R2,#+24
   \   000000C4   1134               ADDS     R4,R4,#+17
   \   000000C6   2100               MOVS     R1,R4
   \   000000C8   0906               LSLS     R1,R1,#+24
   \   000000CA   090E               LSRS     R1,R1,#+24
   \   000000CC   0298               LDR      R0,[SP, #+8]
   \   000000CE   ........           BL       Zone
   \   000000D2   02B0               ADD      SP,SP,#+8
   4525             
   4526           }
   4527          }
   \                     ??ZoneButon_1:
   \   000000D4   F8BC               POP      {R3-R7}
   \   000000D6   01BC               POP      {R0}
   \   000000D8   0047               BX       R0               ;; return
   4528          

   \                                 In section Debug.txt, align 4, keep-with-next
   4529          void ZoneGraph(char _Label[15], char poz_X , char poz_Y ,char width, char height, char *Vstring, _Graph *Graph)
   4530          {
   \                     ZoneGraph:
   \   00000000   FBB5               PUSH     {R0,R1,R3-R7,LR}
   \   00000002   0E00               MOVS     R6,R1
   \   00000004   1400               MOVS     R4,R2
   \   00000006   0A9D               LDR      R5,[SP, #+40]
   4531             if ((Graph->Type>GraphNone) && (Graph->Type<=GraphTermometr))
   \   00000008   2878               LDRB     R0,[R5, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   11D0               BEQ      ??ZoneGraph_0
   \   0000000E   0828               CMP      R0,#+8
   \   00000010   0FD2               BCS      ??ZoneGraph_0
   4532             {
   4533               CopyToCanvasPoint((char*) GraphTab[Graph->Type], poz_X, poz_Y+3, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   1220               MOVS     R0,#+18
   \   00000016   0090               STR      R0,[SP, #+0]
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   D21C               ADDS     R2,R2,#+3
   \   0000001C   1206               LSLS     R2,R2,#+24
   \   0000001E   120E               LSRS     R2,R2,#+24
   \   00000020   2878               LDRB     R0,[R5, #+0]
   \   00000022   3627               MOVS     R7,#+54
   \   00000024   7843               MULS     R0,R7,R0
   \   00000026   794F               LDR      R7,??ZoneGraph_1  ;; `?<Constant {0, 0}>`
   \   00000028   3818               ADDS     R0,R7,R0
   \   0000002A   9C30               ADDS     R0,R0,#+156
   \   0000002C   ........           BL       CopyToCanvasPoint
   \   00000030   02B0               ADD      SP,SP,#+8
   4534             
   4535             }   
   4536          
   4537             if ((Graph->Type==GraphOnOff) && (Graph->PlusOnOff==0))
   \                     ??ZoneGraph_0:
   \   00000032   2878               LDRB     R0,[R5, #+0]
   \   00000034   0B28               CMP      R0,#+11
   \   00000036   2AD1               BNE      ??ZoneGraph_2
   \   00000038   A879               LDRB     R0,[R5, #+6]
   \   0000003A   C007               LSLS     R0,R0,#+31
   \   0000003C   27D4               BMI      ??ZoneGraph_2
   4538             {
   4539               Label("On ",2,poz_X,poz_Y+(height/2)+2,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003E   08A8               ADD      R0,SP,#+32
   \   00000040   0078               LDRB     R0,[R0, #+0]
   \   00000042   4008               LSRS     R0,R0,#+1
   \   00000044   2718               ADDS     R7,R4,R0
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   7F21               MOVS     R1,#+127
   \   0000004E   0120               MOVS     R0,#+1
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   04A8               ADD      R0,SP,#+16
   \   00000054   017A               LDRB     R1,[R0, #+8]
   \   00000056   0320               MOVS     R0,#+3
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   3B00               MOVS     R3,R7
   \   0000005C   9B1C               ADDS     R3,R3,#+2
   \   0000005E   3200               MOVS     R2,R6
   \   00000060   0221               MOVS     R1,#+2
   \   00000062   6BA0               ADR      R0,??ZoneGraph_1+0x4  ;; "On "
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
   4540               Label("Off ",2,poz_X,poz_Y+(height/2)-6,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   0020               MOVS     R0,#+0
   \   0000006E   0090               STR      R0,[SP, #+0]
   \   00000070   7F21               MOVS     R1,#+127
   \   00000072   0120               MOVS     R0,#+1
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   04A8               ADD      R0,SP,#+16
   \   00000078   017A               LDRB     R1,[R0, #+8]
   \   0000007A   0320               MOVS     R0,#+3
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   BF1F               SUBS     R7,R7,#+6
   \   00000080   3B00               MOVS     R3,R7
   \   00000082   3200               MOVS     R2,R6
   \   00000084   0221               MOVS     R1,#+2
   \   00000086   6348               LDR      R0,??ZoneGraph_1+0x8  ;; `?<Constant {0, 0}>` + 76
   \   00000088   ........           BL       Label
   \   0000008C   06B0               ADD      SP,SP,#+24
   4541          
   4542             }   
   4543             
   4544             if (Graph->Type==GraphScena)
   \                     ??ZoneGraph_2:
   \   0000008E   2878               LDRB     R0,[R5, #+0]
   \   00000090   0928               CMP      R0,#+9
   \   00000092   22D1               BNE      ??ZoneGraph_3
   4545             {
   4546               Label("Scn ",2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000094   08A8               ADD      R0,SP,#+32
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   4008               LSRS     R0,R0,#+1
   \   0000009A   2718               ADDS     R7,R4,R0
   \   0000009C   82B0               SUB      SP,SP,#+8
   \   0000009E   0020               MOVS     R0,#+0
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   0120               MOVS     R0,#+1
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   04A8               ADD      R0,SP,#+16
   \   000000AA   017A               LDRB     R1,[R0, #+8]
   \   000000AC   0320               MOVS     R0,#+3
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   FB1E               SUBS     R3,R7,#+3
   \   000000B2   3200               MOVS     R2,R6
   \   000000B4   0221               MOVS     R1,#+2
   \   000000B6   5848               LDR      R0,??ZoneGraph_1+0xC  ;; `?<Constant {0, 0}>` + 84
   \   000000B8   ........           BL       Label
   \   000000BC   06B0               ADD      SP,SP,#+24
   4547               H_line(poz_X+3,poz_Y+(height/2)-5,width-6,1); 
   \   000000BE   0123               MOVS     R3,#+1
   \   000000C0   6846               MOV      R0,SP
   \   000000C2   007A               LDRB     R0,[R0, #+8]
   \   000000C4   821F               SUBS     R2,R0,#+6
   \   000000C6   1206               LSLS     R2,R2,#+24
   \   000000C8   120E               LSRS     R2,R2,#+24
   \   000000CA   7F1F               SUBS     R7,R7,#+5
   \   000000CC   3900               MOVS     R1,R7
   \   000000CE   3000               MOVS     R0,R6
   \   000000D0   C01C               ADDS     R0,R0,#+3
   \   000000D2   0006               LSLS     R0,R0,#+24
   \   000000D4   000E               LSRS     R0,R0,#+24
   \   000000D6   ........           BL       H_line
   4548             }
   4549             
   4550             if ((Graph->Type==GraphText) && (Graph->PlusOnOff==0))
   \                     ??ZoneGraph_3:
   \   000000DA   2878               LDRB     R0,[R5, #+0]
   \   000000DC   0828               CMP      R0,#+8
   \   000000DE   18D1               BNE      ??ZoneGraph_4
   \   000000E0   A879               LDRB     R0,[R5, #+6]
   \   000000E2   C007               LSLS     R0,R0,#+31
   \   000000E4   15D4               BMI      ??ZoneGraph_4
   4551             {
   4552               Label(Graph->Text,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000E6   82B0               SUB      SP,SP,#+8
   \   000000E8   0020               MOVS     R0,#+0
   \   000000EA   0090               STR      R0,[SP, #+0]
   \   000000EC   7F21               MOVS     R1,#+127
   \   000000EE   0120               MOVS     R0,#+1
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   04A8               ADD      R0,SP,#+16
   \   000000F4   017A               LDRB     R1,[R0, #+8]
   \   000000F6   0320               MOVS     R0,#+3
   \   000000F8   03B4               PUSH     {R0,R1}
   \   000000FA   0EA8               ADD      R0,SP,#+56
   \   000000FC   0078               LDRB     R0,[R0, #+0]
   \   000000FE   4008               LSRS     R0,R0,#+1
   \   00000100   2318               ADDS     R3,R4,R0
   \   00000102   DB1E               SUBS     R3,R3,#+3
   \   00000104   3200               MOVS     R2,R6
   \   00000106   0221               MOVS     R1,#+2
   \   00000108   2800               MOVS     R0,R5
   \   0000010A   401C               ADDS     R0,R0,#+1
   \   0000010C   ........           BL       Label
   \   00000110   06B0               ADD      SP,SP,#+24
   4553             }   
   4554             
   4555             if ((Graph->PlusOnOff) && (((Graph->Type==GraphOnOff))||(Graph->Type==GraphText)))
   \                     ??ZoneGraph_4:
   \   00000112   A879               LDRB     R0,[R5, #+6]
   \   00000114   C007               LSLS     R0,R0,#+31
   \   00000116   2DD5               BPL      ??ZoneGraph_5
   \   00000118   2878               LDRB     R0,[R5, #+0]
   \   0000011A   0B28               CMP      R0,#+11
   \   0000011C   01D0               BEQ      ??ZoneGraph_6
   \   0000011E   0828               CMP      R0,#+8
   \   00000120   28D1               BNE      ??ZoneGraph_5
   4556             {
   4557                Label(Graph->Text,2,poz_X,poz_Y+(height/2)+1,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ZoneGraph_6:
   \   00000122   08A8               ADD      R0,SP,#+32
   \   00000124   0078               LDRB     R0,[R0, #+0]
   \   00000126   4008               LSRS     R0,R0,#+1
   \   00000128   2718               ADDS     R7,R4,R0
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   0020               MOVS     R0,#+0
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   7F21               MOVS     R1,#+127
   \   00000132   0120               MOVS     R0,#+1
   \   00000134   03B4               PUSH     {R0,R1}
   \   00000136   04A8               ADD      R0,SP,#+16
   \   00000138   017A               LDRB     R1,[R0, #+8]
   \   0000013A   0320               MOVS     R0,#+3
   \   0000013C   03B4               PUSH     {R0,R1}
   \   0000013E   3B00               MOVS     R3,R7
   \   00000140   5B1C               ADDS     R3,R3,#+1
   \   00000142   3200               MOVS     R2,R6
   \   00000144   0221               MOVS     R1,#+2
   \   00000146   2800               MOVS     R0,R5
   \   00000148   401C               ADDS     R0,R0,#+1
   \   0000014A   ........           BL       Label
   \   0000014E   06B0               ADD      SP,SP,#+24
   4558                Label("On? ",2,poz_X,poz_Y+(height/2)-7,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000150   82B0               SUB      SP,SP,#+8
   \   00000152   0020               MOVS     R0,#+0
   \   00000154   0090               STR      R0,[SP, #+0]
   \   00000156   7F21               MOVS     R1,#+127
   \   00000158   0120               MOVS     R0,#+1
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   04A8               ADD      R0,SP,#+16
   \   0000015E   017A               LDRB     R1,[R0, #+8]
   \   00000160   0320               MOVS     R0,#+3
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   FF1F               SUBS     R7,R7,#+7
   \   00000166   3B00               MOVS     R3,R7
   \   00000168   3200               MOVS     R2,R6
   \   0000016A   0221               MOVS     R1,#+2
   \   0000016C   2B48               LDR      R0,??ZoneGraph_1+0x10  ;; `?<Constant {0, 0}>` + 92
   \   0000016E   ........           BL       Label
   \   00000172   06B0               ADD      SP,SP,#+24
   4559             }
   4560             
   4561             
   4562             if (Graph->Type==GraphWartosc)
   \                     ??ZoneGraph_5:
   \   00000174   2878               LDRB     R0,[R5, #+0]
   \   00000176   0A28               CMP      R0,#+10
   \   00000178   1FD1               BNE      ??ZoneGraph_7
   4563              {
   4564                char txt[5];
   4565                txt[0]='A';txt[1]='n';txt[2]='a'; txt[3]=0; 
   \   0000017A   6846               MOV      R0,SP
   \   0000017C   4121               MOVS     R1,#+65
   \   0000017E   0170               STRB     R1,[R0, #+0]
   \   00000180   6E21               MOVS     R1,#+110
   \   00000182   4170               STRB     R1,[R0, #+1]
   \   00000184   6121               MOVS     R1,#+97
   \   00000186   8170               STRB     R1,[R0, #+2]
   \   00000188   0021               MOVS     R1,#+0
   \   0000018A   C170               STRB     R1,[R0, #+3]
   4566                Label(txt,2,poz_X-1,poz_Y+(height/2)-4,3,width,1,127,0); 
   \   0000018C   82B0               SUB      SP,SP,#+8
   \   0000018E   0800               MOVS     R0,R1
   \   00000190   0090               STR      R0,[SP, #+0]
   \   00000192   7F21               MOVS     R1,#+127
   \   00000194   0120               MOVS     R0,#+1
   \   00000196   03B4               PUSH     {R0,R1}
   \   00000198   04A8               ADD      R0,SP,#+16
   \   0000019A   017A               LDRB     R1,[R0, #+8]
   \   0000019C   0320               MOVS     R0,#+3
   \   0000019E   03B4               PUSH     {R0,R1}
   \   000001A0   0EA8               ADD      R0,SP,#+56
   \   000001A2   0078               LDRB     R0,[R0, #+0]
   \   000001A4   4008               LSRS     R0,R0,#+1
   \   000001A6   2318               ADDS     R3,R4,R0
   \   000001A8   1B1F               SUBS     R3,R3,#+4
   \   000001AA   721E               SUBS     R2,R6,#+1
   \   000001AC   1206               LSLS     R2,R2,#+24
   \   000001AE   120E               LSRS     R2,R2,#+24
   \   000001B0   0221               MOVS     R1,#+2
   \   000001B2   06A8               ADD      R0,SP,#+24
   \   000001B4   ........           BL       Label
   \   000001B8   06B0               ADD      SP,SP,#+24
   4567              }
   4568             
   4569            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \                     ??ZoneGraph_7:
   \   000001BA   0221               MOVS     R1,#+2
   \   000001BC   08A8               ADD      R0,SP,#+32
   \   000001BE   0078               LDRB     R0,[R0, #+0]
   \   000001C0   03B4               PUSH     {R0,R1}
   \   000001C2   02A8               ADD      R0,SP,#+8
   \   000001C4   037A               LDRB     R3,[R0, #+8]
   \   000001C6   2200               MOVS     R2,R4
   \   000001C8   3100               MOVS     R1,R6
   \   000001CA   0020               MOVS     R0,#+0
   \   000001CC   ........           BL       Zone
   \   000001D0   02B0               ADD      SP,SP,#+8
   4570            if (Vstring!=0) Label(Vstring,0,poz_X+2,poz_Y+height-10,11,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001D2   0998               LDR      R0,[SP, #+36]
   \   000001D4   0028               CMP      R0,#+0
   \   000001D6   15D0               BEQ      ??ZoneGraph_8
   \   000001D8   82B0               SUB      SP,SP,#+8
   \   000001DA   0020               MOVS     R0,#+0
   \   000001DC   0090               STR      R0,[SP, #+0]
   \   000001DE   7F21               MOVS     R1,#+127
   \   000001E0   0120               MOVS     R0,#+1
   \   000001E2   03B4               PUSH     {R0,R1}
   \   000001E4   0A21               MOVS     R1,#+10
   \   000001E6   0B20               MOVS     R0,#+11
   \   000001E8   03B4               PUSH     {R0,R1}
   \   000001EA   0EA8               ADD      R0,SP,#+56
   \   000001EC   0078               LDRB     R0,[R0, #+0]
   \   000001EE   2318               ADDS     R3,R4,R0
   \   000001F0   0A3B               SUBS     R3,R3,#+10
   \   000001F2   B61C               ADDS     R6,R6,#+2
   \   000001F4   3200               MOVS     R2,R6
   \   000001F6   1206               LSLS     R2,R2,#+24
   \   000001F8   120E               LSRS     R2,R2,#+24
   \   000001FA   0021               MOVS     R1,#+0
   \   000001FC   0F98               LDR      R0,[SP, #+60]
   \   000001FE   ........           BL       Label
   \   00000202   06B0               ADD      SP,SP,#+24
   4571           
   4572          }
   \                     ??ZoneGraph_8:
   \   00000204   FEBC               POP      {R1-R7}
   \   00000206   01BC               POP      {R0}
   \   00000208   0047               BX       R0               ;; return
   \   0000020A   C046               Nop      
   \                     ??ZoneGraph_1:
   \   0000020C   ........           DC32     `?<Constant {0, 0}>`
   \   00000210   4F6E2000           DC8      "On "
   \   00000214   ........           DC32     `?<Constant {0, 0}>` + 76
   \   00000218   ........           DC32     `?<Constant {0, 0}>` + 84
   \   0000021C   ........           DC32     `?<Constant {0, 0}>` + 92
   4573          

   \                                 In section Debug.txt, align 4, keep-with-next
   4574          void ScreenGraph(char poz_X , char poz_Y ,char width, char height, _Graph *Graph)
   4575          {
   \                     ScreenGraph:
   \   00000000   F5B5               PUSH     {R0,R2,R4-R7,LR}
   \   00000002   83B0               SUB      SP,SP,#+12
   \   00000004   0C00               MOVS     R4,R1
   \   00000006   1D00               MOVS     R5,R3
   \   00000008   0A9E               LDR      R6,[SP, #+40]
   4576             if ((Graph->Type>GraphNone) && (Graph->Type<=GraphTermometr))
   \   0000000A   3078               LDRB     R0,[R6, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   14D0               BEQ      ??ScreenGraph_0
   \   00000010   0828               CMP      R0,#+8
   \   00000012   12D2               BCS      ??ScreenGraph_0
   4577             {
   4578               CopyToCanvasPoint((char*) GraphTab[Graph->Type], poz_X, poz_Y+3, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000014   82B0               SUB      SP,SP,#+8
   \   00000016   1220               MOVS     R0,#+18
   \   00000018   0090               STR      R0,[SP, #+0]
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   2200               MOVS     R2,R4
   \   0000001E   D21C               ADDS     R2,R2,#+3
   \   00000020   1206               LSLS     R2,R2,#+24
   \   00000022   120E               LSRS     R2,R2,#+24
   \   00000024   02A8               ADD      R0,SP,#+8
   \   00000026   017B               LDRB     R1,[R0, #+12]
   \   00000028   3078               LDRB     R0,[R6, #+0]
   \   0000002A   3627               MOVS     R7,#+54
   \   0000002C   7843               MULS     R0,R7,R0
   \   0000002E   B44F               LDR      R7,??ScreenGraph_1  ;; `?<Constant {0, 0}>`
   \   00000030   3818               ADDS     R0,R7,R0
   \   00000032   9C30               ADDS     R0,R0,#+156
   \   00000034   ........           BL       CopyToCanvasPoint
   \   00000038   02B0               ADD      SP,SP,#+8
   4579             
   4580             }   
   4581          
   4582             if ((Graph->Type==GraphOnOff) && (Graph->PlusOnOff==0))
   \                     ??ScreenGraph_0:
   \   0000003A   3078               LDRB     R0,[R6, #+0]
   \   0000003C   0B28               CMP      R0,#+11
   \   0000003E   3AD1               BNE      ??ScreenGraph_2
   \   00000040   B079               LDRB     R0,[R6, #+6]
   \   00000042   C007               LSLS     R0,R0,#+31
   \   00000044   37D4               BMI      ??ScreenGraph_2
   4583             {
   4584                
   4585                 if (PortStageRead(MainStage.StageI[Graph->Nr].Port, Graph->Port))
   \   00000046   7179               LDRB     R1,[R6, #+5]
   \   00000048   3079               LDRB     R0,[R6, #+4]
   \   0000004A   1422               MOVS     R2,#+20
   \   0000004C   5043               MULS     R0,R2,R0
   \   0000004E   AD4A               LDR      R2,??ScreenGraph_1+0x4  ;; MainStage
   \   00000050   1018               ADDS     R0,R2,R0
   \   00000052   A030               ADDS     R0,R0,#+160
   \   00000054   0088               LDRH     R0,[R0, #+0]
   \   00000056   0004               LSLS     R0,R0,#+16
   \   00000058   0014               ASRS     R0,R0,#+16
   \   0000005A   ........           BL       PortStageRead
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   14D0               BEQ      ??ScreenGraph_3
   4586                 {
   4587                    Label("On",2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   7F21               MOVS     R1,#+127
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   04A8               ADD      R0,SP,#+16
   \   00000070   017C               LDRB     R1,[R0, #+16]
   \   00000072   0320               MOVS     R0,#+3
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   2800               MOVS     R0,R5
   \   00000078   4008               LSRS     R0,R0,#+1
   \   0000007A   2318               ADDS     R3,R4,R0
   \   0000007C   DB1E               SUBS     R3,R3,#+3
   \   0000007E   06A8               ADD      R0,SP,#+24
   \   00000080   027B               LDRB     R2,[R0, #+12]
   \   00000082   0221               MOVS     R1,#+2
   \   00000084   A0A0               ADR      R0,??ScreenGraph_1+0x8  ;; 0x4F, 0x6E, 0x00, 0x00
   \   00000086   ........           BL       Label
   \   0000008A   06B0               ADD      SP,SP,#+24
   \   0000008C   13E0               B        ??ScreenGraph_2
   4588                 }else{
   4589                    Label("Off",2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_3:
   \   0000008E   0020               MOVS     R0,#+0
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   7F21               MOVS     R1,#+127
   \   00000094   0120               MOVS     R0,#+1
   \   00000096   03B4               PUSH     {R0,R1}
   \   00000098   04A8               ADD      R0,SP,#+16
   \   0000009A   017C               LDRB     R1,[R0, #+16]
   \   0000009C   0320               MOVS     R0,#+3
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   2800               MOVS     R0,R5
   \   000000A2   4008               LSRS     R0,R0,#+1
   \   000000A4   2318               ADDS     R3,R4,R0
   \   000000A6   DB1E               SUBS     R3,R3,#+3
   \   000000A8   06A8               ADD      R0,SP,#+24
   \   000000AA   027B               LDRB     R2,[R0, #+12]
   \   000000AC   0221               MOVS     R1,#+2
   \   000000AE   97A0               ADR      R0,??ScreenGraph_1+0xC  ;; "Off"
   \   000000B0   ........           BL       Label
   \   000000B4   06B0               ADD      SP,SP,#+24
   4590                 }
   4591             }
   4592             
   4593             if (Graph->Type==GraphScena)
   \                     ??ScreenGraph_2:
   \   000000B6   3078               LDRB     R0,[R6, #+0]
   \   000000B8   0928               CMP      R0,#+9
   \   000000BA   1DD1               BNE      ??ScreenGraph_4
   4594             {
   4595                char LabelButt[2] = {0,0};
   \   000000BC   02A8               ADD      R0,SP,#+8
   \   000000BE   0021               MOVS     R1,#+0
   \   000000C0   0160               STR      R1,[R0, #0]
   4596                
   4597                CharToStr(MainStage.SceneNr,LabelButt,1);
   \   000000C2   0122               MOVS     R2,#+1
   \   000000C4   02A9               ADD      R1,SP,#+8
   \   000000C6   9248               LDR      R0,??ScreenGraph_1+0x10  ;; MainStage + 1560
   \   000000C8   0078               LDRB     R0,[R0, #+0]
   \   000000CA   ........           BL       CharToStr
   4598                Label(LabelButt,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000CE   82B0               SUB      SP,SP,#+8
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   0090               STR      R0,[SP, #+0]
   \   000000D4   7F21               MOVS     R1,#+127
   \   000000D6   0120               MOVS     R0,#+1
   \   000000D8   03B4               PUSH     {R0,R1}
   \   000000DA   04A8               ADD      R0,SP,#+16
   \   000000DC   017C               LDRB     R1,[R0, #+16]
   \   000000DE   0320               MOVS     R0,#+3
   \   000000E0   03B4               PUSH     {R0,R1}
   \   000000E2   2800               MOVS     R0,R5
   \   000000E4   4008               LSRS     R0,R0,#+1
   \   000000E6   2318               ADDS     R3,R4,R0
   \   000000E8   DB1E               SUBS     R3,R3,#+3
   \   000000EA   06A8               ADD      R0,SP,#+24
   \   000000EC   027B               LDRB     R2,[R0, #+12]
   \   000000EE   0221               MOVS     R1,#+2
   \   000000F0   08A8               ADD      R0,SP,#+32
   \   000000F2   ........           BL       Label
   \   000000F6   06B0               ADD      SP,SP,#+24
   4599             }
   4600             
   4601             if ((Graph->Type==GraphText) && (Graph->PlusOnOff==0))
   \                     ??ScreenGraph_4:
   \   000000F8   3078               LDRB     R0,[R6, #+0]
   \   000000FA   0828               CMP      R0,#+8
   \   000000FC   18D1               BNE      ??ScreenGraph_5
   \   000000FE   B079               LDRB     R0,[R6, #+6]
   \   00000100   C007               LSLS     R0,R0,#+31
   \   00000102   15D4               BMI      ??ScreenGraph_5
   4602             {
   4603               Label(Graph->Text,2,poz_X,poz_Y+(width/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0020               MOVS     R0,#+0
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   7F21               MOVS     R1,#+127
   \   0000010C   0120               MOVS     R0,#+1
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   04A8               ADD      R0,SP,#+16
   \   00000112   017C               LDRB     R1,[R0, #+16]
   \   00000114   0320               MOVS     R0,#+3
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   0800               MOVS     R0,R1
   \   0000011A   4008               LSRS     R0,R0,#+1
   \   0000011C   2318               ADDS     R3,R4,R0
   \   0000011E   DB1E               SUBS     R3,R3,#+3
   \   00000120   06A8               ADD      R0,SP,#+24
   \   00000122   027B               LDRB     R2,[R0, #+12]
   \   00000124   0221               MOVS     R1,#+2
   \   00000126   3000               MOVS     R0,R6
   \   00000128   401C               ADDS     R0,R0,#+1
   \   0000012A   ........           BL       Label
   \   0000012E   06B0               ADD      SP,SP,#+24
   4604             }   
   4605             
   4606                if ((Graph->PlusOnOff) && (((Graph->Type==GraphOnOff))||(Graph->Type==GraphText)))
   \                     ??ScreenGraph_5:
   \   00000130   B079               LDRB     R0,[R6, #+6]
   \   00000132   C007               LSLS     R0,R0,#+31
   \   00000134   4FD5               BPL      ??ScreenGraph_6
   \   00000136   3078               LDRB     R0,[R6, #+0]
   \   00000138   0B28               CMP      R0,#+11
   \   0000013A   01D0               BEQ      ??ScreenGraph_7
   \   0000013C   0828               CMP      R0,#+8
   \   0000013E   4AD1               BNE      ??ScreenGraph_6
   4607             {
   4608                Label(Graph->Text,2,poz_X,poz_Y+(height/2)+1,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_7:
   \   00000140   2800               MOVS     R0,R5
   \   00000142   4008               LSRS     R0,R0,#+1
   \   00000144   2718               ADDS     R7,R4,R0
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   0020               MOVS     R0,#+0
   \   0000014A   0090               STR      R0,[SP, #+0]
   \   0000014C   7F21               MOVS     R1,#+127
   \   0000014E   0120               MOVS     R0,#+1
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   04A8               ADD      R0,SP,#+16
   \   00000154   017C               LDRB     R1,[R0, #+16]
   \   00000156   0320               MOVS     R0,#+3
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   3B00               MOVS     R3,R7
   \   0000015C   5B1C               ADDS     R3,R3,#+1
   \   0000015E   06A8               ADD      R0,SP,#+24
   \   00000160   027B               LDRB     R2,[R0, #+12]
   \   00000162   0221               MOVS     R1,#+2
   \   00000164   3000               MOVS     R0,R6
   \   00000166   401C               ADDS     R0,R0,#+1
   \   00000168   ........           BL       Label
   \   0000016C   06B0               ADD      SP,SP,#+24
   4609                if (PortStageRead(MainStage.StageI[Graph->Nr].Port, Graph->Port))
   \   0000016E   7179               LDRB     R1,[R6, #+5]
   \   00000170   3079               LDRB     R0,[R6, #+4]
   \   00000172   1422               MOVS     R2,#+20
   \   00000174   5043               MULS     R0,R2,R0
   \   00000176   634A               LDR      R2,??ScreenGraph_1+0x4  ;; MainStage
   \   00000178   1018               ADDS     R0,R2,R0
   \   0000017A   A030               ADDS     R0,R0,#+160
   \   0000017C   0088               LDRH     R0,[R0, #+0]
   \   0000017E   0004               LSLS     R0,R0,#+16
   \   00000180   0014               ASRS     R0,R0,#+16
   \   00000182   ........           BL       PortStageRead
   \   00000186   0028               CMP      R0,#+0
   \   00000188   82B0               SUB      SP,SP,#+8
   \   0000018A   12D0               BEQ      ??ScreenGraph_8
   4610                 {
   4611                    Label("On",2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000018C   0020               MOVS     R0,#+0
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   7F21               MOVS     R1,#+127
   \   00000192   0120               MOVS     R0,#+1
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   04A8               ADD      R0,SP,#+16
   \   00000198   017C               LDRB     R1,[R0, #+16]
   \   0000019A   0320               MOVS     R0,#+3
   \   0000019C   03B4               PUSH     {R0,R1}
   \   0000019E   083F               SUBS     R7,R7,#+8
   \   000001A0   3B00               MOVS     R3,R7
   \   000001A2   06A8               ADD      R0,SP,#+24
   \   000001A4   027B               LDRB     R2,[R0, #+12]
   \   000001A6   0221               MOVS     R1,#+2
   \   000001A8   57A0               ADR      R0,??ScreenGraph_1+0x8  ;; 0x4F, 0x6E, 0x00, 0x00
   \   000001AA   ........           BL       Label
   \   000001AE   06B0               ADD      SP,SP,#+24
   \   000001B0   11E0               B        ??ScreenGraph_6
   4612                 }else{
   4613                    Label("Off",2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_8:
   \   000001B2   0020               MOVS     R0,#+0
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   7F21               MOVS     R1,#+127
   \   000001B8   0120               MOVS     R0,#+1
   \   000001BA   03B4               PUSH     {R0,R1}
   \   000001BC   04A8               ADD      R0,SP,#+16
   \   000001BE   017C               LDRB     R1,[R0, #+16]
   \   000001C0   0320               MOVS     R0,#+3
   \   000001C2   03B4               PUSH     {R0,R1}
   \   000001C4   083F               SUBS     R7,R7,#+8
   \   000001C6   3B00               MOVS     R3,R7
   \   000001C8   06A8               ADD      R0,SP,#+24
   \   000001CA   027B               LDRB     R2,[R0, #+12]
   \   000001CC   0221               MOVS     R1,#+2
   \   000001CE   4FA0               ADR      R0,??ScreenGraph_1+0xC  ;; "Off"
   \   000001D0   ........           BL       Label
   \   000001D4   06B0               ADD      SP,SP,#+24
   4614                 }
   4615             }
   4616             
   4617             
   4618                           //Analogi
   4619               char IlLiter=0;
   4620              signed short Value;
   4621              char txt[5];
   4622             if (Graph->Type==GraphWartosc)
   \                     ??ScreenGraph_6:
   \   000001D6   3078               LDRB     R0,[R6, #+0]
   \   000001D8   0A28               CMP      R0,#+10
   \   000001DA   00D0               BEQ      .+4
   \   000001DC   8BE0               B        ??ScreenGraph_9
   4623             {
   4624              
   4625                               if ((Graph->Nr>0) || ((Graph->Nr==0)&&(Graph->Reg>0)))
   \   000001DE   3079               LDRB     R0,[R6, #+4]
   \   000001E0   0028               CMP      R0,#+0
   \   000001E2   05D1               BNE      ??ScreenGraph_10
   \   000001E4   00D0               BEQ      .+4
   \   000001E6   86E0               B        ??ScreenGraph_9
   \   000001E8   7079               LDRB     R0,[R6, #+5]
   \   000001EA   0028               CMP      R0,#+0
   \   000001EC   00D1               BNE      .+4
   \   000001EE   82E0               B        ??ScreenGraph_9
   4626                               {
   4627                               IlLiter=0;
   4628                               Value=MainStage.StageI[Graph->Nr].Value[Graph->Reg];
   \                     ??ScreenGraph_10:
   \   000001F0   A020               MOVS     R0,#+160
   \   000001F2   7179               LDRB     R1,[R6, #+5]
   \   000001F4   4900               LSLS     R1,R1,#+1
   \   000001F6   3279               LDRB     R2,[R6, #+4]
   \   000001F8   1423               MOVS     R3,#+20
   \   000001FA   5A43               MULS     R2,R3,R2
   \   000001FC   414B               LDR      R3,??ScreenGraph_1+0x4  ;; MainStage
   \   000001FE   9A18               ADDS     R2,R3,R2
   \   00000200   5118               ADDS     R1,R2,R1
   \   00000202   085E               LDRSH    R0,[R1, R0]
   4629          
   4630                               if (Value==(signed short)0x8AAA)  //je¿eli sygna³ niewiarygodny
   \   00000204   4349               LDR      R1,??ScreenGraph_1+0x14  ;; 0xffff8aaa
   \   00000206   8842               CMP      R0,R1
   \   00000208   1AD1               BNE      ??ScreenGraph_11
   4631                               {
   4632                                 txt[0]='?';txt[1]='?';txt[2]='?'; txt[3]=0; IlLiter+=3;
   \   0000020A   3F20               MOVS     R0,#+63
   \   0000020C   6946               MOV      R1,SP
   \   0000020E   0870               STRB     R0,[R1, #+0]
   \   00000210   4870               STRB     R0,[R1, #+1]
   \   00000212   8870               STRB     R0,[R1, #+2]
   \   00000214   0020               MOVS     R0,#+0
   \   00000216   C870               STRB     R0,[R1, #+3]
   4633                                 Label(txt,2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);
   \   00000218   82B0               SUB      SP,SP,#+8
   \   0000021A   0090               STR      R0,[SP, #+0]
   \   0000021C   7F21               MOVS     R1,#+127
   \   0000021E   0120               MOVS     R0,#+1
   \   00000220   03B4               PUSH     {R0,R1}
   \   00000222   04A8               ADD      R0,SP,#+16
   \   00000224   017C               LDRB     R1,[R0, #+16]
   \   00000226   0320               MOVS     R0,#+3
   \   00000228   03B4               PUSH     {R0,R1}
   \   0000022A   2800               MOVS     R0,R5
   \   0000022C   4008               LSRS     R0,R0,#+1
   \   0000022E   2318               ADDS     R3,R4,R0
   \   00000230   083B               SUBS     R3,R3,#+8
   \   00000232   06A8               ADD      R0,SP,#+24
   \   00000234   027B               LDRB     R2,[R0, #+12]
   \   00000236   0221               MOVS     R1,#+2
   \   00000238   ........           BL       Label
   \   0000023C   06B0               ADD      SP,SP,#+24
   \   0000023E   5AE0               B        ??ScreenGraph_9
   4634                               }else{ //je¿eli sygna³ wiarygodny
   4635                                
   4636                                 if (Graph->Flip)
   \                     ??ScreenGraph_11:
   \   00000240   B179               LDRB     R1,[R6, #+6]
   \   00000242   0029               CMP      R1,#+0
   \   00000244   6946               MOV      R1,SP
   \   00000246   2BD0               BEQ      ??ScreenGraph_12
   4637                                   {
   4638                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   \   00000248   ........           BL       sIntToStr
   \   0000024C   0200               MOVS     R2,R0
   4639                                       Label(txt,2,poz_X,poz_Y+(height/2)+0,IlLiter,width,1,127,0);
   \   0000024E   2800               MOVS     R0,R5
   \   00000250   4008               LSRS     R0,R0,#+1
   \   00000252   2718               ADDS     R7,R4,R0
   \   00000254   82B0               SUB      SP,SP,#+8
   \   00000256   0020               MOVS     R0,#+0
   \   00000258   0090               STR      R0,[SP, #+0]
   \   0000025A   7F21               MOVS     R1,#+127
   \   0000025C   0120               MOVS     R0,#+1
   \   0000025E   03B4               PUSH     {R0,R1}
   \   00000260   04A8               ADD      R0,SP,#+16
   \   00000262   017C               LDRB     R1,[R0, #+16]
   \   00000264   1000               MOVS     R0,R2
   \   00000266   03B4               PUSH     {R0,R1}
   \   00000268   3B00               MOVS     R3,R7
   \   0000026A   06A8               ADD      R0,SP,#+24
   \   0000026C   027B               LDRB     R2,[R0, #+12]
   \   0000026E   0221               MOVS     R1,#+2
   \   00000270   ........           BL       Label
   \   00000274   06B0               ADD      SP,SP,#+24
   4640                                       Label(Graph->Text,2,poz_X,poz_Y+(height/2)-9,3,width,1,127,0);
   \   00000276   82B0               SUB      SP,SP,#+8
   \   00000278   0020               MOVS     R0,#+0
   \   0000027A   0090               STR      R0,[SP, #+0]
   \   0000027C   7F21               MOVS     R1,#+127
   \   0000027E   0120               MOVS     R0,#+1
   \   00000280   03B4               PUSH     {R0,R1}
   \   00000282   04A8               ADD      R0,SP,#+16
   \   00000284   017C               LDRB     R1,[R0, #+16]
   \   00000286   0320               MOVS     R0,#+3
   \   00000288   03B4               PUSH     {R0,R1}
   \   0000028A   093F               SUBS     R7,R7,#+9
   \   0000028C   3B00               MOVS     R3,R7
   \   0000028E   06A8               ADD      R0,SP,#+24
   \   00000290   027B               LDRB     R2,[R0, #+12]
   \   00000292   0221               MOVS     R1,#+2
   \   00000294   761C               ADDS     R6,R6,#+1
   \   00000296   3000               MOVS     R0,R6
   \   00000298   ........           BL       Label
   \   0000029C   06B0               ADD      SP,SP,#+24
   \   0000029E   2AE0               B        ??ScreenGraph_9
   4641                                       
   4642                                   }else{
   4643                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   \                     ??ScreenGraph_12:
   \   000002A0   ........           BL       sIntToStr
   \   000002A4   0200               MOVS     R2,R0
   4644                                       Label(txt,2,poz_X,poz_Y+(height/2)-9,IlLiter,width,1,127,0);
   \   000002A6   2800               MOVS     R0,R5
   \   000002A8   4008               LSRS     R0,R0,#+1
   \   000002AA   2718               ADDS     R7,R4,R0
   \   000002AC   82B0               SUB      SP,SP,#+8
   \   000002AE   0020               MOVS     R0,#+0
   \   000002B0   0090               STR      R0,[SP, #+0]
   \   000002B2   7F21               MOVS     R1,#+127
   \   000002B4   0120               MOVS     R0,#+1
   \   000002B6   03B4               PUSH     {R0,R1}
   \   000002B8   04A8               ADD      R0,SP,#+16
   \   000002BA   017C               LDRB     R1,[R0, #+16]
   \   000002BC   1000               MOVS     R0,R2
   \   000002BE   03B4               PUSH     {R0,R1}
   \   000002C0   3B00               MOVS     R3,R7
   \   000002C2   093B               SUBS     R3,R3,#+9
   \   000002C4   06A8               ADD      R0,SP,#+24
   \   000002C6   027B               LDRB     R2,[R0, #+12]
   \   000002C8   0221               MOVS     R1,#+2
   \   000002CA   ........           BL       Label
   \   000002CE   06B0               ADD      SP,SP,#+24
   4645                                       Label(Graph->Text,2,poz_X,poz_Y+(height/2)+0,3,width,1,127,0);
   \   000002D0   82B0               SUB      SP,SP,#+8
   \   000002D2   0020               MOVS     R0,#+0
   \   000002D4   0090               STR      R0,[SP, #+0]
   \   000002D6   7F21               MOVS     R1,#+127
   \   000002D8   0120               MOVS     R0,#+1
   \   000002DA   03B4               PUSH     {R0,R1}
   \   000002DC   04A8               ADD      R0,SP,#+16
   \   000002DE   017C               LDRB     R1,[R0, #+16]
   \   000002E0   0320               MOVS     R0,#+3
   \   000002E2   03B4               PUSH     {R0,R1}
   \   000002E4   3B00               MOVS     R3,R7
   \   000002E6   06A8               ADD      R0,SP,#+24
   \   000002E8   027B               LDRB     R2,[R0, #+12]
   \   000002EA   0221               MOVS     R1,#+2
   \   000002EC   761C               ADDS     R6,R6,#+1
   \   000002EE   3000               MOVS     R0,R6
   \   000002F0   ........           BL       Label
   \   000002F4   06B0               ADD      SP,SP,#+24
   4646                                   }
   4647          
   4648                               }  
   4649                 
   4650                               
   4651                                                        
   4652                               }
   4653             }
   4654                      
   4655             
   4656             
   4657          }
   \                     ??ScreenGraph_9:
   \   000002F6   05B0               ADD      SP,SP,#+20
   \   000002F8   F0BC               POP      {R4-R7}
   \   000002FA   01BC               POP      {R0}
   \   000002FC   0047               BX       R0               ;; return
   \   000002FE   C046               Nop      
   \                     ??ScreenGraph_1:
   \   00000300   ........           DC32     `?<Constant {0, 0}>`
   \   00000304   ........           DC32     MainStage
   \   00000308   4F6E0000           DC8      0x4F, 0x6E, 0x00, 0x00
   \   0000030C   4F666600           DC8      "Off"
   \   00000310   ........           DC32     MainStage + 1560
   \   00000314   AA8AFFFF           DC32     0xffff8aaa
   4658          
   4659          
   4660          

   \                                 In section Debug.txt, align 4, keep-with-next
   4661          void ScreenDesign1_Paint(_Screen *ScreenLocal)
   4662          {
   \                     ScreenDesign1_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   4663          
   4664            const _ScreenPaternDesign *ScreenPaternDesign;
   4665            CleanCanvas();
   \   00000004   ........           BL       CleanCanvas
   \   00000008   8848               LDR      R0,??ScreenDesign1_Paint_0  ;; TextToChangeLength + 5
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   01D1               BNE      ??ScreenDesign1_Paint_1
   4666            if (CurModifSheet==0) 
   4667            {
   4668              ScreenPaternDesign=ScreenSetTab_0;
   \   00000010   874C               LDR      R4,??ScreenDesign1_Paint_0+0x4  ;; `?<Constant {129, 0}>` + 24
   \   00000012   0EE0               B        ??ScreenDesign1_Paint_2
   4669            }else{
   4670              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??ScreenDesign1_Paint_1:
   \   00000014   874C               LDR      R4,??ScreenDesign1_Paint_0+0x8  ;; `?<Constant {129, 0}>` + 992
   4671              
   4672              //Strefa etykiety podstrony
   4673               ZoneGraph(0, 15,114,38,12,
   4674                      ScreenLocal->Label,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000016   82B0               SUB      SP,SP,#+8
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   0090               STR      R0,[SP, #+0]
   \   0000001C   0499               LDR      R1,[SP, #+16]
   \   0000001E   491C               ADDS     R1,R1,#+1
   \   00000020   0C20               MOVS     R0,#+12
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   2623               MOVS     R3,#+38
   \   00000026   7222               MOVS     R2,#+114
   \   00000028   0F21               MOVS     R1,#+15
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   ........           BL       ZoneGraph
   \   00000030   04B0               ADD      SP,SP,#+16
   4675              
   4676              
   4677            }  
   4678          
   4679           
   4680             char PaternDesign=ScreenLocal->PaternDesign;
   \                     ??ScreenDesign1_Paint_2:
   \   00000032   0298               LDR      R0,[SP, #+8]
   \   00000034   0078               LDRB     R0,[R0, #+0]
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   01A8               ADD      R0,SP,#+4
   \   0000003A   7F49               LDR      R1,??ScreenDesign1_Paint_0+0xC  ;; `?<Constant {129, 0}>`
   \   0000003C   0A68               LDR      R2,[R1, #0]
   \   0000003E   0260               STR      R2,[R0, #0]
   4681          
   4682             
   4683             
   4684             
   4685             char LabelButt[2] = {129,0};
   4686             Button(LabelButt,0,113,13,13);
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   0D20               MOVS     R0,#+13
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   0300               MOVS     R3,R0
   \   00000048   7122               MOVS     R2,#+113
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   03A8               ADD      R0,SP,#+12
   \   0000004E   ........           BL       Button
   \   00000052   02B0               ADD      SP,SP,#+8
   \   00000054   0025               MOVS     R5,#+0
   \   00000056   25E0               B        ??ScreenDesign1_Paint_3
   4687          
   4688             //przyciski
   4689            for (char i=0; i<ScrenButtonNr; i++)
   4690            {
   4691              if (ScreenPaternDesign[PaternDesign].Button[i].Width>0)
   \                     ??ScreenDesign1_Paint_4:
   \   00000058   0098               LDR      R0,[SP, #+0]
   \   0000005A   0006               LSLS     R0,R0,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \   0000005E   5821               MOVS     R1,#+88
   \   00000060   4843               MULS     R0,R1,R0
   \   00000062   2018               ADDS     R0,R4,R0
   \   00000064   2E00               MOVS     R6,R5
   \   00000066   B100               LSLS     R1,R6,#+2
   \   00000068   4718               ADDS     R7,R0,R1
   \   0000006A   B878               LDRB     R0,[R7, #+2]
   \   0000006C   0028               CMP      R0,#+0
   \   0000006E   16D0               BEQ      ??ScreenDesign1_Paint_5
   4692              {
   4693                      ZoneButon(ScreenLocal->Button[i].Text,
   4694                      ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   4695                      ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   4696                      ScreenPaternDesign[PaternDesign].Button[i].Width,
   4697                      ScreenPaternDesign[PaternDesign].Button[i].Height,(char*)ButtonName[i+10*CurModifSheet]); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000070   D420               MOVS     R0,#+212
   \   00000072   C000               LSLS     R0,R0,#+3        ;; #+1696
   \   00000074   6D49               LDR      R1,??ScreenDesign1_Paint_0  ;; TextToChangeLength + 5
   \   00000076   0978               LDRB     R1,[R1, #+0]
   \   00000078   0A22               MOVS     R2,#+10
   \   0000007A   5143               MULS     R1,R2,R1
   \   0000007C   7118               ADDS     R1,R6,R1
   \   0000007E   8900               LSLS     R1,R1,#+2
   \   00000080   6D4A               LDR      R2,??ScreenDesign1_Paint_0+0xC  ;; `?<Constant {129, 0}>`
   \   00000082   5118               ADDS     R1,R2,R1
   \   00000084   0918               ADDS     R1,R1,R0
   \   00000086   F878               LDRB     R0,[R7, #+3]
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   BB78               LDRB     R3,[R7, #+2]
   \   0000008C   7A78               LDRB     R2,[R7, #+1]
   \   0000008E   3978               LDRB     R1,[R7, #+0]
   \   00000090   F000               LSLS     R0,R6,#+3
   \   00000092   049E               LDR      R6,[SP, #+16]
   \   00000094   3018               ADDS     R0,R6,R0
   \   00000096   0B30               ADDS     R0,R0,#+11
   \   00000098   ........           BL       ZoneButon
   \   0000009C   02B0               ADD      SP,SP,#+8
   4698              }
   4699             }
   \                     ??ScreenDesign1_Paint_5:
   \   0000009E   6D1C               ADDS     R5,R5,#+1
   \   000000A0   2D06               LSLS     R5,R5,#+24
   \   000000A2   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_3:
   \   000000A4   2800               MOVS     R0,R5
   \   000000A6   0928               CMP      R0,#+9
   \   000000A8   D6D3               BCC      ??ScreenDesign1_Paint_4
   4700          
   4701          
   4702            //grafika
   4703            for (char i=0; i<ScrenGraphNr; i++)
   \   000000AA   0025               MOVS     R5,#+0
   \   000000AC   20E0               B        ??ScreenDesign1_Paint_6
   4704            {
   4705          
   4706              if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??ScreenDesign1_Paint_7:
   \   000000AE   0098               LDR      R0,[SP, #+0]
   \   000000B0   0006               LSLS     R0,R0,#+24
   \   000000B2   000E               LSRS     R0,R0,#+24
   \   000000B4   5821               MOVS     R1,#+88
   \   000000B6   4843               MULS     R0,R1,R0
   \   000000B8   2018               ADDS     R0,R4,R0
   \   000000BA   2900               MOVS     R1,R5
   \   000000BC   8A00               LSLS     R2,R1,#+2
   \   000000BE   8618               ADDS     R6,R0,R2
   \   000000C0   2436               ADDS     R6,R6,#+36
   \   000000C2   B078               LDRB     R0,[R6, #+2]
   \   000000C4   0028               CMP      R0,#+0
   \   000000C6   10D0               BEQ      ??ScreenDesign1_Paint_8
   4707              {
   4708                      ZoneGraph(0,
   4709                      ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   4710                      ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   4711                      ScreenPaternDesign[PaternDesign].Graph[i].Width,
   4712                      ScreenPaternDesign[PaternDesign].Graph[i].Height,
   4713                      0,&(ScreenLocal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   0720               MOVS     R0,#+7
   \   000000CC   4143               MULS     R1,R0,R1
   \   000000CE   0498               LDR      R0,[SP, #+16]
   \   000000D0   4018               ADDS     R0,R0,R1
   \   000000D2   5330               ADDS     R0,R0,#+83
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   F078               LDRB     R0,[R6, #+3]
   \   000000DA   03B4               PUSH     {R0,R1}
   \   000000DC   B378               LDRB     R3,[R6, #+2]
   \   000000DE   7278               LDRB     R2,[R6, #+1]
   \   000000E0   3178               LDRB     R1,[R6, #+0]
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   ........           BL       ZoneGraph
   \   000000E8   04B0               ADD      SP,SP,#+16
   4714              
   4715              }
   4716             }
   \                     ??ScreenDesign1_Paint_8:
   \   000000EA   6D1C               ADDS     R5,R5,#+1
   \   000000EC   2D06               LSLS     R5,R5,#+24
   \   000000EE   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_6:
   \   000000F0   2800               MOVS     R0,R5
   \   000000F2   0428               CMP      R0,#+4
   \   000000F4   DBD3               BCC      ??ScreenDesign1_Paint_7
   4717          
   4718             //analogi
   4719             for (char i=0; i<ScrenAnalogNr; i++)
   \   000000F6   0025               MOVS     R5,#+0
   \   000000F8   1CE0               B        ??ScreenDesign1_Paint_9
   4720             {
   4721                 if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
   \                     ??ScreenDesign1_Paint_10:
   \   000000FA   0098               LDR      R0,[SP, #+0]
   \   000000FC   0006               LSLS     R0,R0,#+24
   \   000000FE   000E               LSRS     R0,R0,#+24
   \   00000100   5821               MOVS     R1,#+88
   \   00000102   4843               MULS     R0,R1,R0
   \   00000104   2018               ADDS     R0,R4,R0
   \   00000106   2900               MOVS     R1,R5
   \   00000108   8900               LSLS     R1,R1,#+2
   \   0000010A   4618               ADDS     R6,R0,R1
   \   0000010C   3436               ADDS     R6,R6,#+52
   \   0000010E   B078               LDRB     R0,[R6, #+2]
   \   00000110   0028               CMP      R0,#+0
   \   00000112   0CD0               BEQ      ??ScreenDesign1_Paint_11
   4722              {
   4723                      ZoneGraph(0,
   4724                      ScreenPaternDesign[PaternDesign].Value[i].Poz.x,
   4725                      ScreenPaternDesign[PaternDesign].Value[i].Poz.y,
   4726                      ScreenPaternDesign[PaternDesign].Value[i].Width,
   4727                      ScreenPaternDesign[PaternDesign].Value[i].Height,
   4728                      "Analo. ",0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   0020               MOVS     R0,#+0
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   4849               LDR      R1,??ScreenDesign1_Paint_0+0x10  ;; `?<Constant {129, 0}>` + 16
   \   0000011C   F078               LDRB     R0,[R6, #+3]
   \   0000011E   03B4               PUSH     {R0,R1}
   \   00000120   B378               LDRB     R3,[R6, #+2]
   \   00000122   7278               LDRB     R2,[R6, #+1]
   \   00000124   3178               LDRB     R1,[R6, #+0]
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   ........           BL       ZoneGraph
   \   0000012C   04B0               ADD      SP,SP,#+16
   4729              
   4730              }
   4731             }
   \                     ??ScreenDesign1_Paint_11:
   \   0000012E   6D1C               ADDS     R5,R5,#+1
   \   00000130   2D06               LSLS     R5,R5,#+24
   \   00000132   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_9:
   \   00000134   2800               MOVS     R0,R5
   \   00000136   0428               CMP      R0,#+4
   \   00000138   DFD3               BCC      ??ScreenDesign1_Paint_10
   4732            
   4733             //Linie
   4734             for (char i=0; i<ScrenLineNr; i++)
   \   0000013A   0025               MOVS     R5,#+0
   \   0000013C   08E0               B        ??ScreenDesign1_Paint_12
   4735             {
   4736              if (ScreenPaternDesign[PaternDesign].Line[i].Width>0)
   4737              {
   4738                  if (ScreenPaternDesign[PaternDesign].Line[i].Width>ScreenPaternDesign[PaternDesign].Line[i].Height)
   4739                  {
   4740                      H_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Width,1); // (char X, int Y, char lenght, char typ)
   4741                  }else{
   4742                      V_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Height,1); // (char X, int Y, char lenght, char typ)
   \                     ??ScreenDesign1_Paint_13:
   \   0000013E   0123               MOVS     R3,#+1
   \   00000140   0A00               MOVS     R2,R1
   \   00000142   4178               LDRB     R1,[R0, #+1]
   \   00000144   0078               LDRB     R0,[R0, #+0]
   \   00000146   ........           BL       V_line
   4743              
   4744                  }
   \                     ??ScreenDesign1_Paint_14:
   \   0000014A   6D1C               ADDS     R5,R5,#+1
   \   0000014C   2D06               LSLS     R5,R5,#+24
   \   0000014E   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_12:
   \   00000150   2800               MOVS     R0,R5
   \   00000152   0228               CMP      R0,#+2
   \   00000154   16D2               BCS      ??ScreenDesign1_Paint_15
   \   00000156   0098               LDR      R0,[SP, #+0]
   \   00000158   0006               LSLS     R0,R0,#+24
   \   0000015A   000E               LSRS     R0,R0,#+24
   \   0000015C   5821               MOVS     R1,#+88
   \   0000015E   4843               MULS     R0,R1,R0
   \   00000160   2018               ADDS     R0,R4,R0
   \   00000162   2900               MOVS     R1,R5
   \   00000164   8900               LSLS     R1,R1,#+2
   \   00000166   4018               ADDS     R0,R0,R1
   \   00000168   4430               ADDS     R0,R0,#+68
   \   0000016A   8178               LDRB     R1,[R0, #+2]
   \   0000016C   0029               CMP      R1,#+0
   \   0000016E   ECD0               BEQ      ??ScreenDesign1_Paint_14
   \   00000170   C178               LDRB     R1,[R0, #+3]
   \   00000172   8278               LDRB     R2,[R0, #+2]
   \   00000174   9142               CMP      R1,R2
   \   00000176   E2D2               BCS      ??ScreenDesign1_Paint_13
   \   00000178   0123               MOVS     R3,#+1
   \   0000017A   4178               LDRB     R1,[R0, #+1]
   \   0000017C   0078               LDRB     R0,[R0, #+0]
   \   0000017E   ........           BL       H_line
   \   00000182   E2E7               B        ??ScreenDesign1_Paint_14
   4745              }
   4746             }
   4747          
   4748             //Zegar
   4749             for (char i=0; i<ScrenLineNr; i++)
   \                     ??ScreenDesign1_Paint_15:
   \   00000184   0026               MOVS     R6,#+0
   \   00000186   22E0               B        ??ScreenDesign1_Paint_16
   4750             {
   4751              if (ScreenPaternDesign[PaternDesign].Time.Width>0)
   \                     ??ScreenDesign1_Paint_17:
   \   00000188   0098               LDR      R0,[SP, #+0]
   \   0000018A   0006               LSLS     R0,R0,#+24
   \   0000018C   000E               LSRS     R0,R0,#+24
   \   0000018E   5821               MOVS     R1,#+88
   \   00000190   4843               MULS     R0,R1,R0
   \   00000192   2018               ADDS     R0,R4,R0
   \   00000194   4C30               ADDS     R0,R0,#+76
   \   00000196   0500               MOVS     R5,R0
   \   00000198   A879               LDRB     R0,[R5, #+6]
   \   0000019A   0028               CMP      R0,#+0
   \   0000019C   14D0               BEQ      ??ScreenDesign1_Paint_18
   4752              {
   4753                      ZoneGraph(0,
   4754                      ScreenPaternDesign[PaternDesign].Time.Poz.x,
   4755                      ScreenPaternDesign[PaternDesign].Time.Poz.y,
   4756                      ScreenPaternDesign[PaternDesign].Time.Width,
   4757                      ScreenPaternDesign[PaternDesign].Time.Height,
   4758                      Speech[g_leng].Zegar,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0020               MOVS     R0,#+0
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   2648               LDR      R0,??ScreenDesign1_Paint_0+0x14  ;; 0x3de
   \   000001A6   2749               LDR      R1,??ScreenDesign1_Paint_0+0x18  ;; g_leng
   \   000001A8   0968               LDR      R1,[R1, #+0]
   \   000001AA   9622               MOVS     R2,#+150
   \   000001AC   1201               LSLS     R2,R2,#+4        ;; #+2400
   \   000001AE   5143               MULS     R1,R2,R1
   \   000001B0   254A               LDR      R2,??ScreenDesign1_Paint_0+0x1C  ;; Speech
   \   000001B2   5118               ADDS     R1,R2,R1
   \   000001B4   0918               ADDS     R1,R1,R0
   \   000001B6   E879               LDRB     R0,[R5, #+7]
   \   000001B8   03B4               PUSH     {R0,R1}
   \   000001BA   AB79               LDRB     R3,[R5, #+6]
   \   000001BC   6A79               LDRB     R2,[R5, #+5]
   \   000001BE   2979               LDRB     R1,[R5, #+4]
   \   000001C0   0020               MOVS     R0,#+0
   \   000001C2   ........           BL       ZoneGraph
   \   000001C6   04B0               ADD      SP,SP,#+16
   4759              }
   4760             }  
   \                     ??ScreenDesign1_Paint_18:
   \   000001C8   761C               ADDS     R6,R6,#+1
   \   000001CA   3606               LSLS     R6,R6,#+24
   \   000001CC   360E               LSRS     R6,R6,#+24
   \                     ??ScreenDesign1_Paint_16:
   \   000001CE   3000               MOVS     R0,R6
   \   000001D0   0228               CMP      R0,#+2
   \   000001D2   D9D3               BCC      ??ScreenDesign1_Paint_17
   4761            
   4762             //Du¿a temperatura
   4763             for (char i=0; i<ScrenLineNr; i++)
   \   000001D4   0026               MOVS     R6,#+0
   \   000001D6   22E0               B        ??ScreenDesign1_Paint_19
   4764             {
   4765              if (ScreenPaternDesign[PaternDesign].Temperature.Width>0)
   \                     ??ScreenDesign1_Paint_20:
   \   000001D8   0098               LDR      R0,[SP, #+0]
   \   000001DA   0006               LSLS     R0,R0,#+24
   \   000001DC   000E               LSRS     R0,R0,#+24
   \   000001DE   5821               MOVS     R1,#+88
   \   000001E0   4843               MULS     R0,R1,R0
   \   000001E2   2018               ADDS     R0,R4,R0
   \   000001E4   4C30               ADDS     R0,R0,#+76
   \   000001E6   0500               MOVS     R5,R0
   \   000001E8   A878               LDRB     R0,[R5, #+2]
   \   000001EA   0028               CMP      R0,#+0
   \   000001EC   14D0               BEQ      ??ScreenDesign1_Paint_21
   4766              {
   4767                      ZoneGraph(0,
   4768                      ScreenPaternDesign[PaternDesign].Temperature.Poz.x,
   4769                      ScreenPaternDesign[PaternDesign].Temperature.Poz.y,
   4770                      ScreenPaternDesign[PaternDesign].Temperature.Width,
   4771                      ScreenPaternDesign[PaternDesign].Temperature.Height,
   4772                      Speech[g_leng].Temperatura,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000001EE   82B0               SUB      SP,SP,#+8
   \   000001F0   0020               MOVS     R0,#+0
   \   000001F2   0090               STR      R0,[SP, #+0]
   \   000001F4   1548               LDR      R0,??ScreenDesign1_Paint_0+0x20  ;; 0x744
   \   000001F6   1349               LDR      R1,??ScreenDesign1_Paint_0+0x18  ;; g_leng
   \   000001F8   0968               LDR      R1,[R1, #+0]
   \   000001FA   9622               MOVS     R2,#+150
   \   000001FC   1201               LSLS     R2,R2,#+4        ;; #+2400
   \   000001FE   5143               MULS     R1,R2,R1
   \   00000200   114A               LDR      R2,??ScreenDesign1_Paint_0+0x1C  ;; Speech
   \   00000202   5118               ADDS     R1,R2,R1
   \   00000204   0918               ADDS     R1,R1,R0
   \   00000206   E878               LDRB     R0,[R5, #+3]
   \   00000208   03B4               PUSH     {R0,R1}
   \   0000020A   AB78               LDRB     R3,[R5, #+2]
   \   0000020C   6A78               LDRB     R2,[R5, #+1]
   \   0000020E   2978               LDRB     R1,[R5, #+0]
   \   00000210   0020               MOVS     R0,#+0
   \   00000212   ........           BL       ZoneGraph
   \   00000216   04B0               ADD      SP,SP,#+16
   4773                      
   4774          
   4775                      
   4776                      
   4777              }
   4778             }   
   \                     ??ScreenDesign1_Paint_21:
   \   00000218   761C               ADDS     R6,R6,#+1
   \   0000021A   3606               LSLS     R6,R6,#+24
   \   0000021C   360E               LSRS     R6,R6,#+24
   \                     ??ScreenDesign1_Paint_19:
   \   0000021E   3000               MOVS     R0,R6
   \   00000220   0228               CMP      R0,#+2
   \   00000222   D9D3               BCC      ??ScreenDesign1_Paint_20
   4779            
   4780            
   4781          }
   \   00000224   FEBC               POP      {R1-R7}
   \   00000226   01BC               POP      {R0}
   \   00000228   0047               BX       R0               ;; return
   \   0000022A   C046               Nop      
   \                     ??ScreenDesign1_Paint_0:
   \   0000022C   ........           DC32     TextToChangeLength + 5
   \   00000230   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000234   ........           DC32     `?<Constant {129, 0}>` + 992
   \   00000238   ........           DC32     `?<Constant {129, 0}>`
   \   0000023C   ........           DC32     `?<Constant {129, 0}>` + 16
   \   00000240   DE030000           DC32     0x3de
   \   00000244   ........           DC32     g_leng
   \   00000248   ........           DC32     Speech
   \   0000024C   44070000           DC32     0x744
   4782          
   4783          
   4784          char ZoneButtonClick=0;
   4785          char ZoneGrapfNrClick=0;
   4786          char ZoneValueNrClick=0;
   4787          char ZoneLabelClick=0;
   4788          int TxtSpaceAvable=0;
   4789          

   \                                 In section Debug.txt, align 4, keep-with-next
   4790          void ScreenDesign1_Event(_Screen* ScreenLokal)
   4791          {
   \                     ScreenDesign1_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   4792            char PaternDesign=ScreenLokal->PaternDesign;
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0290               STR      R0,[SP, #+8]
   4793            
   4794            const _ScreenPaternDesign *ScreenPaternDesign;
   4795            if (CurModifSheet==0) 
   \   00000008   9D4C               LDR      R4,??ScreenDesign1_Event_0  ;; TextToChangeLength
   \   0000000A   6079               LDRB     R0,[R4, #+5]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   02D1               BNE      ??ScreenDesign1_Event_1
   4796            {
   4797              ScreenPaternDesign=ScreenSetTab_0;
   \   00000010   9C48               LDR      R0,??ScreenDesign1_Event_0+0x4  ;; `?<Constant {129, 0}>` + 24
   \   00000012   0090               STR      R0,[SP, #+0]
   \   00000014   01E0               B        ??ScreenDesign1_Event_2
   4798            }else{
   4799              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??ScreenDesign1_Event_1:
   \   00000016   9C48               LDR      R0,??ScreenDesign1_Event_0+0x8  ;; `?<Constant {129, 0}>` + 992
   \   00000018   0090               STR      R0,[SP, #+0]
   4800            }  
   4801            
   4802            
   4803                   char LabelButt[2] = {129,0};
   \                     ??ScreenDesign1_Event_2:
   \   0000001A   01A8               ADD      R0,SP,#+4
   \   0000001C   9B49               LDR      R1,??ScreenDesign1_Event_0+0xC  ;; `?<Constant {129, 0}>_1`
   \   0000001E   0A68               LDR      R2,[R1, #0]
   \   00000020   0260               STR      R2,[R0, #0]
   4804                   if (Button(LabelButt,0,113,13,13)==1)
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0D20               MOVS     R0,#+13
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   0300               MOVS     R3,R0
   \   0000002A   7122               MOVS     R2,#+113
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   03A8               ADD      R0,SP,#+12
   \   00000030   ........           BL       Button
   \   00000034   02B0               ADD      SP,SP,#+8
   \   00000036   0128               CMP      R0,#+1
   \   00000038   16D1               BNE      ??ScreenDesign1_Event_3
   4805                   {
   4806                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000003A   9548               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   0000003C   0078               LDRB     R0,[R0, #+0]
   \   0000003E   0028               CMP      R0,#+0
   \   00000040   0AD1               BNE      ??ScreenDesign1_Event_4
   \   00000042   9448               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   00000044   8021               MOVS     R1,#+128
   \   00000046   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000048   0160               STR      R1,[R0, #+0]
   \   0000004A   934A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   0000004C   9348               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   0000004E   03C8               LDM      R0!,{R0,R1}
   \   00000050   0023               MOVS     R3,#+0
   \   00000052   0830               ADDS     R0,R0,#+8
   \   00000054   5941               ADCS     R1,R1,R3
   \   00000056   03C2               STM      R2!,{R0,R1}
   4807                        MenuLevel=(MenuLevel/10);
   \                     ??ScreenDesign1_Event_4:
   \   00000058   A06C               LDR      R0,[R4, #+72]
   \   0000005A   0A21               MOVS     R1,#+10
   \   0000005C   ........           BL       __aeabi_idivmod
   \   00000060   A064               STR      R0,[R4, #+72]
   4808                        MenuPaint();
   \   00000062   ........           BL       MenuPaint
   \   00000066   06E1               B        ??ScreenDesign1_Event_5
   4809                    } 
   \                     ??ScreenDesign1_Event_3:
   \   00000068   0020               MOVS     R0,#+0
   \   0000006A   2076               STRB     R0,[R4, #+24]
   4810                   else
   4811                   {   
   4812                     
   4813                     
   4814                    
   4815                   ZoneButtonClick=0;
   4816                   ZoneGrapfNrClick=0;
   \   0000006C   6076               STRB     R0,[R4, #+25]
   4817                 
   4818                   
   4819              
   4820                   //STREFY przycisków
   4821                    for (char i=0; i<ScrenButtonNr; i++)
   \   0000006E   0500               MOVS     R5,R0
   \   00000070   28E0               B        ??ScreenDesign1_Event_6
   4822                    {
   4823                      if (ScreenPaternDesign[PaternDesign].Button[i].Width>0)
   \                     ??ScreenDesign1_Event_7:
   \   00000072   8000               LSLS     R0,R0,#+2
   \   00000074   3E18               ADDS     R6,R7,R0
   \   00000076   B078               LDRB     R0,[R6, #+2]
   \   00000078   0028               CMP      R0,#+0
   \   0000007A   20D0               BEQ      ??ScreenDesign1_Event_8
   4824                      {
   4825                        if (
   4826                            Zone(0,  //*  (char _Label[15], char poz_ , char poz_Y ,char width, char height, char LineType) 
   4827                            ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   4828                            ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   4829                            ScreenPaternDesign[PaternDesign].Button[i].Width,
   4830                            ScreenPaternDesign[PaternDesign].Button[i].Height,
   4831                            2)==1
   4832                           )
   \   0000007C   0221               MOVS     R1,#+2
   \   0000007E   F078               LDRB     R0,[R6, #+3]
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   B378               LDRB     R3,[R6, #+2]
   \   00000084   7278               LDRB     R2,[R6, #+1]
   \   00000086   3178               LDRB     R1,[R6, #+0]
   \   00000088   0020               MOVS     R0,#+0
   \   0000008A   ........           BL       Zone
   \   0000008E   02B0               ADD      SP,SP,#+8
   \   00000090   0128               CMP      R0,#+1
   \   00000092   14D1               BNE      ??ScreenDesign1_Event_8
   4833                           {
   4834                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000094   7E48               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   0AD1               BNE      ??ScreenDesign1_Event_9
   \   0000009C   7D48               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   0000009E   8021               MOVS     R1,#+128
   \   000000A0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000A2   0160               STR      R1,[R0, #+0]
   \   000000A4   7C4A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   000000A6   7D48               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   000000A8   03C8               LDM      R0!,{R0,R1}
   \   000000AA   0023               MOVS     R3,#+0
   \   000000AC   0830               ADDS     R0,R0,#+8
   \   000000AE   5941               ADCS     R1,R1,R3
   \   000000B0   03C2               STM      R2!,{R0,R1}
   4835                             ZoneButtonClick=i+1;
   \                     ??ScreenDesign1_Event_9:
   \   000000B2   2800               MOVS     R0,R5
   \   000000B4   401C               ADDS     R0,R0,#+1
   \   000000B6   2076               STRB     R0,[R4, #+24]
   4836                             TxtSpaceAvable=ScreenPaternDesign[PaternDesign].Button[i].Width-6;
   \   000000B8   B078               LDRB     R0,[R6, #+2]
   \   000000BA   801F               SUBS     R0,R0,#+6
   \   000000BC   6067               STR      R0,[R4, #+116]
   4837                           }
   4838                      }
   4839                    }
   \                     ??ScreenDesign1_Event_8:
   \   000000BE   6D1C               ADDS     R5,R5,#+1
   \   000000C0   2D06               LSLS     R5,R5,#+24
   \   000000C2   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Event_6:
   \   000000C4   0298               LDR      R0,[SP, #+8]
   \   000000C6   0006               LSLS     R0,R0,#+24
   \   000000C8   000E               LSRS     R0,R0,#+24
   \   000000CA   5821               MOVS     R1,#+88
   \   000000CC   4843               MULS     R0,R1,R0
   \   000000CE   0099               LDR      R1,[SP, #+0]
   \   000000D0   0F18               ADDS     R7,R1,R0
   \   000000D2   2800               MOVS     R0,R5
   \   000000D4   0928               CMP      R0,#+9
   \   000000D6   CCD3               BCC      ??ScreenDesign1_Event_7
   \   000000D8   FF20               MOVS     R0,#+255
   \   000000DA   6076               STRB     R0,[R4, #+25]
   4840                    
   4841          
   4842                     
   4843                     
   4844                     //Strefy grafiki
   4845                     ZoneGrapfNrClick=0xff;
   4846                    for (char i=0; i<ScrenGraphNr; i++)
   \   000000DC   0025               MOVS     R5,#+0
   \   000000DE   28E0               B        ??ScreenDesign1_Event_10
   4847                    {
   4848                      if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??ScreenDesign1_Event_11:
   \   000000E0   8000               LSLS     R0,R0,#+2
   \   000000E2   3E18               ADDS     R6,R7,R0
   \   000000E4   2436               ADDS     R6,R6,#+36
   \   000000E6   B078               LDRB     R0,[R6, #+2]
   \   000000E8   0028               CMP      R0,#+0
   \   000000EA   1FD0               BEQ      ??ScreenDesign1_Event_12
   4849                      {
   4850                        if (
   4851                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   4852                            ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   4853                            ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   4854                            ScreenPaternDesign[PaternDesign].Graph[i].Width,
   4855                            ScreenPaternDesign[PaternDesign].Graph[i].Height,
   4856                            2)==1
   4857                           )
   \   000000EC   0221               MOVS     R1,#+2
   \   000000EE   F078               LDRB     R0,[R6, #+3]
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   B378               LDRB     R3,[R6, #+2]
   \   000000F4   7278               LDRB     R2,[R6, #+1]
   \   000000F6   3178               LDRB     R1,[R6, #+0]
   \   000000F8   0020               MOVS     R0,#+0
   \   000000FA   ........           BL       Zone
   \   000000FE   02B0               ADD      SP,SP,#+8
   \   00000100   0128               CMP      R0,#+1
   \   00000102   13D1               BNE      ??ScreenDesign1_Event_12
   4858                           {
   4859                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000104   6248               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000106   0078               LDRB     R0,[R0, #+0]
   \   00000108   0028               CMP      R0,#+0
   \   0000010A   0AD1               BNE      ??ScreenDesign1_Event_13
   \   0000010C   6148               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   0000010E   8021               MOVS     R1,#+128
   \   00000110   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000112   0160               STR      R1,[R0, #+0]
   \   00000114   604A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   00000116   6148               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   00000118   03C8               LDM      R0!,{R0,R1}
   \   0000011A   0023               MOVS     R3,#+0
   \   0000011C   0830               ADDS     R0,R0,#+8
   \   0000011E   5941               ADCS     R1,R1,R3
   \   00000120   03C2               STM      R2!,{R0,R1}
   4860                             TxtSpaceAvable=ScreenPaternDesign[PaternDesign].Graph[i].Width-6;
   \                     ??ScreenDesign1_Event_13:
   \   00000122   B078               LDRB     R0,[R6, #+2]
   \   00000124   801F               SUBS     R0,R0,#+6
   \   00000126   6067               STR      R0,[R4, #+116]
   4861                             ZoneGrapfNrClick=i;
   \   00000128   2800               MOVS     R0,R5
   \   0000012A   6076               STRB     R0,[R4, #+25]
   4862                           }
   4863                      }
   4864                    }
   \                     ??ScreenDesign1_Event_12:
   \   0000012C   6D1C               ADDS     R5,R5,#+1
   \   0000012E   2D06               LSLS     R5,R5,#+24
   \   00000130   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Event_10:
   \   00000132   2800               MOVS     R0,R5
   \   00000134   0428               CMP      R0,#+4
   \   00000136   D3D3               BCC      ??ScreenDesign1_Event_11
   4865                    
   4866          
   4867                    //Strefy analogów
   4868                    ZoneValueNrClick=0xff;
   \   00000138   FF20               MOVS     R0,#+255
   \   0000013A   A076               STRB     R0,[R4, #+26]
   4869                    for (char i=0; i<ScrenAnalogNr; i++)
   \   0000013C   0025               MOVS     R5,#+0
   \   0000013E   25E0               B        ??ScreenDesign1_Event_14
   4870                    {
   4871                      if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
   \                     ??ScreenDesign1_Event_15:
   \   00000140   8000               LSLS     R0,R0,#+2
   \   00000142   3E18               ADDS     R6,R7,R0
   \   00000144   3436               ADDS     R6,R6,#+52
   \   00000146   B078               LDRB     R0,[R6, #+2]
   \   00000148   0028               CMP      R0,#+0
   \   0000014A   1CD0               BEQ      ??ScreenDesign1_Event_16
   4872                      {
   4873                        if (
   4874                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   4875                            ScreenPaternDesign[PaternDesign].Value[i].Poz.x,
   4876                            ScreenPaternDesign[PaternDesign].Value[i].Poz.y,
   4877                            ScreenPaternDesign[PaternDesign].Value[i].Width,
   4878                            ScreenPaternDesign[PaternDesign].Value[i].Height,
   4879                            2)==1
   4880                           )
   \   0000014C   0221               MOVS     R1,#+2
   \   0000014E   F078               LDRB     R0,[R6, #+3]
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   B378               LDRB     R3,[R6, #+2]
   \   00000154   7278               LDRB     R2,[R6, #+1]
   \   00000156   3178               LDRB     R1,[R6, #+0]
   \   00000158   0020               MOVS     R0,#+0
   \   0000015A   ........           BL       Zone
   \   0000015E   02B0               ADD      SP,SP,#+8
   \   00000160   0128               CMP      R0,#+1
   \   00000162   10D1               BNE      ??ScreenDesign1_Event_16
   4881                           {
   4882                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000164   4A48               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000166   0078               LDRB     R0,[R0, #+0]
   \   00000168   0028               CMP      R0,#+0
   \   0000016A   0AD1               BNE      ??ScreenDesign1_Event_17
   \   0000016C   4948               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   0000016E   8021               MOVS     R1,#+128
   \   00000170   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000172   0160               STR      R1,[R0, #+0]
   \   00000174   484A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   00000176   4948               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   00000178   03C8               LDM      R0!,{R0,R1}
   \   0000017A   0023               MOVS     R3,#+0
   \   0000017C   0830               ADDS     R0,R0,#+8
   \   0000017E   5941               ADCS     R1,R1,R3
   \   00000180   03C2               STM      R2!,{R0,R1}
   4883                             ZoneValueNrClick=i;
   \                     ??ScreenDesign1_Event_17:
   \   00000182   2800               MOVS     R0,R5
   \   00000184   A076               STRB     R0,[R4, #+26]
   4884                           }
   4885                      }
   4886                    }
   \                     ??ScreenDesign1_Event_16:
   \   00000186   6D1C               ADDS     R5,R5,#+1
   \   00000188   2D06               LSLS     R5,R5,#+24
   \   0000018A   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Event_14:
   \   0000018C   2800               MOVS     R0,R5
   \   0000018E   0428               CMP      R0,#+4
   \   00000190   D6D3               BCC      ??ScreenDesign1_Event_15
   4887                    
   4888                    
   4889                    
   4890                    
   4891                       //Du¿a temperatura
   4892                     char  ZoneTemperature=0;
   \   00000192   0025               MOVS     R5,#+0
   4893          
   4894                      if (ScreenPaternDesign[PaternDesign].Temperature.Width>0)
   \   00000194   4C37               ADDS     R7,R7,#+76
   \   00000196   B878               LDRB     R0,[R7, #+2]
   \   00000198   0028               CMP      R0,#+0
   \   0000019A   1BD0               BEQ      ??ScreenDesign1_Event_18
   4895                      {   
   4896                            if(
   4897                                Zone(0,
   4898                                ScreenPaternDesign[PaternDesign].Temperature.Poz.x,
   4899                                ScreenPaternDesign[PaternDesign].Temperature.Poz.y,
   4900                                ScreenPaternDesign[PaternDesign].Temperature.Width,
   4901                                ScreenPaternDesign[PaternDesign].Temperature.Height,
   4902                                2)==1  
   4903                              )
   \   0000019C   0221               MOVS     R1,#+2
   \   0000019E   F878               LDRB     R0,[R7, #+3]
   \   000001A0   03B4               PUSH     {R0,R1}
   \   000001A2   BB78               LDRB     R3,[R7, #+2]
   \   000001A4   7A78               LDRB     R2,[R7, #+1]
   \   000001A6   3978               LDRB     R1,[R7, #+0]
   \   000001A8   2800               MOVS     R0,R5
   \   000001AA   ........           BL       Zone
   \   000001AE   02B0               ADD      SP,SP,#+8
   \   000001B0   0128               CMP      R0,#+1
   \   000001B2   0FD1               BNE      ??ScreenDesign1_Event_18
   4904                             {
   4905                               if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                            ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000001B4   3648               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   000001B6   0078               LDRB     R0,[R0, #+0]
   \   000001B8   0028               CMP      R0,#+0
   \   000001BA   0AD1               BNE      ??ScreenDesign1_Event_19
   \   000001BC   3548               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   000001BE   8021               MOVS     R1,#+128
   \   000001C0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000001C2   0160               STR      R1,[R0, #+0]
   \   000001C4   344A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   000001C6   3548               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   000001C8   03C8               LDM      R0!,{R0,R1}
   \   000001CA   0023               MOVS     R3,#+0
   \   000001CC   0830               ADDS     R0,R0,#+8
   \   000001CE   5941               ADCS     R1,R1,R3
   \   000001D0   03C2               STM      R2!,{R0,R1}
   4906                               ZoneTemperature=1;
   \                     ??ScreenDesign1_Event_19:
   \   000001D2   0125               MOVS     R5,#+1
   4907                             }
   4908                     }
   4909                    
   4910          
   4911                    //Strefa etykiety podstrony
   4912                     ZoneLabelClick=0;
   \                     ??ScreenDesign1_Event_18:
   \   000001D4   0020               MOVS     R0,#+0
   \   000001D6   E076               STRB     R0,[R4, #+27]
   4913          
   4914                     if (CurModifSheet>0) 
   \   000001D8   6079               LDRB     R0,[R4, #+5]
   \   000001DA   0028               CMP      R0,#+0
   \   000001DC   0CD0               BEQ      ??ScreenDesign1_Event_20
   4915                    {
   4916                        if (
   4917                            Zone(0, 15,114,38,12,
   4918                            2)==1
   4919                           )
   \   000001DE   0221               MOVS     R1,#+2
   \   000001E0   0C20               MOVS     R0,#+12
   \   000001E2   03B4               PUSH     {R0,R1}
   \   000001E4   2623               MOVS     R3,#+38
   \   000001E6   7222               MOVS     R2,#+114
   \   000001E8   0F21               MOVS     R1,#+15
   \   000001EA   0020               MOVS     R0,#+0
   \   000001EC   ........           BL       Zone
   \   000001F0   02B0               ADD      SP,SP,#+8
   \   000001F2   0128               CMP      R0,#+1
   \   000001F4   00D1               BNE      ??ScreenDesign1_Event_20
   4920                           {
   4921                             ZoneLabelClick=1;
   \   000001F6   E076               STRB     R0,[R4, #+27]
   4922                           }          
   4923                    } 
   4924                    
   4925                        
   4926                    
   4927                   
   4928                    
   4929          
   4930                   
   4931                     if (ZoneButtonClick>0)
   \                     ??ScreenDesign1_Event_20:
   \   000001F8   207E               LDRB     R0,[R4, #+24]
   \   000001FA   0028               CMP      R0,#+0
   \   000001FC   0BD0               BEQ      ??ScreenDesign1_Event_21
   4932                     {
   4933                       //TextToChange=ScreenLokal->Button[ZoneButtonClick-1].Text;
   4934                       ButtonToChange=&(ScreenLokal->Button[ZoneButtonClick-1]);
   \   000001FE   C000               LSLS     R0,R0,#+3
   \   00000200   0499               LDR      R1,[SP, #+16]
   \   00000202   0818               ADDS     R0,R1,R0
   \   00000204   C01C               ADDS     R0,R0,#+3
   \   00000206   6065               STR      R0,[R4, #+84]
   4935                       MenuLevel=(MenuLevel*10+4); MenuPaint();
   \   00000208   A06C               LDR      R0,[R4, #+72]
   \   0000020A   0A21               MOVS     R1,#+10
   \   0000020C   4843               MULS     R0,R1,R0
   \   0000020E   001D               ADDS     R0,R0,#+4
   \   00000210   A064               STR      R0,[R4, #+72]
   \   00000212   ........           BL       MenuPaint
   4936                     }
   4937                    
   4938                    if (ZoneValueNrClick<0xFF)
   \                     ??ScreenDesign1_Event_21:
   \   00000216   A07E               LDRB     R0,[R4, #+26]
   \   00000218   FF28               CMP      R0,#+255
   \   0000021A   0CD0               BEQ      ??ScreenDesign1_Event_22
   4939                     {
   4940                       AnalogToChange=&(ScreenLokal->Analog[ZoneValueNrClick]);
   \   0000021C   0721               MOVS     R1,#+7
   \   0000021E   4843               MULS     R0,R1,R0
   \   00000220   0499               LDR      R1,[SP, #+16]
   \   00000222   0818               ADDS     R0,R1,R0
   \   00000224   6F30               ADDS     R0,R0,#+111
   \   00000226   2066               STR      R0,[R4, #+96]
   4941                       MenuLevel=(MenuLevel*10+3); MenuPaint();
   \   00000228   A06C               LDR      R0,[R4, #+72]
   \   0000022A   0A21               MOVS     R1,#+10
   \   0000022C   4843               MULS     R0,R1,R0
   \   0000022E   C01C               ADDS     R0,R0,#+3
   \   00000230   A064               STR      R0,[R4, #+72]
   \   00000232   ........           BL       MenuPaint
   4942                     }
   4943                    
   4944                   
   4945                     if (ZoneLabelClick>0)
   \                     ??ScreenDesign1_Event_22:
   \   00000236   E07E               LDRB     R0,[R4, #+27]
   \   00000238   0028               CMP      R0,#+0
   \   0000023A   09D0               BEQ      ??ScreenDesign1_Event_23
   4946                     {
   4947                       TextToChange=ScreenLokal->Label;
   \   0000023C   0498               LDR      R0,[SP, #+16]
   \   0000023E   401C               ADDS     R0,R0,#+1
   \   00000240   2065               STR      R0,[R4, #+80]
   4948                       MenuLevel=(MenuLevel*10+2); MenuPaint();
   \   00000242   A06C               LDR      R0,[R4, #+72]
   \   00000244   0A21               MOVS     R1,#+10
   \   00000246   4843               MULS     R0,R1,R0
   \   00000248   801C               ADDS     R0,R0,#+2
   \   0000024A   A064               STR      R0,[R4, #+72]
   \   0000024C   ........           BL       MenuPaint
   4949                     }
   4950                     
   4951                     if (ZoneTemperature>0)
   \                     ??ScreenDesign1_Event_23:
   \   00000250   002D               CMP      R5,#+0
   \   00000252   06D0               BEQ      ??ScreenDesign1_Event_24
   4952                     {
   4953                       MenuLevel=(MenuLevel*10+5); MenuPaint();
   \   00000254   A06C               LDR      R0,[R4, #+72]
   \   00000256   0A21               MOVS     R1,#+10
   \   00000258   4843               MULS     R0,R1,R0
   \   0000025A   401D               ADDS     R0,R0,#+5
   \   0000025C   A064               STR      R0,[R4, #+72]
   \   0000025E   ........           BL       MenuPaint
   4954                     }          
   4955             
   4956                    
   4957                     if (ZoneGrapfNrClick!=0xFF){MenuLevel=(MenuLevel*10+1); MenuPaint();}
   \                     ??ScreenDesign1_Event_24:
   \   00000262   607E               LDRB     R0,[R4, #+25]
   \   00000264   FF28               CMP      R0,#+255
   \   00000266   06D0               BEQ      ??ScreenDesign1_Event_5
   \   00000268   A06C               LDR      R0,[R4, #+72]
   \   0000026A   0A21               MOVS     R1,#+10
   \   0000026C   4843               MULS     R0,R1,R0
   \   0000026E   401C               ADDS     R0,R0,#+1
   \   00000270   A064               STR      R0,[R4, #+72]
   \   00000272   ........           BL       MenuPaint
   4958           
   4959                  
   4960                      
   4961                     
   4962                   
   4963            
   4964                   }
   4965                   
   4966                   
   4967          }
   \                     ??ScreenDesign1_Event_5:
   \   00000276   05B0               ADD      SP,SP,#+20
   \   00000278   F0BC               POP      {R4-R7}
   \   0000027A   01BC               POP      {R0}
   \   0000027C   0047               BX       R0               ;; return
   \   0000027E   C046               Nop      
   \                     ??ScreenDesign1_Event_0:
   \   00000280   ........           DC32     TextToChangeLength
   \   00000284   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000288   ........           DC32     `?<Constant {129, 0}>` + 992
   \   0000028C   ........           DC32     `?<Constant {129, 0}>_1`
   \   00000290   E9D71300           DC32     0x13d7e9
   \   00000294   30F4FFFF           DC32     0xfffff430
   \   00000298   ........           DC32     ButtonBipCounter
   \   0000029C   ........           DC32     g_counter
   4968          
   4969          
   4970          
   4971          

   \                                 In section Debug.txt, align 4, keep-with-next
   4972          void ButtonOptions_Paint(_ButtonGraph *ButtonGraph)
   4973          {
   \                     ButtonOptions_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   4974          
   4975          
   4976           List_Paint(
   4977                        Speech[g_leng].Przycisk, //(char name[7]
   4978                        3,        //char Rows,
   4979                        15,       //char RowWith,
   4980                        0,        //char Y,
   4981                        0,        //char FormStyle,
   4982                        3,        //char algin,
   4983                        Speech[g_leng].Text, Speech[g_leng].Akcja, Speech[g_leng].Ukryj,0,0,0,0,0); //char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000004   1848               LDR      R0,??ButtonOptions_Paint_0  ;; g_leng
   \   00000006   0068               LDR      R0,[R0, #+0]
   \   00000008   9621               MOVS     R1,#+150
   \   0000000A   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000000C   4843               MULS     R0,R1,R0
   \   0000000E   1749               LDR      R1,??ButtonOptions_Paint_0+0x4  ;; Speech
   \   00000010   0D18               ADDS     R5,R1,R0
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   0800               MOVS     R0,R1
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   1548               LDR      R0,??ButtonOptions_Paint_0+0x8  ;; 0x717
   \   0000001C   2818               ADDS     R0,R5,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1448               LDR      R0,??ButtonOptions_Paint_0+0xC  ;; 0x5fa
   \   00000022   2918               ADDS     R1,R5,R0
   \   00000024   E120               MOVS     R0,#+225
   \   00000026   C000               LSLS     R0,R0,#+3        ;; #+1800
   \   00000028   2818               ADDS     R0,R5,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0321               MOVS     R1,#+3
   \   0000002E   0020               MOVS     R0,#+0
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0300               MOVS     R3,R0
   \   00000034   0F22               MOVS     R2,#+15
   \   00000036   1048               LDR      R0,??ButtonOptions_Paint_0+0x10  ;; 0x5eb
   \   00000038   2818               ADDS     R0,R5,R0
   \   0000003A   ........           BL       List_Paint
   \   0000003E   0AB0               ADD      SP,SP,#+40
   4984              
   4985                     //znacznik ukrycia przycisku
   4986                   if (ButtonGraph->Hide)
   \   00000040   E079               LDRB     R0,[R4, #+7]
   \   00000042   C006               LSLS     R0,R0,#+27
   \   00000044   0DD5               BPL      ??ButtonOptions_Paint_1
   4987                        {
   4988                              
   4989                          char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   00000046   6846               MOV      R0,SP
   \   00000048   0C49               LDR      R1,??ButtonOptions_Paint_0+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`
   \   0000004A   1CC9               LDM      R1!,{R2-R4}
   \   0000004C   1CC0               STM      R0!,{R2-R4}
   4990                          CopyToCanvasPoint((char *)ekran_tab,50,97-(15*(2)),8,10); 
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   0A20               MOVS     R0,#+10
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   0823               MOVS     R3,#+8
   \   00000056   4322               MOVS     R2,#+67
   \   00000058   3221               MOVS     R1,#+50
   \   0000005A   02A8               ADD      R0,SP,#+8
   \   0000005C   ........           BL       CopyToCanvasPoint
   \   00000060   02B0               ADD      SP,SP,#+8
   4991                        }    
   4992          }
   \                     ??ButtonOptions_Paint_1:
   \   00000062   3EBC               POP      {R1-R5}
   \   00000064   01BC               POP      {R0}
   \   00000066   0047               BX       R0               ;; return
   \                     ??ButtonOptions_Paint_0:
   \   00000068   ........           DC32     g_leng
   \   0000006C   ........           DC32     Speech
   \   00000070   17070000           DC32     0x717
   \   00000074   FA050000           DC32     0x5fa
   \   00000078   EB050000           DC32     0x5eb
   \   0000007C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`
   4993          
   4994          

   \                                 In section Debug.txt, align 4, keep-with-next
   4995          void ButtonOptions_Event(_ButtonGraph *ButtonGraph)
   4996          {
   \                     ButtonOptions_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   4997            int odp=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,0);
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0320               MOVS     R0,#+3
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   1D48               LDR      R0,??ButtonOptions_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   1D48               LDR      R0,??ButtonOptions_Event_0+0x4  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1D48               LDR      R0,??ButtonOptions_Event_0+0x8  ;; Y_up
   \   0000001C   415E               LDRSH    R1,[R0, R1]
   \   0000001E   1D48               LDR      R0,??ButtonOptions_Event_0+0xC  ;; X_up
   \   00000020   0025               MOVS     R5,#+0
   \   00000022   405F               LDRSH    R0,[R0, R5]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   4998            if (odp<0) 
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   08D5               BPL      ??ButtonOptions_Event_1
   4999                  {
   5000                    MenuLevel=(MenuLevel/10);
   \   0000002E   1A4D               LDR      R5,??ButtonOptions_Event_0+0x10  ;; TextToChangeLength
   \   00000030   A86C               LDR      R0,[R5, #+72]
   \   00000032   0A21               MOVS     R1,#+10
   \   00000034   ........           BL       __aeabi_idivmod
   \   00000038   A864               STR      R0,[R5, #+72]
   5001                    MenuPaint();
   \   0000003A   ........           BL       MenuPaint
   \   0000003E   1FE0               B        ??ButtonOptions_Event_2
   5002                  }else if (odp>0) 
   \                     ??ButtonOptions_Event_1:
   \   00000040   0128               CMP      R0,#+1
   \   00000042   1DDB               BLT      ??ButtonOptions_Event_2
   5003                  {
   5004                   
   5005                    if  (odp<3)
   \   00000044   0328               CMP      R0,#+3
   \   00000046   0EDA               BGE      ??ButtonOptions_Event_3
   5006                    {
   5007                      if (odp==1) {
   \   00000048   0128               CMP      R0,#+1
   \   0000004A   05D1               BNE      ??ButtonOptions_Event_4
   5008                        TextToChange=ButtonGraph->Text; 
   \   0000004C   124D               LDR      R5,??ButtonOptions_Event_0+0x10  ;; TextToChangeLength
   \   0000004E   2C65               STR      R4,[R5, #+80]
   5009                        TextToChangeLength=ButonMaxText;
   \   00000050   0721               MOVS     R1,#+7
   \   00000052   2970               STRB     R1,[R5, #+0]
   5010                        TextToChangeMaxPixSize=TxtSpaceAvable;
   \   00000054   696F               LDR      R1,[R5, #+116]
   \   00000056   6970               STRB     R1,[R5, #+1]
   5011                      }
   5012                      MenuLevel=(MenuLevel*10)+odp; 
   \                     ??ButtonOptions_Event_4:
   \   00000058   0F4D               LDR      R5,??ButtonOptions_Event_0+0x10  ;; TextToChangeLength
   \   0000005A   A96C               LDR      R1,[R5, #+72]
   \   0000005C   0A22               MOVS     R2,#+10
   \   0000005E   5143               MULS     R1,R2,R1
   \   00000060   0818               ADDS     R0,R1,R0
   \   00000062   A864               STR      R0,[R5, #+72]
   \   00000064   0AE0               B        ??ButtonOptions_Event_5
   5013                    }else{
   5014                      if (ButtonGraph->Hide) ButtonGraph->Hide=0; else ButtonGraph->Hide=1; 
   \                     ??ButtonOptions_Event_3:
   \   00000066   E079               LDRB     R0,[R4, #+7]
   \   00000068   C006               LSLS     R0,R0,#+27
   \   0000006A   E079               LDRB     R0,[R4, #+7]
   \   0000006C   03D5               BPL      ??ButtonOptions_Event_6
   \   0000006E   EF21               MOVS     R1,#+239
   \   00000070   0140               ANDS     R1,R1,R0
   \   00000072   E171               STRB     R1,[R4, #+7]
   \   00000074   02E0               B        ??ButtonOptions_Event_5
   \                     ??ButtonOptions_Event_6:
   \   00000076   1021               MOVS     R1,#+16
   \   00000078   0143               ORRS     R1,R1,R0
   \   0000007A   E171               STRB     R1,[R4, #+7]
   5015                    }
   5016                   
   5017                    MenuPaint();
   \                     ??ButtonOptions_Event_5:
   \   0000007C   ........           BL       MenuPaint
   5018                  }
   5019                    
   5020                    
   5021                    
   5022                  
   5023          }
   \                     ??ButtonOptions_Event_2:
   \   00000080   38BC               POP      {R3-R5}
   \   00000082   01BC               POP      {R0}
   \   00000084   0047               BX       R0               ;; return
   \   00000086   C046               Nop      
   \                     ??ButtonOptions_Event_0:
   \   00000088   ........           DC32     Y_down
   \   0000008C   ........           DC32     X_down
   \   00000090   ........           DC32     Y_up
   \   00000094   ........           DC32     X_up
   \   00000098   ........           DC32     TextToChangeLength
   5024          
   5025          

   \                                 In section Debug.txt, align 4, keep-with-next
   5026          void ButtonAction_Paint(_ButtonGraph *ButtonGraph)
   5027          {
   \                     ButtonAction_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   5028          
   5029            List_Paint(Speech[g_leng].Akcja,1,98,0,0,0,"",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   9625               MOVS     R5,#+150
   \   00000006   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000008   454E               LDR      R6,??ButtonAction_Paint_0  ;; g_leng
   \   0000000A   464F               LDR      R7,??ButtonAction_Paint_0+0x4  ;; Speech
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   0800               MOVS     R0,R1
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   44A0               ADR      R0,??ButtonAction_Paint_0+0x8  ;; 0x00, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0800               MOVS     R0,R1
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0300               MOVS     R3,R0
   \   00000020   6222               MOVS     R2,#+98
   \   00000022   0121               MOVS     R1,#+1
   \   00000024   8C46               MOV      R12,R1
   \   00000026   4149               LDR      R1,??ButtonAction_Paint_0+0xC  ;; 0x5fa
   \   00000028   3068               LDR      R0,[R6, #+0]
   \   0000002A   6843               MULS     R0,R5,R0
   \   0000002C   3818               ADDS     R0,R7,R0
   \   0000002E   4018               ADDS     R0,R0,R1
   \   00000030   6146               MOV      R1,R12
   \   00000032   ........           BL       List_Paint
   \   00000036   0AB0               ADD      SP,SP,#+40
   5030               
   5031            
   5032            Button("< ",3,71,16,23);
   \   00000038   82B0               SUB      SP,SP,#+8
   \   0000003A   1720               MOVS     R0,#+23
   \   0000003C   0090               STR      R0,[SP, #+0]
   \   0000003E   1023               MOVS     R3,#+16
   \   00000040   4722               MOVS     R2,#+71
   \   00000042   0321               MOVS     R1,#+3
   \   00000044   3AA0               ADR      R0,??ButtonAction_Paint_0+0x10  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000046   ........           BL       Button
   \   0000004A   02B0               ADD      SP,SP,#+8
   5033            Button("> ",44,71,16,23);
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   1720               MOVS     R0,#+23
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   1023               MOVS     R3,#+16
   \   00000054   4722               MOVS     R2,#+71
   \   00000056   2C21               MOVS     R1,#+44
   \   00000058   36A0               ADR      R0,??ButtonAction_Paint_0+0x14  ;; 0x3E, 0x20, 0x00, 0x00
   \   0000005A   ........           BL       Button
   \   0000005E   02B0               ADD      SP,SP,#+8
   5034            
   5035            
   5036            Label(Speech[g_leng].OtworzStrone,0,3,96,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   0020               MOVS     R0,#+0
   \   00000064   0090               STR      R0,[SP, #+0]
   \   00000066   7F21               MOVS     R1,#+127
   \   00000068   0120               MOVS     R0,#+1
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   3A21               MOVS     R1,#+58
   \   0000006E   0F20               MOVS     R0,#+15
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   6023               MOVS     R3,#+96
   \   00000074   0322               MOVS     R2,#+3
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   8C46               MOV      R12,R1
   \   0000007A   2F49               LDR      R1,??ButtonAction_Paint_0+0x18  ;; 0x609
   \   0000007C   3068               LDR      R0,[R6, #+0]
   \   0000007E   6843               MULS     R0,R5,R0
   \   00000080   3818               ADDS     R0,R7,R0
   \   00000082   4018               ADDS     R0,R0,R1
   \   00000084   6146               MOV      R1,R12
   \   00000086   ........           BL       Label
   \   0000008A   06B0               ADD      SP,SP,#+24
   5037            
   5038            char txt[5]={'N','r', ':',0,0};
   \   0000008C   6846               MOV      R0,SP
   \   0000008E   2B49               LDR      R1,??ButtonAction_Paint_0+0x1C  ;; `?<Constant {78, 114, 58, 0, 0}>`
   \   00000090   0CC9               LDM      R1!,{R2,R3}
   \   00000092   0CC0               STM      R0!,{R2,R3}
   5039            if (ButtonGraph->OpenPage==0)
   \   00000094   0F20               MOVS     R0,#+15
   \   00000096   E179               LDRB     R1,[R4, #+7]
   \   00000098   0142               TST      R1,R0
   \   0000009A   15D1               BNE      ??ButtonAction_Paint_1
   5040            {
   5041                Label(Speech[g_leng].Wyl,0,23,75,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000009C   82B0               SUB      SP,SP,#+8
   \   0000009E   0020               MOVS     R0,#+0
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   0120               MOVS     R0,#+1
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   1421               MOVS     R1,#+20
   \   000000AA   0520               MOVS     R0,#+5
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   4B23               MOVS     R3,#+75
   \   000000B0   1722               MOVS     R2,#+23
   \   000000B2   0021               MOVS     R1,#+0
   \   000000B4   C320               MOVS     R0,#+195
   \   000000B6   C000               LSLS     R0,R0,#+3        ;; #+1560
   \   000000B8   3468               LDR      R4,[R6, #+0]
   \   000000BA   6C43               MULS     R4,R5,R4
   \   000000BC   3C19               ADDS     R4,R7,R4
   \   000000BE   2018               ADDS     R0,R4,R0
   \   000000C0   ........           BL       Label
   \   000000C4   06B0               ADD      SP,SP,#+24
   \   000000C6   27E0               B        ??ButtonAction_Paint_2
   5042          
   5043            }else{
   5044                CharToStr(ButtonGraph->OpenPage-1, &txt[3], 1); //(char Value, char *Vstring, char ill);
   \                     ??ButtonAction_Paint_1:
   \   000000C8   0122               MOVS     R2,#+1
   \   000000CA   6946               MOV      R1,SP
   \   000000CC   C91C               ADDS     R1,R1,#+3
   \   000000CE   E379               LDRB     R3,[R4, #+7]
   \   000000D0   1840               ANDS     R0,R0,R3
   \   000000D2   401E               SUBS     R0,R0,#+1
   \   000000D4   0006               LSLS     R0,R0,#+24
   \   000000D6   000E               LSRS     R0,R0,#+24
   \   000000D8   ........           BL       CharToStr
   5045                Label(txt,0,22,76,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0020               MOVS     R0,#+0
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   7F21               MOVS     R1,#+127
   \   000000E4   0120               MOVS     R0,#+1
   \   000000E6   03B4               PUSH     {R0,R1}
   \   000000E8   1421               MOVS     R1,#+20
   \   000000EA   0520               MOVS     R0,#+5
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   4C23               MOVS     R3,#+76
   \   000000F0   1622               MOVS     R2,#+22
   \   000000F2   0021               MOVS     R1,#+0
   \   000000F4   06A8               ADD      R0,SP,#+24
   \   000000F6   ........           BL       Label
   \   000000FA   06B0               ADD      SP,SP,#+24
   5046          
   5047                Button(Speech[g_leng].Konfiguracja,3,54,57,14);
   \   000000FC   82B0               SUB      SP,SP,#+8
   \   000000FE   0E20               MOVS     R0,#+14
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   3923               MOVS     R3,#+57
   \   00000104   3622               MOVS     R2,#+54
   \   00000106   0321               MOVS     R1,#+3
   \   00000108   0D48               LDR      R0,??ButtonAction_Paint_0+0x20  ;; 0x2df
   \   0000010A   3468               LDR      R4,[R6, #+0]
   \   0000010C   6C43               MULS     R4,R5,R4
   \   0000010E   3C19               ADDS     R4,R7,R4
   \   00000110   2018               ADDS     R0,R4,R0
   \   00000112   ........           BL       Button
   \   00000116   02B0               ADD      SP,SP,#+8
   5048            }
   5049            
   5050          }
   \                     ??ButtonAction_Paint_2:
   \   00000118   FEBC               POP      {R1-R7}
   \   0000011A   01BC               POP      {R0}
   \   0000011C   0047               BX       R0               ;; return
   \   0000011E   C046               Nop      
   \                     ??ButtonAction_Paint_0:
   \   00000120   ........           DC32     g_leng
   \   00000124   ........           DC32     Speech
   \   00000128   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   0000012C   FA050000           DC32     0x5fa
   \   00000130   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000134   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000138   09060000           DC32     0x609
   \   0000013C   ........           DC32     `?<Constant {78, 114, 58, 0, 0}>`
   \   00000140   DF020000           DC32     0x2df
   5051          
   5052          

   \                                 In section Debug.txt, align 4, keep-with-next
   5053          void ButtonAction_Event(_ButtonGraph *ButtonGraph)
   5054          {
   \                     ButtonAction_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   5055            char MenuPaintExecute=0;
   \   00000004   0025               MOVS     R5,#+0
   5056            int odp=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   5057            if (odp<0) 
   \   00000006   2900               MOVS     R1,R5
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   4A48               LDR      R0,??ButtonAction_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   4A48               LDR      R0,??ButtonAction_Event_0+0x4  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   4A48               LDR      R0,??ButtonAction_Event_0+0x8  ;; Y_up
   \   0000001C   415E               LDRSH    R1,[R0, R1]
   \   0000001E   4A48               LDR      R0,??ButtonAction_Event_0+0xC  ;; X_up
   \   00000020   0026               MOVS     R6,#+0
   \   00000022   805F               LDRSH    R0,[R0, R6]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   07D5               BPL      ??ButtonAction_Event_1
   5058                  {
   5059                    MenuLevel=(MenuLevel/10);
   \   0000002E   474D               LDR      R5,??ButtonAction_Event_0+0x10  ;; TextToChangeLength
   \   00000030   A86C               LDR      R0,[R5, #+72]
   \   00000032   0A21               MOVS     R1,#+10
   \   00000034   ........           BL       __aeabi_idivmod
   \   00000038   A864               STR      R0,[R5, #+72]
   5060                    MenuPaintExecute=1;
   \   0000003A   0125               MOVS     R5,#+1
   \   0000003C   76E0               B        ??ButtonAction_Event_2
   5061                  }else 
   5062                  {
   5063                    if ((Button("< ",3,71,16,23)==1) && (ButtonGraph->OpenPage>0))  
   \                     ??ButtonAction_Event_1:
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   1720               MOVS     R0,#+23
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   1023               MOVS     R3,#+16
   \   00000046   4722               MOVS     R2,#+71
   \   00000048   0321               MOVS     R1,#+3
   \   0000004A   41A0               ADR      R0,??ButtonAction_Event_0+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   0000004C   ........           BL       Button
   \   00000050   02B0               ADD      SP,SP,#+8
   \   00000052   0128               CMP      R0,#+1
   \   00000054   1FD1               BNE      ??ButtonAction_Event_3
   \   00000056   0F20               MOVS     R0,#+15
   \   00000058   E179               LDRB     R1,[R4, #+7]
   \   0000005A   0142               TST      R1,R0
   \   0000005C   1BD0               BEQ      ??ButtonAction_Event_3
   5064                    { 
   5065                      if ((ButtonGraph->OpenPage-1)!=CurModifSheet+1)
   \   0000005E   0140               ANDS     R1,R1,R0
   \   00000060   491E               SUBS     R1,R1,#+1
   \   00000062   3C4A               LDR      R2,??ButtonAction_Event_0+0x18  ;; TextToChangeLength + 5
   \   00000064   1278               LDRB     R2,[R2, #+0]
   \   00000066   521C               ADDS     R2,R2,#+1
   \   00000068   9142               CMP      R1,R2
   \   0000006A   E179               LDRB     R1,[R4, #+7]
   \   0000006C   07D0               BEQ      ??ButtonAction_Event_4
   5066                      {
   5067                        ButtonGraph->OpenPage--;  MenuPaintExecute=1;
   \   0000006E   F022               MOVS     R2,#+240
   \   00000070   0A40               ANDS     R2,R2,R1
   \   00000072   491E               SUBS     R1,R1,#+1
   \   00000074   0840               ANDS     R0,R0,R1
   \   00000076   1043               ORRS     R0,R0,R2
   \   00000078   E071               STRB     R0,[R4, #+7]
   \   0000007A   0125               MOVS     R5,#+1
   \   0000007C   0BE0               B        ??ButtonAction_Event_3
   5068                      }else if ((ButtonGraph->OpenPage-1)>0)
   \                     ??ButtonAction_Event_4:
   \   0000007E   0140               ANDS     R1,R1,R0
   \   00000080   491E               SUBS     R1,R1,#+1
   \   00000082   0129               CMP      R1,#+1
   \   00000084   07DB               BLT      ??ButtonAction_Event_3
   5069                      {
   5070                        ButtonGraph->OpenPage -=2;  MenuPaintExecute=1;
   \   00000086   E179               LDRB     R1,[R4, #+7]
   \   00000088   F022               MOVS     R2,#+240
   \   0000008A   0A40               ANDS     R2,R2,R1
   \   0000008C   891E               SUBS     R1,R1,#+2
   \   0000008E   0840               ANDS     R0,R0,R1
   \   00000090   1043               ORRS     R0,R0,R2
   \   00000092   E071               STRB     R0,[R4, #+7]
   \   00000094   0125               MOVS     R5,#+1
   5071                      }
   5072                    } 
   5073                    if ((Button("> ",44,71,16,23)==1) && (ButtonGraph->OpenPage<ScreenNr)) 
   \                     ??ButtonAction_Event_3:
   \   00000096   82B0               SUB      SP,SP,#+8
   \   00000098   1720               MOVS     R0,#+23
   \   0000009A   0090               STR      R0,[SP, #+0]
   \   0000009C   1023               MOVS     R3,#+16
   \   0000009E   4722               MOVS     R2,#+71
   \   000000A0   2C21               MOVS     R1,#+44
   \   000000A2   2DA0               ADR      R0,??ButtonAction_Event_0+0x1C  ;; 0x3E, 0x20, 0x00, 0x00
   \   000000A4   ........           BL       Button
   \   000000A8   02B0               ADD      SP,SP,#+8
   \   000000AA   0128               CMP      R0,#+1
   \   000000AC   21D1               BNE      ??ButtonAction_Event_5
   \   000000AE   0F20               MOVS     R0,#+15
   \   000000B0   E179               LDRB     R1,[R4, #+7]
   \   000000B2   0140               ANDS     R1,R1,R0
   \   000000B4   0829               CMP      R1,#+8
   \   000000B6   1CD2               BCS      ??ButtonAction_Event_5
   5074                    {
   5075                       if ((ButtonGraph->OpenPage+1)!=CurModifSheet+1)
   \   000000B8   E179               LDRB     R1,[R4, #+7]
   \   000000BA   0140               ANDS     R1,R1,R0
   \   000000BC   254A               LDR      R2,??ButtonAction_Event_0+0x18  ;; TextToChangeLength + 5
   \   000000BE   1278               LDRB     R2,[R2, #+0]
   \   000000C0   9142               CMP      R1,R2
   \   000000C2   E179               LDRB     R1,[R4, #+7]
   \   000000C4   07D0               BEQ      ??ButtonAction_Event_6
   5076                      {
   5077                        ButtonGraph->OpenPage++;  MenuPaintExecute=1;
   \   000000C6   F022               MOVS     R2,#+240
   \   000000C8   0A40               ANDS     R2,R2,R1
   \   000000CA   491C               ADDS     R1,R1,#+1
   \   000000CC   0840               ANDS     R0,R0,R1
   \   000000CE   1043               ORRS     R0,R0,R2
   \   000000D0   E071               STRB     R0,[R4, #+7]
   \   000000D2   0125               MOVS     R5,#+1
   \   000000D4   0DE0               B        ??ButtonAction_Event_5
   5078                      }else if (ButtonGraph->OpenPage+1<ScreenNr)
   \                     ??ButtonAction_Event_6:
   \   000000D6   0140               ANDS     R1,R1,R0
   \   000000D8   491C               ADDS     R1,R1,#+1
   \   000000DA   0906               LSLS     R1,R1,#+24
   \   000000DC   090E               LSRS     R1,R1,#+24
   \   000000DE   0829               CMP      R1,#+8
   \   000000E0   07D2               BCS      ??ButtonAction_Event_5
   5079                      {
   5080                        ButtonGraph->OpenPage +=2;  MenuPaintExecute=1;
   \   000000E2   E179               LDRB     R1,[R4, #+7]
   \   000000E4   F022               MOVS     R2,#+240
   \   000000E6   0A40               ANDS     R2,R2,R1
   \   000000E8   891C               ADDS     R1,R1,#+2
   \   000000EA   0840               ANDS     R0,R0,R1
   \   000000EC   1043               ORRS     R0,R0,R2
   \   000000EE   E071               STRB     R0,[R4, #+7]
   \   000000F0   0125               MOVS     R5,#+1
   5081                      }
   5082                    }
   5083                    if (Button(Speech[g_leng].Konfiguracja,3,54,57,14)==1)
   \                     ??ButtonAction_Event_5:
   \   000000F2   82B0               SUB      SP,SP,#+8
   \   000000F4   0E20               MOVS     R0,#+14
   \   000000F6   0090               STR      R0,[SP, #+0]
   \   000000F8   3923               MOVS     R3,#+57
   \   000000FA   3622               MOVS     R2,#+54
   \   000000FC   0321               MOVS     R1,#+3
   \   000000FE   1748               LDR      R0,??ButtonAction_Event_0+0x20  ;; 0x2df
   \   00000100   174E               LDR      R6,??ButtonAction_Event_0+0x24  ;; g_leng
   \   00000102   3668               LDR      R6,[R6, #+0]
   \   00000104   9627               MOVS     R7,#+150
   \   00000106   3F01               LSLS     R7,R7,#+4        ;; #+2400
   \   00000108   7E43               MULS     R6,R7,R6
   \   0000010A   164F               LDR      R7,??ButtonAction_Event_0+0x28  ;; Speech
   \   0000010C   BE19               ADDS     R6,R7,R6
   \   0000010E   3018               ADDS     R0,R6,R0
   \   00000110   ........           BL       Button
   \   00000114   02B0               ADD      SP,SP,#+8
   \   00000116   0128               CMP      R0,#+1
   \   00000118   08D1               BNE      ??ButtonAction_Event_2
   5084                    {
   5085                      CurModifSheet=ButtonGraph->OpenPage-1;
   \   0000011A   0C4D               LDR      R5,??ButtonAction_Event_0+0x10  ;; TextToChangeLength
   \   0000011C   E079               LDRB     R0,[R4, #+7]
   \   0000011E   0007               LSLS     R0,R0,#+28
   \   00000120   000F               LSRS     R0,R0,#+28
   \   00000122   401E               SUBS     R0,R0,#+1
   \   00000124   6871               STRB     R0,[R5, #+5]
   5086                      MenuLevel=112;
   \   00000126   7020               MOVS     R0,#+112
   \   00000128   A864               STR      R0,[R5, #+72]
   5087                      MenuPaintExecute=1;
   \   0000012A   0125               MOVS     R5,#+1
   5088                    }
   5089                   
   5090                    
   5091          
   5092                    
   5093                  }
   5094                    
   5095                    
   5096                  if (MenuPaintExecute)  MenuPaint();
   \                     ??ButtonAction_Event_2:
   \   0000012C   002D               CMP      R5,#+0
   \   0000012E   01D0               BEQ      ??ButtonAction_Event_7
   \   00000130   ........           BL       MenuPaint
   5097                
   5098          }
   \                     ??ButtonAction_Event_7:
   \   00000134   F8BC               POP      {R3-R7}
   \   00000136   01BC               POP      {R0}
   \   00000138   0047               BX       R0               ;; return
   \   0000013A   C046               Nop      
   \                     ??ButtonAction_Event_0:
   \   0000013C   ........           DC32     Y_down
   \   00000140   ........           DC32     X_down
   \   00000144   ........           DC32     Y_up
   \   00000148   ........           DC32     X_up
   \   0000014C   ........           DC32     TextToChangeLength
   \   00000150   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000154   ........           DC32     TextToChangeLength + 5
   \   00000158   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   0000015C   DF020000           DC32     0x2df
   \   00000160   ........           DC32     g_leng
   \   00000164   ........           DC32     Speech
   5099          
   5100          
   5101          
   5102          
   5103          
   5104          

   \                                 In section Debug.txt, align 4, keep-with-next
   5105          void BigTemperLabel_Paint(void)
   5106                {  
   \                     BigTemperLabel_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   5107                  char txt[5];
   5108                  List_Paint("Temeper.",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   504C               LDR      R4,??BigTemperLabel_Paint_0  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   4EA0               ADR      R0,??BigTemperLabel_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   6C30               ADDS     R0,R0,#+108
   \   00000022   ........           BL       List_Paint
   \   00000026   0AB0               ADD      SP,SP,#+40
   5109          
   5110                    Label("Node ID:",2,20, 92 ,8,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000028   82B0               SUB      SP,SP,#+8
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   0090               STR      R0,[SP, #+0]
   \   0000002E   7F21               MOVS     R1,#+127
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   1621               MOVS     R1,#+22
   \   00000036   0820               MOVS     R0,#+8
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   5C23               MOVS     R3,#+92
   \   0000003C   1422               MOVS     R2,#+20
   \   0000003E   0221               MOVS     R1,#+2
   \   00000040   2000               MOVS     R0,R4
   \   00000042   7830               ADDS     R0,R0,#+120
   \   00000044   ........           BL       Label
   \   00000048   06B0               ADD      SP,SP,#+24
   5111                    char ind=CharToStr(gProg.Screen[0].Analog[0].Nr, &(txt[0]), 2); //(char Value, char *Vstring, char ill);
   \   0000004A   4048               LDR      R0,??BigTemperLabel_Paint_0+0x8  ;; gProg + 48139
   \   0000004C   0290               STR      R0,[SP, #+8]
   \   0000004E   0222               MOVS     R2,#+2
   \   00000050   6946               MOV      R1,SP
   \   00000052   0078               LDRB     R0,[R0, #+0]
   \   00000054   ........           BL       CharToStr
   \   00000058   0200               MOVS     R2,R0
   5112                    Label(txt,2,20, 77 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7F21               MOVS     R1,#+127
   \   00000062   0120               MOVS     R0,#+1
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   1621               MOVS     R1,#+22
   \   00000068   D21C               ADDS     R2,R2,#+3
   \   0000006A   1000               MOVS     R0,R2
   \   0000006C   0006               LSLS     R0,R0,#+24
   \   0000006E   000E               LSRS     R0,R0,#+24
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   4D23               MOVS     R3,#+77
   \   00000074   1422               MOVS     R2,#+20
   \   00000076   0221               MOVS     R1,#+2
   \   00000078   06A8               ADD      R0,SP,#+24
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
   \   00000080   6D46               MOV      R5,SP
   \   00000082   3C20               MOVS     R0,#+60
   \   00000084   2870               STRB     R0,[R5, #+0]
   5113                  
   5114                    txt[0]='<';txt[1]=0;
   \   00000086   0026               MOVS     R6,#+0
   \   00000088   3000               MOVS     R0,R6
   \   0000008A   6870               STRB     R0,[R5, #+1]
   5115                    Button(txt,3,70,15,20); 
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   1420               MOVS     R0,#+20
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   0F23               MOVS     R3,#+15
   \   00000094   4622               MOVS     R2,#+70
   \   00000096   0321               MOVS     R1,#+3
   \   00000098   02A8               ADD      R0,SP,#+8
   \   0000009A   ........           BL       Button
   \   0000009E   02B0               ADD      SP,SP,#+8
   5116                    txt[0]='>';
   \   000000A0   3E27               MOVS     R7,#+62
   \   000000A2   2F70               STRB     R7,[R5, #+0]
   5117                    Button(txt,45,70,15,20); 
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   1420               MOVS     R0,#+20
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   0F23               MOVS     R3,#+15
   \   000000AC   4622               MOVS     R2,#+70
   \   000000AE   2D21               MOVS     R1,#+45
   \   000000B0   02A8               ADD      R0,SP,#+8
   \   000000B2   ........           BL       Button
   \   000000B6   02B0               ADD      SP,SP,#+8
   5118                    
   5119                    Label("Reg:",2,20, 50 ,4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   3000               MOVS     R0,R6
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   7F21               MOVS     R1,#+127
   \   000000C0   0120               MOVS     R0,#+1
   \   000000C2   03B4               PUSH     {R0,R1}
   \   000000C4   1621               MOVS     R1,#+22
   \   000000C6   0420               MOVS     R0,#+4
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   3223               MOVS     R3,#+50
   \   000000CC   1422               MOVS     R2,#+20
   \   000000CE   0221               MOVS     R1,#+2
   \   000000D0   5C34               ADDS     R4,R4,#+92
   \   000000D2   2000               MOVS     R0,R4
   \   000000D4   ........           BL       Label
   \   000000D8   06B0               ADD      SP,SP,#+24
   5120                    
   5121                    ind=CharToStr(gProg.Screen[0].Analog[0].Reg, txt, 2); //(char Value, char *Vstring, char ill);
   \   000000DA   0222               MOVS     R2,#+2
   \   000000DC   6946               MOV      R1,SP
   \   000000DE   0298               LDR      R0,[SP, #+8]
   \   000000E0   4078               LDRB     R0,[R0, #+1]
   \   000000E2   ........           BL       CharToStr
   \   000000E6   0200               MOVS     R2,R0
   5122                   
   5123                    Label(txt,2,20, 40 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000E8   82B0               SUB      SP,SP,#+8
   \   000000EA   3000               MOVS     R0,R6
   \   000000EC   0090               STR      R0,[SP, #+0]
   \   000000EE   7F21               MOVS     R1,#+127
   \   000000F0   0120               MOVS     R0,#+1
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   1621               MOVS     R1,#+22
   \   000000F6   921C               ADDS     R2,R2,#+2
   \   000000F8   1000               MOVS     R0,R2
   \   000000FA   0006               LSLS     R0,R0,#+24
   \   000000FC   000E               LSRS     R0,R0,#+24
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   2823               MOVS     R3,#+40
   \   00000102   1422               MOVS     R2,#+20
   \   00000104   0221               MOVS     R1,#+2
   \   00000106   06A8               ADD      R0,SP,#+24
   \   00000108   ........           BL       Label
   \   0000010C   06B0               ADD      SP,SP,#+24
   5124                  
   5125                    txt[0]='<';txt[1]=0;
   \   0000010E   3C20               MOVS     R0,#+60
   \   00000110   2870               STRB     R0,[R5, #+0]
   \   00000112   6E70               STRB     R6,[R5, #+1]
   5126                    Button(txt,3,40,15,20); 
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   1420               MOVS     R0,#+20
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   0F23               MOVS     R3,#+15
   \   0000011C   2822               MOVS     R2,#+40
   \   0000011E   0321               MOVS     R1,#+3
   \   00000120   02A8               ADD      R0,SP,#+8
   \   00000122   ........           BL       Button
   \   00000126   02B0               ADD      SP,SP,#+8
   5127                    txt[0]='>';
   \   00000128   2F70               STRB     R7,[R5, #+0]
   5128                    Button(txt,45,40,15,20);   
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   1420               MOVS     R0,#+20
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   0F23               MOVS     R3,#+15
   \   00000132   2822               MOVS     R2,#+40
   \   00000134   2D21               MOVS     R1,#+45
   \   00000136   02A8               ADD      R0,SP,#+8
   \   00000138   ........           BL       Button
   \   0000013C   02B0               ADD      SP,SP,#+8
   5129                     
   5130                  
   5131                }
   \   0000013E   FEBC               POP      {R1-R7}
   \   00000140   01BC               POP      {R0}
   \   00000142   0047               BX       R0               ;; return
   \                     ??BigTemperLabel_Paint_0:
   \   00000144   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000148   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000014C   ........           DC32     gProg + 48139
   5132          

   \                                 In section Debug.txt, align 4, keep-with-next
   5133          void BigTemperLabel_Event(void)
   5134                {  
   \                     BigTemperLabel_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   5135                 char Repaint=0; 
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2700               MOVS     R7,R4
   5136                 char txt[8];
   5137                 _Analog *Anal=&(gProg.Screen[0].Analog[0]);       
   5138                 
   5139                 
   5140                  //zdarzenie typu down "X"
   5141                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000006   5548               LDR      R0,??BigTemperLabel_Event_0  ;; X_down
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   405E               LDRSH    R0,[R0, R1]
   \   0000000C   2F28               CMP      R0,#+47
   \   0000000E   1FDB               BLT      ??BigTemperLabel_Event_1
   \   00000010   3F28               CMP      R0,#+63
   \   00000012   1DDA               BGE      ??BigTemperLabel_Event_1
   \   00000014   5248               LDR      R0,??BigTemperLabel_Event_0+0x4  ;; Y_down
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   7128               CMP      R0,#+113
   \   0000001A   19DB               BLT      ??BigTemperLabel_Event_1
   \   0000001C   7F28               CMP      R0,#+127
   \   0000001E   17DA               BGE      ??BigTemperLabel_Event_1
   5142                  {
   5143                    //MenuPaint();
   5144                    H_line(49,114,10,0);
   \   00000020   0B00               MOVS     R3,R1
   \   00000022   0A22               MOVS     R2,#+10
   \   00000024   7221               MOVS     R1,#+114
   \   00000026   3120               MOVS     R0,#+49
   \   00000028   ........           BL       H_line
   5145                    H_line(49,123,10,0); 
   \   0000002C   2300               MOVS     R3,R4
   \   0000002E   0A22               MOVS     R2,#+10
   \   00000030   7B21               MOVS     R1,#+123
   \   00000032   3120               MOVS     R0,#+49
   \   00000034   ........           BL       H_line
   5146                    V_line(49,114,10,0); 
   \   00000038   2300               MOVS     R3,R4
   \   0000003A   0A22               MOVS     R2,#+10
   \   0000003C   7221               MOVS     R1,#+114
   \   0000003E   3120               MOVS     R0,#+49
   \   00000040   ........           BL       V_line
   5147                    V_line(58,114,10,0); 
   \   00000044   2300               MOVS     R3,R4
   \   00000046   0A22               MOVS     R2,#+10
   \   00000048   7221               MOVS     R1,#+114
   \   0000004A   3A20               MOVS     R0,#+58
   \   0000004C   ........           BL       V_line
   5148                    
   5149                  }
   5150            
   5151                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??BigTemperLabel_Event_1:
   \   00000050   4448               LDR      R0,??BigTemperLabel_Event_0+0x8  ;; X_up
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   405E               LDRSH    R0,[R0, R1]
   \   00000056   2F28               CMP      R0,#+47
   \   00000058   10DB               BLT      ??BigTemperLabel_Event_2
   \   0000005A   3F28               CMP      R0,#+63
   \   0000005C   0EDA               BGE      ??BigTemperLabel_Event_2
   \   0000005E   4248               LDR      R0,??BigTemperLabel_Event_0+0xC  ;; Y_up
   \   00000060   405E               LDRSH    R0,[R0, R1]
   \   00000062   7128               CMP      R0,#+113
   \   00000064   0ADB               BLT      ??BigTemperLabel_Event_2
   \   00000066   7F28               CMP      R0,#+127
   \   00000068   08DA               BGE      ??BigTemperLabel_Event_2
   5152                  {
   5153                    MenuLevel=(MenuLevel/10);
   \   0000006A   404C               LDR      R4,??BigTemperLabel_Event_0+0x10  ;; TextToChangeLength
   \   0000006C   A06C               LDR      R0,[R4, #+72]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   A064               STR      R0,[R4, #+72]
   5154                    MenuPaint();
   \   00000076   ........           BL       MenuPaint
   \   0000007A   68E0               B        ??BigTemperLabel_Event_3
   5155                  }  
   \                     ??BigTemperLabel_Event_2:
   \   0000007C   6D46               MOV      R5,SP
   \   0000007E   3C20               MOVS     R0,#+60
   \   00000080   2870               STRB     R0,[R5, #+0]
   5156                  else
   5157                  {
   5158                      txt[0]='<';txt[1]=0;
   \   00000082   6C70               STRB     R4,[R5, #+1]
   5159                      if (Button(txt,3,70,15,20)==2){if (Anal->Nr>0) {Anal->Nr--;} else {Anal->Nr=NumberNeurons;} Repaint=1;}
   \   00000084   82B0               SUB      SP,SP,#+8
   \   00000086   1420               MOVS     R0,#+20
   \   00000088   0090               STR      R0,[SP, #+0]
   \   0000008A   0F23               MOVS     R3,#+15
   \   0000008C   4622               MOVS     R2,#+70
   \   0000008E   0321               MOVS     R1,#+3
   \   00000090   02A8               ADD      R0,SP,#+8
   \   00000092   ........           BL       Button
   \   00000096   02B0               ADD      SP,SP,#+8
   \   00000098   0228               CMP      R0,#+2
   \   0000009A   09D1               BNE      ??BigTemperLabel_Event_4
   \   0000009C   3448               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   0000009E   0178               LDRB     R1,[R0, #+0]
   \   000000A0   0029               CMP      R1,#+0
   \   000000A2   02D0               BEQ      ??BigTemperLabel_Event_5
   \   000000A4   491E               SUBS     R1,R1,#+1
   \   000000A6   0170               STRB     R1,[R0, #+0]
   \   000000A8   01E0               B        ??BigTemperLabel_Event_6
   \                     ??BigTemperLabel_Event_5:
   \   000000AA   2321               MOVS     R1,#+35
   \   000000AC   0170               STRB     R1,[R0, #+0]
   \                     ??BigTemperLabel_Event_6:
   \   000000AE   0127               MOVS     R7,#+1
   5160                      txt[0]='>';
   \                     ??BigTemperLabel_Event_4:
   \   000000B0   3E26               MOVS     R6,#+62
   \   000000B2   2E70               STRB     R6,[R5, #+0]
   5161                      if (Button(txt,45,70,15,20)==2){if (Anal->Nr+1<NumberNeurons) {Anal->Nr++;} else {Anal->Nr=0;}  Repaint=1;}
   \   000000B4   82B0               SUB      SP,SP,#+8
   \   000000B6   1420               MOVS     R0,#+20
   \   000000B8   0090               STR      R0,[SP, #+0]
   \   000000BA   0F23               MOVS     R3,#+15
   \   000000BC   4622               MOVS     R2,#+70
   \   000000BE   2D21               MOVS     R1,#+45
   \   000000C0   02A8               ADD      R0,SP,#+8
   \   000000C2   ........           BL       Button
   \   000000C6   02B0               ADD      SP,SP,#+8
   \   000000C8   0228               CMP      R0,#+2
   \   000000CA   0CD1               BNE      ??BigTemperLabel_Event_7
   \   000000CC   2848               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   000000CE   0178               LDRB     R1,[R0, #+0]
   \   000000D0   0A00               MOVS     R2,R1
   \   000000D2   521C               ADDS     R2,R2,#+1
   \   000000D4   1204               LSLS     R2,R2,#+16
   \   000000D6   120C               LSRS     R2,R2,#+16
   \   000000D8   232A               CMP      R2,#+35
   \   000000DA   02D2               BCS      ??BigTemperLabel_Event_8
   \   000000DC   491C               ADDS     R1,R1,#+1
   \   000000DE   0170               STRB     R1,[R0, #+0]
   \   000000E0   00E0               B        ??BigTemperLabel_Event_9
   \                     ??BigTemperLabel_Event_8:
   \   000000E2   0470               STRB     R4,[R0, #+0]
   \                     ??BigTemperLabel_Event_9:
   \   000000E4   0127               MOVS     R7,#+1
   5162                    
   5163                      txt[0]='<';txt[1]=0;
   \                     ??BigTemperLabel_Event_7:
   \   000000E6   3C20               MOVS     R0,#+60
   \   000000E8   2870               STRB     R0,[R5, #+0]
   \   000000EA   6C70               STRB     R4,[R5, #+1]
   5164                      if (Button(txt,3,40,15,20)==2){if (Anal->Reg>1) {Anal->Reg--;} else {Anal->Reg=NumberReg;} Repaint=1;} 
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   1420               MOVS     R0,#+20
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   0F23               MOVS     R3,#+15
   \   000000F4   2822               MOVS     R2,#+40
   \   000000F6   0321               MOVS     R1,#+3
   \   000000F8   02A8               ADD      R0,SP,#+8
   \   000000FA   ........           BL       Button
   \   000000FE   02B0               ADD      SP,SP,#+8
   \   00000100   0228               CMP      R0,#+2
   \   00000102   09D1               BNE      ??BigTemperLabel_Event_10
   \   00000104   1A48               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   00000106   4178               LDRB     R1,[R0, #+1]
   \   00000108   0229               CMP      R1,#+2
   \   0000010A   02D3               BCC      ??BigTemperLabel_Event_11
   \   0000010C   491E               SUBS     R1,R1,#+1
   \   0000010E   4170               STRB     R1,[R0, #+1]
   \   00000110   01E0               B        ??BigTemperLabel_Event_12
   \                     ??BigTemperLabel_Event_11:
   \   00000112   0A21               MOVS     R1,#+10
   \   00000114   4170               STRB     R1,[R0, #+1]
   \                     ??BigTemperLabel_Event_12:
   \   00000116   0127               MOVS     R7,#+1
   5165                      txt[0]='>';
   \                     ??BigTemperLabel_Event_10:
   \   00000118   2E70               STRB     R6,[R5, #+0]
   5166                      if (Button(txt,45,40,15,20)==2){if (Anal->Reg+1<NumberReg) {Anal->Reg++;} else {Anal->Reg=1;}  Repaint=1;}
   \   0000011A   82B0               SUB      SP,SP,#+8
   \   0000011C   1420               MOVS     R0,#+20
   \   0000011E   0090               STR      R0,[SP, #+0]
   \   00000120   0F23               MOVS     R3,#+15
   \   00000122   2822               MOVS     R2,#+40
   \   00000124   2D21               MOVS     R1,#+45
   \   00000126   02A8               ADD      R0,SP,#+8
   \   00000128   ........           BL       Button
   \   0000012C   02B0               ADD      SP,SP,#+8
   \   0000012E   0228               CMP      R0,#+2
   \   00000130   0DD1               BNE      ??BigTemperLabel_Event_3
   \   00000132   0F48               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   00000134   4178               LDRB     R1,[R0, #+1]
   \   00000136   0A00               MOVS     R2,R1
   \   00000138   521C               ADDS     R2,R2,#+1
   \   0000013A   1204               LSLS     R2,R2,#+16
   \   0000013C   120C               LSRS     R2,R2,#+16
   \   0000013E   0A2A               CMP      R2,#+10
   \   00000140   02D2               BCS      ??BigTemperLabel_Event_13
   \   00000142   491C               ADDS     R1,R1,#+1
   \   00000144   4170               STRB     R1,[R0, #+1]
   \   00000146   01E0               B        ??BigTemperLabel_Event_14
   \                     ??BigTemperLabel_Event_13:
   \   00000148   0121               MOVS     R1,#+1
   \   0000014A   4170               STRB     R1,[R0, #+1]
   \                     ??BigTemperLabel_Event_14:
   \   0000014C   0127               MOVS     R7,#+1
   5167                }
   5168                
   5169                if (Repaint) MenuPaint();
   \                     ??BigTemperLabel_Event_3:
   \   0000014E   002F               CMP      R7,#+0
   \   00000150   01D0               BEQ      ??BigTemperLabel_Event_15
   \   00000152   ........           BL       MenuPaint
   5170          
   5171          }
   \                     ??BigTemperLabel_Event_15:
   \   00000156   FEBC               POP      {R1-R7}
   \   00000158   01BC               POP      {R0}
   \   0000015A   0047               BX       R0               ;; return
   \                     ??BigTemperLabel_Event_0:
   \   0000015C   ........           DC32     X_down
   \   00000160   ........           DC32     Y_down
   \   00000164   ........           DC32     X_up
   \   00000168   ........           DC32     Y_up
   \   0000016C   ........           DC32     TextToChangeLength
   \   00000170   ........           DC32     gProg + 48139
   5172          
   5173          
   5174          
   5175                #define MaxRowGr 4
   5176                #define MaxColGr 3
   5177                #define Y_offset 27
   5178          

   \                                 In section Debug.txt, align 4, keep-with-next
   5179          void ZoneGraph_Paint(_Screen* ScreenLokal)
   5180              {
   \                     ZoneGraph_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   E1A0               ADR      R0,??ZoneGraph_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   DE48               LDR      R0,??ZoneGraph_Paint_0+0x4  ;; 0x4ec
   \   00000020   DE4C               LDR      R4,??ZoneGraph_Paint_0+0x8  ;; g_leng
   \   00000022   2468               LDR      R4,[R4, #+0]
   \   00000024   9625               MOVS     R5,#+150
   \   00000026   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000028   6C43               MULS     R4,R5,R4
   \   0000002A   DD4D               LDR      R5,??ZoneGraph_Paint_0+0xC  ;; Speech
   \   0000002C   2C19               ADDS     R4,R5,R4
   \   0000002E   2018               ADDS     R0,R4,R0
   5181          
   5182                  
   5183                 List_Paint(Speech[g_leng].Grafika,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000030   ........           BL       List_Paint
   \   00000034   0AB0               ADD      SP,SP,#+40
   5184                 char txt[8];
   5185                 
   5186                 
   5187                 
   5188                 
   5189                //siatka 
   5190                 
   5191                for (char i=0; i<=MaxRowGr; i++)
   \   00000036   0024               MOVS     R4,#+0
   \   00000038   2500               MOVS     R5,R4
   \   0000003A   0BE0               B        ??ZoneGraph_Paint_1
   5192                {
   5193                    H_line(3,Y_offset+i*20,58,2);   
   \                     ??ZoneGraph_Paint_2:
   \   0000003C   0223               MOVS     R3,#+2
   \   0000003E   3A22               MOVS     R2,#+58
   \   00000040   2900               MOVS     R1,R5
   \   00000042   1420               MOVS     R0,#+20
   \   00000044   4143               MULS     R1,R0,R1
   \   00000046   1B31               ADDS     R1,R1,#+27
   \   00000048   0320               MOVS     R0,#+3
   \   0000004A   ........           BL       H_line
   5194                }
   \   0000004E   6D1C               ADDS     R5,R5,#+1
   \   00000050   2D06               LSLS     R5,R5,#+24
   \   00000052   2D0E               LSRS     R5,R5,#+24
   \                     ??ZoneGraph_Paint_1:
   \   00000054   2800               MOVS     R0,R5
   \   00000056   0528               CMP      R0,#+5
   \   00000058   F0D3               BCC      ??ZoneGraph_Paint_2
   5195                for (char i=0; i<=MaxColGr; i++)
   \   0000005A   2500               MOVS     R5,R4
   \   0000005C   1426               MOVS     R6,#+20
   \   0000005E   0BE0               B        ??ZoneGraph_Paint_3
   5196                {
   5197                    V_line(1+i*20,Y_offset,80,2);         
   \                     ??ZoneGraph_Paint_4:
   \   00000060   0223               MOVS     R3,#+2
   \   00000062   5022               MOVS     R2,#+80
   \   00000064   1B21               MOVS     R1,#+27
   \   00000066   7043               MULS     R0,R6,R0
   \   00000068   401C               ADDS     R0,R0,#+1
   \   0000006A   0006               LSLS     R0,R0,#+24
   \   0000006C   000E               LSRS     R0,R0,#+24
   \   0000006E   ........           BL       V_line
   5198                }
   \   00000072   6D1C               ADDS     R5,R5,#+1
   \   00000074   2D06               LSLS     R5,R5,#+24
   \   00000076   2D0E               LSRS     R5,R5,#+24
   \                     ??ZoneGraph_Paint_3:
   \   00000078   2800               MOVS     R0,R5
   \   0000007A   0428               CMP      R0,#+4
   \   0000007C   F0D3               BCC      ??ZoneGraph_Paint_4
   \   0000007E   C948               LDR      R0,??ZoneGraph_Paint_0+0x10  ;; TextToChangeLength + 25
   \   00000080   0078               LDRB     R0,[R0, #+0]
   \   00000082   0721               MOVS     R1,#+7
   \   00000084   4843               MULS     R0,R1,R0
   \   00000086   0499               LDR      R1,[SP, #+16]
   \   00000088   0D18               ADDS     R5,R1,R0
   \   0000008A   0326               MOVS     R6,#+3
   \   0000008C   5320               MOVS     R0,#+83
   \   0000008E   285C               LDRB     R0,[R5, R0]
   \   00000090   3100               MOVS     R1,R6
   \   00000092   ........           BL       __aeabi_idivmod
   \   00000096   361A               SUBS     R6,R6,R0
   \   00000098   3606               LSLS     R6,R6,#+24
   \   0000009A   360E               LSRS     R6,R6,#+24
   5199                //------koniec siatki
   5200          
   5201                //zaznaczenie wybranego
   5202                char RowChos = MaxRowGr-ScreenLokal->Graph[ZoneGrapfNrClick].Type/3-1;
   5203                char ColChos = ScreenLokal->Graph[ZoneGrapfNrClick].Type-((ScreenLokal->Graph[ZoneGrapfNrClick].Type/3)*3);
   \   0000009C   5320               MOVS     R0,#+83
   \   0000009E   2F5C               LDRB     R7,[R5, R0]
   \   000000A0   3800               MOVS     R0,R7
   \   000000A2   0321               MOVS     R1,#+3
   \   000000A4   ........           BL       __aeabi_idivmod
   \   000000A8   0321               MOVS     R1,#+3
   \   000000AA   4843               MULS     R0,R1,R0
   \   000000AC   3D1A               SUBS     R5,R7,R0
   \   000000AE   2D06               LSLS     R5,R5,#+24
   \   000000B0   2D0E               LSRS     R5,R5,#+24
   5204                H_line(1+ColChos*20  ,Y_offset+RowChos*20,20,1);  
   \   000000B2   1420               MOVS     R0,#+20
   \   000000B4   4543               MULS     R5,R0,R5
   \   000000B6   6946               MOV      R1,SP
   \   000000B8   2800               MOVS     R0,R5
   \   000000BA   401C               ADDS     R0,R0,#+1
   \   000000BC   0872               STRB     R0,[R1, #+8]
   \   000000BE   1420               MOVS     R0,#+20
   \   000000C0   4643               MULS     R6,R0,R6
   \   000000C2   3700               MOVS     R7,R6
   \   000000C4   1B37               ADDS     R7,R7,#+27
   \   000000C6   0123               MOVS     R3,#+1
   \   000000C8   0200               MOVS     R2,R0
   \   000000CA   3900               MOVS     R1,R7
   \   000000CC   6846               MOV      R0,SP
   \   000000CE   007A               LDRB     R0,[R0, #+8]
   \   000000D0   ........           BL       H_line
   5205                H_line(1+ColChos*20    ,Y_offset+(RowChos+1)*20,20,1); 
   \   000000D4   0123               MOVS     R3,#+1
   \   000000D6   1422               MOVS     R2,#+20
   \   000000D8   2F36               ADDS     R6,R6,#+47
   \   000000DA   3100               MOVS     R1,R6
   \   000000DC   6846               MOV      R0,SP
   \   000000DE   007A               LDRB     R0,[R0, #+8]
   \   000000E0   ........           BL       H_line
   5206                V_line(1+ColChos*20    ,Y_offset+RowChos*20,20,1);  
   \   000000E4   0123               MOVS     R3,#+1
   \   000000E6   1422               MOVS     R2,#+20
   \   000000E8   3900               MOVS     R1,R7
   \   000000EA   6846               MOV      R0,SP
   \   000000EC   007A               LDRB     R0,[R0, #+8]
   \   000000EE   ........           BL       V_line
   5207                V_line(1+(ColChos+1)*20    ,Y_offset+RowChos*20,20,1);  
   \   000000F2   0123               MOVS     R3,#+1
   \   000000F4   1422               MOVS     R2,#+20
   \   000000F6   3900               MOVS     R1,R7
   \   000000F8   1535               ADDS     R5,R5,#+21
   \   000000FA   2800               MOVS     R0,R5
   \   000000FC   0006               LSLS     R0,R0,#+24
   \   000000FE   000E               LSRS     R0,R0,#+24
   \   00000100   ........           BL       V_line
   5208                //---------------------
   5209                
   5210                
   5211                
   5212                 if (((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) || (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff)) && (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff))
   \   00000104   A748               LDR      R0,??ZoneGraph_Paint_0+0x10  ;; TextToChangeLength + 25
   \   00000106   0078               LDRB     R0,[R0, #+0]
   \   00000108   0721               MOVS     R1,#+7
   \   0000010A   4843               MULS     R0,R1,R0
   \   0000010C   0499               LDR      R1,[SP, #+16]
   \   0000010E   0818               ADDS     R0,R1,R0
   \   00000110   5330               ADDS     R0,R0,#+83
   \   00000112   0178               LDRB     R1,[R0, #+0]
   \   00000114   0829               CMP      R1,#+8
   \   00000116   01D0               BEQ      ??ZoneGraph_Paint_5
   \   00000118   0B29               CMP      R1,#+11
   \   0000011A   11D1               BNE      ??ZoneGraph_Paint_6
   \                     ??ZoneGraph_Paint_5:
   \   0000011C   8079               LDRB     R0,[R0, #+6]
   \   0000011E   C007               LSLS     R0,R0,#+31
   \   00000120   0ED5               BPL      ??ZoneGraph_Paint_6
   5213                  {
   5214                   Label("+",2,5+2*20, Y_offset+17 ,1,12,1,127,0);
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   2000               MOVS     R0,R4
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   7F21               MOVS     R1,#+127
   \   0000012A   0120               MOVS     R0,#+1
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   0C21               MOVS     R1,#+12
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   2C23               MOVS     R3,#+44
   \   00000134   2D22               MOVS     R2,#+45
   \   00000136   0221               MOVS     R1,#+2
   \   00000138   9BA0               ADR      R0,??ZoneGraph_Paint_0+0x14  ;; 0x2B, 0x00, 0x00, 0x00
   \   0000013A   ........           BL       Label
   \   0000013E   06B0               ADD      SP,SP,#+24
   5215          
   5216                  }
   5217                  
   5218                
   5219                  char idx=0;
   \                     ??ZoneGraph_Paint_6:
   \   00000140   2500               MOVS     R5,R4
   5220          
   5221                  for (int j=(MaxRowGr-1); j>=0; j--)
   \   00000142   0326               MOVS     R6,#+3
   \   00000144   37E0               B        ??ZoneGraph_Paint_7
   5222                  {
   5223                    for (int i=0; i<MaxColGr; i++)
   5224                    {
   5225                      if (idx<=MaxGraphIdx) CopyToCanvasPoint((char*)&GraphTab[idx], 2+i*20, Y_offset+1+j*20, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??ZoneGraph_Paint_8:
   \   00000146   2800               MOVS     R0,R5
   \   00000148   0828               CMP      R0,#+8
   \   0000014A   18D2               BCS      ??ZoneGraph_Paint_9
   \   0000014C   82B0               SUB      SP,SP,#+8
   \   0000014E   1220               MOVS     R0,#+18
   \   00000150   0090               STR      R0,[SP, #+0]
   \   00000152   0300               MOVS     R3,R0
   \   00000154   1422               MOVS     R2,#+20
   \   00000156   7243               MULS     R2,R6,R2
   \   00000158   1C32               ADDS     R2,R2,#+28
   \   0000015A   1206               LSLS     R2,R2,#+24
   \   0000015C   120E               LSRS     R2,R2,#+24
   \   0000015E   1421               MOVS     R1,#+20
   \   00000160   7943               MULS     R1,R7,R1
   \   00000162   891C               ADDS     R1,R1,#+2
   \   00000164   0906               LSLS     R1,R1,#+24
   \   00000166   090E               LSRS     R1,R1,#+24
   \   00000168   8C46               MOV      R12,R1
   \   0000016A   2800               MOVS     R0,R5
   \   0000016C   3621               MOVS     R1,#+54
   \   0000016E   4843               MULS     R0,R1,R0
   \   00000170   8E49               LDR      R1,??ZoneGraph_Paint_0+0x18  ;; `?<Constant {0, 0}>`
   \   00000172   0818               ADDS     R0,R1,R0
   \   00000174   9C30               ADDS     R0,R0,#+156
   \   00000176   6146               MOV      R1,R12
   \   00000178   ........           BL       CopyToCanvasPoint
   \   0000017C   02B0               ADD      SP,SP,#+8
   5226                      if (idx==MaxGraphIdx+1) {
   \                     ??ZoneGraph_Paint_9:
   \   0000017E   2800               MOVS     R0,R5
   \   00000180   0828               CMP      R0,#+8
   \   00000182   11D1               BNE      ??ZoneGraph_Paint_10
   5227                        Label("Text",0,2 +2*20, Y_offset+6+j*20 ,4,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000184   82B0               SUB      SP,SP,#+8
   \   00000186   2000               MOVS     R0,R4
   \   00000188   0090               STR      R0,[SP, #+0]
   \   0000018A   7F21               MOVS     R1,#+127
   \   0000018C   0120               MOVS     R0,#+1
   \   0000018E   03B4               PUSH     {R0,R1}
   \   00000190   0A21               MOVS     R1,#+10
   \   00000192   0420               MOVS     R0,#+4
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   1423               MOVS     R3,#+20
   \   00000198   7343               MULS     R3,R6,R3
   \   0000019A   2133               ADDS     R3,R3,#+33
   \   0000019C   2A22               MOVS     R2,#+42
   \   0000019E   2100               MOVS     R1,R4
   \   000001A0   8348               LDR      R0,??ZoneGraph_Paint_0+0x1C  ;; `?<Constant {0, 0}>` + 100
   \   000001A2   ........           BL       Label
   \   000001A6   06B0               ADD      SP,SP,#+24
   5228                      }
   5229                      idx++;
   \                     ??ZoneGraph_Paint_10:
   \   000001A8   6D1C               ADDS     R5,R5,#+1
   \   000001AA   2D06               LSLS     R5,R5,#+24
   \   000001AC   2D0E               LSRS     R5,R5,#+24
   5230                    }
   \   000001AE   7F1C               ADDS     R7,R7,#+1
   \                     ??ZoneGraph_Paint_11:
   \   000001B0   032F               CMP      R7,#+3
   \   000001B2   C8DB               BLT      ??ZoneGraph_Paint_8
   \   000001B4   761E               SUBS     R6,R6,#+1
   \                     ??ZoneGraph_Paint_7:
   \   000001B6   002E               CMP      R6,#+0
   \   000001B8   01D4               BMI      ??ZoneGraph_Paint_12
   \   000001BA   2700               MOVS     R7,R4
   \   000001BC   F8E7               B        ??ZoneGraph_Paint_11
   5231                  }
   5232                  
   5233                  
   5234                  
   5235                  
   5236                  Label("Scn ",0,4 +0*20, Y_offset+7 ,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ZoneGraph_Paint_12:
   \   000001BE   7B4D               LDR      R5,??ZoneGraph_Paint_0+0x18  ;; `?<Constant {0, 0}>`
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   2000               MOVS     R0,R4
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   7F21               MOVS     R1,#+127
   \   000001C8   0120               MOVS     R0,#+1
   \   000001CA   03B4               PUSH     {R0,R1}
   \   000001CC   0A21               MOVS     R1,#+10
   \   000001CE   0320               MOVS     R0,#+3
   \   000001D0   03B4               PUSH     {R0,R1}
   \   000001D2   2223               MOVS     R3,#+34
   \   000001D4   0422               MOVS     R2,#+4
   \   000001D6   2100               MOVS     R1,R4
   \   000001D8   2800               MOVS     R0,R5
   \   000001DA   5430               ADDS     R0,R0,#+84
   \   000001DC   ........           BL       Label
   \   000001E0   06B0               ADD      SP,SP,#+24
   5237                  Label("Val ",0,5 +1*20, Y_offset+7 ,3,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001E2   82B0               SUB      SP,SP,#+8
   \   000001E4   2000               MOVS     R0,R4
   \   000001E6   0090               STR      R0,[SP, #+0]
   \   000001E8   7F21               MOVS     R1,#+127
   \   000001EA   0120               MOVS     R0,#+1
   \   000001EC   03B4               PUSH     {R0,R1}
   \   000001EE   0F21               MOVS     R1,#+15
   \   000001F0   0320               MOVS     R0,#+3
   \   000001F2   03B4               PUSH     {R0,R1}
   \   000001F4   2223               MOVS     R3,#+34
   \   000001F6   1922               MOVS     R2,#+25
   \   000001F8   2100               MOVS     R1,R4
   \   000001FA   2800               MOVS     R0,R5
   \   000001FC   6C30               ADDS     R0,R0,#+108
   \   000001FE   ........           BL       Label
   \   00000202   06B0               ADD      SP,SP,#+24
   5238                  //Label("Text",0,2 +2*20, Y_offset+7 ,4,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   5239                  Label("On ",0,6 +2*20,  Y_offset+9,3,10,1,127,0);
   \   00000204   82B0               SUB      SP,SP,#+8
   \   00000206   2000               MOVS     R0,R4
   \   00000208   0090               STR      R0,[SP, #+0]
   \   0000020A   7F21               MOVS     R1,#+127
   \   0000020C   0120               MOVS     R0,#+1
   \   0000020E   03B4               PUSH     {R0,R1}
   \   00000210   0A21               MOVS     R1,#+10
   \   00000212   0320               MOVS     R0,#+3
   \   00000214   03B4               PUSH     {R0,R1}
   \   00000216   2423               MOVS     R3,#+36
   \   00000218   2E22               MOVS     R2,#+46
   \   0000021A   2100               MOVS     R1,R4
   \   0000021C   65A0               ADR      R0,??ZoneGraph_Paint_0+0x20  ;; "On "
   \   0000021E   ........           BL       Label
   \   00000222   06B0               ADD      SP,SP,#+24
   5240                  Label("Off ",0,6 +2*20, Y_offset+1,3,10,1,127,0);
   \   00000224   82B0               SUB      SP,SP,#+8
   \   00000226   2000               MOVS     R0,R4
   \   00000228   0090               STR      R0,[SP, #+0]
   \   0000022A   7F21               MOVS     R1,#+127
   \   0000022C   0120               MOVS     R0,#+1
   \   0000022E   03B4               PUSH     {R0,R1}
   \   00000230   0A21               MOVS     R1,#+10
   \   00000232   0320               MOVS     R0,#+3
   \   00000234   03B4               PUSH     {R0,R1}
   \   00000236   1C23               MOVS     R3,#+28
   \   00000238   2E22               MOVS     R2,#+46
   \   0000023A   2100               MOVS     R1,R4
   \   0000023C   2800               MOVS     R0,R5
   \   0000023E   4C30               ADDS     R0,R0,#+76
   \   00000240   ........           BL       Label
   \   00000244   06B0               ADD      SP,SP,#+24
   5241                  
   5242                  //je¿eli On / Off
   5243                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff) 
   \   00000246   5748               LDR      R0,??ZoneGraph_Paint_0+0x10  ;; TextToChangeLength + 25
   \   00000248   0078               LDRB     R0,[R0, #+0]
   \   0000024A   0721               MOVS     R1,#+7
   \   0000024C   4843               MULS     R0,R1,R0
   \   0000024E   0499               LDR      R1,[SP, #+16]
   \   00000250   0818               ADDS     R0,R1,R0
   \   00000252   5330               ADDS     R0,R0,#+83
   \   00000254   0178               LDRB     R1,[R0, #+0]
   \   00000256   0B29               CMP      R1,#+11
   \   00000258   7CD1               BNE      ??ZoneGraph_Paint_13
   5244                  {
   5245                    
   5246                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   0000025A   6E46               MOV      R6,SP
   \   0000025C   4921               MOVS     R1,#+73
   \   0000025E   3170               STRB     R1,[R6, #+0]
   \   00000260   6421               MOVS     R1,#+100
   \   00000262   7170               STRB     R1,[R6, #+1]
   \   00000264   3A21               MOVS     R1,#+58
   \   00000266   B170               STRB     R1,[R6, #+2]
   \   00000268   2021               MOVS     R1,#+32
   \   0000026A   F170               STRB     R1,[R6, #+3]
   5247                    char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Nr, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   0000026C   0222               MOVS     R2,#+2
   \   0000026E   3100               MOVS     R1,R6
   \   00000270   C91C               ADDS     R1,R1,#+3
   \   00000272   0079               LDRB     R0,[R0, #+4]
   \   00000274   ........           BL       CharToStr
   \   00000278   0200               MOVS     R2,R0
   5248                    Label(txt,2,20, 16 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000027A   82B0               SUB      SP,SP,#+8
   \   0000027C   2000               MOVS     R0,R4
   \   0000027E   0090               STR      R0,[SP, #+0]
   \   00000280   7F21               MOVS     R1,#+127
   \   00000282   0120               MOVS     R0,#+1
   \   00000284   03B4               PUSH     {R0,R1}
   \   00000286   1621               MOVS     R1,#+22
   \   00000288   D21C               ADDS     R2,R2,#+3
   \   0000028A   1000               MOVS     R0,R2
   \   0000028C   0006               LSLS     R0,R0,#+24
   \   0000028E   000E               LSRS     R0,R0,#+24
   \   00000290   03B4               PUSH     {R0,R1}
   \   00000292   1023               MOVS     R3,#+16
   \   00000294   1422               MOVS     R2,#+20
   \   00000296   0221               MOVS     R1,#+2
   \   00000298   06A8               ADD      R0,SP,#+24
   \   0000029A   ........           BL       Label
   \   0000029E   06B0               ADD      SP,SP,#+24
   5249                  
   5250                    txt[0]='<';txt[1]=0;
   \   000002A0   3C27               MOVS     R7,#+60
   \   000002A2   3770               STRB     R7,[R6, #+0]
   \   000002A4   2000               MOVS     R0,R4
   \   000002A6   7070               STRB     R0,[R6, #+1]
   5251                    Button(txt,3,15,15,11); 
   \   000002A8   82B0               SUB      SP,SP,#+8
   \   000002AA   0B20               MOVS     R0,#+11
   \   000002AC   0090               STR      R0,[SP, #+0]
   \   000002AE   0F23               MOVS     R3,#+15
   \   000002B0   1A00               MOVS     R2,R3
   \   000002B2   0321               MOVS     R1,#+3
   \   000002B4   02A8               ADD      R0,SP,#+8
   \   000002B6   ........           BL       Button
   \   000002BA   02B0               ADD      SP,SP,#+8
   \   000002BC   3E20               MOVS     R0,#+62
   \   000002BE   3070               STRB     R0,[R6, #+0]
   5252                    txt[0]='>';
   5253                    Button(txt,45,15,15,11); 
   \   000002C0   82B0               SUB      SP,SP,#+8
   \   000002C2   0B20               MOVS     R0,#+11
   \   000002C4   0090               STR      R0,[SP, #+0]
   \   000002C6   0F23               MOVS     R3,#+15
   \   000002C8   1A00               MOVS     R2,R3
   \   000002CA   2D21               MOVS     R1,#+45
   \   000002CC   02A8               ADD      R0,SP,#+8
   \   000002CE   ........           BL       Button
   \   000002D2   02B0               ADD      SP,SP,#+8
   5254                    
   5255                    txt[0]='P'; txt[1]=':'; txt[2]=0; 
   \   000002D4   5020               MOVS     R0,#+80
   \   000002D6   3070               STRB     R0,[R6, #+0]
   \   000002D8   3A20               MOVS     R0,#+58
   \   000002DA   7070               STRB     R0,[R6, #+1]
   \   000002DC   2000               MOVS     R0,R4
   \   000002DE   B070               STRB     R0,[R6, #+2]
   5256                    ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Port, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   000002E0   0222               MOVS     R2,#+2
   \   000002E2   3100               MOVS     R1,R6
   \   000002E4   891C               ADDS     R1,R1,#+2
   \   000002E6   2F48               LDR      R0,??ZoneGraph_Paint_0+0x10  ;; TextToChangeLength + 25
   \   000002E8   0078               LDRB     R0,[R0, #+0]
   \   000002EA   0723               MOVS     R3,#+7
   \   000002EC   5843               MULS     R0,R3,R0
   \   000002EE   049B               LDR      R3,[SP, #+16]
   \   000002F0   1818               ADDS     R0,R3,R0
   \   000002F2   5830               ADDS     R0,R0,#+88
   \   000002F4   0078               LDRB     R0,[R0, #+0]
   \   000002F6   ........           BL       CharToStr
   \   000002FA   0200               MOVS     R2,R0
   5257                   
   5258                    Label(txt,2,20, 3 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002FC   82B0               SUB      SP,SP,#+8
   \   000002FE   2000               MOVS     R0,R4
   \   00000300   0090               STR      R0,[SP, #+0]
   \   00000302   7F21               MOVS     R1,#+127
   \   00000304   0120               MOVS     R0,#+1
   \   00000306   03B4               PUSH     {R0,R1}
   \   00000308   1621               MOVS     R1,#+22
   \   0000030A   921C               ADDS     R2,R2,#+2
   \   0000030C   1000               MOVS     R0,R2
   \   0000030E   0006               LSLS     R0,R0,#+24
   \   00000310   000E               LSRS     R0,R0,#+24
   \   00000312   03B4               PUSH     {R0,R1}
   \   00000314   0323               MOVS     R3,#+3
   \   00000316   1422               MOVS     R2,#+20
   \   00000318   0221               MOVS     R1,#+2
   \   0000031A   06A8               ADD      R0,SP,#+24
   \   0000031C   ........           BL       Label
   \   00000320   06B0               ADD      SP,SP,#+24
   5259                  
   5260                    txt[0]='<';txt[1]=0;
   \   00000322   3770               STRB     R7,[R6, #+0]
   \   00000324   2000               MOVS     R0,R4
   \   00000326   7070               STRB     R0,[R6, #+1]
   5261                    Button(txt,3,3,15,11); 
   \   00000328   82B0               SUB      SP,SP,#+8
   \   0000032A   0B20               MOVS     R0,#+11
   \   0000032C   0090               STR      R0,[SP, #+0]
   \   0000032E   0F23               MOVS     R3,#+15
   \   00000330   0322               MOVS     R2,#+3
   \   00000332   1100               MOVS     R1,R2
   \   00000334   02A8               ADD      R0,SP,#+8
   \   00000336   ........           BL       Button
   \   0000033A   02B0               ADD      SP,SP,#+8
   5262                    txt[0]='>';
   \   0000033C   3E20               MOVS     R0,#+62
   \   0000033E   3070               STRB     R0,[R6, #+0]
   5263                    Button(txt,45,3,15,11); 
   \   00000340   82B0               SUB      SP,SP,#+8
   \   00000342   0B20               MOVS     R0,#+11
   \   00000344   0090               STR      R0,[SP, #+0]
   \   00000346   0F23               MOVS     R3,#+15
   \   00000348   0322               MOVS     R2,#+3
   \   0000034A   2D21               MOVS     R1,#+45
   \   0000034C   02A8               ADD      R0,SP,#+8
   \   0000034E   ........           BL       Button
   \   00000352   02B0               ADD      SP,SP,#+8
   5264                    
   5265                    
   5266                  }        
   5267                  
   5268                  //je¿eli tekst
   5269                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) 
   \                     ??ZoneGraph_Paint_13:
   \   00000354   1348               LDR      R0,??ZoneGraph_Paint_0+0x10  ;; TextToChangeLength + 25
   \   00000356   0078               LDRB     R0,[R0, #+0]
   \   00000358   0721               MOVS     R1,#+7
   \   0000035A   4843               MULS     R0,R1,R0
   \   0000035C   0499               LDR      R1,[SP, #+16]
   \   0000035E   0E18               ADDS     R6,R1,R0
   \   00000360   3000               MOVS     R0,R6
   \   00000362   5330               ADDS     R0,R0,#+83
   \   00000364   0178               LDRB     R1,[R0, #+0]
   \   00000366   0829               CMP      R1,#+8
   \   00000368   75D1               BNE      ??ZoneGraph_Paint_14
   5270                  {
   5271          
   5272                    if (ScreenLokal->Graph[ZoneGrapfNrClick].Text[0]!=0)
   \   0000036A   4078               LDRB     R0,[R0, #+1]
   \   0000036C   0028               CMP      R0,#+0
   \   0000036E   82B0               SUB      SP,SP,#+8
   \   00000370   22D0               BEQ      ??ZoneGraph_Paint_15
   5273                    {
   5274                      Label(ScreenLokal->Graph[ZoneGrapfNrClick].Text,0,31, 17 ,6,10,1,127,0); 
   \   00000372   2000               MOVS     R0,R4
   \   00000374   0090               STR      R0,[SP, #+0]
   \   00000376   7F21               MOVS     R1,#+127
   \   00000378   0120               MOVS     R0,#+1
   \   0000037A   03B4               PUSH     {R0,R1}
   \   0000037C   0A21               MOVS     R1,#+10
   \   0000037E   0620               MOVS     R0,#+6
   \   00000380   03B4               PUSH     {R0,R1}
   \   00000382   1123               MOVS     R3,#+17
   \   00000384   1F22               MOVS     R2,#+31
   \   00000386   2100               MOVS     R1,R4
   \   00000388   5436               ADDS     R6,R6,#+84
   \   0000038A   3000               MOVS     R0,R6
   \   0000038C   ........           BL       Label
   \   00000390   06B0               ADD      SP,SP,#+24
   \   00000392   21E0               B        ??ZoneGraph_Paint_16
   \                     ??ZoneGraph_Paint_0:
   \   00000394   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000398   EC040000           DC32     0x4ec
   \   0000039C   ........           DC32     g_leng
   \   000003A0   ........           DC32     Speech
   \   000003A4   ........           DC32     TextToChangeLength + 25
   \   000003A8   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   000003AC   ........           DC32     `?<Constant {0, 0}>`
   \   000003B0   ........           DC32     `?<Constant {0, 0}>` + 100
   \   000003B4   4F6E2000           DC8      "On "
   5275                    }else{
   5276                      Label("...... ",0,31, 17 ,6,10,1,127,0); 
   \                     ??ZoneGraph_Paint_15:
   \   000003B8   2000               MOVS     R0,R4
   \   000003BA   0090               STR      R0,[SP, #+0]
   \   000003BC   7F21               MOVS     R1,#+127
   \   000003BE   0120               MOVS     R0,#+1
   \   000003C0   03B4               PUSH     {R0,R1}
   \   000003C2   0A21               MOVS     R1,#+10
   \   000003C4   0620               MOVS     R0,#+6
   \   000003C6   03B4               PUSH     {R0,R1}
   \   000003C8   1123               MOVS     R3,#+17
   \   000003CA   1F22               MOVS     R2,#+31
   \   000003CC   2100               MOVS     R1,R4
   \   000003CE   2800               MOVS     R0,R5
   \   000003D0   7430               ADDS     R0,R0,#+116
   \   000003D2   ........           BL       Label
   \   000003D6   06B0               ADD      SP,SP,#+24
   5277                    }
   5278                    
   5279                    Button("Text",2,15,25,11); 
   \                     ??ZoneGraph_Paint_16:
   \   000003D8   82B0               SUB      SP,SP,#+8
   \   000003DA   0B20               MOVS     R0,#+11
   \   000003DC   0090               STR      R0,[SP, #+0]
   \   000003DE   1923               MOVS     R3,#+25
   \   000003E0   0F22               MOVS     R2,#+15
   \   000003E2   0221               MOVS     R1,#+2
   \   000003E4   2800               MOVS     R0,R5
   \   000003E6   6430               ADDS     R0,R0,#+100
   \   000003E8   ........           BL       Button
   \   000003EC   02B0               ADD      SP,SP,#+8
   5280                    
   5281                    Label("+On/Off",0,3, 4 ,7,10,1,127,0); 
   \   000003EE   82B0               SUB      SP,SP,#+8
   \   000003F0   2000               MOVS     R0,R4
   \   000003F2   0090               STR      R0,[SP, #+0]
   \   000003F4   7F21               MOVS     R1,#+127
   \   000003F6   0120               MOVS     R0,#+1
   \   000003F8   03B4               PUSH     {R0,R1}
   \   000003FA   0A21               MOVS     R1,#+10
   \   000003FC   0720               MOVS     R0,#+7
   \   000003FE   03B4               PUSH     {R0,R1}
   \   00000400   0423               MOVS     R3,#+4
   \   00000402   0322               MOVS     R2,#+3
   \   00000404   2100               MOVS     R1,R4
   \   00000406   7C35               ADDS     R5,R5,#+124
   \   00000408   2800               MOVS     R0,R5
   \   0000040A   ........           BL       Label
   \   0000040E   06B0               ADD      SP,SP,#+24
   5282                    
   5283                    if (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff) 
   \   00000410   7448               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 25
   \   00000412   0078               LDRB     R0,[R0, #+0]
   \   00000414   0721               MOVS     R1,#+7
   \   00000416   4843               MULS     R0,R1,R0
   \   00000418   0499               LDR      R1,[SP, #+16]
   \   0000041A   0818               ADDS     R0,R1,R0
   \   0000041C   5930               ADDS     R0,R0,#+89
   \   0000041E   0078               LDRB     R0,[R0, #+0]
   \   00000420   C007               LSLS     R0,R0,#+31
   \   00000422   6E46               MOV      R6,SP
   \   00000424   07D5               BPL      ??ZoneGraph_Paint_18
   5284                    {
   5285                      txt[0]='O'; txt[1]='f';txt[2]='f'; txt[3]=0;
   \   00000426   4F20               MOVS     R0,#+79
   \   00000428   3070               STRB     R0,[R6, #+0]
   \   0000042A   6620               MOVS     R0,#+102
   \   0000042C   7070               STRB     R0,[R6, #+1]
   \   0000042E   B070               STRB     R0,[R6, #+2]
   \   00000430   2000               MOVS     R0,R4
   \   00000432   F070               STRB     R0,[R6, #+3]
   \   00000434   05E0               B        ??ZoneGraph_Paint_19
   5286                    }else{
   5287                      txt[0]='O'; txt[1]='n'; txt[2]=0;
   \                     ??ZoneGraph_Paint_18:
   \   00000436   4F20               MOVS     R0,#+79
   \   00000438   3070               STRB     R0,[R6, #+0]
   \   0000043A   6E20               MOVS     R0,#+110
   \   0000043C   7070               STRB     R0,[R6, #+1]
   \   0000043E   2000               MOVS     R0,R4
   \   00000440   B070               STRB     R0,[R6, #+2]
   5288                    }
   5289                    
   5290                    Button(txt,40,3,21,11); 
   \                     ??ZoneGraph_Paint_19:
   \   00000442   82B0               SUB      SP,SP,#+8
   \   00000444   0B20               MOVS     R0,#+11
   \   00000446   0090               STR      R0,[SP, #+0]
   \   00000448   1523               MOVS     R3,#+21
   \   0000044A   0322               MOVS     R2,#+3
   \   0000044C   2821               MOVS     R1,#+40
   \   0000044E   02A8               ADD      R0,SP,#+8
   \   00000450   ........           BL       Button
   \   00000454   02B0               ADD      SP,SP,#+8
   5291                    
   5292                    
   5293                  }
   5294                  
   5295          
   5296                       
   5297                       
   5298                  //je¿eli wartoæ
   5299                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphWartosc) 
   \                     ??ZoneGraph_Paint_14:
   \   00000456   6348               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 25
   \   00000458   0078               LDRB     R0,[R0, #+0]
   \   0000045A   0721               MOVS     R1,#+7
   \   0000045C   4843               MULS     R0,R1,R0
   \   0000045E   0499               LDR      R1,[SP, #+16]
   \   00000460   0818               ADDS     R0,R1,R0
   \   00000462   5330               ADDS     R0,R0,#+83
   \   00000464   0078               LDRB     R0,[R0, #+0]
   \   00000466   0A28               CMP      R0,#+10
   \   00000468   00D0               BEQ      .+4
   \   0000046A   95E0               B        ??ZoneGraph_Paint_20
   5300                  {
   5301                    for (char i=0; i<3; i++) 
   \   0000046C   2500               MOVS     R5,R4
   \   0000046E   13E0               B        ??ZoneGraph_Paint_21
   5302                    {
   5303                     if (ScreenLokal->Graph[ZoneGrapfNrClick].Text[i]>=30) 
   5304                     {Label(&(ScreenLokal->Graph[ZoneGrapfNrClick].Text[i]),2,30-((3-i)*9),17,1,7,1,127,1); 
   5305                     }else{
   5306                      Label(" ",2,30-((3-i)*9),17,1,8,1,127,1);  
   \                     ??ZoneGraph_Paint_22:
   \   00000470   0120               MOVS     R0,#+1
   \   00000472   0090               STR      R0,[SP, #+0]
   \   00000474   7F21               MOVS     R1,#+127
   \   00000476   03B4               PUSH     {R0,R1}
   \   00000478   0821               MOVS     R1,#+8
   \   0000047A   03B4               PUSH     {R0,R1}
   \   0000047C   1123               MOVS     R3,#+17
   \   0000047E   0920               MOVS     R0,#+9
   \   00000480   4243               MULS     R2,R0,R2
   \   00000482   D21C               ADDS     R2,R2,#+3
   \   00000484   1206               LSLS     R2,R2,#+24
   \   00000486   120E               LSRS     R2,R2,#+24
   \   00000488   0221               MOVS     R1,#+2
   \   0000048A   57A0               ADR      R0,??ZoneGraph_Paint_17+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   0000048C   ........           BL       Label
   \   00000490   06B0               ADD      SP,SP,#+24
   5307                     }
   \                     ??ZoneGraph_Paint_23:
   \   00000492   6D1C               ADDS     R5,R5,#+1
   \   00000494   2D06               LSLS     R5,R5,#+24
   \   00000496   2D0E               LSRS     R5,R5,#+24
   \                     ??ZoneGraph_Paint_21:
   \   00000498   2800               MOVS     R0,R5
   \   0000049A   0328               CMP      R0,#+3
   \   0000049C   1FD2               BCS      ??ZoneGraph_Paint_24
   \   0000049E   2A00               MOVS     R2,R5
   \   000004A0   5048               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 25
   \   000004A2   0078               LDRB     R0,[R0, #+0]
   \   000004A4   0721               MOVS     R1,#+7
   \   000004A6   4843               MULS     R0,R1,R0
   \   000004A8   0499               LDR      R1,[SP, #+16]
   \   000004AA   0818               ADDS     R0,R1,R0
   \   000004AC   8618               ADDS     R6,R0,R2
   \   000004AE   5420               MOVS     R0,#+84
   \   000004B0   305C               LDRB     R0,[R6, R0]
   \   000004B2   1E28               CMP      R0,#+30
   \   000004B4   82B0               SUB      SP,SP,#+8
   \   000004B6   DBD3               BCC      ??ZoneGraph_Paint_22
   \   000004B8   0120               MOVS     R0,#+1
   \   000004BA   0090               STR      R0,[SP, #+0]
   \   000004BC   7F21               MOVS     R1,#+127
   \   000004BE   03B4               PUSH     {R0,R1}
   \   000004C0   0721               MOVS     R1,#+7
   \   000004C2   03B4               PUSH     {R0,R1}
   \   000004C4   1123               MOVS     R3,#+17
   \   000004C6   0920               MOVS     R0,#+9
   \   000004C8   4243               MULS     R2,R0,R2
   \   000004CA   D21C               ADDS     R2,R2,#+3
   \   000004CC   1206               LSLS     R2,R2,#+24
   \   000004CE   120E               LSRS     R2,R2,#+24
   \   000004D0   0221               MOVS     R1,#+2
   \   000004D2   5436               ADDS     R6,R6,#+84
   \   000004D4   3000               MOVS     R0,R6
   \   000004D6   ........           BL       Label
   \   000004DA   06B0               ADD      SP,SP,#+24
   \   000004DC   D9E7               B        ??ZoneGraph_Paint_23
   5308                    }
   5309                    
   5310                    txt[0]='N'; txt[1]=':'; txt[2]=0;
   \                     ??ZoneGraph_Paint_24:
   \   000004DE   6E46               MOV      R6,SP
   \   000004E0   4E20               MOVS     R0,#+78
   \   000004E2   3070               STRB     R0,[R6, #+0]
   \   000004E4   3A20               MOVS     R0,#+58
   \   000004E6   7070               STRB     R0,[R6, #+1]
   \   000004E8   2000               MOVS     R0,R4
   \   000004EA   B070               STRB     R0,[R6, #+2]
   5311                    Label(txt,0,33, 17 ,2,10,1,127,0); 
   \   000004EC   82B0               SUB      SP,SP,#+8
   \   000004EE   0090               STR      R0,[SP, #+0]
   \   000004F0   7F21               MOVS     R1,#+127
   \   000004F2   0120               MOVS     R0,#+1
   \   000004F4   03B4               PUSH     {R0,R1}
   \   000004F6   0A21               MOVS     R1,#+10
   \   000004F8   0220               MOVS     R0,#+2
   \   000004FA   03B4               PUSH     {R0,R1}
   \   000004FC   1123               MOVS     R3,#+17
   \   000004FE   2122               MOVS     R2,#+33
   \   00000500   2100               MOVS     R1,R4
   \   00000502   06A8               ADD      R0,SP,#+24
   \   00000504   ........           BL       Label
   \   00000508   06B0               ADD      SP,SP,#+24
   5312                    txt[1]=0;txt[2]=0;
   \   0000050A   2000               MOVS     R0,R4
   \   0000050C   7070               STRB     R0,[R6, #+1]
   \   0000050E   B470               STRB     R4,[R6, #+2]
   5313                    char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000510   0222               MOVS     R2,#+2
   \   00000512   6946               MOV      R1,SP
   \   00000514   3348               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 25
   \   00000516   0078               LDRB     R0,[R0, #+0]
   \   00000518   0723               MOVS     R3,#+7
   \   0000051A   5843               MULS     R0,R3,R0
   \   0000051C   049B               LDR      R3,[SP, #+16]
   \   0000051E   1818               ADDS     R0,R3,R0
   \   00000520   5730               ADDS     R0,R0,#+87
   \   00000522   0078               LDRB     R0,[R0, #+0]
   \   00000524   ........           BL       CharToStr
   5314                    txt[ind++]='.';
   \   00000528   0100               MOVS     R1,R0
   \   0000052A   2E22               MOVS     R2,#+46
   \   0000052C   7254               STRB     R2,[R6, R1]
   \   0000052E   401C               ADDS     R0,R0,#+1
   \   00000530   0006               LSLS     R0,R0,#+24
   \   00000532   000E               LSRS     R0,R0,#+24
   5315                    ind+=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Reg, &txt[ind], 2); //(char Value, char *Vstring, char ill);
   \   00000534   0400               MOVS     R4,R0
   \   00000536   0222               MOVS     R2,#+2
   \   00000538   3118               ADDS     R1,R6,R0
   \   0000053A   2A48               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 25
   \   0000053C   0078               LDRB     R0,[R0, #+0]
   \   0000053E   0723               MOVS     R3,#+7
   \   00000540   5843               MULS     R0,R3,R0
   \   00000542   049B               LDR      R3,[SP, #+16]
   \   00000544   1818               ADDS     R0,R3,R0
   \   00000546   5830               ADDS     R0,R0,#+88
   \   00000548   0078               LDRB     R0,[R0, #+0]
   \   0000054A   ........           BL       CharToStr
   \   0000054E   2218               ADDS     R2,R4,R0
   \   00000550   1206               LSLS     R2,R2,#+24
   \   00000552   120E               LSRS     R2,R2,#+24
   5316                    Label(txt,0,42, 17 ,ind,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000554   82B0               SUB      SP,SP,#+8
   \   00000556   0020               MOVS     R0,#+0
   \   00000558   0090               STR      R0,[SP, #+0]
   \   0000055A   7F21               MOVS     R1,#+127
   \   0000055C   0120               MOVS     R0,#+1
   \   0000055E   03B4               PUSH     {R0,R1}
   \   00000560   0A21               MOVS     R1,#+10
   \   00000562   1000               MOVS     R0,R2
   \   00000564   03B4               PUSH     {R0,R1}
   \   00000566   1123               MOVS     R3,#+17
   \   00000568   2A22               MOVS     R2,#+42
   \   0000056A   0021               MOVS     R1,#+0
   \   0000056C   06A8               ADD      R0,SP,#+24
   \   0000056E   ........           BL       Label
   \   00000572   06B0               ADD      SP,SP,#+24
   5317                  
   5318                    Button(Speech[g_leng].Zmiana,8,3,44,13); 
   \   00000574   82B0               SUB      SP,SP,#+8
   \   00000576   0D20               MOVS     R0,#+13
   \   00000578   0090               STR      R0,[SP, #+0]
   \   0000057A   2C23               MOVS     R3,#+44
   \   0000057C   0322               MOVS     R2,#+3
   \   0000057E   0821               MOVS     R1,#+8
   \   00000580   1A48               LDR      R0,??ZoneGraph_Paint_17+0x8  ;; 0x50a
   \   00000582   1B4C               LDR      R4,??ZoneGraph_Paint_17+0xC  ;; g_leng
   \   00000584   2468               LDR      R4,[R4, #+0]
   \   00000586   9625               MOVS     R5,#+150
   \   00000588   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   0000058A   6C43               MULS     R4,R5,R4
   \   0000058C   194D               LDR      R5,??ZoneGraph_Paint_17+0x10  ;; Speech
   \   0000058E   2C19               ADDS     R4,R5,R4
   \   00000590   2018               ADDS     R0,R4,R0
   \   00000592   ........           BL       Button
   \   00000596   02B0               ADD      SP,SP,#+8
   5319             
   5320                  }
   5321                  
   5322                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphScena) 
   \                     ??ZoneGraph_Paint_20:
   \   00000598   1248               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 25
   \   0000059A   0078               LDRB     R0,[R0, #+0]
   \   0000059C   0721               MOVS     R1,#+7
   \   0000059E   4843               MULS     R0,R1,R0
   \   000005A0   0499               LDR      R1,[SP, #+16]
   \   000005A2   0818               ADDS     R0,R1,R0
   \   000005A4   5330               ADDS     R0,R0,#+83
   \   000005A6   0078               LDRB     R0,[R0, #+0]
   \   000005A8   0928               CMP      R0,#+9
   \   000005AA   17D1               BNE      ??ZoneGraph_Paint_25
   5323                  {
   5324                    Label(Speech[g_leng].NumerSceny,0,2, 12 ,15,10,1,127,0); 
   \   000005AC   82B0               SUB      SP,SP,#+8
   \   000005AE   0020               MOVS     R0,#+0
   \   000005B0   0090               STR      R0,[SP, #+0]
   \   000005B2   7F21               MOVS     R1,#+127
   \   000005B4   0120               MOVS     R0,#+1
   \   000005B6   03B4               PUSH     {R0,R1}
   \   000005B8   0A21               MOVS     R1,#+10
   \   000005BA   0F20               MOVS     R0,#+15
   \   000005BC   03B4               PUSH     {R0,R1}
   \   000005BE   0C23               MOVS     R3,#+12
   \   000005C0   0222               MOVS     R2,#+2
   \   000005C2   0021               MOVS     R1,#+0
   \   000005C4   0C48               LDR      R0,??ZoneGraph_Paint_17+0x14  ;; 0x4fb
   \   000005C6   0A4C               LDR      R4,??ZoneGraph_Paint_17+0xC  ;; g_leng
   \   000005C8   2468               LDR      R4,[R4, #+0]
   \   000005CA   9625               MOVS     R5,#+150
   \   000005CC   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   000005CE   6C43               MULS     R4,R5,R4
   \   000005D0   084D               LDR      R5,??ZoneGraph_Paint_17+0x10  ;; Speech
   \   000005D2   2C19               ADDS     R4,R5,R4
   \   000005D4   2018               ADDS     R0,R4,R0
   \   000005D6   ........           BL       Label
   \   000005DA   06B0               ADD      SP,SP,#+24
   5325                  }
   5326                  
   5327                  
   5328                }//________________________________________________________________________
   \                     ??ZoneGraph_Paint_25:
   \   000005DC   05B0               ADD      SP,SP,#+20
   \   000005DE   F0BC               POP      {R4-R7}
   \   000005E0   01BC               POP      {R0}
   \   000005E2   0047               BX       R0               ;; return
   \                     ??ZoneGraph_Paint_17:
   \   000005E4   ........           DC32     TextToChangeLength + 25
   \   000005E8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000005EC   0A050000           DC32     0x50a
   \   000005F0   ........           DC32     g_leng
   \   000005F4   ........           DC32     Speech
   \   000005F8   FB040000           DC32     0x4fb
   5329          
   5330              
   5331          
   5332          

   \                                 In section Debug.txt, align 4, keep-with-next
   5333           void ZoneGraph_Event(_Screen* ScreenLokal)
   5334                {
   \                     ZoneGraph_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   6846               MOV      R0,SP
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0170               STRB     R1,[R0, #+0]
   5335                     char ButonClickNr=0;
   5336                  //zdarzenie typu down "X"
   5337                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   0000000A   A348               LDR      R0,??ZoneGraph_Event_0  ;; X_down
   \   0000000C   405E               LDRSH    R0,[R0, R1]
   \   0000000E   2F28               CMP      R0,#+47
   \   00000010   2EDB               BLT      ??ZoneGraph_Event_1
   \   00000012   3F28               CMP      R0,#+63
   \   00000014   2CDA               BGE      ??ZoneGraph_Event_1
   \   00000016   A148               LDR      R0,??ZoneGraph_Event_0+0x4  ;; Y_down
   \   00000018   405E               LDRSH    R0,[R0, R1]
   \   0000001A   7128               CMP      R0,#+113
   \   0000001C   28DB               BLT      ??ZoneGraph_Event_1
   \   0000001E   7F28               CMP      R0,#+127
   \   00000020   26DA               BGE      ??ZoneGraph_Event_1
   5338                  {
   5339                    //MenuPaint();
   5340                    H_line(49,114,10,0);
   \   00000022   0B00               MOVS     R3,R1
   \   00000024   0A22               MOVS     R2,#+10
   \   00000026   7221               MOVS     R1,#+114
   \   00000028   3120               MOVS     R0,#+49
   \   0000002A   ........           BL       H_line
   5341                    H_line(49,123,10,0); 
   \   0000002E   0023               MOVS     R3,#+0
   \   00000030   0A22               MOVS     R2,#+10
   \   00000032   7B21               MOVS     R1,#+123
   \   00000034   3120               MOVS     R0,#+49
   \   00000036   ........           BL       H_line
   5342                    V_line(49,114,10,0); 
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0A22               MOVS     R2,#+10
   \   0000003E   7221               MOVS     R1,#+114
   \   00000040   3120               MOVS     R0,#+49
   \   00000042   ........           BL       V_line
   5343                    V_line(58,114,10,0); 
   \   00000046   0023               MOVS     R3,#+0
   \   00000048   0A22               MOVS     R2,#+10
   \   0000004A   7221               MOVS     R1,#+114
   \   0000004C   3A20               MOVS     R0,#+58
   \   0000004E   ........           BL       V_line
   5344                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000052   9348               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   00000054   0078               LDRB     R0,[R0, #+0]
   \   00000056   0028               CMP      R0,#+0
   \   00000058   0AD1               BNE      ??ZoneGraph_Event_1
   \   0000005A   9248               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   0000005C   8021               MOVS     R1,#+128
   \   0000005E   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000060   0160               STR      R1,[R0, #+0]
   \   00000062   914A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   00000064   9148               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   00000066   03C8               LDM      R0!,{R0,R1}
   \   00000068   0023               MOVS     R3,#+0
   \   0000006A   0830               ADDS     R0,R0,#+8
   \   0000006C   5941               ADCS     R1,R1,R3
   \   0000006E   03C2               STM      R2!,{R0,R1}
   \                     ??ZoneGraph_Event_1:
   \   00000070   8F48               LDR      R0,??ZoneGraph_Event_0+0x18  ;; X_up
   \   00000072   0021               MOVS     R1,#+0
   \   00000074   405E               LDRSH    R0,[R0, R1]
   \   00000076   2F28               CMP      R0,#+47
   \   00000078   1FDB               BLT      ??ZoneGraph_Event_2
   \   0000007A   3F28               CMP      R0,#+63
   \   0000007C   1DDA               BGE      ??ZoneGraph_Event_2
   \   0000007E   8D48               LDR      R0,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   00000080   405E               LDRSH    R0,[R0, R1]
   \   00000082   7128               CMP      R0,#+113
   \   00000084   19DB               BLT      ??ZoneGraph_Event_2
   \   00000086   7F28               CMP      R0,#+127
   \   00000088   17DA               BGE      ??ZoneGraph_Event_2
   5345                    
   5346                  }
   5347            
   5348                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   5349                  {
   5350                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000008A   8548               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   0000008C   0078               LDRB     R0,[R0, #+0]
   \   0000008E   0028               CMP      R0,#+0
   \   00000090   0AD1               BNE      ??ZoneGraph_Event_3
   \   00000092   8448               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   00000094   8021               MOVS     R1,#+128
   \   00000096   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000098   0160               STR      R1,[R0, #+0]
   \   0000009A   834A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   0000009C   8348               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   0000009E   03C8               LDM      R0!,{R0,R1}
   \   000000A0   0023               MOVS     R3,#+0
   \   000000A2   0830               ADDS     R0,R0,#+8
   \   000000A4   5941               ADCS     R1,R1,R3
   \   000000A6   03C2               STM      R2!,{R0,R1}
   5351                      MenuLevel=(MenuLevel/10);
   \                     ??ZoneGraph_Event_3:
   \   000000A8   834F               LDR      R7,??ZoneGraph_Event_0+0x20  ;; TextToChangeLength
   \   000000AA   B86C               LDR      R0,[R7, #+72]
   \   000000AC   0A21               MOVS     R1,#+10
   \   000000AE   ........           BL       __aeabi_idivmod
   \   000000B2   B864               STR      R0,[R7, #+72]
   5352                      MenuPaint();
   \   000000B4   ........           BL       MenuPaint
   \   000000B8   AEE1               B        ??ZoneGraph_Event_4
   5353                  }  
   5354                  else
   5355                  {
   5356          
   5357                  
   5358                  //wybór grafiki
   5359                  char idx=0;
   \                     ??ZoneGraph_Event_2:
   \   000000BA   0C00               MOVS     R4,R1
   5360                  char click=0;
   \   000000BC   6846               MOV      R0,SP
   \   000000BE   4170               STRB     R1,[R0, #+1]
   \   000000C0   0325               MOVS     R5,#+3
   \   000000C2   3DE0               B        ??ZoneGraph_Event_5
   5361          
   5362                  for (int j=(MaxRowGr-1); j>=0; j--)
   5363                  {
   5364                    for (int i=0; i<MaxColGr; i++)
   \                     ??ZoneGraph_Event_6:
   \   000000C4   7A48               LDR      R0,??ZoneGraph_Event_0+0x18  ;; X_up
   \   000000C6   0021               MOVS     R1,#+0
   \   000000C8   405E               LDRSH    R0,[R0, R1]
   \   000000CA   1421               MOVS     R1,#+20
   \   000000CC   7143               MULS     R1,R6,R1
   \   000000CE   0A00               MOVS     R2,R1
   \   000000D0   521C               ADDS     R2,R2,#+1
   \   000000D2   8242               CMP      R2,R0
   \   000000D4   2DDA               BGE      ??ZoneGraph_Event_7
   \   000000D6   1531               ADDS     R1,R1,#+21
   \   000000D8   8842               CMP      R0,R1
   \   000000DA   2ADA               BGE      ??ZoneGraph_Event_7
   \   000000DC   7548               LDR      R0,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   000000DE   0021               MOVS     R1,#+0
   \   000000E0   405E               LDRSH    R0,[R0, R1]
   \   000000E2   1421               MOVS     R1,#+20
   \   000000E4   6943               MULS     R1,R5,R1
   \   000000E6   0A00               MOVS     R2,R1
   \   000000E8   1B32               ADDS     R2,R2,#+27
   \   000000EA   8242               CMP      R2,R0
   \   000000EC   21DA               BGE      ??ZoneGraph_Event_7
   \   000000EE   3031               ADDS     R1,R1,#+48
   \   000000F0   8842               CMP      R0,R1
   \   000000F2   1EDA               BGE      ??ZoneGraph_Event_7
   5365                    {
   5366                        
   5367                        if ((X_up>1+i*20) && (X_up<1+(i+1)*20) && (Y_up>Y_offset+j*20) && (Y_up<Y_offset+1+(j+1)*20))                    //"X"
   5368                        {
   5369          
   5370                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   000000F4   6A48               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   000000F6   0078               LDRB     R0,[R0, #+0]
   \   000000F8   0028               CMP      R0,#+0
   \   000000FA   0AD1               BNE      ??ZoneGraph_Event_8
   \   000000FC   6948               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   000000FE   8021               MOVS     R1,#+128
   \   00000100   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000102   0160               STR      R1,[R0, #+0]
   \   00000104   684A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   00000106   6948               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   00000108   03C8               LDM      R0!,{R0,R1}
   \   0000010A   0023               MOVS     R3,#+0
   \   0000010C   0830               ADDS     R0,R0,#+8
   \   0000010E   5941               ADCS     R1,R1,R3
   \   00000110   03C2               STM      R2!,{R0,R1}
   5371          
   5372                          ScreenLokal->Graph[ZoneGrapfNrClick].Type=idx;
                                                                          ^
Warning[Pe188]: enumerated type mixed with another type
   \                     ??ZoneGraph_Event_8:
   \   00000112   694F               LDR      R7,??ZoneGraph_Event_0+0x20  ;; TextToChangeLength
   \   00000114   787E               LDRB     R0,[R7, #+25]
   \   00000116   0721               MOVS     R1,#+7
   \   00000118   4843               MULS     R0,R1,R0
   \   0000011A   0299               LDR      R1,[SP, #+8]
   \   0000011C   0818               ADDS     R0,R1,R0
   \   0000011E   5330               ADDS     R0,R0,#+83
   \   00000120   2100               MOVS     R1,R4
   \   00000122   0170               STRB     R1,[R0, #+0]
   5373                          click=1;
   \   00000124   0120               MOVS     R0,#+1
   \   00000126   6946               MOV      R1,SP
   \   00000128   0200               MOVS     R2,R0
   \   0000012A   4A70               STRB     R2,[R1, #+1]
   5374                          ProgramChange=1;
   \   0000012C   3872               STRB     R0,[R7, #+8]
   5375                          MenuPaint();
   \   0000012E   ........           BL       MenuPaint
   5376                         
   5377                        }
   5378                        idx++;
   \                     ??ZoneGraph_Event_7:
   \   00000132   641C               ADDS     R4,R4,#+1
   \   00000134   2406               LSLS     R4,R4,#+24
   \   00000136   240E               LSRS     R4,R4,#+24
   5379                      
   5380                    }
   \   00000138   761C               ADDS     R6,R6,#+1
   \                     ??ZoneGraph_Event_9:
   \   0000013A   032E               CMP      R6,#+3
   \   0000013C   C2DB               BLT      ??ZoneGraph_Event_6
   \   0000013E   6D1E               SUBS     R5,R5,#+1
   \                     ??ZoneGraph_Event_5:
   \   00000140   002D               CMP      R5,#+0
   \   00000142   01D4               BMI      ??ZoneGraph_Event_10
   \   00000144   0026               MOVS     R6,#+0
   \   00000146   F8E7               B        ??ZoneGraph_Event_9
   5381                    
   5382                  }
   5383                  
   5384          
   5385            
   5386               
   5387                  if (click)
   \                     ??ZoneGraph_Event_10:
   \   00000148   5B4F               LDR      R7,??ZoneGraph_Event_0+0x20  ;; TextToChangeLength
   \   0000014A   787E               LDRB     R0,[R7, #+25]
   \   0000014C   0721               MOVS     R1,#+7
   \   0000014E   4843               MULS     R0,R1,R0
   \   00000150   0299               LDR      R1,[SP, #+8]
   \   00000152   0818               ADDS     R0,R1,R0
   \   00000154   6946               MOV      R1,SP
   \   00000156   4978               LDRB     R1,[R1, #+1]
   \   00000158   0029               CMP      R1,#+0
   \   0000015A   09D0               BEQ      ??ZoneGraph_Event_11
   5388                  {
   5389          
   5390                  
   5391                  if ((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) )
   \   0000015C   5330               ADDS     R0,R0,#+83
   \   0000015E   0078               LDRB     R0,[R0, #+0]
   \   00000160   0828               CMP      R0,#+8
   \   00000162   00D0               BEQ      .+4
   \   00000164   58E1               B        ??ZoneGraph_Event_4
   5392                  {
   5393                    ProgramChange=1;
   \   00000166   0120               MOVS     R0,#+1
   \   00000168   3872               STRB     R0,[R7, #+8]
   5394          
   5395                    MenuPaint(); 
   \   0000016A   ........           BL       MenuPaint
   \   0000016E   53E1               B        ??ZoneGraph_Event_4
   5396                  }
   5397                  
   5398                  }
   5399                  else
   5400                  {
   5401                  
   5402                 
   5403           
   5404                  //je¿eli On / Off
   5405                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff) 
   \                     ??ZoneGraph_Event_11:
   \   00000170   5330               ADDS     R0,R0,#+83
   \   00000172   0078               LDRB     R0,[R0, #+0]
   \   00000174   0B28               CMP      R0,#+11
   \   00000176   00D0               BEQ      .+4
   \   00000178   A8E0               B        ??ZoneGraph_Event_12
   5406                  {
   5407                    char txt[2];
   5408                    char Repaint=0;
   \   0000017A   0026               MOVS     R6,#+0
   \   0000017C   01AC               ADD      R4,SP,#+4
   \   0000017E   3C20               MOVS     R0,#+60
   \   00000180   2070               STRB     R0,[R4, #+0]
   5409                    txt[0]='<';txt[1]=0;
   \   00000182   3000               MOVS     R0,R6
   \   00000184   6070               STRB     R0,[R4, #+1]
   5410                    if (Button(txt,3,15,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Nr>0) ScreenLokal->Graph[ZoneGrapfNrClick].Nr--; else ScreenLokal->Graph[ZoneGrapfNrClick].Nr=NumberNeurons-1; Repaint=1;}  
   \   00000186   82B0               SUB      SP,SP,#+8
   \   00000188   0B20               MOVS     R0,#+11
   \   0000018A   0090               STR      R0,[SP, #+0]
   \   0000018C   0F23               MOVS     R3,#+15
   \   0000018E   1A00               MOVS     R2,R3
   \   00000190   0321               MOVS     R1,#+3
   \   00000192   03A8               ADD      R0,SP,#+12
   \   00000194   ........           BL       Button
   \   00000198   02B0               ADD      SP,SP,#+8
   \   0000019A   0128               CMP      R0,#+1
   \   0000019C   13D1               BNE      ??ZoneGraph_Event_13
   \   0000019E   787E               LDRB     R0,[R7, #+25]
   \   000001A0   0721               MOVS     R1,#+7
   \   000001A2   4843               MULS     R0,R1,R0
   \   000001A4   0299               LDR      R1,[SP, #+8]
   \   000001A6   0818               ADDS     R0,R1,R0
   \   000001A8   5721               MOVS     R1,#+87
   \   000001AA   415C               LDRB     R1,[R0, R1]
   \   000001AC   0029               CMP      R1,#+0
   \   000001AE   06D0               BEQ      ??ZoneGraph_Event_14
   \   000001B0   5721               MOVS     R1,#+87
   \   000001B2   0200               MOVS     R2,R0
   \   000001B4   5732               ADDS     R2,R2,#+87
   \   000001B6   1278               LDRB     R2,[R2, #+0]
   \   000001B8   521E               SUBS     R2,R2,#+1
   \   000001BA   4254               STRB     R2,[R0, R1]
   \   000001BC   02E0               B        ??ZoneGraph_Event_15
   \                     ??ZoneGraph_Event_14:
   \   000001BE   5730               ADDS     R0,R0,#+87
   \   000001C0   2221               MOVS     R1,#+34
   \   000001C2   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_15:
   \   000001C4   0126               MOVS     R6,#+1
   5411                    txt[0]='>';
   \                     ??ZoneGraph_Event_13:
   \   000001C6   3E25               MOVS     R5,#+62
   \   000001C8   2570               STRB     R5,[R4, #+0]
   5412                    if (Button(txt,45,15,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Nr+1<NumberNeurons) ScreenLokal->Graph[ZoneGrapfNrClick].Nr++; else ScreenLokal->Graph[ZoneGrapfNrClick].Nr=0; Repaint=1;} 
   \   000001CA   82B0               SUB      SP,SP,#+8
   \   000001CC   0B20               MOVS     R0,#+11
   \   000001CE   0090               STR      R0,[SP, #+0]
   \   000001D0   0F23               MOVS     R3,#+15
   \   000001D2   1A00               MOVS     R2,R3
   \   000001D4   2D21               MOVS     R1,#+45
   \   000001D6   03A8               ADD      R0,SP,#+12
   \   000001D8   ........           BL       Button
   \   000001DC   02B0               ADD      SP,SP,#+8
   \   000001DE   0128               CMP      R0,#+1
   \   000001E0   16D1               BNE      ??ZoneGraph_Event_16
   \   000001E2   787E               LDRB     R0,[R7, #+25]
   \   000001E4   0721               MOVS     R1,#+7
   \   000001E6   4843               MULS     R0,R1,R0
   \   000001E8   0299               LDR      R1,[SP, #+8]
   \   000001EA   0818               ADDS     R0,R1,R0
   \   000001EC   5721               MOVS     R1,#+87
   \   000001EE   415C               LDRB     R1,[R0, R1]
   \   000001F0   491C               ADDS     R1,R1,#+1
   \   000001F2   0904               LSLS     R1,R1,#+16
   \   000001F4   090C               LSRS     R1,R1,#+16
   \   000001F6   2329               CMP      R1,#+35
   \   000001F8   06D2               BCS      ??ZoneGraph_Event_17
   \   000001FA   5721               MOVS     R1,#+87
   \   000001FC   0200               MOVS     R2,R0
   \   000001FE   5732               ADDS     R2,R2,#+87
   \   00000200   1278               LDRB     R2,[R2, #+0]
   \   00000202   521C               ADDS     R2,R2,#+1
   \   00000204   4254               STRB     R2,[R0, R1]
   \   00000206   02E0               B        ??ZoneGraph_Event_18
   \                     ??ZoneGraph_Event_17:
   \   00000208   5730               ADDS     R0,R0,#+87
   \   0000020A   0021               MOVS     R1,#+0
   \   0000020C   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_18:
   \   0000020E   0126               MOVS     R6,#+1
   5413                   
   5414                    txt[0]='<';txt[1]=0;
   \                     ??ZoneGraph_Event_16:
   \   00000210   3C20               MOVS     R0,#+60
   \   00000212   2070               STRB     R0,[R4, #+0]
   \   00000214   0020               MOVS     R0,#+0
   \   00000216   6070               STRB     R0,[R4, #+1]
   5415                    if (Button(txt,3,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port>0) ScreenLokal->Graph[ZoneGrapfNrClick].Port--; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=NumberNeuronsPort-1; Repaint=1;}  
   \   00000218   82B0               SUB      SP,SP,#+8
   \   0000021A   0B20               MOVS     R0,#+11
   \   0000021C   0090               STR      R0,[SP, #+0]
   \   0000021E   0F23               MOVS     R3,#+15
   \   00000220   0322               MOVS     R2,#+3
   \   00000222   1100               MOVS     R1,R2
   \   00000224   03A8               ADD      R0,SP,#+12
   \   00000226   ........           BL       Button
   \   0000022A   02B0               ADD      SP,SP,#+8
   \   0000022C   0128               CMP      R0,#+1
   \   0000022E   13D1               BNE      ??ZoneGraph_Event_19
   \   00000230   787E               LDRB     R0,[R7, #+25]
   \   00000232   0721               MOVS     R1,#+7
   \   00000234   4843               MULS     R0,R1,R0
   \   00000236   0299               LDR      R1,[SP, #+8]
   \   00000238   0818               ADDS     R0,R1,R0
   \   0000023A   5821               MOVS     R1,#+88
   \   0000023C   415C               LDRB     R1,[R0, R1]
   \   0000023E   0029               CMP      R1,#+0
   \   00000240   06D0               BEQ      ??ZoneGraph_Event_20
   \   00000242   5821               MOVS     R1,#+88
   \   00000244   0200               MOVS     R2,R0
   \   00000246   5832               ADDS     R2,R2,#+88
   \   00000248   1278               LDRB     R2,[R2, #+0]
   \   0000024A   521E               SUBS     R2,R2,#+1
   \   0000024C   4254               STRB     R2,[R0, R1]
   \   0000024E   02E0               B        ??ZoneGraph_Event_21
   \                     ??ZoneGraph_Event_20:
   \   00000250   5830               ADDS     R0,R0,#+88
   \   00000252   0F21               MOVS     R1,#+15
   \   00000254   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_21:
   \   00000256   0126               MOVS     R6,#+1
   5416                    txt[0]='>';
   \                     ??ZoneGraph_Event_19:
   \   00000258   2570               STRB     R5,[R4, #+0]
   5417                    if (Button(txt,45,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port+1<NumberNeuronsPort) ScreenLokal->Graph[ZoneGrapfNrClick].Port++; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=0; Repaint=1;} 
   \   0000025A   82B0               SUB      SP,SP,#+8
   \   0000025C   0B20               MOVS     R0,#+11
   \   0000025E   0090               STR      R0,[SP, #+0]
   \   00000260   0F23               MOVS     R3,#+15
   \   00000262   0322               MOVS     R2,#+3
   \   00000264   2D21               MOVS     R1,#+45
   \   00000266   03A8               ADD      R0,SP,#+12
   \   00000268   ........           BL       Button
   \   0000026C   02B0               ADD      SP,SP,#+8
   \   0000026E   0128               CMP      R0,#+1
   \   00000270   28D1               BNE      ??ZoneGraph_Event_22
   \   00000272   787E               LDRB     R0,[R7, #+25]
   \   00000274   0721               MOVS     R1,#+7
   \   00000276   4843               MULS     R0,R1,R0
   \   00000278   0299               LDR      R1,[SP, #+8]
   \   0000027A   0818               ADDS     R0,R1,R0
   \   0000027C   5821               MOVS     R1,#+88
   \   0000027E   415C               LDRB     R1,[R0, R1]
   \   00000280   491C               ADDS     R1,R1,#+1
   \   00000282   0904               LSLS     R1,R1,#+16
   \   00000284   090C               LSRS     R1,R1,#+16
   \   00000286   1029               CMP      R1,#+16
   \   00000288   18D2               BCS      ??ZoneGraph_Event_23
   \   0000028A   5821               MOVS     R1,#+88
   \   0000028C   0200               MOVS     R2,R0
   \   0000028E   5832               ADDS     R2,R2,#+88
   \   00000290   1278               LDRB     R2,[R2, #+0]
   \   00000292   521C               ADDS     R2,R2,#+1
   \   00000294   4254               STRB     R2,[R0, R1]
   \   00000296   14E0               B        ??ZoneGraph_Event_24
   \                     ??ZoneGraph_Event_0:
   \   00000298   ........           DC32     X_down
   \   0000029C   ........           DC32     Y_down
   \   000002A0   E9D71300           DC32     0x13d7e9
   \   000002A4   30F4FFFF           DC32     0xfffff430
   \   000002A8   ........           DC32     ButtonBipCounter
   \   000002AC   ........           DC32     g_counter
   \   000002B0   ........           DC32     X_up
   \   000002B4   ........           DC32     Y_up
   \   000002B8   ........           DC32     TextToChangeLength
   \                     ??ZoneGraph_Event_23:
   \   000002BC   5830               ADDS     R0,R0,#+88
   \   000002BE   0021               MOVS     R1,#+0
   \   000002C0   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_24:
   \   000002C2   0126               MOVS     R6,#+1
   5418                      
   5419                    if (Repaint) MenuPaint(); 
   \                     ??ZoneGraph_Event_22:
   \   000002C4   002E               CMP      R6,#+0
   \   000002C6   01D0               BEQ      ??ZoneGraph_Event_12
   \   000002C8   ........           BL       MenuPaint
   5420                  } 
   5421                     
   5422                     
   5423                    if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphWartosc) 
   \                     ??ZoneGraph_Event_12:
   \   000002CC   787E               LDRB     R0,[R7, #+25]
   \   000002CE   0721               MOVS     R1,#+7
   \   000002D0   4843               MULS     R0,R1,R0
   \   000002D2   0299               LDR      R1,[SP, #+8]
   \   000002D4   0818               ADDS     R0,R1,R0
   \   000002D6   5330               ADDS     R0,R0,#+83
   \   000002D8   0078               LDRB     R0,[R0, #+0]
   \   000002DA   0A28               CMP      R0,#+10
   \   000002DC   16D1               BNE      ??ZoneGraph_Event_25
   5424                    {
   5425                       if (Button(Speech[g_leng].Zmiana,8,3,44,13)==1) ButonClickNr=1;
   \   000002DE   82B0               SUB      SP,SP,#+8
   \   000002E0   0D20               MOVS     R0,#+13
   \   000002E2   0090               STR      R0,[SP, #+0]
   \   000002E4   2C23               MOVS     R3,#+44
   \   000002E6   0322               MOVS     R2,#+3
   \   000002E8   0821               MOVS     R1,#+8
   \   000002EA   4D48               LDR      R0,??ZoneGraph_Event_26  ;; 0x50a
   \   000002EC   4D4C               LDR      R4,??ZoneGraph_Event_26+0x4  ;; g_leng
   \   000002EE   2468               LDR      R4,[R4, #+0]
   \   000002F0   9625               MOVS     R5,#+150
   \   000002F2   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   000002F4   6C43               MULS     R4,R5,R4
   \   000002F6   4C4D               LDR      R5,??ZoneGraph_Event_26+0x8  ;; Speech
   \   000002F8   2C19               ADDS     R4,R5,R4
   \   000002FA   2018               ADDS     R0,R4,R0
   \   000002FC   ........           BL       Button
   \   00000300   02B0               ADD      SP,SP,#+8
   \   00000302   0128               CMP      R0,#+1
   \   00000304   02D1               BNE      ??ZoneGraph_Event_25
   \   00000306   6846               MOV      R0,SP
   \   00000308   0121               MOVS     R1,#+1
   \   0000030A   0170               STRB     R1,[R0, #+0]
   5426                    }
   5427                    
   5428                    if ((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText))
   \                     ??ZoneGraph_Event_25:
   \   0000030C   787E               LDRB     R0,[R7, #+25]
   \   0000030E   0721               MOVS     R1,#+7
   \   00000310   4843               MULS     R0,R1,R0
   \   00000312   0299               LDR      R1,[SP, #+8]
   \   00000314   0818               ADDS     R0,R1,R0
   \   00000316   5330               ADDS     R0,R0,#+83
   \   00000318   0078               LDRB     R0,[R0, #+0]
   \   0000031A   0828               CMP      R0,#+8
   \   0000031C   4DD1               BNE      ??ZoneGraph_Event_27
   5429                    {
   5430                      if (Button("Text",2,15,25,11)==1) ButonClickNr=2;
   \   0000031E   82B0               SUB      SP,SP,#+8
   \   00000320   0B20               MOVS     R0,#+11
   \   00000322   0090               STR      R0,[SP, #+0]
   \   00000324   1923               MOVS     R3,#+25
   \   00000326   0F22               MOVS     R2,#+15
   \   00000328   0221               MOVS     R1,#+2
   \   0000032A   4048               LDR      R0,??ZoneGraph_Event_26+0xC  ;; `?<Constant {0, 0}>` + 100
   \   0000032C   ........           BL       Button
   \   00000330   02B0               ADD      SP,SP,#+8
   \   00000332   0128               CMP      R0,#+1
   \   00000334   02D1               BNE      ??ZoneGraph_Event_28
   \   00000336   6846               MOV      R0,SP
   \   00000338   0221               MOVS     R1,#+2
   \   0000033A   0170               STRB     R1,[R0, #+0]
   5431                      if (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff) 
   \                     ??ZoneGraph_Event_28:
   \   0000033C   787E               LDRB     R0,[R7, #+25]
   \   0000033E   0721               MOVS     R1,#+7
   \   00000340   4843               MULS     R0,R1,R0
   \   00000342   0299               LDR      R1,[SP, #+8]
   \   00000344   0818               ADDS     R0,R1,R0
   \   00000346   5930               ADDS     R0,R0,#+89
   \   00000348   0078               LDRB     R0,[R0, #+0]
   \   0000034A   C007               LSLS     R0,R0,#+31
   \   0000034C   82B0               SUB      SP,SP,#+8
   \   0000034E   1AD5               BPL      ??ZoneGraph_Event_29
   5432                      {
   5433                        if (Button("Off",40,3,21,11)==1) {ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff=0;
   \   00000350   0B20               MOVS     R0,#+11
   \   00000352   0090               STR      R0,[SP, #+0]
   \   00000354   1523               MOVS     R3,#+21
   \   00000356   0322               MOVS     R2,#+3
   \   00000358   2821               MOVS     R1,#+40
   \   0000035A   35A0               ADR      R0,??ZoneGraph_Event_26+0x10  ;; "Off"
   \   0000035C   ........           BL       Button
   \   00000360   02B0               ADD      SP,SP,#+8
   \   00000362   0128               CMP      R0,#+1
   \   00000364   29D1               BNE      ??ZoneGraph_Event_27
   \   00000366   787E               LDRB     R0,[R7, #+25]
   \   00000368   0721               MOVS     R1,#+7
   \   0000036A   4843               MULS     R0,R1,R0
   \   0000036C   0299               LDR      R1,[SP, #+8]
   \   0000036E   0818               ADDS     R0,R1,R0
   \   00000370   5921               MOVS     R1,#+89
   \   00000372   0200               MOVS     R2,R0
   \   00000374   5932               ADDS     R2,R2,#+89
   \   00000376   1278               LDRB     R2,[R2, #+0]
   \   00000378   FE23               MOVS     R3,#+254
   \   0000037A   1340               ANDS     R3,R3,R2
   \   0000037C   4354               STRB     R3,[R0, R1]
   5434                        ButonClickNr=3;}
   \   0000037E   6846               MOV      R0,SP
   \   00000380   0321               MOVS     R1,#+3
   \   00000382   0170               STRB     R1,[R0, #+0]
   \   00000384   19E0               B        ??ZoneGraph_Event_27
   5435                      }else{
   5436                        if (Button("On",40,3,21,11)==1) {ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff=1;
   \                     ??ZoneGraph_Event_29:
   \   00000386   0B20               MOVS     R0,#+11
   \   00000388   0090               STR      R0,[SP, #+0]
   \   0000038A   1523               MOVS     R3,#+21
   \   0000038C   0322               MOVS     R2,#+3
   \   0000038E   2821               MOVS     R1,#+40
   \   00000390   28A0               ADR      R0,??ZoneGraph_Event_26+0x14  ;; 0x4F, 0x6E, 0x00, 0x00
   \   00000392   ........           BL       Button
   \   00000396   02B0               ADD      SP,SP,#+8
   \   00000398   0128               CMP      R0,#+1
   \   0000039A   0ED1               BNE      ??ZoneGraph_Event_27
   \   0000039C   787E               LDRB     R0,[R7, #+25]
   \   0000039E   0721               MOVS     R1,#+7
   \   000003A0   4843               MULS     R0,R1,R0
   \   000003A2   0299               LDR      R1,[SP, #+8]
   \   000003A4   0818               ADDS     R0,R1,R0
   \   000003A6   5921               MOVS     R1,#+89
   \   000003A8   0200               MOVS     R2,R0
   \   000003AA   5932               ADDS     R2,R2,#+89
   \   000003AC   1278               LDRB     R2,[R2, #+0]
   \   000003AE   0123               MOVS     R3,#+1
   \   000003B0   1343               ORRS     R3,R3,R2
   \   000003B2   4354               STRB     R3,[R0, R1]
   5437                        ButonClickNr=3;}
   \   000003B4   6846               MOV      R0,SP
   \   000003B6   0321               MOVS     R1,#+3
   \   000003B8   0170               STRB     R1,[R0, #+0]
   5438                      }
   5439                    
   5440                       
   5441                    }    
   5442                    
   5443                     if (ButonClickNr==1) 
   \                     ??ZoneGraph_Event_27:
   \   000003BA   6846               MOV      R0,SP
   \   000003BC   0078               LDRB     R0,[R0, #+0]
   \   000003BE   0128               CMP      R0,#+1
   \   000003C0   0ED1               BNE      ??ZoneGraph_Event_30
   5444                        {
   5445                          ProgramChange=1;
   \   000003C2   3872               STRB     R0,[R7, #+8]
   5446                          AnalogToChange=(_Analog*)&ScreenLokal->Graph[ZoneGrapfNrClick];
   \   000003C4   787E               LDRB     R0,[R7, #+25]
   \   000003C6   0721               MOVS     R1,#+7
   \   000003C8   4843               MULS     R0,R1,R0
   \   000003CA   0299               LDR      R1,[SP, #+8]
   \   000003CC   0818               ADDS     R0,R1,R0
   \   000003CE   5330               ADDS     R0,R0,#+83
   \   000003D0   3866               STR      R0,[R7, #+96]
   5447                          MenuLevel=(MenuLevel*10+2); 
   \   000003D2   B86C               LDR      R0,[R7, #+72]
   \   000003D4   0A21               MOVS     R1,#+10
   \   000003D6   4843               MULS     R0,R1,R0
   \   000003D8   801C               ADDS     R0,R0,#+2
   \   000003DA   B864               STR      R0,[R7, #+72]
   5448                          MenuPaint(); 
   \   000003DC   ........           BL       MenuPaint
   5449                    
   5450                        }
   5451                  
   5452                      if (ButonClickNr==2) 
   \                     ??ZoneGraph_Event_30:
   \   000003E0   6846               MOV      R0,SP
   \   000003E2   0078               LDRB     R0,[R0, #+0]
   \   000003E4   0228               CMP      R0,#+2
   \   000003E6   11D1               BNE      ??ZoneGraph_Event_31
   5453                      {
   5454                        ProgramChange=1;
   \   000003E8   0120               MOVS     R0,#+1
   \   000003EA   3872               STRB     R0,[R7, #+8]
   5455                      TextToChangeLength=3;//TextToChangeMaxPixSize
   \   000003EC   0320               MOVS     R0,#+3
   \   000003EE   3870               STRB     R0,[R7, #+0]
   5456                      TextToChange=ScreenLokal->Graph[ZoneGrapfNrClick].Text;
   \   000003F0   787E               LDRB     R0,[R7, #+25]
   \   000003F2   0721               MOVS     R1,#+7
   \   000003F4   4843               MULS     R0,R1,R0
   \   000003F6   0299               LDR      R1,[SP, #+8]
   \   000003F8   0818               ADDS     R0,R1,R0
   \   000003FA   5430               ADDS     R0,R0,#+84
   \   000003FC   3865               STR      R0,[R7, #+80]
   5457                      MenuLevel=(MenuLevel*10+1); 
   \   000003FE   B86C               LDR      R0,[R7, #+72]
   \   00000400   0A21               MOVS     R1,#+10
   \   00000402   4843               MULS     R0,R1,R0
   \   00000404   401C               ADDS     R0,R0,#+1
   \   00000406   B864               STR      R0,[R7, #+72]
   5458                      MenuPaint(); 
   \   00000408   ........           BL       MenuPaint
   5459                      }
   5460                      if (ButonClickNr==3) 
   \                     ??ZoneGraph_Event_31:
   \   0000040C   6846               MOV      R0,SP
   \   0000040E   0078               LDRB     R0,[R0, #+0]
   \   00000410   0328               CMP      R0,#+3
   \   00000412   01D1               BNE      ??ZoneGraph_Event_4
   5461                      {
   5462                        MenuPaint(); 
   \   00000414   ........           BL       MenuPaint
   5463                      }
   5464                     
   5465                  
   5466                  
   5467                  }
   5468                  
   5469                  }
   5470                }//________________________________________________________________________
   \                     ??ZoneGraph_Event_4:
   \   00000418   FEBC               POP      {R1-R7}
   \   0000041A   01BC               POP      {R0}
   \   0000041C   0047               BX       R0               ;; return
   \   0000041E   C046               Nop      
   \                     ??ZoneGraph_Event_26:
   \   00000420   0A050000           DC32     0x50a
   \   00000424   ........           DC32     g_leng
   \   00000428   ........           DC32     Speech
   \   0000042C   ........           DC32     `?<Constant {0, 0}>` + 100
   \   00000430   4F666600           DC8      "Off"
   \   00000434   4F6E0000           DC8      0x4F, 0x6E, 0x00, 0x00

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0}>`:
   \   00000000   00000000           DC8 0, 0, 0, 0
   5471              
   5472          
   5473          
   5474          
   5475           
   5476           
   5477          #define MaxLetherOnScr    24 
   5478           
   5479           
   5480          char TextChangeCharNr=0;
   5481          char TextChangePoz=0;
   5482          
   5483          const char QWERTY[3][MaxLetherOnScr]={
   \                     QWERTY:
   \   00000004   414243444546       DC8 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81
   \              4748494A4B4C
   \              4D4E4F5051  
   \   00000015   525354555759       DC8 82, 83, 84, 85, 87, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104
   \              5A6162636465
   \              666768      
   \   00000024   696A6B6C6D6E       DC8 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
   \              6F7071727374
   \              75          
   \   00000031   77797A203031       DC8 119, 121, 122, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 45
   \              323334353637
   \              38392B2D    
   \   00000041   5F3C3E587822       DC8 95, 60, 62, 88, 120, 34, 127, 30, 31, 35, 36
   \              7F1E1F2324  
   \   0000004C   4F66662000         DC8 "Off "
   \   00000051   000000             DC8 0, 0, 0
   \   00000054   53636E2000         DC8 "Scn "
   \   00000059   000000             DC8 0, 0, 0
   \   0000005C   4F6E3F2000         DC8 "On? "
   \   00000061   000000             DC8 0, 0, 0
   \   00000064   5465787400         DC8 "Text"
   \   00000069   000000             DC8 0, 0, 0
   \   0000006C   56616C2000         DC8 "Val "
   \   00000071   000000             DC8 0, 0, 0
   \   00000074   2E2E2E2E2E2E       DC8 "...... "
   \              2000        
   \   0000007C   2B4F6E2F4F66       DC8 "+On/Off"
   \              6600        
   \   00000084   546578742000       DC8 "Text "
   \   0000008A   0000               DC8 0, 0
   \   0000008C   416E616C6F67       DC8 "Analog "
   \              2000        
   \   00000094   416E616C6F67       DC8 "Analog"
   \              00          
   \   0000009B   00                 DC8 0
   \   char const __data GraphTab[8][3][18]
   \                     GraphTab:
   \   0000009C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000B3   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 64, 192, 72, 208, 194, 36, 144
   \              000080C040C0
   \              48D0C22490  
   \   000000DB   908B101024C2       DC8 144, 139, 16, 16, 36, 194, 16, 8, 0, 7, 9, 14, 9, 76, 43, 15, 147
   \              10080007090E
   \              094C2B0F93  
   \   000000EC   222444202090       DC8 34, 36, 68, 32, 32, 144, 12, 35, 64, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0
   \              0C2340010000
   \              000000000100
   \              00          
   \   000000FF   000300000001       DC8 0, 3, 0, 0, 0, 1, 0, 0, 0, 252, 252, 252, 4, 252, 4, 252, 4, 252, 4
   \              000000FCFCFC
   \              04FC04FC04FC
   \              04          
   \   00000112   FC04FCFEFFFF       DC8 252, 4, 252, 254, 255, 255, 254, 252, 255, 255, 255, 0, 255, 0, 255
   \              FEFCFFFFFF00
   \              FF00FF      
   \   00000121   00FF00FF007F       DC8 0, 255, 0, 255, 0, 127, 159, 15, 15, 159, 127, 1, 1, 1, 1, 1, 1, 1
   \              9F0F0F9F7F01
   \              010101010101
   \   00000133   010101010101       DC8 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 240, 64, 128, 128, 28, 226, 193
   \              0101010000F0
   \              4080801CE2C1
   \   00000145   E171CDC3C141       DC8 225, 113, 205, 195, 193, 65, 32, 32, 32, 64, 128, 7, 8, 16, 16, 17
   \              202020408007
   \              08101011    
   \   00000155   0B0F0CC83C07       DC8 11, 15, 12, 200, 60, 7, 14, 18, 226, 4, 4, 8, 63, 0, 0, 0, 0, 0, 2
   \              0E12E2040408
   \              3F0000000000
   \              02          
   \   00000168   020302020202       DC8 2, 3, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 240, 240, 48, 48, 48, 48, 48
   \              010000000000
   \              00F0F0303030
   \              3030        
   \   0000017C   FFFFAA54A850       DC8 255, 255, 170, 84, 168, 80, 176, 240, 240, 0, 0, 255, 255, 0, 0, 0
   \              B0F0F00000FF
   \              FF000000    
   \   0000018C   0000070F1A35       DC8 0, 0, 7, 15, 26, 53, 106, 213, 170, 255, 255, 0, 0, 3, 3, 3, 3, 3
   \              6AD5AAFFFF00
   \              000303030303
   \   0000019E   030303030303       DC8 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 96, 224, 224, 184, 104, 168
   \              030303030300
   \              60E0E0B868A8
   \   000001B0   68A868A868A8       DC8 104, 168, 104, 168, 104, 168, 104, 136, 8, 8, 8, 248, 0, 1, 7, 63
   \              6888080808F8
   \              0001073F    
   \   000001C0   3E3926392639       DC8 62, 57, 38, 57, 38, 57, 38, 57, 38, 57, 38, 56, 32, 63, 0, 0, 0, 0
   \              263926392638
   \              203F00000000
   \   000001D2   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 128, 128, 0, 128
   \              000000000000
   \              000080008080
   \              0080        
   \   000001E6   00E0A0A0A020       DC8 0, 224, 160, 160, 160, 32, 32, 64, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              204080000000
   \              000000000000
   \   000001F8   000101011BFF       DC8 0, 1, 1, 1, 27, 255, 254, 0, 231, 60, 24, 255, 0, 0, 0, 0, 0, 0, 0
   \              FE00E73C18FF
   \              000000000000
   \              00          
   \   0000020B   000000000303       DC8 0, 0, 0, 0, 3, 3, 0, 3, 0, 0, 0, 128, 192, 192, 128, 128, 224, 128
   \              000300000080
   \              C0C08080E080
   \   0000021D   E080E0808080       DC8 224, 128, 224, 128, 128, 128, 128, 128, 128, 128, 0, 3, 7, 7, 3, 3
   \              808080800003
   \              07070303    
   \   0000022D   030303020202       DC8 3, 3, 3, 2, 2, 2, 14, 2, 14, 2, 14, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0E020E020E02
   \              010000000000
   \              00000000    
   \   00000243   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \                     `?<Constant {129, 0}>`:
   \   00000000   81000000           DC8 129, 0, 0, 0
   \   00000004   546865726D20       DC8 "Therm set "
   \              7365742000  
   \   0000000F   00                 DC8 0
   \   00000010   416E616C6F2E       DC8 "Analo. "
   \              2000        
   \   struct <unnamed> const __data ScreenSetTab_0[11]
   \                     ScreenSetTab_0:
   \   00000018   1E6722160030       DC8 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0, 0, 22, 40, 42, 0
   \              16352A301635
   \              000016282A00
   \   0000002A   162800000000       DC8 22, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 75, 18
   \              000000000000
   \              000000000000
   \              174B12      
   \   0000003F   181732121817       DC8 24, 23, 50, 18, 24, 23, 8, 18, 24, 0, 0, 0, 0, 0, 102, 29, 11
   \              081218000000
   \              0000661D0B  
   \   00000050   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 64, 1, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              002C40010000
   \              00000000    
   \   00000066   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 105, 34, 21, 0, 0, 22, 57, 42, 0
   \              000000001E69
   \              221500001639
   \              2A00        
   \   0000007A   163900000000       DC8 22, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000090   00000000171D       DC8 0, 0, 0, 0, 23, 29, 18, 24, 23, 4, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              121817041218
   \              000000000000
   \              0000        
   \   000000A4   000000000065       DC8 0, 0, 0, 0, 0, 101, 29, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 64, 1
   \              1D0B00000000
   \              00000000003C
   \              4001        
   \   000000B8   00000000004A       DC8 0, 0, 0, 0, 0, 74, 64, 24, 30, 62, 35, 11, 0, 0, 0, 0, 30, 105, 34
   \              40181E3E230B
   \              000000001E69
   \              22          
   \   000000CB   15001A16312A       DC8 21, 0, 26, 22, 49, 42, 26, 22, 49, 0, 0, 22, 24, 42, 0, 22, 24, 0
   \              1A1631000016
   \              182A00161800
   \   000000DD   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 51, 18, 23, 23, 27
   \              000000000000
   \              000000173312
   \              17171B      
   \   000000F2   121717001218       DC8 18, 23, 23, 0, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 29, 11
   \              000000000000
   \              000000661D0B
   \   00000104   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 64, 23, 0, 0
   \              000000000000
   \              00000000004C
   \              40170000    
   \   0000011A   000000000000       DC8 0, 0, 0, 0, 0, 0, 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0
   \              1E6722160030
   \              16352A301635
   \              00          
   \   0000012D   181E1522181E       DC8 24, 30, 21, 34, 24, 30, 21, 0, 0, 30, 21, 34, 0, 30, 21, 0, 0, 0, 0
   \              1500001E1522
   \              001E15000000
   \              00          
   \   00000140   00000000174B       DC8 0, 0, 0, 0, 23, 75, 18, 24, 23, 50, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              121817321218
   \              000000000000
   \              0000        
   \   00000154   00661D090000       DC8 0, 102, 29, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   00000168   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 22, 53, 42
   \              000000000000
   \              000000000030
   \              16352A      
   \   0000017D   30163500181E       DC8 48, 22, 53, 0, 24, 30, 21, 34, 24, 30, 21, 0, 0, 30, 21, 34, 0, 30
   \              1522181E1500
   \              001E1522001E
   \   0000018F   150000000000       DC8 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 75, 18, 24, 23, 50, 18
   \              000000000000
   \              00174B121817
   \              3212        
   \   000001A3   182D67121800       DC8 24, 45, 103, 18, 24, 0, 0, 0, 0, 15, 115, 29, 11, 15, 104, 29, 11
   \              0000000F731D
   \              0B0F681D0B  
   \   000001B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001CB   00000000001E       DC8 0, 0, 0, 0, 0, 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0
   \              672216003016
   \              352A30163500
   \   000001DD   181415161814       DC8 24, 20, 21, 22, 24, 20, 21, 44, 24, 20, 21, 0, 0, 20, 21, 22, 0, 20
   \              152C18141500
   \              001415160014
   \   000001EF   152C00141517       DC8 21, 44, 0, 20, 21, 23, 75, 18, 24, 23, 50, 18, 24
   \              4B1218173212
   \              18          
   \   000001FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 29, 11, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000661D0B
   \              000000000000
   \              0000        
   \   00000210   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000227   00004E16232A       DC8 0, 0, 78, 22, 35, 42, 78, 22, 35, 0, 39, 22, 35, 42, 39, 22, 35, 0
   \              4E1623002716
   \              232A27162300
   \   00000239   0016232A0016       DC8 0, 22, 35, 42, 0, 22, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23
   \              230000000000
   \              000000000000
   \              0017        
   \   0000024D   541218172B12       DC8 84, 18, 24, 23, 43, 18, 24, 23, 5, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              181705121800
   \              000000000000
   \              00          
   \   00000260   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000277   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 22, 26, 42, 84, 22, 26, 0, 56, 22
   \              000000005416
   \              1A2A54161A00
   \              3816        
   \   0000028B   1A2A38161A00       DC8 26, 42, 56, 22, 26, 0, 28, 22, 26, 42, 28, 22, 26, 0, 0, 22, 26, 42
   \              1C161A2A1C16
   \              1A0000161A2A
   \   0000029D   00161A000000       DC8 0, 22, 26, 0, 0, 0, 0, 23, 85, 18, 24, 23, 57, 18, 24, 23, 29, 18
   \              001755121817
   \              391218171D12
   \   000002AF   181701121800       DC8 24, 23, 1, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000002C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 103
   \              000000000000
   \              000000000000
   \              00001967    
   \   000002DA   271600000000       DC8 39, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000002F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000307   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000031E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000335   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000034C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000363   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   00000378   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000038F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003A6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003BD   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   struct <unnamed> const __data ScreenSetTab_1[8]
   \                     ScreenSetTab_1:
   \   000003E0   024A1320294A       DC8 2, 74, 19, 32, 41, 74, 19, 32, 2, 39, 19, 32, 41, 39, 19, 32, 2, 3
   \              132002271320
   \              292713200203
   \   000003F2   132029031320       DC8 19, 32, 41, 3, 19, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 80
   \              000000000000
   \              000000000000
   \              1650        
   \   00000406   1218162B1218       DC8 18, 24, 22, 43, 18, 24, 22, 9, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              160912180000
   \              000000000000
   \   00000418   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000042F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 82, 19, 24, 41, 82, 19, 24, 2, 55, 19
   \              000000025213
   \              182952131802
   \              3713        
   \   00000443   182937131802       DC8 24, 41, 55, 19, 24, 2, 29, 19, 24, 41, 29, 19, 24, 2, 3, 19, 24, 41
   \              1D1318291D13
   \              180203131829
   \   00000455   031318000000       DC8 3, 19, 24, 0, 0, 0, 0, 22, 83, 18, 24, 22, 56, 18, 24, 22, 30, 18
   \              001653121816
   \              381218161E12
   \   00000467   181604121800       DC8 24, 22, 4, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   0000047C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 84
   \              000000000000
   \              000000000000
   \              00001654    
   \   00000492   241616392416       DC8 36, 22, 22, 57, 36, 22, 22, 31, 36, 22, 22, 5, 36, 22, 0, 0, 0, 0
   \              161F24161605
   \              241600000000
   \   000004A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 83, 18, 24, 2
   \              000000000000
   \              000000000253
   \              121802      
   \   000004B9   381218021E12       DC8 56, 18, 24, 2, 30, 18, 24, 2, 4, 18, 24, 0, 0, 0, 0
   \              180204121800
   \              000000      
   \   000004C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000004DF   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000004F6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2
   \              000000000000
   \              000000000000
   \              0000000002  
   \   0000050D   531218023812       DC8 83, 18, 24, 2, 56, 18, 24, 2, 30, 18, 24, 2, 4, 18, 24, 23, 89, 35
   \              18021E121802
   \              041218175923
   \   0000051F   0B173D230B17       DC8 11, 23, 61, 35, 11, 23, 36, 35, 11, 23, 10, 35, 11, 0, 0, 0, 0
   \              24230B170A23
   \              0B00000000  
   \   00000530   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 94, 57, 12, 3
   \              000000000000
   \              00000000035E
   \              390C03      
   \   00000545   4F390C034039       DC8 79, 57, 12, 3, 64, 57, 12, 3, 49, 57, 12, 3, 34, 57, 12, 3, 19, 57
   \              0C0331390C03
   \              22390C031339
   \   00000557   0C0304390C00       DC8 12, 3, 4, 57, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000000000  
   \   00000568   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000578   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000058F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 103, 39, 22, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000196727
   \              160000000000
   \              000000      
   \   000005A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000005BB   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000005D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000005E7   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000005FE   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000615   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   00000628   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000063F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000656   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000066D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   00000680   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000697   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
   \   char const __data ButtonName[99][4]
   \                     ButtonName:
   \   000006A0   623100006232       DC8 98, 49, 0, 0, 98, 50, 0, 0, 98, 51, 0, 0, 98, 52, 0, 0, 98, 53, 0
   \              000062330000
   \              623400006235
   \              00          
   \   000006B3   006236000062       DC8 0, 98, 54, 0, 0, 98, 55, 0, 0, 98, 56, 0, 0, 98, 57, 0, 0, 98, 49
   \              370000623800
   \              006239000062
   \              31          
   \   000006C6   300062313100       DC8 48, 0, 98, 49, 49, 0, 98, 49, 50, 0, 98, 49, 51, 0, 98, 49, 52, 0
   \              623132006231
   \              330062313400
   \   000006D8   623135006231       DC8 98, 49, 53, 0, 98, 49, 54, 0, 98, 49, 55, 0, 98, 49, 56, 0, 98, 49
   \              360062313700
   \              623138006231
   \   000006EA   390062323000       DC8 57, 0, 98, 50, 48, 0, 98, 50, 49, 0, 98, 50, 50, 0, 98, 50, 51, 0
   \              623231006232
   \              320062323300
   \   000006FC   623234006232       DC8 98, 50, 52, 0, 98, 50, 53, 0, 98, 50, 54, 0, 98, 50, 55, 0, 98, 50
   \              350062323600
   \              623237006232
   \   0000070E   380062323900       DC8 56, 0, 98, 50, 57, 0, 98, 51, 48, 0, 98, 51, 49, 0, 98, 51, 50, 0
   \              623330006233
   \              310062333200
   \   00000720   623333006233       DC8 98, 51, 51, 0, 98, 51, 52, 0, 98, 51, 53, 0, 98, 51, 54, 0, 98, 51
   \              340062333500
   \              623336006233
   \   00000732   370062333800       DC8 55, 0, 98, 51, 56, 0, 98, 51, 57, 0, 98, 52, 48, 0, 98, 52, 49, 0
   \              623339006234
   \              300062343100
   \   00000744   623432006234       DC8 98, 52, 50, 0, 98, 52, 51, 0, 98, 52, 52, 0, 98, 52, 53, 0, 98, 52
   \              330062343400
   \              623435006234
   \   00000756   360062343700       DC8 54, 0, 98, 52, 55, 0, 98, 52, 56, 0, 98, 52, 57, 0, 98, 53, 48, 0
   \              623438006234
   \              390062353000
   \   00000768   623531006235       DC8 98, 53, 49, 0, 98, 53, 50, 0, 98, 53, 51, 0, 98, 53, 52, 0, 98, 53
   \              320062353300
   \              623534006235
   \   0000077A   350062353600       DC8 53, 0, 98, 53, 54, 0, 98, 53, 55, 0, 98, 53, 56, 0, 98, 53, 57, 0
   \              623537006235
   \              380062353900
   \   0000078C   623630006236       DC8 98, 54, 48, 0, 98, 54, 49, 0, 98, 54, 50, 0, 98, 54, 51, 0, 98, 54
   \              310062363200
   \              623633006236
   \   0000079E   340062363500       DC8 52, 0, 98, 54, 53, 0, 98, 54, 54, 0, 98, 54, 55, 0, 98, 54, 56, 0
   \              623636006236
   \              370062363800
   \   000007B0   623639006237       DC8 98, 54, 57, 0, 98, 55, 48, 0, 98, 55, 49, 0, 98, 55, 50, 0, 98, 55
   \              300062373100
   \              623732006237
   \   000007C2   330062373400       DC8 51, 0, 98, 55, 52, 0, 98, 55, 53, 0, 98, 55, 54, 0, 98, 55, 55, 0
   \              623735006237
   \              360062373700
   \   000007D4   623738006237       DC8 98, 55, 56, 0, 98, 55, 57, 0, 98, 56, 48, 0, 98, 56, 49, 0, 98, 56
   \              390062383000
   \              623831006238
   \   000007E6   320062383300       DC8 50, 0, 98, 56, 51, 0, 98, 56, 52, 0, 98, 56, 53, 0, 98, 56, 54, 0
   \              623834006238
   \              350062383600
   \   000007F8   623837006238       DC8 98, 56, 55, 0, 98, 56, 56, 0, 98, 56, 57, 0, 98, 57, 48, 0, 98, 57
   \              380062383900
   \              623930006239
   \   0000080A   310062393200       DC8 49, 0, 98, 57, 50, 0, 98, 57, 51, 0, 98, 57, 52, 0, 98, 57, 53, 0
   \              623933006239
   \              340062393500
   \   0000081C   623936006239       DC8 98, 57, 54, 0, 98, 57, 55, 0, 98, 57, 56, 0, 98, 57, 57, 0
   \              370062393800
   \              62393900    

   \                                 In section .rodata, align 4
   \   int const __data abc
   \                     abc:
   \   00000000   02000000           DC32 2

   \                                 In section .rodata, align 4
   \   char const __data DeyOfWeekLongStr[2][8][12]
   \                     DeyOfWeekLongStr:
   \   00000000   457200000000       DC8 69, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 111, 110, 105, 101, 100
   \              000000000000
   \              506F6E696564
   \   00000012   7A69616C656B       DC8 122, 105, 97, 108, 101, 107, 87, 116, 111, 114, 101, 107, 0, 0, 0
   \              57746F72656B
   \              000000      
   \   00000021   00000053726F       DC8 0, 0, 0, 83, 114, 111, 100, 97, 0, 0, 0, 0, 0, 0, 0, 67, 122, 119
   \              646100000000
   \              000000437A77
   \   00000033   617274656B00       DC8 97, 114, 116, 101, 107, 0, 0, 0, 0, 80, 105, 97, 116, 101, 107, 0
   \              000000506961
   \              74656B00    
   \   00000043   000000000053       DC8 0, 0, 0, 0, 0, 83, 111, 98, 111, 116, 97, 0, 0, 0, 0, 0, 0, 78, 105
   \              6F626F746100
   \              00000000004E
   \              69          
   \   00000056   65647A69656C       DC8 101, 100, 122, 105, 101, 108, 97, 0, 0, 0, 69, 114, 0, 0, 0, 0, 0
   \              610000004572
   \              0000000000  
   \   00000067   00000000004D       DC8 0, 0, 0, 0, 0, 77, 111, 110, 100, 97, 121, 0, 0, 0, 0, 0, 0, 84
   \              6F6E64617900
   \              000000000054
   \   00000079   756573646179       DC8 117, 101, 115, 100, 97, 121, 0, 0, 0, 0, 0, 87, 101, 100, 110, 101
   \              000000000057
   \              65646E65    
   \   00000089   736461790000       DC8 115, 100, 97, 121, 0, 0, 0, 84, 104, 117, 114, 115, 100, 97, 121, 0
   \              005468757273
   \              64617900    
   \   00000099   000000467269       DC8 0, 0, 0, 70, 114, 105, 100, 97, 121, 0, 0, 0, 0, 0, 0, 83, 97, 116
   \              646179000000
   \              000000536174
   \   000000AB   757264617900       DC8 117, 114, 100, 97, 121, 0, 0, 0, 0, 83, 117, 110, 100, 97, 121, 0
   \              00000053756E
   \              64617900    
   \   000000BB   0000000000         DC8 0, 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Firmware: ">`:
   \   00000000   4669726D7761       DC8 "Firmware: "
   \              72653A2000  
   \   0000000B   00                 DC8 0
   \   char const __data Logo_Ceuron[8][16]
   \                     Logo_Ceuron:
   \   0000000C   E0F87C1E0E0F       DC8 224, 248, 124, 30, 14, 15, 7, 7, 7, 7, 15, 14, 28, 124, 240, 224
   \              070707070F0E
   \              1C7CF0E0    
   \   0000001C   83C3E0F07030       DC8 131, 195, 224, 240, 112, 48, 0, 254, 254, 0, 48, 112, 240, 224, 195
   \              00FEFE003070
   \              F0E0C3      
   \   0000002B   031F9FC3C0C0       DC8 3, 31, 159, 195, 192, 192, 192, 192, 199, 199, 192, 192, 192, 192
   \              C0C0C7C7C0C0
   \              C0C0        
   \   00000039   C3DFDF1F3F71       DC8 195, 223, 223, 31, 63, 113, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96
   \              606060606060
   \              60606060    
   \   00000049   60606080C0C0       DC8 96, 96, 96, 128, 192, 192, 192, 224, 112, 56, 252, 252, 192, 128
   \              C0E07038FCFC
   \              C080        
   \   00000057   80C0E0FF3FF1       DC8 128, 192, 224, 255, 63, 241, 249, 29, 12, 12, 12, 12, 12, 13, 13
   \              F91D0C0C0C0C
   \              0C0D0D      
   \   00000066   0D0D0D1DF8F0       DC8 13, 13, 13, 29, 248, 240, 97, 99, 103, 102, 102, 102, 102, 102, 102
   \              616367666666
   \              666666      
   \   00000075   66666666E7E3       DC8 102, 102, 102, 102, 231, 227, 193, 112, 248, 248, 220, 220, 204
   \              C170F8F8DCDC
   \              CC          
   \   00000082   CCCCCCCCCECE       DC8 204, 204, 204, 204, 206, 206, 198, 199, 199, 195
   \              C6C7C7C3    

   \                                 In section .rodata, align 4
   \   struct <unnamed> const __data TouchTestSor[4]
   \                     TouchTestSor:
   \   00000000   07073A070773       DC8 7, 7, 58, 7, 7, 115, 58, 115
   \              3A73        

   \                                 In section .rodata, align 4
   \   char const __data Klepsydra[1][8]
   \                     Klepsydra:
   \   00000000   1F15110A040A       DC8 31, 21, 17, 10, 4, 10, 17, 31
   \              111F        
   5484                        {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','W','Y','Z'}, 
   5485                        {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','w','y','z'}, 
   5486                        {' ','0','1','2','3','4','5','6','7','8','9','+','-','_','<','>','X','x','"',127,30,31,35,36},
   5487                        };
   5488          
   5489          //* text- wskanik do stringa
   5490          //* MaxChar - maksymalna iloæ znaków tekstu. Maksymalnie 6. Je¿eli MaxChar=0 to domylnie MaxChar=6;
   5491          char AlfaType=0;

   \                                 In section Debug.txt, align 4, keep-with-next
   5492          void TextChange_Paint(char* text, char* MaxChar)
   5493                {  
   \                     TextChange_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   0F00               MOVS     R7,R1
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   57A0               ADR      R0,??TextChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0321               MOVS     R1,#+3
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   6C22               MOVS     R2,#+108
   \   0000001E   0121               MOVS     R1,#+1
   \   00000020   5448               LDR      R0,??TextChange_Paint_0+0x4  ;; `?<Constant {0, 0}>` + 132
   5494                  List_Paint("Text ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000022   ........           BL       List_Paint
   \   00000026   0AB0               ADD      SP,SP,#+40
   \   00000028   0024               MOVS     R4,#+0
   5495          
   5496                  char idx=0;
   5497                  char y=86;
   \   0000002A   5625               MOVS     R5,#+86
   5498          
   5499                  
   5500                  H_line(1,109,62,0);
   \   0000002C   2300               MOVS     R3,R4
   \   0000002E   3E22               MOVS     R2,#+62
   \   00000030   6D21               MOVS     R1,#+109
   \   00000032   0120               MOVS     R0,#+1
   \   00000034   ........           BL       H_line
   5501                  Label(text,0,5,100,*MaxChar,11,1,127,0); 
   \   00000038   82B0               SUB      SP,SP,#+8
   \   0000003A   2000               MOVS     R0,R4
   \   0000003C   0090               STR      R0,[SP, #+0]
   \   0000003E   7F21               MOVS     R1,#+127
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   0B21               MOVS     R1,#+11
   \   00000046   3878               LDRB     R0,[R7, #+0]
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   6423               MOVS     R3,#+100
   \   0000004C   0522               MOVS     R2,#+5
   \   0000004E   2100               MOVS     R1,R4
   \   00000050   3000               MOVS     R0,R6
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   5502                  
   5503                   for (char j=0; j<6; j++) 
   \   00000058   2000               MOVS     R0,R4
   \   0000005A   0090               STR      R0,[SP, #+0]
   \   0000005C   44E0               B        ??TextChange_Paint_1
   5504                   {
   5505                      for (char i=0; i<4; i++) 
   \                     ??TextChange_Paint_2:
   \   0000005E   2000               MOVS     R0,R4
   \   00000060   4549               LDR      R1,??TextChange_Paint_0+0x8  ;; TextToChangeLength + 30
   \   00000062   0978               LDRB     R1,[R1, #+0]
   \   00000064   1822               MOVS     R2,#+24
   \   00000066   5143               MULS     R1,R2,R1
   \   00000068   444A               LDR      R2,??TextChange_Paint_0+0xC  ;; `?<Constant {0, 0}>`
   \   0000006A   5118               ADDS     R1,R2,R1
   \   0000006C   0818               ADDS     R0,R1,R0
   \   0000006E   0079               LDRB     R0,[R0, #+4]
   \   00000070   0028               CMP      R0,#+0
   \   00000072   2BD0               BEQ      ??TextChange_Paint_3
   5506                      {
   5507                        if (QWERTY[AlfaType][idx]>0)
   5508                        {
   5509                          Rectangle(2+i*15,y,14,13);
   \   00000074   3700               MOVS     R7,R6
   \   00000076   0F20               MOVS     R0,#+15
   \   00000078   4743               MULS     R7,R0,R7
   \   0000007A   0D23               MOVS     R3,#+13
   \   0000007C   0E22               MOVS     R2,#+14
   \   0000007E   2900               MOVS     R1,R5
   \   00000080   3800               MOVS     R0,R7
   \   00000082   801C               ADDS     R0,R0,#+2
   \   00000084   0006               LSLS     R0,R0,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   ........           BL       Rectangle
   5510                          Label((char*)&QWERTY[AlfaType][idx],2,3+i*15,y+2,1,11,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   0020               MOVS     R0,#+0
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   7F21               MOVS     R1,#+127
   \   00000094   0120               MOVS     R0,#+1
   \   00000096   03B4               PUSH     {R0,R1}
   \   00000098   0B21               MOVS     R1,#+11
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   2B00               MOVS     R3,R5
   \   0000009E   9B1C               ADDS     R3,R3,#+2
   \   000000A0   FF1C               ADDS     R7,R7,#+3
   \   000000A2   3A00               MOVS     R2,R7
   \   000000A4   1206               LSLS     R2,R2,#+24
   \   000000A6   120E               LSRS     R2,R2,#+24
   \   000000A8   0221               MOVS     R1,#+2
   \   000000AA   8C46               MOV      R12,R1
   \   000000AC   2100               MOVS     R1,R4
   \   000000AE   3248               LDR      R0,??TextChange_Paint_0+0x8  ;; TextToChangeLength + 30
   \   000000B0   0078               LDRB     R0,[R0, #+0]
   \   000000B2   1827               MOVS     R7,#+24
   \   000000B4   7843               MULS     R0,R7,R0
   \   000000B6   314F               LDR      R7,??TextChange_Paint_0+0xC  ;; `?<Constant {0, 0}>`
   \   000000B8   3818               ADDS     R0,R7,R0
   \   000000BA   4018               ADDS     R0,R0,R1
   \   000000BC   001D               ADDS     R0,R0,#+4
   \   000000BE   6146               MOV      R1,R12
   \   000000C0   ........           BL       Label
   \   000000C4   06B0               ADD      SP,SP,#+24
   5511                          idx++;
   \   000000C6   641C               ADDS     R4,R4,#+1
   \   000000C8   2406               LSLS     R4,R4,#+24
   \   000000CA   240E               LSRS     R4,R4,#+24
   5512                        }
   5513                      }
   \                     ??TextChange_Paint_3:
   \   000000CC   761C               ADDS     R6,R6,#+1
   \   000000CE   3606               LSLS     R6,R6,#+24
   \   000000D0   360E               LSRS     R6,R6,#+24
   \                     ??TextChange_Paint_4:
   \   000000D2   3000               MOVS     R0,R6
   \   000000D4   0428               CMP      R0,#+4
   \   000000D6   C2D3               BCC      ??TextChange_Paint_2
   5514                      y-=14;
   \   000000D8   0E3D               SUBS     R5,R5,#+14
   \   000000DA   2D06               LSLS     R5,R5,#+24
   \   000000DC   2D0E               LSRS     R5,R5,#+24
   \   000000DE   0098               LDR      R0,[SP, #+0]
   \   000000E0   401C               ADDS     R0,R0,#+1
   \   000000E2   0006               LSLS     R0,R0,#+24
   \   000000E4   000E               LSRS     R0,R0,#+24
   \   000000E6   0090               STR      R0,[SP, #+0]
   \                     ??TextChange_Paint_1:
   \   000000E8   0098               LDR      R0,[SP, #+0]
   \   000000EA   0006               LSLS     R0,R0,#+24
   \   000000EC   000E               LSRS     R0,R0,#+24
   \   000000EE   0628               CMP      R0,#+6
   \   000000F0   01D2               BCS      ??TextChange_Paint_5
   \   000000F2   0026               MOVS     R6,#+0
   \   000000F4   EDE7               B        ??TextChange_Paint_4
   5515                   }
   5516                   
   5517                  Label("C",2,3,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??TextChange_Paint_5:
   \   000000F6   82B0               SUB      SP,SP,#+8
   \   000000F8   0120               MOVS     R0,#+1
   \   000000FA   0090               STR      R0,[SP, #+0]
   \   000000FC   7F21               MOVS     R1,#+127
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   0B21               MOVS     R1,#+11
   \   00000102   03B4               PUSH     {R0,R1}
   \   00000104   0423               MOVS     R3,#+4
   \   00000106   0322               MOVS     R2,#+3
   \   00000108   0221               MOVS     R1,#+2
   \   0000010A   1DA0               ADR      R0,??TextChange_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000010C   ........           BL       Label
   \   00000110   06B0               ADD      SP,SP,#+24
   5518                  Label("<",2,3+1*15,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000112   82B0               SUB      SP,SP,#+8
   \   00000114   0120               MOVS     R0,#+1
   \   00000116   0090               STR      R0,[SP, #+0]
   \   00000118   7F21               MOVS     R1,#+127
   \   0000011A   03B4               PUSH     {R0,R1}
   \   0000011C   0B21               MOVS     R1,#+11
   \   0000011E   03B4               PUSH     {R0,R1}
   \   00000120   0423               MOVS     R3,#+4
   \   00000122   1222               MOVS     R2,#+18
   \   00000124   0221               MOVS     R1,#+2
   \   00000126   17A0               ADR      R0,??TextChange_Paint_0+0x14  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000128   ........           BL       Label
   \   0000012C   06B0               ADD      SP,SP,#+24
   5519                  Label(">",2,3+2*15,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000012E   82B0               SUB      SP,SP,#+8
   \   00000130   0120               MOVS     R0,#+1
   \   00000132   0090               STR      R0,[SP, #+0]
   \   00000134   7F21               MOVS     R1,#+127
   \   00000136   03B4               PUSH     {R0,R1}
   \   00000138   0B21               MOVS     R1,#+11
   \   0000013A   03B4               PUSH     {R0,R1}
   \   0000013C   0423               MOVS     R3,#+4
   \   0000013E   2122               MOVS     R2,#+33
   \   00000140   0221               MOVS     R1,#+2
   \   00000142   11A0               ADR      R0,??TextChange_Paint_0+0x18  ;; 0x3E, 0x00, 0x00, 0x00
   \   00000144   ........           BL       Label
   \   00000148   06B0               ADD      SP,SP,#+24
   5520                  Label("...",2,3+3*15,4,3,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   0120               MOVS     R0,#+1
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   7F21               MOVS     R1,#+127
   \   00000152   03B4               PUSH     {R0,R1}
   \   00000154   0B21               MOVS     R1,#+11
   \   00000156   0320               MOVS     R0,#+3
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   0423               MOVS     R3,#+4
   \   0000015C   3022               MOVS     R2,#+48
   \   0000015E   0221               MOVS     R1,#+2
   \   00000160   0AA0               ADR      R0,??TextChange_Paint_0+0x1C  ;; "..."
   \   00000162   ........           BL       Label
   \   00000166   06B0               ADD      SP,SP,#+24
   5521          
   5522                  //V_line(62,98,15,1);
   5523                  //V_line(63,98,15,1);
   5524           }
   \   00000168   F8BC               POP      {R3-R7}
   \   0000016A   01BC               POP      {R0}
   \   0000016C   0047               BX       R0               ;; return
   \   0000016E   C046               Nop      
   \                     ??TextChange_Paint_0:
   \   00000170   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000174   ........           DC32     `?<Constant {0, 0}>` + 132
   \   00000178   ........           DC32     TextToChangeLength + 30
   \   0000017C   ........           DC32     `?<Constant {0, 0}>`
   \   00000180   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000184   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   00000188   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   \   0000018C   2E2E2E00           DC8      "..."
   5525                  
   5526                  

   \                                 In section Debug.txt, align 4, keep-with-next
   5527          void TextChange_Refresh(char* text, char* MaxChar)
   5528          {
   \                     TextChange_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   5529            char i=0;
   \   00000004   0027               MOVS     R7,#+0
   \   00000006   3C00               MOVS     R4,R7
   5530            char pxl=5;
   \   00000008   0525               MOVS     R5,#+5
   5531            static char count=0;
   5532            static char mig=0;
   5533            if (count<8) 
   \   0000000A   374E               LDR      R6,??TextChange_Refresh_0  ;; ??count
   \   0000000C   3078               LDRB     R0,[R6, #+0]
   \   0000000E   0828               CMP      R0,#+8
   \   00000010   02D2               BCS      ??TextChange_Refresh_1
   5534            {
   5535              count++;
   \   00000012   401C               ADDS     R0,R0,#+1
   \   00000014   3070               STRB     R0,[R6, #+0]
   \   00000016   63E0               B        ??TextChange_Refresh_2
   5536            }else{
   5537              count=0;
   \                     ??TextChange_Refresh_1:
   \   00000018   3800               MOVS     R0,R7
   \   0000001A   3070               STRB     R0,[R6, #+0]
   5538              if (mig) mig=0; else mig=1;
   \   0000001C   7078               LDRB     R0,[R6, #+1]
   \   0000001E   421E               SUBS     R2,R0,#+1
   \   00000020   9241               SBCS     R2,R2,R2
   \   00000022   D20F               LSRS     R2,R2,#+31
   \   00000024   7270               STRB     R2,[R6, #+1]
   5539              
   5540              //obliczenie d³ugoci tekstu
   5541                    char TextLength=0;
   \   00000026   02E0               B        ??TextChange_Refresh_3
   5542                    while ((TextLength<*MaxChar) && (text[TextLength]!=0)) TextLength++;
   \                     ??TextChange_Refresh_4:
   \   00000028   7F1C               ADDS     R7,R7,#+1
   \   0000002A   3F06               LSLS     R7,R7,#+24
   \   0000002C   3F0E               LSRS     R7,R7,#+24
   \                     ??TextChange_Refresh_3:
   \   0000002E   3800               MOVS     R0,R7
   \   00000030   0A78               LDRB     R2,[R1, #+0]
   \   00000032   9042               CMP      R0,R2
   \   00000034   03D2               BCS      ??TextChange_Refresh_5
   \   00000036   029A               LDR      R2,[SP, #+8]
   \   00000038   105C               LDRB     R0,[R2, R0]
   \   0000003A   0028               CMP      R0,#+0
   \   0000003C   F4D1               BNE      ??TextChange_Refresh_4
   5543              
   5544              while (((text[i]>0) || (text[i-1]>0)) && (i<=TextLength))
   \                     ??TextChange_Refresh_5:
   \   0000003E   2000               MOVS     R0,R4
   \   00000040   0299               LDR      R1,[SP, #+8]
   \   00000042   0818               ADDS     R0,R1,R0
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   0078               LDRB     R0,[R0, #+0]
   \   00000048   0028               CMP      R0,#+0
   \   0000004A   04D1               BNE      ??TextChange_Refresh_6
   \   0000004C   0098               LDR      R0,[SP, #+0]
   \   0000004E   401E               SUBS     R0,R0,#+1
   \   00000050   0078               LDRB     R0,[R0, #+0]
   \   00000052   0028               CMP      R0,#+0
   \   00000054   38D0               BEQ      ??TextChange_Refresh_7
   \                     ??TextChange_Refresh_6:
   \   00000056   3800               MOVS     R0,R7
   \   00000058   2100               MOVS     R1,R4
   \   0000005A   8842               CMP      R0,R1
   \   0000005C   34D3               BCC      ??TextChange_Refresh_7
   5545              {
   5546                if ((TextChangePoz==i) && (mig)) 
   \   0000005E   2348               LDR      R0,??TextChange_Refresh_0+0x4  ;; TextToChangeLength + 29
   \   00000060   0078               LDRB     R0,[R0, #+0]
   \   00000062   8842               CMP      R0,R1
   \   00000064   0CD1               BNE      ??TextChange_Refresh_8
   \   00000066   7078               LDRB     R0,[R6, #+1]
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   09D0               BEQ      ??TextChange_Refresh_8
   5547                {
   5548                  V_line(pxl-1,100,9,1);
   \   0000006C   0123               MOVS     R3,#+1
   \   0000006E   0922               MOVS     R2,#+9
   \   00000070   6421               MOVS     R1,#+100
   \   00000072   2800               MOVS     R0,R5
   \   00000074   401E               SUBS     R0,R0,#+1
   \   00000076   0006               LSLS     R0,R0,#+24
   \   00000078   000E               LSRS     R0,R0,#+24
   \   0000007A   ........           BL       V_line
   \   0000007E   08E0               B        ??TextChange_Refresh_9
   5549                }else{ 
   5550                  V_line(pxl-1,100,9,0);
   \                     ??TextChange_Refresh_8:
   \   00000080   0023               MOVS     R3,#+0
   \   00000082   0922               MOVS     R2,#+9
   \   00000084   6421               MOVS     R1,#+100
   \   00000086   2800               MOVS     R0,R5
   \   00000088   401E               SUBS     R0,R0,#+1
   \   0000008A   0006               LSLS     R0,R0,#+24
   \   0000008C   000E               LSRS     R0,R0,#+24
   \   0000008E   ........           BL       V_line
   5551                }
   5552                
   5553                  pxl+=Label(&text[i],0,pxl,100,1,11,1,127,0)+1; 
   \                     ??TextChange_Refresh_9:
   \   00000092   2900               MOVS     R1,R5
   \   00000094   02B5               PUSH     {R1,LR}
   \   00000096   82B0               SUB      SP,SP,#+8
   \   00000098   0020               MOVS     R0,#+0
   \   0000009A   0090               STR      R0,[SP, #+0]
   \   0000009C   7F21               MOVS     R1,#+127
   \   0000009E   0120               MOVS     R0,#+1
   \   000000A0   03B4               PUSH     {R0,R1}
   \   000000A2   0B21               MOVS     R1,#+11
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   6423               MOVS     R3,#+100
   \   000000A8   2A00               MOVS     R2,R5
   \   000000AA   0021               MOVS     R1,#+0
   \   000000AC   0898               LDR      R0,[SP, #+32]
   \   000000AE   ........           BL       Label
   \   000000B2   06B0               ADD      SP,SP,#+24
   \   000000B4   0099               LDR      R1,[SP, #0]
   \   000000B6   02B0               ADD      SP,SP,#+8
   \   000000B8   0D18               ADDS     R5,R1,R0
   \   000000BA   6D1C               ADDS     R5,R5,#+1
   \   000000BC   2D06               LSLS     R5,R5,#+24
   \   000000BE   2D0E               LSRS     R5,R5,#+24
   5554                i++;
   \   000000C0   641C               ADDS     R4,R4,#+1
   \   000000C2   2406               LSLS     R4,R4,#+24
   \   000000C4   240E               LSRS     R4,R4,#+24
   \   000000C6   BAE7               B        ??TextChange_Refresh_5
   5555              }
   5556             
   5557              V_line(62,98,15,1);
   \                     ??TextChange_Refresh_7:
   \   000000C8   0123               MOVS     R3,#+1
   \   000000CA   0F22               MOVS     R2,#+15
   \   000000CC   6221               MOVS     R1,#+98
   \   000000CE   3E20               MOVS     R0,#+62
   \   000000D0   ........           BL       V_line
   5558              V_line(63,98,15,1);
   \   000000D4   0123               MOVS     R3,#+1
   \   000000D6   0F22               MOVS     R2,#+15
   \   000000D8   6221               MOVS     R1,#+98
   \   000000DA   3F20               MOVS     R0,#+63
   \   000000DC   ........           BL       V_line
   5559            }
   5560          }
   \                     ??TextChange_Refresh_2:
   \   000000E0   FEBC               POP      {R1-R7}
   \   000000E2   01BC               POP      {R0}
   \   000000E4   0047               BX       R0               ;; return
   \   000000E6   C046               Nop      
   \                     ??TextChange_Refresh_0:
   \   000000E8   ........           DC32     ??count
   \   000000EC   ........           DC32     TextToChangeLength + 29

   \                                 In section .bss, align 1
   \                     ??count:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   5561           
   5562          

   \                                 In section .bss, align 8
   5563          long long int LastText_EventTime=0;
   \                     LastText_EventTime:
   \   00000000                      DS8 8

   \                                 In section Debug.txt, align 4, keep-with-next
   5564          void TextChange_Evant(char* text, char* MaxChar, char* MaxPix)
   5565                {  
   \                     TextChange_Evant:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   5566                  char y=86;
   \   00000004   5620               MOVS     R0,#+86
   \   00000006   0190               STR      R0,[SP, #+4]
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0170               STRB     R1,[R0, #+0]
   \   0000000E   AF48               LDR      R0,??TextChange_Evant_0  ;; X_down
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   2F28               CMP      R0,#+47
   \   00000014   2EDB               BLT      ??TextChange_Evant_1
   \   00000016   3F28               CMP      R0,#+63
   \   00000018   2CDA               BGE      ??TextChange_Evant_1
   \   0000001A   AD48               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   0000001C   405E               LDRSH    R0,[R0, R1]
   \   0000001E   7128               CMP      R0,#+113
   \   00000020   28DB               BLT      ??TextChange_Evant_1
   \   00000022   7F28               CMP      R0,#+127
   \   00000024   26DA               BGE      ??TextChange_Evant_1
   5567                  char Repaint=0;
   5568                  //zdarzenie typu down "X"
   5569                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   5570                  {
   5571                    //MenuPaint();
   5572                    H_line(49,114,10,0);
   \   00000026   0B00               MOVS     R3,R1
   \   00000028   0A22               MOVS     R2,#+10
   \   0000002A   7221               MOVS     R1,#+114
   \   0000002C   3120               MOVS     R0,#+49
   \   0000002E   ........           BL       H_line
   5573                    H_line(49,123,10,0); 
   \   00000032   0023               MOVS     R3,#+0
   \   00000034   0A22               MOVS     R2,#+10
   \   00000036   7B21               MOVS     R1,#+123
   \   00000038   3120               MOVS     R0,#+49
   \   0000003A   ........           BL       H_line
   5574                    V_line(49,114,10,0); 
   \   0000003E   0023               MOVS     R3,#+0
   \   00000040   0A22               MOVS     R2,#+10
   \   00000042   7221               MOVS     R1,#+114
   \   00000044   3120               MOVS     R0,#+49
   \   00000046   ........           BL       V_line
   5575                    V_line(58,114,10,0); 
   \   0000004A   0023               MOVS     R3,#+0
   \   0000004C   0A22               MOVS     R2,#+10
   \   0000004E   7221               MOVS     R1,#+114
   \   00000050   3A20               MOVS     R0,#+58
   \   00000052   ........           BL       V_line
   5576                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000056   9F48               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   00000058   0078               LDRB     R0,[R0, #+0]
   \   0000005A   0028               CMP      R0,#+0
   \   0000005C   0AD1               BNE      ??TextChange_Evant_1
   \   0000005E   9E48               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   00000060   8021               MOVS     R1,#+128
   \   00000062   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000064   0160               STR      R1,[R0, #+0]
   \   00000066   9D4A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   00000068   9D48               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   0000006A   03C8               LDM      R0!,{R0,R1}
   \   0000006C   0023               MOVS     R3,#+0
   \   0000006E   0830               ADDS     R0,R0,#+8
   \   00000070   5941               ADCS     R1,R1,R3
   \   00000072   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_1:
   \   00000074   9B48               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   405E               LDRSH    R0,[R0, R1]
   \   0000007A   2F28               CMP      R0,#+47
   \   0000007C   52DB               BLT      ??TextChange_Evant_2
   \   0000007E   3F28               CMP      R0,#+63
   \   00000080   50DA               BGE      ??TextChange_Evant_2
   \   00000082   9948               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   00000084   405E               LDRSH    R0,[R0, R1]
   \   00000086   7128               CMP      R0,#+113
   \   00000088   4CDB               BLT      ??TextChange_Evant_2
   \   0000008A   7F28               CMP      R0,#+127
   \   0000008C   4ADA               BGE      ??TextChange_Evant_2
   5577                    
   5578                  }
   5579            
   5580                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   5581                  {
   5582                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000008E   9148               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   00000090   0078               LDRB     R0,[R0, #+0]
   \   00000092   0028               CMP      R0,#+0
   \   00000094   0AD1               BNE      ??TextChange_Evant_3
   \   00000096   9048               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   00000098   8021               MOVS     R1,#+128
   \   0000009A   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000009C   0160               STR      R1,[R0, #+0]
   \   0000009E   8F4A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   000000A0   8F48               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   000000A2   03C8               LDM      R0!,{R0,R1}
   \   000000A4   0023               MOVS     R3,#+0
   \   000000A6   0830               ADDS     R0,R0,#+8
   \   000000A8   5941               ADCS     R1,R1,R3
   \   000000AA   03C2               STM      R2!,{R0,R1}
   5583          
   5584                    char LastChar=0;
   \                     ??TextChange_Evant_3:
   \   000000AC   0020               MOVS     R0,#+0
   5585                    for (char i=0; i<*MaxChar; i++) if ((text[i]>=30) &&  (text[i]<=129) && (text[i]!=32)) LastChar=i;
   \   000000AE   0100               MOVS     R1,R0
   \   000000B0   0DE0               B        ??TextChange_Evant_4
   \                     ??TextChange_Evant_5:
   \   000000B2   069B               LDR      R3,[SP, #+24]
   \   000000B4   9A18               ADDS     R2,R3,R2
   \   000000B6   1378               LDRB     R3,[R2, #+0]
   \   000000B8   1E2B               CMP      R3,#+30
   \   000000BA   05D3               BCC      ??TextChange_Evant_6
   \   000000BC   822B               CMP      R3,#+130
   \   000000BE   03D2               BCS      ??TextChange_Evant_6
   \   000000C0   1A00               MOVS     R2,R3
   \   000000C2   202A               CMP      R2,#+32
   \   000000C4   00D0               BEQ      ??TextChange_Evant_6
   \   000000C6   0800               MOVS     R0,R1
   \                     ??TextChange_Evant_6:
   \   000000C8   491C               ADDS     R1,R1,#+1
   \   000000CA   0906               LSLS     R1,R1,#+24
   \   000000CC   090E               LSRS     R1,R1,#+24
   \                     ??TextChange_Evant_4:
   \   000000CE   0A00               MOVS     R2,R1
   \   000000D0   079B               LDR      R3,[SP, #+28]
   \   000000D2   1B78               LDRB     R3,[R3, #+0]
   \   000000D4   9A42               CMP      R2,R3
   \   000000D6   ECD3               BCC      ??TextChange_Evant_5
   5586                    for (char i=LastChar+1; i<*MaxChar; i++) text[i]=0;
   \   000000D8   401C               ADDS     R0,R0,#+1
   \   000000DA   0006               LSLS     R0,R0,#+24
   \   000000DC   000E               LSRS     R0,R0,#+24
   \   000000DE   0023               MOVS     R3,#+0
   \   000000E0   04E0               B        ??TextChange_Evant_7
   \                     ??TextChange_Evant_8:
   \   000000E2   069A               LDR      R2,[SP, #+24]
   \   000000E4   5354               STRB     R3,[R2, R1]
   \   000000E6   401C               ADDS     R0,R0,#+1
   \   000000E8   0006               LSLS     R0,R0,#+24
   \   000000EA   000E               LSRS     R0,R0,#+24
   \                     ??TextChange_Evant_7:
   \   000000EC   0100               MOVS     R1,R0
   \   000000EE   079A               LDR      R2,[SP, #+28]
   \   000000F0   1278               LDRB     R2,[R2, #+0]
   \   000000F2   9142               CMP      R1,R2
   \   000000F4   F5D3               BCC      ??TextChange_Evant_8
   5587          
   5588                    TextChangeCharNr=0;
   \   000000F6   7D4C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   000000F8   1800               MOVS     R0,R3
   \   000000FA   2077               STRB     R0,[R4, #+28]
   5589                    TextChangePoz=0;
   \   000000FC   6077               STRB     R0,[R4, #+29]
   5590                    TextToChangeMaxPixSize=0;
   \   000000FE   6070               STRB     R0,[R4, #+1]
   5591                    MaxChar=0;
   5592                    Rej_poz=0;
   \   00000100   E064               STR      R0,[R4, #+76]
   5593                    
   5594                    MenuLevel=(MenuLevel/10);
   \   00000102   A06C               LDR      R0,[R4, #+72]
   \   00000104   0A21               MOVS     R1,#+10
   \   00000106   ........           BL       __aeabi_idivmod
   \   0000010A   A064               STR      R0,[R4, #+72]
   5595                    MenuPaint();
   \   0000010C   ........           BL       MenuPaint
   5596                  }  
   5597                  else
   5598                  {
   5599                    Label("<",2,3+1*15,4,1,11,1,127,1);
   5600                    
   5601                    if ((X_up>3) && (X_up<62) && (Y_up>4) &&  (Y_up<108)) Repaint=1;
   5602                    
   5603                    //przyciski funkcyjne
   5604                    char FunkButt=0;
   5605                    for (char i=0; i<4; i++)
   5606                    {
   5607                      if ((X_down>3+i*15) && (X_down<3+i*15+15) && (Y_down>4) &&  (Y_down<4+9)) 
   5608                      {
   5609                        MenuPaint();
   5610                        Rectangle(2+i*15,3,14,11);
   5611                        
   5612                      }
   5613                      
   5614                      if ((X_up>3+i*15) && (X_up<3+i*15+15) && (Y_up>4) &&  (Y_up<4+9))
   5615                      {
   5616                        FunkButt=i+1;
   5617                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe068]: integer conversion resulted in a change of sign
   5618                      }
   5619                    }
   5620                    
   5621                    //obliczenie d³ugoci tekstu
   5622                    char TextLength=0;
   5623                    while ((TextLength<*MaxChar) && (text[TextLength]!=0)) TextLength++;
   5624          
   5625                    
   5626                     //przycisk zmiany alfabetu
   5627                    if ((FunkButt==1) && (TextChangePoz>0)) 
   5628                    {
   5629                      for (char i=TextChangePoz; i<TextLength; i++)  text[i-1]=text[i];
   5630                      TextChangePoz--;
   5631                      TextLength--;
   5632                      text[TextLength]=0;  
   5633                      Repaint=1;
   5634                    }
   5635                    if (FunkButt==2) {if (TextChangePoz>0) {TextChangePoz--;} Repaint=1;}
   5636                    if (FunkButt==3) {if (TextChangePoz<TextLength) {TextChangePoz++;} Repaint=1;}
   5637                    if (FunkButt==4) {if (AlfaType<2) AlfaType++; else AlfaType=0; Repaint=1;}
   5638                    
   5639          
   5640                   char idx=0;
   5641                    for (char j=0; j<6; j++) 
   5642                   {
   5643                      for (char i=0; i<4; i++) 
   5644                      {
   5645                        if (QWERTY[AlfaType][idx]>0)
   5646                        {
   5647                          if ((X_down>3+i*15) && (X_down<3+i*15+15) && (Y_down>y) &&  (Y_down<y+13))
   5648                          {
   5649                            MenuPaint();
   5650                            Label((char*)&QWERTY[AlfaType][idx],2,3+i*15,y+2,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   5651                          }
   5652                          if ((X_up>3+i*15) && (X_up<3+i*15+15) && (Y_up>y) &&  (Y_up<y+13)) 
   5653                          {
   5654                            if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                         ^
Warning[Pe068]: integer conversion resulted in a change of sign
   5655                            if (TextChangePoz<*MaxChar)
   5656                            {
   5657                               if ((*MaxPix==0) || ((LabelLength(text,*MaxChar)+LabelLength((char*)&(QWERTY[AlfaType][idx]),1))<*MaxPix ))
   5658                               {
   5659                                text[TextChangePoz]=QWERTY[AlfaType][idx];
   5660                                TextChangePoz++;
   5661                                if ((TextChangePoz==1) && (text[TextChangePoz]==0)) AlfaType=1;
   5662                               }else{
   5663                                if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+200;} 
                                                                                                             ^
Warning[Pe068]: integer conversion resulted in a change of sign
   5664                               }
   5665                            }else{
   5666                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+200;} 
                                                                                                          ^
Warning[Pe068]: integer conversion resulted in a change of sign
   5667                            }
   5668                             
   5669                            char AT=1;
   5670                            //for (char AT=0; AT<3; AT++)
   5671                            //{
   5672                                for (char i=0; i<MaxLetherOnScr; i++)
   5673                                {
   5674                                  if (text[TextChangePoz]==QWERTY[AT][i]) AlfaType=AT; 
   5675                                }
   5676                            //}
   5677                            
   5678                            Repaint=1;
   5679                          }
   5680                          idx++;
   5681                        }
   5682                      }
   5683                      y-=14;
   5684                   }
   5685                    
   5686                    
   5687                    
   5688                   
   5689                    
   5690          
   5691                    
   5692                  }
   5693                  
   5694                  
   5695                  if (Repaint) MenuPaint();
   \                     ??TextChange_Evant_9:
   \   00000110   6846               MOV      R0,SP
   \   00000112   0078               LDRB     R0,[R0, #+0]
   \   00000114   0028               CMP      R0,#+0
   \   00000116   01D0               BEQ      ??TextChange_Evant_10
   \   00000118   ........           BL       MenuPaint
   5696                  
   5697                }
   \                     ??TextChange_Evant_10:
   \   0000011C   09B0               ADD      SP,SP,#+36
   \   0000011E   F0BC               POP      {R4-R7}
   \   00000120   01BC               POP      {R0}
   \   00000122   0047               BX       R0               ;; return
   \                     ??TextChange_Evant_2:
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0120               MOVS     R0,#+1
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   7F21               MOVS     R1,#+127
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   0B21               MOVS     R1,#+11
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   0423               MOVS     R3,#+4
   \   00000134   1222               MOVS     R2,#+18
   \   00000136   0221               MOVS     R1,#+2
   \   00000138   6DA0               ADR      R0,??TextChange_Evant_0+0x24  ;; 0x3C, 0x00, 0x00, 0x00
   \   0000013A   ........           BL       Label
   \   0000013E   06B0               ADD      SP,SP,#+24
   \   00000140   6848               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   00000142   0021               MOVS     R1,#+0
   \   00000144   405E               LDRSH    R0,[R0, R1]
   \   00000146   0428               CMP      R0,#+4
   \   00000148   0ADB               BLT      ??TextChange_Evant_11
   \   0000014A   3E28               CMP      R0,#+62
   \   0000014C   08DA               BGE      ??TextChange_Evant_11
   \   0000014E   6648               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   00000150   405E               LDRSH    R0,[R0, R1]
   \   00000152   0528               CMP      R0,#+5
   \   00000154   04DB               BLT      ??TextChange_Evant_11
   \   00000156   6C28               CMP      R0,#+108
   \   00000158   02DA               BGE      ??TextChange_Evant_11
   \   0000015A   6846               MOV      R0,SP
   \   0000015C   0121               MOVS     R1,#+1
   \   0000015E   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_11:
   \   00000160   0025               MOVS     R5,#+0
   \   00000162   2C00               MOVS     R4,R5
   \   00000164   43E0               B        ??TextChange_Evant_12
   \                     ??TextChange_Evant_13:
   \   00000166   2600               MOVS     R6,R4
   \   00000168   0F20               MOVS     R0,#+15
   \   0000016A   4643               MULS     R6,R0,R6
   \   0000016C   3700               MOVS     R7,R6
   \   0000016E   FF1C               ADDS     R7,R7,#+3
   \   00000170   5648               LDR      R0,??TextChange_Evant_0  ;; X_down
   \   00000172   0021               MOVS     R1,#+0
   \   00000174   415E               LDRSH    R1,[R0, R1]
   \   00000176   8F42               CMP      R7,R1
   \   00000178   15DA               BGE      ??TextChange_Evant_14
   \   0000017A   3000               MOVS     R0,R6
   \   0000017C   1230               ADDS     R0,R0,#+18
   \   0000017E   8142               CMP      R1,R0
   \   00000180   11DA               BGE      ??TextChange_Evant_14
   \   00000182   5348               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   00000184   0021               MOVS     R1,#+0
   \   00000186   405E               LDRSH    R0,[R0, R1]
   \   00000188   0528               CMP      R0,#+5
   \   0000018A   0CDB               BLT      ??TextChange_Evant_14
   \   0000018C   0D28               CMP      R0,#+13
   \   0000018E   0ADA               BGE      ??TextChange_Evant_14
   \   00000190   ........           BL       MenuPaint
   \   00000194   0B23               MOVS     R3,#+11
   \   00000196   0E22               MOVS     R2,#+14
   \   00000198   0321               MOVS     R1,#+3
   \   0000019A   3000               MOVS     R0,R6
   \   0000019C   801C               ADDS     R0,R0,#+2
   \   0000019E   0006               LSLS     R0,R0,#+24
   \   000001A0   000E               LSRS     R0,R0,#+24
   \   000001A2   ........           BL       Rectangle
   \                     ??TextChange_Evant_14:
   \   000001A6   4F48               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   000001A8   0021               MOVS     R1,#+0
   \   000001AA   405E               LDRSH    R0,[R0, R1]
   \   000001AC   8742               CMP      R7,R0
   \   000001AE   1BDA               BGE      ??TextChange_Evant_15
   \   000001B0   1236               ADDS     R6,R6,#+18
   \   000001B2   B042               CMP      R0,R6
   \   000001B4   18DA               BGE      ??TextChange_Evant_15
   \   000001B6   4C48               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   000001B8   405E               LDRSH    R0,[R0, R1]
   \   000001BA   0528               CMP      R0,#+5
   \   000001BC   14DB               BLT      ??TextChange_Evant_15
   \   000001BE   0D28               CMP      R0,#+13
   \   000001C0   12DA               BGE      ??TextChange_Evant_15
   \   000001C2   2500               MOVS     R5,R4
   \   000001C4   6D1C               ADDS     R5,R5,#+1
   \   000001C6   2D06               LSLS     R5,R5,#+24
   \   000001C8   2D0E               LSRS     R5,R5,#+24
   \   000001CA   4248               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   000001CC   0078               LDRB     R0,[R0, #+0]
   \   000001CE   0028               CMP      R0,#+0
   \   000001D0   0AD1               BNE      ??TextChange_Evant_15
   \   000001D2   4148               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   000001D4   8021               MOVS     R1,#+128
   \   000001D6   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000001D8   0160               STR      R1,[R0, #+0]
   \   000001DA   404A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   000001DC   4048               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   000001DE   03C8               LDM      R0!,{R0,R1}
   \   000001E0   0023               MOVS     R3,#+0
   \   000001E2   0830               ADDS     R0,R0,#+8
   \   000001E4   5941               ADCS     R1,R1,R3
   \   000001E6   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_15:
   \   000001E8   641C               ADDS     R4,R4,#+1
   \   000001EA   2406               LSLS     R4,R4,#+24
   \   000001EC   240E               LSRS     R4,R4,#+24
   \                     ??TextChange_Evant_12:
   \   000001EE   2000               MOVS     R0,R4
   \   000001F0   0428               CMP      R0,#+4
   \   000001F2   B8D3               BCC      ??TextChange_Evant_13
   \   000001F4   0020               MOVS     R0,#+0
   \   000001F6   02E0               B        ??TextChange_Evant_16
   \                     ??TextChange_Evant_17:
   \   000001F8   401C               ADDS     R0,R0,#+1
   \   000001FA   0006               LSLS     R0,R0,#+24
   \   000001FC   000E               LSRS     R0,R0,#+24
   \                     ??TextChange_Evant_16:
   \   000001FE   0100               MOVS     R1,R0
   \   00000200   079A               LDR      R2,[SP, #+28]
   \   00000202   1278               LDRB     R2,[R2, #+0]
   \   00000204   9142               CMP      R1,R2
   \   00000206   03D2               BCS      ??TextChange_Evant_18
   \   00000208   069A               LDR      R2,[SP, #+24]
   \   0000020A   515C               LDRB     R1,[R2, R1]
   \   0000020C   0029               CMP      R1,#+0
   \   0000020E   F3D1               BNE      ??TextChange_Evant_17
   \                     ??TextChange_Evant_18:
   \   00000210   2900               MOVS     R1,R5
   \   00000212   0129               CMP      R1,#+1
   \   00000214   1DD1               BNE      ??TextChange_Evant_19
   \   00000216   354C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   00000218   617F               LDRB     R1,[R4, #+29]
   \   0000021A   0029               CMP      R1,#+0
   \   0000021C   19D0               BEQ      ??TextChange_Evant_19
   \   0000021E   07E0               B        ??TextChange_Evant_20
   \                     ??TextChange_Evant_21:
   \   00000220   069B               LDR      R3,[SP, #+24]
   \   00000222   9A18               ADDS     R2,R3,R2
   \   00000224   531E               SUBS     R3,R2,#+1
   \   00000226   1278               LDRB     R2,[R2, #+0]
   \   00000228   1A70               STRB     R2,[R3, #+0]
   \   0000022A   491C               ADDS     R1,R1,#+1
   \   0000022C   0906               LSLS     R1,R1,#+24
   \   0000022E   090E               LSRS     R1,R1,#+24
   \                     ??TextChange_Evant_20:
   \   00000230   0A00               MOVS     R2,R1
   \   00000232   0300               MOVS     R3,R0
   \   00000234   9A42               CMP      R2,R3
   \   00000236   F3D3               BCC      ??TextChange_Evant_21
   \   00000238   617F               LDRB     R1,[R4, #+29]
   \   0000023A   491E               SUBS     R1,R1,#+1
   \   0000023C   6177               STRB     R1,[R4, #+29]
   \   0000023E   401E               SUBS     R0,R0,#+1
   \   00000240   0006               LSLS     R0,R0,#+24
   \   00000242   000E               LSRS     R0,R0,#+24
   \   00000244   0100               MOVS     R1,R0
   \   00000246   069A               LDR      R2,[SP, #+24]
   \   00000248   0023               MOVS     R3,#+0
   \   0000024A   5354               STRB     R3,[R2, R1]
   \   0000024C   6946               MOV      R1,SP
   \   0000024E   0122               MOVS     R2,#+1
   \   00000250   0A70               STRB     R2,[R1, #+0]
   \                     ??TextChange_Evant_19:
   \   00000252   2900               MOVS     R1,R5
   \   00000254   0229               CMP      R1,#+2
   \   00000256   08D1               BNE      ??TextChange_Evant_22
   \   00000258   244C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   0000025A   617F               LDRB     R1,[R4, #+29]
   \   0000025C   0029               CMP      R1,#+0
   \   0000025E   01D0               BEQ      ??TextChange_Evant_23
   \   00000260   491E               SUBS     R1,R1,#+1
   \   00000262   6177               STRB     R1,[R4, #+29]
   \                     ??TextChange_Evant_23:
   \   00000264   6946               MOV      R1,SP
   \   00000266   0122               MOVS     R2,#+1
   \   00000268   0A70               STRB     R2,[R1, #+0]
   \                     ??TextChange_Evant_22:
   \   0000026A   2900               MOVS     R1,R5
   \   0000026C   0329               CMP      R1,#+3
   \   0000026E   08D1               BNE      ??TextChange_Evant_24
   \   00000270   1E4C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   00000272   617F               LDRB     R1,[R4, #+29]
   \   00000274   8142               CMP      R1,R0
   \   00000276   01D2               BCS      ??TextChange_Evant_25
   \   00000278   491C               ADDS     R1,R1,#+1
   \   0000027A   6177               STRB     R1,[R4, #+29]
   \                     ??TextChange_Evant_25:
   \   0000027C   6846               MOV      R0,SP
   \   0000027E   0121               MOVS     R1,#+1
   \   00000280   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_24:
   \   00000282   042D               CMP      R5,#+4
   \   00000284   0BD1               BNE      ??TextChange_Evant_26
   \   00000286   194C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   00000288   A07F               LDRB     R0,[R4, #+30]
   \   0000028A   0228               CMP      R0,#+2
   \   0000028C   02D2               BCS      ??TextChange_Evant_27
   \   0000028E   401C               ADDS     R0,R0,#+1
   \   00000290   A077               STRB     R0,[R4, #+30]
   \   00000292   01E0               B        ??TextChange_Evant_28
   \                     ??TextChange_Evant_27:
   \   00000294   0020               MOVS     R0,#+0
   \   00000296   A077               STRB     R0,[R4, #+30]
   \                     ??TextChange_Evant_28:
   \   00000298   6846               MOV      R0,SP
   \   0000029A   0121               MOVS     R1,#+1
   \   0000029C   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_26:
   \   0000029E   0020               MOVS     R0,#+0
   \   000002A0   0490               STR      R0,[SP, #+16]
   \   000002A2   0590               STR      R0,[SP, #+20]
   \   000002A4   09E0               B        ??TextChange_Evant_29
   \                     ??TextChange_Evant_30:
   \   000002A6   0198               LDR      R0,[SP, #+4]
   \   000002A8   0E38               SUBS     R0,R0,#+14
   \   000002AA   0006               LSLS     R0,R0,#+24
   \   000002AC   000E               LSRS     R0,R0,#+24
   \   000002AE   0190               STR      R0,[SP, #+4]
   \   000002B0   0598               LDR      R0,[SP, #+20]
   \   000002B2   401C               ADDS     R0,R0,#+1
   \   000002B4   0006               LSLS     R0,R0,#+24
   \   000002B6   000E               LSRS     R0,R0,#+24
   \   000002B8   0590               STR      R0,[SP, #+20]
   \                     ??TextChange_Evant_29:
   \   000002BA   0598               LDR      R0,[SP, #+20]
   \   000002BC   0006               LSLS     R0,R0,#+24
   \   000002BE   000E               LSRS     R0,R0,#+24
   \   000002C0   0628               CMP      R0,#+6
   \   000002C2   00D3               BCC      .+4
   \   000002C4   24E7               B        ??TextChange_Evant_9
   \   000002C6   0020               MOVS     R0,#+0
   \   000002C8   0390               STR      R0,[SP, #+12]
   \   000002CA   31E0               B        ??TextChange_Evant_31
   \                     ??TextChange_Evant_0:
   \   000002CC   ........           DC32     X_down
   \   000002D0   ........           DC32     Y_down
   \   000002D4   E9D71300           DC32     0x13d7e9
   \   000002D8   30F4FFFF           DC32     0xfffff430
   \   000002DC   ........           DC32     ButtonBipCounter
   \   000002E0   ........           DC32     g_counter
   \   000002E4   ........           DC32     X_up
   \   000002E8   ........           DC32     Y_up
   \   000002EC   ........           DC32     TextToChangeLength
   \   000002F0   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \                     ??TextChange_Evant_32:
   \   000002F4   617F               LDRB     R1,[R4, #+29]
   \   000002F6   069A               LDR      R2,[SP, #+24]
   \   000002F8   515C               LDRB     R1,[R2, R1]
   \   000002FA   0200               MOVS     R2,R0
   \   000002FC   684B               LDR      R3,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   000002FE   9A18               ADDS     R2,R3,R2
   \   00000300   127F               LDRB     R2,[R2, #+28]
   \   00000302   9142               CMP      R1,R2
   \   00000304   01D1               BNE      ??TextChange_Evant_34
   \   00000306   0121               MOVS     R1,#+1
   \   00000308   A177               STRB     R1,[R4, #+30]
   \                     ??TextChange_Evant_34:
   \   0000030A   401C               ADDS     R0,R0,#+1
   \   0000030C   0006               LSLS     R0,R0,#+24
   \   0000030E   000E               LSRS     R0,R0,#+24
   \                     ??TextChange_Evant_35:
   \   00000310   0100               MOVS     R1,R0
   \   00000312   1829               CMP      R1,#+24
   \   00000314   EED3               BCC      ??TextChange_Evant_32
   \   00000316   6846               MOV      R0,SP
   \   00000318   0121               MOVS     R1,#+1
   \   0000031A   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_36:
   \   0000031C   0498               LDR      R0,[SP, #+16]
   \   0000031E   401C               ADDS     R0,R0,#+1
   \   00000320   0006               LSLS     R0,R0,#+24
   \   00000322   000E               LSRS     R0,R0,#+24
   \   00000324   0490               STR      R0,[SP, #+16]
   \                     ??TextChange_Evant_37:
   \   00000326   0398               LDR      R0,[SP, #+12]
   \   00000328   401C               ADDS     R0,R0,#+1
   \   0000032A   0006               LSLS     R0,R0,#+24
   \   0000032C   000E               LSRS     R0,R0,#+24
   \   0000032E   0390               STR      R0,[SP, #+12]
   \                     ??TextChange_Evant_31:
   \   00000330   0398               LDR      R0,[SP, #+12]
   \   00000332   0006               LSLS     R0,R0,#+24
   \   00000334   000E               LSRS     R0,R0,#+24
   \   00000336   0428               CMP      R0,#+4
   \   00000338   B5D2               BCS      ??TextChange_Evant_30
   \   0000033A   0498               LDR      R0,[SP, #+16]
   \   0000033C   0006               LSLS     R0,R0,#+24
   \   0000033E   000E               LSRS     R0,R0,#+24
   \   00000340   0290               STR      R0,[SP, #+8]
   \   00000342   584C               LDR      R4,??TextChange_Evant_33+0x4  ;; TextToChangeLength
   \   00000344   A17F               LDRB     R1,[R4, #+30]
   \   00000346   1822               MOVS     R2,#+24
   \   00000348   5143               MULS     R1,R2,R1
   \   0000034A   554A               LDR      R2,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   0000034C   5118               ADDS     R1,R2,R1
   \   0000034E   0818               ADDS     R0,R1,R0
   \   00000350   0079               LDRB     R0,[R0, #+4]
   \   00000352   0028               CMP      R0,#+0
   \   00000354   E7D0               BEQ      ??TextChange_Evant_37
   \   00000356   039D               LDR      R5,[SP, #+12]
   \   00000358   2D06               LSLS     R5,R5,#+24
   \   0000035A   2D0E               LSRS     R5,R5,#+24
   \   0000035C   0F20               MOVS     R0,#+15
   \   0000035E   4543               MULS     R5,R0,R5
   \   00000360   2E00               MOVS     R6,R5
   \   00000362   F61C               ADDS     R6,R6,#+3
   \   00000364   5048               LDR      R0,??TextChange_Evant_33+0x8  ;; X_down
   \   00000366   0021               MOVS     R1,#+0
   \   00000368   415E               LDRSH    R1,[R0, R1]
   \   0000036A   8E42               CMP      R6,R1
   \   0000036C   2EDA               BGE      ??TextChange_Evant_38
   \   0000036E   2800               MOVS     R0,R5
   \   00000370   1230               ADDS     R0,R0,#+18
   \   00000372   8142               CMP      R1,R0
   \   00000374   2ADA               BGE      ??TextChange_Evant_38
   \   00000376   4D48               LDR      R0,??TextChange_Evant_33+0xC  ;; Y_down
   \   00000378   0021               MOVS     R1,#+0
   \   0000037A   415E               LDRSH    R1,[R0, R1]
   \   0000037C   0198               LDR      R0,[SP, #+4]
   \   0000037E   0006               LSLS     R0,R0,#+24
   \   00000380   000E               LSRS     R0,R0,#+24
   \   00000382   8842               CMP      R0,R1
   \   00000384   22DA               BGE      ??TextChange_Evant_38
   \   00000386   019F               LDR      R7,[SP, #+4]
   \   00000388   3F06               LSLS     R7,R7,#+24
   \   0000038A   3F0E               LSRS     R7,R7,#+24
   \   0000038C   3800               MOVS     R0,R7
   \   0000038E   0D30               ADDS     R0,R0,#+13
   \   00000390   8142               CMP      R1,R0
   \   00000392   1BDA               BGE      ??TextChange_Evant_38
   \   00000394   ........           BL       MenuPaint
   \   00000398   82B0               SUB      SP,SP,#+8
   \   0000039A   0120               MOVS     R0,#+1
   \   0000039C   0090               STR      R0,[SP, #+0]
   \   0000039E   7F21               MOVS     R1,#+127
   \   000003A0   03B4               PUSH     {R0,R1}
   \   000003A2   0B21               MOVS     R1,#+11
   \   000003A4   03B4               PUSH     {R0,R1}
   \   000003A6   BF1C               ADDS     R7,R7,#+2
   \   000003A8   3B00               MOVS     R3,R7
   \   000003AA   3200               MOVS     R2,R6
   \   000003AC   1206               LSLS     R2,R2,#+24
   \   000003AE   120E               LSRS     R2,R2,#+24
   \   000003B0   0221               MOVS     R1,#+2
   \   000003B2   8C46               MOV      R12,R1
   \   000003B4   0899               LDR      R1,[SP, #+32]
   \   000003B6   A07F               LDRB     R0,[R4, #+30]
   \   000003B8   1827               MOVS     R7,#+24
   \   000003BA   7843               MULS     R0,R7,R0
   \   000003BC   384F               LDR      R7,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   000003BE   3818               ADDS     R0,R7,R0
   \   000003C0   4018               ADDS     R0,R0,R1
   \   000003C2   001D               ADDS     R0,R0,#+4
   \   000003C4   6146               MOV      R1,R12
   \   000003C6   ........           BL       Label
   \   000003CA   06B0               ADD      SP,SP,#+24
   \                     ??TextChange_Evant_38:
   \   000003CC   3848               LDR      R0,??TextChange_Evant_33+0x10  ;; X_up
   \   000003CE   0021               MOVS     R1,#+0
   \   000003D0   405E               LDRSH    R0,[R0, R1]
   \   000003D2   8642               CMP      R6,R0
   \   000003D4   A2DA               BGE      ??TextChange_Evant_36
   \   000003D6   1235               ADDS     R5,R5,#+18
   \   000003D8   A842               CMP      R0,R5
   \   000003DA   9FDA               BGE      ??TextChange_Evant_36
   \   000003DC   3548               LDR      R0,??TextChange_Evant_33+0x14  ;; Y_up
   \   000003DE   405E               LDRSH    R0,[R0, R1]
   \   000003E0   0199               LDR      R1,[SP, #+4]
   \   000003E2   0906               LSLS     R1,R1,#+24
   \   000003E4   090E               LSRS     R1,R1,#+24
   \   000003E6   8142               CMP      R1,R0
   \   000003E8   98DA               BGE      ??TextChange_Evant_36
   \   000003EA   0199               LDR      R1,[SP, #+4]
   \   000003EC   0906               LSLS     R1,R1,#+24
   \   000003EE   090E               LSRS     R1,R1,#+24
   \   000003F0   0D31               ADDS     R1,R1,#+13
   \   000003F2   8842               CMP      R0,R1
   \   000003F4   92DA               BGE      ??TextChange_Evant_36
   \   000003F6   304D               LDR      R5,??TextChange_Evant_33+0x18  ;; 0x13d7e9
   \   000003F8   2878               LDRB     R0,[R5, #+0]
   \   000003FA   0028               CMP      R0,#+0
   \   000003FC   0AD1               BNE      ??TextChange_Evant_39
   \   000003FE   2F48               LDR      R0,??TextChange_Evant_33+0x1C  ;; 0xfffff430
   \   00000400   8021               MOVS     R1,#+128
   \   00000402   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000404   0160               STR      R1,[R0, #+0]
   \   00000406   2E4A               LDR      R2,??TextChange_Evant_33+0x20  ;; ButtonBipCounter
   \   00000408   2E48               LDR      R0,??TextChange_Evant_33+0x24  ;; g_counter
   \   0000040A   03C8               LDM      R0!,{R0,R1}
   \   0000040C   0023               MOVS     R3,#+0
   \   0000040E   0830               ADDS     R0,R0,#+8
   \   00000410   5941               ADCS     R1,R1,R3
   \   00000412   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_39:
   \   00000414   607F               LDRB     R0,[R4, #+29]
   \   00000416   0799               LDR      R1,[SP, #+28]
   \   00000418   0978               LDRB     R1,[R1, #+0]
   \   0000041A   8842               CMP      R0,R1
   \   0000041C   30D2               BCS      ??TextChange_Evant_40
   \   0000041E   0898               LDR      R0,[SP, #+32]
   \   00000420   0078               LDRB     R0,[R0, #+0]
   \   00000422   0028               CMP      R0,#+0
   \   00000424   13D0               BEQ      ??TextChange_Evant_41
   \   00000426   0698               LDR      R0,[SP, #+24]
   \   00000428   ........           BL       LabelLength
   \   0000042C   0600               MOVS     R6,R0
   \   0000042E   0121               MOVS     R1,#+1
   \   00000430   0298               LDR      R0,[SP, #+8]
   \   00000432   A27F               LDRB     R2,[R4, #+30]
   \   00000434   1823               MOVS     R3,#+24
   \   00000436   5A43               MULS     R2,R3,R2
   \   00000438   194B               LDR      R3,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   0000043A   9A18               ADDS     R2,R3,R2
   \   0000043C   1018               ADDS     R0,R2,R0
   \   0000043E   001D               ADDS     R0,R0,#+4
   \   00000440   ........           BL       LabelLength
   \   00000444   3018               ADDS     R0,R6,R0
   \   00000446   0899               LDR      R1,[SP, #+32]
   \   00000448   0978               LDRB     R1,[R1, #+0]
   \   0000044A   8842               CMP      R0,R1
   \   0000044C   18DA               BGE      ??TextChange_Evant_40
   \                     ??TextChange_Evant_41:
   \   0000044E   607F               LDRB     R0,[R4, #+29]
   \   00000450   0699               LDR      R1,[SP, #+24]
   \   00000452   029A               LDR      R2,[SP, #+8]
   \   00000454   A37F               LDRB     R3,[R4, #+30]
   \   00000456   1825               MOVS     R5,#+24
   \   00000458   6B43               MULS     R3,R5,R3
   \   0000045A   114D               LDR      R5,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   0000045C   EB18               ADDS     R3,R5,R3
   \   0000045E   9A18               ADDS     R2,R3,R2
   \   00000460   1279               LDRB     R2,[R2, #+4]
   \   00000462   0A54               STRB     R2,[R1, R0]
   \   00000464   607F               LDRB     R0,[R4, #+29]
   \   00000466   401C               ADDS     R0,R0,#+1
   \   00000468   6077               STRB     R0,[R4, #+29]
   \   0000046A   0006               LSLS     R0,R0,#+24
   \   0000046C   000E               LSRS     R0,R0,#+24
   \   0000046E   0128               CMP      R0,#+1
   \   00000470   14D1               BNE      ??TextChange_Evant_42
   \   00000472   0698               LDR      R0,[SP, #+24]
   \   00000474   4078               LDRB     R0,[R0, #+1]
   \   00000476   0028               CMP      R0,#+0
   \   00000478   10D1               BNE      ??TextChange_Evant_42
   \   0000047A   0120               MOVS     R0,#+1
   \   0000047C   A077               STRB     R0,[R4, #+30]
   \   0000047E   0DE0               B        ??TextChange_Evant_42
   \                     ??TextChange_Evant_40:
   \   00000480   2878               LDRB     R0,[R5, #+0]
   \   00000482   0028               CMP      R0,#+0
   \   00000484   0AD1               BNE      ??TextChange_Evant_42
   \   00000486   0D48               LDR      R0,??TextChange_Evant_33+0x1C  ;; 0xfffff430
   \   00000488   8021               MOVS     R1,#+128
   \   0000048A   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000048C   0160               STR      R1,[R0, #+0]
   \   0000048E   0C4A               LDR      R2,??TextChange_Evant_33+0x20  ;; ButtonBipCounter
   \   00000490   0C48               LDR      R0,??TextChange_Evant_33+0x24  ;; g_counter
   \   00000492   03C8               LDM      R0!,{R0,R1}
   \   00000494   0023               MOVS     R3,#+0
   \   00000496   C830               ADDS     R0,R0,#+200
   \   00000498   5941               ADCS     R1,R1,R3
   \   0000049A   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_42:
   \   0000049C   0020               MOVS     R0,#+0
   \   0000049E   37E7               B        ??TextChange_Evant_35
   \                     ??TextChange_Evant_33:
   \   000004A0   ........           DC32     `?<Constant {0, 0}>`
   \   000004A4   ........           DC32     TextToChangeLength
   \   000004A8   ........           DC32     X_down
   \   000004AC   ........           DC32     Y_down
   \   000004B0   ........           DC32     X_up
   \   000004B4   ........           DC32     Y_up
   \   000004B8   E9D71300           DC32     0x13d7e9
   \   000004BC   30F4FFFF           DC32     0xfffff430
   \   000004C0   ........           DC32     ButtonBipCounter
   \   000004C4   ........           DC32     g_counter
   5698          
   5699          
   5700          
   5701          
   5702          
   5703          

   \                                 In section Debug.txt, align 4, keep-with-next
   5704          void AnalogGraph_Paint(_Analog *Anal)
   5705                {  
   \                     AnalogGraph_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   7EA0               ADR      R0,??AnalogGraph_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   7B48               LDR      R0,??AnalogGraph_Paint_0+0x4  ;; `?<Constant {0, 0}>` + 140
   5706                  
   5707                  List_Paint("Analog ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   5708                  char txt[8];
   5709                  
   5710                  Button("<>",24,96,15,11);
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0B20               MOVS     R0,#+11
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   0F23               MOVS     R3,#+15
   \   0000002E   6022               MOVS     R2,#+96
   \   00000030   1821               MOVS     R1,#+24
   \   00000032   77A0               ADR      R0,??AnalogGraph_Paint_0+0x8  ;; 0x3C, 0x3E, 0x00, 0x00
   \   00000034   ........           BL       Button
   \   00000038   02B0               ADD      SP,SP,#+8
   5711                  
   5712                  char Tp=0;
   \   0000003A   0024               MOVS     R4,#+0
   \   0000003C   2500               MOVS     R5,R4
   5713                  char Tb=4;
   \   0000003E   6846               MOV      R0,SP
   \   00000040   0421               MOVS     R1,#+4
   \   00000042   0175               STRB     R1,[R0, #+20]
   5714                  char Tk=0;
   \   00000044   0494               STR      R4,[SP, #+16]
   5715                  char Ap=32;
   \   00000046   2020               MOVS     R0,#+32
   \   00000048   0600               MOVS     R6,R0
   5716                  char Ab=32;
   \   0000004A   0090               STR      R0,[SP, #+0]
   5717                  char Ak=32;
   \   0000004C   0390               STR      R0,[SP, #+12]
   5718                  
   5719                  if (Anal->Flip)
   \   0000004E   0699               LDR      R1,[SP, #+24]
   \   00000050   8979               LDRB     R1,[R1, #+6]
   \   00000052   0029               CMP      R1,#+0
   \   00000054   0AD0               BEQ      ??AnalogGraph_Paint_1
   5720                  {
   5721                     Tp=32;
   \   00000056   0500               MOVS     R5,R0
   5722                     Tb=33;
   \   00000058   6846               MOV      R0,SP
   \   0000005A   2121               MOVS     R1,#+33
   \   0000005C   0175               STRB     R1,[R0, #+20]
   5723                     Tk=29;
   \   0000005E   1D20               MOVS     R0,#+29
   \   00000060   0490               STR      R0,[SP, #+16]
   5724                     Ap=0;
   \   00000062   2600               MOVS     R6,R4
   5725                     Ab=1;
   \   00000064   0120               MOVS     R0,#+1
   \   00000066   0090               STR      R0,[SP, #+0]
   5726                     Ak=6;
   \   00000068   0620               MOVS     R0,#+6
   \   0000006A   0390               STR      R0,[SP, #+12]
   5727                  }
   5728                  
   5729                  V_line(31,10,85,1); 
   \                     ??AnalogGraph_Paint_1:
   \   0000006C   0123               MOVS     R3,#+1
   \   0000006E   5522               MOVS     R2,#+85
   \   00000070   0A21               MOVS     R1,#+10
   \   00000072   1F20               MOVS     R0,#+31
   \   00000074   ........           BL       V_line
   5730                  
   5731                  Label("Text "  ,2,Tp+2 ,86,4,27,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   1B21               MOVS     R1,#+27
   \   00000086   0420               MOVS     R0,#+4
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   5623               MOVS     R3,#+86
   \   0000008C   AD1C               ADDS     R5,R5,#+2
   \   0000008E   2A00               MOVS     R2,R5
   \   00000090   1206               LSLS     R2,R2,#+24
   \   00000092   120E               LSRS     R2,R2,#+24
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   D148               LDR      R0,??AnalogGraph_Paint_2  ;; `?<Constant {0, 0}>` + 132
   \   00000098   ........           BL       Label
   \   0000009C   06B0               ADD      SP,SP,#+24
   5732                  Label("Analog",2,Ap+1,86,7,27,1,127,0); 
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   2000               MOVS     R0,R4
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   7F21               MOVS     R1,#+127
   \   000000A6   0120               MOVS     R0,#+1
   \   000000A8   03B4               PUSH     {R0,R1}
   \   000000AA   1B21               MOVS     R1,#+27
   \   000000AC   0720               MOVS     R0,#+7
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   5623               MOVS     R3,#+86
   \   000000B2   761C               ADDS     R6,R6,#+1
   \   000000B4   3200               MOVS     R2,R6
   \   000000B6   1206               LSLS     R2,R2,#+24
   \   000000B8   120E               LSRS     R2,R2,#+24
   \   000000BA   0221               MOVS     R1,#+2
   \   000000BC   C848               LDR      R0,??AnalogGraph_Paint_2+0x4  ;; `?<Constant {0, 0}>` + 148
   \   000000BE   ........           BL       Label
   \   000000C2   06B0               ADD      SP,SP,#+24
   5733                  
   5734                  char LastChar=0;
   \   000000C4   2500               MOVS     R5,R4
   5735                  char SumOfPixel=1;
   \   000000C6   0126               MOVS     R6,#+1
   5736                  for (char i=0; i<3; i++) if ((Anal->Text[i]>=30) && (Anal->Text[i]!=' ')) 
   \   000000C8   2000               MOVS     R0,R4
   \   000000CA   17E0               B        ??AnalogGraph_Paint_3
   \                     ??AnalogGraph_Paint_4:
   \   000000CC   069A               LDR      R2,[SP, #+24]
   \   000000CE   5118               ADDS     R1,R2,R1
   \   000000D0   4A78               LDRB     R2,[R1, #+1]
   \   000000D2   1E2A               CMP      R2,#+30
   \   000000D4   0FD3               BCC      ??AnalogGraph_Paint_5
   \   000000D6   202A               CMP      R2,#+32
   \   000000D8   0DD0               BEQ      ??AnalogGraph_Paint_5
   5737                  {
   5738                    LastChar=i+1;
   \   000000DA   0500               MOVS     R5,R0
   \   000000DC   6D1C               ADDS     R5,R5,#+1
   \   000000DE   2D06               LSLS     R5,R5,#+24
   \   000000E0   2D0E               LSRS     R5,R5,#+24
   5739                    SumOfPixel+= Arial_7[Anal->Text[i]-30][0]; 
   \   000000E2   C04A               LDR      R2,??AnalogGraph_Paint_2+0x8  ;; 0xfffffed4
   \   000000E4   4978               LDRB     R1,[R1, #+1]
   \   000000E6   0A23               MOVS     R3,#+10
   \   000000E8   5943               MULS     R1,R3,R1
   \   000000EA   BF4B               LDR      R3,??AnalogGraph_Paint_2+0xC  ;; Arial_7
   \   000000EC   5918               ADDS     R1,R3,R1
   \   000000EE   895C               LDRB     R1,[R1, R2]
   \   000000F0   7618               ADDS     R6,R6,R1
   \   000000F2   3606               LSLS     R6,R6,#+24
   \   000000F4   360E               LSRS     R6,R6,#+24
   5740                  }
   \                     ??AnalogGraph_Paint_5:
   \   000000F6   401C               ADDS     R0,R0,#+1
   \   000000F8   0006               LSLS     R0,R0,#+24
   \   000000FA   000E               LSRS     R0,R0,#+24
   \                     ??AnalogGraph_Paint_3:
   \   000000FC   0100               MOVS     R1,R0
   \   000000FE   0329               CMP      R1,#+3
   \   00000100   E4D3               BCC      ??AnalogGraph_Paint_4
   5741                  
   5742                  
   5743                  H_line(Tk+3,70,27,2); 
   \   00000102   049F               LDR      R7,[SP, #+16]
   \   00000104   FF1C               ADDS     R7,R7,#+3
   \   00000106   0223               MOVS     R3,#+2
   \   00000108   1B22               MOVS     R2,#+27
   \   0000010A   4621               MOVS     R1,#+70
   \   0000010C   3800               MOVS     R0,R7
   \   0000010E   0006               LSLS     R0,R0,#+24
   \   00000110   000E               LSRS     R0,R0,#+24
   \   00000112   ........           BL       H_line
   5744                  H_line(Tk+3,80,27,2); 
   \   00000116   0223               MOVS     R3,#+2
   \   00000118   1B22               MOVS     R2,#+27
   \   0000011A   5021               MOVS     R1,#+80
   \   0000011C   3800               MOVS     R0,R7
   \   0000011E   0006               LSLS     R0,R0,#+24
   \   00000120   000E               LSRS     R0,R0,#+24
   \   00000122   ........           BL       H_line
   5745                  for (char i=0; i<=3; i++) V_line((Tk+30)-9*i,70,10,2);  
   \   00000126   2700               MOVS     R7,R4
   \   00000128   16E0               B        ??AnalogGraph_Paint_6
   \                     ??AnalogGraph_Paint_7:
   \   0000012A   0223               MOVS     R3,#+2
   \   0000012C   0A22               MOVS     R2,#+10
   \   0000012E   4621               MOVS     R1,#+70
   \   00000130   02B5               PUSH     {R1,LR}
   \   00000132   0698               LDR      R0,[SP, #+24]
   \   00000134   0006               LSLS     R0,R0,#+24
   \   00000136   000E               LSRS     R0,R0,#+24
   \   00000138   1E30               ADDS     R0,R0,#+30
   \   0000013A   8446               MOV      R12,R0
   \   0000013C   3900               MOVS     R1,R7
   \   0000013E   0920               MOVS     R0,#+9
   \   00000140   4143               MULS     R1,R0,R1
   \   00000142   6046               MOV      R0,R12
   \   00000144   401A               SUBS     R0,R0,R1
   \   00000146   0099               LDR      R1,[SP, #0]
   \   00000148   02B0               ADD      SP,SP,#+8
   \   0000014A   0006               LSLS     R0,R0,#+24
   \   0000014C   000E               LSRS     R0,R0,#+24
   \   0000014E   ........           BL       V_line
   \   00000152   7F1C               ADDS     R7,R7,#+1
   \   00000154   3F06               LSLS     R7,R7,#+24
   \   00000156   3F0E               LSRS     R7,R7,#+24
   \                     ??AnalogGraph_Paint_6:
   \   00000158   3800               MOVS     R0,R7
   \   0000015A   0428               CMP      R0,#+4
   \   0000015C   E5D3               BCC      ??AnalogGraph_Paint_7
   5746                  for (char i=0; i<LastChar; i++) Label(&Anal->Text[i],2,(Tk+30)-((LastChar-i)*9),71,1,8,1,127,1); 
   \   0000015E   2700               MOVS     R7,R4
   \   00000160   1EE0               B        ??AnalogGraph_Paint_8
   \                     ??AnalogGraph_Paint_9:
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0120               MOVS     R0,#+1
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   7F21               MOVS     R1,#+127
   \   0000016A   03B4               PUSH     {R0,R1}
   \   0000016C   0821               MOVS     R1,#+8
   \   0000016E   03B4               PUSH     {R0,R1}
   \   00000170   4723               MOVS     R3,#+71
   \   00000172   0A98               LDR      R0,[SP, #+40]
   \   00000174   3900               MOVS     R1,R7
   \   00000176   2A00               MOVS     R2,R5
   \   00000178   891A               SUBS     R1,R1,R2
   \   0000017A   0922               MOVS     R2,#+9
   \   0000017C   5143               MULS     R1,R2,R1
   \   0000017E   4218               ADDS     R2,R0,R1
   \   00000180   1E32               ADDS     R2,R2,#+30
   \   00000182   1206               LSLS     R2,R2,#+24
   \   00000184   120E               LSRS     R2,R2,#+24
   \   00000186   0221               MOVS     R1,#+2
   \   00000188   8C46               MOV      R12,R1
   \   0000018A   3900               MOVS     R1,R7
   \   0000018C   0C98               LDR      R0,[SP, #+48]
   \   0000018E   4018               ADDS     R0,R0,R1
   \   00000190   401C               ADDS     R0,R0,#+1
   \   00000192   6146               MOV      R1,R12
   \   00000194   ........           BL       Label
   \   00000198   06B0               ADD      SP,SP,#+24
   \   0000019A   7F1C               ADDS     R7,R7,#+1
   \   0000019C   3F06               LSLS     R7,R7,#+24
   \   0000019E   3F0E               LSRS     R7,R7,#+24
   \                     ??AnalogGraph_Paint_8:
   \   000001A0   3800               MOVS     R0,R7
   \   000001A2   2900               MOVS     R1,R5
   \   000001A4   8842               CMP      R0,R1
   \   000001A6   DCD3               BCC      ??AnalogGraph_Paint_9
   5747          
   5748                  H_line(Ak,70,4*6,2); 
   \   000001A8   0223               MOVS     R3,#+2
   \   000001AA   1822               MOVS     R2,#+24
   \   000001AC   4621               MOVS     R1,#+70
   \   000001AE   0398               LDR      R0,[SP, #+12]
   \   000001B0   0006               LSLS     R0,R0,#+24
   \   000001B2   000E               LSRS     R0,R0,#+24
   \   000001B4   ........           BL       H_line
   5749                  H_line(Ak,80,4*6,2); 
   \   000001B8   0223               MOVS     R3,#+2
   \   000001BA   1822               MOVS     R2,#+24
   \   000001BC   5021               MOVS     R1,#+80
   \   000001BE   0398               LDR      R0,[SP, #+12]
   \   000001C0   0006               LSLS     R0,R0,#+24
   \   000001C2   000E               LSRS     R0,R0,#+24
   \   000001C4   ........           BL       H_line
   5750                  for (char i=0; i<=6; i++) V_line(Ak+4*i,70,11,2); 
   \   000001C8   2500               MOVS     R5,R4
   \   000001CA   0EE0               B        ??AnalogGraph_Paint_10
   \                     ??AnalogGraph_Paint_11:
   \   000001CC   0223               MOVS     R3,#+2
   \   000001CE   0B22               MOVS     R2,#+11
   \   000001D0   4621               MOVS     R1,#+70
   \   000001D2   0398               LDR      R0,[SP, #+12]
   \   000001D4   0006               LSLS     R0,R0,#+24
   \   000001D6   000E               LSRS     R0,R0,#+24
   \   000001D8   AF00               LSLS     R7,R5,#+2
   \   000001DA   C019               ADDS     R0,R0,R7
   \   000001DC   0006               LSLS     R0,R0,#+24
   \   000001DE   000E               LSRS     R0,R0,#+24
   \   000001E0   ........           BL       V_line
   \   000001E4   6D1C               ADDS     R5,R5,#+1
   \   000001E6   2D06               LSLS     R5,R5,#+24
   \   000001E8   2D0E               LSRS     R5,R5,#+24
   \                     ??AnalogGraph_Paint_10:
   \   000001EA   2800               MOVS     R0,R5
   \   000001EC   0728               CMP      R0,#+7
   \   000001EE   EDD3               BCC      ??AnalogGraph_Paint_11
   5751                  
   5752                  
   5753                  char LastPixel=29-SumOfPixel;
   5754                  char MaxCharTmp=LastPixel/4;
   \   000001F0   1D20               MOVS     R0,#+29
   \   000001F2   801B               SUBS     R0,R0,R6
   \   000001F4   0500               MOVS     R5,R0
   \   000001F6   2D06               LSLS     R5,R5,#+24
   \   000001F8   2D0E               LSRS     R5,R5,#+24
   \   000001FA   AD08               LSRS     R5,R5,#+2
   5755                  if (MaxCharTmp>6) MaxCharTmp=6;
   \   000001FC   2800               MOVS     R0,R5
   \   000001FE   0728               CMP      R0,#+7
   \   00000200   00D3               BCC      ??AnalogGraph_Paint_12
   \   00000202   0625               MOVS     R5,#+6
   5756                  for (char i=0; i<MaxCharTmp; i++)
   \                     ??AnalogGraph_Paint_12:
   \   00000204   2600               MOVS     R6,R4
   \   00000206   27E0               B        ??AnalogGraph_Paint_13
   \                     ??AnalogGraph_Paint_0:
   \   00000208   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000020C   ........           DC32     `?<Constant {0, 0}>` + 140
   \   00000210   3C3E0000           DC8      0x3C, 0x3E, 0x00, 0x00
   5757                  {
   5758                    V_line(Ak+4*i+1,71,9,1); 
   \                     ??AnalogGraph_Paint_14:
   \   00000214   0398               LDR      R0,[SP, #+12]
   \   00000216   3100               MOVS     R1,R6
   \   00000218   8900               LSLS     R1,R1,#+2
   \   0000021A   4718               ADDS     R7,R0,R1
   \   0000021C   0123               MOVS     R3,#+1
   \   0000021E   0922               MOVS     R2,#+9
   \   00000220   4721               MOVS     R1,#+71
   \   00000222   3800               MOVS     R0,R7
   \   00000224   401C               ADDS     R0,R0,#+1
   \   00000226   0006               LSLS     R0,R0,#+24
   \   00000228   000E               LSRS     R0,R0,#+24
   \   0000022A   ........           BL       V_line
   5759                    V_line(Ak+4*i+2,71,9,1); 
   \   0000022E   0123               MOVS     R3,#+1
   \   00000230   0922               MOVS     R2,#+9
   \   00000232   4721               MOVS     R1,#+71
   \   00000234   3800               MOVS     R0,R7
   \   00000236   801C               ADDS     R0,R0,#+2
   \   00000238   0006               LSLS     R0,R0,#+24
   \   0000023A   000E               LSRS     R0,R0,#+24
   \   0000023C   ........           BL       V_line
   5760                    V_line(Ak+4*i+3,71,9,1); 
   \   00000240   0123               MOVS     R3,#+1
   \   00000242   0922               MOVS     R2,#+9
   \   00000244   4721               MOVS     R1,#+71
   \   00000246   FF1C               ADDS     R7,R7,#+3
   \   00000248   3800               MOVS     R0,R7
   \   0000024A   0006               LSLS     R0,R0,#+24
   \   0000024C   000E               LSRS     R0,R0,#+24
   \   0000024E   ........           BL       V_line
   5761                  }
   \   00000252   761C               ADDS     R6,R6,#+1
   \   00000254   3606               LSLS     R6,R6,#+24
   \   00000256   360E               LSRS     R6,R6,#+24
   \                     ??AnalogGraph_Paint_13:
   \   00000258   3000               MOVS     R0,R6
   \   0000025A   2900               MOVS     R1,R5
   \   0000025C   8842               CMP      R0,R1
   \   0000025E   D9D3               BCC      ??AnalogGraph_Paint_14
   5762                  
   5763                   Button("Text",Tb,50,26,15);
   \   00000260   82B0               SUB      SP,SP,#+8
   \   00000262   0F20               MOVS     R0,#+15
   \   00000264   0090               STR      R0,[SP, #+0]
   \   00000266   1A23               MOVS     R3,#+26
   \   00000268   3222               MOVS     R2,#+50
   \   0000026A   02A8               ADD      R0,SP,#+8
   \   0000026C   017D               LDRB     R1,[R0, #+20]
   \   0000026E   5F48               LDR      R0,??AnalogGraph_Paint_2+0x10  ;; `?<Constant {0, 0}>` + 100
   \   00000270   ........           BL       Button
   \   00000274   02B0               ADD      SP,SP,#+8
   5764                  
   5765                  
   5766                  txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=0;
   \   00000276   01AD               ADD      R5,SP,#+4
   \   00000278   4920               MOVS     R0,#+73
   \   0000027A   2870               STRB     R0,[R5, #+0]
   \   0000027C   6420               MOVS     R0,#+100
   \   0000027E   6870               STRB     R0,[R5, #+1]
   \   00000280   3A20               MOVS     R0,#+58
   \   00000282   A870               STRB     R0,[R5, #+2]
   \   00000284   2000               MOVS     R0,R4
   \   00000286   E870               STRB     R0,[R5, #+3]
   5767                    Label(txt,0,Ab+4, 53 ,3,10,1,127,0); 
   \   00000288   82B0               SUB      SP,SP,#+8
   \   0000028A   0090               STR      R0,[SP, #+0]
   \   0000028C   7F21               MOVS     R1,#+127
   \   0000028E   0120               MOVS     R0,#+1
   \   00000290   03B4               PUSH     {R0,R1}
   \   00000292   0A21               MOVS     R1,#+10
   \   00000294   0320               MOVS     R0,#+3
   \   00000296   03B4               PUSH     {R0,R1}
   \   00000298   3523               MOVS     R3,#+53
   \   0000029A   069A               LDR      R2,[SP, #+24]
   \   0000029C   121D               ADDS     R2,R2,#+4
   \   0000029E   1206               LSLS     R2,R2,#+24
   \   000002A0   120E               LSRS     R2,R2,#+24
   \   000002A2   2100               MOVS     R1,R4
   \   000002A4   07A8               ADD      R0,SP,#+28
   \   000002A6   ........           BL       Label
   \   000002AA   06B0               ADD      SP,SP,#+24
   5768                    txt[1]=0;txt[2]=0;
   \   000002AC   2000               MOVS     R0,R4
   \   000002AE   6870               STRB     R0,[R5, #+1]
   \   000002B0   A870               STRB     R0,[R5, #+2]
   5769                    char ind=CharToStr(Anal->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000002B2   0222               MOVS     R2,#+2
   \   000002B4   01A9               ADD      R1,SP,#+4
   \   000002B6   0698               LDR      R0,[SP, #+24]
   \   000002B8   0079               LDRB     R0,[R0, #+4]
   \   000002BA   ........           BL       CharToStr
   \   000002BE   0200               MOVS     R2,R0
   5770                    Label(txt,0,Ab+19, 53 ,ind,8,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002C0   82B0               SUB      SP,SP,#+8
   \   000002C2   2000               MOVS     R0,R4
   \   000002C4   0090               STR      R0,[SP, #+0]
   \   000002C6   7F21               MOVS     R1,#+127
   \   000002C8   0120               MOVS     R0,#+1
   \   000002CA   03B4               PUSH     {R0,R1}
   \   000002CC   0821               MOVS     R1,#+8
   \   000002CE   1000               MOVS     R0,R2
   \   000002D0   03B4               PUSH     {R0,R1}
   \   000002D2   3523               MOVS     R3,#+53
   \   000002D4   069A               LDR      R2,[SP, #+24]
   \   000002D6   1332               ADDS     R2,R2,#+19
   \   000002D8   1206               LSLS     R2,R2,#+24
   \   000002DA   120E               LSRS     R2,R2,#+24
   \   000002DC   2100               MOVS     R1,R4
   \   000002DE   07A8               ADD      R0,SP,#+28
   \   000002E0   ........           BL       Label
   \   000002E4   06B0               ADD      SP,SP,#+24
   \   000002E6   3C20               MOVS     R0,#+60
   \   000002E8   2870               STRB     R0,[R5, #+0]
   5771                                
   5772                    txt[0]='<';txt[1]=0;
   \   000002EA   2000               MOVS     R0,R4
   \   000002EC   6870               STRB     R0,[R5, #+1]
   5773                    Button(txt,Ab+1,35,13,15); 
   \   000002EE   009E               LDR      R6,[SP, #+0]
   \   000002F0   761C               ADDS     R6,R6,#+1
   \   000002F2   82B0               SUB      SP,SP,#+8
   \   000002F4   0F20               MOVS     R0,#+15
   \   000002F6   0090               STR      R0,[SP, #+0]
   \   000002F8   0D23               MOVS     R3,#+13
   \   000002FA   2322               MOVS     R2,#+35
   \   000002FC   3100               MOVS     R1,R6
   \   000002FE   0906               LSLS     R1,R1,#+24
   \   00000300   090E               LSRS     R1,R1,#+24
   \   00000302   03A8               ADD      R0,SP,#+12
   \   00000304   ........           BL       Button
   \   00000308   02B0               ADD      SP,SP,#+8
   \   0000030A   3E20               MOVS     R0,#+62
   \   0000030C   2870               STRB     R0,[R5, #+0]
   5774                    txt[0]='>';
   5775                    Button(txt,Ab+16,35,13,15); 
   \   0000030E   009F               LDR      R7,[SP, #+0]
   \   00000310   1037               ADDS     R7,R7,#+16
   \   00000312   82B0               SUB      SP,SP,#+8
   \   00000314   0F20               MOVS     R0,#+15
   \   00000316   0090               STR      R0,[SP, #+0]
   \   00000318   0D23               MOVS     R3,#+13
   \   0000031A   2322               MOVS     R2,#+35
   \   0000031C   3900               MOVS     R1,R7
   \   0000031E   0906               LSLS     R1,R1,#+24
   \   00000320   090E               LSRS     R1,R1,#+24
   \   00000322   03A8               ADD      R0,SP,#+12
   \   00000324   ........           BL       Button
   \   00000328   02B0               ADD      SP,SP,#+8
   5776                    
   5777                    
   5778                    txt[0]='R'; txt[1]='e'; txt[2]='g'; txt[3]=':'; txt[4]=0;
   \   0000032A   5220               MOVS     R0,#+82
   \   0000032C   2870               STRB     R0,[R5, #+0]
   \   0000032E   6520               MOVS     R0,#+101
   \   00000330   6870               STRB     R0,[R5, #+1]
   \   00000332   6720               MOVS     R0,#+103
   \   00000334   A870               STRB     R0,[R5, #+2]
   \   00000336   3A20               MOVS     R0,#+58
   \   00000338   E870               STRB     R0,[R5, #+3]
   \   0000033A   2000               MOVS     R0,R4
   \   0000033C   2871               STRB     R0,[R5, #+4]
   5779                    Label(txt,0,Ab+1, 23 ,4,10,1,127,0); 
   \   0000033E   82B0               SUB      SP,SP,#+8
   \   00000340   0090               STR      R0,[SP, #+0]
   \   00000342   7F21               MOVS     R1,#+127
   \   00000344   0120               MOVS     R0,#+1
   \   00000346   03B4               PUSH     {R0,R1}
   \   00000348   0A21               MOVS     R1,#+10
   \   0000034A   0420               MOVS     R0,#+4
   \   0000034C   03B4               PUSH     {R0,R1}
   \   0000034E   1723               MOVS     R3,#+23
   \   00000350   3200               MOVS     R2,R6
   \   00000352   1206               LSLS     R2,R2,#+24
   \   00000354   120E               LSRS     R2,R2,#+24
   \   00000356   2100               MOVS     R1,R4
   \   00000358   07A8               ADD      R0,SP,#+28
   \   0000035A   ........           BL       Label
   \   0000035E   06B0               ADD      SP,SP,#+24
   5780                    txt[1]=0;txt[2]=0;
   \   00000360   2000               MOVS     R0,R4
   \   00000362   6870               STRB     R0,[R5, #+1]
   \   00000364   A870               STRB     R0,[R5, #+2]
   5781                    
   5782                    ind=CharToStr(Anal->Reg, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000366   0222               MOVS     R2,#+2
   \   00000368   01A9               ADD      R1,SP,#+4
   \   0000036A   0698               LDR      R0,[SP, #+24]
   \   0000036C   4079               LDRB     R0,[R0, #+5]
   \   0000036E   ........           BL       CharToStr
   \   00000372   0200               MOVS     R2,R0
   5783                    Label(txt,0,Ab+21, 23 ,ind,8,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000374   82B0               SUB      SP,SP,#+8
   \   00000376   2000               MOVS     R0,R4
   \   00000378   0090               STR      R0,[SP, #+0]
   \   0000037A   7F21               MOVS     R1,#+127
   \   0000037C   0120               MOVS     R0,#+1
   \   0000037E   03B4               PUSH     {R0,R1}
   \   00000380   0821               MOVS     R1,#+8
   \   00000382   1000               MOVS     R0,R2
   \   00000384   03B4               PUSH     {R0,R1}
   \   00000386   1723               MOVS     R3,#+23
   \   00000388   069A               LDR      R2,[SP, #+24]
   \   0000038A   1532               ADDS     R2,R2,#+21
   \   0000038C   1206               LSLS     R2,R2,#+24
   \   0000038E   120E               LSRS     R2,R2,#+24
   \   00000390   2100               MOVS     R1,R4
   \   00000392   07A8               ADD      R0,SP,#+28
   \   00000394   ........           BL       Label
   \   00000398   06B0               ADD      SP,SP,#+24
   5784                  
   5785                    txt[0]='<';txt[1]=0;
   \   0000039A   3C20               MOVS     R0,#+60
   \   0000039C   2870               STRB     R0,[R5, #+0]
   \   0000039E   6C70               STRB     R4,[R5, #+1]
   5786                    Button(txt,Ab+1,5,13,15); 
   \   000003A0   82B0               SUB      SP,SP,#+8
   \   000003A2   0F20               MOVS     R0,#+15
   \   000003A4   0090               STR      R0,[SP, #+0]
   \   000003A6   0D23               MOVS     R3,#+13
   \   000003A8   0522               MOVS     R2,#+5
   \   000003AA   3100               MOVS     R1,R6
   \   000003AC   0906               LSLS     R1,R1,#+24
   \   000003AE   090E               LSRS     R1,R1,#+24
   \   000003B0   03A8               ADD      R0,SP,#+12
   \   000003B2   ........           BL       Button
   \   000003B6   02B0               ADD      SP,SP,#+8
   5787                    txt[0]='>';
   \   000003B8   3E20               MOVS     R0,#+62
   \   000003BA   2870               STRB     R0,[R5, #+0]
   5788                    Button(txt,Ab+16,5,13,15); 
   \   000003BC   82B0               SUB      SP,SP,#+8
   \   000003BE   0F20               MOVS     R0,#+15
   \   000003C0   0090               STR      R0,[SP, #+0]
   \   000003C2   0D23               MOVS     R3,#+13
   \   000003C4   0522               MOVS     R2,#+5
   \   000003C6   3900               MOVS     R1,R7
   \   000003C8   0906               LSLS     R1,R1,#+24
   \   000003CA   090E               LSRS     R1,R1,#+24
   \   000003CC   03A8               ADD      R0,SP,#+12
   \   000003CE   ........           BL       Button
   \   000003D2   02B0               ADD      SP,SP,#+8
   5789                  
   5790                  
   5791                }
   \   000003D4   07B0               ADD      SP,SP,#+28
   \   000003D6   F0BC               POP      {R4-R7}
   \   000003D8   01BC               POP      {R0}
   \   000003DA   0047               BX       R0               ;; return
   \                     ??AnalogGraph_Paint_2:
   \   000003DC   ........           DC32     `?<Constant {0, 0}>` + 132
   \   000003E0   ........           DC32     `?<Constant {0, 0}>` + 148
   \   000003E4   D4FEFFFF           DC32     0xfffffed4
   \   000003E8   ........           DC32     Arial_7
   \   000003EC   ........           DC32     `?<Constant {0, 0}>` + 100
   5792          

   \                                 In section Debug.txt, align 4, keep-with-next
   5793          void AnalogGraph_Event(_Analog *Anal)
   5794                {  
   \                     AnalogGraph_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0425               MOVS     R5,#+4
   5795                  
   5796                 //List_Paint(Speech[g_leng].ZmAnalog,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   5797                 char txt[8];
   5798                 
   5799          
   5800                  char Tb=4;
   5801                  char Ab=32;
   \   00000006   2026               MOVS     R6,#+32
   5802                  
   5803                  if (Anal->Flip)
   \   00000008   A079               LDRB     R0,[R4, #+6]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D0               BEQ      ??AnalogGraph_Event_0
   5804                  {
   5805                     Tb=33;
   \   0000000E   2125               MOVS     R5,#+33
   5806                     Ab=1;
   \   00000010   0126               MOVS     R6,#+1
   5807                  }
   5808                 
   5809                 
   5810                         //zdarzenie typu down "X"
   5811                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \                     ??AnalogGraph_Event_0:
   \   00000012   9548               LDR      R0,??AnalogGraph_Event_1  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   2F28               CMP      R0,#+47
   \   0000001A   2EDB               BLT      ??AnalogGraph_Event_2
   \   0000001C   3F28               CMP      R0,#+63
   \   0000001E   2CDA               BGE      ??AnalogGraph_Event_2
   \   00000020   9248               LDR      R0,??AnalogGraph_Event_1+0x4  ;; Y_down
   \   00000022   405E               LDRSH    R0,[R0, R1]
   \   00000024   7128               CMP      R0,#+113
   \   00000026   28DB               BLT      ??AnalogGraph_Event_2
   \   00000028   7F28               CMP      R0,#+127
   \   0000002A   26DA               BGE      ??AnalogGraph_Event_2
   5812                  {
   5813                    //MenuPaint();
   5814                    H_line(49,114,10,0);
   \   0000002C   0B00               MOVS     R3,R1
   \   0000002E   0A22               MOVS     R2,#+10
   \   00000030   7221               MOVS     R1,#+114
   \   00000032   3120               MOVS     R0,#+49
   \   00000034   ........           BL       H_line
   5815                    H_line(49,123,10,0); 
   \   00000038   0023               MOVS     R3,#+0
   \   0000003A   0A22               MOVS     R2,#+10
   \   0000003C   7B21               MOVS     R1,#+123
   \   0000003E   3120               MOVS     R0,#+49
   \   00000040   ........           BL       H_line
   5816                    V_line(49,114,10,0); 
   \   00000044   0023               MOVS     R3,#+0
   \   00000046   0A22               MOVS     R2,#+10
   \   00000048   7221               MOVS     R1,#+114
   \   0000004A   3120               MOVS     R0,#+49
   \   0000004C   ........           BL       V_line
   5817                    V_line(58,114,10,0); 
   \   00000050   0023               MOVS     R3,#+0
   \   00000052   0A22               MOVS     R2,#+10
   \   00000054   7221               MOVS     R1,#+114
   \   00000056   3A20               MOVS     R0,#+58
   \   00000058   ........           BL       V_line
   5818                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000005C   8448               LDR      R0,??AnalogGraph_Event_1+0x8  ;; 0x13d7e9
   \   0000005E   0078               LDRB     R0,[R0, #+0]
   \   00000060   0028               CMP      R0,#+0
   \   00000062   0AD1               BNE      ??AnalogGraph_Event_2
   \   00000064   8348               LDR      R0,??AnalogGraph_Event_1+0xC  ;; 0xfffff430
   \   00000066   8021               MOVS     R1,#+128
   \   00000068   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000006A   0160               STR      R1,[R0, #+0]
   \   0000006C   824A               LDR      R2,??AnalogGraph_Event_1+0x10  ;; ButtonBipCounter
   \   0000006E   8348               LDR      R0,??AnalogGraph_Event_1+0x14  ;; g_counter
   \   00000070   03C8               LDM      R0!,{R0,R1}
   \   00000072   0023               MOVS     R3,#+0
   \   00000074   0830               ADDS     R0,R0,#+8
   \   00000076   5941               ADCS     R1,R1,R3
   \   00000078   03C2               STM      R2!,{R0,R1}
   5819                    
   5820                  }
   5821            
   5822                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??AnalogGraph_Event_2:
   \   0000007A   8148               LDR      R0,??AnalogGraph_Event_1+0x18  ;; X_up
   \   0000007C   0021               MOVS     R1,#+0
   \   0000007E   405E               LDRSH    R0,[R0, R1]
   \   00000080   2F28               CMP      R0,#+47
   \   00000082   1FDB               BLT      ??AnalogGraph_Event_3
   \   00000084   3F28               CMP      R0,#+63
   \   00000086   1DDA               BGE      ??AnalogGraph_Event_3
   \   00000088   7E48               LDR      R0,??AnalogGraph_Event_1+0x1C  ;; Y_up
   \   0000008A   405E               LDRSH    R0,[R0, R1]
   \   0000008C   7128               CMP      R0,#+113
   \   0000008E   19DB               BLT      ??AnalogGraph_Event_3
   \   00000090   7F28               CMP      R0,#+127
   \   00000092   17DA               BGE      ??AnalogGraph_Event_3
   5823                  {
   5824                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000094   7648               LDR      R0,??AnalogGraph_Event_1+0x8  ;; 0x13d7e9
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   0AD1               BNE      ??AnalogGraph_Event_4
   \   0000009C   7548               LDR      R0,??AnalogGraph_Event_1+0xC  ;; 0xfffff430
   \   0000009E   8021               MOVS     R1,#+128
   \   000000A0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000A2   0160               STR      R1,[R0, #+0]
   \   000000A4   744A               LDR      R2,??AnalogGraph_Event_1+0x10  ;; ButtonBipCounter
   \   000000A6   7548               LDR      R0,??AnalogGraph_Event_1+0x14  ;; g_counter
   \   000000A8   03C8               LDM      R0!,{R0,R1}
   \   000000AA   0023               MOVS     R3,#+0
   \   000000AC   0830               ADDS     R0,R0,#+8
   \   000000AE   5941               ADCS     R1,R1,R3
   \   000000B0   03C2               STM      R2!,{R0,R1}
   5825                    MenuLevel=(MenuLevel/10);
   \                     ??AnalogGraph_Event_4:
   \   000000B2   754D               LDR      R5,??AnalogGraph_Event_1+0x20  ;; TextToChangeLength
   \   000000B4   A86C               LDR      R0,[R5, #+72]
   \   000000B6   0A21               MOVS     R1,#+10
   \   000000B8   ........           BL       __aeabi_idivmod
   \   000000BC   A864               STR      R0,[R5, #+72]
   5826                    MenuPaint();
   \   000000BE   ........           BL       MenuPaint
   \   000000C2   CDE0               B        ??AnalogGraph_Event_5
   5827                  }  
   \                     ??AnalogGraph_Event_3:
   \   000000C4   0F00               MOVS     R7,R1
   5828                  else
   5829                  {
   5830                    
   5831                    char ButtonDownNr=0;
   5832                    
   5833                    
   5834                    if (Button("Text",Tb,50,26,15)==1) ButtonDownNr=1;
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   0F20               MOVS     R0,#+15
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   1A23               MOVS     R3,#+26
   \   000000CE   3222               MOVS     R2,#+50
   \   000000D0   2900               MOVS     R1,R5
   \   000000D2   6E48               LDR      R0,??AnalogGraph_Event_1+0x24  ;; `?<Constant {0, 0}>` + 100
   \   000000D4   ........           BL       Button
   \   000000D8   02B0               ADD      SP,SP,#+8
   \   000000DA   0128               CMP      R0,#+1
   \   000000DC   00D1               BNE      ??AnalogGraph_Event_6
   \   000000DE   0127               MOVS     R7,#+1
   \                     ??AnalogGraph_Event_6:
   \   000000E0   01AD               ADD      R5,SP,#+4
   \   000000E2   3E20               MOVS     R0,#+62
   \   000000E4   2870               STRB     R0,[R5, #+0]
   5835                    txt[0]='>'; txt[1]=0; 
   \   000000E6   0020               MOVS     R0,#+0
   \   000000E8   6870               STRB     R0,[R5, #+1]
   5836                    if (Button(txt,Ab+16,35,13,15)==1) ButtonDownNr=2;
   \   000000EA   6846               MOV      R0,SP
   \   000000EC   3100               MOVS     R1,R6
   \   000000EE   1031               ADDS     R1,R1,#+16
   \   000000F0   0170               STRB     R1,[R0, #+0]
   \   000000F2   82B0               SUB      SP,SP,#+8
   \   000000F4   0F20               MOVS     R0,#+15
   \   000000F6   0090               STR      R0,[SP, #+0]
   \   000000F8   0D23               MOVS     R3,#+13
   \   000000FA   2322               MOVS     R2,#+35
   \   000000FC   02A8               ADD      R0,SP,#+8
   \   000000FE   0178               LDRB     R1,[R0, #+0]
   \   00000100   03A8               ADD      R0,SP,#+12
   \   00000102   ........           BL       Button
   \   00000106   02B0               ADD      SP,SP,#+8
   \   00000108   0128               CMP      R0,#+1
   \   0000010A   00D1               BNE      ??AnalogGraph_Event_7
   \   0000010C   0227               MOVS     R7,#+2
   \                     ??AnalogGraph_Event_7:
   \   0000010E   3C20               MOVS     R0,#+60
   \   00000110   2870               STRB     R0,[R5, #+0]
   5837                    txt[0]='<';txt[1]=0;
   \   00000112   0020               MOVS     R0,#+0
   \   00000114   6870               STRB     R0,[R5, #+1]
   5838                    if (Button(txt,Ab+1,35,13,15)==1) ButtonDownNr=3;
   \   00000116   761C               ADDS     R6,R6,#+1
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   0F20               MOVS     R0,#+15
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   0D23               MOVS     R3,#+13
   \   00000120   2322               MOVS     R2,#+35
   \   00000122   3100               MOVS     R1,R6
   \   00000124   0906               LSLS     R1,R1,#+24
   \   00000126   090E               LSRS     R1,R1,#+24
   \   00000128   03A8               ADD      R0,SP,#+12
   \   0000012A   ........           BL       Button
   \   0000012E   02B0               ADD      SP,SP,#+8
   \   00000130   0128               CMP      R0,#+1
   \   00000132   00D1               BNE      ??AnalogGraph_Event_8
   \   00000134   0327               MOVS     R7,#+3
   5839                    txt[0]='>'; txt[1]=0; 
   \                     ??AnalogGraph_Event_8:
   \   00000136   3E20               MOVS     R0,#+62
   \   00000138   2870               STRB     R0,[R5, #+0]
   \   0000013A   0020               MOVS     R0,#+0
   \   0000013C   6870               STRB     R0,[R5, #+1]
   5840                    if (Button(txt,Ab+16,5,13,15)==1) ButtonDownNr=4;
   \   0000013E   82B0               SUB      SP,SP,#+8
   \   00000140   0F20               MOVS     R0,#+15
   \   00000142   0090               STR      R0,[SP, #+0]
   \   00000144   0D23               MOVS     R3,#+13
   \   00000146   0522               MOVS     R2,#+5
   \   00000148   02A8               ADD      R0,SP,#+8
   \   0000014A   0178               LDRB     R1,[R0, #+0]
   \   0000014C   03A8               ADD      R0,SP,#+12
   \   0000014E   ........           BL       Button
   \   00000152   02B0               ADD      SP,SP,#+8
   \   00000154   0128               CMP      R0,#+1
   \   00000156   00D1               BNE      ??AnalogGraph_Event_9
   \   00000158   0427               MOVS     R7,#+4
   5841                    txt[0]='<';txt[1]=0;
   \                     ??AnalogGraph_Event_9:
   \   0000015A   3C20               MOVS     R0,#+60
   \   0000015C   2870               STRB     R0,[R5, #+0]
   \   0000015E   0020               MOVS     R0,#+0
   \   00000160   6870               STRB     R0,[R5, #+1]
   5842                    if (Button(txt,Ab+1,5,13,15)==1) ButtonDownNr=5;
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0F20               MOVS     R0,#+15
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   0D23               MOVS     R3,#+13
   \   0000016A   0522               MOVS     R2,#+5
   \   0000016C   3100               MOVS     R1,R6
   \   0000016E   0906               LSLS     R1,R1,#+24
   \   00000170   090E               LSRS     R1,R1,#+24
   \   00000172   03A8               ADD      R0,SP,#+12
   \   00000174   ........           BL       Button
   \   00000178   02B0               ADD      SP,SP,#+8
   \   0000017A   0128               CMP      R0,#+1
   \   0000017C   00D1               BNE      ??AnalogGraph_Event_10
   \   0000017E   0527               MOVS     R7,#+5
   5843                    if (Button ("<>",24,96,15,11)==1) ButtonDownNr=6;
   \                     ??AnalogGraph_Event_10:
   \   00000180   82B0               SUB      SP,SP,#+8
   \   00000182   0B20               MOVS     R0,#+11
   \   00000184   0090               STR      R0,[SP, #+0]
   \   00000186   0F23               MOVS     R3,#+15
   \   00000188   6022               MOVS     R2,#+96
   \   0000018A   1821               MOVS     R1,#+24
   \   0000018C   40A0               ADR      R0,??AnalogGraph_Event_1+0x28  ;; 0x3C, 0x3E, 0x00, 0x00
   \   0000018E   ........           BL       Button
   \   00000192   02B0               ADD      SP,SP,#+8
   \   00000194   0128               CMP      R0,#+1
   \   00000196   00D1               BNE      ??AnalogGraph_Event_11
   \   00000198   0627               MOVS     R7,#+6
   5844                    
   5845                    if (ButtonDownNr==1)
   \                     ??AnalogGraph_Event_11:
   \   0000019A   012F               CMP      R7,#+1
   \   0000019C   0ED1               BNE      ??AnalogGraph_Event_12
   5846                    {
   5847          
   5848                      ProgramChange=1;
   \   0000019E   3A4D               LDR      R5,??AnalogGraph_Event_1+0x20  ;; TextToChangeLength
   \   000001A0   0120               MOVS     R0,#+1
   \   000001A2   2872               STRB     R0,[R5, #+8]
   5849                      TextToChangeLength=3;
   \   000001A4   0320               MOVS     R0,#+3
   \   000001A6   2870               STRB     R0,[R5, #+0]
   5850                      TextToChange=Anal->Text;
   \   000001A8   2000               MOVS     R0,R4
   \   000001AA   401C               ADDS     R0,R0,#+1
   \   000001AC   2865               STR      R0,[R5, #+80]
   5851                      MenuLevel=(MenuLevel*10+1); 
   \   000001AE   A86C               LDR      R0,[R5, #+72]
   \   000001B0   0A21               MOVS     R1,#+10
   \   000001B2   4843               MULS     R0,R1,R0
   \   000001B4   401C               ADDS     R0,R0,#+1
   \   000001B6   A864               STR      R0,[R5, #+72]
   5852                      MenuPaint(); 
   \   000001B8   ........           BL       MenuPaint
   5853                    }
   5854                    
   5855                    
   5856                    if (ButtonDownNr==2) 
   \                     ??AnalogGraph_Event_12:
   \   000001BC   022F               CMP      R7,#+2
   \   000001BE   10D1               BNE      ??AnalogGraph_Event_13
   5857                    {
   5858                      
   5859                        ProgramChange=1;
   \   000001C0   3448               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   000001C2   0121               MOVS     R1,#+1
   \   000001C4   0170               STRB     R1,[R0, #+0]
   5860                        if (Anal->Nr+1<NumberNeurons) {Anal->Nr++;} else {Anal->Nr=0;} 
   \   000001C6   2079               LDRB     R0,[R4, #+4]
   \   000001C8   401C               ADDS     R0,R0,#+1
   \   000001CA   0004               LSLS     R0,R0,#+16
   \   000001CC   000C               LSRS     R0,R0,#+16
   \   000001CE   2328               CMP      R0,#+35
   \   000001D0   03D2               BCS      ??AnalogGraph_Event_14
   \   000001D2   2079               LDRB     R0,[R4, #+4]
   \   000001D4   401C               ADDS     R0,R0,#+1
   \   000001D6   2071               STRB     R0,[R4, #+4]
   \   000001D8   01E0               B        ??AnalogGraph_Event_15
   \                     ??AnalogGraph_Event_14:
   \   000001DA   0020               MOVS     R0,#+0
   \   000001DC   2071               STRB     R0,[R4, #+4]
   5861                        MenuPaint(); 
   \                     ??AnalogGraph_Event_15:
   \   000001DE   ........           BL       MenuPaint
   5862                    }
   5863                     
   5864                    
   5865                    
   5866                    if (ButtonDownNr==3) 
   \                     ??AnalogGraph_Event_13:
   \   000001E2   032F               CMP      R7,#+3
   \   000001E4   0DD1               BNE      ??AnalogGraph_Event_16
   5867                    {
   5868                       ProgramChange=1;
   \   000001E6   2B48               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   000001E8   0121               MOVS     R1,#+1
   \   000001EA   0170               STRB     R1,[R0, #+0]
   5869                       if (Anal->Nr>0) {Anal->Nr--;} else {Anal->Nr=NumberNeurons;}
   \   000001EC   2079               LDRB     R0,[R4, #+4]
   \   000001EE   0028               CMP      R0,#+0
   \   000001F0   03D0               BEQ      ??AnalogGraph_Event_17
   \   000001F2   2079               LDRB     R0,[R4, #+4]
   \   000001F4   401E               SUBS     R0,R0,#+1
   \   000001F6   2071               STRB     R0,[R4, #+4]
   \   000001F8   01E0               B        ??AnalogGraph_Event_18
   \                     ??AnalogGraph_Event_17:
   \   000001FA   2320               MOVS     R0,#+35
   \   000001FC   2071               STRB     R0,[R4, #+4]
   5870                      MenuPaint(); 
   \                     ??AnalogGraph_Event_18:
   \   000001FE   ........           BL       MenuPaint
   5871                    }
   5872                    
   5873                    
   5874                    if (ButtonDownNr==4) 
   \                     ??AnalogGraph_Event_16:
   \   00000202   042F               CMP      R7,#+4
   \   00000204   10D1               BNE      ??AnalogGraph_Event_19
   5875                    {
   5876                      
   5877                        ProgramChange=1;
   \   00000206   0120               MOVS     R0,#+1
   \   00000208   2249               LDR      R1,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   0000020A   0200               MOVS     R2,R0
   \   0000020C   0A70               STRB     R2,[R1, #+0]
   5878                        if (Anal->Reg+1<NumberReg) {Anal->Reg++;} else {Anal->Reg=1;} 
   \   0000020E   6179               LDRB     R1,[R4, #+5]
   \   00000210   491C               ADDS     R1,R1,#+1
   \   00000212   0904               LSLS     R1,R1,#+16
   \   00000214   090C               LSRS     R1,R1,#+16
   \   00000216   0A29               CMP      R1,#+10
   \   00000218   03D2               BCS      ??AnalogGraph_Event_20
   \   0000021A   6079               LDRB     R0,[R4, #+5]
   \   0000021C   401C               ADDS     R0,R0,#+1
   \   0000021E   6071               STRB     R0,[R4, #+5]
   \   00000220   00E0               B        ??AnalogGraph_Event_21
   \                     ??AnalogGraph_Event_20:
   \   00000222   6071               STRB     R0,[R4, #+5]
   5879                        MenuPaint(); 
   \                     ??AnalogGraph_Event_21:
   \   00000224   ........           BL       MenuPaint
   5880                    }
   5881                     
   5882                    
   5883                    
   5884                    if (ButtonDownNr==5) 
   \                     ??AnalogGraph_Event_19:
   \   00000228   052F               CMP      R7,#+5
   \   0000022A   0DD1               BNE      ??AnalogGraph_Event_22
   5885                    {
   5886                       ProgramChange=1;
   \   0000022C   1948               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   0000022E   0121               MOVS     R1,#+1
   \   00000230   0170               STRB     R1,[R0, #+0]
   5887                       if (Anal->Reg>1) {Anal->Reg--;} else {Anal->Reg=NumberReg;}
   \   00000232   6079               LDRB     R0,[R4, #+5]
   \   00000234   0228               CMP      R0,#+2
   \   00000236   03D3               BCC      ??AnalogGraph_Event_23
   \   00000238   6079               LDRB     R0,[R4, #+5]
   \   0000023A   401E               SUBS     R0,R0,#+1
   \   0000023C   6071               STRB     R0,[R4, #+5]
   \   0000023E   01E0               B        ??AnalogGraph_Event_24
   \                     ??AnalogGraph_Event_23:
   \   00000240   0A20               MOVS     R0,#+10
   \   00000242   6071               STRB     R0,[R4, #+5]
   5888                      MenuPaint(); 
   \                     ??AnalogGraph_Event_24:
   \   00000244   ........           BL       MenuPaint
   5889                    }
   5890                    
   5891                    if (ButtonDownNr==6) 
   \                     ??AnalogGraph_Event_22:
   \   00000248   062F               CMP      R7,#+6
   \   0000024A   09D1               BNE      ??AnalogGraph_Event_5
   5892                    {
   5893                       if (Anal->Flip) Anal->Flip=0; else Anal->Flip=1;
   \   0000024C   A079               LDRB     R0,[R4, #+6]
   \   0000024E   411E               SUBS     R1,R0,#+1
   \   00000250   8941               SBCS     R1,R1,R1
   \   00000252   C90F               LSRS     R1,R1,#+31
   \   00000254   A171               STRB     R1,[R4, #+6]
   5894                       ProgramChange=1;
   \   00000256   0F48               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   00000258   0121               MOVS     R1,#+1
   \   0000025A   0170               STRB     R1,[R0, #+0]
   5895          
   5896                      MenuPaint(); 
   \   0000025C   ........           BL       MenuPaint
   5897                    }
   5898                    
   5899                  }
   5900                 
   5901                 
   5902                }
   \                     ??AnalogGraph_Event_5:
   \   00000260   FEBC               POP      {R1-R7}
   \   00000262   01BC               POP      {R0}
   \   00000264   0047               BX       R0               ;; return
   \   00000266   C046               Nop      
   \                     ??AnalogGraph_Event_1:
   \   00000268   ........           DC32     X_down
   \   0000026C   ........           DC32     Y_down
   \   00000270   E9D71300           DC32     0x13d7e9
   \   00000274   30F4FFFF           DC32     0xfffff430
   \   00000278   ........           DC32     ButtonBipCounter
   \   0000027C   ........           DC32     g_counter
   \   00000280   ........           DC32     X_up
   \   00000284   ........           DC32     Y_up
   \   00000288   ........           DC32     TextToChangeLength
   \   0000028C   ........           DC32     `?<Constant {0, 0}>` + 100
   \   00000290   3C3E0000           DC8      0x3C, 0x3E, 0x00, 0x00
   \   00000294   ........           DC32     TextToChangeLength + 8
   5903          
   5904          
   5905          
   5906                
   5907                
   5908          //opcje  **************************************************************************************************************
   5909          
   5910                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   5911                void Options_Paint(void)
   5912                {  
   \                     Options_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   5913                  
   5914                  if (g_Stop_Program==0)
   \   00000002   2048               LDR      R0,??Options_Paint_0  ;; g_Stop_Program
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   1F48               LDR      R0,??Options_Paint_0+0x4  ;; g_leng
   \   0000000A   0068               LDR      R0,[R0, #+0]
   \   0000000C   1BD1               BNE      ??Options_Paint_1
   5915                  {
   5916          
   5917                      List_Paint(Speech[g_leng].Opcje,2,15,0,0,3,Speech[g_leng].RestartSter, "Program stop ", 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000E   9621               MOVS     R1,#+150
   \   00000010   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000012   4843               MULS     R0,R1,R0
   \   00000014   1D49               LDR      R1,??Options_Paint_0+0x8  ;; Speech
   \   00000016   0C18               ADDS     R4,R1,R0
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0800               MOVS     R0,R1
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   1B49               LDR      R1,??Options_Paint_0+0xC  ;; `?<Constant "Program stop ">`
   \   00000024   F020               MOVS     R0,#+240
   \   00000026   4000               LSLS     R0,R0,#+1        ;; #+480
   \   00000028   2018               ADDS     R0,R4,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0321               MOVS     R1,#+3
   \   0000002E   0020               MOVS     R0,#+0
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0300               MOVS     R3,R0
   \   00000034   0F22               MOVS     R2,#+15
   \   00000036   0221               MOVS     R1,#+2
   \   00000038   8720               MOVS     R0,#+135
   \   0000003A   8000               LSLS     R0,R0,#+2        ;; #+540
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       List_Paint
   \   00000042   0AB0               ADD      SP,SP,#+40
   \   00000044   1AE0               B        ??Options_Paint_2
   5918                    }else{
   5919          
   5920                      List_Paint(Speech[g_leng].Opcje,2,15,0,0,3,Speech[g_leng].RestartSter, "Program start ", 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Options_Paint_1:
   \   00000046   9621               MOVS     R1,#+150
   \   00000048   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000004A   4843               MULS     R0,R1,R0
   \   0000004C   0F49               LDR      R1,??Options_Paint_0+0x8  ;; Speech
   \   0000004E   0C18               ADDS     R4,R1,R0
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   0800               MOVS     R0,R1
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   0E49               LDR      R1,??Options_Paint_0+0x10  ;; `?<Constant "Program stop ">` + 16
   \   0000005C   F020               MOVS     R0,#+240
   \   0000005E   4000               LSLS     R0,R0,#+1        ;; #+480
   \   00000060   2018               ADDS     R0,R4,R0
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   0321               MOVS     R1,#+3
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   0300               MOVS     R3,R0
   \   0000006C   0F22               MOVS     R2,#+15
   \   0000006E   0221               MOVS     R1,#+2
   \   00000070   8720               MOVS     R0,#+135
   \   00000072   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000074   2018               ADDS     R0,R4,R0
   \   00000076   ........           BL       List_Paint
   \   0000007A   0AB0               ADD      SP,SP,#+40
   5921          
   5922                  }
   5923          
   5924              
   5925                }//________________________________________________________________________
   \                     ??Options_Paint_2:
   \   0000007C   10BC               POP      {R4}
   \   0000007E   01BC               POP      {R0}
   \   00000080   0047               BX       R0               ;; return
   \   00000082   C046               Nop      
   \                     ??Options_Paint_0:
   \   00000084   ........           DC32     g_Stop_Program
   \   00000088   ........           DC32     g_leng
   \   0000008C   ........           DC32     Speech
   \   00000090   ........           DC32     `?<Constant "Program stop ">`
   \   00000094   ........           DC32     `?<Constant "Program stop ">` + 16
   5926          
   5927              
   5928                //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   5929                void Options_Event(void)
   5930                {
   \                     Options_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   5931                  int ans;
   5932                  ans= List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1948               LDR      R0,??Options_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1848               LDR      R0,??Options_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1848               LDR      R0,??Options_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1848               LDR      R0,??Options_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0400               MOVS     R4,R0
   5933                  if (ans)
   \   0000002A   20D0               BEQ      ??Options_Event_1
   5934                    {
   5935                      
   5936                        if (ans==1) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   012C               CMP      R4,#+1
   \   0000002E   05D1               BNE      ??Options_Event_2
   \   00000030   144D               LDR      R5,??Options_Event_0+0x10  ;; TextToChangeLength
   \   00000032   A86C               LDR      R0,[R5, #+72]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   4843               MULS     R0,R1,R0
   \   00000038   401C               ADDS     R0,R0,#+1
   \   0000003A   A864               STR      R0,[R5, #+72]
   5937                        if (ans==2) 
   \                     ??Options_Event_2:
   \   0000003C   022C               CMP      R4,#+2
   \   0000003E   0CD1               BNE      ??Options_Event_3
   5938                            {if (g_Stop_Program==0) 
   \   00000040   1148               LDR      R0,??Options_Event_0+0x14  ;; g_Stop_Program
   \   00000042   0178               LDRB     R1,[R0, #+0]
   \   00000044   0029               CMP      R1,#+0
   \   00000046   04D1               BNE      ??Options_Event_4
   5939                              {g_Stop_Program=1; MenuPaint();} else {g_Stop_Program=0; MenuPaint();}
   \   00000048   0121               MOVS     R1,#+1
   \   0000004A   0170               STRB     R1,[R0, #+0]
   \   0000004C   ........           BL       MenuPaint
   \   00000050   03E0               B        ??Options_Event_3
   \                     ??Options_Event_4:
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   0170               STRB     R1,[R0, #+0]
   \   00000056   ........           BL       MenuPaint
   5940                            }
   5941                        if (ans<0) MenuLevel=(MenuLevel/10);
   \                     ??Options_Event_3:
   \   0000005A   002C               CMP      R4,#+0
   \   0000005C   05D5               BPL      ??Options_Event_5
   \   0000005E   094D               LDR      R5,??Options_Event_0+0x10  ;; TextToChangeLength
   \   00000060   A86C               LDR      R0,[R5, #+72]
   \   00000062   0A21               MOVS     R1,#+10
   \   00000064   ........           BL       __aeabi_idivmod
   \   00000068   A864               STR      R0,[R5, #+72]
   5942                        MenuPaint();
   \                     ??Options_Event_5:
   \   0000006A   ........           BL       MenuPaint
   5943                    } 
   5944                    
   5945          
   5946                  
   5947                }//________________________________________________________________________
   \                     ??Options_Event_1:
   \   0000006E   38BC               POP      {R3-R5}
   \   00000070   01BC               POP      {R0}
   \   00000072   0047               BX       R0               ;; return
   \                     ??Options_Event_0:
   \   00000074   ........           DC32     Y_down
   \   00000078   ........           DC32     X_down
   \   0000007C   ........           DC32     Y_up
   \   00000080   ........           DC32     X_up
   \   00000084   ........           DC32     TextToChangeLength
   \   00000088   ........           DC32     g_Stop_Program
   5948              
   5949                      
   5950          
   5951          
   5952          //Ustawienia ******************************************************************************************************************
   5953          char RF_Channel_nr_tmp;
   5954          
   5955          
   5956                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   5957                void Setup_Paint(void)
   5958                {  
   \                     Setup_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   5959                   if (!SlaveMode) 
   \   00000002   3248               LDR      R0,??Setup_Paint_0  ;; SlaveMode
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   3148               LDR      R0,??Setup_Paint_0+0x4  ;; g_leng
   \   0000000A   0068               LDR      R0,[R0, #+0]
   \   0000000C   23D1               BNE      ??Setup_Paint_1
   5960                    {
   5961                      List_Paint(Speech[g_leng].Ustawienia,8,13,0,0,0,Speech[g_leng].Jezyk,Speech[g_leng].DataCzas,Speech[g_leng].Hasla,Speech[g_leng].Dotyk, Speech[g_leng].ScreenSever,Speech[g_leng].Dzwiek, "Master/Slave ", Speech[g_leng].RfChannel); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000E   9621               MOVS     R1,#+150
   \   00000010   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000012   4843               MULS     R0,R1,R0
   \   00000014   2F49               LDR      R1,??Setup_Paint_0+0x8  ;; Speech
   \   00000016   0C18               ADDS     R4,R1,R0
   \   00000018   2F48               LDR      R0,??Setup_Paint_0+0xC  ;; 0x636
   \   0000001A   2118               ADDS     R1,R4,R0
   \   0000001C   2F48               LDR      R0,??Setup_Paint_0+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5` + 12
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   2F48               LDR      R0,??Setup_Paint_0+0x14  ;; 0x6bd
   \   00000022   2118               ADDS     R1,R4,R0
   \   00000024   6938               SUBS     R0,R0,#+105
   \   00000026   2018               ADDS     R0,R4,R0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   2E48               LDR      R0,??Setup_Paint_0+0x18  ;; 0x519
   \   0000002C   2118               ADDS     R1,R4,R0
   \   0000002E   2000               MOVS     R0,R4
   \   00000030   C330               ADDS     R0,R0,#+195
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   2100               MOVS     R1,R4
   \   00000036   B431               ADDS     R1,R1,#+180
   \   00000038   2000               MOVS     R0,R4
   \   0000003A   6930               ADDS     R0,R0,#+105
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   0800               MOVS     R0,R1
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   0300               MOVS     R3,R0
   \   00000046   0D22               MOVS     R2,#+13
   \   00000048   0821               MOVS     R1,#+8
   \   0000004A   3C34               ADDS     R4,R4,#+60
   \   0000004C   2000               MOVS     R0,R4
   \   0000004E   ........           BL       List_Paint
   \   00000052   0AB0               ADD      SP,SP,#+40
   \   00000054   21E0               B        ??Setup_Paint_2
   5962                    }else{
   5963                      List_Paint(Speech[g_leng].Ustawienia,7,13,0,0,0,Speech[g_leng].Jezyk,Speech[g_leng].DataCzas,Speech[g_leng].Hasla,Speech[g_leng].Dotyk, Speech[g_leng].ScreenSever, Speech[g_leng].Dzwiek,"Master/Slave ",0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Setup_Paint_1:
   \   00000056   9621               MOVS     R1,#+150
   \   00000058   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000005A   4843               MULS     R0,R1,R0
   \   0000005C   1D49               LDR      R1,??Setup_Paint_0+0x8  ;; Speech
   \   0000005E   0C18               ADDS     R4,R1,R0
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   1E48               LDR      R0,??Setup_Paint_0+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5` + 12
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   1E48               LDR      R0,??Setup_Paint_0+0x14  ;; 0x6bd
   \   00000068   2118               ADDS     R1,R4,R0
   \   0000006A   6938               SUBS     R0,R0,#+105
   \   0000006C   2018               ADDS     R0,R4,R0
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   1C48               LDR      R0,??Setup_Paint_0+0x18  ;; 0x519
   \   00000072   2118               ADDS     R1,R4,R0
   \   00000074   2000               MOVS     R0,R4
   \   00000076   C330               ADDS     R0,R0,#+195
   \   00000078   03B4               PUSH     {R0,R1}
   \   0000007A   2100               MOVS     R1,R4
   \   0000007C   B431               ADDS     R1,R1,#+180
   \   0000007E   2000               MOVS     R0,R4
   \   00000080   6930               ADDS     R0,R0,#+105
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   0800               MOVS     R0,R1
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   0300               MOVS     R3,R0
   \   0000008C   0D22               MOVS     R2,#+13
   \   0000008E   0721               MOVS     R1,#+7
   \   00000090   3C34               ADDS     R4,R4,#+60
   \   00000092   2000               MOVS     R0,R4
   \   00000094   ........           BL       List_Paint
   \   00000098   0AB0               ADD      SP,SP,#+40
   5964                    }
   5965                    RF_Channel_nr_tmp=RF_Status.Ch;
   \                     ??Setup_Paint_2:
   \   0000009A   1348               LDR      R0,??Setup_Paint_0+0x1C  ;; RF_Channel_nr_tmp
   \   0000009C   1349               LDR      R1,??Setup_Paint_0+0x20  ;; RF_Status + 13
   \   0000009E   0978               LDRB     R1,[R1, #+0]
   \   000000A0   0170               STRB     R1,[R0, #+0]
   5966                   
   5967                   //znacznik dzwieku
   5968                   if (!(AT91C_IFLASH_MEM->Config.SoundOff))
   \   000000A2   1348               LDR      R0,??Setup_Paint_0+0x24  ;; 0x13d7e9
   \   000000A4   0078               LDRB     R0,[R0, #+0]
   \   000000A6   0028               CMP      R0,#+0
   \   000000A8   0DD1               BNE      ??Setup_Paint_3
   5969                        {
   5970                              
   5971                          char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   000000AA   6846               MOV      R0,SP
   \   000000AC   1149               LDR      R1,??Setup_Paint_0+0x28  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`
   \   000000AE   1CC9               LDM      R1!,{R2-R4}
   \   000000B0   1CC0               STM      R0!,{R2-R4}
   5972                          CopyToCanvasPoint((char *)ekran_tab,45,99-(13*(5)),8,10); 
   \   000000B2   82B0               SUB      SP,SP,#+8
   \   000000B4   0A20               MOVS     R0,#+10
   \   000000B6   0090               STR      R0,[SP, #+0]
   \   000000B8   0823               MOVS     R3,#+8
   \   000000BA   2222               MOVS     R2,#+34
   \   000000BC   2D21               MOVS     R1,#+45
   \   000000BE   02A8               ADD      R0,SP,#+8
   \   000000C0   ........           BL       CopyToCanvasPoint
   \   000000C4   02B0               ADD      SP,SP,#+8
   5973                        }
   5974                }//________________________________________________________________________
   \                     ??Setup_Paint_3:
   \   000000C6   1FBC               POP      {R0-R4}
   \   000000C8   01BC               POP      {R0}
   \   000000CA   0047               BX       R0               ;; return
   \                     ??Setup_Paint_0:
   \   000000CC   ........           DC32     SlaveMode
   \   000000D0   ........           DC32     g_leng
   \   000000D4   ........           DC32     Speech
   \   000000D8   36060000           DC32     0x636
   \   000000DC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5` + 12
   \   000000E0   BD060000           DC32     0x6bd
   \   000000E4   19050000           DC32     0x519
   \   000000E8   ........           DC32     RF_Channel_nr_tmp
   \   000000EC   ........           DC32     RF_Status + 13
   \   000000F0   E9D71300           DC32     0x13d7e9
   \   000000F4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`
   5975          
   5976          
   5977          
   5978                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   5979                void Setup_Event(void)
   5980                {
   \                     Setup_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   5981                  int ans;
   5982                  char repaint=0;
   \   00000002   0024               MOVS     R4,#+0
   5983                  if (!SlaveMode) 
   \   00000004   2E48               LDR      R0,??Setup_Event_0  ;; SlaveMode
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   12D1               BNE      ??Setup_Event_1
   5984                    {
   5985                      ans=List_Event(X_up, Y_up, X_down, Y_down, 8 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000C   2100               MOVS     R1,R4
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0D21               MOVS     R1,#+13
   \   00000012   0820               MOVS     R0,#+8
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   2B48               LDR      R0,??Setup_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   435E               LDRSH    R3,[R0, R1]
   \   0000001C   2A48               LDR      R0,??Setup_Event_0+0x8  ;; X_down
   \   0000001E   425E               LDRSH    R2,[R0, R1]
   \   00000020   2A48               LDR      R0,??Setup_Event_0+0xC  ;; Y_up
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   2A48               LDR      R0,??Setup_Event_0+0x10  ;; X_up
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   405F               LDRSH    R0,[R0, R5]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   12E0               B        ??Setup_Event_2
   5986                    }else{
   5987                      ans=List_Event(X_up, Y_up, X_down, Y_down, 7 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??Setup_Event_1:
   \   00000032   2100               MOVS     R1,R4
   \   00000034   0800               MOVS     R0,R1
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0D21               MOVS     R1,#+13
   \   0000003A   0720               MOVS     R0,#+7
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   2148               LDR      R0,??Setup_Event_0+0x4  ;; Y_down
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   435E               LDRSH    R3,[R0, R1]
   \   00000044   2048               LDR      R0,??Setup_Event_0+0x8  ;; X_down
   \   00000046   425E               LDRSH    R2,[R0, R1]
   \   00000048   2048               LDR      R0,??Setup_Event_0+0xC  ;; Y_up
   \   0000004A   415E               LDRSH    R1,[R0, R1]
   \   0000004C   2048               LDR      R0,??Setup_Event_0+0x10  ;; X_up
   \   0000004E   0025               MOVS     R5,#+0
   \   00000050   405F               LDRSH    R0,[R0, R5]
   \   00000052   ........           BL       List_Event
   \   00000056   04B0               ADD      SP,SP,#+16
   5988                    }
   5989                  if (ans>0)
   \                     ??Setup_Event_2:
   \   00000058   0128               CMP      R0,#+1
   \   0000005A   21DB               BLT      ??Setup_Event_3
   5990                    {
   5991                      repaint=1;
   \   0000005C   0124               MOVS     R4,#+1
   5992                    if (ans!=6) MenuLevel=(MenuLevel*10+ans);
   \   0000005E   0628               CMP      R0,#+6
   \   00000060   05D0               BEQ      ??Setup_Event_4
   \   00000062   1C4D               LDR      R5,??Setup_Event_0+0x14  ;; TextToChangeLength
   \   00000064   A96C               LDR      R1,[R5, #+72]
   \   00000066   0A22               MOVS     R2,#+10
   \   00000068   5143               MULS     R1,R2,R1
   \   0000006A   0918               ADDS     R1,R1,R0
   \   0000006C   A964               STR      R1,[R5, #+72]
   5993                    if (ans==6)
   \                     ??Setup_Event_4:
   \   0000006E   0628               CMP      R0,#+6
   \   00000070   1FD1               BNE      ??Setup_Event_5
   5994                    {
   5995                      char SoundOff;
   5996                      if (AT91C_IFLASH_MEM->Config.SoundOff)
   \   00000072   194B               LDR      R3,??Setup_Event_0+0x18  ;; 0x13d7e9
   \   00000074   6846               MOV      R0,SP
   \   00000076   1978               LDRB     R1,[R3, #+0]
   \   00000078   4A1E               SUBS     R2,R1,#+1
   \   0000007A   9241               SBCS     R2,R2,R2
   \   0000007C   D20F               LSRS     R2,R2,#+31
   \   0000007E   0270               STRB     R2,[R0, #+0]
   5997                        {
   5998                          SoundOff=0;
   5999                        }else{
   6000                          SoundOff=1; 
   6001                        }
   6002                      
   6003                      //zapis do flash
   6004                        unsigned int Save = __get_interrupt_state();  
   \   00000080   ........           BL       __iar_get_interrupt_state
   \   00000084   0500               MOVS     R5,R0
   6005                        __disable_interrupt();
   \   00000086   ........           BL       __iar_disable_interrupt
   6006                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.SoundOff)), (char*) (&(SoundOff)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000008A   2200               MOVS     R2,R4
   \   0000008C   6946               MOV      R1,SP
   \   0000008E   1800               MOVS     R0,R3
   \   00000090   ........           BL       FlashWrite
   6007                        __set_interrupt_state(Save);
   \   00000094   2800               MOVS     R0,R5
   \   00000096   ........           BL       __iar_set_interrupt_state
   6008                        __enable_interrupt();
   \   0000009A   ........           BL       __iar_enable_interrupt
   \   0000009E   08E0               B        ??Setup_Event_5
   6009                        //koniec zapisu do flash
   6010                       
   6011                    }
   6012                    
   6013                    }else if (ans<0){
   \                     ??Setup_Event_3:
   \   000000A0   0028               CMP      R0,#+0
   \   000000A2   06D5               BPL      ??Setup_Event_5
   6014                      MenuLevel=(MenuLevel/10);
   \   000000A4   0B4D               LDR      R5,??Setup_Event_0+0x14  ;; TextToChangeLength
   \   000000A6   A86C               LDR      R0,[R5, #+72]
   \   000000A8   0A21               MOVS     R1,#+10
   \   000000AA   ........           BL       __aeabi_idivmod
   \   000000AE   A864               STR      R0,[R5, #+72]
   6015                      repaint=1;
   \   000000B0   0124               MOVS     R4,#+1
   6016                    } 
   6017                  
   6018                   if (repaint) MenuPaint();
   \                     ??Setup_Event_5:
   \   000000B2   002C               CMP      R4,#+0
   \   000000B4   01D0               BEQ      ??Setup_Event_6
   \   000000B6   ........           BL       MenuPaint
   6019                }//_______________________________________________________________________
   \                     ??Setup_Event_6:
   \   000000BA   38BC               POP      {R3-R5}
   \   000000BC   01BC               POP      {R0}
   \   000000BE   0047               BX       R0               ;; return
   \                     ??Setup_Event_0:
   \   000000C0   ........           DC32     SlaveMode
   \   000000C4   ........           DC32     Y_down
   \   000000C8   ........           DC32     X_down
   \   000000CC   ........           DC32     Y_up
   \   000000D0   ........           DC32     X_up
   \   000000D4   ........           DC32     TextToChangeLength
   \   000000D8   E9D71300           DC32     0x13d7e9
   6020          
   6021          
   6022          
   6023          //Ustawienia jêzyka******************************************************************************************************************
   6024          
   6025                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6026                void SetupLang_Paint(void)
   6027                {  
   \                     SetupLang_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   6028                    //char Y=3;
   6029                    int Y_tmp = 3;   //przesuniêcie w dó³
   6030          
   6031                    List_Paint("Jezyk",2,15,Y_tmp,7,0,Speech[g_leng].Polski, Speech[g_leng].Angielski,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   194C               LDR      R4,??SetupLang_Paint_0  ;; g_leng
   \   00000004   2068               LDR      R0,[R4, #+0]
   \   00000006   9621               MOVS     R1,#+150
   \   00000008   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000000A   4843               MULS     R0,R1,R0
   \   0000000C   1749               LDR      R1,??SetupLang_Paint_0+0x4  ;; Speech
   \   0000000E   0A18               ADDS     R2,R1,R0
   \   00000010   174D               LDR      R5,??SetupLang_Paint_0+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   0800               MOVS     R0,R1
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   1100               MOVS     R1,R2
   \   0000001E   E131               ADDS     R1,R1,#+225
   \   00000020   D232               ADDS     R2,R2,#+210
   \   00000022   1000               MOVS     R0,R2
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   0720               MOVS     R0,#+7
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0323               MOVS     R3,#+3
   \   0000002E   0F22               MOVS     R2,#+15
   \   00000030   0221               MOVS     R1,#+2
   \   00000032   2800               MOVS     R0,R5
   \   00000034   0C30               ADDS     R0,R0,#+12
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   6032                
   6033                    
   6034                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000003C   6846               MOV      R0,SP
   \   0000003E   0ECD               LDM      R5!,{R1-R3}
   \   00000040   0EC0               STM      R0!,{R1-R3}
   6035                 
   6036                  
   6037                    CopyToCanvasPoint((char *)ekran_tab,45,97-Y_tmp-(15*(g_leng)),8,10); 
   \   00000042   82B0               SUB      SP,SP,#+8
   \   00000044   0A20               MOVS     R0,#+10
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   0823               MOVS     R3,#+8
   \   0000004A   5E20               MOVS     R0,#+94
   \   0000004C   2168               LDR      R1,[R4, #+0]
   \   0000004E   0F22               MOVS     R2,#+15
   \   00000050   5143               MULS     R1,R2,R1
   \   00000052   421A               SUBS     R2,R0,R1
   \   00000054   1206               LSLS     R2,R2,#+24
   \   00000056   120E               LSRS     R2,R2,#+24
   \   00000058   2D21               MOVS     R1,#+45
   \   0000005A   02A8               ADD      R0,SP,#+8
   \   0000005C   ........           BL       CopyToCanvasPoint
   \   00000060   02B0               ADD      SP,SP,#+8
   6038                    
   6039                }//________________________________________________________________________
   \   00000062   3EBC               POP      {R1-R5}
   \   00000064   01BC               POP      {R0}
   \   00000066   0047               BX       R0               ;; return
   \                     ??SetupLang_Paint_0:
   \   00000068   ........           DC32     g_leng
   \   0000006C   ........           DC32     Speech
   \   00000070   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`
   6040          
   6041          
   6042          
   6043                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6044                void SetupLang_Event(void)
   6045                {
   \                     SetupLang_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6046                  int ans;
   6047           
   6048                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 7,3); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1B4C               LDR      R4,??SetupLang_Event_0  ;; X_up
   \   00000004   1B4D               LDR      R5,??SetupLang_Event_0+0x4  ;; Y_up
   \   00000006   0321               MOVS     R1,#+3
   \   00000008   0720               MOVS     R0,#+7
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0220               MOVS     R0,#+2
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   1948               LDR      R0,??SetupLang_Event_0+0x8  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   1848               LDR      R0,??SetupLang_Event_0+0xC  ;; X_down
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   295E               LDRSH    R1,[R5, R0]
   \   00000020   205E               LDRSH    R0,[R4, R0]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   6049            
   6050                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0FD0               BEQ      ??SetupLang_Event_1
   6051                    {
   6052                      if ((ans>0) && (ans<3))
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   1CDB               BLT      ??SetupLang_Event_2
   \   00000030   0328               CMP      R0,#+3
   \   00000032   1ADA               BGE      ??SetupLang_Event_2
   6053                      {
   6054                        g_leng=ans-1;
   \   00000034   1249               LDR      R1,??SetupLang_Event_0+0x10  ;; g_leng
   \   00000036   401E               SUBS     R0,R0,#+1
   \   00000038   0860               STR      R0,[R1, #+0]
   6055                        MenuLevel=(MenuLevel/10);
   \   0000003A   124C               LDR      R4,??SetupLang_Event_0+0x14  ;; TextToChangeLength
   \   0000003C   A06C               LDR      R0,[R4, #+72]
   \   0000003E   0A21               MOVS     R1,#+10
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   A064               STR      R0,[R4, #+72]
   6056                        MenuPaint();
   \   00000046   ........           BL       MenuPaint
   \   0000004A   0EE0               B        ??SetupLang_Event_2
   6057                      }
   6058                    } 
   6059                  else
   6060                    {
   6061                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??SetupLang_Event_1:
   \   0000004C   205E               LDRSH    R0,[R4, R0]
   \   0000004E   0128               CMP      R0,#+1
   \   00000050   0BDB               BLT      ??SetupLang_Event_2
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   285E               LDRSH    R0,[R5, R0]
   \   00000056   0128               CMP      R0,#+1
   \   00000058   07DB               BLT      ??SetupLang_Event_2
   6062                      {
   6063                        MenuLevel=(MenuLevel/10);
   \   0000005A   0A4C               LDR      R4,??SetupLang_Event_0+0x14  ;; TextToChangeLength
   \   0000005C   A06C               LDR      R0,[R4, #+72]
   \   0000005E   0A21               MOVS     R1,#+10
   \   00000060   ........           BL       __aeabi_idivmod
   \   00000064   A064               STR      R0,[R4, #+72]
   6064                        MenuPaint();
   \   00000066   ........           BL       MenuPaint
   6065                      }
   6066                    }
   6067                }//_______________________________________________________________________
   \                     ??SetupLang_Event_2:
   \   0000006A   38BC               POP      {R3-R5}
   \   0000006C   01BC               POP      {R0}
   \   0000006E   0047               BX       R0               ;; return
   \                     ??SetupLang_Event_0:
   \   00000070   ........           DC32     X_up
   \   00000074   ........           DC32     Y_up
   \   00000078   ........           DC32     Y_down
   \   0000007C   ........           DC32     X_down
   \   00000080   ........           DC32     g_leng
   \   00000084   ........           DC32     TextToChangeLength
   6068          
   6069          
   6070          
   6071          
   6072          
   6073          
   6074          
   6075          //Ustawienia hasla wybór poziomu******************************************************************************************************************
   6076          
   6077                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6078                void SetupPass_Paint(void)
   6079                {  
   \                     SetupPass_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   6080          
   6081            
   6082                     
   6083                    if (g_NeedPass==1)
   \   00000002   2548               LDR      R0,??SetupPass_Paint_0  ;; g_NeedPass
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   2448               LDR      R0,??SetupPass_Paint_0+0x4  ;; g_leng
   \   0000000A   0068               LDR      R0,[R0, #+0]
   \   0000000C   29D1               BNE      ??SetupPass_Paint_1
   6084                    {
   6085                      List_Paint(Speech[g_leng].Hasla     ,2,15,10,0,0,Speech[g_leng].HasloWl, Speech[g_leng].ZmHasla,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000E   9621               MOVS     R1,#+150
   \   00000010   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000012   4843               MULS     R0,R1,R0
   \   00000014   2249               LDR      R1,??SetupPass_Paint_0+0x8  ;; Speech
   \   00000016   0C18               ADDS     R4,R1,R0
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0800               MOVS     R0,R1
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   FF20               MOVS     R0,#+255
   \   00000024   1E30               ADDS     R0,R0,#+30       ;; #+285
   \   00000026   2118               ADDS     R1,R4,R0
   \   00000028   1E48               LDR      R0,??SetupPass_Paint_0+0xC  ;; 0x555
   \   0000002A   2018               ADDS     R0,R4,R0
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0021               MOVS     R1,#+0
   \   00000030   0800               MOVS     R0,R1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0A23               MOVS     R3,#+10
   \   00000036   0F22               MOVS     R2,#+15
   \   00000038   0221               MOVS     R1,#+2
   \   0000003A   C334               ADDS     R4,R4,#+195
   \   0000003C   2000               MOVS     R0,R4
   \   0000003E   ........           BL       List_Paint
   \   00000042   0AB0               ADD      SP,SP,#+40
   6086                      char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};  
   \   00000044   6846               MOV      R0,SP
   \   00000046   1849               LDR      R1,??SetupPass_Paint_0+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`
   \   00000048   1CC9               LDM      R1!,{R2-R4}
   \   0000004A   1CC0               STM      R0!,{R2-R4}
   6087                      CopyToCanvasPoint((char *)ekran_tab,50,97-(10),8,10); 
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0A20               MOVS     R0,#+10
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   0823               MOVS     R3,#+8
   \   00000054   5722               MOVS     R2,#+87
   \   00000056   3221               MOVS     R1,#+50
   \   00000058   02A8               ADD      R0,SP,#+8
   \   0000005A   ........           BL       CopyToCanvasPoint
   \   0000005E   02B0               ADD      SP,SP,#+8
   \   00000060   16E0               B        ??SetupPass_Paint_2
   6088                    }else
   6089                    {
   6090                      List_Paint(Speech[g_leng].Hasla     ,1,15,10,0,0,Speech[g_leng].HasloWl, 0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12]) 
   \                     ??SetupPass_Paint_1:
   \   00000062   9621               MOVS     R1,#+150
   \   00000064   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000066   4843               MULS     R0,R1,R0
   \   00000068   0D49               LDR      R1,??SetupPass_Paint_0+0x8  ;; Speech
   \   0000006A   0C18               ADDS     R4,R1,R0
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   0800               MOVS     R0,R1
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   03B4               PUSH     {R0,R1}
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   0B48               LDR      R0,??SetupPass_Paint_0+0xC  ;; 0x555
   \   00000078   2018               ADDS     R0,R4,R0
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0800               MOVS     R0,R1
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   0A23               MOVS     R3,#+10
   \   00000082   0F22               MOVS     R2,#+15
   \   00000084   0121               MOVS     R1,#+1
   \   00000086   C334               ADDS     R4,R4,#+195
   \   00000088   2000               MOVS     R0,R4
   \   0000008A   ........           BL       List_Paint
   \   0000008E   0AB0               ADD      SP,SP,#+40
   6091                    }
   6092                  
   6093                }//________________________________________________________________________
   \                     ??SetupPass_Paint_2:
   \   00000090   1FBC               POP      {R0-R4}
   \   00000092   01BC               POP      {R0}
   \   00000094   0047               BX       R0               ;; return
   \   00000096   C046               Nop      
   \                     ??SetupPass_Paint_0:
   \   00000098   ........           DC32     g_NeedPass
   \   0000009C   ........           DC32     g_leng
   \   000000A0   ........           DC32     Speech
   \   000000A4   55050000           DC32     0x555
   \   000000A8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`
   6094          
   6095          
   6096          
   6097                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6098                void SetupPass_Event(void)
   6099                {
   \                     SetupPass_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6100                  int ans;
   6101          
   6102                  if (g_NeedPass==1)
   \   00000002   3C4D               LDR      R5,??SetupPass_Event_0  ;; g_NeedPass
   \   00000004   2878               LDRB     R0,[R5, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   14D1               BNE      ??SetupPass_Event_1
   6103                    {  
   6104                      ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,10); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000A   0A21               MOVS     R1,#+10
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   0220               MOVS     R0,#+2
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   3848               LDR      R0,??SetupPass_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   435E               LDRSH    R3,[R0, R1]
   \   0000001C   3748               LDR      R0,??SetupPass_Event_0+0x8  ;; X_down
   \   0000001E   425E               LDRSH    R2,[R0, R1]
   \   00000020   3748               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   3748               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   00000026   0024               MOVS     R4,#+0
   \   00000028   005F               LDRSH    R0,[R0, R4]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0400               MOVS     R4,R0
   \   00000032   13E0               B        ??SetupPass_Event_2
   6105                    }else{
   6106                      ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 15, 0,10); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??SetupPass_Event_1:
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0F21               MOVS     R1,#+15
   \   0000003C   0120               MOVS     R0,#+1
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   2D48               LDR      R0,??SetupPass_Event_0+0x4  ;; Y_down
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   435E               LDRSH    R3,[R0, R1]
   \   00000046   2D48               LDR      R0,??SetupPass_Event_0+0x8  ;; X_down
   \   00000048   425E               LDRSH    R2,[R0, R1]
   \   0000004A   2D48               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   0000004C   415E               LDRSH    R1,[R0, R1]
   \   0000004E   2D48               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   00000050   0024               MOVS     R4,#+0
   \   00000052   005F               LDRSH    R0,[R0, R4]
   \   00000054   ........           BL       List_Event
   \   00000058   04B0               ADD      SP,SP,#+16
   \   0000005A   0400               MOVS     R4,R0
   6107                    }
   6108                  
   6109                  if (ans)          {
   \                     ??SetupPass_Event_2:
   \   0000005C   002C               CMP      R4,#+0
   \   0000005E   33D0               BEQ      ??SetupPass_Event_3
   6110                      if (ans==1)
   \   00000060   012C               CMP      R4,#+1
   \   00000062   27D1               BNE      ??SetupPass_Event_4
   6111                      
   6112                        
   6113                      if (g_NeedPass) 
   \   00000064   2878               LDRB     R0,[R5, #+0]
   \   00000066   0028               CMP      R0,#+0
   \   00000068   12D0               BEQ      ??SetupPass_Event_5
   6114                      {
   6115                        char NeedPassFlag=0xEC;
   \   0000006A   6846               MOV      R0,SP
   \   0000006C   EC21               MOVS     R1,#+236
   \   0000006E   0170               STRB     R1,[R0, #+0]
   6116                        g_NeedPass=0; 
   \   00000070   0020               MOVS     R0,#+0
   \   00000072   2870               STRB     R0,[R5, #+0]
   6117                        //zapis do flash
   6118                        unsigned int Save = __get_interrupt_state();  
   \   00000074   ........           BL       __iar_get_interrupt_state
   \   00000078   0500               MOVS     R5,R0
   6119                        __disable_interrupt();
   \   0000007A   ........           BL       __iar_disable_interrupt
   6120                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.NeedPass1)), (char*) (&(NeedPassFlag)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000007E   0122               MOVS     R2,#+1
   \   00000080   6946               MOV      R1,SP
   \   00000082   2148               LDR      R0,??SetupPass_Event_0+0x14  ;; 0x13d7dc
   \   00000084   ........           BL       FlashWrite
   6121                        __set_interrupt_state(Save);
   \   00000088   2800               MOVS     R0,R5
   \   0000008A   ........           BL       __iar_set_interrupt_state
   \   0000008E   11E0               B        ??SetupPass_Event_4
   6122                        //koniec zapisu do flash
   6123                      }else
   6124                      {
   6125                        g_NeedPass=1;
   \                     ??SetupPass_Event_5:
   \   00000090   0120               MOVS     R0,#+1
   \   00000092   2870               STRB     R0,[R5, #+0]
   6126                        char NeedPassFlag=0xEB;
   \   00000094   6846               MOV      R0,SP
   \   00000096   EB21               MOVS     R1,#+235
   \   00000098   0170               STRB     R1,[R0, #+0]
   6127                        //zapis do flash
   6128                        unsigned int Save = __get_interrupt_state();  
   \   0000009A   ........           BL       __iar_get_interrupt_state
   \   0000009E   0500               MOVS     R5,R0
   6129                        __disable_interrupt();
   \   000000A0   ........           BL       __iar_disable_interrupt
   6130                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.NeedPass1)), (char*) (&(NeedPassFlag)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000A4   0122               MOVS     R2,#+1
   \   000000A6   6946               MOV      R1,SP
   \   000000A8   1748               LDR      R0,??SetupPass_Event_0+0x14  ;; 0x13d7dc
   \   000000AA   ........           BL       FlashWrite
   6131                        __set_interrupt_state(Save);
   \   000000AE   2800               MOVS     R0,R5
   \   000000B0   ........           BL       __iar_set_interrupt_state
   6132                        //koniec zapisu do flash
   6133                      }
   6134                       
   6135                    
   6136                      if (ans==2)
   \                     ??SetupPass_Event_4:
   \   000000B4   022C               CMP      R4,#+2
   \   000000B6   05D1               BNE      ??SetupPass_Event_6
   6137                      {
   6138                         MenuLevel=(MenuLevel*10+1);
   \   000000B8   144D               LDR      R5,??SetupPass_Event_0+0x18  ;; TextToChangeLength
   \   000000BA   A86C               LDR      R0,[R5, #+72]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   4843               MULS     R0,R1,R0
   \   000000C0   401C               ADDS     R0,R0,#+1
   \   000000C2   A864               STR      R0,[R5, #+72]
   6139                      }
   6140                      
   6141                      
   6142                      MenuPaint();
   \                     ??SetupPass_Event_6:
   \   000000C4   ........           BL       MenuPaint
   6143                    }
   6144                    if (ans<0)
   \                     ??SetupPass_Event_3:
   \   000000C8   002C               CMP      R4,#+0
   \   000000CA   10D5               BPL      ??SetupPass_Event_7
   6145                    {
   6146                      if ((X_up>0) &&(Y_up>0)) 
   \   000000CC   0D48               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   405E               LDRSH    R0,[R0, R1]
   \   000000D2   0128               CMP      R0,#+1
   \   000000D4   0BDB               BLT      ??SetupPass_Event_7
   \   000000D6   0A48               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   000000D8   405E               LDRSH    R0,[R0, R1]
   \   000000DA   0128               CMP      R0,#+1
   \   000000DC   07DB               BLT      ??SetupPass_Event_7
   6147                      {
   6148                        MenuLevel=(MenuLevel/10);
   \   000000DE   0B4D               LDR      R5,??SetupPass_Event_0+0x18  ;; TextToChangeLength
   \   000000E0   A86C               LDR      R0,[R5, #+72]
   \   000000E2   0A21               MOVS     R1,#+10
   \   000000E4   ........           BL       __aeabi_idivmod
   \   000000E8   A864               STR      R0,[R5, #+72]
   6149                        MenuPaint();
   \   000000EA   ........           BL       MenuPaint
   6150                      }
   6151                    }
   6152                }//_______________________________________________________________________
   \                     ??SetupPass_Event_7:
   \   000000EE   38BC               POP      {R3-R5}
   \   000000F0   01BC               POP      {R0}
   \   000000F2   0047               BX       R0               ;; return
   \                     ??SetupPass_Event_0:
   \   000000F4   ........           DC32     g_NeedPass
   \   000000F8   ........           DC32     Y_down
   \   000000FC   ........           DC32     X_down
   \   00000100   ........           DC32     Y_up
   \   00000104   ........           DC32     X_up
   \   00000108   DCD71300           DC32     0x13d7dc
   \   0000010C   ........           DC32     TextToChangeLength
   6153          
   6154          
   6155                
   6156          
   6157          
   6158          
   6159          
   6160          //Wpisanie obecnego has³a  poziom 1/2**************************************************************************************************************
   6161                char InsertOldPass1[9]={0,0,0,0,0,0,0,0,0};
   6162              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6163              void SetupOldPass_Paint()
   6164              {  
   \                     SetupOldPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   6165                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   9624               MOVS     R4,#+150
   \   00000004   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000006   1B4D               LDR      R5,??SetupOldPass_Paint_0  ;; g_leng
   \   00000008   1B4E               LDR      R6,??SetupOldPass_Paint_0+0x4  ;; Speech
   \   0000000A   1CA2               ADR      R2,??SetupOldPass_Paint_0+0x8  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000C   1CA1               ADR      R1,??SetupOldPass_Paint_0+0xC  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000E   FF20               MOVS     R0,#+255
   \   00000010   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000012   2B68               LDR      R3,[R5, #+0]
   \   00000014   6343               MULS     R3,R4,R3
   \   00000016   F318               ADDS     R3,R6,R3
   \   00000018   1818               ADDS     R0,R3,R0
   \   0000001A   ........           BL       Number_Paint
   6166                    
   6167                    Label(Speech[g_leng].ObecneHaslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001E   82B0               SUB      SP,SP,#+8
   \   00000020   0020               MOVS     R0,#+0
   \   00000022   0090               STR      R0,[SP, #+0]
   \   00000024   7F21               MOVS     R1,#+127
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3A21               MOVS     R1,#+58
   \   0000002A   0F20               MOVS     R0,#+15
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   6623               MOVS     R3,#+102
   \   00000030   0322               MOVS     R2,#+3
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   FF20               MOVS     R0,#+255
   \   00000036   7830               ADDS     R0,R0,#+120      ;; #+375
   \   00000038   2D68               LDR      R5,[R5, #+0]
   \   0000003A   6543               MULS     R5,R4,R5
   \   0000003C   7419               ADDS     R4,R6,R5
   \   0000003E   2018               ADDS     R0,R4,R0
   \   00000040   ........           BL       Label
   \   00000044   06B0               ADD      SP,SP,#+24
   6168              
   6169                    if (InsertOldPass1[8])  Label(InsertOldPass1,2,4,90,8,55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000046   0F4C               LDR      R4,??SetupOldPass_Paint_0+0x10  ;; InsertOldPass1
   \   00000048   207A               LDRB     R0,[R4, #+8]
   \   0000004A   0028               CMP      R0,#+0
   \   0000004C   0ED0               BEQ      ??SetupOldPass_Paint_1
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   7F21               MOVS     R1,#+127
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   3721               MOVS     R1,#+55
   \   0000005A   0820               MOVS     R0,#+8
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   5A23               MOVS     R3,#+90
   \   00000060   0422               MOVS     R2,#+4
   \   00000062   0221               MOVS     R1,#+2
   \   00000064   2000               MOVS     R0,R4
   \   00000066   ........           BL       Label
   \   0000006A   06B0               ADD      SP,SP,#+24
   6170          
   6171                    
   6172              }//________________________________________________________________________
   \                     ??SetupOldPass_Paint_1:
   \   0000006C   70BC               POP      {R4-R6}
   \   0000006E   01BC               POP      {R0}
   \   00000070   0047               BX       R0               ;; return
   \   00000072   C046               Nop      
   \                     ??SetupOldPass_Paint_0:
   \   00000074   ........           DC32     g_leng
   \   00000078   ........           DC32     Speech
   \   0000007C   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000080   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000084   ........           DC32     InsertOldPass1
   6173          
   6174          
   6175              
   6176              //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6177              void SetupOldPass_Event(char level)
   6178              {
   \                     SetupOldPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   6179                  int ans;
   6180                  char roz=0;
   6181          
   6182                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   5E48               LDR      R0,??SetupOldPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   5E48               LDR      R0,??SetupOldPass_Event_0+0x4  ;; X_down
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   5E48               LDR      R0,??SetupOldPass_Event_0+0x8  ;; Y_up
   \   00000010   415E               LDRSH    R1,[R0, R1]
   \   00000012   5E48               LDR      R0,??SetupOldPass_Event_0+0xC  ;; X_up
   \   00000014   0024               MOVS     R4,#+0
   \   00000016   005F               LDRSH    R0,[R0, R4]
   \   00000018   ........           BL       Number_Event
   \   0000001C   0400               MOVS     R4,R0
   6183            
   6184                  if (ans>0)
   \   0000001E   012C               CMP      R4,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   95E0               B        ??SetupOldPass_Event_1
   6185                    {
   6186                      
   6187                      //MenuPaint();
   6188                      if (InsertOldPass1[8]<=7) 
   \   00000024   5A4D               LDR      R5,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1
   \   00000026   287A               LDRB     R0,[R5, #+8]
   \   00000028   0828               CMP      R0,#+8
   \   0000002A   10D2               BCS      ??SetupOldPass_Event_2
   6189                      { 
   6190                          if ((ans<10) || (ans==11)) 
   \   0000002C   0A2C               CMP      R4,#+10
   \   0000002E   01DB               BLT      ??SetupOldPass_Event_3
   \   00000030   0B2C               CMP      R4,#+11
   \   00000032   0CD1               BNE      ??SetupOldPass_Event_2
   6191                          {
   6192                            if (ans<10) InsertOldPass1[InsertOldPass1[8]]=ans+48;
   \                     ??SetupOldPass_Event_3:
   \   00000034   0A2C               CMP      R4,#+10
   \   00000036   02DA               BGE      ??SetupOldPass_Event_4
   \   00000038   2100               MOVS     R1,R4
   \   0000003A   3031               ADDS     R1,R1,#+48
   \   0000003C   2954               STRB     R1,[R5, R0]
   6193                            if (ans==11) InsertOldPass1[InsertOldPass1[8]]=ans+37;
   \                     ??SetupOldPass_Event_4:
   \   0000003E   0B2C               CMP      R4,#+11
   \   00000040   02D1               BNE      ??SetupOldPass_Event_5
   \   00000042   287A               LDRB     R0,[R5, #+8]
   \   00000044   3021               MOVS     R1,#+48
   \   00000046   2954               STRB     R1,[R5, R0]
   6194                            InsertOldPass1[8]++;
   \                     ??SetupOldPass_Event_5:
   \   00000048   287A               LDRB     R0,[R5, #+8]
   \   0000004A   401C               ADDS     R0,R0,#+1
   \   0000004C   2872               STRB     R0,[R5, #+8]
   6195                            
   6196                          }
   6197                          
   6198                      }
   6199                      
   6200                      if ((ans==10) && (InsertOldPass1[8]>0) ) 
   \                     ??SetupOldPass_Event_2:
   \   0000004E   0A2C               CMP      R4,#+10
   \   00000050   08D1               BNE      ??SetupOldPass_Event_6
   \   00000052   287A               LDRB     R0,[R5, #+8]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   05D0               BEQ      ??SetupOldPass_Event_6
   6201                      {InsertOldPass1[8]--; 
   \   00000058   401E               SUBS     R0,R0,#+1
   \   0000005A   2872               STRB     R0,[R5, #+8]
   6202                      InsertOldPass1[InsertOldPass1[8]]=0;
   \   0000005C   0006               LSLS     R0,R0,#+24
   \   0000005E   000E               LSRS     R0,R0,#+24
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   2954               STRB     R1,[R5, R0]
   6203                      }
   6204                      
   6205                      if (ans==12)
   \                     ??SetupOldPass_Event_6:
   \   00000064   0C2C               CMP      R4,#+12
   \   00000066   5ED1               BNE      ??SetupOldPass_Event_7
   6206                      {
   6207                        roz=0;
   \   00000068   0020               MOVS     R0,#+0
   \   0000006A   0100               MOVS     R1,R0
   6208                        for (int i=0; i<=7; i++)
   \   0000006C   0200               MOVS     R2,R0
   \   0000006E   13E0               B        ??SetupOldPass_Event_8
   6209                        {
   6210                            if ((g_Password_1[i]!=InsertOldPass1[i]) && (level==1)) roz=1;
   \                     ??SetupOldPass_Event_9:
   \   00000070   AB5C               LDRB     R3,[R5, R2]
   \   00000072   484E               LDR      R6,??SetupOldPass_Event_0+0x14  ;; g_Password_1
   \   00000074   B65C               LDRB     R6,[R6, R2]
   \   00000076   9E42               CMP      R6,R3
   \   00000078   04D0               BEQ      ??SetupOldPass_Event_10
   \   0000007A   6E46               MOV      R6,SP
   \   0000007C   367A               LDRB     R6,[R6, #+8]
   \   0000007E   012E               CMP      R6,#+1
   \   00000080   00D1               BNE      ??SetupOldPass_Event_10
   \   00000082   0121               MOVS     R1,#+1
   6211                            if ((g_Password_2[i]!=InsertOldPass1[i]) && (level==2)) roz=1;
   \                     ??SetupOldPass_Event_10:
   \   00000084   444E               LDR      R6,??SetupOldPass_Event_0+0x18  ;; g_Password_2
   \   00000086   B65C               LDRB     R6,[R6, R2]
   \   00000088   9E42               CMP      R6,R3
   \   0000008A   04D0               BEQ      ??SetupOldPass_Event_11
   \   0000008C   6B46               MOV      R3,SP
   \   0000008E   1B7A               LDRB     R3,[R3, #+8]
   \   00000090   022B               CMP      R3,#+2
   \   00000092   00D1               BNE      ??SetupOldPass_Event_11
   \   00000094   0121               MOVS     R1,#+1
   6212                        }
   \                     ??SetupOldPass_Event_11:
   \   00000096   521C               ADDS     R2,R2,#+1
   \                     ??SetupOldPass_Event_8:
   \   00000098   082A               CMP      R2,#+8
   \   0000009A   E9DB               BLT      ??SetupOldPass_Event_9
   6213                        
   6214                        //has³o programisty
   6215                        if (roz)
   \   0000009C   0029               CMP      R1,#+0
   \   0000009E   1BD0               BEQ      ??SetupOldPass_Event_12
   6216                        {
   6217                          roz=0;
   \   000000A0   0100               MOVS     R1,R0
   6218                          char MHS[]="060480";
   \   000000A2   6A46               MOV      R2,SP
   \   000000A4   3D4B               LDR      R3,??SetupOldPass_Event_0+0x1C  ;; `?<Constant "060480">_1`
   \   000000A6   C0CB               LDM      R3!,{R6,R7}
   \   000000A8   C0C2               STM      R2!,{R6,R7}
   6219                            for (int i=0; i<6; i++)
   \   000000AA   0200               MOVS     R2,R0
   \   000000AC   12E0               B        ??SetupOldPass_Event_13
   \                     ??SetupOldPass_Event_14:
   \   000000AE   3C4B               LDR      R3,??SetupOldPass_Event_0+0x20  ;; InsertPass1
   \   000000B0   9B5C               LDRB     R3,[R3, R2]
   \   000000B2   6E46               MOV      R6,SP
   \   000000B4   B65C               LDRB     R6,[R6, R2]
   \   000000B6   9E42               CMP      R6,R3
   \   000000B8   04D0               BEQ      ??SetupOldPass_Event_15
   \   000000BA   6F46               MOV      R7,SP
   \   000000BC   3F7A               LDRB     R7,[R7, #+8]
   \   000000BE   012F               CMP      R7,#+1
   \   000000C0   00D1               BNE      ??SetupOldPass_Event_15
   6220                            {
   6221                                if ((MHS[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \   000000C2   0121               MOVS     R1,#+1
   6222                                if ((MHS[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??SetupOldPass_Event_15:
   \   000000C4   9E42               CMP      R6,R3
   \   000000C6   04D0               BEQ      ??SetupOldPass_Event_16
   \   000000C8   6B46               MOV      R3,SP
   \   000000CA   1B7A               LDRB     R3,[R3, #+8]
   \   000000CC   022B               CMP      R3,#+2
   \   000000CE   00D1               BNE      ??SetupOldPass_Event_16
   \   000000D0   0121               MOVS     R1,#+1
   6223                            }              
   \                     ??SetupOldPass_Event_16:
   \   000000D2   521C               ADDS     R2,R2,#+1
   \                     ??SetupOldPass_Event_13:
   \   000000D4   062A               CMP      R2,#+6
   \   000000D6   EADB               BLT      ??SetupOldPass_Event_14
   6224                        }
   6225                        
   6226                        if (roz==0)
   \                     ??SetupOldPass_Event_12:
   \   000000D8   0029               CMP      R1,#+0
   \   000000DA   10D1               BNE      ??SetupOldPass_Event_17
   6227                        {
   6228                           MenuLevel=(MenuLevel*10+1);
   \   000000DC   314E               LDR      R6,??SetupOldPass_Event_0+0x24  ;; TextToChangeLength
   \   000000DE   B16C               LDR      R1,[R6, #+72]
   \   000000E0   0A22               MOVS     R2,#+10
   \   000000E2   5143               MULS     R1,R2,R1
   \   000000E4   491C               ADDS     R1,R1,#+1
   \   000000E6   B164               STR      R1,[R6, #+72]
   6229                           for (int i=0; i<=7; i++) InsertOldPass1[i]=0;
   \   000000E8   0100               MOVS     R1,R0
   \   000000EA   0200               MOVS     R2,R0
   \   000000EC   01E0               B        ??SetupOldPass_Event_18
   \                     ??SetupOldPass_Event_19:
   \   000000EE   6A54               STRB     R2,[R5, R1]
   \   000000F0   491C               ADDS     R1,R1,#+1
   \                     ??SetupOldPass_Event_18:
   \   000000F2   0829               CMP      R1,#+8
   \   000000F4   FBDB               BLT      ??SetupOldPass_Event_19
   6230                           InsertOldPass1[8]=0;
   \   000000F6   2872               STRB     R0,[R5, #+8]
   6231                           MenuPaint();
   \   000000F8   ........           BL       MenuPaint
   \   000000FC   13E0               B        ??SetupOldPass_Event_7
   6232                        } 
   6233                        else
   6234                        {
   6235                           //informacja o b³ednym hale
   6236                          Message_Paint(2,"",Speech[g_leng].Bledne,Speech[g_leng].haslo,"","");
   \                     ??SetupOldPass_Event_17:
   \   000000FE   2A48               LDR      R0,??SetupOldPass_Event_0+0x28  ;; g_leng
   \   00000100   0068               LDR      R0,[R0, #+0]
   \   00000102   9621               MOVS     R1,#+150
   \   00000104   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000106   4843               MULS     R0,R1,R0
   \   00000108   2849               LDR      R1,??SetupOldPass_Event_0+0x2C  ;; Speech
   \   0000010A   0A18               ADDS     R2,R1,R0
   \   0000010C   28A0               ADR      R0,??SetupOldPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   0000010E   0100               MOVS     R1,R0
   \   00000110   03B4               PUSH     {R0,R1}
   \   00000112   FF21               MOVS     R1,#+255
   \   00000114   B431               ADDS     R1,R1,#+180      ;; #+435
   \   00000116   5318               ADDS     R3,R2,R1
   \   00000118   0F39               SUBS     R1,R1,#+15
   \   0000011A   5218               ADDS     R2,R2,R1
   \   0000011C   0100               MOVS     R1,R0
   \   0000011E   0220               MOVS     R0,#+2
   \   00000120   ........           BL       Message_Paint
   \   00000124   02B0               ADD      SP,SP,#+8
   6237                        }
   6238               
   6239                      }
   6240                      
   6241                      if ((ans>=1) && (ans<=11)) 
   \                     ??SetupOldPass_Event_7:
   \   00000126   012C               CMP      R4,#+1
   \   00000128   12DB               BLT      ??SetupOldPass_Event_1
   \   0000012A   0C2C               CMP      R4,#+12
   \   0000012C   10DA               BGE      ??SetupOldPass_Event_1
   6242                      {
   6243                        MenuPaint();
   \   0000012E   ........           BL       MenuPaint
   6244                        Label(InsertOldPass1,2,4,90,InsertOldPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000132   82B0               SUB      SP,SP,#+8
   \   00000134   0020               MOVS     R0,#+0
   \   00000136   0090               STR      R0,[SP, #+0]
   \   00000138   7F21               MOVS     R1,#+127
   \   0000013A   03B4               PUSH     {R0,R1}
   \   0000013C   3721               MOVS     R1,#+55
   \   0000013E   287A               LDRB     R0,[R5, #+8]
   \   00000140   03B4               PUSH     {R0,R1}
   \   00000142   5A23               MOVS     R3,#+90
   \   00000144   0422               MOVS     R2,#+4
   \   00000146   0221               MOVS     R1,#+2
   \   00000148   2800               MOVS     R0,R5
   \   0000014A   ........           BL       Label
   \   0000014E   06B0               ADD      SP,SP,#+24
   6245                      }
   6246                      
   6247                      
   6248                    }
   6249                  if (ans<0)
   \                     ??SetupOldPass_Event_1:
   \   00000150   002C               CMP      R4,#+0
   \   00000152   12D5               BPL      ??SetupOldPass_Event_20
   6250                    {
   6251                        MenuLevel=(MenuLevel/100);
   \   00000154   134E               LDR      R6,??SetupOldPass_Event_0+0x24  ;; TextToChangeLength
   \   00000156   B06C               LDR      R0,[R6, #+72]
   \   00000158   6421               MOVS     R1,#+100
   \   0000015A   ........           BL       __aeabi_idivmod
   \   0000015E   B064               STR      R0,[R6, #+72]
   6252                        MenuPaint();
   \   00000160   ........           BL       MenuPaint
   6253                        for (int i=0; i<=7; i++) InsertOldPass1[i]=0;
   \   00000164   0020               MOVS     R0,#+0
   \   00000166   0100               MOVS     R1,R0
   \   00000168   094A               LDR      R2,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1
   \   0000016A   0300               MOVS     R3,R0
   \   0000016C   01E0               B        ??SetupOldPass_Event_21
   \                     ??SetupOldPass_Event_22:
   \   0000016E   5354               STRB     R3,[R2, R1]
   \   00000170   491C               ADDS     R1,R1,#+1
   \                     ??SetupOldPass_Event_21:
   \   00000172   0829               CMP      R1,#+8
   \   00000174   FBDB               BLT      ??SetupOldPass_Event_22
   6254                        InsertOldPass1[8]=0;
   \   00000176   0F49               LDR      R1,??SetupOldPass_Event_0+0x34  ;; InsertOldPass1 + 8
   \   00000178   0870               STRB     R0,[R1, #+0]
   6255                    }
   6256               
   6257              }//________________________________________________________________________
   \                     ??SetupOldPass_Event_20:
   \   0000017A   FEBC               POP      {R1-R7}
   \   0000017C   01BC               POP      {R0}
   \   0000017E   0047               BX       R0               ;; return
   \                     ??SetupOldPass_Event_0:
   \   00000180   ........           DC32     Y_down
   \   00000184   ........           DC32     X_down
   \   00000188   ........           DC32     Y_up
   \   0000018C   ........           DC32     X_up
   \   00000190   ........           DC32     InsertOldPass1
   \   00000194   ........           DC32     g_Password_1
   \   00000198   ........           DC32     g_Password_2
   \   0000019C   ........           DC32     `?<Constant "060480">_1`
   \   000001A0   ........           DC32     InsertPass1
   \   000001A4   ........           DC32     TextToChangeLength
   \   000001A8   ........           DC32     g_leng
   \   000001AC   ........           DC32     Speech
   \   000001B0   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000001B4   ........           DC32     InsertOldPass1 + 8
   6258          
   6259              
   6260          
   6261          
   6262          //Wpisanie nowego has³a  poziom 1**************************************************************************************************************
   6263              char InsertNewPass1[9]={0,0,0,0,0,0,0,0,0};
   6264              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6265              void SetupNewPass_Paint(void)
   6266              {  
   \                     SetupNewPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   6267                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   9624               MOVS     R4,#+150
   \   00000004   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000006   1B4D               LDR      R5,??SetupNewPass_Paint_0  ;; g_leng
   \   00000008   1B4E               LDR      R6,??SetupNewPass_Paint_0+0x4  ;; Speech
   \   0000000A   1CA2               ADR      R2,??SetupNewPass_Paint_0+0x8  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000C   1CA1               ADR      R1,??SetupNewPass_Paint_0+0xC  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000E   FF20               MOVS     R0,#+255
   \   00000010   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000012   2B68               LDR      R3,[R5, #+0]
   \   00000014   6343               MULS     R3,R4,R3
   \   00000016   F318               ADDS     R3,R6,R3
   \   00000018   1818               ADDS     R0,R3,R0
   \   0000001A   ........           BL       Number_Paint
   6268                    
   6269                    Label(Speech[g_leng].NoweHaslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001E   82B0               SUB      SP,SP,#+8
   \   00000020   0020               MOVS     R0,#+0
   \   00000022   0090               STR      R0,[SP, #+0]
   \   00000024   7F21               MOVS     R1,#+127
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3A21               MOVS     R1,#+58
   \   0000002A   0F20               MOVS     R0,#+15
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   6623               MOVS     R3,#+102
   \   00000030   0322               MOVS     R2,#+3
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   C320               MOVS     R0,#+195
   \   00000036   4000               LSLS     R0,R0,#+1        ;; #+390
   \   00000038   2D68               LDR      R5,[R5, #+0]
   \   0000003A   6543               MULS     R5,R4,R5
   \   0000003C   7419               ADDS     R4,R6,R5
   \   0000003E   2018               ADDS     R0,R4,R0
   \   00000040   ........           BL       Label
   \   00000044   06B0               ADD      SP,SP,#+24
   6270              
   6271                    if (InsertNewPass1[8])  Label(InsertNewPass1,2,4,90,8,55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000046   0F4C               LDR      R4,??SetupNewPass_Paint_0+0x10  ;; InsertOldPass1
   \   00000048   207D               LDRB     R0,[R4, #+20]
   \   0000004A   0028               CMP      R0,#+0
   \   0000004C   0FD0               BEQ      ??SetupNewPass_Paint_1
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   7F21               MOVS     R1,#+127
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   3721               MOVS     R1,#+55
   \   0000005A   0820               MOVS     R0,#+8
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   5A23               MOVS     R3,#+90
   \   00000060   0422               MOVS     R2,#+4
   \   00000062   0221               MOVS     R1,#+2
   \   00000064   0C34               ADDS     R4,R4,#+12
   \   00000066   2000               MOVS     R0,R4
   \   00000068   ........           BL       Label
   \   0000006C   06B0               ADD      SP,SP,#+24
   6272          
   6273                    
   6274              }//________________________________________________________________________
   \                     ??SetupNewPass_Paint_1:
   \   0000006E   70BC               POP      {R4-R6}
   \   00000070   01BC               POP      {R0}
   \   00000072   0047               BX       R0               ;; return
   \                     ??SetupNewPass_Paint_0:
   \   00000074   ........           DC32     g_leng
   \   00000078   ........           DC32     Speech
   \   0000007C   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000080   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000084   ........           DC32     InsertOldPass1
   6275          
   6276          
   6277          
   6278              //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6279              void SetupNewPass_Event(char level)
   6280              {
   \                     SetupNewPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   6281                  int ans;
   6282                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   5D48               LDR      R0,??SetupNewPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   5D48               LDR      R0,??SetupNewPass_Event_0+0x4  ;; X_down
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   5D48               LDR      R0,??SetupNewPass_Event_0+0x8  ;; Y_up
   \   00000010   415E               LDRSH    R1,[R0, R1]
   \   00000012   5D48               LDR      R0,??SetupNewPass_Event_0+0xC  ;; X_up
   \   00000014   0025               MOVS     R5,#+0
   \   00000016   405F               LDRSH    R0,[R0, R5]
   \   00000018   ........           BL       Number_Event
   \   0000001C   0500               MOVS     R5,R0
   6283            
   6284                  if (ans>0)
   \   0000001E   012D               CMP      R5,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   92E0               B        ??SetupNewPass_Event_1
   6285                    {
   6286                      //MenuPaint();
   6287                      if (InsertNewPass1[8]<=7) 
   \   00000024   594E               LDR      R6,??SetupNewPass_Event_0+0x10  ;; InsertOldPass1
   \   00000026   307D               LDRB     R0,[R6, #+20]
   \   00000028   0828               CMP      R0,#+8
   \   0000002A   12D2               BCS      ??SetupNewPass_Event_2
   6288                      { 
   6289                          if ((ans<10) || (ans==11)) 
   \   0000002C   0A2D               CMP      R5,#+10
   \   0000002E   01DB               BLT      ??SetupNewPass_Event_3
   \   00000030   0B2D               CMP      R5,#+11
   \   00000032   0ED1               BNE      ??SetupNewPass_Event_2
   6290                          {
   6291                            if (ans<10) InsertNewPass1[InsertNewPass1[8]]=ans+48;
   \                     ??SetupNewPass_Event_3:
   \   00000034   0A2D               CMP      R5,#+10
   \   00000036   03DA               BGE      ??SetupNewPass_Event_4
   \   00000038   3018               ADDS     R0,R6,R0
   \   0000003A   2900               MOVS     R1,R5
   \   0000003C   3031               ADDS     R1,R1,#+48
   \   0000003E   0173               STRB     R1,[R0, #+12]
   6292                            if (ans==11) InsertNewPass1[InsertNewPass1[8]]=ans+37;
   \                     ??SetupNewPass_Event_4:
   \   00000040   0B2D               CMP      R5,#+11
   \   00000042   03D1               BNE      ??SetupNewPass_Event_5
   \   00000044   307D               LDRB     R0,[R6, #+20]
   \   00000046   3018               ADDS     R0,R6,R0
   \   00000048   3021               MOVS     R1,#+48
   \   0000004A   0173               STRB     R1,[R0, #+12]
   6293                            InsertNewPass1[8]++;
   \                     ??SetupNewPass_Event_5:
   \   0000004C   307D               LDRB     R0,[R6, #+20]
   \   0000004E   401C               ADDS     R0,R0,#+1
   \   00000050   3075               STRB     R0,[R6, #+20]
   6294                          }
   6295                          
   6296                      }
   6297                      if ((ans==10) && (InsertNewPass1[8]>0) ) {InsertNewPass1[8]--; InsertNewPass1[InsertOldPass1[8]]=0;}
   \                     ??SetupNewPass_Event_2:
   \   00000052   0A2D               CMP      R5,#+10
   \   00000054   08D1               BNE      ??SetupNewPass_Event_6
   \   00000056   307D               LDRB     R0,[R6, #+20]
   \   00000058   0028               CMP      R0,#+0
   \   0000005A   05D0               BEQ      ??SetupNewPass_Event_6
   \   0000005C   401E               SUBS     R0,R0,#+1
   \   0000005E   3075               STRB     R0,[R6, #+20]
   \   00000060   307A               LDRB     R0,[R6, #+8]
   \   00000062   3018               ADDS     R0,R6,R0
   \   00000064   0021               MOVS     R1,#+0
   \   00000066   0173               STRB     R1,[R0, #+12]
   6298                      //Label(InsertNewPass1,2,4,90,InsertNewPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   6299                      
   6300                      
   6301                      
   6302                      
   6303                      
   6304                      if ((ans==12) && (InsertNewPass1[8]>0))
   \                     ??SetupNewPass_Event_6:
   \   00000068   0C2D               CMP      R5,#+12
   \   0000006A   58D1               BNE      ??SetupNewPass_Event_7
   \   0000006C   307D               LDRB     R0,[R6, #+20]
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   55D0               BEQ      ??SetupNewPass_Event_7
   6305                      {
   6306                        
   6307                        for (int i=0; i<=7; i++)
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0100               MOVS     R1,R0
   \   00000076   0FE0               B        ??SetupNewPass_Event_8
   6308                        {
   6309                            if (level==1) g_Password_1[i]=InsertNewPass1[i];
   \                     ??SetupNewPass_Event_9:
   \   00000078   012C               CMP      R4,#+1
   \   0000007A   03D1               BNE      ??SetupNewPass_Event_10
   \   0000007C   444A               LDR      R2,??SetupNewPass_Event_0+0x14  ;; g_Password_1
   \   0000007E   7318               ADDS     R3,R6,R1
   \   00000080   1B7B               LDRB     R3,[R3, #+12]
   \   00000082   5354               STRB     R3,[R2, R1]
   6310                            if (level==2) g_Password_2[i]=InsertNewPass1[i];
   \                     ??SetupNewPass_Event_10:
   \   00000084   022C               CMP      R4,#+2
   \   00000086   03D1               BNE      ??SetupNewPass_Event_11
   \   00000088   424A               LDR      R2,??SetupNewPass_Event_0+0x18  ;; g_Password_2
   \   0000008A   7318               ADDS     R3,R6,R1
   \   0000008C   1B7B               LDRB     R3,[R3, #+12]
   \   0000008E   5354               STRB     R3,[R2, R1]
   6311                            InsertNewPass1[i]=0;
   \                     ??SetupNewPass_Event_11:
   \   00000090   7218               ADDS     R2,R6,R1
   \   00000092   0300               MOVS     R3,R0
   \   00000094   1373               STRB     R3,[R2, #+12]
   6312                        }
   \   00000096   491C               ADDS     R1,R1,#+1
   \                     ??SetupNewPass_Event_8:
   \   00000098   0829               CMP      R1,#+8
   \   0000009A   EDDB               BLT      ??SetupNewPass_Event_9
   6313                        InsertNewPass1[8]=0;
   \   0000009C   3075               STRB     R0,[R6, #+20]
   6314          
   6315                        //zapis has³a do flash
   6316                        unsigned int Save = __get_interrupt_state();  
   \   0000009E   ........           BL       __iar_get_interrupt_state
   \   000000A2   0700               MOVS     R7,R0
   6317                        __disable_interrupt();
   \   000000A4   ........           BL       __iar_disable_interrupt
   \   000000A8   0122               MOVS     R2,#+1
   \   000000AA   3949               LDR      R1,??SetupNewPass_Event_0+0x14  ;; g_Password_1
   \   000000AC   3A48               LDR      R0,??SetupNewPass_Event_0+0x1C  ;; 0x13d7dd
   6318                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.Pass1[0])),0,g_Password_1,9);
   6319                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Pass1[0])), (char*) (&(g_Password_1)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000AE   ........           BL       FlashWrite
   6320                        __set_interrupt_state(Save);
   \   000000B2   3800               MOVS     R0,R7
   \   000000B4   ........           BL       __iar_set_interrupt_state
   6321                        //koniec zapisu do flash
   6322                        
   6323          
   6324                        
   6325                           //informacja o zmianie hasla
   6326                         MenuLevel=(MenuLevel/1000);
   \   000000B8   384F               LDR      R7,??SetupNewPass_Event_0+0x20  ;; TextToChangeLength
   \   000000BA   B86C               LDR      R0,[R7, #+72]
   \   000000BC   FA21               MOVS     R1,#+250
   \   000000BE   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   000000C0   ........           BL       __aeabi_idivmod
   \   000000C4   B864               STR      R0,[R7, #+72]
   6327                          if (level==1) Message_Paint(2,Speech[g_leng].Nowe,Speech[g_leng].haslo,"------------",g_Password_1,"");
   \   000000C6   012C               CMP      R4,#+1
   \   000000C8   13D1               BNE      ??SetupNewPass_Event_12
   \   000000CA   9620               MOVS     R0,#+150
   \   000000CC   0001               LSLS     R0,R0,#+4        ;; #+2400
   \   000000CE   3449               LDR      R1,??SetupNewPass_Event_0+0x24  ;; g_leng
   \   000000D0   344A               LDR      R2,??SetupNewPass_Event_0+0x28  ;; Speech
   \   000000D2   0968               LDR      R1,[R1, #+0]
   \   000000D4   4143               MULS     R1,R0,R1
   \   000000D6   5718               ADDS     R7,R2,R1
   \   000000D8   33A1               ADR      R1,??SetupNewPass_Event_0+0x2C  ;; 0x00, 0x00, 0x00, 0x00
   \   000000DA   2D48               LDR      R0,??SetupNewPass_Event_0+0x14  ;; g_Password_1
   \   000000DC   03B4               PUSH     {R0,R1}
   \   000000DE   334B               LDR      R3,??SetupNewPass_Event_0+0x30  ;; `?<Constant "------------">`
   \   000000E0   FF20               MOVS     R0,#+255
   \   000000E2   B430               ADDS     R0,R0,#+180      ;; #+435
   \   000000E4   3A18               ADDS     R2,R7,R0
   \   000000E6   0F30               ADDS     R0,R0,#+15
   \   000000E8   3918               ADDS     R1,R7,R0
   \   000000EA   0220               MOVS     R0,#+2
   \   000000EC   ........           BL       Message_Paint
   \   000000F0   02B0               ADD      SP,SP,#+8
   6328                          if (level==2) Message_Paint(2,Speech[g_leng].Nowe,Speech[g_leng].haslo,"------------",g_Password_2,"");
   \                     ??SetupNewPass_Event_12:
   \   000000F2   022C               CMP      R4,#+2
   \   000000F4   13D1               BNE      ??SetupNewPass_Event_7
   \   000000F6   9620               MOVS     R0,#+150
   \   000000F8   0001               LSLS     R0,R0,#+4        ;; #+2400
   \   000000FA   2949               LDR      R1,??SetupNewPass_Event_0+0x24  ;; g_leng
   \   000000FC   294A               LDR      R2,??SetupNewPass_Event_0+0x28  ;; Speech
   \   000000FE   0968               LDR      R1,[R1, #+0]
   \   00000100   4143               MULS     R1,R0,R1
   \   00000102   5418               ADDS     R4,R2,R1
   \   00000104   28A1               ADR      R1,??SetupNewPass_Event_0+0x2C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000106   2348               LDR      R0,??SetupNewPass_Event_0+0x18  ;; g_Password_2
   \   00000108   03B4               PUSH     {R0,R1}
   \   0000010A   284B               LDR      R3,??SetupNewPass_Event_0+0x30  ;; `?<Constant "------------">`
   \   0000010C   FF20               MOVS     R0,#+255
   \   0000010E   B430               ADDS     R0,R0,#+180      ;; #+435
   \   00000110   2218               ADDS     R2,R4,R0
   \   00000112   0F30               ADDS     R0,R0,#+15
   \   00000114   2118               ADDS     R1,R4,R0
   \   00000116   0220               MOVS     R0,#+2
   \   00000118   ........           BL       Message_Paint
   \   0000011C   02B0               ADD      SP,SP,#+8
   6329                      
   6330                        
   6331                        //MenuPaint();
   6332                      } 
   6333                      
   6334                      
   6335                      if ((ans>=1) && (ans<=11)) 
   \                     ??SetupNewPass_Event_7:
   \   0000011E   012D               CMP      R5,#+1
   \   00000120   13DB               BLT      ??SetupNewPass_Event_1
   \   00000122   0C2D               CMP      R5,#+12
   \   00000124   11DA               BGE      ??SetupNewPass_Event_1
   6336                      {
   6337                        MenuPaint();
   \   00000126   ........           BL       MenuPaint
   6338                        Label(InsertNewPass1,2,4,90,InsertNewPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   0020               MOVS     R0,#+0
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   7F21               MOVS     R1,#+127
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   3721               MOVS     R1,#+55
   \   00000136   307D               LDRB     R0,[R6, #+20]
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   5A23               MOVS     R3,#+90
   \   0000013C   0422               MOVS     R2,#+4
   \   0000013E   0221               MOVS     R1,#+2
   \   00000140   0C36               ADDS     R6,R6,#+12
   \   00000142   3000               MOVS     R0,R6
   \   00000144   ........           BL       Label
   \   00000148   06B0               ADD      SP,SP,#+24
   6339                      }
   6340                      
   6341                      
   6342                     }
   6343                    
   6344                  if (ans<0)
   \                     ??SetupNewPass_Event_1:
   \   0000014A   002D               CMP      R5,#+0
   \   0000014C   13D5               BPL      ??SetupNewPass_Event_13
   6345                    {
   6346                        MenuLevel=(MenuLevel/100);
   \   0000014E   134F               LDR      R7,??SetupNewPass_Event_0+0x20  ;; TextToChangeLength
   \   00000150   B86C               LDR      R0,[R7, #+72]
   \   00000152   6421               MOVS     R1,#+100
   \   00000154   ........           BL       __aeabi_idivmod
   \   00000158   B864               STR      R0,[R7, #+72]
   6347                        MenuPaint();
   \   0000015A   ........           BL       MenuPaint
   6348                        for (int i=0; i<=7; i++) InsertNewPass1[i]=0;
   \   0000015E   0020               MOVS     R0,#+0
   \   00000160   0100               MOVS     R1,R0
   \   00000162   0300               MOVS     R3,R0
   \   00000164   03E0               B        ??SetupNewPass_Event_14
   \                     ??SetupNewPass_Event_15:
   \   00000166   094A               LDR      R2,??SetupNewPass_Event_0+0x10  ;; InsertOldPass1
   \   00000168   5218               ADDS     R2,R2,R1
   \   0000016A   1373               STRB     R3,[R2, #+12]
   \   0000016C   491C               ADDS     R1,R1,#+1
   \                     ??SetupNewPass_Event_14:
   \   0000016E   0829               CMP      R1,#+8
   \   00000170   F9DB               BLT      ??SetupNewPass_Event_15
   6349                        InsertNewPass1[8]=0;
   \   00000172   0F49               LDR      R1,??SetupNewPass_Event_0+0x34  ;; InsertOldPass1 + 20
   \   00000174   0870               STRB     R0,[R1, #+0]
   6350                    }
   6351                
   6352              }//________________________________________________________________________
   \                     ??SetupNewPass_Event_13:
   \   00000176   F8BC               POP      {R3-R7}
   \   00000178   01BC               POP      {R0}
   \   0000017A   0047               BX       R0               ;; return
   \                     ??SetupNewPass_Event_0:
   \   0000017C   ........           DC32     Y_down
   \   00000180   ........           DC32     X_down
   \   00000184   ........           DC32     Y_up
   \   00000188   ........           DC32     X_up
   \   0000018C   ........           DC32     InsertOldPass1
   \   00000190   ........           DC32     g_Password_1
   \   00000194   ........           DC32     g_Password_2
   \   00000198   DDD71300           DC32     0x13d7dd
   \   0000019C   ........           DC32     TextToChangeLength
   \   000001A0   ........           DC32     g_leng
   \   000001A4   ........           DC32     Speech
   \   000001A8   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000001AC   ........           DC32     `?<Constant "------------">`
   \   000001B0   ........           DC32     InsertOldPass1 + 20
   6353          
   6354          
   6355              
   6356              
   6357              
   6358          
   6359              
   6360              
   6361              
   6362              
   6363          
   6364          //Ustawienia ******************************************************************************************************************
   6365          
   6366          
   6367              
   6368          
   6369          
   6370          //*-----------------------------------------------------------------------------
   6371          //* Nazwa funkcji :    SetTouchScreen_Paint
   6372          //* Funkcja sustawienia ekranu dotykowego
   6373          //*-----------------------------------------------------------------------------
   6374          //*-----------------------------------------------------------------------------
   6375          char SetTouchStep=0;
   6376          
   6377          

   \                                 In section Debug.txt, align 4, keep-with-next
   6378          void SetTouchScreen_Paint(void)
   6379          {
   \                     SetTouchScreen_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   6380          
   6381          if (SetTouchStep==0)
   \   00000002   644C               LDR      R4,??SetTouchScreen_Paint_0  ;; SetTouchStep
   \   00000004   2078               LDRB     R0,[R4, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   08D1               BNE      ??SetTouchScreen_Paint_1
   6382          {
   6383                   korekta_X.A=1;
   \   0000000A   6349               LDR      R1,??SetTouchScreen_Paint_0+0x4  ;; korekta_X
   \   0000000C   FE22               MOVS     R2,#+254
   \   0000000E   9205               LSLS     R2,R2,#+22       ;; #+1065353216
   \   00000010   0A60               STR      R2,[R1, #+0]
   6384                  korekta_X.B=0;
   \   00000012   0023               MOVS     R3,#+0
   \   00000014   4B60               STR      R3,[R1, #+4]
   6385                  korekta_Y.A=1;
   \   00000016   6149               LDR      R1,??SetTouchScreen_Paint_0+0x8  ;; korekta_Y
   \   00000018   0A60               STR      R2,[R1, #+0]
   6386                  korekta_Y.B=0; 
   \   0000001A   4B60               STR      R3,[R1, #+4]
   6387          }
   6388            
   6389          if (SetTouchStep==MaxTouchTest)
   \                     ??SetTouchScreen_Paint_1:
   \   0000001C   0428               CMP      R0,#+4
   \   0000001E   2AD1               BNE      ??SetTouchScreen_Paint_2
   6390          {
   6391                H_line(0,15,127,1);
   \   00000020   0123               MOVS     R3,#+1
   \   00000022   7F22               MOVS     R2,#+127
   \   00000024   0F21               MOVS     R1,#+15
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   ........           BL       H_line
   6392                H_line(0,45,127,1);
   \   0000002C   0123               MOVS     R3,#+1
   \   0000002E   7F22               MOVS     R2,#+127
   \   00000030   2D21               MOVS     R1,#+45
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   ........           BL       H_line
   6393                H_line(0,75,127,1);
   \   00000038   0123               MOVS     R3,#+1
   \   0000003A   7F22               MOVS     R2,#+127
   \   0000003C   4B21               MOVS     R1,#+75
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   ........           BL       H_line
   6394                H_line(0,110,127,1);
   \   00000044   0123               MOVS     R3,#+1
   \   00000046   7F22               MOVS     R2,#+127
   \   00000048   6E21               MOVS     R1,#+110
   \   0000004A   0020               MOVS     R0,#+0
   \   0000004C   ........           BL       H_line
   6395                V_line(15,0,127,1);
   \   00000050   0123               MOVS     R3,#+1
   \   00000052   7F22               MOVS     R2,#+127
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   0F20               MOVS     R0,#+15
   \   00000058   ........           BL       V_line
   6396                V_line(32,0,127,1);
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   7F22               MOVS     R2,#+127
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   2020               MOVS     R0,#+32
   \   00000064   ........           BL       V_line
   6397                V_line(50,0,127,1);
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   7F22               MOVS     R2,#+127
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   3220               MOVS     R0,#+50
   \   00000070   ........           BL       V_line
   \   00000074   8BE0               B        ??SetTouchScreen_Paint_3
   6398          }  
   6399          else
   6400          {
   6401              CleanCanvas();
   \                     ??SetTouchScreen_Paint_2:
   \   00000076   ........           BL       CleanCanvas
   6402            
   6403              Label(Speech[g_leng].Dotknij,    2,1,70,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000007A   9625               MOVS     R5,#+150
   \   0000007C   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   0000007E   484E               LDR      R6,??SetTouchScreen_Paint_0+0xC  ;; g_leng
   \   00000080   484F               LDR      R7,??SetTouchScreen_Paint_0+0x10  ;; Speech
   \   00000082   82B0               SUB      SP,SP,#+8
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   0090               STR      R0,[SP, #+0]
   \   00000088   8021               MOVS     R1,#+128
   \   0000008A   0120               MOVS     R0,#+1
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   3E21               MOVS     R1,#+62
   \   00000090   0F20               MOVS     R0,#+15
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   4623               MOVS     R3,#+70
   \   00000096   0122               MOVS     R2,#+1
   \   00000098   0221               MOVS     R1,#+2
   \   0000009A   8C46               MOV      R12,R1
   \   0000009C   A521               MOVS     R1,#+165
   \   0000009E   C900               LSLS     R1,R1,#+3        ;; #+1320
   \   000000A0   3068               LDR      R0,[R6, #+0]
   \   000000A2   6843               MULS     R0,R5,R0
   \   000000A4   3818               ADDS     R0,R7,R0
   \   000000A6   4018               ADDS     R0,R0,R1
   \   000000A8   6146               MOV      R1,R12
   \   000000AA   ........           BL       Label
   \   000000AE   06B0               ADD      SP,SP,#+24
   6404              Label(Speech[g_leng].precyzyjnie,2,1,60,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   0020               MOVS     R0,#+0
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   8021               MOVS     R1,#+128
   \   000000B8   0120               MOVS     R0,#+1
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   3E21               MOVS     R1,#+62
   \   000000BE   0F20               MOVS     R0,#+15
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   3C23               MOVS     R3,#+60
   \   000000C4   0122               MOVS     R2,#+1
   \   000000C6   0221               MOVS     R1,#+2
   \   000000C8   8C46               MOV      R12,R1
   \   000000CA   3749               LDR      R1,??SetTouchScreen_Paint_0+0x14  ;; 0x537
   \   000000CC   3068               LDR      R0,[R6, #+0]
   \   000000CE   6843               MULS     R0,R5,R0
   \   000000D0   3818               ADDS     R0,R7,R0
   \   000000D2   4018               ADDS     R0,R0,R1
   \   000000D4   6146               MOV      R1,R12
   \   000000D6   ........           BL       Label
   \   000000DA   06B0               ADD      SP,SP,#+24
   6405              Label(Speech[g_leng].wskaznik,   2,1,50,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0020               MOVS     R0,#+0
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   8021               MOVS     R1,#+128
   \   000000E4   0120               MOVS     R0,#+1
   \   000000E6   03B4               PUSH     {R0,R1}
   \   000000E8   3E21               MOVS     R1,#+62
   \   000000EA   0F20               MOVS     R0,#+15
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   3223               MOVS     R3,#+50
   \   000000F0   0122               MOVS     R2,#+1
   \   000000F2   0221               MOVS     R1,#+2
   \   000000F4   2D48               LDR      R0,??SetTouchScreen_Paint_0+0x18  ;; 0x546
   \   000000F6   3668               LDR      R6,[R6, #+0]
   \   000000F8   6E43               MULS     R6,R5,R6
   \   000000FA   BD19               ADDS     R5,R7,R6
   \   000000FC   2818               ADDS     R0,R5,R0
   \   000000FE   ........           BL       Label
   \   00000102   06B0               ADD      SP,SP,#+24
   6406          
   6407               CanvasPixel(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y,1);   //(char X, char Y, char Colour)
   \   00000104   2A4D               LDR      R5,??SetTouchScreen_Paint_0+0x1C  ;; TouchTestSor
   \   00000106   2078               LDRB     R0,[R4, #+0]
   \   00000108   4000               LSLS     R0,R0,#+1
   \   0000010A   2818               ADDS     R0,R5,R0
   \   0000010C   0122               MOVS     R2,#+1
   \   0000010E   1100               MOVS     R1,R2
   \   00000110   4156               LDRSB    R1,[R0, R1]
   \   00000112   0906               LSLS     R1,R1,#+24
   \   00000114   090E               LSRS     R1,R1,#+24
   \   00000116   0023               MOVS     R3,#+0
   \   00000118   C056               LDRSB    R0,[R0, R3]
   \   0000011A   0006               LSLS     R0,R0,#+24
   \   0000011C   000E               LSRS     R0,R0,#+24
   \   0000011E   ........           BL       CanvasPixel
   6408               H_line(TouchTestSor[SetTouchStep].x+2,TouchTestSor[SetTouchStep].y,5,1); // (char X, int Y, char lenght, char typ)
   \   00000122   2078               LDRB     R0,[R4, #+0]
   \   00000124   4000               LSLS     R0,R0,#+1
   \   00000126   2818               ADDS     R0,R5,R0
   \   00000128   0123               MOVS     R3,#+1
   \   0000012A   0522               MOVS     R2,#+5
   \   0000012C   1900               MOVS     R1,R3
   \   0000012E   4156               LDRSB    R1,[R0, R1]
   \   00000130   0026               MOVS     R6,#+0
   \   00000132   8057               LDRSB    R0,[R0, R6]
   \   00000134   801C               ADDS     R0,R0,#+2
   \   00000136   0006               LSLS     R0,R0,#+24
   \   00000138   000E               LSRS     R0,R0,#+24
   \   0000013A   ........           BL       H_line
   6409               H_line(TouchTestSor[SetTouchStep].x-6,TouchTestSor[SetTouchStep].y,5,1); // (char X, int Y, char lenght, char typ) 
   \   0000013E   2078               LDRB     R0,[R4, #+0]
   \   00000140   4000               LSLS     R0,R0,#+1
   \   00000142   2818               ADDS     R0,R5,R0
   \   00000144   0123               MOVS     R3,#+1
   \   00000146   0522               MOVS     R2,#+5
   \   00000148   1900               MOVS     R1,R3
   \   0000014A   4156               LDRSB    R1,[R0, R1]
   \   0000014C   8057               LDRSB    R0,[R0, R6]
   \   0000014E   801F               SUBS     R0,R0,#+6
   \   00000150   0006               LSLS     R0,R0,#+24
   \   00000152   000E               LSRS     R0,R0,#+24
   \   00000154   ........           BL       H_line
   6410               V_line(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y+2,5,1); // (char X, int Y, char lenght, char typ) 
   \   00000158   2078               LDRB     R0,[R4, #+0]
   \   0000015A   4000               LSLS     R0,R0,#+1
   \   0000015C   2818               ADDS     R0,R5,R0
   \   0000015E   0123               MOVS     R3,#+1
   \   00000160   0522               MOVS     R2,#+5
   \   00000162   1900               MOVS     R1,R3
   \   00000164   4156               LDRSB    R1,[R0, R1]
   \   00000166   891C               ADDS     R1,R1,#+2
   \   00000168   8057               LDRSB    R0,[R0, R6]
   \   0000016A   0006               LSLS     R0,R0,#+24
   \   0000016C   000E               LSRS     R0,R0,#+24
   \   0000016E   ........           BL       V_line
   6411               V_line(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y-6,5,1); // (char X, int Y, char lenght, char typ) 
   \   00000172   2078               LDRB     R0,[R4, #+0]
   \   00000174   4000               LSLS     R0,R0,#+1
   \   00000176   2818               ADDS     R0,R5,R0
   \   00000178   0123               MOVS     R3,#+1
   \   0000017A   0522               MOVS     R2,#+5
   \   0000017C   1900               MOVS     R1,R3
   \   0000017E   4156               LDRSB    R1,[R0, R1]
   \   00000180   891F               SUBS     R1,R1,#+6
   \   00000182   0024               MOVS     R4,#+0
   \   00000184   0057               LDRSB    R0,[R0, R4]
   \   00000186   0006               LSLS     R0,R0,#+24
   \   00000188   000E               LSRS     R0,R0,#+24
   \   0000018A   ........           BL       V_line
   6412          }
   6413          }
   \                     ??SetTouchScreen_Paint_3:
   \   0000018E   F8BC               POP      {R3-R7}
   \   00000190   01BC               POP      {R0}
   \   00000192   0047               BX       R0               ;; return
   \                     ??SetTouchScreen_Paint_0:
   \   00000194   ........           DC32     SetTouchStep
   \   00000198   ........           DC32     korekta_X
   \   0000019C   ........           DC32     korekta_Y
   \   000001A0   ........           DC32     g_leng
   \   000001A4   ........           DC32     Speech
   \   000001A8   37050000           DC32     0x537
   \   000001AC   46050000           DC32     0x546
   \   000001B0   ........           DC32     TouchTestSor
   6414          
   6415          
   6416          extern _Correct korekta_Y;
   6417          extern _Correct korekta_X;
   6418          signed short Diff_X[MaxTouchTest];
   6419          signed short Diff_Y[MaxTouchTest];
   6420          float Xo1, Xo2, Yo1, Yo2;

   \                                 In section Debug.txt, align 4, keep-with-next
   6421          void SetTouchScreen_Event(void)
   6422          {
   \                     SetTouchScreen_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   6423          
   6424          
   6425          if (SetTouchStep==MaxTouchTest)
   \   00000004   6D4C               LDR      R4,??SetTouchScreen_Event_0  ;; SetTouchStep
   \   00000006   2678               LDRB     R6,[R4, #+0]
   \   00000008   042E               CMP      R6,#+4
   \   0000000A   13D1               BNE      ??SetTouchScreen_Event_1
   6426          {
   6427             if ((X_down>0) && (Y_down>0))
   \   0000000C   6C48               LDR      R0,??SetTouchScreen_Event_0+0x4  ;; X_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   0128               CMP      R0,#+1
   \   00000014   00DA               BGE      .+4
   \   00000016   CCE0               B        ??SetTouchScreen_Event_2
   \   00000018   6A49               LDR      R1,??SetTouchScreen_Event_0+0x8  ;; Y_down
   \   0000001A   0022               MOVS     R2,#+0
   \   0000001C   895E               LDRSH    R1,[R1, R2]
   \   0000001E   0129               CMP      R1,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   C6E0               B        ??SetTouchScreen_Event_2
   6428             {
   6429                CanvasPixel(X_down,Y_down,1);
   \   00000024   0122               MOVS     R2,#+1
   \   00000026   0906               LSLS     R1,R1,#+24
   \   00000028   090E               LSRS     R1,R1,#+24
   \   0000002A   0006               LSLS     R0,R0,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   ........           BL       CanvasPixel
   \   00000032   BEE0               B        ??SetTouchScreen_Event_2
   6430               
   6431             }
   6432          }else{
   6433            
   6434            if ((X_up>0) && (Y_up>0)&& ((g_counter>Touch_EventTime+400) || (Touch_EventTime>g_counter)) )
   \                     ??SetTouchScreen_Event_1:
   \   00000034   6846               MOV      R0,SP
   \   00000036   6449               LDR      R1,??SetTouchScreen_Event_0+0xC  ;; X_up
   \   00000038   0988               LDRH     R1,[R1, #+0]
   \   0000003A   0181               STRH     R1,[R0, #+8]
   \   0000003C   6946               MOV      R1,SP
   \   0000003E   0820               MOVS     R0,#+8
   \   00000040   085E               LDRSH    R0,[R1, R0]
   \   00000042   0128               CMP      R0,#+1
   \   00000044   00DA               BGE      .+4
   \   00000046   B4E0               B        ??SetTouchScreen_Event_2
   \   00000048   6048               LDR      R0,??SetTouchScreen_Event_0+0x10  ;; Y_up
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   475E               LDRSH    R7,[R0, R1]
   \   0000004E   012F               CMP      R7,#+1
   \   00000050   00DA               BGE      .+4
   \   00000052   AEE0               B        ??SetTouchScreen_Event_2
   \   00000054   5E4D               LDR      R5,??SetTouchScreen_Event_0+0x14  ;; TextToChangeLength
   \   00000056   6A46               MOV      R2,SP
   \   00000058   5E48               LDR      R0,??SetTouchScreen_Event_0+0x18  ;; g_counter
   \   0000005A   03C8               LDM      R0!,{R0,R1}
   \   0000005C   03C2               STM      R2!,{R0,R1}
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   3830               ADDS     R0,R0,#+56
   \   00000062   03C8               LDM      R0!,{R0,R1}
   \   00000064   0200               MOVS     R2,R0
   \   00000066   0B00               MOVS     R3,R1
   \   00000068   C820               MOVS     R0,#+200
   \   0000006A   4000               LSLS     R0,R0,#+1        ;; #+400
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   8018               ADDS     R0,R0,R2
   \   00000070   5941               ADCS     R1,R1,R3
   \   00000072   0200               MOVS     R2,R0
   \   00000074   0B00               MOVS     R3,R1
   \   00000076   6846               MOV      R0,SP
   \   00000078   03C8               LDM      R0!,{R0,R1}
   \   0000007A   8B42               CMP      R3,R1
   \   0000007C   10D3               BCC      ??SetTouchScreen_Event_3
   \   0000007E   01D8               BHI      ??SetTouchScreen_Event_4
   \   00000080   8242               CMP      R2,R0
   \   00000082   0DD3               BCC      ??SetTouchScreen_Event_3
   \                     ??SetTouchScreen_Event_4:
   \   00000084   6846               MOV      R0,SP
   \   00000086   03C8               LDM      R0!,{R0,R1}
   \   00000088   0200               MOVS     R2,R0
   \   0000008A   0B00               MOVS     R3,R1
   \   0000008C   2800               MOVS     R0,R5
   \   0000008E   3830               ADDS     R0,R0,#+56
   \   00000090   03C8               LDM      R0!,{R0,R1}
   \   00000092   8B42               CMP      R3,R1
   \   00000094   00D9               BLS      .+4
   \   00000096   8CE0               B        ??SetTouchScreen_Event_2
   \   00000098   02D3               BCC      ??SetTouchScreen_Event_3
   \   0000009A   8242               CMP      R2,R0
   \   0000009C   00D3               BCC      .+4
   \   0000009E   88E0               B        ??SetTouchScreen_Event_2
   6435            {
   6436                Touch_EventTime=g_counter;
   \                     ??SetTouchScreen_Event_3:
   \   000000A0   2A00               MOVS     R2,R5
   \   000000A2   3832               ADDS     R2,R2,#+56
   \   000000A4   6846               MOV      R0,SP
   \   000000A6   03C8               LDM      R0!,{R0,R1}
   \   000000A8   03C2               STM      R2!,{R0,R1}
   6437                Diff_X[SetTouchStep]=X_up;
   \   000000AA   7000               LSLS     R0,R6,#+1
   \   000000AC   2018               ADDS     R0,R4,R0
   \   000000AE   6946               MOV      R1,SP
   \   000000B0   0989               LDRH     R1,[R1, #+8]
   \   000000B2   8180               STRH     R1,[R0, #+4]
   6438                Diff_Y[SetTouchStep]=Y_up;
   \   000000B4   8781               STRH     R7,[R0, #+12]
   6439                
   6440                if (SetTouchStep<MaxTouchTest-1)
   \   000000B6   032E               CMP      R6,#+3
   \   000000B8   04D2               BCS      ??SetTouchScreen_Event_5
   6441                {
   6442                  SetTouchStep++;
   \   000000BA   761C               ADDS     R6,R6,#+1
   \   000000BC   2670               STRB     R6,[R4, #+0]
   6443                  MenuPaint();
   \   000000BE   ........           BL       MenuPaint
   \   000000C2   76E0               B        ??SetTouchScreen_Event_2
   6444                }else{
   6445                  
   6446                  
   6447                  Xo1=(Diff_X[0]+Diff_X[2])/2;
   \                     ??SetTouchScreen_Event_5:
   \   000000C4   0420               MOVS     R0,#+4
   \   000000C6   205E               LDRSH    R0,[R4, R0]
   \   000000C8   0821               MOVS     R1,#+8
   \   000000CA   615E               LDRSH    R1,[R4, R1]
   \   000000CC   4018               ADDS     R0,R0,R1
   \   000000CE   0100               MOVS     R1,R0
   \   000000D0   C90F               LSRS     R1,R1,#+31
   \   000000D2   0818               ADDS     R0,R1,R0
   \   000000D4   4010               ASRS     R0,R0,#+1
   \   000000D6   ........           BL       __aeabi_i2f
   \   000000DA   6061               STR      R0,[R4, #+20]
   6448                  Xo2=(Diff_X[1]+Diff_X[3])/2;
   \   000000DC   0620               MOVS     R0,#+6
   \   000000DE   205E               LDRSH    R0,[R4, R0]
   \   000000E0   0A21               MOVS     R1,#+10
   \   000000E2   615E               LDRSH    R1,[R4, R1]
   \   000000E4   4018               ADDS     R0,R0,R1
   \   000000E6   0100               MOVS     R1,R0
   \   000000E8   C90F               LSRS     R1,R1,#+31
   \   000000EA   0818               ADDS     R0,R1,R0
   \   000000EC   4010               ASRS     R0,R0,#+1
   \   000000EE   ........           BL       __aeabi_i2f
   \   000000F2   A061               STR      R0,[R4, #+24]
   6449                  Yo1=(Diff_Y[0]+Diff_Y[1])/2;
   \   000000F4   0C20               MOVS     R0,#+12
   \   000000F6   205E               LDRSH    R0,[R4, R0]
   \   000000F8   0E21               MOVS     R1,#+14
   \   000000FA   615E               LDRSH    R1,[R4, R1]
   \   000000FC   4018               ADDS     R0,R0,R1
   \   000000FE   0100               MOVS     R1,R0
   \   00000100   C90F               LSRS     R1,R1,#+31
   \   00000102   0818               ADDS     R0,R1,R0
   \   00000104   4010               ASRS     R0,R0,#+1
   \   00000106   ........           BL       __aeabi_i2f
   \   0000010A   0600               MOVS     R6,R0
   \   0000010C   E661               STR      R6,[R4, #+28]
   6450                  Yo2=(Diff_Y[2]+Diff_Y[3])/2;
   \   0000010E   1020               MOVS     R0,#+16
   \   00000110   205E               LDRSH    R0,[R4, R0]
   \   00000112   1221               MOVS     R1,#+18
   \   00000114   615E               LDRSH    R1,[R4, R1]
   \   00000116   4018               ADDS     R0,R0,R1
   \   00000118   0100               MOVS     R1,R0
   \   0000011A   C90F               LSRS     R1,R1,#+31
   \   0000011C   0818               ADDS     R0,R1,R0
   \   0000011E   4010               ASRS     R0,R0,#+1
   \   00000120   ........           BL       __aeabi_i2f
   \   00000124   0700               MOVS     R7,R0
   \   00000126   2762               STR      R7,[R4, #+32]
   6451                  
   6452                  float Xw1=TouchTestSor[0].x;
   6453                  float Xw2=TouchTestSor[1].x;
   6454                  float Yw1=TouchTestSor[0].y;
   6455                  float Yw2=TouchTestSor[3].y;
   6456                  
   6457                  
   6458                  korekta_X.A=(Xw2-Xw1)/(Xo2-Xo1);
   \   00000128   A069               LDR      R0,[R4, #+24]
   \   0000012A   6169               LDR      R1,[R4, #+20]
   \   0000012C   ........           BL       __aeabi_fsub
   \   00000130   0100               MOVS     R1,R0
   \   00000132   2948               LDR      R0,??SetTouchScreen_Event_0+0x1C  ;; 0x424c0000
   \   00000134   ........           BL       __aeabi_fdiv
   \   00000138   2849               LDR      R1,??SetTouchScreen_Event_0+0x20  ;; korekta_X
   \   0000013A   0860               STR      R0,[R1, #+0]
   \   0000013C   6169               LDR      R1,[R4, #+20]
   \   0000013E   ........           BL       __aeabi_fmul
   \   00000142   0100               MOVS     R1,R0
   \   00000144   2648               LDR      R0,??SetTouchScreen_Event_0+0x24  ;; 0x40e00000
   \   00000146   ........           BL       __aeabi_fsub
   \   0000014A   2649               LDR      R1,??SetTouchScreen_Event_0+0x28  ;; korekta_X + 4
   \   0000014C   0860               STR      R0,[R1, #+0]
   6459                  korekta_X.B=Xw1-korekta_X.A*Xo1;
   6460                  korekta_Y.A=(Yw2-Yw1)/(Yo2-Yo1);
   \   0000014E   3800               MOVS     R0,R7
   \   00000150   3100               MOVS     R1,R6
   \   00000152   ........           BL       __aeabi_fsub
   \   00000156   0100               MOVS     R1,R0
   \   00000158   2348               LDR      R0,??SetTouchScreen_Event_0+0x2C  ;; 0x42d80000
   \   0000015A   ........           BL       __aeabi_fdiv
   \   0000015E   234F               LDR      R7,??SetTouchScreen_Event_0+0x30  ;; korekta_Y
   \   00000160   3860               STR      R0,[R7, #+0]
   6461                  korekta_Y.B=Yw1-korekta_Y.A*Yo1;
   \   00000162   3100               MOVS     R1,R6
   \   00000164   ........           BL       __aeabi_fmul
   \   00000168   0100               MOVS     R1,R0
   \   0000016A   1D48               LDR      R0,??SetTouchScreen_Event_0+0x24  ;; 0x40e00000
   \   0000016C   ........           BL       __aeabi_fsub
   \   00000170   7860               STR      R0,[R7, #+4]
   6462                  
   6463                       
   6464                  //zapis korekt do flash
   6465                  unsigned int Save = __get_interrupt_state();  
   \   00000172   ........           BL       __iar_get_interrupt_state
   \   00000176   0600               MOVS     R6,R0
   6466                  __disable_interrupt();
   \   00000178   ........           BL       __iar_disable_interrupt
   6467                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_X)), (char*) (&(korekta_X.A)), sizeof(korekta_X));
                             ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000017C   0822               MOVS     R2,#+8
   \   0000017E   1749               LDR      R1,??SetTouchScreen_Event_0+0x20  ;; korekta_X
   \   00000180   1B48               LDR      R0,??SetTouchScreen_Event_0+0x34  ;; 0x13d828
   \   00000182   ........           BL       FlashWrite
   6468                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_Y)), (char*) (&(korekta_Y.A)), sizeof(korekta_Y));
   \   00000186   0822               MOVS     R2,#+8
   \   00000188   3900               MOVS     R1,R7
   \   0000018A   1A48               LDR      R0,??SetTouchScreen_Event_0+0x38  ;; 0x13d820
   \   0000018C   ........           BL       FlashWrite
   6469                  __set_interrupt_state(Save);
   \   00000190   3000               MOVS     R0,R6
   \   00000192   ........           BL       __iar_set_interrupt_state
   6470                  //koniec zapisu do flash
   6471                
   6472                  //je¿eli wejcie w opcje zaawansowane
   6473                  if (StartAdvance)
   \   00000196   287B               LDRB     R0,[R5, #+12]
   \   00000198   0028               CMP      R0,#+0
   \   0000019A   04D0               BEQ      ??SetTouchScreen_Event_6
   6474                  {
   6475                    StartAdvance=0;
   \   0000019C   0020               MOVS     R0,#+0
   \   0000019E   2873               STRB     R0,[R5, #+12]
   6476                    MenuLevel=5;
   \   000001A0   0520               MOVS     R0,#+5
   \   000001A2   A864               STR      R0,[R5, #+72]
   \   000001A4   01E0               B        ??SetTouchScreen_Event_7
   6477                  }else{
   6478                    MenuLevel=1;
   \                     ??SetTouchScreen_Event_6:
   \   000001A6   0120               MOVS     R0,#+1
   \   000001A8   A864               STR      R0,[R5, #+72]
   6479                  }
   6480                  //SetTouchStep=MaxTouchTest;
   6481                  //CleanCanvas();
   6482                  SetTouchStep=0;
   \                     ??SetTouchScreen_Event_7:
   \   000001AA   0020               MOVS     R0,#+0
   \   000001AC   2070               STRB     R0,[R4, #+0]
   6483                  MenuPaint();
   \   000001AE   ........           BL       MenuPaint
   6484                }
   6485            }
   6486          }
   6487          
   6488          }
   \                     ??SetTouchScreen_Event_2:
   \   000001B2   05B0               ADD      SP,SP,#+20
   \   000001B4   F0BC               POP      {R4-R7}
   \   000001B6   01BC               POP      {R0}
   \   000001B8   0047               BX       R0               ;; return
   \   000001BA   C046               Nop      
   \                     ??SetTouchScreen_Event_0:
   \   000001BC   ........           DC32     SetTouchStep
   \   000001C0   ........           DC32     X_down
   \   000001C4   ........           DC32     Y_down
   \   000001C8   ........           DC32     X_up
   \   000001CC   ........           DC32     Y_up
   \   000001D0   ........           DC32     TextToChangeLength
   \   000001D4   ........           DC32     g_counter
   \   000001D8   00004C42           DC32     0x424c0000
   \   000001DC   ........           DC32     korekta_X
   \   000001E0   0000E040           DC32     0x40e00000
   \   000001E4   ........           DC32     korekta_X + 4
   \   000001E8   0000D842           DC32     0x42d80000
   \   000001EC   ........           DC32     korekta_Y
   \   000001F0   28D81300           DC32     0x13d828
   \   000001F4   20D81300           DC32     0x13d820
   6489              
   6490              
   6491              
   6492              
   6493          
   6494          //restart
   6495                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6496                void Restart_Event(void)
   6497                {
   \                     Restart_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   6498                  AT91S_RSTC  g_AT91S_RSTC;
   6499                  int ans;
   6500           
   6501                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1148               LDR      R0,??Restart_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1048               LDR      R0,??Restart_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1048               LDR      R0,??Restart_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1048               LDR      R0,??Restart_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   6502            
   6503                  if (ans)
   \   0000001A   0028               CMP      R0,#+0
   \   0000001C   10D0               BEQ      ??Restart_Event_1
   6504                    {
   6505                    if (ans==2) 
   \   0000001E   0228               CMP      R0,#+2
   \   00000020   02D1               BNE      ??Restart_Event_2
   6506                    {
   6507          
   6508                      //restart
   6509                      AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   00000022   0D49               LDR      R1,??Restart_Event_0+0x10  ;; 0xfffffd00
   \   00000024   0D4A               LDR      R2,??Restart_Event_0+0x14  ;; 0xa5000005
   \   00000026   0A60               STR      R2,[R1, #+0]
   6510                    }
   6511                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??Restart_Event_2:
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   01D4               BMI      ??Restart_Event_3
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   05D1               BNE      ??Restart_Event_4
   \                     ??Restart_Event_3:
   \   00000030   0B4C               LDR      R4,??Restart_Event_0+0x18  ;; TextToChangeLength
   \   00000032   A06C               LDR      R0,[R4, #+72]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   A064               STR      R0,[R4, #+72]
   6512                    MenuPaint();
   \                     ??Restart_Event_4:
   \   0000003C   ........           BL       MenuPaint
   6513                    } 
   6514                }//_______________________________________________________________________
   \                     ??Restart_Event_1:
   \   00000040   10BC               POP      {R4}
   \   00000042   01BC               POP      {R0}
   \   00000044   0047               BX       R0               ;; return
   \   00000046   C046               Nop      
   \                     ??Restart_Event_0:
   \   00000048   ........           DC32     Y_down
   \   0000004C   ........           DC32     X_down
   \   00000050   ........           DC32     Y_up
   \   00000054   ........           DC32     X_up
   \   00000058   00FDFFFF           DC32     0xfffffd00
   \   0000005C   050000A5           DC32     0xa5000005
   \   00000060   ........           DC32     TextToChangeLength
   6515              
   6516              
   6517          
   6518              
   6519          
   6520          
   6521              
   6522          //czyæ rejestr
   6523                //*-----------------------------------------------------------------------
   6524              

   \                                 In section Debug.txt, align 4, keep-with-next
   6525                void CleanReg_Event(void)
   6526                {
   \                     CleanReg_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6527                  int ans;
   6528           
   6529                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1448               LDR      R0,??CleanReg_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1348               LDR      R0,??CleanReg_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1348               LDR      R0,??CleanReg_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1348               LDR      R0,??CleanReg_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   6530            
   6531                  if (ans)
   \   0000001C   17D0               BEQ      ??CleanReg_Event_1
   6532                    {
   6533                    if (ans==2) 
   \   0000001E   022C               CMP      R4,#+2
   \   00000020   09D1               BNE      ??CleanReg_Event_2
   6534                    {
   6535                      //czyszczenie rejestru
   6536                      CleanReg();
   \   00000022   ........           BL       CleanReg
   6537                      MenuLevel=(MenuLevel/10);
   \   00000026   0F4D               LDR      R5,??CleanReg_Event_0+0x10  ;; TextToChangeLength
   \   00000028   A86C               LDR      R0,[R5, #+72]
   \   0000002A   0A21               MOVS     R1,#+10
   \   0000002C   ........           BL       __aeabi_idivmod
   \   00000030   A864               STR      R0,[R5, #+72]
   6538                      MenuPaint();
   \   00000032   ........           BL       MenuPaint
   6539                    }
   6540                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??CleanReg_Event_2:
   \   00000036   002C               CMP      R4,#+0
   \   00000038   01D4               BMI      ??CleanReg_Event_3
   \   0000003A   012C               CMP      R4,#+1
   \   0000003C   05D1               BNE      ??CleanReg_Event_4
   \                     ??CleanReg_Event_3:
   \   0000003E   094D               LDR      R5,??CleanReg_Event_0+0x10  ;; TextToChangeLength
   \   00000040   A86C               LDR      R0,[R5, #+72]
   \   00000042   0A21               MOVS     R1,#+10
   \   00000044   ........           BL       __aeabi_idivmod
   \   00000048   A864               STR      R0,[R5, #+72]
   6541                    MenuPaint();
   \                     ??CleanReg_Event_4:
   \   0000004A   ........           BL       MenuPaint
   6542                    } 
   6543                }//_______________________________________________________________________
   \                     ??CleanReg_Event_1:
   \   0000004E   38BC               POP      {R3-R5}
   \   00000050   01BC               POP      {R0}
   \   00000052   0047               BX       R0               ;; return
   \                     ??CleanReg_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     TextToChangeLength
   6544                   
   6545              
   6546              
   6547          //Ustawienia czasu  **************************************************************************************************************
   6548              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6549              void SetupTime_Paint(void)
   6550              {  
   \                     SetupTime_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   B14C               LDR      R4,??SetupTime_Paint_0  ;; g_leng
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   AFA0               ADR      R0,??SetupTime_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0121               MOVS     R1,#+1
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   2068               LDR      R0,[R4, #+0]
   \   0000001E   9625               MOVS     R5,#+150
   \   00000020   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000022   6843               MULS     R0,R5,R0
   \   00000024   AA4D               LDR      R5,??SetupTime_Paint_0+0x8  ;; Speech
   \   00000026   2818               ADDS     R0,R5,R0
   \   00000028   B430               ADDS     R0,R0,#+180
   6551                 List_Paint(Speech[g_leng].DataCzas,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   6552                 
   6553          
   6554                 
   6555                 Label(Speech[g_leng].CzasGMS,0,3,99,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000030   82B0               SUB      SP,SP,#+8
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   0090               STR      R0,[SP, #+0]
   \   00000036   7F21               MOVS     R1,#+127
   \   00000038   0120               MOVS     R0,#+1
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   2121               MOVS     R1,#+33
   \   0000003E   0A20               MOVS     R0,#+10
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   6323               MOVS     R3,#+99
   \   00000044   0322               MOVS     R2,#+3
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   2068               LDR      R0,[R4, #+0]
   \   0000004A   9625               MOVS     R5,#+150
   \   0000004C   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   0000004E   6843               MULS     R0,R5,R0
   \   00000050   9F4D               LDR      R5,??SetupTime_Paint_0+0x8  ;; Speech
   \   00000052   2818               ADDS     R0,R5,R0
   \   00000054   8730               ADDS     R0,R0,#+135
   \   00000056   ........           BL       Label
   \   0000005A   06B0               ADD      SP,SP,#+24
   6556                    
   6557                    
   6558                 char time_char[3];
   6559                  
   6560                 CharToStr(DateTime.Hour, time_char, 2); //(char Value, char *Vstring, char ill);
   \   0000005C   9D4D               LDR      R5,??SetupTime_Paint_0+0xC  ;; DateTime
   \   0000005E   0222               MOVS     R2,#+2
   \   00000060   6946               MOV      R1,SP
   \   00000062   E878               LDRB     R0,[R5, #+3]
   \   00000064   ........           BL       CharToStr
   6561                 Label(time_char,2,12,87,2,11,1,127,((SetupTimeCarPoz)&0x1) );  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000068   0126               MOVS     R6,#+1
   \   0000006A   9B4F               LDR      R7,??SetupTime_Paint_0+0x10  ;; SetupTimeCarPoz
   \   0000006C   82B0               SUB      SP,SP,#+8
   \   0000006E   3878               LDRB     R0,[R7, #+0]
   \   00000070   3100               MOVS     R1,R6
   \   00000072   0140               ANDS     R1,R1,R0
   \   00000074   0091               STR      R1,[SP, #+0]
   \   00000076   7F21               MOVS     R1,#+127
   \   00000078   3000               MOVS     R0,R6
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0B21               MOVS     R1,#+11
   \   0000007E   0220               MOVS     R0,#+2
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   5723               MOVS     R3,#+87
   \   00000084   0C22               MOVS     R2,#+12
   \   00000086   0100               MOVS     R1,R0
   \   00000088   06A8               ADD      R0,SP,#+24
   \   0000008A   ........           BL       Label
   \   0000008E   06B0               ADD      SP,SP,#+24
   6562                 CharToStr(DateTime.Minute, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000090   0222               MOVS     R2,#+2
   \   00000092   6946               MOV      R1,SP
   \   00000094   2879               LDRB     R0,[R5, #+4]
   \   00000096   ........           BL       CharToStr
   6563                 Label(time_char,2,27,87,2,11,1,127,(SetupTimeCarPoz>>1)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   3878               LDRB     R0,[R7, #+0]
   \   0000009E   4008               LSRS     R0,R0,#+1
   \   000000A0   3100               MOVS     R1,R6
   \   000000A2   0140               ANDS     R1,R1,R0
   \   000000A4   0091               STR      R1,[SP, #+0]
   \   000000A6   7F21               MOVS     R1,#+127
   \   000000A8   3000               MOVS     R0,R6
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   0B21               MOVS     R1,#+11
   \   000000AE   0220               MOVS     R0,#+2
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   5723               MOVS     R3,#+87
   \   000000B4   1B22               MOVS     R2,#+27
   \   000000B6   0100               MOVS     R1,R0
   \   000000B8   06A8               ADD      R0,SP,#+24
   \   000000BA   ........           BL       Label
   \   000000BE   06B0               ADD      SP,SP,#+24
   6564                 CharToStr(DateTime.Second, time_char, 2); //(char Value, char *Vstring, char ill);
   \   000000C0   0222               MOVS     R2,#+2
   \   000000C2   6946               MOV      R1,SP
   \   000000C4   6879               LDRB     R0,[R5, #+5]
   \   000000C6   ........           BL       CharToStr
   6565                 Label(time_char,2,42,87,2,11,1,127,(SetupTimeCarPoz>>2)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000CA   82B0               SUB      SP,SP,#+8
   \   000000CC   3878               LDRB     R0,[R7, #+0]
   \   000000CE   8008               LSRS     R0,R0,#+2
   \   000000D0   3100               MOVS     R1,R6
   \   000000D2   0140               ANDS     R1,R1,R0
   \   000000D4   0091               STR      R1,[SP, #+0]
   \   000000D6   7F21               MOVS     R1,#+127
   \   000000D8   3000               MOVS     R0,R6
   \   000000DA   03B4               PUSH     {R0,R1}
   \   000000DC   0B21               MOVS     R1,#+11
   \   000000DE   0220               MOVS     R0,#+2
   \   000000E0   03B4               PUSH     {R0,R1}
   \   000000E2   5723               MOVS     R3,#+87
   \   000000E4   2A22               MOVS     R2,#+42
   \   000000E6   0100               MOVS     R1,R0
   \   000000E8   06A8               ADD      R0,SP,#+24
   \   000000EA   ........           BL       Label
   \   000000EE   06B0               ADD      SP,SP,#+24
   6566                  
   6567                 
   6568                 Label(Speech[g_leng].DataDMR,0,3,74,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   0020               MOVS     R0,#+0
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   7F21               MOVS     R1,#+127
   \   000000F8   3000               MOVS     R0,R6
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   2121               MOVS     R1,#+33
   \   000000FE   0A20               MOVS     R0,#+10
   \   00000100   03B4               PUSH     {R0,R1}
   \   00000102   4A23               MOVS     R3,#+74
   \   00000104   0322               MOVS     R2,#+3
   \   00000106   0021               MOVS     R1,#+0
   \   00000108   8C46               MOV      R12,R1
   \   0000010A   2068               LDR      R0,[R4, #+0]
   \   0000010C   9621               MOVS     R1,#+150
   \   0000010E   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000110   4843               MULS     R0,R1,R0
   \   00000112   6F49               LDR      R1,??SetupTime_Paint_0+0x8  ;; Speech
   \   00000114   0818               ADDS     R0,R1,R0
   \   00000116   A530               ADDS     R0,R0,#+165
   \   00000118   6146               MOV      R1,R12
   \   0000011A   ........           BL       Label
   \   0000011E   06B0               ADD      SP,SP,#+24
   6569                
   6570                 CharToStrData(DateTime.Day, time_char); //(char Value, char *Vstring, char ill);
   \   00000120   6946               MOV      R1,SP
   \   00000122   A878               LDRB     R0,[R5, #+2]
   \   00000124   ........           BL       CharToStrData
   6571                 Label(time_char,2,12,62,2,10,1,127,(SetupTimeCarPoz>>3)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   3878               LDRB     R0,[R7, #+0]
   \   0000012C   C008               LSRS     R0,R0,#+3
   \   0000012E   3100               MOVS     R1,R6
   \   00000130   0140               ANDS     R1,R1,R0
   \   00000132   0091               STR      R1,[SP, #+0]
   \   00000134   7F21               MOVS     R1,#+127
   \   00000136   3000               MOVS     R0,R6
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   0A21               MOVS     R1,#+10
   \   0000013C   0220               MOVS     R0,#+2
   \   0000013E   03B4               PUSH     {R0,R1}
   \   00000140   3E23               MOVS     R3,#+62
   \   00000142   0C22               MOVS     R2,#+12
   \   00000144   0100               MOVS     R1,R0
   \   00000146   06A8               ADD      R0,SP,#+24
   \   00000148   ........           BL       Label
   \   0000014C   06B0               ADD      SP,SP,#+24
   6572                 CharToStrData(DateTime.Mounth, time_char); //(char Value, char *Vstring, char ill);
   \   0000014E   6946               MOV      R1,SP
   \   00000150   6878               LDRB     R0,[R5, #+1]
   \   00000152   ........           BL       CharToStrData
   6573                 Label(time_char,2,27,62,2,10,1,127,(SetupTimeCarPoz>>4)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000156   82B0               SUB      SP,SP,#+8
   \   00000158   3878               LDRB     R0,[R7, #+0]
   \   0000015A   0009               LSRS     R0,R0,#+4
   \   0000015C   3100               MOVS     R1,R6
   \   0000015E   0140               ANDS     R1,R1,R0
   \   00000160   0091               STR      R1,[SP, #+0]
   \   00000162   7F21               MOVS     R1,#+127
   \   00000164   3000               MOVS     R0,R6
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   0A21               MOVS     R1,#+10
   \   0000016A   0220               MOVS     R0,#+2
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   3E23               MOVS     R3,#+62
   \   00000170   1B22               MOVS     R2,#+27
   \   00000172   0100               MOVS     R1,R0
   \   00000174   06A8               ADD      R0,SP,#+24
   \   00000176   ........           BL       Label
   \   0000017A   06B0               ADD      SP,SP,#+24
   6574                 CharToStrData(DateTime.Year, time_char); //(char Value, char *Vstring, char ill);
   \   0000017C   6946               MOV      R1,SP
   \   0000017E   2878               LDRB     R0,[R5, #+0]
   \   00000180   ........           BL       CharToStrData
   6575                 Label(time_char,2,42,62,2,10,1,127,(SetupTimeCarPoz>>5)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000184   82B0               SUB      SP,SP,#+8
   \   00000186   3878               LDRB     R0,[R7, #+0]
   \   00000188   4009               LSRS     R0,R0,#+5
   \   0000018A   0640               ANDS     R6,R6,R0
   \   0000018C   0096               STR      R6,[SP, #+0]
   \   0000018E   7F21               MOVS     R1,#+127
   \   00000190   0120               MOVS     R0,#+1
   \   00000192   03B4               PUSH     {R0,R1}
   \   00000194   0A21               MOVS     R1,#+10
   \   00000196   0220               MOVS     R0,#+2
   \   00000198   03B4               PUSH     {R0,R1}
   \   0000019A   3E23               MOVS     R3,#+62
   \   0000019C   2A22               MOVS     R2,#+42
   \   0000019E   0100               MOVS     R1,R0
   \   000001A0   06A8               ADD      R0,SP,#+24
   \   000001A2   ........           BL       Label
   \   000001A6   06B0               ADD      SP,SP,#+24
   6576                  
   6577              
   6578                 
   6579                 H_line(10,97,46,1); // (char X, int Y, char lenght, char typ) 
   \   000001A8   0123               MOVS     R3,#+1
   \   000001AA   2E22               MOVS     R2,#+46
   \   000001AC   6121               MOVS     R1,#+97
   \   000001AE   0A20               MOVS     R0,#+10
   \   000001B0   ........           BL       H_line
   6580                 H_line(10,85,46,1); // (char X, int Y, char lenght, char typ) 
   \   000001B4   0123               MOVS     R3,#+1
   \   000001B6   2E22               MOVS     R2,#+46
   \   000001B8   5521               MOVS     R1,#+85
   \   000001BA   0A20               MOVS     R0,#+10
   \   000001BC   ........           BL       H_line
   6581                 V_line(10,86,11,1); // (char X, int Y, char lenght, char typ) 
   \   000001C0   0123               MOVS     R3,#+1
   \   000001C2   0B22               MOVS     R2,#+11
   \   000001C4   5621               MOVS     R1,#+86
   \   000001C6   0A20               MOVS     R0,#+10
   \   000001C8   ........           BL       V_line
   6582                 Label(":",0,25,88,1,1,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001CC   43A6               ADR      R6,??SetupTime_Paint_0+0x14  ;; 0x3A, 0x00, 0x00, 0x00
   \   000001CE   82B0               SUB      SP,SP,#+8
   \   000001D0   0020               MOVS     R0,#+0
   \   000001D2   0090               STR      R0,[SP, #+0]
   \   000001D4   7F21               MOVS     R1,#+127
   \   000001D6   0120               MOVS     R0,#+1
   \   000001D8   03B4               PUSH     {R0,R1}
   \   000001DA   0100               MOVS     R1,R0
   \   000001DC   03B4               PUSH     {R0,R1}
   \   000001DE   5823               MOVS     R3,#+88
   \   000001E0   1922               MOVS     R2,#+25
   \   000001E2   0021               MOVS     R1,#+0
   \   000001E4   3000               MOVS     R0,R6
   \   000001E6   ........           BL       Label
   \   000001EA   06B0               ADD      SP,SP,#+24
   6583                 Label(":",0,40,88,1,1,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001EC   82B0               SUB      SP,SP,#+8
   \   000001EE   0020               MOVS     R0,#+0
   \   000001F0   0090               STR      R0,[SP, #+0]
   \   000001F2   7F21               MOVS     R1,#+127
   \   000001F4   0120               MOVS     R0,#+1
   \   000001F6   03B4               PUSH     {R0,R1}
   \   000001F8   0100               MOVS     R1,R0
   \   000001FA   03B4               PUSH     {R0,R1}
   \   000001FC   5823               MOVS     R3,#+88
   \   000001FE   2822               MOVS     R2,#+40
   \   00000200   0021               MOVS     R1,#+0
   \   00000202   3000               MOVS     R0,R6
   \   00000204   ........           BL       Label
   \   00000208   06B0               ADD      SP,SP,#+24
   6584                   
   6585                 //V_line(25,86,11,1); // (char X, int Y, char lenght, char typ) 
   6586                 //V_line(40,86,11,1); // (char X, int Y, char lenght, char typ) 
   6587                 V_line(55,86,11,1); // (char X, int Y, char lenght, char typ) 
   \   0000020A   0123               MOVS     R3,#+1
   \   0000020C   0B22               MOVS     R2,#+11
   \   0000020E   5621               MOVS     R1,#+86
   \   00000210   3720               MOVS     R0,#+55
   \   00000212   ........           BL       V_line
   6588                 
   6589                 H_line(10,72,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000216   0123               MOVS     R3,#+1
   \   00000218   2E22               MOVS     R2,#+46
   \   0000021A   4821               MOVS     R1,#+72
   \   0000021C   0A20               MOVS     R0,#+10
   \   0000021E   ........           BL       H_line
   6590                 H_line(10,60,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000222   0123               MOVS     R3,#+1
   \   00000224   2E22               MOVS     R2,#+46
   \   00000226   3C21               MOVS     R1,#+60
   \   00000228   0A20               MOVS     R0,#+10
   \   0000022A   ........           BL       H_line
   6591                 V_line(10,61,11,1); // (char X, int Y, char lenght, char typ) 
   \   0000022E   0123               MOVS     R3,#+1
   \   00000230   0B22               MOVS     R2,#+11
   \   00000232   3D21               MOVS     R1,#+61
   \   00000234   0A20               MOVS     R0,#+10
   \   00000236   ........           BL       V_line
   6592                 H_line(23,66,4,1); // (char X, int Y, char lenght, char typ) 
   \   0000023A   0123               MOVS     R3,#+1
   \   0000023C   0422               MOVS     R2,#+4
   \   0000023E   4221               MOVS     R1,#+66
   \   00000240   1720               MOVS     R0,#+23
   \   00000242   ........           BL       H_line
   6593                 H_line(38,66,4,1); // (char X, int Y, char lenght, char typ) 
   \   00000246   0123               MOVS     R3,#+1
   \   00000248   0422               MOVS     R2,#+4
   \   0000024A   4221               MOVS     R1,#+66
   \   0000024C   2620               MOVS     R0,#+38
   \   0000024E   ........           BL       H_line
   6594                 //V_line(25,61,11,1); // (char X, int Y, char lenght, char typ) 
   6595                 //V_line(40,61,11,1); // (char X, int Y, char lenght, char typ) 
   6596                 V_line(55,61,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000252   0123               MOVS     R3,#+1
   \   00000254   0B22               MOVS     R2,#+11
   \   00000256   3D21               MOVS     R1,#+61
   \   00000258   3720               MOVS     R0,#+55
   \   0000025A   ........           BL       V_line
   6597                 
   6598                
   6599                // Button("> ",42,5,18,18);
   6600                // Button("< ",3,5,18,18);
   6601          
   6602                 Label((char*)DeyOfWeekLongStr[g_leng][DateTime.DayOfWeek],2,2,9,12,58,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000025E   82B0               SUB      SP,SP,#+8
   \   00000260   0020               MOVS     R0,#+0
   \   00000262   0090               STR      R0,[SP, #+0]
   \   00000264   6921               MOVS     R1,#+105
   \   00000266   03B4               PUSH     {R0,R1}
   \   00000268   3A21               MOVS     R1,#+58
   \   0000026A   0C20               MOVS     R0,#+12
   \   0000026C   03B4               PUSH     {R0,R1}
   \   0000026E   0923               MOVS     R3,#+9
   \   00000270   0222               MOVS     R2,#+2
   \   00000272   1100               MOVS     R1,R2
   \   00000274   A879               LDRB     R0,[R5, #+6]
   \   00000276   0C25               MOVS     R5,#+12
   \   00000278   6843               MULS     R0,R5,R0
   \   0000027A   2468               LDR      R4,[R4, #+0]
   \   0000027C   6025               MOVS     R5,#+96
   \   0000027E   6C43               MULS     R4,R5,R4
   \   00000280   174D               LDR      R5,??SetupTime_Paint_0+0x18  ;; DeyOfWeekLongStr
   \   00000282   2C19               ADDS     R4,R5,R4
   \   00000284   2018               ADDS     R0,R4,R0
   \   00000286   ........           BL       Label
   \   0000028A   06B0               ADD      SP,SP,#+24
   6603                        
   6604                 
   6605                 
   6606                 char LabelButt[2];
   6607                 LabelButt[1]=0;
   \   0000028C   01AC               ADD      R4,SP,#+4
   \   0000028E   0020               MOVS     R0,#+0
   \   00000290   6070               STRB     R0,[R4, #+1]
   6608                 LabelButt[0]=30;
   \   00000292   1E20               MOVS     R0,#+30
   \   00000294   2070               STRB     R0,[R4, #+0]
   6609                 Button(LabelButt,33,30,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000296   82B0               SUB      SP,SP,#+8
   \   00000298   1920               MOVS     R0,#+25
   \   0000029A   0090               STR      R0,[SP, #+0]
   \   0000029C   1323               MOVS     R3,#+19
   \   0000029E   1E22               MOVS     R2,#+30
   \   000002A0   2121               MOVS     R1,#+33
   \   000002A2   03A8               ADD      R0,SP,#+12
   \   000002A4   ........           BL       Button
   \   000002A8   02B0               ADD      SP,SP,#+8
   6610                 LabelButt[0]=31;
   \   000002AA   1F20               MOVS     R0,#+31
   \   000002AC   2070               STRB     R0,[R4, #+0]
   6611                 Button(LabelButt,12,30,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000002AE   82B0               SUB      SP,SP,#+8
   \   000002B0   1920               MOVS     R0,#+25
   \   000002B2   0090               STR      R0,[SP, #+0]
   \   000002B4   1323               MOVS     R3,#+19
   \   000002B6   1E22               MOVS     R2,#+30
   \   000002B8   0C21               MOVS     R1,#+12
   \   000002BA   03A8               ADD      R0,SP,#+12
   \   000002BC   ........           BL       Button
   \   000002C0   02B0               ADD      SP,SP,#+8
   6612                 
   6613                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   6614              }//________________________________________________________________________
   \   000002C2   FEBC               POP      {R1-R7}
   \   000002C4   01BC               POP      {R0}
   \   000002C6   0047               BX       R0               ;; return
   \                     ??SetupTime_Paint_0:
   \   000002C8   ........           DC32     g_leng
   \   000002CC   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002D0   ........           DC32     Speech
   \   000002D4   ........           DC32     DateTime
   \   000002D8   ........           DC32     SetupTimeCarPoz
   \   000002DC   3A000000           DC8      0x3A, 0x00, 0x00, 0x00
   \   000002E0   ........           DC32     DeyOfWeekLongStr
   6615          

   \                                 In section Debug.txt, align 4, keep-with-next
   6616              void SetupTime_Refresh(void)
   6617              {  
   \                     SetupTime_Refresh:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   6618          
   6619                 char time_char[3];
   6620                  
   6621                 CharToStr(DateTime.Hour, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000002   544C               LDR      R4,??SetupTime_Refresh_0  ;; DateTime
   \   00000004   0222               MOVS     R2,#+2
   \   00000006   6946               MOV      R1,SP
   \   00000008   E078               LDRB     R0,[R4, #+3]
   \   0000000A   ........           BL       CharToStr
   6622                 Label(time_char,2,12,87,2,11,1,127,((SetupTimeCarPoz)&0x1) );  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000000E   0126               MOVS     R6,#+1
   \   00000010   514D               LDR      R5,??SetupTime_Refresh_0+0x4  ;; SetupTimeCarPoz
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   2878               LDRB     R0,[R5, #+0]
   \   00000016   3100               MOVS     R1,R6
   \   00000018   0140               ANDS     R1,R1,R0
   \   0000001A   0091               STR      R1,[SP, #+0]
   \   0000001C   7F21               MOVS     R1,#+127
   \   0000001E   3000               MOVS     R0,R6
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0B21               MOVS     R1,#+11
   \   00000024   0220               MOVS     R0,#+2
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   5723               MOVS     R3,#+87
   \   0000002A   0C22               MOVS     R2,#+12
   \   0000002C   0100               MOVS     R1,R0
   \   0000002E   06A8               ADD      R0,SP,#+24
   \   00000030   ........           BL       Label
   \   00000034   06B0               ADD      SP,SP,#+24
   6623                 CharToStr2(DateTime.Minute, time_char, 2); //(char Value, char *Vstring, char ill);
                        ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   \   00000036   0222               MOVS     R2,#+2
   \   00000038   6946               MOV      R1,SP
   \   0000003A   2079               LDRB     R0,[R4, #+4]
   \   0000003C   ........           BL       CharToStr2
   6624                 Label(time_char,2,27,87,2,11,1,127,(SetupTimeCarPoz>>1)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   2878               LDRB     R0,[R5, #+0]
   \   00000044   4008               LSRS     R0,R0,#+1
   \   00000046   3100               MOVS     R1,R6
   \   00000048   0140               ANDS     R1,R1,R0
   \   0000004A   0091               STR      R1,[SP, #+0]
   \   0000004C   7F21               MOVS     R1,#+127
   \   0000004E   3000               MOVS     R0,R6
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0B21               MOVS     R1,#+11
   \   00000054   0220               MOVS     R0,#+2
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   5723               MOVS     R3,#+87
   \   0000005A   1B22               MOVS     R2,#+27
   \   0000005C   0100               MOVS     R1,R0
   \   0000005E   06A8               ADD      R0,SP,#+24
   \   00000060   ........           BL       Label
   \   00000064   06B0               ADD      SP,SP,#+24
   6625                 CharToStr2(DateTime.Second, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000066   0222               MOVS     R2,#+2
   \   00000068   6946               MOV      R1,SP
   \   0000006A   6079               LDRB     R0,[R4, #+5]
   \   0000006C   ........           BL       CharToStr2
   6626                 Label(time_char,2,42,87,2,11,1,127,(SetupTimeCarPoz>>2)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   2878               LDRB     R0,[R5, #+0]
   \   00000074   8008               LSRS     R0,R0,#+2
   \   00000076   3100               MOVS     R1,R6
   \   00000078   0140               ANDS     R1,R1,R0
   \   0000007A   0091               STR      R1,[SP, #+0]
   \   0000007C   7F21               MOVS     R1,#+127
   \   0000007E   3000               MOVS     R0,R6
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   0B21               MOVS     R1,#+11
   \   00000084   0220               MOVS     R0,#+2
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   5723               MOVS     R3,#+87
   \   0000008A   2A22               MOVS     R2,#+42
   \   0000008C   0100               MOVS     R1,R0
   \   0000008E   06A8               ADD      R0,SP,#+24
   \   00000090   ........           BL       Label
   \   00000094   06B0               ADD      SP,SP,#+24
   6627                  
   6628          
   6629                 CharToStrData(DateTime.Day, time_char); //(char Value, char *Vstring, char ill);
   \   00000096   6946               MOV      R1,SP
   \   00000098   A078               LDRB     R0,[R4, #+2]
   \   0000009A   ........           BL       CharToStrData
   6630                 Label(time_char,2,12,62,2,10,1,127,(SetupTimeCarPoz>>3)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   2878               LDRB     R0,[R5, #+0]
   \   000000A2   C008               LSRS     R0,R0,#+3
   \   000000A4   3100               MOVS     R1,R6
   \   000000A6   0140               ANDS     R1,R1,R0
   \   000000A8   0091               STR      R1,[SP, #+0]
   \   000000AA   7F21               MOVS     R1,#+127
   \   000000AC   3000               MOVS     R0,R6
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   0A21               MOVS     R1,#+10
   \   000000B2   0220               MOVS     R0,#+2
   \   000000B4   03B4               PUSH     {R0,R1}
   \   000000B6   3E23               MOVS     R3,#+62
   \   000000B8   0C22               MOVS     R2,#+12
   \   000000BA   0100               MOVS     R1,R0
   \   000000BC   06A8               ADD      R0,SP,#+24
   \   000000BE   ........           BL       Label
   \   000000C2   06B0               ADD      SP,SP,#+24
   6631                 CharToStrData(DateTime.Mounth, time_char); //(char Value, char *Vstring, char ill);
   \   000000C4   6946               MOV      R1,SP
   \   000000C6   6078               LDRB     R0,[R4, #+1]
   \   000000C8   ........           BL       CharToStrData
   6632                 Label(time_char,2,27,62,2,10,1,127,(SetupTimeCarPoz>>4)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000CC   82B0               SUB      SP,SP,#+8
   \   000000CE   2878               LDRB     R0,[R5, #+0]
   \   000000D0   0009               LSRS     R0,R0,#+4
   \   000000D2   3100               MOVS     R1,R6
   \   000000D4   0140               ANDS     R1,R1,R0
   \   000000D6   0091               STR      R1,[SP, #+0]
   \   000000D8   7F21               MOVS     R1,#+127
   \   000000DA   3000               MOVS     R0,R6
   \   000000DC   03B4               PUSH     {R0,R1}
   \   000000DE   0A21               MOVS     R1,#+10
   \   000000E0   0220               MOVS     R0,#+2
   \   000000E2   03B4               PUSH     {R0,R1}
   \   000000E4   3E23               MOVS     R3,#+62
   \   000000E6   1B22               MOVS     R2,#+27
   \   000000E8   0100               MOVS     R1,R0
   \   000000EA   06A8               ADD      R0,SP,#+24
   \   000000EC   ........           BL       Label
   \   000000F0   06B0               ADD      SP,SP,#+24
   6633                 CharToStrData(DateTime.Year, time_char); //(char Value, char *Vstring, char ill);
   \   000000F2   6946               MOV      R1,SP
   \   000000F4   2078               LDRB     R0,[R4, #+0]
   \   000000F6   ........           BL       CharToStrData
   6634                 Label(time_char,2,42,62,2,10,1,127,(SetupTimeCarPoz>>5)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   2878               LDRB     R0,[R5, #+0]
   \   000000FE   4009               LSRS     R0,R0,#+5
   \   00000100   0640               ANDS     R6,R6,R0
   \   00000102   0096               STR      R6,[SP, #+0]
   \   00000104   7F21               MOVS     R1,#+127
   \   00000106   0120               MOVS     R0,#+1
   \   00000108   03B4               PUSH     {R0,R1}
   \   0000010A   0A21               MOVS     R1,#+10
   \   0000010C   0220               MOVS     R0,#+2
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   3E23               MOVS     R3,#+62
   \   00000112   2A22               MOVS     R2,#+42
   \   00000114   0100               MOVS     R1,R0
   \   00000116   06A8               ADD      R0,SP,#+24
   \   00000118   ........           BL       Label
   \   0000011C   06B0               ADD      SP,SP,#+24
   6635                  
   6636                 
   6637                 Label((char*)DeyOfWeekLongStr[g_leng][DateTime.DayOfWeek],2,2,9,12,58,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   0020               MOVS     R0,#+0
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   6921               MOVS     R1,#+105
   \   00000126   03B4               PUSH     {R0,R1}
   \   00000128   3A21               MOVS     R1,#+58
   \   0000012A   0C20               MOVS     R0,#+12
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   0923               MOVS     R3,#+9
   \   00000130   0222               MOVS     R2,#+2
   \   00000132   1100               MOVS     R1,R2
   \   00000134   A079               LDRB     R0,[R4, #+6]
   \   00000136   0C24               MOVS     R4,#+12
   \   00000138   6043               MULS     R0,R4,R0
   \   0000013A   084C               LDR      R4,??SetupTime_Refresh_0+0x8  ;; g_leng
   \   0000013C   2468               LDR      R4,[R4, #+0]
   \   0000013E   6025               MOVS     R5,#+96
   \   00000140   6C43               MULS     R4,R5,R4
   \   00000142   074D               LDR      R5,??SetupTime_Refresh_0+0xC  ;; DeyOfWeekLongStr
   \   00000144   2C19               ADDS     R4,R5,R4
   \   00000146   2018               ADDS     R0,R4,R0
   \   00000148   ........           BL       Label
   \   0000014C   06B0               ADD      SP,SP,#+24
   6638                        
   6639              }//________________________________________________________________________
   \   0000014E   7CBC               POP      {R2-R6}
   \   00000150   01BC               POP      {R0}
   \   00000152   0047               BX       R0               ;; return
   \                     ??SetupTime_Refresh_0:
   \   00000154   ........           DC32     DateTime
   \   00000158   ........           DC32     SetupTimeCarPoz
   \   0000015C   ........           DC32     g_leng
   \   00000160   ........           DC32     DeyOfWeekLongStr
   6640          
   6641          

   \                                 In section Debug.txt, align 4, keep-with-next
   6642          int przestepny(int rok) {
   \                     przestepny:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   6643          	return ((rok % 4 == 0  &&  rok % 100 != 0) || rok % 400 == 0);
   \   00000004   4010               ASRS     R0,R0,#+1
   \   00000006   800F               LSRS     R0,R0,#+30
   \   00000008   0019               ADDS     R0,R0,R4
   \   0000000A   8010               ASRS     R0,R0,#+2
   \   0000000C   8000               LSLS     R0,R0,#+2
   \   0000000E   201A               SUBS     R0,R4,R0
   \   00000010   05D1               BNE      ??przestepny_0
   \   00000012   2000               MOVS     R0,R4
   \   00000014   6421               MOVS     R1,#+100
   \   00000016   ........           BL       __aeabi_idivmod
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   09D1               BNE      ??przestepny_1
   \                     ??przestepny_0:
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   C821               MOVS     R1,#+200
   \   00000022   4900               LSLS     R1,R1,#+1        ;; #+400
   \   00000024   ........           BL       __aeabi_idivmod
   \   00000028   0800               MOVS     R0,R1
   \   0000002A   401E               SUBS     R0,R0,#+1
   \   0000002C   8041               SBCS     R0,R0,R0
   \   0000002E   C00F               LSRS     R0,R0,#+31
   \   00000030   00E0               B        ??przestepny_2
   \                     ??przestepny_1:
   \   00000032   0120               MOVS     R0,#+1
   \                     ??przestepny_2:
   \   00000034   10BC               POP      {R4}
   \   00000036   02BC               POP      {R1}
   \   00000038   0847               BX       R1               ;; return
   6644          }
   6645          
   6646          

   \                                 In section Debug.txt, align 4, keep-with-next
   6647          int dzienTygodnia(int dzien, int miesiac, int rok) 
   6648          {
   \                     dzienTygodnia:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   8CB0               SUB      SP,SP,#+48
   \   00000004   0500               MOVS     R5,R0
   \   00000006   0E00               MOVS     R6,R1
   \   00000008   1400               MOVS     R4,R2
   6649          	int dr, yy, c, g, wynik;
   6650          	int liczbaDni[] = {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};
   \   0000000A   6846               MOV      R0,SP
   \   0000000C   1C49               LDR      R1,??dzienTygodnia_0  ;; `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`
   \   0000000E   3022               MOVS     R2,#+48
   \   00000010   ........           BL       __aeabi_memcpy4
   6651          	dr = dzien + liczbaDni[miesiac-1];
   \   00000014   B000               LSLS     R0,R6,#+2
   \   00000016   6946               MOV      R1,SP
   \   00000018   0818               ADDS     R0,R1,R0
   \   0000001A   001F               SUBS     R0,R0,#+4
   \   0000001C   0068               LDR      R0,[R0, #+0]
   \   0000001E   2D18               ADDS     R5,R5,R0
   6652          	if ((miesiac > 2) && (przestepny(rok) == 1))
   \   00000020   032E               CMP      R6,#+3
   \   00000022   05DB               BLT      ??dzienTygodnia_1
   \   00000024   2000               MOVS     R0,R4
   \   00000026   ........           BL       przestepny
   \   0000002A   0128               CMP      R0,#+1
   \   0000002C   00D1               BNE      ??dzienTygodnia_1
   6653          		dr++;
   \   0000002E   6D1C               ADDS     R5,R5,#+1
   6654          	yy = (rok - 1) % 100;
   \                     ??dzienTygodnia_1:
   \   00000030   641E               SUBS     R4,R4,#+1
   \   00000032   2000               MOVS     R0,R4
   \   00000034   6421               MOVS     R1,#+100
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   0E00               MOVS     R6,R1
   6655          	c = (rok - 1) - yy;
   6656          	g = yy + (yy / 4);
   6657          	wynik = (((((c / 100) % 4) * 5) + g) % 7);
   6658          	wynik += dr - 1;
   6659          	wynik %= 7;
   6660          	return wynik+1;
   \   0000003C   A01B               SUBS     R0,R4,R6
   \   0000003E   6421               MOVS     R1,#+100
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   0100               MOVS     R1,R0
   \   00000046   4910               ASRS     R1,R1,#+1
   \   00000048   890F               LSRS     R1,R1,#+30
   \   0000004A   0918               ADDS     R1,R1,R0
   \   0000004C   8910               ASRS     R1,R1,#+2
   \   0000004E   8900               LSLS     R1,R1,#+2
   \   00000050   401A               SUBS     R0,R0,R1
   \   00000052   0521               MOVS     R1,#+5
   \   00000054   4843               MULS     R0,R1,R0
   \   00000056   8019               ADDS     R0,R0,R6
   \   00000058   3100               MOVS     R1,R6
   \   0000005A   4910               ASRS     R1,R1,#+1
   \   0000005C   890F               LSRS     R1,R1,#+30
   \   0000005E   8919               ADDS     R1,R1,R6
   \   00000060   8910               ASRS     R1,R1,#+2
   \   00000062   4018               ADDS     R0,R0,R1
   \   00000064   0721               MOVS     R1,#+7
   \   00000066   ........           BL       __aeabi_idivmod
   \   0000006A   4819               ADDS     R0,R1,R5
   \   0000006C   401E               SUBS     R0,R0,#+1
   \   0000006E   0721               MOVS     R1,#+7
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   0800               MOVS     R0,R1
   \   00000076   401C               ADDS     R0,R0,#+1
   \   00000078   0CB0               ADD      SP,SP,#+48
   \   0000007A   70BC               POP      {R4-R6}
   \   0000007C   02BC               POP      {R1}
   \   0000007E   0847               BX       R1               ;; return
   \                     ??dzienTygodnia_0:
   \   00000080   ........           DC32     `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`
   6661          }
   6662          
   6663          
   6664          
   6665              //*-----------------------------------------------------------------------------
   6666              char SleepModTime=0;

   \                                 In section Debug.txt, align 4, keep-with-next
   6667              void SetupTime_Event(void)
   6668              {
   \                     SetupTime_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   6669                  int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0);  //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   B04C               LDR      R4,??SetupTime_Event_2  ;; X_up
   \   00000006   B14D               LDR      R5,??SetupTime_Event_2+0x4  ;; Y_up
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0120               MOVS     R0,#+1
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   AF48               LDR      R0,??SetupTime_Event_2+0x8  ;; Y_down
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   AF48               LDR      R0,??SetupTime_Event_2+0xC  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   295E               LDRSH    R1,[R5, R0]
   \   0000001E   205E               LDRSH    R0,[R4, R0]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   \   00000026   0600               MOVS     R6,R0
   6670                  
   6671                  char  SetupPozTmp=0;
   6672                  if ((X_up>10) && (X_up<56) &&  (Y_up>85) && (Y_up<97))  
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   205E               LDRSH    R0,[R4, R0]
   \   0000002C   0B28               CMP      R0,#+11
   \   0000002E   1EDB               BLT      ??SetupTime_Event_3
   \   00000030   3828               CMP      R0,#+56
   \   00000032   1CDA               BGE      ??SetupTime_Event_3
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   695E               LDRSH    R1,[R5, R1]
   \   00000038   5629               CMP      R1,#+86
   \   0000003A   18DB               BLT      ??SetupTime_Event_3
   \   0000003C   6129               CMP      R1,#+97
   \   0000003E   16DA               BGE      ??SetupTime_Event_3
   6673                  {
   6674                     SetupPozTmp = (X_up-10)/15;
   6675                     SetupTimeCarPoz=0;
   6676                     SetupTimeCarPoz=1<<SetupPozTmp;
   \   00000040   0127               MOVS     R7,#+1
   \   00000042   0A38               SUBS     R0,R0,#+10
   \   00000044   0F21               MOVS     R1,#+15
   \   00000046   ........           BL       __aeabi_idivmod
   \   0000004A   8740               LSLS     R7,R7,R0
   \   0000004C   A248               LDR      R0,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   0000004E   0770               STRB     R7,[R0, #+0]
   6677                     if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                  ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000050   A248               LDR      R0,??SetupTime_Event_2+0x14  ;; 0x13d7e9
   \   00000052   0078               LDRB     R0,[R0, #+0]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   0AD1               BNE      ??SetupTime_Event_3
   \   00000058   A148               LDR      R0,??SetupTime_Event_2+0x18  ;; 0xfffff430
   \   0000005A   8021               MOVS     R1,#+128
   \   0000005C   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000005E   0160               STR      R1,[R0, #+0]
   \   00000060   A04A               LDR      R2,??SetupTime_Event_2+0x1C  ;; ButtonBipCounter
   \   00000062   A148               LDR      R0,??SetupTime_Event_2+0x20  ;; g_counter
   \   00000064   03C8               LDM      R0!,{R0,R1}
   \   00000066   0023               MOVS     R3,#+0
   \   00000068   0830               ADDS     R0,R0,#+8
   \   0000006A   5941               ADCS     R1,R1,R3
   \   0000006C   03C2               STM      R2!,{R0,R1}
   6678                  }
   6679                  if ((X_up>10) && (X_up<56) &&  (Y_up>60) && (Y_up<72))  
   \                     ??SetupTime_Event_3:
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   205E               LDRSH    R0,[R4, R0]
   \   00000072   0B28               CMP      R0,#+11
   \   00000074   1FDB               BLT      ??SetupTime_Event_4
   \   00000076   3828               CMP      R0,#+56
   \   00000078   1DDA               BGE      ??SetupTime_Event_4
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   695E               LDRSH    R1,[R5, R1]
   \   0000007E   3D29               CMP      R1,#+61
   \   00000080   19DB               BLT      ??SetupTime_Event_4
   \   00000082   4829               CMP      R1,#+72
   \   00000084   17DA               BGE      ??SetupTime_Event_4
   6680                  {
   6681                     SetupPozTmp = (X_up-10)/15;
   6682                     SetupTimeCarPoz=0;
   6683                     SetupTimeCarPoz=1<<SetupPozTmp+3;
   \   00000086   0124               MOVS     R4,#+1
   \   00000088   0A38               SUBS     R0,R0,#+10
   \   0000008A   0F21               MOVS     R1,#+15
   \   0000008C   ........           BL       __aeabi_idivmod
   \   00000090   C01C               ADDS     R0,R0,#+3
   \   00000092   8440               LSLS     R4,R4,R0
   \   00000094   9048               LDR      R0,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   00000096   0470               STRB     R4,[R0, #+0]
   6684                     if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                  ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000098   9048               LDR      R0,??SetupTime_Event_2+0x14  ;; 0x13d7e9
   \   0000009A   0078               LDRB     R0,[R0, #+0]
   \   0000009C   0028               CMP      R0,#+0
   \   0000009E   0AD1               BNE      ??SetupTime_Event_4
   \   000000A0   8F48               LDR      R0,??SetupTime_Event_2+0x18  ;; 0xfffff430
   \   000000A2   8021               MOVS     R1,#+128
   \   000000A4   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000A6   0160               STR      R1,[R0, #+0]
   \   000000A8   8E4A               LDR      R2,??SetupTime_Event_2+0x1C  ;; ButtonBipCounter
   \   000000AA   8F48               LDR      R0,??SetupTime_Event_2+0x20  ;; g_counter
   \   000000AC   03C8               LDM      R0!,{R0,R1}
   \   000000AE   0023               MOVS     R3,#+0
   \   000000B0   0830               ADDS     R0,R0,#+8
   \   000000B2   5941               ADCS     R1,R1,R3
   \   000000B4   03C2               STM      R2!,{R0,R1}
   6685                  }
   6686                  
   6687                 if (ans<0)  
   \                     ??SetupTime_Event_4:
   \   000000B6   002E               CMP      R6,#+0
   \   000000B8   0AD5               BPL      ??SetupTime_Event_5
   6688                 {
   6689                    SetRTC_DateTime();  //Ustawinie: sekundy, minuty,  godziny, dzieñ tyg, dnia, miesi¹ca, roku
   \   000000BA   ........           BL       SetRTC_DateTime
   6690                    MenuLevel=(MenuLevel/10);
   \   000000BE   AD4C               LDR      R4,??SetupTime_Event_6  ;; TextToChangeLength
   \   000000C0   A06C               LDR      R0,[R4, #+72]
   \   000000C2   0A21               MOVS     R1,#+10
   \   000000C4   ........           BL       __aeabi_idivmod
   \   000000C8   A064               STR      R0,[R4, #+72]
   6691                    MenuPaint();
   \   000000CA   ........           BL       MenuPaint
   \   000000CE   4CE1               B        ??SetupTime_Event_7
   6692                 }
   \                     ??SetupTime_Event_5:
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   0190               STR      R0,[SP, #+4]
   6693                 else
   6694                 {
   6695                  char odp=0;
   6696                  int set_zm=0;
   6697                  char LabelButt[1]={30};
   \   000000D4   03A8               ADD      R0,SP,#+12
   \   000000D6   A849               LDR      R1,??SetupTime_Event_6+0x4  ;; `?<Constant {30}>`
   \   000000D8   0A68               LDR      R2,[R1, #0]
   \   000000DA   0260               STR      R2,[R0, #0]
   6698                  odp = (Button(LabelButt,33,30,19,25));
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   1920               MOVS     R0,#+25
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   1323               MOVS     R3,#+19
   \   000000E4   1E22               MOVS     R2,#+30
   \   000000E6   2121               MOVS     R1,#+33
   \   000000E8   05A8               ADD      R0,SP,#+20
   \   000000EA   ........           BL       Button
   \   000000EE   02B0               ADD      SP,SP,#+8
   6699                  if ((odp==2) && (SleepModTime==0)) set_zm=1;
   \   000000F0   0100               MOVS     R1,R0
   \   000000F2   0229               CMP      R1,#+2
   \   000000F4   05D1               BNE      ??SetupTime_Event_8
   \   000000F6   A149               LDR      R1,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   000000F8   0978               LDRB     R1,[R1, #+0]
   \   000000FA   0029               CMP      R1,#+0
   \   000000FC   01D1               BNE      ??SetupTime_Event_8
   \   000000FE   0121               MOVS     R1,#+1
   \   00000100   0191               STR      R1,[SP, #+4]
   6700                  if (odp==2) { SleepModTime++; if (SleepModTime>10) SleepModTime=0;};            //(char poz_X , char poz_Y ,char width, char height)
   \                     ??SetupTime_Event_8:
   \   00000102   0100               MOVS     R1,R0
   \   00000104   0229               CMP      R1,#+2
   \   00000106   09D1               BNE      ??SetupTime_Event_9
   \   00000108   7349               LDR      R1,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   0000010A   4A78               LDRB     R2,[R1, #+1]
   \   0000010C   521C               ADDS     R2,R2,#+1
   \   0000010E   4A70               STRB     R2,[R1, #+1]
   \   00000110   1206               LSLS     R2,R2,#+24
   \   00000112   120E               LSRS     R2,R2,#+24
   \   00000114   0B2A               CMP      R2,#+11
   \   00000116   01D3               BCC      ??SetupTime_Event_9
   \   00000118   0022               MOVS     R2,#+0
   \   0000011A   4A70               STRB     R2,[R1, #+1]
   6701                  
   6702                  
   6703                  if (odp==1) {SleepModTime=0;}
   \                     ??SetupTime_Event_9:
   \   0000011C   0128               CMP      R0,#+1
   \   0000011E   02D1               BNE      ??SetupTime_Event_10
   \   00000120   9648               LDR      R0,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   00000122   0021               MOVS     R1,#+0
   \   00000124   0170               STRB     R1,[R0, #+0]
   \                     ??SetupTime_Event_10:
   \   00000126   6846               MOV      R0,SP
   \   00000128   1F21               MOVS     R1,#+31
   \   0000012A   0173               STRB     R1,[R0, #+12]
   6704                  
   6705                  LabelButt[0]=31;
   6706                  odp=0;
   6707                  odp = (Button(LabelButt,12,30,19,25));
   \   0000012C   82B0               SUB      SP,SP,#+8
   \   0000012E   1920               MOVS     R0,#+25
   \   00000130   0090               STR      R0,[SP, #+0]
   \   00000132   1323               MOVS     R3,#+19
   \   00000134   1E22               MOVS     R2,#+30
   \   00000136   0C21               MOVS     R1,#+12
   \   00000138   05A8               ADD      R0,SP,#+20
   \   0000013A   ........           BL       Button
   \   0000013E   02B0               ADD      SP,SP,#+8
   6708                  if ((odp==2)&& (SleepModTime==0))  set_zm=-1;
   \   00000140   0100               MOVS     R1,R0
   \   00000142   0229               CMP      R1,#+2
   \   00000144   06D1               BNE      ??SetupTime_Event_11
   \   00000146   8D49               LDR      R1,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   00000148   0978               LDRB     R1,[R1, #+0]
   \   0000014A   0029               CMP      R1,#+0
   \   0000014C   02D1               BNE      ??SetupTime_Event_11
   \   0000014E   0021               MOVS     R1,#+0
   \   00000150   C943               MVNS     R1,R1            ;; #-1
   \   00000152   0191               STR      R1,[SP, #+4]
   6709                  if (odp==2) { SleepModTime++; if (SleepModTime>10) SleepModTime=0;};            //(char poz_X , char poz_Y ,char width, char height)
   \                     ??SetupTime_Event_11:
   \   00000154   0100               MOVS     R1,R0
   \   00000156   0229               CMP      R1,#+2
   \   00000158   09D1               BNE      ??SetupTime_Event_12
   \   0000015A   5F49               LDR      R1,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   0000015C   4A78               LDRB     R2,[R1, #+1]
   \   0000015E   521C               ADDS     R2,R2,#+1
   \   00000160   4A70               STRB     R2,[R1, #+1]
   \   00000162   1206               LSLS     R2,R2,#+24
   \   00000164   120E               LSRS     R2,R2,#+24
   \   00000166   0B2A               CMP      R2,#+11
   \   00000168   01D3               BCC      ??SetupTime_Event_12
   \   0000016A   0022               MOVS     R2,#+0
   \   0000016C   4A70               STRB     R2,[R1, #+1]
   6710                  
   6711                  if (odp==1) {SleepModTime=0;} 
   \                     ??SetupTime_Event_12:
   \   0000016E   0128               CMP      R0,#+1
   \   00000170   02D1               BNE      ??SetupTime_Event_13
   \   00000172   8248               LDR      R0,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   00000174   0021               MOVS     R1,#+0
   \   00000176   0170               STRB     R1,[R0, #+0]
   \                     ??SetupTime_Event_13:
   \   00000178   8148               LDR      R0,??SetupTime_Event_6+0xC  ;; DateTime + 2
   \   0000017A   0078               LDRB     R0,[R0, #+0]
   \   0000017C   0090               STR      R0,[SP, #+0]
   6712                  
   6713                  
   6714                  signed int dzien_tmp= DateTime.Day;
   6715                  signed int mies_tmp=DateTime.Mounth;
   \   0000017E   8148               LDR      R0,??SetupTime_Event_6+0x10  ;; DateTime + 1
   \   00000180   0678               LDRB     R6,[R0, #+0]
   6716                  signed int rok_tmp=DateTime.Year;
   \   00000182   8148               LDR      R0,??SetupTime_Event_6+0x14  ;; DateTime
   \   00000184   0778               LDRB     R7,[R0, #+0]
   6717                  signed int godz_tmp=DateTime.Hour;
   \   00000186   8148               LDR      R0,??SetupTime_Event_6+0x18  ;; DateTime + 3
   \   00000188   0578               LDRB     R5,[R0, #+0]
   6718                  signed int mi_tmp=DateTime.Minute;
   \   0000018A   8148               LDR      R0,??SetupTime_Event_6+0x1C  ;; DateTime + 4
   \   0000018C   0478               LDRB     R4,[R0, #+0]
   6719                  signed int sek_tmp=DateTime.Second;
   \   0000018E   8148               LDR      R0,??SetupTime_Event_6+0x20  ;; DateTime + 5
   \   00000190   0078               LDRB     R0,[R0, #+0]
   \   00000192   0290               STR      R0,[SP, #+8]
   6720                  
   6721                  
   6722                  switch (SetupTimeCarPoz)
   \   00000194   5048               LDR      R0,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   00000196   0078               LDRB     R0,[R0, #+0]
   \   00000198   0128               CMP      R0,#+1
   \   0000019A   0AD0               BEQ      ??SetupTime_Event_14
   \   0000019C   0228               CMP      R0,#+2
   \   0000019E   0BD0               BEQ      ??SetupTime_Event_15
   \   000001A0   0428               CMP      R0,#+4
   \   000001A2   0CD0               BEQ      ??SetupTime_Event_16
   \   000001A4   0828               CMP      R0,#+8
   \   000001A6   0FD0               BEQ      ??SetupTime_Event_17
   \   000001A8   1028               CMP      R0,#+16
   \   000001AA   12D0               BEQ      ??SetupTime_Event_18
   \   000001AC   2028               CMP      R0,#+32
   \   000001AE   13D0               BEQ      ??SetupTime_Event_19
   \   000001B0   14E0               B        ??SetupTime_Event_20
   6723                  {
   6724                    case 1: godz_tmp+=set_zm;  break;
   \                     ??SetupTime_Event_14:
   \   000001B2   0198               LDR      R0,[SP, #+4]
   \   000001B4   2D18               ADDS     R5,R5,R0
   \   000001B6   11E0               B        ??SetupTime_Event_20
   6725                    case 2: mi_tmp+=set_zm;     break;
   \                     ??SetupTime_Event_15:
   \   000001B8   0198               LDR      R0,[SP, #+4]
   \   000001BA   2418               ADDS     R4,R4,R0
   \   000001BC   0EE0               B        ??SetupTime_Event_20
   6726                    case 4: sek_tmp+=set_zm;   break;
   \                     ??SetupTime_Event_16:
   \   000001BE   0298               LDR      R0,[SP, #+8]
   \   000001C0   0199               LDR      R1,[SP, #+4]
   \   000001C2   4018               ADDS     R0,R0,R1
   \   000001C4   0290               STR      R0,[SP, #+8]
   \   000001C6   09E0               B        ??SetupTime_Event_20
   6727                    case 8: dzien_tmp+=set_zm;  /*DateTime.DayOfWeek+=set_zm;*/  break;
   \                     ??SetupTime_Event_17:
   \   000001C8   0098               LDR      R0,[SP, #+0]
   \   000001CA   0199               LDR      R1,[SP, #+4]
   \   000001CC   4018               ADDS     R0,R0,R1
   \   000001CE   0090               STR      R0,[SP, #+0]
   \   000001D0   04E0               B        ??SetupTime_Event_20
   6728                    case 16: mies_tmp+=set_zm;   break;
   \                     ??SetupTime_Event_18:
   \   000001D2   0198               LDR      R0,[SP, #+4]
   \   000001D4   3618               ADDS     R6,R6,R0
   \   000001D6   01E0               B        ??SetupTime_Event_20
   6729                    case 32: rok_tmp+=set_zm;   break; 
   \                     ??SetupTime_Event_19:
   \   000001D8   0198               LDR      R0,[SP, #+4]
   \   000001DA   3F18               ADDS     R7,R7,R0
   6730                  }
   6731                  
   6732                  if (sek_tmp>59) {sek_tmp=0; mi_tmp++;} 
   \                     ??SetupTime_Event_20:
   \   000001DC   0298               LDR      R0,[SP, #+8]
   \   000001DE   3C28               CMP      R0,#+60
   \   000001E0   02DB               BLT      ??SetupTime_Event_21
   \   000001E2   0020               MOVS     R0,#+0
   \   000001E4   0290               STR      R0,[SP, #+8]
   \   000001E6   641C               ADDS     R4,R4,#+1
   6733                  if (mi_tmp>59)  {mi_tmp=0; godz_tmp++;}
   \                     ??SetupTime_Event_21:
   \   000001E8   3C2C               CMP      R4,#+60
   \   000001EA   01DB               BLT      ??SetupTime_Event_22
   \   000001EC   0024               MOVS     R4,#+0
   \   000001EE   6D1C               ADDS     R5,R5,#+1
   6734                  if (godz_tmp>23) godz_tmp=0;  
   \                     ??SetupTime_Event_22:
   \   000001F0   182D               CMP      R5,#+24
   \   000001F2   00DB               BLT      ??SetupTime_Event_23
   \   000001F4   0025               MOVS     R5,#+0
   6735                  
   6736                  if (sek_tmp<0) {sek_tmp=59; mi_tmp--;}
   \                     ??SetupTime_Event_23:
   \   000001F6   0298               LDR      R0,[SP, #+8]
   \   000001F8   0028               CMP      R0,#+0
   \   000001FA   02D5               BPL      ??SetupTime_Event_24
   \   000001FC   3B20               MOVS     R0,#+59
   \   000001FE   0290               STR      R0,[SP, #+8]
   \   00000200   641E               SUBS     R4,R4,#+1
   6737                  if (mi_tmp<0)  {mi_tmp=59; godz_tmp--;}
   \                     ??SetupTime_Event_24:
   \   00000202   002C               CMP      R4,#+0
   \   00000204   01D5               BPL      ??SetupTime_Event_25
   \   00000206   3B24               MOVS     R4,#+59
   \   00000208   6D1E               SUBS     R5,R5,#+1
   6738                  if (godz_tmp<0) godz_tmp=23;
   \                     ??SetupTime_Event_25:
   \   0000020A   002D               CMP      R5,#+0
   \   0000020C   00D5               BPL      ??SetupTime_Event_26
   \   0000020E   1725               MOVS     R5,#+23
   6739                 
   6740                  char mies_tmp2 = mies_tmp;
   6741                  switch (mies_tmp2)
   \                     ??SetupTime_Event_26:
   \   00000210   3000               MOVS     R0,R6
   \   00000212   0006               LSLS     R0,R0,#+24
   \   00000214   000E               LSRS     R0,R0,#+24
   \   00000216   401E               SUBS     R0,R0,#+1
   \   00000218   0B28               CMP      R0,#+11
   \   0000021A   37D8               BHI      ??SetupTime_Event_27
   \   0000021C   01A1               ADR      R1,??SetupTime_Event_0
   \   0000021E   095C               LDRB     R1,[R1, R0]
   \   00000220   8F44               ADD      PC,PC,R1
   \   00000222   C046               Nop      
   \                     ??SetupTime_Event_0:
   \   00000224   0C1A0C54           DC8      +12,+26,+12,+84
   \   00000228   0C540C0C           DC8      +12,+84,+12,+12
   \   0000022C   540C545C           DC8      +84,+12,+84,+92
   6742                  {
   6743                    case 1  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   \                     ??SetupTime_Event_28:
   \   00000230   0098               LDR      R0,[SP, #+0]
   \   00000232   2028               CMP      R0,#+32
   \   00000234   2ADB               BLT      ??SetupTime_Event_27
   \                     ??SetupTime_Event_29:
   \   00000236   0120               MOVS     R0,#+1
   \   00000238   0090               STR      R0,[SP, #+0]
   \   0000023A   761C               ADDS     R6,R6,#+1
   \   0000023C   26E0               B        ??SetupTime_Event_27
   6744                    case 2  : if ((rok_tmp%4==0) && (rok_tmp%100 != 0) || (rok_tmp%400 == 0))  //je¿eli rok przestêpny
   \                     ??SetupTime_Event_30:
   \   0000023E   3800               MOVS     R0,R7
   \   00000240   4010               ASRS     R0,R0,#+1
   \   00000242   800F               LSRS     R0,R0,#+30
   \   00000244   C019               ADDS     R0,R0,R7
   \   00000246   8010               ASRS     R0,R0,#+2
   \   00000248   8000               LSLS     R0,R0,#+2
   \   0000024A   381A               SUBS     R0,R7,R0
   \   0000024C   05D1               BNE      ??SetupTime_Event_31
   \   0000024E   3800               MOVS     R0,R7
   \   00000250   6421               MOVS     R1,#+100
   \   00000252   ........           BL       __aeabi_idivmod
   \   00000256   0029               CMP      R1,#+0
   \   00000258   06D1               BNE      ??SetupTime_Event_32
   \                     ??SetupTime_Event_31:
   \   0000025A   3800               MOVS     R0,R7
   \   0000025C   C821               MOVS     R1,#+200
   \   0000025E   4900               LSLS     R1,R1,#+1        ;; #+400
   \   00000260   ........           BL       __aeabi_idivmod
   \   00000264   0029               CMP      R1,#+0
   \   00000266   03D1               BNE      ??SetupTime_Event_33
   6745                                {  
   6746                                  if (dzien_tmp>29) {dzien_tmp=1; mies_tmp++;} 
   \                     ??SetupTime_Event_32:
   \   00000268   0098               LDR      R0,[SP, #+0]
   \   0000026A   1E28               CMP      R0,#+30
   \   0000026C   0EDB               BLT      ??SetupTime_Event_27
   \   0000026E   E2E7               B        ??SetupTime_Event_29
   6747                                  }else {if (dzien_tmp>28) {dzien_tmp=1; mies_tmp++;} 
   \                     ??SetupTime_Event_33:
   \   00000270   0098               LDR      R0,[SP, #+0]
   \   00000272   1D28               CMP      R0,#+29
   \   00000274   0ADB               BLT      ??SetupTime_Event_27
   \   00000276   DEE7               B        ??SetupTime_Event_29
   6748                                  }     
   6749                              break;
   6750                    case 3  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6751                    case 4  : if (dzien_tmp>30) {dzien_tmp=1; mies_tmp++;} break;
   \                     ??SetupTime_Event_34:
   \   00000278   0098               LDR      R0,[SP, #+0]
   \   0000027A   1F28               CMP      R0,#+31
   \   0000027C   06DB               BLT      ??SetupTime_Event_27
   \   0000027E   DAE7               B        ??SetupTime_Event_29
   6752                    case 5  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6753                    case 6  : if (dzien_tmp>30) {dzien_tmp=1; mies_tmp++;} break;
   6754                    case 7  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6755                    case 8  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6756                    case 9  : if (dzien_tmp>30) {dzien_tmp=1; mies_tmp++;} break;
   6757                    case 10 : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6758                    case 11 : if (dzien_tmp>30) {dzien_tmp=1; mies_tmp++;} break;
   6759                    case 12 : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp=1; rok_tmp++;} break;
   \                     ??SetupTime_Event_35:
   \   00000280   0098               LDR      R0,[SP, #+0]
   \   00000282   2028               CMP      R0,#+32
   \   00000284   02DB               BLT      ??SetupTime_Event_27
   \   00000286   0126               MOVS     R6,#+1
   \   00000288   0096               STR      R6,[SP, #+0]
   \   0000028A   7F1C               ADDS     R7,R7,#+1
   6760                  }  
   6761                  
   6762                  if (mies_tmp>12)  {mies_tmp=1; rok_tmp++;}
   \                     ??SetupTime_Event_27:
   \   0000028C   0D2E               CMP      R6,#+13
   \   0000028E   01DB               BLT      ??SetupTime_Event_36
   \   00000290   0126               MOVS     R6,#+1
   \   00000292   7F1C               ADDS     R7,R7,#+1
   6763                  if (rok_tmp>99) rok_tmp=0;  
   \                     ??SetupTime_Event_36:
   \   00000294   642F               CMP      R7,#+100
   \   00000296   00DB               BLT      ??SetupTime_Event_37
   \   00000298   0027               MOVS     R7,#+0
   6764                 
   6765                  mies_tmp2 = mies_tmp;
   \                     ??SetupTime_Event_37:
   \   0000029A   3000               MOVS     R0,R6
   \   0000029C   0006               LSLS     R0,R0,#+24
   \   0000029E   000E               LSRS     R0,R0,#+24
   6766                  if (dzien_tmp<=0)
   \   000002A0   0099               LDR      R1,[SP, #+0]
   \   000002A2   0129               CMP      R1,#+1
   \   000002A4   42DA               BGE      ??SetupTime_Event_38
   6767                  switch (mies_tmp2)
   \   000002A6   401E               SUBS     R0,R0,#+1
   \   000002A8   0B28               CMP      R0,#+11
   \   000002AA   3FD8               BHI      ??SetupTime_Event_38
   \   000002AC   01A1               ADR      R1,??SetupTime_Event_1
   \   000002AE   095C               LDRB     R1,[R1, R0]
   \   000002B0   8F44               ADD      PC,PC,R1
   \   000002B2   C046               Nop      
   \                     ??SetupTime_Event_1:
   \   000002B4   0C0C380C           DC8      +12,+12,+56,+12
   \   000002B8   720C720C           DC8      +114,+12,+114,+12
   \   000002BC   0C720C72           DC8      +12,+114,+12,+114
   6768                  {
   6769                    case 1  : dzien_tmp=31; mies_tmp--; break;
   \                     ??SetupTime_Event_39:
   \   000002C0   1F20               MOVS     R0,#+31
   \   000002C2   0090               STR      R0,[SP, #+0]
   \   000002C4   761E               SUBS     R6,R6,#+1
   \   000002C6   31E0               B        ??SetupTime_Event_38
   \                     ??SetupTime_Event_2:
   \   000002C8   ........           DC32     X_up
   \   000002CC   ........           DC32     Y_up
   \   000002D0   ........           DC32     Y_down
   \   000002D4   ........           DC32     X_down
   \   000002D8   ........           DC32     SetupTimeCarPoz
   \   000002DC   E9D71300           DC32     0x13d7e9
   \   000002E0   30F4FFFF           DC32     0xfffff430
   \   000002E4   ........           DC32     ButtonBipCounter
   \   000002E8   ........           DC32     g_counter
   6770                    case 2  : dzien_tmp=31; mies_tmp--; break;
   6771                    case 3  : if ((rok_tmp%4==0) && (rok_tmp%100 != 0) || (rok_tmp%400 == 0))  //je¿eli rok przestêpny
   \                     ??SetupTime_Event_40:
   \   000002EC   3800               MOVS     R0,R7
   \   000002EE   4010               ASRS     R0,R0,#+1
   \   000002F0   800F               LSRS     R0,R0,#+30
   \   000002F2   C019               ADDS     R0,R0,R7
   \   000002F4   8010               ASRS     R0,R0,#+2
   \   000002F6   8000               LSLS     R0,R0,#+2
   \   000002F8   381A               SUBS     R0,R7,R0
   \   000002FA   05D1               BNE      ??SetupTime_Event_41
   \   000002FC   3800               MOVS     R0,R7
   \   000002FE   6421               MOVS     R1,#+100
   \   00000300   ........           BL       __aeabi_idivmod
   \   00000304   0029               CMP      R1,#+0
   \   00000306   06D1               BNE      ??SetupTime_Event_42
   \                     ??SetupTime_Event_41:
   \   00000308   3800               MOVS     R0,R7
   \   0000030A   C821               MOVS     R1,#+200
   \   0000030C   4900               LSLS     R1,R1,#+1        ;; #+400
   \   0000030E   ........           BL       __aeabi_idivmod
   \   00000312   0029               CMP      R1,#+0
   \   00000314   03D1               BNE      ??SetupTime_Event_43
   6772                             { dzien_tmp=29; mies_tmp--; } else { dzien_tmp=28; mies_tmp--; }  break;
   \                     ??SetupTime_Event_42:
   \   00000316   1D20               MOVS     R0,#+29
   \   00000318   0090               STR      R0,[SP, #+0]
   \   0000031A   761E               SUBS     R6,R6,#+1
   \   0000031C   06E0               B        ??SetupTime_Event_38
   \                     ??SetupTime_Event_43:
   \   0000031E   1C20               MOVS     R0,#+28
   \   00000320   0090               STR      R0,[SP, #+0]
   \   00000322   761E               SUBS     R6,R6,#+1
   \   00000324   02E0               B        ??SetupTime_Event_38
   6773                    case 4  : dzien_tmp=31; mies_tmp--;  break;
   6774                    case 5  : dzien_tmp=30; mies_tmp--;  break;
   \                     ??SetupTime_Event_44:
   \   00000326   1E20               MOVS     R0,#+30
   \   00000328   0090               STR      R0,[SP, #+0]
   \   0000032A   761E               SUBS     R6,R6,#+1
   6775                    case 6  : dzien_tmp=31; mies_tmp--;  break;
   6776                    case 7  : dzien_tmp=30; mies_tmp--;  break;
   6777                    case 8  : dzien_tmp=31; mies_tmp--;  break;
   6778                    case 9  : dzien_tmp=31; mies_tmp--;  break;
   6779                    case 10 : dzien_tmp=30; mies_tmp--;  break;
   6780                    case 11 : dzien_tmp=31; mies_tmp--;  break;
   6781                    case 12 : dzien_tmp=30; mies_tmp--;  break;
   6782                  } 
   6783                   
   6784                  if (mies_tmp<0)  {mies_tmp=12; rok_tmp--;}
   \                     ??SetupTime_Event_38:
   \   0000032C   002E               CMP      R6,#+0
   \   0000032E   01D5               BPL      ??SetupTime_Event_45
   \   00000330   0C26               MOVS     R6,#+12
   \   00000332   7F1E               SUBS     R7,R7,#+1
   6785                  if (rok_tmp<0) rok_tmp=0;
   \                     ??SetupTime_Event_45:
   \   00000334   002F               CMP      R7,#+0
   \   00000336   00D5               BPL      ??SetupTime_Event_46
   \   00000338   0027               MOVS     R7,#+0
   6786          
   6787          
   6788                  DateTime.Day= dzien_tmp;
   \                     ??SetupTime_Event_46:
   \   0000033A   1148               LDR      R0,??SetupTime_Event_6+0xC  ;; DateTime + 2
   \   0000033C   0099               LDR      R1,[SP, #+0]
   \   0000033E   0170               STRB     R1,[R0, #+0]
   6789                  DateTime.Mounth=mies_tmp;
   \   00000340   1048               LDR      R0,??SetupTime_Event_6+0x10  ;; DateTime + 1
   \   00000342   0670               STRB     R6,[R0, #+0]
   6790                  DateTime.Year=rok_tmp;
   \   00000344   1048               LDR      R0,??SetupTime_Event_6+0x14  ;; DateTime
   \   00000346   0770               STRB     R7,[R0, #+0]
   6791                  DateTime.Hour=godz_tmp;
   \   00000348   1048               LDR      R0,??SetupTime_Event_6+0x18  ;; DateTime + 3
   \   0000034A   0570               STRB     R5,[R0, #+0]
   6792                  DateTime.Minute=mi_tmp;
   \   0000034C   1048               LDR      R0,??SetupTime_Event_6+0x1C  ;; DateTime + 4
   \   0000034E   0470               STRB     R4,[R0, #+0]
   6793                  DateTime.Second=sek_tmp;
   \   00000350   1048               LDR      R0,??SetupTime_Event_6+0x20  ;; DateTime + 5
   \   00000352   0299               LDR      R1,[SP, #+8]
   \   00000354   0170               STRB     R1,[R0, #+0]
   6794                  
   6795                 
   6796                // SetRTC_DateTime();  //Ustawinie: sekundy, minuty,  godziny, dzieñ tyg, dnia, miesi¹ca, roku
   6797          
   6798                 
   6799                 
   6800                 DateTime.DayOfWeek=dzienTygodnia(DateTime.Day,DateTime.Mounth,DateTime.Year ); //(int dzien, int miesiac, int rok) 
   \   00000356   0C48               LDR      R0,??SetupTime_Event_6+0x14  ;; DateTime
   \   00000358   0278               LDRB     R2,[R0, #+0]
   \   0000035A   0A48               LDR      R0,??SetupTime_Event_6+0x10  ;; DateTime + 1
   \   0000035C   0178               LDRB     R1,[R0, #+0]
   \   0000035E   0848               LDR      R0,??SetupTime_Event_6+0xC  ;; DateTime + 2
   \   00000360   0078               LDRB     R0,[R0, #+0]
   \   00000362   ........           BL       dzienTygodnia
   \   00000366   0C49               LDR      R1,??SetupTime_Event_6+0x24  ;; DateTime + 6
   \   00000368   0870               STRB     R0,[R1, #+0]
   6801                   /*
   6802                 if (Button("> ",42,5,18,18)==1) 
   6803                    {
   6804            
   6805                      if (DateTime.DayOfWeek<Sunday) {DateTime.DayOfWeek++;} else {DateTime.DayOfWeek=Monday;}
   6806                      MenuPaint(); 
   6807                    }
   6808              
   6809                    if (Button("< ",3,5,18,18)==1) 
   6810                    {
   6811                      
   6812                        if (DateTime.DayOfWeek>Monday) {DateTime.DayOfWeek--;} else {DateTime.DayOfWeek=Sunday;}
   6813          
   6814                      MenuPaint(); 
   6815                    }
   6816                  */
   6817                // SetRTC_DateTime();  //Ustawinie: sekundy, minuty,  godziny, dzieñ tyg, dnia, miesi¹ca, roku
   6818          
   6819                 }
   6820              }//________________________________________________________________________
   \                     ??SetupTime_Event_7:
   \   0000036A   05B0               ADD      SP,SP,#+20
   \   0000036C   F0BC               POP      {R4-R7}
   \   0000036E   01BC               POP      {R0}
   \   00000370   0047               BX       R0               ;; return
   \   00000372   C046               Nop      
   \                     ??SetupTime_Event_6:
   \   00000374   ........           DC32     TextToChangeLength
   \   00000378   ........           DC32     `?<Constant {30}>`
   \   0000037C   ........           DC32     SetupTimeCarPoz + 1
   \   00000380   ........           DC32     DateTime + 2
   \   00000384   ........           DC32     DateTime + 1
   \   00000388   ........           DC32     DateTime
   \   0000038C   ........           DC32     DateTime + 3
   \   00000390   ........           DC32     DateTime + 4
   \   00000394   ........           DC32     DateTime + 5
   \   00000398   ........           DC32     DateTime + 6
   6821          
   6822          
   6823              
   6824              
   6825              
   6826          //Ustawienia wygaszacza  **************************************************************************************************************
   6827          extern char g_ScreenSever_On;
   6828          extern char g_ScreenSever_Time_On;
   6829          extern char g_ScreenSever_Time_Off;
   6830          //*---------------------------------------------------------------------------- 

   \                                 In section Debug.txt, align 4, keep-with-next
   6831              void ScreenSever_Paint(void)
   6832              {  
   \                     ScreenSever_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   7B4C               LDR      R4,??ScreenSever_Paint_0  ;; g_leng
   \   00000004   7BA5               ADR      R5,??ScreenSever_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2800               MOVS     R0,R5
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0121               MOVS     R1,#+1
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   6C22               MOVS     R2,#+108
   \   0000001E   7648               LDR      R0,??ScreenSever_Paint_0+0x8  ;; 0x654
   \   00000020   2668               LDR      R6,[R4, #+0]
   \   00000022   9627               MOVS     R7,#+150
   \   00000024   3F01               LSLS     R7,R7,#+4        ;; #+2400
   \   00000026   7E43               MULS     R6,R7,R6
   \   00000028   744F               LDR      R7,??ScreenSever_Paint_0+0xC  ;; Speech
   \   0000002A   BE19               ADDS     R6,R7,R6
   \   0000002C   3018               ADDS     R0,R6,R0
   6833                
   6834                 List_Paint(Speech[g_leng].ScreenSever,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   6835                 
   6836                 g_Stop_Program=1;
   \   00000034   7248               LDR      R0,??ScreenSever_Paint_0+0x10  ;; g_Stop_Program
   \   00000036   0121               MOVS     R1,#+1
   \   00000038   0170               STRB     R1,[R0, #+0]
   6837                 
   6838                 //Speech[g_leng].RfChannel
   6839                 Label("On/off",0,6,90,10,33,1,127,0);
   \   0000003A   82B0               SUB      SP,SP,#+8
   \   0000003C   0020               MOVS     R0,#+0
   \   0000003E   0090               STR      R0,[SP, #+0]
   \   00000040   7F21               MOVS     R1,#+127
   \   00000042   0120               MOVS     R0,#+1
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   2121               MOVS     R1,#+33
   \   00000048   0A20               MOVS     R0,#+10
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   5A23               MOVS     R3,#+90
   \   0000004E   0622               MOVS     R2,#+6
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   6C48               LDR      R0,??ScreenSever_Paint_0+0x14  ;; `?<Constant "On/off">`
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
   6840                 if (g_ScreenSever_On==0)
   \   0000005A   6B48               LDR      R0,??ScreenSever_Paint_0+0x18  ;; g_ScreenSever_On
   \   0000005C   0078               LDRB     R0,[R0, #+0]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   0AD1               BNE      ??ScreenSever_Paint_1
   6841                 {
   6842                    Zone(" ",40,86,15,16,1);//(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   1020               MOVS     R0,#+16
   \   00000066   03B4               PUSH     {R0,R1}
   \   00000068   0F23               MOVS     R3,#+15
   \   0000006A   5622               MOVS     R2,#+86
   \   0000006C   2821               MOVS     R1,#+40
   \   0000006E   2800               MOVS     R0,R5
   \   00000070   ........           BL       Zone
   \   00000074   02B0               ADD      SP,SP,#+8
   \   00000076   B8E0               B        ??ScreenSever_Paint_2
   6843                 }else{
   6844                    Zone("X",40,86,15,16,1);//(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \                     ??ScreenSever_Paint_1:
   \   00000078   0121               MOVS     R1,#+1
   \   0000007A   1020               MOVS     R0,#+16
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0F23               MOVS     R3,#+15
   \   00000080   5622               MOVS     R2,#+86
   \   00000082   2821               MOVS     R1,#+40
   \   00000084   61A0               ADR      R0,??ScreenSever_Paint_0+0x1C  ;; 0x58, 0x00, 0x00, 0x00
   \   00000086   ........           BL       Zone
   \   0000008A   02B0               ADD      SP,SP,#+8
   6845                
   6846                 char tmp_char[3];
   6847                 Label(Speech[g_leng].TimeOn,0,5,73,15,33,1,127,0);
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   0020               MOVS     R0,#+0
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   7F21               MOVS     R1,#+127
   \   00000094   0120               MOVS     R0,#+1
   \   00000096   03B4               PUSH     {R0,R1}
   \   00000098   2121               MOVS     R1,#+33
   \   0000009A   0F20               MOVS     R0,#+15
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   4923               MOVS     R3,#+73
   \   000000A0   0522               MOVS     R2,#+5
   \   000000A2   0021               MOVS     R1,#+0
   \   000000A4   5A48               LDR      R0,??ScreenSever_Paint_0+0x20  ;; 0x663
   \   000000A6   2568               LDR      R5,[R4, #+0]
   \   000000A8   9626               MOVS     R6,#+150
   \   000000AA   3601               LSLS     R6,R6,#+4        ;; #+2400
   \   000000AC   7543               MULS     R5,R6,R5
   \   000000AE   534E               LDR      R6,??ScreenSever_Paint_0+0xC  ;; Speech
   \   000000B0   7519               ADDS     R5,R6,R5
   \   000000B2   2818               ADDS     R0,R5,R0
   \   000000B4   ........           BL       Label
   \   000000B8   06B0               ADD      SP,SP,#+24
   6848                 CharToStr(g_ScreenSever_Time_On, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   000000BA   0222               MOVS     R2,#+2
   \   000000BC   01A9               ADD      R1,SP,#+4
   \   000000BE   5548               LDR      R0,??ScreenSever_Paint_0+0x24  ;; g_ScreenSever_Time_On
   \   000000C0   0078               LDRB     R0,[R0, #+0]
   \   000000C2   ........           BL       CharToStr
   6849                 Label(tmp_char,1,29,54,2,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   0020               MOVS     R0,#+0
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   7F21               MOVS     R1,#+127
   \   000000CE   0120               MOVS     R0,#+1
   \   000000D0   03B4               PUSH     {R0,R1}
   \   000000D2   0A21               MOVS     R1,#+10
   \   000000D4   0220               MOVS     R0,#+2
   \   000000D6   03B4               PUSH     {R0,R1}
   \   000000D8   3623               MOVS     R3,#+54
   \   000000DA   1D22               MOVS     R2,#+29
   \   000000DC   0121               MOVS     R1,#+1
   \   000000DE   07A8               ADD      R0,SP,#+28
   \   000000E0   ........           BL       Label
   \   000000E4   06B0               ADD      SP,SP,#+24
   \   000000E6   82B0               SUB      SP,SP,#+8
   \   000000E8   0020               MOVS     R0,#+0
   \   000000EA   0090               STR      R0,[SP, #+0]
   \   000000EC   7F21               MOVS     R1,#+127
   \   000000EE   0120               MOVS     R0,#+1
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   0A21               MOVS     R1,#+10
   \   000000F4   0320               MOVS     R0,#+3
   \   000000F6   03B4               PUSH     {R0,R1}
   \   000000F8   3623               MOVS     R3,#+54
   \   000000FA   1E22               MOVS     R2,#+30
   \   000000FC   0021               MOVS     R1,#+0
   \   000000FE   46A0               ADR      R0,??ScreenSever_Paint_0+0x28  ;; ":00"
   6850                 Label(":00",0,30,54,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000100   ........           BL       Label
   \   00000104   06B0               ADD      SP,SP,#+24
   6851                          
   6852                 
   6853                 char LabelButt[2];
   6854                 LabelButt[1]=0;
   \   00000106   6D46               MOV      R5,SP
   \   00000108   0020               MOVS     R0,#+0
   \   0000010A   6870               STRB     R0,[R5, #+1]
   6855                 LabelButt[0]=30;
   \   0000010C   1E26               MOVS     R6,#+30
   \   0000010E   2E70               STRB     R6,[R5, #+0]
   6856                 Button(LabelButt,44,47,17,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000110   82B0               SUB      SP,SP,#+8
   \   00000112   1920               MOVS     R0,#+25
   \   00000114   0090               STR      R0,[SP, #+0]
   \   00000116   1123               MOVS     R3,#+17
   \   00000118   2F22               MOVS     R2,#+47
   \   0000011A   2C21               MOVS     R1,#+44
   \   0000011C   02A8               ADD      R0,SP,#+8
   \   0000011E   ........           BL       Button
   \   00000122   02B0               ADD      SP,SP,#+8
   6857                 LabelButt[0]=31;
   \   00000124   1F27               MOVS     R7,#+31
   \   00000126   2F70               STRB     R7,[R5, #+0]
   6858                 Button(LabelButt,2,47,17,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   1920               MOVS     R0,#+25
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   1123               MOVS     R3,#+17
   \   00000130   2F22               MOVS     R2,#+47
   \   00000132   0221               MOVS     R1,#+2
   \   00000134   02A8               ADD      R0,SP,#+8
   \   00000136   ........           BL       Button
   \   0000013A   02B0               ADD      SP,SP,#+8
   6859                 
   6860                 Label(Speech[g_leng].TimeOff,0,5,34,15,33,1,127,0);
   \   0000013C   82B0               SUB      SP,SP,#+8
   \   0000013E   0020               MOVS     R0,#+0
   \   00000140   0090               STR      R0,[SP, #+0]
   \   00000142   7F21               MOVS     R1,#+127
   \   00000144   0120               MOVS     R0,#+1
   \   00000146   03B4               PUSH     {R0,R1}
   \   00000148   2121               MOVS     R1,#+33
   \   0000014A   0F20               MOVS     R0,#+15
   \   0000014C   03B4               PUSH     {R0,R1}
   \   0000014E   2223               MOVS     R3,#+34
   \   00000150   0522               MOVS     R2,#+5
   \   00000152   0021               MOVS     R1,#+0
   \   00000154   8C46               MOV      R12,R1
   \   00000156   3149               LDR      R1,??ScreenSever_Paint_0+0x2C  ;; 0x672
   \   00000158   2068               LDR      R0,[R4, #+0]
   \   0000015A   9624               MOVS     R4,#+150
   \   0000015C   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   0000015E   6043               MULS     R0,R4,R0
   \   00000160   264C               LDR      R4,??ScreenSever_Paint_0+0xC  ;; Speech
   \   00000162   2018               ADDS     R0,R4,R0
   \   00000164   4018               ADDS     R0,R0,R1
   \   00000166   6146               MOV      R1,R12
   \   00000168   ........           BL       Label
   \   0000016C   06B0               ADD      SP,SP,#+24
   6861                 CharToStr(g_ScreenSever_Time_Off, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   0000016E   0222               MOVS     R2,#+2
   \   00000170   01A9               ADD      R1,SP,#+4
   \   00000172   2B48               LDR      R0,??ScreenSever_Paint_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000174   0078               LDRB     R0,[R0, #+0]
   \   00000176   ........           BL       CharToStr
   6862                 Label(tmp_char,1,29,16,2,18,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000017A   82B0               SUB      SP,SP,#+8
   \   0000017C   0020               MOVS     R0,#+0
   \   0000017E   0090               STR      R0,[SP, #+0]
   \   00000180   7F21               MOVS     R1,#+127
   \   00000182   0120               MOVS     R0,#+1
   \   00000184   03B4               PUSH     {R0,R1}
   \   00000186   1221               MOVS     R1,#+18
   \   00000188   0220               MOVS     R0,#+2
   \   0000018A   03B4               PUSH     {R0,R1}
   \   0000018C   1023               MOVS     R3,#+16
   \   0000018E   1D22               MOVS     R2,#+29
   \   00000190   0121               MOVS     R1,#+1
   \   00000192   07A8               ADD      R0,SP,#+28
   \   00000194   ........           BL       Label
   \   00000198   06B0               ADD      SP,SP,#+24
   6863                 Label(":00",0,30,16,3,18,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000019A   82B0               SUB      SP,SP,#+8
   \   0000019C   0020               MOVS     R0,#+0
   \   0000019E   0090               STR      R0,[SP, #+0]
   \   000001A0   7F21               MOVS     R1,#+127
   \   000001A2   0120               MOVS     R0,#+1
   \   000001A4   03B4               PUSH     {R0,R1}
   \   000001A6   1221               MOVS     R1,#+18
   \   000001A8   0320               MOVS     R0,#+3
   \   000001AA   03B4               PUSH     {R0,R1}
   \   000001AC   1023               MOVS     R3,#+16
   \   000001AE   3200               MOVS     R2,R6
   \   000001B0   0021               MOVS     R1,#+0
   \   000001B2   19A0               ADR      R0,??ScreenSever_Paint_0+0x28  ;; ":00"
   \   000001B4   ........           BL       Label
   \   000001B8   06B0               ADD      SP,SP,#+24
   6864                                     
   6865               
   6866                 LabelButt[1]=0;
   \   000001BA   0020               MOVS     R0,#+0
   \   000001BC   6870               STRB     R0,[R5, #+1]
   6867                 LabelButt[0]=30;
   \   000001BE   2E70               STRB     R6,[R5, #+0]
   6868                 Button(LabelButt,44,8,17,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   1920               MOVS     R0,#+25
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   1123               MOVS     R3,#+17
   \   000001C8   0822               MOVS     R2,#+8
   \   000001CA   2C21               MOVS     R1,#+44
   \   000001CC   02A8               ADD      R0,SP,#+8
   \   000001CE   ........           BL       Button
   \   000001D2   02B0               ADD      SP,SP,#+8
   6869                 LabelButt[0]=31;
   \   000001D4   2F70               STRB     R7,[R5, #+0]
   6870                 Button(LabelButt,2,8,17,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000001D6   82B0               SUB      SP,SP,#+8
   \   000001D8   1920               MOVS     R0,#+25
   \   000001DA   0090               STR      R0,[SP, #+0]
   \   000001DC   1123               MOVS     R3,#+17
   \   000001DE   0822               MOVS     R2,#+8
   \   000001E0   0221               MOVS     R1,#+2
   \   000001E2   02A8               ADD      R0,SP,#+8
   \   000001E4   ........           BL       Button
   \   000001E8   02B0               ADD      SP,SP,#+8
   6871                 }
   6872          
   6873                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   6874              }//________________________________________________________________________
   \                     ??ScreenSever_Paint_2:
   \   000001EA   FEBC               POP      {R1-R7}
   \   000001EC   01BC               POP      {R0}
   \   000001EE   0047               BX       R0               ;; return
   \                     ??ScreenSever_Paint_0:
   \   000001F0   ........           DC32     g_leng
   \   000001F4   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001F8   54060000           DC32     0x654
   \   000001FC   ........           DC32     Speech
   \   00000200   ........           DC32     g_Stop_Program
   \   00000204   ........           DC32     `?<Constant "On/off">`
   \   00000208   ........           DC32     g_ScreenSever_On
   \   0000020C   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   00000210   63060000           DC32     0x663
   \   00000214   ........           DC32     g_ScreenSever_Time_On
   \   00000218   3A303000           DC8      ":00"
   \   0000021C   72060000           DC32     0x672
   \   00000220   ........           DC32     g_ScreenSever_Time_Off
   6875          
   6876          
   6877              
   6878              //*-----------------------------------------------------------------------------
   6879          

   \                                 In section Debug.txt, align 4, keep-with-next
   6880              void ScreenSever_Event(void)
   6881              {
   \                     ScreenSever_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   6882                char RepaintTMP=0;
   \   00000002   0025               MOVS     R5,#+0
   \   00000004   2E00               MOVS     R6,R5
   6883                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   6884                if (ans<0)  
   \   00000006   2900               MOVS     R1,R5
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0120               MOVS     R0,#+1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   5848               LDR      R0,??ScreenSever_Event_0  ;; Y_down
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   5848               LDR      R0,??ScreenSever_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   5848               LDR      R0,??ScreenSever_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   5848               LDR      R0,??ScreenSever_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   21D5               BPL      ??ScreenSever_Event_1
   6885                 {
   6886                    //zapis do flash
   6887                        unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0400               MOVS     R4,R0
   6888                        __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
   6889                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_On)),0, &g_ScreenSever_On,1);
   6890                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_On)),0, &g_ScreenSever_Time_On,1);
   6891                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_Off)),0, &g_ScreenSever_Time_Off,1);
   6892                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_On)), (char*) (&(g_ScreenSever_On)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   0122               MOVS     R2,#+1
   \   00000038   5249               LDR      R1,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   0000003A   5348               LDR      R0,??ScreenSever_Event_0+0x14  ;; 0x13d7ea
   \   0000003C   ........           BL       FlashWrite
   6893                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_On)), (char*) (&(g_ScreenSever_Time_On)), 1);
   \   00000040   524E               LDR      R6,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   00000042   0122               MOVS     R2,#+1
   \   00000044   3100               MOVS     R1,R6
   \   00000046   5248               LDR      R0,??ScreenSever_Event_0+0x1C  ;; 0x13d7eb
   \   00000048   ........           BL       FlashWrite
   6894                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_Off)), (char*) (&(g_ScreenSever_Time_On)), 1);
   \   0000004C   0122               MOVS     R2,#+1
   \   0000004E   3100               MOVS     R1,R6
   \   00000050   5048               LDR      R0,??ScreenSever_Event_0+0x20  ;; 0x13d7ec
   \   00000052   ........           BL       FlashWrite
   6895                        __set_interrupt_state(Save);
   \   00000056   2000               MOVS     R0,R4
   \   00000058   ........           BL       __iar_set_interrupt_state
   6896                        //koniec zapisu do flash
   6897                   
   6898                    g_Stop_Program=0;
   \   0000005C   4E48               LDR      R0,??ScreenSever_Event_0+0x24  ;; g_Stop_Program
   \   0000005E   0570               STRB     R5,[R0, #+0]
   6899                    MenuLevel=(MenuLevel/10);
   \   00000060   4E4C               LDR      R4,??ScreenSever_Event_0+0x28  ;; TextToChangeLength
   \   00000062   A06C               LDR      R0,[R4, #+72]
   \   00000064   0A21               MOVS     R1,#+10
   \   00000066   ........           BL       __aeabi_idivmod
   \   0000006A   A064               STR      R0,[R4, #+72]
   6900                    RepaintTMP=1;
   \   0000006C   0126               MOVS     R6,#+1
   \   0000006E   7AE0               B        ??ScreenSever_Event_2
   6901                 }else{
   6902                
   6903                   if (g_ScreenSever_On==1)
   \                     ??ScreenSever_Event_1:
   \   00000070   444C               LDR      R4,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   00000072   2078               LDRB     R0,[R4, #+0]
   \   00000074   0128               CMP      R0,#+1
   \   00000076   63D1               BNE      ??ScreenSever_Event_3
   6904                   {
   6905                    if (Zone("X",40,86,15,16,1)==1)  //(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \   00000078   0121               MOVS     R1,#+1
   \   0000007A   1020               MOVS     R0,#+16
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0F23               MOVS     R3,#+15
   \   00000080   5622               MOVS     R2,#+86
   \   00000082   2821               MOVS     R1,#+40
   \   00000084   46A0               ADR      R0,??ScreenSever_Event_0+0x2C  ;; 0x58, 0x00, 0x00, 0x00
   \   00000086   ........           BL       Zone
   \   0000008A   02B0               ADD      SP,SP,#+8
   \   0000008C   0128               CMP      R0,#+1
   \   0000008E   02D1               BNE      ??ScreenSever_Event_4
   6906                    {
   6907                      g_ScreenSever_On=0;
   \   00000090   2800               MOVS     R0,R5
   \   00000092   2070               STRB     R0,[R4, #+0]
   6908                      RepaintTMP=1;
   \   00000094   0126               MOVS     R6,#+1
   6909                    }
   6910                    
   6911                    char LabelButt[2];
   6912                      LabelButt[1]=0;
   \                     ??ScreenSever_Event_4:
   \   00000096   6C46               MOV      R4,SP
   \   00000098   6570               STRB     R5,[R4, #+1]
   6913                      LabelButt[0]=30;
   \   0000009A   1E25               MOVS     R5,#+30
   \   0000009C   2570               STRB     R5,[R4, #+0]
   6914                      if (Button(LabelButt,44,47,17,25)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   1920               MOVS     R0,#+25
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   1123               MOVS     R3,#+17
   \   000000A6   2F22               MOVS     R2,#+47
   \   000000A8   2C21               MOVS     R1,#+44
   \   000000AA   02A8               ADD      R0,SP,#+8
   \   000000AC   ........           BL       Button
   \   000000B0   02B0               ADD      SP,SP,#+8
   \   000000B2   0128               CMP      R0,#+1
   \   000000B4   06D1               BNE      ??ScreenSever_Event_5
   6915                      {
   6916                        if (g_ScreenSever_Time_On<23) 
   \   000000B6   354E               LDR      R6,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000B8   3078               LDRB     R0,[R6, #+0]
   \   000000BA   1728               CMP      R0,#+23
   \   000000BC   01D2               BCS      ??ScreenSever_Event_6
   6917                        {
   6918                          g_ScreenSever_Time_On++;
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   3070               STRB     R0,[R6, #+0]
   6919                        }
   6920                        RepaintTMP=1;
   \                     ??ScreenSever_Event_6:
   \   000000C2   0126               MOVS     R6,#+1
   6921                      }
   6922                      LabelButt[0]=31;
   \                     ??ScreenSever_Event_5:
   \   000000C4   1F27               MOVS     R7,#+31
   \   000000C6   2770               STRB     R7,[R4, #+0]
   6923                      if (Button(LabelButt,2,47,17,25)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   1920               MOVS     R0,#+25
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   1123               MOVS     R3,#+17
   \   000000D0   2F22               MOVS     R2,#+47
   \   000000D2   0221               MOVS     R1,#+2
   \   000000D4   02A8               ADD      R0,SP,#+8
   \   000000D6   ........           BL       Button
   \   000000DA   02B0               ADD      SP,SP,#+8
   \   000000DC   0128               CMP      R0,#+1
   \   000000DE   06D1               BNE      ??ScreenSever_Event_7
   6924                      {
   6925                         if (g_ScreenSever_Time_On>0) g_ScreenSever_Time_On--;
   \   000000E0   2A4E               LDR      R6,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000E2   3078               LDRB     R0,[R6, #+0]
   \   000000E4   0028               CMP      R0,#+0
   \   000000E6   01D0               BEQ      ??ScreenSever_Event_8
   \   000000E8   401E               SUBS     R0,R0,#+1
   \   000000EA   3070               STRB     R0,[R6, #+0]
   6926                        RepaintTMP=1;
   \                     ??ScreenSever_Event_8:
   \   000000EC   0126               MOVS     R6,#+1
   6927                      }
   6928                      LabelButt[0]=30;
   \                     ??ScreenSever_Event_7:
   \   000000EE   2570               STRB     R5,[R4, #+0]
   6929                      if (Button(LabelButt,44,8,17,25)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   1920               MOVS     R0,#+25
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   1123               MOVS     R3,#+17
   \   000000F8   0822               MOVS     R2,#+8
   \   000000FA   2C21               MOVS     R1,#+44
   \   000000FC   02A8               ADD      R0,SP,#+8
   \   000000FE   ........           BL       Button
   \   00000102   02B0               ADD      SP,SP,#+8
   \   00000104   0128               CMP      R0,#+1
   \   00000106   06D1               BNE      ??ScreenSever_Event_9
   6930                      {
   6931                        if (g_ScreenSever_Time_Off<23) g_ScreenSever_Time_Off++;
   \   00000108   2648               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   0000010A   0178               LDRB     R1,[R0, #+0]
   \   0000010C   1729               CMP      R1,#+23
   \   0000010E   01D2               BCS      ??ScreenSever_Event_10
   \   00000110   491C               ADDS     R1,R1,#+1
   \   00000112   0170               STRB     R1,[R0, #+0]
   6932                        RepaintTMP=1;
   \                     ??ScreenSever_Event_10:
   \   00000114   0126               MOVS     R6,#+1
   6933                      }
   6934                      LabelButt[0]=31;
   \                     ??ScreenSever_Event_9:
   \   00000116   2770               STRB     R7,[R4, #+0]
   6935                      if (Button(LabelButt,2,8,17,25)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   1920               MOVS     R0,#+25
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   1123               MOVS     R3,#+17
   \   00000120   0822               MOVS     R2,#+8
   \   00000122   0221               MOVS     R1,#+2
   \   00000124   02A8               ADD      R0,SP,#+8
   \   00000126   ........           BL       Button
   \   0000012A   02B0               ADD      SP,SP,#+8
   \   0000012C   0128               CMP      R0,#+1
   \   0000012E   1AD1               BNE      ??ScreenSever_Event_2
   6936                      {
   6937                         if (g_ScreenSever_Time_Off>0) 
   \   00000130   1C48               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000132   0178               LDRB     R1,[R0, #+0]
   \   00000134   0029               CMP      R1,#+0
   \   00000136   01D0               BEQ      ??ScreenSever_Event_11
   6938                         {
   6939                           g_ScreenSever_Time_Off--;
   \   00000138   491E               SUBS     R1,R1,#+1
   \   0000013A   0170               STRB     R1,[R0, #+0]
   6940                         }
   6941                        RepaintTMP=1;
   \                     ??ScreenSever_Event_11:
   \   0000013C   0126               MOVS     R6,#+1
   \   0000013E   12E0               B        ??ScreenSever_Event_2
   6942                      }
   6943                   }else{
   6944                     if (Zone(" ",40,86,15,16,1)==1)  //(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \                     ??ScreenSever_Event_3:
   \   00000140   0121               MOVS     R1,#+1
   \   00000142   1020               MOVS     R0,#+16
   \   00000144   03B4               PUSH     {R0,R1}
   \   00000146   0F23               MOVS     R3,#+15
   \   00000148   5622               MOVS     R2,#+86
   \   0000014A   2821               MOVS     R1,#+40
   \   0000014C   16A0               ADR      R0,??ScreenSever_Event_0+0x34  ;; 0x20, 0x00, 0x00, 0x00
   \   0000014E   ........           BL       Zone
   \   00000152   02B0               ADD      SP,SP,#+8
   \   00000154   0128               CMP      R0,#+1
   \   00000156   06D1               BNE      ??ScreenSever_Event_2
   6945                    {
   6946                      g_ScreenSever_On=1;
   \   00000158   0126               MOVS     R6,#+1
   \   0000015A   2070               STRB     R0,[R4, #+0]
   6947                      g_ScreenSever_Time_On=0;
   \   0000015C   0B48               LDR      R0,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   0000015E   2900               MOVS     R1,R5
   \   00000160   0170               STRB     R1,[R0, #+0]
   6948                      g_ScreenSever_Time_Off=0;
   \   00000162   1048               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000164   0570               STRB     R5,[R0, #+0]
   6949                      RepaintTMP=1;
   6950                    }
   6951                   }
   6952                   
   6953                   
   6954                 }
   6955                 
   6956               
   6957                
   6958                 if (RepaintTMP) MenuPaint();  
   \                     ??ScreenSever_Event_2:
   \   00000166   002E               CMP      R6,#+0
   \   00000168   01D0               BEQ      ??ScreenSever_Event_12
   \   0000016A   ........           BL       MenuPaint
   6959                 
   6960               
   6961              }//________________________________________________________________________
   \                     ??ScreenSever_Event_12:
   \   0000016E   F8BC               POP      {R3-R7}
   \   00000170   01BC               POP      {R0}
   \   00000172   0047               BX       R0               ;; return
   \                     ??ScreenSever_Event_0:
   \   00000174   ........           DC32     Y_down
   \   00000178   ........           DC32     X_down
   \   0000017C   ........           DC32     Y_up
   \   00000180   ........           DC32     X_up
   \   00000184   ........           DC32     g_ScreenSever_On
   \   00000188   EAD71300           DC32     0x13d7ea
   \   0000018C   ........           DC32     g_ScreenSever_Time_On
   \   00000190   EBD71300           DC32     0x13d7eb
   \   00000194   ECD71300           DC32     0x13d7ec
   \   00000198   ........           DC32     g_Stop_Program
   \   0000019C   ........           DC32     TextToChangeLength
   \   000001A0   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   000001A4   ........           DC32     g_ScreenSever_Time_Off
   \   000001A8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   6962              
   6963              
   6964              
   6965          //Ustawienia jêzyka******************************************************************************************************************
   6966          
   6967                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6968                void MasterSlave_Paint(void)
   6969                {  
   \                     MasterSlave_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   6970                    //char Y=3;
   6971                    int Y_tmp = 66;   //przesuniêcie w dó³
   6972          
   6973                    List_Paint("Mode",2,15,Y_tmp,7,0,"Master ", "Slave ",0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   164C               LDR      R4,??MasterSlave_Paint_0  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   2100               MOVS     R1,R4
   \   00000010   1C31               ADDS     R1,R1,#+28
   \   00000012   2000               MOVS     R0,R4
   \   00000014   1430               ADDS     R0,R0,#+20
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0720               MOVS     R0,#+7
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   4223               MOVS     R3,#+66
   \   00000020   0F22               MOVS     R2,#+15
   \   00000022   0221               MOVS     R1,#+2
   \   00000024   2000               MOVS     R0,R4
   \   00000026   0C30               ADDS     R0,R0,#+12
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
   6974                
   6975                    
   6976                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000002E   6846               MOV      R0,SP
   \   00000030   0ECC               LDM      R4!,{R1-R3}
   \   00000032   0EC0               STM      R0!,{R1-R3}
   6977                 
   6978                  
   6979                    CopyToCanvasPoint((char *)ekran_tab,45,97-Y_tmp-(15*(SlaveMode)),8,10); 
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0A20               MOVS     R0,#+10
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   0823               MOVS     R3,#+8
   \   0000003C   1F20               MOVS     R0,#+31
   \   0000003E   0849               LDR      R1,??MasterSlave_Paint_0+0x4  ;; SlaveMode
   \   00000040   0978               LDRB     R1,[R1, #+0]
   \   00000042   0F22               MOVS     R2,#+15
   \   00000044   5143               MULS     R1,R2,R1
   \   00000046   421A               SUBS     R2,R0,R1
   \   00000048   1206               LSLS     R2,R2,#+24
   \   0000004A   120E               LSRS     R2,R2,#+24
   \   0000004C   2D21               MOVS     R1,#+45
   \   0000004E   02A8               ADD      R0,SP,#+8
   \   00000050   ........           BL       CopyToCanvasPoint
   \   00000054   02B0               ADD      SP,SP,#+8
   6980                    
   6981                }//________________________________________________________________________
   \   00000056   1FBC               POP      {R0-R4}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??MasterSlave_Paint_0:
   \   0000005C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`
   \   00000060   ........           DC32     SlaveMode
   6982          
   6983          
   6984          
   6985                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6986                void MasterSlave_Event(void)
   6987                {
   \                     MasterSlave_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   6988                  int ans;
   6989           
   6990                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 7,66); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   584C               LDR      R4,??MasterSlave_Event_0  ;; X_up
   \   00000004   584D               LDR      R5,??MasterSlave_Event_0+0x4  ;; Y_up
   \   00000006   4221               MOVS     R1,#+66
   \   00000008   0720               MOVS     R0,#+7
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0220               MOVS     R0,#+2
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   5648               LDR      R0,??MasterSlave_Event_0+0x8  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   5548               LDR      R0,??MasterSlave_Event_0+0xC  ;; X_down
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   295E               LDRSH    R1,[R5, R0]
   \   00000020   205E               LDRSH    R0,[R4, R0]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   6991            
   6992                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   00D1               BNE      .+4
   \   0000002C   8FE0               B        ??MasterSlave_Event_1
   6993                    {
   6994                      if ((ans>0) && (ans<3))
   \   0000002E   0128               CMP      R0,#+1
   \   00000030   00DA               BGE      .+4
   \   00000032   93E0               B        ??MasterSlave_Event_2
   \   00000034   0328               CMP      R0,#+3
   \   00000036   00DB               BLT      .+4
   \   00000038   90E0               B        ??MasterSlave_Event_2
   6995                      {
   6996                        SlaveMode=ans-1;
   \   0000003A   4E4C               LDR      R4,??MasterSlave_Event_0+0x10  ;; SlaveMode
   \   0000003C   401E               SUBS     R0,R0,#+1
   \   0000003E   2070               STRB     R0,[R4, #+0]
   6997                        
   6998                        //zapis do flash
   6999                        unsigned int Save = __get_interrupt_state();  
   \   00000040   ........           BL       __iar_get_interrupt_state
   \   00000044   0500               MOVS     R5,R0
   7000                        __disable_interrupt();
   \   00000046   ........           BL       __iar_disable_interrupt
   7001                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)),0, &SlaveMode,1);
   7002                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)), (char*) (&(SlaveMode)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000004A   0122               MOVS     R2,#+1
   \   0000004C   2100               MOVS     R1,R4
   \   0000004E   4A48               LDR      R0,??MasterSlave_Event_0+0x14  ;; 0x13d7e8
   \   00000050   ........           BL       FlashWrite
   7003                        __set_interrupt_state(Save);
   \   00000054   2800               MOVS     R0,R5
   \   00000056   ........           BL       __iar_set_interrupt_state
   7004                        //koniec zapisu do flash
   7005                        
   7006                        if (!SlaveMode) //je¿eli master 
   \   0000005A   2078               LDRB     R0,[R4, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   4748               LDR      R0,??MasterSlave_Event_0+0x18  ;; RF_Status + 12
   \   00000060   10D1               BNE      ??MasterSlave_Event_3
   7007                        {
   7008                          RF_Status.MasterMode=1;
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   0170               STRB     R1,[R0, #+0]
   7009                          _RF_EnableRX(); 
                                 ^
Warning[Pe223]: function "_RF_EnableRX" declared implicitly
   \   00000066   ........           BL       _RF_EnableRX
   7010                         for (char i=0; i<NumberNeurons; i++) TransQuality.Mensur[i]=0; 
   \   0000006A   0020               MOVS     R0,#+0
   \   0000006C   0100               MOVS     R1,R0
   \   0000006E   444B               LDR      R3,??MasterSlave_Event_0+0x1C  ;; TransQuality
   \                     ??MasterSlave_Event_4:
   \   00000070   0A00               MOVS     R2,R1
   \   00000072   232A               CMP      R2,#+35
   \   00000074   08D2               BCS      ??MasterSlave_Event_5
   \   00000076   9200               LSLS     R2,R2,#+2
   \   00000078   9A18               ADDS     R2,R3,R2
   \   0000007A   D064               STR      R0,[R2, #+76]
   \   0000007C   491C               ADDS     R1,R1,#+1
   \   0000007E   0906               LSLS     R1,R1,#+24
   \   00000080   090E               LSRS     R1,R1,#+24
   \   00000082   F5E7               B        ??MasterSlave_Event_4
   7011                        }else{
   7012                          RF_Status.MasterMode=0; 
   \                     ??MasterSlave_Event_3:
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   0170               STRB     R1,[R0, #+0]
   7013                        }
   7014                           AT91PS_MEM pAT91C_IFLASH_MEM=AT91C_IFLASH_MEM;
   7015                          RF_Status.Ch=pAT91C_IFLASH_MEM->Config.RF_channel;
   \                     ??MasterSlave_Event_5:
   \   00000088   3E48               LDR      R0,??MasterSlave_Event_0+0x20  ;; 0x13d7e6
   \   0000008A   0078               LDRB     R0,[R0, #+0]
   \   0000008C   3E4C               LDR      R4,??MasterSlave_Event_0+0x24  ;; RF_Status
   \   0000008E   6073               STRB     R0,[R4, #+13]
   7016                          SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
                                 ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000090   A026               MOVS     R6,#+160
   \   00000092   3602               LSLS     R6,R6,#+8        ;; #+40960
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   0D00               MOVS     R5,R1
   \   00000098   ........           BL       __aeabi_ui2d
   \   0000009C   0200               MOVS     R2,R0
   \   0000009E   0B00               MOVS     R3,R1
   \   000000A0   3A48               LDR      R0,??MasterSlave_Event_0+0x28  ;; 0x33333333
   \   000000A2   3B49               LDR      R1,??MasterSlave_Event_0+0x2C  ;; 0x3fd33333
   \   000000A4   ........           BL       __aeabi_dmul
   \   000000A8   0200               MOVS     R2,R0
   \   000000AA   0B00               MOVS     R3,R1
   \   000000AC   3948               LDR      R0,??MasterSlave_Event_0+0x30  ;; 0x5c28f5c3
   \   000000AE   3A49               LDR      R1,??MasterSlave_Event_0+0x34  ;; 0x408ae28f
   \   000000B0   ........           BL       __aeabi_dadd
   \   000000B4   0200               MOVS     R2,R0
   \   000000B6   0B00               MOVS     R3,R1
   \   000000B8   0020               MOVS     R0,#+0
   \   000000BA   3849               LDR      R1,??MasterSlave_Event_0+0x38  ;; 0x40690000
   \   000000BC   ........           BL       __aeabi_dmul
   \   000000C0   0200               MOVS     R2,R0
   \   000000C2   0B00               MOVS     R3,R1
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   3649               LDR      R1,??MasterSlave_Event_0+0x3C  ;; 0xc104ff00
   \   000000C8   ........           BL       __aeabi_dadd
   \   000000CC   ........           BL       __aeabi_d2iz
   \   000000D0   0004               LSLS     R0,R0,#+16
   \   000000D2   0014               ASRS     R0,R0,#+16
   \   000000D4   3043               ORRS     R0,R0,R6
   \   000000D6   2900               MOVS     R1,R5
   \   000000D8   ........           BL       SPI_SendWord
   \   000000DC   24E0               B        ??MasterSlave_Event_6
   7017                          while (RF_CheckChannel())
   7018                          {
   7019                            if (RF_Status.Ch<RF_ChannelQuanti-1) {RF_Status.Ch++;} else {RF_Status.Ch=1;}
   \                     ??MasterSlave_Event_7:
   \   000000DE   0120               MOVS     R0,#+1
   \   000000E0   6073               STRB     R0,[R4, #+13]
   7020                            SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
   \                     ??MasterSlave_Event_8:
   \   000000E2   607B               LDRB     R0,[R4, #+13]
   \   000000E4   ........           BL       __aeabi_ui2d
   \   000000E8   0200               MOVS     R2,R0
   \   000000EA   0B00               MOVS     R3,R1
   \   000000EC   2748               LDR      R0,??MasterSlave_Event_0+0x28  ;; 0x33333333
   \   000000EE   2849               LDR      R1,??MasterSlave_Event_0+0x2C  ;; 0x3fd33333
   \   000000F0   ........           BL       __aeabi_dmul
   \   000000F4   0200               MOVS     R2,R0
   \   000000F6   0B00               MOVS     R3,R1
   \   000000F8   2648               LDR      R0,??MasterSlave_Event_0+0x30  ;; 0x5c28f5c3
   \   000000FA   2749               LDR      R1,??MasterSlave_Event_0+0x34  ;; 0x408ae28f
   \   000000FC   ........           BL       __aeabi_dadd
   \   00000100   0200               MOVS     R2,R0
   \   00000102   0B00               MOVS     R3,R1
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   2549               LDR      R1,??MasterSlave_Event_0+0x38  ;; 0x40690000
   \   00000108   ........           BL       __aeabi_dmul
   \   0000010C   0200               MOVS     R2,R0
   \   0000010E   0B00               MOVS     R3,R1
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   2349               LDR      R1,??MasterSlave_Event_0+0x3C  ;; 0xc104ff00
   \   00000114   ........           BL       __aeabi_dadd
   \   00000118   ........           BL       __aeabi_d2iz
   \   0000011C   0004               LSLS     R0,R0,#+16
   \   0000011E   0014               ASRS     R0,R0,#+16
   \   00000120   3043               ORRS     R0,R0,R6
   \   00000122   2900               MOVS     R1,R5
   \   00000124   ........           BL       SPI_SendWord
   \                     ??MasterSlave_Event_6:
   \   00000128   ........           BL       RF_CheckChannel
   \   0000012C   0028               CMP      R0,#+0
   \   0000012E   05D0               BEQ      ??MasterSlave_Event_9
   \   00000130   607B               LDRB     R0,[R4, #+13]
   \   00000132   2728               CMP      R0,#+39
   \   00000134   D3D2               BCS      ??MasterSlave_Event_7
   \   00000136   401C               ADDS     R0,R0,#+1
   \   00000138   6073               STRB     R0,[R4, #+13]
   \   0000013A   D2E7               B        ??MasterSlave_Event_8
   7021                          } 
   7022                        
   7023                        MenuLevel=(MenuLevel/10);
   \                     ??MasterSlave_Event_9:
   \   0000013C   194C               LDR      R4,??MasterSlave_Event_0+0x40  ;; TextToChangeLength
   \   0000013E   A06C               LDR      R0,[R4, #+72]
   \   00000140   0A21               MOVS     R1,#+10
   \   00000142   ........           BL       __aeabi_idivmod
   \   00000146   A064               STR      R0,[R4, #+72]
   7024                        MenuPaint();
   \   00000148   ........           BL       MenuPaint
   \   0000014C   06E0               B        ??MasterSlave_Event_2
   7025                      }
   7026                    } 
   7027                  else
   7028                    {
   7029                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??MasterSlave_Event_1:
   \   0000014E   205E               LDRSH    R0,[R4, R0]
   \   00000150   0128               CMP      R0,#+1
   \   00000152   03DB               BLT      ??MasterSlave_Event_2
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   285E               LDRSH    R0,[R5, R0]
   \   00000158   0128               CMP      R0,#+1
   \   0000015A   EFDA               BGE      ??MasterSlave_Event_9
   7030                      {
   7031                        MenuLevel=(MenuLevel/10);
   7032                        MenuPaint();
   7033                      }
   7034                    }
   7035                }//_______________________________________________________________________
   \                     ??MasterSlave_Event_2:
   \   0000015C   70BC               POP      {R4-R6}
   \   0000015E   01BC               POP      {R0}
   \   00000160   0047               BX       R0               ;; return
   \   00000162   C046               Nop      
   \                     ??MasterSlave_Event_0:
   \   00000164   ........           DC32     X_up
   \   00000168   ........           DC32     Y_up
   \   0000016C   ........           DC32     Y_down
   \   00000170   ........           DC32     X_down
   \   00000174   ........           DC32     SlaveMode
   \   00000178   E8D71300           DC32     0x13d7e8
   \   0000017C   ........           DC32     RF_Status + 12
   \   00000180   ........           DC32     TransQuality
   \   00000184   E6D71300           DC32     0x13d7e6
   \   00000188   ........           DC32     RF_Status
   \   0000018C   33333333           DC32     0x33333333
   \   00000190   3333D33F           DC32     0x3fd33333
   \   00000194   C3F5285C           DC32     0x5c28f5c3
   \   00000198   8FE28A40           DC32     0x408ae28f
   \   0000019C   00006940           DC32     0x40690000
   \   000001A0   00FF04C1           DC32     0xc104ff00
   \   000001A4   ........           DC32     TextToChangeLength

   \                                 In section .bss, align 1
   \                     RF_Channel_nr_tmp:
   \   00000000                      DS8 1
   7036          
   7037              
   7038              
   7039              
   7040           
   7041          //Ustawienia kana³u transmisji WiFi  **************************************************************************************************************
   7042          
   7043              //*----------------------------------------------------------------------------
   7044              char RF_ChOkBlock=0;
   \                     RF_ChOkBlock:
   \   00000001                      DS8 1

   \                                 In section .bss, align 4
   \                     InsertOldPass1:
   \   00000000                      DS8 12
   \                     InsertNewPass1:
   \   0000000C                      DS8 12

   \                                 In section .bss, align 4
   \                     SetTouchStep:
   \   00000000                      DS8 1
   \   00000001                      DS8 3
   \                     Diff_X:
   \   00000004                      DS8 8
   \                     Diff_Y:
   \   0000000C                      DS8 8
   \                     Xo1:
   \   00000014                      DS8 4
   \                     Xo2:
   \   00000018                      DS8 4
   \                     Yo1:
   \   0000001C                      DS8 4
   \                     Yo2:
   \   00000020                      DS8 4

   \                                 In section Debug.txt, align 4, keep-with-next
   7045              void RF_Channel_Paint(void)
   7046              {  
   \                     RF_Channel_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   7047                 List_Paint(Speech[g_leng].RfChannel,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   9624               MOVS     R4,#+150
   \   00000004   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000006   5C4D               LDR      R5,??RF_Channel_Paint_0  ;; g_leng
   \   00000008   5C4E               LDR      R6,??RF_Channel_Paint_0+0x4  ;; Speech
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   5AA0               ADR      R0,??RF_Channel_Paint_0+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0121               MOVS     R1,#+1
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0300               MOVS     R3,R0
   \   00000020   6C22               MOVS     R2,#+108
   \   00000022   5848               LDR      R0,??RF_Channel_Paint_0+0xC  ;; 0x636
   \   00000024   2F68               LDR      R7,[R5, #+0]
   \   00000026   6743               MULS     R7,R4,R7
   \   00000028   F719               ADDS     R7,R6,R7
   \   0000002A   3818               ADDS     R0,R7,R0
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   7048                if (!SlaveMode)  //je¿eli tryb master
   \   00000032   5548               LDR      R0,??RF_Channel_Paint_0+0x10  ;; SlaveMode
   \   00000034   0078               LDRB     R0,[R0, #+0]
   \   00000036   0028               CMP      R0,#+0
   \   00000038   73D1               BNE      ??RF_Channel_Paint_1
   7049                {
   7050                 _RF_EnableRX();
                        ^
Warning[Pe223]: function "_RF_EnableRX" declared implicitly
   \   0000003A   ........           BL       _RF_EnableRX
   7051                 g_Stop_Program=1;
   \   0000003E   5348               LDR      R0,??RF_Channel_Paint_0+0x14  ;; g_Stop_Program
   \   00000040   0121               MOVS     R1,#+1
   \   00000042   0170               STRB     R1,[R0, #+0]
   7052                 
   7053                 //Speech[g_leng].RfChannel
   7054                 Label(Speech[g_leng].RfChannel,0,3,90,10,33,1,127,0);
   \   00000044   82B0               SUB      SP,SP,#+8
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   0090               STR      R0,[SP, #+0]
   \   0000004A   7F21               MOVS     R1,#+127
   \   0000004C   0120               MOVS     R0,#+1
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   2121               MOVS     R1,#+33
   \   00000052   0A20               MOVS     R0,#+10
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   5A23               MOVS     R3,#+90
   \   00000058   0322               MOVS     R2,#+3
   \   0000005A   0021               MOVS     R1,#+0
   \   0000005C   4948               LDR      R0,??RF_Channel_Paint_0+0xC  ;; 0x636
   \   0000005E   2F68               LDR      R7,[R5, #+0]
   \   00000060   6743               MULS     R7,R4,R7
   \   00000062   F719               ADDS     R7,R6,R7
   \   00000064   3818               ADDS     R0,R7,R0
   \   00000066   ........           BL       Label
   \   0000006A   06B0               ADD      SP,SP,#+24
   \   0000006C   0222               MOVS     R2,#+2
   \   0000006E   01A9               ADD      R1,SP,#+4
   \   00000070   4748               LDR      R0,??RF_Channel_Paint_0+0x18  ;; RF_Channel_nr_tmp
   \   00000072   0078               LDRB     R0,[R0, #+0]
   7055            
   7056                 char tmp_char[3];
   7057                 CharToStr(RF_Channel_nr_tmp, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000074   ........           BL       CharToStr
   7058                 
   7059                 Label(tmp_char,1,30,77,2,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   2121               MOVS     R1,#+33
   \   00000086   0220               MOVS     R0,#+2
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   4D23               MOVS     R3,#+77
   \   0000008C   1E22               MOVS     R2,#+30
   \   0000008E   0121               MOVS     R1,#+1
   \   00000090   07A8               ADD      R0,SP,#+28
   \   00000092   ........           BL       Label
   \   00000096   06B0               ADD      SP,SP,#+24
   7060                    
   7061                 
   7062                 char LabelButt[2];
   7063                 LabelButt[1]=0;
   \   00000098   6F46               MOV      R7,SP
   \   0000009A   0020               MOVS     R0,#+0
   \   0000009C   7870               STRB     R0,[R7, #+1]
   7064                 LabelButt[0]=30;
   \   0000009E   1E20               MOVS     R0,#+30
   \   000000A0   3870               STRB     R0,[R7, #+0]
   7065                 Button(LabelButt,33,48,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000A2   82B0               SUB      SP,SP,#+8
   \   000000A4   1920               MOVS     R0,#+25
   \   000000A6   0090               STR      R0,[SP, #+0]
   \   000000A8   1323               MOVS     R3,#+19
   \   000000AA   3022               MOVS     R2,#+48
   \   000000AC   2121               MOVS     R1,#+33
   \   000000AE   02A8               ADD      R0,SP,#+8
   \   000000B0   ........           BL       Button
   \   000000B4   02B0               ADD      SP,SP,#+8
   7066                 LabelButt[0]=31;
   \   000000B6   1F20               MOVS     R0,#+31
   \   000000B8   3870               STRB     R0,[R7, #+0]
   7067                 Button(LabelButt,12,48,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000BA   82B0               SUB      SP,SP,#+8
   \   000000BC   1920               MOVS     R0,#+25
   \   000000BE   0090               STR      R0,[SP, #+0]
   \   000000C0   1323               MOVS     R3,#+19
   \   000000C2   3022               MOVS     R2,#+48
   \   000000C4   0C21               MOVS     R1,#+12
   \   000000C6   02A8               ADD      R0,SP,#+8
   \   000000C8   ........           BL       Button
   \   000000CC   02B0               ADD      SP,SP,#+8
   7068                 
   7069                 if ((RF_ChOkBlock) && (RF_Status.Ch!=RF_Channel_nr_tmp))
   \   000000CE   3148               LDR      R0,??RF_Channel_Paint_0+0x1C  ;; RF_Channel_nr_tmp + 1
   \   000000D0   0078               LDRB     R0,[R0, #+0]
   \   000000D2   0028               CMP      R0,#+0
   \   000000D4   1AD0               BEQ      ??RF_Channel_Paint_2
   \   000000D6   3048               LDR      R0,??RF_Channel_Paint_0+0x20  ;; RF_Status + 13
   \   000000D8   0078               LDRB     R0,[R0, #+0]
   \   000000DA   2D49               LDR      R1,??RF_Channel_Paint_0+0x18  ;; RF_Channel_nr_tmp
   \   000000DC   0978               LDRB     R1,[R1, #+0]
   \   000000DE   8842               CMP      R0,R1
   \   000000E0   14D0               BEQ      ??RF_Channel_Paint_2
   7070                 {
   7071                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   0020               MOVS     R0,#+0
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   7F21               MOVS     R1,#+127
   \   000000EA   0120               MOVS     R0,#+1
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   2121               MOVS     R1,#+33
   \   000000F0   0E20               MOVS     R0,#+14
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   1E23               MOVS     R3,#+30
   \   000000F6   0622               MOVS     R2,#+6
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   2848               LDR      R0,??RF_Channel_Paint_0+0x24  ;; 0x645
   \   000000FC   2D68               LDR      R5,[R5, #+0]
   \   000000FE   6543               MULS     R5,R4,R5
   \   00000100   7419               ADDS     R4,R6,R5
   \   00000102   2018               ADDS     R0,R4,R0
   \   00000104   ........           BL       Label
   \   00000108   06B0               ADD      SP,SP,#+24
   \   0000010A   32E0               B        ??RF_Channel_Paint_3
   7072                 }else{
   7073                   Button("OK",12,12,40,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \                     ??RF_Channel_Paint_2:
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   1920               MOVS     R0,#+25
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   2823               MOVS     R3,#+40
   \   00000114   0C22               MOVS     R2,#+12
   \   00000116   1100               MOVS     R1,R2
   \   00000118   21A0               ADR      R0,??RF_Channel_Paint_0+0x28  ;; 0x4F, 0x4B, 0x00, 0x00
   \   0000011A   ........           BL       Button
   \   0000011E   02B0               ADD      SP,SP,#+8
   \   00000120   27E0               B        ??RF_Channel_Paint_3
   7074                 }
   7075                }else{ //je¿eli tryb slave
   7076                   Label(Speech[g_leng].Niedostepne,2,2,70,14,59,1,127,0);
   \                     ??RF_Channel_Paint_1:
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   0020               MOVS     R0,#+0
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   7F21               MOVS     R1,#+127
   \   0000012A   0120               MOVS     R0,#+1
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   3B21               MOVS     R1,#+59
   \   00000130   0E20               MOVS     R0,#+14
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   4623               MOVS     R3,#+70
   \   00000136   0222               MOVS     R2,#+2
   \   00000138   1100               MOVS     R1,R2
   \   0000013A   1A48               LDR      R0,??RF_Channel_Paint_0+0x2C  ;; 0x69f
   \   0000013C   2F68               LDR      R7,[R5, #+0]
   \   0000013E   6743               MULS     R7,R4,R7
   \   00000140   F719               ADDS     R7,R6,R7
   \   00000142   3818               ADDS     R0,R7,R0
   \   00000144   ........           BL       Label
   \   00000148   06B0               ADD      SP,SP,#+24
   7077                   Label(Speech[g_leng].W_Trybie_Slave,2,2,60,14,56,1,127,0);
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   0020               MOVS     R0,#+0
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   7F21               MOVS     R1,#+127
   \   00000152   0120               MOVS     R0,#+1
   \   00000154   03B4               PUSH     {R0,R1}
   \   00000156   3821               MOVS     R1,#+56
   \   00000158   0E20               MOVS     R0,#+14
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   3C23               MOVS     R3,#+60
   \   0000015E   0222               MOVS     R2,#+2
   \   00000160   1100               MOVS     R1,R2
   \   00000162   1148               LDR      R0,??RF_Channel_Paint_0+0x30  ;; 0x6ae
   \   00000164   2D68               LDR      R5,[R5, #+0]
   \   00000166   6543               MULS     R5,R4,R5
   \   00000168   7419               ADDS     R4,R6,R5
   \   0000016A   2018               ADDS     R0,R4,R0
   \   0000016C   ........           BL       Label
   \   00000170   06B0               ADD      SP,SP,#+24
   7078                }
   7079                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   7080              }//________________________________________________________________________
   \                     ??RF_Channel_Paint_3:
   \   00000172   FEBC               POP      {R1-R7}
   \   00000174   01BC               POP      {R0}
   \   00000176   0047               BX       R0               ;; return
   \                     ??RF_Channel_Paint_0:
   \   00000178   ........           DC32     g_leng
   \   0000017C   ........           DC32     Speech
   \   00000180   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000184   36060000           DC32     0x636
   \   00000188   ........           DC32     SlaveMode
   \   0000018C   ........           DC32     g_Stop_Program
   \   00000190   ........           DC32     RF_Channel_nr_tmp
   \   00000194   ........           DC32     RF_Channel_nr_tmp + 1
   \   00000198   ........           DC32     RF_Status + 13
   \   0000019C   45060000           DC32     0x645
   \   000001A0   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   000001A4   9F060000           DC32     0x69f
   \   000001A8   AE060000           DC32     0x6ae
   7081          
   7082          

   \                                 In section Debug.txt, align 4, keep-with-next
   7083              void RF_Channel_Refresh(void)
   7084              {  
   \                     RF_Channel_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   7085                if (SlaveMode)  //je¿eli tryb master
   \   00000002   4848               LDR      R0,??RF_Channel_Refresh_0  ;; SlaveMode
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   00D1               BNE      .+4
   \   0000000A   87E0               B        ??RF_Channel_Refresh_1
   7086                {
   7087                
   7088                 List_Paint(Speech[g_leng].RfChannel,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000C   9624               MOVS     R4,#+150
   \   0000000E   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000010   454D               LDR      R5,??RF_Channel_Refresh_0+0x4  ;; g_leng
   \   00000012   464E               LDR      R6,??RF_Channel_Refresh_0+0x8  ;; Speech
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   0800               MOVS     R0,R1
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   44A0               ADR      R0,??RF_Channel_Refresh_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0121               MOVS     R1,#+1
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   0300               MOVS     R3,R0
   \   0000002A   6C22               MOVS     R2,#+108
   \   0000002C   4148               LDR      R0,??RF_Channel_Refresh_0+0x10  ;; 0x636
   \   0000002E   2F68               LDR      R7,[R5, #+0]
   \   00000030   6743               MULS     R7,R4,R7
   \   00000032   F719               ADDS     R7,R6,R7
   \   00000034   3818               ADDS     R0,R7,R0
   \   00000036   ........           BL       List_Paint
   \   0000003A   0AB0               ADD      SP,SP,#+40
   7089                 
   7090                 g_Stop_Program=1;
   \   0000003C   3E48               LDR      R0,??RF_Channel_Refresh_0+0x14  ;; g_Stop_Program
   \   0000003E   0121               MOVS     R1,#+1
   \   00000040   0170               STRB     R1,[R0, #+0]
   7091                 
   7092                 //Speech[g_leng].RfChannel
   7093                 Label(Speech[g_leng].RfChannel,0,3,90,10,33,1,127,0);
   \   00000042   82B0               SUB      SP,SP,#+8
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   7F21               MOVS     R1,#+127
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   2121               MOVS     R1,#+33
   \   00000050   0A20               MOVS     R0,#+10
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   5A23               MOVS     R3,#+90
   \   00000056   0322               MOVS     R2,#+3
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   3648               LDR      R0,??RF_Channel_Refresh_0+0x10  ;; 0x636
   \   0000005C   2F68               LDR      R7,[R5, #+0]
   \   0000005E   6743               MULS     R7,R4,R7
   \   00000060   F719               ADDS     R7,R6,R7
   \   00000062   3818               ADDS     R0,R7,R0
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
   \   0000006A   0222               MOVS     R2,#+2
   \   0000006C   01A9               ADD      R1,SP,#+4
   \   0000006E   3348               LDR      R0,??RF_Channel_Refresh_0+0x18  ;; RF_Channel_nr_tmp
   \   00000070   0078               LDRB     R0,[R0, #+0]
   7094            
   7095                 char tmp_char[3];
   7096                 CharToStr(RF_Channel_nr_tmp, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000072   ........           BL       CharToStr
   7097                 
   7098                 Label(tmp_char,1,30,77,2,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   7F21               MOVS     R1,#+127
   \   0000007E   0120               MOVS     R0,#+1
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   2121               MOVS     R1,#+33
   \   00000084   0220               MOVS     R0,#+2
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   4D23               MOVS     R3,#+77
   \   0000008A   1E22               MOVS     R2,#+30
   \   0000008C   0121               MOVS     R1,#+1
   \   0000008E   07A8               ADD      R0,SP,#+28
   \   00000090   ........           BL       Label
   \   00000094   06B0               ADD      SP,SP,#+24
   7099                    
   7100                 
   7101                 char LabelButt[2];
   7102                 LabelButt[1]=0;
   \   00000096   6F46               MOV      R7,SP
   \   00000098   0020               MOVS     R0,#+0
   \   0000009A   7870               STRB     R0,[R7, #+1]
   7103                 LabelButt[0]=30;
   \   0000009C   1E20               MOVS     R0,#+30
   \   0000009E   3870               STRB     R0,[R7, #+0]
   7104                 Button(LabelButt,33,48,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000A0   82B0               SUB      SP,SP,#+8
   \   000000A2   1920               MOVS     R0,#+25
   \   000000A4   0090               STR      R0,[SP, #+0]
   \   000000A6   1323               MOVS     R3,#+19
   \   000000A8   3022               MOVS     R2,#+48
   \   000000AA   2121               MOVS     R1,#+33
   \   000000AC   02A8               ADD      R0,SP,#+8
   \   000000AE   ........           BL       Button
   \   000000B2   02B0               ADD      SP,SP,#+8
   7105                 LabelButt[0]=31;
   \   000000B4   1F20               MOVS     R0,#+31
   \   000000B6   3870               STRB     R0,[R7, #+0]
   7106                 Button(LabelButt,12,48,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   1920               MOVS     R0,#+25
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   1323               MOVS     R3,#+19
   \   000000C0   3022               MOVS     R2,#+48
   \   000000C2   0C21               MOVS     R1,#+12
   \   000000C4   02A8               ADD      R0,SP,#+8
   \   000000C6   ........           BL       Button
   \   000000CA   02B0               ADD      SP,SP,#+8
   7107                 
   7108                 if ((RF_Status.ConfResive) && (RF_Status.Ch!=RF_Channel_nr_tmp))
   \   000000CC   1C48               LDR      R0,??RF_Channel_Refresh_0+0x1C  ;; RF_Status
   \   000000CE   C17A               LDRB     R1,[R0, #+11]
   \   000000D0   0029               CMP      R1,#+0
   \   000000D2   19D0               BEQ      ??RF_Channel_Refresh_2
   \   000000D4   407B               LDRB     R0,[R0, #+13]
   \   000000D6   1949               LDR      R1,??RF_Channel_Refresh_0+0x18  ;; RF_Channel_nr_tmp
   \   000000D8   0978               LDRB     R1,[R1, #+0]
   \   000000DA   8842               CMP      R0,R1
   \   000000DC   14D0               BEQ      ??RF_Channel_Refresh_2
   7109                 {
   7110                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   000000DE   82B0               SUB      SP,SP,#+8
   \   000000E0   0020               MOVS     R0,#+0
   \   000000E2   0090               STR      R0,[SP, #+0]
   \   000000E4   7F21               MOVS     R1,#+127
   \   000000E6   0120               MOVS     R0,#+1
   \   000000E8   03B4               PUSH     {R0,R1}
   \   000000EA   2121               MOVS     R1,#+33
   \   000000EC   0E20               MOVS     R0,#+14
   \   000000EE   03B4               PUSH     {R0,R1}
   \   000000F0   1E23               MOVS     R3,#+30
   \   000000F2   0622               MOVS     R2,#+6
   \   000000F4   0021               MOVS     R1,#+0
   \   000000F6   1348               LDR      R0,??RF_Channel_Refresh_0+0x20  ;; 0x645
   \   000000F8   2D68               LDR      R5,[R5, #+0]
   \   000000FA   6543               MULS     R5,R4,R5
   \   000000FC   7419               ADDS     R4,R6,R5
   \   000000FE   2018               ADDS     R0,R4,R0
   \   00000100   ........           BL       Label
   \   00000104   06B0               ADD      SP,SP,#+24
   \   00000106   09E0               B        ??RF_Channel_Refresh_1
   7111                 }else{
   7112                   Button("OK",12,12,40,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \                     ??RF_Channel_Refresh_2:
   \   00000108   82B0               SUB      SP,SP,#+8
   \   0000010A   1920               MOVS     R0,#+25
   \   0000010C   0090               STR      R0,[SP, #+0]
   \   0000010E   2823               MOVS     R3,#+40
   \   00000110   0C22               MOVS     R2,#+12
   \   00000112   1100               MOVS     R1,R2
   \   00000114   0CA0               ADR      R0,??RF_Channel_Refresh_0+0x24  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000116   ........           BL       Button
   \   0000011A   02B0               ADD      SP,SP,#+8
   7113                 }
   7114          
   7115                } 
   7116              }//________________________________________________________________________
   \                     ??RF_Channel_Refresh_1:
   \   0000011C   FEBC               POP      {R1-R7}
   \   0000011E   01BC               POP      {R0}
   \   00000120   0047               BX       R0               ;; return
   \   00000122   C046               Nop      
   \                     ??RF_Channel_Refresh_0:
   \   00000124   ........           DC32     SlaveMode
   \   00000128   ........           DC32     g_leng
   \   0000012C   ........           DC32     Speech
   \   00000130   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000134   36060000           DC32     0x636
   \   00000138   ........           DC32     g_Stop_Program
   \   0000013C   ........           DC32     RF_Channel_nr_tmp
   \   00000140   ........           DC32     RF_Status
   \   00000144   45060000           DC32     0x645
   \   00000148   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   7117              
   7118              
   7119              
   7120              //*-----------------------------------------------------------------------------
   7121          

   \                                 In section Debug.txt, align 4, keep-with-next
   7122              void RF_Channel_Event(void)
   7123              {
   \                     RF_Channel_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7124                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   7125                if (ans<0)  
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0120               MOVS     R0,#+1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   7448               LDR      R0,??RF_Channel_Event_0  ;; Y_down
   \   0000000E   435E               LDRSH    R3,[R0, R1]
   \   00000010   7448               LDR      R0,??RF_Channel_Event_0+0x4  ;; X_down
   \   00000012   425E               LDRSH    R2,[R0, R1]
   \   00000014   7448               LDR      R0,??RF_Channel_Event_0+0x8  ;; Y_up
   \   00000016   415E               LDRSH    R1,[R0, R1]
   \   00000018   7448               LDR      R0,??RF_Channel_Event_0+0xC  ;; X_up
   \   0000001A   0024               MOVS     R4,#+0
   \   0000001C   005F               LDRSH    R0,[R0, R4]
   \   0000001E   ........           BL       List_Event
   \   00000022   04B0               ADD      SP,SP,#+16
   \   00000024   0028               CMP      R0,#+0
   \   00000026   0BD5               BPL      ??RF_Channel_Event_1
   7126                 {
   7127                    g_Stop_Program=0;
   \   00000028   7148               LDR      R0,??RF_Channel_Event_0+0x10  ;; g_Stop_Program
   \   0000002A   2100               MOVS     R1,R4
   \   0000002C   0170               STRB     R1,[R0, #+0]
   7128                    MenuLevel=(MenuLevel/10);
   \   0000002E   714C               LDR      R4,??RF_Channel_Event_0+0x14  ;; TextToChangeLength
   \   00000030   A06C               LDR      R0,[R4, #+72]
   \   00000032   0A21               MOVS     R1,#+10
   \   00000034   ........           BL       __aeabi_idivmod
   \   00000038   A064               STR      R0,[R4, #+72]
   7129                    MenuPaint();
   \   0000003A   ........           BL       MenuPaint
   \   0000003E   CBE0               B        ??RF_Channel_Event_2
   7130                 }else{
   7131                
   7132          
   7133                 char LabelButt[2];
   7134                 LabelButt[1]=0;
   \                     ??RF_Channel_Event_1:
   \   00000040   6D46               MOV      R5,SP
   \   00000042   2600               MOVS     R6,R4
   \   00000044   3000               MOVS     R0,R6
   \   00000046   6870               STRB     R0,[R5, #+1]
   7135                 LabelButt[0]=30;
   \   00000048   1E20               MOVS     R0,#+30
   \   0000004A   2870               STRB     R0,[R5, #+0]
   7136          
   7137                 if (Button(LabelButt,33,48,19,25)==1) 
   \   0000004C   6A4C               LDR      R4,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   1920               MOVS     R0,#+25
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   1323               MOVS     R3,#+19
   \   00000056   3022               MOVS     R2,#+48
   \   00000058   2121               MOVS     R1,#+33
   \   0000005A   02A8               ADD      R0,SP,#+8
   \   0000005C   ........           BL       Button
   \   00000060   02B0               ADD      SP,SP,#+8
   \   00000062   0128               CMP      R0,#+1
   \   00000064   34D1               BNE      ??RF_Channel_Event_3
   7138                 {
   7139                    if (RF_Channel_nr_tmp<RF_ChannelQuanti-1) {RF_Channel_nr_tmp++;} else {RF_Channel_nr_tmp=0;}
   \   00000066   2078               LDRB     R0,[R4, #+0]
   \   00000068   2728               CMP      R0,#+39
   \   0000006A   02D2               BCS      ??RF_Channel_Event_4
   \   0000006C   401C               ADDS     R0,R0,#+1
   \   0000006E   2070               STRB     R0,[R4, #+0]
   \   00000070   01E0               B        ??RF_Channel_Event_5
   \                     ??RF_Channel_Event_4:
   \   00000072   3000               MOVS     R0,R6
   \   00000074   2070               STRB     R0,[R4, #+0]
   7140                    SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Channel_nr_tmp),Cs_RF);
                           ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??RF_Channel_Event_5:
   \   00000076   0221               MOVS     R1,#+2
   \   00000078   0F00               MOVS     R7,R1
   \   0000007A   2078               LDRB     R0,[R4, #+0]
   \   0000007C   ........           BL       __aeabi_ui2d
   \   00000080   0200               MOVS     R2,R0
   \   00000082   0B00               MOVS     R3,R1
   \   00000084   5D48               LDR      R0,??RF_Channel_Event_0+0x1C  ;; 0x33333333
   \   00000086   5E49               LDR      R1,??RF_Channel_Event_0+0x20  ;; 0x3fd33333
   \   00000088   ........           BL       __aeabi_dmul
   \   0000008C   0200               MOVS     R2,R0
   \   0000008E   0B00               MOVS     R3,R1
   \   00000090   5C48               LDR      R0,??RF_Channel_Event_0+0x24  ;; 0x5c28f5c3
   \   00000092   5D49               LDR      R1,??RF_Channel_Event_0+0x28  ;; 0x408ae28f
   \   00000094   ........           BL       __aeabi_dadd
   \   00000098   0200               MOVS     R2,R0
   \   0000009A   0B00               MOVS     R3,R1
   \   0000009C   3000               MOVS     R0,R6
   \   0000009E   5B49               LDR      R1,??RF_Channel_Event_0+0x2C  ;; 0x40690000
   \   000000A0   ........           BL       __aeabi_dmul
   \   000000A4   0200               MOVS     R2,R0
   \   000000A6   0B00               MOVS     R3,R1
   \   000000A8   3000               MOVS     R0,R6
   \   000000AA   5949               LDR      R1,??RF_Channel_Event_0+0x30  ;; 0xc104ff00
   \   000000AC   ........           BL       __aeabi_dadd
   \   000000B0   ........           BL       __aeabi_d2iz
   \   000000B4   0004               LSLS     R0,R0,#+16
   \   000000B6   0014               ASRS     R0,R0,#+16
   \   000000B8   A021               MOVS     R1,#+160
   \   000000BA   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   000000BC   0143               ORRS     R1,R1,R0
   \   000000BE   0800               MOVS     R0,R1
   \   000000C0   3900               MOVS     R1,R7
   \   000000C2   ........           BL       SPI_SendWord
   7141          
   7142                    RF_ChOkBlock=RF_CheckChannel();
   \   000000C6   ........           BL       RF_CheckChannel
   \   000000CA   6070               STRB     R0,[R4, #+1]
   7143                    MenuPaint(); 
   \   000000CC   ........           BL       MenuPaint
   7144                 }
   7145                 LabelButt[0]=31;
   \                     ??RF_Channel_Event_3:
   \   000000D0   1F20               MOVS     R0,#+31
   \   000000D2   2870               STRB     R0,[R5, #+0]
   7146          
   7147                 if (Button(LabelButt,12,48,19,25)==1)
   \   000000D4   82B0               SUB      SP,SP,#+8
   \   000000D6   1920               MOVS     R0,#+25
   \   000000D8   0090               STR      R0,[SP, #+0]
   \   000000DA   1323               MOVS     R3,#+19
   \   000000DC   3022               MOVS     R2,#+48
   \   000000DE   0C21               MOVS     R1,#+12
   \   000000E0   02A8               ADD      R0,SP,#+8
   \   000000E2   ........           BL       Button
   \   000000E6   02B0               ADD      SP,SP,#+8
   \   000000E8   0128               CMP      R0,#+1
   \   000000EA   34D1               BNE      ??RF_Channel_Event_6
   7148                 {
   7149                    if (RF_Channel_nr_tmp>0) {RF_Channel_nr_tmp--;} else {RF_Channel_nr_tmp=RF_ChannelQuanti-1;}
   \   000000EC   2078               LDRB     R0,[R4, #+0]
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   02D0               BEQ      ??RF_Channel_Event_7
   \   000000F2   401E               SUBS     R0,R0,#+1
   \   000000F4   2070               STRB     R0,[R4, #+0]
   \   000000F6   01E0               B        ??RF_Channel_Event_8
   \                     ??RF_Channel_Event_7:
   \   000000F8   2720               MOVS     R0,#+39
   \   000000FA   2070               STRB     R0,[R4, #+0]
   7150          
   7151                    SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Channel_nr_tmp),Cs_RF);
                           ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??RF_Channel_Event_8:
   \   000000FC   0221               MOVS     R1,#+2
   \   000000FE   0D00               MOVS     R5,R1
   \   00000100   2078               LDRB     R0,[R4, #+0]
   \   00000102   ........           BL       __aeabi_ui2d
   \   00000106   0200               MOVS     R2,R0
   \   00000108   0B00               MOVS     R3,R1
   \   0000010A   3C48               LDR      R0,??RF_Channel_Event_0+0x1C  ;; 0x33333333
   \   0000010C   3C49               LDR      R1,??RF_Channel_Event_0+0x20  ;; 0x3fd33333
   \   0000010E   ........           BL       __aeabi_dmul
   \   00000112   0200               MOVS     R2,R0
   \   00000114   0B00               MOVS     R3,R1
   \   00000116   3B48               LDR      R0,??RF_Channel_Event_0+0x24  ;; 0x5c28f5c3
   \   00000118   3B49               LDR      R1,??RF_Channel_Event_0+0x28  ;; 0x408ae28f
   \   0000011A   ........           BL       __aeabi_dadd
   \   0000011E   0200               MOVS     R2,R0
   \   00000120   0B00               MOVS     R3,R1
   \   00000122   3000               MOVS     R0,R6
   \   00000124   3949               LDR      R1,??RF_Channel_Event_0+0x2C  ;; 0x40690000
   \   00000126   ........           BL       __aeabi_dmul
   \   0000012A   0200               MOVS     R2,R0
   \   0000012C   0B00               MOVS     R3,R1
   \   0000012E   3000               MOVS     R0,R6
   \   00000130   3749               LDR      R1,??RF_Channel_Event_0+0x30  ;; 0xc104ff00
   \   00000132   ........           BL       __aeabi_dadd
   \   00000136   ........           BL       __aeabi_d2iz
   \   0000013A   0004               LSLS     R0,R0,#+16
   \   0000013C   0014               ASRS     R0,R0,#+16
   \   0000013E   A021               MOVS     R1,#+160
   \   00000140   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   00000142   0143               ORRS     R1,R1,R0
   \   00000144   0800               MOVS     R0,R1
   \   00000146   2900               MOVS     R1,R5
   \   00000148   ........           BL       SPI_SendWord
   7152                    
   7153           
   7154                  
   7155          
   7156          
   7157                 
   7158          
   7159                    RF_ChOkBlock=RF_CheckChannel();
   \   0000014C   ........           BL       RF_CheckChannel
   \   00000150   6070               STRB     R0,[R4, #+1]
   7160                    MenuPaint(); 
   \   00000152   ........           BL       MenuPaint
   7161                 }       
   7162                 
   7163                 
   7164                 if (RF_ChOkBlock)
   \                     ??RF_Channel_Event_6:
   \   00000156   6078               LDRB     R0,[R4, #+1]
   \   00000158   0028               CMP      R0,#+0
   \   0000015A   82B0               SUB      SP,SP,#+8
   \   0000015C   17D0               BEQ      ??RF_Channel_Event_9
   7165                 {
   7166                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   0000015E   3000               MOVS     R0,R6
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   7F21               MOVS     R1,#+127
   \   00000164   0120               MOVS     R0,#+1
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   2121               MOVS     R1,#+33
   \   0000016A   0E20               MOVS     R0,#+14
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   1E23               MOVS     R3,#+30
   \   00000170   0622               MOVS     R2,#+6
   \   00000172   3100               MOVS     R1,R6
   \   00000174   2748               LDR      R0,??RF_Channel_Event_0+0x34  ;; 0x645
   \   00000176   284C               LDR      R4,??RF_Channel_Event_0+0x38  ;; g_leng
   \   00000178   2468               LDR      R4,[R4, #+0]
   \   0000017A   9625               MOVS     R5,#+150
   \   0000017C   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   0000017E   6C43               MULS     R4,R5,R4
   \   00000180   264D               LDR      R5,??RF_Channel_Event_0+0x3C  ;; Speech
   \   00000182   2C19               ADDS     R4,R5,R4
   \   00000184   2018               ADDS     R0,R4,R0
   \   00000186   ........           BL       Label
   \   0000018A   06B0               ADD      SP,SP,#+24
   \   0000018C   24E0               B        ??RF_Channel_Event_2
   7167                 }else{
   7168                  if (Button("OK",12,12,40,25)==1)
   \                     ??RF_Channel_Event_9:
   \   0000018E   1920               MOVS     R0,#+25
   \   00000190   0090               STR      R0,[SP, #+0]
   \   00000192   2823               MOVS     R3,#+40
   \   00000194   0C22               MOVS     R2,#+12
   \   00000196   1100               MOVS     R1,R2
   \   00000198   21A0               ADR      R0,??RF_Channel_Event_0+0x40  ;; 0x4F, 0x4B, 0x00, 0x00
   \   0000019A   ........           BL       Button
   \   0000019E   02B0               ADD      SP,SP,#+8
   \   000001A0   0128               CMP      R0,#+1
   \   000001A2   19D1               BNE      ??RF_Channel_Event_2
   7169                  {
   7170                   g_Stop_Program=0;
   \   000001A4   1248               LDR      R0,??RF_Channel_Event_0+0x10  ;; g_Stop_Program
   \   000001A6   0670               STRB     R6,[R0, #+0]
   7171                   RF_Status.Ch=RF_Channel_nr_tmp;
   \   000001A8   1E48               LDR      R0,??RF_Channel_Event_0+0x44  ;; RF_Status + 13
   \   000001AA   2178               LDRB     R1,[R4, #+0]
   \   000001AC   0170               STRB     R1,[R0, #+0]
   7172                   
   7173          
   7174                        //zapis do flash
   7175                        unsigned int Save = __get_interrupt_state();  
   \   000001AE   ........           BL       __iar_get_interrupt_state
   \   000001B2   0500               MOVS     R5,R0
   7176                        __disable_interrupt();
   \   000001B4   ........           BL       __iar_disable_interrupt
   7177                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.RF_channel)),0, &RF_Channel_nr_tmp,1);
   7178                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.RF_channel)), (char*) (&(RF_Channel_nr_tmp)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000001B8   0122               MOVS     R2,#+1
   \   000001BA   2100               MOVS     R1,R4
   \   000001BC   1A48               LDR      R0,??RF_Channel_Event_0+0x48  ;; 0x13d7e6
   \   000001BE   ........           BL       FlashWrite
   7179                        __set_interrupt_state(Save);
   \   000001C2   2800               MOVS     R0,R5
   \   000001C4   ........           BL       __iar_set_interrupt_state
   7180                        //koniec zapisu do flash
   7181                   
   7182                   
   7183                   MenuLevel=(MenuLevel/10);
   \   000001C8   0A4C               LDR      R4,??RF_Channel_Event_0+0x14  ;; TextToChangeLength
   \   000001CA   A06C               LDR      R0,[R4, #+72]
   \   000001CC   0A21               MOVS     R1,#+10
   \   000001CE   ........           BL       __aeabi_idivmod
   \   000001D2   A064               STR      R0,[R4, #+72]
   7184                   MenuPaint();
   \   000001D4   ........           BL       MenuPaint
   7185                   
   7186                  }
   7187                 }
   7188                 
   7189                 
   7190                
   7191                 
   7192                 
   7193                 }
   7194              }//________________________________________________________________________
   \                     ??RF_Channel_Event_2:
   \   000001D8   F8BC               POP      {R3-R7}
   \   000001DA   01BC               POP      {R0}
   \   000001DC   0047               BX       R0               ;; return
   \   000001DE   C046               Nop      
   \                     ??RF_Channel_Event_0:
   \   000001E0   ........           DC32     Y_down
   \   000001E4   ........           DC32     X_down
   \   000001E8   ........           DC32     Y_up
   \   000001EC   ........           DC32     X_up
   \   000001F0   ........           DC32     g_Stop_Program
   \   000001F4   ........           DC32     TextToChangeLength
   \   000001F8   ........           DC32     RF_Channel_nr_tmp
   \   000001FC   33333333           DC32     0x33333333
   \   00000200   3333D33F           DC32     0x3fd33333
   \   00000204   C3F5285C           DC32     0x5c28f5c3
   \   00000208   8FE28A40           DC32     0x408ae28f
   \   0000020C   00006940           DC32     0x40690000
   \   00000210   00FF04C1           DC32     0xc104ff00
   \   00000214   45060000           DC32     0x645
   \   00000218   ........           DC32     g_leng
   \   0000021C   ........           DC32     Speech
   \   00000220   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000224   ........           DC32     RF_Status + 13
   \   00000228   E6D71300           DC32     0x13d7e6
   7195              
   7196              
   7197              
   7198              
   7199              
   7200              
   7201              
   7202              
   7203              
   7204              
   7205              
   7206          
   7207          //Wybór poziomu dostêpu *************************************************************************************************************
   7208                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7209                void Sygnal_Paint(void)
   7210                {
   \                     Sygnal_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   7211                    #define _Y   10   //przesuniêcie w dó³
   7212                    List_Paint(Speech[g_leng].Sygnaly,4,15,_Y,0,3,Speech[g_leng].Obserwowane,Speech[g_leng].WeWy, Speech[g_leng].ZmAnalog, Speech[g_leng].ZmDwust,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   1248               LDR      R0,??Sygnal_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   9621               MOVS     R1,#+150
   \   00000008   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000000A   4843               MULS     R0,R1,R0
   \   0000000C   1049               LDR      R1,??Sygnal_Paint_0+0x4  ;; Speech
   \   0000000E   0C18               ADDS     R4,R1,R0
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   2100               MOVS     R1,R4
   \   0000001A   1E31               ADDS     R1,R1,#+30
   \   0000001C   2000               MOVS     R0,R4
   \   0000001E   0F30               ADDS     R0,R0,#+15
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   FF20               MOVS     R0,#+255
   \   00000024   5A30               ADDS     R0,R0,#+90       ;; #+345
   \   00000026   2118               ADDS     R1,R4,R0
   \   00000028   B430               ADDS     R0,R0,#+180
   \   0000002A   2018               ADDS     R0,R4,R0
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0321               MOVS     R1,#+3
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0A23               MOVS     R3,#+10
   \   00000036   0F22               MOVS     R2,#+15
   \   00000038   0421               MOVS     R1,#+4
   \   0000003A   FF20               MOVS     R0,#+255
   \   0000003C   4000               LSLS     R0,R0,#+1        ;; #+510
   \   0000003E   2018               ADDS     R0,R4,R0
   \   00000040   ........           BL       List_Paint
   \   00000044   0AB0               ADD      SP,SP,#+40
   7213                }//_______________________ Koniec funkcji MainSide_Paint __________________________    
   \   00000046   10BC               POP      {R4}
   \   00000048   01BC               POP      {R0}
   \   0000004A   0047               BX       R0               ;; return
   \                     ??Sygnal_Paint_0:
   \   0000004C   ........           DC32     g_leng
   \   00000050   ........           DC32     Speech
   7214              
   7215              
   7216                    //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7217                void Sygnal_Event(void)
   7218                {
   \                     Sygnal_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7219                  int Y_tmp = 10;   //przesuniêcie w dó³
   7220                  int ans;
   7221          
   7222                  ans=List_Event(X_up, Y_up, X_down, Y_down, 4 , 15,0,Y_tmp); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0A21               MOVS     R1,#+10
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0420               MOVS     R0,#+4
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??Sygnal_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??Sygnal_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??Sygnal_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??Sygnal_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0400               MOVS     R4,R0
   7223            
   7224                  if (ans)
   \   0000002A   15D0               BEQ      ??Sygnal_Event_1
   7225                    {
   7226                      if ((ans>0) && (ans<5))
   \   0000002C   012C               CMP      R4,#+1
   \   0000002E   09DB               BLT      ??Sygnal_Event_2
   \   00000030   052C               CMP      R4,#+5
   \   00000032   07DA               BGE      ??Sygnal_Event_2
   7227                      {
   7228                          MenuLevel=(MenuLevel*10+ans);
   \   00000034   0E4D               LDR      R5,??Sygnal_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A86C               LDR      R0,[R5, #+72]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   4843               MULS     R0,R1,R0
   \   0000003C   0019               ADDS     R0,R0,R4
   \   0000003E   A864               STR      R0,[R5, #+72]
   7229                          MenuPaint();
   \   00000040   ........           BL       MenuPaint
   7230                      }
   7231                      if (ans<0)
   \                     ??Sygnal_Event_2:
   \   00000044   002C               CMP      R4,#+0
   \   00000046   07D5               BPL      ??Sygnal_Event_1
   7232                      {
   7233                        MenuLevel=(MenuLevel/10);
   \   00000048   094D               LDR      R5,??Sygnal_Event_0+0x10  ;; TextToChangeLength
   \   0000004A   A86C               LDR      R0,[R5, #+72]
   \   0000004C   0A21               MOVS     R1,#+10
   \   0000004E   ........           BL       __aeabi_idivmod
   \   00000052   A864               STR      R0,[R5, #+72]
   7234                        MenuPaint();
   \   00000054   ........           BL       MenuPaint
   7235                      }
   7236                    }
   7237          
   7238                }//_______________________________________________________________________
   \                     ??Sygnal_Event_1:
   \   00000058   38BC               POP      {R3-R5}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??Sygnal_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
   7239          
   7240          
   7241          
   7242          
   7243              
   7244              
   7245            long long int WaitOnCheckNode=0;     
   7246            char OpisWezl=0;    

   \                                 In section Debug.txt, align 4, keep-with-next
   7247            void NeuronsList_Paint(void)
   7248            {  
   \                     NeuronsList_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   7249                 if (WaitOnCheckNode==0) WaitOnCheckNode=g_counter+1000+TimeUnitQual*32; 
   \   00000002   944C               LDR      R4,??NeuronsList_Paint_0  ;; TextToChangeLength
   \   00000004   206C               LDR      R0,[R4, #+64]
   \   00000006   616C               LDR      R1,[R4, #+68]
   \   00000008   0029               CMP      R1,#+0
   \   0000000A   09D1               BNE      ??NeuronsList_Paint_1
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   07D1               BNE      ??NeuronsList_Paint_1
   \   00000010   9148               LDR      R0,??NeuronsList_Paint_0+0x4  ;; g_counter
   \   00000012   03C8               LDM      R0!,{R0,R1}
   \   00000014   914A               LDR      R2,??NeuronsList_Paint_0+0x8  ;; 0x2968
   \   00000016   0023               MOVS     R3,#+0
   \   00000018   1218               ADDS     R2,R2,R0
   \   0000001A   4B41               ADCS     R3,R3,R1
   \   0000001C   2264               STR      R2,[R4, #+64]
   \   0000001E   6364               STR      R3,[R4, #+68]
   7250          
   7251                char txt[8];
   7252                 
   7253                
   7254                 List_Paint(Speech[g_leng].Wezly,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \                     ??NeuronsList_Paint_1:
   \   00000020   9625               MOVS     R5,#+150
   \   00000022   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000024   8E4E               LDR      R6,??NeuronsList_Paint_0+0xC  ;; g_leng
   \   00000026   8F4F               LDR      R7,??NeuronsList_Paint_0+0x10  ;; Speech
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   0800               MOVS     R0,R1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   8DA0               ADR      R0,??NeuronsList_Paint_0+0x14  ;; 0x20, 0x00, 0x00, 0x00
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   0321               MOVS     R1,#+3
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   0300               MOVS     R3,R0
   \   0000003E   6C22               MOVS     R2,#+108
   \   00000040   0121               MOVS     R1,#+1
   \   00000042   8C46               MOV      R12,R1
   \   00000044   8949               LDR      R1,??NeuronsList_Paint_0+0x18  ;; 0x627
   \   00000046   3068               LDR      R0,[R6, #+0]
   \   00000048   6843               MULS     R0,R5,R0
   \   0000004A   3818               ADDS     R0,R7,R0
   \   0000004C   4018               ADDS     R0,R0,R1
   \   0000004E   6146               MOV      R1,R12
   \   00000050   ........           BL       List_Paint
   \   00000054   0AB0               ADD      SP,SP,#+40
   7255               
   7256                
   7257                if (!SlaveMode)//je¿eli tryb Master
   \   00000056   8648               LDR      R0,??NeuronsList_Paint_0+0x1C  ;; SlaveMode
   \   00000058   0078               LDRB     R0,[R0, #+0]
   \   0000005A   0028               CMP      R0,#+0
   \   0000005C   00D0               BEQ      .+4
   \   0000005E   CDE0               B        ??NeuronsList_Paint_2
   7258                {
   7259          
   7260                 char LabelButt[2];
   7261                 LabelButt[1]=0;
   \   00000060   6E46               MOV      R6,SP
   \   00000062   0025               MOVS     R5,#+0
   \   00000064   7070               STRB     R0,[R6, #+1]
   7262                 LabelButt[0]=30;
   \   00000066   1E20               MOVS     R0,#+30
   \   00000068   3070               STRB     R0,[R6, #+0]
   7263                 Button(LabelButt,24,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   1320               MOVS     R0,#+19
   \   0000006E   0090               STR      R0,[SP, #+0]
   \   00000070   0300               MOVS     R3,R0
   \   00000072   0322               MOVS     R2,#+3
   \   00000074   1821               MOVS     R1,#+24
   \   00000076   02A8               ADD      R0,SP,#+8
   \   00000078   ........           BL       Button
   \   0000007C   02B0               ADD      SP,SP,#+8
   7264                 LabelButt[0]=31;
   \   0000007E   1F20               MOVS     R0,#+31
   \   00000080   3070               STRB     R0,[R6, #+0]
   7265                 Button(LabelButt,3,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000082   82B0               SUB      SP,SP,#+8
   \   00000084   1320               MOVS     R0,#+19
   \   00000086   0090               STR      R0,[SP, #+0]
   \   00000088   0300               MOVS     R3,R0
   \   0000008A   0322               MOVS     R2,#+3
   \   0000008C   1100               MOVS     R1,R2
   \   0000008E   02A8               ADD      R0,SP,#+8
   \   00000090   ........           BL       Button
   \   00000094   02B0               ADD      SP,SP,#+8
   7266                 
   7267                 if (OpisWezl) LabelButt[0]=36; else LabelButt[0]=35;
   \   00000096   E07F               LDRB     R0,[R4, #+31]
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   02D0               BEQ      ??NeuronsList_Paint_3
   \   0000009C   2420               MOVS     R0,#+36
   \   0000009E   3070               STRB     R0,[R6, #+0]
   \   000000A0   01E0               B        ??NeuronsList_Paint_4
   \                     ??NeuronsList_Paint_3:
   \   000000A2   2320               MOVS     R0,#+35
   \   000000A4   3070               STRB     R0,[R6, #+0]
   7268                 Button(LabelButt,46,3,14,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??NeuronsList_Paint_4:
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   1320               MOVS     R0,#+19
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   0E23               MOVS     R3,#+14
   \   000000AE   0322               MOVS     R2,#+3
   \   000000B0   2E21               MOVS     R1,#+46
   \   000000B2   02A8               ADD      R0,SP,#+8
   \   000000B4   ........           BL       Button
   \   000000B8   02B0               ADD      SP,SP,#+8
   7269                  
   7270                 H_line(1,25+6*12,62,3); 
   \   000000BA   0323               MOVS     R3,#+3
   \   000000BC   3E22               MOVS     R2,#+62
   \   000000BE   6121               MOVS     R1,#+97
   \   000000C0   0120               MOVS     R0,#+1
   \   000000C2   ........           BL       H_line
   7271                 for (char i=0; i<6; i++) 
   \   000000C6   16E0               B        ??NeuronsList_Paint_5
   7272                 {H_line(1,25+i*12,62,3); 
   7273                     CharToStr(NeuronsListLine+6-i, txt, 2); //(char Value, char *Vstring, char ill);
   7274                     Label(txt,0,2,27+i*12,2,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   7275                     
   7276                     if (gProg.NeuronsIdTab[(5-i)+NeuronsListLine]>0)
   7277                     {
   7278                         if (OpisWezl)
   7279                         {//opiski
   7280                            Label(gProg.NodeLabel[(5-i)+NeuronsListLine],0,14,27+i*12,NodeLabelLethers,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   7281          
   7282                         }else{
   7283                           #ifdef  DIRECT_Q_MESURE 
   7284                              sprintf(txt, "%d",  TransQuality.DirectkMensur[RF_TaskTab[RF_CurrentTask].Node-1]);
   7285                              Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   7286                           #else
   7287                            //numery nodów 
   7288                            sprintf(txt, "%d", gProg.NeuronsIdTab[(5-i)+NeuronsListLine]);
                                   ^
Warning[Pe223]: function "sprintf" declared implicitly
   \                     ??NeuronsList_Paint_6:
   \   000000C8   6AA1               ADR      R1,??NeuronsList_Paint_0+0x20  ;; 0x25, 0x64, 0x00, 0x00
   \   000000CA   01A8               ADD      R0,SP,#+4
   \   000000CC   ........           BL       sprintf
   7289                            Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000D0   82B0               SUB      SP,SP,#+8
   \   000000D2   0020               MOVS     R0,#+0
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   6921               MOVS     R1,#+105
   \   000000D8   1020               MOVS     R0,#+16
   \   000000DA   03B4               PUSH     {R0,R1}
   \   000000DC   1721               MOVS     R1,#+23
   \   000000DE   0820               MOVS     R0,#+8
   \   000000E0   03B4               PUSH     {R0,R1}
   \   000000E2   3B00               MOVS     R3,R7
   \   000000E4   1622               MOVS     R2,#+22
   \   000000E6   0021               MOVS     R1,#+0
   \   000000E8   07A8               ADD      R0,SP,#+28
   \   000000EA   ........           BL       Label
   \   000000EE   06B0               ADD      SP,SP,#+24
   7290                          #endif
   7291                         }
   \                     ??NeuronsList_Paint_7:
   \   000000F0   6D1C               ADDS     R5,R5,#+1
   \   000000F2   2D06               LSLS     R5,R5,#+24
   \   000000F4   2D0E               LSRS     R5,R5,#+24
   \                     ??NeuronsList_Paint_5:
   \   000000F6   2800               MOVS     R0,R5
   \   000000F8   0628               CMP      R0,#+6
   \   000000FA   46D2               BCS      ??NeuronsList_Paint_8
   \   000000FC   2E00               MOVS     R6,R5
   \   000000FE   0C27               MOVS     R7,#+12
   \   00000100   7743               MULS     R7,R6,R7
   \   00000102   0323               MOVS     R3,#+3
   \   00000104   3E22               MOVS     R2,#+62
   \   00000106   3900               MOVS     R1,R7
   \   00000108   1931               ADDS     R1,R1,#+25
   \   0000010A   0120               MOVS     R0,#+1
   \   0000010C   ........           BL       H_line
   \   00000110   0222               MOVS     R2,#+2
   \   00000112   01A9               ADD      R1,SP,#+4
   \   00000114   A079               LDRB     R0,[R4, #+6]
   \   00000116   801D               ADDS     R0,R0,#+6
   \   00000118   2B00               MOVS     R3,R5
   \   0000011A   C01A               SUBS     R0,R0,R3
   \   0000011C   0006               LSLS     R0,R0,#+24
   \   0000011E   000E               LSRS     R0,R0,#+24
   \   00000120   ........           BL       CharToStr
   \   00000124   1B37               ADDS     R7,R7,#+27
   \   00000126   82B0               SUB      SP,SP,#+8
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   0090               STR      R0,[SP, #+0]
   \   0000012C   6921               MOVS     R1,#+105
   \   0000012E   1020               MOVS     R0,#+16
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   1721               MOVS     R1,#+23
   \   00000134   0220               MOVS     R0,#+2
   \   00000136   03B4               PUSH     {R0,R1}
   \   00000138   3B00               MOVS     R3,R7
   \   0000013A   0200               MOVS     R2,R0
   \   0000013C   0021               MOVS     R1,#+0
   \   0000013E   07A8               ADD      R0,SP,#+28
   \   00000140   ........           BL       Label
   \   00000144   06B0               ADD      SP,SP,#+24
   \   00000146   A079               LDRB     R0,[R4, #+6]
   \   00000148   861B               SUBS     R6,R0,R6
   \   0000014A   4B48               LDR      R0,??NeuronsList_Paint_0+0x24  ;; 0xc0ac
   \   0000014C   B100               LSLS     R1,R6,#+2
   \   0000014E   4B4A               LDR      R2,??NeuronsList_Paint_0+0x28  ;; gProg
   \   00000150   5118               ADDS     R1,R2,R1
   \   00000152   0A58               LDR      R2,[R1, R0]
   \   00000154   012A               CMP      R2,#+1
   \   00000156   CBDB               BLT      ??NeuronsList_Paint_7
   \   00000158   E07F               LDRB     R0,[R4, #+31]
   \   0000015A   0028               CMP      R0,#+0
   \   0000015C   B4D0               BEQ      ??NeuronsList_Paint_6
   \   0000015E   82B0               SUB      SP,SP,#+8
   \   00000160   0020               MOVS     R0,#+0
   \   00000162   0090               STR      R0,[SP, #+0]
   \   00000164   6921               MOVS     R1,#+105
   \   00000166   1020               MOVS     R0,#+16
   \   00000168   03B4               PUSH     {R0,R1}
   \   0000016A   1721               MOVS     R1,#+23
   \   0000016C   0A20               MOVS     R0,#+10
   \   0000016E   03B4               PUSH     {R0,R1}
   \   00000170   3B00               MOVS     R3,R7
   \   00000172   0E22               MOVS     R2,#+14
   \   00000174   0021               MOVS     R1,#+0
   \   00000176   4248               LDR      R0,??NeuronsList_Paint_0+0x2C  ;; 0xc156
   \   00000178   0A27               MOVS     R7,#+10
   \   0000017A   7E43               MULS     R6,R7,R6
   \   0000017C   3F4F               LDR      R7,??NeuronsList_Paint_0+0x28  ;; gProg
   \   0000017E   BE19               ADDS     R6,R7,R6
   \   00000180   3018               ADDS     R0,R6,R0
   \   00000182   ........           BL       Label
   \   00000186   06B0               ADD      SP,SP,#+24
   \   00000188   B2E7               B        ??NeuronsList_Paint_7
   7292                     }
   7293            
   7294               
   7295                 }
   7296                 if(OpisWezl)
   \                     ??NeuronsList_Paint_8:
   \   0000018A   E07F               LDRB     R0,[R4, #+31]
   \   0000018C   0028               CMP      R0,#+0
   \   0000018E   06D0               BEQ      ??NeuronsList_Paint_9
   7297                       {
   7298                           V_line(12,25,73,1);
   \   00000190   0123               MOVS     R3,#+1
   \   00000192   4922               MOVS     R2,#+73
   \   00000194   1921               MOVS     R1,#+25
   \   00000196   0C20               MOVS     R0,#+12
   \   00000198   ........           BL       V_line
   \   0000019C   0BE0               B        ??NeuronsList_Paint_10
   7299                     
   7300                       }else{
   7301                           V_line(20,25,73,1); 
   \                     ??NeuronsList_Paint_9:
   \   0000019E   0123               MOVS     R3,#+1
   \   000001A0   4922               MOVS     R2,#+73
   \   000001A2   1921               MOVS     R1,#+25
   \   000001A4   1420               MOVS     R0,#+20
   \   000001A6   ........           BL       V_line
   7302                           V_line(58,25,73,1); 
   \   000001AA   0123               MOVS     R3,#+1
   \   000001AC   4922               MOVS     R2,#+73
   \   000001AE   1921               MOVS     R1,#+25
   \   000001B0   3A20               MOVS     R0,#+58
   \   000001B2   ........           BL       V_line
   7303                       }
   7304                     
   7305                     
   7306                 Label("Node ",0,2,99,4,23,16,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??NeuronsList_Paint_10:
   \   000001B6   82B0               SUB      SP,SP,#+8
   \   000001B8   0020               MOVS     R0,#+0
   \   000001BA   0090               STR      R0,[SP, #+0]
   \   000001BC   8021               MOVS     R1,#+128
   \   000001BE   1020               MOVS     R0,#+16
   \   000001C0   03B4               PUSH     {R0,R1}
   \   000001C2   1721               MOVS     R1,#+23
   \   000001C4   0420               MOVS     R0,#+4
   \   000001C6   03B4               PUSH     {R0,R1}
   \   000001C8   6323               MOVS     R3,#+99
   \   000001CA   0222               MOVS     R2,#+2
   \   000001CC   0021               MOVS     R1,#+0
   \   000001CE   2D48               LDR      R0,??NeuronsList_Paint_0+0x30  ;; `?<Constant "Node ">`
   \   000001D0   ........           BL       Label
   \   000001D4   06B0               ADD      SP,SP,#+24
   7307                 if(OpisWezl==0) Label("Id ",0,37,99,2,23,16,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001D6   E07F               LDRB     R0,[R4, #+31]
   \   000001D8   0028               CMP      R0,#+0
   \   000001DA   37D1               BNE      ??NeuronsList_Paint_11
   \   000001DC   82B0               SUB      SP,SP,#+8
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   8021               MOVS     R1,#+128
   \   000001E2   1020               MOVS     R0,#+16
   \   000001E4   03B4               PUSH     {R0,R1}
   \   000001E6   1721               MOVS     R1,#+23
   \   000001E8   0220               MOVS     R0,#+2
   \   000001EA   03B4               PUSH     {R0,R1}
   \   000001EC   6323               MOVS     R3,#+99
   \   000001EE   2522               MOVS     R2,#+37
   \   000001F0   0021               MOVS     R1,#+0
   \   000001F2   25A0               ADR      R0,??NeuronsList_Paint_0+0x34  ;; "Id "
   \   000001F4   ........           BL       Label
   \   000001F8   06B0               ADD      SP,SP,#+24
   \   000001FA   27E0               B        ??NeuronsList_Paint_11
   7308          
   7309                     
   7310                }else{ //je¿eli tryb slave
   7311                   Label(Speech[g_leng].Niedostepne,2,2,70,14,59,1,127,0);
   \                     ??NeuronsList_Paint_2:
   \   000001FC   82B0               SUB      SP,SP,#+8
   \   000001FE   0020               MOVS     R0,#+0
   \   00000200   0090               STR      R0,[SP, #+0]
   \   00000202   7F21               MOVS     R1,#+127
   \   00000204   0120               MOVS     R0,#+1
   \   00000206   03B4               PUSH     {R0,R1}
   \   00000208   3B21               MOVS     R1,#+59
   \   0000020A   0E20               MOVS     R0,#+14
   \   0000020C   03B4               PUSH     {R0,R1}
   \   0000020E   4623               MOVS     R3,#+70
   \   00000210   0222               MOVS     R2,#+2
   \   00000212   1100               MOVS     R1,R2
   \   00000214   1D48               LDR      R0,??NeuronsList_Paint_0+0x38  ;; 0x69f
   \   00000216   3468               LDR      R4,[R6, #+0]
   \   00000218   6C43               MULS     R4,R5,R4
   \   0000021A   3C19               ADDS     R4,R7,R4
   \   0000021C   2018               ADDS     R0,R4,R0
   \   0000021E   ........           BL       Label
   \   00000222   06B0               ADD      SP,SP,#+24
   7312                   Label(Speech[g_leng].W_Trybie_Slave,2,2,60,14,55,1,127,0);
   \   00000224   82B0               SUB      SP,SP,#+8
   \   00000226   0020               MOVS     R0,#+0
   \   00000228   0090               STR      R0,[SP, #+0]
   \   0000022A   7F21               MOVS     R1,#+127
   \   0000022C   0120               MOVS     R0,#+1
   \   0000022E   03B4               PUSH     {R0,R1}
   \   00000230   3721               MOVS     R1,#+55
   \   00000232   0E20               MOVS     R0,#+14
   \   00000234   03B4               PUSH     {R0,R1}
   \   00000236   3C23               MOVS     R3,#+60
   \   00000238   0222               MOVS     R2,#+2
   \   0000023A   1100               MOVS     R1,R2
   \   0000023C   1448               LDR      R0,??NeuronsList_Paint_0+0x3C  ;; 0x6ae
   \   0000023E   3468               LDR      R4,[R6, #+0]
   \   00000240   6C43               MULS     R4,R5,R4
   \   00000242   3C19               ADDS     R4,R7,R4
   \   00000244   2018               ADDS     R0,R4,R0
   \   00000246   ........           BL       Label
   \   0000024A   06B0               ADD      SP,SP,#+24
   7313                } 
   7314                 
   7315                 
   7316                }//________________________________________________________________________
   \                     ??NeuronsList_Paint_11:
   \   0000024C   FEBC               POP      {R1-R7}
   \   0000024E   01BC               POP      {R0}
   \   00000250   0047               BX       R0               ;; return
   \   00000252   C046               Nop      
   \                     ??NeuronsList_Paint_0:
   \   00000254   ........           DC32     TextToChangeLength
   \   00000258   ........           DC32     g_counter
   \   0000025C   68290000           DC32     0x2968
   \   00000260   ........           DC32     g_leng
   \   00000264   ........           DC32     Speech
   \   00000268   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000026C   27060000           DC32     0x627
   \   00000270   ........           DC32     SlaveMode
   \   00000274   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000278   ACC00000           DC32     0xc0ac
   \   0000027C   ........           DC32     gProg
   \   00000280   56C10000           DC32     0xc156
   \   00000284   ........           DC32     `?<Constant "Node ">`
   \   00000288   49642000           DC8      "Id "
   \   0000028C   9F060000           DC32     0x69f
   \   00000290   AE060000           DC32     0x6ae

   \                                 In section .bss, align 4
   7317          int wpistmp=0;
   \                     wpistmp:
   \   00000000                      DS8 4
   7318          
   7319          
   7320                //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7321                void NeuronsList_Event(void)
   7322                {
   \                     NeuronsList_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7323          
   7324                      
   7325          
   7326                  //zdarzenie typu down "X"
   7327                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000002   B748               LDR      R0,??NeuronsList_Event_0  ;; X_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   2F28               CMP      R0,#+47
   \   0000000A   2EDB               BLT      ??NeuronsList_Event_1
   \   0000000C   3F28               CMP      R0,#+63
   \   0000000E   2CDA               BGE      ??NeuronsList_Event_1
   \   00000010   B448               LDR      R0,??NeuronsList_Event_0+0x4  ;; Y_down
   \   00000012   405E               LDRSH    R0,[R0, R1]
   \   00000014   7128               CMP      R0,#+113
   \   00000016   28DB               BLT      ??NeuronsList_Event_1
   \   00000018   7F28               CMP      R0,#+127
   \   0000001A   26DA               BGE      ??NeuronsList_Event_1
   7328                  {
   7329                    
   7330                    
   7331                    //MenuPaint();
   7332                    H_line(49,114,10,0);
   \   0000001C   0B00               MOVS     R3,R1
   \   0000001E   0A22               MOVS     R2,#+10
   \   00000020   7221               MOVS     R1,#+114
   \   00000022   3120               MOVS     R0,#+49
   \   00000024   ........           BL       H_line
   7333                    H_line(49,123,10,0); 
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0A22               MOVS     R2,#+10
   \   0000002C   7B21               MOVS     R1,#+123
   \   0000002E   3120               MOVS     R0,#+49
   \   00000030   ........           BL       H_line
   7334                    V_line(49,114,10,0); 
   \   00000034   0023               MOVS     R3,#+0
   \   00000036   0A22               MOVS     R2,#+10
   \   00000038   7221               MOVS     R1,#+114
   \   0000003A   3120               MOVS     R0,#+49
   \   0000003C   ........           BL       V_line
   7335                    V_line(58,114,10,0); 
   \   00000040   0023               MOVS     R3,#+0
   \   00000042   0A22               MOVS     R2,#+10
   \   00000044   7221               MOVS     R1,#+114
   \   00000046   3A20               MOVS     R0,#+58
   \   00000048   ........           BL       V_line
   7336                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000004C   A648               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   0000004E   0078               LDRB     R0,[R0, #+0]
   \   00000050   0028               CMP      R0,#+0
   \   00000052   0AD1               BNE      ??NeuronsList_Event_1
   \   00000054   A548               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   00000056   8021               MOVS     R1,#+128
   \   00000058   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000005A   0160               STR      R1,[R0, #+0]
   \   0000005C   A44A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   0000005E   A548               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000060   03C8               LDM      R0!,{R0,R1}
   \   00000062   0023               MOVS     R3,#+0
   \   00000064   0830               ADDS     R0,R0,#+8
   \   00000066   5941               ADCS     R1,R1,R3
   \   00000068   03C2               STM      R2!,{R0,R1}
   7337                    
   7338                  }
   7339            
   7340                  
   7341          
   7342          
   7343          
   7344              
   7345                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??NeuronsList_Event_1:
   \   0000006A   A348               LDR      R0,??NeuronsList_Event_0+0x18  ;; X_up
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   405E               LDRSH    R0,[R0, R1]
   \   00000070   2F28               CMP      R0,#+47
   \   00000072   3EDB               BLT      ??NeuronsList_Event_2
   \   00000074   3F28               CMP      R0,#+63
   \   00000076   3CDA               BGE      ??NeuronsList_Event_2
   \   00000078   A048               LDR      R0,??NeuronsList_Event_0+0x1C  ;; Y_up
   \   0000007A   405E               LDRSH    R0,[R0, R1]
   \   0000007C   7128               CMP      R0,#+113
   \   0000007E   38DB               BLT      ??NeuronsList_Event_2
   \   00000080   7F28               CMP      R0,#+127
   \   00000082   36DA               BGE      ??NeuronsList_Event_2
   7346                  {
   7347                    OpisWezl=0;
   \   00000084   9E4D               LDR      R5,??NeuronsList_Event_0+0x20  ;; TextToChangeLength
   \   00000086   0E00               MOVS     R6,R1
   \   00000088   3000               MOVS     R0,R6
   \   0000008A   E877               STRB     R0,[R5, #+31]
   7348                    Rej_poz=0;
   \   0000008C   EE64               STR      R6,[R5, #+76]
   7349                    if (ProgramChange) 
   \   0000008E   9648               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   00000090   297A               LDRB     R1,[R5, #+8]
   \   00000092   0029               CMP      R1,#+0
   \   00000094   0078               LDRB     R0,[R0, #+0]
   \   00000096   11D0               BEQ      ??NeuronsList_Event_3
   7350                    {
   7351                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000098   0028               CMP      R0,#+0
   \   0000009A   0AD1               BNE      ??NeuronsList_Event_4
   \   0000009C   9348               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   0000009E   8021               MOVS     R1,#+128
   \   000000A0   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000A2   0160               STR      R1,[R0, #+0]
   \   000000A4   924A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   000000A6   9348               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000000A8   03C8               LDM      R0!,{R0,R1}
   \   000000AA   0023               MOVS     R3,#+0
   \   000000AC   0830               ADDS     R0,R0,#+8
   \   000000AE   5941               ADCS     R1,R1,R3
   \   000000B0   03C2               STM      R2!,{R0,R1}
   7352                      MenuLevel=(MenuLevel*10+0);
   \                     ??NeuronsList_Event_4:
   \   000000B2   A86C               LDR      R0,[R5, #+72]
   \   000000B4   0A21               MOVS     R1,#+10
   \   000000B6   4843               MULS     R0,R1,R0
   \   000000B8   A864               STR      R0,[R5, #+72]
   \   000000BA   11E0               B        ??NeuronsList_Event_5
   7353                       
   7354                      
   7355                    }else{
   7356                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \                     ??NeuronsList_Event_3:
   \   000000BC   0028               CMP      R0,#+0
   \   000000BE   0AD1               BNE      ??NeuronsList_Event_6
   \   000000C0   8A48               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   000000C2   8021               MOVS     R1,#+128
   \   000000C4   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   000000C6   0160               STR      R1,[R0, #+0]
   \   000000C8   894A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   000000CA   8A48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000000CC   03C8               LDM      R0!,{R0,R1}
   \   000000CE   0023               MOVS     R3,#+0
   \   000000D0   0830               ADDS     R0,R0,#+8
   \   000000D2   5941               ADCS     R1,R1,R3
   \   000000D4   03C2               STM      R2!,{R0,R1}
   7357                      MenuLevel=(MenuLevel/10);
   \                     ??NeuronsList_Event_6:
   \   000000D6   A86C               LDR      R0,[R5, #+72]
   \   000000D8   0A21               MOVS     R1,#+10
   \   000000DA   ........           BL       __aeabi_idivmod
   \   000000DE   A864               STR      R0,[R5, #+72]
   7358                    }
   7359                    
   7360                    MenuPaint();
   \                     ??NeuronsList_Event_5:
   \   000000E0   ........           BL       MenuPaint
   7361                    WaitOnCheckNode=0;
   \   000000E4   4035               ADDS     R5,R5,#+64
   \   000000E6   3000               MOVS     R0,R6
   \   000000E8   0100               MOVS     R1,R0
   \   000000EA   03C5               STM      R5!,{R0,R1}
   7362                  }
   7363                  else{
   7364            
   7365                           
   7366                if (!SlaveMode)//je¿eli tryb Master
   7367                {
   7368                      char LabelButt[2]; LabelButt[1]=0;
   7369                      LabelButt[0]=30;
   7370                      if ((Button(LabelButt,24,3,19,19))  && ((g_counter>Touch_EventTime+100) || (Touch_EventTime>g_counter)) && (NeuronsListLine>0))            
   7371                      {
   7372                        Touch_EventTime=g_counter;
   7373                        NeuronsListLine--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   7374                        MenuPaint();
   7375                      } 
   7376                      
   7377                      LabelButt[0]=31;
   7378                      if ((Button(LabelButt,3,3,19,19)) && ((g_counter>Touch_EventTime+100) || (Touch_EventTime>g_counter)) && (NeuronsListLine<NumberNeurons-6))
   7379                      {
   7380                        Touch_EventTime=g_counter;
   7381                        NeuronsListLine++;    
   7382                        MenuPaint();
   7383                      }
   7384                      
   7385                      
   7386                      if (OpisWezl) LabelButt[0]=36; else LabelButt[0]=35;
   7387                      if (Button(LabelButt,46,3,14,19)==1){if (OpisWezl) OpisWezl=0; else OpisWezl=1;  MenuPaint();}
   7388                      
   7389                      
   7390                      for (char i=0; i<6; i++) 
   7391                      {
   7392                       if ((Y_down>25+i*12) && (Y_down<25+((i+1)*12)))                
   7393                        {
   7394                           MenuPaint();
   7395                           H_line(1,26+i*12,62,1); 
   7396                           H_line(1,24+(i+1)*12,62,1); 
   7397                        }
   7398                        if ((Y_up>25+i*12) && (Y_up<25+((i+1)*12)))                
   7399                        { 
   7400                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   7401                          if (OpisWezl==0)
   7402                          {
   7403                              NeuronIdChange=&(gProg.NeuronsIdTab[(5-i)+NeuronsListLine]);
   7404                              
   7405                              //je¿eli jest ju¿ nadany ID
   7406                              if (gProg.NeuronsIdTab[(5-i)+NeuronsListLine]>0)
   7407                              {
   7408                                NeuronNrChange=(6-i)+NeuronsListLine;
   7409                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   7410                                TextToChangeLength=NodeLabelLethers;
   7411                                MenuLevel=(MenuLevel*10+3);
   7412                              }else{
   7413                                MenuLevel=(MenuLevel*10+1);
   7414                              }
   7415                          }else{
   7416                              if (gProg.NodeLabel[(5-i)+NeuronsListLine][0]!=0)
   7417                              {
   7418                                NeuronNrChange=(6-i)+NeuronsListLine;
   7419                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   7420                                TextToChangeLength=NodeLabelLethers;
   7421                                MenuLevel=(MenuLevel*10+3);
   7422                              }else{  
   7423                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   7424                                TextToChangeLength=NodeLabelLethers;
   7425                                MenuLevel=(MenuLevel*10+2); 
   7426                                ProgramChange=1;
   7427                              }
   7428                              
   7429                          }
   7430                          MenuPaint();
   7431                        }
   7432                       
   7433                      }
   7434                }
   7435                  }
   7436          
   7437                }//________________________________________________________________________
   \                     ??NeuronsList_Event_7:
   \   000000EC   F8BC               POP      {R3-R7}
   \   000000EE   01BC               POP      {R0}
   \   000000F0   0047               BX       R0               ;; return
   \                     ??NeuronsList_Event_2:
   \   000000F2   8448               LDR      R0,??NeuronsList_Event_0+0x24  ;; SlaveMode
   \   000000F4   0078               LDRB     R0,[R0, #+0]
   \   000000F6   0028               CMP      R0,#+0
   \   000000F8   F8D1               BNE      ??NeuronsList_Event_7
   \   000000FA   0E00               MOVS     R6,R1
   \   000000FC   6C46               MOV      R4,SP
   \   000000FE   6070               STRB     R0,[R4, #+1]
   \   00000100   1E20               MOVS     R0,#+30
   \   00000102   2070               STRB     R0,[R4, #+0]
   \   00000104   7E4D               LDR      R5,??NeuronsList_Event_0+0x20  ;; TextToChangeLength
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   1320               MOVS     R0,#+19
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   0300               MOVS     R3,R0
   \   0000010E   0322               MOVS     R2,#+3
   \   00000110   1821               MOVS     R1,#+24
   \   00000112   02A8               ADD      R0,SP,#+8
   \   00000114   ........           BL       Button
   \   00000118   02B0               ADD      SP,SP,#+8
   \   0000011A   0028               CMP      R0,#+0
   \   0000011C   1ED0               BEQ      ??NeuronsList_Event_8
   \   0000011E   7548               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000120   03C8               LDM      R0!,{R0,R1}
   \   00000122   2A00               MOVS     R2,R5
   \   00000124   3832               ADDS     R2,R2,#+56
   \   00000126   0CCA               LDM      R2!,{R2,R3}
   \   00000128   0027               MOVS     R7,#+0
   \   0000012A   6432               ADDS     R2,R2,#+100
   \   0000012C   7B41               ADCS     R3,R3,R7
   \   0000012E   8B42               CMP      R3,R1
   \   00000130   0AD3               BCC      ??NeuronsList_Event_9
   \   00000132   01D8               BHI      ??NeuronsList_Event_10
   \   00000134   8242               CMP      R2,R0
   \   00000136   07D3               BCC      ??NeuronsList_Event_9
   \                     ??NeuronsList_Event_10:
   \   00000138   2A00               MOVS     R2,R5
   \   0000013A   3832               ADDS     R2,R2,#+56
   \   0000013C   0CCA               LDM      R2!,{R2,R3}
   \   0000013E   9942               CMP      R1,R3
   \   00000140   0CD8               BHI      ??NeuronsList_Event_8
   \   00000142   01D3               BCC      ??NeuronsList_Event_9
   \   00000144   9042               CMP      R0,R2
   \   00000146   09D2               BCS      ??NeuronsList_Event_8
   \                     ??NeuronsList_Event_9:
   \   00000148   AA79               LDRB     R2,[R5, #+6]
   \   0000014A   002A               CMP      R2,#+0
   \   0000014C   06D0               BEQ      ??NeuronsList_Event_8
   \   0000014E   2B00               MOVS     R3,R5
   \   00000150   3833               ADDS     R3,R3,#+56
   \   00000152   03C3               STM      R3!,{R0,R1}
   \   00000154   501E               SUBS     R0,R2,#+1
   \   00000156   A871               STRB     R0,[R5, #+6]
   \   00000158   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_8:
   \   0000015C   1F20               MOVS     R0,#+31
   \   0000015E   2070               STRB     R0,[R4, #+0]
   \   00000160   82B0               SUB      SP,SP,#+8
   \   00000162   1320               MOVS     R0,#+19
   \   00000164   0090               STR      R0,[SP, #+0]
   \   00000166   0300               MOVS     R3,R0
   \   00000168   0322               MOVS     R2,#+3
   \   0000016A   1100               MOVS     R1,R2
   \   0000016C   02A8               ADD      R0,SP,#+8
   \   0000016E   ........           BL       Button
   \   00000172   02B0               ADD      SP,SP,#+8
   \   00000174   0028               CMP      R0,#+0
   \   00000176   1ED0               BEQ      ??NeuronsList_Event_11
   \   00000178   5E48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   0000017A   03C8               LDM      R0!,{R0,R1}
   \   0000017C   2A00               MOVS     R2,R5
   \   0000017E   3832               ADDS     R2,R2,#+56
   \   00000180   0CCA               LDM      R2!,{R2,R3}
   \   00000182   0027               MOVS     R7,#+0
   \   00000184   6432               ADDS     R2,R2,#+100
   \   00000186   7B41               ADCS     R3,R3,R7
   \   00000188   8B42               CMP      R3,R1
   \   0000018A   0AD3               BCC      ??NeuronsList_Event_12
   \   0000018C   01D8               BHI      ??NeuronsList_Event_13
   \   0000018E   8242               CMP      R2,R0
   \   00000190   07D3               BCC      ??NeuronsList_Event_12
   \                     ??NeuronsList_Event_13:
   \   00000192   2A00               MOVS     R2,R5
   \   00000194   3832               ADDS     R2,R2,#+56
   \   00000196   0CCA               LDM      R2!,{R2,R3}
   \   00000198   9942               CMP      R1,R3
   \   0000019A   0CD8               BHI      ??NeuronsList_Event_11
   \   0000019C   01D3               BCC      ??NeuronsList_Event_12
   \   0000019E   9042               CMP      R0,R2
   \   000001A0   09D2               BCS      ??NeuronsList_Event_11
   \                     ??NeuronsList_Event_12:
   \   000001A2   AA79               LDRB     R2,[R5, #+6]
   \   000001A4   1D2A               CMP      R2,#+29
   \   000001A6   06D2               BCS      ??NeuronsList_Event_11
   \   000001A8   2B00               MOVS     R3,R5
   \   000001AA   3833               ADDS     R3,R3,#+56
   \   000001AC   03C3               STM      R3!,{R0,R1}
   \   000001AE   521C               ADDS     R2,R2,#+1
   \   000001B0   AA71               STRB     R2,[R5, #+6]
   \   000001B2   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_11:
   \   000001B6   E87F               LDRB     R0,[R5, #+31]
   \   000001B8   0028               CMP      R0,#+0
   \   000001BA   02D0               BEQ      ??NeuronsList_Event_14
   \   000001BC   2420               MOVS     R0,#+36
   \   000001BE   2070               STRB     R0,[R4, #+0]
   \   000001C0   01E0               B        ??NeuronsList_Event_15
   \                     ??NeuronsList_Event_14:
   \   000001C2   2320               MOVS     R0,#+35
   \   000001C4   2070               STRB     R0,[R4, #+0]
   \                     ??NeuronsList_Event_15:
   \   000001C6   82B0               SUB      SP,SP,#+8
   \   000001C8   1320               MOVS     R0,#+19
   \   000001CA   0090               STR      R0,[SP, #+0]
   \   000001CC   0E23               MOVS     R3,#+14
   \   000001CE   0322               MOVS     R2,#+3
   \   000001D0   2E21               MOVS     R1,#+46
   \   000001D2   02A8               ADD      R0,SP,#+8
   \   000001D4   ........           BL       Button
   \   000001D8   02B0               ADD      SP,SP,#+8
   \   000001DA   0128               CMP      R0,#+1
   \   000001DC   1FD1               BNE      ??NeuronsList_Event_16
   \   000001DE   E87F               LDRB     R0,[R5, #+31]
   \   000001E0   411E               SUBS     R1,R0,#+1
   \   000001E2   8941               SBCS     R1,R1,R1
   \   000001E4   C90F               LSRS     R1,R1,#+31
   \   000001E6   E977               STRB     R1,[R5, #+31]
   \   000001E8   ........           BL       MenuPaint
   \   000001EC   17E0               B        ??NeuronsList_Event_16
   \                     ??NeuronsList_Event_17:
   \   000001EE   0A23               MOVS     R3,#+10
   \   000001F0   4B43               MULS     R3,R1,R3
   \   000001F2   C318               ADDS     R3,R0,R3
   \   000001F4   444C               LDR      R4,??NeuronsList_Event_0+0x28  ;; 0xc156
   \   000001F6   1C5D               LDRB     R4,[R3, R4]
   \   000001F8   002C               CMP      R4,#+0
   \   000001FA   58D1               BNE      ??NeuronsList_Event_18
   \   000001FC   4248               LDR      R0,??NeuronsList_Event_0+0x28  ;; 0xc156
   \   000001FE   1818               ADDS     R0,R3,R0
   \   00000200   2865               STR      R0,[R5, #+80]
   \   00000202   0A20               MOVS     R0,#+10
   \   00000204   2870               STRB     R0,[R5, #+0]
   \   00000206   A86C               LDR      R0,[R5, #+72]
   \   00000208   0A21               MOVS     R1,#+10
   \   0000020A   4843               MULS     R0,R1,R0
   \   0000020C   801C               ADDS     R0,R0,#+2
   \   0000020E   A864               STR      R0,[R5, #+72]
   \   00000210   0120               MOVS     R0,#+1
   \   00000212   2872               STRB     R0,[R5, #+8]
   \                     ??NeuronsList_Event_19:
   \   00000214   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_20:
   \   00000218   761C               ADDS     R6,R6,#+1
   \   0000021A   3606               LSLS     R6,R6,#+24
   \   0000021C   360E               LSRS     R6,R6,#+24
   \                     ??NeuronsList_Event_16:
   \   0000021E   3000               MOVS     R0,R6
   \   00000220   0628               CMP      R0,#+6
   \   00000222   00D3               BCC      .+4
   \   00000224   62E7               B        ??NeuronsList_Event_7
   \   00000226   3700               MOVS     R7,R6
   \   00000228   0C20               MOVS     R0,#+12
   \   0000022A   4743               MULS     R7,R0,R7
   \   0000022C   3C00               MOVS     R4,R7
   \   0000022E   1934               ADDS     R4,R4,#+25
   \   00000230   2C48               LDR      R0,??NeuronsList_Event_0+0x4  ;; Y_down
   \   00000232   0021               MOVS     R1,#+0
   \   00000234   415E               LDRSH    R1,[R0, R1]
   \   00000236   8C42               CMP      R4,R1
   \   00000238   13DA               BGE      ??NeuronsList_Event_21
   \   0000023A   3800               MOVS     R0,R7
   \   0000023C   2530               ADDS     R0,R0,#+37
   \   0000023E   8142               CMP      R1,R0
   \   00000240   0FDA               BGE      ??NeuronsList_Event_21
   \   00000242   ........           BL       MenuPaint
   \   00000246   0123               MOVS     R3,#+1
   \   00000248   3E22               MOVS     R2,#+62
   \   0000024A   3900               MOVS     R1,R7
   \   0000024C   1A31               ADDS     R1,R1,#+26
   \   0000024E   1800               MOVS     R0,R3
   \   00000250   ........           BL       H_line
   \   00000254   0123               MOVS     R3,#+1
   \   00000256   3E22               MOVS     R2,#+62
   \   00000258   3900               MOVS     R1,R7
   \   0000025A   2431               ADDS     R1,R1,#+36
   \   0000025C   1800               MOVS     R0,R3
   \   0000025E   ........           BL       H_line
   \                     ??NeuronsList_Event_21:
   \   00000262   2648               LDR      R0,??NeuronsList_Event_0+0x1C  ;; Y_up
   \   00000264   0021               MOVS     R1,#+0
   \   00000266   405E               LDRSH    R0,[R0, R1]
   \   00000268   8442               CMP      R4,R0
   \   0000026A   D5DA               BGE      ??NeuronsList_Event_20
   \   0000026C   2537               ADDS     R7,R7,#+37
   \   0000026E   B842               CMP      R0,R7
   \   00000270   D2DA               BGE      ??NeuronsList_Event_20
   \   00000272   1D48               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   00000274   0078               LDRB     R0,[R0, #+0]
   \   00000276   0028               CMP      R0,#+0
   \   00000278   0AD1               BNE      ??NeuronsList_Event_22
   \   0000027A   1C48               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   0000027C   8021               MOVS     R1,#+128
   \   0000027E   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000280   0160               STR      R1,[R0, #+0]
   \   00000282   1B4A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   00000284   1B48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000286   03C8               LDM      R0!,{R0,R1}
   \   00000288   0023               MOVS     R3,#+0
   \   0000028A   0830               ADDS     R0,R0,#+8
   \   0000028C   5941               ADCS     R1,R1,R3
   \   0000028E   03C2               STM      R2!,{R0,R1}
   \                     ??NeuronsList_Event_22:
   \   00000290   AA79               LDRB     R2,[R5, #+6]
   \   00000292   3000               MOVS     R0,R6
   \   00000294   111A               SUBS     R1,R2,R0
   \   00000296   1D48               LDR      R0,??NeuronsList_Event_0+0x2C  ;; gProg
   \   00000298   EB7F               LDRB     R3,[R5, #+31]
   \   0000029A   002B               CMP      R3,#+0
   \   0000029C   A7D1               BNE      ??NeuronsList_Event_17
   \   0000029E   1C4B               LDR      R3,??NeuronsList_Event_0+0x30  ;; 0xc0ac
   \   000002A0   8C00               LSLS     R4,R1,#+2
   \   000002A2   0419               ADDS     R4,R0,R4
   \   000002A4   E318               ADDS     R3,R4,R3
   \   000002A6   EB65               STR      R3,[R5, #+92]
   \   000002A8   1B68               LDR      R3,[R3, #+0]
   \   000002AA   012B               CMP      R3,#+1
   \   000002AC   12DB               BLT      ??NeuronsList_Event_23
   \                     ??NeuronsList_Event_18:
   \   000002AE   0623               MOVS     R3,#+6
   \   000002B0   3400               MOVS     R4,R6
   \   000002B2   1B1B               SUBS     R3,R3,R4
   \   000002B4   9A18               ADDS     R2,R3,R2
   \   000002B6   EA70               STRB     R2,[R5, #+3]
   \   000002B8   134A               LDR      R2,??NeuronsList_Event_0+0x28  ;; 0xc156
   \   000002BA   0A23               MOVS     R3,#+10
   \   000002BC   5943               MULS     R1,R3,R1
   \   000002BE   4018               ADDS     R0,R0,R1
   \   000002C0   8018               ADDS     R0,R0,R2
   \   000002C2   2865               STR      R0,[R5, #+80]
   \   000002C4   1800               MOVS     R0,R3
   \   000002C6   2870               STRB     R0,[R5, #+0]
   \   000002C8   A86C               LDR      R0,[R5, #+72]
   \   000002CA   1900               MOVS     R1,R3
   \   000002CC   4843               MULS     R0,R1,R0
   \   000002CE   C01C               ADDS     R0,R0,#+3
   \   000002D0   A864               STR      R0,[R5, #+72]
   \   000002D2   9FE7               B        ??NeuronsList_Event_19
   \                     ??NeuronsList_Event_23:
   \   000002D4   A86C               LDR      R0,[R5, #+72]
   \   000002D6   0A21               MOVS     R1,#+10
   \   000002D8   4843               MULS     R0,R1,R0
   \   000002DA   401C               ADDS     R0,R0,#+1
   \   000002DC   A864               STR      R0,[R5, #+72]
   \   000002DE   99E7               B        ??NeuronsList_Event_19
   \                     ??NeuronsList_Event_0:
   \   000002E0   ........           DC32     X_down
   \   000002E4   ........           DC32     Y_down
   \   000002E8   E9D71300           DC32     0x13d7e9
   \   000002EC   30F4FFFF           DC32     0xfffff430
   \   000002F0   ........           DC32     ButtonBipCounter
   \   000002F4   ........           DC32     g_counter
   \   000002F8   ........           DC32     X_up
   \   000002FC   ........           DC32     Y_up
   \   00000300   ........           DC32     TextToChangeLength
   \   00000304   ........           DC32     SlaveMode
   \   00000308   56C10000           DC32     0xc156
   \   0000030C   ........           DC32     gProg
   \   00000310   ACC00000           DC32     0xc0ac
   7438              
   7439          
   7440          

   \                                 In section Debug.txt, align 4, keep-with-next
   7441              void NeuronsList_Refresh(void)
   7442              {  
   \                     NeuronsList_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   B848               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   1428               CMP      R0,#+20
   \   00000008   03D2               BCS      ??NeuronsList_Refresh_1
   7443                
   7444                //for (char i=0; i<NumberNeurons; i++)  MainStage.SendStageChange[i]=20;
   7445                
   7446                
   7447                
   7448                static char Dzielnik20;
   7449                
   7450                //char CheckTrans=0;
   7451                //if (WaitOnCheckNode>g_counter) CheckTrans=1;
   7452                
   7453                
   7454                if (Dzielnik20<20) Dzielnik20++; else Dzielnik20=0;
   \   0000000A   B649               LDR      R1,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000000C   401C               ADDS     R0,R0,#+1
   \   0000000E   0870               STRB     R0,[R1, #+0]
   \   00000010   02E0               B        ??NeuronsList_Refresh_2
   \                     ??NeuronsList_Refresh_1:
   \   00000012   B448               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   0170               STRB     R1,[R0, #+0]
   \                     ??NeuronsList_Refresh_2:
   \   00000018   B348               LDR      R0,??NeuronsList_Refresh_0+0x4  ;; SlaveMode
   \   0000001A   0078               LDRB     R0,[R0, #+0]
   \   0000001C   B349               LDR      R1,??NeuronsList_Refresh_0+0x8  ;; TextToChangeLength + 31
   \   0000001E   0978               LDRB     R1,[R1, #+0]
   \   00000020   0143               ORRS     R1,R1,R0
   \   00000022   00D0               BEQ      .+4
   \   00000024   5BE1               B        ??NeuronsList_Refresh_3
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   0190               STR      R0,[SP, #+4]
   \   0000002A   38E0               B        ??NeuronsList_Refresh_4
   7455                
   7456                if ((!SlaveMode) && (OpisWezl==0))//je¿eli tryb Master
   7457                {
   7458                  
   7459                  char ERRx1=0;  //iloæ b³êdów pojedyñczych
   7460                  char ERRx2=0;  //iloæ b³êdów podwójnych (dwukrotny brak komunikacji w czasie TimeUnitQual)
   7461                  char ERRx3=0;  //iloæ b³êdów podtrujnych i wiêkszych (przynajmniej trzykrotny brak komunikacji w czasie TimeUnitQual)
   7462                  char CurErr=0;
   7463                  char LIC=0;
   7464                  char Ypoz;
   7465                    for (char i=0; i<6; i++) 
   7466                    {
   7467                      ERRx1=0; ERRx2=0; ERRx3=0; CurErr=0;
   7468                      Ypoz=28+i*12;
   7469                     
   7470                      //ocena jakoci
   7471                      CleanCanvasArea(12,Ypoz-2,8,11,0);
   7472                      if (TransQuality.Mensur[(5-i)+NeuronsListLine])  //jezeli wykryta transmisja
   7473                      {
   7474                        if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Remote)
   7475                        {      
   7476                           
   7477                            if ((Dzielnik20<10) && (MainStage.StageI[(6-i)+NeuronsListLine].Port& 0x8000) && ((MainStage.StageI[(6-i)+NeuronsListLine].Port)!=0x8AAA))
   7478                            {
   7479                                CopyToCanvasPoint((char*)BateriaWyladowana, 12, Ypoz-1, 6,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   7480                            }
   7481                          else
   7482                            {
   7483                          
   7484                          
   7485                                char MI=TransQuality.MensurIndex;
   7486                                char PT=0;
   7487                                for (char b=0; b<5; b++)
   7488                                {
   7489                                  if ((TransQuality.Mensur[(5-i)+NeuronsListLine]) & (0x1 << MI)) PT++;
   7490                                  if (MI>0) MI--; else MI=31;   
   7491                                }
   7492                            
   7493                                  H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   7494                                  if (PT>1)H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   7495                                  if (PT>2)H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   7496                                  if (PT>3)H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)  
   7497                           }
   7498           
   7499                       
   7500                        }
   7501                        else if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Period)
   7502                        {
   7503                        }
   7504                        else{
   7505                              
   7506                          
   7507                                for (char b=0; b<32; b++)
   7508                                      {
   7509                                        if ((TransQuality.Mensur[(5-i)+NeuronsListLine]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   7510                                        {  
   7511                                          CurErr=0;
   7512                                        }else{
   7513                                          CurErr++;
   7514                                          if (CurErr==1) {ERRx1++;}
   7515                                          if (CurErr==2) {ERRx2++; ERRx1--; }
   7516                                          if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   7517                        
   7518                                        }
   7519                                        
   7520                                      }
   7521                              //je¿eli trwa sprawdzanie transmisji wywietl migaj¹c¹ klepsydre 
   7522                             /* if (CheckTrans)
   7523                              {
   7524                                if (Dzielnik20<12)
   7525                                {
   7526                                  CopyToCanvasPoint((char*)Klepsydra, 13, Ypoz-1, 5,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   7527                                }else{
   7528                                  CleanCanvasArea(13, Ypoz-1, 5, 8, 0);
   7529                                }
   7530                              }else{
   7531                                */
   7532                                
   7533                                //wskanik jakoci              
   7534                                H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   7535                                if ((ERRx1<=12)  && (ERRx2<=10)  && (ERRx3<=5)) H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   7536                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   7537                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)    
   7538                             // }
   7539                        }       
   7540                                     
   7541                      }
   7542                      
   7543                      if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Period)
   7544                        {
   7545              
   7546                          if ((Dzielnik20<10) && (MainStage.StageI[(6-i)+NeuronsListLine].Port& 0x8000) && (((unsigned short)(MainStage.StageI[(6-i)+NeuronsListLine].Port))!=0x8AAA))
   7547                          {
   7548                              CopyToCanvasPoint((char*)BateriaWyladowana, 12, Ypoz-1, 6,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   7549                          }
   7550                        else
   7551                          {
   7552                          
   7553                              LIC=0;
   7554                              for (char k=0; k<5; k++)
   7555                              {
   7556                                if ((TransQuality.SlowMensur[(5-i)+NeuronsListLine]>>k)&0x1) LIC++;
   \                     ??NeuronsList_Refresh_5:
   \   0000002C   B04A               LDR      R2,??NeuronsList_Refresh_0+0xC  ;; TransQuality
   \   0000002E   1218               ADDS     R2,R2,R0
   \   00000030   127A               LDRB     R2,[R2, #+8]
   \   00000032   0A41               ASRS     R2,R2,R1
   \   00000034   D207               LSLS     R2,R2,#+31
   \   00000036   02D5               BPL      ??NeuronsList_Refresh_6
   \   00000038   641C               ADDS     R4,R4,#+1
   \   0000003A   2406               LSLS     R4,R4,#+24
   \   0000003C   240E               LSRS     R4,R4,#+24
   7557                              }
   \                     ??NeuronsList_Refresh_6:
   \   0000003E   491C               ADDS     R1,R1,#+1
   \   00000040   0906               LSLS     R1,R1,#+24
   \   00000042   090E               LSRS     R1,R1,#+24
   \                     ??NeuronsList_Refresh_7:
   \   00000044   0A00               MOVS     R2,R1
   \   00000046   052A               CMP      R2,#+5
   \   00000048   F0D3               BCC      ??NeuronsList_Refresh_5
   7558                              if (LIC>0) 
   \   0000004A   2000               MOVS     R0,R4
   \   0000004C   0FD0               BEQ      ??NeuronsList_Refresh_8
   7559                              {
   7560                                H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   \   0000004E   009F               LDR      R7,[SP, #+0]
   \   00000050   3F06               LSLS     R7,R7,#+24
   \   00000052   3F0E               LSRS     R7,R7,#+24
   \   00000054   0123               MOVS     R3,#+1
   \   00000056   1A00               MOVS     R2,R3
   \   00000058   3900               MOVS     R1,R7
   \   0000005A   0F20               MOVS     R0,#+15
   \   0000005C   ........           BL       H_line
   7561                                H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)                      
   \   00000060   0123               MOVS     R3,#+1
   \   00000062   0322               MOVS     R2,#+3
   \   00000064   BF1C               ADDS     R7,R7,#+2
   \   00000066   3900               MOVS     R1,R7
   \   00000068   0E20               MOVS     R0,#+14
   \   0000006A   ........           BL       H_line
   7562                              }
   7563                              if (LIC>1)
   \                     ??NeuronsList_Refresh_8:
   \   0000006E   022C               CMP      R4,#+2
   \   00000070   10D3               BCC      ??NeuronsList_Refresh_9
   7564                              {
   7565                                H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   \   00000072   009F               LDR      R7,[SP, #+0]
   \   00000074   3F06               LSLS     R7,R7,#+24
   \   00000076   3F0E               LSRS     R7,R7,#+24
   \   00000078   0123               MOVS     R3,#+1
   \   0000007A   0522               MOVS     R2,#+5
   \   0000007C   3900               MOVS     R1,R7
   \   0000007E   091D               ADDS     R1,R1,#+4
   \   00000080   0D20               MOVS     R0,#+13
   \   00000082   ........           BL       H_line
   7566                                H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ) 
   \   00000086   0123               MOVS     R3,#+1
   \   00000088   0722               MOVS     R2,#+7
   \   0000008A   BF1D               ADDS     R7,R7,#+6
   \   0000008C   3900               MOVS     R1,R7
   \   0000008E   0C20               MOVS     R0,#+12
   \   00000090   ........           BL       H_line
   7567                              }
   \                     ??NeuronsList_Refresh_9:
   \   00000094   0198               LDR      R0,[SP, #+4]
   \   00000096   401C               ADDS     R0,R0,#+1
   \   00000098   0006               LSLS     R0,R0,#+24
   \   0000009A   000E               LSRS     R0,R0,#+24
   \   0000009C   0190               STR      R0,[SP, #+4]
   \                     ??NeuronsList_Refresh_4:
   \   0000009E   0198               LDR      R0,[SP, #+4]
   \   000000A0   0006               LSLS     R0,R0,#+24
   \   000000A2   000E               LSRS     R0,R0,#+24
   \   000000A4   0628               CMP      R0,#+6
   \   000000A6   00D3               BCC      .+4
   \   000000A8   19E1               B        ??NeuronsList_Refresh_3
   \   000000AA   0024               MOVS     R4,#+0
   \   000000AC   2600               MOVS     R6,R4
   \   000000AE   2500               MOVS     R5,R4
   \   000000B0   2700               MOVS     R7,R4
   \   000000B2   0198               LDR      R0,[SP, #+4]
   \   000000B4   0C21               MOVS     R1,#+12
   \   000000B6   4843               MULS     R0,R1,R0
   \   000000B8   1C30               ADDS     R0,R0,#+28
   \   000000BA   0006               LSLS     R0,R0,#+24
   \   000000BC   000E               LSRS     R0,R0,#+24
   \   000000BE   0090               STR      R0,[SP, #+0]
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   2000               MOVS     R0,R4
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   0B23               MOVS     R3,#+11
   \   000000C8   0822               MOVS     R2,#+8
   \   000000CA   0298               LDR      R0,[SP, #+8]
   \   000000CC   811E               SUBS     R1,R0,#+2
   \   000000CE   0906               LSLS     R1,R1,#+24
   \   000000D0   090E               LSRS     R1,R1,#+24
   \   000000D2   0C20               MOVS     R0,#+12
   \   000000D4   ........           BL       CleanCanvasArea
   \   000000D8   02B0               ADD      SP,SP,#+8
   \   000000DA   0198               LDR      R0,[SP, #+4]
   \   000000DC   0006               LSLS     R0,R0,#+24
   \   000000DE   000E               LSRS     R0,R0,#+24
   \   000000E0   0290               STR      R0,[SP, #+8]
   \   000000E2   8448               LDR      R0,??NeuronsList_Refresh_0+0x10  ;; TextToChangeLength + 6
   \   000000E4   0078               LDRB     R0,[R0, #+0]
   \   000000E6   0299               LDR      R1,[SP, #+8]
   \   000000E8   411A               SUBS     R1,R0,R1
   \   000000EA   8800               LSLS     R0,R1,#+2
   \   000000EC   804A               LDR      R2,??NeuronsList_Refresh_0+0xC  ;; TransQuality
   \   000000EE   1018               ADDS     R0,R2,R0
   \   000000F0   006E               LDR      R0,[R0, #+96]
   \   000000F2   0028               CMP      R0,#+0
   \   000000F4   00D1               BNE      .+4
   \   000000F6   C4E0               B        ??NeuronsList_Refresh_10
   \   000000F8   0C22               MOVS     R2,#+12
   \   000000FA   4A43               MULS     R2,R1,R2
   \   000000FC   7E4B               LDR      R3,??NeuronsList_Refresh_0+0x14  ;; NeuronsList
   \   000000FE   9A18               ADDS     R2,R3,R2
   \   00000100   3C32               ADDS     R2,R2,#+60
   \   00000102   1278               LDRB     R2,[R2, #+0]
   \   00000104   042A               CMP      R2,#+4
   \   00000106   5DD1               BNE      ??NeuronsList_Refresh_11
   \   00000108   764A               LDR      R2,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000010A   1278               LDRB     R2,[R2, #+0]
   \   0000010C   0A2A               CMP      R2,#+10
   \   0000010E   19D2               BCS      ??NeuronsList_Refresh_12
   \   00000110   7A4A               LDR      R2,??NeuronsList_Refresh_0+0x18  ;; MainStage
   \   00000112   8C23               MOVS     R3,#+140
   \   00000114   5B00               LSLS     R3,R3,#+1        ;; #+280
   \   00000116   1424               MOVS     R4,#+20
   \   00000118   6143               MULS     R1,R4,R1
   \   0000011A   5118               ADDS     R1,R2,R1
   \   0000011C   C95A               LDRH     R1,[R1, R3]
   \   0000011E   0A04               LSLS     R2,R1,#+16
   \   00000120   10D5               BPL      ??NeuronsList_Refresh_12
   \   00000122   774A               LDR      R2,??NeuronsList_Refresh_0+0x1C  ;; 0x8aaa
   \   00000124   9142               CMP      R1,R2
   \   00000126   0DD0               BEQ      ??NeuronsList_Refresh_12
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   0920               MOVS     R0,#+9
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   0623               MOVS     R3,#+6
   \   00000130   0298               LDR      R0,[SP, #+8]
   \   00000132   421E               SUBS     R2,R0,#+1
   \   00000134   1206               LSLS     R2,R2,#+24
   \   00000136   120E               LSRS     R2,R2,#+24
   \   00000138   0C21               MOVS     R1,#+12
   \   0000013A   7248               LDR      R0,??NeuronsList_Refresh_0+0x20  ;; BateriaWyladowana
   \   0000013C   ........           BL       CopyToCanvasPoint
   \   00000140   02B0               ADD      SP,SP,#+8
   \   00000142   9EE0               B        ??NeuronsList_Refresh_10
   \                     ??NeuronsList_Refresh_12:
   \   00000144   6A49               LDR      R1,??NeuronsList_Refresh_0+0xC  ;; TransQuality
   \   00000146   0978               LDRB     R1,[R1, #+0]
   \   00000148   2C00               MOVS     R4,R5
   \   0000014A   2200               MOVS     R2,R4
   \   0000014C   03E0               B        ??NeuronsList_Refresh_13
   \                     ??NeuronsList_Refresh_14:
   \   0000014E   1F21               MOVS     R1,#+31
   \                     ??NeuronsList_Refresh_15:
   \   00000150   521C               ADDS     R2,R2,#+1
   \   00000152   1206               LSLS     R2,R2,#+24
   \   00000154   120E               LSRS     R2,R2,#+24
   \                     ??NeuronsList_Refresh_13:
   \   00000156   1300               MOVS     R3,R2
   \   00000158   052B               CMP      R3,#+5
   \   0000015A   0CD2               BCS      ??NeuronsList_Refresh_16
   \   0000015C   0123               MOVS     R3,#+1
   \   0000015E   8B40               LSLS     R3,R3,R1
   \   00000160   0340               ANDS     R3,R3,R0
   \   00000162   02D0               BEQ      ??NeuronsList_Refresh_17
   \   00000164   641C               ADDS     R4,R4,#+1
   \   00000166   2406               LSLS     R4,R4,#+24
   \   00000168   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Refresh_17:
   \   0000016A   0B00               MOVS     R3,R1
   \   0000016C   EFD0               BEQ      ??NeuronsList_Refresh_14
   \   0000016E   491E               SUBS     R1,R1,#+1
   \   00000170   0906               LSLS     R1,R1,#+24
   \   00000172   090E               LSRS     R1,R1,#+24
   \   00000174   ECE7               B        ??NeuronsList_Refresh_15
   \                     ??NeuronsList_Refresh_16:
   \   00000176   009F               LDR      R7,[SP, #+0]
   \   00000178   3F06               LSLS     R7,R7,#+24
   \   0000017A   3F0E               LSRS     R7,R7,#+24
   \   0000017C   0123               MOVS     R3,#+1
   \   0000017E   1A00               MOVS     R2,R3
   \   00000180   3900               MOVS     R1,R7
   \   00000182   0F20               MOVS     R0,#+15
   \   00000184   ........           BL       H_line
   \   00000188   2000               MOVS     R0,R4
   \   0000018A   0228               CMP      R0,#+2
   \   0000018C   06D3               BCC      ??NeuronsList_Refresh_18
   \   0000018E   0123               MOVS     R3,#+1
   \   00000190   0322               MOVS     R2,#+3
   \   00000192   3900               MOVS     R1,R7
   \   00000194   891C               ADDS     R1,R1,#+2
   \   00000196   0E20               MOVS     R0,#+14
   \   00000198   ........           BL       H_line
   \                     ??NeuronsList_Refresh_18:
   \   0000019C   2000               MOVS     R0,R4
   \   0000019E   0328               CMP      R0,#+3
   \   000001A0   06D3               BCC      ??NeuronsList_Refresh_19
   \   000001A2   0123               MOVS     R3,#+1
   \   000001A4   0522               MOVS     R2,#+5
   \   000001A6   3900               MOVS     R1,R7
   \   000001A8   091D               ADDS     R1,R1,#+4
   \   000001AA   0D20               MOVS     R0,#+13
   \   000001AC   ........           BL       H_line
   \                     ??NeuronsList_Refresh_19:
   \   000001B0   042C               CMP      R4,#+4
   \   000001B2   66D3               BCC      ??NeuronsList_Refresh_10
   \   000001B4   0123               MOVS     R3,#+1
   \   000001B6   0722               MOVS     R2,#+7
   \   000001B8   BF1D               ADDS     R7,R7,#+6
   \   000001BA   3900               MOVS     R1,R7
   \   000001BC   0C20               MOVS     R0,#+12
   \   000001BE   ........           BL       H_line
   \   000001C2   5EE0               B        ??NeuronsList_Refresh_10
   \                     ??NeuronsList_Refresh_11:
   \   000001C4   052A               CMP      R2,#+5
   \   000001C6   5CD0               BEQ      ??NeuronsList_Refresh_10
   \   000001C8   2100               MOVS     R1,R4
   \   000001CA   1BE0               B        ??NeuronsList_Refresh_20
   \                     ??NeuronsList_Refresh_21:
   \   000001CC   7F1C               ADDS     R7,R7,#+1
   \   000001CE   3F06               LSLS     R7,R7,#+24
   \   000001D0   3F0E               LSRS     R7,R7,#+24
   \   000001D2   012F               CMP      R7,#+1
   \   000001D4   02D1               BNE      ??NeuronsList_Refresh_22
   \   000001D6   641C               ADDS     R4,R4,#+1
   \   000001D8   2406               LSLS     R4,R4,#+24
   \   000001DA   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Refresh_22:
   \   000001DC   022F               CMP      R7,#+2
   \   000001DE   05D1               BNE      ??NeuronsList_Refresh_23
   \   000001E0   761C               ADDS     R6,R6,#+1
   \   000001E2   3606               LSLS     R6,R6,#+24
   \   000001E4   360E               LSRS     R6,R6,#+24
   \   000001E6   641E               SUBS     R4,R4,#+1
   \   000001E8   2406               LSLS     R4,R4,#+24
   \   000001EA   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Refresh_23:
   \   000001EC   032F               CMP      R7,#+3
   \   000001EE   06D1               BNE      ??NeuronsList_Refresh_24
   \   000001F0   6D1C               ADDS     R5,R5,#+1
   \   000001F2   2D06               LSLS     R5,R5,#+24
   \   000001F4   2D0E               LSRS     R5,R5,#+24
   \   000001F6   761E               SUBS     R6,R6,#+1
   \   000001F8   3606               LSLS     R6,R6,#+24
   \   000001FA   360E               LSRS     R6,R6,#+24
   \   000001FC   0027               MOVS     R7,#+0
   \                     ??NeuronsList_Refresh_24:
   \   000001FE   491C               ADDS     R1,R1,#+1
   \   00000200   0906               LSLS     R1,R1,#+24
   \   00000202   090E               LSRS     R1,R1,#+24
   \                     ??NeuronsList_Refresh_20:
   \   00000204   0A00               MOVS     R2,R1
   \   00000206   202A               CMP      R2,#+32
   \   00000208   05D2               BCS      ??NeuronsList_Refresh_25
   \   0000020A   0122               MOVS     R2,#+1
   \   0000020C   8A40               LSLS     R2,R2,R1
   \   0000020E   0240               ANDS     R2,R2,R0
   \   00000210   DCD0               BEQ      ??NeuronsList_Refresh_21
   \   00000212   0027               MOVS     R7,#+0
   \   00000214   F3E7               B        ??NeuronsList_Refresh_24
   \                     ??NeuronsList_Refresh_25:
   \   00000216   009F               LDR      R7,[SP, #+0]
   \   00000218   3F06               LSLS     R7,R7,#+24
   \   0000021A   3F0E               LSRS     R7,R7,#+24
   \   0000021C   0123               MOVS     R3,#+1
   \   0000021E   1A00               MOVS     R2,R3
   \   00000220   3900               MOVS     R1,R7
   \   00000222   0F20               MOVS     R0,#+15
   \   00000224   ........           BL       H_line
   \   00000228   2000               MOVS     R0,R4
   \   0000022A   0D28               CMP      R0,#+13
   \   0000022C   0CD2               BCS      ??NeuronsList_Refresh_26
   \   0000022E   3000               MOVS     R0,R6
   \   00000230   0B28               CMP      R0,#+11
   \   00000232   09D2               BCS      ??NeuronsList_Refresh_26
   \   00000234   2800               MOVS     R0,R5
   \   00000236   0628               CMP      R0,#+6
   \   00000238   06D2               BCS      ??NeuronsList_Refresh_26
   \   0000023A   0123               MOVS     R3,#+1
   \   0000023C   0322               MOVS     R2,#+3
   \   0000023E   3900               MOVS     R1,R7
   \   00000240   891C               ADDS     R1,R1,#+2
   \   00000242   0E20               MOVS     R0,#+14
   \   00000244   ........           BL       H_line
   \                     ??NeuronsList_Refresh_26:
   \   00000248   2000               MOVS     R0,R4
   \   0000024A   0B28               CMP      R0,#+11
   \   0000024C   0CD2               BCS      ??NeuronsList_Refresh_27
   \   0000024E   3000               MOVS     R0,R6
   \   00000250   0728               CMP      R0,#+7
   \   00000252   09D2               BCS      ??NeuronsList_Refresh_27
   \   00000254   2800               MOVS     R0,R5
   \   00000256   0228               CMP      R0,#+2
   \   00000258   06D2               BCS      ??NeuronsList_Refresh_27
   \   0000025A   0123               MOVS     R3,#+1
   \   0000025C   0522               MOVS     R2,#+5
   \   0000025E   3900               MOVS     R1,R7
   \   00000260   091D               ADDS     R1,R1,#+4
   \   00000262   0D20               MOVS     R0,#+13
   \   00000264   ........           BL       H_line
   \                     ??NeuronsList_Refresh_27:
   \   00000268   052C               CMP      R4,#+5
   \   0000026A   0AD2               BCS      ??NeuronsList_Refresh_10
   \   0000026C   022E               CMP      R6,#+2
   \   0000026E   08D2               BCS      ??NeuronsList_Refresh_10
   \   00000270   002D               CMP      R5,#+0
   \   00000272   06D1               BNE      ??NeuronsList_Refresh_10
   \   00000274   0123               MOVS     R3,#+1
   \   00000276   0722               MOVS     R2,#+7
   \   00000278   BF1D               ADDS     R7,R7,#+6
   \   0000027A   3900               MOVS     R1,R7
   \   0000027C   0C20               MOVS     R0,#+12
   \   0000027E   ........           BL       H_line
   \                     ??NeuronsList_Refresh_10:
   \   00000282   1C48               LDR      R0,??NeuronsList_Refresh_0+0x10  ;; TextToChangeLength + 6
   \   00000284   0078               LDRB     R0,[R0, #+0]
   \   00000286   0299               LDR      R1,[SP, #+8]
   \   00000288   401A               SUBS     R0,R0,R1
   \   0000028A   0C21               MOVS     R1,#+12
   \   0000028C   4143               MULS     R1,R0,R1
   \   0000028E   1A4A               LDR      R2,??NeuronsList_Refresh_0+0x14  ;; NeuronsList
   \   00000290   5118               ADDS     R1,R2,R1
   \   00000292   3C31               ADDS     R1,R1,#+60
   \   00000294   0978               LDRB     R1,[R1, #+0]
   \   00000296   0529               CMP      R1,#+5
   \   00000298   00D0               BEQ      .+4
   \   0000029A   FBE6               B        ??NeuronsList_Refresh_9
   \   0000029C   1149               LDR      R1,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000029E   0978               LDRB     R1,[R1, #+0]
   \   000002A0   0A29               CMP      R1,#+10
   \   000002A2   19D2               BCS      ??NeuronsList_Refresh_28
   \   000002A4   154A               LDR      R2,??NeuronsList_Refresh_0+0x18  ;; MainStage
   \   000002A6   8C21               MOVS     R1,#+140
   \   000002A8   4900               LSLS     R1,R1,#+1        ;; #+280
   \   000002AA   1423               MOVS     R3,#+20
   \   000002AC   4343               MULS     R3,R0,R3
   \   000002AE   D218               ADDS     R2,R2,R3
   \   000002B0   515A               LDRH     R1,[R2, R1]
   \   000002B2   0A04               LSLS     R2,R1,#+16
   \   000002B4   10D5               BPL      ??NeuronsList_Refresh_28
   \   000002B6   124A               LDR      R2,??NeuronsList_Refresh_0+0x1C  ;; 0x8aaa
   \   000002B8   9142               CMP      R1,R2
   \   000002BA   0DD0               BEQ      ??NeuronsList_Refresh_28
   \   000002BC   82B0               SUB      SP,SP,#+8
   \   000002BE   0920               MOVS     R0,#+9
   \   000002C0   0090               STR      R0,[SP, #+0]
   \   000002C2   0623               MOVS     R3,#+6
   \   000002C4   0298               LDR      R0,[SP, #+8]
   \   000002C6   421E               SUBS     R2,R0,#+1
   \   000002C8   1206               LSLS     R2,R2,#+24
   \   000002CA   120E               LSRS     R2,R2,#+24
   \   000002CC   0C21               MOVS     R1,#+12
   \   000002CE   0D48               LDR      R0,??NeuronsList_Refresh_0+0x20  ;; BateriaWyladowana
   \   000002D0   ........           BL       CopyToCanvasPoint
   \   000002D4   02B0               ADD      SP,SP,#+8
   \   000002D6   DDE6               B        ??NeuronsList_Refresh_9
   \                     ??NeuronsList_Refresh_28:
   \   000002D8   0024               MOVS     R4,#+0
   \   000002DA   2100               MOVS     R1,R4
   \   000002DC   B2E6               B        ??NeuronsList_Refresh_7
   7568                            }
   7569                        
   7570                        }
   7571                      
   7572                        
   7573                        #ifdef  DIRECT_Q_MESURE 
   7574                        static char Div=0;
   7575                      
   7576                        if (Div<10)
   7577                        {
   7578                         Div++; 
   7579                        }else{
   7580                          Div=0;
   7581                        
   7582                              char txt[6];
   7583                              sprintf(txt, "%d",  TransQuality.DirectkMensur[(5-i)+NeuronsListLine]);
   7584                              Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   7585                        }  
   7586                         #endif
   7587                      
   7588                        
   7589                    }
   7590                }
   7591                
   7592                
   7593              
   7594             }//________________________________________________________________________
   \                     ??NeuronsList_Refresh_3:
   \   000002DE   FEBC               POP      {R1-R7}
   \   000002E0   01BC               POP      {R0}
   \   000002E2   0047               BX       R0               ;; return
   \                     ??NeuronsList_Refresh_0:
   \   000002E4   ........           DC32     ??Dzielnik20
   \   000002E8   ........           DC32     SlaveMode
   \   000002EC   ........           DC32     TextToChangeLength + 31
   \   000002F0   ........           DC32     TransQuality
   \   000002F4   ........           DC32     TextToChangeLength + 6
   \   000002F8   ........           DC32     NeuronsList
   \   000002FC   ........           DC32     MainStage
   \   00000300   AA8A0000           DC32     0x8aaa
   \   00000304   ........           DC32     BateriaWyladowana

   \                                 In section .bss, align 1
   \                     ??Dzielnik20:
   \   00000000                      DS8 1
   7595          
   7596          
   7597          
   7598              
   7599                
   7600                

   \                                 In section Debug.txt, align 4, keep-with-next
   7601          void NeuronNrChange_Paint( int *ValToChange)
   7602                { 
   \                     NeuronNrChange_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7603                  List_Paint(" ID ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   4DA0               ADR      R0,??NeuronNrChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   4A48               LDR      R0,??NeuronNrChange_Paint_0+0x4  ;; `?<Constant " ID ">`
   \   0000001E   ........           BL       List_Paint
   \   00000022   0AB0               ADD      SP,SP,#+40
   \   00000024   4948               LDR      R0,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0BD1               BNE      ??NeuronNrChange_Paint_1
   7604                  
   7605             
   7606                  if (VCTT_ill==0) for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   0000002C   0024               MOVS     R4,#+0
   \   0000002E   06E0               B        ??NeuronNrChange_Paint_2
   \                     ??NeuronNrChange_Paint_3:
   \   00000030   464A               LDR      R2,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000032   5118               ADDS     R1,R2,R1
   \   00000034   2200               MOVS     R2,R4
   \   00000036   0A71               STRB     R2,[R1, #+4]
   \   00000038   401C               ADDS     R0,R0,#+1
   \   0000003A   0006               LSLS     R0,R0,#+24
   \   0000003C   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Paint_2:
   \   0000003E   0100               MOVS     R1,R0
   \   00000040   0829               CMP      R1,#+8
   \   00000042   F5D3               BCC      ??NeuronNrChange_Paint_3
   7607                  
   7608                  H_line(12,106,39,1);
   \                     ??NeuronNrChange_Paint_1:
   \   00000044   0123               MOVS     R3,#+1
   \   00000046   2722               MOVS     R2,#+39
   \   00000048   6A21               MOVS     R1,#+106
   \   0000004A   0C20               MOVS     R0,#+12
   \   0000004C   ........           BL       H_line
   7609                  H_line(12,96,39,1);
   \   00000050   0123               MOVS     R3,#+1
   \   00000052   2722               MOVS     R2,#+39
   \   00000054   6021               MOVS     R1,#+96
   \   00000056   0C20               MOVS     R0,#+12
   \   00000058   ........           BL       H_line
   7610                  V_line(11,97,9,1); 
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   0922               MOVS     R2,#+9
   \   00000060   6121               MOVS     R1,#+97
   \   00000062   0B20               MOVS     R0,#+11
   \   00000064   ........           BL       V_line
   7611                  V_line(50,97,9,1); 
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   0922               MOVS     R2,#+9
   \   0000006C   6121               MOVS     R1,#+97
   \   0000006E   3220               MOVS     R0,#+50
   \   00000070   ........           BL       V_line
   7612          
   7613          
   7614                  
   7615                  Label(ValueChangeTxtTmp,1,48,97,8,34,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   8021               MOVS     R1,#+128
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   2221               MOVS     R1,#+34
   \   00000080   0820               MOVS     R0,#+8
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   6123               MOVS     R3,#+97
   \   00000086   3022               MOVS     R2,#+48
   \   00000088   0121               MOVS     R1,#+1
   \   0000008A   3148               LDR      R0,??NeuronNrChange_Paint_0+0xC  ;; VCTT_ill + 4
   \   0000008C   ........           BL       Label
   \   00000090   06B0               ADD      SP,SP,#+24
   7616                                
   7617          
   7618                  
   7619                  char txt[2];
   7620                  txt[1]=0;
   \   00000092   0024               MOVS     R4,#+0
   \   00000094   6846               MOV      R0,SP
   \   00000096   2100               MOVS     R1,R4
   \   00000098   4170               STRB     R1,[R0, #+1]
   7621                  char ind=0;
   \   0000009A   2700               MOVS     R7,R4
   7622                  for (char j=0; j<3; j++)
   \   0000009C   2500               MOVS     R5,R4
   \   0000009E   25E0               B        ??NeuronNrChange_Paint_4
   7623                    for (char i=0; i<3; i++)
   7624                    {
   7625                      ind++;
   \                     ??NeuronNrChange_Paint_5:
   \   000000A0   7F1C               ADDS     R7,R7,#+1
   \   000000A2   3F06               LSLS     R7,R7,#+24
   \   000000A4   3F0E               LSRS     R7,R7,#+24
   7626                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   000000A6   0122               MOVS     R2,#+1
   \   000000A8   6946               MOV      R1,SP
   \   000000AA   3800               MOVS     R0,R7
   \   000000AC   ........           BL       CharToStr
   7627                      Button(txt,2+20*i,76-(19*j),18,17);
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   1120               MOVS     R0,#+17
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   1223               MOVS     R3,#+18
   \   000000B8   4C20               MOVS     R0,#+76
   \   000000BA   2900               MOVS     R1,R5
   \   000000BC   1322               MOVS     R2,#+19
   \   000000BE   5143               MULS     R1,R2,R1
   \   000000C0   421A               SUBS     R2,R0,R1
   \   000000C2   1206               LSLS     R2,R2,#+24
   \   000000C4   120E               LSRS     R2,R2,#+24
   \   000000C6   3100               MOVS     R1,R6
   \   000000C8   1420               MOVS     R0,#+20
   \   000000CA   4143               MULS     R1,R0,R1
   \   000000CC   891C               ADDS     R1,R1,#+2
   \   000000CE   0906               LSLS     R1,R1,#+24
   \   000000D0   090E               LSRS     R1,R1,#+24
   \   000000D2   02A8               ADD      R0,SP,#+8
   \   000000D4   ........           BL       Button
   \   000000D8   02B0               ADD      SP,SP,#+8
   7628                    }
   \   000000DA   761C               ADDS     R6,R6,#+1
   \   000000DC   3606               LSLS     R6,R6,#+24
   \   000000DE   360E               LSRS     R6,R6,#+24
   \                     ??NeuronNrChange_Paint_6:
   \   000000E0   3000               MOVS     R0,R6
   \   000000E2   0328               CMP      R0,#+3
   \   000000E4   DCD3               BCC      ??NeuronNrChange_Paint_5
   \   000000E6   6D1C               ADDS     R5,R5,#+1
   \   000000E8   2D06               LSLS     R5,R5,#+24
   \   000000EA   2D0E               LSRS     R5,R5,#+24
   \                     ??NeuronNrChange_Paint_4:
   \   000000EC   2800               MOVS     R0,R5
   \   000000EE   0328               CMP      R0,#+3
   \   000000F0   01D2               BCS      ??NeuronNrChange_Paint_7
   \   000000F2   2600               MOVS     R6,R4
   \   000000F4   F4E7               B        ??NeuronNrChange_Paint_6
   7629                  //Button(" ",2+20*0,76-(19*3),18,17);
   7630                  Button("0",2+20*1,76-(19*3),18,17);
   \                     ??NeuronNrChange_Paint_7:
   \   000000F6   82B0               SUB      SP,SP,#+8
   \   000000F8   1120               MOVS     R0,#+17
   \   000000FA   0090               STR      R0,[SP, #+0]
   \   000000FC   1223               MOVS     R3,#+18
   \   000000FE   1322               MOVS     R2,#+19
   \   00000100   1621               MOVS     R1,#+22
   \   00000102   14A0               ADR      R0,??NeuronNrChange_Paint_0+0x10  ;; 0x30, 0x00, 0x00, 0x00
   \   00000104   ........           BL       Button
   \   00000108   02B0               ADD      SP,SP,#+8
   7631                  //Button("-",2+20*2,76-(19*3),18,17);
   7632                  
   7633                  
   7634                  Button("C ",3,4,17,13);
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0D20               MOVS     R0,#+13
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   1123               MOVS     R3,#+17
   \   00000112   0422               MOVS     R2,#+4
   \   00000114   0321               MOVS     R1,#+3
   \   00000116   10A0               ADR      R0,??NeuronNrChange_Paint_0+0x14  ;; 0x43, 0x20, 0x00, 0x00
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   7635                  if ((VCTT_ill==0) || (VCTT_ill>6)) Button("Ok ",22,4,38,13);
   \   0000011E   0B48               LDR      R0,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000120   0078               LDRB     R0,[R0, #+0]
   \   00000122   0028               CMP      R0,#+0
   \   00000124   01D0               BEQ      ??NeuronNrChange_Paint_8
   \   00000126   0728               CMP      R0,#+7
   \   00000128   09D3               BCC      ??NeuronNrChange_Paint_9
   \                     ??NeuronNrChange_Paint_8:
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   0D20               MOVS     R0,#+13
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   2623               MOVS     R3,#+38
   \   00000132   0422               MOVS     R2,#+4
   \   00000134   1621               MOVS     R1,#+22
   \   00000136   09A0               ADR      R0,??NeuronNrChange_Paint_0+0x18  ;; "Ok "
   \   00000138   ........           BL       Button
   \   0000013C   02B0               ADD      SP,SP,#+8
   7636                }
   \                     ??NeuronNrChange_Paint_9:
   \   0000013E   F8BC               POP      {R3-R7}
   \   00000140   01BC               POP      {R0}
   \   00000142   0047               BX       R0               ;; return
   \                     ??NeuronNrChange_Paint_0:
   \   00000144   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000148   ........           DC32     `?<Constant " ID ">`
   \   0000014C   ........           DC32     VCTT_ill
   \   00000150   ........           DC32     VCTT_ill + 4
   \   00000154   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000158   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   0000015C   4F6B2000           DC8      "Ok "
   7637          
   7638          
   7639          

   \                                 In section Debug.txt, align 4, keep-with-next
   7640          void NeuronNrChange_Evant(int *ValToChange)
   7641                { 
   \                     NeuronNrChange_Evant:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   0190               STR      R0,[SP, #+4]
   7642                 int ValueTmp=0; 
   7643                 char ind=0;
   \   00000008   0600               MOVS     R6,R0
   7644                 char txt[2];
   7645                 char Refresh=0;
   \   0000000A   0500               MOVS     R5,R0
   7646           
   7647                 
   7648                 
   7649                 
   7650          
   7651                 txt[1]=0;
   \   0000000C   02A8               ADD      R0,SP,#+8
   \   0000000E   2900               MOVS     R1,R5
   \   00000010   4170               STRB     R1,[R0, #+1]
   7652                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000012   7848               LDR      R0,??NeuronNrChange_Evant_0  ;; X_up
   \   00000014   405E               LDRSH    R0,[R0, R1]
   \   00000016   2F28               CMP      R0,#+47
   \   00000018   2EDB               BLT      ??NeuronNrChange_Evant_1
   \   0000001A   3F28               CMP      R0,#+63
   \   0000001C   2CDA               BGE      ??NeuronNrChange_Evant_1
   \   0000001E   7648               LDR      R0,??NeuronNrChange_Evant_0+0x4  ;; Y_up
   \   00000020   405E               LDRSH    R0,[R0, R1]
   \   00000022   7128               CMP      R0,#+113
   \   00000024   28DB               BLT      ??NeuronNrChange_Evant_1
   \   00000026   7F28               CMP      R0,#+127
   \   00000028   26DA               BGE      ??NeuronNrChange_Evant_1
   7653                  {
   7654                    
   7655                       for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   0000002A   0800               MOVS     R0,R1
   \   0000002C   06E0               B        ??NeuronNrChange_Evant_2
   \                     ??NeuronNrChange_Evant_3:
   \   0000002E   734A               LDR      R2,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   00000030   5118               ADDS     R1,R2,R1
   \   00000032   2A00               MOVS     R2,R5
   \   00000034   0A71               STRB     R2,[R1, #+4]
   \   00000036   401C               ADDS     R0,R0,#+1
   \   00000038   0006               LSLS     R0,R0,#+24
   \   0000003A   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Evant_2:
   \   0000003C   0100               MOVS     R1,R0
   \   0000003E   0829               CMP      R1,#+8
   \   00000040   F5D3               BCC      ??NeuronNrChange_Evant_3
   7656                          ValueTmp=0;
   7657                          VCTT_ill=0;
   \   00000042   6E4C               LDR      R4,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   00000044   2800               MOVS     R0,R5
   \   00000046   2070               STRB     R0,[R4, #+0]
   7658                          VCTT_point_flag=0;
   \   00000048   6070               STRB     R0,[R4, #+1]
   7659                     
   7660                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   0000004A   6D48               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; 0x13d7e9
   \   0000004C   0078               LDRB     R0,[R0, #+0]
   \   0000004E   0028               CMP      R0,#+0
   \   00000050   0AD1               BNE      ??NeuronNrChange_Evant_4
   \   00000052   6C48               LDR      R0,??NeuronNrChange_Evant_0+0x10  ;; 0xfffff430
   \   00000054   8021               MOVS     R1,#+128
   \   00000056   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000058   0160               STR      R1,[R0, #+0]
   \   0000005A   6B4A               LDR      R2,??NeuronNrChange_Evant_0+0x14  ;; ButtonBipCounter
   \   0000005C   6B48               LDR      R0,??NeuronNrChange_Evant_0+0x18  ;; g_counter
   \   0000005E   03C8               LDM      R0!,{R0,R1}
   \   00000060   0023               MOVS     R3,#+0
   \   00000062   0830               ADDS     R0,R0,#+8
   \   00000064   5941               ADCS     R1,R1,R3
   \   00000066   03C2               STM      R2!,{R0,R1}
   7661                          
   7662                      MenuLevel=(MenuLevel/10);
   \                     ??NeuronNrChange_Evant_4:
   \   00000068   694D               LDR      R5,??NeuronNrChange_Evant_0+0x1C  ;; TextToChangeLength
   \   0000006A   A86C               LDR      R0,[R5, #+72]
   \   0000006C   0A21               MOVS     R1,#+10
   \   0000006E   ........           BL       __aeabi_idivmod
   \   00000072   A864               STR      R0,[R5, #+72]
   7663                      Refresh=1;
   \   00000074   0125               MOVS     R5,#+1
   \   00000076   B4E0               B        ??NeuronNrChange_Evant_5
   7664                  } else {
   7665                    
   7666                           
   7667          
   7668                   
   7669                       
   7670                    for (char j=0; j<3; j++)
   \                     ??NeuronNrChange_Evant_1:
   \   00000078   0800               MOVS     R0,R1
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   36E0               B        ??NeuronNrChange_Evant_6
   7671                    {
   7672                    for (char i=0; i<3; i++)
   7673                    {
   7674                      ind++;
   \                     ??NeuronNrChange_Evant_7:
   \   0000007E   761C               ADDS     R6,R6,#+1
   \   00000080   3606               LSLS     R6,R6,#+24
   \   00000082   360E               LSRS     R6,R6,#+24
   7675                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   00000084   0122               MOVS     R2,#+1
   \   00000086   02A9               ADD      R1,SP,#+8
   \   00000088   3000               MOVS     R0,R6
   \   0000008A   ........           BL       CharToStr
   7676                      if ((Button(txt,2+20*i,76-(19*j),18,17)==1) && (VCTT_ill<7)  ){ValueChangeTxtTmp[VCTT_ill++]=48+ind;   Refresh=1;}
   \   0000008E   82B0               SUB      SP,SP,#+8
   \   00000090   1120               MOVS     R0,#+17
   \   00000092   0090               STR      R0,[SP, #+0]
   \   00000094   1223               MOVS     R3,#+18
   \   00000096   4C20               MOVS     R0,#+76
   \   00000098   0299               LDR      R1,[SP, #+8]
   \   0000009A   0906               LSLS     R1,R1,#+24
   \   0000009C   090E               LSRS     R1,R1,#+24
   \   0000009E   1322               MOVS     R2,#+19
   \   000000A0   5143               MULS     R1,R2,R1
   \   000000A2   421A               SUBS     R2,R0,R1
   \   000000A4   1206               LSLS     R2,R2,#+24
   \   000000A6   120E               LSRS     R2,R2,#+24
   \   000000A8   3900               MOVS     R1,R7
   \   000000AA   1420               MOVS     R0,#+20
   \   000000AC   4143               MULS     R1,R0,R1
   \   000000AE   891C               ADDS     R1,R1,#+2
   \   000000B0   0906               LSLS     R1,R1,#+24
   \   000000B2   090E               LSRS     R1,R1,#+24
   \   000000B4   04A8               ADD      R0,SP,#+16
   \   000000B6   ........           BL       Button
   \   000000BA   02B0               ADD      SP,SP,#+8
   \   000000BC   0128               CMP      R0,#+1
   \   000000BE   0AD1               BNE      ??NeuronNrChange_Evant_8
   \   000000C0   4E4C               LDR      R4,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   000000C2   2078               LDRB     R0,[R4, #+0]
   \   000000C4   0728               CMP      R0,#+7
   \   000000C6   06D2               BCS      ??NeuronNrChange_Evant_8
   \   000000C8   2118               ADDS     R1,R4,R0
   \   000000CA   3200               MOVS     R2,R6
   \   000000CC   3032               ADDS     R2,R2,#+48
   \   000000CE   0A71               STRB     R2,[R1, #+4]
   \   000000D0   401C               ADDS     R0,R0,#+1
   \   000000D2   2070               STRB     R0,[R4, #+0]
   \   000000D4   0125               MOVS     R5,#+1
   7677                      
   7678                     }
   \                     ??NeuronNrChange_Evant_8:
   \   000000D6   7F1C               ADDS     R7,R7,#+1
   \   000000D8   3F06               LSLS     R7,R7,#+24
   \   000000DA   3F0E               LSRS     R7,R7,#+24
   \                     ??NeuronNrChange_Evant_9:
   \   000000DC   3800               MOVS     R0,R7
   \   000000DE   0328               CMP      R0,#+3
   \   000000E0   CDD3               BCC      ??NeuronNrChange_Evant_7
   \   000000E2   0098               LDR      R0,[SP, #+0]
   \   000000E4   401C               ADDS     R0,R0,#+1
   \   000000E6   0006               LSLS     R0,R0,#+24
   \   000000E8   000E               LSRS     R0,R0,#+24
   \   000000EA   0090               STR      R0,[SP, #+0]
   \                     ??NeuronNrChange_Evant_6:
   \   000000EC   0098               LDR      R0,[SP, #+0]
   \   000000EE   0006               LSLS     R0,R0,#+24
   \   000000F0   000E               LSRS     R0,R0,#+24
   \   000000F2   0328               CMP      R0,#+3
   \   000000F4   01D2               BCS      ??NeuronNrChange_Evant_10
   \   000000F6   0027               MOVS     R7,#+0
   \   000000F8   F0E7               B        ??NeuronNrChange_Evant_9
   7679                    }
   7680          
   7681                     if ((Button("0",2+20*1,76-(19*3),18,17)==1) && (VCTT_ill<7) ) {ValueChangeTxtTmp[VCTT_ill++]=48;    Refresh=1;}
   \                     ??NeuronNrChange_Evant_10:
   \   000000FA   404C               LDR      R4,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   000000FC   82B0               SUB      SP,SP,#+8
   \   000000FE   1120               MOVS     R0,#+17
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   1223               MOVS     R3,#+18
   \   00000104   1322               MOVS     R2,#+19
   \   00000106   1621               MOVS     R1,#+22
   \   00000108   42A0               ADR      R0,??NeuronNrChange_Evant_0+0x20  ;; 0x30, 0x00, 0x00, 0x00
   \   0000010A   ........           BL       Button
   \   0000010E   02B0               ADD      SP,SP,#+8
   \   00000110   0128               CMP      R0,#+1
   \   00000112   08D1               BNE      ??NeuronNrChange_Evant_11
   \   00000114   2078               LDRB     R0,[R4, #+0]
   \   00000116   0728               CMP      R0,#+7
   \   00000118   05D2               BCS      ??NeuronNrChange_Evant_11
   \   0000011A   2118               ADDS     R1,R4,R0
   \   0000011C   3022               MOVS     R2,#+48
   \   0000011E   0A71               STRB     R2,[R1, #+4]
   \   00000120   401C               ADDS     R0,R0,#+1
   \   00000122   2070               STRB     R0,[R4, #+0]
   \   00000124   0125               MOVS     R5,#+1
   7682          
   7683                      
   7684                      
   7685                  
   7686                      
   7687                      if (Button("C ",3,4,17,13)==1)
   \                     ??NeuronNrChange_Evant_11:
   \   00000126   82B0               SUB      SP,SP,#+8
   \   00000128   0D20               MOVS     R0,#+13
   \   0000012A   0090               STR      R0,[SP, #+0]
   \   0000012C   1123               MOVS     R3,#+17
   \   0000012E   0422               MOVS     R2,#+4
   \   00000130   0321               MOVS     R1,#+3
   \   00000132   39A0               ADR      R0,??NeuronNrChange_Evant_0+0x24  ;; 0x43, 0x20, 0x00, 0x00
   \   00000134   ........           BL       Button
   \   00000138   02B0               ADD      SP,SP,#+8
   \   0000013A   0128               CMP      R0,#+1
   \   0000013C   09D1               BNE      ??NeuronNrChange_Evant_12
   7688                      {
   7689                        if (VCTT_ill) VCTT_ill--;
   \   0000013E   2078               LDRB     R0,[R4, #+0]
   \   00000140   0028               CMP      R0,#+0
   \   00000142   01D0               BEQ      ??NeuronNrChange_Evant_13
   \   00000144   401E               SUBS     R0,R0,#+1
   \   00000146   2070               STRB     R0,[R4, #+0]
   7690                        ValueChangeTxtTmp[VCTT_ill]=0;
   \                     ??NeuronNrChange_Evant_13:
   \   00000148   2078               LDRB     R0,[R4, #+0]
   \   0000014A   2018               ADDS     R0,R4,R0
   \   0000014C   0021               MOVS     R1,#+0
   \   0000014E   0171               STRB     R1,[R0, #+4]
   7691          
   7692                        Refresh=1;
   \   00000150   0125               MOVS     R5,#+1
   7693                      }
   7694                    
   7695                  
   7696                      int mnz=1;     
   \                     ??NeuronNrChange_Evant_12:
   \   00000152   0126               MOVS     R6,#+1
   \   00000154   3700               MOVS     R7,R6
   7697                      char prs=0;
   7698          
   7699                      //zapamiêtanie wartoci
   7700                      if ((VCTT_ill==0) || (VCTT_ill>6))
   \   00000156   2078               LDRB     R0,[R4, #+0]
   \   00000158   0028               CMP      R0,#+0
   \   0000015A   01D0               BEQ      ??NeuronNrChange_Evant_14
   \   0000015C   0728               CMP      R0,#+7
   \   0000015E   40D3               BCC      ??NeuronNrChange_Evant_5
   7701                      if (Button("Ok ",22,4,38,13)==1)
   \                     ??NeuronNrChange_Evant_14:
   \   00000160   82B0               SUB      SP,SP,#+8
   \   00000162   0D20               MOVS     R0,#+13
   \   00000164   0090               STR      R0,[SP, #+0]
   \   00000166   2623               MOVS     R3,#+38
   \   00000168   0422               MOVS     R2,#+4
   \   0000016A   1621               MOVS     R1,#+22
   \   0000016C   2BA0               ADR      R0,??NeuronNrChange_Evant_0+0x28  ;; "Ok "
   \   0000016E   ........           BL       Button
   \   00000172   02B0               ADD      SP,SP,#+8
   \   00000174   0128               CMP      R0,#+1
   \   00000176   34D1               BNE      ??NeuronNrChange_Evant_5
   7702                      {
   7703                        
   7704          
   7705                          for (char i=0; i<VCTT_ill-prs; i++)
   \   00000178   0020               MOVS     R0,#+0
   \   0000017A   0DE0               B        ??NeuronNrChange_Evant_15
   7706                          {
   7707                             ValueTmp+=(ValueChangeTxtTmp[VCTT_ill-i-1]-48)*mnz;
   \                     ??NeuronNrChange_Evant_16:
   \   0000017C   0199               LDR      R1,[SP, #+4]
   \   0000017E   0300               MOVS     R3,R0
   \   00000180   D21A               SUBS     R2,R2,R3
   \   00000182   A218               ADDS     R2,R4,R2
   \   00000184   D278               LDRB     R2,[R2, #+3]
   \   00000186   303A               SUBS     R2,R2,#+48
   \   00000188   7A43               MULS     R2,R7,R2
   \   0000018A   8918               ADDS     R1,R1,R2
   \   0000018C   0191               STR      R1,[SP, #+4]
   7708                             mnz*=10;
   \   0000018E   0A21               MOVS     R1,#+10
   \   00000190   4F43               MULS     R7,R1,R7
   7709                          }
   \   00000192   401C               ADDS     R0,R0,#+1
   \   00000194   0006               LSLS     R0,R0,#+24
   \   00000196   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Evant_15:
   \   00000198   2278               LDRB     R2,[R4, #+0]
   \   0000019A   0100               MOVS     R1,R0
   \   0000019C   9142               CMP      R1,R2
   \   0000019E   EDD3               BCC      ??NeuronNrChange_Evant_16
   7710                          
   7711                         
   7712                          ProgramChange=1;
   \   000001A0   1B4D               LDR      R5,??NeuronNrChange_Evant_0+0x1C  ;; TextToChangeLength
   \   000001A2   3000               MOVS     R0,R6
   \   000001A4   2872               STRB     R0,[R5, #+8]
   7713                          MenuLevel/=10; 
   \   000001A6   A86C               LDR      R0,[R5, #+72]
   \   000001A8   0A21               MOVS     R1,#+10
   \   000001AA   ........           BL       __aeabi_idivmod
   \   000001AE   A864               STR      R0,[R5, #+72]
   7714                           
   7715                          *ValToChange=ValueTmp;
   \   000001B0   0498               LDR      R0,[SP, #+16]
   \   000001B2   0199               LDR      R1,[SP, #+4]
   \   000001B4   0160               STR      R1,[R0, #+0]
   7716                          
   7717                          for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   000001B6   0020               MOVS     R0,#+0
   \   000001B8   0200               MOVS     R2,R0
   \   000001BA   04E0               B        ??NeuronNrChange_Evant_17
   \                     ??NeuronNrChange_Evant_18:
   \   000001BC   6118               ADDS     R1,R4,R1
   \   000001BE   0A71               STRB     R2,[R1, #+4]
   \   000001C0   401C               ADDS     R0,R0,#+1
   \   000001C2   0006               LSLS     R0,R0,#+24
   \   000001C4   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Evant_17:
   \   000001C6   0100               MOVS     R1,R0
   \   000001C8   0829               CMP      R1,#+8
   \   000001CA   F7D3               BCC      ??NeuronNrChange_Evant_18
   7718                          ValueTmp=0;
   7719                          VCTT_ill=0;
   \   000001CC   1000               MOVS     R0,R2
   \   000001CE   2070               STRB     R0,[R4, #+0]
   7720                          VCTT_point_flag=0;
   \   000001D0   6070               STRB     R0,[R4, #+1]
   7721                          
   7722                        
   7723                        
   7724                        
   7725                        Refresh=1;
   \   000001D2   3500               MOVS     R5,R6
   7726                        RefreshNeuronsList(&gProg);
   \   000001D4   124C               LDR      R4,??NeuronNrChange_Evant_0+0x2C  ;; gProg
   \   000001D6   2000               MOVS     R0,R4
   \   000001D8   ........           BL       RefreshNeuronsList
   7727                        SetTask(&gProg);
   \   000001DC   2000               MOVS     R0,R4
   \   000001DE   ........           BL       SetTask
   7728                        
   7729                      }
   7730                 
   7731                    
   7732                  }
   7733                  
   7734                  
   7735                  if (Refresh==1) MenuPaint();
   \                     ??NeuronNrChange_Evant_5:
   \   000001E2   012D               CMP      R5,#+1
   \   000001E4   01D1               BNE      ??NeuronNrChange_Evant_19
   \   000001E6   ........           BL       MenuPaint
   7736                  
   7737          }
   \                     ??NeuronNrChange_Evant_19:
   \   000001EA   05B0               ADD      SP,SP,#+20
   \   000001EC   F0BC               POP      {R4-R7}
   \   000001EE   01BC               POP      {R0}
   \   000001F0   0047               BX       R0               ;; return
   \   000001F2   C046               Nop      
   \                     ??NeuronNrChange_Evant_0:
   \   000001F4   ........           DC32     X_up
   \   000001F8   ........           DC32     Y_up
   \   000001FC   ........           DC32     VCTT_ill
   \   00000200   E9D71300           DC32     0x13d7e9
   \   00000204   30F4FFFF           DC32     0xfffff430
   \   00000208   ........           DC32     ButtonBipCounter
   \   0000020C   ........           DC32     g_counter
   \   00000210   ........           DC32     TextToChangeLength
   \   00000214   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000218   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   0000021C   4F6B2000           DC8      "Ok "
   \   00000220   ........           DC32     gProg
   7738          
   7739          
   7740          
   7741          
   7742          

   \                                 In section Debug.txt, align 4, keep-with-next
   7743          void Info_Paint(void)
   7744          {          
   \                     Info_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   7745                 char txt[8];
   7746                 char labsize;
   7747                 List_Paint("Info ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   644C               LDR      R4,??Info_Paint_0  ;; `?<Constant "Info ">`
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   62A0               ADR      R0,??Info_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   7748          
   7749                 Label("Model: ",0,3,100,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   8021               MOVS     R1,#+128
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   3A21               MOVS     R1,#+58
   \   00000032   0F20               MOVS     R0,#+15
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   6423               MOVS     R3,#+100
   \   00000038   0322               MOVS     R2,#+3
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   2000               MOVS     R0,R4
   \   0000003E   3830               ADDS     R0,R0,#+56
   \   00000040   ........           BL       Label
   \   00000044   06B0               ADD      SP,SP,#+24
   7750                 Label((char*)&identyfikacja,0,10,89,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   8021               MOVS     R1,#+128
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   2821               MOVS     R1,#+40
   \   00000052   0F20               MOVS     R0,#+15
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   5923               MOVS     R3,#+89
   \   00000058   0A22               MOVS     R2,#+10
   \   0000005A   0021               MOVS     R1,#+0
   \   0000005C   4F48               LDR      R0,??Info_Paint_0+0x8  ;; identyfikacja
   \   0000005E   ........           BL       Label
   \   00000062   06B0               ADD      SP,SP,#+24
   7751                 H_line(1,85,62,2);      
   \   00000064   0223               MOVS     R3,#+2
   \   00000066   3E22               MOVS     R2,#+62
   \   00000068   5521               MOVS     R1,#+85
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   ........           BL       H_line
   7752                 Label("Node ID: ",0,3,75,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0090               STR      R0,[SP, #+0]
   \   00000076   8021               MOVS     R1,#+128
   \   00000078   03B4               PUSH     {R0,R1}
   \   0000007A   3A21               MOVS     R1,#+58
   \   0000007C   0F20               MOVS     R0,#+15
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   4B23               MOVS     R3,#+75
   \   00000082   0322               MOVS     R2,#+3
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   2000               MOVS     R0,R4
   \   00000088   4030               ADDS     R0,R0,#+64
   \   0000008A   ........           BL       Label
   \   0000008E   06B0               ADD      SP,SP,#+24
   7753                 sprintf(txt, "%d",RF_ID_R);
                        ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   00000090   434A               LDR      R2,??Info_Paint_0+0xC  ;; 0x12d687
   \   00000092   44A1               ADR      R1,??Info_Paint_0+0x10  ;; 0x25, 0x64, 0x00, 0x00
   \   00000094   6846               MOV      R0,SP
   \   00000096   ........           BL       sprintf
   7754                 Label(txt,0,10,64,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   8021               MOVS     R1,#+128
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   2821               MOVS     R1,#+40
   \   000000A6   0F20               MOVS     R0,#+15
   \   000000A8   03B4               PUSH     {R0,R1}
   \   000000AA   4023               MOVS     R3,#+64
   \   000000AC   0A22               MOVS     R2,#+10
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   06A8               ADD      R0,SP,#+24
   \   000000B2   ........           BL       Label
   \   000000B6   06B0               ADD      SP,SP,#+24
   7755                 H_line(1,60,62,2);    
   \   000000B8   0223               MOVS     R3,#+2
   \   000000BA   3E22               MOVS     R2,#+62
   \   000000BC   3C21               MOVS     R1,#+60
   \   000000BE   0120               MOVS     R0,#+1
   \   000000C0   ........           BL       H_line
   7756                 Label("Sys. version: ",0,3,50,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   0020               MOVS     R0,#+0
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   8021               MOVS     R1,#+128
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   3A21               MOVS     R1,#+58
   \   000000D0   0F20               MOVS     R0,#+15
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   3223               MOVS     R3,#+50
   \   000000D6   0322               MOVS     R2,#+3
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   2000               MOVS     R0,R4
   \   000000DC   4C30               ADDS     R0,R0,#+76
   \   000000DE   ........           BL       Label
   \   000000E2   06B0               ADD      SP,SP,#+24
   7757                 Label((char*)&system,0,10,39,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   0020               MOVS     R0,#+0
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   8021               MOVS     R1,#+128
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   2821               MOVS     R1,#+40
   \   000000F0   0F20               MOVS     R0,#+15
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   2723               MOVS     R3,#+39
   \   000000F6   0A22               MOVS     R2,#+10
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   2B48               LDR      R0,??Info_Paint_0+0x14  ;; system
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   7758                 H_line(1,35,62,2);  
   \   00000102   0223               MOVS     R3,#+2
   \   00000104   3E22               MOVS     R2,#+62
   \   00000106   2321               MOVS     R1,#+35
   \   00000108   0120               MOVS     R0,#+1
   \   0000010A   ........           BL       H_line
   7759                 Label("Trans. period: ",0,3,25,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   8021               MOVS     R1,#+128
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   3A21               MOVS     R1,#+58
   \   0000011A   0F20               MOVS     R0,#+15
   \   0000011C   03B4               PUSH     {R0,R1}
   \   0000011E   1923               MOVS     R3,#+25
   \   00000120   0322               MOVS     R2,#+3
   \   00000122   0021               MOVS     R1,#+0
   \   00000124   5C34               ADDS     R4,R4,#+92
   \   00000126   2000               MOVS     R0,R4
   \   00000128   ........           BL       Label
   \   0000012C   06B0               ADD      SP,SP,#+24
   7760                 //labsize=sIntToStr(RF_Period*10,txt);
   7761                 labsize=sIntToStr((10000/(CyklPerSek)),txt);
   \   0000012E   6946               MOV      R1,SP
   \   00000130   0C00               MOVS     R4,R1
   \   00000132   1E48               LDR      R0,??Info_Paint_0+0x18  ;; 0x2710
   \   00000134   1E49               LDR      R1,??Info_Paint_0+0x1C  ;; CyklPerSek
   \   00000136   0968               LDR      R1,[R1, #+0]
   \   00000138   ........           BL       __aeabi_uidivmod
   \   0000013C   2100               MOVS     R1,R4
   \   0000013E   0004               LSLS     R0,R0,#+16
   \   00000140   0014               ASRS     R0,R0,#+16
   \   00000142   ........           BL       sIntToStr
   \   00000146   0200               MOVS     R2,R0
   7762                 txt[labsize++]='m'; txt[labsize++]='s';
   \   00000148   6846               MOV      R0,SP
   \   0000014A   1100               MOVS     R1,R2
   \   0000014C   6D23               MOVS     R3,#+109
   \   0000014E   4354               STRB     R3,[R0, R1]
   \   00000150   521C               ADDS     R2,R2,#+1
   \   00000152   1206               LSLS     R2,R2,#+24
   \   00000154   120E               LSRS     R2,R2,#+24
   \   00000156   1100               MOVS     R1,R2
   \   00000158   7323               MOVS     R3,#+115
   \   0000015A   4354               STRB     R3,[R0, R1]
   7763                 Label(txt,0,10,14,labsize,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000015C   82B0               SUB      SP,SP,#+8
   \   0000015E   0020               MOVS     R0,#+0
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   8021               MOVS     R1,#+128
   \   00000164   03B4               PUSH     {R0,R1}
   \   00000166   2821               MOVS     R1,#+40
   \   00000168   521C               ADDS     R2,R2,#+1
   \   0000016A   1000               MOVS     R0,R2
   \   0000016C   0006               LSLS     R0,R0,#+24
   \   0000016E   000E               LSRS     R0,R0,#+24
   \   00000170   03B4               PUSH     {R0,R1}
   \   00000172   0E23               MOVS     R3,#+14
   \   00000174   0A22               MOVS     R2,#+10
   \   00000176   0021               MOVS     R1,#+0
   \   00000178   06A8               ADD      R0,SP,#+24
   \   0000017A   ........           BL       Label
   \   0000017E   06B0               ADD      SP,SP,#+24
   7764                 H_line(1,10,62,2);  
   \   00000180   0223               MOVS     R3,#+2
   \   00000182   3E22               MOVS     R2,#+62
   \   00000184   0A21               MOVS     R1,#+10
   \   00000186   0120               MOVS     R0,#+1
   \   00000188   ........           BL       H_line
   7765                 
   7766            
   7767                 
   7768          }//________________________________________________________________________
   \   0000018C   1CBC               POP      {R2-R4}
   \   0000018E   01BC               POP      {R0}
   \   00000190   0047               BX       R0               ;; return
   \   00000192   C046               Nop      
   \                     ??Info_Paint_0:
   \   00000194   ........           DC32     `?<Constant "Info ">`
   \   00000198   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000019C   ........           DC32     identyfikacja
   \   000001A0   87D61200           DC32     0x12d687
   \   000001A4   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000001A8   ........           DC32     system
   \   000001AC   10270000           DC32     0x2710
   \   000001B0   ........           DC32     CyklPerSek
   7769          
   7770              
   7771          
   7772          

   \                                 In section Debug.txt, align 4, keep-with-next
   7773          void Info_Refresh(void)
   7774          {          
   \                     Info_Refresh:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   7775            static int IRdiv; 
   7776            
   7777            if (IRdiv<20) {IRdiv++;} else {
   \   00000002   1A48               LDR      R0,??Info_Refresh_0  ;; ??IRdiv
   \   00000004   0168               LDR      R1,[R0, #+0]
   \   00000006   1429               CMP      R1,#+20
   \   00000008   02DA               BGE      ??Info_Refresh_1
   \   0000000A   491C               ADDS     R1,R1,#+1
   \   0000000C   0160               STR      R1,[R0, #+0]
   \   0000000E   2AE0               B        ??Info_Refresh_2
   7778                 IRdiv=0;
   \                     ??Info_Refresh_1:
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0160               STR      R1,[R0, #+0]
   7779                 char txt[8];
   7780                 char labsize;
   7781          
   7782                labsize=sIntToStr((10000/(CyklPerSek)),txt); 
   \   00000014   6946               MOV      R1,SP
   \   00000016   0C00               MOVS     R4,R1
   \   00000018   1548               LDR      R0,??Info_Refresh_0+0x4  ;; 0x2710
   \   0000001A   1649               LDR      R1,??Info_Refresh_0+0x8  ;; CyklPerSek
   \   0000001C   0968               LDR      R1,[R1, #+0]
   \   0000001E   ........           BL       __aeabi_uidivmod
   \   00000022   2100               MOVS     R1,R4
   \   00000024   0004               LSLS     R0,R0,#+16
   \   00000026   0014               ASRS     R0,R0,#+16
   \   00000028   ........           BL       sIntToStr
   \   0000002C   0200               MOVS     R2,R0
   7783                 
   7784                 txt[labsize++]='m'; txt[labsize++]='s';
   \   0000002E   6846               MOV      R0,SP
   \   00000030   1100               MOVS     R1,R2
   \   00000032   6D23               MOVS     R3,#+109
   \   00000034   4354               STRB     R3,[R0, R1]
   \   00000036   521C               ADDS     R2,R2,#+1
   \   00000038   1206               LSLS     R2,R2,#+24
   \   0000003A   120E               LSRS     R2,R2,#+24
   \   0000003C   1100               MOVS     R1,R2
   \   0000003E   7323               MOVS     R3,#+115
   \   00000040   4354               STRB     R3,[R0, R1]
   7785                 Label(txt,0,10,14,labsize,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000042   82B0               SUB      SP,SP,#+8
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   8021               MOVS     R1,#+128
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   2821               MOVS     R1,#+40
   \   0000004E   521C               ADDS     R2,R2,#+1
   \   00000050   1000               MOVS     R0,R2
   \   00000052   0006               LSLS     R0,R0,#+24
   \   00000054   000E               LSRS     R0,R0,#+24
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   0E23               MOVS     R3,#+14
   \   0000005A   0A22               MOVS     R2,#+10
   \   0000005C   0021               MOVS     R1,#+0
   \   0000005E   06A8               ADD      R0,SP,#+24
   \   00000060   ........           BL       Label
   \   00000064   06B0               ADD      SP,SP,#+24
   7786            }
   7787          }//________________________________________________________________________
   \                     ??Info_Refresh_2:
   \   00000066   1CBC               POP      {R2-R4}
   \   00000068   01BC               POP      {R0}
   \   0000006A   0047               BX       R0               ;; return
   \                     ??Info_Refresh_0:
   \   0000006C   ........           DC32     ??IRdiv
   \   00000070   10270000           DC32     0x2710
   \   00000074   ........           DC32     CyklPerSek

   \                                 In section .bss, align 4
   \                     ??IRdiv:
   \   00000000                      DS8 4
   7788          
   7789          
   7790          
   7791          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7792          void Info_Event(void)
   7793                {
   \                     Info_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   7794                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000002   0C48               LDR      R0,??Info_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   2F28               CMP      R0,#+47
   \   0000000A   0FDB               BLT      ??Info_Event_1
   \   0000000C   3F28               CMP      R0,#+63
   \   0000000E   0DDA               BGE      ??Info_Event_1
   \   00000010   0948               LDR      R0,??Info_Event_0+0x4  ;; Y_up
   \   00000012   405E               LDRSH    R0,[R0, R1]
   \   00000014   7128               CMP      R0,#+113
   \   00000016   09DB               BLT      ??Info_Event_1
   \   00000018   7F28               CMP      R0,#+127
   \   0000001A   07DA               BGE      ??Info_Event_1
   7795                  {
   7796                    MenuLevel=(MenuLevel/10);
   \   0000001C   074C               LDR      R4,??Info_Event_0+0x8  ;; TextToChangeLength
   \   0000001E   A06C               LDR      R0,[R4, #+72]
   \   00000020   0A21               MOVS     R1,#+10
   \   00000022   ........           BL       __aeabi_idivmod
   \   00000026   A064               STR      R0,[R4, #+72]
   7797                    MenuPaint();
   \   00000028   ........           BL       MenuPaint
   7798                  }  
   7799          
   7800          }//________________________________________________________________________
   \                     ??Info_Event_1:
   \   0000002C   10BC               POP      {R4}
   \   0000002E   01BC               POP      {R0}
   \   00000030   0047               BX       R0               ;; return
   \   00000032   C046               Nop      
   \                     ??Info_Event_0:
   \   00000034   ........           DC32     X_up
   \   00000038   ........           DC32     Y_up
   \   0000003C   ........           DC32     TextToChangeLength
   7801              
   7802          
   7803          
   7804          
   7805          
   7806          

   \                                 In section Debug.txt, align 4, keep-with-next
   7807          void ThermostatAutoSet_Paint(_Screen* Screen)
   7808          {          
   \                     ThermostatAutoSet_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   7809                 List_Paint("Thermo",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   C2A0               ADR      R0,??ThermostatAutoSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   BF48               LDR      R0,??ThermostatAutoSet_Paint_0+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   7810          
   7811                 //Label("Model: ",0,3,100,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   7812                char txt[5]; txt[1]=0; 
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   6E46               MOV      R6,SP
   \   0000002A   2800               MOVS     R0,R5
   \   0000002C   7070               STRB     R0,[R6, #+1]
   \   0000002E   1F20               MOVS     R0,#+31
   \   00000030   3070               STRB     R0,[R6, #+0]
   7813                txt[0]=31;//dó³ 
   7814                Button(txt,2,89,18,18);
   \   00000032   82B0               SUB      SP,SP,#+8
   \   00000034   1220               MOVS     R0,#+18
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   0300               MOVS     R3,R0
   \   0000003A   5922               MOVS     R2,#+89
   \   0000003C   0221               MOVS     R1,#+2
   \   0000003E   02A8               ADD      R0,SP,#+8
   \   00000040   ........           BL       Button
   \   00000044   02B0               ADD      SP,SP,#+8
   7815                txt[1]=0; txt[0]=30;//góra 
   \   00000046   2800               MOVS     R0,R5
   \   00000048   7070               STRB     R0,[R6, #+1]
   \   0000004A   1E20               MOVS     R0,#+30
   \   0000004C   3070               STRB     R0,[R6, #+0]
   7816                Button(txt,43,89,18,18);
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   1220               MOVS     R0,#+18
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   0300               MOVS     R3,R0
   \   00000056   5922               MOVS     R2,#+89
   \   00000058   2B21               MOVS     R1,#+43
   \   0000005A   02A8               ADD      R0,SP,#+8
   \   0000005C   ........           BL       Button
   \   00000060   02B0               ADD      SP,SP,#+8
   7817                Label("T1",2,20,98,2,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   2800               MOVS     R0,R5
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   8021               MOVS     R1,#+128
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   1521               MOVS     R1,#+21
   \   0000006E   0220               MOVS     R0,#+2
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   6223               MOVS     R3,#+98
   \   00000074   1422               MOVS     R2,#+20
   \   00000076   0100               MOVS     R1,R0
   \   00000078   EBA0               ADR      R0,??ThermostatAutoSet_Paint_1  ;; 0x54, 0x31, 0x00, 0x00
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
   7818                
   7819                sIntToStr(Screen->Thermo.Temperature[0],txt); 
   \   00000080   2700               MOVS     R7,R4
   \   00000082   9237               ADDS     R7,R7,#+146
   \   00000084   6946               MOV      R1,SP
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   385E               LDRSH    R0,[R7, R0]
   \   0000008A   ........           BL       sIntToStr
   7820                Label(txt,2,20,89,4,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000008E   82B0               SUB      SP,SP,#+8
   \   00000090   2800               MOVS     R0,R5
   \   00000092   0090               STR      R0,[SP, #+0]
   \   00000094   8021               MOVS     R1,#+128
   \   00000096   03B4               PUSH     {R0,R1}
   \   00000098   1521               MOVS     R1,#+21
   \   0000009A   0420               MOVS     R0,#+4
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   5923               MOVS     R3,#+89
   \   000000A0   1422               MOVS     R2,#+20
   \   000000A2   0221               MOVS     R1,#+2
   \   000000A4   06A8               ADD      R0,SP,#+24
   \   000000A6   ........           BL       Label
   \   000000AA   06B0               ADD      SP,SP,#+24
   7821                
   7822          
   7823                
   7824                
   7825                txt[1]=0; txt[0]=31;//dó³
   \   000000AC   2800               MOVS     R0,R5
   \   000000AE   7070               STRB     R0,[R6, #+1]
   \   000000B0   1F20               MOVS     R0,#+31
   \   000000B2   3070               STRB     R0,[R6, #+0]
   7826                Button(txt,2,69,18,18);
   \   000000B4   82B0               SUB      SP,SP,#+8
   \   000000B6   1220               MOVS     R0,#+18
   \   000000B8   0090               STR      R0,[SP, #+0]
   \   000000BA   0300               MOVS     R3,R0
   \   000000BC   4522               MOVS     R2,#+69
   \   000000BE   0221               MOVS     R1,#+2
   \   000000C0   02A8               ADD      R0,SP,#+8
   \   000000C2   ........           BL       Button
   \   000000C6   02B0               ADD      SP,SP,#+8
   7827                txt[1]=0; txt[0]=30;//góra 
   \   000000C8   2800               MOVS     R0,R5
   \   000000CA   7070               STRB     R0,[R6, #+1]
   \   000000CC   1E20               MOVS     R0,#+30
   \   000000CE   3070               STRB     R0,[R6, #+0]
   7828                Button(txt,43,69,18,18);
   \   000000D0   82B0               SUB      SP,SP,#+8
   \   000000D2   1220               MOVS     R0,#+18
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   0300               MOVS     R3,R0
   \   000000D8   4522               MOVS     R2,#+69
   \   000000DA   2B21               MOVS     R1,#+43
   \   000000DC   02A8               ADD      R0,SP,#+8
   \   000000DE   ........           BL       Button
   \   000000E2   02B0               ADD      SP,SP,#+8
   7829                Label("T2",2,20,78,2,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   2800               MOVS     R0,R5
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   8021               MOVS     R1,#+128
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   1521               MOVS     R1,#+21
   \   000000F0   0220               MOVS     R0,#+2
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   4E23               MOVS     R3,#+78
   \   000000F6   1422               MOVS     R2,#+20
   \   000000F8   0100               MOVS     R1,R0
   \   000000FA   CCA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x4  ;; 0x54, 0x32, 0x00, 0x00
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   7830                sIntToStr(Screen->Thermo.Temperature[1],txt); 
   \   00000102   6946               MOV      R1,SP
   \   00000104   0220               MOVS     R0,#+2
   \   00000106   385E               LDRSH    R0,[R7, R0]
   \   00000108   ........           BL       sIntToStr
   7831                Label(txt,2,20,69,4,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   2800               MOVS     R0,R5
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   8021               MOVS     R1,#+128
   \   00000114   03B4               PUSH     {R0,R1}
   \   00000116   1521               MOVS     R1,#+21
   \   00000118   0420               MOVS     R0,#+4
   \   0000011A   03B4               PUSH     {R0,R1}
   \   0000011C   4523               MOVS     R3,#+69
   \   0000011E   1422               MOVS     R2,#+20
   \   00000120   0221               MOVS     R1,#+2
   \   00000122   06A8               ADD      R0,SP,#+24
   \   00000124   ........           BL       Label
   \   00000128   06B0               ADD      SP,SP,#+24
   7832                 
   7833                
   7834                
   7835                
   7836                char Ychart=54;
   7837                
   7838                H_line(1,Ychart+12,62,1);  
   \   0000012A   0123               MOVS     R3,#+1
   \   0000012C   3E22               MOVS     R2,#+62
   \   0000012E   4221               MOVS     R1,#+66
   \   00000130   1800               MOVS     R0,R3
   \   00000132   ........           BL       H_line
   7839                H_line(1,Ychart+11,62,1);  
   \   00000136   0123               MOVS     R3,#+1
   \   00000138   3E22               MOVS     R2,#+62
   \   0000013A   4121               MOVS     R1,#+65
   \   0000013C   1800               MOVS     R0,R3
   \   0000013E   ........           BL       H_line
   7840             
   7841                
   7842          
   7843                
   7844                for (char i=0; i<7; i++)
   \   00000142   2E00               MOVS     R6,R5
   \   00000144   28E0               B        ??ThermostatAutoSet_Paint_2
   7845                {
   7846                  Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart+2,1,6,0,128,((Screen->Thermo.Week>>i) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatAutoSet_Paint_3:
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   9120               MOVS     R0,#+145
   \   0000014A   205C               LDRB     R0,[R4, R0]
   \   0000014C   3041               ASRS     R0,R0,R6
   \   0000014E   0121               MOVS     R1,#+1
   \   00000150   0140               ANDS     R1,R1,R0
   \   00000152   0091               STR      R1,[SP, #+0]
   \   00000154   8021               MOVS     R1,#+128
   \   00000156   2800               MOVS     R0,R5
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   0621               MOVS     R1,#+6
   \   0000015C   0120               MOVS     R0,#+1
   \   0000015E   03B4               PUSH     {R0,R1}
   \   00000160   3823               MOVS     R3,#+56
   \   00000162   F200               LSLS     R2,R6,#+3
   \   00000164   121D               ADDS     R2,R2,#+4
   \   00000166   1206               LSLS     R2,R2,#+24
   \   00000168   120E               LSRS     R2,R2,#+24
   \   0000016A   0221               MOVS     R1,#+2
   \   0000016C   02B5               PUSH     {R1,LR}
   \   0000016E   9446               MOV      R12,R2
   \   00000170   AF49               LDR      R1,??ThermostatAutoSet_Paint_1+0x8  ;; 0x6db
   \   00000172   3200               MOVS     R2,R6
   \   00000174   AF48               LDR      R0,??ThermostatAutoSet_Paint_1+0xC  ;; g_leng
   \   00000176   0068               LDR      R0,[R0, #+0]
   \   00000178   9627               MOVS     R7,#+150
   \   0000017A   3F01               LSLS     R7,R7,#+4        ;; #+2400
   \   0000017C   7843               MULS     R0,R7,R0
   \   0000017E   AE4F               LDR      R7,??ThermostatAutoSet_Paint_1+0x10  ;; Speech
   \   00000180   3818               ADDS     R0,R7,R0
   \   00000182   8018               ADDS     R0,R0,R2
   \   00000184   4018               ADDS     R0,R0,R1
   \   00000186   6246               MOV      R2,R12
   \   00000188   0099               LDR      R1,[SP, #0]
   \   0000018A   02B0               ADD      SP,SP,#+8
   \   0000018C   ........           BL       Label
   \   00000190   06B0               ADD      SP,SP,#+24
   7847                }
   \   00000192   761C               ADDS     R6,R6,#+1
   \   00000194   3606               LSLS     R6,R6,#+24
   \   00000196   360E               LSRS     R6,R6,#+24
   \                     ??ThermostatAutoSet_Paint_2:
   \   00000198   3000               MOVS     R0,R6
   \   0000019A   0728               CMP      R0,#+7
   \   0000019C   D3D3               BCC      ??ThermostatAutoSet_Paint_3
   7848                
   7849                
   7850                for (char i=0; i<24; i++)
   \   0000019E   2E00               MOVS     R6,R5
   \   000001A0   13E0               B        ??ThermostatAutoSet_Paint_4
   7851                {
   7852                   V_line(8+(i*2),Ychart-7,4+((Screen->Thermo.Chart[0]>>i) & 0x1 )*2,1);  
   \                     ??ThermostatAutoSet_Paint_5:
   \   000001A2   0123               MOVS     R3,#+1
   \   000001A4   9820               MOVS     R0,#+152
   \   000001A6   2058               LDR      R0,[R4, R0]
   \   000001A8   F040               LSRS     R0,R0,R6
   \   000001AA   1900               MOVS     R1,R3
   \   000001AC   0140               ANDS     R1,R1,R0
   \   000001AE   4A00               LSLS     R2,R1,#+1
   \   000001B0   121D               ADDS     R2,R2,#+4
   \   000001B2   1206               LSLS     R2,R2,#+24
   \   000001B4   120E               LSRS     R2,R2,#+24
   \   000001B6   2F21               MOVS     R1,#+47
   \   000001B8   7000               LSLS     R0,R6,#+1
   \   000001BA   0830               ADDS     R0,R0,#+8
   \   000001BC   0006               LSLS     R0,R0,#+24
   \   000001BE   000E               LSRS     R0,R0,#+24
   \   000001C0   ........           BL       V_line
   7853                }
   \   000001C4   761C               ADDS     R6,R6,#+1
   \   000001C6   3606               LSLS     R6,R6,#+24
   \   000001C8   360E               LSRS     R6,R6,#+24
   \                     ??ThermostatAutoSet_Paint_4:
   \   000001CA   3000               MOVS     R0,R6
   \   000001CC   1828               CMP      R0,#+24
   \   000001CE   E8D3               BCC      ??ThermostatAutoSet_Paint_5
   \   000001D0   82B0               SUB      SP,SP,#+8
   \   000001D2   2800               MOVS     R0,R5
   \   000001D4   0090               STR      R0,[SP, #+0]
   \   000001D6   8021               MOVS     R1,#+128
   \   000001D8   03B4               PUSH     {R0,R1}
   \   000001DA   0521               MOVS     R1,#+5
   \   000001DC   0120               MOVS     R0,#+1
   \   000001DE   03B4               PUSH     {R0,R1}
   \   000001E0   2523               MOVS     R3,#+37
   \   000001E2   0622               MOVS     R2,#+6
   \   000001E4   2900               MOVS     R1,R5
   \   000001E6   95A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x14  ;; 0x30, 0x00, 0x00, 0x00
   7854                
   7855          
   7856                
   7857                Label("0",0,4+1*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000001E8   ........           BL       Label
   \   000001EC   06B0               ADD      SP,SP,#+24
   7858                V_line(6+1*2,Ychart-9,1,1); 
   \   000001EE   0123               MOVS     R3,#+1
   \   000001F0   1A00               MOVS     R2,R3
   \   000001F2   2D21               MOVS     R1,#+45
   \   000001F4   0820               MOVS     R0,#+8
   \   000001F6   ........           BL       V_line
   \   000001FA   82B0               SUB      SP,SP,#+8
   \   000001FC   2800               MOVS     R0,R5
   \   000001FE   0090               STR      R0,[SP, #+0]
   \   00000200   8021               MOVS     R1,#+128
   \   00000202   03B4               PUSH     {R0,R1}
   \   00000204   0521               MOVS     R1,#+5
   \   00000206   0120               MOVS     R0,#+1
   \   00000208   03B4               PUSH     {R0,R1}
   \   0000020A   2523               MOVS     R3,#+37
   \   0000020C   1222               MOVS     R2,#+18
   \   0000020E   2900               MOVS     R1,R5
   \   00000210   8BA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x18  ;; 0x36, 0x00, 0x00, 0x00
   7859                Label("6",0,6+6*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000212   ........           BL       Label
   \   00000216   06B0               ADD      SP,SP,#+24
   7860                V_line(6+6*2,Ychart-9,1,1); 
   \   00000218   0123               MOVS     R3,#+1
   \   0000021A   1A00               MOVS     R2,R3
   \   0000021C   2D21               MOVS     R1,#+45
   \   0000021E   1220               MOVS     R0,#+18
   \   00000220   ........           BL       V_line
   \   00000224   82B0               SUB      SP,SP,#+8
   \   00000226   2800               MOVS     R0,R5
   \   00000228   0090               STR      R0,[SP, #+0]
   \   0000022A   8021               MOVS     R1,#+128
   \   0000022C   03B4               PUSH     {R0,R1}
   \   0000022E   0521               MOVS     R1,#+5
   \   00000230   0220               MOVS     R0,#+2
   \   00000232   03B4               PUSH     {R0,R1}
   \   00000234   2523               MOVS     R3,#+37
   \   00000236   1C22               MOVS     R2,#+28
   \   00000238   2900               MOVS     R1,R5
   \   0000023A   82A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x1C  ;; 0x31, 0x32, 0x00, 0x00
   7861                Label("12",0,4+12*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000023C   ........           BL       Label
   \   00000240   06B0               ADD      SP,SP,#+24
   7862                V_line(6+12*2,Ychart-9,1,1); 
   \   00000242   0123               MOVS     R3,#+1
   \   00000244   1A00               MOVS     R2,R3
   \   00000246   2D21               MOVS     R1,#+45
   \   00000248   1E20               MOVS     R0,#+30
   \   0000024A   ........           BL       V_line
   \   0000024E   82B0               SUB      SP,SP,#+8
   \   00000250   2800               MOVS     R0,R5
   \   00000252   0090               STR      R0,[SP, #+0]
   \   00000254   8021               MOVS     R1,#+128
   \   00000256   03B4               PUSH     {R0,R1}
   \   00000258   0521               MOVS     R1,#+5
   \   0000025A   0220               MOVS     R0,#+2
   \   0000025C   03B4               PUSH     {R0,R1}
   \   0000025E   2523               MOVS     R3,#+37
   \   00000260   2822               MOVS     R2,#+40
   \   00000262   2900               MOVS     R1,R5
   \   00000264   78A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x20  ;; 0x31, 0x38, 0x00, 0x00
   7863                Label("18",0,4+18*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000266   ........           BL       Label
   \   0000026A   06B0               ADD      SP,SP,#+24
   7864                V_line(6+18*2,Ychart-9,1,1); 
   \   0000026C   0123               MOVS     R3,#+1
   \   0000026E   1A00               MOVS     R2,R3
   \   00000270   2D21               MOVS     R1,#+45
   \   00000272   2A20               MOVS     R0,#+42
   \   00000274   ........           BL       V_line
   \   00000278   82B0               SUB      SP,SP,#+8
   \   0000027A   2800               MOVS     R0,R5
   \   0000027C   0090               STR      R0,[SP, #+0]
   \   0000027E   8021               MOVS     R1,#+128
   \   00000280   03B4               PUSH     {R0,R1}
   \   00000282   0521               MOVS     R1,#+5
   \   00000284   0220               MOVS     R0,#+2
   \   00000286   03B4               PUSH     {R0,R1}
   \   00000288   2523               MOVS     R3,#+37
   \   0000028A   3222               MOVS     R2,#+50
   \   0000028C   2900               MOVS     R1,R5
   \   0000028E   6FA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x24  ;; 0x32, 0x33, 0x00, 0x00
   7865                Label("23",0,2+24*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000290   ........           BL       Label
   \   00000294   06B0               ADD      SP,SP,#+24
   7866                V_line(6+24*2,Ychart-9,1,1);             
   \   00000296   0123               MOVS     R3,#+1
   \   00000298   1A00               MOVS     R2,R3
   \   0000029A   2D21               MOVS     R1,#+45
   \   0000029C   3620               MOVS     R0,#+54
   \   0000029E   ........           BL       V_line
   7867                
   7868                
   7869                Ychart=21;
   7870                H_line(1,Ychart+12,62,1); 
   \   000002A2   0123               MOVS     R3,#+1
   \   000002A4   3E22               MOVS     R2,#+62
   \   000002A6   2121               MOVS     R1,#+33
   \   000002A8   1800               MOVS     R0,R3
   \   000002AA   ........           BL       H_line
   7871                 H_line(1,Ychart+11,62,1);  
   \   000002AE   0123               MOVS     R3,#+1
   \   000002B0   3E22               MOVS     R2,#+62
   \   000002B2   2021               MOVS     R1,#+32
   \   000002B4   1800               MOVS     R0,R3
   \   000002B6   ........           BL       H_line
   7872                
   7873                for (char i=0; i<7; i++)
   \   000002BA   2E00               MOVS     R6,R5
   \   000002BC   28E0               B        ??ThermostatAutoSet_Paint_6
   7874                {
   7875                  Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart+2,1,6,0,128,((~(Screen->Thermo.Week>>i)) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatAutoSet_Paint_7:
   \   000002BE   82B0               SUB      SP,SP,#+8
   \   000002C0   9120               MOVS     R0,#+145
   \   000002C2   205C               LDRB     R0,[R4, R0]
   \   000002C4   3041               ASRS     R0,R0,R6
   \   000002C6   0121               MOVS     R1,#+1
   \   000002C8   8143               BICS     R1,R1,R0
   \   000002CA   0091               STR      R1,[SP, #+0]
   \   000002CC   8021               MOVS     R1,#+128
   \   000002CE   2800               MOVS     R0,R5
   \   000002D0   03B4               PUSH     {R0,R1}
   \   000002D2   0621               MOVS     R1,#+6
   \   000002D4   0120               MOVS     R0,#+1
   \   000002D6   03B4               PUSH     {R0,R1}
   \   000002D8   1723               MOVS     R3,#+23
   \   000002DA   F200               LSLS     R2,R6,#+3
   \   000002DC   121D               ADDS     R2,R2,#+4
   \   000002DE   1206               LSLS     R2,R2,#+24
   \   000002E0   120E               LSRS     R2,R2,#+24
   \   000002E2   0221               MOVS     R1,#+2
   \   000002E4   02B5               PUSH     {R1,LR}
   \   000002E6   9446               MOV      R12,R2
   \   000002E8   5149               LDR      R1,??ThermostatAutoSet_Paint_1+0x8  ;; 0x6db
   \   000002EA   3200               MOVS     R2,R6
   \   000002EC   5148               LDR      R0,??ThermostatAutoSet_Paint_1+0xC  ;; g_leng
   \   000002EE   0068               LDR      R0,[R0, #+0]
   \   000002F0   9627               MOVS     R7,#+150
   \   000002F2   3F01               LSLS     R7,R7,#+4        ;; #+2400
   \   000002F4   7843               MULS     R0,R7,R0
   \   000002F6   504F               LDR      R7,??ThermostatAutoSet_Paint_1+0x10  ;; Speech
   \   000002F8   3818               ADDS     R0,R7,R0
   \   000002FA   8018               ADDS     R0,R0,R2
   \   000002FC   4018               ADDS     R0,R0,R1
   \   000002FE   6246               MOV      R2,R12
   \   00000300   0099               LDR      R1,[SP, #0]
   \   00000302   02B0               ADD      SP,SP,#+8
   \   00000304   ........           BL       Label
   \   00000308   06B0               ADD      SP,SP,#+24
   7876                } 
   \   0000030A   761C               ADDS     R6,R6,#+1
   \   0000030C   3606               LSLS     R6,R6,#+24
   \   0000030E   360E               LSRS     R6,R6,#+24
   \                     ??ThermostatAutoSet_Paint_6:
   \   00000310   3000               MOVS     R0,R6
   \   00000312   0728               CMP      R0,#+7
   \   00000314   D3D3               BCC      ??ThermostatAutoSet_Paint_7
   7877                 
   7878                for (char i=0; i<24; i++)
   \   00000316   18E0               B        ??ThermostatAutoSet_Paint_8
   \                     ??ThermostatAutoSet_Paint_0:
   \   00000318   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000031C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   7879                {
   7880                   V_line(8+(i*2),Ychart-7,4+((Screen->Thermo.Chart[1]>>i) & 0x1 )*2,1);  
   \                     ??ThermostatAutoSet_Paint_9:
   \   00000320   0123               MOVS     R3,#+1
   \   00000322   2000               MOVS     R0,R4
   \   00000324   9830               ADDS     R0,R0,#+152
   \   00000326   4068               LDR      R0,[R0, #+4]
   \   00000328   E840               LSRS     R0,R0,R5
   \   0000032A   1900               MOVS     R1,R3
   \   0000032C   0140               ANDS     R1,R1,R0
   \   0000032E   4A00               LSLS     R2,R1,#+1
   \   00000330   121D               ADDS     R2,R2,#+4
   \   00000332   1206               LSLS     R2,R2,#+24
   \   00000334   120E               LSRS     R2,R2,#+24
   \   00000336   0E21               MOVS     R1,#+14
   \   00000338   6800               LSLS     R0,R5,#+1
   \   0000033A   0830               ADDS     R0,R0,#+8
   \   0000033C   0006               LSLS     R0,R0,#+24
   \   0000033E   000E               LSRS     R0,R0,#+24
   \   00000340   ........           BL       V_line
   7881                }
   \   00000344   6D1C               ADDS     R5,R5,#+1
   \   00000346   2D06               LSLS     R5,R5,#+24
   \   00000348   2D0E               LSRS     R5,R5,#+24
   \                     ??ThermostatAutoSet_Paint_8:
   \   0000034A   2800               MOVS     R0,R5
   \   0000034C   1828               CMP      R0,#+24
   \   0000034E   E7D3               BCC      ??ThermostatAutoSet_Paint_9
   7882                
   7883                Label("0",0,4+1*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000350   82B0               SUB      SP,SP,#+8
   \   00000352   0020               MOVS     R0,#+0
   \   00000354   0090               STR      R0,[SP, #+0]
   \   00000356   8021               MOVS     R1,#+128
   \   00000358   03B4               PUSH     {R0,R1}
   \   0000035A   0521               MOVS     R1,#+5
   \   0000035C   0120               MOVS     R0,#+1
   \   0000035E   03B4               PUSH     {R0,R1}
   \   00000360   0423               MOVS     R3,#+4
   \   00000362   0622               MOVS     R2,#+6
   \   00000364   0021               MOVS     R1,#+0
   \   00000366   35A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x14  ;; 0x30, 0x00, 0x00, 0x00
   \   00000368   ........           BL       Label
   \   0000036C   06B0               ADD      SP,SP,#+24
   7884                V_line(6+1*2,Ychart-9,1,1); 
   \   0000036E   0123               MOVS     R3,#+1
   \   00000370   1A00               MOVS     R2,R3
   \   00000372   0C21               MOVS     R1,#+12
   \   00000374   0820               MOVS     R0,#+8
   \   00000376   ........           BL       V_line
   7885                Label("6",0,6+6*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000037A   82B0               SUB      SP,SP,#+8
   \   0000037C   0020               MOVS     R0,#+0
   \   0000037E   0090               STR      R0,[SP, #+0]
   \   00000380   8021               MOVS     R1,#+128
   \   00000382   03B4               PUSH     {R0,R1}
   \   00000384   0521               MOVS     R1,#+5
   \   00000386   0120               MOVS     R0,#+1
   \   00000388   03B4               PUSH     {R0,R1}
   \   0000038A   0423               MOVS     R3,#+4
   \   0000038C   1222               MOVS     R2,#+18
   \   0000038E   0021               MOVS     R1,#+0
   \   00000390   2BA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x18  ;; 0x36, 0x00, 0x00, 0x00
   \   00000392   ........           BL       Label
   \   00000396   06B0               ADD      SP,SP,#+24
   7886                V_line(6+6*2,Ychart-9,1,1); 
   \   00000398   0123               MOVS     R3,#+1
   \   0000039A   1A00               MOVS     R2,R3
   \   0000039C   0C21               MOVS     R1,#+12
   \   0000039E   1220               MOVS     R0,#+18
   \   000003A0   ........           BL       V_line
   7887                Label("12",0,4+12*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003A4   82B0               SUB      SP,SP,#+8
   \   000003A6   0020               MOVS     R0,#+0
   \   000003A8   0090               STR      R0,[SP, #+0]
   \   000003AA   8021               MOVS     R1,#+128
   \   000003AC   03B4               PUSH     {R0,R1}
   \   000003AE   0521               MOVS     R1,#+5
   \   000003B0   0220               MOVS     R0,#+2
   \   000003B2   03B4               PUSH     {R0,R1}
   \   000003B4   0423               MOVS     R3,#+4
   \   000003B6   1C22               MOVS     R2,#+28
   \   000003B8   0021               MOVS     R1,#+0
   \   000003BA   22A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x1C  ;; 0x31, 0x32, 0x00, 0x00
   \   000003BC   ........           BL       Label
   \   000003C0   06B0               ADD      SP,SP,#+24
   7888                V_line(6+12*2,Ychart-9,1,1); 
   \   000003C2   0123               MOVS     R3,#+1
   \   000003C4   1A00               MOVS     R2,R3
   \   000003C6   0C21               MOVS     R1,#+12
   \   000003C8   1E20               MOVS     R0,#+30
   \   000003CA   ........           BL       V_line
   7889                Label("18",0,4+18*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003CE   82B0               SUB      SP,SP,#+8
   \   000003D0   0020               MOVS     R0,#+0
   \   000003D2   0090               STR      R0,[SP, #+0]
   \   000003D4   8021               MOVS     R1,#+128
   \   000003D6   03B4               PUSH     {R0,R1}
   \   000003D8   0521               MOVS     R1,#+5
   \   000003DA   0220               MOVS     R0,#+2
   \   000003DC   03B4               PUSH     {R0,R1}
   \   000003DE   0423               MOVS     R3,#+4
   \   000003E0   2822               MOVS     R2,#+40
   \   000003E2   0021               MOVS     R1,#+0
   \   000003E4   18A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x20  ;; 0x31, 0x38, 0x00, 0x00
   \   000003E6   ........           BL       Label
   \   000003EA   06B0               ADD      SP,SP,#+24
   7890                V_line(6+18*2,Ychart-9,1,1); 
   \   000003EC   0123               MOVS     R3,#+1
   \   000003EE   1A00               MOVS     R2,R3
   \   000003F0   0C21               MOVS     R1,#+12
   \   000003F2   2A20               MOVS     R0,#+42
   \   000003F4   ........           BL       V_line
   7891                Label("23",0,2+24*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003F8   82B0               SUB      SP,SP,#+8
   \   000003FA   0020               MOVS     R0,#+0
   \   000003FC   0090               STR      R0,[SP, #+0]
   \   000003FE   8021               MOVS     R1,#+128
   \   00000400   03B4               PUSH     {R0,R1}
   \   00000402   0521               MOVS     R1,#+5
   \   00000404   0220               MOVS     R0,#+2
   \   00000406   03B4               PUSH     {R0,R1}
   \   00000408   0423               MOVS     R3,#+4
   \   0000040A   3222               MOVS     R2,#+50
   \   0000040C   0021               MOVS     R1,#+0
   \   0000040E   0FA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x24  ;; 0x32, 0x33, 0x00, 0x00
   \   00000410   ........           BL       Label
   \   00000414   06B0               ADD      SP,SP,#+24
   7892                V_line(6+24*2,Ychart-9,1,1);             
   \   00000416   0123               MOVS     R3,#+1
   \   00000418   1A00               MOVS     R2,R3
   \   0000041A   0C21               MOVS     R1,#+12
   \   0000041C   3620               MOVS     R0,#+54
   \   0000041E   ........           BL       V_line
   7893                
   7894          }//________________________________________________________________________
   \   00000422   FEBC               POP      {R1-R7}
   \   00000424   01BC               POP      {R0}
   \   00000426   0047               BX       R0               ;; return
   \                     ??ThermostatAutoSet_Paint_1:
   \   00000428   54310000           DC8      0x54, 0x31, 0x00, 0x00
   \   0000042C   54320000           DC8      0x54, 0x32, 0x00, 0x00
   \   00000430   DB060000           DC32     0x6db
   \   00000434   ........           DC32     g_leng
   \   00000438   ........           DC32     Speech
   \   0000043C   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000440   36000000           DC8      0x36, 0x00, 0x00, 0x00
   \   00000444   31320000           DC8      0x31, 0x32, 0x00, 0x00
   \   00000448   31380000           DC8      0x31, 0x38, 0x00, 0x00
   \   0000044C   32330000           DC8      0x32, 0x33, 0x00, 0x00
   7895          
   7896              
   7897          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7898          void ThermostatAutoSet_Event(_Screen* Screen)
   7899                {
   \                     ThermostatAutoSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   A24C               LDR      R4,??ThermostatAutoSet_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   235E               LDRSH    R3,[R4, R0]
   \   00000012   A048               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   9F48               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   9F48               LDR      R0,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   0000001E   0025               MOVS     R5,#+0
   \   00000020   405F               LDRSH    R0,[R0, R5]
   7900             
   7901                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   2CD5               BPL      ??ThermostatAutoSet_Event_1
   7902                  {
   7903                     if (ProgramChange) 
   \   0000002C   9C4E               LDR      R6,??ThermostatAutoSet_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   307A               LDRB     R0,[R6, #+8]
   \   00000030   0028               CMP      R0,#+0
   \   00000032   20D0               BEQ      ??ThermostatAutoSet_Event_2
   7904                    {
   7905                        
   7906                        if (((gProg.Screen[CurrentSheet].Thermo.Chart[DateTime.DayOfWeek]>>DateTime.Hour) & 0x1)==1)
   \   00000034   3079               LDRB     R0,[R6, #+4]
   \   00000036   A021               MOVS     R1,#+160
   \   00000038   4843               MULS     R0,R1,R0
   \   0000003A   9A49               LDR      R1,??ThermostatAutoSet_Event_0+0x14  ;; gProg
   \   0000003C   0818               ADDS     R0,R1,R0
   \   0000003E   9A49               LDR      R1,??ThermostatAutoSet_Event_0+0x18  ;; DateTime
   \   00000040   9A4A               LDR      R2,??ThermostatAutoSet_Event_0+0x1C  ;; 0xbc30
   \   00000042   8B79               LDRB     R3,[R1, #+6]
   \   00000044   9B00               LSLS     R3,R3,#+2
   \   00000046   C318               ADDS     R3,R0,R3
   \   00000048   9A58               LDR      R2,[R3, R2]
   \   0000004A   C978               LDRB     R1,[R1, #+3]
   \   0000004C   CA40               LSRS     R2,R2,R1
   \   0000004E   D107               LSLS     R1,R2,#+31
   \   00000050   04D5               BPL      ??ThermostatAutoSet_Event_3
   7907                        {
   7908                          gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[0]; 
   \   00000052   9749               LDR      R1,??ThermostatAutoSet_Event_0+0x20  ;; 0xbc2a
   \   00000054   4018               ADDS     R0,R0,R1
   \   00000056   0188               LDRH     R1,[R0, #+0]
   \   00000058   8180               STRH     R1,[R0, #+4]
   \   0000005A   03E0               B        ??ThermostatAutoSet_Event_4
   7909                        }else{
   7910                          gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[1]; 
   \                     ??ThermostatAutoSet_Event_3:
   \   0000005C   9449               LDR      R1,??ThermostatAutoSet_Event_0+0x20  ;; 0xbc2a
   \   0000005E   4018               ADDS     R0,R0,R1
   \   00000060   4188               LDRH     R1,[R0, #+2]
   \   00000062   8180               STRH     R1,[R0, #+4]
   7911                        }
   7912                        
   7913                        ThermostatsTimeChartExecute(); 
   \                     ??ThermostatAutoSet_Event_4:
   \   00000064   ........           BL       ThermostatsTimeChartExecute
   7914                        ThermostatsExecute();
   \   00000068   ........           BL       ThermostatsExecute
   7915                        
   7916                        MenuLevel=(MenuLevel*10+0); 
   \   0000006C   B06C               LDR      R0,[R6, #+72]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   4843               MULS     R0,R1,R0
   \   00000072   B064               STR      R0,[R6, #+72]
   \   00000074   04E0               B        ??ThermostatAutoSet_Event_5
   7917                    }else{
   7918                      MenuLevel=(MenuLevel/10);
   \                     ??ThermostatAutoSet_Event_2:
   \   00000076   B06C               LDR      R0,[R6, #+72]
   \   00000078   0A21               MOVS     R1,#+10
   \   0000007A   ........           BL       __aeabi_idivmod
   \   0000007E   B064               STR      R0,[R6, #+72]
   7919                    }
   7920                    MenuPaint();
   \                     ??ThermostatAutoSet_Event_5:
   \   00000080   ........           BL       MenuPaint
   \   00000084   01E1               B        ??ThermostatAutoSet_Event_6
   7921                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ThermostatAutoSet_Event_1:
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   205E               LDRSH    R0,[R4, R0]
   \   0000008A   7028               CMP      R0,#+112
   \   0000008C   05DB               BLT      ??ThermostatAutoSet_Event_7
   \   0000008E   8248               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   7028               CMP      R0,#+112
   \   00000096   00DB               BLT      .+4
   \   00000098   F7E0               B        ??ThermostatAutoSet_Event_6
   7922                  {  
   7923                  
   7924                         char Refresh=0; 
   \                     ??ThermostatAutoSet_Event_7:
   \   0000009A   2F00               MOVS     R7,R5
   7925                        
   7926                        char txt[5]; txt[1]=0; 
   \   0000009C   6E46               MOV      R6,SP
   \   0000009E   2800               MOVS     R0,R5
   \   000000A0   7070               STRB     R0,[R6, #+1]
   \   000000A2   1F20               MOVS     R0,#+31
   \   000000A4   3070               STRB     R0,[R6, #+0]
   7927                        txt[0]=31;//dó³ 
   7928                        if ((Button(txt,2,89,18,18)==2) && (Screen->Thermo.Temperature[0]>0)) {Screen->Thermo.Temperature[0]--; Refresh=1; ProgramChange=1;}
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   1220               MOVS     R0,#+18
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   0300               MOVS     R3,R0
   \   000000AE   5922               MOVS     R2,#+89
   \   000000B0   0221               MOVS     R1,#+2
   \   000000B2   02A8               ADD      R0,SP,#+8
   \   000000B4   ........           BL       Button
   \   000000B8   02B0               ADD      SP,SP,#+8
   \   000000BA   0228               CMP      R0,#+2
   \   000000BC   0DD1               BNE      ??ThermostatAutoSet_Event_8
   \   000000BE   0298               LDR      R0,[SP, #+8]
   \   000000C0   9230               ADDS     R0,R0,#+146
   \   000000C2   0021               MOVS     R1,#+0
   \   000000C4   415E               LDRSH    R1,[R0, R1]
   \   000000C6   0129               CMP      R1,#+1
   \   000000C8   07DB               BLT      ??ThermostatAutoSet_Event_8
   \   000000CA   0021               MOVS     R1,#+0
   \   000000CC   415E               LDRSH    R1,[R0, R1]
   \   000000CE   491E               SUBS     R1,R1,#+1
   \   000000D0   0180               STRH     R1,[R0, #+0]
   \   000000D2   0120               MOVS     R0,#+1
   \   000000D4   0700               MOVS     R7,R0
   \   000000D6   7749               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   000000D8   0870               STRB     R0,[R1, #+0]
   7929                        txt[1]=0; txt[0]=30;//góra 
   \                     ??ThermostatAutoSet_Event_8:
   \   000000DA   2800               MOVS     R0,R5
   \   000000DC   7070               STRB     R0,[R6, #+1]
   \   000000DE   1E20               MOVS     R0,#+30
   \   000000E0   3070               STRB     R0,[R6, #+0]
   7930                        if ((Button(txt,43,89,18,18)==2) && (Screen->Thermo.Temperature[0]<500)) {Screen->Thermo.Temperature[0]++; Refresh=1; ProgramChange=1;}
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   1220               MOVS     R0,#+18
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   0300               MOVS     R3,R0
   \   000000EA   5922               MOVS     R2,#+89
   \   000000EC   2B21               MOVS     R1,#+43
   \   000000EE   02A8               ADD      R0,SP,#+8
   \   000000F0   ........           BL       Button
   \   000000F4   02B0               ADD      SP,SP,#+8
   \   000000F6   0228               CMP      R0,#+2
   \   000000F8   0FD1               BNE      ??ThermostatAutoSet_Event_9
   \   000000FA   0298               LDR      R0,[SP, #+8]
   \   000000FC   9230               ADDS     R0,R0,#+146
   \   000000FE   0021               MOVS     R1,#+0
   \   00000100   415E               LDRSH    R1,[R0, R1]
   \   00000102   FA22               MOVS     R2,#+250
   \   00000104   5200               LSLS     R2,R2,#+1        ;; #+500
   \   00000106   9142               CMP      R1,R2
   \   00000108   07DA               BGE      ??ThermostatAutoSet_Event_9
   \   0000010A   0021               MOVS     R1,#+0
   \   0000010C   415E               LDRSH    R1,[R0, R1]
   \   0000010E   491C               ADDS     R1,R1,#+1
   \   00000110   0180               STRH     R1,[R0, #+0]
   \   00000112   0120               MOVS     R0,#+1
   \   00000114   0700               MOVS     R7,R0
   \   00000116   6749               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   00000118   0870               STRB     R0,[R1, #+0]
   7931                        
   7932                        txt[1]=0; txt[0]=31;//dó³
   \                     ??ThermostatAutoSet_Event_9:
   \   0000011A   2800               MOVS     R0,R5
   \   0000011C   7070               STRB     R0,[R6, #+1]
   \   0000011E   1F20               MOVS     R0,#+31
   \   00000120   3070               STRB     R0,[R6, #+0]
   7933                        if ((Button(txt,2,69,18,18)==2) && (Screen->Thermo.Temperature[1]>0)) {Screen->Thermo.Temperature[1]--;Refresh=1; ProgramChange=1;}
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   1220               MOVS     R0,#+18
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   0300               MOVS     R3,R0
   \   0000012A   4522               MOVS     R2,#+69
   \   0000012C   0221               MOVS     R1,#+2
   \   0000012E   02A8               ADD      R0,SP,#+8
   \   00000130   ........           BL       Button
   \   00000134   02B0               ADD      SP,SP,#+8
   \   00000136   0228               CMP      R0,#+2
   \   00000138   0DD1               BNE      ??ThermostatAutoSet_Event_10
   \   0000013A   0298               LDR      R0,[SP, #+8]
   \   0000013C   9230               ADDS     R0,R0,#+146
   \   0000013E   0221               MOVS     R1,#+2
   \   00000140   415E               LDRSH    R1,[R0, R1]
   \   00000142   0129               CMP      R1,#+1
   \   00000144   07DB               BLT      ??ThermostatAutoSet_Event_10
   \   00000146   0221               MOVS     R1,#+2
   \   00000148   415E               LDRSH    R1,[R0, R1]
   \   0000014A   491E               SUBS     R1,R1,#+1
   \   0000014C   4180               STRH     R1,[R0, #+2]
   \   0000014E   0120               MOVS     R0,#+1
   \   00000150   0700               MOVS     R7,R0
   \   00000152   5849               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   00000154   0870               STRB     R0,[R1, #+0]
   7934                        txt[1]=0; txt[0]=30;//góra 
   \                     ??ThermostatAutoSet_Event_10:
   \   00000156   2800               MOVS     R0,R5
   \   00000158   7070               STRB     R0,[R6, #+1]
   \   0000015A   1E20               MOVS     R0,#+30
   \   0000015C   3070               STRB     R0,[R6, #+0]
   7935                        if ((Button(txt,43,69,18,18)==2) && (Screen->Thermo.Temperature[1]<5000)) {Screen->Thermo.Temperature[1]++;Refresh=1; ProgramChange=1;}
   \   0000015E   82B0               SUB      SP,SP,#+8
   \   00000160   1220               MOVS     R0,#+18
   \   00000162   0090               STR      R0,[SP, #+0]
   \   00000164   0300               MOVS     R3,R0
   \   00000166   4522               MOVS     R2,#+69
   \   00000168   2B21               MOVS     R1,#+43
   \   0000016A   02A8               ADD      R0,SP,#+8
   \   0000016C   ........           BL       Button
   \   00000170   02B0               ADD      SP,SP,#+8
   \   00000172   0228               CMP      R0,#+2
   \   00000174   0ED1               BNE      ??ThermostatAutoSet_Event_11
   \   00000176   0298               LDR      R0,[SP, #+8]
   \   00000178   9230               ADDS     R0,R0,#+146
   \   0000017A   0221               MOVS     R1,#+2
   \   0000017C   415E               LDRSH    R1,[R0, R1]
   \   0000017E   4E4A               LDR      R2,??ThermostatAutoSet_Event_0+0x28  ;; 0x1388
   \   00000180   9142               CMP      R1,R2
   \   00000182   07DA               BGE      ??ThermostatAutoSet_Event_11
   \   00000184   0221               MOVS     R1,#+2
   \   00000186   415E               LDRSH    R1,[R0, R1]
   \   00000188   491C               ADDS     R1,R1,#+1
   \   0000018A   4180               STRH     R1,[R0, #+2]
   \   0000018C   0120               MOVS     R0,#+1
   \   0000018E   0700               MOVS     R7,R0
   \   00000190   4849               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   00000192   0870               STRB     R0,[R1, #+0]
   7936          
   7937                        //je¿eli klikniêto obszar Chart 0
   7938                        if ((Y_up>34) && (Y_up<62) && (X_up>0))  {CurentChartModyfi=0; Refresh=1; MenuLevel=(MenuLevel*10+1);}
   \                     ??ThermostatAutoSet_Event_11:
   \   00000194   4048               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   00000196   0021               MOVS     R1,#+0
   \   00000198   405E               LDRSH    R0,[R0, R1]
   \   0000019A   2328               CMP      R0,#+35
   \   0000019C   0EDB               BLT      ??ThermostatAutoSet_Event_12
   \   0000019E   3E28               CMP      R0,#+62
   \   000001A0   0CDA               BGE      ??ThermostatAutoSet_Event_12
   \   000001A2   3E49               LDR      R1,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   000001A4   0022               MOVS     R2,#+0
   \   000001A6   895E               LDRSH    R1,[R1, R2]
   \   000001A8   0129               CMP      R1,#+1
   \   000001AA   07DB               BLT      ??ThermostatAutoSet_Event_12
   \   000001AC   3C4E               LDR      R6,??ThermostatAutoSet_Event_0+0x10  ;; TextToChangeLength
   \   000001AE   B570               STRB     R5,[R6, #+2]
   \   000001B0   0127               MOVS     R7,#+1
   \   000001B2   B16C               LDR      R1,[R6, #+72]
   \   000001B4   0A22               MOVS     R2,#+10
   \   000001B6   5143               MULS     R1,R2,R1
   \   000001B8   491C               ADDS     R1,R1,#+1
   \   000001BA   B164               STR      R1,[R6, #+72]
   7939                        if ((Y_up>0) && (Y_up<30) && (X_up>0))  {CurentChartModyfi=1; Refresh=1; MenuLevel=(MenuLevel*10+1);}
   \                     ??ThermostatAutoSet_Event_12:
   \   000001BC   0128               CMP      R0,#+1
   \   000001BE   10DB               BLT      ??ThermostatAutoSet_Event_13
   \   000001C0   1E28               CMP      R0,#+30
   \   000001C2   0EDA               BGE      ??ThermostatAutoSet_Event_13
   \   000001C4   3548               LDR      R0,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   000001C6   0021               MOVS     R1,#+0
   \   000001C8   405E               LDRSH    R0,[R0, R1]
   \   000001CA   0128               CMP      R0,#+1
   \   000001CC   09DB               BLT      ??ThermostatAutoSet_Event_13
   \   000001CE   344E               LDR      R6,??ThermostatAutoSet_Event_0+0x10  ;; TextToChangeLength
   \   000001D0   0120               MOVS     R0,#+1
   \   000001D2   0100               MOVS     R1,R0
   \   000001D4   B170               STRB     R1,[R6, #+2]
   \   000001D6   0700               MOVS     R7,R0
   \   000001D8   B06C               LDR      R0,[R6, #+72]
   \   000001DA   0A21               MOVS     R1,#+10
   \   000001DC   4843               MULS     R0,R1,R0
   \   000001DE   401C               ADDS     R0,R0,#+1
   \   000001E0   B064               STR      R0,[R6, #+72]
   7940                         
   7941                        if ((X_down>0) && (Y_down>0)) Refresh=1;
   \                     ??ThermostatAutoSet_Event_13:
   \   000001E2   2C48               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   000001E4   0021               MOVS     R1,#+0
   \   000001E6   405E               LDRSH    R0,[R0, R1]
   \   000001E8   0128               CMP      R0,#+1
   \   000001EA   04DB               BLT      ??ThermostatAutoSet_Event_14
   \   000001EC   0020               MOVS     R0,#+0
   \   000001EE   205E               LDRSH    R0,[R4, R0]
   \   000001F0   0128               CMP      R0,#+1
   \   000001F2   00DB               BLT      ??ThermostatAutoSet_Event_14
   \   000001F4   0127               MOVS     R7,#+1
   7942                        if (Refresh==1) MenuPaint();  
   \                     ??ThermostatAutoSet_Event_14:
   \   000001F6   012F               CMP      R7,#+1
   \   000001F8   01D1               BNE      ??ThermostatAutoSet_Event_15
   \   000001FA   ........           BL       MenuPaint
   7943                        if ((Y_down>34) && (Y_down<62) && (X_down>0))  {
   \                     ??ThermostatAutoSet_Event_15:
   \   000001FE   0020               MOVS     R0,#+0
   \   00000200   205E               LDRSH    R0,[R4, R0]
   \   00000202   2328               CMP      R0,#+35
   \   00000204   1EDB               BLT      ??ThermostatAutoSet_Event_16
   \   00000206   3E28               CMP      R0,#+62
   \   00000208   1CDA               BGE      ??ThermostatAutoSet_Event_16
   \   0000020A   2248               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   0000020C   0021               MOVS     R1,#+0
   \   0000020E   405E               LDRSH    R0,[R0, R1]
   \   00000210   0128               CMP      R0,#+1
   \   00000212   17DB               BLT      ??ThermostatAutoSet_Event_16
   7944                            V_line(1,32,33,1);
   \   00000214   0123               MOVS     R3,#+1
   \   00000216   2122               MOVS     R2,#+33
   \   00000218   2021               MOVS     R1,#+32
   \   0000021A   1800               MOVS     R0,R3
   \   0000021C   ........           BL       V_line
   7945                            V_line(61,32,33,1);
   \   00000220   0123               MOVS     R3,#+1
   \   00000222   2122               MOVS     R2,#+33
   \   00000224   2021               MOVS     R1,#+32
   \   00000226   3D20               MOVS     R0,#+61
   \   00000228   ........           BL       V_line
   7946                            H_line(1,64,62,1);
   \   0000022C   0123               MOVS     R3,#+1
   \   0000022E   3E22               MOVS     R2,#+62
   \   00000230   4021               MOVS     R1,#+64
   \   00000232   1800               MOVS     R0,R3
   \   00000234   ........           BL       H_line
   7947                            H_line(1,34,62,1);
   \   00000238   0123               MOVS     R3,#+1
   \   0000023A   3E22               MOVS     R2,#+62
   \   0000023C   2221               MOVS     R1,#+34
   \   0000023E   1800               MOVS     R0,R3
   \   00000240   ........           BL       H_line
   7948                         }
   7949                        if ((Y_down>0) && (Y_down<30) && (X_down>0))  {
   \                     ??ThermostatAutoSet_Event_16:
   \   00000244   0020               MOVS     R0,#+0
   \   00000246   205E               LDRSH    R0,[R4, R0]
   \   00000248   0128               CMP      R0,#+1
   \   0000024A   1EDB               BLT      ??ThermostatAutoSet_Event_6
   \   0000024C   1E28               CMP      R0,#+30
   \   0000024E   1CDA               BGE      ??ThermostatAutoSet_Event_6
   \   00000250   1048               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   00000252   0021               MOVS     R1,#+0
   \   00000254   405E               LDRSH    R0,[R0, R1]
   \   00000256   0128               CMP      R0,#+1
   \   00000258   17DB               BLT      ??ThermostatAutoSet_Event_6
   7950                            V_line(1,3,30,1);
   \   0000025A   0123               MOVS     R3,#+1
   \   0000025C   1E22               MOVS     R2,#+30
   \   0000025E   0321               MOVS     R1,#+3
   \   00000260   1800               MOVS     R0,R3
   \   00000262   ........           BL       V_line
   7951                            V_line(61,3,30,1);
   \   00000266   0123               MOVS     R3,#+1
   \   00000268   1E22               MOVS     R2,#+30
   \   0000026A   0321               MOVS     R1,#+3
   \   0000026C   3D20               MOVS     R0,#+61
   \   0000026E   ........           BL       V_line
   7952                            H_line(1,31,62,1);
   \   00000272   0123               MOVS     R3,#+1
   \   00000274   3E22               MOVS     R2,#+62
   \   00000276   1F21               MOVS     R1,#+31
   \   00000278   1800               MOVS     R0,R3
   \   0000027A   ........           BL       H_line
   7953                            H_line(1,2,62,1);
   \   0000027E   0123               MOVS     R3,#+1
   \   00000280   3E22               MOVS     R2,#+62
   \   00000282   0221               MOVS     R1,#+2
   \   00000284   1800               MOVS     R0,R3
   \   00000286   ........           BL       H_line
   7954                         }
   7955                        
   7956                  }
   7957          }//________________________________________________________________________
   \                     ??ThermostatAutoSet_Event_6:
   \   0000028A   FEBC               POP      {R1-R7}
   \   0000028C   01BC               POP      {R0}
   \   0000028E   0047               BX       R0               ;; return
   \                     ??ThermostatAutoSet_Event_0:
   \   00000290   ........           DC32     Y_down
   \   00000294   ........           DC32     X_down
   \   00000298   ........           DC32     Y_up
   \   0000029C   ........           DC32     X_up
   \   000002A0   ........           DC32     TextToChangeLength
   \   000002A4   ........           DC32     gProg
   \   000002A8   ........           DC32     DateTime
   \   000002AC   30BC0000           DC32     0xbc30
   \   000002B0   2ABC0000           DC32     0xbc2a
   \   000002B4   ........           DC32     TextToChangeLength + 8
   \   000002B8   88130000           DC32     0x1388
   7958              
   7959          
   7960          
   7961          
   7962          
   7963          
   7964          char ThermHourModyfi;

   \                                 In section Debug.txt, align 4, keep-with-next
   7965          void ThermostatChartSet_Paint(_Screen* Screen, char Chart)
   7966          {          
   \                     ThermostatChartSet_Paint:
   \   00000000   F3B5               PUSH     {R0,R1,R4-R7,LR}
   \   00000002   83B0               SUB      SP,SP,#+12
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   78A0               ADR      R0,??ThermostatChartSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   7548               LDR      R0,??ThermostatChartSet_Paint_0+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   7967                 List_Paint("Thermo",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   \   00000026   0024               MOVS     R4,#+0
   7968          
   7969          
   7970                
   7971                char day=0;
   7972                char hlight=0;
   7973          
   7974                for (char row=0; row<3; row++)
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   04E0               B        ??ThermostatChartSet_Paint_1
   \                     ??ThermostatChartSet_Paint_2:
   \   0000002E   0098               LDR      R0,[SP, #+0]
   \   00000030   401C               ADDS     R0,R0,#+1
   \   00000032   0006               LSLS     R0,R0,#+24
   \   00000034   000E               LSRS     R0,R0,#+24
   \   00000036   0090               STR      R0,[SP, #+0]
   \                     ??ThermostatChartSet_Paint_1:
   \   00000038   0098               LDR      R0,[SP, #+0]
   \   0000003A   0006               LSLS     R0,R0,#+24
   \   0000003C   000E               LSRS     R0,R0,#+24
   \   0000003E   0328               CMP      R0,#+3
   \   00000040   75D2               BCS      ??ThermostatChartSet_Paint_3
   7975                for (char col=0; col<3; col++)
   \   00000042   0025               MOVS     R5,#+0
   \   00000044   29E0               B        ??ThermostatChartSet_Paint_4
   7976                { 
   7977                  if (++day<8)
   7978                  {
   7979                      H_line(4+col*18,105-row*14,19,1);
   7980                      H_line(4+col*18,105-(row+1)*14,19,1);
   7981                      V_line(4+col*18,105-(row+1)*14,14,1);
   7982                      V_line(4+(col+1)*18,105-(row+1)*14,14,1);
   7983                      
   7984                      if (Chart==1) hlight=(~(Screen->Thermo.Week>>(day-1)) &0x1); else hlight=(((Screen->Thermo.Week>>(day-1))) &0x1);
   \                     ??ThermostatChartSet_Paint_5:
   \   00000046   9130               ADDS     R0,R0,#+145
   \   00000048   0178               LDRB     R1,[R0, #+0]
   \   0000004A   2000               MOVS     R0,R4
   \   0000004C   401E               SUBS     R0,R0,#+1
   \   0000004E   0141               ASRS     R1,R1,R0
   \   00000050   0120               MOVS     R0,#+1
   \   00000052   0840               ANDS     R0,R0,R1
   7985                      Label((char*)DeyOfWeekStr[g_leng][day],2,6+col*18 ,105-(row+1)*14+3,2,14,0,128,hlight);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatChartSet_Paint_6:
   \   00000054   82B0               SUB      SP,SP,#+8
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   8021               MOVS     R1,#+128
   \   0000005A   0020               MOVS     R0,#+0
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   0E21               MOVS     R1,#+14
   \   00000060   0220               MOVS     R0,#+2
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   6C20               MOVS     R0,#+108
   \   00000066   0799               LDR      R1,[SP, #+28]
   \   00000068   431A               SUBS     R3,R0,R1
   \   0000006A   B61D               ADDS     R6,R6,#+6
   \   0000006C   3200               MOVS     R2,R6
   \   0000006E   1206               LSLS     R2,R2,#+24
   \   00000070   120E               LSRS     R2,R2,#+24
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   9227               MOVS     R7,#+146
   \   00000076   FF00               LSLS     R7,R7,#+3        ;; #+1168
   \   00000078   2000               MOVS     R0,R4
   \   0000007A   4600               LSLS     R6,R0,#+1
   \   0000007C   B446               MOV      R12,R6
   \   0000007E   5E48               LDR      R0,??ThermostatChartSet_Paint_0+0x8  ;; g_leng
   \   00000080   0068               LDR      R0,[R0, #+0]
   \   00000082   0601               LSLS     R6,R0,#+4
   \   00000084   5D48               LDR      R0,??ThermostatChartSet_Paint_0+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000086   8019               ADDS     R0,R0,R6
   \   00000088   6646               MOV      R6,R12
   \   0000008A   8019               ADDS     R0,R0,R6
   \   0000008C   C019               ADDS     R0,R0,R7
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
   \                     ??ThermostatChartSet_Paint_7:
   \   00000094   6D1C               ADDS     R5,R5,#+1
   \   00000096   2D06               LSLS     R5,R5,#+24
   \   00000098   2D0E               LSRS     R5,R5,#+24
   \                     ??ThermostatChartSet_Paint_4:
   \   0000009A   2800               MOVS     R0,R5
   \   0000009C   0328               CMP      R0,#+3
   \   0000009E   C6D2               BCS      ??ThermostatChartSet_Paint_2
   \   000000A0   641C               ADDS     R4,R4,#+1
   \   000000A2   2406               LSLS     R4,R4,#+24
   \   000000A4   240E               LSRS     R4,R4,#+24
   \   000000A6   2000               MOVS     R0,R4
   \   000000A8   0828               CMP      R0,#+8
   \   000000AA   F3D2               BCS      ??ThermostatChartSet_Paint_7
   \   000000AC   2E00               MOVS     R6,R5
   \   000000AE   1220               MOVS     R0,#+18
   \   000000B0   4643               MULS     R6,R0,R6
   \   000000B2   009F               LDR      R7,[SP, #+0]
   \   000000B4   3F06               LSLS     R7,R7,#+24
   \   000000B6   3F0E               LSRS     R7,R7,#+24
   \   000000B8   0123               MOVS     R3,#+1
   \   000000BA   1322               MOVS     R2,#+19
   \   000000BC   6920               MOVS     R0,#+105
   \   000000BE   0E21               MOVS     R1,#+14
   \   000000C0   7943               MULS     R1,R7,R1
   \   000000C2   411A               SUBS     R1,R0,R1
   \   000000C4   3000               MOVS     R0,R6
   \   000000C6   001D               ADDS     R0,R0,#+4
   \   000000C8   0006               LSLS     R0,R0,#+24
   \   000000CA   000E               LSRS     R0,R0,#+24
   \   000000CC   ........           BL       H_line
   \   000000D0   7F1C               ADDS     R7,R7,#+1
   \   000000D2   0E20               MOVS     R0,#+14
   \   000000D4   4743               MULS     R7,R0,R7
   \   000000D6   0197               STR      R7,[SP, #+4]
   \   000000D8   6920               MOVS     R0,#+105
   \   000000DA   3900               MOVS     R1,R7
   \   000000DC   471A               SUBS     R7,R0,R1
   \   000000DE   0123               MOVS     R3,#+1
   \   000000E0   1322               MOVS     R2,#+19
   \   000000E2   3900               MOVS     R1,R7
   \   000000E4   3000               MOVS     R0,R6
   \   000000E6   001D               ADDS     R0,R0,#+4
   \   000000E8   0006               LSLS     R0,R0,#+24
   \   000000EA   000E               LSRS     R0,R0,#+24
   \   000000EC   ........           BL       H_line
   \   000000F0   0123               MOVS     R3,#+1
   \   000000F2   0E22               MOVS     R2,#+14
   \   000000F4   3900               MOVS     R1,R7
   \   000000F6   3000               MOVS     R0,R6
   \   000000F8   001D               ADDS     R0,R0,#+4
   \   000000FA   0006               LSLS     R0,R0,#+24
   \   000000FC   000E               LSRS     R0,R0,#+24
   \   000000FE   ........           BL       V_line
   \   00000102   0123               MOVS     R3,#+1
   \   00000104   0E22               MOVS     R2,#+14
   \   00000106   3900               MOVS     R1,R7
   \   00000108   3000               MOVS     R0,R6
   \   0000010A   1630               ADDS     R0,R0,#+22
   \   0000010C   0006               LSLS     R0,R0,#+24
   \   0000010E   000E               LSRS     R0,R0,#+24
   \   00000110   ........           BL       V_line
   \   00000114   6846               MOV      R0,SP
   \   00000116   007C               LDRB     R0,[R0, #+16]
   \   00000118   0128               CMP      R0,#+1
   \   0000011A   0398               LDR      R0,[SP, #+12]
   \   0000011C   93D1               BNE      ??ThermostatChartSet_Paint_5
   \   0000011E   9130               ADDS     R0,R0,#+145
   \   00000120   0178               LDRB     R1,[R0, #+0]
   \   00000122   2000               MOVS     R0,R4
   \   00000124   401E               SUBS     R0,R0,#+1
   \   00000126   0141               ASRS     R1,R1,R0
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   8843               BICS     R0,R0,R1
   \   0000012C   92E7               B        ??ThermostatChartSet_Paint_6
   7986          
   7987                  }
   7988                }
   7989                
   7990               
   7991                 
   7992                 
   7993                
   7994                char Ychart=44;
   7995                
   7996                H_line(1,Ychart+14,62,1);  
   \                     ??ThermostatChartSet_Paint_3:
   \   0000012E   0123               MOVS     R3,#+1
   \   00000130   3E22               MOVS     R2,#+62
   \   00000132   3A21               MOVS     R1,#+58
   \   00000134   1800               MOVS     R0,R3
   \   00000136   ........           BL       H_line
   7997                H_line(1,Ychart+13,62,1);  
   \   0000013A   0123               MOVS     R3,#+1
   \   0000013C   3E22               MOVS     R2,#+62
   \   0000013E   3921               MOVS     R1,#+57
   \   00000140   1800               MOVS     R0,R3
   \   00000142   ........           BL       H_line
   7998            
   7999                
   8000                for (char i=0; i<24; i++)
   \   00000146   0024               MOVS     R4,#+0
   \   00000148   19E0               B        ??ThermostatChartSet_Paint_8
   8001                {
   8002                   V_line(8+(i*2),Ychart,5+((Screen->Thermo.Chart[Chart]>>i) & 0x1 )*3,1);  
   \                     ??ThermostatChartSet_Paint_9:
   \   0000014A   0123               MOVS     R3,#+1
   \   0000014C   6846               MOV      R0,SP
   \   0000014E   007C               LDRB     R0,[R0, #+16]
   \   00000150   8000               LSLS     R0,R0,#+2
   \   00000152   0399               LDR      R1,[SP, #+12]
   \   00000154   0818               ADDS     R0,R1,R0
   \   00000156   9830               ADDS     R0,R0,#+152
   \   00000158   0068               LDR      R0,[R0, #+0]
   \   0000015A   E040               LSRS     R0,R0,R4
   \   0000015C   1A00               MOVS     R2,R3
   \   0000015E   0240               ANDS     R2,R2,R0
   \   00000160   0320               MOVS     R0,#+3
   \   00000162   4243               MULS     R2,R0,R2
   \   00000164   521D               ADDS     R2,R2,#+5
   \   00000166   1206               LSLS     R2,R2,#+24
   \   00000168   120E               LSRS     R2,R2,#+24
   \   0000016A   2C21               MOVS     R1,#+44
   \   0000016C   6000               LSLS     R0,R4,#+1
   \   0000016E   0830               ADDS     R0,R0,#+8
   \   00000170   0006               LSLS     R0,R0,#+24
   \   00000172   000E               LSRS     R0,R0,#+24
   \   00000174   ........           BL       V_line
   8003                }
   \   00000178   641C               ADDS     R4,R4,#+1
   \   0000017A   2406               LSLS     R4,R4,#+24
   \   0000017C   240E               LSRS     R4,R4,#+24
   \                     ??ThermostatChartSet_Paint_8:
   \   0000017E   2000               MOVS     R0,R4
   \   00000180   1828               CMP      R0,#+24
   \   00000182   E2D3               BCC      ??ThermostatChartSet_Paint_9
   8004                
   8005                Button("<",4,Ychart-32,17,18); 
   \   00000184   82B0               SUB      SP,SP,#+8
   \   00000186   1220               MOVS     R0,#+18
   \   00000188   0090               STR      R0,[SP, #+0]
   \   0000018A   1123               MOVS     R3,#+17
   \   0000018C   0C22               MOVS     R2,#+12
   \   0000018E   0421               MOVS     R1,#+4
   \   00000190   1BA0               ADR      R0,??ThermostatChartSet_Paint_0+0x10  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000192   ........           BL       Button
   \   00000196   02B0               ADD      SP,SP,#+8
   8006                char txt[2]; txt[1]=0; 
   \   00000198   02A8               ADD      R0,SP,#+8
   \   0000019A   0021               MOVS     R1,#+0
   \   0000019C   4170               STRB     R1,[R0, #+1]
   8007                if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1) txt[0]=31; else txt[0]=30; 
   \   0000019E   6946               MOV      R1,SP
   \   000001A0   097C               LDRB     R1,[R1, #+16]
   \   000001A2   8900               LSLS     R1,R1,#+2
   \   000001A4   039A               LDR      R2,[SP, #+12]
   \   000001A6   5118               ADDS     R1,R2,R1
   \   000001A8   9831               ADDS     R1,R1,#+152
   \   000001AA   0968               LDR      R1,[R1, #+0]
   \   000001AC   154A               LDR      R2,??ThermostatChartSet_Paint_0+0x14  ;; ThermHourModyfi
   \   000001AE   1278               LDRB     R2,[R2, #+0]
   \   000001B0   D140               LSRS     R1,R1,R2
   \   000001B2   C907               LSLS     R1,R1,#+31
   \   000001B4   02D5               BPL      ??ThermostatChartSet_Paint_10
   \   000001B6   1F21               MOVS     R1,#+31
   \   000001B8   0170               STRB     R1,[R0, #+0]
   \   000001BA   01E0               B        ??ThermostatChartSet_Paint_11
   \                     ??ThermostatChartSet_Paint_10:
   \   000001BC   1E21               MOVS     R1,#+30
   \   000001BE   0170               STRB     R1,[R0, #+0]
   8008                Button(txt,23,Ychart-32,17,18); 
   \                     ??ThermostatChartSet_Paint_11:
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   1220               MOVS     R0,#+18
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   1123               MOVS     R3,#+17
   \   000001C8   0C22               MOVS     R2,#+12
   \   000001CA   1721               MOVS     R1,#+23
   \   000001CC   04A8               ADD      R0,SP,#+16
   \   000001CE   ........           BL       Button
   \   000001D2   02B0               ADD      SP,SP,#+8
   8009                Button(">",42,Ychart-32,17,18); 
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   1220               MOVS     R0,#+18
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   1123               MOVS     R3,#+17
   \   000001DC   0C22               MOVS     R2,#+12
   \   000001DE   2A21               MOVS     R1,#+42
   \   000001E0   09A0               ADR      R0,??ThermostatChartSet_Paint_0+0x18  ;; 0x3E, 0x00, 0x00, 0x00
   \   000001E2   ........           BL       Button
   \   000001E6   02B0               ADD      SP,SP,#+8
   8010                
   8011                
   8012                
   8013          }//________________________________________________________________________
   \   000001E8   05B0               ADD      SP,SP,#+20
   \   000001EA   F0BC               POP      {R4-R7}
   \   000001EC   01BC               POP      {R0}
   \   000001EE   0047               BX       R0               ;; return
   \                     ??ThermostatChartSet_Paint_0:
   \   000001F0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001F4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   \   000001F8   ........           DC32     g_leng
   \   000001FC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000200   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   00000204   ........           DC32     ThermHourModyfi
   \   00000208   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   8014          
   8015              
   8016          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8017          void ThermostatChartSet_Event(_Screen* Screen, char Chart)
   8018                {
   \                     ThermostatChartSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   0024               MOVS     R4,#+0
   \   00000008   6A4E               LDR      R6,??ThermostatChartSet_Event_0  ;; Y_down
   \   0000000A   2100               MOVS     R1,R4
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   335E               LDRSH    R3,[R6, R0]
   \   00000016   6848               LDR      R0,??ThermostatChartSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   6748               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   6748               LDR      R0,??ThermostatChartSet_Event_0+0xC  ;; X_up
   \   00000022   0027               MOVS     R7,#+0
   \   00000024   C05F               LDRSH    R0,[R0, R7]
   8019                  char Repaint=0;
   8020                  
   8021                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   08D5               BPL      ??ThermostatChartSet_Event_1
   8022                  {
   8023                    MenuLevel=(MenuLevel/10);
   \   00000030   644C               LDR      R4,??ThermostatChartSet_Event_0+0x10  ;; TextToChangeLength
   \   00000032   A06C               LDR      R0,[R4, #+72]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   A064               STR      R0,[R4, #+72]
   8024                    MenuPaint();
   \   0000003C   ........           BL       MenuPaint
   \   00000040   B4E0               B        ??ThermostatChartSet_Event_2
   8025                  } else if ((Y_down<112)  || (Y_up<112))
   \                     ??ThermostatChartSet_Event_1:
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   305E               LDRSH    R0,[R6, R0]
   \   00000046   7028               CMP      R0,#+112
   \   00000048   05DB               BLT      ??ThermostatChartSet_Event_3
   \   0000004A   5C48               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   405E               LDRSH    R0,[R0, R1]
   \   00000050   7028               CMP      R0,#+112
   \   00000052   00DB               BLT      .+4
   \   00000054   AAE0               B        ??ThermostatChartSet_Event_2
   8026                  {  
   8027                     char Ychart=44;
   8028                    
   8029                     if (Button("<",4,Ychart-32,17,18)==1) if (ThermHourModyfi>0) {ThermHourModyfi--; Repaint=1; ProgramChange=1;}
   \                     ??ThermostatChartSet_Event_3:
   \   00000056   5C4E               LDR      R6,??ThermostatChartSet_Event_0+0x14  ;; ThermHourModyfi
   \   00000058   82B0               SUB      SP,SP,#+8
   \   0000005A   1220               MOVS     R0,#+18
   \   0000005C   0090               STR      R0,[SP, #+0]
   \   0000005E   1123               MOVS     R3,#+17
   \   00000060   0C22               MOVS     R2,#+12
   \   00000062   0421               MOVS     R1,#+4
   \   00000064   59A0               ADR      R0,??ThermostatChartSet_Event_0+0x18  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000066   ........           BL       Button
   \   0000006A   02B0               ADD      SP,SP,#+8
   \   0000006C   0128               CMP      R0,#+1
   \   0000006E   08D1               BNE      ??ThermostatChartSet_Event_4
   \   00000070   3078               LDRB     R0,[R6, #+0]
   \   00000072   0028               CMP      R0,#+0
   \   00000074   05D0               BEQ      ??ThermostatChartSet_Event_4
   \   00000076   401E               SUBS     R0,R0,#+1
   \   00000078   3070               STRB     R0,[R6, #+0]
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   0400               MOVS     R4,R0
   \   0000007E   5449               LDR      R1,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   00000080   0870               STRB     R0,[R1, #+0]
   8030                     char txt[2]; txt[1]=0; 
   \                     ??ThermostatChartSet_Event_4:
   \   00000082   6846               MOV      R0,SP
   \   00000084   3900               MOVS     R1,R7
   \   00000086   4170               STRB     R1,[R0, #+1]
   8031                      if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1) txt[0]=31; else txt[0]=30; 
   \   00000088   A900               LSLS     R1,R5,#+2
   \   0000008A   029A               LDR      R2,[SP, #+8]
   \   0000008C   5518               ADDS     R5,R2,R1
   \   0000008E   9835               ADDS     R5,R5,#+152
   \   00000090   2968               LDR      R1,[R5, #+0]
   \   00000092   3278               LDRB     R2,[R6, #+0]
   \   00000094   D140               LSRS     R1,R1,R2
   \   00000096   C907               LSLS     R1,R1,#+31
   \   00000098   02D5               BPL      ??ThermostatChartSet_Event_5
   \   0000009A   1F21               MOVS     R1,#+31
   \   0000009C   0170               STRB     R1,[R0, #+0]
   \   0000009E   01E0               B        ??ThermostatChartSet_Event_6
   \                     ??ThermostatChartSet_Event_5:
   \   000000A0   1E21               MOVS     R1,#+30
   \   000000A2   0170               STRB     R1,[R0, #+0]
   8032                     if (Button(txt,23,Ychart-32,17,18)==1) 
   \                     ??ThermostatChartSet_Event_6:
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   1220               MOVS     R0,#+18
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   1123               MOVS     R3,#+17
   \   000000AC   0C22               MOVS     R2,#+12
   \   000000AE   1721               MOVS     R1,#+23
   \   000000B0   02A8               ADD      R0,SP,#+8
   \   000000B2   ........           BL       Button
   \   000000B6   02B0               ADD      SP,SP,#+8
   \   000000B8   0128               CMP      R0,#+1
   \   000000BA   13D1               BNE      ??ThermostatChartSet_Event_7
   8033                     {
   8034                        if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1)
   \   000000BC   3078               LDRB     R0,[R6, #+0]
   \   000000BE   2968               LDR      R1,[R5, #+0]
   \   000000C0   C140               LSRS     R1,R1,R0
   \   000000C2   C907               LSLS     R1,R1,#+31
   \   000000C4   2968               LDR      R1,[R5, #+0]
   \   000000C6   05D5               BPL      ??ThermostatChartSet_Event_8
   8035                        {
   8036                          Screen->Thermo.Chart[Chart] &= ~(1<<ThermHourModyfi);
   \   000000C8   0122               MOVS     R2,#+1
   \   000000CA   8240               LSLS     R2,R2,R0
   \   000000CC   9143               BICS     R1,R1,R2
   \   000000CE   2960               STR      R1,[R5, #+0]
   8037                          Repaint=1;
   \   000000D0   0124               MOVS     R4,#+1
   \   000000D2   04E0               B        ??ThermostatChartSet_Event_9
   8038                        }else{
   8039                          Screen->Thermo.Chart[Chart] |=  (1<<ThermHourModyfi);
   \                     ??ThermostatChartSet_Event_8:
   \   000000D4   0122               MOVS     R2,#+1
   \   000000D6   8240               LSLS     R2,R2,R0
   \   000000D8   0A43               ORRS     R2,R2,R1
   \   000000DA   2A60               STR      R2,[R5, #+0]
   8040                          Repaint=1;
   \   000000DC   0124               MOVS     R4,#+1
   8041                        }
   8042                        ProgramChange=1;
   \                     ??ThermostatChartSet_Event_9:
   \   000000DE   3C48               LDR      R0,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   000000E0   2100               MOVS     R1,R4
   \   000000E2   0170               STRB     R1,[R0, #+0]
   8043                     }
   8044                     if (Button(">",42,Ychart-32,17,18)==1) {if (ThermHourModyfi<23) ThermHourModyfi++; Repaint=1; ProgramChange=1;}
   \                     ??ThermostatChartSet_Event_7:
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   1220               MOVS     R0,#+18
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   1123               MOVS     R3,#+17
   \   000000EC   0C22               MOVS     R2,#+12
   \   000000EE   2A21               MOVS     R1,#+42
   \   000000F0   38A0               ADR      R0,??ThermostatChartSet_Event_0+0x20  ;; 0x3E, 0x00, 0x00, 0x00
   \   000000F2   ........           BL       Button
   \   000000F6   02B0               ADD      SP,SP,#+8
   \   000000F8   0128               CMP      R0,#+1
   \   000000FA   08D1               BNE      ??ThermostatChartSet_Event_10
   \   000000FC   3078               LDRB     R0,[R6, #+0]
   \   000000FE   1728               CMP      R0,#+23
   \   00000100   01D2               BCS      ??ThermostatChartSet_Event_11
   \   00000102   401C               ADDS     R0,R0,#+1
   \   00000104   3070               STRB     R0,[R6, #+0]
   \                     ??ThermostatChartSet_Event_11:
   \   00000106   0120               MOVS     R0,#+1
   \   00000108   0400               MOVS     R4,R0
   \   0000010A   3149               LDR      R1,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   0000010C   0870               STRB     R0,[R1, #+0]
   8045                
   8046                
   8047                      char day;
   8048                      day=0;
   \                     ??ThermostatChartSet_Event_10:
   \   0000010E   3B00               MOVS     R3,R7
   8049                      for (char row=0; row<3; row++)
   \   00000110   1900               MOVS     R1,R3
   \   00000112   02E0               B        ??ThermostatChartSet_Event_12
   \                     ??ThermostatChartSet_Event_13:
   \   00000114   491C               ADDS     R1,R1,#+1
   \   00000116   0906               LSLS     R1,R1,#+24
   \   00000118   090E               LSRS     R1,R1,#+24
   \                     ??ThermostatChartSet_Event_12:
   \   0000011A   0800               MOVS     R0,R1
   \   0000011C   0328               CMP      R0,#+3
   \   0000011E   41D2               BCS      ??ThermostatChartSet_Event_14
   8050                      for (char col=0; col<3; col++)
   \   00000120   0022               MOVS     R2,#+0
   \   00000122   0AE0               B        ??ThermostatChartSet_Event_15
   8051                      { 
   8052                        if (++day<8)
   8053                        {
   8054                            if ((X_up>4+col*18) && (X_up<4+(col+1)*18) && (Y_up<105-row*14) && (Y_up>105-(row+1)*14))
   8055                            {
   8056                              if ((Screen->Thermo.Week>>(day-1)) & 0x1)  //jezeli dzieñ aktywny to wy³acz je¿eli nie to w³¹cz
   8057                              {
   8058                                 Screen->Thermo.Week &= ~(1<<(day-1));
   8059                              }else{
   8060                                Screen->Thermo.Week |= (1<<(day-1));
   \                     ??ThermostatChartSet_Event_16:
   \   00000124   0126               MOVS     R6,#+1
   \   00000126   8640               LSLS     R6,R6,R0
   \   00000128   2E43               ORRS     R6,R6,R5
   \   0000012A   2670               STRB     R6,[R4, #+0]
   8061                              }
   8062                              Repaint=1;
   \                     ??ThermostatChartSet_Event_17:
   \   0000012C   0120               MOVS     R0,#+1
   \   0000012E   0400               MOVS     R4,R0
   8063                              ProgramChange=1;
   \   00000130   274D               LDR      R5,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   00000132   2870               STRB     R0,[R5, #+0]
   \                     ??ThermostatChartSet_Event_18:
   \   00000134   521C               ADDS     R2,R2,#+1
   \   00000136   1206               LSLS     R2,R2,#+24
   \   00000138   120E               LSRS     R2,R2,#+24
   \                     ??ThermostatChartSet_Event_15:
   \   0000013A   1000               MOVS     R0,R2
   \   0000013C   0328               CMP      R0,#+3
   \   0000013E   E9D2               BCS      ??ThermostatChartSet_Event_13
   \   00000140   5B1C               ADDS     R3,R3,#+1
   \   00000142   1B06               LSLS     R3,R3,#+24
   \   00000144   1B0E               LSRS     R3,R3,#+24
   \   00000146   1800               MOVS     R0,R3
   \   00000148   0828               CMP      R0,#+8
   \   0000014A   F3D2               BCS      ??ThermostatChartSet_Event_18
   \   0000014C   1000               MOVS     R0,R2
   \   0000014E   1225               MOVS     R5,#+18
   \   00000150   6843               MULS     R0,R5,R0
   \   00000152   1B4D               LDR      R5,??ThermostatChartSet_Event_0+0xC  ;; X_up
   \   00000154   0026               MOVS     R6,#+0
   \   00000156   AD5F               LDRSH    R5,[R5, R6]
   \   00000158   0600               MOVS     R6,R0
   \   0000015A   361D               ADDS     R6,R6,#+4
   \   0000015C   AE42               CMP      R6,R5
   \   0000015E   E9DA               BGE      ??ThermostatChartSet_Event_18
   \   00000160   1630               ADDS     R0,R0,#+22
   \   00000162   8542               CMP      R5,R0
   \   00000164   E6DA               BGE      ??ThermostatChartSet_Event_18
   \   00000166   0D00               MOVS     R5,R1
   \   00000168   1448               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   0000016A   0026               MOVS     R6,#+0
   \   0000016C   865F               LDRSH    R6,[R0, R6]
   \   0000016E   6920               MOVS     R0,#+105
   \   00000170   0E27               MOVS     R7,#+14
   \   00000172   6F43               MULS     R7,R5,R7
   \   00000174   C01B               SUBS     R0,R0,R7
   \   00000176   8642               CMP      R6,R0
   \   00000178   DCDA               BGE      ??ThermostatChartSet_Event_18
   \   0000017A   6920               MOVS     R0,#+105
   \   0000017C   6D1C               ADDS     R5,R5,#+1
   \   0000017E   0E27               MOVS     R7,#+14
   \   00000180   7D43               MULS     R5,R7,R5
   \   00000182   401B               SUBS     R0,R0,R5
   \   00000184   B042               CMP      R0,R6
   \   00000186   D5DA               BGE      ??ThermostatChartSet_Event_18
   \   00000188   1800               MOVS     R0,R3
   \   0000018A   401E               SUBS     R0,R0,#+1
   \   0000018C   029C               LDR      R4,[SP, #+8]
   \   0000018E   9134               ADDS     R4,R4,#+145
   \   00000190   2578               LDRB     R5,[R4, #+0]
   \   00000192   0541               ASRS     R5,R5,R0
   \   00000194   ED07               LSLS     R5,R5,#+31
   \   00000196   2578               LDRB     R5,[R4, #+0]
   \   00000198   C4D5               BPL      ??ThermostatChartSet_Event_16
   \   0000019A   0126               MOVS     R6,#+1
   \   0000019C   8640               LSLS     R6,R6,R0
   \   0000019E   B543               BICS     R5,R5,R6
   \   000001A0   2570               STRB     R5,[R4, #+0]
   \   000001A2   C3E7               B        ??ThermostatChartSet_Event_17
   8064                            }
   8065          
   8066                        }
   8067                      }
   8068                     
   8069                     
   8070                     if (Repaint==1) MenuPaint();      
   \                     ??ThermostatChartSet_Event_14:
   \   000001A4   012C               CMP      R4,#+1
   \   000001A6   01D1               BNE      ??ThermostatChartSet_Event_2
   \   000001A8   ........           BL       MenuPaint
   8071                    
   8072                  }
   8073          }//________________________________________________________________________
   \                     ??ThermostatChartSet_Event_2:
   \   000001AC   FEBC               POP      {R1-R7}
   \   000001AE   01BC               POP      {R0}
   \   000001B0   0047               BX       R0               ;; return
   \   000001B2   C046               Nop      
   \                     ??ThermostatChartSet_Event_0:
   \   000001B4   ........           DC32     Y_down
   \   000001B8   ........           DC32     X_down
   \   000001BC   ........           DC32     Y_up
   \   000001C0   ........           DC32     X_up
   \   000001C4   ........           DC32     TextToChangeLength
   \   000001C8   ........           DC32     ThermHourModyfi
   \   000001CC   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   000001D0   ........           DC32     TextToChangeLength + 8
   \   000001D4   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   8074              
   8075                
   8076                

   \                                 In section Debug.txt, align 4, keep-with-next
   8077          void ThermostatChartSet_Refresh(_Screen* Screen, char Chart)
   8078          {          
   \                     ThermostatChartSet_Refresh:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   8079             static char TCSR_Count;
   8080             char kolor=0;
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2300               MOVS     R3,R4
   8081             char Ychart=44;
   8082             if (TCSR_Count<3) TCSR_Count++; else TCSR_Count=0;
   \   00000006   1F4D               LDR      R5,??ThermostatChartSet_Refresh_0  ;; ThermHourModyfi
   \   00000008   6A78               LDRB     R2,[R5, #+1]
   \   0000000A   032A               CMP      R2,#+3
   \   0000000C   02D2               BCS      ??ThermostatChartSet_Refresh_1
   \   0000000E   521C               ADDS     R2,R2,#+1
   \   00000010   6A70               STRB     R2,[R5, #+1]
   \   00000012   00E0               B        ??ThermostatChartSet_Refresh_2
   \                     ??ThermostatChartSet_Refresh_1:
   \   00000014   6C70               STRB     R4,[R5, #+1]
   8083             if (TCSR_Count) kolor=1;
   \                     ??ThermostatChartSet_Refresh_2:
   \   00000016   6A78               LDRB     R2,[R5, #+1]
   \   00000018   002A               CMP      R2,#+0
   \   0000001A   00D0               BEQ      ??ThermostatChartSet_Refresh_3
   \   0000001C   0123               MOVS     R3,#+1
   8084             V_line(8+(ThermHourModyfi*2),Ychart,5+((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1 )*3,kolor);  
   \                     ??ThermostatChartSet_Refresh_3:
   \   0000001E   2E78               LDRB     R6,[R5, #+0]
   \   00000020   8900               LSLS     R1,R1,#+2
   \   00000022   4018               ADDS     R0,R0,R1
   \   00000024   9830               ADDS     R0,R0,#+152
   \   00000026   0068               LDR      R0,[R0, #+0]
   \   00000028   F040               LSRS     R0,R0,R6
   \   0000002A   0122               MOVS     R2,#+1
   \   0000002C   0240               ANDS     R2,R2,R0
   \   0000002E   0320               MOVS     R0,#+3
   \   00000030   4243               MULS     R2,R0,R2
   \   00000032   521D               ADDS     R2,R2,#+5
   \   00000034   1206               LSLS     R2,R2,#+24
   \   00000036   120E               LSRS     R2,R2,#+24
   \   00000038   2C21               MOVS     R1,#+44
   \   0000003A   7000               LSLS     R0,R6,#+1
   \   0000003C   0830               ADDS     R0,R0,#+8
   \   0000003E   0006               LSLS     R0,R0,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   ........           BL       V_line
   8085          
   8086             char txt[3]; txt[1]=0; txt[2]=0;
   \   00000046   6846               MOV      R0,SP
   \   00000048   4470               STRB     R4,[R0, #+1]
   \   0000004A   8470               STRB     R4,[R0, #+2]
   8087             CharToStr(ThermHourModyfi,txt,2);  //(char Value, char *Vstring, char ill) 
   \   0000004C   0222               MOVS     R2,#+2
   \   0000004E   6946               MOV      R1,SP
   \   00000050   2878               LDRB     R0,[R5, #+0]
   \   00000052   ........           BL       CharToStr
   8088             Label(txt,2,ThermHourModyfi*2+2,Ychart-10,2,12,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000056   82B0               SUB      SP,SP,#+8
   \   00000058   2000               MOVS     R0,R4
   \   0000005A   0090               STR      R0,[SP, #+0]
   \   0000005C   8021               MOVS     R1,#+128
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   0C21               MOVS     R1,#+12
   \   00000062   0220               MOVS     R0,#+2
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   2223               MOVS     R3,#+34
   \   00000068   2878               LDRB     R0,[R5, #+0]
   \   0000006A   4200               LSLS     R2,R0,#+1
   \   0000006C   921C               ADDS     R2,R2,#+2
   \   0000006E   1206               LSLS     R2,R2,#+24
   \   00000070   120E               LSRS     R2,R2,#+24
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   06A8               ADD      R0,SP,#+24
   \   00000076   ........           BL       Label
   \   0000007A   06B0               ADD      SP,SP,#+24
   8089          
   8090                
   8091                 
   8092                
   8093          }//________________________________________________________________________
   \   0000007C   7CBC               POP      {R2-R6}
   \   0000007E   01BC               POP      {R0}
   \   00000080   0047               BX       R0               ;; return
   \   00000082   C046               Nop      
   \                     ??ThermostatChartSet_Refresh_0:
   \   00000084   ........           DC32     ThermHourModyfi

   \                                 In section .bss, align 1
   \                     ThermHourModyfi:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   8094          
   8095          
   8096          
   8097          
   8098          
   8099          
   8100          
   8101          
   8102          //*-----------------------------------------------------------------------------
   8103          //* Nazwa funkcji :    Alarm_Paint
   8104          //* Funkcja strony g³ównej menu
   8105          //*-----------------------------------------------------------------------------
   8106          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   8107          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8108          void Alarm_Paint(char CurrentSheet)
   8109          {
   \                     Alarm_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8110            
   8111            
   8112          
   8113          
   8114              
   8115          
   8116                if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   \   00000002   4100               LSLS     R1,R0,#+1
   \   00000004   224A               LDR      R2,??Alarm_Paint_0  ;; AlarmScreenAction
   \   00000006   5118               ADDS     R1,R2,R1
   \   00000008   0A78               LDRB     R2,[R1, #+0]
   \   0000000A   002A               CMP      R2,#+0
   \   0000000C   3CD1               BNE      ??Alarm_Paint_1
   \   0000000E   4978               LDRB     R1,[R1, #+1]
   \   00000010   0029               CMP      R1,#+0
   \   00000012   39D1               BNE      ??Alarm_Paint_1
   8117                {
   8118                  if (CurrentSheet!=0)  List_Paint(Speech[g_leng].Termo_,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000014   0028               CMP      R0,#+0
   \   00000016   17D0               BEQ      ??Alarm_Paint_2
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1CA0               ADR      R0,??Alarm_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   0321               MOVS     R1,#+3
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   0300               MOVS     R3,R0
   \   0000002C   6C22               MOVS     R2,#+108
   \   0000002E   0121               MOVS     R1,#+1
   \   00000030   1948               LDR      R0,??Alarm_Paint_0+0x8  ;; 0x735
   \   00000032   1A4C               LDR      R4,??Alarm_Paint_0+0xC  ;; g_leng
   \   00000034   2468               LDR      R4,[R4, #+0]
   \   00000036   9625               MOVS     R5,#+150
   \   00000038   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   0000003A   6C43               MULS     R4,R5,R4
   \   0000003C   184D               LDR      R5,??Alarm_Paint_0+0x10  ;; Speech
   \   0000003E   2C19               ADDS     R4,R5,R4
   \   00000040   2018               ADDS     R0,R4,R0
   \   00000042   ........           BL       List_Paint
   \   00000046   0AB0               ADD      SP,SP,#+40
   8119                  Button(Speech[g_leng].WlOchrone,2,40,59,50);
   \                     ??Alarm_Paint_2:
   \   00000048   9624               MOVS     R4,#+150
   \   0000004A   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   0000004C   134D               LDR      R5,??Alarm_Paint_0+0xC  ;; g_leng
   \   0000004E   144E               LDR      R6,??Alarm_Paint_0+0x10  ;; Speech
   \   00000050   82B0               SUB      SP,SP,#+8
   \   00000052   3220               MOVS     R0,#+50
   \   00000054   0090               STR      R0,[SP, #+0]
   \   00000056   3B23               MOVS     R3,#+59
   \   00000058   2822               MOVS     R2,#+40
   \   0000005A   0221               MOVS     R1,#+2
   \   0000005C   1148               LDR      R0,??Alarm_Paint_0+0x14  ;; 0x78f
   \   0000005E   2F68               LDR      R7,[R5, #+0]
   \   00000060   6743               MULS     R7,R4,R7
   \   00000062   F719               ADDS     R7,R6,R7
   \   00000064   3818               ADDS     R0,R7,R0
   \   00000066   ........           BL       Button
   \   0000006A   02B0               ADD      SP,SP,#+8
   8120                  Button(Speech[g_leng].ZmienHaslo,2,4,59,13);
   \   0000006C   82B0               SUB      SP,SP,#+8
   \   0000006E   0D20               MOVS     R0,#+13
   \   00000070   0090               STR      R0,[SP, #+0]
   \   00000072   3B23               MOVS     R3,#+59
   \   00000074   0422               MOVS     R2,#+4
   \   00000076   0221               MOVS     R1,#+2
   \   00000078   0B48               LDR      R0,??Alarm_Paint_0+0x18  ;; 0x79e
   \   0000007A   2D68               LDR      R5,[R5, #+0]
   \   0000007C   6543               MULS     R5,R4,R5
   \   0000007E   7419               ADDS     R4,R6,R5
   \   00000080   2018               ADDS     R0,R4,R0
   \   00000082   ........           BL       Button
   \   00000086   02B0               ADD      SP,SP,#+8
   8121                }
   8122            
   8123                if ((AlarmScreenAction[CurrentSheet].Active==1) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   8124                {
   8125                   
   8126                }
   8127          }//_______________________ Koniec funkcji Alarm_Paint __________________________
   \                     ??Alarm_Paint_1:
   \   00000088   F8BC               POP      {R3-R7}
   \   0000008A   01BC               POP      {R0}
   \   0000008C   0047               BX       R0               ;; return
   \   0000008E   C046               Nop      
   \                     ??Alarm_Paint_0:
   \   00000090   ........           DC32     AlarmScreenAction
   \   00000094   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000098   35070000           DC32     0x735
   \   0000009C   ........           DC32     g_leng
   \   000000A0   ........           DC32     Speech
   \   000000A4   8F070000           DC32     0x78f
   \   000000A8   9E070000           DC32     0x79e
   8128            
   8129          
   8130          
   8131          
   8132          //*-----------------------------------------------------------------------------
   8133          //* Nazwa funkcji :    Alarm_Event
   8134          //* Funkcja strony g³ównej menu
   8135          //*-----------------------------------------------------------------------------
   8136          //*-----------------------------------------------------------------------------
   8137          
   8138          

   \                                 In section Debug.txt, align 4, keep-with-next
   8139          void Alarm_Event(char CurrentSheet)
   8140          {
   \                     Alarm_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0500               MOVS     R5,R0
   \   00000004   0024               MOVS     R4,#+0
   8141            char Repaint=0;
   8142          
   8143          
   8144            
   8145            
   8146           if ((CurrentSheet>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000006   002D               CMP      R5,#+0
   \   00000008   1DD0               BEQ      ??Alarm_Event_0
   \   0000000A   2100               MOVS     R1,R4
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   2E48               LDR      R0,??Alarm_Event_1  ;; Y_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   435E               LDRSH    R3,[R0, R1]
   \   0000001A   2E48               LDR      R0,??Alarm_Event_1+0x4  ;; X_down
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   2E48               LDR      R0,??Alarm_Event_1+0x8  ;; Y_up
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   2E48               LDR      R0,??Alarm_Event_1+0xC  ;; X_up
   \   00000024   0026               MOVS     R6,#+0
   \   00000026   805F               LDRSH    R0,[R0, R6]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   \   0000002E   0021               MOVS     R1,#+0
   \   00000030   C943               MVNS     R1,R1            ;; #-1
   \   00000032   8842               CMP      R0,R1
   \   00000034   07D1               BNE      ??Alarm_Event_0
   8147              {
   8148                 if (SheetHistoryIndex>0)
   \   00000036   2A48               LDR      R0,??Alarm_Event_1+0x10  ;; TextToChangeLength
   \   00000038   C179               LDRB     R1,[R0, #+7]
   \   0000003A   0029               CMP      R1,#+0
   \   0000003C   01D0               BEQ      ??Alarm_Event_2
   8149                    {
   8150                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000003E   491E               SUBS     R1,R1,#+1
   \   00000040   C171               STRB     R1,[R0, #+7]
   8151                    } 
   8152                   Repaint=1; 
   \                     ??Alarm_Event_2:
   \   00000042   0124               MOVS     R4,#+1
   \   00000044   3CE0               B        ??Alarm_Event_3
   8153              }else{
   8154          
   8155                if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   \                     ??Alarm_Event_0:
   \   00000046   6800               LSLS     R0,R5,#+1
   \   00000048   2649               LDR      R1,??Alarm_Event_1+0x14  ;; AlarmScreenAction
   \   0000004A   0D18               ADDS     R5,R1,R0
   \   0000004C   2878               LDRB     R0,[R5, #+0]
   \   0000004E   0028               CMP      R0,#+0
   \   00000050   36D1               BNE      ??Alarm_Event_3
   \   00000052   6878               LDRB     R0,[R5, #+1]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   33D1               BNE      ??Alarm_Event_3
   \   00000058   234E               LDR      R6,??Alarm_Event_1+0x18  ;; g_leng
   \   0000005A   244F               LDR      R7,??Alarm_Event_1+0x1C  ;; Speech
   \   0000005C   82B0               SUB      SP,SP,#+8
   \   0000005E   3220               MOVS     R0,#+50
   \   00000060   0090               STR      R0,[SP, #+0]
   \   00000062   3B23               MOVS     R3,#+59
   \   00000064   2822               MOVS     R2,#+40
   \   00000066   0221               MOVS     R1,#+2
   \   00000068   02B5               PUSH     {R1,LR}
   \   0000006A   2149               LDR      R1,??Alarm_Event_1+0x20  ;; 0x78f
   \   0000006C   8C46               MOV      R12,R1
   \   0000006E   3168               LDR      R1,[R6, #+0]
   \   00000070   9620               MOVS     R0,#+150
   \   00000072   0001               LSLS     R0,R0,#+4        ;; #+2400
   \   00000074   4143               MULS     R1,R0,R1
   \   00000076   7818               ADDS     R0,R7,R1
   \   00000078   6146               MOV      R1,R12
   \   0000007A   4018               ADDS     R0,R0,R1
   \   0000007C   0099               LDR      R1,[SP, #0]
   \   0000007E   02B0               ADD      SP,SP,#+8
   8156                {
   8157                  if (Button(Speech[g_leng].WlOchrone,2,40,59,50)==1) {
   \   00000080   ........           BL       Button
   \   00000084   02B0               ADD      SP,SP,#+8
   \   00000086   0128               CMP      R0,#+1
   \   00000088   04D1               BNE      ??Alarm_Event_4
   8158                   AlarmScreenAction[CurrentSheet].SecToActive=AlarmTimeToActive;
   \   0000008A   3C20               MOVS     R0,#+60
   \   0000008C   6870               STRB     R0,[R5, #+1]
   8159                   AlarmScreenAction[CurrentSheet].Active=0;
   \   0000008E   2000               MOVS     R0,R4
   \   00000090   2870               STRB     R0,[R5, #+0]
   8160                   Repaint=1;
   \   00000092   0124               MOVS     R4,#+1
   8161                  } 
   8162                   if (Button(Speech[g_leng].ZmienHaslo,2,4,59,13)==1)
   \                     ??Alarm_Event_4:
   \   00000094   82B0               SUB      SP,SP,#+8
   \   00000096   0D20               MOVS     R0,#+13
   \   00000098   0090               STR      R0,[SP, #+0]
   \   0000009A   3B23               MOVS     R3,#+59
   \   0000009C   0422               MOVS     R2,#+4
   \   0000009E   0221               MOVS     R1,#+2
   \   000000A0   1448               LDR      R0,??Alarm_Event_1+0x24  ;; 0x79e
   \   000000A2   3568               LDR      R5,[R6, #+0]
   \   000000A4   9626               MOVS     R6,#+150
   \   000000A6   3601               LSLS     R6,R6,#+4        ;; #+2400
   \   000000A8   7543               MULS     R5,R6,R5
   \   000000AA   7D19               ADDS     R5,R7,R5
   \   000000AC   2818               ADDS     R0,R5,R0
   \   000000AE   ........           BL       Button
   \   000000B2   02B0               ADD      SP,SP,#+8
   \   000000B4   0128               CMP      R0,#+1
   \   000000B6   03D1               BNE      ??Alarm_Event_3
   8163                   {
   8164                      MenuLevel=15;
   \   000000B8   0F48               LDR      R0,??Alarm_Event_1+0x28  ;; TextToChangeLength + 72
   \   000000BA   0F21               MOVS     R1,#+15
   \   000000BC   0160               STR      R1,[R0, #+0]
   8165                      Repaint=1;
   \   000000BE   0124               MOVS     R4,#+1
   8166                   }
   8167                  
   8168                }
   8169                
   8170                      
   8171              }
   8172           
   8173           
   8174           
   8175            if (Repaint==1) MenuPaint();
   \                     ??Alarm_Event_3:
   \   000000C0   012C               CMP      R4,#+1
   \   000000C2   01D1               BNE      ??Alarm_Event_5
   \   000000C4   ........           BL       MenuPaint
   8176          }//_______________________ Koniec funkcji Alarm_Event __________________________
   \                     ??Alarm_Event_5:
   \   000000C8   F8BC               POP      {R3-R7}
   \   000000CA   01BC               POP      {R0}
   \   000000CC   0047               BX       R0               ;; return
   \   000000CE   C046               Nop      
   \                     ??Alarm_Event_1:
   \   000000D0   ........           DC32     Y_down
   \   000000D4   ........           DC32     X_down
   \   000000D8   ........           DC32     Y_up
   \   000000DC   ........           DC32     X_up
   \   000000E0   ........           DC32     TextToChangeLength
   \   000000E4   ........           DC32     AlarmScreenAction
   \   000000E8   ........           DC32     g_leng
   \   000000EC   ........           DC32     Speech
   \   000000F0   8F070000           DC32     0x78f
   \   000000F4   9E070000           DC32     0x79e
   \   000000F8   ........           DC32     TextToChangeLength + 72
   8177            
   8178          
   8179          
   8180          
   8181          
   8182          
   8183          //*-----------------------------------------------------------------------------
   8184          //* Nazwa funkcji :    Alarm_Refresh
   8185          //* Funkcja strony g³ównej menu
   8186          //*-----------------------------------------------------------------------------
   8187          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8188          void Alarm_Refresh(char CurrentSheet)
   8189          {
   \                     Alarm_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   8190          
   8191            char dl;
   8192            char txt[5];
   8193            static int LastCount;
   8194          
   8195          
   8196            if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive>0) && (g_counter>LastCount+1000))
   \   00000002   4000               LSLS     R0,R0,#+1
   \   00000004   2C49               LDR      R1,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   00000006   0C18               ADDS     R4,R1,R0
   \   00000008   2078               LDRB     R0,[R4, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   50D1               BNE      ??Alarm_Refresh_1
   \   0000000E   6078               LDRB     R0,[R4, #+1]
   \   00000010   0028               CMP      R0,#+0
   \   00000012   4DD0               BEQ      ??Alarm_Refresh_1
   \   00000014   294E               LDR      R6,??Alarm_Refresh_0+0x4  ;; g_counter
   \   00000016   2A4D               LDR      R5,??Alarm_Refresh_0+0x8  ;; TextToChangeLength
   \   00000018   A86F               LDR      R0,[R5, #+120]
   \   0000001A   FA21               MOVS     R1,#+250
   \   0000001C   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   0000001E   4018               ADDS     R0,R0,R1
   \   00000020   C117               ASRS     R1,R0,#+31
   \   00000022   0200               MOVS     R2,R0
   \   00000024   0B00               MOVS     R3,R1
   \   00000026   03CE               LDM      R6!,{R0,R1}
   \   00000028   083E               SUBS     R6,R6,#+8
   \   0000002A   8B42               CMP      R3,R1
   \   0000002C   40D8               BHI      ??Alarm_Refresh_1
   \   0000002E   01D3               BCC      ??Alarm_Refresh_2
   \   00000030   8242               CMP      R2,R0
   \   00000032   3DD2               BCS      ??Alarm_Refresh_1
   8197                {
   8198                  CleanCanvas(); 
   \                     ??Alarm_Refresh_2:
   \   00000034   ........           BL       CleanCanvas
   8199                  AlarmScreenAction[CurrentSheet].SecToActive--;
   \   00000038   6078               LDRB     R0,[R4, #+1]
   \   0000003A   401E               SUBS     R0,R0,#+1
   \   0000003C   6070               STRB     R0,[R4, #+1]
   8200                  Label(Speech[g_leng].AktywacjaZa,2,1,80,15,59,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   0020               MOVS     R0,#+0
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   6921               MOVS     R1,#+105
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   3B21               MOVS     R1,#+59
   \   0000004A   0F20               MOVS     R0,#+15
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   5023               MOVS     R3,#+80
   \   00000050   0122               MOVS     R2,#+1
   \   00000052   0221               MOVS     R1,#+2
   \   00000054   8C46               MOV      R12,R1
   \   00000056   1B49               LDR      R1,??Alarm_Refresh_0+0xC  ;; 0x7bc
   \   00000058   1B48               LDR      R0,??Alarm_Refresh_0+0x10  ;; g_leng
   \   0000005A   0068               LDR      R0,[R0, #+0]
   \   0000005C   9627               MOVS     R7,#+150
   \   0000005E   3F01               LSLS     R7,R7,#+4        ;; #+2400
   \   00000060   7843               MULS     R0,R7,R0
   \   00000062   1A4F               LDR      R7,??Alarm_Refresh_0+0x14  ;; Speech
   \   00000064   3818               ADDS     R0,R7,R0
   \   00000066   4018               ADDS     R0,R0,R1
   \   00000068   6146               MOV      R1,R12
   \   0000006A   ........           BL       Label
   \   0000006E   06B0               ADD      SP,SP,#+24
   8201          
   8202                  
   8203                  LastCount=g_counter;
   \   00000070   03CE               LDM      R6!,{R0,R1}
   \   00000072   A867               STR      R0,[R5, #+120]
   8204                  dl=CharToStr(AlarmScreenAction[CurrentSheet].SecToActive, txt,2);
   \   00000074   0222               MOVS     R2,#+2
   \   00000076   6946               MOV      R1,SP
   \   00000078   6078               LDRB     R0,[R4, #+1]
   \   0000007A   ........           BL       CharToStr
   \   0000007E   0200               MOVS     R2,R0
   8205                  Label20(txt,2,0,45,dl,64,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                         ^
Warning[Pe223]: function "Label20" declared implicitly
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   6921               MOVS     R1,#+105
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   4021               MOVS     R1,#+64
   \   0000008C   1000               MOVS     R0,R2
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   2D23               MOVS     R3,#+45
   \   00000092   0022               MOVS     R2,#+0
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   06A8               ADD      R0,SP,#+24
   \   00000098   ........           BL       Label20
   \   0000009C   06B0               ADD      SP,SP,#+24
   8206          
   8207                  if (AlarmScreenAction[CurrentSheet].SecToActive==0)
   \   0000009E   6078               LDRB     R0,[R4, #+1]
   \   000000A0   0028               CMP      R0,#+0
   \   000000A2   05D1               BNE      ??Alarm_Refresh_1
   8208                  {
   8209                    MenuLevel=14;
   \   000000A4   0E20               MOVS     R0,#+14
   \   000000A6   A864               STR      R0,[R5, #+72]
   8210                    AlarmScreenAction[CurrentSheet].Active=1;
   \   000000A8   0120               MOVS     R0,#+1
   \   000000AA   2070               STRB     R0,[R4, #+0]
   8211                    MenuPaint(); 
   \   000000AC   ........           BL       MenuPaint
   8212                  }
   8213                }
   8214          
   8215          }//_______________________ Koniec funkcji Alarm_Refresh __________________________
   \                     ??Alarm_Refresh_1:
   \   000000B0   FEBC               POP      {R1-R7}
   \   000000B2   01BC               POP      {R0}
   \   000000B4   0047               BX       R0               ;; return
   \   000000B6   C046               Nop      
   \                     ??Alarm_Refresh_0:
   \   000000B8   ........           DC32     AlarmScreenAction
   \   000000BC   ........           DC32     g_counter
   \   000000C0   ........           DC32     TextToChangeLength
   \   000000C4   BC070000           DC32     0x7bc
   \   000000C8   ........           DC32     g_leng
   \   000000CC   ........           DC32     Speech

   \                                 In section .data, align 8
   \                     TextToChangeLength:
   \   00000000   00                 DC8 0
   \                     TextToChangeMaxPixSize:
   \   00000001   00                 DC8 0
   \                     CurentChartModyfi:
   \   00000002   00                 DC8 0
   \                     NeuronNrChange:
   \   00000003   00                 DC8 0
   \                     CurrentSheet:
   \   00000004   00                 DC8 0
   \                     CurModifSheet:
   \   00000005   00                 DC8 0
   \                     NeuronsListLine:
   \   00000006   00                 DC8 0
   \                     SheetHistoryIndex:
   \   00000007   00                 DC8 0
   \                     ProgramChange:
   \   00000008   00                 DC8 0
   \                     TmpFlg:
   \   00000009   00                 DC8 0
   \                     DispWait:
   \   0000000A   00                 DC8 0
   \   0000000B   00                 DC8 0
   \                     StartAdvance:
   \   0000000C   00                 DC8 0
   \   0000000D   00                 DC8 0
   \                     TimetableSet_Hour:
   \   0000000E   00                 DC8 0
   \                     TimetableSet_Minute:
   \   0000000F   00                 DC8 0
   \                     TimetableSet_Week:
   \   00000010   00                 DC8 0
   \                     LaderLine:
   \   00000011   00                 DC8 0
   \                     LaderCol:
   \   00000012   00                 DC8 0
   \                     ChoseRow:
   \   00000013   00                 DC8 0
   \                     ChoseCol:
   \   00000014   00                 DC8 0
   \                     ProcGlobType_down:
   \   00000015   00                 DC8 0
   \                     OpenScreenSet:
   \   00000016   00                 DC8 0
   \                     MenuPaintExecute:
   \   00000017   00                 DC8 0
   \                     ZoneButtonClick:
   \   00000018   00                 DC8 0
   \                     ZoneGrapfNrClick:
   \   00000019   00                 DC8 0
   \                     ZoneValueNrClick:
   \   0000001A   00                 DC8 0
   \                     ZoneLabelClick:
   \   0000001B   00                 DC8 0
   \                     TextChangeCharNr:
   \   0000001C   00                 DC8 0
   \                     TextChangePoz:
   \   0000001D   00                 DC8 0
   \                     AlfaType:
   \   0000001E   00                 DC8 0
   \                     OpisWezl:
   \   0000001F   00                 DC8 0
   \                     SheetHistory:
   \   00000020   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   00000034   0000               DC8 0, 0
   \   00000036   0000               DC8 0, 0
   \                     Touch_EventTime:
   \   00000038   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     WaitOnCheckNode:
   \   00000040   000000000000       DC32 0, 0
   \              0000        
   \                     MenuLevel:
   \   00000048   00000000           DC32 0
   \                     Rej_poz:
   \   0000004C   00000000           DC32 0
   \                     TextToChange:
   \   00000050   00000000           DC32 0H
   \                     ButtonToChange:
   \   00000054   00000000           DC32 0H
   \                     ValueChange:
   \   00000058   00000000           DC32 0H
   \                     NeuronIdChange:
   \   0000005C   00000000           DC32 0H
   \                     AnalogToChange:
   \   00000060   00000000           DC8 0, 0, 0, 0
   \   00000064   00000000           DC8 0, 0, 0, 0
   \   00000068   00000000           DC8 0, 0, 0, 0
   \                     TaskToChange:
   \   0000006C   00000000           DC8 0, 0, 0, 0
   \                     row_tmp:
   \   00000070   00000000           DC8 0, 0, 0, 0
   \                     TxtSpaceAvable:
   \   00000074   00000000           DC32 0
   \   00000078   00000000           DC8 0, 0, 0, 0
   \   char __data BateriaWyladowanaDuza[3][8]
   \                     BateriaWyladowanaDuza:
   \   0000007C   FC0407050507       DC8 252, 4, 7, 5, 5, 7, 4, 252, 255, 1, 226, 196, 136, 16, 32, 255, 7
   \              04FCFF01E2C4
   \              881020FF07  
   \   0000008D   040505050504       DC8 4, 5, 5, 5, 5, 4, 7
   \              07          
   \                     ekran_komunikacja:
   \   00000094   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 34, 2, 2, 2, 34, 28, 0, 0, 0, 0
   \              000000001C22
   \              020202221C00
   \              000000      
   \   000000A9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000C0   0000F808E8E8       DC8 0, 0, 248, 8, 232, 232, 232, 104, 104, 104, 104, 104, 104, 104, 104
   \              E86868686868
   \              686868      
   \   000000CF   68686868E8E8       DC8 104, 104, 104, 104, 232, 232, 232, 8, 248, 0, 0, 0, 0, 0, 0, 0, 0
   \              E808F8000000
   \              0000000000  
   \   000000E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000F7   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 224, 248, 24, 6, 6, 6, 3, 3, 3, 3, 6, 6, 12
   \              0000E0F81806
   \              060603030303
   \              06060C      
   \   0000010C   3CF0C0000000       DC8 60, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 33
   \              000000000000
   \              000000000000
   \              1E21        
   \   00000120   212121211E00       DC8 33, 33, 33, 33, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   00000135   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 255, 255, 255, 192
   \              000000000000
   \              00FF00FFFFFF
   \              C0          
   \   00000148   C0C0C0C0C0C0       DC8 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 255, 255
   \              C0C0C0C0C0FF
   \              FF          
   \   00000155   FF00FF000000       DC8 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   0000016A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
   \              000000000000
   \              000000000000
   \              000000C0    
   \   00000180   E03018000000       DC8 224, 48, 24, 0, 0, 0, 255, 255, 0, 0, 24, 24, 96, 224, 128, 0, 0, 0
   \              FFFF00001818
   \              60E080000000
   \   00000192   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 153, 153, 149, 147, 147
   \              000000000000
   \              919999959393
   \   000001A4   910000000000       DC8 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000001BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 2, 10, 18, 34, 66, 66, 130, 130, 2
   \              000003020202
   \              0A1222424282
   \              8202        
   \   000001CE   020202020202       DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              020202030000
   \              000000000000
   \              0000000000  
   \   000001E5   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001FC   000000C3E170       DC8 0, 0, 0, 195, 225, 112, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48
   \              303030303030
   \              3030303030  
   \   0000020D   330300000000       DC8 51, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 76, 76
   \              000000000000
   \              0000000000C8
   \              4C4C        
   \   00000221   CA4949C80000       DC8 202, 73, 73, 200, 0, 0, 0, 4, 4, 4, 60, 68, 68, 60, 0, 0, 0, 0, 0
   \              000404043C44
   \              443C00000000
   \              00          
   \   00000234   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128
   \              000000000000
   \              000000000000
   \              000080      
   \   00000249   800000000101       DC8 128, 0, 0, 0, 1, 1, 1, 130, 194, 164, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0182C2A41800
   \              000000000000
   \              0000        
   \   0000025D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000274   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 14, 28, 24, 24, 24, 24, 24, 24
   \              000000000007
   \              0E1C18181818
   \              1818        
   \   00000288   181818181898       DC8 24, 24, 24, 24, 24, 152, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              800000000000
   \              000000000000
   \              0000        
   \   0000029C   0000C7202027       DC8 0, 0, 199, 32, 32, 39, 32, 32, 199, 0, 0, 0, 28, 34, 2, 2, 2, 34
   \              2020C7000000
   \              1C2202020222
   \   000002AE   1C0000000000       DC8 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000002C4   000000FFFFFF       DC8 0, 0, 0, 255, 255, 255, 1, 2, 84, 168, 80, 33, 206, 14, 206, 67, 64
   \              010254A85021
   \              CE0ECE4340  
   \   000002D5   404040404040       DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 192, 0
   \              404040404040
   \              404040C000  
   \   000002E6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000002FD   000060303018       DC8 0, 0, 96, 48, 48, 24, 24, 12, 12, 28, 28, 96, 96, 96, 96, 48, 63
   \              180C0C1C1C60
   \              606060303F  
   \   0000030E   0F0000000000       DC8 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 66, 64, 64, 64
   \              000000000000
   \              000000004142
   \              404040      
   \   00000323   42F100000000       DC8 66, 241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000339   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 62, 124
   \              000000000000
   \              0000FFFFFF3E
   \              7C          
   \   0000034C   55AA5500FF7E       DC8 85, 170, 85, 0, 255, 126, 255, 0, 255, 255, 255, 255, 255, 255, 255
   \              FF00FFFFFFFF
   \              FFFFFF      
   \   0000035B   FFFFFFFFFFFF       DC8 255, 255, 255, 255, 255, 255, 255, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0
   \              FFFF00FF0000
   \              0000000000  
   \   0000036C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 220
   \              000000000000
   \              000000000000
   \              00F8DC      
   \   00000381   8E0606060606       DC8 142, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 140, 252, 112, 0, 0, 0, 0, 0, 0
   \              06060606068C
   \              FC7000000000
   \              0000        
   \   00000395   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 8, 8, 248, 8, 8, 249, 0, 0, 0, 0, 0
   \              000000F80808
   \              F80808F90000
   \              000000      
   \   000003AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003C1   000000000000       DC8 0, 0, 0, 0, 0, 0, 63, 127, 255, 192, 128, 81, 162, 85, 0, 255, 248
   \              3F7FFFC08051
   \              A25500FFF8  
   \   000003D2   FF00FFFFFFFF       DC8 255, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
   \              FFFFFFFFFFFF
   \              FFFF        
   \   000003E0   FFFFFF00FF00       DC8 255, 255, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   000003F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 51, 51, 51, 51, 51, 51, 51
   \              000000000030
   \              313333333333
   \              3333        
   \   00000408   333333333161       DC8 51, 51, 51, 51, 49, 97, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              C00000000000
   \              000000000000
   \              0000        
   \   0000041C   00001C244444       DC8 0, 0, 28, 36, 68, 68, 68, 36, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              44241C000000
   \              000000000000
   \              0000        
   \   00000430   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000447   000000010307       DC8 0, 0, 0, 1, 3, 7, 14, 29, 24, 31, 1, 31, 16, 23, 23, 23, 23, 23, 23
   \              0E1D181F011F
   \              101717171717
   \              17          
   \   0000045A   171717171717       DC8 23, 23, 23, 23, 23, 23, 23, 23, 23, 16, 31, 0, 0, 0, 0, 0, 0, 0, 0
   \              171717101F00
   \              000000000000
   \              00          
   \   0000046D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 108, 198
   \              000000000000
   \              000000000000
   \              386CC6      
   \   00000482   C6C6C6C6C6C6       DC8 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 195, 1, 0, 0
   \              C6C6C6C6C6C3
   \              010000      
   \   00000491   000000             DC8 0, 0, 0

   \                                 In section .data, align 4
   \                     ScrollMenu_poz:
   \   00000000   FFFFFFFF           DC32 -1

   \                                 In section .data, align 4
   \                     ScrollMenu_Paint_exist:
   \   00000000   FFFFFFFF           DC32 -1

   \                                 In section .data, align 1
   \                     SetupTimeCarPoz:
   \   00000000   01                 DC8 1
   \                     SleepModTime:
   \   00000001   00                 DC8 0

   \                                 In section .data, align 1
   \                     SetTimeCell:
   \   00000000   01                 DC8 1
   8216            
   8217          
   8218          
   8219          
   8220          
   8221          
   8222          
   8223          
   8224          //*-----------------------------------------------------------------------------
   8225          //* Nazwa funkcji :    Alarm_Paint
   8226          //* Funkcja strony g³ównej menu
   8227          //*-----------------------------------------------------------------------------
   8228          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   8229          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8230          void AlarmPass_Paint(char CurrentSheet)
   8231          {
   \                     AlarmPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   8232          
   8233                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   9624               MOVS     R4,#+150
   \   00000004   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000006   164D               LDR      R5,??AlarmPass_Paint_0  ;; g_leng
   \   00000008   164E               LDR      R6,??AlarmPass_Paint_0+0x4  ;; Speech
   \   0000000A   17A2               ADR      R2,??AlarmPass_Paint_0+0x8  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000C   17A1               ADR      R1,??AlarmPass_Paint_0+0xC  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000E   FF20               MOVS     R0,#+255
   \   00000010   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000012   2B68               LDR      R3,[R5, #+0]
   \   00000014   6343               MULS     R3,R4,R3
   \   00000016   F318               ADDS     R3,R6,R3
   \   00000018   1818               ADDS     R0,R3,R0
   \   0000001A   ........           BL       Number_Paint
   8234                    Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);
   \   0000001E   82B0               SUB      SP,SP,#+8
   \   00000020   0020               MOVS     R0,#+0
   \   00000022   0090               STR      R0,[SP, #+0]
   \   00000024   7F21               MOVS     R1,#+127
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3A21               MOVS     R1,#+58
   \   0000002A   0F20               MOVS     R0,#+15
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   6623               MOVS     R3,#+102
   \   00000030   0322               MOVS     R2,#+3
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   FF20               MOVS     R0,#+255
   \   00000036   D230               ADDS     R0,R0,#+210      ;; #+465
   \   00000038   2D68               LDR      R5,[R5, #+0]
   \   0000003A   6543               MULS     R5,R4,R5
   \   0000003C   7419               ADDS     R4,R6,R5
   \   0000003E   2018               ADDS     R0,R4,R0
   \   00000040   ........           BL       Label
   \   00000044   06B0               ADD      SP,SP,#+24
   8235                    CleanCanvasArea(0,113,64,15,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   0F23               MOVS     R3,#+15
   \   0000004E   4022               MOVS     R2,#+64
   \   00000050   7121               MOVS     R1,#+113
   \   00000052   ........           BL       CleanCanvasArea
   \   00000056   02B0               ADD      SP,SP,#+8
   8236                
   8237          }//_______________________ Koniec funkcji AlarmPass_Paint __________________________
   \   00000058   70BC               POP      {R4-R6}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??AlarmPass_Paint_0:
   \   00000060   ........           DC32     g_leng
   \   00000064   ........           DC32     Speech
   \   00000068   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   0000006C   43000000           DC8      0x43, 0x00, 0x00, 0x00
   8238            
   8239          
   8240          
   8241          
   8242          //*-----------------------------------------------------------------------------
   8243          //* Nazwa funkcji :    AlarmPass_Event
   8244          //*-----------------------------------------------------------------------------
   8245          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8246          void AlarmPass_Event(char CurrentSheet)
   8247          {
   \                     AlarmPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8248            char Repaint=0;
   8249          
   8250          
   8251             int ans;
   8252                  char roz=0;
   8253                    
   8254                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   6348               LDR      R0,??AlarmPass_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   6248               LDR      R0,??AlarmPass_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   6248               LDR      R0,??AlarmPass_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   6248               LDR      R0,??AlarmPass_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Number_Event
   \   0000001A   0400               MOVS     R4,R0
   8255            
   8256                  if (ans>0)          {
   \   0000001C   012C               CMP      R4,#+1
   \   0000001E   00DA               BGE      .+4
   \   00000020   B1E0               B        ??AlarmPass_Event_1
   8257                      
   8258                      if (InsertPass1[4]<=3) 
   \   00000022   5F4D               LDR      R5,??AlarmPass_Event_0+0x10  ;; InsertPass1
   \   00000024   2879               LDRB     R0,[R5, #+4]
   \   00000026   0428               CMP      R0,#+4
   \   00000028   10D2               BCS      ??AlarmPass_Event_2
   8259                      { 
   8260                          if ((ans<10) || (ans==11)) 
   \   0000002A   0A2C               CMP      R4,#+10
   \   0000002C   01DB               BLT      ??AlarmPass_Event_3
   \   0000002E   0B2C               CMP      R4,#+11
   \   00000030   0CD1               BNE      ??AlarmPass_Event_2
   8261                          {
   8262                            if (ans<10) InsertPass1[InsertPass1[4]]=ans+48;
   \                     ??AlarmPass_Event_3:
   \   00000032   0A2C               CMP      R4,#+10
   \   00000034   02DA               BGE      ??AlarmPass_Event_4
   \   00000036   2100               MOVS     R1,R4
   \   00000038   3031               ADDS     R1,R1,#+48
   \   0000003A   2954               STRB     R1,[R5, R0]
   8263                            if (ans==11) InsertPass1[InsertPass1[4]]=ans+37;
   \                     ??AlarmPass_Event_4:
   \   0000003C   0B2C               CMP      R4,#+11
   \   0000003E   02D1               BNE      ??AlarmPass_Event_5
   \   00000040   2879               LDRB     R0,[R5, #+4]
   \   00000042   3021               MOVS     R1,#+48
   \   00000044   2954               STRB     R1,[R5, R0]
   8264                            InsertPass1[4]++;
   \                     ??AlarmPass_Event_5:
   \   00000046   2879               LDRB     R0,[R5, #+4]
   \   00000048   401C               ADDS     R0,R0,#+1
   \   0000004A   2871               STRB     R0,[R5, #+4]
   8265                          }
   8266                          
   8267                      }
   8268                      if ((ans==10) && (InsertPass1[4]>0) ) {InsertPass1[4]--; InsertPass1[InsertPass1[4]]=0;}
   \                     ??AlarmPass_Event_2:
   \   0000004C   0A2C               CMP      R4,#+10
   \   0000004E   08D1               BNE      ??AlarmPass_Event_6
   \   00000050   2879               LDRB     R0,[R5, #+4]
   \   00000052   0028               CMP      R0,#+0
   \   00000054   05D0               BEQ      ??AlarmPass_Event_6
   \   00000056   401E               SUBS     R0,R0,#+1
   \   00000058   2871               STRB     R0,[R5, #+4]
   \   0000005A   0006               LSLS     R0,R0,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   2954               STRB     R1,[R5, R0]
   8269                      
   8270                      
   8271                     char InsertPassVar=0;
   \                     ??AlarmPass_Event_6:
   \   00000062   0026               MOVS     R6,#+0
   \   00000064   3000               MOVS     R0,R6
   8272                     for (char i=0; i<=3; i++)  pass_tmp[i]=0;
   \   00000066   3100               MOVS     R1,R6
   \   00000068   3300               MOVS     R3,R6
   \   0000006A   04E0               B        ??AlarmPass_Event_7
   \                     ??AlarmPass_Event_8:
   \   0000006C   AA18               ADDS     R2,R5,R2
   \   0000006E   1373               STRB     R3,[R2, #+12]
   \   00000070   491C               ADDS     R1,R1,#+1
   \   00000072   0906               LSLS     R1,R1,#+24
   \   00000074   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPass_Event_7:
   \   00000076   0A00               MOVS     R2,R1
   \   00000078   042A               CMP      R2,#+4
   \   0000007A   F7D3               BCC      ??AlarmPass_Event_8
   8273                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<4))
   \                     ??AlarmPass_Event_9:
   \   0000007C   0100               MOVS     R1,R0
   \   0000007E   6A5C               LDRB     R2,[R5, R1]
   \   00000080   002A               CMP      R2,#+0
   \   00000082   09D0               BEQ      ??AlarmPass_Event_10
   \   00000084   0200               MOVS     R2,R0
   \   00000086   042A               CMP      R2,#+4
   \   00000088   06D2               BCS      ??AlarmPass_Event_10
   8274                     {
   8275                       pass_tmp[InsertPassVar]=42; //42="*"
   \   0000008A   6918               ADDS     R1,R5,R1
   \   0000008C   2A22               MOVS     R2,#+42
   \   0000008E   0A73               STRB     R2,[R1, #+12]
   8276                       InsertPassVar++;
   \   00000090   401C               ADDS     R0,R0,#+1
   \   00000092   0006               LSLS     R0,R0,#+24
   \   00000094   000E               LSRS     R0,R0,#+24
   \   00000096   F1E7               B        ??AlarmPass_Event_9
   8277                     }
   8278          
   8279                      
   8280                      //Sprawdzenie has³a
   8281                      if (ans==12)
   \                     ??AlarmPass_Event_10:
   \   00000098   0C2C               CMP      R4,#+12
   \   0000009A   5CD1               BNE      ??AlarmPass_Event_11
   8282                      {
   8283                        roz=0;
   \   0000009C   3000               MOVS     R0,R6
   8284                        for (int i=0; i<=3; i++)
   \   0000009E   3100               MOVS     R1,R6
   \   000000A0   23E0               B        ??AlarmPass_Event_12
   \                     ??AlarmPass_Event_13:
   \   000000A2   6A46               MOV      R2,SP
   \   000000A4   1278               LDRB     R2,[R2, #+0]
   \   000000A6   9200               LSLS     R2,R2,#+2
   \   000000A8   3E4B               LDR      R3,??AlarmPass_Event_0+0x14  ;; 0x13d7ee
   \   000000AA   9A18               ADDS     R2,R3,R2
   \   000000AC   6B5C               LDRB     R3,[R5, R1]
   \   000000AE   575C               LDRB     R7,[R2, R1]
   \   000000B0   BB42               CMP      R3,R7
   \   000000B2   00D0               BEQ      ??AlarmPass_Event_14
   8285                        {
   8286                            if ((InsertPass1[i]!=AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][i])) roz=1;
   \   000000B4   0120               MOVS     R0,#+1
   8287                            if  ((AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][0]==0) && 
   8288                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][1]==0) &&
   8289                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][2]==0) &&
   8290                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][3]==0) &&
   8291                                (InsertPass1[0]=='0') && 
   8292                                  (InsertPass1[1]=='0') && 
   8293                                    (InsertPass1[2]=='0') && 
   8294                                      (InsertPass1[3]=='0'))
   \                     ??AlarmPass_Event_14:
   \   000000B6   1378               LDRB     R3,[R2, #+0]
   \   000000B8   002B               CMP      R3,#+0
   \   000000BA   15D1               BNE      ??AlarmPass_Event_15
   \   000000BC   5378               LDRB     R3,[R2, #+1]
   \   000000BE   002B               CMP      R3,#+0
   \   000000C0   12D1               BNE      ??AlarmPass_Event_15
   \   000000C2   9378               LDRB     R3,[R2, #+2]
   \   000000C4   002B               CMP      R3,#+0
   \   000000C6   0FD1               BNE      ??AlarmPass_Event_15
   \   000000C8   D278               LDRB     R2,[R2, #+3]
   \   000000CA   002A               CMP      R2,#+0
   \   000000CC   0CD1               BNE      ??AlarmPass_Event_15
   \   000000CE   2A78               LDRB     R2,[R5, #+0]
   \   000000D0   302A               CMP      R2,#+48
   \   000000D2   09D1               BNE      ??AlarmPass_Event_15
   \   000000D4   6A78               LDRB     R2,[R5, #+1]
   \   000000D6   302A               CMP      R2,#+48
   \   000000D8   06D1               BNE      ??AlarmPass_Event_15
   \   000000DA   AA78               LDRB     R2,[R5, #+2]
   \   000000DC   302A               CMP      R2,#+48
   \   000000DE   03D1               BNE      ??AlarmPass_Event_15
   \   000000E0   EA78               LDRB     R2,[R5, #+3]
   \   000000E2   302A               CMP      R2,#+48
   \   000000E4   00D1               BNE      ??AlarmPass_Event_15
   8295                                {
   8296                                  roz=0;
   \   000000E6   3000               MOVS     R0,R6
   8297                                }
   8298                        }
   \                     ??AlarmPass_Event_15:
   \   000000E8   491C               ADDS     R1,R1,#+1
   \                     ??AlarmPass_Event_12:
   \   000000EA   0429               CMP      R1,#+4
   \   000000EC   D9DB               BLT      ??AlarmPass_Event_13
   8299                        
   8300                        if (roz==0)                                 //je¿eli poprawne haslo
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   1ED1               BNE      ??AlarmPass_Event_16
   8301                        {
   8302                           for (int i=0; i<=3; i++) InsertPass1[i]=0;
   \   000000F2   3100               MOVS     R1,R6
   \   000000F4   01E0               B        ??AlarmPass_Event_17
   \                     ??AlarmPass_Event_18:
   \   000000F6   2954               STRB     R1,[R5, R0]
   \   000000F8   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Event_17:
   \   000000FA   0428               CMP      R0,#+4
   \   000000FC   FBDB               BLT      ??AlarmPass_Event_18
   8303                           InsertPass1[4]=0;
   \   000000FE   3000               MOVS     R0,R6
   \   00000100   2871               STRB     R0,[R5, #+4]
   8304                           MESSAGE(Speech[g_leng].OchronaWyl); 
   \   00000102   2948               LDR      R0,??AlarmPass_Event_0+0x18  ;; 0x7e9
   \   00000104   2949               LDR      R1,??AlarmPass_Event_0+0x1C  ;; g_leng
   \   00000106   0968               LDR      R1,[R1, #+0]
   \   00000108   9622               MOVS     R2,#+150
   \   0000010A   1201               LSLS     R2,R2,#+4        ;; #+2400
   \   0000010C   5143               MULS     R1,R2,R1
   \   0000010E   284A               LDR      R2,??AlarmPass_Event_0+0x20  ;; Speech
   \   00000110   5118               ADDS     R1,R2,R1
   \   00000112   0818               ADDS     R0,R1,R0
   \   00000114   ........           BL       MESSAGE
   8305                           AlarmScreenAction[CurrentSheet].Active=0;
   \   00000118   6846               MOV      R0,SP
   \   0000011A   0078               LDRB     R0,[R0, #+0]
   \   0000011C   4000               LSLS     R0,R0,#+1
   \   0000011E   2549               LDR      R1,??AlarmPass_Event_0+0x24  ;; AlarmScreenAction
   \   00000120   3200               MOVS     R2,R6
   \   00000122   0A54               STRB     R2,[R1, R0]
   8306                           AlarmOn=0; 
   \   00000124   2448               LDR      R0,??AlarmPass_Event_0+0x28  ;; AlarmOn
   \   00000126   0670               STRB     R6,[R0, #+0]
   8307                           MenuLevel=1;
   \   00000128   2448               LDR      R0,??AlarmPass_Event_0+0x2C  ;; TextToChangeLength + 72
   \   0000012A   0121               MOVS     R1,#+1
   \   0000012C   0160               STR      R1,[R0, #+0]
   \   0000012E   12E0               B        ??AlarmPass_Event_11
   8308                        } 
   8309                        else
   8310                        {
   8311                           //informacja o b³ednym hale
   8312                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??AlarmPass_Event_16:
   \   00000130   3000               MOVS     R0,R6
   \   00000132   3100               MOVS     R1,R6
   \   00000134   01E0               B        ??AlarmPass_Event_19
   \                     ??AlarmPass_Event_20:
   \   00000136   2954               STRB     R1,[R5, R0]
   \   00000138   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Event_19:
   \   0000013A   0828               CMP      R0,#+8
   \   0000013C   FBDB               BLT      ??AlarmPass_Event_20
   8313                           InsertPass1[4]=0;
   \   0000013E   2E71               STRB     R6,[R5, #+4]
   8314                           MESSAGE(Speech[g_leng].BledneHaslo); 
   \   00000140   1F48               LDR      R0,??AlarmPass_Event_0+0x30  ;; 0x7da
   \   00000142   1A49               LDR      R1,??AlarmPass_Event_0+0x1C  ;; g_leng
   \   00000144   0968               LDR      R1,[R1, #+0]
   \   00000146   9622               MOVS     R2,#+150
   \   00000148   1201               LSLS     R2,R2,#+4        ;; #+2400
   \   0000014A   5143               MULS     R1,R2,R1
   \   0000014C   184A               LDR      R2,??AlarmPass_Event_0+0x20  ;; Speech
   \   0000014E   5118               ADDS     R1,R2,R1
   \   00000150   0818               ADDS     R0,R1,R0
   \   00000152   ........           BL       MESSAGE
   8315                        }
   8316          
   8317                      }
   8318                     
   8319                      if ((ans>=1) && (ans<=11)) 
   \                     ??AlarmPass_Event_11:
   \   00000156   012C               CMP      R4,#+1
   \   00000158   17DB               BLT      ??AlarmPass_Event_21
   \   0000015A   0C2C               CMP      R4,#+12
   \   0000015C   15DA               BGE      ??AlarmPass_Event_21
   8320                      {
   8321                        MenuPaint();
   \                     ??AlarmPass_Event_22:
   \   0000015E   ........           BL       MenuPaint
   8322                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000162   0F4D               LDR      R5,??AlarmPass_Event_0+0x10  ;; InsertPass1
   \   00000164   82B0               SUB      SP,SP,#+8
   \   00000166   0020               MOVS     R0,#+0
   \   00000168   0090               STR      R0,[SP, #+0]
   \   0000016A   7F21               MOVS     R1,#+127
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   3721               MOVS     R1,#+55
   \   00000170   2879               LDRB     R0,[R5, #+4]
   \   00000172   03B4               PUSH     {R0,R1}
   \   00000174   5A23               MOVS     R3,#+90
   \   00000176   0422               MOVS     R2,#+4
   \   00000178   0221               MOVS     R1,#+2
   \   0000017A   0C35               ADDS     R5,R5,#+12
   \   0000017C   2800               MOVS     R0,R5
   \   0000017E   ........           BL       Label
   \   00000182   06B0               ADD      SP,SP,#+24
   \   00000184   01E0               B        ??AlarmPass_Event_21
   8323                      }
   8324                      
   8325                    }  
   8326                    else if (ans==0) 
   \                     ??AlarmPass_Event_1:
   \   00000186   002C               CMP      R4,#+0
   \   00000188   E9D0               BEQ      ??AlarmPass_Event_22
   8327                      {
   8328                        MenuPaint();
   8329                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   8330                      } 
   8331             
   8332           
   8333            if (Repaint==1) MenuPaint();
   8334          }//_______________________ Koniec funkcji AlarmPass_Event __________________________
   \                     ??AlarmPass_Event_21:
   \   0000018A   F8BC               POP      {R3-R7}
   \   0000018C   01BC               POP      {R0}
   \   0000018E   0047               BX       R0               ;; return
   \                     ??AlarmPass_Event_0:
   \   00000190   ........           DC32     Y_down
   \   00000194   ........           DC32     X_down
   \   00000198   ........           DC32     Y_up
   \   0000019C   ........           DC32     X_up
   \   000001A0   ........           DC32     InsertPass1
   \   000001A4   EED71300           DC32     0x13d7ee
   \   000001A8   E9070000           DC32     0x7e9
   \   000001AC   ........           DC32     g_leng
   \   000001B0   ........           DC32     Speech
   \   000001B4   ........           DC32     AlarmScreenAction
   \   000001B8   ........           DC32     AlarmOn
   \   000001BC   ........           DC32     TextToChangeLength + 72
   \   000001C0   DA070000           DC32     0x7da
   8335            
   8336          
   8337          
   8338          
   8339          
   8340          
   8341          

   \                                 In section Debug.txt, align 4, keep-with-next
   8342          void AlarmPass_Refresh(void)
   8343          {
   \                     AlarmPass_Refresh:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   8EB0               SUB      SP,SP,#+56
   8344           
   8345                   //wskanik ¿ycia
   8346                    if (CurrentSheet==0) 
   \   00000004   3C48               LDR      R0,??AlarmPass_Refresh_0  ;; TextToChangeLength + 4
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   70D1               BNE      ??AlarmPass_Refresh_1
   8347                    {
   8348                    
   8349                      if ((MainSide_puls==0) || (MainSide_puls>3))
   \   0000000C   3B4C               LDR      R4,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   0000000E   2578               LDRB     R5,[R4, #+0]
   \   00000010   002D               CMP      R5,#+0
   \   00000012   01D0               BEQ      ??AlarmPass_Refresh_2
   \   00000014   042D               CMP      R5,#+4
   \   00000016   39D3               BCC      ??AlarmPass_Refresh_3
   8350                      { 
   8351                        
   8352                        char ekran1[2][13] = {
   8353                                   {0,0,224,24,232,244,244,244,232,24,224,0,0},
   8354                                    {0,0,0,3,2,5,5,5,2,3,0,0,0}
   8355                                    };
   \                     ??AlarmPass_Refresh_2:
   \   00000018   394E               LDR      R6,??AlarmPass_Refresh_0+0x8  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`
   \   0000001A   6846               MOV      R0,SP
   \   0000001C   3100               MOVS     R1,R6
   \   0000001E   1C22               MOVS     R2,#+28
   \   00000020   ........           BL       __aeabi_memcpy4
   8356                  
   8357                        char ekranSlave[2][13] = {
   8358                                    {0,0,224,248,152,124,180,220,56,248,224,0,0},
   8359                                    {0,0,0,3,3,7,5,7,3,3,0,0,0},
   8360                                    };
   \   00000024   07A8               ADD      R0,SP,#+28
   \   00000026   1C36               ADDS     R6,R6,#+28
   \   00000028   3100               MOVS     R1,R6
   \   0000002A   1C22               MOVS     R2,#+28
   \   0000002C   ........           BL       __aeabi_memcpy4
   8361                        
   8362                        if ((SlaveMode) )//je¿eli tryb slave
   \   00000030   3448               LDR      R0,??AlarmPass_Refresh_0+0xC  ;; SlaveMode
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   0028               CMP      R0,#+0
   \   00000036   14D0               BEQ      ??AlarmPass_Refresh_4
   8363                        {
   8364                              for (char i=0; i<=12; i++)
   \   00000038   0021               MOVS     R1,#+0
   \                     ??AlarmPass_Refresh_5:
   \   0000003A   0800               MOVS     R0,R1
   \   0000003C   0D28               CMP      R0,#+13
   \   0000003E   25D2               BCS      ??AlarmPass_Refresh_3
   8365                              {
   8366                           
   8367                              LCD_Canvas[0][i+115]=ekranSlave[0][i];
   \   00000040   0A00               MOVS     R2,R1
   \   00000042   3148               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; LCD_Canvas
   \   00000044   8318               ADDS     R3,R0,R2
   \   00000046   7333               ADDS     R3,R3,#+115
   \   00000048   07AE               ADD      R6,SP,#+28
   \   0000004A   B65C               LDRB     R6,[R6, R2]
   \   0000004C   1E70               STRB     R6,[R3, #+0]
   8368                              LCD_Canvas[1][i+115]=ekranSlave[1][i];
   \   0000004E   8018               ADDS     R0,R0,R2
   \   00000050   F330               ADDS     R0,R0,#+243
   \   00000052   07AB               ADD      R3,SP,#+28
   \   00000054   9A18               ADDS     R2,R3,R2
   \   00000056   527B               LDRB     R2,[R2, #+13]
   \   00000058   0270               STRB     R2,[R0, #+0]
   8369                              }
   \   0000005A   491C               ADDS     R1,R1,#+1
   \   0000005C   0906               LSLS     R1,R1,#+24
   \   0000005E   090E               LSRS     R1,R1,#+24
   \   00000060   EBE7               B        ??AlarmPass_Refresh_5
   8370                        }else{
   8371                          
   8372                            for (char i=0; i<=12; i++)
   \                     ??AlarmPass_Refresh_4:
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   0FE0               B        ??AlarmPass_Refresh_6
   8373                            {
   8374                           
   8375                              LCD_Canvas[0][i+115]=ekran1[0][i];
   \                     ??AlarmPass_Refresh_7:
   \   00000066   0A00               MOVS     R2,R1
   \   00000068   2748               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; LCD_Canvas
   \   0000006A   8318               ADDS     R3,R0,R2
   \   0000006C   7333               ADDS     R3,R3,#+115
   \   0000006E   6E46               MOV      R6,SP
   \   00000070   B65C               LDRB     R6,[R6, R2]
   \   00000072   1E70               STRB     R6,[R3, #+0]
   8376                              LCD_Canvas[1][i+115]=ekran1[1][i];
   \   00000074   8018               ADDS     R0,R0,R2
   \   00000076   F330               ADDS     R0,R0,#+243
   \   00000078   6B46               MOV      R3,SP
   \   0000007A   9A18               ADDS     R2,R3,R2
   \   0000007C   527B               LDRB     R2,[R2, #+13]
   \   0000007E   0270               STRB     R2,[R0, #+0]
   8377                            }
   \   00000080   491C               ADDS     R1,R1,#+1
   \   00000082   0906               LSLS     R1,R1,#+24
   \   00000084   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPass_Refresh_6:
   \   00000086   0800               MOVS     R0,R1
   \   00000088   0D28               CMP      R0,#+13
   \   0000008A   ECD3               BCC      ??AlarmPass_Refresh_7
   8378                          }
   8379                       //if ((!g_SlaveConnect) && (SlaveMode)) H_line(2,121,7,0);
   8380                      }
   8381                      if ((MainSide_puls==1) )
   \                     ??AlarmPass_Refresh_3:
   \   0000008C   012D               CMP      R5,#+1
   \   0000008E   21D1               BNE      ??AlarmPass_Refresh_8
   8382                      {
   8383                        
   8384                        if ((g_SlaveConnect) || (!SlaveMode))
   \   00000090   1E48               LDR      R0,??AlarmPass_Refresh_0+0x14  ;; g_SlaveConnect
   \   00000092   0078               LDRB     R0,[R0, #+0]
   \   00000094   0028               CMP      R0,#+0
   \   00000096   03D1               BNE      ??AlarmPass_Refresh_9
   \   00000098   1A48               LDR      R0,??AlarmPass_Refresh_0+0xC  ;; SlaveMode
   \   0000009A   0078               LDRB     R0,[R0, #+0]
   \   0000009C   0028               CMP      R0,#+0
   \   0000009E   19D1               BNE      ??AlarmPass_Refresh_8
   8385                        {
   8386                          char ekran2[2][13] = {
   8387                                    {240,28,230,250,251,253,253,253,251,250,230,28,240},
   8388                                    {1,7,12,11,27,23,23,23,27,11,12,7,1},
   8389                                    };
   \                     ??AlarmPass_Refresh_9:
   \   000000A0   6846               MOV      R0,SP
   \   000000A2   1B49               LDR      R1,??AlarmPass_Refresh_0+0x18  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2` + 56
   \   000000A4   1C22               MOVS     R2,#+28
   \   000000A6   ........           BL       __aeabi_memcpy4
   8390                        
   8391                          for (char i=0; i<=12; i++)
   \   000000AA   0021               MOVS     R1,#+0
   \   000000AC   0FE0               B        ??AlarmPass_Refresh_10
   8392                          {
   8393                           
   8394                            LCD_Canvas[0][i+115]=ekran2[0][i];
   \                     ??AlarmPass_Refresh_11:
   \   000000AE   0A00               MOVS     R2,R1
   \   000000B0   1548               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; LCD_Canvas
   \   000000B2   8318               ADDS     R3,R0,R2
   \   000000B4   7333               ADDS     R3,R3,#+115
   \   000000B6   6E46               MOV      R6,SP
   \   000000B8   B65C               LDRB     R6,[R6, R2]
   \   000000BA   1E70               STRB     R6,[R3, #+0]
   8395                            LCD_Canvas[1][i+115]=ekran2[1][i];
   \   000000BC   8018               ADDS     R0,R0,R2
   \   000000BE   F330               ADDS     R0,R0,#+243
   \   000000C0   6B46               MOV      R3,SP
   \   000000C2   9A18               ADDS     R2,R3,R2
   \   000000C4   527B               LDRB     R2,[R2, #+13]
   \   000000C6   0270               STRB     R2,[R0, #+0]
   8396                          }
   \   000000C8   491C               ADDS     R1,R1,#+1
   \   000000CA   0906               LSLS     R1,R1,#+24
   \   000000CC   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPass_Refresh_10:
   \   000000CE   0800               MOVS     R0,R1
   \   000000D0   0D28               CMP      R0,#+13
   \   000000D2   ECD3               BCC      ??AlarmPass_Refresh_11
   8397                        }
   8398                  
   8399                      }
   8400                       
   8401                  
   8402                    if (g_Stop_Program==0)
   \                     ??AlarmPass_Refresh_8:
   \   000000D4   0F48               LDR      R0,??AlarmPass_Refresh_0+0x1C  ;; g_Stop_Program
   \   000000D6   0078               LDRB     R0,[R0, #+0]
   \   000000D8   0028               CMP      R0,#+0
   \   000000DA   06D1               BNE      ??AlarmPass_Refresh_12
   8403                    {  
   8404                     if (MainSide_puls>7) {MainSide_puls=0;} else {MainSide_puls++;}    
   \   000000DC   082D               CMP      R5,#+8
   \   000000DE   01D3               BCC      ??AlarmPass_Refresh_13
   \   000000E0   2070               STRB     R0,[R4, #+0]
   \   000000E2   04E0               B        ??AlarmPass_Refresh_1
   \                     ??AlarmPass_Refresh_13:
   \   000000E4   6D1C               ADDS     R5,R5,#+1
   \   000000E6   2570               STRB     R5,[R4, #+0]
   \   000000E8   01E0               B        ??AlarmPass_Refresh_1
   8405                    }else{
   8406                      MainSide_puls=7; 
   \                     ??AlarmPass_Refresh_12:
   \   000000EA   0720               MOVS     R0,#+7
   \   000000EC   2070               STRB     R0,[R4, #+0]
   8407                    }
   8408                     
   8409                    }
   8410          
   8411          }//_______________________ Koniec funkcji AlarmPass_Refresh __________________________
   \                     ??AlarmPass_Refresh_1:
   \   000000EE   0EB0               ADD      SP,SP,#+56
   \   000000F0   70BC               POP      {R4-R6}
   \   000000F2   01BC               POP      {R0}
   \   000000F4   0047               BX       R0               ;; return
   \   000000F6   C046               Nop      
   \                     ??AlarmPass_Refresh_0:
   \   000000F8   ........           DC32     TextToChangeLength + 4
   \   000000FC   ........           DC32     MainSide_puls
   \   00000100   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`
   \   00000104   ........           DC32     SlaveMode
   \   00000108   ........           DC32     LCD_Canvas
   \   0000010C   ........           DC32     g_SlaveConnect
   \   00000110   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2` + 56
   \   00000114   ........           DC32     g_Stop_Program
   8412          
   8413          
   8414          
   8415          
   8416          extern char APC;
   8417          //*-----------------------------------------------------------------------------
   8418          //* Nazwa funkcji :    Alarm_Paint
   8419          //* Funkcja strony g³ównej menu
   8420          //*-----------------------------------------------------------------------------
   8421          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   8422          //*-----------------------------------------------------------------------------
   8423          

   \                                 In section Debug.txt, align 4, keep-with-next
   8424          void AlarmPassChange_Paint(char CurrentSheet)
   8425          {
   \                     AlarmPassChange_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   8426          
   8427                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   9624               MOVS     R4,#+150
   \   00000004   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000006   224D               LDR      R5,??AlarmPassChange_Paint_0  ;; g_leng
   \   00000008   224E               LDR      R6,??AlarmPassChange_Paint_0+0x4  ;; Speech
   \   0000000A   23A2               ADR      R2,??AlarmPassChange_Paint_0+0x8  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000C   23A1               ADR      R1,??AlarmPassChange_Paint_0+0xC  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000E   FF20               MOVS     R0,#+255
   \   00000010   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000012   2B68               LDR      R3,[R5, #+0]
   \   00000014   6343               MULS     R3,R4,R3
   \   00000016   F318               ADDS     R3,R6,R3
   \   00000018   1818               ADDS     R0,R3,R0
   \   0000001A   ........           BL       Number_Paint
   8428                    if (APC==0)
   \   0000001E   2048               LDR      R0,??AlarmPassChange_Paint_0+0x10  ;; APC
   \   00000020   0078               LDRB     R0,[R0, #+0]
   \   00000022   0028               CMP      R0,#+0
   \   00000024   82B0               SUB      SP,SP,#+8
   \   00000026   13D1               BNE      ??AlarmPassChange_Paint_1
   8429                    {
   8430                      Label(Speech[g_leng].ObecneHaslo,0,3,102,15,58,0,127,0);
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   7F21               MOVS     R1,#+127
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   3A21               MOVS     R1,#+58
   \   00000032   0F20               MOVS     R0,#+15
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   6623               MOVS     R3,#+102
   \   00000038   0322               MOVS     R2,#+3
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   FF20               MOVS     R0,#+255
   \   0000003E   7830               ADDS     R0,R0,#+120      ;; #+375
   \   00000040   2D68               LDR      R5,[R5, #+0]
   \   00000042   6543               MULS     R5,R4,R5
   \   00000044   7419               ADDS     R4,R6,R5
   \   00000046   2018               ADDS     R0,R4,R0
   \   00000048   ........           BL       Label
   \   0000004C   06B0               ADD      SP,SP,#+24
   \   0000004E   12E0               B        ??AlarmPassChange_Paint_2
   8431                    }else{
   8432                      Label(Speech[g_leng].NoweHaslo,0,3,102,15,58,0,127,0);
   \                     ??AlarmPassChange_Paint_1:
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   7F21               MOVS     R1,#+127
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   3A21               MOVS     R1,#+58
   \   0000005A   0F20               MOVS     R0,#+15
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   6623               MOVS     R3,#+102
   \   00000060   0322               MOVS     R2,#+3
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   C320               MOVS     R0,#+195
   \   00000066   4000               LSLS     R0,R0,#+1        ;; #+390
   \   00000068   2D68               LDR      R5,[R5, #+0]
   \   0000006A   6543               MULS     R5,R4,R5
   \   0000006C   7419               ADDS     R4,R6,R5
   \   0000006E   2018               ADDS     R0,R4,R0
   \   00000070   ........           BL       Label
   \   00000074   06B0               ADD      SP,SP,#+24
   8433                    }
   8434                    CleanCanvasArea(0,113,64,15,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??AlarmPassChange_Paint_2:
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   0F23               MOVS     R3,#+15
   \   0000007E   4022               MOVS     R2,#+64
   \   00000080   7121               MOVS     R1,#+113
   \   00000082   ........           BL       CleanCanvasArea
   \   00000086   02B0               ADD      SP,SP,#+8
   8435                
   8436          }//_______________________ Koniec funkcji AlarmPass_Paint __________________________
   \   00000088   70BC               POP      {R4-R6}
   \   0000008A   01BC               POP      {R0}
   \   0000008C   0047               BX       R0               ;; return
   \   0000008E   C046               Nop      
   \                     ??AlarmPassChange_Paint_0:
   \   00000090   ........           DC32     g_leng
   \   00000094   ........           DC32     Speech
   \   00000098   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   0000009C   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   000000A0   ........           DC32     APC
   8437            
   8438          
   8439          
   8440          
   8441          //*-----------------------------------------------------------------------------
   8442          //* Nazwa funkcji :    AlarmPass_Event
   8443          //*-----------------------------------------------------------------------------
   8444          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8445          void AlarmPassChange_Event(char CurrentSheet)
   8446          {
   \                     AlarmPassChange_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   8447            short int Repaint=0;
   \   00000004   0024               MOVS     R4,#+0
   \   00000006   6846               MOV      R0,SP
   \   00000008   2100               MOVS     R1,R4
   \   0000000A   0180               STRH     R1,[R0, #+0]
   8448          
   8449          
   8450          
   8451            short int ans;
   8452                  short int roz=0;
   8453                    
   8454                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000C   6C48               LDR      R0,??AlarmPassChange_Event_0  ;; Y_down
   \   0000000E   435E               LDRSH    R3,[R0, R1]
   \   00000010   6C48               LDR      R0,??AlarmPassChange_Event_0+0x4  ;; X_down
   \   00000012   425E               LDRSH    R2,[R0, R1]
   \   00000014   6C48               LDR      R0,??AlarmPassChange_Event_0+0x8  ;; Y_up
   \   00000016   415E               LDRSH    R1,[R0, R1]
   \   00000018   6C48               LDR      R0,??AlarmPassChange_Event_0+0xC  ;; X_up
   \   0000001A   0025               MOVS     R5,#+0
   \   0000001C   405F               LDRSH    R0,[R0, R5]
   \   0000001E   ........           BL       Number_Event
   \   00000022   0500               MOVS     R5,R0
   \   00000024   2D04               LSLS     R5,R5,#+16
   \   00000026   2D14               ASRS     R5,R5,#+16
   8455            
   8456                  if (ans>0)          {
   \   00000028   012D               CMP      R5,#+1
   \   0000002A   00DA               BGE      .+4
   \   0000002C   BCE0               B        ??AlarmPassChange_Event_1
   8457                      
   8458                      if (InsertPass1[4]<=3) 
   \   0000002E   684F               LDR      R7,??AlarmPassChange_Event_0+0x10  ;; InsertPass1
   \   00000030   3879               LDRB     R0,[R7, #+4]
   \   00000032   0428               CMP      R0,#+4
   \   00000034   10D2               BCS      ??AlarmPassChange_Event_2
   8459                      { 
   8460                          if ((ans<10) || (ans==11)) 
   \   00000036   0A2D               CMP      R5,#+10
   \   00000038   01DB               BLT      ??AlarmPassChange_Event_3
   \   0000003A   0B2D               CMP      R5,#+11
   \   0000003C   0CD1               BNE      ??AlarmPassChange_Event_2
   8461                          {
   8462                            if (ans<10) InsertPass1[InsertPass1[4]]=ans+48;
   \                     ??AlarmPassChange_Event_3:
   \   0000003E   0A2D               CMP      R5,#+10
   \   00000040   02DA               BGE      ??AlarmPassChange_Event_4
   \   00000042   2900               MOVS     R1,R5
   \   00000044   3031               ADDS     R1,R1,#+48
   \   00000046   3954               STRB     R1,[R7, R0]
   8463                            if (ans==11) InsertPass1[InsertPass1[4]]=ans+37;
   \                     ??AlarmPassChange_Event_4:
   \   00000048   0B2D               CMP      R5,#+11
   \   0000004A   02D1               BNE      ??AlarmPassChange_Event_5
   \   0000004C   3879               LDRB     R0,[R7, #+4]
   \   0000004E   3021               MOVS     R1,#+48
   \   00000050   3954               STRB     R1,[R7, R0]
   8464                            InsertPass1[4]++;
   \                     ??AlarmPassChange_Event_5:
   \   00000052   3879               LDRB     R0,[R7, #+4]
   \   00000054   401C               ADDS     R0,R0,#+1
   \   00000056   3871               STRB     R0,[R7, #+4]
   8465                          }
   8466                          
   8467                      }
   8468                      if ((ans==10) && (InsertPass1[4]>0) ) {InsertPass1[4]--; InsertPass1[InsertPass1[4]]=0;}
   \                     ??AlarmPassChange_Event_2:
   \   00000058   0A2D               CMP      R5,#+10
   \   0000005A   08D1               BNE      ??AlarmPassChange_Event_6
   \   0000005C   3879               LDRB     R0,[R7, #+4]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   05D0               BEQ      ??AlarmPassChange_Event_6
   \   00000062   401E               SUBS     R0,R0,#+1
   \   00000064   3871               STRB     R0,[R7, #+4]
   \   00000066   0006               LSLS     R0,R0,#+24
   \   00000068   000E               LSRS     R0,R0,#+24
   \   0000006A   2100               MOVS     R1,R4
   \   0000006C   3954               STRB     R1,[R7, R0]
   8469                      
   8470                      
   8471                     short int InsertPassVar=0;
   \                     ??AlarmPassChange_Event_6:
   \   0000006E   2000               MOVS     R0,R4
   8472                     for (char i=0; i<=3; i++)  pass_tmp[i]=0;
   \   00000070   2100               MOVS     R1,R4
   \   00000072   2300               MOVS     R3,R4
   \   00000074   04E0               B        ??AlarmPassChange_Event_7
   \                     ??AlarmPassChange_Event_8:
   \   00000076   BA18               ADDS     R2,R7,R2
   \   00000078   1373               STRB     R3,[R2, #+12]
   \   0000007A   491C               ADDS     R1,R1,#+1
   \   0000007C   0906               LSLS     R1,R1,#+24
   \   0000007E   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPassChange_Event_7:
   \   00000080   0A00               MOVS     R2,R1
   \   00000082   042A               CMP      R2,#+4
   \   00000084   F7D3               BCC      ??AlarmPassChange_Event_8
   8473                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<4))
   \                     ??AlarmPassChange_Event_9:
   \   00000086   395C               LDRB     R1,[R7, R0]
   \   00000088   0029               CMP      R1,#+0
   \   0000008A   08D0               BEQ      ??AlarmPassChange_Event_10
   \   0000008C   0428               CMP      R0,#+4
   \   0000008E   06DA               BGE      ??AlarmPassChange_Event_10
   8474                     {
   8475                       pass_tmp[InsertPassVar]=42; //42="*"
   \   00000090   3918               ADDS     R1,R7,R0
   \   00000092   2A22               MOVS     R2,#+42
   \   00000094   0A73               STRB     R2,[R1, #+12]
   8476                       InsertPassVar++;
   \   00000096   401C               ADDS     R0,R0,#+1
   \   00000098   0004               LSLS     R0,R0,#+16
   \   0000009A   0014               ASRS     R0,R0,#+16
   \   0000009C   F3E7               B        ??AlarmPassChange_Event_9
   8477                     }
   8478          
   8479                    
   8480                      //Sprawdzenie has³a
   8481                      if (ans==12)
   \                     ??AlarmPassChange_Event_10:
   \   0000009E   0C2D               CMP      R5,#+12
   \   000000A0   6AD1               BNE      ??AlarmPassChange_Event_11
   8482                      {
   8483                        
   8484                        roz=0;
   \   000000A2   2000               MOVS     R0,R4
   8485                        for (int i=0; i<=3; i++)
   \   000000A4   2100               MOVS     R1,R4
   \   000000A6   27E0               B        ??AlarmPassChange_Event_12
   8486                        {
   8487                          if (APC==0)
   \                     ??AlarmPassChange_Event_13:
   \   000000A8   4A4A               LDR      R2,??AlarmPassChange_Event_0+0x14  ;; APC
   \   000000AA   1278               LDRB     R2,[R2, #+0]
   \   000000AC   002A               CMP      R2,#+0
   \   000000AE   22D1               BNE      ??AlarmPassChange_Event_14
   8488                          {
   8489                            if ((InsertPass1[i]!=AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][i])) roz=1;
   \   000000B0   6A46               MOV      R2,SP
   \   000000B2   127A               LDRB     R2,[R2, #+8]
   \   000000B4   9200               LSLS     R2,R2,#+2
   \   000000B6   484B               LDR      R3,??AlarmPassChange_Event_0+0x18  ;; 0x13d7ee
   \   000000B8   9A18               ADDS     R2,R3,R2
   \   000000BA   7B5C               LDRB     R3,[R7, R1]
   \   000000BC   565C               LDRB     R6,[R2, R1]
   \   000000BE   B342               CMP      R3,R6
   \   000000C0   00D0               BEQ      ??AlarmPassChange_Event_15
   \   000000C2   0120               MOVS     R0,#+1
   8490                            if  ((AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][0]==0) && 
   8491                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][1]==0) &&
   8492                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][2]==0) &&
   8493                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][3]==0) &&
   8494                                (InsertPass1[0]=='0') && 
   8495                                  (InsertPass1[1]=='0') && 
   8496                                    (InsertPass1[2]=='0') && 
   8497                                      (InsertPass1[3]=='0'))
   \                     ??AlarmPassChange_Event_15:
   \   000000C4   1378               LDRB     R3,[R2, #+0]
   \   000000C6   002B               CMP      R3,#+0
   \   000000C8   15D1               BNE      ??AlarmPassChange_Event_14
   \   000000CA   5378               LDRB     R3,[R2, #+1]
   \   000000CC   002B               CMP      R3,#+0
   \   000000CE   12D1               BNE      ??AlarmPassChange_Event_14
   \   000000D0   9378               LDRB     R3,[R2, #+2]
   \   000000D2   002B               CMP      R3,#+0
   \   000000D4   0FD1               BNE      ??AlarmPassChange_Event_14
   \   000000D6   D278               LDRB     R2,[R2, #+3]
   \   000000D8   002A               CMP      R2,#+0
   \   000000DA   0CD1               BNE      ??AlarmPassChange_Event_14
   \   000000DC   3A78               LDRB     R2,[R7, #+0]
   \   000000DE   302A               CMP      R2,#+48
   \   000000E0   09D1               BNE      ??AlarmPassChange_Event_14
   \   000000E2   7A78               LDRB     R2,[R7, #+1]
   \   000000E4   302A               CMP      R2,#+48
   \   000000E6   06D1               BNE      ??AlarmPassChange_Event_14
   \   000000E8   BA78               LDRB     R2,[R7, #+2]
   \   000000EA   302A               CMP      R2,#+48
   \   000000EC   03D1               BNE      ??AlarmPassChange_Event_14
   \   000000EE   FA78               LDRB     R2,[R7, #+3]
   \   000000F0   302A               CMP      R2,#+48
   \   000000F2   00D1               BNE      ??AlarmPassChange_Event_14
   8498                                {
   8499                                  roz=0;
   \   000000F4   2000               MOVS     R0,R4
   8500                                }
   8501                           
   8502                            
   8503                          }
   8504                        }
   \                     ??AlarmPassChange_Event_14:
   \   000000F6   491C               ADDS     R1,R1,#+1
   \                     ??AlarmPassChange_Event_12:
   \   000000F8   0429               CMP      R1,#+4
   \   000000FA   D5DB               BLT      ??AlarmPassChange_Event_13
   8505                        
   8506                        
   8507                        if (roz==0)                                 //je¿eli poprawne haslo
   \   000000FC   0028               CMP      R0,#+0
   \   000000FE   28D1               BNE      ??AlarmPassChange_Event_16
   8508                        {
   8509                           
   8510                           
   8511          
   8512                           if (APC==1)
   \   00000100   3448               LDR      R0,??AlarmPassChange_Event_0+0x14  ;; APC
   \   00000102   0178               LDRB     R1,[R0, #+0]
   \   00000104   0129               CMP      R1,#+1
   \   00000106   16D1               BNE      ??AlarmPassChange_Event_17
   8513                           {
   8514                              APC=0;
   \   00000108   2100               MOVS     R1,R4
   \   0000010A   0170               STRB     R1,[R0, #+0]
   8515                              MenuLevel=1;
   \   0000010C   3348               LDR      R0,??AlarmPassChange_Event_0+0x1C  ;; TextToChangeLength + 72
   \   0000010E   0121               MOVS     R1,#+1
   \   00000110   0160               STR      R1,[R0, #+0]
   8516                              
   8517                              unsigned int Save = __get_interrupt_state();  
   \   00000112   ........           BL       __iar_get_interrupt_state
   \   00000116   0600               MOVS     R6,R0
   8518                              __disable_interrupt();
   \   00000118   ........           BL       __iar_disable_interrupt
   8519                                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet])), InsertPass1, 4);
                                             ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000011C   0422               MOVS     R2,#+4
   \   0000011E   3900               MOVS     R1,R7
   \   00000120   6846               MOV      R0,SP
   \   00000122   007A               LDRB     R0,[R0, #+8]
   \   00000124   8000               LSLS     R0,R0,#+2
   \   00000126   2C4B               LDR      R3,??AlarmPassChange_Event_0+0x18  ;; 0x13d7ee
   \   00000128   1818               ADDS     R0,R3,R0
   \   0000012A   ........           BL       FlashWrite
   8520                              __set_interrupt_state(Save);
   \   0000012E   3000               MOVS     R0,R6
   \   00000130   ........           BL       __iar_set_interrupt_state
   \   00000134   01E0               B        ??AlarmPassChange_Event_18
   8521                              
   8522                           }else{
   8523                            APC=1; 
   \                     ??AlarmPassChange_Event_17:
   \   00000136   0121               MOVS     R1,#+1
   \   00000138   0170               STRB     R1,[R0, #+0]
   8524                           }
   8525                           for (int i=0; i<=3; i++) InsertPass1[i]=0;
   \                     ??AlarmPassChange_Event_18:
   \   0000013A   2000               MOVS     R0,R4
   \   0000013C   2100               MOVS     R1,R4
   \   0000013E   01E0               B        ??AlarmPassChange_Event_19
   \                     ??AlarmPassChange_Event_20:
   \   00000140   3954               STRB     R1,[R7, R0]
   \   00000142   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPassChange_Event_19:
   \   00000144   0428               CMP      R0,#+4
   \   00000146   FBDB               BLT      ??AlarmPassChange_Event_20
   8526                           InsertPass1[4]=0;
   \   00000148   3C71               STRB     R4,[R7, #+4]
   8527                           Repaint=1;
   \   0000014A   6846               MOV      R0,SP
   \   0000014C   0121               MOVS     R1,#+1
   \   0000014E   0180               STRH     R1,[R0, #+0]
   \   00000150   12E0               B        ??AlarmPassChange_Event_11
   8528                        } 
   8529                        else
   8530                        {
   8531                           //informacja o b³ednym hale
   8532                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??AlarmPassChange_Event_16:
   \   00000152   2000               MOVS     R0,R4
   \   00000154   2100               MOVS     R1,R4
   \   00000156   01E0               B        ??AlarmPassChange_Event_21
   \                     ??AlarmPassChange_Event_22:
   \   00000158   3954               STRB     R1,[R7, R0]
   \   0000015A   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPassChange_Event_21:
   \   0000015C   0828               CMP      R0,#+8
   \   0000015E   FBDB               BLT      ??AlarmPassChange_Event_22
   8533                           InsertPass1[4]=0;
   \   00000160   3C71               STRB     R4,[R7, #+4]
   8534                           MESSAGE(Speech[g_leng].BledneHaslo); 
   \   00000162   1F48               LDR      R0,??AlarmPassChange_Event_0+0x20  ;; 0x7da
   \   00000164   1F49               LDR      R1,??AlarmPassChange_Event_0+0x24  ;; g_leng
   \   00000166   0968               LDR      R1,[R1, #+0]
   \   00000168   9622               MOVS     R2,#+150
   \   0000016A   1201               LSLS     R2,R2,#+4        ;; #+2400
   \   0000016C   5143               MULS     R1,R2,R1
   \   0000016E   1E4A               LDR      R2,??AlarmPassChange_Event_0+0x28  ;; Speech
   \   00000170   5118               ADDS     R1,R2,R1
   \   00000172   0818               ADDS     R0,R1,R0
   \   00000174   ........           BL       MESSAGE
   8535                        }
   8536                        
   8537          
   8538                      }
   8539                     
   8540                      if ((ans>=1) && (ans<=11)) 
   \                     ??AlarmPassChange_Event_11:
   \   00000178   012D               CMP      R5,#+1
   \   0000017A   17DB               BLT      ??AlarmPassChange_Event_23
   \   0000017C   0C2D               CMP      R5,#+12
   \   0000017E   15DA               BGE      ??AlarmPassChange_Event_23
   8541                      {
   8542                        MenuPaint();
   \                     ??AlarmPassChange_Event_24:
   \   00000180   ........           BL       MenuPaint
   8543                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000184   124F               LDR      R7,??AlarmPassChange_Event_0+0x10  ;; InsertPass1
   \   00000186   82B0               SUB      SP,SP,#+8
   \   00000188   2000               MOVS     R0,R4
   \   0000018A   0090               STR      R0,[SP, #+0]
   \   0000018C   7F21               MOVS     R1,#+127
   \   0000018E   03B4               PUSH     {R0,R1}
   \   00000190   3721               MOVS     R1,#+55
   \   00000192   3879               LDRB     R0,[R7, #+4]
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   5A23               MOVS     R3,#+90
   \   00000198   0422               MOVS     R2,#+4
   \   0000019A   0221               MOVS     R1,#+2
   \   0000019C   0C37               ADDS     R7,R7,#+12
   \   0000019E   3800               MOVS     R0,R7
   \   000001A0   ........           BL       Label
   \   000001A4   06B0               ADD      SP,SP,#+24
   \   000001A6   01E0               B        ??AlarmPassChange_Event_23
   8544                      }
   8545                      
   8546                    }  
   8547                    else if (ans==0) 
   \                     ??AlarmPassChange_Event_1:
   \   000001A8   002D               CMP      R5,#+0
   \   000001AA   E9D0               BEQ      ??AlarmPassChange_Event_24
   8548                      {
   8549                        MenuPaint();
   8550                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   8551                     } 
   8552           
   8553          
   8554           
   8555          
   8556          
   8557           
   8558            if (Repaint==1) MenuPaint();
   \                     ??AlarmPassChange_Event_23:
   \   000001AC   6946               MOV      R1,SP
   \   000001AE   2000               MOVS     R0,R4
   \   000001B0   085E               LDRSH    R0,[R1, R0]
   \   000001B2   0128               CMP      R0,#+1
   \   000001B4   01D1               BNE      ??AlarmPassChange_Event_25
   \   000001B6   ........           BL       MenuPaint
   8559          }//_______________________ Koniec funkcji AlarmPass_Event __________________________
   \                     ??AlarmPassChange_Event_25:
   \   000001BA   FEBC               POP      {R1-R7}
   \   000001BC   01BC               POP      {R0}
   \   000001BE   0047               BX       R0               ;; return
   \                     ??AlarmPassChange_Event_0:
   \   000001C0   ........           DC32     Y_down
   \   000001C4   ........           DC32     X_down
   \   000001C8   ........           DC32     Y_up
   \   000001CC   ........           DC32     X_up
   \   000001D0   ........           DC32     InsertPass1
   \   000001D4   ........           DC32     APC
   \   000001D8   EED71300           DC32     0x13d7ee
   \   000001DC   ........           DC32     TextToChangeLength + 72
   \   000001E0   DA070000           DC32     0x7da
   \   000001E4   ........           DC32     g_leng
   \   000001E8   ........           DC32     Speech
   8560            
   8561          
   8562          
   8563          
   8564          
   8565                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8566                void Node_Paint(char CurrentNode)
   8567                {
   \                     Node_Paint:
   \   00000000   07B5               PUSH     {R0-R2,LR}
   8568                  char txt[8];
   8569                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000002   6946               MOV      R1,SP
   \   00000004   4E22               MOVS     R2,#+78
   \   00000006   0A70               STRB     R2,[R1, #+0]
   \   00000008   6F22               MOVS     R2,#+111
   \   0000000A   4A70               STRB     R2,[R1, #+1]
   \   0000000C   6422               MOVS     R2,#+100
   \   0000000E   8A70               STRB     R2,[R1, #+2]
   \   00000010   6522               MOVS     R2,#+101
   \   00000012   CA70               STRB     R2,[R1, #+3]
   \   00000014   2022               MOVS     R2,#+32
   \   00000016   0A71               STRB     R2,[R1, #+4]
   8570                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   00000018   0222               MOVS     R2,#+2
   \   0000001A   491D               ADDS     R1,R1,#+5
   \   0000001C   ........           BL       CharToStr
   8571                  
   8572                  List_Paint(txt,5,15,0,0,3, Speech[g_leng].ZmID, Speech[g_leng].UsunID, Speech[g_leng].ZmOpis, Speech[g_leng].TestTrans, Speech[g_leng].StanWeWy ,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000020   1248               LDR      R0,??Node_Paint_0  ;; g_leng
   \   00000022   0068               LDR      R0,[R0, #+0]
   \   00000024   9621               MOVS     R1,#+150
   \   00000026   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   00000028   4843               MULS     R0,R1,R0
   \   0000002A   1149               LDR      R1,??Node_Paint_0+0x4  ;; Speech
   \   0000002C   0A18               ADDS     R2,R1,R0
   \   0000002E   0021               MOVS     R1,#+0
   \   00000030   0800               MOVS     R0,R1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   8720               MOVS     R0,#+135
   \   00000036   0001               LSLS     R0,R0,#+4        ;; #+2160
   \   00000038   1018               ADDS     R0,R2,R0
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   0D48               LDR      R0,??Node_Paint_0+0x8  ;; 0x87f
   \   0000003E   1118               ADDS     R1,R2,R0
   \   00000040   1E38               SUBS     R0,R0,#+30
   \   00000042   1018               ADDS     R0,R2,R0
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   0C48               LDR      R0,??Node_Paint_0+0xC  ;; 0x852
   \   00000048   1118               ADDS     R1,R2,R0
   \   0000004A   0F38               SUBS     R0,R0,#+15
   \   0000004C   1018               ADDS     R0,R2,R0
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   0321               MOVS     R1,#+3
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   0300               MOVS     R3,R0
   \   00000058   0F22               MOVS     R2,#+15
   \   0000005A   0521               MOVS     R1,#+5
   \   0000005C   0AA8               ADD      R0,SP,#+40
   \   0000005E   ........           BL       List_Paint
   \   00000062   0AB0               ADD      SP,SP,#+40
   8573                                              
   8574                  
   8575                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000064   0EBC               POP      {R1-R3}
   \   00000066   01BC               POP      {R0}
   \   00000068   0047               BX       R0               ;; return
   \   0000006A   C046               Nop      
   \                     ??Node_Paint_0:
   \   0000006C   ........           DC32     g_leng
   \   00000070   ........           DC32     Speech
   \   00000074   7F080000           DC32     0x87f
   \   00000078   52080000           DC32     0x852
   8576          
   8577          
   8578          
   8579                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8580                void Node_Event(char CurrentNode)
   8581                {
   \                     Node_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   8582                  int ans;
   8583                 
   8584                  ans=List_Event(X_up, Y_up, X_down, Y_down, 5 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0520               MOVS     R0,#+5
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   3048               LDR      R0,??Node_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   3048               LDR      R0,??Node_Event_0+0x4  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   3048               LDR      R0,??Node_Event_0+0x8  ;; Y_up
   \   0000001C   415E               LDRSH    R1,[R0, R1]
   \   0000001E   3048               LDR      R0,??Node_Event_0+0xC  ;; X_up
   \   00000020   0025               MOVS     R5,#+0
   \   00000022   405F               LDRSH    R0,[R0, R5]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   \   0000002A   0500               MOVS     R5,R0
   8585            
   8586                  if (ans)
   \   0000002C   4ED0               BEQ      ??Node_Event_1
   8587                    {
   8588                    if ((ans>0) && (ans<=5)) 
   \   0000002E   012D               CMP      R5,#+1
   \   00000030   3EDB               BLT      ??Node_Event_2
   \   00000032   062D               CMP      R5,#+6
   \   00000034   3CDA               BGE      ??Node_Event_2
   8589                    {
   8590                      RF_NodeTest.Sent=0;
   \   00000036   2B48               LDR      R0,??Node_Event_0+0x10  ;; RF_NodeTest
   \   00000038   0026               MOVS     R6,#+0
   \   0000003A   4660               STR      R6,[R0, #+4]
   8591                      RF_NodeTest.Recived=0;
   \   0000003C   8660               STR      R6,[R0, #+8]
   8592                      if (ans==2) //je¿eli usun ID
   \   0000003E   022D               CMP      R5,#+2
   \   00000040   26D1               BNE      ??Node_Event_3
   \   00000042   A000               LSLS     R0,R4,#+2
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   2848               LDR      R0,??Node_Event_0+0x14  ;; 0xc094
   \   00000048   0099               LDR      R1,[SP, #+0]
   \   0000004A   284A               LDR      R2,??Node_Event_0+0x18  ;; gProg
   \   0000004C   5118               ADDS     R1,R2,R1
   \   0000004E   0E50               STR      R6,[R1, R0]
   8593                      {
   8594                        gProg.NeuronsIdTab[CurrentNode-1]=0;
   8595                        NeuronsList[CurrentNode-1].NeuronID=0;
   \   00000050   0C20               MOVS     R0,#+12
   \   00000052   6043               MULS     R0,R4,R0
   \   00000054   2649               LDR      R1,??Node_Event_0+0x1C  ;; NeuronsList
   \   00000056   0818               ADDS     R0,R1,R0
   \   00000058   0C38               SUBS     R0,R0,#+12
   \   0000005A   4660               STR      R6,[R0, #+4]
   8596                        NeuronsList[CurrentNode-1].NeuronType=NoneNodeType;
   \   0000005C   3100               MOVS     R1,R6
   \   0000005E   0170               STRB     R1,[R0, #+0]
   8597                        ProgramChange=1;
   \   00000060   244F               LDR      R7,??Node_Event_0+0x20  ;; TextToChangeLength
   \   00000062   0120               MOVS     R0,#+1
   \   00000064   3872               STRB     R0,[R7, #+8]
   8598                        RefreshNeuronsList(&gProg);
   \   00000066   2148               LDR      R0,??Node_Event_0+0x18  ;; gProg
   \   00000068   ........           BL       RefreshNeuronsList
   8599                        SetTask(&gProg);
   \   0000006C   1F48               LDR      R0,??Node_Event_0+0x18  ;; gProg
   \   0000006E   ........           BL       SetTask
   8600                        TransQuality.SlowMensur[CurrentNode-1]=0;
   \   00000072   2148               LDR      R0,??Node_Event_0+0x24  ;; TransQuality
   \   00000074   0119               ADDS     R1,R0,R4
   \   00000076   3200               MOVS     R2,R6
   \   00000078   8A70               STRB     R2,[R1, #+2]
   8601                        TransQuality.QuickMensur[CurrentNode-1]=0;
   \   0000007A   2531               ADDS     R1,R1,#+37
   \   0000007C   0A70               STRB     R2,[R1, #+0]
   8602                        TransQuality.Mensur[CurrentNode-1]=0;
   \   0000007E   0099               LDR      R1,[SP, #+0]
   \   00000080   4018               ADDS     R0,R0,R1
   \   00000082   8664               STR      R6,[R0, #+72]
   8603                        MenuLevel=(MenuLevel/10);
   \   00000084   B86C               LDR      R0,[R7, #+72]
   \   00000086   0A21               MOVS     R1,#+10
   \   00000088   ........           BL       __aeabi_idivmod
   \   0000008C   B864               STR      R0,[R7, #+72]
   \   0000008E   0FE0               B        ??Node_Event_2
   8604                      }
   8605                      else if (ans==3) //je¿eli zmien opis
   \                     ??Node_Event_3:
   \   00000090   032D               CMP      R5,#+3
   \   00000092   184F               LDR      R7,??Node_Event_0+0x20  ;; TextToChangeLength
   \   00000094   B86C               LDR      R0,[R7, #+72]
   \   00000096   07D1               BNE      ??Node_Event_4
   8606                      {
   8607                        MenuLevel=(MenuLevel/10)*10+2;
   \   00000098   0A21               MOVS     R1,#+10
   \   0000009A   ........           BL       __aeabi_idivmod
   \   0000009E   0A21               MOVS     R1,#+10
   \   000000A0   4843               MULS     R0,R1,R0
   \   000000A2   801C               ADDS     R0,R0,#+2
   \   000000A4   B864               STR      R0,[R7, #+72]
   \   000000A6   03E0               B        ??Node_Event_2
   8608                      }
   8609                      else{
   8610                        MenuLevel=(MenuLevel*10+ans);
   \                     ??Node_Event_4:
   \   000000A8   0A21               MOVS     R1,#+10
   \   000000AA   4843               MULS     R0,R1,R0
   \   000000AC   4019               ADDS     R0,R0,R5
   \   000000AE   B864               STR      R0,[R7, #+72]
   8611                      }
   8612                    }
   8613                     if (ans<0) {
   \                     ??Node_Event_2:
   \   000000B0   002D               CMP      R5,#+0
   \   000000B2   09D5               BPL      ??Node_Event_5
   8614                      MenuLevel=(MenuLevel/10);
   \   000000B4   0F4F               LDR      R7,??Node_Event_0+0x20  ;; TextToChangeLength
   \   000000B6   B86C               LDR      R0,[R7, #+72]
   \   000000B8   0A21               MOVS     R1,#+10
   \   000000BA   ........           BL       __aeabi_idivmod
   \   000000BE   B864               STR      R0,[R7, #+72]
   8615                      NeuronNrChange=0;
   \   000000C0   0026               MOVS     R6,#+0
   \   000000C2   3000               MOVS     R0,R6
   \   000000C4   F870               STRB     R0,[R7, #+3]
   8616                      NeuronIdChange=0;
   \   000000C6   FE65               STR      R6,[R7, #+92]
   8617                    }
   8618                    MenuPaint();
   \                     ??Node_Event_5:
   \   000000C8   ........           BL       MenuPaint
   8619                    } 
   8620                }//_______________________________________________________________________
   \                     ??Node_Event_1:
   \   000000CC   F8BC               POP      {R3-R7}
   \   000000CE   01BC               POP      {R0}
   \   000000D0   0047               BX       R0               ;; return
   \   000000D2   C046               Nop      
   \                     ??Node_Event_0:
   \   000000D4   ........           DC32     Y_down
   \   000000D8   ........           DC32     X_down
   \   000000DC   ........           DC32     Y_up
   \   000000E0   ........           DC32     X_up
   \   000000E4   ........           DC32     RF_NodeTest
   \   000000E8   94C00000           DC32     0xc094
   \   000000EC   ........           DC32     gProg
   \   000000F0   ........           DC32     NeuronsList
   \   000000F4   ........           DC32     TextToChangeLength
   \   000000F8   ........           DC32     TransQuality
   8621          
   8622                 
   8623          
   8624          
   8625          
   8626                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8627                void NodeTestTrans_Paint(char CurrentNode)
   8628                {  
   \                     NodeTestTrans_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   8629                     List_Paint(Speech[g_leng].TestTrans,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   9624               MOVS     R4,#+150
   \   00000006   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000008   564D               LDR      R5,??NodeTestTrans_Paint_0  ;; g_leng
   \   0000000A   574E               LDR      R6,??NodeTestTrans_Paint_0+0x4  ;; Speech
   \   0000000C   0021               MOVS     R1,#+0
   \   0000000E   0800               MOVS     R0,R1
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   55A0               ADR      R0,??NodeTestTrans_Paint_0+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0321               MOVS     R1,#+3
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0300               MOVS     R3,R0
   \   00000022   6C22               MOVS     R2,#+108
   \   00000024   0121               MOVS     R1,#+1
   \   00000026   5248               LDR      R0,??NodeTestTrans_Paint_0+0xC  ;; 0x87f
   \   00000028   2F68               LDR      R7,[R5, #+0]
   \   0000002A   6743               MULS     R7,R4,R7
   \   0000002C   F719               ADDS     R7,R6,R7
   \   0000002E   3818               ADDS     R0,R7,R0
   \   00000030   ........           BL       List_Paint
   \   00000034   0AB0               ADD      SP,SP,#+40
   8630                     RF_NodeTest.NodeNr=CurrentNode;
   \   00000036   4F4F               LDR      R7,??NodeTestTrans_Paint_0+0x10  ;; RF_NodeTest
   \   00000038   6846               MOV      R0,SP
   \   0000003A   007C               LDRB     R0,[R0, #+16]
   \   0000003C   3870               STRB     R0,[R7, #+0]
   8631                     
   8632                      char txt[10];
   8633                     
   8634                    //H_line(0,110,63,1); // (char X, int Y, char lenght, char typ)
   8635                     Label(Speech[g_leng].Dane_wyslane,0,2,100,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   0020               MOVS     R0,#+0
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   7F21               MOVS     R1,#+127
   \   00000046   0120               MOVS     R0,#+1
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   0821               MOVS     R1,#+8
   \   0000004C   0F20               MOVS     R0,#+15
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   6423               MOVS     R3,#+100
   \   00000052   0222               MOVS     R2,#+2
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   8C46               MOV      R12,R1
   \   00000058   4749               LDR      R1,??NodeTestTrans_Paint_0+0x14  ;; 0x88e
   \   0000005A   2868               LDR      R0,[R5, #+0]
   \   0000005C   6043               MULS     R0,R4,R0
   \   0000005E   3018               ADDS     R0,R6,R0
   \   00000060   4018               ADDS     R0,R0,R1
   \   00000062   6146               MOV      R1,R12
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
   8636                     H_line(0,80,63,1); // (char X, int Y, char lenght, char typ)
   \   0000006A   0123               MOVS     R3,#+1
   \   0000006C   3F22               MOVS     R2,#+63
   \   0000006E   5021               MOVS     R1,#+80
   \   00000070   0020               MOVS     R0,#+0
   \   00000072   ........           BL       H_line
   8637                     Label(Speech[g_leng].Dane_odebrane,0,2,70,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   7F21               MOVS     R1,#+127
   \   0000007E   0120               MOVS     R0,#+1
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   0821               MOVS     R1,#+8
   \   00000084   0F20               MOVS     R0,#+15
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   4623               MOVS     R3,#+70
   \   0000008A   0222               MOVS     R2,#+2
   \   0000008C   0021               MOVS     R1,#+0
   \   0000008E   8C46               MOV      R12,R1
   \   00000090   3A49               LDR      R1,??NodeTestTrans_Paint_0+0x18  ;; 0x89d
   \   00000092   2868               LDR      R0,[R5, #+0]
   \   00000094   6043               MULS     R0,R4,R0
   \   00000096   3018               ADDS     R0,R6,R0
   \   00000098   4018               ADDS     R0,R0,R1
   \   0000009A   6146               MOV      R1,R12
   \   0000009C   ........           BL       Label
   \   000000A0   06B0               ADD      SP,SP,#+24
   8638                     H_line(0,50,63,1); // (char X, int Y, char lenght, char typ)
   \   000000A2   0123               MOVS     R3,#+1
   \   000000A4   3F22               MOVS     R2,#+63
   \   000000A6   3221               MOVS     R1,#+50
   \   000000A8   0020               MOVS     R0,#+0
   \   000000AA   ........           BL       H_line
   8639                     Label(Speech[g_leng].Dane_utracone,0,2,40,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000AE   82B0               SUB      SP,SP,#+8
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   7F21               MOVS     R1,#+127
   \   000000B6   0120               MOVS     R0,#+1
   \   000000B8   03B4               PUSH     {R0,R1}
   \   000000BA   0821               MOVS     R1,#+8
   \   000000BC   0F20               MOVS     R0,#+15
   \   000000BE   03B4               PUSH     {R0,R1}
   \   000000C0   2823               MOVS     R3,#+40
   \   000000C2   0222               MOVS     R2,#+2
   \   000000C4   0021               MOVS     R1,#+0
   \   000000C6   2E48               LDR      R0,??NodeTestTrans_Paint_0+0x1C  ;; 0x8ac
   \   000000C8   2D68               LDR      R5,[R5, #+0]
   \   000000CA   6543               MULS     R5,R4,R5
   \   000000CC   7419               ADDS     R4,R6,R5
   \   000000CE   2018               ADDS     R0,R4,R0
   \   000000D0   ........           BL       Label
   \   000000D4   06B0               ADD      SP,SP,#+24
   8640          
   8641                     
   8642                     sprintf(txt, "%d", RF_NodeTest.Sent);
                            ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000000D6   2BA4               ADR      R4,??NodeTestTrans_Paint_0+0x20  ;; 0x25, 0x64, 0x00, 0x00
   \   000000D8   7A68               LDR      R2,[R7, #+4]
   \   000000DA   2100               MOVS     R1,R4
   \   000000DC   6846               MOV      R0,SP
   \   000000DE   ........           BL       sprintf
   8643                     Label(txt,1,55,90,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   0020               MOVS     R0,#+0
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   7F21               MOVS     R1,#+127
   \   000000EA   0120               MOVS     R0,#+1
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   2821               MOVS     R1,#+40
   \   000000F0   0A20               MOVS     R0,#+10
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   5A23               MOVS     R3,#+90
   \   000000F6   3722               MOVS     R2,#+55
   \   000000F8   0121               MOVS     R1,#+1
   \   000000FA   06A8               ADD      R0,SP,#+24
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   8644                            
   8645                     sprintf(txt, "%d", RF_NodeTest.Recived);
   \   00000102   BA68               LDR      R2,[R7, #+8]
   \   00000104   2100               MOVS     R1,R4
   \   00000106   6846               MOV      R0,SP
   \   00000108   ........           BL       sprintf
   8646                     Label(txt,1,55,60,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   0020               MOVS     R0,#+0
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   7F21               MOVS     R1,#+127
   \   00000114   0120               MOVS     R0,#+1
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   2821               MOVS     R1,#+40
   \   0000011A   0A20               MOVS     R0,#+10
   \   0000011C   03B4               PUSH     {R0,R1}
   \   0000011E   3C23               MOVS     R3,#+60
   \   00000120   3722               MOVS     R2,#+55
   \   00000122   0121               MOVS     R1,#+1
   \   00000124   06A8               ADD      R0,SP,#+24
   \   00000126   ........           BL       Label
   \   0000012A   06B0               ADD      SP,SP,#+24
   8647                            
   8648                     sprintf(txt, "%d", RF_NodeTest.Sent-RF_NodeTest.Recived);
   \   0000012C   7868               LDR      R0,[R7, #+4]
   \   0000012E   B968               LDR      R1,[R7, #+8]
   \   00000130   421A               SUBS     R2,R0,R1
   \   00000132   2100               MOVS     R1,R4
   \   00000134   6846               MOV      R0,SP
   \   00000136   ........           BL       sprintf
   8649                     Label(txt,1,55,30,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000013A   82B0               SUB      SP,SP,#+8
   \   0000013C   0020               MOVS     R0,#+0
   \   0000013E   0090               STR      R0,[SP, #+0]
   \   00000140   7F21               MOVS     R1,#+127
   \   00000142   0120               MOVS     R0,#+1
   \   00000144   03B4               PUSH     {R0,R1}
   \   00000146   2821               MOVS     R1,#+40
   \   00000148   0A20               MOVS     R0,#+10
   \   0000014A   03B4               PUSH     {R0,R1}
   \   0000014C   1E23               MOVS     R3,#+30
   \   0000014E   3722               MOVS     R2,#+55
   \   00000150   0121               MOVS     R1,#+1
   \   00000152   06A8               ADD      R0,SP,#+24
   \   00000154   ........           BL       Label
   \   00000158   06B0               ADD      SP,SP,#+24
   8650                    
   8651                     
   8652                }//_______________________________________________________________________ 
   \   0000015A   05B0               ADD      SP,SP,#+20
   \   0000015C   F0BC               POP      {R4-R7}
   \   0000015E   01BC               POP      {R0}
   \   00000160   0047               BX       R0               ;; return
   \   00000162   C046               Nop      
   \                     ??NodeTestTrans_Paint_0:
   \   00000164   ........           DC32     g_leng
   \   00000168   ........           DC32     Speech
   \   0000016C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000170   7F080000           DC32     0x87f
   \   00000174   ........           DC32     RF_NodeTest
   \   00000178   8E080000           DC32     0x88e
   \   0000017C   9D080000           DC32     0x89d
   \   00000180   AC080000           DC32     0x8ac
   \   00000184   25640000           DC8      0x25, 0x64, 0x00, 0x00
   8653          
   8654                                  
   8655          
   8656                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8657                void NodeTestTrans_Event(char CurrentNode)
   8658                {
   \                     NodeTestTrans_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8659                  int ans;
   8660                 
   8661                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   1148               LDR      R0,??NodeTestTrans_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   1148               LDR      R0,??NodeTestTrans_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   1148               LDR      R0,??NodeTestTrans_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   1148               LDR      R0,??NodeTestTrans_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   8662            
   8663                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   11D0               BEQ      ??NodeTestTrans_Event_1
   8664                    {
   8665                    if (ans<0) {
   \   0000002A   0ED5               BPL      ??NodeTestTrans_Event_2
   8666                      MenuLevel=(MenuLevel/100);
   \   0000002C   0D4C               LDR      R4,??NodeTestTrans_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   A06C               LDR      R0,[R4, #+72]
   \   00000030   6421               MOVS     R1,#+100
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   A064               STR      R0,[R4, #+72]
   8667                     NeuronNrChange=0;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0100               MOVS     R1,R0
   \   0000003C   E170               STRB     R1,[R4, #+3]
   8668                     NeuronIdChange=0;
   \   0000003E   E065               STR      R0,[R4, #+92]
   8669                     RF_NodeTest.NodeNr=0;
   \   00000040   0949               LDR      R1,??NodeTestTrans_Event_0+0x14  ;; RF_NodeTest
   \   00000042   0200               MOVS     R2,R0
   \   00000044   0A70               STRB     R2,[R1, #+0]
   8670                     RF_NodeTest.Sent=0;
   \   00000046   4860               STR      R0,[R1, #+4]
   8671                     RF_NodeTest.Recived=0;
   \   00000048   8860               STR      R0,[R1, #+8]
   8672                    }
   8673                    MenuPaint();                ;
   \                     ??NodeTestTrans_Event_2:
   \   0000004A   ........           BL       MenuPaint
   8674                    } 
   8675                }//_______________________________________________________________________
   \                     ??NodeTestTrans_Event_1:
   \   0000004E   10BC               POP      {R4}
   \   00000050   01BC               POP      {R0}
   \   00000052   0047               BX       R0               ;; return
   \                     ??NodeTestTrans_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     TextToChangeLength
   \   00000068   ........           DC32     RF_NodeTest
   8676          
   8677          
   8678          
   8679          
   8680          
   8681                //*------------------------------------------------³-----------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8682                void NodeTestTrans_Refresh(char CurrentNode)
   8683                {  
   \                     NodeTestTrans_Refresh:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   8684                     char txt[10];
   8685                     char il;
   8686                     static char Dziel8;
   8687                     if (Dziel8<8) {Dziel8++;}else
   \   00000002   2748               LDR      R0,??NodeTestTrans_Refresh_0  ;; ??Dziel8
   \   00000004   0178               LDRB     R1,[R0, #+0]
   \   00000006   0829               CMP      R1,#+8
   \   00000008   02D2               BCS      ??NodeTestTrans_Refresh_1
   \   0000000A   491C               ADDS     R1,R1,#+1
   \   0000000C   0170               STRB     R1,[R0, #+0]
   \   0000000E   44E0               B        ??NodeTestTrans_Refresh_2
   8688                     {
   8689                       Dziel8=0;
   \                     ??NodeTestTrans_Refresh_1:
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0170               STRB     R1,[R0, #+0]
   8690                            sprintf(txt, "%d", RF_NodeTest.Sent);
                                   ^
Warning[Pe223]: function "sprintf" declared implicitly

             char il;
                  ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 13.03.2012\Framework\ScreenMENU2.c",8685  Warning[Pe177]: 
          variable "il" was declared but never referenced
   \   00000014   23A4               ADR      R4,??NodeTestTrans_Refresh_0+0x4  ;; 0x25, 0x64, 0x00, 0x00
   \   00000016   244D               LDR      R5,??NodeTestTrans_Refresh_0+0x8  ;; RF_NodeTest
   \   00000018   6A68               LDR      R2,[R5, #+4]
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   6846               MOV      R0,SP
   \   0000001E   ........           BL       sprintf
   8691                            Label(txt,1,55,90,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   2821               MOVS     R1,#+40
   \   00000030   0A20               MOVS     R0,#+10
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   5A23               MOVS     R3,#+90
   \   00000036   3722               MOVS     R2,#+55
   \   00000038   0121               MOVS     R1,#+1
   \   0000003A   06A8               ADD      R0,SP,#+24
   \   0000003C   ........           BL       Label
   \   00000040   06B0               ADD      SP,SP,#+24
   8692                            
   8693                            sprintf(txt, "%d", RF_NodeTest.Recived);
   \   00000042   AA68               LDR      R2,[R5, #+8]
   \   00000044   2100               MOVS     R1,R4
   \   00000046   6846               MOV      R0,SP
   \   00000048   ........           BL       sprintf
   8694                            Label(txt,1,55,60,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   7F21               MOVS     R1,#+127
   \   00000054   0120               MOVS     R0,#+1
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   2821               MOVS     R1,#+40
   \   0000005A   0A20               MOVS     R0,#+10
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   3C23               MOVS     R3,#+60
   \   00000060   3722               MOVS     R2,#+55
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   06A8               ADD      R0,SP,#+24
   \   00000066   ........           BL       Label
   \   0000006A   06B0               ADD      SP,SP,#+24
   8695                            
   8696                            sprintf(txt, "%d", RF_NodeTest.Sent-RF_NodeTest.Recived);
   \   0000006C   6868               LDR      R0,[R5, #+4]
   \   0000006E   A968               LDR      R1,[R5, #+8]
   \   00000070   421A               SUBS     R2,R0,R1
   \   00000072   2100               MOVS     R1,R4
   \   00000074   6846               MOV      R0,SP
   \   00000076   ........           BL       sprintf
   8697                            Label(txt,1,55,30,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   7F21               MOVS     R1,#+127
   \   00000082   0120               MOVS     R0,#+1
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   2821               MOVS     R1,#+40
   \   00000088   0A20               MOVS     R0,#+10
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   1E23               MOVS     R3,#+30
   \   0000008E   3722               MOVS     R2,#+55
   \   00000090   0121               MOVS     R1,#+1
   \   00000092   06A8               ADD      R0,SP,#+24
   \   00000094   ........           BL       Label
   \   00000098   06B0               ADD      SP,SP,#+24
   8698                     }
   8699                }//_______________________________________________________________________ 
   \                     ??NodeTestTrans_Refresh_2:
   \   0000009A   3EBC               POP      {R1-R5}
   \   0000009C   01BC               POP      {R0}
   \   0000009E   0047               BX       R0               ;; return
   \                     ??NodeTestTrans_Refresh_0:
   \   000000A0   ........           DC32     ??Dziel8
   \   000000A4   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000000A8   ........           DC32     RF_NodeTest

   \                                 In section .bss, align 1
   \                     ??Dziel8:
   \   00000000                      DS8 1
   8700          
   8701          
   8702          
   8703          
   8704          
   8705                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8706                void NodeStanIO_Paint(char CurrentNode)
   8707                {  
   \                     NodeStanIO_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   \   00000002   0400               MOVS     R4,R0
   8708                      char txt[8];
   8709                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6946               MOV      R1,SP
   \   00000006   4E20               MOVS     R0,#+78
   \   00000008   0870               STRB     R0,[R1, #+0]
   \   0000000A   6F20               MOVS     R0,#+111
   \   0000000C   4870               STRB     R0,[R1, #+1]
   \   0000000E   6420               MOVS     R0,#+100
   \   00000010   8870               STRB     R0,[R1, #+2]
   \   00000012   6520               MOVS     R0,#+101
   \   00000014   C870               STRB     R0,[R1, #+3]
   \   00000016   2020               MOVS     R0,#+32
   \   00000018   0871               STRB     R0,[R1, #+4]
   8710                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   0000001A   0222               MOVS     R2,#+2
   \   0000001C   491D               ADDS     R1,R1,#+5
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       CharToStr
   8711                  
   8712                     List_Paint(txt,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   0800               MOVS     R0,R1
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   22A0               ADR      R0,??NodeStanIO_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0321               MOVS     R1,#+3
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0300               MOVS     R3,R0
   \   0000003A   6C22               MOVS     R2,#+108
   \   0000003C   0121               MOVS     R1,#+1
   \   0000003E   0AA8               ADD      R0,SP,#+40
   \   00000040   ........           BL       List_Paint
   \   00000044   0AB0               ADD      SP,SP,#+40
   8713          
   8714                     CleanCanvasArea(14,6,2,95,1);
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0120               MOVS     R0,#+1
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   5F23               MOVS     R3,#+95
   \   0000004E   0222               MOVS     R2,#+2
   \   00000050   0621               MOVS     R1,#+6
   \   00000052   0E20               MOVS     R0,#+14
   \   00000054   ........           BL       CleanCanvasArea
   \   00000058   02B0               ADD      SP,SP,#+8
   8715                     CleanCanvasArea(14+32,6,2,95,1);
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0120               MOVS     R0,#+1
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   5F23               MOVS     R3,#+95
   \   00000062   0222               MOVS     R2,#+2
   \   00000064   0621               MOVS     R1,#+6
   \   00000066   2E20               MOVS     R0,#+46
   \   00000068   ........           BL       CleanCanvasArea
   \   0000006C   02B0               ADD      SP,SP,#+8
   8716          
   8717                     Label("DI",2,2,99,2,25,1,127,1);
   \   0000006E   82B0               SUB      SP,SP,#+8
   \   00000070   0120               MOVS     R0,#+1
   \   00000072   0090               STR      R0,[SP, #+0]
   \   00000074   7F21               MOVS     R1,#+127
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   1921               MOVS     R1,#+25
   \   0000007A   0220               MOVS     R0,#+2
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   6323               MOVS     R3,#+99
   \   00000080   0200               MOVS     R2,R0
   \   00000082   0100               MOVS     R1,R0
   \   00000084   0DA0               ADR      R0,??NodeStanIO_Paint_0+0x4  ;; 0x44, 0x49, 0x00, 0x00
   \   00000086   ........           BL       Label
   \   0000008A   06B0               ADD      SP,SP,#+24
   8718                     Label("DO",2,34,99,2,25,1,127,1); 
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   0120               MOVS     R0,#+1
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   7F21               MOVS     R1,#+127
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   1921               MOVS     R1,#+25
   \   00000098   0220               MOVS     R0,#+2
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   6323               MOVS     R3,#+99
   \   0000009E   2222               MOVS     R2,#+34
   \   000000A0   0100               MOVS     R1,R0
   \   000000A2   07A0               ADR      R0,??NodeStanIO_Paint_0+0x8  ;; 0x44, 0x4F, 0x00, 0x00
   \   000000A4   ........           BL       Label
   \   000000A8   06B0               ADD      SP,SP,#+24
   8719                     
   8720                     NodeStanIO_Refresh(CurrentNode);
   \   000000AA   2000               MOVS     R0,R4
   \   000000AC   ........           BL       NodeStanIO_Refresh
   8721                }//_______________________________________________________________________ 
   \   000000B0   1CBC               POP      {R2-R4}
   \   000000B2   01BC               POP      {R0}
   \   000000B4   0047               BX       R0               ;; return
   \   000000B6   C046               Nop      
   \                     ??NodeStanIO_Paint_0:
   \   000000B8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000BC   44490000           DC8      0x44, 0x49, 0x00, 0x00
   \   000000C0   444F0000           DC8      0x44, 0x4F, 0x00, 0x00
   8722          
   8723          
   8724          
   8725          
   8726                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8727                void NodeStanIO_Event(char CurrentNode)
   8728                {
   \                     NodeStanIO_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8729                  int ans;
   8730                 
   8731                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F48               LDR      R0,??NodeStanIO_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   0F48               LDR      R0,??NodeStanIO_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   0F48               LDR      R0,??NodeStanIO_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   0F48               LDR      R0,??NodeStanIO_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   8732            
   8733                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   0CD0               BEQ      ??NodeStanIO_Event_1
   8734                    {
   8735                    if (ans<0) {
   \   0000002A   09D5               BPL      ??NodeStanIO_Event_2
   8736                      MenuLevel=(MenuLevel/100);
   \   0000002C   0B4C               LDR      R4,??NodeStanIO_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   A06C               LDR      R0,[R4, #+72]
   \   00000030   6421               MOVS     R1,#+100
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   A064               STR      R0,[R4, #+72]
   8737                     NeuronNrChange=0;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0100               MOVS     R1,R0
   \   0000003C   E170               STRB     R1,[R4, #+3]
   8738                     NeuronIdChange=0;
   \   0000003E   E065               STR      R0,[R4, #+92]
   8739                    }
   8740                    MenuPaint();
   \                     ??NodeStanIO_Event_2:
   \   00000040   ........           BL       MenuPaint
   8741                    } 
   8742                }//_______________________________________________________________________
   \                     ??NodeStanIO_Event_1:
   \   00000044   10BC               POP      {R4}
   \   00000046   01BC               POP      {R0}
   \   00000048   0047               BX       R0               ;; return
   \   0000004A   C046               Nop      
   \                     ??NodeStanIO_Event_0:
   \   0000004C   ........           DC32     Y_down
   \   00000050   ........           DC32     X_down
   \   00000054   ........           DC32     Y_up
   \   00000058   ........           DC32     X_up
   \   0000005C   ........           DC32     TextToChangeLength
   8743          
   8744          
   8745          
   8746          
   8747          
   8748                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8749                void NodeStanIO_Refresh(char CurrentNode)
   8750                {  
   \                     NodeStanIO_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   8848               LDR      R0,??NodeStanIO_Refresh_0  ;; ??Dziel5
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0170               STRB     R1,[R0, #+0]
   8751                     char Txt[6];
   8752                  
   8753                     static char Dziel5;
   8754                     Dziel5=6;
   8755                     if (Dziel5<5) {Dziel5++;}else
   8756                     {
   8757                       Dziel5=0;
   8758          
   8759                            char NP=0;
   \   0000000A   0C00               MOVS     R4,R1
   8760                            for (char j=0; j<2; j++) 
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   0090               STR      R0,[SP, #+0]
   \   00000010   04E0               B        ??NodeStanIO_Refresh_1
   \                     ??NodeStanIO_Refresh_2:
   \   00000012   0098               LDR      R0,[SP, #+0]
   \   00000014   401C               ADDS     R0,R0,#+1
   \   00000016   0006               LSLS     R0,R0,#+24
   \   00000018   000E               LSRS     R0,R0,#+24
   \   0000001A   0090               STR      R0,[SP, #+0]
   \                     ??NodeStanIO_Refresh_1:
   \   0000001C   0098               LDR      R0,[SP, #+0]
   \   0000001E   0006               LSLS     R0,R0,#+24
   \   00000020   000E               LSRS     R0,R0,#+24
   \   00000022   0228               CMP      R0,#+2
   \   00000024   76D2               BCS      ??NodeStanIO_Refresh_3
   8761                            for (char i=0; i<8; i++)
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   35E0               B        ??NodeStanIO_Refresh_4
   8762                            {
   8763                              if  ((MainStage.StageI[CurrentNode].Port>>NP)&0x1)
   8764                              {
   8765                                CopyToCanvasPoint((char*)&Frame[0][0],2+15*j,87-i*12,11,11);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght)
   8766                                CharToStr (NP, Txt, 2);
   8767                                Label(Txt,2,3+15*j,88-i*12,2,8,1,127,1);  
   8768                              } else{
   8769                                CopyToCanvasPoint((char*)&Frame[0][0],2+15*j,87-i*12,11,11); 
   \                     ??NodeStanIO_Refresh_5:
   \   0000002A   3606               LSLS     R6,R6,#+24
   \   0000002C   360E               LSRS     R6,R6,#+24
   \   0000002E   0F20               MOVS     R0,#+15
   \   00000030   4643               MULS     R6,R0,R6
   \   00000032   2F00               MOVS     R7,R5
   \   00000034   0C20               MOVS     R0,#+12
   \   00000036   4743               MULS     R7,R0,R7
   \   00000038   82B0               SUB      SP,SP,#+8
   \   0000003A   0B20               MOVS     R0,#+11
   \   0000003C   0090               STR      R0,[SP, #+0]
   \   0000003E   0300               MOVS     R3,R0
   \   00000040   5720               MOVS     R0,#+87
   \   00000042   C21B               SUBS     R2,R0,R7
   \   00000044   1206               LSLS     R2,R2,#+24
   \   00000046   120E               LSRS     R2,R2,#+24
   \   00000048   3100               MOVS     R1,R6
   \   0000004A   891C               ADDS     R1,R1,#+2
   \   0000004C   0906               LSLS     R1,R1,#+24
   \   0000004E   090E               LSRS     R1,R1,#+24
   \   00000050   7648               LDR      R0,??NodeStanIO_Refresh_0+0x4  ;; Frame
   \   00000052   ........           BL       CopyToCanvasPoint
   \   00000056   02B0               ADD      SP,SP,#+8
   8770                                CharToStr (NP, Txt, 2);
   \   00000058   0222               MOVS     R2,#+2
   \   0000005A   01A9               ADD      R1,SP,#+4
   \   0000005C   2000               MOVS     R0,R4
   \   0000005E   ........           BL       CharToStr
   8771                                Label(Txt,2,3+15*j,88-i*12,2,8,1,127,0);  
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   7F21               MOVS     R1,#+127
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   0821               MOVS     R1,#+8
   \   00000070   0220               MOVS     R0,#+2
   \   00000072   03B4               PUSH     {R0,R1}
   \   00000074   5820               MOVS     R0,#+88
   \   00000076   C31B               SUBS     R3,R0,R7
   \   00000078   F61C               ADDS     R6,R6,#+3
   \   0000007A   3200               MOVS     R2,R6
   \   0000007C   1206               LSLS     R2,R2,#+24
   \   0000007E   120E               LSRS     R2,R2,#+24
   \   00000080   0221               MOVS     R1,#+2
   \   00000082   07A8               ADD      R0,SP,#+28
   \   00000084   ........           BL       Label
   \   00000088   06B0               ADD      SP,SP,#+24
   8772                              }
   8773                              NP++;
   \                     ??NodeStanIO_Refresh_6:
   \   0000008A   641C               ADDS     R4,R4,#+1
   \   0000008C   2406               LSLS     R4,R4,#+24
   \   0000008E   240E               LSRS     R4,R4,#+24
   \   00000090   6D1C               ADDS     R5,R5,#+1
   \   00000092   2D06               LSLS     R5,R5,#+24
   \   00000094   2D0E               LSRS     R5,R5,#+24
   \                     ??NodeStanIO_Refresh_4:
   \   00000096   2800               MOVS     R0,R5
   \   00000098   0828               CMP      R0,#+8
   \   0000009A   BAD2               BCS      ??NodeStanIO_Refresh_2
   \   0000009C   6846               MOV      R0,SP
   \   0000009E   007C               LDRB     R0,[R0, #+16]
   \   000000A0   1421               MOVS     R1,#+20
   \   000000A2   4843               MULS     R0,R1,R0
   \   000000A4   6249               LDR      R1,??NodeStanIO_Refresh_0+0x8  ;; MainStage
   \   000000A6   0818               ADDS     R0,R1,R0
   \   000000A8   A030               ADDS     R0,R0,#+160
   \   000000AA   0088               LDRH     R0,[R0, #+0]
   \   000000AC   2041               ASRS     R0,R0,R4
   \   000000AE   C007               LSLS     R0,R0,#+31
   \   000000B0   009E               LDR      R6,[SP, #+0]
   \   000000B2   BAD5               BPL      ??NodeStanIO_Refresh_5
   \   000000B4   3606               LSLS     R6,R6,#+24
   \   000000B6   360E               LSRS     R6,R6,#+24
   \   000000B8   0F20               MOVS     R0,#+15
   \   000000BA   4643               MULS     R6,R0,R6
   \   000000BC   2F00               MOVS     R7,R5
   \   000000BE   0C20               MOVS     R0,#+12
   \   000000C0   4743               MULS     R7,R0,R7
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0B20               MOVS     R0,#+11
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   0300               MOVS     R3,R0
   \   000000CA   5720               MOVS     R0,#+87
   \   000000CC   C21B               SUBS     R2,R0,R7
   \   000000CE   1206               LSLS     R2,R2,#+24
   \   000000D0   120E               LSRS     R2,R2,#+24
   \   000000D2   3100               MOVS     R1,R6
   \   000000D4   891C               ADDS     R1,R1,#+2
   \   000000D6   0906               LSLS     R1,R1,#+24
   \   000000D8   090E               LSRS     R1,R1,#+24
   \   000000DA   5448               LDR      R0,??NodeStanIO_Refresh_0+0x4  ;; Frame
   \   000000DC   ........           BL       CopyToCanvasPoint
   \   000000E0   02B0               ADD      SP,SP,#+8
   \   000000E2   0222               MOVS     R2,#+2
   \   000000E4   01A9               ADD      R1,SP,#+4
   \   000000E6   2000               MOVS     R0,R4
   \   000000E8   ........           BL       CharToStr
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   0120               MOVS     R0,#+1
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   7F21               MOVS     R1,#+127
   \   000000F4   03B4               PUSH     {R0,R1}
   \   000000F6   0821               MOVS     R1,#+8
   \   000000F8   0220               MOVS     R0,#+2
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   5820               MOVS     R0,#+88
   \   000000FE   C31B               SUBS     R3,R0,R7
   \   00000100   F61C               ADDS     R6,R6,#+3
   \   00000102   3200               MOVS     R2,R6
   \   00000104   1206               LSLS     R2,R2,#+24
   \   00000106   120E               LSRS     R2,R2,#+24
   \   00000108   0221               MOVS     R1,#+2
   \   0000010A   07A8               ADD      R0,SP,#+28
   \   0000010C   ........           BL       Label
   \   00000110   06B0               ADD      SP,SP,#+24
   \   00000112   BAE7               B        ??NodeStanIO_Refresh_6
   8774                            }
   8775                            
   8776                            NP=0;
   \                     ??NodeStanIO_Refresh_3:
   \   00000114   0024               MOVS     R4,#+0
   8777                            for (char j=0; j<2; j++) 
   \   00000116   2000               MOVS     R0,R4
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   04E0               B        ??NodeStanIO_Refresh_7
   \                     ??NodeStanIO_Refresh_8:
   \   0000011C   0098               LDR      R0,[SP, #+0]
   \   0000011E   401C               ADDS     R0,R0,#+1
   \   00000120   0006               LSLS     R0,R0,#+24
   \   00000122   000E               LSRS     R0,R0,#+24
   \   00000124   0090               STR      R0,[SP, #+0]
   \                     ??NodeStanIO_Refresh_7:
   \   00000126   0098               LDR      R0,[SP, #+0]
   \   00000128   0006               LSLS     R0,R0,#+24
   \   0000012A   000E               LSRS     R0,R0,#+24
   \   0000012C   0228               CMP      R0,#+2
   \   0000012E   77D2               BCS      ??NodeStanIO_Refresh_9
   8778                            for (char i=0; i<8; i++)
   \   00000130   0025               MOVS     R5,#+0
   \   00000132   35E0               B        ??NodeStanIO_Refresh_10
   8779                            {  
   8780                              if  ((MainStage.StageQ[CurrentNode].Port>>NP)&0x1)
   8781                              {
   8782                                CopyToCanvasPoint((char*)&Frame[0][0],34+15*j,87-i*12,11,11);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght)
   8783                                CharToStr (NP, Txt, 2);
   8784                                Label(Txt,2,34+1+15*j,88-i*12,2,8,1,127,1);  
   8785                              } else{
   8786                                CopyToCanvasPoint((char*)&Frame[0][0],34+15*j,87-i*12,11,11); 
   \                     ??NodeStanIO_Refresh_11:
   \   00000134   3606               LSLS     R6,R6,#+24
   \   00000136   360E               LSRS     R6,R6,#+24
   \   00000138   0F20               MOVS     R0,#+15
   \   0000013A   4643               MULS     R6,R0,R6
   \   0000013C   2F00               MOVS     R7,R5
   \   0000013E   0C20               MOVS     R0,#+12
   \   00000140   4743               MULS     R7,R0,R7
   \   00000142   82B0               SUB      SP,SP,#+8
   \   00000144   0B20               MOVS     R0,#+11
   \   00000146   0090               STR      R0,[SP, #+0]
   \   00000148   0300               MOVS     R3,R0
   \   0000014A   5720               MOVS     R0,#+87
   \   0000014C   C21B               SUBS     R2,R0,R7
   \   0000014E   1206               LSLS     R2,R2,#+24
   \   00000150   120E               LSRS     R2,R2,#+24
   \   00000152   3100               MOVS     R1,R6
   \   00000154   2231               ADDS     R1,R1,#+34
   \   00000156   0906               LSLS     R1,R1,#+24
   \   00000158   090E               LSRS     R1,R1,#+24
   \   0000015A   3448               LDR      R0,??NodeStanIO_Refresh_0+0x4  ;; Frame
   \   0000015C   ........           BL       CopyToCanvasPoint
   \   00000160   02B0               ADD      SP,SP,#+8
   8787                                CharToStr (NP, Txt, 2);
   \   00000162   0222               MOVS     R2,#+2
   \   00000164   01A9               ADD      R1,SP,#+4
   \   00000166   2000               MOVS     R0,R4
   \   00000168   ........           BL       CharToStr
   8788                                Label(Txt,2,34+1+15*j,88-i*12,2,8,1,127,0);  
   \   0000016C   82B0               SUB      SP,SP,#+8
   \   0000016E   0020               MOVS     R0,#+0
   \   00000170   0090               STR      R0,[SP, #+0]
   \   00000172   7F21               MOVS     R1,#+127
   \   00000174   0120               MOVS     R0,#+1
   \   00000176   03B4               PUSH     {R0,R1}
   \   00000178   0821               MOVS     R1,#+8
   \   0000017A   0220               MOVS     R0,#+2
   \   0000017C   03B4               PUSH     {R0,R1}
   \   0000017E   5820               MOVS     R0,#+88
   \   00000180   C31B               SUBS     R3,R0,R7
   \   00000182   2336               ADDS     R6,R6,#+35
   \   00000184   3200               MOVS     R2,R6
   \   00000186   1206               LSLS     R2,R2,#+24
   \   00000188   120E               LSRS     R2,R2,#+24
   \   0000018A   0221               MOVS     R1,#+2
   \   0000018C   07A8               ADD      R0,SP,#+28
   \   0000018E   ........           BL       Label
   \   00000192   06B0               ADD      SP,SP,#+24
   8789                              }
   8790                             NP++;
   \                     ??NodeStanIO_Refresh_12:
   \   00000194   641C               ADDS     R4,R4,#+1
   \   00000196   2406               LSLS     R4,R4,#+24
   \   00000198   240E               LSRS     R4,R4,#+24
   \   0000019A   6D1C               ADDS     R5,R5,#+1
   \   0000019C   2D06               LSLS     R5,R5,#+24
   \   0000019E   2D0E               LSRS     R5,R5,#+24
   \                     ??NodeStanIO_Refresh_10:
   \   000001A0   2800               MOVS     R0,R5
   \   000001A2   0828               CMP      R0,#+8
   \   000001A4   BAD2               BCS      ??NodeStanIO_Refresh_8
   \   000001A6   D720               MOVS     R0,#+215
   \   000001A8   8000               LSLS     R0,R0,#+2        ;; #+860
   \   000001AA   6946               MOV      R1,SP
   \   000001AC   097C               LDRB     R1,[R1, #+16]
   \   000001AE   1422               MOVS     R2,#+20
   \   000001B0   5143               MULS     R1,R2,R1
   \   000001B2   1F4A               LDR      R2,??NodeStanIO_Refresh_0+0x8  ;; MainStage
   \   000001B4   5118               ADDS     R1,R2,R1
   \   000001B6   085A               LDRH     R0,[R1, R0]
   \   000001B8   2041               ASRS     R0,R0,R4
   \   000001BA   C007               LSLS     R0,R0,#+31
   \   000001BC   009E               LDR      R6,[SP, #+0]
   \   000001BE   B9D5               BPL      ??NodeStanIO_Refresh_11
   \   000001C0   3606               LSLS     R6,R6,#+24
   \   000001C2   360E               LSRS     R6,R6,#+24
   \   000001C4   0F20               MOVS     R0,#+15
   \   000001C6   4643               MULS     R6,R0,R6
   \   000001C8   2F00               MOVS     R7,R5
   \   000001CA   0C20               MOVS     R0,#+12
   \   000001CC   4743               MULS     R7,R0,R7
   \   000001CE   82B0               SUB      SP,SP,#+8
   \   000001D0   0B20               MOVS     R0,#+11
   \   000001D2   0090               STR      R0,[SP, #+0]
   \   000001D4   0300               MOVS     R3,R0
   \   000001D6   5720               MOVS     R0,#+87
   \   000001D8   C21B               SUBS     R2,R0,R7
   \   000001DA   1206               LSLS     R2,R2,#+24
   \   000001DC   120E               LSRS     R2,R2,#+24
   \   000001DE   3100               MOVS     R1,R6
   \   000001E0   2231               ADDS     R1,R1,#+34
   \   000001E2   0906               LSLS     R1,R1,#+24
   \   000001E4   090E               LSRS     R1,R1,#+24
   \   000001E6   1148               LDR      R0,??NodeStanIO_Refresh_0+0x4  ;; Frame
   \   000001E8   ........           BL       CopyToCanvasPoint
   \   000001EC   02B0               ADD      SP,SP,#+8
   \   000001EE   0222               MOVS     R2,#+2
   \   000001F0   01A9               ADD      R1,SP,#+4
   \   000001F2   2000               MOVS     R0,R4
   \   000001F4   ........           BL       CharToStr
   \   000001F8   82B0               SUB      SP,SP,#+8
   \   000001FA   0120               MOVS     R0,#+1
   \   000001FC   0090               STR      R0,[SP, #+0]
   \   000001FE   7F21               MOVS     R1,#+127
   \   00000200   03B4               PUSH     {R0,R1}
   \   00000202   0821               MOVS     R1,#+8
   \   00000204   0220               MOVS     R0,#+2
   \   00000206   03B4               PUSH     {R0,R1}
   \   00000208   5820               MOVS     R0,#+88
   \   0000020A   C31B               SUBS     R3,R0,R7
   \   0000020C   2336               ADDS     R6,R6,#+35
   \   0000020E   3200               MOVS     R2,R6
   \   00000210   1206               LSLS     R2,R2,#+24
   \   00000212   120E               LSRS     R2,R2,#+24
   \   00000214   0221               MOVS     R1,#+2
   \   00000216   07A8               ADD      R0,SP,#+28
   \   00000218   ........           BL       Label
   \   0000021C   06B0               ADD      SP,SP,#+24
   \   0000021E   B9E7               B        ??NodeStanIO_Refresh_12
   8791                            }
   8792                  
   8793                     }
   8794                }//_______________________________________________________________________ 
   \                     ??NodeStanIO_Refresh_9:
   \   00000220   05B0               ADD      SP,SP,#+20
   \   00000222   F0BC               POP      {R4-R7}
   \   00000224   01BC               POP      {R0}
   \   00000226   0047               BX       R0               ;; return
   \                     ??NodeStanIO_Refresh_0:
   \   00000228   ........           DC32     ??Dziel5
   \   0000022C   ........           DC32     Frame
   \   00000230   ........           DC32     MainStage

   \                                 In section .bss, align 1
   \                     ??Dziel5:
   \   00000000                      DS8 1
   8795          
   8796          
   8797          
   8798                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8799                void Net_Paint(void)
   8800                {
   \                     Net_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   8801                    List_Paint(Speech[g_leng].Siec,2,15,0,0,3, Speech[g_leng].UstawWiFi,"Host" , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0F48               LDR      R0,??Net_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   9621               MOVS     R1,#+150
   \   00000008   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000000A   4843               MULS     R0,R1,R0
   \   0000000C   0D49               LDR      R1,??Net_Paint_0+0x4  ;; Speech
   \   0000000E   0C18               ADDS     R4,R1,R0
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0B49               LDR      R1,??Net_Paint_0+0x8  ;; `?<Constant "Host">`
   \   0000001C   0B48               LDR      R0,??Net_Paint_0+0xC  ;; 0x8ca
   \   0000001E   2018               ADDS     R0,R4,R0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0321               MOVS     R1,#+3
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   0300               MOVS     R3,R0
   \   0000002A   0F22               MOVS     R2,#+15
   \   0000002C   0221               MOVS     R1,#+2
   \   0000002E   0848               LDR      R0,??Net_Paint_0+0x10  ;; 0x8bb
   \   00000030   2018               ADDS     R0,R4,R0
   \   00000032   ........           BL       List_Paint
   \   00000036   0AB0               ADD      SP,SP,#+40
   8802                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000038   10BC               POP      {R4}
   \   0000003A   01BC               POP      {R0}
   \   0000003C   0047               BX       R0               ;; return
   \   0000003E   C046               Nop      
   \                     ??Net_Paint_0:
   \   00000040   ........           DC32     g_leng
   \   00000044   ........           DC32     Speech
   \   00000048   ........           DC32     `?<Constant "Host">`
   \   0000004C   CA080000           DC32     0x8ca
   \   00000050   BB080000           DC32     0x8bb
   8803          
   8804          
   8805          
   8806                 
   8807                 
   8808                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8809                void Net_Event(void)
   8810                {
   \                     Net_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8811                  int ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??Net_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??Net_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??Net_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??Net_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   8812            
   8813                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   15D0               BEQ      ??Net_Event_1
   8814                    {
   8815                    if ((ans>0) && (ans<=2)) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   07DB               BLT      ??Net_Event_2
   \   00000030   0328               CMP      R0,#+3
   \   00000032   05DA               BGE      ??Net_Event_2
   \   00000034   0E4C               LDR      R4,??Net_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A16C               LDR      R1,[R4, #+72]
   \   00000038   0A22               MOVS     R2,#+10
   \   0000003A   5143               MULS     R1,R2,R1
   \   0000003C   0918               ADDS     R1,R1,R0
   \   0000003E   A164               STR      R1,[R4, #+72]
   8816                    if (ans<0) {
   \                     ??Net_Event_2:
   \   00000040   0028               CMP      R0,#+0
   \   00000042   07D5               BPL      ??Net_Event_3
   8817                      //char  *pWiFi=(char*)&WiFiTmp;
   8818                      //char  *pFlashWiFi=(char*)&AT91C_IFLASH_MEM->Config.WiFi;
   8819                      //for (char i=0; i<sizeof(WiFiTmp); i++) pWiFi[i]=pFlashWiFi[i];
   8820                      
   8821                      MenuLevel=(MenuLevel/10);
   \   00000044   0A4C               LDR      R4,??Net_Event_0+0x10  ;; TextToChangeLength
   \   00000046   A06C               LDR      R0,[R4, #+72]
   \   00000048   0A21               MOVS     R1,#+10
   \   0000004A   ........           BL       __aeabi_idivmod
   \   0000004E   A064               STR      R0,[R4, #+72]
   8822                     CurModifSheet=0; 
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   6071               STRB     R0,[R4, #+5]
   8823                    }
   8824                    MenuPaint();
   \                     ??Net_Event_3:
   \   00000054   ........           BL       MenuPaint
   8825                    } 
   8826                }//_______________________________________________________________________
   \                     ??Net_Event_1:
   \   00000058   10BC               POP      {R4}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??Net_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
   8827          
   8828          
   8829          
   8830          
   8831          
   8832                //*------------------------      -----------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8833                void UstawSiec_Paint(void)
   8834                {
   \                     UstawSiec_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   8835                    List_Paint(Speech[g_leng].Siec,2,15,0,0,3,Speech[g_leng].Punkt_dostepu,"TCP/IP" , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0F48               LDR      R0,??UstawSiec_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   9621               MOVS     R1,#+150
   \   00000008   0901               LSLS     R1,R1,#+4        ;; #+2400
   \   0000000A   4843               MULS     R0,R1,R0
   \   0000000C   0D49               LDR      R1,??UstawSiec_Paint_0+0x4  ;; Speech
   \   0000000E   0C18               ADDS     R4,R1,R0
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0B49               LDR      R1,??UstawSiec_Paint_0+0x8  ;; `?<Constant "TCP/IP">`
   \   0000001C   0B48               LDR      R0,??UstawSiec_Paint_0+0xC  ;; 0x8d9
   \   0000001E   2018               ADDS     R0,R4,R0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0321               MOVS     R1,#+3
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   0300               MOVS     R3,R0
   \   0000002A   0F22               MOVS     R2,#+15
   \   0000002C   0221               MOVS     R1,#+2
   \   0000002E   0848               LDR      R0,??UstawSiec_Paint_0+0x10  ;; 0x8bb
   \   00000030   2018               ADDS     R0,R4,R0
   \   00000032   ........           BL       List_Paint
   \   00000036   0AB0               ADD      SP,SP,#+40
   8836                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000038   10BC               POP      {R4}
   \   0000003A   01BC               POP      {R0}
   \   0000003C   0047               BX       R0               ;; return
   \   0000003E   C046               Nop      
   \                     ??UstawSiec_Paint_0:
   \   00000040   ........           DC32     g_leng
   \   00000044   ........           DC32     Speech
   \   00000048   ........           DC32     `?<Constant "TCP/IP">`
   \   0000004C   D9080000           DC32     0x8d9
   \   00000050   BB080000           DC32     0x8bb
   8837          
   8838          
   8839          
   8840                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8841                void UstawSiec_Event(void)
   8842                {
   \                     UstawSiec_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8843                  int ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??UstawSiec_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??UstawSiec_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??UstawSiec_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??UstawSiec_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   8844            
   8845                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   15D0               BEQ      ??UstawSiec_Event_1
   8846                    {
   8847                    if ((ans>0) && (ans<=2)) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   07DB               BLT      ??UstawSiec_Event_2
   \   00000030   0328               CMP      R0,#+3
   \   00000032   05DA               BGE      ??UstawSiec_Event_2
   \   00000034   0E4C               LDR      R4,??UstawSiec_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A16C               LDR      R1,[R4, #+72]
   \   00000038   0A22               MOVS     R2,#+10
   \   0000003A   5143               MULS     R1,R2,R1
   \   0000003C   0918               ADDS     R1,R1,R0
   \   0000003E   A164               STR      R1,[R4, #+72]
   8848                    if (ans<0) {
   \                     ??UstawSiec_Event_2:
   \   00000040   0028               CMP      R0,#+0
   \   00000042   07D5               BPL      ??UstawSiec_Event_3
   8849                      MenuLevel=(MenuLevel/10);
   \   00000044   0A4C               LDR      R4,??UstawSiec_Event_0+0x10  ;; TextToChangeLength
   \   00000046   A06C               LDR      R0,[R4, #+72]
   \   00000048   0A21               MOVS     R1,#+10
   \   0000004A   ........           BL       __aeabi_idivmod
   \   0000004E   A064               STR      R0,[R4, #+72]
   8850                     CurModifSheet=0; 
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   6071               STRB     R0,[R4, #+5]
   8851                    }
   8852                    MenuPaint();
   \                     ??UstawSiec_Event_3:
   \   00000054   ........           BL       MenuPaint
   8853                    } 
   8854                }//_______________________________________________________________________
   \                     ??UstawSiec_Event_1:
   \   00000058   10BC               POP      {R4}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??UstawSiec_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
   8855          
   8856                                     
   8857          #include "WizFi.h"                            
   8858           extern _Net NET;                         
   8859          
   8860                //*------------------------      -----------------------------------------------
   8861                 

   \                                 In section Debug.txt, align 4, keep-with-next
   8862                void Punkt_dostepuWiFi_Paint(void)
   8863                {
   \                     Punkt_dostepuWiFi_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8864              
   8865                    List_Paint(Speech[g_leng].Punkt_dostepu,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   9624               MOVS     R4,#+150
   \   00000004   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000006   4B4D               LDR      R5,??Punkt_dostepuWiFi_Paint_0  ;; g_leng
   \   00000008   4B4E               LDR      R6,??Punkt_dostepuWiFi_Paint_0+0x4  ;; Speech
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   49A0               ADR      R0,??Punkt_dostepuWiFi_Paint_0+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0321               MOVS     R1,#+3
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0300               MOVS     R3,R0
   \   00000020   6C22               MOVS     R2,#+108
   \   00000022   0121               MOVS     R1,#+1
   \   00000024   4648               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0xC  ;; 0x8d9
   \   00000026   2F68               LDR      R7,[R5, #+0]
   \   00000028   6743               MULS     R7,R4,R7
   \   0000002A   F719               ADDS     R7,R6,R7
   \   0000002C   3818               ADDS     R0,R7,R0
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   8866          
   8867                    Label(Speech[g_leng].Nazwa,0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0120               MOVS     R0,#+1
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   7F21               MOVS     R1,#+127
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   3E21               MOVS     R1,#+62
   \   00000040   0F20               MOVS     R0,#+15
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   6123               MOVS     R3,#+97
   \   00000046   0122               MOVS     R2,#+1
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   3E48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x10  ;; 0x8e8
   \   0000004C   2F68               LDR      R7,[R5, #+0]
   \   0000004E   6743               MULS     R7,R4,R7
   \   00000050   F719               ADDS     R7,R6,R7
   \   00000052   3818               ADDS     R0,R7,R0
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
   8868                    Label(NET.WiFi.SSID,0,2,86,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   0000005A   3B4F               LDR      R7,??Punkt_dostepuWiFi_Paint_0+0x14  ;; NET
   \   0000005C   82B0               SUB      SP,SP,#+8
   \   0000005E   0020               MOVS     R0,#+0
   \   00000060   0090               STR      R0,[SP, #+0]
   \   00000062   7F21               MOVS     R1,#+127
   \   00000064   0120               MOVS     R0,#+1
   \   00000066   03B4               PUSH     {R0,R1}
   \   00000068   3B21               MOVS     R1,#+59
   \   0000006A   0F20               MOVS     R0,#+15
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   5623               MOVS     R3,#+86
   \   00000070   0222               MOVS     R2,#+2
   \   00000072   0021               MOVS     R1,#+0
   \   00000074   3800               MOVS     R0,R7
   \   00000076   9A30               ADDS     R0,R0,#+154
   \   00000078   ........           BL       Label
   \   0000007C   06B0               ADD      SP,SP,#+24
   8869                    Button(Speech[g_leng].Zmien,15,68,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000007E   82B0               SUB      SP,SP,#+8
   \   00000080   0D20               MOVS     R0,#+13
   \   00000082   0090               STR      R0,[SP, #+0]
   \   00000084   2223               MOVS     R3,#+34
   \   00000086   4422               MOVS     R2,#+68
   \   00000088   0F21               MOVS     R1,#+15
   \   0000008A   8C46               MOV      R12,R1
   \   0000008C   2F49               LDR      R1,??Punkt_dostepuWiFi_Paint_0+0x18  ;; 0x906
   \   0000008E   2868               LDR      R0,[R5, #+0]
   \   00000090   6043               MULS     R0,R4,R0
   \   00000092   3018               ADDS     R0,R6,R0
   \   00000094   4018               ADDS     R0,R0,R1
   \   00000096   6146               MOV      R1,R12
   \   00000098   ........           BL       Button
   \   0000009C   02B0               ADD      SP,SP,#+8
   8870                    
   8871                    Label(Speech[g_leng].Klucz_seciowy,0,1,55,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   0120               MOVS     R0,#+1
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   7F21               MOVS     R1,#+127
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   3E21               MOVS     R1,#+62
   \   000000AA   0F20               MOVS     R0,#+15
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   3723               MOVS     R3,#+55
   \   000000B0   0122               MOVS     R2,#+1
   \   000000B2   0021               MOVS     R1,#+0
   \   000000B4   8C46               MOV      R12,R1
   \   000000B6   2649               LDR      R1,??Punkt_dostepuWiFi_Paint_0+0x1C  ;; 0x915
   \   000000B8   2868               LDR      R0,[R5, #+0]
   \   000000BA   6043               MULS     R0,R4,R0
   \   000000BC   3018               ADDS     R0,R6,R0
   \   000000BE   4018               ADDS     R0,R0,R1
   \   000000C0   6146               MOV      R1,R12
   \   000000C2   ........           BL       Label
   \   000000C6   06B0               ADD      SP,SP,#+24
   8872                    Label(NET.WiFi.Key,0,2,44,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   0020               MOVS     R0,#+0
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   7F21               MOVS     R1,#+127
   \   000000D0   0120               MOVS     R0,#+1
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   3B21               MOVS     R1,#+59
   \   000000D6   0F20               MOVS     R0,#+15
   \   000000D8   03B4               PUSH     {R0,R1}
   \   000000DA   2C23               MOVS     R3,#+44
   \   000000DC   0222               MOVS     R2,#+2
   \   000000DE   0021               MOVS     R1,#+0
   \   000000E0   8B37               ADDS     R7,R7,#+139
   \   000000E2   3800               MOVS     R0,R7
   \   000000E4   ........           BL       Label
   \   000000E8   06B0               ADD      SP,SP,#+24
   8873                    Button(Speech[g_leng].Zmien,15,25,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000EA   82B0               SUB      SP,SP,#+8
   \   000000EC   0D20               MOVS     R0,#+13
   \   000000EE   0090               STR      R0,[SP, #+0]
   \   000000F0   2223               MOVS     R3,#+34
   \   000000F2   1922               MOVS     R2,#+25
   \   000000F4   0F21               MOVS     R1,#+15
   \   000000F6   1548               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x18  ;; 0x906
   \   000000F8   2F68               LDR      R7,[R5, #+0]
   \   000000FA   6743               MULS     R7,R4,R7
   \   000000FC   F719               ADDS     R7,R6,R7
   \   000000FE   3818               ADDS     R0,R7,R0
   \   00000100   ........           BL       Button
   \   00000104   02B0               ADD      SP,SP,#+8
   8874                    
   8875                    H_line(0,20,63,1); // (char X, int Y, char lenght, char typ)
   \   00000106   0123               MOVS     R3,#+1
   \   00000108   3F22               MOVS     R2,#+63
   \   0000010A   1421               MOVS     R1,#+20
   \   0000010C   0020               MOVS     R0,#+0
   \   0000010E   ........           BL       H_line
   8876                    Button(Speech[g_leng].Polacz,4,3,56,16); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000112   82B0               SUB      SP,SP,#+8
   \   00000114   1020               MOVS     R0,#+16
   \   00000116   0090               STR      R0,[SP, #+0]
   \   00000118   3823               MOVS     R3,#+56
   \   0000011A   0322               MOVS     R2,#+3
   \   0000011C   0421               MOVS     R1,#+4
   \   0000011E   0D48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x20  ;; 0x8f7
   \   00000120   2D68               LDR      R5,[R5, #+0]
   \   00000122   6543               MULS     R5,R4,R5
   \   00000124   7419               ADDS     R4,R6,R5
   \   00000126   2018               ADDS     R0,R4,R0
   \   00000128   ........           BL       Button
   \   0000012C   02B0               ADD      SP,SP,#+8
   8877                
   8878                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000012E   F8BC               POP      {R3-R7}
   \   00000130   01BC               POP      {R0}
   \   00000132   0047               BX       R0               ;; return
   \                     ??Punkt_dostepuWiFi_Paint_0:
   \   00000134   ........           DC32     g_leng
   \   00000138   ........           DC32     Speech
   \   0000013C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000140   D9080000           DC32     0x8d9
   \   00000144   E8080000           DC32     0x8e8
   \   00000148   ........           DC32     NET
   \   0000014C   06090000           DC32     0x906
   \   00000150   15090000           DC32     0x915
   \   00000154   F7080000           DC32     0x8f7
   8879                
   8880          
   8881          
   8882          
   8883                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8884                void Punkt_dostepuWiFi_Event(void)
   8885                {
   \                     Punkt_dostepuWiFi_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8886                
   8887                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   3E4C               LDR      R4,??Punkt_dostepuWiFi_Event_0  ;; Y_up
   \   00000004   3E4D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   3C48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x8  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   215E               LDRSH    R1,[R4, R0]
   \   0000001C   3A48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   06D5               BPL      ??Punkt_dostepuWiFi_Event_1
   8888                  {
   8889                    MenuLevel=(MenuLevel/10);
   \   0000002C   374C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   A06C               LDR      R0,[R4, #+72]
   \   00000030   0A21               MOVS     R1,#+10
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   A064               STR      R0,[R4, #+72]
   \   00000038   5BE0               B        ??Punkt_dostepuWiFi_Event_2
   8890                    
   8891                  } 
   8892                   else if ((Y_down<112) || (Y_up<112))
   \                     ??Punkt_dostepuWiFi_Event_1:
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   285E               LDRSH    R0,[R5, R0]
   \   0000003E   7028               CMP      R0,#+112
   \   00000040   03DB               BLT      ??Punkt_dostepuWiFi_Event_3
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   205E               LDRSH    R0,[R4, R0]
   \   00000046   7028               CMP      R0,#+112
   \   00000048   53DA               BGE      ??Punkt_dostepuWiFi_Event_2
   8893                  {
   8894                      
   8895                      if (Button(Speech[g_leng].Zmien,15,68,34,13)==1)
   \                     ??Punkt_dostepuWiFi_Event_3:
   \   0000004A   9624               MOVS     R4,#+150
   \   0000004C   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   0000004E   304D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x14  ;; g_leng
   \   00000050   304E               LDR      R6,??Punkt_dostepuWiFi_Event_0+0x18  ;; Speech
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   0D20               MOVS     R0,#+13
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   2223               MOVS     R3,#+34
   \   0000005A   4422               MOVS     R2,#+68
   \   0000005C   0F21               MOVS     R1,#+15
   \   0000005E   2E48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x1C  ;; 0x906
   \   00000060   2F68               LDR      R7,[R5, #+0]
   \   00000062   6743               MULS     R7,R4,R7
   \   00000064   F719               ADDS     R7,R6,R7
   \   00000066   3818               ADDS     R0,R7,R0
   \   00000068   ........           BL       Button
   \   0000006C   02B0               ADD      SP,SP,#+8
   \   0000006E   0128               CMP      R0,#+1
   \   00000070   0CD1               BNE      ??Punkt_dostepuWiFi_Event_4
   8896                      {
   8897                        TextToChange=NET.WiFi.SSID;
   \   00000072   264C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   00000074   2948               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x20  ;; NET + 154
   \   00000076   2065               STR      R0,[R4, #+80]
   8898                        TextToChangeLength=15;
   \   00000078   0F20               MOVS     R0,#+15
   \   0000007A   2070               STRB     R0,[R4, #+0]
   8899                        TextToChangeMaxPixSize=62;
   \   0000007C   3E20               MOVS     R0,#+62
   \   0000007E   6070               STRB     R0,[R4, #+1]
   8900                        MenuLevel=(MenuLevel*10+1);
   \   00000080   A06C               LDR      R0,[R4, #+72]
   \   00000082   0A21               MOVS     R1,#+10
   \   00000084   4843               MULS     R0,R1,R0
   \   00000086   401C               ADDS     R0,R0,#+1
   \   00000088   A064               STR      R0,[R4, #+72]
   \   0000008A   32E0               B        ??Punkt_dostepuWiFi_Event_2
   8901                      }else if (Button(Speech[g_leng].Zmien,15,25,34,13)==1)
   \                     ??Punkt_dostepuWiFi_Event_4:
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   0D20               MOVS     R0,#+13
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   2223               MOVS     R3,#+34
   \   00000094   1922               MOVS     R2,#+25
   \   00000096   0F21               MOVS     R1,#+15
   \   00000098   1F48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x1C  ;; 0x906
   \   0000009A   2F68               LDR      R7,[R5, #+0]
   \   0000009C   6743               MULS     R7,R4,R7
   \   0000009E   F719               ADDS     R7,R6,R7
   \   000000A0   3818               ADDS     R0,R7,R0
   \   000000A2   ........           BL       Button
   \   000000A6   02B0               ADD      SP,SP,#+8
   \   000000A8   0128               CMP      R0,#+1
   \   000000AA   0CD1               BNE      ??Punkt_dostepuWiFi_Event_5
   8902                      {
   8903                        TextToChange=NET.WiFi.Key;
   \   000000AC   174C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   000000AE   1C48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x24  ;; NET + 139
   \   000000B0   2065               STR      R0,[R4, #+80]
   8904                        TextToChangeLength=15;
   \   000000B2   0F20               MOVS     R0,#+15
   \   000000B4   2070               STRB     R0,[R4, #+0]
   8905                        TextToChangeMaxPixSize=62;
   \   000000B6   3E20               MOVS     R0,#+62
   \   000000B8   6070               STRB     R0,[R4, #+1]
   8906                        MenuLevel=(MenuLevel*10+1);
   \   000000BA   A06C               LDR      R0,[R4, #+72]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   4843               MULS     R0,R1,R0
   \   000000C0   401C               ADDS     R0,R0,#+1
   \   000000C2   A064               STR      R0,[R4, #+72]
   \   000000C4   15E0               B        ??Punkt_dostepuWiFi_Event_2
   8907                      }else if (Button(Speech[g_leng].Polacz,4,3,56,16)==1)
   \                     ??Punkt_dostepuWiFi_Event_5:
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   1020               MOVS     R0,#+16
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   3823               MOVS     R3,#+56
   \   000000CE   0322               MOVS     R2,#+3
   \   000000D0   0421               MOVS     R1,#+4
   \   000000D2   1448               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x28  ;; 0x8f7
   \   000000D4   2D68               LDR      R5,[R5, #+0]
   \   000000D6   6543               MULS     R5,R4,R5
   \   000000D8   7419               ADDS     R4,R6,R5
   \   000000DA   2018               ADDS     R0,R4,R0
   \   000000DC   ........           BL       Button
   \   000000E0   02B0               ADD      SP,SP,#+8
   \   000000E2   0128               CMP      R0,#+1
   \   000000E4   05D1               BNE      ??Punkt_dostepuWiFi_Event_2
   8908                      {
   8909                         MenuLevel=(MenuLevel*10+2);
   \   000000E6   094C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   000000E8   A06C               LDR      R0,[R4, #+72]
   \   000000EA   0A21               MOVS     R1,#+10
   \   000000EC   4843               MULS     R0,R1,R0
   \   000000EE   801C               ADDS     R0,R0,#+2
   \   000000F0   A064               STR      R0,[R4, #+72]
   8910                      }
   8911                      
   8912                      
   8913                      
   8914                    
   8915                  }
   8916                   MenuPaint();
   \                     ??Punkt_dostepuWiFi_Event_2:
   \   000000F2   ........           BL       MenuPaint
   8917                    
   8918                 
   8919                }//_______________________________________________________________________
   \   000000F6   F8BC               POP      {R3-R7}
   \   000000F8   01BC               POP      {R0}
   \   000000FA   0047               BX       R0               ;; return
   \                     ??Punkt_dostepuWiFi_Event_0:
   \   000000FC   ........           DC32     Y_up
   \   00000100   ........           DC32     Y_down
   \   00000104   ........           DC32     X_down
   \   00000108   ........           DC32     X_up
   \   0000010C   ........           DC32     TextToChangeLength
   \   00000110   ........           DC32     g_leng
   \   00000114   ........           DC32     Speech
   \   00000118   06090000           DC32     0x906
   \   0000011C   ........           DC32     NET + 154
   \   00000120   ........           DC32     NET + 139
   \   00000124   F7080000           DC32     0x8f7
   8920          
   8921          
   8922                
   8923           
   8924                 

   \                                 In section Debug.txt, align 4, keep-with-next
   8925                void WiFiConecting_Paint(void)
   8926                {
   \                     WiFiConecting_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   8927                  
   8928                    //SetWiFiSuspend();
   8929                    List_Paint(Speech[g_leng].Punkt_dostepu,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0CA0               ADR      R0,??WiFiConecting_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   0948               LDR      R0,??WiFiConecting_Paint_0+0x4  ;; 0x8d9
   \   0000001E   0A4C               LDR      R4,??WiFiConecting_Paint_0+0x8  ;; g_leng
   \   00000020   2468               LDR      R4,[R4, #+0]
   \   00000022   9625               MOVS     R5,#+150
   \   00000024   2D01               LSLS     R5,R5,#+4        ;; #+2400
   \   00000026   6C43               MULS     R4,R5,R4
   \   00000028   084D               LDR      R5,??WiFiConecting_Paint_0+0xC  ;; Speech
   \   0000002A   2C19               ADDS     R4,R5,R4
   \   0000002C   2018               ADDS     R0,R4,R0
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   8930                    Wait_Paint();
   \   00000034   ........           BL       Wait_Paint
   8931                  
   8932                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000038   38BC               POP      {R3-R5}
   \   0000003A   01BC               POP      {R0}
   \   0000003C   0047               BX       R0               ;; return
   \   0000003E   C046               Nop      
   \                     ??WiFiConecting_Paint_0:
   \   00000040   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000044   D9080000           DC32     0x8d9
   \   00000048   ........           DC32     g_leng
   \   0000004C   ........           DC32     Speech
   8933          
   8934                
   8935                typedef enum {
   8936                WizFi_AT_NC=0,
   8937                WizFi_AT_CONFIG,            //konfiguracja
   8938                WizFi_AT_CONFIG_ERROR,      //b³ad konfiguracji
   8939                WizFi_AT_CONNECTING,           //³¹czenie z hotspotem
   8940                WizFi_AT_CONNECT_ERROR,     //b³¹d po³¹czenia z hotspotem
   8941                WizFi_AT_CONNECTED,         //po³¹czono z hotspotem
   8942              }_WiFiStat;
   8943                

   \                                 In section Debug.txt, align 4, keep-with-next
   8944                void WiFiConecting_Refresh(void)
   8945                {
   \                     WiFiConecting_Refresh:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   8946           
   8947                     static char licz;
   8948                     static char end=0;
   8949                     char cyfra=licz%10;
   \   00000002   6A4C               LDR      R4,??WiFiConecting_Refresh_0  ;; ??licz
   \   00000004   2578               LDRB     R5,[R4, #+0]
   \   00000006   2800               MOVS     R0,R5
   \   00000008   0A21               MOVS     R1,#+10
   \   0000000A   ........           BL       __aeabi_idivmod
   \   0000000E   0E00               MOVS     R6,R1
   \   00000010   3606               LSLS     R6,R6,#+24
   \   00000012   360E               LSRS     R6,R6,#+24
   8950                     
   8951                     if (licz==0)
   \   00000014   002D               CMP      R5,#+0
   \   00000016   0DD1               BNE      ??WiFiConecting_Refresh_1
   8952                     {
   8953                       NET.Status.FreezTime=g_counter+FREEZ_TIME;
   8954                       NET.Status.HostLink=DISCONNECTED;
   \   00000018   654D               LDR      R5,??WiFiConecting_Refresh_0+0x4  ;; NET
   \   0000001A   0026               MOVS     R6,#+0
   8955                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   0000001C   2E80               STRH     R6,[R5, #+0]
   8956                       NET.Status.Timeout=0;
   \   0000001E   3000               MOVS     R0,R6
   \   00000020   0100               MOVS     R1,R0
   \   00000022   2A00               MOVS     R2,R5
   \   00000024   2032               ADDS     R2,R2,#+32
   \   00000026   03C2               STM      R2!,{R0,R1}
   8957                       NET.Status.HttpNextQueryTime=0;
   \   00000028   2A00               MOVS     R2,R5
   \   0000002A   1832               ADDS     R2,R2,#+24
   \   0000002C   03C2               STM      R2!,{R0,R1}
   8958                       NET.Status.FreezTime=0;
   \   0000002E   2835               ADDS     R5,R5,#+40
   \   00000030   03C5               STM      R5!,{R0,R1}
   \   00000032   90E0               B        ??WiFiConecting_Refresh_2
   8959                     }
   8960                     else if (end==0)
   \                     ??WiFiConecting_Refresh_1:
   \   00000034   6078               LDRB     R0,[R4, #+1]
   \   00000036   0028               CMP      R0,#+0
   \   00000038   00D0               BEQ      .+4
   \   0000003A   8CE0               B        ??WiFiConecting_Refresh_2
   8961                     {  
   8962                         if (NET.Status.AccesPointAssociate==DISCONNECTED)
   \   0000003C   5C4D               LDR      R5,??WiFiConecting_Refresh_0+0x4  ;; NET
   \   0000003E   2878               LDRB     R0,[R5, #+0]
   \   00000040   0028               CMP      R0,#+0
   \   00000042   0FD1               BNE      ??WiFiConecting_Refresh_3
   8963                         {
   8964                           Label("Not connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000044   82B0               SUB      SP,SP,#+8
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   7F21               MOVS     R1,#+127
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   3B21               MOVS     R1,#+59
   \   00000050   0F20               MOVS     R0,#+15
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   0300               MOVS     R3,R0
   \   00000056   0222               MOVS     R2,#+2
   \   00000058   1100               MOVS     R1,R2
   \   0000005A   5648               LDR      R0,??WiFiConecting_Refresh_0+0x8  ;; `?<Constant "Not connected">`
   \   0000005C   ........           BL       Label
   \   00000060   06B0               ADD      SP,SP,#+24
   \   00000062   78E0               B        ??WiFiConecting_Refresh_2
   8965                         }  
   8966                         else if (NET.Status.AccesPointAssociate==CONNECTING)
   \                     ??WiFiConecting_Refresh_3:
   \   00000064   0228               CMP      R0,#+2
   \   00000066   4AD1               BNE      ??WiFiConecting_Refresh_4
   8967                         {
   8968                           if (cyfra==0) Label("Connecting",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000068   3000               MOVS     R0,R6
   \   0000006A   0FD1               BNE      ??WiFiConecting_Refresh_5
   \   0000006C   82B0               SUB      SP,SP,#+8
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   0090               STR      R0,[SP, #+0]
   \   00000072   7F21               MOVS     R1,#+127
   \   00000074   0120               MOVS     R0,#+1
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   3B21               MOVS     R1,#+59
   \   0000007A   0F20               MOVS     R0,#+15
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0300               MOVS     R3,R0
   \   00000080   0422               MOVS     R2,#+4
   \   00000082   0021               MOVS     R1,#+0
   \   00000084   4C48               LDR      R0,??WiFiConecting_Refresh_0+0xC  ;; `?<Constant "Not connected">` + 16
   \   00000086   ........           BL       Label
   \   0000008A   06B0               ADD      SP,SP,#+24
   8969                           if (cyfra==3) Label("Connecting .",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_5:
   \   0000008C   3000               MOVS     R0,R6
   \   0000008E   0328               CMP      R0,#+3
   \   00000090   0FD1               BNE      ??WiFiConecting_Refresh_6
   \   00000092   82B0               SUB      SP,SP,#+8
   \   00000094   0020               MOVS     R0,#+0
   \   00000096   0090               STR      R0,[SP, #+0]
   \   00000098   7F21               MOVS     R1,#+127
   \   0000009A   0120               MOVS     R0,#+1
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   3B21               MOVS     R1,#+59
   \   000000A0   0F20               MOVS     R0,#+15
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   0300               MOVS     R3,R0
   \   000000A6   0422               MOVS     R2,#+4
   \   000000A8   0021               MOVS     R1,#+0
   \   000000AA   4448               LDR      R0,??WiFiConecting_Refresh_0+0x10  ;; `?<Constant "Not connected">` + 28
   \   000000AC   ........           BL       Label
   \   000000B0   06B0               ADD      SP,SP,#+24
   8970                           if (cyfra==5) Label("Connecting ..",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_6:
   \   000000B2   3000               MOVS     R0,R6
   \   000000B4   0528               CMP      R0,#+5
   \   000000B6   0FD1               BNE      ??WiFiConecting_Refresh_7
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   0020               MOVS     R0,#+0
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   7F21               MOVS     R1,#+127
   \   000000C0   0120               MOVS     R0,#+1
   \   000000C2   03B4               PUSH     {R0,R1}
   \   000000C4   3B21               MOVS     R1,#+59
   \   000000C6   0F20               MOVS     R0,#+15
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   0300               MOVS     R3,R0
   \   000000CC   0422               MOVS     R2,#+4
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   3B48               LDR      R0,??WiFiConecting_Refresh_0+0x14  ;; `?<Constant "Not connected">` + 44
   \   000000D2   ........           BL       Label
   \   000000D6   06B0               ADD      SP,SP,#+24
   8971                           if (cyfra==7) Label("Connecting ...",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_7:
   \   000000D8   072E               CMP      R6,#+7
   \   000000DA   3CD1               BNE      ??WiFiConecting_Refresh_2
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0020               MOVS     R0,#+0
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   7F21               MOVS     R1,#+127
   \   000000E4   0120               MOVS     R0,#+1
   \   000000E6   03B4               PUSH     {R0,R1}
   \   000000E8   3B21               MOVS     R1,#+59
   \   000000EA   0F20               MOVS     R0,#+15
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   0300               MOVS     R3,R0
   \   000000F0   0422               MOVS     R2,#+4
   \   000000F2   0021               MOVS     R1,#+0
   \   000000F4   3348               LDR      R0,??WiFiConecting_Refresh_0+0x18  ;; `?<Constant "Not connected">` + 60
   \   000000F6   ........           BL       Label
   \   000000FA   06B0               ADD      SP,SP,#+24
   \   000000FC   2BE0               B        ??WiFiConecting_Refresh_2
   8972                         }else if (NET.Status.AccesPointAssociate==CONNECTED)
   \                     ??WiFiConecting_Refresh_4:
   \   000000FE   0328               CMP      R0,#+3
   \   00000100   29D1               BNE      ??WiFiConecting_Refresh_2
   8973                         {
   8974                           end=1;
   \   00000102   0120               MOVS     R0,#+1
   \   00000104   6070               STRB     R0,[R4, #+1]
   8975                           licz=180;
   \   00000106   B420               MOVS     R0,#+180
   \   00000108   2070               STRB     R0,[R4, #+0]
   8976                           Label("Connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)            
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0020               MOVS     R0,#+0
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   7F21               MOVS     R1,#+127
   \   00000112   0120               MOVS     R0,#+1
   \   00000114   03B4               PUSH     {R0,R1}
   \   00000116   3B21               MOVS     R1,#+59
   \   00000118   0F20               MOVS     R0,#+15
   \   0000011A   03B4               PUSH     {R0,R1}
   \   0000011C   0300               MOVS     R3,R0
   \   0000011E   0222               MOVS     R2,#+2
   \   00000120   1100               MOVS     R1,R2
   \   00000122   2948               LDR      R0,??WiFiConecting_Refresh_0+0x1C  ;; `?<Constant "Not connected">` + 76
   \   00000124   ........           BL       Label
   \   00000128   06B0               ADD      SP,SP,#+24
   8977                         
   8978                           
   8979                             //zapis do flash
   8980                            unsigned int Save = __get_interrupt_state();  
   \   0000012A   ........           BL       __iar_get_interrupt_state
   \   0000012E   0600               MOVS     R6,R0
   8981                            __disable_interrupt();
   \   00000130   ........           BL       __iar_disable_interrupt
   8982                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.SSID)), (char*) (&(NET.WiFi.SSID)), sizeof(NET.WiFi.SSID));
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000134   0F22               MOVS     R2,#+15
   \   00000136   2900               MOVS     R1,R5
   \   00000138   9A31               ADDS     R1,R1,#+154
   \   0000013A   2448               LDR      R0,??WiFiConecting_Refresh_0+0x20  ;; 0x13d922
   \   0000013C   ........           BL       FlashWrite
   8983                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Key)), (char*) (&(NET.WiFi.Key)), sizeof(NET.WiFi.Key));
   \   00000140   0F22               MOVS     R2,#+15
   \   00000142   8B35               ADDS     R5,R5,#+139
   \   00000144   2900               MOVS     R1,R5
   \   00000146   2248               LDR      R0,??WiFiConecting_Refresh_0+0x24  ;; 0x13d913
   \   00000148   ........           BL       FlashWrite
   8984                            __set_interrupt_state(Save);
   \   0000014C   3000               MOVS     R0,R6
   \   0000014E   ........           BL       __iar_set_interrupt_state
   8985                            __enable_interrupt();
   \   00000152   ........           BL       __iar_enable_interrupt
   8986                            //koniec zapisu do flash
   8987                         
   8988                         }
   8989                       
   8990                     }
   8991                     
   8992                     if (licz==179) 
   \                     ??WiFiConecting_Refresh_2:
   \   00000156   2078               LDRB     R0,[R4, #+0]
   \   00000158   B328               CMP      R0,#+179
   \   0000015A   13D1               BNE      ??WiFiConecting_Refresh_8
   8993                     {
   8994                       end=1;
   \   0000015C   0120               MOVS     R0,#+1
   \   0000015E   6070               STRB     R0,[R4, #+1]
   8995                       licz=180;
   \   00000160   B420               MOVS     R0,#+180
   \   00000162   2070               STRB     R0,[R4, #+0]
   8996                       Label("Not connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000164   82B0               SUB      SP,SP,#+8
   \   00000166   0020               MOVS     R0,#+0
   \   00000168   0090               STR      R0,[SP, #+0]
   \   0000016A   7F21               MOVS     R1,#+127
   \   0000016C   0120               MOVS     R0,#+1
   \   0000016E   03B4               PUSH     {R0,R1}
   \   00000170   3B21               MOVS     R1,#+59
   \   00000172   0F20               MOVS     R0,#+15
   \   00000174   03B4               PUSH     {R0,R1}
   \   00000176   0300               MOVS     R3,R0
   \   00000178   0222               MOVS     R2,#+2
   \   0000017A   1100               MOVS     R1,R2
   \   0000017C   0D48               LDR      R0,??WiFiConecting_Refresh_0+0x8  ;; `?<Constant "Not connected">`
   \   0000017E   ........           BL       Label
   \   00000182   06B0               ADD      SP,SP,#+24
   8997                     }
   8998                     
   8999                     
   9000                     if (licz<210)
   \                     ??WiFiConecting_Refresh_8:
   \   00000184   2078               LDRB     R0,[R4, #+0]
   \   00000186   D228               CMP      R0,#+210
   \   00000188   02D2               BCS      ??WiFiConecting_Refresh_9
   9001                     {
   9002                        licz++; 
   \   0000018A   401C               ADDS     R0,R0,#+1
   \   0000018C   2070               STRB     R0,[R4, #+0]
   \   0000018E   0AE0               B        ??WiFiConecting_Refresh_10
   9003                     }else{
   9004                        licz=0;
   9005                        end=0;
   \                     ??WiFiConecting_Refresh_9:
   \   00000190   0026               MOVS     R6,#+0
   \   00000192   6670               STRB     R6,[R4, #+1]
   9006                        MenuLevel=(MenuLevel/10);
   \   00000194   0F4D               LDR      R5,??WiFiConecting_Refresh_0+0x28  ;; TextToChangeLength
   \   00000196   A86C               LDR      R0,[R5, #+72]
   \   00000198   0A21               MOVS     R1,#+10
   \   0000019A   ........           BL       __aeabi_idivmod
   \   0000019E   A864               STR      R0,[R5, #+72]
   9007                        licz=0;
   \   000001A0   2670               STRB     R6,[R4, #+0]
   9008                        MenuPaint();
   \   000001A2   ........           BL       MenuPaint
   9009                     }
   9010                     
   9011                     
   9012                    
   9013                
   9014                }
   \                     ??WiFiConecting_Refresh_10:
   \   000001A6   70BC               POP      {R4-R6}
   \   000001A8   01BC               POP      {R0}
   \   000001AA   0047               BX       R0               ;; return
   \                     ??WiFiConecting_Refresh_0:
   \   000001AC   ........           DC32     ??licz
   \   000001B0   ........           DC32     NET
   \   000001B4   ........           DC32     `?<Constant "Not connected">`
   \   000001B8   ........           DC32     `?<Constant "Not connected">` + 16
   \   000001BC   ........           DC32     `?<Constant "Not connected">` + 28
   \   000001C0   ........           DC32     `?<Constant "Not connected">` + 44
   \   000001C4   ........           DC32     `?<Constant "Not connected">` + 60
   \   000001C8   ........           DC32     `?<Constant "Not connected">` + 76
   \   000001CC   22D91300           DC32     0x13d922
   \   000001D0   13D91300           DC32     0x13d913
   \   000001D4   ........           DC32     TextToChangeLength

   \                                 In section .bss, align 1
   \                     ??licz:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   9015          
   9016              

   \                                 In section Debug.txt, align 4, keep-with-next
   9017                void  Host_WiFi_Paint(void)
   9018                {
   \                     Host_WiFi_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   61A0               ADR      R0,??Host_WiFi_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   5E48               LDR      R0,??Host_WiFi_Paint_0+0x4  ;; `?<Constant "Host">`
   9019                    
   9020                    List_Paint("Host",1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000001E   ........           BL       List_Paint
   \   00000022   0AB0               ADD      SP,SP,#+40
   9021          
   9022                    Label(Speech[g_leng].Domena,0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000024   9624               MOVS     R4,#+150
   \   00000026   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000028   5C4D               LDR      R5,??Host_WiFi_Paint_0+0x8  ;; g_leng
   \   0000002A   5D4E               LDR      R6,??Host_WiFi_Paint_0+0xC  ;; Speech
   \   0000002C   82B0               SUB      SP,SP,#+8
   \   0000002E   0120               MOVS     R0,#+1
   \   00000030   0090               STR      R0,[SP, #+0]
   \   00000032   7F21               MOVS     R1,#+127
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   3E21               MOVS     R1,#+62
   \   00000038   0F20               MOVS     R0,#+15
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   6123               MOVS     R3,#+97
   \   0000003E   0122               MOVS     R2,#+1
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   5848               LDR      R0,??Host_WiFi_Paint_0+0x10  ;; 0x924
   \   00000044   2F68               LDR      R7,[R5, #+0]
   \   00000046   6743               MULS     R7,R4,R7
   \   00000048   F719               ADDS     R7,R6,R7
   \   0000004A   3818               ADDS     R0,R7,R0
   \   0000004C   ........           BL       Label
   \   00000050   06B0               ADD      SP,SP,#+24
   9023                    Label(Speech[g_leng].np_ceuron_pl,0,1,88,15,60,1,127,1);
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   0120               MOVS     R0,#+1
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   7F21               MOVS     R1,#+127
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   3C21               MOVS     R1,#+60
   \   0000005E   0F20               MOVS     R0,#+15
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   5823               MOVS     R3,#+88
   \   00000064   0122               MOVS     R2,#+1
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   4F48               LDR      R0,??Host_WiFi_Paint_0+0x14  ;; 0x942
   \   0000006A   2F68               LDR      R7,[R5, #+0]
   \   0000006C   6743               MULS     R7,R4,R7
   \   0000006E   F719               ADDS     R7,R6,R7
   \   00000070   3818               ADDS     R0,R7,R0
   \   00000072   ........           BL       Label
   \   00000076   06B0               ADD      SP,SP,#+24
   9024                    Label("....................",2,2,73,20,59,1,127,0);
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   3B21               MOVS     R1,#+59
   \   00000086   1420               MOVS     R0,#+20
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   4923               MOVS     R3,#+73
   \   0000008C   0222               MOVS     R2,#+2
   \   0000008E   1100               MOVS     R1,R2
   \   00000090   4648               LDR      R0,??Host_WiFi_Paint_0+0x18  ;; `?<Constant "Host">` + 8
   \   00000092   ........           BL       Label
   \   00000096   06B0               ADD      SP,SP,#+24
   9025                    Label(NET.WiFi.Domena,2,2,75,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000098   454F               LDR      R7,??Host_WiFi_Paint_0+0x1C  ;; NET
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   7F21               MOVS     R1,#+127
   \   000000A2   0120               MOVS     R0,#+1
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   3B21               MOVS     R1,#+59
   \   000000A8   0F20               MOVS     R0,#+15
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   4B23               MOVS     R3,#+75
   \   000000AE   0222               MOVS     R2,#+2
   \   000000B0   1100               MOVS     R1,R2
   \   000000B2   3800               MOVS     R0,R7
   \   000000B4   A930               ADDS     R0,R0,#+169
   \   000000B6   ........           BL       Label
   \   000000BA   06B0               ADD      SP,SP,#+24
   9026                    Button(Speech[g_leng].Zmien,15,58,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000BC   82B0               SUB      SP,SP,#+8
   \   000000BE   0D20               MOVS     R0,#+13
   \   000000C0   0090               STR      R0,[SP, #+0]
   \   000000C2   2223               MOVS     R3,#+34
   \   000000C4   3A22               MOVS     R2,#+58
   \   000000C6   0F21               MOVS     R1,#+15
   \   000000C8   8C46               MOV      R12,R1
   \   000000CA   3A49               LDR      R1,??Host_WiFi_Paint_0+0x20  ;; 0x906
   \   000000CC   2868               LDR      R0,[R5, #+0]
   \   000000CE   6043               MULS     R0,R4,R0
   \   000000D0   3018               ADDS     R0,R6,R0
   \   000000D2   4018               ADDS     R0,R0,R1
   \   000000D4   6146               MOV      R1,R12
   \   000000D6   ........           BL       Button
   \   000000DA   02B0               ADD      SP,SP,#+8
   9027                    
   9028                    Label(Speech[g_leng].Scezka,0,1,45,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0120               MOVS     R0,#+1
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   7F21               MOVS     R1,#+127
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   3E21               MOVS     R1,#+62
   \   000000E8   0F20               MOVS     R0,#+15
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   2D23               MOVS     R3,#+45
   \   000000EE   0122               MOVS     R2,#+1
   \   000000F0   0021               MOVS     R1,#+0
   \   000000F2   8C46               MOV      R12,R1
   \   000000F4   3049               LDR      R1,??Host_WiFi_Paint_0+0x24  ;; 0x933
   \   000000F6   2868               LDR      R0,[R5, #+0]
   \   000000F8   6043               MULS     R0,R4,R0
   \   000000FA   3018               ADDS     R0,R6,R0
   \   000000FC   4018               ADDS     R0,R0,R1
   \   000000FE   6146               MOV      R1,R12
   \   00000100   ........           BL       Label
   \   00000104   06B0               ADD      SP,SP,#+24
   9029                    Label(Speech[g_leng].np_home,0,1,36,15,60,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   0120               MOVS     R0,#+1
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   7F21               MOVS     R1,#+127
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   3C21               MOVS     R1,#+60
   \   00000112   0F20               MOVS     R0,#+15
   \   00000114   03B4               PUSH     {R0,R1}
   \   00000116   2423               MOVS     R3,#+36
   \   00000118   0122               MOVS     R2,#+1
   \   0000011A   0021               MOVS     R1,#+0
   \   0000011C   8C46               MOV      R12,R1
   \   0000011E   2749               LDR      R1,??Host_WiFi_Paint_0+0x28  ;; 0x951
   \   00000120   2868               LDR      R0,[R5, #+0]
   \   00000122   6043               MULS     R0,R4,R0
   \   00000124   3018               ADDS     R0,R6,R0
   \   00000126   4018               ADDS     R0,R0,R1
   \   00000128   6146               MOV      R1,R12
   \   0000012A   ........           BL       Label
   \   0000012E   06B0               ADD      SP,SP,#+24
   9030                    Label("....................",2,2,20,20,59,1,127,0); 
   \   00000130   82B0               SUB      SP,SP,#+8
   \   00000132   0020               MOVS     R0,#+0
   \   00000134   0090               STR      R0,[SP, #+0]
   \   00000136   7F21               MOVS     R1,#+127
   \   00000138   0120               MOVS     R0,#+1
   \   0000013A   03B4               PUSH     {R0,R1}
   \   0000013C   3B21               MOVS     R1,#+59
   \   0000013E   1420               MOVS     R0,#+20
   \   00000140   03B4               PUSH     {R0,R1}
   \   00000142   0300               MOVS     R3,R0
   \   00000144   0222               MOVS     R2,#+2
   \   00000146   1100               MOVS     R1,R2
   \   00000148   1848               LDR      R0,??Host_WiFi_Paint_0+0x18  ;; `?<Constant "Host">` + 8
   \   0000014A   ........           BL       Label
   \   0000014E   06B0               ADD      SP,SP,#+24
   9031                    Label(NET.WiFi.Path,2,2,22,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000150   82B0               SUB      SP,SP,#+8
   \   00000152   0020               MOVS     R0,#+0
   \   00000154   0090               STR      R0,[SP, #+0]
   \   00000156   7F21               MOVS     R1,#+127
   \   00000158   0120               MOVS     R0,#+1
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   3B21               MOVS     R1,#+59
   \   0000015E   0F20               MOVS     R0,#+15
   \   00000160   03B4               PUSH     {R0,R1}
   \   00000162   1623               MOVS     R3,#+22
   \   00000164   0222               MOVS     R2,#+2
   \   00000166   1100               MOVS     R1,R2
   \   00000168   C237               ADDS     R7,R7,#+194
   \   0000016A   3800               MOVS     R0,R7
   \   0000016C   ........           BL       Label
   \   00000170   06B0               ADD      SP,SP,#+24
   9032                    Button(Speech[g_leng].Zmien,15,5,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000172   82B0               SUB      SP,SP,#+8
   \   00000174   0D20               MOVS     R0,#+13
   \   00000176   0090               STR      R0,[SP, #+0]
   \   00000178   2223               MOVS     R3,#+34
   \   0000017A   0522               MOVS     R2,#+5
   \   0000017C   0F21               MOVS     R1,#+15
   \   0000017E   0D48               LDR      R0,??Host_WiFi_Paint_0+0x20  ;; 0x906
   \   00000180   2D68               LDR      R5,[R5, #+0]
   \   00000182   6543               MULS     R5,R4,R5
   \   00000184   7419               ADDS     R4,R6,R5
   \   00000186   2018               ADDS     R0,R4,R0
   \   00000188   ........           BL       Button
   \   0000018C   02B0               ADD      SP,SP,#+8
   9033                    
   9034          
   9035                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000018E   F8BC               POP      {R3-R7}
   \   00000190   01BC               POP      {R0}
   \   00000192   0047               BX       R0               ;; return
   \                     ??Host_WiFi_Paint_0:
   \   00000194   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000198   ........           DC32     `?<Constant "Host">`
   \   0000019C   ........           DC32     g_leng
   \   000001A0   ........           DC32     Speech
   \   000001A4   24090000           DC32     0x924
   \   000001A8   42090000           DC32     0x942
   \   000001AC   ........           DC32     `?<Constant "Host">` + 8
   \   000001B0   ........           DC32     NET
   \   000001B4   06090000           DC32     0x906
   \   000001B8   33090000           DC32     0x933
   \   000001BC   51090000           DC32     0x951
   9036          
   9037          
   9038             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9039                void  Host_WiFi_Event(void)
   9040                {
   \                     Host_WiFi_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9041                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   3D4C               LDR      R4,??Host_WiFi_Event_0  ;; Y_up
   \   00000004   3D4D               LDR      R5,??Host_WiFi_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   3B48               LDR      R0,??Host_WiFi_Event_0+0x8  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   215E               LDRSH    R1,[R4, R0]
   \   0000001C   3948               LDR      R0,??Host_WiFi_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   1BD5               BPL      ??Host_WiFi_Event_1
   9042                  {
   9043                    MenuLevel=(MenuLevel/10);
   \   0000002C   364C               LDR      R4,??Host_WiFi_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   A06C               LDR      R0,[R4, #+72]
   \   00000030   0A21               MOVS     R1,#+10
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   A064               STR      R0,[R4, #+72]
   9044                    
   9045                     //zapis do flash
   9046                            unsigned int Save = __get_interrupt_state();  
   \   00000038   ........           BL       __iar_get_interrupt_state
   \   0000003C   0400               MOVS     R4,R0
   9047                            __disable_interrupt();
   \   0000003E   ........           BL       __iar_disable_interrupt
   9048                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Domena)), (char*) (&(NET.WiFi.Domena)), sizeof(NET.WiFi.Domena));
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000042   324D               LDR      R5,??Host_WiFi_Event_0+0x14  ;; NET
   \   00000044   1922               MOVS     R2,#+25
   \   00000046   2900               MOVS     R1,R5
   \   00000048   A931               ADDS     R1,R1,#+169
   \   0000004A   3148               LDR      R0,??Host_WiFi_Event_0+0x18  ;; 0x13d931
   \   0000004C   ........           BL       FlashWrite
   9049                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Path)), (char*) (&(NET.WiFi.Path)), sizeof(NET.WiFi.Path));
   \   00000050   0F22               MOVS     R2,#+15
   \   00000052   C235               ADDS     R5,R5,#+194
   \   00000054   2900               MOVS     R1,R5
   \   00000056   2F48               LDR      R0,??Host_WiFi_Event_0+0x1C  ;; 0x13d94a
   \   00000058   ........           BL       FlashWrite
   9050                            __set_interrupt_state(Save);
   \   0000005C   2000               MOVS     R0,R4
   \   0000005E   ........           BL       __iar_set_interrupt_state
   \   00000062   44E0               B        ??Host_WiFi_Event_2
   9051                     //koniec zapisu do flash
   9052                    
   9053                  } 
   9054                   else if ((Y_down<112) || (Y_up<112))
   \                     ??Host_WiFi_Event_1:
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   285E               LDRSH    R0,[R5, R0]
   \   00000068   7028               CMP      R0,#+112
   \   0000006A   03DB               BLT      ??Host_WiFi_Event_3
   \   0000006C   0020               MOVS     R0,#+0
   \   0000006E   205E               LDRSH    R0,[R4, R0]
   \   00000070   7028               CMP      R0,#+112
   \   00000072   3CDA               BGE      ??Host_WiFi_Event_2
   9055                  {
   9056                      
   9057                      if (Button(Speech[g_leng].Zmien,15,58,34,13)==1)
   \                     ??Host_WiFi_Event_3:
   \   00000074   9624               MOVS     R4,#+150
   \   00000076   2401               LSLS     R4,R4,#+4        ;; #+2400
   \   00000078   274D               LDR      R5,??Host_WiFi_Event_0+0x20  ;; g_leng
   \   0000007A   284E               LDR      R6,??Host_WiFi_Event_0+0x24  ;; Speech
   \   0000007C   82B0               SUB      SP,SP,#+8
   \   0000007E   0D20               MOVS     R0,#+13
   \   00000080   0090               STR      R0,[SP, #+0]
   \   00000082   2223               MOVS     R3,#+34
   \   00000084   3A22               MOVS     R2,#+58
   \   00000086   0F21               MOVS     R1,#+15
   \   00000088   2548               LDR      R0,??Host_WiFi_Event_0+0x28  ;; 0x906
   \   0000008A   2F68               LDR      R7,[R5, #+0]
   \   0000008C   6743               MULS     R7,R4,R7
   \   0000008E   F719               ADDS     R7,R6,R7
   \   00000090   3818               ADDS     R0,R7,R0
   \   00000092   ........           BL       Button
   \   00000096   02B0               ADD      SP,SP,#+8
   \   00000098   0128               CMP      R0,#+1
   \   0000009A   0CD1               BNE      ??Host_WiFi_Event_4
   9058                      {
   9059                        TextToChange=NET.WiFi.Domena;
   \   0000009C   1A4C               LDR      R4,??Host_WiFi_Event_0+0x10  ;; TextToChangeLength
   \   0000009E   2148               LDR      R0,??Host_WiFi_Event_0+0x2C  ;; NET + 169
   \   000000A0   2065               STR      R0,[R4, #+80]
   9060                        TextToChangeLength=15;
   \   000000A2   0F20               MOVS     R0,#+15
   \   000000A4   2070               STRB     R0,[R4, #+0]
   9061                        TextToChangeMaxPixSize=62;
   \   000000A6   3E20               MOVS     R0,#+62
   \   000000A8   6070               STRB     R0,[R4, #+1]
   9062                        MenuLevel=(MenuLevel*10+1);
   \   000000AA   A06C               LDR      R0,[R4, #+72]
   \   000000AC   0A21               MOVS     R1,#+10
   \   000000AE   4843               MULS     R0,R1,R0
   \   000000B0   401C               ADDS     R0,R0,#+1
   \   000000B2   A064               STR      R0,[R4, #+72]
   \   000000B4   1BE0               B        ??Host_WiFi_Event_2
   9063                      }else if (Button(Speech[g_leng].Zmien,15,5,34,13)==1)
   \                     ??Host_WiFi_Event_4:
   \   000000B6   82B0               SUB      SP,SP,#+8
   \   000000B8   0D20               MOVS     R0,#+13
   \   000000BA   0090               STR      R0,[SP, #+0]
   \   000000BC   2223               MOVS     R3,#+34
   \   000000BE   0522               MOVS     R2,#+5
   \   000000C0   0F21               MOVS     R1,#+15
   \   000000C2   1748               LDR      R0,??Host_WiFi_Event_0+0x28  ;; 0x906
   \   000000C4   2D68               LDR      R5,[R5, #+0]
   \   000000C6   6543               MULS     R5,R4,R5
   \   000000C8   7419               ADDS     R4,R6,R5
   \   000000CA   2018               ADDS     R0,R4,R0
   \   000000CC   ........           BL       Button
   \   000000D0   02B0               ADD      SP,SP,#+8
   \   000000D2   0128               CMP      R0,#+1
   \   000000D4   0BD1               BNE      ??Host_WiFi_Event_2
   9064                      {
   9065                        TextToChange=NET.WiFi.Path;
   \   000000D6   0C4C               LDR      R4,??Host_WiFi_Event_0+0x10  ;; TextToChangeLength
   \   000000D8   1348               LDR      R0,??Host_WiFi_Event_0+0x30  ;; NET + 194
   \   000000DA   2065               STR      R0,[R4, #+80]
   9066                        TextToChangeLength=15;
   \   000000DC   0F20               MOVS     R0,#+15
   \   000000DE   2070               STRB     R0,[R4, #+0]
   9067                        TextToChangeMaxPixSize=62;
   \   000000E0   3E20               MOVS     R0,#+62
   \   000000E2   6070               STRB     R0,[R4, #+1]
   9068                        MenuLevel=(MenuLevel*10+1);
   \   000000E4   A06C               LDR      R0,[R4, #+72]
   \   000000E6   0A21               MOVS     R1,#+10
   \   000000E8   4843               MULS     R0,R1,R0
   \   000000EA   401C               ADDS     R0,R0,#+1
   \   000000EC   A064               STR      R0,[R4, #+72]
   9069                      }
   9070                      
   9071                      
   9072                      
   9073                    
   9074                  }
   9075                   MenuPaint();
   \                     ??Host_WiFi_Event_2:
   \   000000EE   ........           BL       MenuPaint
   9076                    
   9077                
   9078                }//_______________________________________________________________________
   \   000000F2   F8BC               POP      {R3-R7}
   \   000000F4   01BC               POP      {R0}
   \   000000F6   0047               BX       R0               ;; return
   \                     ??Host_WiFi_Event_0:
   \   000000F8   ........           DC32     Y_up
   \   000000FC   ........           DC32     Y_down
   \   00000100   ........           DC32     X_down
   \   00000104   ........           DC32     X_up
   \   00000108   ........           DC32     TextToChangeLength
   \   0000010C   ........           DC32     NET
   \   00000110   31D91300           DC32     0x13d931
   \   00000114   4AD91300           DC32     0x13d94a
   \   00000118   ........           DC32     g_leng
   \   0000011C   ........           DC32     Speech
   \   00000120   06090000           DC32     0x906
   \   00000124   ........           DC32     NET + 169
   \   00000128   ........           DC32     NET + 194

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   D3260000           DC32     0x26d3

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   3E840100           DC32     0x1843e

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   15080000           DC32     0x815

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   E60A0000           DC32     0xae6

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   E9510F00           DC32     0xf51e9

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   71070000           DC32     0x771

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     `?<Constant "Info ">`

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   672B0000           DC32     0x2b67

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     g_leng

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   ........           DC32     Speech

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     `?<Constant "Info ">` + 28

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   98BB0000           DC32     0xbb98

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   ........           DC32     gProg

   \                                 In section .rodata, align 4
   \   00000000   00                 DC8 ""
   \   00000001   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Info ">`:
   \   00000000   496E666F2000       DC8 "Info "
   \   00000006   0000               DC8 0, 0
   \   00000008   4D61783D00         DC8 "Max="
   \   0000000D   000000             DC8 0, 0, 0
   \   00000010   2B2F2D203330       DC8 "+/- 3000 "
   \              30302000    
   \   0000001A   0000               DC8 0, 0
   \   0000001C   526573746172       DC8 "Restart"
   \              7400        
   \   00000024   4D454E5500         DC8 "MENU"
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   50726F677261       DC8 "Program "
   \              6D2000      
   \   00000035   000000             DC8 0, 0, 0
   \   00000038   4D6F64656C3A       DC8 "Model: "
   \              2000        
   \   00000040   4E6F64652049       DC8 "Node ID: "
   \              443A2000    
   \   0000004A   0000               DC8 0, 0
   \   0000004C   5379732E2076       DC8 "Sys. version: "
   \              657273696F6E
   \              3A2000      
   \   0000005B   00                 DC8 0
   \   0000005C   5472616E732E       DC8 "Trans. period: "
   \              20706572696F
   \              643A2000    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Checking Wi-Fi">`:
   \   00000000   436865636B69       DC8 "Checking Wi-Fi"
   \              6E672057692D
   \              466900      
   \   0000000F   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2000               DC8 " "
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant " INFO ">`:
   \   00000000   20494E464F20       DC8 " INFO "
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`:
   \   00000000   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   00000011   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   0000001C   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   0000002B   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \   00000000   4F6E00             DC8 "On"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   4F666600           DC8 "Off"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   0000000C   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   0000001D   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000028   0000E0F8987C       DC8 0, 0, 224, 248, 152, 124, 180, 220, 56, 248, 224, 0, 0, 0, 0, 0, 3
   \              B4DC38F8E000
   \              0000000003  
   \   00000039   030705070303       DC8 3, 7, 5, 7, 3, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000044   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   00000053   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \                     `?<Constant {{128, 192, 192, 128, 128, 224, 128`:
   \   00000000   80C0C08080E0       DC8 128, 192, 192, 128, 128, 224, 128, 224, 128, 224, 128, 128, 128
   \              80E080E08080
   \              80          
   \   0000000D   808080800003       DC8 128, 128, 128, 128, 0, 3, 7, 7, 3, 3, 3, 3, 3, 2, 2, 2, 14, 2, 14
   \              070703030303
   \              030202020E02
   \              0E          
   \   00000020   020E02010000       DC8 2, 14, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000036   0000               DC8 0, 0
   \   00000038   4175746F00         DC8 "Auto"
   \   0000003D   000000             DC8 0, 0, 0
   \   00000040   4175746F206F       DC8 "Auto off"
   \              666600      
   \   00000049   000000             DC8 0, 0, 0
   \   0000004C   4175746F206F       DC8 "Auto on"
   \              6E00        

   \                                 In section .rodata, align 4
   \                     `?<Constant {130, 0}>`:
   \   00000000   82000000           DC8 130, 0, 0, 0
   \   00000004   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \   00000000   2D00               DC8 "-"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2B00               DC8 "+"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {130, 0}>_1`:
   \   00000000   82000000           DC8 130, 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3A00               DC8 ":"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 240, 252, 127, 143, 243, 251, `:
   \   00000000   00F0FC7F8FF3       DC8 0, 240, 252, 127, 143, 243, 251, 251, 251, 227, 131, 3, 7, 15, 14
   \              FBFBFBE38303
   \              070F0E      
   \   0000000F   1E3C78F0E0C0       DC8 30, 60, 120, 240, 224, 192, 128, 0, 0, 0, 128, 192, 224, 240, 112
   \              8000000080C0
   \              E0F070      
   \   0000001E   389CCEEF7703       DC8 56, 156, 206, 239, 119, 3, 3, 3, 227, 255, 255, 31, 7, 31, 254, 252
   \              0303E3FFFF1F
   \              071FFEFC    
   \   0000002E   FCFFFF00FFFF       DC8 252, 255, 255, 0, 255, 255, 255, 255, 255, 255, 255, 254, 248, 48
   \              FFFFFFFFFFFE
   \              F830        
   \   0000003C   300000000001       DC8 48, 0, 0, 0, 0, 1, 3, 39, 183, 182, 183, 183, 123, 253, 254, 254
   \              0327B7B6B7B7
   \              7BFDFEFE    
   \   0000004C   FFFFFF010000       DC8 255, 255, 255, 1, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 255, 255, 1, 63
   \              0000FFFF0000
   \              0000FFFF013F
   \   0000005E   FFF8C73F7F7F       DC8 255, 248, 199, 63, 127, 127, 127, 31, 7, 1, 128, 128, 192, 224, 240
   \              7F1F07018080
   \              C0E0F0      
   \   0000006D   783C1E0F0703       DC8 120, 60, 30, 15, 7, 3, 3, 3, 7, 15, 30, 61, 123, 247, 239, 223, 158
   \              0303070F1E3D
   \              7BF7EFDF9E  
   \   0000007E   B00000001FFF       DC8 176, 0, 0, 0, 31, 255, 252, 192, 128, 224, 255, 255, 0, 0, 1, 3, 3
   \              FCC080E0FFFF
   \              0000010303  
   \   0000008F   070707070707       DC8 7, 7, 7, 7, 7, 7, 3, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              030303010100
   \              000000000000
   \              0000000000  
   \   000000A6   000000000103       DC8 0, 0, 0, 0, 1, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 3, 1, 0
   \              030303070707
   \              070707030100

   \                                 In section .rodata, align 4
   \   00000000   5800               DC8 "X"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \   00000000   4300               DC8 "C"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   4500               DC8 "E"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "060480">`:
   \   00000000   303630343830       DC8 "060480"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   7300               DC8 "s"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3E2000             DC8 "> "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3C2000             DC8 "< "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2E00               DC8 "."
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3000               DC8 "0"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   4F6B2000           DC8 "Ok "

   \                                 In section .rodata, align 4
   \   00000000   432000             DC8 "C "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3F00               DC8 "?"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Alarm">`:
   \   00000000   416C61726D00       DC8 "Alarm"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4E722E3A0000       DC8 78, 114, 46, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \   00000000   56617200           DC8 "Var"

   \                                 In section .rodata, align 4
   \   00000000   2D316800           DC8 "-1h"

   \                                 In section .rodata, align 4
   \   00000000   4F6E2000           DC8 "On "

   \                                 In section .rodata, align 4
   \                     `?<Constant {129, 0}>_1`:
   \   00000000   81000000           DC8 129, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant {78, 114, 58, 0, 0}>`:
   \   00000000   4E723A000000       DC8 78, 114, 58, 0, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \   00000000   3C00               DC8 "<"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3E00               DC8 ">"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2E2E2E00           DC8 "..."

   \                                 In section .rodata, align 4
   \   00000000   3C3E00             DC8 "<>"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Program stop ">`:
   \   00000000   50726F677261       DC8 "Program stop "
   \              6D2073746F70
   \              2000        
   \   0000000E   0000               DC8 0, 0
   \   00000010   50726F677261       DC8 "Program start "
   \              6D2073746172
   \              742000      
   \   0000001F   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4D6173746572       DC8 "Master/Slave "
   \              2F536C617665
   \              2000        
   \   0000001A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4A657A796B00       DC8 "Jezyk"
   \   00000012   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant "060480">_1`:
   \   00000000   303630343830       DC8 "060480"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "------------">`:
   \   00000000   2D2D2D2D2D2D       DC8 "------------"
   \              2D2D2D2D2D2D
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`:
   \   00000000   000000001F00       DC32 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334
   \              00003B000000
   \              5A0000007800
   \              000097000000
   \              B5000000D400
   \              0000F3000000
   \              110100003001
   \              00004E010000

   \                                 In section .rodata, align 4
   \                     `?<Constant {30}>`:
   \   00000000   1E000000           DC8 30, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "On/off">`:
   \   00000000   4F6E2F6F6666       DC8 "On/off"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3A303000           DC8 ":00"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4D6F646500         DC8 "Mode"
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   4D6173746572       DC8 "Master "
   \              2000        
   \   0000001C   536C61766520       DC8 "Slave "
   \              00          
   \   00000023   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   4F4B00             DC8 "OK"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   256400             DC8 "%d"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Node ">`:
   \   00000000   4E6F64652000       DC8 "Node "
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   49642000           DC8 "Id "

   \                                 In section .rodata, align 4
   \                     `?<Constant " ID ">`:
   \   00000000   2049442000         DC8 " ID "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   543100             DC8 "T1"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   543200             DC8 "T2"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3600               DC8 "6"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   313200             DC8 "12"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   313800             DC8 "18"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   323300             DC8 "23"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`:
   \   00000000   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   00000011   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   0000001C   0000E0F8987C       DC8 0, 0, 224, 248, 152, 124, 180, 220, 56, 248, 224, 0, 0, 0, 0, 0, 3
   \              B4DC38F8E000
   \              0000000003  
   \   0000002D   030705070303       DC8 3, 7, 5, 7, 3, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000038   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   00000047   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \   00000000   444900             DC8 "DI"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   444F00             DC8 "DO"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Host">`:
   \   00000000   486F737400         DC8 "Host"
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   2E2E2E2E2E2E       DC8 "...................."
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E00      
   \   0000001D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "TCP/IP">`:
   \   00000000   5443502F4950       DC8 "TCP/IP"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Not connected">`:
   \   00000000   4E6F7420636F       DC8 "Not connected"
   \              6E6E65637465
   \              6400        
   \   0000000E   0000               DC8 0, 0
   \   00000010   436F6E6E6563       DC8 "Connecting"
   \              74696E6700  
   \   0000001B   00                 DC8 0
   \   0000001C   436F6E6E6563       DC8 "Connecting ."
   \              74696E67202E
   \              00          
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   436F6E6E6563       DC8 "Connecting .."
   \              74696E67202E
   \              2E00        
   \   0000003A   0000               DC8 0, 0
   \   0000003C   436F6E6E6563       DC8 "Connecting ..."
   \              74696E67202E
   \              2E2E00      
   \   0000004B   00                 DC8 0
   \   0000004C   436F6E6E6563       DC8 "Connected"
   \              74656400    
   \   00000056   0000               DC8 0, 0
   9079              
   9080                
                       ^
Warning[Pe001]: last line of file ends without a newline

   Maximum stack usage in bytes:

     Function                   .cstack
     --------                   -------
     AddRow                         24
     AdvanceSet_Event               24
     AdvanceSet_Paint               48
     AlarmPassChange_Event          56
     AlarmPassChange_Paint          40
     AlarmPass_Event                48
     AlarmPass_Paint                40
     AlarmPass_Refresh              72
     Alarm_Event                    40
     Alarm_Paint                    64
     Alarm_Refresh                  56
     AnalogGraph_Event              40
     AnalogGraph_Paint              88
     Animation_Event                 8
     BigTemperLabel_Event           40
     BigTemperLabel_Paint           72
     ButtonAction_Event             40
     ButtonAction_Paint             72
     ButtonOptions_Event            32
     ButtonOptions_Paint            64
     CheckChannel                   32
     CleanAll_Event                 24
     CleanReg_Event                 16
     Host_WiFi_Event                40
     Host_WiFi_Paint                64
     Info_Event                      8
     Info_Paint                     56
     Info_Refresh                   40
     LaderChange_Event              32
     LaderChange_Paint              48
     Lader_Event                    40
     Lader_Paint                    72
     MESSAGE                       168
     MESSAGE_Refresh                40
     MainSide_Event                 56
     MainSide_Paint                 88
     MainSide_Refresh              144
     MasterSlave_Event              32
     MasterSlave_Paint              64
     MenuAccessPass_Event           56
     MenuAccessPass_Paint           48
     MenuAccess_Event               32
     MenuAccess_Paint               64
     MenuPaint                       8
     MenuRefresh                    16
     MenuSide_Event                 24
     MenuSide_Paint                 48
     Net_Event                      24
     Net_Paint                      48
     NeuronNrChange_Evant           48
     NeuronNrChange_Paint           64
     NeuronsList_Event              32
     NeuronsList_Paint              72
     NeuronsList_Refresh            40
     NodeStanIO_Event               24
     NodeStanIO_Paint               56
     NodeStanIO_Refresh             64
     NodeTestTrans_Event            24
     NodeTestTrans_Paint            80
     NodeTestTrans_Refresh          48
     Node_Event                     40
     Node_Paint                     56
     Options_Event                  32
     Options_Paint                  48
     PaintProc                      56
     Procedure_Event                40
     Procedure_Paint                96
     Punkt_dostepuWiFi_Event        40
     Punkt_dostepuWiFi_Paint        64
     RF_Channel_Event               48
     RF_Channel_Paint               72
     RF_Channel_Refresh             72
     RemRow                         16
     RemRow_Event                   16
     RemRow_Paint                    8
     Restart_Event                   8
     SaveChanges_Evant              16
     ScreenAlarmSet_Event           48
     ScreenAlarmSet_Paint           72
     ScreenDesign1_Event            48
     ScreenDesign1_Paint            48
     ScreenEvent                     8
     ScreenGraph                    64
     ScreenSet_Event                40
     ScreenSet_Paint                96
     ScreenSever_Event              40
     ScreenSever_Paint              72
     ScreenTimetableSet_Event       40
     ScreenTimetableSet_Paint       80
     SetTouchScreen_Event           40
     SetTouchScreen_Paint           48
     SetupLang_Event                32
     SetupLang_Paint                64
     SetupNewPass_Event             48
     SetupNewPass_Paint             40
     SetupOldPass_Event             56
     SetupOldPass_Paint             40
     SetupPass_Event                32
     SetupPass_Paint                64
     SetupTime_Event                56
     SetupTime_Paint                72
     SetupTime_Refresh              48
     Setup_Event                    32
     Setup_Paint                    64
     StartAnimation_Event            8
     StartAnimation_Paint           32
     Sygnal_Event                   32
     Sygnal_Paint                   48
     Termostat_Event                64
     Termostat_Paint               128
     Termostat_Refresh              56
     TextChange_Evant               80
     TextChange_Paint               64
     TextChange_Refresh             64
     ThermostatAutoSet_Event        48
     ThermostatAutoSet_Paint        72
     ThermostatChartSet_Event       48
     ThermostatChartSet_Paint       80
     ThermostatChartSet_Refresh     48
     ThermostatSet_Event            48
     ThermostatSet_Paint            80
     TimetableSet_Event             40
     TimetableSet_Paint             80
     Timetable_Event                64
     Timetable_Paint                96
     UstawSiec_Event                24
     UstawSiec_Paint                48
     ValueChange_Evant              48
     ValueChange_Paint              64
     Wait_Paint                    200
     WiFiConecting_Paint            56
     WiFiConecting_Refresh          40
     WybProc                        24
     ZoneButon                      48
     ZoneGraph                      56
     ZoneGraph_Event                40
     ZoneGraph_Paint                80
     dzienTygodnia                  64
     przestepny                      8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2
                                    1224
     ProcTMRS_graf                    28
     ProcConstAnal_graf               56
     BateriaWyladowana                12
     Frame                            24
     MainSide_puls                     1
     wartosc_tmp                       4
     text_label_tmp                   12
     Label_move                        1
     Suw_poz_IO                        4
     Suw_poz_analog                    4
     Suw_poz_dwustan                   4
     Suw_poz_monit                     4
     CyklMonit                         1
     Monitoring_array                240
     Monit_Size_scroll                 4
     MenuPaint                      1040
     ScreenEvent                    1024
     MenuRefresh                     428
     InitPointer                       3
     StartAnimation_Paint            356
     StartAnimation_Event             52
     CheckChannel                    152
     MainSide_Paint                  720
     MESSAGE                         564
     MESSAGE_Refresh                 156
     MainSide_Event                  652
     MainSide_Refresh               1404
     Termostat_Paint                 548
     Termostat_Event                 840
     Termostat_Refresh               492
     Timetable_Paint                 612
     Timetable_Event                 860
     TimetableSet_Paint              596
     TimetableSet_Event              560
     Wait_Paint                       56
     Animation_Event                  56
     AdvanceSet_Paint                 88
     AdvanceSet_Event                124
     CleanAll_Event                  212
     MenuSide_Paint                  104
     MenuSide_Event                  116
     MenuAccess_Paint                132
     MenuAccess_Event                232
     InsertPass1                      24
     MenuAccessPass_Paint            148
     MenuAccessPass_Event            604
     PaintProc                      3740
     Lader_Paint                     516
     Lader_Event                     760
     WybProc                         100
     Procedure_Paint                3204
     Procedure_Event                2948
     VCTT_ill                         12
     ValueChange_Paint               408
     ValueChange_Evant               820
     ptxt                              4
     LaderChange_Paint                80
     LaderChange_Event               160
     AddRow                          176
     RemRow                          148
     RemRow_Paint                    128
     RemRow_Event                    104
     SaveChanges_Evant               168
     ScreenSet_Paint                 548
     ScreenSet_Event                 380
     ThermostatSet_Paint             688
     ThermostatSet_Event             628
     ScreenTimetableSet_Paint        740
     ScreenTimetableSet_Event        588
     ScreenAlarmSet_Paint            648
     ScreenAlarmSet_Event            580
     ZoneButon                       218
     ZoneGraph                       544
     ScreenGraph                     792
     ScreenDesign1_Paint             592
     ScreenDesign1_Event             672
     ButtonOptions_Paint             128
     ButtonOptions_Event             156
     ButtonAction_Paint              324
     ButtonAction_Event              360
     BigTemperLabel_Paint            336
     BigTemperLabel_Event            372
     ZoneGraph_Paint                1532
     ZoneGraph_Event                1080
     ?<Constant {0, 0}>              588
     ?<Constant {129, 0}>           2092
     abc                               4
     DeyOfWeekLongStr                192
     ?<Constant "Firmware: ">        140
     TouchTestSor                      8
     Klepsydra                         8
     TextChange_Paint                400
     TextChange_Refresh              240
     count                             2
     LastText_EventTime                8
     TextChange_Evant               1224
     AnalogGraph_Paint              1008
     AnalogGraph_Event               664
     Options_Paint                   152
     Options_Event                   140
     Setup_Paint                     248
     Setup_Event                     220
     SetupLang_Paint                 116
     SetupLang_Event                 136
     SetupPass_Paint                 172
     SetupPass_Event                 272
     SetupOldPass_Paint              136
     SetupOldPass_Event              440
     SetupNewPass_Paint              136
     SetupNewPass_Event              436
     SetTouchScreen_Paint            436
     SetTouchScreen_Event            504
     Restart_Event                   100
     CleanReg_Event                  104
     SetupTime_Paint                 740
     SetupTime_Refresh               356
     przestepny                       58
     dzienTygodnia                   132
     SetupTime_Event                 924
     ScreenSever_Paint               548
     ScreenSever_Event               428
     MasterSlave_Paint               100
     MasterSlave_Event               424
     RF_Channel_nr_tmp                 2
     InsertOldPass1                   24
     SetTouchStep                     36
     RF_Channel_Paint                428
     RF_Channel_Refresh              332
     RF_Channel_Event                556
     Sygnal_Paint                     84
     Sygnal_Event                    116
     NeuronsList_Paint               660
     wpistmp                           4
     NeuronsList_Event               788
     NeuronsList_Refresh             776
     Dzielnik20                        1
     NeuronNrChange_Paint            352
     NeuronNrChange_Evant            548
     Info_Paint                      436
     Info_Refresh                    120
     IRdiv                             4
     Info_Event                       64
     ThermostatAutoSet_Paint        1104
     ThermostatAutoSet_Event         700
     ThermostatChartSet_Paint        524
     ThermostatChartSet_Event        472
     ThermostatChartSet_Refresh      136
     ThermHourModyfi                   2
     Alarm_Paint                     172
     Alarm_Event                     252
     Alarm_Refresh                   208
     TextToChangeLength             1172
     ScrollMenu_poz                    4
     ScrollMenu_Paint_exist            4
     SetupTimeCarPoz                   2
     SetTimeCell                       1
     AlarmPass_Paint                 112
     AlarmPass_Event                 452
     AlarmPass_Refresh               280
     AlarmPassChange_Paint           164
     AlarmPassChange_Event           492
     Node_Paint                      124
     Node_Event                      252
     NodeTestTrans_Paint             392
     NodeTestTrans_Event             108
     NodeTestTrans_Refresh           172
     Dziel8                            1
     NodeStanIO_Paint                196
     NodeStanIO_Event                 96
     NodeStanIO_Refresh              564
     Dziel5                            1
     Net_Paint                        84
     Net_Event                       116
     UstawSiec_Paint                  84
     UstawSiec_Event                 116
     Punkt_dostepuWiFi_Paint         344
     Punkt_dostepuWiFi_Event         296
     WiFiConecting_Paint              80
     WiFiConecting_Refresh           472
     licz                              2
     Host_WiFi_Paint                 448
     Host_WiFi_Event                 300
     ??DataTable0                      4
     ??DataTable1                      4
     ??DataTable2                      4
     ??DataTable3                      4
     ??DataTable4                      4
     ??DataTable9                      4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable27                     4
     ??DataTable28                     4
     ??DataTable29                     4
     ??DataTable32                     4
     ??DataTable33                     4
     ?<Constant "">                    4
     ?<Constant "Info ">             108
     ?<Constant "Checking Wi-Fi">     16
     ?<Constant " ">                   4
     ?<Constant " INFO ">              8
     ?<Constant {{0, 0, 224, 24, 232, 244, 244, 244
                                      56
     ?<Constant "On">                  4
     ?<Constant "Off">                 4
     ?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>
                                      96
     ?<Constant {{128, 192, 192, 128, 128, 224, 128
                                      84
     ?<Constant {130, 0}>             16
     ?<Constant "-">                   4
     ?<Constant "+">                   4
     ?<Constant {130, 0}>_1            4
     ?<Constant ":">                   4
     ?<Constant {{0, 240, 252, 127, 143, 243, 251,
                                     184
     ?<Constant "X">                   4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1
                                      12
     ?<Constant "C">                   4
     ?<Constant "E">                   4
     ?<Constant "060480">              8
     ?<Constant "s">                   4
     ?<Constant "> ">                  4
     ?<Constant "< ">                  4
     ?<Constant ".">                   4
     ?<Constant "0">                   4
     ?<Constant "Ok ">                 4
     ?<Constant "C ">                  4
     ?<Constant "?">                   4
     ?<Constant "Alarm">               8
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3
                                      20
     ?<Constant "Var">                 4
     ?<Constant "-1h">                 4
     ?<Constant "On ">                 4
     ?<Constant {129, 0}>_1            4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4
                                      12
     ?<Constant {78, 114, 58, 0, 0}>
                                       8
     ?<Constant "<">                   4
     ?<Constant ">">                   4
     ?<Constant "...">                 4
     ?<Constant "<>">                  4
     ?<Constant "Program stop ">      32
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5
                                      28
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6
                                      20
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7
                                      12
     ?<Constant "060480">_1            8
     ?<Constant "------------">       16
     ?<Constant {0, 31, 59, 90, 120, 151, 181, 212,
                                      48
     ?<Constant {30}>                  4
     ?<Constant "On/off">              8
     ?<Constant ":00">                 4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8
                                      36
     ?<Constant "OK">                  4
     ?<Constant "%d">                  4
     ?<Constant "Node ">               8
     ?<Constant "Id ">                 4
     ?<Constant " ID ">                8
     ?<Constant "T1">                  4
     ?<Constant "T2">                  4
     ?<Constant "6">                   4
     ?<Constant "12">                  4
     ?<Constant "18">                  4
     ?<Constant "23">                  4
     ?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2
                                      84
     ?<Constant "DI">                  4
     ?<Constant "DO">                  4
     ?<Constant "Host">               32
     ?<Constant "TCP/IP">              8
     ?<Constant "Not connected">      88
      Others                          64

 
    409 bytes in section .bss
  1 183 bytes in section .data
  5 608 bytes in section .rodata
 63 976 bytes in section Debug.txt
 
 63 912 bytes of CODE  memory (+ 64 bytes shared)
  5 608 bytes of CONST memory
  1 592 bytes of DATA  memory

Errors: none
Warnings: 78
