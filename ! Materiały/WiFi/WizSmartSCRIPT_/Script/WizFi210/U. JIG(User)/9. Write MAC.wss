;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
UXMessageText(1, "Working...")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

UXConsoleText(3, "[Insert static ip address into UserData1 and gateway into UserData2. (ex:192.168.3.99, 192.168.3.1)]", 0, 1, 1);
UXConsoleText(3, "[Insert MAC Address into UserData5. (ex:00:08:dc:17:3f:00)]", 0, 0, 1);

ifTRUE CompareString("@USERDATA5", "")
{
	UXConsoleText(2, "[Invalid Userdata Error]", 0, 1, 1);
	goto TEST-ERROR
}


ifFALSE SerialPortOpen(@COM, @BAUD, 0)
{
	UXConsoleText(2, "[SerialPortOpen Error]", 0, 1, 1)
	goto TEST-ERROR
}
SerialStartMonitor(@COM)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
UXConsoleText(4, "", 0, 0, 1)
UXConsoleText(4, "Write the MAC address to the module", 0, 1, 1)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

SerialClearBuffer(@COM)
MakeString(#SParam11, "AT+NMAC=@USERDATA5")
SerialSendString(@COM, #SParam11, 2)
ifFALSE SerialFindString(@COM, "OK", "", 100, 30)
{
	UXConsoleText(2, "[Serial Command Error]", 0, 1, 1);
	goto TEST-ERROR
}
Sleep(1)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
:TEST-OK
UXMessageText(1, "OK")
goto TEST-END

:TEST-ERROR
UXMessageText(2, "Error")

:TEST-END
Sleep(10)
SerialPortClose(@COM)
Sleep(10)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
