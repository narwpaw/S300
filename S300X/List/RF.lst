###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           04/Jul/2012  21:50:40 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\Framework\RF.c                                #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\Framework\RF.c" -D AT91SAM7S256 -D            #
#                    AT91SAM7SEK -D iH -D __ALARM -D __WIFI_MODULE -lC        #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\S300X\List\" --diag_suppress Pa082 -o         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\S300X\Obj\" --no_unroll --no_inline           #
#                    --no_tbaa --no_scheduling --debug --endian little --cpu  #
#                    ARM7TDMI -e --fpu None --dlib_config "C:\Program         #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    5.0\ARM\INC\DLib_Config_Normal.h" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v0.6 - 18.05.2012\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v0.6 - 18.05.2012\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v0.6 - 18.05.2012\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\Framework\Configuration\" -I "C:\Program      #
#                    Files\IAR Systems\Embedded Workbench 5.0\ARM\INC\"       #
#                    --section .text=Debug.txt --interwork --cpu_mode thumb   #
#                    -Om                                                      #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\S300X\List\RF.lst                             #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\S300X\Obj\RF.o                                #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\RF.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                  Microcontroller Software Support                        *//                       
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : RF.c                                     *//
      7          //*  Opis                         : Plik obs³ugi sprzêtowej komunikacji radiowej *//
      8          //*  Autor                        : Pawe³ Narwojsz                           *//
      9          //*  Data utrzorzenia             : 31.06.2010                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*// 
     19          //****************************************************************************//
     20          //****************************************************************************//
     21          
     22          
     23          
     24                #include "RF.h"   
     25                #include "RF_Exe.h"
     26                #include <intrinsics.h>
     27                #include "Framework.h"

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_AIC_EnableIt(AT91PS_AIC, unsigned int)
   \                     AT91F_AIC_EnableIt:
   \   00000000   9022               MOVS     R2,#+144
   \   00000002   5200               LSLS     R2,R2,#+1        ;; #+288
   \   00000004   0123               MOVS     R3,#+1
   \   00000006   8B40               LSLS     R3,R3,R1
   \   00000008   8350               STR      R3,[R0, R2]
   \   0000000A   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PIO_CfgInput(AT91PS_PIO, unsigned int)
   \                     AT91F_PIO_CfgInput:
   \   00000000   4161               STR      R1,[R0, #+20]
   \   00000002   0160               STR      R1,[R0, #+0]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PIO_InterruptEnable(AT91PS_PIO, unsigned int)
   \                     AT91F_PIO_InterruptEnable:
   \   00000000   0164               STR      R1,[R0, #+64]
   \   00000002   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PMC_EnablePeriphClock(AT91PS_PMC, unsigned int)
   \                     AT91F_PMC_EnablePeriphClock:
   \   00000000   0161               STR      R1,[R0, #+16]
   \   00000002   7047               BX       LR               ;; return
     28                #include "core/device.h"   
     29                #include "board.h"   
     30                #include "spi_main.h"
     31                #include "core/trace.h"
     32                #include "InterruptPriority.h"

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline
     33          
     34          
     35          
     36          
     37          

   \                                 In section .bss, align 4
     38          _RF_Rx RF_Rx;
   \                     RF_Rx:
   \   00000000                      DS8 24
     39          _RF_Tx RF_Tx;
     40          
     41          char SPI_RFM12_Read=0;
     42          

   \                                 In section .rodata, align 4
     43          const char Preambu[]={0xAA, 0xAA, 0xAA};  //Preambu³a
   \                     Preambu:
   \   00000000   AAAAAA00           DC8 170, 170, 170, 0

   \                                 In section .rodata, align 4
     44          const char SynKay[]= {0x2D, 0xD4};        //s³owo synchronizacyjne
   \                     SynKay:
   \   00000000   2DD40000           DC8 45, 212, 0, 0
     45          
     46          
     47          
     48          
     49          
     50          
     51          
     52          
     53          
     54          
     55          
     56          //Zmienne globalne -------------------------------------------------------------
     57            _RF_Status RF_Status;
     58          //___________________________Koniec zmiennych globalnych________________________
     59          
     60          
     61            extern unsigned long long  g_counter;
     62            extern char g_RF_TimeOutCounter;
     63            
     64           char tmp_int=0;
     65            
     66          //Tworzenie pse³do-klasy RF_Status --------------------------------------------
     67              
     68            //Uruchomienie trybu Nadajnika

   \                                 In section Debug.txt, align 4, keep-with-next
     69            void _RF_EnableTX(void)
     70            {
   \                     _RF_EnableTX:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
     71              RF_Status.EnRx=0;
   \   00000002   ....               LDR      R4,??DataTable12  ;; RF_Status
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   6070               STRB     R0,[R4, #+1]
     72              RF_Status.EnTx=0;
   \   00000008   A070               STRB     R0,[R4, #+2]
     73              RF_Status.Transmit=0;
   \   0000000A   2072               STRB     R0,[R4, #+8]
     74              RF_Tx.BytesToSend=0;
   \   0000000C   ....               LDR      R1,??DataTable10  ;; RF_Tx + 20
   \   0000000E   0870               STRB     R0,[R1, #+0]
     75              RF_Status.EnRxWait=0;
   \   00000010   A072               STRB     R0,[R4, #+10]
     76              RF_Status.RxStarting=0;
   \   00000012   A071               STRB     R0,[R4, #+6]
     77              RF_Status.TxStarting=1;
   \   00000014   0125               MOVS     R5,#+1
   \   00000016   2800               MOVS     R0,R5
   \   00000018   6071               STRB     R0,[R4, #+5]
     78          
     79              SPI_SendWord(0x8219,Cs_RF);                          //wy³¹cz odbiornik/nadajnik
                     ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000001A   0221               MOVS     R1,#+2
   \   0000001C   ....               LDR      R0,??DataTable2  ;; 0x8219
   \   0000001E   ........           BL       SPI_SendWord
     80              RF_Status.InitTx=1;
   \   00000022   E570               STRB     R5,[R4, #+3]
     81          
     82              AT91C_BASE_PIOA->PIO_SODR =TxPin; 
                                                ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000024   0348               LDR      R0,??_RF_EnableTX_0  ;; 0xfffff430
   \   00000026   8021               MOVS     R1,#+128
   \   00000028   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   0000002A   0160               STR      R1,[R0, #+0]
     83            }
   \   0000002C   38BC               POP      {R3-R5}
   \   0000002E   01BC               POP      {R0}
   \   00000030   0047               BX       R0               ;; return
   \   00000032   C046               Nop      
   \                     ??_RF_EnableTX_0:
   \   00000034   30F4FFFF           DC32     0xfffff430
     84          
     85            //Uruchomienie trybu odbiornika

   \                                 In section Debug.txt, align 4, keep-with-next
     86            void _RF_EnableRX(void)
     87            {
   \                     _RF_EnableRX:
   \   00000000   10B5               PUSH     {R4,LR}
     88              //Je¿eli przy prubie prze³¹czenia wysy³ane s¹ dane to poczekaj na zakoñczenie wysy³ki
     89              if ((RF_Tx.BytesToSend>0)) 
   \   00000002   ....               LDR      R4,??DataTable13  ;; RF_Tx
   \   00000004   207D               LDRB     R0,[R4, #+20]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   03D0               BEQ      ??_RF_EnableRX_0
     90              {
     91                RF_Status.EnRxWait=1; 
   \   0000000A   0C48               LDR      R0,??_RF_EnableRX_1  ;; RF_Status + 10
   \   0000000C   0121               MOVS     R1,#+1
   \   0000000E   0170               STRB     R1,[R0, #+0]
   \   00000010   10E0               B        ??_RF_EnableRX_2
     92              }else{
     93                
     94                
     95                SPI_SendWord(0x8067,Cs_RF); 
                       ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??_RF_EnableRX_0:
   \   00000012   0221               MOVS     R1,#+2
   \   00000014   ....               LDR      R0,??DataTable14  ;; 0x8067
   \   00000016   ........           BL       SPI_SendWord
     96                
     97                RF_Status.EnTx=0;
   \   0000001A   ....               LDR      R0,??DataTable12  ;; RF_Status
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   8170               STRB     R1,[R0, #+2]
     98                RF_Status.EnRx=0;
   \   00000020   4170               STRB     R1,[R0, #+1]
     99                RF_Tx.BytesToSend=0;
   \   00000022   2175               STRB     R1,[R4, #+20]
    100                RF_Status.Transmit=0;
   \   00000024   0172               STRB     R1,[R0, #+8]
    101                RF_Status.TxStarting=0;
   \   00000026   4171               STRB     R1,[R0, #+5]
    102                RF_Status.RxStarting=1;
   \   00000028   0121               MOVS     R1,#+1
   \   0000002A   8171               STRB     R1,[R0, #+6]
    103                
    104                SPI_SendWord(0x8299,Cs_RF);
   \   0000002C   0221               MOVS     R1,#+2
   \   0000002E   ....               LDR      R0,??DataTable6  ;; 0x8299
   \   00000030   ........           BL       SPI_SendWord
    105          
    106          
    107          
    108          
    109              }
    110            }
   \                     ??_RF_EnableRX_2:
   \   00000034   10BC               POP      {R4}
   \   00000036   01BC               POP      {R0}
   \   00000038   0047               BX       R0               ;; return
   \   0000003A   C046               Nop      
   \                     ??_RF_EnableRX_1:
   \   0000003C   ........           DC32     RF_Status + 10
    111          
    112            //Konstruktor RF_Status

   \                                 In section Debug.txt, align 4, keep-with-next
    113            void _pRF_Status(void)
    114            {
    115              RF_Status.EnableTX = _RF_EnableTX;
   \                     _pRF_Status:
   \   00000000   ....               LDR      R0,??DataTable12  ;; RF_Status
   \   00000002   0249               LDR      R1,??_pRF_Status_0  ;; _RF_EnableTX
   \   00000004   8161               STR      R1,[R0, #+24]
    116              RF_Status.EnableRX = _RF_EnableRX; 
   \   00000006   0249               LDR      R1,??_pRF_Status_0+0x4  ;; _RF_EnableRX
   \   00000008   C161               STR      R1,[R0, #+28]
    117            }
   \   0000000A   7047               BX       LR               ;; return
   \                     ??_pRF_Status_0:
   \   0000000C   ........           DC32     _RF_EnableTX
   \   00000010   ........           DC32     _RF_EnableRX
    118          
    119          //________koniec tworzenia pse³do-klasy RF_Status _______________________________
    120          
    121          
    122          
    123          
    124          
    125          

   \                                 In section Debug.txt, align 4, keep-with-next
    126          void InitRF_Interrupt(void)
    127          {
   \                     InitRF_Interrupt:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    128              AT91F_PIO_CfgInput(IR_PIO_BUS, RfIntBUS);
   \   00000002   ....               LDR      R4,??DataTable11  ;; 0xfffff400
   \   00000004   8025               MOVS     R5,#+128
   \   00000006   ED00               LSLS     R5,R5,#+3        ;; #+1024
   \   00000008   2900               MOVS     R1,R5
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   ........           BL       AT91F_PIO_CfgInput
    129              AT91F_PIO_InterruptEnable(PIO_RfIntBUS, RfIntBUS);
   \   00000010   2900               MOVS     R1,R5
   \   00000012   2000               MOVS     R0,R4
   \   00000014   ........           BL       AT91F_PIO_InterruptEnable
    130              AT91F_AIC_EnableIt(AT91C_BASE_AIC, ID_RfIntBUS);
   \   00000018   0221               MOVS     R1,#+2
   \   0000001A   0348               LDR      R0,??InitRF_Interrupt_0  ;; 0xfffff000
   \   0000001C   ........           BL       AT91F_AIC_EnableIt
    131          }
   \   00000020   38BC               POP      {R3-R5}
   \   00000022   01BC               POP      {R0}
   \   00000024   0047               BX       R0               ;; return
   \   00000026   C046               Nop      
   \                     ??InitRF_Interrupt_0:
   \   00000028   00F0FFFF           DC32     0xfffff000
    132          
    133            
    134            
    135          
    136          

   \                                 In section Debug.txt, align 4, keep-with-next
    137          void RF_Int(void)
    138          {
   \                     RF_Int:
   \   00000000   01B5               PUSH     {R0,LR}
    139            
    140              
    141              //je¿eli uka³d dzia³a jako odbiornik
    142              if (RF_Status.EnRx) 
   \   00000002   ....               LDR      R0,??DataTable12  ;; RF_Status
   \   00000004   4178               LDRB     R1,[R0, #+1]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   06D0               BEQ      ??RF_Int_0
    143              {
    144                if (RF_Status.Init==0) 
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   1CD1               BNE      ??RF_Int_1
    145                {
    146                  SPI_SendWord(0x0000,Cs_RF);
                         ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000010   0221               MOVS     R1,#+2
   \   00000012   ........           BL       SPI_SendWord
   \   00000016   18E0               B        ??RF_Int_1
    147                }
    148              }
    149              //je¿eli uka³d dzia³a jako nadajnik
    150              else if ((RF_Status.EnTx) && (RF_Status.Transmit==1))  
   \                     ??RF_Int_0:
   \   00000018   8178               LDRB     R1,[R0, #+2]
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   15D0               BEQ      ??RF_Int_1
   \   0000001E   017A               LDRB     R1,[R0, #+8]
   \   00000020   0129               CMP      R1,#+1
   \   00000022   12D1               BNE      ??RF_Int_1
    151              {
    152          
    153                
    154                if (RF_Tx.BytesToSend>0) 
   \   00000024   ....               LDR      R1,??DataTable10  ;; RF_Tx + 20
   \   00000026   0978               LDRB     R1,[R1, #+0]
   \   00000028   0029               CMP      R1,#+0
   \   0000002A   02D0               BEQ      ??RF_Int_2
    155                {    
    156                  RF_transmit();
   \   0000002C   ........           BL       RF_transmit
   \   00000030   0BE0               B        ??RF_Int_1
    157                }
    158                else if (RF_Status.EnRxWait)
   \                     ??RF_Int_2:
   \   00000032   817A               LDRB     R1,[R0, #+10]
   \   00000034   0029               CMP      R1,#+0
   \   00000036   07D0               BEQ      ??RF_Int_3
    159                {
    160                  RF_Status.Transmit=0;
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   0A00               MOVS     R2,R1
   \   0000003C   0272               STRB     R2,[R0, #+8]
    161                  RF_Status.EnRxWait=0;
   \   0000003E   8172               STRB     R1,[R0, #+10]
    162                  RF_Status.EnableRX();
   \   00000040   C069               LDR      R0,[R0, #+28]
   \   00000042   ........           BL       __iar_via_R0
   \   00000046   00E0               B        ??RF_Int_1
    163                }
    164                else
    165                {
    166                   RF_Status.Transmit=0; 
   \                     ??RF_Int_3:
   \   00000048   0172               STRB     R1,[R0, #+8]
    167                }
    168              }
    169           
    170          
    171          }//_____________________________________________________________________________
   \                     ??RF_Int_1:
   \   0000004A   08BC               POP      {R3}
   \   0000004C   01BC               POP      {R0}
   \   0000004E   0047               BX       R0               ;; return
    172          //
    173          
    174          
    175          
    176          
    177          
    178          
    179          

   \                                 In section Debug.txt, align 4, keep-with-next
    180          void ConfigureRFBus(void)
    181          {
   \                     ConfigureRFBus:
   \   00000000   01B5               PUSH     {R0,LR}
    182          #if !defined(IR_RF_DEF)
    183              AT91F_PMC_EnablePeriphClock(AT91C_BASE_PMC, 1 << ID_RfIntBUS);
   \   00000002   0421               MOVS     R1,#+4
   \   00000004   0548               LDR      R0,??ConfigureRFBus_0  ;; 0xfffffc00
   \   00000006   ........           BL       AT91F_PMC_EnablePeriphClock
    184              AT91F_PIO_CfgInput(IR_PIO_BUS, RfIntBUS);
   \   0000000A   8021               MOVS     R1,#+128
   \   0000000C   C900               LSLS     R1,R1,#+3        ;; #+1024
   \   0000000E   ....               LDR      R0,??DataTable11  ;; 0xfffff400
   \   00000010   ........           BL       AT91F_PIO_CfgInput
    185              
    186          #endif
    187          }
   \   00000014   08BC               POP      {R3}
   \   00000016   01BC               POP      {R0}
   \   00000018   0047               BX       R0               ;; return
   \   0000001A   C046               Nop      
   \                     ??ConfigureRFBus_0:
   \   0000001C   00FCFFFF           DC32     0xfffffc00

   \                                 In section .bss, align 4
   \                     RF_Tx:
   \   00000000                      DS8 24
    188          
    189          
    190          
    191          
    192          char IntCA81Flag=0;
   \                     IntCA81Flag:
   \   00000018                      DS8 1

   \                                 In section .bss, align 1
   \                     SPI_RFM12_Read:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   \                     RF_Status:
   \   00000000                      DS8 32

   \                                 In section .bss, align 1
   \                     tmp_int:
   \   00000000                      DS8 1
    193          

   \                                 In section Debug.txt, align 4, keep-with-next
    194          void RF_Init(void)
    195          { 
   \                     RF_Init:
   \   00000000   10B5               PUSH     {R4,LR}
    196            #ifndef RF_Int_Init_DEF
    197            
    198            TRACE_INFO("RF_Init \n\r"); 
    199            
    200                //ustawienia pocz¹tkowe uk³adu
    201                RF_Status.RF_Status = _pRF_Status;
   \   00000002   ....               LDR      R4,??DataTable12  ;; RF_Status
   \   00000004   0B48               LDR      R0,??RF_Init_0   ;; _pRF_Status
   \   00000006   6061               STR      R0,[R4, #+20]
    202                RF_Status.RF_Status();  //konstruktor pse³do-klasy RF_Status
   \   00000008   ........           BL       _pRF_Status
    203                  
    204                
    205                
    206                      RF_Status.EnTx=0;
    207                RF_Status.EnRx=0;
    208                RF_Tx.BytesToSend=0;
    209                RF_Status.Transmit=0;
    210                RF_Status.TxStarting=0;
    211                RF_Status.RxStarting=0;
    212                    RF_Status.EnRx=0;
    213              RF_Status.EnTx=0;
    214              RF_Status.Transmit=0;
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   2072               STRB     R0,[R4, #+8]
    215              RF_Tx.BytesToSend=0;
   \   00000010   ....               LDR      R1,??DataTable13  ;; RF_Tx
   \   00000012   0875               STRB     R0,[R1, #+20]
    216              RF_Status.EnRxWait=0;
   \   00000014   A072               STRB     R0,[R4, #+10]
    217              RF_Status.RxStarting=0;
   \   00000016   A071               STRB     R0,[R4, #+6]
    218              RF_Status.TxStarting=0;
   \   00000018   6071               STRB     R0,[R4, #+5]
    219                
    220                  
    221              //Konfiguracja wstêpna
    222                  #ifdef RF_Master 
    223                        RF_Status.EnTx=1; 
    224                        RF_Status.EnRx=0; 
    225                  #else   
    226                        RF_Status.EnRx=1;
   \   0000001A   0122               MOVS     R2,#+1
   \   0000001C   1300               MOVS     R3,R2
   \   0000001E   6370               STRB     R3,[R4, #+1]
    227                        RF_Status.EnTx=0; 
   \   00000020   A070               STRB     R0,[R4, #+2]
    228                  #endif
    229                
    230             
    231                        
    232                  
    233                  IntCA81Flag=0;
   \   00000022   0876               STRB     R0,[R1, #+24]
    234                  RF_Status.Init=1;
   \   00000024   2270               STRB     R2,[R4, #+0]
    235                  SPI_SendWord(0x8067,Cs_RF); //EL,EF,868band,12.0pF   - pierwszy rozkaz konfiguracji
                         ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000026   0221               MOVS     R1,#+2
   \   00000028   ....               LDR      R0,??DataTable14  ;; 0x8067
   \   0000002A   ........           BL       SPI_SendWord
    236          
    237              
    238                 // AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;  
    239                 //ButtonBipCounter=g_counter+1;
    240            
    241                  
    242             #endif
    243          }//_____________________________________________________________________________
   \   0000002E   10BC               POP      {R4}
   \   00000030   01BC               POP      {R0}
   \   00000032   0047               BX       R0               ;; return
   \                     ??RF_Init_0:
   \   00000034   ........           DC32     _pRF_Status
    244          
    245          
    246          
    247          
    248          
    249          
    250          
    251          
    252          
    253          
    254          
    255          
    256          
    257          
    258          

   \                                 In section .data, align 1
    259          char CountVal=16;
   \                     CountVal:
   \   00000000   10                 DC8 16

   \                                 In section Debug.txt, align 4, keep-with-next
    260          void SPI_RFM12_Execute(char *Buffer_Tx, char *Buffer_Rx)                                       
    261          {
   \                     SPI_RFM12_Execute:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0E00               MOVS     R6,R1
    262              int Order=  Buffer_Tx[0] | Buffer_Tx[1]<<8;
   \   00000004   0178               LDRB     R1,[R0, #+0]
   \   00000006   4078               LDRB     R0,[R0, #+1]
   \   00000008   0402               LSLS     R4,R0,#+8
   \   0000000A   0C43               ORRS     R4,R4,R1
    263          
    264              
    265              //Je¿eli uk³ad RF12 w trakcie inicjalizacji pierwotnej---------------------
    266              
    267          
    268          
    269              
    270              
    271              if (RF_Status.Init)
   \   0000000C   A24D               LDR      R5,??SPI_RFM12_Execute_0  ;; RF_Status
   \   0000000E   2878               LDRB     R0,[R5, #+0]
   \   00000010   0028               CMP      R0,#+0
   \   00000012   00D1               BNE      .+4
   \   00000014   C7E0               B        ??SPI_RFM12_Execute_1
    272              {
    273                         
    274                if (Order==0x8067) 
   \   00000016   A148               LDR      R0,??SPI_RFM12_Execute_0+0x4  ;; 0x8067
   \   00000018   8442               CMP      R4,R0
   \   0000001A   0FD1               BNE      ??SPI_RFM12_Execute_2
    275                //{ if (RF_Status.EnRx)  RF_Status.EnableRX(); else RF_Status.EnableTX(); } //Rozkaz: 0x80E7 - EL,EF,868band,12.0pF 
    276                { SPI_SendWord(0x8219,Cs_RF); 
                         ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000001C   0221               MOVS     R1,#+2
   \   0000001E   A048               LDR      R0,??SPI_RFM12_Execute_0+0x8  ;; 0x8219
   \   00000020   ........           BL       SPI_SendWord
    277                 if (RF_Status.EnRx)  SPI_SendWord(0x8299,Cs_RF); else SPI_SendWord(0x8239,Cs_RF); 
   \   00000024   6878               LDRB     R0,[R5, #+1]
   \   00000026   0028               CMP      R0,#+0
   \   00000028   04D0               BEQ      ??SPI_RFM12_Execute_3
   \   0000002A   0221               MOVS     R1,#+2
   \   0000002C   9D48               LDR      R0,??SPI_RFM12_Execute_0+0xC  ;; 0x8299
   \   0000002E   ........           BL       SPI_SendWord
   \   00000032   03E0               B        ??SPI_RFM12_Execute_2
   \                     ??SPI_RFM12_Execute_3:
   \   00000034   0221               MOVS     R1,#+2
   \   00000036   9C48               LDR      R0,??SPI_RFM12_Execute_0+0x10  ;; 0x8239
   \   00000038   ........           BL       SPI_SendWord
    278                } //Rozkaz: 0x80E7 - EL,EF,868band,12.0pF 
    279               
    280          
    281                if ((Order==0x8299) || (Order==0x8239) || (Order==0x8219))
   \                     ??SPI_RFM12_Execute_2:
   \   0000003C   9948               LDR      R0,??SPI_RFM12_Execute_0+0xC  ;; 0x8299
   \   0000003E   8442               CMP      R4,R0
   \   00000040   05D0               BEQ      ??SPI_RFM12_Execute_4
   \   00000042   6038               SUBS     R0,R0,#+96
   \   00000044   8442               CMP      R4,R0
   \   00000046   02D0               BEQ      ??SPI_RFM12_Execute_4
   \   00000048   2038               SUBS     R0,R0,#+32
   \   0000004A   8442               CMP      R4,R0
   \   0000004C   1FD1               BNE      ??SPI_RFM12_Execute_5
    282                                 { SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); }       //Rozkaz: 0xA6xx Czêstotliwoæ bazowa (Kana³ 0)  - oryginalnie by³o 0xA640 - 868,0Mhz
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??SPI_RFM12_Execute_4:
   \   0000004E   0221               MOVS     R1,#+2
   \   00000050   0E00               MOVS     R6,R1
   \   00000052   687B               LDRB     R0,[R5, #+13]
   \   00000054   ........           BL       __aeabi_ui2d
   \   00000058   944A               LDR      R2,??SPI_RFM12_Execute_0+0x14  ;; 0x33333333
   \   0000005A   954B               LDR      R3,??SPI_RFM12_Execute_0+0x18  ;; 0x3fd33333
   \   0000005C   ........           BL       __aeabi_dmul
   \   00000060   944A               LDR      R2,??SPI_RFM12_Execute_0+0x1C  ;; 0x5c28f5c3
   \   00000062   954B               LDR      R3,??SPI_RFM12_Execute_0+0x20  ;; 0x408ae28f
   \   00000064   ........           BL       __aeabi_dadd
   \   00000068   0022               MOVS     R2,#+0
   \   0000006A   944B               LDR      R3,??SPI_RFM12_Execute_0+0x24  ;; 0x40690000
   \   0000006C   ........           BL       __aeabi_dmul
   \   00000070   0022               MOVS     R2,#+0
   \   00000072   934B               LDR      R3,??SPI_RFM12_Execute_0+0x28  ;; 0xc104ff00
   \   00000074   ........           BL       __aeabi_dadd
   \   00000078   ........           BL       __aeabi_d2iz
   \   0000007C   0004               LSLS     R0,R0,#+16
   \   0000007E   0014               ASRS     R0,R0,#+16
   \   00000080   A021               MOVS     R1,#+160
   \   00000082   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   00000084   0143               ORRS     R1,R1,R0
   \   00000086   0800               MOVS     R0,R1
   \   00000088   3100               MOVS     R1,R6
   \   0000008A   ........           BL       SPI_SendWord
    283                if (Order==(0xA000 | RF_SetFreqReg(RF_Status.Ch)))  
   \                     ??SPI_RFM12_Execute_5:
   \   0000008E   687B               LDRB     R0,[R5, #+13]
   \   00000090   ........           BL       __aeabi_ui2d
   \   00000094   854A               LDR      R2,??SPI_RFM12_Execute_0+0x14  ;; 0x33333333
   \   00000096   864B               LDR      R3,??SPI_RFM12_Execute_0+0x18  ;; 0x3fd33333
   \   00000098   ........           BL       __aeabi_dmul
   \   0000009C   854A               LDR      R2,??SPI_RFM12_Execute_0+0x1C  ;; 0x5c28f5c3
   \   0000009E   864B               LDR      R3,??SPI_RFM12_Execute_0+0x20  ;; 0x408ae28f
   \   000000A0   ........           BL       __aeabi_dadd
   \   000000A4   0022               MOVS     R2,#+0
   \   000000A6   854B               LDR      R3,??SPI_RFM12_Execute_0+0x24  ;; 0x40690000
   \   000000A8   ........           BL       __aeabi_dmul
   \   000000AC   0022               MOVS     R2,#+0
   \   000000AE   844B               LDR      R3,??SPI_RFM12_Execute_0+0x28  ;; 0xc104ff00
   \   000000B0   ........           BL       __aeabi_dadd
   \   000000B4   ........           BL       __aeabi_d2iz
   \   000000B8   0004               LSLS     R0,R0,#+16
   \   000000BA   0014               ASRS     R0,R0,#+16
   \   000000BC   A021               MOVS     R1,#+160
   \   000000BE   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   000000C0   0143               ORRS     R1,R1,R0
   \   000000C2   8C42               CMP      R4,R1
   \   000000C4   03D1               BNE      ??SPI_RFM12_Execute_6
    284                  
    285                                 { SPI_SendWord(0xC607,Cs_RF); }                          //Rozkaz: 0xC607 Szybkoæ transmisji 43kb/s         - oryginalnie by³o 0xC647 - 4,8kb/s
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000000C6   0221               MOVS     R1,#+2
   \   000000C8   7E48               LDR      R0,??SPI_RFM12_Execute_0+0x2C  ;; 0xc607
   \   000000CA   ........           BL       SPI_SendWord
    286                if (Order==0xC607)  
   \                     ??SPI_RFM12_Execute_6:
   \   000000CE   7D48               LDR      R0,??SPI_RFM12_Execute_0+0x2C  ;; 0xc607
   \   000000D0   8442               CMP      R4,R0
   \   000000D2   03D1               BNE      ??SPI_RFM12_Execute_7
    287                                 { SPI_SendWord(0x94A0,Cs_RF); }                          //Rozkaz: 0x94A0 VDI,FAST,134kHz,0dBm,-103dBm 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000000D4   0221               MOVS     R1,#+2
   \   000000D6   7C48               LDR      R0,??SPI_RFM12_Execute_0+0x30  ;; 0x94a0
   \   000000D8   ........           BL       SPI_SendWord
    288                if (Order==0x94A0)  
   \                     ??SPI_RFM12_Execute_7:
   \   000000DC   7A48               LDR      R0,??SPI_RFM12_Execute_0+0x30  ;; 0x94a0
   \   000000DE   8442               CMP      R4,R0
   \   000000E0   03D1               BNE      ??SPI_RFM12_Execute_8
    289                                 { SPI_SendWord(0xC2AC,Cs_RF); }                          //Rozkaz: 0xC2AC AL,!ml,DIG,DQD4 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000000E2   0221               MOVS     R1,#+2
   \   000000E4   7948               LDR      R0,??SPI_RFM12_Execute_0+0x34  ;; 0xc2ac
   \   000000E6   ........           BL       SPI_SendWord
    290                if (Order==0xC2AC)  
   \                     ??SPI_RFM12_Execute_8:
   \   000000EA   7848               LDR      R0,??SPI_RFM12_Execute_0+0x34  ;; 0xc2ac
   \   000000EC   8442               CMP      R4,R0
   \   000000EE   03D1               BNE      ??SPI_RFM12_Execute_9
    291                                 { SPI_SendWord(0xCA81,Cs_RF); }                          //Rozkaz: 0xCA81 FIFO8,SYNC,!ff,DR 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   000000F0   0221               MOVS     R1,#+2
   \   000000F2   7748               LDR      R0,??SPI_RFM12_Execute_0+0x38  ;; 0xca81
   \   000000F4   ........           BL       SPI_SendWord
    292                if ((Order==0xCA81) && (IntCA81Flag==0))  
   \                     ??SPI_RFM12_Execute_9:
   \   000000F8   754E               LDR      R6,??SPI_RFM12_Execute_0+0x38  ;; 0xca81
   \   000000FA   B442               CMP      R4,R6
   \   000000FC   0AD1               BNE      ??SPI_RFM12_Execute_10
   \   000000FE   754F               LDR      R7,??SPI_RFM12_Execute_0+0x3C  ;; RF_Tx
   \   00000100   387E               LDRB     R0,[R7, #+24]
   \   00000102   0028               CMP      R0,#+0
   \   00000104   06D1               BNE      ??SPI_RFM12_Execute_10
    293                                 { SPI_SendWord(0xCED4,Cs_RF); IntCA81Flag=1; Order=0xFFFF;}   //Rozkaz: 0xCED4 ustawienie s³owa synchronizacyjnego na 0x2DD4 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000106   0221               MOVS     R1,#+2
   \   00000108   7348               LDR      R0,??SPI_RFM12_Execute_0+0x40  ;; 0xced4
   \   0000010A   ........           BL       SPI_SendWord
   \   0000010E   0120               MOVS     R0,#+1
   \   00000110   3876               STRB     R0,[R7, #+24]
   \   00000112   724C               LDR      R4,??SPI_RFM12_Execute_0+0x44  ;; 0xffff
    294                if (Order==0xCED4)  
   \                     ??SPI_RFM12_Execute_10:
   \   00000114   7048               LDR      R0,??SPI_RFM12_Execute_0+0x40  ;; 0xced4
   \   00000116   8442               CMP      R4,R0
   \   00000118   03D1               BNE      ??SPI_RFM12_Execute_11
    295                                 { SPI_SendWord(0xC493,Cs_RF); }                          //Rozkaz: 0xC493 @PWR, AFC:-80+75Khz ,!st,!fi,OE,EN       - oryginalnie 0xC483 @PWR,AFC - NO RSTRIC,!st,!fi,OE,EN 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000011A   0221               MOVS     R1,#+2
   \   0000011C   7048               LDR      R0,??SPI_RFM12_Execute_0+0x48  ;; 0xc493
   \   0000011E   ........           BL       SPI_SendWord
    296                if (Order==0xC493)  
   \                     ??SPI_RFM12_Execute_11:
   \   00000122   6F48               LDR      R0,??SPI_RFM12_Execute_0+0x48  ;; 0xc493
   \   00000124   8442               CMP      R4,R0
   \   00000126   03D1               BNE      ??SPI_RFM12_Execute_12
    297                                 { SPI_SendWord(0x9850,Cs_RF); }                          //Rozkaz: 0x9850 !mp,dewiacja +-90kHz ,MAX OUT   
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000128   0221               MOVS     R1,#+2
   \   0000012A   6E48               LDR      R0,??SPI_RFM12_Execute_0+0x4C  ;; 0x9850
   \   0000012C   ........           BL       SPI_SendWord
    298                if (Order==0x9850)  
   \                     ??SPI_RFM12_Execute_12:
   \   00000130   6C48               LDR      R0,??SPI_RFM12_Execute_0+0x4C  ;; 0x9850
   \   00000132   8442               CMP      R4,R0
   \   00000134   03D1               BNE      ??SPI_RFM12_Execute_13
    299                                 { SPI_SendWord(0xCC17,Cs_RF); }                          //Rozkaz: 0xCC17 OB1COB0, LPX,IddyCDDITC
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000136   0221               MOVS     R1,#+2
   \   00000138   6B48               LDR      R0,??SPI_RFM12_Execute_0+0x50  ;; 0xcc17
   \   0000013A   ........           BL       SPI_SendWord
    300                if (Order==0xCC17)  
   \                     ??SPI_RFM12_Execute_13:
   \   0000013E   6A48               LDR      R0,??SPI_RFM12_Execute_0+0x50  ;; 0xcc17
   \   00000140   8442               CMP      R4,R0
   \   00000142   04D1               BNE      ??SPI_RFM12_Execute_14
    301                                 { SPI_SendWord(0xE000,Cs_RF); }                          //Rozkaz: 0xE000
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000144   0221               MOVS     R1,#+2
   \   00000146   E020               MOVS     R0,#+224
   \   00000148   0002               LSLS     R0,R0,#+8        ;; #+57344
   \   0000014A   ........           BL       SPI_SendWord
    302                if (Order==0xE000)  
   \                     ??SPI_RFM12_Execute_14:
   \   0000014E   E020               MOVS     R0,#+224
   \   00000150   0002               LSLS     R0,R0,#+8        ;; #+57344
   \   00000152   8442               CMP      R4,R0
   \   00000154   04D1               BNE      ??SPI_RFM12_Execute_15
    303                                 { SPI_SendWord(0xC800,Cs_RF); }                          //Rozkaz: 0xC800
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000156   0221               MOVS     R1,#+2
   \   00000158   C820               MOVS     R0,#+200
   \   0000015A   0002               LSLS     R0,R0,#+8        ;; #+51200
   \   0000015C   ........           BL       SPI_SendWord
    304                if (Order==0xC800)  
   \                     ??SPI_RFM12_Execute_15:
   \   00000160   C820               MOVS     R0,#+200
   \   00000162   0002               LSLS     R0,R0,#+8        ;; #+51200
   \   00000164   8442               CMP      R4,R0
   \   00000166   03D1               BNE      ??SPI_RFM12_Execute_16
    305                                 { SPI_SendWord(0xC040,Cs_RF); }                          //Rozkaz: 0xC040 1.66MHz,2.2V 
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000168   0221               MOVS     R1,#+2
   \   0000016A   6048               LDR      R0,??SPI_RFM12_Execute_0+0x54  ;; 0xc040
   \   0000016C   ........           BL       SPI_SendWord
    306                if (Order==0xC040)  
   \                     ??SPI_RFM12_Execute_16:
   \   00000170   5E48               LDR      R0,??SPI_RFM12_Execute_0+0x54  ;; 0xc040
   \   00000172   8442               CMP      R4,R0
   \   00000174   03D1               BNE      ??SPI_RFM12_Execute_17
    307                                 { SPI_SendWord(0xCA81,Cs_RF); }                          //Rozkaz: 0xCA81 Start fifo RX
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000176   0221               MOVS     R1,#+2
   \   00000178   3000               MOVS     R0,R6
   \   0000017A   ........           BL       SPI_SendWord
    308                if ((Order==0xCA81) && (IntCA81Flag==1))  
   \                     ??SPI_RFM12_Execute_17:
   \   0000017E   B442               CMP      R4,R6
   \   00000180   07D1               BNE      ??SPI_RFM12_Execute_18
   \   00000182   5B48               LDR      R0,??SPI_RFM12_Execute_0+0x58  ;; RF_Tx + 24
   \   00000184   0078               LDRB     R0,[R0, #+0]
   \   00000186   0128               CMP      R0,#+1
   \   00000188   03D1               BNE      ??SPI_RFM12_Execute_18
    309                                 { SPI_SendWord(0xCA83,Cs_RF); }                          //Rozkaz: 0xCA83 Restart fifo RX
                                          ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000018A   0221               MOVS     R1,#+2
   \   0000018C   B01C               ADDS     R0,R6,#+2
   \   0000018E   ........           BL       SPI_SendWord
    310                if (Order==0xCA83)  
   \                     ??SPI_RFM12_Execute_18:
   \   00000192   B01C               ADDS     R0,R6,#+2
   \   00000194   8442               CMP      R4,R0
   \   00000196   7CD1               BNE      ??SPI_RFM12_Execute_19
    311                                 { 
    312                
    313          
    314          
    315                  
    316                       
    317                
    318                  RF_Status.EnRx=1;
   \   00000198   0120               MOVS     R0,#+1
   \   0000019A   6870               STRB     R0,[R5, #+1]
    319                  RF_Status.Init=0; 
   \   0000019C   0020               MOVS     R0,#+0
   \   0000019E   2870               STRB     R0,[R5, #+0]
    320                  
    321                    TRACE_INFO("Enable RX\n\r"); 
    322                    
    323                    InitRF_Interrupt();
   \   000001A0   ........           BL       InitRF_Interrupt
   \   000001A4   75E0               B        ??SPI_RFM12_Execute_19
    324                    
    325                  
    326                  
    327                  
    328                }
    329               
    330                
    331              }//Aktywny RX ---------------------------------------------------------------
    332              else if ((RF_Status.EnRx) && (RF_Status.Init==0))
   \                     ??SPI_RFM12_Execute_1:
   \   000001A6   6878               LDRB     R0,[R5, #+1]
   \   000001A8   0028               CMP      R0,#+0
   \   000001AA   24D0               BEQ      ??SPI_RFM12_Execute_20
    333              {
    334              
    335                if  (((Order==0x0000) && (Buffer_Rx[1]&0x80)) ||
    336                     ((Order==0x0000) && ((Buffer_Rx[1]&0x02)==0)))
   \   000001AC   002C               CMP      R4,#+0
   \   000001AE   02D1               BNE      ??SPI_RFM12_Execute_21
   \   000001B0   7078               LDRB     R0,[R6, #+1]
   \   000001B2   0006               LSLS     R0,R0,#+24
   \   000001B4   04D4               BMI      ??SPI_RFM12_Execute_22
   \                     ??SPI_RFM12_Execute_21:
   \   000001B6   002C               CMP      R4,#+0
   \   000001B8   07D1               BNE      ??SPI_RFM12_Execute_23
   \   000001BA   7078               LDRB     R0,[R6, #+1]
   \   000001BC   8007               LSLS     R0,R0,#+30
   \   000001BE   04D4               BMI      ??SPI_RFM12_Execute_23
    337                     { SPI_SendWord(0xB000,Cs_RF); }
                              ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??SPI_RFM12_Execute_22:
   \   000001C0   0221               MOVS     R1,#+2
   \   000001C2   B020               MOVS     R0,#+176
   \   000001C4   0002               LSLS     R0,R0,#+8        ;; #+45056
   \   000001C6   ........           BL       SPI_SendWord
    338                
    339                if  (Order==0xCA81)   { SPI_SendWord(0xCA83,Cs_RF); }
                                               ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??SPI_RFM12_Execute_23:
   \   000001CA   4148               LDR      R0,??SPI_RFM12_Execute_0+0x38  ;; 0xca81
   \   000001CC   8442               CMP      R4,R0
   \   000001CE   03D1               BNE      ??SPI_RFM12_Execute_24
   \   000001D0   0221               MOVS     R1,#+2
   \   000001D2   801C               ADDS     R0,R0,#+2
   \   000001D4   ........           BL       SPI_SendWord
    340                if  (Order==0xCA83)   { SPI_SendWord(0x0000,Cs_RF); }
                                               ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??SPI_RFM12_Execute_24:
   \   000001D8   4648               LDR      R0,??SPI_RFM12_Execute_0+0x5C  ;; 0xca83
   \   000001DA   8442               CMP      R4,R0
   \   000001DC   03D1               BNE      ??SPI_RFM12_Execute_25
   \   000001DE   0221               MOVS     R1,#+2
   \   000001E0   0020               MOVS     R0,#+0
   \   000001E2   ........           BL       SPI_SendWord
    341                if  (Order==0xB000)  { RF_ReciveByte(Buffer_Rx[0]); }
   \                     ??SPI_RFM12_Execute_25:
   \   000001E6   B020               MOVS     R0,#+176
   \   000001E8   0002               LSLS     R0,R0,#+8        ;; #+45056
   \   000001EA   8442               CMP      R4,R0
   \   000001EC   51D1               BNE      ??SPI_RFM12_Execute_19
   \   000001EE   3078               LDRB     R0,[R6, #+0]
   \   000001F0   ........           BL       RF_ReciveByte
   \   000001F4   4DE0               B        ??SPI_RFM12_Execute_19
    342               
    343                
    344          
    345              
    346              
    347              
    348              }//Trzb oczekiwania na prze³¹czenie na TX ---------------------------------------------------------------
    349              else if ((RF_Status.InitTx) && (Order!=0x0000))
   \                     ??SPI_RFM12_Execute_20:
   \   000001F6   E878               LDRB     R0,[R5, #+3]
   \   000001F8   0028               CMP      R0,#+0
   \   000001FA   19D0               BEQ      ??SPI_RFM12_Execute_26
   \   000001FC   002C               CMP      R4,#+0
   \   000001FE   17D0               BEQ      ??SPI_RFM12_Execute_26
    350                  {
    351                          
    352                    if (Order==0x8219)
   \   00000200   2748               LDR      R0,??SPI_RFM12_Execute_0+0x8  ;; 0x8219
   \   00000202   8442               CMP      R4,R0
   \   00000204   04D1               BNE      ??SPI_RFM12_Execute_27
    353                    {
    354                      SPI_SendWord(0x80E7,Cs_RF);
                             ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000206   0221               MOVS     R1,#+2
   \   00000208   3B48               LDR      R0,??SPI_RFM12_Execute_0+0x60  ;; 0x80e7
   \   0000020A   ........           BL       SPI_SendWord
   \   0000020E   40E0               B        ??SPI_RFM12_Execute_19
    355                    }
    356                    else if (Order==0x80E7)
   \                     ??SPI_RFM12_Execute_27:
   \   00000210   3948               LDR      R0,??SPI_RFM12_Execute_0+0x60  ;; 0x80e7
   \   00000212   8442               CMP      R4,R0
   \   00000214   04D1               BNE      ??SPI_RFM12_Execute_28
    357                    {                                     
    358                      SPI_SendWord(0x8239,Cs_RF);
                             ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000216   0221               MOVS     R1,#+2
   \   00000218   2348               LDR      R0,??SPI_RFM12_Execute_0+0x10  ;; 0x8239
   \   0000021A   ........           BL       SPI_SendWord
   \   0000021E   38E0               B        ??SPI_RFM12_Execute_19
    359                    }
    360                    else if (Order==0x8239)
   \                     ??SPI_RFM12_Execute_28:
   \   00000220   2148               LDR      R0,??SPI_RFM12_Execute_0+0x10  ;; 0x8239
   \   00000222   8442               CMP      R4,R0
   \   00000224   35D1               BNE      ??SPI_RFM12_Execute_19
    361                    {
    362                      SPI_SendWord(0x0000,Cs_RF);
                             ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000226   0221               MOVS     R1,#+2
   \   00000228   0020               MOVS     R0,#+0
   \   0000022A   ........           BL       SPI_SendWord
   \   0000022E   30E0               B        ??SPI_RFM12_Execute_19
    363                    }
    364                  }  
    365                else if ((RF_Status.InitTx) && (Order==0x0000))
   \                     ??SPI_RFM12_Execute_26:
   \   00000230   0028               CMP      R0,#+0
   \   00000232   12D0               BEQ      ??SPI_RFM12_Execute_29
   \   00000234   002C               CMP      R4,#+0
   \   00000236   10D1               BNE      ??SPI_RFM12_Execute_29
    366                  {    
    367          
    368                    if (Buffer_Rx[1]&0x20)
   \   00000238   7078               LDRB     R0,[R6, #+1]
   \   0000023A   8006               LSLS     R0,R0,#+26
   \   0000023C   04D5               BPL      ??SPI_RFM12_Execute_30
    369                    {
    370                      SPI_SendWord(0x0000,Cs_RF);
                             ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000023E   0221               MOVS     R1,#+2
   \   00000240   0020               MOVS     R0,#+0
   \   00000242   ........           BL       SPI_SendWord
   \   00000246   24E0               B        ??SPI_RFM12_Execute_19
    371                    }
    372                    //w³¹czenie nadawania danych
    373                    else
    374                    {
    375                      RF_Status.InitTx=0;
   \                     ??SPI_RFM12_Execute_30:
   \   00000248   0020               MOVS     R0,#+0
   \   0000024A   E870               STRB     R0,[R5, #+3]
    376                      RF_Status.EnTx=1;
   \   0000024C   0120               MOVS     R0,#+1
   \   0000024E   0100               MOVS     R1,R0
   \   00000250   A970               STRB     R1,[R5, #+2]
    377                      RF_Status.Transmit=1;
   \   00000252   2872               STRB     R0,[R5, #+8]
    378                      RF_transmit();
   \   00000254   ........           BL       RF_transmit
   \   00000258   1BE0               B        ??SPI_RFM12_Execute_19
    379                    }
    380                    
    381                   
    382          
    383              }//Aktywny TX ---------------------------------------------------------------
    384              else if (RF_Status.EnTx)
   \                     ??SPI_RFM12_Execute_29:
   \   0000025A   A978               LDRB     R1,[R5, #+2]
   \   0000025C   0029               CMP      R1,#+0
   \   0000025E   18D1               BNE      ??SPI_RFM12_Execute_19
    385              {
    386          
    387          
    388              
    389              }
    390          
    391          
    392              //W³¹czenie odbiornika
    393              else if ((RF_Status.EnRx==0) && (RF_Status.EnTx==0) && (Order==0x8299))
   \   00000260   1049               LDR      R1,??SPI_RFM12_Execute_0+0xC  ;; 0x8299
   \   00000262   8C42               CMP      R4,R1
   \   00000264   0AD1               BNE      ??SPI_RFM12_Execute_31
    394              {
    395                 RF_Status.EnRx=1;
   \   00000266   0120               MOVS     R0,#+1
   \   00000268   6870               STRB     R0,[R5, #+1]
    396                 SPI_SendWord(0x0000,Cs_RF);
                        ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000026A   0221               MOVS     R1,#+2
   \   0000026C   0020               MOVS     R0,#+0
   \   0000026E   ........           BL       SPI_SendWord
    397                 AT91C_BASE_PIOA->PIO_CODR =TxPin; 
                                                   ^
Warning[Pe068]: integer conversion resulted in a change of sign
   \   00000272   2248               LDR      R0,??SPI_RFM12_Execute_0+0x64  ;; 0xfffff434
   \   00000274   8021               MOVS     R1,#+128
   \   00000276   0906               LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000278   0160               STR      R1,[R0, #+0]
   \   0000027A   0AE0               B        ??SPI_RFM12_Execute_19
    398              }
    399          
    400              
    401           
    402              else if ((RF_Status.InitTx==0) && (RF_Status.EnRx==0) && (RF_Status.EnTx==0) && (Order==0x8239))
   \                     ??SPI_RFM12_Execute_31:
   \   0000027C   0028               CMP      R0,#+0
   \   0000027E   08D1               BNE      ??SPI_RFM12_Execute_19
   \   00000280   0948               LDR      R0,??SPI_RFM12_Execute_0+0x10  ;; 0x8239
   \   00000282   8442               CMP      R4,R0
   \   00000284   05D1               BNE      ??SPI_RFM12_Execute_19
    403              {
    404                RF_Status.InitTx=1;
   \   00000286   0120               MOVS     R0,#+1
   \   00000288   E870               STRB     R0,[R5, #+3]
    405               
    406                SPI_SendWord(0x0000,Cs_RF);    
                       ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   0000028A   0221               MOVS     R1,#+2
   \   0000028C   0020               MOVS     R0,#+0
   \   0000028E   ........           BL       SPI_SendWord
    407              }
    408           
    409              
    410            
    411           
    412          }  
   \                     ??SPI_RFM12_Execute_19:
   \   00000292   F8BC               POP      {R3-R7}
   \   00000294   01BC               POP      {R0}
   \   00000296   0047               BX       R0               ;; return
   \                     ??SPI_RFM12_Execute_0:
   \   00000298   ........           DC32     RF_Status
   \   0000029C   67800000           DC32     0x8067
   \   000002A0   19820000           DC32     0x8219
   \   000002A4   99820000           DC32     0x8299
   \   000002A8   39820000           DC32     0x8239
   \   000002AC   33333333           DC32     0x33333333
   \   000002B0   3333D33F           DC32     0x3fd33333
   \   000002B4   C3F5285C           DC32     0x5c28f5c3
   \   000002B8   8FE28A40           DC32     0x408ae28f
   \   000002BC   00006940           DC32     0x40690000
   \   000002C0   00FF04C1           DC32     0xc104ff00
   \   000002C4   07C60000           DC32     0xc607
   \   000002C8   A0940000           DC32     0x94a0
   \   000002CC   ACC20000           DC32     0xc2ac
   \   000002D0   81CA0000           DC32     0xca81
   \   000002D4   ........           DC32     RF_Tx
   \   000002D8   D4CE0000           DC32     0xced4
   \   000002DC   FFFF0000           DC32     0xffff
   \   000002E0   93C40000           DC32     0xc493
   \   000002E4   50980000           DC32     0x9850
   \   000002E8   17CC0000           DC32     0xcc17
   \   000002EC   40C00000           DC32     0xc040
   \   000002F0   ........           DC32     RF_Tx + 24
   \   000002F4   83CA0000           DC32     0xca83
   \   000002F8   E7800000           DC32     0x80e7
   \   000002FC   34F4FFFF           DC32     0xfffff434
    413          
    414          
    415          
    416          
    417          
    418          
    419          //-----------------------
    420          
    421          //-----------------------------------------------------------------------------
    422          //!  Nazwa funkcji :    RF_ReciveByte
    423          //!  Funkcja interpretacji otrzymanego bajtu
    424          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    425          void RF_ReciveByte(char Res)
    426          {
   \                     RF_ReciveByte:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    427          
    428                    for (char i=0; i<RF_BuffSizeRX-1; i++) {RF_Rx.Buff[i]=RF_Rx.Buff[i+1];}
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2100               MOVS     R1,R4
   \   00000006   1D4D               LDR      R5,??RF_ReciveByte_0  ;; RF_Rx
   \   00000008   05E0               B        ??RF_ReciveByte_1
   \                     ??RF_ReciveByte_2:
   \   0000000A   AA18               ADDS     R2,R5,R2
   \   0000000C   5378               LDRB     R3,[R2, #+1]
   \   0000000E   1370               STRB     R3,[R2, #+0]
   \   00000010   491C               ADDS     R1,R1,#+1
   \   00000012   0906               LSLS     R1,R1,#+24
   \   00000014   090E               LSRS     R1,R1,#+24
   \                     ??RF_ReciveByte_1:
   \   00000016   0A00               MOVS     R2,R1
   \   00000018   132A               CMP      R2,#+19
   \   0000001A   F6D3               BCC      ??RF_ReciveByte_2
    429                    RF_Rx.Buff[RF_BuffSizeRX-1]=Res;
   \   0000001C   E874               STRB     R0,[R5, #+19]
    430          
    431                    RF_Rx.ReciveBytes++;
   \   0000001E   287D               LDRB     R0,[R5, #+20]
   \   00000020   401C               ADDS     R0,R0,#+1
   \   00000022   2875               STRB     R0,[R5, #+20]
    432          
    433                    //sprawdzenie koñca
    434                    if (
    435                    (RF_Rx.Buff[RF_BuffSizeRX-3]==Preambu[0]) &&
    436                      (RF_Rx.Buff[RF_BuffSizeRX-2]==Preambu[1]) &&
    437                    (RF_Rx.Buff[RF_BuffSizeRX-1]==Preambu[2]) && 
    438                    ((RF_Rx.ReciveBytes%2)!=0))  
   \   00000024   697C               LDRB     R1,[R5, #+17]
   \   00000026   AA29               CMP      R1,#+170
   \   00000028   24D1               BNE      ??RF_ReciveByte_3
   \   0000002A   A97C               LDRB     R1,[R5, #+18]
   \   0000002C   AA29               CMP      R1,#+170
   \   0000002E   21D1               BNE      ??RF_ReciveByte_3
   \   00000030   E97C               LDRB     R1,[R5, #+19]
   \   00000032   AA29               CMP      R1,#+170
   \   00000034   1ED1               BNE      ??RF_ReciveByte_3
   \   00000036   0006               LSLS     R0,R0,#+24
   \   00000038   000E               LSRS     R0,R0,#+24
   \   0000003A   0200               MOVS     R2,R0
   \   0000003C   0100               MOVS     R1,R0
   \   0000003E   4908               LSRS     R1,R1,#+1
   \   00000040   4900               LSLS     R1,R1,#+1
   \   00000042   511A               SUBS     R1,R2,R1
   \   00000044   16D0               BEQ      ??RF_ReciveByte_3
    439                    {           
    440                      if(RF_Status.ConfResive==0) RF_Status.ConfResive=1;  //znacznik odebrania danych (dla kontroli kana³u)
   \   00000046   0E49               LDR      R1,??RF_ReciveByte_0+0x4  ;; RF_Status
   \   00000048   CB7A               LDRB     R3,[R1, #+11]
   \   0000004A   002B               CMP      R3,#+0
   \   0000004C   01D1               BNE      ??RF_ReciveByte_4
   \   0000004E   0123               MOVS     R3,#+1
   \   00000050   CB72               STRB     R3,[R1, #+11]
    441                      
    442                      
    443                      RF_ReciveFarm(&RF_Rx.Buff[RF_BuffSizeRX-RF_Rx.ReciveBytes], RF_Rx.ReciveBytes-3);  //funkcja interpretacji otrzymanej ramki
   \                     ??RF_ReciveByte_4:
   \   00000052   C11E               SUBS     R1,R0,#+3
   \   00000054   0906               LSLS     R1,R1,#+24
   \   00000056   090E               LSRS     R1,R1,#+24
   \   00000058   5042               RSBS     R0,R2,#+0
   \   0000005A   2818               ADDS     R0,R5,R0
   \   0000005C   1430               ADDS     R0,R0,#+20
   \   0000005E   ........           BL       RF_ReciveFarm
    444                      //g_RF_TimeOutCounter=0;
    445                      RF_Rx.ReciveBytes=0;
   \   00000062   2C75               STRB     R4,[R5, #+20]
    446          
    447                      if (!RF_Tx.BytesToSend) SPI_SendWord(0xCA81,Cs_RF); 
                                                     ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000064   0748               LDR      R0,??RF_ReciveByte_0+0x8  ;; RF_Tx + 20
   \   00000066   0078               LDRB     R0,[R0, #+0]
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   03D1               BNE      ??RF_ReciveByte_3
   \   0000006C   0221               MOVS     R1,#+2
   \   0000006E   0648               LDR      R0,??RF_ReciveByte_0+0xC  ;; 0xca81
   \   00000070   ........           BL       SPI_SendWord
    448                    }
    449          
    450            
    451          
    452          }
   \                     ??RF_ReciveByte_3:
   \   00000074   38BC               POP      {R3-R5}
   \   00000076   01BC               POP      {R0}
   \   00000078   0047               BX       R0               ;; return
   \   0000007A   C046               Nop      
   \                     ??RF_ReciveByte_0:
   \   0000007C   ........           DC32     RF_Rx
   \   00000080   ........           DC32     RF_Status
   \   00000084   ........           DC32     RF_Tx + 20
   \   00000088   81CA0000           DC32     0xca81
    453          
    454          
    455          
    456          
    457          
    458          
    459          
    460          //-----------------------------------------------------------------------------
    461          //!  Nazwa funkcji :    RF_SendFarm
    462          //!  Funkcja przygotowuje dane do wys³ania przez RF12. Opakowuje dane w ramkê
    463          //-----------------------------------------------------------------------------
    464          //  *data - wska¿nik na pierwszy bajt
    465          //  *size - iloæ bajtów do wys³ania
    466          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    467          void RF_SendFarm(unsigned char *data, char size)
    468          { 
   \                     RF_SendFarm:
   \   00000000   F3B5               PUSH     {R0,R1,R4-R7,LR}
   \   00000002   81B0               SUB      SP,SP,#+4
    469              RF_Status.EnableTX();
   \   00000004   314C               LDR      R4,??RF_SendFarm_0  ;; RF_Status
   \   00000006   A069               LDR      R0,[R4, #+24]
   \   00000008   ........           BL       __iar_via_R0
    470              char BTS;
    471              //char DTS[20];
    472              BTS=RF_Tx.BytesToSend;
   \   0000000C   3048               LDR      R0,??RF_SendFarm_0+0x4  ;; RF_Tx
   \   0000000E   027D               LDRB     R2,[R0, #+20]
    473              
    474               //Wpisanie preambu³y otwieraj¹cej
    475               RF_Tx.Buff[BTS++]=Preambu[0];
   \   00000010   AA21               MOVS     R1,#+170
   \   00000012   1300               MOVS     R3,R2
   \   00000014   C154               STRB     R1,[R0, R3]
   \   00000016   521C               ADDS     R2,R2,#+1
   \   00000018   1206               LSLS     R2,R2,#+24
   \   0000001A   120E               LSRS     R2,R2,#+24
    476               RF_Tx.Buff[BTS++]=Preambu[1];
   \   0000001C   1300               MOVS     R3,R2
   \   0000001E   C154               STRB     R1,[R0, R3]
   \   00000020   521C               ADDS     R2,R2,#+1
   \   00000022   1206               LSLS     R2,R2,#+24
   \   00000024   120E               LSRS     R2,R2,#+24
    477               RF_Tx.Buff[BTS++]=Preambu[2];
   \   00000026   1300               MOVS     R3,R2
   \   00000028   C154               STRB     R1,[R0, R3]
   \   0000002A   521C               ADDS     R2,R2,#+1
   \   0000002C   1206               LSLS     R2,R2,#+24
   \   0000002E   120E               LSRS     R2,R2,#+24
    478               
    479               //Wpisanie s³owa synchronizuj¹cego
    480               RF_Tx.Buff[BTS++]=SynKay[0];
   \   00000030   1300               MOVS     R3,R2
   \   00000032   2D25               MOVS     R5,#+45
   \   00000034   C554               STRB     R5,[R0, R3]
   \   00000036   521C               ADDS     R2,R2,#+1
   \   00000038   1206               LSLS     R2,R2,#+24
   \   0000003A   120E               LSRS     R2,R2,#+24
    481               RF_Tx.Buff[BTS++]=SynKay[1];
   \   0000003C   1300               MOVS     R3,R2
   \   0000003E   D425               MOVS     R5,#+212
   \   00000040   C554               STRB     R5,[R0, R3]
   \   00000042   521C               ADDS     R2,R2,#+1
   \   00000044   1206               LSLS     R2,R2,#+24
   \   00000046   120E               LSRS     R2,R2,#+24
    482               
    483               //Wpisanie danych do kolejki
    484               for (char i=0; i<size; i++)
   \   00000048   0023               MOVS     R3,#+0
   \   0000004A   1D00               MOVS     R5,R3
   \   0000004C   0FE0               B        ??RF_SendFarm_1
    485               {
    486                  if (BTS<=RF_BuffSizeTX-3)
   \                     ??RF_SendFarm_2:
   \   0000004E   1600               MOVS     R6,R2
   \   00000050   122E               CMP      R6,#+18
   \   00000052   09D2               BCS      ??RF_SendFarm_3
    487                  {
    488                    RF_Tx.Buff[BTS]=data[i]; 
   \   00000054   1700               MOVS     R7,R2
   \   00000056   BC46               MOV      R12,R7
   \   00000058   2F00               MOVS     R7,R5
   \   0000005A   019E               LDR      R6,[SP, #+4]
   \   0000005C   F65D               LDRB     R6,[R6, R7]
   \   0000005E   6746               MOV      R7,R12
   \   00000060   C655               STRB     R6,[R0, R7]
    489                    BTS++;
   \   00000062   521C               ADDS     R2,R2,#+1
   \   00000064   1206               LSLS     R2,R2,#+24
   \   00000066   120E               LSRS     R2,R2,#+24
    490                  }
    491               }
   \                     ??RF_SendFarm_3:
   \   00000068   6D1C               ADDS     R5,R5,#+1
   \   0000006A   2D06               LSLS     R5,R5,#+24
   \   0000006C   2D0E               LSRS     R5,R5,#+24
   \                     ??RF_SendFarm_1:
   \   0000006E   2E00               MOVS     R6,R5
   \   00000070   6F46               MOV      R7,SP
   \   00000072   3F7A               LDRB     R7,[R7, #+8]
   \   00000074   BE42               CMP      R6,R7
   \   00000076   EAD3               BCC      ??RF_SendFarm_2
    492               
    493               //Wpisanie preambu³y zamykaj¹cej
    494               RF_Tx.Buff[BTS++]=Preambu[0];
   \   00000078   1500               MOVS     R5,R2
   \   0000007A   4155               STRB     R1,[R0, R5]
   \   0000007C   521C               ADDS     R2,R2,#+1
   \   0000007E   1206               LSLS     R2,R2,#+24
   \   00000080   120E               LSRS     R2,R2,#+24
    495               RF_Tx.Buff[BTS++]=Preambu[1];
   \   00000082   1500               MOVS     R5,R2
   \   00000084   4155               STRB     R1,[R0, R5]
   \   00000086   521C               ADDS     R2,R2,#+1
   \   00000088   1206               LSLS     R2,R2,#+24
   \   0000008A   120E               LSRS     R2,R2,#+24
    496               RF_Tx.Buff[BTS++]=Preambu[2];
   \   0000008C   1500               MOVS     R5,R2
   \   0000008E   4155               STRB     R1,[R0, R5]
   \   00000090   521C               ADDS     R2,R2,#+1
   \   00000092   1206               LSLS     R2,R2,#+24
   \   00000094   120E               LSRS     R2,R2,#+24
    497               RF_Tx.Buff[BTS++]=0x00;
   \   00000096   1100               MOVS     R1,R2
   \   00000098   1D00               MOVS     R5,R3
   \   0000009A   4554               STRB     R5,[R0, R1]
   \   0000009C   521C               ADDS     R2,R2,#+1
   \   0000009E   1206               LSLS     R2,R2,#+24
   \   000000A0   120E               LSRS     R2,R2,#+24
    498               RF_Tx.Buff[BTS]=0x00;
   \   000000A2   1100               MOVS     R1,R2
   \   000000A4   4354               STRB     R3,[R0, R1]
    499               
    500               
    501               //for (char i=0; i<BTS; i++) RF_Tx.Buff[i]=DTS[i];
    502               RF_Tx.BytesToSend=BTS;
   \   000000A6   0275               STRB     R2,[R0, #+20]
    503               if ((RF_Status.Transmit==0) && (RF_Status.EnTx) && (RF_Status.InitTx==0))  RF_transmit();
   \   000000A8   207A               LDRB     R0,[R4, #+8]
   \   000000AA   0028               CMP      R0,#+0
   \   000000AC   07D1               BNE      ??RF_SendFarm_4
   \   000000AE   A078               LDRB     R0,[R4, #+2]
   \   000000B0   0028               CMP      R0,#+0
   \   000000B2   04D0               BEQ      ??RF_SendFarm_4
   \   000000B4   E078               LDRB     R0,[R4, #+3]
   \   000000B6   0028               CMP      R0,#+0
   \   000000B8   01D1               BNE      ??RF_SendFarm_4
   \   000000BA   ........           BL       RF_transmit
    504          
    505               
    506               
    507               RF_Status.EnableRX();
   \                     ??RF_SendFarm_4:
   \   000000BE   E069               LDR      R0,[R4, #+28]
   \   000000C0   ........           BL       __iar_via_R0
    508          } 
   \   000000C4   FEBC               POP      {R1-R7}
   \   000000C6   01BC               POP      {R0}
   \   000000C8   0047               BX       R0               ;; return
   \   000000CA   C046               Nop      
   \                     ??RF_SendFarm_0:
   \   000000CC   ........           DC32     RF_Status
   \   000000D0   ........           DC32     RF_Tx
    509          //-----------------------------------------------------------------------------
    510          
    511          
    512          
    513          
    514          
    515          
    516          //-----------------------------------------------------------------------------
    517          //!  Nazwa funkcji :    RF_transmit
    518          //!  Funkcja wysy³a dane przez RF12
    519          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    520          void RF_transmit(void)
    521          {
   \                     RF_transmit:
   \   00000000   10B5               PUSH     {R4,LR}
    522             if ((RF_Tx.BytesToSend==0) || (AT91C_BASE_PIOA->PIO_PDSR & RfIntBUS)) return;
   \   00000002   1248               LDR      R0,??RF_transmit_0  ;; RF_Tx
   \   00000004   017D               LDRB     R1,[R0, #+20]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   1CD0               BEQ      ??RF_transmit_1
   \   0000000A   114A               LDR      R2,??RF_transmit_0+0x4  ;; 0xfffff43c
   \   0000000C   1268               LDR      R2,[R2, #+0]
   \   0000000E   5205               LSLS     R2,R2,#+21
   \   00000010   18D4               BMI      ??RF_transmit_1
    523             
    524             if (RF_Status.Transmit) 
   \   00000012   104A               LDR      R2,??RF_transmit_0+0x8  ;; RF_Status + 8
   \   00000014   1278               LDRB     R2,[R2, #+0]
   \   00000016   002A               CMP      R2,#+0
   \   00000018   14D0               BEQ      ??RF_transmit_1
    525             {
    526                char BTS=RF_Tx.Buff[0];
   \   0000001A   0278               LDRB     R2,[R0, #+0]
    527                RF_Tx.BytesToSend--;
   \   0000001C   491E               SUBS     R1,R1,#+1
   \   0000001E   0175               STRB     R1,[R0, #+20]
    528                for (char i=0; i<RF_Tx.BytesToSend; i++)  RF_Tx.Buff[i]=RF_Tx.Buff[i+1]; //przesuñ kolejke
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   05E0               B        ??RF_transmit_2
   \                     ??RF_transmit_3:
   \   00000024   C318               ADDS     R3,R0,R3
   \   00000026   5C78               LDRB     R4,[R3, #+1]
   \   00000028   1C70               STRB     R4,[R3, #+0]
   \   0000002A   491C               ADDS     R1,R1,#+1
   \   0000002C   0906               LSLS     R1,R1,#+24
   \   0000002E   090E               LSRS     R1,R1,#+24
   \                     ??RF_transmit_2:
   \   00000030   0B00               MOVS     R3,R1
   \   00000032   047D               LDRB     R4,[R0, #+20]
   \   00000034   A342               CMP      R3,R4
   \   00000036   F5D3               BCC      ??RF_transmit_3
    529                SPI_SendWord((0xB800 | BTS),Cs_RF); //wylij bajt
                       ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000038   0221               MOVS     R1,#+2
   \   0000003A   B820               MOVS     R0,#+184
   \   0000003C   0002               LSLS     R0,R0,#+8        ;; #+47104
   \   0000003E   1043               ORRS     R0,R0,R2
   \   00000040   ........           BL       SPI_SendWord
   \                     ??RF_transmit_1:
   \   00000044   10BC               POP      {R4}
   \   00000046   01BC               POP      {R0}
   \   00000048   0047               BX       R0               ;; return
   \   0000004A   C046               Nop      
   \                     ??RF_transmit_0:
   \   0000004C   ........           DC32     RF_Tx
   \   00000050   3CF4FFFF           DC32     0xfffff43c
   \   00000054   ........           DC32     RF_Status + 8
    530             }
    531          }
    532          
    533          
    534          
    535          //-----------------------------------------------------------------------------
    536          //!  Nazwa funkcji :    RF_CheckChannel
    537          //!  Funkcja sprawdza czy kana³ jest wolny
    538          //-----------------------------------------------------------------------------
    539          extern int MenuLevel;
    540          

   \                                 In section Debug.txt, align 4, keep-with-next
    541          char RF_CheckChannel(void)
    542          {
   \                     RF_CheckChannel:
   \   00000000   70B5               PUSH     {R4-R6,LR}
    543               int MenuLevel_Member=MenuLevel;
   \   00000002   0A4C               LDR      R4,??RF_CheckChannel_0  ;; MenuLevel
   \   00000004   2568               LDR      R5,[R4, #+0]
    544               MenuLevel=3;
   \   00000006   0320               MOVS     R0,#+3
   \   00000008   2060               STR      R0,[R4, #+0]
    545               MenuPaint();
                      ^
Warning[Pe223]: function "MenuPaint" declared implicitly
   \   0000000A   ........           BL       MenuPaint
    546               
    547               RF_Status.ConfResive=0; 
   \   0000000E   084E               LDR      R6,??RF_CheckChannel_0+0x4  ;; RF_Status
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   F072               STRB     R0,[R6, #+11]
    548               
    549          
    550               
    551               Delay(0x100000);
                      ^
Warning[Pe223]: function "Delay" declared implicitly
   \   00000014   8020               MOVS     R0,#+128
   \   00000016   4003               LSLS     R0,R0,#+13       ;; #+1048576
   \   00000018   ........           BL       Delay
    552          
    553               
    554               
    555               MenuLevel=MenuLevel_Member;  
   \   0000001C   2560               STR      R5,[R4, #+0]
    556               MenuPaint();
   \   0000001E   ........           BL       MenuPaint
    557               return RF_Status.ConfResive;
   \   00000022   F07A               LDRB     R0,[R6, #+11]
   \   00000024   70BC               POP      {R4-R6}
   \   00000026   02BC               POP      {R1}
   \   00000028   0847               BX       R1               ;; return
   \   0000002A   C046               Nop      
   \                     ??RF_CheckChannel_0:
   \   0000002C   ........           DC32     MenuLevel
   \   00000030   ........           DC32     RF_Status
    558          
    559          }

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   19820000           DC32     0x8219

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   99820000           DC32     0x8299

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     RF_Tx + 20

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   00F4FFFF           DC32     0xfffff400

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     RF_Status

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     RF_Tx

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   67800000           DC32     0x8067

   Maximum stack usage in bytes:

     Function                    .cstack
     --------                    -------
     AT91F_AIC_EnableIt               0
     AT91F_PIO_CfgInput               0
     AT91F_PIO_InterruptEnable        0
     AT91F_PMC_EnablePeriphClock      0
     ConfigureRFBus                   8
     InitRF_Interrupt                16
     RF_CheckChannel                 16
     RF_Init                          8
     RF_Int                           8
     RF_ReciveByte                   16
     RF_SendFarm                     32
     RF_transmit                      8
     SPI_RFM12_Execute               24
     _RF_EnableRX                     8
     _RF_EnableTX                    16
     _pRF_Status                      0


   Section sizes:

     Function/Label              Bytes
     --------------              -----
     AT91F_AIC_EnableIt            12
     AT91F_PIO_CfgInput             6
     AT91F_PIO_InterruptEnable      4
     AT91F_PMC_EnablePeriphClock    4
     RF_Rx                         24
     Preambu                        4
     SynKay                         4
     _RF_EnableTX                  56
     _RF_EnableRX                  64
     _pRF_Status                   20
     InitRF_Interrupt              44
     RF_Int                        80
     ConfigureRFBus                32
     RF_Tx                         25
     SPI_RFM12_Read                 1
     RF_Status                     32
     tmp_int                        1
     RF_Init                       56
     CountVal                       1
     SPI_RFM12_Execute            768
     RF_ReciveByte                140
     RF_SendFarm                  212
     RF_transmit                   88
     RF_CheckChannel               52
     ??DataTable2                   4
     ??DataTable6                   4
     ??DataTable10                  4
     ??DataTable11                  4
     ??DataTable12                  4
     ??DataTable13                  4
     ??DataTable14                  4
      Others                        2

 
    83 bytes in section .bss
     1 byte  in section .data
     8 bytes in section .rodata
 1 668 bytes in section Debug.txt
 
 1 640 bytes of CODE  memory (+ 28 bytes shared)
     8 bytes of CONST memory
    84 bytes of DATA  memory

Errors: none
Warnings: 35
