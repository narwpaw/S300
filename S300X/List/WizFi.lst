###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           04/Jul/2012  21:50:41 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\Framework\WizFi.c                             #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\Framework\WizFi.c" -D AT91SAM7S256 -D         #
#                    AT91SAM7SEK -D iH -D __ALARM -D __WIFI_MODULE -lC        #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\S300X\List\" --diag_suppress Pa082 -o         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\S300X\Obj\" --no_unroll --no_inline           #
#                    --no_tbaa --no_scheduling --debug --endian little --cpu  #
#                    ARM7TDMI -e --fpu None --dlib_config "C:\Program         #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    5.0\ARM\INC\DLib_Config_Normal.h" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v0.6 - 18.05.2012\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v0.6 - 18.05.2012\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v0.6 - 18.05.2012\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\Framework\Configuration\" -I "C:\Program      #
#                    Files\IAR Systems\Embedded Workbench 5.0\ARM\INC\"       #
#                    --section .text=Debug.txt --interwork --cpu_mode thumb   #
#                    -Om                                                      #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\S300X\List\WizFi.lst                          #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\S300X\Obj\WizFi.o                             #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\WizFi.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                 CEURON                                                   *//
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : WizFi.c                                 *//
      7          //*  Opis                         : Obs³uga modu³u WizFi                      *//
      8          //*  Autor                        : Pawe³ Narwojsz                           *//
      9          //*  Data utrzorzenia             : 31.01.2012                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*//
     19          //****************************************************************************//
     20          
     21          #include "WizFi.h"

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline

   
   ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\WizFi.h",146  Warning[Pe001]: 
          last line of file ends without a newline
     22          #include "Framework.h"
     23          #include "core/device.h"                                                        //aduje bibliotreki dla odpowiedniego procesora
     24          #include "main_H.h" 
     25          #include "string.h"

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __intrinsic __code __interwork char *strstr(char const *, char const *)
   \                     strstr:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   ........           BL       __iar_Strstr
   \   00000006   08BC               POP      {R3}
   \   00000008   02BC               POP      {R1}
   \   0000000A   0847               BX       R1               ;; return
     26          #include "WizFiCommand.h"
     27          
     28          
     29          
     30          
     31          
     32          /*
     33            extern char Variables[]; 
     34            extern BYTE Buff_TX_1[];
     35            extern short int VariablesAnal[];
     36            extern unsigned long long  g_counter;
     37            long long WiFi_TimeOut_Counter;
     38            
     39            
     40            
     41                  
     42           _WiFi WiFi;
     43           _WiFiStatus  WiFiStat;
     44           _HTTP  HTTP;
     45           //_SSID   g_SSID_List[20];
     46          */ 
     47          
     48          
     49          extern unsigned long long  g_counter;                                              //globalny licznik milisekundowy od w³¹czenia/restartu sterownika
     50          extern char Variables[];    //zmienne
     51          extern short int VariablesAnal[];    //zmienne
     52          extern _ProgramTab gProg;
     53          extern _MainStage  MainStage; 
     54          
     55            //
     56          //funkcja CheckVarChangeHTTP --------------------------------
     57          //funkcja sprawdza czy zmieni³y siê zmienne sprawdzane przez strone web. Je¿eli tak to wyœlij zmiany

   \                                 In section Debug.txt, align 4, keep-with-next
     58          void CheckVarChangeHTTP(char *SendBuff,  AT91PS_USART USART, _Net *Net)
     59          {
   \                     CheckVarChangeHTTP:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   1600               MOVS     R6,R2
   \   00000004   7078               LDRB     R0,[R6, #+1]
   \   00000006   0328               CMP      R0,#+3
   \   00000008   5ED1               BNE      ??CheckVarChangeHTTP_0
     60          
     61            static long long AnalogPeriod;
     62            
     63            if (Net->Status.HostLink==CONNECTED)
     64            {
     65               char Zmiana=0;
   \   0000000A   0022               MOVS     R2,#+0
   \   0000000C   1300               MOVS     R3,R2
     66               for (char IDX=0; IDX<Net->HTTP.VarSetCount; IDX++)
   \   0000000E   1EE0               B        ??CheckVarChangeHTTP_1
     67               {  
     68                 switch (Net->HTTP.VarSet[IDX].VarType)
     69                 {                  
     70                    case 'b': 
     71                         if (((Variables[Net->HTTP.VarSet[IDX].VarNr/8]>>(Net->HTTP.VarSet[IDX].VarNr%8))&0x1) != (Net->HTTP.VarSet[IDX].Value)) {Zmiana++;}
     72                    break;
     73                    case 'a': 
     74                      if (AnalogPeriod<g_counter) {Zmiana++; AnalogPeriod=g_counter+30000;}
   \                     ??CheckVarChangeHTTP_2:
   \   00000010   6C46               MOV      R4,SP
   \   00000012   ....               LDR      R0,??DataTable4  ;; g_counter
   \   00000014   03C8               LDM      R0!,{R0,R1}
   \   00000016   03C4               STM      R4!,{R0,R1}
   \   00000018   2D4F               LDR      R7,??CheckVarChangeHTTP_3  ;; ??AnalogPeriod
   \   0000001A   03CF               LDM      R7!,{R0,R1}
   \   0000001C   083F               SUBS     R7,R7,#+8
   \   0000001E   0400               MOVS     R4,R0
   \   00000020   0D00               MOVS     R5,R1
   \   00000022   6846               MOV      R0,SP
   \   00000024   03C8               LDM      R0!,{R0,R1}
   \   00000026   8D42               CMP      R5,R1
   \   00000028   0ED8               BHI      ??CheckVarChangeHTTP_4
   \   0000002A   01D3               BCC      ??CheckVarChangeHTTP_5
   \   0000002C   8442               CMP      R4,R0
   \   0000002E   0BD2               BCS      ??CheckVarChangeHTTP_4
   \                     ??CheckVarChangeHTTP_5:
   \   00000030   5B1C               ADDS     R3,R3,#+1
   \   00000032   1B06               LSLS     R3,R3,#+24
   \   00000034   1B0E               LSRS     R3,R3,#+24
   \   00000036   6846               MOV      R0,SP
   \   00000038   03C8               LDM      R0!,{R0,R1}
   \   0000003A   0400               MOVS     R4,R0
   \   0000003C   0D00               MOVS     R5,R1
   \   0000003E   2548               LDR      R0,??CheckVarChangeHTTP_3+0x4  ;; 0x7530
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   0019               ADDS     R0,R0,R4
   \   00000044   6941               ADCS     R1,R1,R5
   \   00000046   03C7               STM      R7!,{R0,R1}
   \                     ??CheckVarChangeHTTP_4:
   \   00000048   521C               ADDS     R2,R2,#+1
   \   0000004A   1206               LSLS     R2,R2,#+24
   \   0000004C   120E               LSRS     R2,R2,#+24
   \                     ??CheckVarChangeHTTP_1:
   \   0000004E   1000               MOVS     R0,R2
   \   00000050   EA21               MOVS     R1,#+234
   \   00000052   715C               LDRB     R1,[R6, R1]
   \   00000054   8842               CMP      R0,R1
   \   00000056   1ED2               BCS      ??CheckVarChangeHTTP_6
   \   00000058   8000               LSLS     R0,R0,#+2
   \   0000005A   3018               ADDS     R0,R6,R0
   \   0000005C   EE30               ADDS     R0,R0,#+238
   \   0000005E   0178               LDRB     R1,[R0, #+0]
   \   00000060   6129               CMP      R1,#+97
   \   00000062   D5D0               BEQ      ??CheckVarChangeHTTP_2
   \   00000064   6229               CMP      R1,#+98
   \   00000066   02D0               BEQ      ??CheckVarChangeHTTP_7
   \   00000068   6329               CMP      R1,#+99
   \   0000006A   D1D0               BEQ      ??CheckVarChangeHTTP_2
   \   0000006C   ECE7               B        ??CheckVarChangeHTTP_4
   \                     ??CheckVarChangeHTTP_7:
   \   0000006E   4178               LDRB     R1,[R0, #+1]
   \   00000070   C910               ASRS     R1,R1,#+3
   \   00000072   194C               LDR      R4,??CheckVarChangeHTTP_3+0x8  ;; Variables
   \   00000074   645C               LDRB     R4,[R4, R1]
   \   00000076   4178               LDRB     R1,[R0, #+1]
   \   00000078   0D00               MOVS     R5,R1
   \   0000007A   ED08               LSRS     R5,R5,#+3
   \   0000007C   ED00               LSLS     R5,R5,#+3
   \   0000007E   491B               SUBS     R1,R1,R5
   \   00000080   0C41               ASRS     R4,R4,R1
   \   00000082   0121               MOVS     R1,#+1
   \   00000084   2140               ANDS     R1,R1,R4
   \   00000086   0224               MOVS     R4,#+2
   \   00000088   005F               LDRSH    R0,[R0, R4]
   \   0000008A   8142               CMP      R1,R0
   \   0000008C   DCD0               BEQ      ??CheckVarChangeHTTP_4
   \   0000008E   5B1C               ADDS     R3,R3,#+1
   \   00000090   1B06               LSLS     R3,R3,#+24
   \   00000092   1B0E               LSRS     R3,R3,#+24
   \   00000094   D8E7               B        ??CheckVarChangeHTTP_4
     75                    break;  
     76                    case 'c': 
     77                      if (AnalogPeriod<g_counter) {Zmiana++; AnalogPeriod=g_counter+30000;}
     78                   
     79                     
     80                    break; 
     81                    
     82                 }   
     83               }
     84             
     85               if (Zmiana>0) 
   \                     ??CheckVarChangeHTTP_6:
   \   00000096   002B               CMP      R3,#+0
   \   00000098   16D0               BEQ      ??CheckVarChangeHTTP_0
     86               {
     87                 if (Net->Status.HttpNextQueryTime>g_counter+100) Net->Status.HttpNextQueryTime=g_counter+100;  //przyœpieszenie wys³ania danych
   \   0000009A   6A46               MOV      R2,SP
   \   0000009C   ....               LDR      R0,??DataTable4  ;; g_counter
   \   0000009E   03C8               LDM      R0!,{R0,R1}
   \   000000A0   03C2               STM      R2!,{R0,R1}
   \   000000A2   6846               MOV      R0,SP
   \   000000A4   03C8               LDM      R0!,{R0,R1}
   \   000000A6   0022               MOVS     R2,#+0
   \   000000A8   6430               ADDS     R0,R0,#+100
   \   000000AA   5141               ADCS     R1,R1,R2
   \   000000AC   3200               MOVS     R2,R6
   \   000000AE   3032               ADDS     R2,R2,#+48
   \   000000B0   0CCA               LDM      R2!,{R2,R3}
   \   000000B2   9942               CMP      R1,R3
   \   000000B4   05D8               BHI      ??CheckVarChangeHTTP_8
   \   000000B6   01D3               BCC      ??CheckVarChangeHTTP_9
   \   000000B8   9042               CMP      R0,R2
   \   000000BA   02D2               BCS      ??CheckVarChangeHTTP_8
   \                     ??CheckVarChangeHTTP_9:
   \   000000BC   3200               MOVS     R2,R6
   \   000000BE   3032               ADDS     R2,R2,#+48
   \   000000C0   03C2               STM      R2!,{R0,R1}
     88                 Net->Status.NextHttpOrder=HTTP_POST;
   \                     ??CheckVarChangeHTTP_8:
   \   000000C2   761C               ADDS     R6,R6,#+1
   \   000000C4   0E20               MOVS     R0,#+14
   \   000000C6   B070               STRB     R0,[R6, #+2]
     89               }
     90            }
     91          
     92          }
   \                     ??CheckVarChangeHTTP_0:
   \   000000C8   FEBC               POP      {R1-R7}
   \   000000CA   01BC               POP      {R0}
   \   000000CC   0047               BX       R0               ;; return
   \   000000CE   C046               Nop      
   \                     ??CheckVarChangeHTTP_3:
   \   000000D0   ........           DC32     ??AnalogPeriod
   \   000000D4   30750000           DC32     0x7530
   \   000000D8   ........           DC32     Variables

   \                                 In section .bss, align 8
   \                     ??AnalogPeriod:
   \   00000000                      DS8 8
     93          
     94          
     95          
     96              
     97              

   \                                 In section .bss, align 4
     98          char *pt1;    
   \                     pt1:
   \   00000000                      DS8 4
     99          char *pt2;
   \                     pt2:
   \   00000004                      DS8 4

   \                                 In section Debug.txt, align 4, keep-with-next
    100          void InitWizFi(AT91PS_USART USART, _Net *Net)
    101          {
   \                     InitWizFi:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0C00               MOVS     R4,R1
    102            //Net->WiFi.HttpQueryPeriod=5000;    //[ms] okres odpytywania hosta
    103            Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000004   2500               MOVS     R5,R4
   \   00000006   3835               ADDS     R5,R5,#+56
   \   00000008   ....               LDR      R0,??DataTable4  ;; g_counter
   \   0000000A   0CC8               LDM      R0!,{R2,R3}
   \   0000000C   ....               LDR      R0,??DataTable3  ;; 0x2710
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   8018               ADDS     R0,R0,R2
   \   00000012   5941               ADCS     R1,R1,R3
   \   00000014   03C5               STM      R5!,{R0,R1}
   \   00000016   083D               SUBS     R5,R5,#+8
    104               
    105             pt1=(char*)&Net->WiFi;
   \   00000018   1248               LDR      R0,??InitWizFi_0  ;; pt1
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   4831               ADDS     R1,R1,#+72
   \   0000001E   0160               STR      R1,[R0, #+0]
    106             pt2=(char*)(&AT91C_IFLASH_MEM->Config.WiFi);
   \   00000020   1149               LDR      R1,??InitWizFi_0+0x4  ;; 0x13d8b8
   \   00000022   4160               STR      R1,[R0, #+4]
    107            short size=sizeof(*Net);
    108            for (short i=0; i<size; i++) pt1[i]=pt2[i];
   \   00000024   0022               MOVS     R2,#+0
   \   00000026   06E0               B        ??InitWizFi_1
   \                     ??InitWizFi_2:
   \   00000028   0368               LDR      R3,[R0, #+0]
   \   0000002A   4668               LDR      R6,[R0, #+4]
   \   0000002C   B65C               LDRB     R6,[R6, R2]
   \   0000002E   9E54               STRB     R6,[R3, R2]
   \   00000030   521C               ADDS     R2,R2,#+1
   \   00000032   1204               LSLS     R2,R2,#+16
   \   00000034   1214               ASRS     R2,R2,#+16
   \                     ??InitWizFi_1:
   \   00000036   C823               MOVS     R3,#+200
   \   00000038   5B00               LSLS     R3,R3,#+1        ;; #+400
   \   0000003A   9A42               CMP      R2,R3
   \   0000003C   F4DB               BLT      ??InitWizFi_2
    109            
    110            
    111            Net->WiFi.On=AT91C_IFLASH_MEM->Config.WiFi.On;
   \   0000003E   0878               LDRB     R0,[R1, #+0]
   \   00000040   2874               STRB     R0,[R5, #+16]
    112            Net->WiFi.HttpQueryPeriod=AT91C_IFLASH_MEM->Config.WiFi.HttpQueryPeriod;
   \   00000042   E634               ADDS     R4,R4,#+230
   \   00000044   0948               LDR      R0,??InitWizFi_0+0x8  ;; 0x13d956
   \   00000046   0088               LDRH     R0,[R0, #+0]
   \   00000048   2080               STRH     R0,[R4, #+0]
    113            if ((Net->WiFi.HttpQueryPeriod==0) || (Net->WiFi.HttpQueryPeriod>60)) Net->WiFi.HttpQueryPeriod=8;              //je¿eli 0 to ustaw 8 czyli 800ms   
   \   0000004A   0020               MOVS     R0,#+0
   \   0000004C   205E               LDRSH    R0,[R4, R0]
   \   0000004E   0028               CMP      R0,#+0
   \   00000050   03D0               BEQ      ??InitWizFi_3
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   205E               LDRSH    R0,[R4, R0]
   \   00000056   3D28               CMP      R0,#+61
   \   00000058   01DB               BLT      ??InitWizFi_4
   \                     ??InitWizFi_3:
   \   0000005A   0820               MOVS     R0,#+8
   \   0000005C   2080               STRH     R0,[R4, #+0]
    114          }   
   \                     ??InitWizFi_4:
   \   0000005E   70BC               POP      {R4-R6}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??InitWizFi_0:
   \   00000064   ........           DC32     pt1
   \   00000068   B8D81300           DC32     0x13d8b8
   \   0000006C   56D91300           DC32     0x13d956
    115          
    116          
    117           
    118          
    119          //G³ówna funkcja WiFi
    120          //Funkcja wywo³ywania ci¹gle w pêtli g³ównej programu

   \                                 In section Debug.txt, align 4, keep-with-next
    121          void WiFi(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    122          {
   \                     WiFi:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0F00               MOVS     R7,R1
   \   00000006   1600               MOVS     R6,R2
   \   00000008   1D00               MOVS     R5,R3
    123               if (Net->Status.Error>3)    //przekroczenie dopuszczalnej iloœci b³êdów
   \   0000000A   287D               LDRB     R0,[R5, #+20]
   \   0000000C   0428               CMP      R0,#+4
   \   0000000E   0CD3               BCC      ??WiFi_0
    124               {
    125                  Net->Status.Error=0;
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   0100               MOVS     R1,R0
   \   00000014   2975               STRB     R1,[R5, #+20]
    126                  Net->Status.HostLink=DISCONNECTED;
   \   00000016   6970               STRB     R1,[R5, #+1]
    127                  Net->Status.AccesPointAssociate=DISCONNECTED;
   \   00000018   2870               STRB     R0,[R5, #+0]
    128                  Net->Status.Timeout=0;
   \   0000001A   2A00               MOVS     R2,R5
   \   0000001C   3832               ADDS     R2,R2,#+56
   \   0000001E   03C2               STM      R2!,{R0,R1}
    129                  Net->Status.HttpNextQueryTime=0;
   \   00000020   2A00               MOVS     R2,R5
   \   00000022   3032               ADDS     R2,R2,#+48
   \   00000024   03C2               STM      R2!,{R0,R1}
    130                  Net->Status.FreezTime=0;
   \   00000026   2864               STR      R0,[R5, #+64]
   \   00000028   6964               STR      R1,[R5, #+68]
    131               }
    132            
    133            
    134               //sprawdzenie Timeoutu
    135               if ((Net->Status.FreezTime==0) || (Net->Status.FreezTime<g_counter))
   \                     ??WiFi_0:
   \   0000002A   6A46               MOV      R2,SP
   \   0000002C   ....               LDR      R0,??DataTable4  ;; g_counter
   \   0000002E   03C8               LDM      R0!,{R0,R1}
   \   00000030   03C2               STM      R2!,{R0,R1}
   \   00000032   286C               LDR      R0,[R5, #+64]
   \   00000034   696C               LDR      R1,[R5, #+68]
   \   00000036   0029               CMP      R1,#+0
   \   00000038   01D1               BNE      ??WiFi_1
   \   0000003A   0028               CMP      R0,#+0
   \   0000003C   08D0               BEQ      ??WiFi_2
   \                     ??WiFi_1:
   \   0000003E   0200               MOVS     R2,R0
   \   00000040   0B00               MOVS     R3,R1
   \   00000042   6846               MOV      R0,SP
   \   00000044   03C8               LDM      R0!,{R0,R1}
   \   00000046   8B42               CMP      R3,R1
   \   00000048   67D8               BHI      ??WiFi_3
   \   0000004A   01D3               BCC      ??WiFi_2
   \   0000004C   8242               CMP      R2,R0
   \   0000004E   64D2               BCS      ??WiFi_3
    136               {  
    137                   if ((Net->Status.Timeout<g_counter) && (Net->Status.Timeout>0))
   \                     ??WiFi_2:
   \   00000050   2800               MOVS     R0,R5
   \   00000052   3830               ADDS     R0,R0,#+56
   \   00000054   0CC8               LDM      R0!,{R2,R3}
   \   00000056   6846               MOV      R0,SP
   \   00000058   03C8               LDM      R0!,{R0,R1}
   \   0000005A   8B42               CMP      R3,R1
   \   0000005C   29D8               BHI      ??WiFi_4
   \   0000005E   01D3               BCC      ??WiFi_5
   \   00000060   8242               CMP      R2,R0
   \   00000062   26D2               BCS      ??WiFi_4
   \                     ??WiFi_5:
   \   00000064   2800               MOVS     R0,R5
   \   00000066   3830               ADDS     R0,R0,#+56
   \   00000068   03C8               LDM      R0!,{R0,R1}
   \   0000006A   0029               CMP      R1,#+0
   \   0000006C   01D1               BNE      ??WiFi_6
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   1FD0               BEQ      ??WiFi_4
    138                   {//Timeout przekroczony
    139                     
    140                      Net->Status.CurrentOrder=WizFi_NC;
   \                     ??WiFi_6:
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0100               MOVS     R1,R0
   \   00000076   A970               STRB     R1,[R5, #+2]
    141                      Net->Status.RepeatOrder=0; 
   \   00000078   2971               STRB     R1,[R5, #+4]
    142                     
    143                      //je¿eli utracono po³¹czenie z hostem
    144                      if (Net->Status.AccesPointAssociate==CONNECTED)                             //je¿eli brak po³¹czenia z serwerem hosta
   \   0000007A   2978               LDRB     R1,[R5, #+0]
   \   0000007C   0329               CMP      R1,#+3
   \   0000007E   0DD1               BNE      ??WiFi_7
    145                          {
    146                             Net->Status.HostLink=DISCONNECTED;
   \   00000080   6870               STRB     R0,[R5, #+1]
    147                             Net->Status.Timeout=0;
   \   00000082   0100               MOVS     R1,R0
   \   00000084   2A00               MOVS     R2,R5
   \   00000086   3832               ADDS     R2,R2,#+56
   \   00000088   03C2               STM      R2!,{R0,R1}
    148                             Net->Status.HttpNextQueryTime=0;
   \   0000008A   2A00               MOVS     R2,R5
   \   0000008C   3032               ADDS     R2,R2,#+48
   \   0000008E   03C2               STM      R2!,{R0,R1}
    149                             Net->Status.FreezTime=0;
   \   00000090   2864               STR      R0,[R5, #+64]
   \   00000092   6964               STR      R1,[R5, #+68]
    150                             Net->Status.Error++;
   \   00000094   287D               LDRB     R0,[R5, #+20]
   \   00000096   401C               ADDS     R0,R0,#+1
   \   00000098   2875               STRB     R0,[R5, #+20]
   \   0000009A   3EE0               B        ??WiFi_3
    151                          }else{
    152                             Net->Status.AccesPointAssociate=DISCONNECTED;
   \                     ??WiFi_7:
   \   0000009C   2870               STRB     R0,[R5, #+0]
    153                             Net->Status.Timeout=0;
   \   0000009E   0100               MOVS     R1,R0
   \   000000A0   2A00               MOVS     R2,R5
   \   000000A2   3832               ADDS     R2,R2,#+56
   \   000000A4   03C2               STM      R2!,{R0,R1}
    154                             Net->Status.HttpNextQueryTime=0;
   \   000000A6   2A00               MOVS     R2,R5
   \   000000A8   3032               ADDS     R2,R2,#+48
   \   000000AA   03C2               STM      R2!,{R0,R1}
    155                             Net->Status.FreezTime=0;
   \   000000AC   4035               ADDS     R5,R5,#+64
   \   000000AE   03C5               STM      R5!,{R0,R1}
   \   000000B0   33E0               B        ??WiFi_3
    156                          }
    157                   }else{
    158                      if (Net->Status.AccesPointAssociate==DISCONNECTED)                      //je¿eli brak po³¹czenia z acces pointem to zainicjalizuj ³¹czenie
   \                     ??WiFi_4:
   \   000000B2   2878               LDRB     R0,[R5, #+0]
   \   000000B4   0028               CMP      R0,#+0
   \   000000B6   19D1               BNE      ??WiFi_8
    159                      {
    160                          for (short i=0; i<sizeof(Buff_RX); i++) Buff_RX[i]=0;
   \   000000B8   0100               MOVS     R1,R0
   \   000000BA   04E0               B        ??WiFi_9
   \                     ??WiFi_10:
   \   000000BC   0200               MOVS     R2,R0
   \   000000BE   6254               STRB     R2,[R4, R1]
   \   000000C0   491C               ADDS     R1,R1,#+1
   \   000000C2   0904               LSLS     R1,R1,#+16
   \   000000C4   0914               ASRS     R1,R1,#+16
   \                     ??WiFi_9:
   \   000000C6   0A00               MOVS     R2,R1
   \   000000C8   1204               LSLS     R2,R2,#+16
   \   000000CA   120C               LSRS     R2,R2,#+16
   \   000000CC   042A               CMP      R2,#+4
   \   000000CE   F5D3               BCC      ??WiFi_10
    161                          Net->Status.AccesPointAssociate=CONNECTING;                         //zmiana statusu RouterAssociate na ³¹czenie 
   \   000000D0   0221               MOVS     R1,#+2
   \   000000D2   2970               STRB     R1,[R5, #+0]
    162                          Net->Status.HostLink=DISCONNECTED;                                  //reset flagi stanu po³¹czenie z hostem
   \   000000D4   0100               MOVS     R1,R0
   \   000000D6   6970               STRB     R1,[R5, #+1]
    163                          Net->Status.CurrentOrder=WizFi_NC;                                  //reset flagi rozkazu
   \   000000D8   A970               STRB     R1,[R5, #+2]
    164                          Net->Status.RepeatOrder=0;
   \   000000DA   2971               STRB     R1,[R5, #+4]
    165                          Net->Status.NextHttpOrder=WizFi_NC;                                 //reset flagi oczekuj¹cego rozkazu
   \   000000DC   E870               STRB     R0,[R5, #+3]
    166                          
    167                          AP_Associate(Buff_RX, Buff_TX,USART,Net);                                    //inicjalizacja po³¹czenie z acces point'em                                                                                                         
   \   000000DE   2B00               MOVS     R3,R5
   \   000000E0   3200               MOVS     R2,R6
   \   000000E2   3900               MOVS     R1,R7
   \   000000E4   2000               MOVS     R0,R4
   \   000000E6   ........           BL       AP_Associate
   \   000000EA   16E0               B        ??WiFi_3
    168                      }else if (Net->Status.AccesPointAssociate==CONNECTED) 
   \                     ??WiFi_8:
   \   000000EC   0328               CMP      R0,#+3
   \   000000EE   14D1               BNE      ??WiFi_3
    169                      {
    170                        if (Net->Status.HostLink==DISCONNECTED)                               //je¿eli brak po³¹czenia z serwerem hosta
   \   000000F0   6878               LDRB     R0,[R5, #+1]
   \   000000F2   0028               CMP      R0,#+0
   \   000000F4   06D1               BNE      ??WiFi_11
    171                          {
    172                             WizFiCommand_AT_NCTCP(Buff_RX, Buff_TX,USART, Net); 
                                    ^
Warning[Pe223]: function "WizFiCommand_AT_NCTCP" declared implicitly
   \   000000F6   2B00               MOVS     R3,R5
   \   000000F8   3200               MOVS     R2,R6
   \   000000FA   3900               MOVS     R1,R7
   \   000000FC   2000               MOVS     R0,R4
   \   000000FE   ........           BL       WizFiCommand_AT_NCTCP
   \   00000102   0AE0               B        ??WiFi_3
    173                          }else if (Net->Status.HostLink==CONNECTED)                          //je¿eli po³¹czony z serwerem hosta
   \                     ??WiFi_11:
   \   00000104   0328               CMP      R0,#+3
   \   00000106   08D1               BNE      ??WiFi_3
    174                          {
    175                             if( Net->Status.CurrentOrder==WizFi_NC)                          //je¿eli brak bierz¹cych zadañ
   \   00000108   A878               LDRB     R0,[R5, #+2]
   \   0000010A   0028               CMP      R0,#+0
   \   0000010C   05D1               BNE      ??WiFi_3
    176                             {
    177                               //if ((Net->Status.HttpNextQueryTime<g_counter) || (Net->Status.HttpNextQueryTime==0))   //je¿eli spe³niony wymagany czas pomiêdzy odpytywaniami
    178                               //{
    179                                                                                              //HTTP_CheckConnection(Buff_TX,  USART, Net);
    180                                  HTTP_Task(Buff_RX, Buff_TX,USART, Net);                                //wykonaj kolejne zadanie HTTP
   \   0000010E   2B00               MOVS     R3,R5
   \   00000110   3200               MOVS     R2,R6
   \   00000112   3900               MOVS     R1,R7
   \   00000114   2000               MOVS     R0,R4
   \   00000116   ........           BL       HTTP_Task
    181                               //}
    182                             }
    183                          }
    184                      }
    185                     
    186                   } //koniec: if ((Net->Status.Timeout<g_counter) && (Net->Status.Timeout>0))
    187               } //koniec: if ((Net->Status.FreezTime==0) || (Net->Status.FreezTime<g_counter))
    188            
    189          }
   \                     ??WiFi_3:
   \   0000011A   FEBC               POP      {R1-R7}
   \   0000011C   01BC               POP      {R0}
   \   0000011E   0047               BX       R0               ;; return
    190          
    191          
    192          
    193                             
    194          
    195          //G³ówna funkcja interpretacji odpowiedzi

   \                                 In section Debug.txt, align 4, keep-with-next
    196          void WizFiResponseInterpreter(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    197          {
   \                     WizFiResponseInterpreter:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0F00               MOVS     R7,R1
   \   00000006   1500               MOVS     R5,R2
   \   00000008   1E00               MOVS     R6,R3
   \   0000000A   4A49               LDR      R1,??WizFiResponseInterpreter_0  ;; `?<Constant "[DISCONNECT">` + 52
    198                char *pTxt;
    199          
    200                if ((strstr(Buff_RX, "[DISASSOCIATED]")!=NULL) || (strstr(Buff_RX, "[ERROR]")!=NULL))
   \   0000000C   ........           BL       strstr
   \   00000010   0028               CMP      R0,#+0
   \   00000012   05D1               BNE      ??WizFiResponseInterpreter_1
   \   00000014   4849               LDR      R1,??WizFiResponseInterpreter_0+0x4  ;; `?<Constant "[DISCONNECT">` + 68
   \   00000016   2000               MOVS     R0,R4
   \   00000018   ........           BL       strstr
   \   0000001C   0028               CMP      R0,#+0
   \   0000001E   0BD0               BEQ      ??WizFiResponseInterpreter_2
    201                {
    202                   //for (short i=0; i<sizeof(Buff_RX); i++) Buff_RX[i]=0;
    203                  
    204                   Net->Status.AccesPointAssociate=DISCONNECTED;
   \                     ??WizFiResponseInterpreter_1:
   \   00000020   0022               MOVS     R2,#+0
   \   00000022   1000               MOVS     R0,R2
   \   00000024   3070               STRB     R0,[R6, #+0]
    205                   Net->Status.HostLink=DISCONNECTED; 
   \   00000026   7070               STRB     R0,[R6, #+1]
    206                   Net->Status.FreezTime=0;
   \   00000028   0100               MOVS     R1,R0
   \   0000002A   3064               STR      R0,[R6, #+64]
   \   0000002C   7164               STR      R1,[R6, #+68]
    207                   Net->Status.Timeout=0;
   \   0000002E   3300               MOVS     R3,R6
   \   00000030   3833               ADDS     R3,R3,#+56
   \   00000032   03C3               STM      R3!,{R0,R1}
    208                   Net->Status.CurrentOrder=WizFi_NC;
   \   00000034   B270               STRB     R2,[R6, #+2]
   \   00000036   79E0               B        ??WizFiResponseInterpreter_3
    209                   
    210                }
    211                
    212          
    213                else if (Net->Status.AccesPointAssociate==CONNECTING)
   \                     ??WizFiResponseInterpreter_2:
   \   00000038   3078               LDRB     R0,[R6, #+0]
   \   0000003A   0228               CMP      R0,#+2
   \   0000003C   06D1               BNE      ??WizFiResponseInterpreter_4
    214                {
    215                   AP_AssociateResponseInterpreter(Buff_RX,Buff_TX,USART, Net);           //odpowiedz dla zadania 
   \   0000003E   3300               MOVS     R3,R6
   \   00000040   2A00               MOVS     R2,R5
   \   00000042   3900               MOVS     R1,R7
   \   00000044   2000               MOVS     R0,R4
   \   00000046   ........           BL       AP_AssociateResponseInterpreter
   \   0000004A   6FE0               B        ??WizFiResponseInterpreter_3
    216                }else if (Net->Status.AccesPointAssociate==CONNECTED) 
   \                     ??WizFiResponseInterpreter_4:
   \   0000004C   0328               CMP      R0,#+3
   \   0000004E   6DD1               BNE      ??WizFiResponseInterpreter_3
    217                {
    218                    if (strstr(Buff_RX, "send() failed:")!=NULL)
   \   00000050   3A49               LDR      R1,??WizFiResponseInterpreter_0+0x8  ;; `?<Constant "[DISCONNECT">` + 36
   \   00000052   2000               MOVS     R0,R4
   \   00000054   ........           BL       strstr
   \   00000058   0028               CMP      R0,#+0
   \   0000005A   0BD0               BEQ      ??WizFiResponseInterpreter_5
    219                    {
    220                      //for (short i=0; i<sizeof(Buff_RX); i++) Buff_RX[i]=0;
    221                      Net->Status.CurrentOrder=WizFi_NC;
   \   0000005C   0022               MOVS     R2,#+0
   \   0000005E   1000               MOVS     R0,R2
   \   00000060   B070               STRB     R0,[R6, #+2]
    222                      Net->Status.FreezTime=0;
   \   00000062   0100               MOVS     R1,R0
   \   00000064   3064               STR      R0,[R6, #+64]
   \   00000066   7164               STR      R1,[R6, #+68]
    223                      Net->Status.Timeout=0;
   \   00000068   3300               MOVS     R3,R6
   \   0000006A   3833               ADDS     R3,R3,#+56
   \   0000006C   03C3               STM      R3!,{R0,R1}
    224                      Net->Status.NextHttpOrder=0;
                                                      ^
Warning[Pe188]: enumerated type mixed with another type
   \   0000006E   F070               STRB     R0,[R6, #+3]
    225                      Net->Status.HostLink=DISCONNECTED; 
   \   00000070   7270               STRB     R2,[R6, #+1]
   \   00000072   5BE0               B        ??WizFiResponseInterpreter_3
    226                    }
    227                    else if (Net->Status.HostLink==CONNECTING)                            //je¿eli ³¹czenie z hostem
   \                     ??WizFiResponseInterpreter_5:
   \   00000074   7078               LDRB     R0,[R6, #+1]
   \   00000076   0228               CMP      R0,#+2
   \   00000078   06D1               BNE      ??WizFiResponseInterpreter_6
    228                    {
    229                      WizFiResponseCommand_AT_NCTCP(Buff_RX,Buff_TX,USART, Net);          //odpowiedz dla zadania 
                             ^
Warning[Pe223]: function "WizFiResponseCommand_AT_NCTCP" declared implicitly
   \   0000007A   3300               MOVS     R3,R6
   \   0000007C   2A00               MOVS     R2,R5
   \   0000007E   3900               MOVS     R1,R7
   \   00000080   2000               MOVS     R0,R4
   \   00000082   ........           BL       WizFiResponseCommand_AT_NCTCP
   \   00000086   51E0               B        ??WizFiResponseInterpreter_3
    230                      
    231                    }
    232                    else if (Net->Status.HostLink==CONNECTED)                             //je¿eli po³¹czono z hostem
   \                     ??WizFiResponseInterpreter_6:
   \   00000088   0328               CMP      R0,#+3
   \   0000008A   47D1               BNE      ??WizFiResponseInterpreter_7
    233                    {
    234                       pTxt=strstr(Buff_RX, "[DISCONNECT");                               //jê¿eli porzysz³a informacja o roz³¹czeniu
   \   0000008C   2C49               LDR      R1,??WizFiResponseInterpreter_0+0xC  ;; `?<Constant "[DISCONNECT">`
   \   0000008E   2000               MOVS     R0,R4
   \   00000090   ........           BL       strstr
    235                       if ((pTxt!=NULL) && (Net->Status.HostLink==CONNECTED))
   \   00000094   0028               CMP      R0,#+0
   \   00000096   1BD0               BEQ      ??WizFiResponseInterpreter_8
   \   00000098   7178               LDRB     R1,[R6, #+1]
   \   0000009A   0329               CMP      R1,#+3
   \   0000009C   18D1               BNE      ??WizFiResponseInterpreter_8
    236                       {
    237                          if(pTxt[12]==Net->Status.HostChannel) 
   \   0000009E   007B               LDRB     R0,[R0, #+12]
   \   000000A0   717D               LDRB     R1,[R6, #+21]
   \   000000A2   8842               CMP      R0,R1
   \   000000A4   14D1               BNE      ??WizFiResponseInterpreter_8
    238                           {
    239                             for (short i=0; i<sizeof(Buff_RX); i++) Buff_RX[i]=0; 
   \   000000A6   0022               MOVS     R2,#+0
   \   000000A8   1000               MOVS     R0,R2
   \   000000AA   04E0               B        ??WizFiResponseInterpreter_9
   \                     ??WizFiResponseInterpreter_10:
   \   000000AC   1100               MOVS     R1,R2
   \   000000AE   2154               STRB     R1,[R4, R0]
   \   000000B0   401C               ADDS     R0,R0,#+1
   \   000000B2   0004               LSLS     R0,R0,#+16
   \   000000B4   0014               ASRS     R0,R0,#+16
   \                     ??WizFiResponseInterpreter_9:
   \   000000B6   0100               MOVS     R1,R0
   \   000000B8   0904               LSLS     R1,R1,#+16
   \   000000BA   090C               LSRS     R1,R1,#+16
   \   000000BC   0429               CMP      R1,#+4
   \   000000BE   F5D3               BCC      ??WizFiResponseInterpreter_10
    240                             Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   000000C0   ....               LDR      R0,??DataTable6  ;; g_counter
   \   000000C2   03C8               LDM      R0!,{R0,R1}
   \   000000C4   0023               MOVS     R3,#+0
   \   000000C6   3230               ADDS     R0,R0,#+50
   \   000000C8   5941               ADCS     R1,R1,R3
   \   000000CA   3064               STR      R0,[R6, #+64]
   \   000000CC   7164               STR      R1,[R6, #+68]
    241                             Net->Status.HostLink=DISCONNECTED;                           //Roz³¹czenie
   \   000000CE   7270               STRB     R2,[R6, #+1]
    242                           }
    243                        }
    244                       
    245                       
    246                       if (strstr(Buff_RX, "[ERROR: INVALID INPUT]")!=NULL)        //jê¿eli porzysz³a informacja o b³edzie
   \                     ??WizFiResponseInterpreter_8:
   \   000000D0   1C49               LDR      R1,??WizFiResponseInterpreter_0+0x10  ;; `?<Constant "[DISCONNECT">` + 12
   \   000000D2   2000               MOVS     R0,R4
   \   000000D4   ........           BL       strstr
   \   000000D8   0028               CMP      R0,#+0
   \   000000DA   18D0               BEQ      ??WizFiResponseInterpreter_11
    247                        {
    248                            for (short i=0; i<sizeof(Buff_RX); i++) Buff_RX[i]=0;
   \   000000DC   0022               MOVS     R2,#+0
   \   000000DE   1000               MOVS     R0,R2
   \   000000E0   04E0               B        ??WizFiResponseInterpreter_12
   \                     ??WizFiResponseInterpreter_13:
   \   000000E2   1100               MOVS     R1,R2
   \   000000E4   2154               STRB     R1,[R4, R0]
   \   000000E6   401C               ADDS     R0,R0,#+1
   \   000000E8   0004               LSLS     R0,R0,#+16
   \   000000EA   0014               ASRS     R0,R0,#+16
   \                     ??WizFiResponseInterpreter_12:
   \   000000EC   0100               MOVS     R1,R0
   \   000000EE   0904               LSLS     R1,R1,#+16
   \   000000F0   090C               LSRS     R1,R1,#+16
   \   000000F2   0429               CMP      R1,#+4
   \   000000F4   F5D3               BCC      ??WizFiResponseInterpreter_13
    249                            Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   000000F6   ....               LDR      R0,??DataTable6  ;; g_counter
   \   000000F8   03C8               LDM      R0!,{R0,R1}
   \   000000FA   0023               MOVS     R3,#+0
   \   000000FC   3230               ADDS     R0,R0,#+50
   \   000000FE   5941               ADCS     R1,R1,R3
   \   00000100   3064               STR      R0,[R6, #+64]
   \   00000102   7164               STR      R1,[R6, #+68]
    250                            Net->Status.HostLink=DISCONNECTED;                            //Roz³¹czenie
   \   00000104   7270               STRB     R2,[R6, #+1]
    251                            Net->Status.Error++;
   \   00000106   307D               LDRB     R0,[R6, #+20]
   \   00000108   401C               ADDS     R0,R0,#+1
   \   0000010A   3075               STRB     R0,[R6, #+20]
   \   0000010C   0EE0               B        ??WizFiResponseInterpreter_3
    252                        }
    253                        else
    254                        {
    255                            HTTP_QueryResponse(Buff_RX,Buff_TX,USART, Net); 
   \                     ??WizFiResponseInterpreter_11:
   \   0000010E   3300               MOVS     R3,R6
   \   00000110   2A00               MOVS     R2,R5
   \   00000112   3900               MOVS     R1,R7
   \   00000114   2000               MOVS     R0,R4
   \   00000116   ........           BL       HTTP_QueryResponse
   \   0000011A   07E0               B        ??WizFiResponseInterpreter_3
    256                        }
    257                                                                                          //if (Net->Status.CurrentOrder==WizFi_AT_CID)
    258                                                                                          //{
    259                                                                                          //   HTTP_CheckConnectionResponse(Buff_RX,Buff_TX,USART, Net);         
    260                                                                                          //}else{
    261                                                                                          //     HTTP_QueryResponse(Buff_RX,Buff_TX,USART, Net); 
    262                                                                                          //}
    263                    }
    264                    else if (Net->Status.HostLink==DISCONNECTING)
   \                     ??WizFiResponseInterpreter_7:
   \   0000011C   0128               CMP      R0,#+1
   \   0000011E   05D1               BNE      ??WizFiResponseInterpreter_3
    265                    {
    266                       WizFiResponseCommand_AT_NCLOSEALL0(Buff_RX,Buff_TX,USART, Net);
   \   00000120   3300               MOVS     R3,R6
   \   00000122   2A00               MOVS     R2,R5
   \   00000124   3900               MOVS     R1,R7
   \   00000126   2000               MOVS     R0,R4
   \   00000128   ........           BL       WizFiResponseCommand_AT_NCLOSEALL0
    267                    }
    268                }                                                                         //koniec: else if (Net->Status.AccesPointAssociate==CONNECTED) 
    269          }
   \                     ??WizFiResponseInterpreter_3:
   \   0000012C   F8BC               POP      {R3-R7}
   \   0000012E   01BC               POP      {R0}
   \   00000130   0047               BX       R0               ;; return
   \   00000132   C046               Nop      
   \                     ??WizFiResponseInterpreter_0:
   \   00000134   ........           DC32     `?<Constant "[DISCONNECT">` + 52
   \   00000138   ........           DC32     `?<Constant "[DISCONNECT">` + 68
   \   0000013C   ........           DC32     `?<Constant "[DISCONNECT">` + 36
   \   00000140   ........           DC32     `?<Constant "[DISCONNECT">`
   \   00000144   ........           DC32     `?<Constant "[DISCONNECT">` + 12
    270          
    271          
    272          
    273          
    274          
    275          
    276          
    277          //funkcja ³¹czenia z acces point'em

   \                                 In section Debug.txt, align 4, keep-with-next
    278          void AP_Associate(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    279          {
   \                     AP_Associate:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    280                Net->Status.AccesPointAssociate=CONNECTING;                          //zmiana statusu RouterAssociate na ³¹czenie 
   \   00000002   0224               MOVS     R4,#+2
   \   00000004   1C70               STRB     R4,[R3, #+0]
    281                
    282                
    283                switch (Net->Status.CurrentOrder)
   \   00000006   9C78               LDRB     R4,[R3, #+2]
   \   00000008   092C               CMP      R4,#+9
   \   0000000A   22D8               BHI      ??AP_Associate_1
   \   0000000C   01A5               ADR      R5,??AP_Associate_0
   \   0000000E   2D5D               LDRB     R5,[R5, R4]
   \   00000010   AF44               ADD      PC,PC,R5
   \   00000012   C046               Nop      
   \                     ??AP_Associate_0:
   \   00000014   0A0A1016           DC8      +10,+10,+16,+22
   \   00000018   1C22282E           DC8      +28,+34,+40,+46
   \   0000001C   343A               DC8      +52,+58
    284                {
    285                  case WizFi_NC:           WizFiCommand_AT(Buff_RX, Buff_TX,USART, Net);   break;           //kolejny rozkaz
   \                     ??AP_Associate_2:
   \   0000001E   ........           BL       WizFiCommand_AT
   \   00000022   16E0               B        ??AP_Associate_1
    286                  case WizFi_AT:           WizFiCommand_AT(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
    287                  case WizFi_AT_XDUM0:     WizFiCommand_AT_XDUM0(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_3:
   \   00000024   ........           BL       WizFiCommand_AT_XDUM0
   \   00000028   13E0               B        ??AP_Associate_1
    288                  case WizFi_AT_WD:        WizFiCommand_AT_WD(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_4:
   \   0000002A   ........           BL       WizFiCommand_AT_WD
   \   0000002E   10E0               B        ??AP_Associate_1
    289                  case WizFi_AT_NSET:      WizFiCommand_AT_NSET(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
                                                  ^
Warning[Pe223]: function "WizFiCommand_AT_NSET" declared implicitly
   \                     ??AP_Associate_5:
   \   00000030   ........           BL       WizFiCommand_AT_NSET
   \   00000034   0DE0               B        ??AP_Associate_1
    290                  case WizFi_AT_NDHCP:     WizFiCommand_AT_NDHCP(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
                                                  ^
Warning[Pe223]: function "WizFiCommand_AT_NDHCP" declared implicitly
   \                     ??AP_Associate_6:
   \   00000036   ........           BL       WizFiCommand_AT_NDHCP
   \   0000003A   0AE0               B        ??AP_Associate_1
    291                  case WizFi_AT_WWEP1:     WizFiCommand_AT_WWEP1(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_7:
   \   0000003C   ........           BL       WizFiCommand_AT_WWEP1
   \   00000040   07E0               B        ??AP_Associate_1
    292                  case WizFi_AT_WWPA:      WizFiCommand_AT_WWPA(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_8:
   \   00000042   ........           BL       WizFiCommand_AT_WWPA
   \   00000046   04E0               B        ??AP_Associate_1
    293                  case WizFi_AT_WA:        WizFiCommand_AT_WA(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_9:
   \   00000048   ........           BL       WizFiCommand_AT_WA
   \   0000004C   01E0               B        ??AP_Associate_1
    294                  case WizFi_AT_DNSLOOKUP: WizFiCommand_AT_DNSLOOKUP(Buff_RX, Buff_TX,USART, Net);   break;           //wyœlij rozkaz rozkaz
   \                     ??AP_Associate_10:
   \   0000004E   ........           BL       WizFiCommand_AT_DNSLOOKUP
    295                }
    296                
    297                
    298          }
   \                     ??AP_Associate_1:
   \   00000052   38BC               POP      {R3-R5}
   \   00000054   01BC               POP      {R0}
   \   00000056   0047               BX       R0               ;; return
    299          
    300                    
    301          
    302          
    303          
    304          

   \                                 In section Debug.txt, align 4, keep-with-next
    305          void AP_AssociateResponseInterpreter(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    306          {
   \                     AP_AssociateResponseInterpreter:
   \   00000000   F2B5               PUSH     {R1,R4-R7,LR}
   \   00000002   0600               MOVS     R6,R0
   \   00000004   1700               MOVS     R7,R2
   \   00000006   1C00               MOVS     R4,R3
   \   00000008   5048               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   0000000A   03C8               LDM      R0!,{R0,R1}
   \   0000000C   0022               MOVS     R2,#+0
   \   0000000E   3230               ADDS     R0,R0,#+50
   \   00000010   5141               ADCS     R1,R1,R2
   \   00000012   2064               STR      R0,[R4, #+64]
   \   00000014   6164               STR      R1,[R4, #+68]
    307                Net->Status.FreezTime=g_counter+FREEZ_TIME;
    308                char Odp=0;
   \   00000016   1500               MOVS     R5,R2
   \   00000018   2800               MOVS     R0,R5
    309                switch (Net->Status.CurrentOrder)
   \   0000001A   A178               LDRB     R1,[R4, #+2]
   \   0000001C   491E               SUBS     R1,R1,#+1
   \   0000001E   0829               CMP      R1,#+8
   \   00000020   3CD8               BHI      ??AP_AssociateResponseInterpreter_2
   \   00000022   01A2               ADR      R2,??AP_AssociateResponseInterpreter_0
   \   00000024   525C               LDRB     R2,[R2, R1]
   \   00000026   9744               ADD      PC,PC,R2
   \                     ??AP_AssociateResponseInterpreter_0:
   \   00000028   0814202C           DC8      +8,+20,+32,+44
   \   0000002C   3844505C           DC8      +56,+68,+80,+92
   \   00000030   6800               DC8      +104,+0
    310                {
    311                  case WizFi_AT:            Odp=WizFiResponseCommand_AT(Buff_RX,Buff_TX,USART, Net);   break;        //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_3:
   \   00000032   3A00               MOVS     R2,R7
   \   00000034   0099               LDR      R1,[SP, #+0]
   \   00000036   3000               MOVS     R0,R6
   \   00000038   ........           BL       WizFiResponseCommand_AT
   \   0000003C   2EE0               B        ??AP_AssociateResponseInterpreter_2
    312                  case WizFi_AT_XDUM0:      Odp=WizFiResponseCommand_AT_XDUM0(Buff_RX,Buff_TX,USART, Net);   break;        //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_4:
   \   0000003E   3A00               MOVS     R2,R7
   \   00000040   0099               LDR      R1,[SP, #+0]
   \   00000042   3000               MOVS     R0,R6
   \   00000044   ........           BL       WizFiResponseCommand_AT_XDUM0
   \   00000048   28E0               B        ??AP_AssociateResponseInterpreter_2
    313                  case WizFi_AT_WD:         Odp=WizFiResponseCommand_AT_WD(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_5:
   \   0000004A   3A00               MOVS     R2,R7
   \   0000004C   0099               LDR      R1,[SP, #+0]
   \   0000004E   3000               MOVS     R0,R6
   \   00000050   ........           BL       WizFiResponseCommand_AT_WD
   \   00000054   22E0               B        ??AP_AssociateResponseInterpreter_2
    314                  case WizFi_AT_NSET:       Odp=WizFiResponseCommand_AT_NSET(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
                                                       ^
Warning[Pe223]: function "WizFiResponseCommand_AT_NSET" declared implicitly
   \                     ??AP_AssociateResponseInterpreter_6:
   \   00000056   3A00               MOVS     R2,R7
   \   00000058   0099               LDR      R1,[SP, #+0]
   \   0000005A   3000               MOVS     R0,R6
   \   0000005C   ........           BL       WizFiResponseCommand_AT_NSET
   \   00000060   1CE0               B        ??AP_AssociateResponseInterpreter_2
    315                  case WizFi_AT_NDHCP:      Odp=WizFiResponseCommand_AT_NDHCP(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
                                                       ^
Warning[Pe223]: function "WizFiResponseCommand_AT_NDHCP" declared implicitly
   \                     ??AP_AssociateResponseInterpreter_7:
   \   00000062   3A00               MOVS     R2,R7
   \   00000064   0099               LDR      R1,[SP, #+0]
   \   00000066   3000               MOVS     R0,R6
   \   00000068   ........           BL       WizFiResponseCommand_AT_NDHCP
   \   0000006C   16E0               B        ??AP_AssociateResponseInterpreter_2
    316                  case WizFi_AT_WWEP1:      Odp=WizFiResponseCommand_AT_WWEP1(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_8:
   \   0000006E   3A00               MOVS     R2,R7
   \   00000070   0099               LDR      R1,[SP, #+0]
   \   00000072   3000               MOVS     R0,R6
   \   00000074   ........           BL       WizFiResponseCommand_AT_WWEP1
   \   00000078   10E0               B        ??AP_AssociateResponseInterpreter_2
    317                  case WizFi_AT_WWPA:       Odp=WizFiResponseCommand_AT_WWPA(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_9:
   \   0000007A   3A00               MOVS     R2,R7
   \   0000007C   0099               LDR      R1,[SP, #+0]
   \   0000007E   3000               MOVS     R0,R6
   \   00000080   ........           BL       WizFiResponseCommand_AT_WWPA
   \   00000084   0AE0               B        ??AP_AssociateResponseInterpreter_2
    318                  case WizFi_AT_WA:         Odp=WizFiResponseCommand_AT_WA(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_10:
   \   00000086   3A00               MOVS     R2,R7
   \   00000088   0099               LDR      R1,[SP, #+0]
   \   0000008A   3000               MOVS     R0,R6
   \   0000008C   ........           BL       WizFiResponseCommand_AT_WA
   \   00000090   04E0               B        ??AP_AssociateResponseInterpreter_2
    319                  case WizFi_AT_DNSLOOKUP:  Odp=WizFiResponseCommand_AT_DNSLOOKUP(Buff_RX,Buff_TX,USART, Net);   break;     //odpowiedz dla zadania 
   \                     ??AP_AssociateResponseInterpreter_11:
   \   00000092   3A00               MOVS     R2,R7
   \   00000094   0099               LDR      R1,[SP, #+0]
   \   00000096   3000               MOVS     R0,R6
   \   00000098   ........           BL       WizFiResponseCommand_AT_DNSLOOKUP
    320                }
    321                   
    322                
    323                //je¿eli poprawna odpowiedŸ 
    324                if (Odp==1)
   \                     ??AP_AssociateResponseInterpreter_2:
   \   0000009C   0006               LSLS     R0,R0,#+24
   \   0000009E   000E               LSRS     R0,R0,#+24
   \   000000A0   0128               CMP      R0,#+1
   \   000000A2   17D1               BNE      ??AP_AssociateResponseInterpreter_12
    325                {
    326                  Net->Status.RepeatOrder=0;
   \   000000A4   2571               STRB     R5,[R4, #+4]
    327                  if ((Net->Status.CurrentOrder<WizFi_AT_DNSLOOKUP) && (Net->Status.CurrentOrder!=WizFi_NC))
   \   000000A6   A078               LDRB     R0,[R4, #+2]
   \   000000A8   0928               CMP      R0,#+9
   \   000000AA   4BD2               BCS      ??AP_AssociateResponseInterpreter_13
   \   000000AC   0028               CMP      R0,#+0
   \   000000AE   49D0               BEQ      ??AP_AssociateResponseInterpreter_13
    328                  {
    329                     
    330                     Net->Status.CurrentOrder++;
   \   000000B0   401C               ADDS     R0,R0,#+1
   \   000000B2   A070               STRB     R0,[R4, #+2]
    331                     
    332                     if ((Net->WiFi.IpNotAuto==0) &&  (Net->Status.CurrentOrder==WizFi_AT_NSET))
   \   000000B4   4920               MOVS     R0,#+73
   \   000000B6   205C               LDRB     R0,[R4, R0]
   \   000000B8   0028               CMP      R0,#+0
   \   000000BA   04D1               BNE      ??AP_AssociateResponseInterpreter_14
   \   000000BC   A078               LDRB     R0,[R4, #+2]
   \   000000BE   0428               CMP      R0,#+4
   \   000000C0   01D1               BNE      ??AP_AssociateResponseInterpreter_14
    333                      { 
    334                        Net->Status.CurrentOrder++;
   \   000000C2   401C               ADDS     R0,R0,#+1
   \   000000C4   A070               STRB     R0,[R4, #+2]
    335                      }
    336                     
    337                     AP_Associate(Buff_RX, Buff_TX,  USART, Net);
   \                     ??AP_AssociateResponseInterpreter_14:
   \   000000C6   2300               MOVS     R3,R4
   \   000000C8   3A00               MOVS     R2,R7
   \   000000CA   0099               LDR      R1,[SP, #+0]
   \   000000CC   3000               MOVS     R0,R6
   \   000000CE   ........           BL       AP_Associate
   \   000000D2   37E0               B        ??AP_AssociateResponseInterpreter_13
    338                     
    339                  }
    340                }else{
    341                  if(strstr(Buff_RX, "[ERROR")!=NULL)
   \                     ??AP_AssociateResponseInterpreter_12:
   \   000000D4   1E49               LDR      R1,??AP_AssociateResponseInterpreter_1+0x4  ;; `?<Constant "[ERROR">`
   \   000000D6   3000               MOVS     R0,R6
   \   000000D8   ........           BL       strstr
   \   000000DC   0028               CMP      R0,#+0
   \   000000DE   31D0               BEQ      ??AP_AssociateResponseInterpreter_13
    342                  {
    343                      if (Net->Status.RepeatOrder<10)      //powtórz rozkaz
   \   000000E0   2079               LDRB     R0,[R4, #+4]
   \   000000E2   0A28               CMP      R0,#+10
   \   000000E4   18D2               BCS      ??AP_AssociateResponseInterpreter_15
    344                      {
    345                         Net->Status.RepeatOrder++;
   \   000000E6   401C               ADDS     R0,R0,#+1
   \   000000E8   2071               STRB     R0,[R4, #+4]
    346                         AP_Associate(Buff_RX, Buff_TX,  USART, Net);
   \   000000EA   2300               MOVS     R3,R4
   \   000000EC   3A00               MOVS     R2,R7
   \   000000EE   0099               LDR      R1,[SP, #+0]
   \   000000F0   3000               MOVS     R0,R6
   \   000000F2   ........           BL       AP_Associate
    347                         Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   000000F6   2500               MOVS     R5,R4
   \   000000F8   3835               ADDS     R5,R5,#+56
   \   000000FA   1448               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   000000FC   0CC8               LDM      R0!,{R2,R3}
   \   000000FE   1548               LDR      R0,??AP_AssociateResponseInterpreter_1+0x8  ;; 0x2710
   \   00000100   0021               MOVS     R1,#+0
   \   00000102   8018               ADDS     R0,R0,R2
   \   00000104   5941               ADCS     R1,R1,R3
   \   00000106   03C5               STM      R5!,{R0,R1}
    348                         Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \   00000108   4034               ADDS     R4,R4,#+64
   \   0000010A   1048               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   0000010C   03C8               LDM      R0!,{R0,R1}
   \   0000010E   0022               MOVS     R2,#+0
   \   00000110   3230               ADDS     R0,R0,#+50
   \   00000112   5141               ADCS     R1,R1,R2
   \   00000114   03C4               STM      R4!,{R0,R1}
   \   00000116   15E0               B        ??AP_AssociateResponseInterpreter_13
    349                      }else{
    350                         //ponowne po³¹czenie
    351                         Net->Status.FreezTime=g_counter+FREEZ_TIME;
   \                     ??AP_AssociateResponseInterpreter_15:
   \   00000118   0C48               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   0000011A   03C8               LDM      R0!,{R0,R1}
   \   0000011C   0022               MOVS     R2,#+0
   \   0000011E   3230               ADDS     R0,R0,#+50
   \   00000120   5141               ADCS     R1,R1,R2
   \   00000122   2064               STR      R0,[R4, #+64]
   \   00000124   6164               STR      R1,[R4, #+68]
    352                         Net->Status.Timeout=g_counter + CRYTICAL_TIMEOUT;    //przed³u¿enie /restart timeoutu
   \   00000126   2600               MOVS     R6,R4
   \   00000128   3836               ADDS     R6,R6,#+56
   \   0000012A   0848               LDR      R0,??AP_AssociateResponseInterpreter_1  ;; g_counter
   \   0000012C   0CC8               LDM      R0!,{R2,R3}
   \   0000012E   0948               LDR      R0,??AP_AssociateResponseInterpreter_1+0x8  ;; 0x2710
   \   00000130   2900               MOVS     R1,R5
   \   00000132   8018               ADDS     R0,R0,R2
   \   00000134   5941               ADCS     R1,R1,R3
   \   00000136   03C6               STM      R6!,{R0,R1}
    353                         Net->Status.CurrentOrder=WizFi_NC;
   \   00000138   2800               MOVS     R0,R5
   \   0000013A   A070               STRB     R0,[R4, #+2]
    354                         Net->Status.NextHttpOrder=WizFi_NC;
   \   0000013C   E070               STRB     R0,[R4, #+3]
    355                         Net->Status.RepeatOrder=0;  
   \   0000013E   2071               STRB     R0,[R4, #+4]
    356                         Net->Status.HostLink=DISCONNECTED; 
   \   00000140   6070               STRB     R0,[R4, #+1]
    357                         Net->Status.AccesPointAssociate=DISCONNECTED;
   \   00000142   2570               STRB     R5,[R4, #+0]
    358                      }
    359                    
    360                  }
    361                }  
    362                
    363          }
   \                     ??AP_AssociateResponseInterpreter_13:
   \   00000144   F8BC               POP      {R3-R7}
   \   00000146   01BC               POP      {R0}
   \   00000148   0047               BX       R0               ;; return
   \   0000014A   C046               Nop      
   \                     ??AP_AssociateResponseInterpreter_1:
   \   0000014C   ........           DC32     g_counter
   \   00000150   ........           DC32     `?<Constant "[ERROR">`
   \   00000154   10270000           DC32     0x2710
    364                      
    365          
    366          
    367          
    368          
    369          
    370          //funkcja wykonywania zadañ HTTP

   \                                 In section Debug.txt, align 4, keep-with-next
    371          void HTTP_Task(char *Buff_RX, char *Buff_TX,  AT91PS_USART USART, _Net *Net)
    372          {
   \                     HTTP_Task:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0700               MOVS     R7,R0
   \   00000004   0E00               MOVS     R6,R1
   \   00000006   1400               MOVS     R4,R2
   \   00000008   1D00               MOVS     R5,R3
    373              if ((Net->Status.HttpNextQueryTime<g_counter) || (Net->Status.HttpNextQueryTime==0))   //je¿eli spe³niony wymagany czas pomiêdzy odpytywaniami
   \   0000000A   2800               MOVS     R0,R5
   \   0000000C   3030               ADDS     R0,R0,#+48
   \   0000000E   0CC8               LDM      R0!,{R2,R3}
   \   00000010   0F48               LDR      R0,??HTTP_Task_0  ;; g_counter
   \   00000012   03C8               LDM      R0!,{R0,R1}
   \   00000014   8B42               CMP      R3,R1
   \   00000016   09D3               BCC      ??HTTP_Task_1
   \   00000018   01D8               BHI      ??HTTP_Task_2
   \   0000001A   8242               CMP      R2,R0
   \   0000001C   06D3               BCC      ??HTTP_Task_1
   \                     ??HTTP_Task_2:
   \   0000001E   2800               MOVS     R0,R5
   \   00000020   3030               ADDS     R0,R0,#+48
   \   00000022   03C8               LDM      R0!,{R0,R1}
   \   00000024   0029               CMP      R1,#+0
   \   00000026   10D1               BNE      ??HTTP_Task_3
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0ED1               BNE      ??HTTP_Task_3
    374              {
    375                  if (Net->Status.NextHttpOrder!=WizFi_NC)                                    //je¿eli jest oczekuj¹ce zadanie
   \                     ??HTTP_Task_1:
   \   0000002C   E878               LDRB     R0,[R5, #+3]
   \   0000002E   0028               CMP      R0,#+0
   \   00000030   03D0               BEQ      ??HTTP_Task_4
    376                  {
    377                      Net->Status.CurrentOrder=Net->Status.NextHttpOrder;
   \   00000032   A870               STRB     R0,[R5, #+2]
    378                      Net->Status.NextHttpOrder=WizFi_NC;
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   E870               STRB     R0,[R5, #+3]
   \   00000038   01E0               B        ??HTTP_Task_5
    379                  }else{
    380                      Net->Status.CurrentOrder=HTTP_GET;
   \                     ??HTTP_Task_4:
   \   0000003A   0F20               MOVS     R0,#+15
   \   0000003C   A870               STRB     R0,[R5, #+2]
    381                  }
    382                  
    383                  HTTP_Query(Buff_RX, Buff_TX,  USART, Net);  
   \                     ??HTTP_Task_5:
   \   0000003E   2B00               MOVS     R3,R5
   \   00000040   2200               MOVS     R2,R4
   \   00000042   3100               MOVS     R1,R6
   \   00000044   3800               MOVS     R0,R7
   \   00000046   ........           BL       HTTP_Query
    384                  
    385                  
    386              }
    387              
    388          }
   \                     ??HTTP_Task_3:
   \   0000004A   F8BC               POP      {R3-R7}
   \   0000004C   01BC               POP      {R0}
   \   0000004E   0047               BX       R0               ;; return
   \                     ??HTTP_Task_0:
   \   00000050   ........           DC32     g_counter

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   10270000           DC32     0x2710

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     g_counter

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     g_counter

   \                                 In section .rodata, align 4
   \                     `?<Constant "[DISCONNECT">`:
   \   00000000   5B444953434F       DC8 "[DISCONNECT"
   \              4E4E45435400
   \   0000000C   5B4552524F52       DC8 "[ERROR: INVALID INPUT]"
   \              3A20494E5641
   \              4C494420494E
   \              5055545D00  
   \   00000023   00                 DC8 0
   \   00000024   73656E642829       DC8 "send() failed:"
   \              206661696C65
   \              643A00      
   \   00000033   00                 DC8 0
   \   00000034   5B4449534153       DC8 "[DISASSOCIATED]"
   \              534F43494154
   \              45445D00    
   \   00000044   5B4552524F52       DC8 "[ERROR]"
   \              5D00        

   \                                 In section .rodata, align 4
   \                     `?<Constant "[ERROR">`:
   \   00000000   5B4552524F52       DC8 "[ERROR"
   \              00          
   \   00000007   00                 DC8 0
    389          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     AP_Associate                       16
     AP_AssociateResponseInterpreter
                                        24
     CheckVarChangeHTTP                 32
     HTTP_Task                          24
     InitWizFi                          16
     WiFi                               32
     WizFiResponseInterpreter           24
     strstr                              8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     strstr                           12
     CheckVarChangeHTTP              220
     AnalogPeriod                      8
     pt1                               8
     InitWizFi                       112
     WiFi                            288
     WizFiResponseInterpreter        328
     AP_Associate                     88
     AP_AssociateResponseInterpreter
                                     344
     HTTP_Task                        84
     ??DataTable3                      4
     ??DataTable4                      4
     ??DataTable6                      4
     ?<Constant "[DISCONNECT">        76
     ?<Constant "[ERROR">              8

 
    16 bytes in section .bss
    84 bytes in section .rodata
 1 488 bytes in section Debug.txt
 
 1 476 bytes of CODE  memory (+ 12 bytes shared)
    84 bytes of CONST memory
    16 bytes of DATA  memory

Errors: none
Warnings: 9
