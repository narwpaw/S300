###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           04/Jul/2012  21:50:41 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\Framework\USART.c                             #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\Framework\USART.c" -D AT91SAM7S256 -D         #
#                    AT91SAM7SEK -D iH -D __ALARM -D __WIFI_MODULE -lC        #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\S300X\List\" --diag_suppress Pa082 -o         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\S300X\Obj\" --no_unroll --no_inline           #
#                    --no_tbaa --no_scheduling --debug --endian little --cpu  #
#                    ARM7TDMI -e --fpu None --dlib_config "C:\Program         #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    5.0\ARM\INC\DLib_Config_Normal.h" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v0.6 - 18.05.2012\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v0.6 - 18.05.2012\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v0.6 - 18.05.2012\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\Framework\Configuration\" -I "C:\Program      #
#                    Files\IAR Systems\Embedded Workbench 5.0\ARM\INC\"       #
#                    --section .text=Debug.txt --interwork --cpu_mode thumb   #
#                    -Om                                                      #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\S300X\List\USART.lst                          #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\S300X\Obj\USART.o                             #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\USART.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                                 CEURON                                   *//
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : USART.c                                  *//
      7          //*  Opis                         : G³ówny plik programu                     *//
      8          //*  Autor                        : Pawe³ Narwojsz                           *//
      9          //*  Data utrzorzenia             : 16.01.2008                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*//
     19          //****************************************************************************//
     20          //****************************************************************************//
     21          
     22          
     23          
     24          //Zmienne konfiguracyjne -------------------------------------------------------     
     25          
     26              //US0----------------------
     27                int  g_US0_BAUDRATE             = 19200;                                   //prêdkoœæ transmisji US0
     28                int  g_US0_Comm_TIMEOUT         = 12;                                      //(w ms) Czas oczekiwania na odpowiedŸ urz¹dzenia odpytywanego poprzez MODBUS
     29                char q_US0_Comm_Mode            = 3;
     30                
     31              //US1----------------------
     32                int g_US1_BAUDRATE             = 115200;                                   //prêdkoœæ transmisji US0
     33                int g_US1_Comm_TIMEOUT         = 100;                                      //(w ms) Czas oczekiwania na odpowiedŸ urz¹dzenia odpytywanego poprzez MODBUS  
     34          //___________________________Koniec zmiennych lokalnych________________________
     35          
     36          
     37          
     38          
     39          
     40          //------------------------------------------------------------------------------
     41          //      Includes
     42          //------------------------------------------------------------------------------
     43          
     44          
     45          #include "USART.h"

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_AIC_ConfigureIt(AT91PS_AIC, unsigned int, unsigned int, unsigned int, void (*)())
   \                     AT91F_AIC_ConfigureIt:
   \   00000000   F5B4               PUSH     {R0,R2,R4-R7}
   \   00000002   0200               MOVS     R2,R0
   \   00000004   0C00               MOVS     R4,R1
   \   00000006   069E               LDR      R6,[SP, #+24]
   \   00000008   A100               LSLS     R1,R4,#+2
   \   0000000A   5718               ADDS     R7,R2,R1
   \   0000000C   8037               ADDS     R7,R7,#+128
   \   0000000E   3868               LDR      R0,[R7, #+0]
   \   00000010   0125               MOVS     R5,#+1
   \   00000012   A540               LSLS     R5,R5,R4
   \   00000014   2C00               MOVS     R4,R5
   \   00000016   9225               MOVS     R5,#+146
   \   00000018   6D00               LSLS     R5,R5,#+1        ;; #+292
   \   0000001A   5519               ADDS     R5,R2,R5
   \   0000001C   2C60               STR      R4,[R5, #+0]
   \   0000001E   3E60               STR      R6,[R7, #+0]
   \   00000020   019E               LDR      R6,[SP, #+4]
   \   00000022   1E43               ORRS     R6,R6,R3
   \   00000024   5650               STR      R6,[R2, R1]
   \   00000026   6C60               STR      R4,[R5, #+4]
   \   00000028   FCBC               POP      {R2-R7}
   \   0000002A   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_AIC_EnableIt(AT91PS_AIC, unsigned int)
   \                     AT91F_AIC_EnableIt:
   \   00000000   9022               MOVS     R2,#+144
   \   00000002   5200               LSLS     R2,R2,#+1        ;; #+288
   \   00000004   0123               MOVS     R3,#+1
   \   00000006   8B40               LSLS     R3,R3,R1
   \   00000008   8350               STR      R3,[R0, R2]
   \   0000000A   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetNextRx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetNextRx:
   \   00000000   0161               STR      R1,[R0, #+16]
   \   00000002   4261               STR      R2,[R0, #+20]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetNextTx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetNextTx:
   \   00000000   8161               STR      R1,[R0, #+24]
   \   00000002   C261               STR      R2,[R0, #+28]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetRx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetRx:
   \   00000000   0160               STR      R1,[R0, #+0]
   \   00000002   4260               STR      R2,[R0, #+4]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetTx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetTx:
   \   00000000   8160               STR      R1,[R0, #+8]
   \   00000002   C260               STR      R2,[R0, #+12]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_EnableTx(AT91PS_PDC)
   \                     AT91F_PDC_EnableTx:
   \   00000000   8021               MOVS     R1,#+128
   \   00000002   4900               LSLS     R1,R1,#+1        ;; #+256
   \   00000004   0162               STR      R1,[R0, #+32]
   \   00000006   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_EnableRx(AT91PS_PDC)
   \                     AT91F_PDC_EnableRx:
   \   00000000   0121               MOVS     R1,#+1
   \   00000002   0162               STR      R1,[R0, #+32]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_DisableTx(AT91PS_PDC)
   \                     AT91F_PDC_DisableTx:
   \   00000000   8021               MOVS     R1,#+128
   \   00000002   8900               LSLS     R1,R1,#+2        ;; #+512
   \   00000004   0162               STR      R1,[R0, #+32]
   \   00000006   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_DisableRx(AT91PS_PDC)
   \                     AT91F_PDC_DisableRx:
   \   00000000   0221               MOVS     R1,#+2
   \   00000002   0162               STR      R1,[R0, #+32]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork int AT91F_PDC_IsRxEmpty(AT91PS_PDC)
   \                     AT91F_PDC_IsRxEmpty:
   \   00000000   4068               LDR      R0,[R0, #+4]
   \   00000002   401E               SUBS     R0,R0,#+1
   \   00000004   8041               SBCS     R0,R0,R0
   \   00000006   C00F               LSRS     R0,R0,#+31
   \   00000008   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork int AT91F_PDC_IsNextRxEmpty(AT91PS_PDC)
   \                     AT91F_PDC_IsNextRxEmpty:
   \   00000000   4069               LDR      R0,[R0, #+20]
   \   00000002   401E               SUBS     R0,R0,#+1
   \   00000004   8041               SBCS     R0,R0,R0
   \   00000006   C00F               LSRS     R0,R0,#+31
   \   00000008   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_Open(AT91PS_PDC)
   \                     AT91F_PDC_Open:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   ........           BL       AT91F_PDC_DisableRx
   \   00000008   2000               MOVS     R0,R4
   \   0000000A   ........           BL       AT91F_PDC_DisableTx
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   1100               MOVS     R1,R2
   \   00000012   2000               MOVS     R0,R4
   \   00000014   ........           BL       AT91F_PDC_SetNextTx
   \   00000018   0022               MOVS     R2,#+0
   \   0000001A   1100               MOVS     R1,R2
   \   0000001C   2000               MOVS     R0,R4
   \   0000001E   ........           BL       AT91F_PDC_SetNextRx
   \   00000022   0022               MOVS     R2,#+0
   \   00000024   1100               MOVS     R1,R2
   \   00000026   2000               MOVS     R0,R4
   \   00000028   ........           BL       AT91F_PDC_SetTx
   \   0000002C   0022               MOVS     R2,#+0
   \   0000002E   1100               MOVS     R1,R2
   \   00000030   2000               MOVS     R0,R4
   \   00000032   ........           BL       AT91F_PDC_SetRx
   \   00000036   2000               MOVS     R0,R4
   \   00000038   ........           BL       AT91F_PDC_EnableRx
   \   0000003C   2000               MOVS     R0,R4
   \   0000003E   ........           BL       AT91F_PDC_EnableTx
   \   00000042   10BC               POP      {R4}
   \   00000044   01BC               POP      {R0}
   \   00000046   0047               BX       R0               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_PDC_ReceiveFrame(AT91PS_PDC, char *, unsigned int, char *, unsigned int)
   \                     AT91F_PDC_ReceiveFrame:
   \   00000000   F8B5               PUSH     {R3-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   1600               MOVS     R6,R2
   \   00000008   069F               LDR      R7,[SP, #+24]
   \   0000000A   ........           BL       AT91F_PDC_IsRxEmpty
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   0BD0               BEQ      ??AT91F_PDC_ReceiveFrame_0
   \   00000012   3200               MOVS     R2,R6
   \   00000014   2900               MOVS     R1,R5
   \   00000016   2000               MOVS     R0,R4
   \   00000018   ........           BL       AT91F_PDC_SetRx
   \   0000001C   3A00               MOVS     R2,R7
   \   0000001E   0099               LDR      R1,[SP, #+0]
   \   00000020   2000               MOVS     R0,R4
   \   00000022   ........           BL       AT91F_PDC_SetNextRx
   \   00000026   0220               MOVS     R0,#+2
   \   00000028   0AE0               B        ??AT91F_PDC_ReceiveFrame_1
   \                     ??AT91F_PDC_ReceiveFrame_0:
   \   0000002A   2000               MOVS     R0,R4
   \   0000002C   ........           BL       AT91F_PDC_IsNextRxEmpty
   \   00000030   0028               CMP      R0,#+0
   \   00000032   05D0               BEQ      ??AT91F_PDC_ReceiveFrame_1
   \   00000034   3200               MOVS     R2,R6
   \   00000036   2900               MOVS     R1,R5
   \   00000038   2000               MOVS     R0,R4
   \   0000003A   ........           BL       AT91F_PDC_SetNextRx
   \   0000003E   0120               MOVS     R0,#+1
   \                     ??AT91F_PDC_ReceiveFrame_1:
   \   00000040   F8BC               POP      {R3-R7}
   \   00000042   02BC               POP      {R1}
   \   00000044   0847               BX       R1               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PIO_CfgPeriph(AT91PS_PIO, unsigned int, unsigned int)
   \                     AT91F_PIO_CfgPeriph:
   \   00000000   0167               STR      R1,[R0, #+112]
   \   00000002   4267               STR      R2,[R0, #+116]
   \   00000004   0A43               ORRS     R2,R2,R1
   \   00000006   4260               STR      R2,[R0, #+4]
   \   00000008   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PMC_EnablePeriphClock(AT91PS_PMC, unsigned int)
   \                     AT91F_PMC_EnablePeriphClock:
   \   00000000   0161               STR      R1,[R0, #+16]
   \   00000002   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_US_Baudrate(unsigned int const, unsigned int const)
   \                     AT91F_US_Baudrate:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0A22               MOVS     R2,#+10
   \   00000004   5043               MULS     R0,R2,R0
   \   00000006   0901               LSLS     R1,R1,#+4
   \   00000008   ........           BL       __aeabi_uidivmod
   \   0000000C   0400               MOVS     R4,R0
   \   0000000E   0A21               MOVS     R1,#+10
   \   00000010   ........           BL       __aeabi_uidivmod
   \   00000014   0529               CMP      R1,#+5
   \   00000016   05D3               BCC      ??AT91F_US_Baudrate_0
   \   00000018   2000               MOVS     R0,R4
   \   0000001A   0A21               MOVS     R1,#+10
   \   0000001C   ........           BL       __aeabi_uidivmod
   \   00000020   401C               ADDS     R0,R0,#+1
   \   00000022   03E0               B        ??AT91F_US_Baudrate_1
   \                     ??AT91F_US_Baudrate_0:
   \   00000024   2000               MOVS     R0,R4
   \   00000026   0A21               MOVS     R1,#+10
   \   00000028   ........           BL       __aeabi_uidivmod
   \                     ??AT91F_US_Baudrate_1:
   \   0000002C   10BC               POP      {R4}
   \   0000002E   02BC               POP      {R1}
   \   00000030   0847               BX       R1               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US_SetBaudrate(AT91PS_USART, unsigned int, unsigned int)
   \                     AT91F_US_SetBaudrate:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   1100               MOVS     R1,R2
   \   00000008   ........           BL       AT91F_US_Baudrate
   \   0000000C   2062               STR      R0,[R4, #+32]
   \   0000000E   10BC               POP      {R4}
   \   00000010   01BC               POP      {R0}
   \   00000012   0047               BX       R0               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US_SetTimeguard(AT91PS_USART, unsigned int)
   \                     AT91F_US_SetTimeguard:
   \   00000000   8162               STR      R1,[R0, #+40]
   \   00000002   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US_EnableIt(AT91PS_USART, unsigned int)
   \                     AT91F_US_EnableIt:
   \   00000000   8160               STR      R1,[R0, #+8]
   \   00000002   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US_Configure(AT91PS_USART, unsigned int, unsigned int, unsigned int, unsigned int)
   \                     AT91F_US_Configure:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   1500               MOVS     R5,R2
   \   00000006   1A00               MOVS     R2,R3
   \   00000008   049E               LDR      R6,[SP, #+16]
   \   0000000A   0020               MOVS     R0,#+0
   \   0000000C   C043               MVNS     R0,R0            ;; #-1
   \   0000000E   E060               STR      R0,[R4, #+12]
   \   00000010   AC20               MOVS     R0,#+172
   \   00000012   2060               STR      R0,[R4, #+0]
   \   00000014   2000               MOVS     R0,R4
   \   00000016   ........           BL       AT91F_US_SetBaudrate
   \   0000001A   3100               MOVS     R1,R6
   \   0000001C   2000               MOVS     R0,R4
   \   0000001E   ........           BL       AT91F_US_SetTimeguard
   \   00000022   8020               MOVS     R0,#+128
   \   00000024   4000               LSLS     R0,R0,#+1        ;; #+256
   \   00000026   2018               ADDS     R0,R4,R0
   \   00000028   ........           BL       AT91F_PDC_Open
   \   0000002C   6560               STR      R5,[R4, #+4]
   \   0000002E   70BC               POP      {R4-R6}
   \   00000030   01BC               POP      {R0}
   \   00000032   0047               BX       R0               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US_EnableRx(AT91PS_USART)
   \                     AT91F_US_EnableRx:
   \   00000000   1021               MOVS     R1,#+16
   \   00000002   0160               STR      R1,[R0, #+0]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US_EnableTx(AT91PS_USART)
   \                     AT91F_US_EnableTx:
   \   00000000   4021               MOVS     R1,#+64
   \   00000002   0160               STR      R1,[R0, #+0]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_US_ReceiveFrame(AT91PS_USART, unsigned char *, unsigned int, unsigned char *, unsigned int)
   \                     AT91F_US_ReceiveFrame:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   029C               LDR      R4,[SP, #+8]
   \   00000004   82B0               SUB      SP,SP,#+8
   \   00000006   0094               STR      R4,[SP, #+0]
   \   00000008   8024               MOVS     R4,#+128
   \   0000000A   6400               LSLS     R4,R4,#+1        ;; #+256
   \   0000000C   0019               ADDS     R0,R0,R4
   \   0000000E   ........           BL       AT91F_PDC_ReceiveFrame
   \   00000012   02B0               ADD      SP,SP,#+8
   \   00000014   10BC               POP      {R4}
   \   00000016   02BC               POP      {R1}
   \   00000018   0847               BX       R1               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US1_CfgPMC(void)
   \                     AT91F_US1_CfgPMC:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   8021               MOVS     R1,#+128
   \   00000004   0248               LDR      R0,??AT91F_US1_CfgPMC_0  ;; 0xfffffc00
   \   00000006   ........           BL       AT91F_PMC_EnablePeriphClock
   \   0000000A   08BC               POP      {R3}
   \   0000000C   01BC               POP      {R0}
   \   0000000E   0047               BX       R0               ;; return
   \                     ??AT91F_US1_CfgPMC_0:
   \   00000010   00FCFFFF           DC32     0xfffffc00

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US1_CfgPIO(void)
   \                     AT91F_US1_CfgPIO:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   0022               MOVS     R2,#+0
   \   00000004   B021               MOVS     R1,#+176
   \   00000006   4904               LSLS     R1,R1,#+17       ;; #+23068672
   \   00000008   0248               LDR      R0,??AT91F_US1_CfgPIO_0  ;; 0xfffff400
   \   0000000A   ........           BL       AT91F_PIO_CfgPeriph
   \   0000000E   08BC               POP      {R3}
   \   00000010   01BC               POP      {R0}
   \   00000012   0047               BX       R0               ;; return
   \                     ??AT91F_US1_CfgPIO_0:
   \   00000014   00F4FFFF           DC32     0xfffff400

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US0_CfgPMC(void)
   \                     AT91F_US0_CfgPMC:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   4021               MOVS     R1,#+64
   \   00000004   0248               LDR      R0,??AT91F_US0_CfgPMC_0  ;; 0xfffffc00
   \   00000006   ........           BL       AT91F_PMC_EnablePeriphClock
   \   0000000A   08BC               POP      {R3}
   \   0000000C   01BC               POP      {R0}
   \   0000000E   0047               BX       R0               ;; return
   \                     ??AT91F_US0_CfgPMC_0:
   \   00000010   00FCFFFF           DC32     0xfffffc00

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_US0_CfgPIO(void)
   \                     AT91F_US0_CfgPIO:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   0022               MOVS     R2,#+0
   \   00000004   E021               MOVS     R1,#+224
   \   00000006   0348               LDR      R0,??AT91F_US0_CfgPIO_0  ;; 0xfffff400
   \   00000008   ........           BL       AT91F_PIO_CfgPeriph
   \   0000000C   08BC               POP      {R3}
   \   0000000E   01BC               POP      {R0}
   \   00000010   0047               BX       R0               ;; return
   \   00000012   C046               Nop      
   \                     ??AT91F_US0_CfgPIO_0:
   \   00000014   00F4FFFF           DC32     0xfffff400

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline
     46          #include "WizFi.h"

   
   ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\WizFi.h",146  Warning[Pe001]: 
          last line of file ends without a newline
     47          
     48          
     49          //Zmienne lokalne -------------------------------------------------------------
     50              char SendModbusEnable = 1;                                                  //komunikacja z zewnêtrznym urz¹dzeniem poprzez MODBUS RS485 
     51              
     52          //___________________________Koniec zmiennych lokalnych________________________
     53          
     54          
     55          
     56          
     57          //Zmienne globalne -------------------------------------------------------------

   \                                 In section .bss, align 1
     58              char   g_US0_Connect_OK = 0;                                                //1 - trwa komunikacja poprzez US0
   \                     g_US0_Connect_OK:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     59              char   g_US1_Connect_OK = 0;                                                //1 - trwa komunikacja poprzez US1
   \                     g_US1_Connect_OK:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     60              char   g_ETH0_Connect_OK = 0;                                               //1 - trwa komunikacja poprzez ETH0
   \                     g_ETH0_Connect_OK:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     61              char   g_ETH1_Connect_OK = 0;                                               //1 - trwa komunikacja poprzez ETH0
   \                     g_ETH1_Connect_OK:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
   \                     SendModbusEnable:
   \   00000000   01                 DC8 1
   \   00000001   000000             DC8 0, 0, 0
   \                     g_US0_BAUDRATE:
   \   00000004   004B0000           DC32 19200
     62              int    g_US0_Comm_MinCykle = 10;                                            //Czas pomiêdzy kolejnymi pytaniami (przy poprawnych odpowiedziach) US0
     63              float  g_US0_OneByteTxTime = 5;                                             //Czas trwania jednego bajtu (w ms) US0
   \                     g_US0_OneByteTxTime:
   \   00000008   0000A040           DC32 40A00000H
     64              int    g_US1_Comm_MinCykle = 1;                                            //Czas pomiêdzy kolejnymi pytaniami (przy poprawnych odpowiedziach) US1
     65              float  g_US1_OneByteTxTime = 5;                                             //Czas trwania jednego bajtu (w ms) US1
     66              unsigned char  US0_Buffer[US0_BUFFER_Rx_SIZE];                                  //bufor odbiorczy USART 0
   \                     US0_Buffer:
   \   0000000C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        

   \                                 In section .data, align 4
   \                     g_US0_Comm_TIMEOUT:
   \   00000000   0C000000           DC32 12

   \                                 In section .data, align 1
   \                     q_US0_Comm_Mode:
   \   00000000   03                 DC8 3

   \                                 In section .data, align 4
   \                     g_US1_BAUDRATE:
   \   00000000   00C20100           DC32 115200
   \                     g_US1_OneByteTxTime:
   \   00000004   0000A040           DC32 40A00000H
     67              unsigned char  US1_Buffer[US1_BUFFER_Rx_SIZE];                                  //bufor odbiorczy USART 0
   \                     US1_Buffer:
   \   00000008   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000018   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000038   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000048   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000058   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000068   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000078   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000088   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000098   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000108   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000118   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000128   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000138   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000148   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000158   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000168   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000178   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000188   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000198   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000208   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000218   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000228   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000238   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        

   \                                 In section .data, align 4
   \                     g_US1_Comm_TIMEOUT:
   \   00000000   64000000           DC32 100

   \                                 In section .data, align 4
   \                     g_US0_Comm_MinCykle:
   \   00000000   0A000000           DC32 10

   \                                 In section .data, align 4
   \                     g_US1_Comm_MinCykle:
   \   00000000   01000000           DC32 1
     68              
     69              
     70          //___________________________Koniec zmiennych globalnych________________________
     71              
     72              
     73          
     74          //Zmienne zewnêtrzne -----------------------------------------------------------    
     75              extern char US0_MasterMODBUS_ENABLE;
     76              extern char US1_MasterMODBUS_ENABLE;
     77              extern BYTE Buff_TX_1[];
     78              extern _Net NET; 
     79          //___________________________Koniec zmiennych zewnêtrznych______________________    
     80           
     81          
     82              
     83              
     84              
     85              
     86          //-----------------------------------------------------------------------------
     87          //!  Nazwa funkcji :    US0_init
     88          //!  Funkcja inicjalizacji USART 0
     89          //-----------------------------------------------------------------------------
     90          //! 
     91          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
     92          void US0_init(void)
     93          {
   \                     US0_init:
   \   00000000   70B5               PUSH     {R4-R6,LR}
     94          
     95            
     96            
     97                  // Configure USART
     98                AT91F_US0_CfgPMC();
   \   00000002   ........           BL       AT91F_US0_CfgPMC
     99                AT91F_PDC_DisableRx(AT91C_BASE_PDC_US0);
   \   00000006   264C               LDR      R4,??US0_init_0  ;; 0xfffc0100
   \   00000008   2000               MOVS     R0,R4
   \   0000000A   ........           BL       AT91F_PDC_DisableRx
    100                AT91F_PDC_DisableTx(AT91C_BASE_PDC_US0);
   \   0000000E   2000               MOVS     R0,R4
   \   00000010   ........           BL       AT91F_PDC_DisableTx
    101               
    102                AT91F_US_Configure(AT91C_BASE_US0, AT91C_MASTER_CLOCK,
    103                                 USART485_MODE, g_US0_BAUDRATE, 0);
   \   00000014   ....               LDR      R5,??DataTable6  ;; 0xfffc0000
   \   00000016   ....               LDR      R4,??DataTable7  ;; SendModbusEnable
   \   00000018   82B0               SUB      SP,SP,#+8
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   0090               STR      R0,[SP, #+0]
   \   0000001E   6368               LDR      R3,[R4, #+4]
   \   00000020   ....               LDR      R2,??DataTable10  ;; 0x408c1
   \   00000022   ....               LDR      R1,??DataTable11  ;; 0x2dc6c00
   \   00000024   2800               MOVS     R0,R5
   \   00000026   ........           BL       AT91F_US_Configure
   \   0000002A   02B0               ADD      SP,SP,#+8
    104            
    105                AT91C_BASE_US0->US_CR = AT91C_US_STTTO;
   \   0000002C   8026               MOVS     R6,#+128
   \   0000002E   3601               LSLS     R6,R6,#+4        ;; #+2048
   \   00000030   2E60               STR      R6,[R5, #+0]
    106          
    107                AT91F_US_EnableIt(AT91C_BASE_US0,AT91C_US_RXBUFF | AT91C_US_TIMEOUT );     //uruchomienie/ustawienie przerwania od przepe³nienia bufora oraz od time-out
   \   00000032   8821               MOVS     R1,#+136
   \   00000034   4901               LSLS     R1,R1,#+5        ;; #+4352
   \   00000036   2800               MOVS     R0,R5
   \   00000038   ........           BL       AT91F_US_EnableIt
    108          
    109                // konfiguracja przerqwania USART0 
    110                AT91F_AIC_ConfigureIt ( AT91C_BASE_AIC, AT91C_ID_US0, USART0_INTERRUPT_LEVEL, AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL, Usart0_handler); 
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   1948               LDR      R0,??US0_init_0+0x4  ;; Usart0_handler
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   0023               MOVS     R3,#+0
   \   00000044   0222               MOVS     R2,#+2
   \   00000046   0621               MOVS     R1,#+6
   \   00000048   ....               LDR      R0,??DataTable12  ;; 0xfffff000
   \   0000004A   ........           BL       AT91F_AIC_ConfigureIt
   \   0000004E   02B0               ADD      SP,SP,#+8
    111                  
    112                AT91F_US_EnableRx(AT91C_BASE_US0);
   \   00000050   2800               MOVS     R0,R5
   \   00000052   ........           BL       AT91F_US_EnableRx
    113                AT91F_US_EnableTx(AT91C_BASE_US0);
   \   00000056   2800               MOVS     R0,R5
   \   00000058   ........           BL       AT91F_US_EnableTx
    114          
    115             
    116                AT91F_US0_CfgPIO();                                                       //konfiguracja pinów
   \   0000005C   ........           BL       AT91F_US0_CfgPIO
    117                
    118                unsigned int xxx= AT91F_US_ReceiveFrame (                                 //Ustawienie bufora odbiorczego
    119          	AT91C_BASE_US0,
    120          	US0_Buffer,
    121          	US0_BUFFER_Rx_SIZE,
    122          	0,
    123          	0 );
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   0020               MOVS     R0,#+0
   \   00000064   0090               STR      R0,[SP, #+0]
   \   00000066   0300               MOVS     R3,R0
   \   00000068   1422               MOVS     R2,#+20
   \   0000006A   2100               MOVS     R1,R4
   \   0000006C   0C31               ADDS     R1,R1,#+12
   \   0000006E   2800               MOVS     R0,R5
   \   00000070   ........           BL       AT91F_US_ReceiveFrame
   \   00000074   02B0               ADD      SP,SP,#+8
    124          
    125                AT91C_BASE_US0->US_RTOR = TIME_OUT_US;                                    //ustawienie czasu time-out (w bitach)
   \   00000076   0C48               LDR      R0,??US0_init_0+0x8  ;; 0xfffc0024
   \   00000078   0A21               MOVS     R1,#+10
   \   0000007A   0160               STR      R1,[R0, #+0]
    126                AT91C_BASE_US0->US_CR = AT91C_US_STTTO;                                   //restart time-out
   \   0000007C   2E60               STR      R6,[R5, #+0]
    127          
    128                //wy³¹czone przerwanie bo koliduje z  innymi przerwaniami 
    129                /*      
    130                AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_US0);                        //uruchomienie przerwania od USARTA
    131                */
    132                g_US0_OneByteTxTime  = 1000/ ((float) (g_US0_BAUDRATE /8));
   \   0000007E   6068               LDR      R0,[R4, #+4]
   \   00000080   0100               MOVS     R1,R0
   \   00000082   8910               ASRS     R1,R1,#+2
   \   00000084   490F               LSRS     R1,R1,#+29
   \   00000086   0818               ADDS     R0,R1,R0
   \   00000088   C010               ASRS     R0,R0,#+3
   \   0000008A   ........           BL       __aeabi_i2f
   \   0000008E   0100               MOVS     R1,R0
   \   00000090   ....               LDR      R0,??DataTable13  ;; 0x447a0000
   \   00000092   ........           BL       __aeabi_fdiv
   \   00000096   A060               STR      R0,[R4, #+8]
    133                
    134          }//_______________________ Koniec funkcji US0_init ____________________________ 
   \   00000098   70BC               POP      {R4-R6}
   \   0000009A   01BC               POP      {R0}
   \   0000009C   0047               BX       R0               ;; return
   \   0000009E   C046               Nop      
   \                     ??US0_init_0:
   \   000000A0   0001FCFF           DC32     0xfffc0100
   \   000000A4   ........           DC32     Usart0_handler
   \   000000A8   2400FCFF           DC32     0xfffc0024
    135          
    136          
    137          
    138          
    139          
    140          
    141          //-----------------------------------------------------------------------------
    142          //! Nazwa funkcji :    Usart0_handler
    143          //! Funkcja obs³ugi przerwania USART 0
    144          //-----------------------------------------------------------------------------
    145          //  
    146          //----------------------------------------------------------------------------- 

   \                                 In section Debug.txt, align 4, keep-with-next
    147          void Usart0_handler(void)                        //timer isr 
    148          { 
   \                     Usart0_handler:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    149            
    150            //char CheckNoZero;                          //sprawdza czy tabela odczytów TP nie ma zer
    151              unsigned int dummy = AT91C_BASE_US0->US_CSR;                  //interrupts    
   \   00000002   0E4C               LDR      R4,??Usart0_handler_0  ;; 0xfffc0014
   \   00000004   2068               LDR      R0,[R4, #+0]
    152          
    153              AT91PS_USART USART_pt = AT91C_BASE_US0; 
    154              unsigned int status; 
    155              
    156              
    157              //* get Usart status register 
    158              status = USART_pt->US_CSR; 
   \   00000006   2068               LDR      R0,[R4, #+0]
    159            
    160               
    161              if ( status & AT91C_US_TIMEOUT)       //wystapil timeout lub odebrano dane
   \   00000008   C005               LSLS     R0,R0,#+23
   \   0000000A   13D5               BPL      ??Usart0_handler_1
    162                {
    163          
    164                  AT91C_BASE_US0->US_CR = AT91C_US_STTTO;
   \   0000000C   ....               LDR      R0,??DataTable6  ;; 0xfffc0000
   \   0000000E   8021               MOVS     R1,#+128
   \   00000010   0901               LSLS     R1,R1,#+4        ;; #+2048
   \   00000012   0160               STR      R1,[R0, #+0]
    165                  AT91C_BASE_US0->US_RCR = 0;
   \   00000014   0A49               LDR      R1,??Usart0_handler_0+0x4  ;; 0xfffc0104
   \   00000016   0022               MOVS     R2,#+0
   \   00000018   0A60               STR      R2,[R1, #+0]
    166          
    167                  unsigned int xxx= AT91F_US_ReceiveFrame (
    168          	USART_pt,
    169          	US0_Buffer,
    170          	US0_BUFFER_Rx_SIZE,
    171          	0,
    172          	0 );
   \   0000001A   ....               LDR      R5,??DataTable7  ;; SendModbusEnable
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   1100               MOVS     R1,R2
   \   00000020   0091               STR      R1,[SP, #+0]
   \   00000022   0B00               MOVS     R3,R1
   \   00000024   1422               MOVS     R2,#+20
   \   00000026   2900               MOVS     R1,R5
   \   00000028   0C31               ADDS     R1,R1,#+12
   \   0000002A   ........           BL       AT91F_US_ReceiveFrame
   \   0000002E   02B0               ADD      SP,SP,#+8
    173                  
    174                  SendModbusEnable=1;
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   2870               STRB     R0,[R5, #+0]
    175          
    176          
    177                }
    178             
    179                  status = USART_pt->US_CSR; 
   \                     ??Usart0_handler_1:
   \   00000034   2068               LDR      R0,[R4, #+0]
    180              
    181          
    182           
    183            
    184          }//_______________________ Koniec funkcji Usart0_handler _________________________
   \   00000036   38BC               POP      {R3-R5}
   \   00000038   01BC               POP      {R0}
   \   0000003A   0047               BX       R0               ;; return
   \                     ??Usart0_handler_0:
   \   0000003C   1400FCFF           DC32     0xfffc0014
   \   00000040   0401FCFF           DC32     0xfffc0104
    185           
    186          
    187          
    188          
    189          
    190          
    191          
    192          //-----------------------------------------------------------------------------
    193          //!  Nazwa funkcji :    US1_init
    194          //!  Funkcja inicjalizacji USART 1
    195          //-----------------------------------------------------------------------------
    196          //! 
    197          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    198          void US1_init(void)
    199          {
   \                     US1_init:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
    200                // Configure USART
    201                AT91F_US1_CfgPMC();
   \   00000002   ........           BL       AT91F_US1_CfgPMC
    202                AT91F_PDC_DisableRx(AT91C_BASE_PDC_US1);
   \   00000006   294C               LDR      R4,??US1_init_0  ;; 0xfffc4100
   \   00000008   2000               MOVS     R0,R4
   \   0000000A   ........           BL       AT91F_PDC_DisableRx
    203                AT91F_PDC_DisableTx(AT91C_BASE_PDC_US1);
   \   0000000E   2000               MOVS     R0,R4
   \   00000010   ........           BL       AT91F_PDC_DisableTx
    204                
    205                AT91F_US_Configure(AT91C_BASE_US1, AT91C_MASTER_CLOCK,
    206                                 USART485_MODE, g_US1_BAUDRATE, 0);
   \   00000014   ....               LDR      R7,??DataTable14  ;; 0xfffc4000
   \   00000016   ....               LDR      R4,??DataTable15  ;; g_US1_BAUDRATE
   \   00000018   82B0               SUB      SP,SP,#+8
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   0090               STR      R0,[SP, #+0]
   \   0000001E   2368               LDR      R3,[R4, #+0]
   \   00000020   ....               LDR      R2,??DataTable10  ;; 0x408c1
   \   00000022   ....               LDR      R1,??DataTable11  ;; 0x2dc6c00
   \   00000024   3800               MOVS     R0,R7
   \   00000026   ........           BL       AT91F_US_Configure
   \   0000002A   02B0               ADD      SP,SP,#+8
    207              
    208                AT91C_BASE_US1->US_CR = AT91C_US_STTTO;
   \   0000002C   8025               MOVS     R5,#+128
   \   0000002E   2D01               LSLS     R5,R5,#+4        ;; #+2048
   \   00000030   3D60               STR      R5,[R7, #+0]
    209          
    210                AT91F_US_EnableIt(AT91C_BASE_US1,AT91C_US_RXBUFF | AT91C_US_TIMEOUT );     //uruchomienie/ustawienie przerwania od przepe³nienia bufora oraz od time-out
   \   00000032   8821               MOVS     R1,#+136
   \   00000034   4901               LSLS     R1,R1,#+5        ;; #+4352
   \   00000036   3800               MOVS     R0,R7
   \   00000038   ........           BL       AT91F_US_EnableIt
    211          
    212                // konfiguracja przerqwania USART0 
    213                AT91F_AIC_ConfigureIt ( AT91C_BASE_AIC, AT91C_ID_US1, USART1_INTERRUPT_LEVEL, AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL, Usart1_handler); 
   \   0000003C   ....               LDR      R6,??DataTable12  ;; 0xfffff000
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   1B48               LDR      R0,??US1_init_0+0x4  ;; Usart1_handler
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   0023               MOVS     R3,#+0
   \   00000046   0522               MOVS     R2,#+5
   \   00000048   0721               MOVS     R1,#+7
   \   0000004A   3000               MOVS     R0,R6
   \   0000004C   ........           BL       AT91F_AIC_ConfigureIt
   \   00000050   02B0               ADD      SP,SP,#+8
    214                  
    215                AT91F_US_EnableRx(AT91C_BASE_US1);
   \   00000052   3800               MOVS     R0,R7
   \   00000054   ........           BL       AT91F_US_EnableRx
    216                AT91F_US_EnableTx(AT91C_BASE_US1);
   \   00000058   3800               MOVS     R0,R7
   \   0000005A   ........           BL       AT91F_US_EnableTx
    217          
    218                
    219                AT91F_US1_CfgPIO();                                                       //konfiguracja pinów
   \   0000005E   ........           BL       AT91F_US1_CfgPIO
    220                
    221                unsigned int xxx= AT91F_US_ReceiveFrame (                                 //Ustawienie bufora odbiorczego
    222          	AT91C_BASE_US1,
    223          	US1_Buffer,
    224          	US1_BUFFER_Rx_SIZE,
    225          	0,
    226          	0 );
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   0300               MOVS     R3,R0
   \   0000006A   9122               MOVS     R2,#+145
   \   0000006C   9200               LSLS     R2,R2,#+2        ;; #+580
   \   0000006E   2100               MOVS     R1,R4
   \   00000070   0831               ADDS     R1,R1,#+8
   \   00000072   3800               MOVS     R0,R7
   \   00000074   ........           BL       AT91F_US_ReceiveFrame
   \   00000078   02B0               ADD      SP,SP,#+8
    227          
    228                AT91C_BASE_US1->US_RTOR = TIME_OUT_US1;                                    //ustawienie czasu time-out (w bitach)
   \   0000007A   0E48               LDR      R0,??US1_init_0+0x8  ;; 0xfffc4024
   \   0000007C   3C21               MOVS     R1,#+60
   \   0000007E   0160               STR      R1,[R0, #+0]
    229                AT91C_BASE_US1->US_CR = AT91C_US_STTTO;                                   //restart time-out
   \   00000080   3D60               STR      R5,[R7, #+0]
    230                
    231                AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_US1);                        //uruchomienie przerwania od USARTA
   \   00000082   0721               MOVS     R1,#+7
   \   00000084   3000               MOVS     R0,R6
   \   00000086   ........           BL       AT91F_AIC_EnableIt
    232                
    233                g_US1_OneByteTxTime  = 1000/ ((float) (g_US1_BAUDRATE /8));
   \   0000008A   2068               LDR      R0,[R4, #+0]
   \   0000008C   0100               MOVS     R1,R0
   \   0000008E   8910               ASRS     R1,R1,#+2
   \   00000090   490F               LSRS     R1,R1,#+29
   \   00000092   0818               ADDS     R0,R1,R0
   \   00000094   C010               ASRS     R0,R0,#+3
   \   00000096   ........           BL       __aeabi_i2f
   \   0000009A   0100               MOVS     R1,R0
   \   0000009C   ....               LDR      R0,??DataTable13  ;; 0x447a0000
   \   0000009E   ........           BL       __aeabi_fdiv
   \   000000A2   6060               STR      R0,[R4, #+4]
    234          }//_______________________ Koniec funkcji US1_init ____________________________ 
   \   000000A4   F8BC               POP      {R3-R7}
   \   000000A6   01BC               POP      {R0}
   \   000000A8   0047               BX       R0               ;; return
   \   000000AA   C046               Nop      
   \                     ??US1_init_0:
   \   000000AC   0041FCFF           DC32     0xfffc4100
   \   000000B0   ........           DC32     Usart1_handler
   \   000000B4   2440FCFF           DC32     0xfffc4024
    235          
    236          
    237          
    238          
    239          
    240          
    241          //-----------------------------------------------------------------------------
    242          //! Nazwa funkcji :    Usart1_handler 
    243          //! Funkcja obs³ugi przerwania USART 1
    244          //-----------------------------------------------------------------------------
    245          //  
    246          //----------------------------------------------------------------------------- 

   \                                 In section Debug.txt, align 4, keep-with-next
    247          void Usart1_handler(void)                        //timer isr 
    248          { 
   \                     Usart1_handler:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    249            
    250            
    251            //char CheckNoZero;                          //sprawdza czy tabela odczytów TP nie ma zer
    252              unsigned int dummy = AT91C_BASE_US1->US_CSR;                  //interrupts    
   \   00000002   1248               LDR      R0,??Usart1_handler_0  ;; 0xfffc4014
   \   00000004   0168               LDR      R1,[R0, #+0]
    253          
    254              AT91PS_USART USART_pt = AT91C_BASE_US1; 
    255              unsigned int status; 
    256              
    257              
    258              //* get Usart status register 
    259              status = USART_pt->US_CSR; 
   \   00000006   0068               LDR      R0,[R0, #+0]
    260             
    261             
    262              if (( status & AT91C_US_TIMEOUT) || ( status & AT91C_US_RXBUFF))      //wystapil timeout lub odebrano dane
   \   00000008   8821               MOVS     R1,#+136
   \   0000000A   4901               LSLS     R1,R1,#+5        ;; #+4352
   \   0000000C   0842               TST      R0,R1
   \   0000000E   1AD0               BEQ      ??Usart1_handler_1
    263                {
    264          
    265                  AT91C_BASE_US1->US_CR = AT91C_US_STTTO;
   \   00000010   ....               LDR      R4,??DataTable14  ;; 0xfffc4000
   \   00000012   8020               MOVS     R0,#+128
   \   00000014   0001               LSLS     R0,R0,#+4        ;; #+2048
   \   00000016   2060               STR      R0,[R4, #+0]
    266                  AT91C_BASE_US1->US_RCR = 0;
   \   00000018   0D48               LDR      R0,??Usart1_handler_0+0x4  ;; 0xfffc4104
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   0160               STR      R1,[R0, #+0]
    267          
    268               
    269                  unsigned int xxx= AT91F_US_ReceiveFrame (
    270          	USART_pt,
    271          	US1_Buffer,
    272          	US1_BUFFER_Rx_SIZE,
    273          	0,
    274          	0 );
   \   0000001E   ....               LDR      R5,??DataTable15  ;; g_US1_BAUDRATE
   \   00000020   82B0               SUB      SP,SP,#+8
   \   00000022   0800               MOVS     R0,R1
   \   00000024   0090               STR      R0,[SP, #+0]
   \   00000026   0300               MOVS     R3,R0
   \   00000028   9122               MOVS     R2,#+145
   \   0000002A   9200               LSLS     R2,R2,#+2        ;; #+580
   \   0000002C   2900               MOVS     R1,R5
   \   0000002E   0831               ADDS     R1,R1,#+8
   \   00000030   2000               MOVS     R0,R4
   \   00000032   ........           BL       AT91F_US_ReceiveFrame
   \   00000036   02B0               ADD      SP,SP,#+8
    275                  
    276                  WizFiResponseInterpreter(US1_Buffer,Buff_TX_1 ,AT91C_BASE_US1, &NET);
                         ^
Warning[Pe223]: function "WizFiResponseInterpreter" declared implicitly
   \   00000038   064B               LDR      R3,??Usart1_handler_0+0x8  ;; NET
   \   0000003A   2200               MOVS     R2,R4
   \   0000003C   0649               LDR      R1,??Usart1_handler_0+0xC  ;; Buff_TX_1
   \   0000003E   0835               ADDS     R5,R5,#+8
   \   00000040   2800               MOVS     R0,R5
   \   00000042   ........           BL       WizFiResponseInterpreter
    277          
    278                }
    279             
    280          }//_______________________ Koniec funkcji Usart0_handler _________________________
   \                     ??Usart1_handler_1:
   \   00000046   38BC               POP      {R3-R5}
   \   00000048   01BC               POP      {R0}
   \   0000004A   0047               BX       R0               ;; return
   \                     ??Usart1_handler_0:
   \   0000004C   1440FCFF           DC32     0xfffc4014
   \   00000050   0441FCFF           DC32     0xfffc4104
   \   00000054   ........           DC32     NET
   \   00000058   ........           DC32     Buff_TX_1

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0000FCFF           DC32     0xfffc0000

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     SendModbusEnable

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   C1080400           DC32     0x408c1

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   006CDC02           DC32     0x2dc6c00

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   00F0FFFF           DC32     0xfffff000

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   00007A44           DC32     0x447a0000

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0040FCFF           DC32     0xfffc4000

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     g_US1_BAUDRATE
    281           
    282          

   Maximum stack usage in bytes:

     Function                    .cstack
     --------                    -------
     AT91F_AIC_ConfigureIt           24
     AT91F_AIC_EnableIt               0
     AT91F_PDC_DisableRx              0
     AT91F_PDC_DisableTx              0
     AT91F_PDC_EnableRx               0
     AT91F_PDC_EnableTx               0
     AT91F_PDC_IsNextRxEmpty          0
     AT91F_PDC_IsRxEmpty              0
     AT91F_PDC_Open                   8
     AT91F_PDC_ReceiveFrame          24
     AT91F_PDC_SetNextRx              0
     AT91F_PDC_SetNextTx              0
     AT91F_PDC_SetRx                  0
     AT91F_PDC_SetTx                  0
     AT91F_PIO_CfgPeriph              0
     AT91F_PMC_EnablePeriphClock      0
     AT91F_US0_CfgPIO                 8
     AT91F_US0_CfgPMC                 8
     AT91F_US1_CfgPIO                 8
     AT91F_US1_CfgPMC                 8
     AT91F_US_Baudrate                8
     AT91F_US_Configure              16
     AT91F_US_EnableIt                0
     AT91F_US_EnableRx                0
     AT91F_US_EnableTx                0
     AT91F_US_ReceiveFrame           16
     AT91F_US_SetBaudrate             8
     AT91F_US_SetTimeguard            0
     US0_init                        24
     US1_init                        32
     Usart0_handler                  24
     Usart1_handler                  24


   Section sizes:

     Function/Label              Bytes
     --------------              -----
     AT91F_AIC_ConfigureIt         44
     AT91F_AIC_EnableIt            12
     AT91F_PDC_SetNextRx            6
     AT91F_PDC_SetNextTx            6
     AT91F_PDC_SetRx                6
     AT91F_PDC_SetTx                6
     AT91F_PDC_EnableTx             8
     AT91F_PDC_EnableRx             6
     AT91F_PDC_DisableTx            8
     AT91F_PDC_DisableRx            6
     AT91F_PDC_IsRxEmpty           10
     AT91F_PDC_IsNextRxEmpty       10
     AT91F_PDC_Open                72
     AT91F_PDC_ReceiveFrame        70
     AT91F_PIO_CfgPeriph           10
     AT91F_PMC_EnablePeriphClock    4
     AT91F_US_Baudrate             50
     AT91F_US_SetBaudrate          20
     AT91F_US_SetTimeguard          4
     AT91F_US_EnableIt              4
     AT91F_US_Configure            52
     AT91F_US_EnableRx              6
     AT91F_US_EnableTx              6
     AT91F_US_ReceiveFrame         26
     AT91F_US1_CfgPMC              20
     AT91F_US1_CfgPIO              24
     AT91F_US0_CfgPMC              20
     AT91F_US0_CfgPIO              24
     g_US0_Connect_OK               1
     g_US1_Connect_OK               1
     g_ETH0_Connect_OK              1
     g_ETH1_Connect_OK              1
     SendModbusEnable              32
     g_US0_Comm_TIMEOUT             4
     q_US0_Comm_Mode                1
     g_US1_BAUDRATE               588
     g_US1_Comm_TIMEOUT             4
     g_US0_Comm_MinCykle            4
     g_US1_Comm_MinCykle            4
     US0_init                     172
     Usart0_handler                68
     US1_init                     184
     Usart1_handler                92
     ??DataTable6                   4
     ??DataTable7                   4
     ??DataTable10                  4
     ??DataTable11                  4
     ??DataTable12                  4
     ??DataTable13                  4
     ??DataTable14                  4
     ??DataTable15                  4

 
     4 bytes in section .bss
   637 bytes in section .data
 1 088 bytes in section Debug.txt
 
 548 bytes of CODE memory (+ 540 bytes shared)
 641 bytes of DATA memory

Errors: none
Warnings: 3
