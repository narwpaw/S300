###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           09/Jul/2012  21:05:16 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\Framework\ScreenMENU2.c                       #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\Framework\ScreenMENU2.c" -D AT91SAM7S256 -D   #
#                    AT91SAM7SEK -D iH -D __ALARM -D __WIFI_MODULE -lC        #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\S300X\List\" --diag_suppress Pa082 -o         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\S300X\Obj\" --no_unroll --no_inline           #
#                    --no_tbaa --no_scheduling --debug --endian little --cpu  #
#                    ARM7TDMI -e --fpu None --dlib_config "C:\Program         #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    5.0\ARM\INC\DLib_Config_Normal.h" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v0.6 - 18.05.2012\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v0.6 - 18.05.2012\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v0.6 - 18.05.2012\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v0.6 -             #
#                    18.05.2012\Framework\Configuration\" -I "C:\Program      #
#                    Files\IAR Systems\Embedded Workbench 5.0\ARM\INC\"       #
#                    --section .text=Debug.txt --interwork --cpu_mode thumb   #
#                    -Om                                                      #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\S300X\List\ScreenMENU2.lst                    #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v0.6 -              #
#                    18.05.2012\S300X\Obj\ScreenMENU2.o                       #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\ScreenMENU2.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                                 CEURON                                   *//                       
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : Prog.Screen.c                                 *//
      7          //*  Opis                         : Obsluga grafiki i ekranu dotykowego      *//
      8          //*  Autor                        : Pawe³ Narwojsz                           */F/
      9          //*  Data utrzorzenia             : 19.09.2007                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*// 
     19          //****************************************************************************//
     20          //****************************************************************************//
     21          
     22          
     23          
     24          #include "ScreenMENU2.h"
     25          #include "Framework.h "
     26          #include "Language.h"
     27          #include "core/device.h"                                                        //³aduje bibliotreki dla odpowiedniego procesora
     28          #include "LCD.h"
     29          #include "Application_prog.h"
     30          #include <intrinsics.h>
     31          #include "Animation.c"
     32          #include "ScreenSorce.h"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0, 0, 0, 0, 0, 0}>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   char const __data ProcSt_graf[3][8]
   \                     ProcSt_graf:
   \   00000008   1818181F1F18       DC8 24, 24, 24, 31, 31, 24, 24, 24, 96, 96, 96, 224, 224, 96, 96, 96, 0
   \              1818606060E0
   \              E060606000  
   \   00000019   000007070000       DC8 0, 0, 7, 7, 0, 0, 0
   \              00          
   \   char const __data ProcWOUTC_graf[3][9]
   \                     ProcWOUTC_graf:
   \   00000020   08CC26272726       DC8 8, 204, 38, 39, 39, 38, 204, 8, 0, 0, 115, 17, 82, 82, 66, 113, 0
   \              CC0800007311
   \              5252427100  
   \   00000031   000103060606       DC8 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              0603010000  
   \   char const __data ProcSPK_graf[3][9]
   \                     ProcSPK_graf:
   \   0000003C   00C0407F7F40       DC8 0, 192, 64, 127, 127, 64, 192, 0, 0, 152, 85, 18, 81, 17, 82, 21
   \              C00000985512
   \              51115215    
   \   0000004C   588000000001       DC8 88, 128, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0
   \              000100000000
   \   char const __data ProcTime_graf[3][8]
   \                     ProcTime_graf:
   \   00000058   D050509F1F90       DC8 208, 80, 80, 159, 31, 144, 80, 208, 23, 21, 20, 242, 241, 18, 20
   \              50D0171514F2
   \              F11214      
   \   00000067   170000000707       DC8 23, 0, 0, 0, 7, 7, 0, 0, 0
   \              000000      
   \   char const __data ProcClock_graf[3][8]
   \                     ProcClock_graf:
   \   00000070   A848282F2F48       DC8 168, 72, 40, 47, 47, 72, 168, 200, 43, 36, 40, 235, 233, 36, 43, 38
   \              A8C82B2428EB
   \              E9242B26    
   \   00000080   000000070700       DC8 0, 0, 0, 7, 7, 0, 0, 0
   \              0000        
   \   char const __data ProcDay_graf[3][8]
   \                     ProcDay_graf:
   \   00000088   FC0434575734       DC8 252, 4, 52, 87, 87, 52, 4, 252, 255, 0, 37, 39, 85, 82, 0, 255, 1
   \              04FCFF002527
   \              555200FF01  
   \   00000099   010107070101       DC8 1, 1, 7, 7, 1, 1, 1
   \              01          
   \   char const __data ProcToggleRS_graf[3][19]
   \                     ProcToggleRS_graf:
   \   000000A0   00F808684F2F       DC8 0, 248, 8, 104, 79, 47, 104, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              680808080808
   \              080808F80000
   \              00          
   \   000000B3   00FF80B89494       DC8 0, 255, 128, 184, 148, 148, 136, 128, 128, 128, 133, 131, 133, 131
   \              888080808583
   \              8583        
   \   000000C1   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000070700
   \              000000000000
   \              000000      
   \   000000D6   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   char const __data ProcToggleT_graf[3][19]
   \                     ProcToggleT_graf:
   \   000000DC   00F808484F4F       DC8 0, 248, 8, 72, 79, 79, 232, 8, 8, 104, 200, 8, 104, 200, 8, 248, 0
   \              E8080868C808
   \              68C808F800  
   \   000000ED   000000FF80B8       DC8 0, 0, 0, 255, 128, 184, 148, 148, 136, 128, 128, 188, 135, 128, 183
   \              9494888080BC
   \              8780B7      
   \   000000FC   9D80FF000000       DC8 157, 128, 255, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000707
   \              000000000000
   \              000000      
   \   00000111   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
   \   char const __data ProcTLI1_graf[3][19]
   \                     ProcTLI1_graf:
   \   00000118   00F808080F8F       DC8 0, 248, 8, 8, 15, 143, 8, 8, 8, 168, 72, 8, 104, 200, 8, 248, 0, 0
   \              080808A84808
   \              68C808F80000
   \   0000012A   0000FF808282       DC8 0, 0, 255, 128, 130, 130, 130, 131, 130, 128, 187, 132, 128, 183
   \              82838280BB84
   \              80B7        
   \   00000138   9D80FF000000       DC8 157, 128, 255, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000707
   \              000000000000
   \              000000      
   \   0000014D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
   \   char const __data ProcLim_graf[3][18]
   \                     ProcLim_graf:
   \   00000154   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0, 255
   \              080808080808
   \              0808F8000000
   \              FF          
   \   00000167   80B894948881       DC8 128, 184, 148, 148, 136, 129, 130, 129, 140, 132, 136, 140, 128
   \              82818C84888C
   \              80          
   \   00000174   FF0303030000       DC8 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000707000000
   \              000000000000
   \              00000000    
   \   0000018A   0000               DC8 0, 0
   \   char const __data ProcEven_graf[3][18]
   \                     ProcEven_graf:
   \   0000018C   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0, 255
   \              080808080808
   \              0808F8000000
   \              FF          
   \   0000019F   80B894948883       DC8 128, 184, 148, 148, 136, 131, 128, 131, 152, 136, 144, 152, 128
   \              808398889098
   \              80          
   \   000001AC   FF0303030000       DC8 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000707000000
   \              000000000000
   \              00000000    
   \   000001C2   0000               DC8 0, 0
   \   char const __data ProcPlus_graf[3][18]
   \                     ProcPlus_graf:
   \   000001C4   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808080808
   \              0808F8000000
   \   000001D6   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 129, 131, 129, 140, 132, 136, 140
   \              8183818C8488
   \              8C          
   \   000001E3   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   000001F8   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcMinus_graf[3][18]
   \                     ProcMinus_graf:
   \   000001FC   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 8, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808080808
   \              0808F8000000
   \   0000020E   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 131, 128, 140, 132, 136, 140
   \              8083808C8488
   \              8C          
   \   0000021B   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000230   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcMul_graf[3][18]
   \                     ProcMul_graf:
   \   00000234   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 136, 8, 136, 8, 8, 8, 8, 248, 0, 0, 0
   \              088808880808
   \              0808F8000000
   \   00000246   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 130, 129, 154, 136, 144, 152
   \              8082819A8890
   \              98          
   \   00000253   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   00000268   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcDiv_graf[3][18]
   \                     ProcDiv_graf:
   \   0000026C   F808484F6F48       DC8 248, 8, 72, 79, 111, 72, 8, 8, 8, 72, 136, 8, 8, 8, 248, 0, 0, 0
   \              080808488808
   \              0808F8000000
   \   0000027E   FF80B8949488       DC8 255, 128, 184, 148, 148, 136, 128, 128, 128, 152, 136, 145, 154
   \              808080988891
   \              9A          
   \   0000028B   80FF03030300       DC8 128, 255, 3, 3, 3, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000007070000
   \              000000000000
   \              000000      
   \   000002A0   00000000           DC8 0, 0, 0, 0
   \   char const __data ProcNot_graf[3][8]
   \                     ProcNot_graf:
   \   000002A4   024A6A6B5B5A       DC8 2, 74, 106, 107, 91, 90, 74, 2, 0, 102, 41, 41, 41, 118, 32, 0, 1
   \              4A0200662929
   \              2976200001  
   \   000002B5   010107070101       DC8 1, 1, 7, 7, 1, 1, 1
   \              01          
   \   char const __data ProcGetAnal_graf[3][17]
   \                     ProcGetAnal_graf:
   \   000002BC   FE0000000000       DC8 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 236, 42, 106, 34, 236, 255
   \              00000000FE00
   \              EC2A6A22ECFF
   \   000002CE   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 132, 132, 132, 132, 142, 3, 6, 4
   \              000000FF0084
   \              8484848E0306
   \              04          
   \   000002E1   040404040404       DC8 4, 4, 4, 4, 4, 4, 6, 3, 0, 2, 2, 1, 2, 1, 0
   \              060300020201
   \              020100      
   \   char const __data ProcSetAnal_graf[3][17]
   \                     ProcSetAnal_graf:
   \   000002F0   FE0301010101       DC8 254, 3, 1, 1, 1, 1, 1, 1, 1, 3, 254, 0, 230, 40, 110, 34, 236, 255
   \              01010103FE00
   \              E6286E22ECFF
   \   00000302   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 132, 132, 132, 132, 142, 3, 0, 0
   \              000000FF0084
   \              8484848E0300
   \              00          
   \   00000315   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 2, 1, 2, 1, 0
   \              000300020201
   \              020100      
   \   char const __data ProcSt_Button[3][6]
   \                     ProcSt_Button:
   \   00000324   3F3F00F8F0F0       DC8 63, 63, 0, 248, 240, 240, 240, 240, 0, 127, 63, 63, 7, 7, 0, 0, 0
   \              F0F0007F3F3F
   \              0707000000  
   \   00000335   000000             DC8 0, 0, 0
   \   char const __data ShortDate[7][3]
   \                     ShortDate:
   \   00000338   4D3A00443A00       DC8 77, 58, 0, 68, 58, 0, 104, 58, 0, 109, 58, 0, 115, 58, 0
   \              683A006D3A00
   \              733A00      
   \   00000347   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   436F6E73742E       DC8 "Const. "
   \              2000        
   \   00000014   476574207265       DC8 "Get reg."
   \              672E00      
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   536574207265       DC8 "Set reg."
   \              672E00      
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   313E3220513D       DC8 "1>2 Q=1"
   \              3100        
   \   00000034   313D3220513D       DC8 "1=2 Q=1"
   \              3100        
   \   0000003C   513D312B3200       DC8 "Q=1+2"
   \   00000042   0000               DC8 0, 0
   \   00000044   513D312D3200       DC8 "Q=1-2"
   \   0000004A   0000               DC8 0, 0
   \   0000004C   513D31783200       DC8 "Q=1x2"
   \   00000052   0000               DC8 0, 0
   \   00000054   513D312F3200       DC8 "Q=1/2"
   \   0000005A   0000               DC8 0, 0
   \   0000005C   5265673A00         DC8 "Reg:"
   \   00000061   000000             DC8 0, 0, 0
   \   00000064   4163746F7200       DC8 "Actor"
   \   0000006A   0000               DC8 0, 0
   \   0000006C   54656D657065       DC8 "Temeper."
   \              722E00      
   \   00000075   000000             DC8 0, 0, 0
   \   00000078   4E6F64652049       DC8 "Node ID:"
   \              443A00      
   \   00000081   000000             DC8 0, 0, 0
   \   00000084   546865726D6F       DC8 "Thermo"
   \              00          
   \   0000008B   00                 DC8 0
   \   char const __data ProcSet_graf[3][9]
   \                     ProcSet_graf:
   \   0000008C   10180C0F0F0C       DC8 16, 24, 12, 15, 15, 12, 24, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3
   \              181000000000
   \              000000000000
   \              0103        
   \   000000A0   060606060301       DC8 6, 6, 6, 6, 3, 1, 0, 0
   \              0000        
   \   char const __data ProcWOUTS_graf[3][9]
   \                     ProcWOUTS_graf:
   \   000000A8   D0188C4F4F4C       DC8 208, 24, 140, 79, 79, 76, 88, 144, 0, 31, 16, 23, 18, 20, 20, 20
   \              5890001F1017
   \              12141414    
   \   000000B8   730001030606       DC8 115, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000
   \   char const __data ProcWOUTR_graf[3][9]
   \                     ProcWOUTR_graf:
   \   000000C4   90584C4F4F8C       DC8 144, 88, 76, 79, 79, 140, 24, 208, 0, 119, 18, 20, 20, 20, 19, 16
   \              18D000771214
   \              14141310    
   \   000000D4   1F0001030606       DC8 31, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000
   \   char const __data ProcSt_iko[2][8]
   \                     ProcSt_iko:
   \   000000E0   1818181F1F18       DC8 24, 24, 24, 31, 31, 24, 24, 24, 6, 6, 6, 62, 62, 6, 6, 6
   \              18180606063E
   \              3E060606    
   \   char const __data ProcSet_iko[2][8]
   \                     ProcSet_iko:
   \   000000F0   6030181F1F18       DC8 96, 48, 24, 31, 31, 24, 48, 96, 3, 6, 12, 12, 12, 12, 6, 3
   \              306003060C0C
   \              0C0C0603    
   \   char const __data ProcTime_iko[2][12]
   \                     ProcTime_iko:
   \   00000100   E018040202C1       DC8 224, 24, 4, 2, 2, 193, 65, 66, 66, 68, 24, 224, 0, 3, 4, 8, 8, 17
   \              4142424418E0
   \              000304080811
   \   00000112   100808040300       DC8 16, 8, 8, 4, 3, 0
   \   char const __data ProcLog_iko[2][8]
   \                     ProcLog_iko:
   \   00000118   00006F919191       DC8 0, 0, 111, 145, 145, 145, 97, 1, 12, 18, 92, 18, 18, 18, 28, 0
   \              61010C125C12
   \              12121C00    
   \   char const __data ProcAnl_iko[2][8]
   \                     ProcAnl_iko:
   \   00000128   0029292FE909       DC8 0, 41, 41, 47, 233, 9, 6, 0, 0, 93, 5, 5, 4, 4, 4, 0
   \              0600005D0505
   \              04040400    
   \   char const __data SPK_1[4][2][5]
   \                     SPK_1:
   \   00000138   3F202020E000       DC8 63, 32, 32, 32, 224, 0, 0, 0, 0, 255, 143, 136, 136, 136, 248, 143
   \              000000FF8F88
   \              8888F88F    
   \   00000148   888888F8E718       DC8 136, 136, 136, 248, 231, 24, 24, 24, 24, 207, 48, 48, 48, 48, 215
   \              181818CF3030
   \              3030D7      
   \   00000157   28282828AF50       DC8 40, 40, 40, 40, 175, 80, 80, 80, 80
   \              505050      
   \   char const __data DeyOfWeekStr[2][8][2]
   \                     DeyOfWeekStr:
   \   00000160   4572506E5774       DC8 69, 114, 80, 110, 87, 116, 83, 114, 67, 122, 80, 116, 83, 111, 78
   \              5372437A5074
   \              536F4E      
   \   0000016F   6445724D6F54       DC8 100, 69, 114, 77, 111, 84, 117, 87, 101, 84, 104, 70, 114, 83, 97
   \              755765546846
   \              725361      
   \   0000017E   5375               DC8 83, 117

   \                                 In section .rodata, align 4
   \   char const __data ProcTMRS_graf[3][9]
   \                     ProcTMRS_graf:
   \   00000000   10180C0F0FCC       DC8 16, 24, 12, 15, 15, 204, 24, 208, 0, 113, 17, 17, 17, 17, 23, 16
   \              18D000711111
   \              11111710    
   \   00000010   1F0001030606       DC8 31, 0, 1, 3, 6, 6, 6, 6, 3, 1, 0, 0
   \              060603010000

   \                                 In section .rodata, align 4
   \   char const __data ProcConstAnal_graf[3][18]
   \                     ProcConstAnal_graf:
   \   00000000   FE0202020202       DC8 254, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 254, 0, 255, 0, 0
   \              020202020202
   \              02020202FE00
   \              FF0000      
   \   00000015   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 3, 2, 6, 4, 4, 6, 2
   \              000000000000
   \              00FF00030206
   \              04040602    
   \   0000002B   020202020202       DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0
   \              020202030000
   \              00          

   \                                 In section .rodata, align 4
   \   char const __data BateriaWyladowana[1][9]
   \                     BateriaWyladowana:
   \   00000000   3F3131292925       DC8 63, 49, 49, 41, 41, 37, 37, 51, 30, 0, 0, 0
   \              25331E000000

   \                                 In section .rodata, align 4
   \   char const __data Frame[2][11]
   \                     Frame:
   \   00000000   FE0101010101       DC8 254, 1, 1, 1, 1, 1, 1, 1, 1, 1, 254, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4
   \              01010101FE03
   \              040404040404
   \              040404      
   \   00000015   030000             DC8 3, 0, 0
     33          #include "RF_Exe.h"
     34          #include "spi_main.h"
     35           #include "WizFi.h"                            

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline

   
   ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\WizFi.h",146  Warning[Pe001]: 
          last line of file ends without a newline
     36          
     37          
     38          //
     39          
     40          /*
     41          extern char text[10];
     42          extern char text1[10];
     43          extern char text2[10];
     44          extern char text3[10];
     45          extern char text4[10];
     46          extern char text5[10];
     47          extern char text6[10];
     48          extern char text7[10];
     49          extern char textVal1[8];
     50          extern char textVal2[8];
     51          extern char textVal3[8];
     52          extern char textVal4[8];
     53          extern char textVal5[8];
     54          extern char textVal6[8];
     55          extern char textVal7[8];
     56          */
     57          extern _Correct korekta_Y;
     58          extern _Correct korekta_X;
     59          extern char Arial_7[100][10];
     60          
     61          extern char LCD_Canvas[8][128];
     62          extern unsigned int CyklPerSek;
     63          extern char g_level;
     64          extern char g_Password_1[8];
     65          extern char g_Password_2[8];
     66          extern int g_Message;
     67          extern char g_US0_Connect_OK;
     68          extern char g_US1_Connect_OK;
     69          extern char g_Stop_Program;
     70          extern RAM ram;
     71          extern _RF_Status RF_Status;
     72          extern _DateTime DateTime;
     73          extern volatile char SlaveMode;
     74          extern char g_SlaveConnect;
     75          extern unsigned long long  g_counter;
     76          extern volatile char Busy_program;
     77          extern char g_NeedPass;
     78          extern _TransQuality TransQuality; //tablica informacyjna jakoci po³¹czenia pola odpowiadaj¹ polom _ProgramTab.NeuronsIdTab
     79          extern const char identyfikacja;
     80          extern const char system;
     81          extern char AlarmOn;
     82          extern int g_info;

   \                                 In section .bss, align 1
     83          char MainSide_puls=0;
   \                     MainSide_puls:
   \   00000000                      DS8 1
     84          extern _RF_TaskTab  RF_TaskTab;
     85          extern signed char           RF_CurrentTask;
     86          int MenuLevel=0;      //poziom menu
     87          extern unsigned long long g_NextTimeProgram;
     88          extern char ekran_komunikacja[8][128];
     89          extern signed short X_down;
     90          extern signed short Y_down;
     91          extern signed short X_up;
     92          extern signed short Y_up;
     93          extern int  g_leng;
     94          extern LangTab Speech[2];
     95          extern char g_PC_Connected;
     96          extern _ProgramTab gProg;
     97          extern char NumberScene;
     98          extern _NeuronsListUnit NeuronsList[NumberNeurons];
     99          extern char Label (char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw);
    100          extern char FloToStr (float Value, char Vstring[8],char ill) ;
    101          extern _MainStage  MainStage; 
    102          extern _TransQuality TransQuality;
    103          extern _RF_NodeTest  RF_NodeTest; 
    104           extern _Net NET;    
    105          
    106           

   \                                 In section .bss, align 4
    107          float wartosc_tmp;
   \                     wartosc_tmp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    108          char text_label_tmp[10];
   \                     text_label_tmp:
   \   00000000                      DS8 12
    109          
    110          extern char SceneBefOff;
    111          

   \                                 In section .bss, align 1
    112          char Label_move = 0;
   \                     Label_move:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    113          int Suw_poz_IO=0;
   \                     Suw_poz_IO:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    114          int Suw_poz_analog=0;
   \                     Suw_poz_analog:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    115          int Suw_poz_dwustan=0;
   \                     Suw_poz_dwustan:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    116          int Suw_poz_monit=0;
   \                     Suw_poz_monit:
   \   00000000                      DS8 4
    117          int ScrollMenu_poz=-1;
    118          int ScrollMenu_Paint_exist=-1;
    119          int Rej_poz=0;

   \                                 In section .bss, align 1
    120          char CyklMonit=0;
   \                     CyklMonit:
   \   00000000                      DS8 1
    121          char *TextToChange=0;
    122          char TextToChangeLength=0;
    123          char TextToChangeMaxPixSize=0;
    124          _ButtonGraph *ButtonToChange=0;
    125          char CurentChartModyfi;
    126          
    127          
    128          
    129          signed short int *ValueChange=0;
    130          int *NeuronIdChange=0;
    131          char NeuronNrChange=0;
    132          
    133          
    134          _Analog *AnalogToChange;
    135          
    136          char CurrentSheet=0;
    137          char CurModifSheet=0;
    138          char NeuronsListLine=0;
    139          
    140          char SheetHistoryIndex=0;
    141          char SheetHistory[20];
    142          
    143          
    144          extern _ProgramTab gProg;
    145          extern int PtogTime;
    146          
    147          
    148          #define DispWaitOn  1
    149          #define DispWaitOff 2
    150          
    151          

   \                                 In section .bss, align 4
    152          int Monitoring_array[30][2]; //tablica monitoringu 1 kol - adres, 2 kol- typ (0 analog, 1 dwustan, 2 IO)
   \                     Monitoring_array:
   \   00000000                      DS8 240

   \                                 In section .bss, align 4
    153          int Monit_Size_scroll=0;
   \                     Monit_Size_scroll:
   \   00000000                      DS8 4
    154          char SetupTimeCarPoz=1; 
    155          extern char ProgramChange=0;      //Je¿eli 1 - zmiana programu przez u¿ytkownika 
    156          //*-----------------------------------------------------------------------------
    157          //* Nazwa funkcji :    ScreenEvent
    158          //* Funkcja wrysowania menu ekranowego
    159          //*-----------------------------------------------------------------------------
    160          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    161          //*-----------------------------------------------------------------------------
    162          
    163          
    164          
    165          
    166          char TmpFlg=0;

   \                                 In section Debug.txt, align 4, keep-with-next
    167          void MenuPaint(void)
    168          {
   \                     MenuPaint:
   \   00000000   01B5               PUSH     {R0,LR}
    169            
    170            
    171              if (TmpFlg==0)
   \   00000002   BC48               LDR      R0,??MenuPaint_0  ;; TextToChangeLength
   \   00000004   417A               LDRB     R1,[R0, #+9]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   01D1               BNE      ??MenuPaint_1
    172            {
    173              TmpFlg=1;
   \   0000000A   0121               MOVS     R1,#+1
   \   0000000C   4172               STRB     R1,[R0, #+9]
    174          
    175            }
    176          
    177            if (g_Message==0) 
   \                     ??MenuPaint_1:
   \   0000000E   BA49               LDR      R1,??MenuPaint_0+0x4  ;; g_Message
   \   00000010   0968               LDR      R1,[R1, #+0]
   \   00000012   0029               CMP      R1,#+0
   \   00000014   00D0               BEQ      .+4
   \   00000016   0DE2               B        ??MenuPaint_2
    178            switch (MenuLevel)
   \   00000018   816C               LDR      R1,[R0, #+72]
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   00D1               BNE      .+4
   \   0000001E   E4E0               B        ??MenuPaint_3
   \   00000020   491E               SUBS     R1,R1,#+1
   \   00000022   00D1               BNE      .+4
   \   00000024   E4E0               B        ??MenuPaint_4
   \   00000026   891E               SUBS     R1,R1,#+2
   \   00000028   00D1               BNE      .+4
   \   0000002A   EBE0               B        ??MenuPaint_5
   \   0000002C   491E               SUBS     R1,R1,#+1
   \   0000002E   00D1               BNE      .+4
   \   00000030   EBE0               B        ??MenuPaint_6
   \   00000032   491E               SUBS     R1,R1,#+1
   \   00000034   00D1               BNE      .+4
   \   00000036   EBE0               B        ??MenuPaint_7
   \   00000038   491F               SUBS     R1,R1,#+5
   \   0000003A   00D1               BNE      .+4
   \   0000003C   FAE0               B        ??MenuPaint_8
   \   0000003E   491E               SUBS     R1,R1,#+1
   \   00000040   00D1               BNE      .+4
   \   00000042   FBE0               B        ??MenuPaint_9
   \   00000044   491E               SUBS     R1,R1,#+1
   \   00000046   00D1               BNE      .+4
   \   00000048   D5E1               B        ??MenuPaint_10
   \   0000004A   491E               SUBS     R1,R1,#+1
   \   0000004C   00D1               BNE      .+4
   \   0000004E   E7E1               B        ??MenuPaint_11
   \   00000050   491E               SUBS     R1,R1,#+1
   \   00000052   00D1               BNE      .+4
   \   00000054   E7E1               B        ??MenuPaint_12
   \   00000056   491E               SUBS     R1,R1,#+1
   \   00000058   00D1               BNE      .+4
   \   0000005A   E8E1               B        ??MenuPaint_13
   \   0000005C   2439               SUBS     R1,R1,#+36
   \   0000005E   00D1               BNE      .+4
   \   00000060   D9E0               B        ??MenuPaint_14
   \   00000062   3C39               SUBS     R1,R1,#+60
   \   00000064   00D1               BNE      .+4
   \   00000066   ECE0               B        ??MenuPaint_15
   \   00000068   491E               SUBS     R1,R1,#+1
   \   0000006A   00D1               BNE      .+4
   \   0000006C   0FE1               B        ??MenuPaint_16
   \   0000006E   491E               SUBS     R1,R1,#+1
   \   00000070   00D1               BNE      .+4
   \   00000072   63E1               B        ??MenuPaint_17
   \   00000074   491E               SUBS     R1,R1,#+1
   \   00000076   00D1               BNE      .+4
   \   00000078   71E1               B        ??MenuPaint_18
   \   0000007A   491E               SUBS     R1,R1,#+1
   \   0000007C   00D1               BNE      .+4
   \   0000007E   89E1               B        ??MenuPaint_19
   \   00000080   491E               SUBS     R1,R1,#+1
   \   00000082   00D1               BNE      .+4
   \   00000084   99E1               B        ??MenuPaint_20
   \   00000086   491E               SUBS     R1,R1,#+1
   \   00000088   00D1               BNE      .+4
   \   0000008A   99E1               B        ??MenuPaint_21
   \   0000008C   C91E               SUBS     R1,R1,#+3
   \   0000008E   00D1               BNE      .+4
   \   00000090   DAE0               B        ??MenuPaint_22
   \   00000092   491E               SUBS     R1,R1,#+1
   \   00000094   00D1               BNE      .+4
   \   00000096   B8E1               B        ??MenuPaint_23
   \   00000098   984A               LDR      R2,??MenuPaint_0+0x8  ;; 0x3dd
   \   0000009A   891A               SUBS     R1,R1,R2
   \   0000009C   00D1               BNE      .+4
   \   0000009E   D3E0               B        ??MenuPaint_22
   \   000000A0   491E               SUBS     R1,R1,#+1
   \   000000A2   00D1               BNE      .+4
   \   000000A4   DEE0               B        ??MenuPaint_24
   \   000000A6   491E               SUBS     R1,R1,#+1
   \   000000A8   00D1               BNE      .+4
   \   000000AA   EAE0               B        ??MenuPaint_25
   \   000000AC   0839               SUBS     R1,R1,#+8
   \   000000AE   00D1               BNE      .+4
   \   000000B0   CAE0               B        ??MenuPaint_22
   \   000000B2   491E               SUBS     R1,R1,#+1
   \   000000B4   00D1               BNE      .+4
   \   000000B6   F4E0               B        ??MenuPaint_26
   \   000000B8   491E               SUBS     R1,R1,#+1
   \   000000BA   00D1               BNE      .+4
   \   000000BC   20E1               B        ??MenuPaint_27
   \   000000BE   491E               SUBS     R1,R1,#+1
   \   000000C0   00D1               BNE      .+4
   \   000000C2   27E1               B        ??MenuPaint_28
   \   000000C4   491E               SUBS     R1,R1,#+1
   \   000000C6   00D1               BNE      .+4
   \   000000C8   2EE1               B        ??MenuPaint_29
   \   000000CA   C91F               SUBS     R1,R1,#+7
   \   000000CC   00D1               BNE      .+4
   \   000000CE   38E1               B        ??MenuPaint_30
   \   000000D0   0A39               SUBS     R1,R1,#+10
   \   000000D2   00D1               BNE      .+4
   \   000000D4   46E1               B        ??MenuPaint_31
   \   000000D6   491E               SUBS     R1,R1,#+1
   \   000000D8   00D1               BNE      .+4
   \   000000DA   46E1               B        ??MenuPaint_32
   \   000000DC   491E               SUBS     R1,R1,#+1
   \   000000DE   00D1               BNE      .+4
   \   000000E0   46E1               B        ??MenuPaint_33
   \   000000E2   491E               SUBS     R1,R1,#+1
   \   000000E4   00D1               BNE      .+4
   \   000000E6   90E0               B        ??MenuPaint_6
   \   000000E8   491E               SUBS     R1,R1,#+1
   \   000000EA   00D1               BNE      .+4
   \   000000EC   49E1               B        ??MenuPaint_34
   \   000000EE   891E               SUBS     R1,R1,#+2
   \   000000F0   00D1               BNE      .+4
   \   000000F2   49E1               B        ??MenuPaint_35
   \   000000F4   491E               SUBS     R1,R1,#+1
   \   000000F6   00D1               BNE      .+4
   \   000000F8   49E1               B        ??MenuPaint_36
   \   000000FA   891E               SUBS     R1,R1,#+2
   \   000000FC   00D1               BNE      .+4
   \   000000FE   A3E0               B        ??MenuPaint_22
   \   00000100   491E               SUBS     R1,R1,#+1
   \   00000102   00D1               BNE      .+4
   \   00000104   49E1               B        ??MenuPaint_37
   \   00000106   491E               SUBS     R1,R1,#+1
   \   00000108   00D1               BNE      .+4
   \   0000010A   DEE0               B        ??MenuPaint_38
   \   0000010C   491E               SUBS     R1,R1,#+1
   \   0000010E   00D1               BNE      .+4
   \   00000110   47E1               B        ??MenuPaint_39
   \   00000112   1239               SUBS     R1,R1,#+18
   \   00000114   00D1               BNE      .+4
   \   00000116   56E1               B        ??MenuPaint_40
   \   00000118   491E               SUBS     R1,R1,#+1
   \   0000011A   00D1               BNE      .+4
   \   0000011C   62E1               B        ??MenuPaint_41
   \   0000011E   491E               SUBS     R1,R1,#+1
   \   00000120   00D1               BNE      .+4
   \   00000122   62E1               B        ??MenuPaint_42
   \   00000124   491E               SUBS     R1,R1,#+1
   \   00000126   00D1               BNE      .+4
   \   00000128   62E1               B        ??MenuPaint_43
   \   0000012A   C44A               LDR      R2,??MenuPaint_44  ;; 0x26d1
   \   0000012C   891A               SUBS     R1,R1,R2
   \   0000012E   00D1               BNE      .+4
   \   00000130   9BE0               B        ??MenuPaint_45
   \   00000132   0B39               SUBS     R1,R1,#+11
   \   00000134   00D1               BNE      .+4
   \   00000136   A7E0               B        ??MenuPaint_46
   \   00000138   5939               SUBS     R1,R1,#+89
   \   0000013A   00D1               BNE      .+4
   \   0000013C   BBE0               B        ??MenuPaint_47
   \   0000013E   491E               SUBS     R1,R1,#+1
   \   00000140   00D1               BNE      .+4
   \   00000142   C2E0               B        ??MenuPaint_38
   \   00000144   491E               SUBS     R1,R1,#+1
   \   00000146   00D1               BNE      .+4
   \   00000148   C4E0               B        ??MenuPaint_48
   \   0000014A   491E               SUBS     R1,R1,#+1
   \   0000014C   00D1               BNE      .+4
   \   0000014E   C5E0               B        ??MenuPaint_49
   \   00000150   491E               SUBS     R1,R1,#+1
   \   00000152   00D1               BNE      .+4
   \   00000154   CAE0               B        ??MenuPaint_50
   \   00000156   0939               SUBS     R1,R1,#+9
   \   00000158   00D1               BNE      .+4
   \   0000015A   BFE0               B        ??MenuPaint_49
   \   0000015C   CF39               SUBS     R1,R1,#+207
   \   0000015E   0129               CMP      R1,#+1
   \   00000160   00D8               BHI      .+4
   \   00000162   08E1               B        ??MenuPaint_51
   \   00000164   6439               SUBS     R1,R1,#+100
   \   00000166   00D1               BNE      .+4
   \   00000168   17E1               B        ??MenuPaint_37
   \   0000016A   C91E               SUBS     R1,R1,#+3
   \   0000016C   00D1               BNE      .+4
   \   0000016E   1CE1               B        ??MenuPaint_52
   \   00000170   491E               SUBS     R1,R1,#+1
   \   00000172   00D1               BNE      .+4
   \   00000174   1DE1               B        ??MenuPaint_53
   \   00000176   B039               SUBS     R1,R1,#+176
   \   00000178   00D1               BNE      .+4
   \   0000017A   27E1               B        ??MenuPaint_54
   \   0000017C   491E               SUBS     R1,R1,#+1
   \   0000017E   00D1               BNE      .+4
   \   00000180   2AE1               B        ??MenuPaint_55
   \   00000182   0939               SUBS     R1,R1,#+9
   \   00000184   00D1               BNE      .+4
   \   00000186   A0E0               B        ??MenuPaint_38
   \   00000188   ....               LDR      R2,??DataTable0  ;; 0x1843e
   \   0000018A   891A               SUBS     R1,R1,R2
   \   0000018C   71D0               BEQ      ??MenuPaint_56
   \   0000018E   FA22               MOVS     R2,#+250
   \   00000190   9200               LSLS     R2,R2,#+2        ;; #+1000
   \   00000192   891A               SUBS     R1,R1,R2
   \   00000194   00D1               BNE      .+4
   \   00000196   98E0               B        ??MenuPaint_38
   \   00000198   491E               SUBS     R1,R1,#+1
   \   0000019A   00D1               BNE      .+4
   \   0000019C   9AE0               B        ??MenuPaint_48
   \   0000019E   1339               SUBS     R1,R1,#+19
   \   000001A0   00D1               BNE      .+4
   \   000001A2   92E0               B        ??MenuPaint_38
   \   000001A4   0A39               SUBS     R1,R1,#+10
   \   000001A6   00D1               BNE      .+4
   \   000001A8   8FE0               B        ??MenuPaint_38
   \   000001AA   491E               SUBS     R1,R1,#+1
   \   000001AC   00D1               BNE      .+4
   \   000001AE   99E0               B        ??MenuPaint_57
   \   000001B0   6339               SUBS     R1,R1,#+99
   \   000001B2   00D1               BNE      .+4
   \   000001B4   89E0               B        ??MenuPaint_38
   \   000001B6   491E               SUBS     R1,R1,#+1
   \   000001B8   00D1               BNE      .+4
   \   000001BA   93E0               B        ??MenuPaint_57
   \   000001BC   ....               LDR      R2,??DataTable1  ;; 0x815
   \   000001BE   891A               SUBS     R1,R1,R2
   \   000001C0   00D1               BNE      .+4
   \   000001C2   DBE0               B        ??MenuPaint_58
   \   000001C4   0A39               SUBS     R1,R1,#+10
   \   000001C6   00D1               BNE      .+4
   \   000001C8   D8E0               B        ??MenuPaint_58
   \   000001CA   ....               LDR      R2,??DataTable2  ;; 0xae6
   \   000001CC   891A               SUBS     R1,R1,R2
   \   000001CE   7CD0               BEQ      ??MenuPaint_38
   \   000001D0   491E               SUBS     R1,R1,#+1
   \   000001D2   00D1               BNE      .+4
   \   000001D4   FDE0               B        ??MenuPaint_59
   \   000001D6   0A39               SUBS     R1,R1,#+10
   \   000001D8   00D1               BNE      .+4
   \   000001DA   00E1               B        ??MenuPaint_60
   \   000001DC   ....               LDR      R2,??DataTable3  ;; 0xf51df
   \   000001DE   891A               SUBS     R1,R1,R2
   \   000001E0   73D0               BEQ      ??MenuPaint_38
   \   000001E2   ....               LDR      R2,??DataTable4  ;; 0xc3b4
   \   000001E4   891A               SUBS     R1,R1,R2
   \   000001E6   70D0               BEQ      ??MenuPaint_38
   \   000001E8   24E1               B        ??MenuPaint_2
    179            {
    180              case 0        : StartAnimation_Paint();         break;
   \                     ??MenuPaint_3:
   \   000001EA   ........           BL       StartAnimation_Paint
   \   000001EE   21E1               B        ??MenuPaint_2
    181              case 1        : MainSide_Paint(&gProg.Screen[CurrentSheet]);         break;
   \                     ??MenuPaint_4:
   \   000001F0   ....               LDR      R1,??DataTable35  ;; 0xbb98
   \   000001F2   0079               LDRB     R0,[R0, #+4]
   \   000001F4   A022               MOVS     R2,#+160
   \   000001F6   5043               MULS     R0,R2,R0
   \   000001F8   ....               LDR      R2,??DataTable36  ;; gProg
   \   000001FA   1018               ADDS     R0,R2,R0
   \   000001FC   4018               ADDS     R0,R0,R1
   \   000001FE   ........           BL       MainSide_Paint
   \   00000202   17E1               B        ??MenuPaint_2
    182              case 3        : CheckChannel();         break;
   \                     ??MenuPaint_5:
   \   00000204   ........           BL       CheckChannel
   \   00000208   14E1               B        ??MenuPaint_2
    183              case 4        : SetTouchScreen_Paint();  break;
   \                     ??MenuPaint_6:
   \   0000020A   ........           BL       SetTouchScreen_Paint
   \   0000020E   11E1               B        ??MenuPaint_2
    184              case 5        : AdvanceSet_Paint();  break;
   \                     ??MenuPaint_7:
   \   00000210   ........           BL       AdvanceSet_Paint
   \   00000214   0EE1               B        ??MenuPaint_2
    185                case 51     : Ask_Paint(Speech[g_leng].Czysc_pamiec,Speech[g_leng].Potwierdz,"");  break;
   \                     ??MenuPaint_14:
   \   00000216   ....               LDR      R0,??DataTable29  ;; g_leng
   \   00000218   0068               LDR      R0,[R0, #+0]
   \   0000021A   ....               LDR      R1,??DataTable30  ;; 0xa14
   \   0000021C   4843               MULS     R0,R1,R0
   \   0000021E   ....               LDR      R1,??DataTable31  ;; Speech
   \   00000220   0818               ADDS     R0,R1,R0
   \   00000222   87A2               ADR      R2,??MenuPaint_44+0x4  ;; 0x00, 0x00, 0x00, 0x00
   \   00000224   FF21               MOVS     R1,#+255
   \   00000226   F031               ADDS     R1,R1,#+240      ;; #+495
   \   00000228   4118               ADDS     R1,R0,R1
   \   0000022A   ....               LDR      R3,??DataTable10  ;; 0x771
   \   0000022C   C018               ADDS     R0,R0,R3
   \   0000022E   ........           BL       Ask_Paint
   \   00000232   FFE0               B        ??MenuPaint_2
    186                
    187                case 10     : MenuAccessPass_Paint(1);  break; 
   \                     ??MenuPaint_8:
   \   00000234   0120               MOVS     R0,#+1
   \   00000236   ........           BL       MenuAccessPass_Paint
   \   0000023A   FBE0               B        ??MenuPaint_2
    188                case 11     : MenuSide_Paint();         break; 
   \                     ??MenuPaint_9:
   \   0000023C   ........           BL       MenuSide_Paint
   \   00000240   F8E0               B        ??MenuPaint_2
    189                      case 111   : Lader_Paint();        break;
   \                     ??MenuPaint_15:
   \   00000242   ........           BL       Lader_Paint
   \   00000246   F5E0               B        ??MenuPaint_2
    190                          case 1110 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
   \                     ??MenuPaint_22:
   \   00000248   ....               LDR      R0,??DataTable29  ;; g_leng
   \   0000024A   0068               LDR      R0,[R0, #+0]
   \   0000024C   ....               LDR      R1,??DataTable30  ;; 0xa14
   \   0000024E   4843               MULS     R0,R1,R0
   \   00000250   ....               LDR      R1,??DataTable31  ;; Speech
   \   00000252   0818               ADDS     R0,R1,R0
   \   00000254   7B49               LDR      R1,??MenuPaint_44+0x8  ;; 0x456
   \   00000256   4218               ADDS     R2,R0,R1
   \   00000258   0F39               SUBS     R1,R1,#+15
   \   0000025A   4118               ADDS     R1,R0,R1
   \   0000025C   ....               LDR      R0,??DataTable15  ;; `?<Constant "Info ">`
   \   0000025E   ........           BL       Ask_Paint
   \   00000262   E7E0               B        ??MenuPaint_2
    191                          case 1111: Procedure_Paint();  break;
   \                     ??MenuPaint_24:
   \   00000264   ........           BL       Procedure_Paint
   \   00000268   E4E0               B        ??MenuPaint_2
    192                            case 11111: ValueChange_Paint(ValueChange);  break;
   \                     ??MenuPaint_45:
   \   0000026A   806D               LDR      R0,[R0, #+88]
   \   0000026C   ........           BL       ValueChange_Paint
   \   00000270   E0E0               B        ??MenuPaint_2
    193                            case 111111 : Message("Max=", "+/- 3000 ",11111);  break;
   \                     ??MenuPaint_56:
   \   00000272   ....               LDR      R0,??DataTable15  ;; `?<Constant "Info ">`
   \   00000274   ....               LDR      R2,??DataTable16  ;; 0x2b67
   \   00000276   0100               MOVS     R1,R0
   \   00000278   1031               ADDS     R1,R1,#+16
   \   0000027A   0830               ADDS     R0,R0,#+8
   \   0000027C   ........           BL       Message
   \   00000280   D8E0               B        ??MenuPaint_2
    194                          case 1112: LaderChange_Paint();  break;
   \                     ??MenuPaint_25:
   \   00000282   ........           BL       LaderChange_Paint
   \   00000286   D5E0               B        ??MenuPaint_2
    195                            case 11122: RemRow_Paint();  break;         
   \                     ??MenuPaint_46:
   \   00000288   ........           BL       RemRow_Paint
   \   0000028C   D2E0               B        ??MenuPaint_2
    196                      case 112  : ScreenSet_Paint(&gProg.Screen[CurModifSheet]);        break;   
   \                     ??MenuPaint_16:
   \   0000028E   ....               LDR      R1,??DataTable35  ;; 0xbb98
   \   00000290   4079               LDRB     R0,[R0, #+5]
   \   00000292   A022               MOVS     R2,#+160
   \   00000294   5043               MULS     R0,R2,R0
   \   00000296   ....               LDR      R2,??DataTable36  ;; gProg
   \   00000298   1018               ADDS     R0,R2,R0
   \   0000029A   4018               ADDS     R0,R0,R1
   \   0000029C   ........           BL       ScreenSet_Paint
   \   000002A0   C8E0               B        ??MenuPaint_2
    197                          case 1120 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
    198                          case 1121  : ScreenDesign1_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_26:
   \   000002A2   ....               LDR      R1,??DataTable35  ;; 0xbb98
   \   000002A4   4079               LDRB     R0,[R0, #+5]
   \   000002A6   A022               MOVS     R2,#+160
   \   000002A8   5043               MULS     R0,R2,R0
   \   000002AA   ....               LDR      R2,??DataTable36  ;; gProg
   \   000002AC   1018               ADDS     R0,R2,R0
   \   000002AE   4018               ADDS     R0,R0,R1
   \   000002B0   ........           BL       ScreenDesign1_Paint
   \   000002B4   BEE0               B        ??MenuPaint_2
    199                              case 11211  : ZoneGraph_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_47:
   \   000002B6   ....               LDR      R1,??DataTable35  ;; 0xbb98
   \   000002B8   4079               LDRB     R0,[R0, #+5]
   \   000002BA   A022               MOVS     R2,#+160
   \   000002BC   5043               MULS     R0,R2,R0
   \   000002BE   ....               LDR      R2,??DataTable36  ;; gProg
   \   000002C0   1018               ADDS     R0,R2,R0
   \   000002C2   4018               ADDS     R0,R0,R1
   \   000002C4   ........           BL       ZoneGraph_Paint
   \   000002C8   B4E0               B        ??MenuPaint_2
    200                                  case 112111  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
   \                     ??MenuPaint_38:
   \   000002CA   0100               MOVS     R1,R0
   \   000002CC   006D               LDR      R0,[R0, #+80]
   \   000002CE   ........           BL       TextChange_Paint
   \   000002D2   AFE0               B        ??MenuPaint_2
    201                                  case 112112  :  AnalogGraph_Paint(AnalogToChange);break;
   \                     ??MenuPaint_48:
   \   000002D4   006E               LDR      R0,[R0, #+96]
   \   000002D6   ........           BL       AnalogGraph_Paint
   \   000002DA   ABE0               B        ??MenuPaint_2
    202                                    case 1121121  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    203                              case 11212  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    204                              case 11213  :  AnalogGraph_Paint(AnalogToChange);break;
    205                                case 112131  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    206                              case 11214  :  ButtonOptions_Paint(ButtonToChange); break;
   \                     ??MenuPaint_49:
   \   000002DC   406D               LDR      R0,[R0, #+84]
   \   000002DE   ........           BL       ButtonOptions_Paint
   \   000002E2   A7E0               B        ??MenuPaint_2
    207                                case 112141  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    208                                case 112142  :  ButtonAction_Paint(ButtonToChange); break;
   \                     ??MenuPaint_57:
   \   000002E4   406D               LDR      R0,[R0, #+84]
   \   000002E6   ........           BL       ButtonAction_Paint
   \   000002EA   A3E0               B        ??MenuPaint_2
    209                              case 11215  :  BigTemperLabel_Paint(); break;
   \                     ??MenuPaint_50:
   \   000002EC   ........           BL       BigTemperLabel_Paint
   \   000002F0   A0E0               B        ??MenuPaint_2
   \   000002F2   C046               Nop      
   \                     ??MenuPaint_0:
   \   000002F4   ........           DC32     TextToChangeLength
   \   000002F8   ........           DC32     g_Message
   \   000002FC   DD030000           DC32     0x3dd
    210                          case 1122  :  ThermostatSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_27:
   \   00000300   ....               LDR      R1,??DataTable35  ;; 0xbb98
   \   00000302   4079               LDRB     R0,[R0, #+5]
   \   00000304   A022               MOVS     R2,#+160
   \   00000306   5043               MULS     R0,R2,R0
   \   00000308   ....               LDR      R2,??DataTable36  ;; gProg
   \   0000030A   1018               ADDS     R0,R2,R0
   \   0000030C   4018               ADDS     R0,R0,R1
   \   0000030E   ........           BL       ThermostatSet_Paint
   \   00000312   8FE0               B        ??MenuPaint_2
    211                                case 11224   :  ButtonOptions_Paint(ButtonToChange); break;
    212                                case 112241  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    213                                case 112242  :  ButtonAction_Paint(ButtonToChange); break;
    214                          case 1123  :  ScreenTimetableSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_28:
   \   00000314   ....               LDR      R1,??DataTable35  ;; 0xbb98
   \   00000316   4079               LDRB     R0,[R0, #+5]
   \   00000318   A022               MOVS     R2,#+160
   \   0000031A   5043               MULS     R0,R2,R0
   \   0000031C   ....               LDR      R2,??DataTable36  ;; gProg
   \   0000031E   1018               ADDS     R0,R2,R0
   \   00000320   4018               ADDS     R0,R0,R1
   \   00000322   ........           BL       ScreenTimetableSet_Paint
   \   00000326   85E0               B        ??MenuPaint_2
    215                          case 1124  :  ScreenAlarmSet_Paint(&gProg.Screen[CurModifSheet]); break;
   \                     ??MenuPaint_29:
   \   00000328   ....               LDR      R1,??DataTable35  ;; 0xbb98
   \   0000032A   4079               LDRB     R0,[R0, #+5]
   \   0000032C   A022               MOVS     R2,#+160
   \   0000032E   5043               MULS     R0,R2,R0
   \   00000330   ....               LDR      R2,??DataTable36  ;; gProg
   \   00000332   1018               ADDS     R0,R2,R0
   \   00000334   4018               ADDS     R0,R0,R1
   \   00000336   ........           BL       ScreenAlarmSet_Paint
   \   0000033A   7BE0               B        ??MenuPaint_2
    216                      case 113   : Options_Paint();          break;  
   \                     ??MenuPaint_17:
   \   0000033C   ........           BL       Options_Paint
   \   00000340   78E0               B        ??MenuPaint_2
    217                          case 1131 : Ask_Paint("Restart",Speech[g_leng].Potwierdz,"");  break;
   \                     ??MenuPaint_30:
   \   00000342   3FA2               ADR      R2,??MenuPaint_44+0x4  ;; 0x00, 0x00, 0x00, 0x00
   \   00000344   FF20               MOVS     R0,#+255
   \   00000346   F030               ADDS     R0,R0,#+240      ;; #+495
   \   00000348   ....               LDR      R1,??DataTable29  ;; g_leng
   \   0000034A   0968               LDR      R1,[R1, #+0]
   \   0000034C   ....               LDR      R3,??DataTable30  ;; 0xa14
   \   0000034E   5943               MULS     R1,R3,R1
   \   00000350   ....               LDR      R3,??DataTable31  ;; Speech
   \   00000352   5918               ADDS     R1,R3,R1
   \   00000354   0918               ADDS     R1,R1,R0
   \   00000356   ....               LDR      R0,??DataTable32  ;; `?<Constant "Info ">` + 28
   \   00000358   ........           BL       Ask_Paint
   \   0000035C   6AE0               B        ??MenuPaint_2
    218                      case 114   : Setup_Paint();            break;
   \                     ??MenuPaint_18:
   \   0000035E   ........           BL       Setup_Paint
   \   00000362   67E0               B        ??MenuPaint_2
    219                          case 1141 : SetupLang_Paint();         break;
   \                     ??MenuPaint_31:
   \   00000364   ........           BL       SetupLang_Paint
   \   00000368   64E0               B        ??MenuPaint_2
    220                          case 1142 : SetupTime_Paint();        break;  
   \                     ??MenuPaint_32:
   \   0000036A   ........           BL       SetupTime_Paint
   \   0000036E   61E0               B        ??MenuPaint_2
    221                          case 1143 : SetupPass_Paint();         break;
   \                     ??MenuPaint_33:
   \   00000370   ........           BL       SetupPass_Paint
   \   00000374   5EE0               B        ??MenuPaint_2
    222                              case 11431 : SetupOldPass_Paint();         break;
   \                     ??MenuPaint_51:
   \   00000376   ........           BL       SetupOldPass_Paint
   \   0000037A   5BE0               B        ??MenuPaint_2
    223                                  case 114311 : SetupNewPass_Paint();         break;
   \                     ??MenuPaint_58:
   \   0000037C   ........           BL       SetupNewPass_Paint
   \   00000380   58E0               B        ??MenuPaint_2
    224                              case 11432 : SetupOldPass_Paint();         break;
    225                                  case 114321 : SetupNewPass_Paint();         break;     
    226                         case 1144 : SetTouchScreen_Paint();  break;
    227                         case 1145 : ScreenSever_Paint();  break;
   \                     ??MenuPaint_34:
   \   00000382   ........           BL       ScreenSever_Paint
   \   00000386   55E0               B        ??MenuPaint_2
    228                         case 1147 : MasterSlave_Paint();  break;
   \                     ??MenuPaint_35:
   \   00000388   ........           BL       MasterSlave_Paint
   \   0000038C   52E0               B        ??MenuPaint_2
    229                         case 1148 : RF_Channel_Paint();  break;
   \                     ??MenuPaint_36:
   \   0000038E   ........           BL       RF_Channel_Paint
   \   00000392   4FE0               B        ??MenuPaint_2
    230                      case 115  : NeuronsList_Paint();    break;
   \                     ??MenuPaint_19:
   \   00000394   ........           BL       NeuronsList_Paint
   \   00000398   4CE0               B        ??MenuPaint_2
    231                         case 1150 : Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
    232                         case 1151 : NeuronNrChange_Paint(NeuronIdChange);  break;
   \                     ??MenuPaint_37:
   \   0000039A   C06D               LDR      R0,[R0, #+92]
   \   0000039C   ........           BL       NeuronNrChange_Paint
   \   000003A0   48E0               B        ??MenuPaint_2
    233                         case 1152 :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    234                         case 1153 :  Node_Paint(NeuronNrChange); break;
   \                     ??MenuPaint_39:
   \   000003A2   C078               LDRB     R0,[R0, #+3]
   \   000003A4   ........           BL       Node_Paint
   \   000003A8   44E0               B        ??MenuPaint_2
    235                            case 11531 : NeuronNrChange_Paint(NeuronIdChange);  break;
    236                            case 11534 : NodeTestTrans_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_52:
   \   000003AA   C078               LDRB     R0,[R0, #+3]
   \   000003AC   ........           BL       NodeTestTrans_Paint
   \   000003B0   40E0               B        ??MenuPaint_2
    237                            case 11535 : NodeStanIO_Paint(NeuronNrChange);  break;
   \                     ??MenuPaint_53:
   \   000003B2   C078               LDRB     R0,[R0, #+3]
   \   000003B4   ........           BL       NodeStanIO_Paint
   \   000003B8   3CE0               B        ??MenuPaint_2
    238                      case 116  : Info_Paint();    break;
   \                     ??MenuPaint_20:
   \   000003BA   ........           BL       Info_Paint
   \   000003BE   39E0               B        ??MenuPaint_2
    239                      case 117  : Net_Paint();     break;
   \                     ??MenuPaint_21:
   \   000003C0   ........           BL       Net_Paint
   \   000003C4   36E0               B        ??MenuPaint_2
    240                         case 1171  : UstawSiec_Paint();     break;
   \                     ??MenuPaint_40:
   \   000003C6   ........           BL       UstawSiec_Paint
   \   000003CA   33E0               B        ??MenuPaint_2
    241                            case 11711  : Punkt_dostepuWiFi_Paint();     break;
   \                     ??MenuPaint_54:
   \   000003CC   ........           BL       Punkt_dostepuWiFi_Paint
   \   000003D0   30E0               B        ??MenuPaint_2
    242                              case 117111  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    243                              case 117112 :  WiFiConecting_Paint(); break;
   \                     ??MenuPaint_59:
   \   000003D2   ........           BL       WiFiConecting_Paint
   \   000003D6   2DE0               B        ??MenuPaint_2
    244                            case 11712  : IpTCP_Paint(); break;
   \                     ??MenuPaint_55:
   \   000003D8   ........           BL       IpTCP_Paint
   \   000003DC   2AE0               B        ??MenuPaint_2
    245                              case 117122 : IpConfig_Paint(); break;
   \                     ??MenuPaint_60:
   \   000003DE   ........           BL       IpConfig_Paint
   \   000003E2   27E0               B        ??MenuPaint_2
    246                                case 1171221  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    247                         case 1172 :  Host_WiFi_Paint(); break;
   \                     ??MenuPaint_41:
   \   000003E4   ........           BL       Host_WiFi_Paint
   \   000003E8   24E0               B        ??MenuPaint_2
    248                            case 11721  :  TextChange_Paint(TextToChange, &TextToChangeLength); break;
    249                         case 1173 : NetPeriodicity_Paint(); break;  
   \                     ??MenuPaint_42:
   \   000003EA   ........           BL       NetPeriodicity_Paint
   \   000003EE   21E0               B        ??MenuPaint_2
    250                         case 1174 : NetInfo_Paint(); break; 
   \                     ??MenuPaint_43:
   \   000003F0   ........           BL       NetInfo_Paint
   \   000003F4   1EE0               B        ??MenuPaint_2
    251                case 12     : ThermostatAutoSet_Paint(&gProg.Screen[CurrentSheet]);         break;  
   \                     ??MenuPaint_10:
   \   000003F6   ....               LDR      R1,??DataTable35  ;; 0xbb98
   \   000003F8   0079               LDRB     R0,[R0, #+4]
   \   000003FA   A022               MOVS     R2,#+160
   \   000003FC   5043               MULS     R0,R2,R0
   \   000003FE   ....               LDR      R2,??DataTable36  ;; gProg
   \   00000400   1018               ADDS     R0,R2,R0
   \   00000402   4018               ADDS     R0,R0,R1
   \   00000404   ........           BL       ThermostatAutoSet_Paint
   \   00000408   14E0               B        ??MenuPaint_2
    252                      case 120 :   Ask_Paint("Info ",Speech[g_leng].Zapisz,Speech[g_leng].Zmiany);  break;
    253                      case 121     : ThermostatChartSet_Paint(&gProg.Screen[CurrentSheet], CurentChartModyfi);         break;  
   \                     ??MenuPaint_23:
   \   0000040A   8178               LDRB     R1,[R0, #+2]
   \   0000040C   ....               LDR      R2,??DataTable35  ;; 0xbb98
   \   0000040E   0079               LDRB     R0,[R0, #+4]
   \   00000410   A023               MOVS     R3,#+160
   \   00000412   5843               MULS     R0,R3,R0
   \   00000414   ....               LDR      R3,??DataTable36  ;; gProg
   \   00000416   1818               ADDS     R0,R3,R0
   \   00000418   8018               ADDS     R0,R0,R2
   \   0000041A   ........           BL       ThermostatChartSet_Paint
   \   0000041E   09E0               B        ??MenuPaint_2
    254                case 13     : TimetableSet_Paint();         break;   
   \                     ??MenuPaint_11:
   \   00000420   ........           BL       TimetableSet_Paint
   \   00000424   06E0               B        ??MenuPaint_2
    255                case 14     : AlarmPass_Paint(CurrentSheet);         break;   
   \                     ??MenuPaint_12:
   \   00000426   0079               LDRB     R0,[R0, #+4]
   \   00000428   ........           BL       AlarmPass_Paint
   \   0000042C   02E0               B        ??MenuPaint_2
    256                case 15     : AlarmPassChange_Paint(CurrentSheet);         break;  
   \                     ??MenuPaint_13:
   \   0000042E   0079               LDRB     R0,[R0, #+4]
   \   00000430   ........           BL       AlarmPassChange_Paint
    257          
    258                             
    259            }
    260             
    261          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \                     ??MenuPaint_2:
   \   00000434   08BC               POP      {R3}
   \   00000436   01BC               POP      {R0}
   \   00000438   0047               BX       R0               ;; return
   \   0000043A   C046               Nop      
   \                     ??MenuPaint_44:
   \   0000043C   D1260000           DC32     0x26d1
   \   00000440   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000444   56040000           DC32     0x456
    262          
    263          
    264          
    265          
    266          
    267          //*-----------------------------------------------------------------------------
    268          //* Nazwa funkcji :    ScreenEvent
    269          //* Funkcja obs³ugi zdarzenia menu ekranowego
    270          //*-----------------------------------------------------------------------------
    271          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    272          //*-----------------------------------------------------------------------------
    273          
    274          

   \                                 In section Debug.txt, align 4, keep-with-next
    275          void ScreenEvent(void)
    276          {
   \                     ScreenEvent:
   \   00000000   01B5               PUSH     {R0,LR}
    277            
    278          
    279            
    280            if (g_Message==0)
   \   00000002   BA48               LDR      R0,??ScreenEvent_0  ;; g_Message
   \   00000004   0168               LDR      R1,[R0, #+0]
   \   00000006   0029               CMP      R1,#+0
   \   00000008   00D0               BEQ      .+4
   \   0000000A   E5E1               B        ??ScreenEvent_1
    281            {
    282            switch (MenuLevel)
   \   0000000C   B848               LDR      R0,??ScreenEvent_0+0x4  ;; TextToChangeLength
   \   0000000E   816C               LDR      R1,[R0, #+72]
   \   00000010   0029               CMP      R1,#+0
   \   00000012   00D1               BNE      .+4
   \   00000014   D7E0               B        ??ScreenEvent_2
   \   00000016   491E               SUBS     R1,R1,#+1
   \   00000018   00D1               BNE      .+4
   \   0000001A   D7E0               B        ??ScreenEvent_3
   \   0000001C   C91E               SUBS     R1,R1,#+3
   \   0000001E   00D1               BNE      .+4
   \   00000020   DEE0               B        ??ScreenEvent_4
   \   00000022   491E               SUBS     R1,R1,#+1
   \   00000024   00D1               BNE      .+4
   \   00000026   DEE0               B        ??ScreenEvent_5
   \   00000028   491F               SUBS     R1,R1,#+5
   \   0000002A   00D1               BNE      .+4
   \   0000002C   E1E0               B        ??ScreenEvent_6
   \   0000002E   491E               SUBS     R1,R1,#+1
   \   00000030   00D1               BNE      .+4
   \   00000032   E2E0               B        ??ScreenEvent_7
   \   00000034   491E               SUBS     R1,R1,#+1
   \   00000036   00D1               BNE      .+4
   \   00000038   AEE1               B        ??ScreenEvent_8
   \   0000003A   491E               SUBS     R1,R1,#+1
   \   0000003C   00D1               BNE      .+4
   \   0000003E   C0E1               B        ??ScreenEvent_9
   \   00000040   491E               SUBS     R1,R1,#+1
   \   00000042   00D1               BNE      .+4
   \   00000044   C0E1               B        ??ScreenEvent_10
   \   00000046   491E               SUBS     R1,R1,#+1
   \   00000048   00D1               BNE      .+4
   \   0000004A   C1E1               B        ??ScreenEvent_11
   \   0000004C   2439               SUBS     R1,R1,#+36
   \   0000004E   00D1               BNE      .+4
   \   00000050   CCE0               B        ??ScreenEvent_12
   \   00000052   3C39               SUBS     R1,R1,#+60
   \   00000054   00D1               BNE      .+4
   \   00000056   D3E0               B        ??ScreenEvent_13
   \   00000058   491E               SUBS     R1,R1,#+1
   \   0000005A   00D1               BNE      .+4
   \   0000005C   EBE0               B        ??ScreenEvent_14
   \   0000005E   491E               SUBS     R1,R1,#+1
   \   00000060   00D1               BNE      .+4
   \   00000062   3AE1               B        ??ScreenEvent_15
   \   00000064   491E               SUBS     R1,R1,#+1
   \   00000066   00D1               BNE      .+4
   \   00000068   3DE1               B        ??ScreenEvent_16
   \   0000006A   491E               SUBS     R1,R1,#+1
   \   0000006C   00D1               BNE      .+4
   \   0000006E   65E1               B        ??ScreenEvent_17
   \   00000070   491E               SUBS     R1,R1,#+1
   \   00000072   00D1               BNE      .+4
   \   00000074   75E1               B        ??ScreenEvent_18
   \   00000076   491E               SUBS     R1,R1,#+1
   \   00000078   00D1               BNE      .+4
   \   0000007A   75E1               B        ??ScreenEvent_19
   \   0000007C   C91E               SUBS     R1,R1,#+3
   \   0000007E   00D1               BNE      .+4
   \   00000080   C1E0               B        ??ScreenEvent_20
   \   00000082   491E               SUBS     R1,R1,#+1
   \   00000084   00D1               BNE      .+4
   \   00000086   91E1               B        ??ScreenEvent_21
   \   00000088   9A4A               LDR      R2,??ScreenEvent_0+0x8  ;; 0x3dd
   \   0000008A   891A               SUBS     R1,R1,R2
   \   0000008C   00D1               BNE      .+4
   \   0000008E   BAE0               B        ??ScreenEvent_20
   \   00000090   491E               SUBS     R1,R1,#+1
   \   00000092   00D1               BNE      .+4
   \   00000094   BAE0               B        ??ScreenEvent_22
   \   00000096   491E               SUBS     R1,R1,#+1
   \   00000098   00D1               BNE      .+4
   \   0000009A   C6E0               B        ??ScreenEvent_23
   \   0000009C   0839               SUBS     R1,R1,#+8
   \   0000009E   00D1               BNE      .+4
   \   000000A0   B1E0               B        ??ScreenEvent_20
   \   000000A2   491E               SUBS     R1,R1,#+1
   \   000000A4   00D1               BNE      .+4
   \   000000A6   D0E0               B        ??ScreenEvent_24
   \   000000A8   491E               SUBS     R1,R1,#+1
   \   000000AA   00D1               BNE      .+4
   \   000000AC   F7E0               B        ??ScreenEvent_25
   \   000000AE   491E               SUBS     R1,R1,#+1
   \   000000B0   00D1               BNE      .+4
   \   000000B2   FEE0               B        ??ScreenEvent_26
   \   000000B4   491E               SUBS     R1,R1,#+1
   \   000000B6   00D1               BNE      .+4
   \   000000B8   05E1               B        ??ScreenEvent_27
   \   000000BA   C91F               SUBS     R1,R1,#+7
   \   000000BC   00D1               BNE      .+4
   \   000000BE   0FE1               B        ??ScreenEvent_28
   \   000000C0   0A39               SUBS     R1,R1,#+10
   \   000000C2   00D1               BNE      .+4
   \   000000C4   18E1               B        ??ScreenEvent_29
   \   000000C6   491E               SUBS     R1,R1,#+1
   \   000000C8   00D1               BNE      .+4
   \   000000CA   18E1               B        ??ScreenEvent_30
   \   000000CC   491E               SUBS     R1,R1,#+1
   \   000000CE   00D1               BNE      .+4
   \   000000D0   18E1               B        ??ScreenEvent_31
   \   000000D2   491E               SUBS     R1,R1,#+1
   \   000000D4   00D1               BNE      .+4
   \   000000D6   83E0               B        ??ScreenEvent_4
   \   000000D8   491E               SUBS     R1,R1,#+1
   \   000000DA   00D1               BNE      .+4
   \   000000DC   25E1               B        ??ScreenEvent_32
   \   000000DE   891E               SUBS     R1,R1,#+2
   \   000000E0   00D1               BNE      .+4
   \   000000E2   25E1               B        ??ScreenEvent_33
   \   000000E4   491E               SUBS     R1,R1,#+1
   \   000000E6   00D1               BNE      .+4
   \   000000E8   25E1               B        ??ScreenEvent_34
   \   000000EA   891E               SUBS     R1,R1,#+2
   \   000000EC   00D1               BNE      .+4
   \   000000EE   8AE0               B        ??ScreenEvent_20
   \   000000F0   491E               SUBS     R1,R1,#+1
   \   000000F2   00D1               BNE      .+4
   \   000000F4   25E1               B        ??ScreenEvent_35
   \   000000F6   491E               SUBS     R1,R1,#+1
   \   000000F8   00D1               BNE      .+4
   \   000000FA   BAE0               B        ??ScreenEvent_36
   \   000000FC   491E               SUBS     R1,R1,#+1
   \   000000FE   00D1               BNE      .+4
   \   00000100   23E1               B        ??ScreenEvent_37
   \   00000102   1239               SUBS     R1,R1,#+18
   \   00000104   00D1               BNE      .+4
   \   00000106   32E1               B        ??ScreenEvent_38
   \   00000108   491E               SUBS     R1,R1,#+1
   \   0000010A   00D1               BNE      .+4
   \   0000010C   3BE1               B        ??ScreenEvent_39
   \   0000010E   491E               SUBS     R1,R1,#+1
   \   00000110   00D1               BNE      .+4
   \   00000112   3BE1               B        ??ScreenEvent_40
   \   00000114   491E               SUBS     R1,R1,#+1
   \   00000116   00D1               BNE      .+4
   \   00000118   3BE1               B        ??ScreenEvent_41
   \   0000011A   BB4A               LDR      R2,??ScreenEvent_42  ;; 0x26d1
   \   0000011C   891A               SUBS     R1,R1,R2
   \   0000011E   78D0               BEQ      ??ScreenEvent_43
   \   00000120   0B39               SUBS     R1,R1,#+11
   \   00000122   00D1               BNE      .+4
   \   00000124   84E0               B        ??ScreenEvent_44
   \   00000126   5939               SUBS     R1,R1,#+89
   \   00000128   00D1               BNE      .+4
   \   0000012A   98E0               B        ??ScreenEvent_45
   \   0000012C   491E               SUBS     R1,R1,#+1
   \   0000012E   00D1               BNE      .+4
   \   00000130   9FE0               B        ??ScreenEvent_36
   \   00000132   491E               SUBS     R1,R1,#+1
   \   00000134   00D1               BNE      .+4
   \   00000136   A3E0               B        ??ScreenEvent_46
   \   00000138   491E               SUBS     R1,R1,#+1
   \   0000013A   00D1               BNE      .+4
   \   0000013C   A4E0               B        ??ScreenEvent_47
   \   0000013E   491E               SUBS     R1,R1,#+1
   \   00000140   00D1               BNE      .+4
   \   00000142   A9E0               B        ??ScreenEvent_48
   \   00000144   0939               SUBS     R1,R1,#+9
   \   00000146   00D1               BNE      .+4
   \   00000148   9EE0               B        ??ScreenEvent_47
   \   0000014A   CF39               SUBS     R1,R1,#+207
   \   0000014C   00D1               BNE      .+4
   \   0000014E   DCE0               B        ??ScreenEvent_49
   \   00000150   491E               SUBS     R1,R1,#+1
   \   00000152   00D1               BNE      .+4
   \   00000154   E1E0               B        ??ScreenEvent_50
   \   00000156   6339               SUBS     R1,R1,#+99
   \   00000158   00D1               BNE      .+4
   \   0000015A   F2E0               B        ??ScreenEvent_35
   \   0000015C   C91E               SUBS     R1,R1,#+3
   \   0000015E   00D1               BNE      .+4
   \   00000160   F7E0               B        ??ScreenEvent_51
   \   00000162   491E               SUBS     R1,R1,#+1
   \   00000164   00D1               BNE      .+4
   \   00000166   F8E0               B        ??ScreenEvent_52
   \   00000168   B039               SUBS     R1,R1,#+176
   \   0000016A   00D1               BNE      .+4
   \   0000016C   02E1               B        ??ScreenEvent_53
   \   0000016E   491E               SUBS     R1,R1,#+1
   \   00000170   00D1               BNE      .+4
   \   00000172   02E1               B        ??ScreenEvent_54
   \   00000174   0939               SUBS     R1,R1,#+9
   \   00000176   7CD0               BEQ      ??ScreenEvent_36
   \   00000178   A44A               LDR      R2,??ScreenEvent_42+0x4  ;; 0x1843e
   \   0000017A   891A               SUBS     R1,R1,R2
   \   0000017C   4DD0               BEQ      ??ScreenEvent_55
   \   0000017E   FA22               MOVS     R2,#+250
   \   00000180   9200               LSLS     R2,R2,#+2        ;; #+1000
   \   00000182   891A               SUBS     R1,R1,R2
   \   00000184   75D0               BEQ      ??ScreenEvent_36
   \   00000186   491E               SUBS     R1,R1,#+1
   \   00000188   7AD0               BEQ      ??ScreenEvent_46
   \   0000018A   1339               SUBS     R1,R1,#+19
   \   0000018C   71D0               BEQ      ??ScreenEvent_36
   \   0000018E   0A39               SUBS     R1,R1,#+10
   \   00000190   6FD0               BEQ      ??ScreenEvent_36
   \   00000192   491E               SUBS     R1,R1,#+1
   \   00000194   7CD0               BEQ      ??ScreenEvent_56
   \   00000196   6339               SUBS     R1,R1,#+99
   \   00000198   6BD0               BEQ      ??ScreenEvent_36
   \   0000019A   491E               SUBS     R1,R1,#+1
   \   0000019C   78D0               BEQ      ??ScreenEvent_56
   \   0000019E   9C4A               LDR      R2,??ScreenEvent_42+0x8  ;; 0x815
   \   000001A0   891A               SUBS     R1,R1,R2
   \   000001A2   00D1               BNE      .+4
   \   000001A4   B5E0               B        ??ScreenEvent_57
   \   000001A6   0A39               SUBS     R1,R1,#+10
   \   000001A8   00D1               BNE      .+4
   \   000001AA   BAE0               B        ??ScreenEvent_58
   \   000001AC   994A               LDR      R2,??ScreenEvent_42+0xC  ;; 0xae6
   \   000001AE   891A               SUBS     R1,R1,R2
   \   000001B0   5FD0               BEQ      ??ScreenEvent_36
   \   000001B2   0B39               SUBS     R1,R1,#+11
   \   000001B4   00D1               BNE      .+4
   \   000001B6   E3E0               B        ??ScreenEvent_59
   \   000001B8   974A               LDR      R2,??ScreenEvent_42+0x10  ;; 0xf51df
   \   000001BA   891A               SUBS     R1,R1,R2
   \   000001BC   59D0               BEQ      ??ScreenEvent_36
   \   000001BE   974A               LDR      R2,??ScreenEvent_42+0x14  ;; 0xc3b4
   \   000001C0   891A               SUBS     R1,R1,R2
   \   000001C2   56D0               BEQ      ??ScreenEvent_36
   \   000001C4   17E1               B        ??ScreenEvent_60
    283            {
    284              case 0     : StartAnimation_Event();  break;
   \                     ??ScreenEvent_2:
   \   000001C6   ........           BL       StartAnimation_Event
   \   000001CA   14E1               B        ??ScreenEvent_60
    285              case 1     : MainSide_Event(&gProg.Screen[CurrentSheet]);              break;
   \                     ??ScreenEvent_3:
   \   000001CC   9449               LDR      R1,??ScreenEvent_42+0x18  ;; 0xbb98
   \   000001CE   0079               LDRB     R0,[R0, #+4]
   \   000001D0   A022               MOVS     R2,#+160
   \   000001D2   5043               MULS     R0,R2,R0
   \   000001D4   934A               LDR      R2,??ScreenEvent_42+0x1C  ;; gProg
   \   000001D6   1018               ADDS     R0,R2,R0
   \   000001D8   4018               ADDS     R0,R0,R1
   \   000001DA   ........           BL       MainSide_Event
   \   000001DE   0AE1               B        ??ScreenEvent_60
    286              case 4     : SetTouchScreen_Event();  break; 
   \                     ??ScreenEvent_4:
   \   000001E0   ........           BL       SetTouchScreen_Event
   \   000001E4   07E1               B        ??ScreenEvent_60
    287              case 5     : AdvanceSet_Event();  break;
   \                     ??ScreenEvent_5:
   \   000001E6   ........           BL       AdvanceSet_Event
   \   000001EA   04E1               B        ??ScreenEvent_60
    288              case 51    : CleanAll_Event();          break; 
   \                     ??ScreenEvent_12:
   \   000001EC   ........           BL       CleanAll_Event
   \   000001F0   01E1               B        ??ScreenEvent_60
    289              case 10: MenuAccessPass_Event(1);  break;
   \                     ??ScreenEvent_6:
   \   000001F2   0120               MOVS     R0,#+1
   \   000001F4   ........           BL       MenuAccessPass_Event
   \   000001F8   FDE0               B        ??ScreenEvent_60
    290                case 11: MenuSide_Event(); break;
   \                     ??ScreenEvent_7:
   \   000001FA   ........           BL       MenuSide_Event
   \   000001FE   FAE0               B        ??ScreenEvent_60
    291                
    292                      case 111  : Lader_Event();        break;
   \                     ??ScreenEvent_13:
   \   00000200   ........           BL       Lader_Event
   \   00000204   F7E0               B        ??ScreenEvent_60
    293                            case 1110 : SaveChanges_Evant(); break;
   \                     ??ScreenEvent_20:
   \   00000206   ........           BL       SaveChanges_Evant
   \   0000020A   F4E0               B        ??ScreenEvent_60
    294                            case 1111: Procedure_Event(); break;
   \                     ??ScreenEvent_22:
   \   0000020C   ........           BL       Procedure_Event
   \   00000210   F1E0               B        ??ScreenEvent_60
    295                              case 11111: ValueChange_Evant(ValueChange);  break;
   \                     ??ScreenEvent_43:
   \   00000212   806D               LDR      R0,[R0, #+88]
   \   00000214   ........           BL       ValueChange_Evant
   \   00000218   EDE0               B        ??ScreenEvent_60
    296                                case 111111 : Message("Max=", "+/- 3000 ",11111);  break;
   \                     ??ScreenEvent_55:
   \   0000021A   8348               LDR      R0,??ScreenEvent_42+0x20  ;; `?<Constant "Info ">`
   \   0000021C   834A               LDR      R2,??ScreenEvent_42+0x24  ;; 0x2b67
   \   0000021E   0100               MOVS     R1,R0
   \   00000220   1031               ADDS     R1,R1,#+16
   \   00000222   0830               ADDS     R0,R0,#+8
   \   00000224   ........           BL       Message
   \   00000228   E5E0               B        ??ScreenEvent_60
    297                            case 1112: LaderChange_Event();  break;
   \                     ??ScreenEvent_23:
   \   0000022A   ........           BL       LaderChange_Event
   \   0000022E   E2E0               B        ??ScreenEvent_60
    298                              case 11122: RemRow_Event();  break;
   \                     ??ScreenEvent_44:
   \   00000230   ........           BL       RemRow_Event
   \   00000234   DFE0               B        ??ScreenEvent_60
    299                            
    300                      case 112  : ScreenSet_Event(&gProg.Screen[CurModifSheet]);        break;
   \                     ??ScreenEvent_14:
   \   00000236   7A49               LDR      R1,??ScreenEvent_42+0x18  ;; 0xbb98
   \   00000238   4079               LDRB     R0,[R0, #+5]
   \   0000023A   A022               MOVS     R2,#+160
   \   0000023C   5043               MULS     R0,R2,R0
   \   0000023E   794A               LDR      R2,??ScreenEvent_42+0x1C  ;; gProg
   \   00000240   1018               ADDS     R0,R2,R0
   \   00000242   4018               ADDS     R0,R0,R1
   \   00000244   ........           BL       ScreenSet_Event
   \   00000248   D5E0               B        ??ScreenEvent_60
    301                            case 1120 : SaveChanges_Evant(); break;
    302                            case 1121  : ScreenDesign1_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_24:
   \   0000024A   7549               LDR      R1,??ScreenEvent_42+0x18  ;; 0xbb98
   \   0000024C   4079               LDRB     R0,[R0, #+5]
   \   0000024E   A022               MOVS     R2,#+160
   \   00000250   5043               MULS     R0,R2,R0
   \   00000252   744A               LDR      R2,??ScreenEvent_42+0x1C  ;; gProg
   \   00000254   1018               ADDS     R0,R2,R0
   \   00000256   4018               ADDS     R0,R0,R1
   \   00000258   ........           BL       ScreenDesign1_Event
   \   0000025C   CBE0               B        ??ScreenEvent_60
    303                                case 11211  : ZoneGraph_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_45:
   \   0000025E   7049               LDR      R1,??ScreenEvent_42+0x18  ;; 0xbb98
   \   00000260   4079               LDRB     R0,[R0, #+5]
   \   00000262   A022               MOVS     R2,#+160
   \   00000264   5043               MULS     R0,R2,R0
   \   00000266   6F4A               LDR      R2,??ScreenEvent_42+0x1C  ;; gProg
   \   00000268   1018               ADDS     R0,R2,R0
   \   0000026A   4018               ADDS     R0,R0,R1
   \   0000026C   ........           BL       ZoneGraph_Event
   \   00000270   C1E0               B        ??ScreenEvent_60
    304                                    case 112111  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
   \                     ??ScreenEvent_36:
   \   00000272   0200               MOVS     R2,R0
   \   00000274   521C               ADDS     R2,R2,#+1
   \   00000276   0100               MOVS     R1,R0
   \   00000278   006D               LDR      R0,[R0, #+80]
   \   0000027A   ........           BL       TextChange_Evant
   \   0000027E   BAE0               B        ??ScreenEvent_60
    305                                    case 112112  :  AnalogGraph_Event(AnalogToChange);break;
   \                     ??ScreenEvent_46:
   \   00000280   006E               LDR      R0,[R0, #+96]
   \   00000282   ........           BL       AnalogGraph_Event
   \   00000286   B6E0               B        ??ScreenEvent_60
    306                                      case 1121121  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    307                                case 11212  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    308                                case 11213  :  AnalogGraph_Event(AnalogToChange);break;
    309                                    case 112131  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    310                                case 11214   :  ButtonOptions_Event(ButtonToChange); break;
   \                     ??ScreenEvent_47:
   \   00000288   406D               LDR      R0,[R0, #+84]
   \   0000028A   ........           BL       ButtonOptions_Event
   \   0000028E   B2E0               B        ??ScreenEvent_60
    311                                case 112141  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    312                                case 112142  :  ButtonAction_Event(ButtonToChange); break;
   \                     ??ScreenEvent_56:
   \   00000290   406D               LDR      R0,[R0, #+84]
   \   00000292   ........           BL       ButtonAction_Event
   \   00000296   AEE0               B        ??ScreenEvent_60
    313                                case 11215   :  BigTemperLabel_Event(); break;
   \                     ??ScreenEvent_48:
   \   00000298   ........           BL       BigTemperLabel_Event
   \   0000029C   ABE0               B        ??ScreenEvent_60
    314                             case 1122  :  ThermostatSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_25:
   \   0000029E   6049               LDR      R1,??ScreenEvent_42+0x18  ;; 0xbb98
   \   000002A0   4079               LDRB     R0,[R0, #+5]
   \   000002A2   A022               MOVS     R2,#+160
   \   000002A4   5043               MULS     R0,R2,R0
   \   000002A6   5F4A               LDR      R2,??ScreenEvent_42+0x1C  ;; gProg
   \   000002A8   1018               ADDS     R0,R2,R0
   \   000002AA   4018               ADDS     R0,R0,R1
   \   000002AC   ........           BL       ThermostatSet_Event
   \   000002B0   A1E0               B        ??ScreenEvent_60
    315                                case 11224   :  ButtonOptions_Event(ButtonToChange); break;
    316                                case 112241  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    317                                case 112242  :  ButtonAction_Event(ButtonToChange); break;
    318                             case 1123  :  ScreenTimetableSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_26:
   \   000002B2   5B49               LDR      R1,??ScreenEvent_42+0x18  ;; 0xbb98
   \   000002B4   4079               LDRB     R0,[R0, #+5]
   \   000002B6   A022               MOVS     R2,#+160
   \   000002B8   5043               MULS     R0,R2,R0
   \   000002BA   5A4A               LDR      R2,??ScreenEvent_42+0x1C  ;; gProg
   \   000002BC   1018               ADDS     R0,R2,R0
   \   000002BE   4018               ADDS     R0,R0,R1
   \   000002C0   ........           BL       ScreenTimetableSet_Event
   \   000002C4   97E0               B        ??ScreenEvent_60
    319                             case 1124  :  ScreenAlarmSet_Event(&gProg.Screen[CurModifSheet]); break;
   \                     ??ScreenEvent_27:
   \   000002C6   5649               LDR      R1,??ScreenEvent_42+0x18  ;; 0xbb98
   \   000002C8   4079               LDRB     R0,[R0, #+5]
   \   000002CA   A022               MOVS     R2,#+160
   \   000002CC   5043               MULS     R0,R2,R0
   \   000002CE   554A               LDR      R2,??ScreenEvent_42+0x1C  ;; gProg
   \   000002D0   1018               ADDS     R0,R2,R0
   \   000002D2   4018               ADDS     R0,R0,R1
   \   000002D4   ........           BL       ScreenAlarmSet_Event
   \   000002D8   8DE0               B        ??ScreenEvent_60
    320                      case 113  : Options_Event();          break; 
   \                     ??ScreenEvent_15:
   \   000002DA   ........           BL       Options_Event
   \   000002DE   8AE0               B        ??ScreenEvent_60
    321                            case 1131 : Restart_Event();          break; 
   \                     ??ScreenEvent_28:
   \   000002E0   ........           BL       Restart_Event
   \   000002E4   87E0               B        ??ScreenEvent_60
    322                      case 114  : Setup_Event();            break; 
   \                     ??ScreenEvent_16:
   \   000002E6   ........           BL       Setup_Event
   \   000002EA   84E0               B        ??ScreenEvent_60
   \                     ??ScreenEvent_0:
   \   000002EC   ........           DC32     g_Message
   \   000002F0   ........           DC32     TextToChangeLength
   \   000002F4   DD030000           DC32     0x3dd
    323                            case 1141 : SetupLang_Event();         break;
   \                     ??ScreenEvent_29:
   \   000002F8   ........           BL       SetupLang_Event
   \   000002FC   7BE0               B        ??ScreenEvent_60
    324                            case 1142 : SetupTime_Event();        break;
   \                     ??ScreenEvent_30:
   \   000002FE   ........           BL       SetupTime_Event
   \   00000302   78E0               B        ??ScreenEvent_60
    325                            case 1143 : SetupPass_Event();         break;   
   \                     ??ScreenEvent_31:
   \   00000304   ........           BL       SetupPass_Event
   \   00000308   75E0               B        ??ScreenEvent_60
    326                                  case 11431 : SetupOldPass_Event(1);         break;
   \                     ??ScreenEvent_49:
   \   0000030A   0120               MOVS     R0,#+1
   \   0000030C   ........           BL       SetupOldPass_Event
   \   00000310   71E0               B        ??ScreenEvent_60
    327                                       case 114311 : SetupNewPass_Event(1);         break;
   \                     ??ScreenEvent_57:
   \   00000312   0120               MOVS     R0,#+1
   \   00000314   ........           BL       SetupNewPass_Event
   \   00000318   6DE0               B        ??ScreenEvent_60
    328                                  case 11432 : SetupOldPass_Event(2);         break;
   \                     ??ScreenEvent_50:
   \   0000031A   0220               MOVS     R0,#+2
   \   0000031C   ........           BL       SetupOldPass_Event
   \   00000320   69E0               B        ??ScreenEvent_60
    329                                       case 114321 : SetupNewPass_Event(2);         break;
   \                     ??ScreenEvent_58:
   \   00000322   0220               MOVS     R0,#+2
   \   00000324   ........           BL       SetupNewPass_Event
   \   00000328   65E0               B        ??ScreenEvent_60
    330                            case 1144 : SetTouchScreen_Event();  break;
    331                            case 1145 : ScreenSever_Event();  break;
   \                     ??ScreenEvent_32:
   \   0000032A   ........           BL       ScreenSever_Event
   \   0000032E   62E0               B        ??ScreenEvent_60
    332                            case 1147 : MasterSlave_Event();  break;
   \                     ??ScreenEvent_33:
   \   00000330   ........           BL       MasterSlave_Event
   \   00000334   5FE0               B        ??ScreenEvent_60
    333                            case 1148 : RF_Channel_Event();  break;
   \                     ??ScreenEvent_34:
   \   00000336   ........           BL       RF_Channel_Event
   \   0000033A   5CE0               B        ??ScreenEvent_60
    334                      case 115  : NeuronsList_Event();  break;
   \                     ??ScreenEvent_17:
   \   0000033C   ........           BL       NeuronsList_Event
   \   00000340   59E0               B        ??ScreenEvent_60
    335                            case 1150 : SaveChanges_Evant(); break;
    336                            case 1151: NeuronNrChange_Evant(NeuronIdChange);  break;
   \                     ??ScreenEvent_35:
   \   00000342   C06D               LDR      R0,[R0, #+92]
   \   00000344   ........           BL       NeuronNrChange_Evant
   \   00000348   55E0               B        ??ScreenEvent_60
    337                            case 1152  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    338                            case 1153 :  Node_Event(NeuronNrChange); break;
   \                     ??ScreenEvent_37:
   \   0000034A   C078               LDRB     R0,[R0, #+3]
   \   0000034C   ........           BL       Node_Event
   \   00000350   51E0               B        ??ScreenEvent_60
    339                                case 11531 : NeuronNrChange_Evant(NeuronIdChange);  break;
    340                                case 11534 : NodeTestTrans_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_51:
   \   00000352   C078               LDRB     R0,[R0, #+3]
   \   00000354   ........           BL       NodeTestTrans_Event
   \   00000358   4DE0               B        ??ScreenEvent_60
    341                                case 11535 : NodeStanIO_Event(NeuronNrChange);  break;
   \                     ??ScreenEvent_52:
   \   0000035A   C078               LDRB     R0,[R0, #+3]
   \   0000035C   ........           BL       NodeStanIO_Event
   \   00000360   49E0               B        ??ScreenEvent_60
    342                      case 116  : Info_Event();    break;
   \                     ??ScreenEvent_18:
   \   00000362   ........           BL       Info_Event
   \   00000366   46E0               B        ??ScreenEvent_60
    343                      case 117  : Net_Event();     break;
   \                     ??ScreenEvent_19:
   \   00000368   ........           BL       Net_Event
   \   0000036C   43E0               B        ??ScreenEvent_60
    344                            case 1171  : UstawSiec_Event();     break;
   \                     ??ScreenEvent_38:
   \   0000036E   ........           BL       UstawSiec_Event
   \   00000372   40E0               B        ??ScreenEvent_60
    345                                case 11711  : Punkt_dostepuWiFi_Event();     break;
   \                     ??ScreenEvent_53:
   \   00000374   ........           BL       Punkt_dostepuWiFi_Event
   \   00000378   3DE0               B        ??ScreenEvent_60
    346                                  case 117111  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    347                                case 11712  : IpTCP_Event(); break;
   \                     ??ScreenEvent_54:
   \   0000037A   ........           BL       IpTCP_Event
   \   0000037E   3AE0               B        ??ScreenEvent_60
    348                                  case 117122 : IpConfig_Event(); break;
   \                     ??ScreenEvent_59:
   \   00000380   ........           BL       IpConfig_Event
   \   00000384   37E0               B        ??ScreenEvent_60
    349                                    case 1171221  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    350                            case 1172 : Host_WiFi_Event(); break;  
   \                     ??ScreenEvent_39:
   \   00000386   ........           BL       Host_WiFi_Event
   \   0000038A   34E0               B        ??ScreenEvent_60
    351                                case 11721  :  TextChange_Evant(TextToChange, &TextToChangeLength, &TextToChangeMaxPixSize); break;
    352                            case 1173 : NetPeriodicity_Event(); break; 
   \                     ??ScreenEvent_40:
   \   0000038C   ........           BL       NetPeriodicity_Event
   \   00000390   31E0               B        ??ScreenEvent_60
    353                            case 1174 : NetInfo_Event(); break; 
   \                     ??ScreenEvent_41:
   \   00000392   ........           BL       NetInfo_Event
   \   00000396   2EE0               B        ??ScreenEvent_60
    354                                
    355                    case 12     : ThermostatAutoSet_Event(&gProg.Screen[CurrentSheet]);         break;  
   \                     ??ScreenEvent_8:
   \   00000398   2149               LDR      R1,??ScreenEvent_42+0x18  ;; 0xbb98
   \   0000039A   0079               LDRB     R0,[R0, #+4]
   \   0000039C   A022               MOVS     R2,#+160
   \   0000039E   5043               MULS     R0,R2,R0
   \   000003A0   204A               LDR      R2,??ScreenEvent_42+0x1C  ;; gProg
   \   000003A2   1018               ADDS     R0,R2,R0
   \   000003A4   4018               ADDS     R0,R0,R1
   \   000003A6   ........           BL       ThermostatAutoSet_Event
   \   000003AA   24E0               B        ??ScreenEvent_60
    356                      case 120      : SaveChanges_Evant(); break;
    357                      case 121      : ThermostatChartSet_Event(&gProg.Screen[CurrentSheet], CurentChartModyfi);         break;  
   \                     ??ScreenEvent_21:
   \   000003AC   8178               LDRB     R1,[R0, #+2]
   \   000003AE   1C4A               LDR      R2,??ScreenEvent_42+0x18  ;; 0xbb98
   \   000003B0   0079               LDRB     R0,[R0, #+4]
   \   000003B2   A023               MOVS     R3,#+160
   \   000003B4   5843               MULS     R0,R3,R0
   \   000003B6   1B4B               LDR      R3,??ScreenEvent_42+0x1C  ;; gProg
   \   000003B8   1818               ADDS     R0,R3,R0
   \   000003BA   8018               ADDS     R0,R0,R2
   \   000003BC   ........           BL       ThermostatChartSet_Event
   \   000003C0   19E0               B        ??ScreenEvent_60
    358                    case 13     : TimetableSet_Event();         break;   
   \                     ??ScreenEvent_9:
   \   000003C2   ........           BL       TimetableSet_Event
   \   000003C6   16E0               B        ??ScreenEvent_60
    359                    case 14     : AlarmPass_Event(CurrentSheet);         break; 
   \                     ??ScreenEvent_10:
   \   000003C8   0079               LDRB     R0,[R0, #+4]
   \   000003CA   ........           BL       AlarmPass_Event
   \   000003CE   12E0               B        ??ScreenEvent_60
    360                    case 15     : AlarmPassChange_Event(CurrentSheet);         break;  
   \                     ??ScreenEvent_11:
   \   000003D0   0079               LDRB     R0,[R0, #+4]
   \   000003D2   ........           BL       AlarmPassChange_Event
   \   000003D6   0EE0               B        ??ScreenEvent_60
    361            } 
    362            }
    363            else
    364            {
    365              if ((X_up>0) && (Y_up>0)  )
   \                     ??ScreenEvent_1:
   \   000003D8   1549               LDR      R1,??ScreenEvent_42+0x28  ;; X_up
   \   000003DA   0022               MOVS     R2,#+0
   \   000003DC   895E               LDRSH    R1,[R1, R2]
   \   000003DE   0129               CMP      R1,#+1
   \   000003E0   09DB               BLT      ??ScreenEvent_60
   \   000003E2   1449               LDR      R1,??ScreenEvent_42+0x2C  ;; Y_up
   \   000003E4   895E               LDRSH    R1,[R1, R2]
   \   000003E6   0129               CMP      R1,#+1
   \   000003E8   05DB               BLT      ??ScreenEvent_60
    366              {
    367                  g_Message=0;
   \   000003EA   1100               MOVS     R1,R2
   \   000003EC   0160               STR      R1,[R0, #+0]
    368                  g_info=0;
   \   000003EE   1248               LDR      R0,??ScreenEvent_42+0x30  ;; g_info
   \   000003F0   0160               STR      R1,[R0, #+0]
    369                  MenuPaint();
   \   000003F2   ........           BL       MenuPaint
    370              }
    371            }
    372            
    373             X_up=-1;
   \                     ??ScreenEvent_60:
   \   000003F6   0020               MOVS     R0,#+0
   \   000003F8   C043               MVNS     R0,R0            ;; #-1
   \   000003FA   0D49               LDR      R1,??ScreenEvent_42+0x28  ;; X_up
   \   000003FC   0880               STRH     R0,[R1, #+0]
    374           Y_up=-1;
   \   000003FE   0D49               LDR      R1,??ScreenEvent_42+0x2C  ;; Y_up
   \   00000400   0880               STRH     R0,[R1, #+0]
    375          
    376          
    377          
    378          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \   00000402   08BC               POP      {R3}
   \   00000404   01BC               POP      {R0}
   \   00000406   0047               BX       R0               ;; return
   \                     ??ScreenEvent_42:
   \   00000408   D1260000           DC32     0x26d1
   \   0000040C   3E840100           DC32     0x1843e
   \   00000410   15080000           DC32     0x815
   \   00000414   E60A0000           DC32     0xae6
   \   00000418   DF510F00           DC32     0xf51df
   \   0000041C   B4C30000           DC32     0xc3b4
   \   00000420   98BB0000           DC32     0xbb98
   \   00000424   ........           DC32     gProg
   \   00000428   ........           DC32     `?<Constant "Info ">`
   \   0000042C   672B0000           DC32     0x2b67
   \   00000430   ........           DC32     X_up
   \   00000434   ........           DC32     Y_up
   \   00000438   ........           DC32     g_info
    379          
    380          
    381          
    382          
    383          
    384          //*-----------------------------------------------------------------------------
    385          //* Nazwa funkcji :    ScreenEvent
    386          //* Funkcja wrysowania menu ekranowego
    387          //*-----------------------------------------------------------------------------
    388          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    389          //*-----------------------------------------------------------------------------
    390          char DispWait=0; 

   \                                 In section Debug.txt, align 4, keep-with-next
    391          void MenuRefresh(Void)
    392          {
   \                     MenuRefresh:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    393            
    394           if (g_info==0)
   \   00000002   6348               LDR      R0,??MenuRefresh_0  ;; g_info
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   00D0               BEQ      .+4
   \   0000000A   BEE0               B        ??MenuRefresh_1
    395            {
    396            static char Message;
    397            
    398            if ((g_counter>g_Message) && (!Message)) 
   \   0000000C   614D               LDR      R5,??MenuRefresh_0+0x4  ;; g_counter
   \   0000000E   624C               LDR      R4,??MenuRefresh_0+0x8  ;; g_Message
   \   00000010   2268               LDR      R2,[R4, #+0]
   \   00000012   D317               ASRS     R3,R2,#+31
   \   00000014   03CD               LDM      R5!,{R0,R1}
   \   00000016   083D               SUBS     R5,R5,#+8
   \   00000018   8B42               CMP      R3,R1
   \   0000001A   00D9               BLS      .+4
   \   0000001C   89E0               B        ??MenuRefresh_2
   \   0000001E   02D3               BCC      ??MenuRefresh_3
   \   00000020   8242               CMP      R2,R0
   \   00000022   00D3               BCC      .+4
   \   00000024   85E0               B        ??MenuRefresh_2
   \                     ??MenuRefresh_3:
   \   00000026   5D4A               LDR      R2,??MenuRefresh_0+0xC  ;; TextToChangeLength
   \   00000028   D07A               LDRB     R0,[R2, #+11]
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   00D0               BEQ      .+4
   \   0000002E   80E0               B        ??MenuRefresh_2
    399            {    
    400              if (DispWait==0)      //tryb wyswietlania menu
   \   00000030   907A               LDRB     R0,[R2, #+10]
   \   00000032   0028               CMP      R0,#+0
   \   00000034   72D1               BNE      ??MenuRefresh_4
    401              {
    402                switch (MenuLevel)
   \   00000036   906C               LDR      R0,[R2, #+72]
   \   00000038   0028               CMP      R0,#+0
   \   0000003A   32D0               BEQ      ??MenuRefresh_5
   \   0000003C   401E               SUBS     R0,R0,#+1
   \   0000003E   33D0               BEQ      ??MenuRefresh_6
   \   00000040   801E               SUBS     R0,R0,#+2
   \   00000042   3BD0               BEQ      ??MenuRefresh_7
   \   00000044   0B38               SUBS     R0,R0,#+11
   \   00000046   3CD0               BEQ      ??MenuRefresh_8
   \   00000048   6538               SUBS     R0,R0,#+101
   \   0000004A   50D0               BEQ      ??MenuRefresh_9
   \   0000004C   401E               SUBS     R0,R0,#+1
   \   0000004E   51D0               BEQ      ??MenuRefresh_10
   \   00000050   401F               SUBS     R0,R0,#+5
   \   00000052   58D0               BEQ      ??MenuRefresh_11
   \   00000054   5249               LDR      R1,??MenuRefresh_0+0x10  ;; 0x3fd
   \   00000056   401A               SUBS     R0,R0,R1
   \   00000058   3BD0               BEQ      ??MenuRefresh_12
   \   0000005A   801F               SUBS     R0,R0,#+6
   \   0000005C   3CD0               BEQ      ??MenuRefresh_13
   \   0000005E   001F               SUBS     R0,R0,#+4
   \   00000060   32D0               BEQ      ??MenuRefresh_14
   \   00000062   1638               SUBS     R0,R0,#+22
   \   00000064   49D0               BEQ      ??MenuRefresh_15
   \   00000066   4F49               LDR      R1,??MenuRefresh_0+0x14  ;; 0x2736
   \   00000068   401A               SUBS     R0,R0,R1
   \   0000006A   2DD0               BEQ      ??MenuRefresh_14
   \   0000006C   A121               MOVS     R1,#+161
   \   0000006E   4900               LSLS     R1,R1,#+1        ;; #+322
   \   00000070   401A               SUBS     R0,R0,R1
   \   00000072   34D0               BEQ      ??MenuRefresh_16
   \   00000074   401E               SUBS     R0,R0,#+1
   \   00000076   36D0               BEQ      ??MenuRefresh_17
   \   00000078   BA38               SUBS     R0,R0,#+186
   \   0000007A   25D0               BEQ      ??MenuRefresh_14
   \   0000007C   4A49               LDR      R1,??MenuRefresh_0+0x18  ;; 0x18826
   \   0000007E   401A               SUBS     R0,R0,R1
   \   00000080   22D0               BEQ      ??MenuRefresh_14
   \   00000082   1438               SUBS     R0,R0,#+20
   \   00000084   20D0               BEQ      ??MenuRefresh_14
   \   00000086   0A38               SUBS     R0,R0,#+10
   \   00000088   1ED0               BEQ      ??MenuRefresh_14
   \   0000008A   4849               LDR      R1,??MenuRefresh_0+0x1C  ;; 0x136a
   \   0000008C   401A               SUBS     R0,R0,R1
   \   0000008E   1BD0               BEQ      ??MenuRefresh_14
   \   00000090   401E               SUBS     R0,R0,#+1
   \   00000092   35D0               BEQ      ??MenuRefresh_18
   \   00000094   4649               LDR      R1,??MenuRefresh_0+0x20  ;; 0xf51e9
   \   00000096   401A               SUBS     R0,R0,R1
   \   00000098   16D0               BEQ      ??MenuRefresh_14
   \   0000009A   4649               LDR      R1,??MenuRefresh_0+0x24  ;; 0xc3b4
   \   0000009C   401A               SUBS     R0,R0,R1
   \   0000009E   13D0               BEQ      ??MenuRefresh_14
   \   000000A0   47E0               B        ??MenuRefresh_2
    403                {
    404                  case 0        : StartAnimation_Paint();         break;
   \                     ??MenuRefresh_5:
   \   000000A2   ........           BL       StartAnimation_Paint
   \   000000A6   44E0               B        ??MenuRefresh_2
    405                  case 1        : MainSide_Refresh(&gProg.Screen[CurrentSheet]);         break;
   \                     ??MenuRefresh_6:
   \   000000A8   4348               LDR      R0,??MenuRefresh_0+0x28  ;; 0xbb98
   \   000000AA   1179               LDRB     R1,[R2, #+4]
   \   000000AC   A022               MOVS     R2,#+160
   \   000000AE   5143               MULS     R1,R2,R1
   \   000000B0   424A               LDR      R2,??MenuRefresh_0+0x2C  ;; gProg
   \   000000B2   5118               ADDS     R1,R2,R1
   \   000000B4   0818               ADDS     R0,R1,R0
   \   000000B6   ........           BL       MainSide_Refresh
   \   000000BA   3AE0               B        ??MenuRefresh_2
    406                  case 3        : CheckChannel();         break;
   \                     ??MenuRefresh_7:
   \   000000BC   ........           BL       CheckChannel
   \   000000C0   37E0               B        ??MenuRefresh_2
    407                  case 14       : AlarmPass_Refresh();break;
   \                     ??MenuRefresh_8:
   \   000000C2   ........           BL       AlarmPass_Refresh
   \   000000C6   34E0               B        ??MenuRefresh_2
    408                      case 112111  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
   \                     ??MenuRefresh_14:
   \   000000C8   1100               MOVS     R1,R2
   \   000000CA   106D               LDR      R0,[R2, #+80]
   \   000000CC   ........           BL       TextChange_Refresh
   \   000000D0   2FE0               B        ??MenuRefresh_2
    409                      case 1121121  : TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    410                      case 11212  :   TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    411                      case 112131  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    412                      case 112141  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    413                      case 1142    : SetupTime_Refresh();        break;
   \                     ??MenuRefresh_12:
   \   000000D2   ........           BL       SetupTime_Refresh
   \   000000D6   2CE0               B        ??MenuRefresh_2
    414                      case 1148    : RF_Channel_Refresh();  break;
   \                     ??MenuRefresh_13:
   \   000000D8   ........           BL       RF_Channel_Refresh
   \   000000DC   29E0               B        ??MenuRefresh_2
    415                      case 1152    :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    416                        case 11534   : NodeTestTrans_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_16:
   \   000000DE   D078               LDRB     R0,[R2, #+3]
   \   000000E0   ........           BL       NodeTestTrans_Refresh
   \   000000E4   25E0               B        ??MenuRefresh_2
    417                        case 11535   : NodeStanIO_Refresh(NeuronNrChange);  break;
   \                     ??MenuRefresh_17:
   \   000000E6   D078               LDRB     R0,[R2, #+3]
   \   000000E8   ........           BL       NodeStanIO_Refresh
   \   000000EC   21E0               B        ??MenuRefresh_2
    418                        
    419                  case 115  : NeuronsList_Refresh();  break;
   \                     ??MenuRefresh_9:
   \   000000EE   ........           BL       NeuronsList_Refresh
   \   000000F2   1EE0               B        ??MenuRefresh_2
    420                  case 116  : Info_Refresh();    break;
   \                     ??MenuRefresh_10:
   \   000000F4   ........           BL       Info_Refresh
   \   000000F8   1BE0               B        ??MenuRefresh_2
    421                       case 1174 : NetInfo_Refresh(); break; 
   \                     ??MenuRefresh_15:
   \   000000FA   ........           BL       NetInfo_Refresh
   \   000000FE   18E0               B        ??MenuRefresh_2
    422                       
    423                       case 117111  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    424                       case 117112 :  WiFiConecting_Refresh(); break;
   \                     ??MenuRefresh_18:
   \   00000100   ........           BL       WiFiConecting_Refresh
   \   00000104   15E0               B        ??MenuRefresh_2
    425                       case 11721  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    426                       case 1171221  :  TextChange_Refresh(TextToChange, &TextToChangeLength); break;
    427                  
    428                  case 121     : ThermostatChartSet_Refresh(&gProg.Screen[CurrentSheet], CurentChartModyfi);  break;   
   \                     ??MenuRefresh_11:
   \   00000106   9178               LDRB     R1,[R2, #+2]
   \   00000108   2B48               LDR      R0,??MenuRefresh_0+0x28  ;; 0xbb98
   \   0000010A   1279               LDRB     R2,[R2, #+4]
   \   0000010C   A023               MOVS     R3,#+160
   \   0000010E   5A43               MULS     R2,R3,R2
   \   00000110   2A4B               LDR      R3,??MenuRefresh_0+0x2C  ;; gProg
   \   00000112   9A18               ADDS     R2,R3,R2
   \   00000114   1018               ADDS     R0,R2,R0
   \   00000116   ........           BL       ThermostatChartSet_Refresh
   \   0000011A   0AE0               B        ??MenuRefresh_2
    429                  
    430                }
    431              }
    432              else if(DispWait==DispWaitOn)
   \                     ??MenuRefresh_4:
   \   0000011C   0128               CMP      R0,#+1
   \   0000011E   02D1               BNE      ??MenuRefresh_19
    433              {
    434                Wait_Paint();
   \   00000120   ........           BL       Wait_Paint
   \   00000124   05E0               B        ??MenuRefresh_2
    435              }
    436              else if(DispWait==DispWaitOff)
   \                     ??MenuRefresh_19:
   \   00000126   0228               CMP      R0,#+2
   \   00000128   03D1               BNE      ??MenuRefresh_2
    437              {
    438                DispWait=0;
   \   0000012A   0020               MOVS     R0,#+0
   \   0000012C   9072               STRB     R0,[R2, #+10]
    439                MenuPaint();
   \   0000012E   ........           BL       MenuPaint
    440              }
    441              
    442            }
    443            
    444            
    445              if ((g_counter>g_Message) && (Message)){Message=0; g_Message=0; MenuPaint();}
   \                     ??MenuRefresh_2:
   \   00000132   2268               LDR      R2,[R4, #+0]
   \   00000134   D317               ASRS     R3,R2,#+31
   \   00000136   03CD               LDM      R5!,{R0,R1}
   \   00000138   083D               SUBS     R5,R5,#+8
   \   0000013A   8B42               CMP      R3,R1
   \   0000013C   0CD8               BHI      ??MenuRefresh_20
   \   0000013E   01D3               BCC      ??MenuRefresh_21
   \   00000140   8242               CMP      R2,R0
   \   00000142   09D2               BCS      ??MenuRefresh_20
   \                     ??MenuRefresh_21:
   \   00000144   154A               LDR      R2,??MenuRefresh_0+0xC  ;; TextToChangeLength
   \   00000146   D07A               LDRB     R0,[R2, #+11]
   \   00000148   0028               CMP      R0,#+0
   \   0000014A   05D0               BEQ      ??MenuRefresh_20
   \   0000014C   0020               MOVS     R0,#+0
   \   0000014E   0100               MOVS     R1,R0
   \   00000150   D172               STRB     R1,[R2, #+11]
   \   00000152   2060               STR      R0,[R4, #+0]
   \   00000154   ........           BL       MenuPaint
   \                     ??MenuRefresh_20:
   \   00000158   2368               LDR      R3,[R4, #+0]
   \   0000015A   DC17               ASRS     R4,R3,#+31
   \   0000015C   03CD               LDM      R5!,{R0,R1}
   \   0000015E   A142               CMP      R1,R4
   \   00000160   08D8               BHI      ??MenuRefresh_22
   \   00000162   01D3               BCC      ??MenuRefresh_23
   \   00000164   9842               CMP      R0,R3
   \   00000166   05D2               BCS      ??MenuRefresh_22
   \                     ??MenuRefresh_23:
   \   00000168   0C4A               LDR      R2,??MenuRefresh_0+0xC  ;; TextToChangeLength
   \   0000016A   D57A               LDRB     R5,[R2, #+11]
   \   0000016C   002D               CMP      R5,#+0
   \   0000016E   01D1               BNE      ??MenuRefresh_22
    446            if ((g_counter<g_Message) && (!Message)){Message=1;}
   \   00000170   0125               MOVS     R5,#+1
   \   00000172   D572               STRB     R5,[R2, #+11]
    447            if ((g_counter<g_Message) && (MenuLevel<2)) { MESSAGE_Refresh();}
   \                     ??MenuRefresh_22:
   \   00000174   A142               CMP      R1,R4
   \   00000176   08D8               BHI      ??MenuRefresh_1
   \   00000178   01D3               BCC      ??MenuRefresh_24
   \   0000017A   9842               CMP      R0,R3
   \   0000017C   05D2               BCS      ??MenuRefresh_1
   \                     ??MenuRefresh_24:
   \   0000017E   1048               LDR      R0,??MenuRefresh_0+0x30  ;; TextToChangeLength + 72
   \   00000180   0068               LDR      R0,[R0, #+0]
   \   00000182   0228               CMP      R0,#+2
   \   00000184   01DA               BGE      ??MenuRefresh_1
   \   00000186   ........           BL       MESSAGE_Refresh
    448            
    449            } 
    450          }//_______________________ Koniec funkcji ScreenEvent __________________________
   \                     ??MenuRefresh_1:
   \   0000018A   38BC               POP      {R3-R5}
   \   0000018C   01BC               POP      {R0}
   \   0000018E   0047               BX       R0               ;; return
   \                     ??MenuRefresh_0:
   \   00000190   ........           DC32     g_info
   \   00000194   ........           DC32     g_counter
   \   00000198   ........           DC32     g_Message
   \   0000019C   ........           DC32     TextToChangeLength
   \   000001A0   FD030000           DC32     0x3fd
   \   000001A4   36270000           DC32     0x2736
   \   000001A8   26880100           DC32     0x18826
   \   000001AC   6A130000           DC32     0x136a
   \   000001B0   E9510F00           DC32     0xf51e9
   \   000001B4   B4C30000           DC32     0xc3b4
   \   000001B8   98BB0000           DC32     0xbb98
   \   000001BC   ........           DC32     gProg
   \   000001C0   ........           DC32     TextToChangeLength + 72
    451          
    452          
    453          
    454          
    455          extern char Animation_tab[11][8][15];
    456          

   \                                 In section .bss, align 1
    457          char InitPointer=0;
   \                     InitPointer:
   \   00000000                      DS8 1
    458          char CCKier=0;
   \                     CCKier:
   \   00000001                      DS8 1
    459          
    460          //*-----------------------------------------------------------------------------
    461          //* Nazwa funkcji :    MainSide_Paint
    462          //* Funkcja strony g³ównej menu
    463          //*-----------------------------------------------------------------------------
    464          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    465          //*-----------------------------------------------------------------------------
    466          char AnimationNr=0;
   \                     AnimationNr:
   \   00000002                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
    467          void StartAnimation_Paint(void)
    468          {
   \                     StartAnimation_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
    469            CleanCanvas();
   \   00000002   ........           BL       CleanCanvas
    470            
    471            CopyToCanvasPoint((char*)Logo_Ceuron, 0, 70, 64,16);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000006   4B4C               LDR      R4,??StartAnimation_Paint_0  ;; `?<Constant "Firmware: ">`
   \   00000008   82B0               SUB      SP,SP,#+8
   \   0000000A   1020               MOVS     R0,#+16
   \   0000000C   0090               STR      R0,[SP, #+0]
   \   0000000E   4023               MOVS     R3,#+64
   \   00000010   4622               MOVS     R2,#+70
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   2000               MOVS     R0,R4
   \   00000016   0C30               ADDS     R0,R0,#+12
   \   00000018   ........           BL       CopyToCanvasPoint
   \   0000001C   02B0               ADD      SP,SP,#+8
    472          
    473            Label((char*)&identyfikacja,2,0,52,15,63,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000001E   82B0               SUB      SP,SP,#+8
   \   00000020   0020               MOVS     R0,#+0
   \   00000022   0090               STR      R0,[SP, #+0]
   \   00000024   7821               MOVS     R1,#+120
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3F21               MOVS     R1,#+63
   \   0000002A   0F20               MOVS     R0,#+15
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3423               MOVS     R3,#+52
   \   00000030   0022               MOVS     R2,#+0
   \   00000032   0221               MOVS     R1,#+2
   \   00000034   4048               LDR      R0,??StartAnimation_Paint_0+0x4  ;; identyfikacja
   \   00000036   ........           BL       Label
   \   0000003A   06B0               ADD      SP,SP,#+24
    474            Label("Firmware: ",0,5,5,15,63,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   7821               MOVS     R1,#+120
   \   00000044   03B4               PUSH     {R0,R1}
   \   00000046   3F21               MOVS     R1,#+63
   \   00000048   0F20               MOVS     R0,#+15
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   0523               MOVS     R3,#+5
   \   0000004E   1A00               MOVS     R2,R3
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   2000               MOVS     R0,R4
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
    475            Label((char*)&system,0,48,5,4,14,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7821               MOVS     R1,#+120
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   0E21               MOVS     R1,#+14
   \   00000066   0420               MOVS     R0,#+4
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   0523               MOVS     R3,#+5
   \   0000006C   3022               MOVS     R2,#+48
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   3248               LDR      R0,??StartAnimation_Paint_0+0x8  ;; system
   \   00000072   ........           BL       Label
   \   00000076   06B0               ADD      SP,SP,#+24
    476           
    477            //wskanik postêpu
    478            H_line(InitPointer+5,48,24,1); // (char X, int Y, char lenght, char typ)
   \   00000078   314C               LDR      R4,??StartAnimation_Paint_0+0xC  ;; InitPointer
   \   0000007A   0123               MOVS     R3,#+1
   \   0000007C   1822               MOVS     R2,#+24
   \   0000007E   3021               MOVS     R1,#+48
   \   00000080   2078               LDRB     R0,[R4, #+0]
   \   00000082   401D               ADDS     R0,R0,#+5
   \   00000084   0006               LSLS     R0,R0,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   ........           BL       H_line
    479            H_line(InitPointer+4,49,26,1); // (char X, int Y, char lenght, char typ)
   \   0000008C   0123               MOVS     R3,#+1
   \   0000008E   1A22               MOVS     R2,#+26
   \   00000090   3121               MOVS     R1,#+49
   \   00000092   2078               LDRB     R0,[R4, #+0]
   \   00000094   001D               ADDS     R0,R0,#+4
   \   00000096   0006               LSLS     R0,R0,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   ........           BL       H_line
    480            H_line(InitPointer+5,50,24,1); // (char X, int Y, char lenght, char typ)
   \   0000009E   0123               MOVS     R3,#+1
   \   000000A0   1822               MOVS     R2,#+24
   \   000000A2   3221               MOVS     R1,#+50
   \   000000A4   2078               LDRB     R0,[R4, #+0]
   \   000000A6   401D               ADDS     R0,R0,#+5
   \   000000A8   0006               LSLS     R0,R0,#+24
   \   000000AA   000E               LSRS     R0,R0,#+24
   \   000000AC   ........           BL       H_line
    481            if ((InitPointer<30) && (CCKier==0)) {InitPointer+=2;}else{CCKier=1;}
   \   000000B0   2078               LDRB     R0,[R4, #+0]
   \   000000B2   1E28               CMP      R0,#+30
   \   000000B4   05D2               BCS      ??StartAnimation_Paint_1
   \   000000B6   6178               LDRB     R1,[R4, #+1]
   \   000000B8   0029               CMP      R1,#+0
   \   000000BA   02D1               BNE      ??StartAnimation_Paint_1
   \   000000BC   801C               ADDS     R0,R0,#+2
   \   000000BE   2070               STRB     R0,[R4, #+0]
   \   000000C0   01E0               B        ??StartAnimation_Paint_2
   \                     ??StartAnimation_Paint_1:
   \   000000C2   0120               MOVS     R0,#+1
   \   000000C4   6070               STRB     R0,[R4, #+1]
    482            if ((InitPointer>0) && (CCKier==1)) {InitPointer-=2;}else{CCKier=0;}
   \                     ??StartAnimation_Paint_2:
   \   000000C6   2078               LDRB     R0,[R4, #+0]
   \   000000C8   0028               CMP      R0,#+0
   \   000000CA   05D0               BEQ      ??StartAnimation_Paint_3
   \   000000CC   6178               LDRB     R1,[R4, #+1]
   \   000000CE   0129               CMP      R1,#+1
   \   000000D0   02D1               BNE      ??StartAnimation_Paint_3
   \   000000D2   801E               SUBS     R0,R0,#+2
   \   000000D4   2070               STRB     R0,[R4, #+0]
   \   000000D6   01E0               B        ??StartAnimation_Paint_4
   \                     ??StartAnimation_Paint_3:
   \   000000D8   0020               MOVS     R0,#+0
   \   000000DA   6070               STRB     R0,[R4, #+1]
    483            
    484            
    485            if ((AnimationNr==14) || (SlaveMode))
   \                     ??StartAnimation_Paint_4:
   \   000000DC   A278               LDRB     R2,[R4, #+2]
   \   000000DE   0E2A               CMP      R2,#+14
   \   000000E0   03D0               BEQ      ??StartAnimation_Paint_5
   \   000000E2   1848               LDR      R0,??StartAnimation_Paint_0+0x10  ;; SlaveMode
   \   000000E4   0078               LDRB     R0,[R0, #+0]
   \   000000E6   0028               CMP      R0,#+0
   \   000000E8   1ED0               BEQ      ??StartAnimation_Paint_6
    486            {
    487                korekta_X.A=AT91C_IFLASH_MEM->Config.Cor_X.A;
   \                     ??StartAnimation_Paint_5:
   \   000000EA   1748               LDR      R0,??StartAnimation_Paint_0+0x14  ;; korekta_X
   \   000000EC   1749               LDR      R1,??StartAnimation_Paint_0+0x18  ;; 0x13d828
   \   000000EE   0968               LDR      R1,[R1, #+0]
   \   000000F0   0160               STR      R1,[R0, #+0]
    488                korekta_X.B=AT91C_IFLASH_MEM->Config.Cor_X.B;
   \   000000F2   1749               LDR      R1,??StartAnimation_Paint_0+0x1C  ;; 0x13d82c
   \   000000F4   0968               LDR      R1,[R1, #+0]
   \   000000F6   4160               STR      R1,[R0, #+4]
    489                korekta_Y.A=AT91C_IFLASH_MEM->Config.Cor_Y.A;
   \   000000F8   164B               LDR      R3,??StartAnimation_Paint_0+0x20  ;; korekta_Y
   \   000000FA   1749               LDR      R1,??StartAnimation_Paint_0+0x24  ;; 0x13d820
   \   000000FC   0968               LDR      R1,[R1, #+0]
   \   000000FE   1960               STR      R1,[R3, #+0]
    490                korekta_Y.B=AT91C_IFLASH_MEM->Config.Cor_Y.B;
   \   00000100   1649               LDR      R1,??StartAnimation_Paint_0+0x28  ;; 0x13d824
   \   00000102   0968               LDR      R1,[R1, #+0]
   \   00000104   5960               STR      R1,[R3, #+4]
    491                
    492                //je¿eli brak korekt to ustaw korekty
    493                if ((korekta_X.A==0)||(korekta_Y.A==0))
   \   00000106   0068               LDR      R0,[R0, #+0]
   \   00000108   0021               MOVS     R1,#+0
   \   0000010A   ........           BL       __aeabi_cfcmpeq
   \   0000010E   03D0               BEQ      ??StartAnimation_Paint_7
   \   00000110   1868               LDR      R0,[R3, #+0]
   \   00000112   ........           BL       __aeabi_cfcmpeq
   \   00000116   02D1               BNE      ??StartAnimation_Paint_8
    494                {
    495                  MenuLevel=4;
   \                     ??StartAnimation_Paint_7:
   \   00000118   1148               LDR      R0,??StartAnimation_Paint_0+0x2C  ;; TextToChangeLength + 72
   \   0000011A   0421               MOVS     R1,#+4
   \   0000011C   0160               STR      R1,[R0, #+0]
    496                }else{
    497                 // MenuLevel=1;
    498                }
    499                AnimationNr++;
   \                     ??StartAnimation_Paint_8:
   \   0000011E   521C               ADDS     R2,R2,#+1
   \   00000120   A270               STRB     R2,[R4, #+2]
    500                MenuPaint();
   \   00000122   ........           BL       MenuPaint
   \   00000126   01E0               B        ??StartAnimation_Paint_9
    501            }else{
    502               AnimationNr++; 
   \                     ??StartAnimation_Paint_6:
   \   00000128   521C               ADDS     R2,R2,#+1
   \   0000012A   A270               STRB     R2,[R4, #+2]
    503            }
    504              
    505          
    506          
    507          }
   \                     ??StartAnimation_Paint_9:
   \   0000012C   10BC               POP      {R4}
   \   0000012E   01BC               POP      {R0}
   \   00000130   0047               BX       R0               ;; return
   \   00000132   C046               Nop      
   \                     ??StartAnimation_Paint_0:
   \   00000134   ........           DC32     `?<Constant "Firmware: ">`
   \   00000138   ........           DC32     identyfikacja
   \   0000013C   ........           DC32     system
   \   00000140   ........           DC32     InitPointer
   \   00000144   ........           DC32     SlaveMode
   \   00000148   ........           DC32     korekta_X
   \   0000014C   28D81300           DC32     0x13d828
   \   00000150   2CD81300           DC32     0x13d82c
   \   00000154   ........           DC32     korekta_Y
   \   00000158   20D81300           DC32     0x13d820
   \   0000015C   24D81300           DC32     0x13d824
   \   00000160   ........           DC32     TextToChangeLength + 72
    508          
    509          
    510          //*-----------------------------------------------------------------------------
    511          //* Nazwa funkcji :    StartAnimation_Event
    512          //* Funkcja strony g³ównej menu
    513          //*-----------------------------------------------------------------------------
    514          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    515          //*-----------------------------------------------------------------------------
    516          char StartAdvance=0;

   \                                 In section Debug.txt, align 4, keep-with-next
    517          void StartAnimation_Event(void)
    518          {
   \                     StartAnimation_Event:
   \   00000000   01B5               PUSH     {R0,LR}
    519          
    520              if ((X_up>0) && (Y_up>0))
   \   00000002   0A48               LDR      R0,??StartAnimation_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   0128               CMP      R0,#+1
   \   0000000A   0BDB               BLT      ??StartAnimation_Event_1
   \   0000000C   0848               LDR      R0,??StartAnimation_Event_0+0x4  ;; Y_up
   \   0000000E   405E               LDRSH    R0,[R0, R1]
   \   00000010   0128               CMP      R0,#+1
   \   00000012   07DB               BLT      ??StartAnimation_Event_1
    521              {
    522                MenuLevel=4;
   \   00000014   0748               LDR      R0,??StartAnimation_Event_0+0x8  ;; TextToChangeLength + 72
   \   00000016   0421               MOVS     R1,#+4
   \   00000018   0160               STR      R1,[R0, #+0]
    523                StartAdvance=1;
   \   0000001A   0748               LDR      R0,??StartAnimation_Event_0+0xC  ;; StartAdvance
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   0170               STRB     R1,[R0, #+0]
    524                MenuPaint();
   \   00000020   ........           BL       MenuPaint
    525              }
    526              
    527              
    528               
    529          }//_______________________ Koniec funkcji StartAnimation_Event __________________________
   \                     ??StartAnimation_Event_1:
   \   00000024   08BC               POP      {R3}
   \   00000026   01BC               POP      {R0}
   \   00000028   0047               BX       R0               ;; return
   \   0000002A   C046               Nop      
   \                     ??StartAnimation_Event_0:
   \   0000002C   ........           DC32     X_up
   \   00000030   ........           DC32     Y_up
   \   00000034   ........           DC32     TextToChangeLength + 72
   \   00000038   ........           DC32     StartAdvance
    530          
    531          
    532          
    533          
    534          
    535          //*-----------------------------------------------------------------------------
    536          //* Nazwa funkcji :    MainSide_Paint
    537          //* Funkcja strony g³ównej menu
    538          //*-----------------------------------------------------------------------------
    539          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    540          //*-----------------------------------------------------------------------------
    541          

   \                                 In section Debug.txt, align 4, keep-with-next
    542          void CheckChannel(void)
    543          {
   \                     CheckChannel:
   \   00000000   10B5               PUSH     {R4,LR}
    544          
    545            CleanCanvas();
   \   00000002   ........           BL       CleanCanvas
    546          
    547               Label("Checking Wi-Fi",0,1,60,14,6,0,120,0);
   \   00000006   82B0               SUB      SP,SP,#+8
   \   00000008   0020               MOVS     R0,#+0
   \   0000000A   0090               STR      R0,[SP, #+0]
   \   0000000C   7821               MOVS     R1,#+120
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0621               MOVS     R1,#+6
   \   00000012   0E20               MOVS     R0,#+14
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   3C23               MOVS     R3,#+60
   \   00000018   0122               MOVS     R2,#+1
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   1C48               LDR      R0,??CheckChannel_0  ;; `?<Constant "Checking Wi-Fi">`
   \   0000001E   ........           BL       Label
   \   00000022   06B0               ADD      SP,SP,#+24
    548          
    549                H_line(InitPointer+5,48,24,1); // (char X, int Y, char lenght, char typ)
   \   00000024   1B4C               LDR      R4,??CheckChannel_0+0x4  ;; InitPointer
   \   00000026   0123               MOVS     R3,#+1
   \   00000028   1822               MOVS     R2,#+24
   \   0000002A   3021               MOVS     R1,#+48
   \   0000002C   2078               LDRB     R0,[R4, #+0]
   \   0000002E   401D               ADDS     R0,R0,#+5
   \   00000030   0006               LSLS     R0,R0,#+24
   \   00000032   000E               LSRS     R0,R0,#+24
   \   00000034   ........           BL       H_line
    550                H_line(InitPointer+4,49,26,1); // (char X, int Y, char lenght, char typ)
   \   00000038   0123               MOVS     R3,#+1
   \   0000003A   1A22               MOVS     R2,#+26
   \   0000003C   3121               MOVS     R1,#+49
   \   0000003E   2078               LDRB     R0,[R4, #+0]
   \   00000040   001D               ADDS     R0,R0,#+4
   \   00000042   0006               LSLS     R0,R0,#+24
   \   00000044   000E               LSRS     R0,R0,#+24
   \   00000046   ........           BL       H_line
    551                H_line(InitPointer+5,50,24,1); // (char X, int Y, char lenght, char typ)
   \   0000004A   0123               MOVS     R3,#+1
   \   0000004C   1822               MOVS     R2,#+24
   \   0000004E   3221               MOVS     R1,#+50
   \   00000050   2078               LDRB     R0,[R4, #+0]
   \   00000052   401D               ADDS     R0,R0,#+5
   \   00000054   0006               LSLS     R0,R0,#+24
   \   00000056   000E               LSRS     R0,R0,#+24
   \   00000058   ........           BL       H_line
    552                if ((InitPointer<30) && (CCKier==0)) {InitPointer+=2;}else{CCKier=1;}
   \   0000005C   2078               LDRB     R0,[R4, #+0]
   \   0000005E   1E28               CMP      R0,#+30
   \   00000060   05D2               BCS      ??CheckChannel_1
   \   00000062   6178               LDRB     R1,[R4, #+1]
   \   00000064   0029               CMP      R1,#+0
   \   00000066   02D1               BNE      ??CheckChannel_1
   \   00000068   801C               ADDS     R0,R0,#+2
   \   0000006A   2070               STRB     R0,[R4, #+0]
   \   0000006C   01E0               B        ??CheckChannel_2
   \                     ??CheckChannel_1:
   \   0000006E   0120               MOVS     R0,#+1
   \   00000070   6070               STRB     R0,[R4, #+1]
    553                if ((InitPointer>0) && (CCKier==1)) {InitPointer-=2;}else{CCKier=0;}
   \                     ??CheckChannel_2:
   \   00000072   2078               LDRB     R0,[R4, #+0]
   \   00000074   0028               CMP      R0,#+0
   \   00000076   05D0               BEQ      ??CheckChannel_3
   \   00000078   6178               LDRB     R1,[R4, #+1]
   \   0000007A   0129               CMP      R1,#+1
   \   0000007C   02D1               BNE      ??CheckChannel_3
   \   0000007E   801E               SUBS     R0,R0,#+2
   \   00000080   2070               STRB     R0,[R4, #+0]
   \   00000082   01E0               B        ??CheckChannel_4
   \                     ??CheckChannel_3:
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   6070               STRB     R0,[R4, #+1]
    554                
    555          }
   \                     ??CheckChannel_4:
   \   00000088   10BC               POP      {R4}
   \   0000008A   01BC               POP      {R0}
   \   0000008C   0047               BX       R0               ;; return
   \   0000008E   C046               Nop      
   \                     ??CheckChannel_0:
   \   00000090   ........           DC32     `?<Constant "Checking Wi-Fi">`
   \   00000094   ........           DC32     InitPointer
    556          
    557          
    558          
    559          
    560          
    561          char ekran_komunikacja[8][128] = {
    562                            {0,0,0,0,0,0,0,0,0,0,28,34,2,2,2,34,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,8,232,232,232,104,104,104,104,104,104,104,104,104,104,104,104,232,232,232,8,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,248,24,6,6,6,3,3,3,3,6,6,12,60,240,192,0,0,0,0,0},
    563                            {0,0,0,0,0,0,0,0,0,0,30,33,33,33,33,33,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,255,255,192,192,192,192,192,192,192,192,192,192,192,192,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,224,48,24,0,0,0,255,255,0,0,24,24,96,224,128,0,0,0,0,0},
    564                            {0,0,0,0,0,0,0,0,0,0,145,153,153,149,147,147,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,2,10,18,34,66,66,130,130,2,2,2,2,2,2,2,2,2,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,195,225,112,48,48,48,48,48,48,48,48,48,48,48,51,3,0,0,0,0,0},
    565                            {0,0,0,0,0,0,0,0,0,0,200,76,76,202,73,73,200,0,0,0,4,4,4,60,68,68,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,0,0,0,1,1,1,130,194,164,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,14,28,24,24,24,24,24,24,24,24,24,24,24,152,128,0,0,0,0,0},
    566                            {0,0,0,0,0,0,0,0,0,0,199,32,32,39,32,32,199,0,0,0,28,34,2,2,2,34,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,1,2,84,168,80,33,206,14,206,67,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,48,48,24,24,12,12,28,28,96,96,96,96,48,63,15,0,0,0,0,0},
    567                            {0,0,0,0,0,0,0,0,0,0,65,66,64,64,64,66,241,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,62,124,85,170,85,0,255,126,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,220,142,6,6,6,6,6,6,6,6,6,6,140,252,112,0,0,0,0,0},
    568                            {0,0,0,0,0,0,0,0,0,0,248,8,8,248,8,8,249,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,127,255,192,128,81,162,85,0,255,248,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,51,51,51,51,51,51,51,51,51,51,51,49,97,192,0,0,0,0,0},
    569                            {0,0,0,0,0,0,0,0,0,0,28,36,68,68,68,36,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,7,14,29,24,31,1,31,16,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,16,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,108,198,198,198,198,198,198,198,198,198,198,198,198,195,1,0,0,0,0,0},
    570                            };
    571          
    572          
    573          
    574          
    575          //*-----------------------------------------------------------------------------
    576          //* Nazwa funkcji :    MainSide_Paint
    577          //* Funkcja strony g³ównej menu
    578          //*-----------------------------------------------------------------------------
    579          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    580          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    581          void MainSide_Paint(_Screen* ScreenLokal)
    582          {
   \                     MainSide_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
    583            //Komunikacja z komputerem
    584            if (g_PC_Connected==1)
   \   00000004   AB48               LDR      R0,??MainSide_Paint_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0128               CMP      R0,#+1
   \   0000000A   03D1               BNE      ??MainSide_Paint_1
    585            {
    586              CopyToCanvas(ekran_komunikacja);
   \   0000000C   AA48               LDR      R0,??MainSide_Paint_0+0x4  ;; TextToChangeLength + 148
   \   0000000E   ........           BL       CopyToCanvas
   \   00000012   4BE1               B        ??MainSide_Paint_2
    587            }
    588            else
    589            {
    590            
    591                  char PaternDesign=ScreenLokal->PaternDesign;
   \                     ??MainSide_Paint_1:
   \   00000014   0698               LDR      R0,[SP, #+24]
   \   00000016   0478               LDRB     R4,[R0, #+0]
    592                  
    593                  CleanCanvas();
   \   00000018   ........           BL       CleanCanvas
    594                   char txt[10];
    595                 
    596              
    597                //CleanCanvas(); 
    598                
    599                
    600                SheetHistory[0]=0;
   \   0000001C   A749               LDR      R1,??MainSide_Paint_0+0x8  ;; TextToChangeLength
   \   0000001E   2020               MOVS     R0,#+32
   \   00000020   0022               MOVS     R2,#+0
   \   00000022   0A54               STRB     R2,[R1, R0]
    601                
    602                if ((SheetHistory[SheetHistoryIndex]!=CurrentSheet) && (CurrentSheet<sizeof(SheetHistory)-1))
   \   00000024   0879               LDRB     R0,[R1, #+4]
   \   00000026   CA79               LDRB     R2,[R1, #+7]
   \   00000028   8B18               ADDS     R3,R1,R2
   \   0000002A   2033               ADDS     R3,R3,#+32
   \   0000002C   1B78               LDRB     R3,[R3, #+0]
   \   0000002E   8342               CMP      R3,R0
   \   00000030   08D0               BEQ      ??MainSide_Paint_3
   \   00000032   1328               CMP      R0,#+19
   \   00000034   06D2               BCS      ??MainSide_Paint_3
    603                {
    604                    SheetHistory[++SheetHistoryIndex]=CurrentSheet;
   \   00000036   521C               ADDS     R2,R2,#+1
   \   00000038   CA71               STRB     R2,[R1, #+7]
   \   0000003A   1206               LSLS     R2,R2,#+24
   \   0000003C   120E               LSRS     R2,R2,#+24
   \   0000003E   8918               ADDS     R1,R1,R2
   \   00000040   2031               ADDS     R1,R1,#+32
   \   00000042   0870               STRB     R0,[R1, #+0]
    605                }
    606                  
    607                
    608                if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Paint(ScreenLokal);}
   \                     ??MainSide_Paint_3:
   \   00000044   0028               CMP      R0,#+0
   \   00000046   06D1               BNE      ??MainSide_Paint_4
   \   00000048   2100               MOVS     R1,R4
   \   0000004A   0829               CMP      R1,#+8
   \   0000004C   03D1               BNE      ??MainSide_Paint_4
   \                     ??MainSide_Paint_5:
   \   0000004E   0698               LDR      R0,[SP, #+24]
   \   00000050   ........           BL       Termostat_Paint
   \   00000054   2AE1               B        ??MainSide_Paint_2
    609                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Paint(ScreenLokal);}
   \                     ??MainSide_Paint_4:
   \   00000056   0028               CMP      R0,#+0
   \   00000058   02D0               BEQ      ??MainSide_Paint_6
   \   0000005A   2100               MOVS     R1,R4
   \   0000005C   0529               CMP      R1,#+5
   \   0000005E   F6D0               BEQ      ??MainSide_Paint_5
    610                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {Timetable_Paint(CurrentSheet);}
   \                     ??MainSide_Paint_6:
   \   00000060   0028               CMP      R0,#+0
   \   00000062   05D1               BNE      ??MainSide_Paint_7
   \   00000064   2100               MOVS     R1,R4
   \   00000066   0929               CMP      R1,#+9
   \   00000068   02D1               BNE      ??MainSide_Paint_7
   \   0000006A   ........           BL       Timetable_Paint
   \   0000006E   1DE1               B        ??MainSide_Paint_2
    611                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {Timetable_Paint(CurrentSheet);}  
   \                     ??MainSide_Paint_7:
   \   00000070   0028               CMP      R0,#+0
   \   00000072   05D0               BEQ      ??MainSide_Paint_8
   \   00000074   2100               MOVS     R1,R4
   \   00000076   0629               CMP      R1,#+6
   \   00000078   02D1               BNE      ??MainSide_Paint_8
   \   0000007A   ........           BL       Timetable_Paint
   \   0000007E   15E1               B        ??MainSide_Paint_2
    612                #ifdef __ALARM      
    613                      else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Paint(CurrentSheet);}
   \                     ??MainSide_Paint_8:
   \   00000080   0028               CMP      R0,#+0
   \   00000082   05D1               BNE      ??MainSide_Paint_9
   \   00000084   2100               MOVS     R1,R4
   \   00000086   0A29               CMP      R1,#+10
   \   00000088   02D1               BNE      ??MainSide_Paint_9
   \   0000008A   ........           BL       Alarm_Paint
   \   0000008E   0DE1               B        ??MainSide_Paint_2
    614                      else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Paint(CurrentSheet);} 
   \                     ??MainSide_Paint_9:
   \   00000090   0028               CMP      R0,#+0
   \   00000092   05D0               BEQ      ??MainSide_Paint_10
   \   00000094   2100               MOVS     R1,R4
   \   00000096   0729               CMP      R1,#+7
   \   00000098   02D1               BNE      ??MainSide_Paint_10
   \   0000009A   ........           BL       Alarm_Paint
   \   0000009E   05E1               B        ??MainSide_Paint_2
    615                #endif
    616                else  
    617                { 
    618                      
    619                      const _ScreenPaternDesign *ScreenPaternDesign;
    620                      if (CurrentSheet==0) 
   \                     ??MainSide_Paint_10:
   \   000000A0   0028               CMP      R0,#+0
   \   000000A2   02D1               BNE      ??MainSide_Paint_11
    621                      {
    622                        ScreenPaternDesign=ScreenSetTab_0;
   \   000000A4   8648               LDR      R0,??MainSide_Paint_0+0xC  ;; `?<Constant {129, 0}>` + 24
   \   000000A6   0090               STR      R0,[SP, #+0]
   \   000000A8   13E0               B        ??MainSide_Paint_12
    623                      }else{
    624                        ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Paint_11:
   \   000000AA   8648               LDR      R0,??MainSide_Paint_0+0x10  ;; `?<Constant {129, 0}>` + 992
   \   000000AC   0090               STR      R0,[SP, #+0]
    625                        List_Paint(ScreenLokal->Label,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   0800               MOVS     R0,R1
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   03B4               PUSH     {R0,R1}
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   83A0               ADR      R0,??MainSide_Paint_0+0x14  ;; 0x20, 0x00, 0x00, 0x00
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   0321               MOVS     R1,#+3
   \   000000BE   0020               MOVS     R0,#+0
   \   000000C0   03B4               PUSH     {R0,R1}
   \   000000C2   0300               MOVS     R3,R0
   \   000000C4   6C22               MOVS     R2,#+108
   \   000000C6   0121               MOVS     R1,#+1
   \   000000C8   1098               LDR      R0,[SP, #+64]
   \   000000CA   401C               ADDS     R0,R0,#+1
   \   000000CC   ........           BL       List_Paint
   \   000000D0   0AB0               ADD      SP,SP,#+40
    626                    
    627                      }  
    628                      
    629                      
    630                      
    631                      //grafika
    632                      for (char i=0; i<ScrenGraphNr; i++)
   \                     ??MainSide_Paint_12:
   \   000000D2   0025               MOVS     R5,#+0
   \   000000D4   1CE0               B        ??MainSide_Paint_13
    633                      {
    634                        if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??MainSide_Paint_14:
   \   000000D6   2000               MOVS     R0,R4
   \   000000D8   5821               MOVS     R1,#+88
   \   000000DA   4843               MULS     R0,R1,R0
   \   000000DC   0099               LDR      R1,[SP, #+0]
   \   000000DE   0818               ADDS     R0,R1,R0
   \   000000E0   2900               MOVS     R1,R5
   \   000000E2   8A00               LSLS     R2,R1,#+2
   \   000000E4   8018               ADDS     R0,R0,R2
   \   000000E6   2430               ADDS     R0,R0,#+36
   \   000000E8   8278               LDRB     R2,[R0, #+2]
   \   000000EA   002A               CMP      R2,#+0
   \   000000EC   0DD0               BEQ      ??MainSide_Paint_15
    635                        {
    636                                ScreenGraph(//(char poz_X , char poz_Y ,char width, char height,_Graph *Graph)
    637                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
    638                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
    639                                ScreenPaternDesign[PaternDesign].Graph[i].Width,
    640                                ScreenPaternDesign[PaternDesign].Graph[i].Height,
    641                                &(ScreenLokal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000000EE   82B0               SUB      SP,SP,#+8
   \   000000F0   0722               MOVS     R2,#+7
   \   000000F2   5143               MULS     R1,R2,R1
   \   000000F4   089A               LDR      R2,[SP, #+32]
   \   000000F6   5118               ADDS     R1,R2,R1
   \   000000F8   5331               ADDS     R1,R1,#+83
   \   000000FA   0091               STR      R1,[SP, #+0]
   \   000000FC   C378               LDRB     R3,[R0, #+3]
   \   000000FE   8278               LDRB     R2,[R0, #+2]
   \   00000100   4178               LDRB     R1,[R0, #+1]
   \   00000102   0078               LDRB     R0,[R0, #+0]
   \   00000104   ........           BL       ScreenGraph
   \   00000108   02B0               ADD      SP,SP,#+8
    642                        
    643                        }
    644                       }
   \                     ??MainSide_Paint_15:
   \   0000010A   6D1C               ADDS     R5,R5,#+1
   \   0000010C   2D06               LSLS     R5,R5,#+24
   \   0000010E   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_13:
   \   00000110   2800               MOVS     R0,R5
   \   00000112   0428               CMP      R0,#+4
   \   00000114   DFD3               BCC      ??MainSide_Paint_14
    645                      
    646                      
    647          
    648                    
    649          
    650                      
    651                      
    652                        //Analogi
    653                      char IlLiter=0;
    654                      signed short Value;
    655                      for (char i=0; i<ScrenAnalogNr; i++)
   \   00000116   0025               MOVS     R5,#+0
   \   00000118   2FE0               B        ??MainSide_Paint_16
    656                      {
    657                        if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
    658                        {         
    659                               if ((ScreenLokal->Analog[i].Nr>0) || ((ScreenLokal->Analog[i].Nr==0)&&(ScreenLokal->Analog[i].Reg>0)))
    660                               {
    661                               IlLiter=0;
    662                               Value=MainStage.StageI[ScreenLokal->Analog[i].Nr].Value[ScreenLokal->Analog[i].Reg];
    663          
    664                               if (Value&0x8000) //je¿eli sygna³ niewiarygodny
    665                               {
    666                                 txt[0]='-'; txt[1]='?';txt[2]='?';txt[3]='?'; txt[4]='-'; IlLiter+=5;
    667                               }else{ //je¿eli sygna³ wiarygodny
    668                                   if (ScreenLokal->Analog[i].Flip)
    669                                   {
    670                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
    671                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {txt[IlLiter++]=ScreenLokal->Analog[i].Text[k];}  
    672                                   }else{
    673                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {IlLiter++; txt[k]=ScreenLokal->Analog[i].Text[k];}  
   \                     ??MainSide_Paint_17:
   \   0000011A   1700               MOVS     R7,R2
   \   0000011C   029B               LDR      R3,[SP, #+8]
   \   0000011E   DB19               ADDS     R3,R3,R7
   \   00000120   7026               MOVS     R6,#+112
   \   00000122   9E5D               LDRB     R6,[R3, R6]
   \   00000124   002E               CMP      R6,#+0
   \   00000126   06D0               BEQ      ??MainSide_Paint_18
   \   00000128   491C               ADDS     R1,R1,#+1
   \   0000012A   0906               LSLS     R1,R1,#+24
   \   0000012C   090E               LSRS     R1,R1,#+24
   \   0000012E   03AE               ADD      R6,SP,#+12
   \   00000130   7033               ADDS     R3,R3,#+112
   \   00000132   1B78               LDRB     R3,[R3, #+0]
   \   00000134   F355               STRB     R3,[R6, R7]
   \                     ??MainSide_Paint_18:
   \   00000136   521C               ADDS     R2,R2,#+1
   \   00000138   1206               LSLS     R2,R2,#+24
   \   0000013A   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Paint_19:
   \   0000013C   1300               MOVS     R3,R2
   \   0000013E   032B               CMP      R3,#+3
   \   00000140   EBD3               BCC      ??MainSide_Paint_17
    674                                       IlLiter+=sIntToStr(Value, &(txt[IlLiter])); //(char Value, char *Vstring, char ill);
   \   00000142   0E00               MOVS     R6,R1
   \   00000144   03AA               ADD      R2,SP,#+12
   \   00000146   5118               ADDS     R1,R2,R1
   \   00000148   ........           BL       sIntToStr
   \   0000014C   3218               ADDS     R2,R6,R0
   \   0000014E   1206               LSLS     R2,R2,#+24
   \   00000150   120E               LSRS     R2,R2,#+24
    675                                   }
    676                               }  
    677                                   Label(txt,0,
    678                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.x, 
    679                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.y,IlLiter,
    680                                         ScreenPaternDesign[PaternDesign].Value[i].Width,
    681                                         0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Paint_20:
   \   00000152   82B0               SUB      SP,SP,#+8
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   0090               STR      R0,[SP, #+0]
   \   00000158   7821               MOVS     R1,#+120
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   0598               LDR      R0,[SP, #+20]
   \   0000015E   8178               LDRB     R1,[R0, #+2]
   \   00000160   1000               MOVS     R0,R2
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   0798               LDR      R0,[SP, #+28]
   \   00000166   4378               LDRB     R3,[R0, #+1]
   \   00000168   0278               LDRB     R2,[R0, #+0]
   \   0000016A   0021               MOVS     R1,#+0
   \   0000016C   09A8               ADD      R0,SP,#+36
   \   0000016E   ........           BL       Label
   \   00000172   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Paint_21:
   \   00000174   6D1C               ADDS     R5,R5,#+1
   \   00000176   2D06               LSLS     R5,R5,#+24
   \   00000178   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_16:
   \   0000017A   2800               MOVS     R0,R5
   \   0000017C   0428               CMP      R0,#+4
   \   0000017E   4ED2               BCS      ??MainSide_Paint_22
   \   00000180   2000               MOVS     R0,R4
   \   00000182   5821               MOVS     R1,#+88
   \   00000184   4843               MULS     R0,R1,R0
   \   00000186   0099               LDR      R1,[SP, #+0]
   \   00000188   0818               ADDS     R0,R1,R0
   \   0000018A   2900               MOVS     R1,R5
   \   0000018C   8A00               LSLS     R2,R1,#+2
   \   0000018E   8018               ADDS     R0,R0,R2
   \   00000190   3430               ADDS     R0,R0,#+52
   \   00000192   0190               STR      R0,[SP, #+4]
   \   00000194   8078               LDRB     R0,[R0, #+2]
   \   00000196   0028               CMP      R0,#+0
   \   00000198   ECD0               BEQ      ??MainSide_Paint_21
   \   0000019A   0720               MOVS     R0,#+7
   \   0000019C   4143               MULS     R1,R0,R1
   \   0000019E   0698               LDR      R0,[SP, #+24]
   \   000001A0   4018               ADDS     R0,R0,R1
   \   000001A2   0290               STR      R0,[SP, #+8]
   \   000001A4   0200               MOVS     R2,R0
   \   000001A6   7332               ADDS     R2,R2,#+115
   \   000001A8   1078               LDRB     R0,[R2, #+0]
   \   000001AA   0028               CMP      R0,#+0
   \   000001AC   03D1               BNE      ??MainSide_Paint_23
   \   000001AE   E1D1               BNE      ??MainSide_Paint_21
   \   000001B0   5078               LDRB     R0,[R2, #+1]
   \   000001B2   0028               CMP      R0,#+0
   \   000001B4   DED0               BEQ      ??MainSide_Paint_21
   \                     ??MainSide_Paint_23:
   \   000001B6   0021               MOVS     R1,#+0
   \   000001B8   A020               MOVS     R0,#+160
   \   000001BA   5378               LDRB     R3,[R2, #+1]
   \   000001BC   5B00               LSLS     R3,R3,#+1
   \   000001BE   1678               LDRB     R6,[R2, #+0]
   \   000001C0   1427               MOVS     R7,#+20
   \   000001C2   7E43               MULS     R6,R7,R6
   \   000001C4   414F               LDR      R7,??MainSide_Paint_0+0x18  ;; MainStage
   \   000001C6   BE19               ADDS     R6,R7,R6
   \   000001C8   F318               ADDS     R3,R6,R3
   \   000001CA   185E               LDRSH    R0,[R3, R0]
   \   000001CC   0304               LSLS     R3,R0,#+16
   \   000001CE   09D5               BPL      ??MainSide_Paint_24
   \   000001D0   2D20               MOVS     R0,#+45
   \   000001D2   03A9               ADD      R1,SP,#+12
   \   000001D4   0870               STRB     R0,[R1, #+0]
   \   000001D6   3F22               MOVS     R2,#+63
   \   000001D8   4A70               STRB     R2,[R1, #+1]
   \   000001DA   8A70               STRB     R2,[R1, #+2]
   \   000001DC   CA70               STRB     R2,[R1, #+3]
   \   000001DE   0871               STRB     R0,[R1, #+4]
   \   000001E0   0522               MOVS     R2,#+5
   \   000001E2   B6E7               B        ??MainSide_Paint_20
   \                     ??MainSide_Paint_24:
   \   000001E4   9278               LDRB     R2,[R2, #+2]
   \   000001E6   002A               CMP      R2,#+0
   \   000001E8   A8D0               BEQ      ??MainSide_Paint_19
   \   000001EA   03A9               ADD      R1,SP,#+12
   \   000001EC   ........           BL       sIntToStr
   \   000001F0   0200               MOVS     R2,R0
   \   000001F2   0020               MOVS     R0,#+0
   \                     ??MainSide_Paint_25:
   \   000001F4   0100               MOVS     R1,R0
   \   000001F6   0329               CMP      R1,#+3
   \   000001F8   ABD2               BCS      ??MainSide_Paint_20
   \   000001FA   029B               LDR      R3,[SP, #+8]
   \   000001FC   5918               ADDS     R1,R3,R1
   \   000001FE   7023               MOVS     R3,#+112
   \   00000200   CB5C               LDRB     R3,[R1, R3]
   \   00000202   002B               CMP      R3,#+0
   \   00000204   07D0               BEQ      ??MainSide_Paint_26
   \   00000206   1300               MOVS     R3,R2
   \   00000208   03AE               ADD      R6,SP,#+12
   \   0000020A   7031               ADDS     R1,R1,#+112
   \   0000020C   0978               LDRB     R1,[R1, #+0]
   \   0000020E   F154               STRB     R1,[R6, R3]
   \   00000210   521C               ADDS     R2,R2,#+1
   \   00000212   1206               LSLS     R2,R2,#+24
   \   00000214   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Paint_26:
   \   00000216   401C               ADDS     R0,R0,#+1
   \   00000218   0006               LSLS     R0,R0,#+24
   \   0000021A   000E               LSRS     R0,R0,#+24
   \   0000021C   EAE7               B        ??MainSide_Paint_25
    682                               
    683                               }
    684                       }
    685                      }
    686                    
    687                       //Linie
    688                       for (char i=0; i<ScrenLineNr; i++)
   \                     ??MainSide_Paint_22:
   \   0000021E   0025               MOVS     R5,#+0
   \   00000220   08E0               B        ??MainSide_Paint_27
    689                       {
    690                        if (ScreenPaternDesign[PaternDesign].Line[i].Width>0)
    691                        {
    692                            if (ScreenPaternDesign[PaternDesign].Line[i].Width>ScreenPaternDesign[PaternDesign].Line[i].Height)
    693                            {
    694                                H_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Width,1); // (char X, int Y, char lenght, char typ)
    695                            }else{
    696                                V_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Height,1); // (char X, int Y, char lenght, char typ)
   \                     ??MainSide_Paint_28:
   \   00000222   0123               MOVS     R3,#+1
   \   00000224   0A00               MOVS     R2,R1
   \   00000226   4178               LDRB     R1,[R0, #+1]
   \   00000228   0078               LDRB     R0,[R0, #+0]
   \   0000022A   ........           BL       V_line
    697                        
    698                            }
   \                     ??MainSide_Paint_29:
   \   0000022E   6D1C               ADDS     R5,R5,#+1
   \   00000230   2D06               LSLS     R5,R5,#+24
   \   00000232   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_27:
   \   00000234   2800               MOVS     R0,R5
   \   00000236   0228               CMP      R0,#+2
   \   00000238   15D2               BCS      ??MainSide_Paint_30
   \   0000023A   2000               MOVS     R0,R4
   \   0000023C   5821               MOVS     R1,#+88
   \   0000023E   4843               MULS     R0,R1,R0
   \   00000240   0099               LDR      R1,[SP, #+0]
   \   00000242   0818               ADDS     R0,R1,R0
   \   00000244   2900               MOVS     R1,R5
   \   00000246   8900               LSLS     R1,R1,#+2
   \   00000248   4018               ADDS     R0,R0,R1
   \   0000024A   4430               ADDS     R0,R0,#+68
   \   0000024C   8178               LDRB     R1,[R0, #+2]
   \   0000024E   0029               CMP      R1,#+0
   \   00000250   EDD0               BEQ      ??MainSide_Paint_29
   \   00000252   C178               LDRB     R1,[R0, #+3]
   \   00000254   8278               LDRB     R2,[R0, #+2]
   \   00000256   9142               CMP      R1,R2
   \   00000258   E3D2               BCS      ??MainSide_Paint_28
   \   0000025A   0123               MOVS     R3,#+1
   \   0000025C   4178               LDRB     R1,[R0, #+1]
   \   0000025E   0078               LDRB     R0,[R0, #+0]
   \   00000260   ........           BL       H_line
   \   00000264   E3E7               B        ??MainSide_Paint_29
    699                        }
    700                       }
    701                      
    702                                  
    703                         //przyciski
    704                      for (char i=0; i<ScrenButtonNr; i++)
   \                     ??MainSide_Paint_30:
   \   00000266   0025               MOVS     R5,#+0
   \   00000268   1DE0               B        ??MainSide_Paint_31
    705                      {
    706                        if ((ScreenPaternDesign[PaternDesign].Button[i].Width>0) && (ScreenLokal->Button[i].Hide==0))
   \                     ??MainSide_Paint_32:
   \   0000026A   2000               MOVS     R0,R4
   \   0000026C   5821               MOVS     R1,#+88
   \   0000026E   4843               MULS     R0,R1,R0
   \   00000270   0099               LDR      R1,[SP, #+0]
   \   00000272   0818               ADDS     R0,R1,R0
   \   00000274   2A00               MOVS     R2,R5
   \   00000276   9100               LSLS     R1,R2,#+2
   \   00000278   4118               ADDS     R1,R0,R1
   \   0000027A   8878               LDRB     R0,[R1, #+2]
   \   0000027C   0028               CMP      R0,#+0
   \   0000027E   0FD0               BEQ      ??MainSide_Paint_33
   \   00000280   D000               LSLS     R0,R2,#+3
   \   00000282   069A               LDR      R2,[SP, #+24]
   \   00000284   1018               ADDS     R0,R2,R0
   \   00000286   827C               LDRB     R2,[R0, #+18]
   \   00000288   D206               LSLS     R2,R2,#+27
   \   0000028A   09D4               BMI      ??MainSide_Paint_33
    707                        {
    708                                Button(ScreenLokal->Button[i].Text,
    709                                ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
    710                                ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
    711                                ScreenPaternDesign[PaternDesign].Button[i].Width,
    712                                ScreenPaternDesign[PaternDesign].Button[i].Height); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000028C   82B0               SUB      SP,SP,#+8
   \   0000028E   CA78               LDRB     R2,[R1, #+3]
   \   00000290   0092               STR      R2,[SP, #+0]
   \   00000292   8B78               LDRB     R3,[R1, #+2]
   \   00000294   4A78               LDRB     R2,[R1, #+1]
   \   00000296   0978               LDRB     R1,[R1, #+0]
   \   00000298   0B30               ADDS     R0,R0,#+11
   \   0000029A   ........           BL       Button
   \   0000029E   02B0               ADD      SP,SP,#+8
    713                       
    714                        }
    715                       }
   \                     ??MainSide_Paint_33:
   \   000002A0   6D1C               ADDS     R5,R5,#+1
   \   000002A2   2D06               LSLS     R5,R5,#+24
   \   000002A4   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Paint_31:
   \   000002A6   2800               MOVS     R0,R5
   \   000002A8   0928               CMP      R0,#+9
   \   000002AA   DED3               BCC      ??MainSide_Paint_32
    716                      
    717                      
    718                      //Du¿a temperatura
    719          
    720                
    721                  
    722                }
    723            }
    724          }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??MainSide_Paint_2:
   \   000002AC   07B0               ADD      SP,SP,#+28
   \   000002AE   F0BC               POP      {R4-R7}
   \   000002B0   01BC               POP      {R0}
   \   000002B2   0047               BX       R0               ;; return
   \                     ??MainSide_Paint_0:
   \   000002B4   ........           DC32     g_PC_Connected
   \   000002B8   ........           DC32     TextToChangeLength + 148
   \   000002BC   ........           DC32     TextToChangeLength
   \   000002C0   ........           DC32     `?<Constant {129, 0}>` + 24
   \   000002C4   ........           DC32     `?<Constant {129, 0}>` + 992
   \   000002C8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002CC   ........           DC32     MainStage
    725          
    726          
    727          
    728          
    729          //*-----------------------------------------------------------------------------
    730          //* Nazwa funkcji :    Message
    731          //* Funkcja wywietlenia wiadomoci   
    732          //*-----------------------------------------------------------------------------
    733          //*  String   - wskanik na tekst
    734          //*  StringLength - d³ugoæ tekstu
    735          //*-----------------------------------------------------------------------------
    736          #define MAX_LITER_W_LINI   14

   \                                 In section Debug.txt, align 4, keep-with-next
    737          void MESSAGE(char *String)
    738          {
   \                     MESSAGE:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   9EB0               SUB      SP,SP,#+120
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   02E0               B        ??MESSAGE_0
    739            
    740               char StrTmp[8][15];
    741               char StringLength=0;
    742               
    743               while (String[StringLength]>0) StringLength++;                             //okrelenie d³ugoci stringu         
   \                     ??MESSAGE_1:
   \   00000008   401C               ADDS     R0,R0,#+1
   \   0000000A   0006               LSLS     R0,R0,#+24
   \   0000000C   000E               LSRS     R0,R0,#+24
   \                     ??MESSAGE_0:
   \   0000000E   0100               MOVS     R1,R0
   \   00000010   1E9A               LDR      R2,[SP, #+120]
   \   00000012   515C               LDRB     R1,[R2, R1]
   \   00000014   0029               CMP      R1,#+0
   \   00000016   F7D1               BNE      ??MESSAGE_1
    744               
    745              char znak=0;
    746              char ZWL=0; //znak w linii
    747              char SPC=0; //spacja
    748              char Wiersz=0;
   \   00000018   0024               MOVS     R4,#+0
   \   0000001A   3DE0               B        ??MESSAGE_2
    749              while (znak<StringLength)
    750              {
    751                 ZWL=0;
    752                 SPC=znak;
    753                 while ((ZWL<MAX_LITER_W_LINI+1) && (znak+ZWL<=StringLength))
    754                 {
    755                     if (String[znak+ZWL]=='\n')     //je¿eli nastêpna linia
    756                     {
    757                       SPC=znak+ZWL;
    758                       break; 
    759                     }else if((String[znak+ZWL]==0) || (String[znak+ZWL]==' ') || ((String[znak+ZWL]=='.') && (String[znak+ZWL+1]!=' ')))     //je¿eli spacja lub kropka bez spacji na koñcu linii
    760                     {  
    761                        SPC=znak+ZWL;
    762                     }  
    763                     ZWL++;
    764                 }
    765                 if(znak+ZWL>=StringLength) SPC=StringLength;
    766                 
    767                 ZWL=0;
    768                 char ZWL=0;
    769                 while ((znak<SPC) && (ZWL<MAX_LITER_W_LINI))  
    770                 {
    771                   StrTmp[Wiersz][ZWL++]=String[znak++];
   \                     ??MESSAGE_3:
   \   0000001C   1700               MOVS     R7,R2
   \   0000001E   2500               MOVS     R5,R4
   \   00000020   0F26               MOVS     R6,#+15
   \   00000022   7543               MULS     R5,R6,R5
   \   00000024   6E46               MOV      R6,SP
   \   00000026   7619               ADDS     R6,R6,R5
   \   00000028   B446               MOV      R12,R6
   \   0000002A   0E00               MOVS     R6,R1
   \   0000002C   1E9D               LDR      R5,[SP, #+120]
   \   0000002E   AD5D               LDRB     R5,[R5, R6]
   \   00000030   6646               MOV      R6,R12
   \   00000032   F555               STRB     R5,[R6, R7]
   \   00000034   491C               ADDS     R1,R1,#+1
   \   00000036   0906               LSLS     R1,R1,#+24
   \   00000038   090E               LSRS     R1,R1,#+24
   \   0000003A   521C               ADDS     R2,R2,#+1
   \   0000003C   1206               LSLS     R2,R2,#+24
   \   0000003E   120E               LSRS     R2,R2,#+24
    772                 }
   \                     ??MESSAGE_4:
   \   00000040   0D00               MOVS     R5,R1
   \   00000042   1B06               LSLS     R3,R3,#+24
   \   00000044   1B0E               LSRS     R3,R3,#+24
   \   00000046   9D42               CMP      R5,R3
   \   00000048   02D2               BCS      ??MESSAGE_5
   \   0000004A   1500               MOVS     R5,R2
   \   0000004C   0E2D               CMP      R5,#+14
   \   0000004E   E5D3               BCC      ??MESSAGE_3
    773                 StrTmp[Wiersz][ZWL]=0;
   \                     ??MESSAGE_5:
   \   00000050   2300               MOVS     R3,R4
   \   00000052   0F25               MOVS     R5,#+15
   \   00000054   6B43               MULS     R3,R5,R3
   \   00000056   6D46               MOV      R5,SP
   \   00000058   EB18               ADDS     R3,R5,R3
   \   0000005A   0025               MOVS     R5,#+0
   \   0000005C   9D54               STRB     R5,[R3, R2]
    774                 if (String[znak]==' ') znak++;
   \   0000005E   0A00               MOVS     R2,R1
   \   00000060   1E9B               LDR      R3,[SP, #+120]
   \   00000062   9A5C               LDRB     R2,[R3, R2]
   \   00000064   202A               CMP      R2,#+32
   \   00000066   02D1               BNE      ??MESSAGE_6
   \   00000068   491C               ADDS     R1,R1,#+1
   \   0000006A   0906               LSLS     R1,R1,#+24
   \   0000006C   090E               LSRS     R1,R1,#+24
    775                 if (String[znak]=='\n') znak++;
   \                     ??MESSAGE_6:
   \   0000006E   0A00               MOVS     R2,R1
   \   00000070   9A5C               LDRB     R2,[R3, R2]
   \   00000072   0A2A               CMP      R2,#+10
   \   00000074   02D1               BNE      ??MESSAGE_7
   \   00000076   491C               ADDS     R1,R1,#+1
   \   00000078   0906               LSLS     R1,R1,#+24
   \   0000007A   090E               LSRS     R1,R1,#+24
    776                 if (String[znak]==' ') znak++;
   \                     ??MESSAGE_7:
   \   0000007C   0A00               MOVS     R2,R1
   \   0000007E   9A5C               LDRB     R2,[R3, R2]
   \   00000080   202A               CMP      R2,#+32
   \   00000082   02D1               BNE      ??MESSAGE_8
   \   00000084   491C               ADDS     R1,R1,#+1
   \   00000086   0906               LSLS     R1,R1,#+24
   \   00000088   090E               LSRS     R1,R1,#+24
    777                 
    778                 
    779                 
    780                 if (znak<StringLength)Wiersz++;
   \                     ??MESSAGE_8:
   \   0000008A   0A00               MOVS     R2,R1
   \   0000008C   0300               MOVS     R3,R0
   \   0000008E   9A42               CMP      R2,R3
   \   00000090   02D2               BCS      ??MESSAGE_2
   \   00000092   641C               ADDS     R4,R4,#+1
   \   00000094   2406               LSLS     R4,R4,#+24
   \   00000096   240E               LSRS     R4,R4,#+24
   \                     ??MESSAGE_2:
   \   00000098   0A00               MOVS     R2,R1
   \   0000009A   0300               MOVS     R3,R0
   \   0000009C   9A42               CMP      R2,R3
   \   0000009E   27D2               BCS      ??MESSAGE_9
   \   000000A0   0022               MOVS     R2,#+0
   \   000000A2   0B00               MOVS     R3,R1
   \   000000A4   0EE0               B        ??MESSAGE_10
   \                     ??MESSAGE_11:
   \   000000A6   3E00               MOVS     R6,R7
   \   000000A8   06D0               BEQ      ??MESSAGE_12
   \   000000AA   202E               CMP      R6,#+32
   \   000000AC   04D0               BEQ      ??MESSAGE_12
   \   000000AE   2E2E               CMP      R6,#+46
   \   000000B0   05D1               BNE      ??MESSAGE_13
   \   000000B2   6D78               LDRB     R5,[R5, #+1]
   \   000000B4   202D               CMP      R5,#+32
   \   000000B6   02D0               BEQ      ??MESSAGE_13
   \                     ??MESSAGE_12:
   \   000000B8   0B00               MOVS     R3,R1
   \   000000BA   1500               MOVS     R5,R2
   \   000000BC   5B19               ADDS     R3,R3,R5
   \                     ??MESSAGE_13:
   \   000000BE   521C               ADDS     R2,R2,#+1
   \   000000C0   1206               LSLS     R2,R2,#+24
   \   000000C2   120E               LSRS     R2,R2,#+24
   \                     ??MESSAGE_10:
   \   000000C4   0D00               MOVS     R5,R1
   \   000000C6   1600               MOVS     R6,R2
   \   000000C8   AE19               ADDS     R6,R5,R6
   \   000000CA   1500               MOVS     R5,R2
   \   000000CC   0F2D               CMP      R5,#+15
   \   000000CE   09D2               BCS      ??MESSAGE_14
   \   000000D0   0500               MOVS     R5,R0
   \   000000D2   B542               CMP      R5,R6
   \   000000D4   06DB               BLT      ??MESSAGE_14
   \   000000D6   1E9D               LDR      R5,[SP, #+120]
   \   000000D8   AD19               ADDS     R5,R5,R6
   \   000000DA   2F78               LDRB     R7,[R5, #+0]
   \   000000DC   0A2F               CMP      R7,#+10
   \   000000DE   E2D1               BNE      ??MESSAGE_11
   \   000000E0   0B00               MOVS     R3,R1
   \   000000E2   9B18               ADDS     R3,R3,R2
   \                     ??MESSAGE_14:
   \   000000E4   0200               MOVS     R2,R0
   \   000000E6   9642               CMP      R6,R2
   \   000000E8   00DB               BLT      ??MESSAGE_15
   \   000000EA   0300               MOVS     R3,R0
   \                     ??MESSAGE_15:
   \   000000EC   0022               MOVS     R2,#+0
   \   000000EE   A7E7               B        ??MESSAGE_4
    781              }
    782               
    783               
    784          
    785              CleanCanvas();
   \                     ??MESSAGE_9:
   \   000000F0   ........           BL       CleanCanvas
    786              
    787              char BazeY=56+10*(Wiersz/2);
   \   000000F4   2000               MOVS     R0,R4
   \   000000F6   0500               MOVS     R5,R0
   \   000000F8   2D06               LSLS     R5,R5,#+24
   \   000000FA   2D0E               LSRS     R5,R5,#+24
   \   000000FC   6D08               LSRS     R5,R5,#+1
   \   000000FE   0A26               MOVS     R6,#+10
   \   00000100   6E43               MULS     R6,R5,R6
   \   00000102   3836               ADDS     R6,R6,#+56
   \   00000104   3606               LSLS     R6,R6,#+24
   \   00000106   360E               LSRS     R6,R6,#+24
    788             
    789               Label(" INFO ",2,2,BazeY+17,15,59,0,127,1);      //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000108   82B0               SUB      SP,SP,#+8
   \   0000010A   0120               MOVS     R0,#+1
   \   0000010C   0090               STR      R0,[SP, #+0]
   \   0000010E   7F21               MOVS     R1,#+127
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   03B4               PUSH     {R0,R1}
   \   00000114   3B21               MOVS     R1,#+59
   \   00000116   0F20               MOVS     R0,#+15
   \   00000118   03B4               PUSH     {R0,R1}
   \   0000011A   3300               MOVS     R3,R6
   \   0000011C   1133               ADDS     R3,R3,#+17
   \   0000011E   0222               MOVS     R2,#+2
   \   00000120   1100               MOVS     R1,R2
   \   00000122   3348               LDR      R0,??MESSAGE_16  ;; `?<Constant " INFO ">`
   \   00000124   ........           BL       Label
   \   00000128   06B0               ADD      SP,SP,#+24
    790              
    791               
    792               
    793              for (char i=0; i<=Wiersz; i++)
   \   0000012A   0027               MOVS     R7,#+0
   \   0000012C   1AE0               B        ??MESSAGE_17
    794              {
    795                  Label(StrTmp[i],0,2,BazeY,15,56,0,127,0);      //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??MESSAGE_18:
   \   0000012E   82B0               SUB      SP,SP,#+8
   \   00000130   0020               MOVS     R0,#+0
   \   00000132   0090               STR      R0,[SP, #+0]
   \   00000134   7F21               MOVS     R1,#+127
   \   00000136   03B4               PUSH     {R0,R1}
   \   00000138   3821               MOVS     R1,#+56
   \   0000013A   0F20               MOVS     R0,#+15
   \   0000013C   03B4               PUSH     {R0,R1}
   \   0000013E   3300               MOVS     R3,R6
   \   00000140   0222               MOVS     R2,#+2
   \   00000142   0021               MOVS     R1,#+0
   \   00000144   8C46               MOV      R12,R1
   \   00000146   3800               MOVS     R0,R7
   \   00000148   0F21               MOVS     R1,#+15
   \   0000014A   4843               MULS     R0,R1,R0
   \   0000014C   06A9               ADD      R1,SP,#+24
   \   0000014E   0818               ADDS     R0,R1,R0
   \   00000150   6146               MOV      R1,R12
   \   00000152   ........           BL       Label
   \   00000156   06B0               ADD      SP,SP,#+24
    796                  BazeY=BazeY-10;
   \   00000158   0A3E               SUBS     R6,R6,#+10
   \   0000015A   3606               LSLS     R6,R6,#+24
   \   0000015C   360E               LSRS     R6,R6,#+24
    797              }
   \   0000015E   7F1C               ADDS     R7,R7,#+1
   \   00000160   3F06               LSLS     R7,R7,#+24
   \   00000162   3F0E               LSRS     R7,R7,#+24
   \                     ??MESSAGE_17:
   \   00000164   2000               MOVS     R0,R4
   \   00000166   3900               MOVS     R1,R7
   \   00000168   8842               CMP      R0,R1
   \   0000016A   E0D2               BCS      ??MESSAGE_18
    798             
    799              
    800              
    801              char PozD=BazeY+3; 
   \   0000016C   3000               MOVS     R0,R6
   \   0000016E   C01C               ADDS     R0,R0,#+3
   \   00000170   0006               LSLS     R0,R0,#+24
   \   00000172   000E               LSRS     R0,R0,#+24
    802              char PozG=BazeY+10*(Wiersz+1)+15; 
   \   00000174   0A21               MOVS     R1,#+10
   \   00000176   4C43               MULS     R4,R1,R4
   \   00000178   3419               ADDS     R4,R6,R4
   \   0000017A   1934               ADDS     R4,R4,#+25
   \   0000017C   2406               LSLS     R4,R4,#+24
   \   0000017E   240E               LSRS     R4,R4,#+24
    803              char Wys=PozG-PozD;
   \   00000180   2100               MOVS     R1,R4
   \   00000182   0200               MOVS     R2,R0
   \   00000184   8F1A               SUBS     R7,R1,R2
   \   00000186   3F06               LSLS     R7,R7,#+24
   \   00000188   3F0E               LSRS     R7,R7,#+24
    804              V_line(0,PozD-2,Wys+14,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   0000018A   801E               SUBS     R0,R0,#+2
   \   0000018C   0600               MOVS     R6,R0
   \   0000018E   0E37               ADDS     R7,R7,#+14
   \   00000190   0123               MOVS     R3,#+1
   \   00000192   3A00               MOVS     R2,R7
   \   00000194   1206               LSLS     R2,R2,#+24
   \   00000196   120E               LSRS     R2,R2,#+24
   \   00000198   3100               MOVS     R1,R6
   \   0000019A   0020               MOVS     R0,#+0
   \   0000019C   ........           BL       V_line
    805              V_line(63,PozD-2,Wys+14,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001A0   0123               MOVS     R3,#+1
   \   000001A2   3A00               MOVS     R2,R7
   \   000001A4   1206               LSLS     R2,R2,#+24
   \   000001A6   120E               LSRS     R2,R2,#+24
   \   000001A8   3100               MOVS     R1,R6
   \   000001AA   3F20               MOVS     R0,#+63
   \   000001AC   ........           BL       V_line
    806              H_line(0,PozG+12,74,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001B0   0123               MOVS     R3,#+1
   \   000001B2   4A22               MOVS     R2,#+74
   \   000001B4   2100               MOVS     R1,R4
   \   000001B6   0C31               ADDS     R1,R1,#+12
   \   000001B8   0020               MOVS     R0,#+0
   \   000001BA   ........           BL       H_line
    807              H_line(2,PozG,60,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001BE   0123               MOVS     R3,#+1
   \   000001C0   3C22               MOVS     R2,#+60
   \   000001C2   2100               MOVS     R1,R4
   \   000001C4   0220               MOVS     R0,#+2
   \   000001C6   ........           BL       H_line
    808              H_line(0,PozD-2,64,1); //(char X, int Y, char lenght, char typ{0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana}) 
   \   000001CA   0123               MOVS     R3,#+1
   \   000001CC   4022               MOVS     R2,#+64
   \   000001CE   3100               MOVS     R1,R6
   \   000001D0   0020               MOVS     R0,#+0
   \   000001D2   ........           BL       H_line
    809          
    810              
    811              g_Message=g_counter+(5+(Wiersz/2))*700;         //czas wywietlania wiadomoci (jednostka- ms)
   \   000001D6   074A               LDR      R2,??MESSAGE_16+0x4  ;; g_Message
   \   000001D8   0748               LDR      R0,??MESSAGE_16+0x8  ;; g_counter
   \   000001DA   03C8               LDM      R0!,{R0,R1}
   \   000001DC   6D1D               ADDS     R5,R5,#+5
   \   000001DE   AF21               MOVS     R1,#+175
   \   000001E0   8900               LSLS     R1,R1,#+2        ;; #+700
   \   000001E2   4D43               MULS     R5,R1,R5
   \   000001E4   4019               ADDS     R0,R0,R5
   \   000001E6   1060               STR      R0,[R2, #+0]
    812          }
   \   000001E8   1FB0               ADD      SP,SP,#+124
   \   000001EA   F0BC               POP      {R4-R7}
   \   000001EC   01BC               POP      {R0}
   \   000001EE   0047               BX       R0               ;; return
   \                     ??MESSAGE_16:
   \   000001F0   ........           DC32     `?<Constant " INFO ">`
   \   000001F4   ........           DC32     g_Message
   \   000001F8   ........           DC32     g_counter
    813          
    814          
    815          
    816          
    817          //*-----------------------------------------------------------------------------
    818          //* Nazwa funkcji :    MainSide_Refresh
    819          //* Funkcja strony g³ównej menu
    820          //*-----------------------------------------------------------------------------
    821          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    822          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    823          void MESSAGE_Refresh(void)
    824          {
   \                     MESSAGE_Refresh:
   \   00000000   30B5               PUSH     {R4,R5,LR}
   \   00000002   87B0               SUB      SP,SP,#+28
    825          
    826             
    827             if ((MainSide_puls==0) || (MainSide_puls>1))
   \   00000004   214C               LDR      R4,??MESSAGE_Refresh_0  ;; MainSide_puls
   \   00000006   2578               LDRB     R5,[R4, #+0]
   \   00000008   002D               CMP      R5,#+0
   \   0000000A   01D0               BEQ      ??MESSAGE_Refresh_1
   \   0000000C   022D               CMP      R5,#+2
   \   0000000E   17D3               BCC      ??MESSAGE_Refresh_2
    828              { 
    829                char ekran1[2][13] = {
    830                           {0,0,224,24,232,244,244,244,232,24,224,0,0},
    831                            {0,0,0,3,2,5,5,5,2,3,0,0,0}
    832                            };
   \                     ??MESSAGE_Refresh_1:
   \   00000010   6846               MOV      R0,SP
   \   00000012   1F49               LDR      R1,??MESSAGE_Refresh_0+0x4  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`
   \   00000014   1C22               MOVS     R2,#+28
   \   00000016   ........           BL       __aeabi_memcpy4
    833                
    834                for (char i=0; i<=12; i++)
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   0DE0               B        ??MESSAGE_Refresh_3
    835                {
    836                   
    837                    LCD_Canvas[0][i]=ekran1[0][i];
   \                     ??MESSAGE_Refresh_4:
   \   0000001E   0A00               MOVS     R2,R1
   \   00000020   1C48               LDR      R0,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   00000022   6B46               MOV      R3,SP
   \   00000024   9B5C               LDRB     R3,[R3, R2]
   \   00000026   8354               STRB     R3,[R0, R2]
    838                    LCD_Canvas[1][i]=ekran1[1][i];
   \   00000028   8018               ADDS     R0,R0,R2
   \   0000002A   8030               ADDS     R0,R0,#+128
   \   0000002C   6B46               MOV      R3,SP
   \   0000002E   9A18               ADDS     R2,R3,R2
   \   00000030   527B               LDRB     R2,[R2, #+13]
   \   00000032   0270               STRB     R2,[R0, #+0]
    839                }
   \   00000034   491C               ADDS     R1,R1,#+1
   \   00000036   0906               LSLS     R1,R1,#+24
   \   00000038   090E               LSRS     R1,R1,#+24
   \                     ??MESSAGE_Refresh_3:
   \   0000003A   0800               MOVS     R0,R1
   \   0000003C   0D28               CMP      R0,#+13
   \   0000003E   EED3               BCC      ??MESSAGE_Refresh_4
    840                
    841              }
    842              if ((MainSide_puls==1))
   \                     ??MESSAGE_Refresh_2:
   \   00000040   012D               CMP      R5,#+1
   \   00000042   17D1               BNE      ??MESSAGE_Refresh_5
    843              {
    844                
    845                
    846                char ekran2[2][13] = {
    847                            {240,28,230,250,251,253,253,253,251,250,230,28,240},
    848                            {1,7,12,11,27,23,23,23,27,11,12,7,1},
    849                            };
   \   00000044   6846               MOV      R0,SP
   \   00000046   1449               LDR      R1,??MESSAGE_Refresh_0+0xC  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244` + 28
   \   00000048   1C22               MOVS     R2,#+28
   \   0000004A   ........           BL       __aeabi_memcpy4
    850                
    851                for (char i=0; i<=12; i++)
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   0DE0               B        ??MESSAGE_Refresh_6
    852                {
    853                   
    854                    LCD_Canvas[0][i]=ekran2[0][i];
   \                     ??MESSAGE_Refresh_7:
   \   00000052   0A00               MOVS     R2,R1
   \   00000054   0F48               LDR      R0,??MESSAGE_Refresh_0+0x8  ;; LCD_Canvas
   \   00000056   6B46               MOV      R3,SP
   \   00000058   9B5C               LDRB     R3,[R3, R2]
   \   0000005A   8354               STRB     R3,[R0, R2]
    855                    LCD_Canvas[1][i]=ekran2[1][i];
   \   0000005C   8018               ADDS     R0,R0,R2
   \   0000005E   8030               ADDS     R0,R0,#+128
   \   00000060   6B46               MOV      R3,SP
   \   00000062   9A18               ADDS     R2,R3,R2
   \   00000064   527B               LDRB     R2,[R2, #+13]
   \   00000066   0270               STRB     R2,[R0, #+0]
    856                }         
   \   00000068   491C               ADDS     R1,R1,#+1
   \   0000006A   0906               LSLS     R1,R1,#+24
   \   0000006C   090E               LSRS     R1,R1,#+24
   \                     ??MESSAGE_Refresh_6:
   \   0000006E   0800               MOVS     R0,R1
   \   00000070   0D28               CMP      R0,#+13
   \   00000072   EED3               BCC      ??MESSAGE_Refresh_7
    857              }
    858               
    859              if (MainSide_puls>3) {MainSide_puls=0;} else {MainSide_puls++;} 
   \                     ??MESSAGE_Refresh_5:
   \   00000074   042D               CMP      R5,#+4
   \   00000076   02D3               BCC      ??MESSAGE_Refresh_8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   2070               STRB     R0,[R4, #+0]
   \   0000007C   01E0               B        ??MESSAGE_Refresh_9
   \                     ??MESSAGE_Refresh_8:
   \   0000007E   6D1C               ADDS     R5,R5,#+1
   \   00000080   2570               STRB     R5,[R4, #+0]
    860            
    861          }//_______________________ Koniec funkcji MainSide_Refresh __________________________
   \                     ??MESSAGE_Refresh_9:
   \   00000082   07B0               ADD      SP,SP,#+28
   \   00000084   30BC               POP      {R4,R5}
   \   00000086   01BC               POP      {R0}
   \   00000088   0047               BX       R0               ;; return
   \   0000008A   C046               Nop      
   \                     ??MESSAGE_Refresh_0:
   \   0000008C   ........           DC32     MainSide_puls
   \   00000090   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`
   \   00000094   ........           DC32     LCD_Canvas
   \   00000098   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244` + 28
    862          
    863          
    864          
    865          
    866          
    867          
    868          
    869          
    870          
    871          
    872          //*-----------------------------------------------------------------------------
    873          //* Nazwa funkcji :    MainSide_Paint
    874          //* Funkcja strony g³ównej menu
    875          //*-----------------------------------------------------------------------------
    876          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
    877          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    878          void MainSide_Event(_Screen* ScreenLokal)
    879          {
   \                     MainSide_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
    880            signed char BODP=-1;
    881            
    882            if (!g_PC_Connected)
   \   00000004   8F48               LDR      R0,??MainSide_Event_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   68D1               BNE      ??MainSide_Event_1
   \   0000000C   0025               MOVS     R5,#+0
    883            {
    884            char ChangeSheet=0;
    885            char MenuPaintExecute=0;
   \   0000000E   6846               MOV      R0,SP
   \   00000010   2900               MOVS     R1,R5
   \   00000012   0171               STRB     R1,[R0, #+4]
    886            static char Xdown=0;
    887            
    888            char PaternDesign=(ScreenLokal->PaternDesign);
   \   00000014   0498               LDR      R0,[SP, #+16]
   \   00000016   0078               LDRB     R0,[R0, #+0]
   \   00000018   0090               STR      R0,[SP, #+0]
    889            
    890            const _ScreenPaternDesign *ScreenPaternDesign;
    891            if (CurrentSheet==0) 
   \   0000001A   8B4C               LDR      R4,??MainSide_Event_0+0x4  ;; TextToChangeLength
   \   0000001C   2079               LDRB     R0,[R4, #+4]
   \   0000001E   0028               CMP      R0,#+0
   \   00000020   02D1               BNE      ??MainSide_Event_2
    892            {
    893              ScreenPaternDesign=ScreenSetTab_0;
   \   00000022   8A48               LDR      R0,??MainSide_Event_0+0x8  ;; `?<Constant {129, 0}>` + 24
   \   00000024   0290               STR      R0,[SP, #+8]
   \   00000026   25E0               B        ??MainSide_Event_3
    894            }else{
    895              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Event_2:
   \   00000028   8948               LDR      R0,??MainSide_Event_0+0xC  ;; `?<Constant {129, 0}>` + 992
   \   0000002A   0290               STR      R0,[SP, #+8]
    896              if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1)
   \   0000002C   0800               MOVS     R0,R1
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0F21               MOVS     R1,#+15
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   8748               LDR      R0,??MainSide_Event_0+0x10  ;; Y_down
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   435E               LDRSH    R3,[R0, R1]
   \   0000003A   8748               LDR      R0,??MainSide_Event_0+0x14  ;; X_down
   \   0000003C   425E               LDRSH    R2,[R0, R1]
   \   0000003E   8748               LDR      R0,??MainSide_Event_0+0x18  ;; Y_up
   \   00000040   415E               LDRSH    R1,[R0, R1]
   \   00000042   8748               LDR      R0,??MainSide_Event_0+0x1C  ;; X_up
   \   00000044   0026               MOVS     R6,#+0
   \   00000046   805F               LDRSH    R0,[R0, R6]
   \   00000048   ........           BL       List_Event
   \   0000004C   04B0               ADD      SP,SP,#+16
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   C943               MVNS     R1,R1            ;; #-1
   \   00000052   8842               CMP      R0,R1
   \   00000054   0ED1               BNE      ??MainSide_Event_3
    897              {
    898                   if (SheetHistoryIndex>0)
   \   00000056   E079               LDRB     R0,[R4, #+7]
   \   00000058   0028               CMP      R0,#+0
   \   0000005A   07D0               BEQ      ??MainSide_Event_4
    899                    {
    900                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000005C   401E               SUBS     R0,R0,#+1
   \   0000005E   E071               STRB     R0,[R4, #+7]
   \   00000060   0006               LSLS     R0,R0,#+24
   \   00000062   000E               LSRS     R0,R0,#+24
   \   00000064   2018               ADDS     R0,R4,R0
   \   00000066   2030               ADDS     R0,R0,#+32
   \   00000068   0078               LDRB     R0,[R0, #+0]
   \   0000006A   2071               STRB     R0,[R4, #+4]
    901                    } 
    902                   ChangeSheet=1;
   \                     ??MainSide_Event_4:
   \   0000006C   0121               MOVS     R1,#+1
   \   0000006E   0D00               MOVS     R5,R1
    903                   MenuPaintExecute=1;
   \   00000070   6846               MOV      R0,SP
   \   00000072   0171               STRB     R1,[R0, #+4]
    904              }
    905            }  
    906            
    907            
    908            
    909            if (ChangeSheet==0)
   \                     ??MainSide_Event_3:
   \   00000074   002D               CMP      R5,#+0
   \   00000076   2CD1               BNE      ??MainSide_Event_5
   \   00000078   7948               LDR      R0,??MainSide_Event_0+0x1C  ;; X_up
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   405E               LDRSH    R0,[R0, R1]
   \   0000007E   0228               CMP      R0,#+2
   \   00000080   31DB               BLT      ??MainSide_Event_6
   \   00000082   0F28               CMP      R0,#+15
   \   00000084   2FDA               BGE      ??MainSide_Event_6
   \   00000086   7548               LDR      R0,??MainSide_Event_0+0x18  ;; Y_up
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   7428               CMP      R0,#+116
   \   0000008C   2BDB               BLT      ??MainSide_Event_6
   \   0000008E   8028               CMP      R0,#+128
   \   00000090   29DA               BGE      ??MainSide_Event_6
    910            {
    911            
    912            
    913              //akcja przycisku menu
    914              if ((X_up>1) && (X_up<15) && (Y_up>115) && (Y_up<128))
    915              {
    916                #ifdef  NOPASS
    917                  MenuLevel=11;
    918                #else
    919                  if ((g_level==0) && (g_NeedPass==1))
   \   00000092   7448               LDR      R0,??MainSide_Event_0+0x20  ;; g_level
   \   00000094   0078               LDRB     R0,[R0, #+0]
   \   00000096   0028               CMP      R0,#+0
   \   00000098   06D1               BNE      ??MainSide_Event_7
   \   0000009A   7348               LDR      R0,??MainSide_Event_0+0x24  ;; g_NeedPass
   \   0000009C   0078               LDRB     R0,[R0, #+0]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   02D1               BNE      ??MainSide_Event_7
    920                  {
    921                    MenuLevel=10;
   \   000000A2   0A20               MOVS     R0,#+10
   \   000000A4   A064               STR      R0,[R4, #+72]
   \   000000A6   01E0               B        ??MainSide_Event_8
    922                  }else{
    923                    MenuLevel=11;
   \                     ??MainSide_Event_7:
   \   000000A8   0B20               MOVS     R0,#+11
   \   000000AA   A064               STR      R0,[R4, #+72]
    924                  }
    925                #endif
    926                
    927                MenuPaintExecute=1;
   \                     ??MainSide_Event_8:
   \   000000AC   6846               MOV      R0,SP
   \   000000AE   0121               MOVS     R1,#+1
   \   000000B0   0171               STRB     R1,[R0, #+4]
    928                  
    929                if ((!(AT91C_IFLASH_MEM->Config.SoundOff))) {
   \   000000B2   6E48               LDR      R0,??MainSide_Event_0+0x28  ;; 0x13d7e9
   \   000000B4   0078               LDRB     R0,[R0, #+0]
   \   000000B6   0028               CMP      R0,#+0
   \   000000B8   09D1               BNE      ??MainSide_Event_9
    930                  ButtonBipCounter=g_counter+8;
   \   000000BA   6D4A               LDR      R2,??MainSide_Event_0+0x2C  ;; ButtonBipCounter
   \   000000BC   6D48               LDR      R0,??MainSide_Event_0+0x30  ;; g_counter
   \   000000BE   03C8               LDM      R0!,{R0,R1}
   \   000000C0   0023               MOVS     R3,#+0
   \   000000C2   0830               ADDS     R0,R0,#+8
   \   000000C4   5941               ADCS     R1,R1,R3
   \   000000C6   03C2               STM      R2!,{R0,R1}
    931                    AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;
                                                      ^
Warning[Pe063]: shift count is too large
   \   000000C8   6B48               LDR      R0,??MainSide_Event_0+0x34  ;; 0xfffff430
   \   000000CA   1900               MOVS     R1,R3
   \   000000CC   0160               STR      R1,[R0, #+0]
    932                  } 
    933                Xdown=0;
   \                     ??MainSide_Event_9:
   \   000000CE   0020               MOVS     R0,#+0
   \   000000D0   2073               STRB     R0,[R4, #+12]
    934              }
    935              else  if ((X_down>1) && (X_down<15) && (Y_down>115) && (Y_down<128))
    936              {
    937                 if ((!(AT91C_IFLASH_MEM->Config.SoundOff)) && (Xdown==0)) {
    938                  ButtonBipCounter=g_counter+8;
    939                    AT91C_BASE_PIOA->PIO_SODR =SpeakerPin;
                                                      ^
Warning[Pe063]: shift count is too large
    940                  } 
    941                 Xdown=1;
    942              }
    943              else
    944              {
    945          
    946                Xdown=0;
    947                
    948              //STREFY przycisków
    949                if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Event(ScreenLokal);}
    950                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Event(ScreenLokal);}
    951                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {Timetable_Event(CurrentSheet);}
    952                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {Timetable_Event(CurrentSheet);}    
    953                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Event(CurrentSheet);}
    954                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Event(CurrentSheet);}   
    955                else {  
    956                
    957                
    958                    for (char i=0; i<ScrenButtonNr; i++)
    959                    {
    960                      
    961                      if ((ScreenPaternDesign[PaternDesign].Button[i].Width>0) && (ScreenLokal->Button[i].Hide==0))
    962                      {
    963                      
    964                            BODP=Button(ScreenLokal->Button[i].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
    965                            ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
    966                            ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
    967                            ScreenPaternDesign[PaternDesign].Button[i].Width,
    968                            ScreenPaternDesign[PaternDesign].Button[i].Height
    969                            );
    970                         
    971                          MenuPaintExecute=1;  
    972                         if (BODP==1)
    973                           {   
    974                            //je¿eli ustawiona akcja otwarcia strony 
    975                            if (ScreenLokal->Button[i].OpenPage) 
    976                             {
    977                               CurrentSheet=ScreenLokal->Button[i].OpenPage-1;
    978                               
    979                             }
    980                           }
    981                          if (BODP==2)
    982                           {
    983                             if (MainStage.StageButton[i+1+(10*CurrentSheet)]==0) 
    984                             {
    985                               MainStage.StageButton[i+1+(10*CurrentSheet)]=1;
    986                               g_NextTimeProgram=g_counter+ProgramPeriod;
    987                               Program(&gProg);
    988                             }
    989                            
    990                             
    991                           }else{
    992                             MainStage.StageButton[i+1+(10*CurrentSheet)]=0;
    993                             
    994                           }
    995                      }
    996                    }
    997                }
    998              }
    999          
   1000            
   1001            }
   1002            
   1003            if (MenuPaintExecute) MenuPaint();
   \                     ??MainSide_Event_5:
   \   000000D2   6846               MOV      R0,SP
   \   000000D4   0079               LDRB     R0,[R0, #+4]
   \   000000D6   0028               CMP      R0,#+0
   \   000000D8   01D0               BEQ      ??MainSide_Event_1
   \   000000DA   ........           BL       MenuPaint
   1004              
   1005            }
   1006          }//_______________________ Koniec funkcji MainSide_Event __________________________
   \                     ??MainSide_Event_1:
   \   000000DE   05B0               ADD      SP,SP,#+20
   \   000000E0   F0BC               POP      {R4-R7}
   \   000000E2   01BC               POP      {R0}
   \   000000E4   0047               BX       R0               ;; return
   \                     ??MainSide_Event_6:
   \   000000E6   5C48               LDR      R0,??MainSide_Event_0+0x14  ;; X_down
   \   000000E8   405E               LDRSH    R0,[R0, R1]
   \   000000EA   0228               CMP      R0,#+2
   \   000000EC   19DB               BLT      ??MainSide_Event_10
   \   000000EE   0F28               CMP      R0,#+15
   \   000000F0   17DA               BGE      ??MainSide_Event_10
   \   000000F2   5848               LDR      R0,??MainSide_Event_0+0x10  ;; Y_down
   \   000000F4   405E               LDRSH    R0,[R0, R1]
   \   000000F6   7428               CMP      R0,#+116
   \   000000F8   13DB               BLT      ??MainSide_Event_10
   \   000000FA   8028               CMP      R0,#+128
   \   000000FC   11DA               BGE      ??MainSide_Event_10
   \   000000FE   5B48               LDR      R0,??MainSide_Event_0+0x28  ;; 0x13d7e9
   \   00000100   0078               LDRB     R0,[R0, #+0]
   \   00000102   217B               LDRB     R1,[R4, #+12]
   \   00000104   0143               ORRS     R1,R1,R0
   \   00000106   09D1               BNE      ??MainSide_Event_11
   \   00000108   594A               LDR      R2,??MainSide_Event_0+0x2C  ;; ButtonBipCounter
   \   0000010A   5A48               LDR      R0,??MainSide_Event_0+0x30  ;; g_counter
   \   0000010C   03C8               LDM      R0!,{R0,R1}
   \   0000010E   0023               MOVS     R3,#+0
   \   00000110   0830               ADDS     R0,R0,#+8
   \   00000112   5941               ADCS     R1,R1,R3
   \   00000114   03C2               STM      R2!,{R0,R1}
   \   00000116   5848               LDR      R0,??MainSide_Event_0+0x34  ;; 0xfffff430
   \   00000118   1900               MOVS     R1,R3
   \   0000011A   0160               STR      R1,[R0, #+0]
   \                     ??MainSide_Event_11:
   \   0000011C   0120               MOVS     R0,#+1
   \   0000011E   2073               STRB     R0,[R4, #+12]
   \   00000120   D7E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_10:
   \   00000122   0800               MOVS     R0,R1
   \   00000124   2073               STRB     R0,[R4, #+12]
   \   00000126   2079               LDRB     R0,[R4, #+4]
   \   00000128   0028               CMP      R0,#+0
   \   0000012A   08D1               BNE      ??MainSide_Event_12
   \   0000012C   0099               LDR      R1,[SP, #+0]
   \   0000012E   0906               LSLS     R1,R1,#+24
   \   00000130   090E               LSRS     R1,R1,#+24
   \   00000132   0829               CMP      R1,#+8
   \   00000134   03D1               BNE      ??MainSide_Event_12
   \                     ??MainSide_Event_13:
   \   00000136   0498               LDR      R0,[SP, #+16]
   \   00000138   ........           BL       Termostat_Event
   \   0000013C   C9E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_12:
   \   0000013E   0028               CMP      R0,#+0
   \   00000140   04D0               BEQ      ??MainSide_Event_14
   \   00000142   0099               LDR      R1,[SP, #+0]
   \   00000144   0906               LSLS     R1,R1,#+24
   \   00000146   090E               LSRS     R1,R1,#+24
   \   00000148   0529               CMP      R1,#+5
   \   0000014A   F4D0               BEQ      ??MainSide_Event_13
   \                     ??MainSide_Event_14:
   \   0000014C   0028               CMP      R0,#+0
   \   0000014E   07D1               BNE      ??MainSide_Event_15
   \   00000150   0099               LDR      R1,[SP, #+0]
   \   00000152   0906               LSLS     R1,R1,#+24
   \   00000154   090E               LSRS     R1,R1,#+24
   \   00000156   0929               CMP      R1,#+9
   \   00000158   02D1               BNE      ??MainSide_Event_15
   \   0000015A   ........           BL       Timetable_Event
   \   0000015E   B8E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_15:
   \   00000160   0028               CMP      R0,#+0
   \   00000162   07D0               BEQ      ??MainSide_Event_16
   \   00000164   0099               LDR      R1,[SP, #+0]
   \   00000166   0906               LSLS     R1,R1,#+24
   \   00000168   090E               LSRS     R1,R1,#+24
   \   0000016A   0629               CMP      R1,#+6
   \   0000016C   02D1               BNE      ??MainSide_Event_16
   \   0000016E   ........           BL       Timetable_Event
   \   00000172   AEE7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_16:
   \   00000174   0028               CMP      R0,#+0
   \   00000176   07D1               BNE      ??MainSide_Event_17
   \   00000178   0099               LDR      R1,[SP, #+0]
   \   0000017A   0906               LSLS     R1,R1,#+24
   \   0000017C   090E               LSRS     R1,R1,#+24
   \   0000017E   0A29               CMP      R1,#+10
   \   00000180   02D1               BNE      ??MainSide_Event_17
   \   00000182   ........           BL       Alarm_Event
   \   00000186   A4E7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_17:
   \   00000188   0028               CMP      R0,#+0
   \   0000018A   11D0               BEQ      ??MainSide_Event_18
   \   0000018C   0099               LDR      R1,[SP, #+0]
   \   0000018E   0906               LSLS     R1,R1,#+24
   \   00000190   090E               LSRS     R1,R1,#+24
   \   00000192   0729               CMP      R1,#+7
   \   00000194   0CD1               BNE      ??MainSide_Event_18
   \   00000196   ........           BL       Alarm_Event
   \   0000019A   9AE7               B        ??MainSide_Event_5
   \                     ??MainSide_Event_19:
   \   0000019C   0A21               MOVS     R1,#+10
   \   0000019E   4843               MULS     R0,R1,R0
   \   000001A0   3018               ADDS     R0,R6,R0
   \   000001A2   3649               LDR      R1,??MainSide_Event_0+0x38  ;; MainStage
   \   000001A4   0818               ADDS     R0,R1,R0
   \   000001A6   0021               MOVS     R1,#+0
   \   000001A8   4170               STRB     R1,[R0, #+1]
   \                     ??MainSide_Event_20:
   \   000001AA   6D1C               ADDS     R5,R5,#+1
   \   000001AC   2D06               LSLS     R5,R5,#+24
   \   000001AE   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Event_18:
   \   000001B0   2800               MOVS     R0,R5
   \   000001B2   0928               CMP      R0,#+9
   \   000001B4   8DD2               BCS      ??MainSide_Event_5
   \   000001B6   2E00               MOVS     R6,R5
   \   000001B8   B000               LSLS     R0,R6,#+2
   \   000001BA   0099               LDR      R1,[SP, #+0]
   \   000001BC   0906               LSLS     R1,R1,#+24
   \   000001BE   090E               LSRS     R1,R1,#+24
   \   000001C0   5822               MOVS     R2,#+88
   \   000001C2   5143               MULS     R1,R2,R1
   \   000001C4   029A               LDR      R2,[SP, #+8]
   \   000001C6   5118               ADDS     R1,R2,R1
   \   000001C8   0818               ADDS     R0,R1,R0
   \   000001CA   8178               LDRB     R1,[R0, #+2]
   \   000001CC   0029               CMP      R1,#+0
   \   000001CE   ECD0               BEQ      ??MainSide_Event_20
   \   000001D0   F100               LSLS     R1,R6,#+3
   \   000001D2   049A               LDR      R2,[SP, #+16]
   \   000001D4   5718               ADDS     R7,R2,R1
   \   000001D6   B97C               LDRB     R1,[R7, #+18]
   \   000001D8   C906               LSLS     R1,R1,#+27
   \   000001DA   E6D4               BMI      ??MainSide_Event_20
   \   000001DC   82B0               SUB      SP,SP,#+8
   \   000001DE   C178               LDRB     R1,[R0, #+3]
   \   000001E0   0091               STR      R1,[SP, #+0]
   \   000001E2   8378               LDRB     R3,[R0, #+2]
   \   000001E4   4278               LDRB     R2,[R0, #+1]
   \   000001E6   0178               LDRB     R1,[R0, #+0]
   \   000001E8   3800               MOVS     R0,R7
   \   000001EA   0B30               ADDS     R0,R0,#+11
   \   000001EC   ........           BL       Button
   \   000001F0   02B0               ADD      SP,SP,#+8
   \   000001F2   0006               LSLS     R0,R0,#+24
   \   000001F4   0016               ASRS     R0,R0,#+24
   \   000001F6   0121               MOVS     R1,#+1
   \   000001F8   6A46               MOV      R2,SP
   \   000001FA   0B00               MOVS     R3,R1
   \   000001FC   1371               STRB     R3,[R2, #+4]
   \   000001FE   0128               CMP      R0,#+1
   \   00000200   06D1               BNE      ??MainSide_Event_21
   \   00000202   0F22               MOVS     R2,#+15
   \   00000204   BB7C               LDRB     R3,[R7, #+18]
   \   00000206   1342               TST      R3,R2
   \   00000208   02D0               BEQ      ??MainSide_Event_21
   \   0000020A   1A40               ANDS     R2,R2,R3
   \   0000020C   521E               SUBS     R2,R2,#+1
   \   0000020E   2271               STRB     R2,[R4, #+4]
   \                     ??MainSide_Event_21:
   \   00000210   0228               CMP      R0,#+2
   \   00000212   2079               LDRB     R0,[R4, #+4]
   \   00000214   C2D1               BNE      ??MainSide_Event_19
   \   00000216   0A22               MOVS     R2,#+10
   \   00000218   5043               MULS     R0,R2,R0
   \   0000021A   3018               ADDS     R0,R6,R0
   \   0000021C   174A               LDR      R2,??MainSide_Event_0+0x38  ;; MainStage
   \   0000021E   1018               ADDS     R0,R2,R0
   \   00000220   4278               LDRB     R2,[R0, #+1]
   \   00000222   002A               CMP      R2,#+0
   \   00000224   C1D1               BNE      ??MainSide_Event_20
   \   00000226   4170               STRB     R1,[R0, #+1]
   \   00000228   154E               LDR      R6,??MainSide_Event_0+0x3C  ;; g_NextTimeProgram
   \   0000022A   1248               LDR      R0,??MainSide_Event_0+0x30  ;; g_counter
   \   0000022C   0CC8               LDM      R0!,{R2,R3}
   \   0000022E   AF20               MOVS     R0,#+175
   \   00000230   4000               LSLS     R0,R0,#+1        ;; #+350
   \   00000232   0021               MOVS     R1,#+0
   \   00000234   8018               ADDS     R0,R0,R2
   \   00000236   5941               ADCS     R1,R1,R3
   \   00000238   03C6               STM      R6!,{R0,R1}
   \   0000023A   1248               LDR      R0,??MainSide_Event_0+0x40  ;; gProg
   \   0000023C   ........           BL       Program
   \   00000240   B3E7               B        ??MainSide_Event_20
   \   00000242   C046               Nop      
   \                     ??MainSide_Event_0:
   \   00000244   ........           DC32     g_PC_Connected
   \   00000248   ........           DC32     TextToChangeLength
   \   0000024C   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000250   ........           DC32     `?<Constant {129, 0}>` + 992
   \   00000254   ........           DC32     Y_down
   \   00000258   ........           DC32     X_down
   \   0000025C   ........           DC32     Y_up
   \   00000260   ........           DC32     X_up
   \   00000264   ........           DC32     g_level
   \   00000268   ........           DC32     g_NeedPass
   \   0000026C   E9D71300           DC32     0x13d7e9
   \   00000270   ........           DC32     ButtonBipCounter
   \   00000274   ........           DC32     g_counter
   \   00000278   30F4FFFF           DC32     0xfffff430
   \   0000027C   ........           DC32     MainStage
   \   00000280   ........           DC32     g_NextTimeProgram
   \   00000284   ........           DC32     gProg
   1007          
   1008          
   1009          
   1010          
   1011          
   1012          //*-----------------------------------------------------------------------------
   1013          //* Nazwa funkcji :    MainSide_Refresh
   1014          //* Funkcja strony g³ównej menu
   1015          //*-----------------------------------------------------------------------------
   1016          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   1017          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1018          void MainSide_Refresh(_Screen* ScreenLokal)
   1019          {
   \                     MainSide_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   98B0               SUB      SP,SP,#+96
   1020            if (!g_PC_Connected)
   \   00000004   BD48               LDR      R0,??MainSide_Refresh_0  ;; g_PC_Connected
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   00D0               BEQ      .+4
   \   0000000C   9CE2               B        ??MainSide_Refresh_1
   1021            {
   1022            
   1023            char PaternDesign=(ScreenLokal->PaternDesign);
   \   0000000E   1898               LDR      R0,[SP, #+96]
   \   00000010   0478               LDRB     R4,[R0, #+0]
   \   00000012   BB48               LDR      R0,??MainSide_Refresh_0+0x4  ;; TextToChangeLength + 4
   \   00000014   0078               LDRB     R0,[R0, #+0]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   02D1               BNE      ??MainSide_Refresh_2
   1024            
   1025            
   1026            const _ScreenPaternDesign *ScreenPaternDesign;
   1027            if (CurrentSheet==0) 
   1028            {
   1029              ScreenPaternDesign=ScreenSetTab_0;
   \   0000001A   BA49               LDR      R1,??MainSide_Refresh_0+0x8  ;; `?<Constant {129, 0}>` + 24
   \   0000001C   0091               STR      R1,[SP, #+0]
   \   0000001E   01E0               B        ??MainSide_Refresh_3
   1030            }else{
   1031              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??MainSide_Refresh_2:
   \   00000020   B949               LDR      R1,??MainSide_Refresh_0+0xC  ;; `?<Constant {129, 0}>` + 992
   \   00000022   0091               STR      R1,[SP, #+0]
   1032            }  
   1033            
   1034          
   1035                   
   1036                
   1037            if      ((CurrentSheet==0)  && (PaternDesign==MainScreenTermo)) {Termostat_Refresh(ScreenLokal);}
   \                     ??MainSide_Refresh_3:
   \   00000024   06D1               BNE      ??MainSide_Refresh_4
   \   00000026   2100               MOVS     R1,R4
   \   00000028   0829               CMP      R1,#+8
   \   0000002A   03D1               BNE      ??MainSide_Refresh_4
   \                     ??MainSide_Refresh_5:
   \   0000002C   1898               LDR      R0,[SP, #+96]
   \   0000002E   ........           BL       Termostat_Refresh
   \   00000032   13E2               B        ??MainSide_Refresh_6
   1038            else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTermo)) {Termostat_Refresh(ScreenLokal);}
   \                     ??MainSide_Refresh_4:
   \   00000034   0028               CMP      R0,#+0
   \   00000036   02D0               BEQ      ??MainSide_Refresh_7
   \   00000038   2100               MOVS     R1,R4
   \   0000003A   0529               CMP      R1,#+5
   \   0000003C   F6D0               BEQ      ??MainSide_Refresh_5
   1039                else if ((CurrentSheet==0)  && (PaternDesign==MainScreenTimetable)) {  }
   \                     ??MainSide_Refresh_7:
   \   0000003E   0028               CMP      R0,#+0
   \   00000040   03D1               BNE      ??MainSide_Refresh_8
   \   00000042   2100               MOVS     R1,R4
   \   00000044   0929               CMP      R1,#+9
   \   00000046   00D1               BNE      .+4
   \   00000048   08E2               B        ??MainSide_Refresh_6
   1040                else if ((CurrentSheet>0)   && (PaternDesign==SubScreenTimetable)) {  }    
   \                     ??MainSide_Refresh_8:
   \   0000004A   0028               CMP      R0,#+0
   \   0000004C   03D0               BEQ      ??MainSide_Refresh_9
   \   0000004E   2100               MOVS     R1,R4
   \   00000050   0629               CMP      R1,#+6
   \   00000052   00D1               BNE      .+4
   \   00000054   02E2               B        ??MainSide_Refresh_6
   1041                #ifdef __ALARM
   1042                  else if ((CurrentSheet==0)  && (PaternDesign==MainScreenAlarm)) {Alarm_Refresh(CurrentSheet);}
   \                     ??MainSide_Refresh_9:
   \   00000056   0028               CMP      R0,#+0
   \   00000058   05D1               BNE      ??MainSide_Refresh_10
   \   0000005A   2100               MOVS     R1,R4
   \   0000005C   0A29               CMP      R1,#+10
   \   0000005E   02D1               BNE      ??MainSide_Refresh_10
   \   00000060   ........           BL       Alarm_Refresh
   \   00000064   FAE1               B        ??MainSide_Refresh_6
   1043                  else if ((CurrentSheet>0)   && (PaternDesign==SubScreenAlarm)) {Alarm_Refresh(CurrentSheet);} 
   \                     ??MainSide_Refresh_10:
   \   00000066   0028               CMP      R0,#+0
   \   00000068   05D0               BEQ      ??MainSide_Refresh_11
   \   0000006A   2100               MOVS     R1,R4
   \   0000006C   0729               CMP      R1,#+7
   \   0000006E   02D1               BNE      ??MainSide_Refresh_11
   \   00000070   ........           BL       Alarm_Refresh
   \   00000074   F2E1               B        ??MainSide_Refresh_6
   \                     ??MainSide_Refresh_11:
   \   00000076   0025               MOVS     R5,#+0
   \   00000078   1EE0               B        ??MainSide_Refresh_12
   1044                #endif
   1045                else   
   1046                {  
   1047            
   1048            
   1049                    
   1050                    //on/off
   1051                      for (char i=0; i<ScrenGraphNr; i++)
   1052                      {
   1053                          if ((ScreenLokal->Graph[i].Type==GraphOnOff)&& (ScreenLokal->Graph[i].PlusOnOff==0))
   1054                          {
   1055                             if (PortStageRead(MainStage.StageI[ScreenLokal->Graph[i].Nr].Port, ScreenLokal->Graph[i].Port))
   1056                             {
   1057                                Label("On",2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-3,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1058                             }else{
   1059                                Label("Off",2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-3,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1060                             }
   1061                          }
   1062                          
   1063                          if (((ScreenLokal->Graph[i].Type==GraphText) || (ScreenLokal->Graph[i].Type==GraphOnOff)) && (ScreenLokal->Graph[i].PlusOnOff==1))
   1064                          {
   1065                             if (PortStageRead(MainStage.StageI[ScreenLokal->Graph[i].Nr].Port, ScreenLokal->Graph[i].Port))
   1066                             {
   1067                                Label("On",2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-7,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   1068                             }else{
   1069                                Label("Off",2,ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,ScreenPaternDesign[PaternDesign].Graph[i].Poz.y+(ScreenPaternDesign[PaternDesign].Graph[i].Height/2)-7,3,ScreenPaternDesign[PaternDesign].Graph[i].Width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Refresh_13:
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   5821               MOVS     R1,#+88
   \   0000007E   4843               MULS     R0,R1,R0
   \   00000080   0099               LDR      R1,[SP, #+0]
   \   00000082   0818               ADDS     R0,R1,R0
   \   00000084   B100               LSLS     R1,R6,#+2
   \   00000086   4218               ADDS     R2,R0,R1
   \   00000088   2432               ADDS     R2,R2,#+36
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0020               MOVS     R0,#+0
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   7F21               MOVS     R1,#+127
   \   00000092   0120               MOVS     R0,#+1
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   9178               LDRB     R1,[R2, #+2]
   \   00000098   0320               MOVS     R0,#+3
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   5078               LDRB     R0,[R2, #+1]
   \   0000009E   D178               LDRB     R1,[R2, #+3]
   \   000000A0   4908               LSRS     R1,R1,#+1
   \   000000A2   4318               ADDS     R3,R0,R1
   \   000000A4   DB1F               SUBS     R3,R3,#+7
   \   000000A6   1278               LDRB     R2,[R2, #+0]
   \   000000A8   0221               MOVS     R1,#+2
   \   000000AA   98A0               ADR      R0,??MainSide_Refresh_0+0x10  ;; "Off"
   \   000000AC   ........           BL       Label
   \   000000B0   06B0               ADD      SP,SP,#+24
   1070                             }
   \                     ??MainSide_Refresh_14:
   \   000000B2   6D1C               ADDS     R5,R5,#+1
   \   000000B4   2D06               LSLS     R5,R5,#+24
   \   000000B6   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Refresh_12:
   \   000000B8   2800               MOVS     R0,R5
   \   000000BA   0428               CMP      R0,#+4
   \   000000BC   00D3               BCC      .+4
   \   000000BE   86E0               B        ??MainSide_Refresh_15
   \   000000C0   2E00               MOVS     R6,R5
   \   000000C2   0720               MOVS     R0,#+7
   \   000000C4   7043               MULS     R0,R6,R0
   \   000000C6   1899               LDR      R1,[SP, #+96]
   \   000000C8   0F18               ADDS     R7,R1,R0
   \   000000CA   5337               ADDS     R7,R7,#+83
   \   000000CC   3878               LDRB     R0,[R7, #+0]
   \   000000CE   0B28               CMP      R0,#+11
   \   000000D0   49D1               BNE      ??MainSide_Refresh_16
   \   000000D2   B879               LDRB     R0,[R7, #+6]
   \   000000D4   C007               LSLS     R0,R0,#+31
   \   000000D6   46D4               BMI      ??MainSide_Refresh_16
   \   000000D8   7979               LDRB     R1,[R7, #+5]
   \   000000DA   3879               LDRB     R0,[R7, #+4]
   \   000000DC   1422               MOVS     R2,#+20
   \   000000DE   5043               MULS     R0,R2,R0
   \   000000E0   8B4A               LDR      R2,??MainSide_Refresh_0+0x14  ;; MainStage
   \   000000E2   1018               ADDS     R0,R2,R0
   \   000000E4   A030               ADDS     R0,R0,#+160
   \   000000E6   0088               LDRH     R0,[R0, #+0]
   \   000000E8   0004               LSLS     R0,R0,#+16
   \   000000EA   0014               ASRS     R0,R0,#+16
   \   000000EC   ........           BL       PortStageRead
   \   000000F0   0028               CMP      R0,#+0
   \   000000F2   1CD0               BEQ      ??MainSide_Refresh_17
   \   000000F4   2000               MOVS     R0,R4
   \   000000F6   5821               MOVS     R1,#+88
   \   000000F8   4843               MULS     R0,R1,R0
   \   000000FA   0099               LDR      R1,[SP, #+0]
   \   000000FC   0818               ADDS     R0,R1,R0
   \   000000FE   B100               LSLS     R1,R6,#+2
   \   00000100   4218               ADDS     R2,R0,R1
   \   00000102   2432               ADDS     R2,R2,#+36
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0020               MOVS     R0,#+0
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   7F21               MOVS     R1,#+127
   \   0000010C   0120               MOVS     R0,#+1
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   9178               LDRB     R1,[R2, #+2]
   \   00000112   0320               MOVS     R0,#+3
   \   00000114   03B4               PUSH     {R0,R1}
   \   00000116   5078               LDRB     R0,[R2, #+1]
   \   00000118   D178               LDRB     R1,[R2, #+3]
   \   0000011A   4908               LSRS     R1,R1,#+1
   \   0000011C   4318               ADDS     R3,R0,R1
   \   0000011E   DB1E               SUBS     R3,R3,#+3
   \   00000120   1278               LDRB     R2,[R2, #+0]
   \   00000122   0221               MOVS     R1,#+2
   \   00000124   7BA0               ADR      R0,??MainSide_Refresh_0+0x18  ;; 0x4F, 0x6E, 0x00, 0x00
   \   00000126   ........           BL       Label
   \   0000012A   06B0               ADD      SP,SP,#+24
   \   0000012C   1BE0               B        ??MainSide_Refresh_16
   \                     ??MainSide_Refresh_17:
   \   0000012E   2000               MOVS     R0,R4
   \   00000130   5821               MOVS     R1,#+88
   \   00000132   4843               MULS     R0,R1,R0
   \   00000134   0099               LDR      R1,[SP, #+0]
   \   00000136   0818               ADDS     R0,R1,R0
   \   00000138   B100               LSLS     R1,R6,#+2
   \   0000013A   4218               ADDS     R2,R0,R1
   \   0000013C   2432               ADDS     R2,R2,#+36
   \   0000013E   82B0               SUB      SP,SP,#+8
   \   00000140   0020               MOVS     R0,#+0
   \   00000142   0090               STR      R0,[SP, #+0]
   \   00000144   7F21               MOVS     R1,#+127
   \   00000146   0120               MOVS     R0,#+1
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   9178               LDRB     R1,[R2, #+2]
   \   0000014C   0320               MOVS     R0,#+3
   \   0000014E   03B4               PUSH     {R0,R1}
   \   00000150   5078               LDRB     R0,[R2, #+1]
   \   00000152   D178               LDRB     R1,[R2, #+3]
   \   00000154   4908               LSRS     R1,R1,#+1
   \   00000156   4318               ADDS     R3,R0,R1
   \   00000158   DB1E               SUBS     R3,R3,#+3
   \   0000015A   1278               LDRB     R2,[R2, #+0]
   \   0000015C   0221               MOVS     R1,#+2
   \   0000015E   6BA0               ADR      R0,??MainSide_Refresh_0+0x10  ;; "Off"
   \   00000160   ........           BL       Label
   \   00000164   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Refresh_16:
   \   00000166   3878               LDRB     R0,[R7, #+0]
   \   00000168   0828               CMP      R0,#+8
   \   0000016A   01D0               BEQ      ??MainSide_Refresh_18
   \   0000016C   0B28               CMP      R0,#+11
   \   0000016E   A0D1               BNE      ??MainSide_Refresh_14
   \                     ??MainSide_Refresh_18:
   \   00000170   B879               LDRB     R0,[R7, #+6]
   \   00000172   C007               LSLS     R0,R0,#+31
   \   00000174   9DD5               BPL      ??MainSide_Refresh_14
   \   00000176   7979               LDRB     R1,[R7, #+5]
   \   00000178   3879               LDRB     R0,[R7, #+4]
   \   0000017A   1422               MOVS     R2,#+20
   \   0000017C   5043               MULS     R0,R2,R0
   \   0000017E   644A               LDR      R2,??MainSide_Refresh_0+0x14  ;; MainStage
   \   00000180   1018               ADDS     R0,R2,R0
   \   00000182   A030               ADDS     R0,R0,#+160
   \   00000184   0088               LDRH     R0,[R0, #+0]
   \   00000186   0004               LSLS     R0,R0,#+16
   \   00000188   0014               ASRS     R0,R0,#+16
   \   0000018A   ........           BL       PortStageRead
   \   0000018E   0028               CMP      R0,#+0
   \   00000190   00D1               BNE      .+4
   \   00000192   72E7               B        ??MainSide_Refresh_13
   \   00000194   2000               MOVS     R0,R4
   \   00000196   5821               MOVS     R1,#+88
   \   00000198   4843               MULS     R0,R1,R0
   \   0000019A   0099               LDR      R1,[SP, #+0]
   \   0000019C   0818               ADDS     R0,R1,R0
   \   0000019E   B100               LSLS     R1,R6,#+2
   \   000001A0   4218               ADDS     R2,R0,R1
   \   000001A2   2432               ADDS     R2,R2,#+36
   \   000001A4   82B0               SUB      SP,SP,#+8
   \   000001A6   0020               MOVS     R0,#+0
   \   000001A8   0090               STR      R0,[SP, #+0]
   \   000001AA   7F21               MOVS     R1,#+127
   \   000001AC   0120               MOVS     R0,#+1
   \   000001AE   03B4               PUSH     {R0,R1}
   \   000001B0   9178               LDRB     R1,[R2, #+2]
   \   000001B2   0320               MOVS     R0,#+3
   \   000001B4   03B4               PUSH     {R0,R1}
   \   000001B6   5078               LDRB     R0,[R2, #+1]
   \   000001B8   D178               LDRB     R1,[R2, #+3]
   \   000001BA   4908               LSRS     R1,R1,#+1
   \   000001BC   4318               ADDS     R3,R0,R1
   \   000001BE   DB1F               SUBS     R3,R3,#+7
   \   000001C0   1278               LDRB     R2,[R2, #+0]
   \   000001C2   0221               MOVS     R1,#+2
   \   000001C4   53A0               ADR      R0,??MainSide_Refresh_0+0x18  ;; 0x4F, 0x6E, 0x00, 0x00
   \   000001C6   ........           BL       Label
   \   000001CA   06B0               ADD      SP,SP,#+24
   \   000001CC   71E7               B        ??MainSide_Refresh_14
   1071                          }
   1072                       }
   1073                    
   1074          
   1075           
   1076                            
   1077                  //analogi
   1078                    char IlLiter=0;
   1079                    char txt[10]={0,0,0,0,0,0,0,0,0,0};
   \                     ??MainSide_Refresh_15:
   \   000001CE   03A8               ADD      R0,SP,#+12
   \   000001D0   0C21               MOVS     R1,#+12
   \   000001D2   ........           BL       __aeabi_memclr4
   1080                    signed short Value;
   1081                    for (char i=0; i<ScrenAnalogNr; i++)
   \   000001D6   0025               MOVS     R5,#+0
   \   000001D8   2FE0               B        ??MainSide_Refresh_19
   1082                    {
   1083                      if ((ScreenPaternDesign[PaternDesign].Value[i].Width>0)  & ((ScreenLokal->Analog[i].Nr>0) || ((ScreenLokal->Analog[i].Nr==0)&&(ScreenLokal->Analog[i].Reg>0))))
   1084                               {
   1085                               IlLiter=0;
   1086                               Value=MainStage.StageI[ScreenLokal->Analog[i].Nr].Value[ScreenLokal->Analog[i].Reg];
   1087          
   1088                               if (Value==(signed short)0x8AAA)  //je¿eli sygna³ niewiarygodny
   1089                               {
   1090                                 txt[0]='-'; txt[1]='?';txt[2]='?';txt[3]='?'; txt[4]='-'; IlLiter+=5;
   1091                               }else{ //je¿eli sygna³ wiarygodny
   1092                                   if (ScreenLokal->Analog[i].Flip)
   1093                                   {
   1094                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   1095                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {txt[IlLiter++]=ScreenLokal->Analog[i].Text[k];}  
   1096                                   }else{
   1097                                       for (char k=0; k<3; k++) if (ScreenLokal->Analog[i].Text[k]>0) {IlLiter++; txt[k]=ScreenLokal->Analog[i].Text[k];}  
   \                     ??MainSide_Refresh_20:
   \   000001DA   1700               MOVS     R7,R2
   \   000001DC   029B               LDR      R3,[SP, #+8]
   \   000001DE   DB19               ADDS     R3,R3,R7
   \   000001E0   7026               MOVS     R6,#+112
   \   000001E2   9E5D               LDRB     R6,[R3, R6]
   \   000001E4   002E               CMP      R6,#+0
   \   000001E6   06D0               BEQ      ??MainSide_Refresh_21
   \   000001E8   491C               ADDS     R1,R1,#+1
   \   000001EA   0906               LSLS     R1,R1,#+24
   \   000001EC   090E               LSRS     R1,R1,#+24
   \   000001EE   03AE               ADD      R6,SP,#+12
   \   000001F0   7033               ADDS     R3,R3,#+112
   \   000001F2   1B78               LDRB     R3,[R3, #+0]
   \   000001F4   F355               STRB     R3,[R6, R7]
   \                     ??MainSide_Refresh_21:
   \   000001F6   521C               ADDS     R2,R2,#+1
   \   000001F8   1206               LSLS     R2,R2,#+24
   \   000001FA   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Refresh_22:
   \   000001FC   1300               MOVS     R3,R2
   \   000001FE   032B               CMP      R3,#+3
   \   00000200   EBD3               BCC      ??MainSide_Refresh_20
   1098                                       IlLiter+=sIntToStr(Value, &(txt[IlLiter])); //(char Value, char *Vstring, char ill);
   \   00000202   0E00               MOVS     R6,R1
   \   00000204   03AA               ADD      R2,SP,#+12
   \   00000206   5118               ADDS     R1,R2,R1
   \   00000208   ........           BL       sIntToStr
   \   0000020C   3218               ADDS     R2,R6,R0
   \   0000020E   1206               LSLS     R2,R2,#+24
   \   00000210   120E               LSRS     R2,R2,#+24
   1099                                   }
   1100                               }   
   1101                                   Label(txt,0,
   1102                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.x, 
   1103                                         ScreenPaternDesign[PaternDesign].Value[i].Poz.y,IlLiter,
   1104                                         ScreenPaternDesign[PaternDesign].Value[i].Width,
   1105                                         0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??MainSide_Refresh_23:
   \   00000212   82B0               SUB      SP,SP,#+8
   \   00000214   0020               MOVS     R0,#+0
   \   00000216   0090               STR      R0,[SP, #+0]
   \   00000218   7821               MOVS     R1,#+120
   \   0000021A   03B4               PUSH     {R0,R1}
   \   0000021C   0598               LDR      R0,[SP, #+20]
   \   0000021E   8178               LDRB     R1,[R0, #+2]
   \   00000220   1000               MOVS     R0,R2
   \   00000222   03B4               PUSH     {R0,R1}
   \   00000224   0798               LDR      R0,[SP, #+28]
   \   00000226   4378               LDRB     R3,[R0, #+1]
   \   00000228   0278               LDRB     R2,[R0, #+0]
   \   0000022A   0021               MOVS     R1,#+0
   \   0000022C   09A8               ADD      R0,SP,#+36
   \   0000022E   ........           BL       Label
   \   00000232   06B0               ADD      SP,SP,#+24
   \                     ??MainSide_Refresh_24:
   \   00000234   6D1C               ADDS     R5,R5,#+1
   \   00000236   2D06               LSLS     R5,R5,#+24
   \   00000238   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Refresh_19:
   \   0000023A   2800               MOVS     R0,R5
   \   0000023C   0428               CMP      R0,#+4
   \   0000023E   5BD2               BCS      ??MainSide_Refresh_25
   \   00000240   2000               MOVS     R0,R4
   \   00000242   5821               MOVS     R1,#+88
   \   00000244   4843               MULS     R0,R1,R0
   \   00000246   0099               LDR      R1,[SP, #+0]
   \   00000248   0818               ADDS     R0,R1,R0
   \   0000024A   2900               MOVS     R1,R5
   \   0000024C   8A00               LSLS     R2,R1,#+2
   \   0000024E   8018               ADDS     R0,R0,R2
   \   00000250   3430               ADDS     R0,R0,#+52
   \   00000252   0190               STR      R0,[SP, #+4]
   \   00000254   8278               LDRB     R2,[R0, #+2]
   \   00000256   501E               SUBS     R0,R2,#+1
   \   00000258   8041               SBCS     R0,R0,R0
   \   0000025A   C043               MVNS     R0,R0
   \   0000025C   C00F               LSRS     R0,R0,#+31
   \   0000025E   0722               MOVS     R2,#+7
   \   00000260   5143               MULS     R1,R2,R1
   \   00000262   189A               LDR      R2,[SP, #+96]
   \   00000264   5118               ADDS     R1,R2,R1
   \   00000266   0291               STR      R1,[SP, #+8]
   \   00000268   0A00               MOVS     R2,R1
   \   0000026A   7332               ADDS     R2,R2,#+115
   \   0000026C   1178               LDRB     R1,[R2, #+0]
   \   0000026E   0029               CMP      R1,#+0
   \   00000270   06D1               BNE      ??MainSide_Refresh_26
   \   00000272   07D1               BNE      ??MainSide_Refresh_27
   \   00000274   5378               LDRB     R3,[R2, #+1]
   \   00000276   591E               SUBS     R1,R3,#+1
   \   00000278   8941               SBCS     R1,R1,R1
   \   0000027A   C943               MVNS     R1,R1
   \   0000027C   C90F               LSRS     R1,R1,#+31
   \   0000027E   04E0               B        ??MainSide_Refresh_28
   \                     ??MainSide_Refresh_26:
   \   00000280   0121               MOVS     R1,#+1
   \   00000282   02E0               B        ??MainSide_Refresh_28
   \                     ??MainSide_Refresh_27:
   \   00000284   0023               MOVS     R3,#+0
   \   00000286   0121               MOVS     R1,#+1
   \   00000288   1940               ANDS     R1,R1,R3
   \                     ??MainSide_Refresh_28:
   \   0000028A   0842               TST      R0,R1
   \   0000028C   D2D0               BEQ      ??MainSide_Refresh_24
   \   0000028E   0021               MOVS     R1,#+0
   \   00000290   A020               MOVS     R0,#+160
   \   00000292   5378               LDRB     R3,[R2, #+1]
   \   00000294   5B00               LSLS     R3,R3,#+1
   \   00000296   1678               LDRB     R6,[R2, #+0]
   \   00000298   1427               MOVS     R7,#+20
   \   0000029A   7E43               MULS     R6,R7,R6
   \   0000029C   1C4F               LDR      R7,??MainSide_Refresh_0+0x14  ;; MainStage
   \   0000029E   BE19               ADDS     R6,R7,R6
   \   000002A0   F318               ADDS     R3,R6,R3
   \   000002A2   185E               LDRSH    R0,[R3, R0]
   \   000002A4   AA4B               LDR      R3,??MainSide_Refresh_29  ;; 0xffff8aaa
   \   000002A6   9842               CMP      R0,R3
   \   000002A8   09D1               BNE      ??MainSide_Refresh_30
   \   000002AA   2D21               MOVS     R1,#+45
   \   000002AC   03A8               ADD      R0,SP,#+12
   \   000002AE   0170               STRB     R1,[R0, #+0]
   \   000002B0   3F22               MOVS     R2,#+63
   \   000002B2   4270               STRB     R2,[R0, #+1]
   \   000002B4   8270               STRB     R2,[R0, #+2]
   \   000002B6   C270               STRB     R2,[R0, #+3]
   \   000002B8   0171               STRB     R1,[R0, #+4]
   \   000002BA   0522               MOVS     R2,#+5
   \   000002BC   A9E7               B        ??MainSide_Refresh_23
   \                     ??MainSide_Refresh_30:
   \   000002BE   9278               LDRB     R2,[R2, #+2]
   \   000002C0   002A               CMP      R2,#+0
   \   000002C2   9BD0               BEQ      ??MainSide_Refresh_22
   \   000002C4   03A9               ADD      R1,SP,#+12
   \   000002C6   ........           BL       sIntToStr
   \   000002CA   0200               MOVS     R2,R0
   \   000002CC   0020               MOVS     R0,#+0
   \                     ??MainSide_Refresh_31:
   \   000002CE   0100               MOVS     R1,R0
   \   000002D0   0329               CMP      R1,#+3
   \   000002D2   9ED2               BCS      ??MainSide_Refresh_23
   \   000002D4   029B               LDR      R3,[SP, #+8]
   \   000002D6   5918               ADDS     R1,R3,R1
   \   000002D8   7023               MOVS     R3,#+112
   \   000002DA   CB5C               LDRB     R3,[R1, R3]
   \   000002DC   002B               CMP      R3,#+0
   \   000002DE   07D0               BEQ      ??MainSide_Refresh_32
   \   000002E0   1300               MOVS     R3,R2
   \   000002E2   03AE               ADD      R6,SP,#+12
   \   000002E4   7031               ADDS     R1,R1,#+112
   \   000002E6   0978               LDRB     R1,[R1, #+0]
   \   000002E8   F154               STRB     R1,[R6, R3]
   \   000002EA   521C               ADDS     R2,R2,#+1
   \   000002EC   1206               LSLS     R2,R2,#+24
   \   000002EE   120E               LSRS     R2,R2,#+24
   \                     ??MainSide_Refresh_32:
   \   000002F0   401C               ADDS     R0,R0,#+1
   \   000002F2   0006               LSLS     R0,R0,#+24
   \   000002F4   000E               LSRS     R0,R0,#+24
   \   000002F6   EAE7               B        ??MainSide_Refresh_31
   1106                                   
   1107                               }
   1108                    }
   1109                    
   1110                    
   1111                    
   1112                    //grafika
   1113                      for (char i=0; i<ScrenGraphNr; i++)
   \                     ??MainSide_Refresh_25:
   \   000002F8   0025               MOVS     R5,#+0
   \   000002FA   2EE0               B        ??MainSide_Refresh_33
   \                     ??MainSide_Refresh_0:
   \   000002FC   ........           DC32     g_PC_Connected
   \   00000300   ........           DC32     TextToChangeLength + 4
   \   00000304   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000308   ........           DC32     `?<Constant {129, 0}>` + 992
   \   0000030C   4F666600           DC8      "Off"
   \   00000310   ........           DC32     MainStage
   \   00000314   4F6E0000           DC8      0x4F, 0x6E, 0x00, 0x00
   1114                      {
   1115                        if (ScreenLokal->Graph[i].Type==GraphWartosc)
   \                     ??MainSide_Refresh_34:
   \   00000318   2900               MOVS     R1,R5
   \   0000031A   0720               MOVS     R0,#+7
   \   0000031C   4843               MULS     R0,R1,R0
   \   0000031E   189A               LDR      R2,[SP, #+96]
   \   00000320   1218               ADDS     R2,R2,R0
   \   00000322   5320               MOVS     R0,#+83
   \   00000324   105C               LDRB     R0,[R2, R0]
   \   00000326   0A28               CMP      R0,#+10
   \   00000328   14D1               BNE      ??MainSide_Refresh_35
   1116                        if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \   0000032A   2000               MOVS     R0,R4
   \   0000032C   5823               MOVS     R3,#+88
   \   0000032E   5843               MULS     R0,R3,R0
   \   00000330   009B               LDR      R3,[SP, #+0]
   \   00000332   1818               ADDS     R0,R3,R0
   \   00000334   8900               LSLS     R1,R1,#+2
   \   00000336   4018               ADDS     R0,R0,R1
   \   00000338   2430               ADDS     R0,R0,#+36
   \   0000033A   8178               LDRB     R1,[R0, #+2]
   \   0000033C   0029               CMP      R1,#+0
   \   0000033E   09D0               BEQ      ??MainSide_Refresh_35
   1117                        {
   1118                                ScreenGraph(//(char poz_X , char poz_Y ,char width, char height,_Graph *Graph)
   1119                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   1120                                ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   1121                                ScreenPaternDesign[PaternDesign].Graph[i].Width,
   1122                                ScreenPaternDesign[PaternDesign].Graph[i].Height,
   1123                                &(ScreenLokal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000340   82B0               SUB      SP,SP,#+8
   \   00000342   5332               ADDS     R2,R2,#+83
   \   00000344   0092               STR      R2,[SP, #+0]
   \   00000346   C378               LDRB     R3,[R0, #+3]
   \   00000348   8278               LDRB     R2,[R0, #+2]
   \   0000034A   4178               LDRB     R1,[R0, #+1]
   \   0000034C   0078               LDRB     R0,[R0, #+0]
   \   0000034E   ........           BL       ScreenGraph
   \   00000352   02B0               ADD      SP,SP,#+8
   1124                        
   1125                        }
   1126                       }
   \                     ??MainSide_Refresh_35:
   \   00000354   6D1C               ADDS     R5,R5,#+1
   \   00000356   2D06               LSLS     R5,R5,#+24
   \   00000358   2D0E               LSRS     R5,R5,#+24
   \                     ??MainSide_Refresh_33:
   \   0000035A   2800               MOVS     R0,R5
   \   0000035C   0428               CMP      R0,#+4
   \   0000035E   DBD3               BCC      ??MainSide_Refresh_34
   1127                    
   1128                    
   1129                    
   1130                    
   1131                      //Du¿a temperatura
   1132                      if ((ScreenPaternDesign[PaternDesign].Temperature.Width>0))
   \   00000360   5820               MOVS     R0,#+88
   \   00000362   4443               MULS     R4,R0,R4
   \   00000364   0098               LDR      R0,[SP, #+0]
   \   00000366   0019               ADDS     R0,R0,R4
   \   00000368   4D30               ADDS     R0,R0,#+77
   \   0000036A   0400               MOVS     R4,R0
   \   0000036C   6078               LDRB     R0,[R4, #+1]
   \   0000036E   0028               CMP      R0,#+0
   \   00000370   3AD0               BEQ      ??MainSide_Refresh_36
   1133                        {
   1134                            char dl=0;
   1135                            signed short Value=MainStage.StageI[ScreenLokal->Analog[0].Nr].Value[ScreenLokal->Analog[0].Reg];
   1136                            
   1137                            //je¿eli sygna³ nie wiarygodny
   1138                            if  ((Value)!=(signed short)0x8AAA)          
   \   00000372   1899               LDR      R1,[SP, #+96]
   \   00000374   7331               ADDS     R1,R1,#+115
   \   00000376   A020               MOVS     R0,#+160
   \   00000378   4A78               LDRB     R2,[R1, #+1]
   \   0000037A   5200               LSLS     R2,R2,#+1
   \   0000037C   0978               LDRB     R1,[R1, #+0]
   \   0000037E   1423               MOVS     R3,#+20
   \   00000380   5943               MULS     R1,R3,R1
   \   00000382   744B               LDR      R3,??MainSide_Refresh_29+0x4  ;; MainStage
   \   00000384   5918               ADDS     R1,R3,R1
   \   00000386   8918               ADDS     R1,R1,R2
   \   00000388   085E               LDRSH    R0,[R1, R0]
   \   0000038A   7149               LDR      R1,??MainSide_Refresh_29  ;; 0xffff8aaa
   \   0000038C   8842               CMP      R0,R1
   \   0000038E   0CD0               BEQ      ??MainSide_Refresh_37
   1139                            { 
   1140                              txt[0]='-';txt[1]=' ';txt[2]='?'; txt[3]=' ';txt[4]='-'; txt[5]=0;
   \   00000390   2D21               MOVS     R1,#+45
   \   00000392   03A8               ADD      R0,SP,#+12
   \   00000394   0170               STRB     R1,[R0, #+0]
   \   00000396   2022               MOVS     R2,#+32
   \   00000398   4270               STRB     R2,[R0, #+1]
   \   0000039A   3F23               MOVS     R3,#+63
   \   0000039C   8370               STRB     R3,[R0, #+2]
   \   0000039E   C270               STRB     R2,[R0, #+3]
   \   000003A0   0171               STRB     R1,[R0, #+4]
   \   000003A2   0021               MOVS     R1,#+0
   \   000003A4   4171               STRB     R1,[R0, #+5]
   1141                              dl=5;                    
   \   000003A6   0522               MOVS     R2,#+5
   \   000003A8   0FE0               B        ??MainSide_Refresh_38
   1142                            }//je¿eli s³aba bateria
   1143                            else if  ((Value)&(signed short)0x8000)          
   1144                            { 
   1145                              txt[0]='B';txt[1]='A';txt[2]='T'; txt[3]='E';txt[4]='R'; txt[5]='Y'; txt[5]=0;
   \                     ??MainSide_Refresh_37:
   \   000003AA   03A8               ADD      R0,SP,#+12
   \   000003AC   4221               MOVS     R1,#+66
   \   000003AE   0170               STRB     R1,[R0, #+0]
   \   000003B0   4121               MOVS     R1,#+65
   \   000003B2   4170               STRB     R1,[R0, #+1]
   \   000003B4   5421               MOVS     R1,#+84
   \   000003B6   8170               STRB     R1,[R0, #+2]
   \   000003B8   4521               MOVS     R1,#+69
   \   000003BA   C170               STRB     R1,[R0, #+3]
   \   000003BC   5221               MOVS     R1,#+82
   \   000003BE   0171               STRB     R1,[R0, #+4]
   \   000003C0   5921               MOVS     R1,#+89
   \   000003C2   4171               STRB     R1,[R0, #+5]
   \   000003C4   0021               MOVS     R1,#+0
   \   000003C6   4171               STRB     R1,[R0, #+5]
   1146                              dl=6;    
   \   000003C8   0622               MOVS     R2,#+6
   1147                            }else{
   1148                              
   1149                              dl=sIntToStr(Value,txt);
   1150                              txt[dl++]=127;
   1151                            }
   1152                            Label20(txt,2,0,ScreenPaternDesign[PaternDesign].Temperature.Poz.y,dl,64,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                                   ^
Warning[Pe223]: function "Label20" declared implicitly
   \                     ??MainSide_Refresh_38:
   \   000003CA   82B0               SUB      SP,SP,#+8
   \   000003CC   0800               MOVS     R0,R1
   \   000003CE   0090               STR      R0,[SP, #+0]
   \   000003D0   6921               MOVS     R1,#+105
   \   000003D2   03B4               PUSH     {R0,R1}
   \   000003D4   4021               MOVS     R1,#+64
   \   000003D6   1000               MOVS     R0,R2
   \   000003D8   03B4               PUSH     {R0,R1}
   \   000003DA   2378               LDRB     R3,[R4, #+0]
   \   000003DC   0022               MOVS     R2,#+0
   \   000003DE   0221               MOVS     R1,#+2
   \   000003E0   09A8               ADD      R0,SP,#+36
   \   000003E2   ........           BL       Label20
   \   000003E6   06B0               ADD      SP,SP,#+24
   1153          
   1154                        }
   1155                    
   1156                     char time_char[9];
   1157                      //Czas
   1158                      if ((ScreenPaternDesign[PaternDesign].Time.Width>0))
   \                     ??MainSide_Refresh_36:
   \   000003E8   6079               LDRB     R0,[R4, #+5]
   \   000003EA   0028               CMP      R0,#+0
   \   000003EC   19D0               BEQ      ??MainSide_Refresh_39
   1159                        {                  
   1160                            
   1161                            TimeToStr(DateTime.Hour,DateTime.Minute,DateTime.Second,time_char);
   \   000003EE   5A48               LDR      R0,??MainSide_Refresh_29+0x8  ;; DateTime
   \   000003F0   06AB               ADD      R3,SP,#+24
   \   000003F2   4279               LDRB     R2,[R0, #+5]
   \   000003F4   0179               LDRB     R1,[R0, #+4]
   \   000003F6   C078               LDRB     R0,[R0, #+3]
   \   000003F8   ........           BL       TimeToStr
   1162                            time_char[8]=0;
   \   000003FC   06A8               ADD      R0,SP,#+24
   \   000003FE   0021               MOVS     R1,#+0
   \   00000400   0172               STRB     R1,[R0, #+8]
   1163                            Label(time_char,0,
   1164                                  ScreenPaternDesign[PaternDesign].Time.Poz.x,
   1165                                  ScreenPaternDesign[PaternDesign].Time.Poz.y,8,43,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000402   82B0               SUB      SP,SP,#+8
   \   00000404   0800               MOVS     R0,R1
   \   00000406   0090               STR      R0,[SP, #+0]
   \   00000408   7F21               MOVS     R1,#+127
   \   0000040A   0120               MOVS     R0,#+1
   \   0000040C   03B4               PUSH     {R0,R1}
   \   0000040E   2B21               MOVS     R1,#+43
   \   00000410   0820               MOVS     R0,#+8
   \   00000412   03B4               PUSH     {R0,R1}
   \   00000414   2379               LDRB     R3,[R4, #+4]
   \   00000416   E278               LDRB     R2,[R4, #+3]
   \   00000418   0021               MOVS     R1,#+0
   \   0000041A   0CA8               ADD      R0,SP,#+48
   \   0000041C   ........           BL       Label
   \   00000420   06B0               ADD      SP,SP,#+24
   1166                        }
   1167                    
   1168                      //Date
   1169                      if ((ScreenPaternDesign[PaternDesign].Date.Width>0))
   \                     ??MainSide_Refresh_39:
   \   00000422   607A               LDRB     R0,[R4, #+9]
   \   00000424   0028               CMP      R0,#+0
   \   00000426   19D0               BEQ      ??MainSide_Refresh_6
   1170                        {                  
   1171                            DateToStr(DateTime.Day,DateTime.Mounth,DateTime.Year,time_char);//(char dzin, char mies, char rok, char Vstring[8])
   \   00000428   4B48               LDR      R0,??MainSide_Refresh_29+0x8  ;; DateTime
   \   0000042A   06AB               ADD      R3,SP,#+24
   \   0000042C   0278               LDRB     R2,[R0, #+0]
   \   0000042E   4178               LDRB     R1,[R0, #+1]
   \   00000430   8078               LDRB     R0,[R0, #+2]
   \   00000432   ........           BL       DateToStr
   1172                            time_char[8]=0;
   \   00000436   06A8               ADD      R0,SP,#+24
   \   00000438   0021               MOVS     R1,#+0
   \   0000043A   0172               STRB     R1,[R0, #+8]
   1173                            Label(time_char,0,
   1174                                  ScreenPaternDesign[PaternDesign].Date.Poz.x,
   1175                                  ScreenPaternDesign[PaternDesign].Date.Poz.y,
   1176                                  8,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000043C   82B0               SUB      SP,SP,#+8
   \   0000043E   0800               MOVS     R0,R1
   \   00000440   0090               STR      R0,[SP, #+0]
   \   00000442   7F21               MOVS     R1,#+127
   \   00000444   0120               MOVS     R0,#+1
   \   00000446   03B4               PUSH     {R0,R1}
   \   00000448   2121               MOVS     R1,#+33
   \   0000044A   0820               MOVS     R0,#+8
   \   0000044C   03B4               PUSH     {R0,R1}
   \   0000044E   237A               LDRB     R3,[R4, #+8]
   \   00000450   E279               LDRB     R2,[R4, #+7]
   \   00000452   0021               MOVS     R1,#+0
   \   00000454   0CA8               ADD      R0,SP,#+48
   \   00000456   ........           BL       Label
   \   0000045A   06B0               ADD      SP,SP,#+24
   1177                        }          
   1178              
   1179                } 
   1180                      //wskanik ¿ycia
   1181                    if (CurrentSheet==0) 
   \                     ??MainSide_Refresh_6:
   \   0000045C   3F48               LDR      R0,??MainSide_Refresh_29+0xC  ;; TextToChangeLength + 4
   \   0000045E   0078               LDRB     R0,[R0, #+0]
   \   00000460   0028               CMP      R0,#+0
   \   00000462   71D1               BNE      ??MainSide_Refresh_1
   1182                    {
   1183                    
   1184                      if ((MainSide_puls==0) || (MainSide_puls>3))
   \   00000464   3E4C               LDR      R4,??MainSide_Refresh_29+0x10  ;; MainSide_puls
   \   00000466   2578               LDRB     R5,[R4, #+0]
   \   00000468   002D               CMP      R5,#+0
   \   0000046A   01D0               BEQ      ??MainSide_Refresh_40
   \   0000046C   042D               CMP      R5,#+4
   \   0000046E   3AD3               BCC      ??MainSide_Refresh_41
   1185                      { 
   1186                        
   1187                        char ekran1[2][13] = {
   1188                                   {0,0,224,24,232,244,244,244,232,24,224,0,0},
   1189                                    {0,0,0,3,2,5,5,5,2,3,0,0,0}
   1190                                    };
   \                     ??MainSide_Refresh_40:
   \   00000470   3C4E               LDR      R6,??MainSide_Refresh_29+0x14  ;; `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>`
   \   00000472   09A8               ADD      R0,SP,#+36
   \   00000474   3100               MOVS     R1,R6
   \   00000476   0C31               ADDS     R1,R1,#+12
   \   00000478   1C22               MOVS     R2,#+28
   \   0000047A   ........           BL       __aeabi_memcpy4
   1191                  
   1192                        char ekranSlave[2][13] = {
   1193                                    {0,0,224,248,152,124,180,220,56,248,224,0,0},
   1194                                    {0,0,0,3,3,7,5,7,3,3,0,0,0},
   1195                                    };
   \   0000047E   10A8               ADD      R0,SP,#+64
   \   00000480   2836               ADDS     R6,R6,#+40
   \   00000482   3100               MOVS     R1,R6
   \   00000484   1C22               MOVS     R2,#+28
   \   00000486   ........           BL       __aeabi_memcpy4
   1196                        
   1197                        if ((SlaveMode) )//je¿eli tryb slave
   \   0000048A   3748               LDR      R0,??MainSide_Refresh_29+0x18  ;; SlaveMode
   \   0000048C   0078               LDRB     R0,[R0, #+0]
   \   0000048E   0028               CMP      R0,#+0
   \   00000490   14D0               BEQ      ??MainSide_Refresh_42
   1198                        {
   1199                              for (char i=0; i<=12; i++)
   \   00000492   0021               MOVS     R1,#+0
   \                     ??MainSide_Refresh_43:
   \   00000494   0800               MOVS     R0,R1
   \   00000496   0D28               CMP      R0,#+13
   \   00000498   25D2               BCS      ??MainSide_Refresh_41
   1200                              {
   1201                           
   1202                              LCD_Canvas[0][i+115]=ekranSlave[0][i];
   \   0000049A   0A00               MOVS     R2,R1
   \   0000049C   3348               LDR      R0,??MainSide_Refresh_29+0x1C  ;; LCD_Canvas
   \   0000049E   8318               ADDS     R3,R0,R2
   \   000004A0   7333               ADDS     R3,R3,#+115
   \   000004A2   10AE               ADD      R6,SP,#+64
   \   000004A4   B65C               LDRB     R6,[R6, R2]
   \   000004A6   1E70               STRB     R6,[R3, #+0]
   1203                              LCD_Canvas[1][i+115]=ekranSlave[1][i];
   \   000004A8   8018               ADDS     R0,R0,R2
   \   000004AA   F330               ADDS     R0,R0,#+243
   \   000004AC   10AB               ADD      R3,SP,#+64
   \   000004AE   9A18               ADDS     R2,R3,R2
   \   000004B0   527B               LDRB     R2,[R2, #+13]
   \   000004B2   0270               STRB     R2,[R0, #+0]
   1204                              }
   \   000004B4   491C               ADDS     R1,R1,#+1
   \   000004B6   0906               LSLS     R1,R1,#+24
   \   000004B8   090E               LSRS     R1,R1,#+24
   \   000004BA   EBE7               B        ??MainSide_Refresh_43
   1205                        }else{
   1206                          
   1207                            for (char i=0; i<=12; i++)
   \                     ??MainSide_Refresh_42:
   \   000004BC   0021               MOVS     R1,#+0
   \   000004BE   0FE0               B        ??MainSide_Refresh_44
   1208                            {
   1209                           
   1210                              LCD_Canvas[0][i+115]=ekran1[0][i];
   \                     ??MainSide_Refresh_45:
   \   000004C0   0A00               MOVS     R2,R1
   \   000004C2   2A48               LDR      R0,??MainSide_Refresh_29+0x1C  ;; LCD_Canvas
   \   000004C4   8318               ADDS     R3,R0,R2
   \   000004C6   7333               ADDS     R3,R3,#+115
   \   000004C8   09AE               ADD      R6,SP,#+36
   \   000004CA   B65C               LDRB     R6,[R6, R2]
   \   000004CC   1E70               STRB     R6,[R3, #+0]
   1211                              LCD_Canvas[1][i+115]=ekran1[1][i];
   \   000004CE   8018               ADDS     R0,R0,R2
   \   000004D0   F330               ADDS     R0,R0,#+243
   \   000004D2   09AB               ADD      R3,SP,#+36
   \   000004D4   9A18               ADDS     R2,R3,R2
   \   000004D6   527B               LDRB     R2,[R2, #+13]
   \   000004D8   0270               STRB     R2,[R0, #+0]
   1212                            }
   \   000004DA   491C               ADDS     R1,R1,#+1
   \   000004DC   0906               LSLS     R1,R1,#+24
   \   000004DE   090E               LSRS     R1,R1,#+24
   \                     ??MainSide_Refresh_44:
   \   000004E0   0800               MOVS     R0,R1
   \   000004E2   0D28               CMP      R0,#+13
   \   000004E4   ECD3               BCC      ??MainSide_Refresh_45
   1213                          }
   1214                       //if ((!g_SlaveConnect) && (SlaveMode)) H_line(2,121,7,0);
   1215                      }
   1216                      if ((MainSide_puls==1) )
   \                     ??MainSide_Refresh_41:
   \   000004E6   012D               CMP      R5,#+1
   \   000004E8   21D1               BNE      ??MainSide_Refresh_46
   1217                      {
   1218                        
   1219                        if ((g_SlaveConnect) || (!SlaveMode))
   \   000004EA   2148               LDR      R0,??MainSide_Refresh_29+0x20  ;; g_SlaveConnect
   \   000004EC   0078               LDRB     R0,[R0, #+0]
   \   000004EE   0028               CMP      R0,#+0
   \   000004F0   03D1               BNE      ??MainSide_Refresh_47
   \   000004F2   1D48               LDR      R0,??MainSide_Refresh_29+0x18  ;; SlaveMode
   \   000004F4   0078               LDRB     R0,[R0, #+0]
   \   000004F6   0028               CMP      R0,#+0
   \   000004F8   19D1               BNE      ??MainSide_Refresh_46
   1220                        {
   1221                          char ekran2[2][13] = {
   1222                                    {240,28,230,250,251,253,253,253,251,250,230,28,240},
   1223                                    {1,7,12,11,27,23,23,23,27,11,12,7,1},
   1224                                    };
   \                     ??MainSide_Refresh_47:
   \   000004FA   09A8               ADD      R0,SP,#+36
   \   000004FC   1D49               LDR      R1,??MainSide_Refresh_29+0x24  ;; `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>` + 68
   \   000004FE   1C22               MOVS     R2,#+28
   \   00000500   ........           BL       __aeabi_memcpy4
   1225                        
   1226                          for (char i=0; i<=12; i++)
   \   00000504   0021               MOVS     R1,#+0
   \   00000506   0FE0               B        ??MainSide_Refresh_48
   1227                          {
   1228                           
   1229                            LCD_Canvas[0][i+115]=ekran2[0][i];
   \                     ??MainSide_Refresh_49:
   \   00000508   0A00               MOVS     R2,R1
   \   0000050A   1848               LDR      R0,??MainSide_Refresh_29+0x1C  ;; LCD_Canvas
   \   0000050C   8318               ADDS     R3,R0,R2
   \   0000050E   7333               ADDS     R3,R3,#+115
   \   00000510   09AE               ADD      R6,SP,#+36
   \   00000512   B65C               LDRB     R6,[R6, R2]
   \   00000514   1E70               STRB     R6,[R3, #+0]
   1230                            LCD_Canvas[1][i+115]=ekran2[1][i];
   \   00000516   8018               ADDS     R0,R0,R2
   \   00000518   F330               ADDS     R0,R0,#+243
   \   0000051A   09AB               ADD      R3,SP,#+36
   \   0000051C   9A18               ADDS     R2,R3,R2
   \   0000051E   527B               LDRB     R2,[R2, #+13]
   \   00000520   0270               STRB     R2,[R0, #+0]
   1231                          }
   \   00000522   491C               ADDS     R1,R1,#+1
   \   00000524   0906               LSLS     R1,R1,#+24
   \   00000526   090E               LSRS     R1,R1,#+24
   \                     ??MainSide_Refresh_48:
   \   00000528   0800               MOVS     R0,R1
   \   0000052A   0D28               CMP      R0,#+13
   \   0000052C   ECD3               BCC      ??MainSide_Refresh_49
   1232                        }
   1233                  
   1234                      }
   1235                       
   1236                  
   1237                    if (g_Stop_Program==0)
   \                     ??MainSide_Refresh_46:
   \   0000052E   1248               LDR      R0,??MainSide_Refresh_29+0x28  ;; g_Stop_Program
   \   00000530   0078               LDRB     R0,[R0, #+0]
   \   00000532   0028               CMP      R0,#+0
   \   00000534   06D1               BNE      ??MainSide_Refresh_50
   1238                    {  
   1239                     if (MainSide_puls>7) {MainSide_puls=0;} else {MainSide_puls++;}    
   \   00000536   082D               CMP      R5,#+8
   \   00000538   01D3               BCC      ??MainSide_Refresh_51
   \   0000053A   2070               STRB     R0,[R4, #+0]
   \   0000053C   04E0               B        ??MainSide_Refresh_1
   \                     ??MainSide_Refresh_51:
   \   0000053E   6D1C               ADDS     R5,R5,#+1
   \   00000540   2570               STRB     R5,[R4, #+0]
   \   00000542   01E0               B        ??MainSide_Refresh_1
   1240                    }else{
   1241                      MainSide_puls=7; 
   \                     ??MainSide_Refresh_50:
   \   00000544   0720               MOVS     R0,#+7
   \   00000546   2070               STRB     R0,[R4, #+0]
   1242                    }
   1243                     
   1244                    }
   1245                    
   1246                  
   1247                    
   1248          
   1249                
   1250            
   1251            }  
   1252          }//_______________________ Koniec funkcji MainSide_Refresh __________________________
   \                     ??MainSide_Refresh_1:
   \   00000548   19B0               ADD      SP,SP,#+100
   \   0000054A   F0BC               POP      {R4-R7}
   \   0000054C   01BC               POP      {R0}
   \   0000054E   0047               BX       R0               ;; return
   \                     ??MainSide_Refresh_29:
   \   00000550   AA8AFFFF           DC32     0xffff8aaa
   \   00000554   ........           DC32     MainStage
   \   00000558   ........           DC32     DateTime
   \   0000055C   ........           DC32     TextToChangeLength + 4
   \   00000560   ........           DC32     MainSide_puls
   \   00000564   ........           DC32     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>`
   \   00000568   ........           DC32     SlaveMode
   \   0000056C   ........           DC32     LCD_Canvas
   \   00000570   ........           DC32     g_SlaveConnect
   \   00000574   ........           DC32     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>` + 68
   \   00000578   ........           DC32     g_Stop_Program
   1253          
   1254          
   1255          
   1256          
   1257          
   1258          
   1259          
   1260          
   1261          //*-----------------------------------------------------------------------------
   1262          //* Nazwa funkcji :    Termostat_Paint
   1263          //* Funkcja strony g³ównej menu
   1264          //*-----------------------------------------------------------------------------
   1265          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   1266          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1267          void Termostat_Paint(_Screen* ScreenLokal)
   1268          {
   \                     Termostat_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   91B0               SUB      SP,SP,#+68
   \   00000004   0400               MOVS     R4,R0
   1269            if (CurrentSheet!=0)  List_Paint(Speech[g_leng].Termo_,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   7F4D               LDR      R5,??Termostat_Paint_0  ;; TextToChangeLength
   \   00000008   2879               LDRB     R0,[R5, #+4]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   17D0               BEQ      ??Termostat_Paint_1
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   7BA0               ADR      R0,??Termostat_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0321               MOVS     R1,#+3
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0300               MOVS     R3,R0
   \   00000024   6C22               MOVS     R2,#+108
   \   00000026   0121               MOVS     R1,#+1
   \   00000028   7848               LDR      R0,??Termostat_Paint_0+0x8  ;; 0x735
   \   0000002A   794E               LDR      R6,??Termostat_Paint_0+0xC  ;; g_leng
   \   0000002C   3668               LDR      R6,[R6, #+0]
   \   0000002E   794F               LDR      R7,??Termostat_Paint_0+0x10  ;; 0xa14
   \   00000030   7E43               MULS     R6,R7,R6
   \   00000032   794F               LDR      R7,??Termostat_Paint_0+0x14  ;; Speech
   \   00000034   BE19               ADDS     R6,R7,R6
   \   00000036   3018               ADDS     R0,R6,R0
   \   00000038   ........           BL       List_Paint
   \   0000003C   0AB0               ADD      SP,SP,#+40
   1270                    
   1271            char txt[7];
   1272          
   1273            H_line(0,70,65,1);
   \                     ??Termostat_Paint_1:
   \   0000003E   0123               MOVS     R3,#+1
   \   00000040   4122               MOVS     R2,#+65
   \   00000042   4621               MOVS     R1,#+70
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   ........           BL       H_line
   1274            char GraphTermometr[3][18] = 
   1275                              { 
   1276                               {128,192,192,128,128,224,128,224,128,224,128,128,128,128,128,128,128,0},
   1277                               {3,7,7,3,3,3,3,3,2,2,2,14,2,14,2,14,2,1},
   1278                               {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
   1279                            };
   \   0000004A   744E               LDR      R6,??Termostat_Paint_0+0x18  ;; `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   0000004C   03A8               ADD      R0,SP,#+12
   \   0000004E   3100               MOVS     R1,R6
   \   00000050   3822               MOVS     R2,#+56
   \   00000052   ........           BL       __aeabi_memcpy4
   1280            
   1281            CopyToCanvasPoint(GraphTermometr[0], 1, 33, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000056   82B0               SUB      SP,SP,#+8
   \   00000058   1220               MOVS     R0,#+18
   \   0000005A   0090               STR      R0,[SP, #+0]
   \   0000005C   0300               MOVS     R3,R0
   \   0000005E   2122               MOVS     R2,#+33
   \   00000060   0121               MOVS     R1,#+1
   \   00000062   05A8               ADD      R0,SP,#+20
   \   00000064   ........           BL       CopyToCanvasPoint
   \   00000068   02B0               ADD      SP,SP,#+8
   1282          
   1283            
   1284            if (ScreenLokal->Thermo.AutoOn==1)
   \   0000006A   2700               MOVS     R7,R4
   \   0000006C   8E37               ADDS     R7,R7,#+142
   \   0000006E   3878               LDRB     R0,[R7, #+0]
   \   00000070   0128               CMP      R0,#+1
   \   00000072   6BD1               BNE      ??Termostat_Paint_2
   1285            {
   1286                      
   1287                Label("Auto",0,17,52,6,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   6921               MOVS     R1,#+105
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   1421               MOVS     R1,#+20
   \   00000080   0620               MOVS     R0,#+6
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   3423               MOVS     R3,#+52
   \   00000086   1122               MOVS     R2,#+17
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   3000               MOVS     R0,R6
   \   0000008C   3830               ADDS     R0,R0,#+56
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
   1288                
   1289                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \   00000094   6946               MOV      R1,SP
   \   00000096   0820               MOVS     R0,#+8
   \   00000098   385E               LDRSH    R0,[R7, R0]
   \   0000009A   ........           BL       sIntToStr
   \   0000009E   0200               MOVS     R2,R0
   1290                txt[dl++]=127;
   \   000000A0   1300               MOVS     R3,R2
   \   000000A2   6846               MOV      R0,SP
   \   000000A4   7F21               MOVS     R1,#+127
   \   000000A6   C154               STRB     R1,[R0, R3]
   1291                Label(txt,0,17,43,dl,30,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000A8   82B0               SUB      SP,SP,#+8
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   0090               STR      R0,[SP, #+0]
   \   000000AE   6921               MOVS     R1,#+105
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   1E21               MOVS     R1,#+30
   \   000000B4   521C               ADDS     R2,R2,#+1
   \   000000B6   1000               MOVS     R0,R2
   \   000000B8   0006               LSLS     R0,R0,#+24
   \   000000BA   000E               LSRS     R0,R0,#+24
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   2B23               MOVS     R3,#+43
   \   000000C0   1122               MOVS     R2,#+17
   \   000000C2   0021               MOVS     R1,#+0
   \   000000C4   06A8               ADD      R0,SP,#+24
   \   000000C6   ........           BL       Label
   \   000000CA   06B0               ADD      SP,SP,#+24
   1292                char txt[2]; txt[1]=0; 
   \   000000CC   02A8               ADD      R0,SP,#+8
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   4170               STRB     R1,[R0, #+1]
   1293                
   1294                
   1295                char MaxTmp;
   1296                if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \   000000D2   0621               MOVS     R1,#+6
   \   000000D4   795E               LDRSH    R1,[R7, R1]
   \   000000D6   0422               MOVS     R2,#+4
   \   000000D8   BA5E               LDRSH    R2,[R7, R2]
   \   000000DA   9142               CMP      R1,R2
   \   000000DC   01DA               BGE      ??Termostat_Paint_3
   1297                {
   1298                  MaxTmp=ScreenLokal->Thermo.Temperature[0]; 
   \   000000DE   B988               LDRH     R1,[R7, #+4]
   \   000000E0   00E0               B        ??Termostat_Paint_4
   1299                }else{
   1300                  MaxTmp=ScreenLokal->Thermo.Temperature[1];
   \                     ??Termostat_Paint_3:
   \   000000E2   F988               LDRH     R1,[R7, #+6]
   1301                }
   1302                
   1303                if (ScreenLokal->Thermo.SetTemperature==MaxTmp)
   \                     ??Termostat_Paint_4:
   \   000000E4   0822               MOVS     R2,#+8
   \   000000E6   BA5E               LDRSH    R2,[R7, R2]
   \   000000E8   0906               LSLS     R1,R1,#+24
   \   000000EA   090E               LSRS     R1,R1,#+24
   \   000000EC   8A42               CMP      R2,R1
   \   000000EE   02D1               BNE      ??Termostat_Paint_5
   1304                {
   1305                 txt[0]=31; 
   \   000000F0   1F21               MOVS     R1,#+31
   \   000000F2   0170               STRB     R1,[R0, #+0]
   \   000000F4   01E0               B        ??Termostat_Paint_6
   1306                }else{
   1307                 txt[0]=30;       
   \                     ??Termostat_Paint_5:
   \   000000F6   1E21               MOVS     R1,#+30
   \   000000F8   0170               STRB     R1,[R0, #+0]
   1308                }
   1309                
   1310                Button(txt,45,44,15,17);
   \                     ??Termostat_Paint_6:
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   1120               MOVS     R0,#+17
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   0F23               MOVS     R3,#+15
   \   00000102   2C22               MOVS     R2,#+44
   \   00000104   2D21               MOVS     R1,#+45
   \   00000106   04A8               ADD      R0,SP,#+16
   \   00000108   ........           BL       Button
   \   0000010C   02B0               ADD      SP,SP,#+8
   1311                Button(Speech[g_leng].Ustaw,17,26,43,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   0D20               MOVS     R0,#+13
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   2B23               MOVS     R3,#+43
   \   00000116   1A22               MOVS     R2,#+26
   \   00000118   1121               MOVS     R1,#+17
   \   0000011A   8C46               MOV      R12,R1
   \   0000011C   4049               LDR      R1,??Termostat_Paint_0+0x1C  ;; 0x726
   \   0000011E   3C48               LDR      R0,??Termostat_Paint_0+0xC  ;; g_leng
   \   00000120   0068               LDR      R0,[R0, #+0]
   \   00000122   3C4F               LDR      R7,??Termostat_Paint_0+0x10  ;; 0xa14
   \   00000124   7843               MULS     R0,R7,R0
   \   00000126   3C4F               LDR      R7,??Termostat_Paint_0+0x14  ;; Speech
   \   00000128   3818               ADDS     R0,R7,R0
   \   0000012A   4018               ADDS     R0,R0,R1
   \   0000012C   6146               MOV      R1,R12
   \   0000012E   ........           BL       Button
   \   00000132   02B0               ADD      SP,SP,#+8
   1312                Button("Auto off",4,3,56,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000134   82B0               SUB      SP,SP,#+8
   \   00000136   0D20               MOVS     R0,#+13
   \   00000138   0090               STR      R0,[SP, #+0]
   \   0000013A   3823               MOVS     R3,#+56
   \   0000013C   0322               MOVS     R2,#+3
   \   0000013E   0421               MOVS     R1,#+4
   \   00000140   4036               ADDS     R6,R6,#+64
   \   00000142   3000               MOVS     R0,R6
   \   00000144   ........           BL       Button
   \   00000148   02B0               ADD      SP,SP,#+8
   \   0000014A   45E0               B        ??Termostat_Paint_7
   1313          
   1314          }else{
   1315          
   1316                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \                     ??Termostat_Paint_2:
   \   0000014C   6946               MOV      R1,SP
   \   0000014E   0820               MOVS     R0,#+8
   \   00000150   385E               LDRSH    R0,[R7, R0]
   \   00000152   ........           BL       sIntToStr
   \   00000156   0200               MOVS     R2,R0
   1317                txt[dl++]=' ';
   \   00000158   6F46               MOV      R7,SP
   \   0000015A   2021               MOVS     R1,#+32
   \   0000015C   3954               STRB     R1,[R7, R0]
   \   0000015E   521C               ADDS     R2,R2,#+1
   \   00000160   1206               LSLS     R2,R2,#+24
   \   00000162   120E               LSRS     R2,R2,#+24
   1318                txt[dl++]=127;
   \   00000164   1000               MOVS     R0,R2
   \   00000166   7F21               MOVS     R1,#+127
   \   00000168   3954               STRB     R1,[R7, R0]
   1319                Label(txt,2,20,39,dl,40,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000016A   82B0               SUB      SP,SP,#+8
   \   0000016C   0020               MOVS     R0,#+0
   \   0000016E   0090               STR      R0,[SP, #+0]
   \   00000170   6921               MOVS     R1,#+105
   \   00000172   03B4               PUSH     {R0,R1}
   \   00000174   2821               MOVS     R1,#+40
   \   00000176   521C               ADDS     R2,R2,#+1
   \   00000178   1000               MOVS     R0,R2
   \   0000017A   0006               LSLS     R0,R0,#+24
   \   0000017C   000E               LSRS     R0,R0,#+24
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   2723               MOVS     R3,#+39
   \   00000182   1422               MOVS     R2,#+20
   \   00000184   0221               MOVS     R1,#+2
   \   00000186   06A8               ADD      R0,SP,#+24
   \   00000188   ........           BL       Label
   \   0000018C   06B0               ADD      SP,SP,#+24
   1320                txt[1]=0; txt[0]=30;
   \   0000018E   0020               MOVS     R0,#+0
   \   00000190   7870               STRB     R0,[R7, #+1]
   \   00000192   1E20               MOVS     R0,#+30
   \   00000194   3870               STRB     R0,[R7, #+0]
   1321                Button(txt,19,48,41,18);
   \   00000196   82B0               SUB      SP,SP,#+8
   \   00000198   1220               MOVS     R0,#+18
   \   0000019A   0090               STR      R0,[SP, #+0]
   \   0000019C   2923               MOVS     R3,#+41
   \   0000019E   3022               MOVS     R2,#+48
   \   000001A0   1321               MOVS     R1,#+19
   \   000001A2   02A8               ADD      R0,SP,#+8
   \   000001A4   ........           BL       Button
   \   000001A8   02B0               ADD      SP,SP,#+8
   1322                txt[0]=31;
   \   000001AA   1F20               MOVS     R0,#+31
   \   000001AC   3870               STRB     R0,[R7, #+0]
   1323                Button(txt,19,21,41,18);
   \   000001AE   82B0               SUB      SP,SP,#+8
   \   000001B0   1220               MOVS     R0,#+18
   \   000001B2   0090               STR      R0,[SP, #+0]
   \   000001B4   2923               MOVS     R3,#+41
   \   000001B6   1522               MOVS     R2,#+21
   \   000001B8   1321               MOVS     R1,#+19
   \   000001BA   02A8               ADD      R0,SP,#+8
   \   000001BC   ........           BL       Button
   \   000001C0   02B0               ADD      SP,SP,#+8
   1324                Button("Auto on",4,3,56,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height) 
   \   000001C2   82B0               SUB      SP,SP,#+8
   \   000001C4   0D20               MOVS     R0,#+13
   \   000001C6   0090               STR      R0,[SP, #+0]
   \   000001C8   3823               MOVS     R3,#+56
   \   000001CA   0322               MOVS     R2,#+3
   \   000001CC   0421               MOVS     R1,#+4
   \   000001CE   4C36               ADDS     R6,R6,#+76
   \   000001D0   3000               MOVS     R0,R6
   \   000001D2   ........           BL       Button
   \   000001D6   02B0               ADD      SP,SP,#+8
   1325            }
   1326            
   1327            if ((ScreenLokal->Button[0].Hide==0) && (CurrentSheet==0))
   \                     ??Termostat_Paint_7:
   \   000001D8   A07C               LDRB     R0,[R4, #+18]
   \   000001DA   C006               LSLS     R0,R0,#+27
   \   000001DC   0DD4               BMI      ??Termostat_Paint_8
   \   000001DE   2879               LDRB     R0,[R5, #+4]
   \   000001E0   0028               CMP      R0,#+0
   \   000001E2   0AD1               BNE      ??Termostat_Paint_8
   1328            {
   1329              Button(ScreenLokal->Button[0].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1330                            25,103,39,22 // X,Y,Width,Height
   1331                            );
   \   000001E4   82B0               SUB      SP,SP,#+8
   \   000001E6   1620               MOVS     R0,#+22
   \   000001E8   0090               STR      R0,[SP, #+0]
   \   000001EA   2723               MOVS     R3,#+39
   \   000001EC   6722               MOVS     R2,#+103
   \   000001EE   1921               MOVS     R1,#+25
   \   000001F0   0B34               ADDS     R4,R4,#+11
   \   000001F2   2000               MOVS     R0,R4
   \   000001F4   ........           BL       Button
   \   000001F8   02B0               ADD      SP,SP,#+8
   1332            }
   1333          }//_______________________ Koniec funkcji Termostat_Paint __________________________
   \                     ??Termostat_Paint_8:
   \   000001FA   11B0               ADD      SP,SP,#+68
   \   000001FC   F0BC               POP      {R4-R7}
   \   000001FE   01BC               POP      {R0}
   \   00000200   0047               BX       R0               ;; return
   \   00000202   C046               Nop      
   \                     ??Termostat_Paint_0:
   \   00000204   ........           DC32     TextToChangeLength
   \   00000208   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000020C   35070000           DC32     0x735
   \   00000210   ........           DC32     g_leng
   \   00000214   140A0000           DC32     0xa14
   \   00000218   ........           DC32     Speech
   \   0000021C   ........           DC32     `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   00000220   26070000           DC32     0x726
   1334            
   1335          
   1336          
   1337          //sprawdzenie czy zmienne specjalne termostatu s¹ odczytywane przez serwer. Je¿eli tak to przypieszenie wys³ania danych;

   \                                 In section Debug.txt, align 4, keep-with-next
   1338          void ExecuteSpecialThermVar(void)
   1339          {
   \                     ExecuteSpecialThermVar:
   \   00000000   01B5               PUSH     {R0,LR}
   1340             for (char IDX=0; IDX<NET.HTTP.VarSetCount; IDX++)
   \   00000002   0020               MOVS     R0,#+0
   \   00000004   02E0               B        ??ExecuteSpecialThermVar_0
   \                     ??ExecuteSpecialThermVar_1:
   \   00000006   401C               ADDS     R0,R0,#+1
   \   00000008   0006               LSLS     R0,R0,#+24
   \   0000000A   000E               LSRS     R0,R0,#+24
   \                     ??ExecuteSpecialThermVar_0:
   \   0000000C   0949               LDR      R1,??ExecuteSpecialThermVar_2  ;; NET
   \   0000000E   0200               MOVS     R2,R0
   \   00000010   EA23               MOVS     R3,#+234
   \   00000012   CB5C               LDRB     R3,[R1, R3]
   \   00000014   9A42               CMP      R2,R3
   \   00000016   09D2               BCS      ??ExecuteSpecialThermVar_3
   \   00000018   9200               LSLS     R2,R2,#+2
   \   0000001A   8A18               ADDS     R2,R1,R2
   \   0000001C   EE32               ADDS     R2,R2,#+238
   \   0000001E   1278               LDRB     R2,[R2, #+0]
   \   00000020   632A               CMP      R2,#+99
   \   00000022   01D0               BEQ      ??ExecuteSpecialThermVar_4
   \   00000024   642A               CMP      R2,#+100
   \   00000026   EED1               BNE      ??ExecuteSpecialThermVar_1
   1341               {  
   1342                 if ((NET.HTTP.VarSet[IDX].VarType=='c') || (NET.HTTP.VarSet[IDX].VarType=='d'))
   1343                 {
   1344                   NET.Status.NextHttpOrder=HTTP_POST;
   \                     ??ExecuteSpecialThermVar_4:
   \   00000028   0E20               MOVS     R0,#+14
   \   0000002A   C870               STRB     R0,[R1, #+3]
   1345                   break;
   1346                 } 
   1347               }
   1348          }
   \                     ??ExecuteSpecialThermVar_3:
   \   0000002C   08BC               POP      {R3}
   \   0000002E   01BC               POP      {R0}
   \   00000030   0047               BX       R0               ;; return
   \   00000032   C046               Nop      
   \                     ??ExecuteSpecialThermVar_2:
   \   00000034   ........           DC32     NET
   1349          
   1350          
   1351          //*-----------------------------------------------------------------------------
   1352          //* Nazwa funkcji :    Termostat_Event
   1353          //* Funkcja strony g³ównej menu
   1354          //*-----------------------------------------------------------------------------
   1355          //*-----------------------------------------------------------------------------
   1356          
   1357          

   \                                 In section Debug.txt, align 4, keep-with-next
   1358          void Termostat_Event(_Screen* ScreenLokal)
   1359          {
   \                     Termostat_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   \   00000004   0026               MOVS     R6,#+0
   1360            char Repaint=0;
   1361            char WriteTmp;
   1362            char txt[5];
   1363            char txt2[5];
   1364          
   1365           if ((CurrentSheet>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000006   C04C               LDR      R4,??Termostat_Event_0  ;; TextToChangeLength
   \   00000008   2079               LDRB     R0,[R4, #+4]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   22D0               BEQ      ??Termostat_Event_1
   \   0000000E   3100               MOVS     R1,R6
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0F21               MOVS     R1,#+15
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   BC48               LDR      R0,??Termostat_Event_0+0x4  ;; Y_down
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   435E               LDRSH    R3,[R0, R1]
   \   0000001E   BC48               LDR      R0,??Termostat_Event_0+0x8  ;; X_down
   \   00000020   425E               LDRSH    R2,[R0, R1]
   \   00000022   BC48               LDR      R0,??Termostat_Event_0+0xC  ;; Y_up
   \   00000024   415E               LDRSH    R1,[R0, R1]
   \   00000026   BC48               LDR      R0,??Termostat_Event_0+0x10  ;; X_up
   \   00000028   0025               MOVS     R5,#+0
   \   0000002A   405F               LDRSH    R0,[R0, R5]
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   \   00000032   0021               MOVS     R1,#+0
   \   00000034   C943               MVNS     R1,R1            ;; #-1
   \   00000036   8842               CMP      R0,R1
   \   00000038   0CD1               BNE      ??Termostat_Event_1
   1366              {
   1367                 if (SheetHistoryIndex>0)
   \   0000003A   E079               LDRB     R0,[R4, #+7]
   \   0000003C   0028               CMP      R0,#+0
   \   0000003E   07D0               BEQ      ??Termostat_Event_2
   1368                    {
   1369                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   00000040   401E               SUBS     R0,R0,#+1
   \   00000042   E071               STRB     R0,[R4, #+7]
   \   00000044   0006               LSLS     R0,R0,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   2018               ADDS     R0,R4,R0
   \   0000004A   2030               ADDS     R0,R0,#+32
   \   0000004C   0078               LDRB     R0,[R0, #+0]
   \   0000004E   2071               STRB     R0,[R4, #+4]
   1370                    } 
   1371                   Repaint=1; 
   \                     ??Termostat_Event_2:
   \   00000050   0126               MOVS     R6,#+1
   \   00000052   4BE1               B        ??Termostat_Event_3
   1372              }else{
   1373            
   1374                      //przycisk opcjonalny
   1375                          if ((ScreenLokal->Button[0].Hide==0) && (CurrentSheet==0))
   \                     ??Termostat_Event_1:
   \   00000054   0698               LDR      R0,[SP, #+24]
   \   00000056   807C               LDRB     R0,[R0, #+18]
   \   00000058   C006               LSLS     R0,R0,#+27
   \   0000005A   21D4               BMI      ??Termostat_Event_4
   \   0000005C   2079               LDRB     R0,[R4, #+4]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   1ED1               BNE      ??Termostat_Event_4
   1376                          {
   1377                             if (Button(ScreenLokal->Button[0].Text,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   1378                                      25,103,39,22 // X,Y,Width,Height
   1379                                      )==1)
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   1620               MOVS     R0,#+22
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   2723               MOVS     R3,#+39
   \   0000006A   6722               MOVS     R2,#+103
   \   0000006C   1921               MOVS     R1,#+25
   \   0000006E   0898               LDR      R0,[SP, #+32]
   \   00000070   0B30               ADDS     R0,R0,#+11
   \   00000072   ........           BL       Button
   \   00000076   02B0               ADD      SP,SP,#+8
   \   00000078   0128               CMP      R0,#+1
   \   0000007A   11D1               BNE      ??Termostat_Event_4
   1380                                 {
   1381                                   MainStage.StageButton[1+(10*CurrentSheet)]=1;
   \   0000007C   2179               LDRB     R1,[R4, #+4]
   \   0000007E   0A22               MOVS     R2,#+10
   \   00000080   5143               MULS     R1,R2,R1
   \   00000082   A64A               LDR      R2,??Termostat_Event_0+0x14  ;; MainStage
   \   00000084   5118               ADDS     R1,R2,R1
   \   00000086   0200               MOVS     R2,R0
   \   00000088   4A70               STRB     R2,[R1, #+1]
   1382                                   
   1383                                   //je¿eli ustawiona akcja otwarcia strony
   1384                                   if (ScreenLokal->Button[0].OpenPage) 
   \   0000008A   0F21               MOVS     R1,#+15
   \   0000008C   069A               LDR      R2,[SP, #+24]
   \   0000008E   927C               LDRB     R2,[R2, #+18]
   \   00000090   0A42               TST      R2,R1
   \   00000092   05D0               BEQ      ??Termostat_Event_4
   1385                                   {
   1386                                     CurrentSheet=ScreenLokal->Button[0].OpenPage-1;
   \   00000094   069A               LDR      R2,[SP, #+24]
   \   00000096   927C               LDRB     R2,[R2, #+18]
   \   00000098   1140               ANDS     R1,R1,R2
   \   0000009A   491E               SUBS     R1,R1,#+1
   \   0000009C   2171               STRB     R1,[R4, #+4]
   1387                                     Repaint=1;
   \   0000009E   0600               MOVS     R6,R0
   1388                                   }
   1389                                   
   1390                                 }
   1391                          }
   1392                
   1393                          
   1394                          
   1395                
   1396                      _ProgramTab *pProgramTab=(_ProgramTab*)((AT91C_IFLASH_MEM->FlashProgram));
   1397                      
   1398                      
   1399                      //je¿eli AutoOn
   1400                      if (ScreenLokal->Thermo.AutoOn==1)
   \                     ??Termostat_Event_4:
   \   000000A0   069D               LDR      R5,[SP, #+24]
   \   000000A2   8E35               ADDS     R5,R5,#+142
   \   000000A4   9E48               LDR      R0,??Termostat_Event_0+0x18  ;; `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   000000A6   2978               LDRB     R1,[R5, #+0]
   \   000000A8   0129               CMP      R1,#+1
   \   000000AA   00D0               BEQ      .+4
   \   000000AC   80E0               B        ??Termostat_Event_5
   1401                      {
   1402                          txt[1]=0; txt[0]=31;
   \   000000AE   01AF               ADD      R7,SP,#+4
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   7970               STRB     R1,[R7, #+1]
   \   000000B4   1F21               MOVS     R1,#+31
   \   000000B6   3970               STRB     R1,[R7, #+0]
   1403                      
   1404                          if (Button("Auto off",4,3,56,13)==1)  //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   0D21               MOVS     R1,#+13
   \   000000BC   0091               STR      R1,[SP, #+0]
   \   000000BE   3823               MOVS     R3,#+56
   \   000000C0   0322               MOVS     R2,#+3
   \   000000C2   0421               MOVS     R1,#+4
   \   000000C4   4030               ADDS     R0,R0,#+64
   \   000000C6   ........           BL       Button
   \   000000CA   02B0               ADD      SP,SP,#+8
   \   000000CC   0128               CMP      R0,#+1
   \   000000CE   27D1               BNE      ??Termostat_Event_6
   1405                              {
   1406                              Repaint=1; 
   \   000000D0   0126               MOVS     R6,#+1
   1407                                          
   1408                                //zapis do flash
   1409                                  WriteTmp=0;
   \   000000D2   6846               MOV      R0,SP
   \   000000D4   0021               MOVS     R1,#+0
   \   000000D6   0170               STRB     R1,[R0, #+0]
   1410                                  ScreenLokal->Thermo.AutoOn=WriteTmp;
   \   000000D8   0800               MOVS     R0,R1
   \   000000DA   2870               STRB     R0,[R5, #+0]
   1411                                  unsigned int Save = __get_interrupt_state();  
   \   000000DC   ........           BL       __iar_get_interrupt_state
   \   000000E0   0590               STR      R0,[SP, #+20]
   1412                                  __disable_interrupt();
   \   000000E2   ........           BL       __iar_disable_interrupt
   1413                                  FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.AutoOn),&WriteTmp,1);
                                         ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000E6   3200               MOVS     R2,R6
   \   000000E8   6946               MOV      R1,SP
   \   000000EA   8C46               MOV      R12,R1
   \   000000EC   8D49               LDR      R1,??Termostat_Event_0+0x1C  ;; 0xbc26
   \   000000EE   2079               LDRB     R0,[R4, #+4]
   \   000000F0   A023               MOVS     R3,#+160
   \   000000F2   5843               MULS     R0,R3,R0
   \   000000F4   8C4B               LDR      R3,??Termostat_Event_0+0x20  ;; 0x130100
   \   000000F6   1818               ADDS     R0,R3,R0
   \   000000F8   4018               ADDS     R0,R0,R1
   \   000000FA   6146               MOV      R1,R12
   \   000000FC   ........           BL       FlashWrite
   1414                                  __set_interrupt_state(Save);
   \   00000100   0598               LDR      R0,[SP, #+20]
   \   00000102   ........           BL       __iar_set_interrupt_state
   1415                                  //koniec zapisu do flash
   1416                                  
   1417                                  gProg.Screen[CurrentSheet].Thermo.SetTemperature=pProgramTab->Screen[CurrentSheet].Thermo.SetTemperature;
   \   00000106   2179               LDRB     R1,[R4, #+4]
   \   00000108   A020               MOVS     R0,#+160
   \   0000010A   4143               MULS     R1,R0,R1
   \   0000010C   874A               LDR      R2,??Termostat_Event_0+0x24  ;; 0xbc2e
   \   0000010E   8848               LDR      R0,??Termostat_Event_0+0x28  ;; gProg
   \   00000110   4318               ADDS     R3,R0,R1
   \   00000112   1000               MOVS     R0,R2
   \   00000114   8446               MOV      R12,R0
   \   00000116   8448               LDR      R0,??Termostat_Event_0+0x20  ;; 0x130100
   \   00000118   4018               ADDS     R0,R0,R1
   \   0000011A   6146               MOV      R1,R12
   \   0000011C   405A               LDRH     R0,[R0, R1]
   \   0000011E   9852               STRH     R0,[R3, R2]
   1418                             }
   1419                          
   1420                          if (Button(Speech[g_leng].Ustaw,17,26,43,13)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??Termostat_Event_6:
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0D20               MOVS     R0,#+13
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   2B23               MOVS     R3,#+43
   \   00000128   1A22               MOVS     R2,#+26
   \   0000012A   1121               MOVS     R1,#+17
   \   0000012C   02B5               PUSH     {R1,LR}
   \   0000012E   9446               MOV      R12,R2
   \   00000130   8049               LDR      R1,??Termostat_Event_0+0x2C  ;; 0x726
   \   00000132   8148               LDR      R0,??Termostat_Event_0+0x30  ;; g_leng
   \   00000134   0068               LDR      R0,[R0, #+0]
   \   00000136   814A               LDR      R2,??Termostat_Event_0+0x34  ;; 0xa14
   \   00000138   5043               MULS     R0,R2,R0
   \   0000013A   814A               LDR      R2,??Termostat_Event_0+0x38  ;; Speech
   \   0000013C   1018               ADDS     R0,R2,R0
   \   0000013E   4018               ADDS     R0,R0,R1
   \   00000140   6246               MOV      R2,R12
   \   00000142   0099               LDR      R1,[SP, #0]
   \   00000144   02B0               ADD      SP,SP,#+8
   \   00000146   ........           BL       Button
   \   0000014A   02B0               ADD      SP,SP,#+8
   \   0000014C   0128               CMP      R0,#+1
   \   0000014E   02D1               BNE      ??Termostat_Event_7
   1421                          {
   1422                            MenuLevel=12;
   \   00000150   0C20               MOVS     R0,#+12
   \   00000152   A064               STR      R0,[R4, #+72]
   1423                            Repaint=1; 
   \   00000154   0126               MOVS     R6,#+1
   1424                          }
   1425                          
   1426                          
   1427                          //prze³¹czenie temperatur w trybie auto
   1428                          signed   short H_Tmp;
   1429                          if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \                     ??Termostat_Event_7:
   \   00000156   0620               MOVS     R0,#+6
   \   00000158   285E               LDRSH    R0,[R5, R0]
   \   0000015A   0421               MOVS     R1,#+4
   \   0000015C   695E               LDRSH    R1,[R5, R1]
   \   0000015E   8842               CMP      R0,R1
   \   00000160   00DA               BGE      ??Termostat_Event_8
   \   00000162   0800               MOVS     R0,R1
   1430                          {
   1431                            H_Tmp=ScreenLokal->Thermo.Temperature[0]; 
   1432                          }else{
   1433                            H_Tmp=ScreenLokal->Thermo.Temperature[1];
   1434                          }
   1435                          
   1436                          
   1437                          if (ScreenLokal->Thermo.SetTemperature==H_Tmp)
   \                     ??Termostat_Event_8:
   \   00000164   0821               MOVS     R1,#+8
   \   00000166   695E               LDRSH    R1,[R5, R1]
   \   00000168   8142               CMP      R1,R0
   \   0000016A   02D1               BNE      ??Termostat_Event_9
   1438                          {
   1439                           txt[0]=31; 
   \   0000016C   1F20               MOVS     R0,#+31
   \   0000016E   3870               STRB     R0,[R7, #+0]
   \   00000170   01E0               B        ??Termostat_Event_10
   1440                          }else{
   1441                           txt[0]=30;
   \                     ??Termostat_Event_9:
   \   00000172   1E20               MOVS     R0,#+30
   \   00000174   3870               STRB     R0,[R7, #+0]
   1442                          }
   1443                          txt[1]=0;
   \                     ??Termostat_Event_10:
   \   00000176   0020               MOVS     R0,#+0
   \   00000178   7870               STRB     R0,[R7, #+1]
   1444                          
   1445                          
   1446                          if (Button(txt,45,44,15,17)==1)
   \   0000017A   82B0               SUB      SP,SP,#+8
   \   0000017C   1120               MOVS     R0,#+17
   \   0000017E   0090               STR      R0,[SP, #+0]
   \   00000180   0F23               MOVS     R3,#+15
   \   00000182   2C22               MOVS     R2,#+44
   \   00000184   2D21               MOVS     R1,#+45
   \   00000186   03A8               ADD      R0,SP,#+12
   \   00000188   ........           BL       Button
   \   0000018C   02B0               ADD      SP,SP,#+8
   \   0000018E   0128               CMP      R0,#+1
   \   00000190   00D0               BEQ      .+4
   \   00000192   ABE0               B        ??Termostat_Event_3
   1447                            {
   1448                                if (ScreenLokal->Thermo.SetTemperature==ScreenLokal->Thermo.Temperature[0])
   \   00000194   0820               MOVS     R0,#+8
   \   00000196   285E               LDRSH    R0,[R5, R0]
   \   00000198   0421               MOVS     R1,#+4
   \   0000019A   695E               LDRSH    R1,[R5, R1]
   \   0000019C   8842               CMP      R0,R1
   \   0000019E   03D1               BNE      ??Termostat_Event_11
   1449                                {      
   1450                                    ScreenLokal->Thermo.SetTemperature=ScreenLokal->Thermo.Temperature[1];
   \   000001A0   E888               LDRH     R0,[R5, #+6]
   \   000001A2   2881               STRH     R0,[R5, #+8]
   1451                                    Repaint=1;
   \   000001A4   0126               MOVS     R6,#+1
   \   000001A6   A1E0               B        ??Termostat_Event_3
   1452                                  
   1453                                }else{
   1454                                    ScreenLokal->Thermo.SetTemperature=ScreenLokal->Thermo.Temperature[0];
   \                     ??Termostat_Event_11:
   \   000001A8   A888               LDRH     R0,[R5, #+4]
   \   000001AA   2881               STRH     R0,[R5, #+8]
   1455                                    Repaint=1;
   \   000001AC   0126               MOVS     R6,#+1
   \   000001AE   9DE0               B        ??Termostat_Event_3
   1456                                }
   1457                                
   1458                            }
   1459                            
   1460                          
   1461                      }
   1462                      else
   1463                      {
   1464                   
   1465                          if (Button("Auto on",4,3,56,13)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height) 
   \                     ??Termostat_Event_5:
   \   000001B0   82B0               SUB      SP,SP,#+8
   \   000001B2   0D21               MOVS     R1,#+13
   \   000001B4   0091               STR      R1,[SP, #+0]
   \   000001B6   3823               MOVS     R3,#+56
   \   000001B8   0322               MOVS     R2,#+3
   \   000001BA   0421               MOVS     R1,#+4
   \   000001BC   4C30               ADDS     R0,R0,#+76
   \   000001BE   ........           BL       Button
   \   000001C2   02B0               ADD      SP,SP,#+8
   \   000001C4   0128               CMP      R0,#+1
   \   000001C6   2FD1               BNE      ??Termostat_Event_12
   1466                            {
   1467                              Repaint=1; 
   \   000001C8   0600               MOVS     R6,R0
   1468                                          
   1469                                //zapis do flash
   1470                                  WriteTmp=1;
   \   000001CA   6946               MOV      R1,SP
   \   000001CC   0200               MOVS     R2,R0
   \   000001CE   0A70               STRB     R2,[R1, #+0]
   1471                                  ScreenLokal->Thermo.AutoOn=WriteTmp;
   \   000001D0   2870               STRB     R0,[R5, #+0]
   1472                                  unsigned int Save = __get_interrupt_state();  
   \   000001D2   ........           BL       __iar_get_interrupt_state
   \   000001D6   0700               MOVS     R7,R0
   1473                                  __disable_interrupt();
   \   000001D8   ........           BL       __iar_disable_interrupt
   1474                                  FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.AutoOn),&WriteTmp,1);
                                         ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000001DC   8C46               MOV      R12,R1
   \   000001DE   5149               LDR      R1,??Termostat_Event_0+0x1C  ;; 0xbc26
   \   000001E0   2079               LDRB     R0,[R4, #+4]
   \   000001E2   A023               MOVS     R3,#+160
   \   000001E4   5843               MULS     R0,R3,R0
   \   000001E6   504B               LDR      R3,??Termostat_Event_0+0x20  ;; 0x130100
   \   000001E8   1818               ADDS     R0,R3,R0
   \   000001EA   4018               ADDS     R0,R0,R1
   \   000001EC   6146               MOV      R1,R12
   \   000001EE   ........           BL       FlashWrite
   1475                                  __set_interrupt_state(Save);
   \   000001F2   3800               MOVS     R0,R7
   \   000001F4   ........           BL       __iar_set_interrupt_state
   \   000001F8   2079               LDRB     R0,[R4, #+4]
   \   000001FA   A021               MOVS     R1,#+160
   \   000001FC   4843               MULS     R0,R1,R0
   \   000001FE   4C49               LDR      R1,??Termostat_Event_0+0x28  ;; gProg
   \   00000200   0818               ADDS     R0,R1,R0
   \   00000202   5049               LDR      R1,??Termostat_Event_0+0x3C  ;; DateTime
   \   00000204   504A               LDR      R2,??Termostat_Event_0+0x40  ;; 0xbc30
   \   00000206   8B79               LDRB     R3,[R1, #+6]
   \   00000208   9B00               LSLS     R3,R3,#+2
   \   0000020A   C318               ADDS     R3,R0,R3
   \   0000020C   9A58               LDR      R2,[R3, R2]
   \   0000020E   C978               LDRB     R1,[R1, #+3]
   \   00000210   CA40               LSRS     R2,R2,R1
   \   00000212   D107               LSLS     R1,R2,#+31
   \   00000214   04D5               BPL      ??Termostat_Event_13
   1476                                  //koniec zapisu do flash
   1477                                  
   1478                                  if (((gProg.Screen[CurrentSheet].Thermo.Chart[DateTime.DayOfWeek]>>DateTime.Hour) & 0x1)==1)
   1479                                  {
   1480                                    gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[0]; 
   \   00000216   4D49               LDR      R1,??Termostat_Event_0+0x44  ;; 0xbc2a
   \   00000218   4018               ADDS     R0,R0,R1
   \   0000021A   0188               LDRH     R1,[R0, #+0]
   \   0000021C   8180               STRH     R1,[R0, #+4]
   \   0000021E   03E0               B        ??Termostat_Event_12
   1481                                  }else{
   1482                                    gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[1]; 
   \                     ??Termostat_Event_13:
   \   00000220   4A49               LDR      R1,??Termostat_Event_0+0x44  ;; 0xbc2a
   \   00000222   4018               ADDS     R0,R0,R1
   \   00000224   4188               LDRH     R1,[R0, #+2]
   \   00000226   8180               STRH     R1,[R0, #+4]
   1483                                  }
   1484          
   1485                             }
   1486                                  
   1487                      
   1488                          txt[1]=0; txt[0]=30;
   \                     ??Termostat_Event_12:
   \   00000228   01AF               ADD      R7,SP,#+4
   \   0000022A   0020               MOVS     R0,#+0
   \   0000022C   7870               STRB     R0,[R7, #+1]
   \   0000022E   1E20               MOVS     R0,#+30
   \   00000230   3870               STRB     R0,[R7, #+0]
   1489                          if ((Button(txt,19,48,41,18)==2)  && ((ScreenLokal->Thermo.SetTemperature)<500)) {((ScreenLokal->Thermo.SetTemperature))++;  Repaint=1; }  //w górê
   \   00000232   82B0               SUB      SP,SP,#+8
   \   00000234   1220               MOVS     R0,#+18
   \   00000236   0090               STR      R0,[SP, #+0]
   \   00000238   2923               MOVS     R3,#+41
   \   0000023A   3022               MOVS     R2,#+48
   \   0000023C   1321               MOVS     R1,#+19
   \   0000023E   03A8               ADD      R0,SP,#+12
   \   00000240   ........           BL       Button
   \   00000244   02B0               ADD      SP,SP,#+8
   \   00000246   0228               CMP      R0,#+2
   \   00000248   0AD1               BNE      ??Termostat_Event_14
   \   0000024A   0820               MOVS     R0,#+8
   \   0000024C   285E               LDRSH    R0,[R5, R0]
   \   0000024E   FA21               MOVS     R1,#+250
   \   00000250   4900               LSLS     R1,R1,#+1        ;; #+500
   \   00000252   8842               CMP      R0,R1
   \   00000254   04DA               BGE      ??Termostat_Event_14
   \   00000256   0820               MOVS     R0,#+8
   \   00000258   285E               LDRSH    R0,[R5, R0]
   \   0000025A   401C               ADDS     R0,R0,#+1
   \   0000025C   2881               STRH     R0,[R5, #+8]
   \   0000025E   0126               MOVS     R6,#+1
   1490                      
   1491                          txt2[0]=31; txt2[1]=0;
   \                     ??Termostat_Event_14:
   \   00000260   03A8               ADD      R0,SP,#+12
   \   00000262   1F21               MOVS     R1,#+31
   \   00000264   0170               STRB     R1,[R0, #+0]
   \   00000266   0021               MOVS     R1,#+0
   \   00000268   4170               STRB     R1,[R0, #+1]
   1492                          if ((Button(txt2,19,21,41,18)==2) && ((ScreenLokal->Thermo.SetTemperature)>0)) {((ScreenLokal->Thermo.SetTemperature))--; Repaint=1; }   //w dó³
   \   0000026A   82B0               SUB      SP,SP,#+8
   \   0000026C   1220               MOVS     R0,#+18
   \   0000026E   0090               STR      R0,[SP, #+0]
   \   00000270   2923               MOVS     R3,#+41
   \   00000272   1522               MOVS     R2,#+21
   \   00000274   1321               MOVS     R1,#+19
   \   00000276   05A8               ADD      R0,SP,#+20
   \   00000278   ........           BL       Button
   \   0000027C   02B0               ADD      SP,SP,#+8
   \   0000027E   0228               CMP      R0,#+2
   \   00000280   08D1               BNE      ??Termostat_Event_15
   \   00000282   0820               MOVS     R0,#+8
   \   00000284   285E               LDRSH    R0,[R5, R0]
   \   00000286   0128               CMP      R0,#+1
   \   00000288   04DB               BLT      ??Termostat_Event_15
   \   0000028A   0820               MOVS     R0,#+8
   \   0000028C   285E               LDRSH    R0,[R5, R0]
   \   0000028E   401E               SUBS     R0,R0,#+1
   \   00000290   2881               STRH     R0,[R5, #+8]
   \   00000292   0126               MOVS     R6,#+1
   1493                      
   1494                           //zapis zmiany temperatury zadanej w trybie manualnym
   1495                           if ((Button(txt,19,48,41,18)==1) || (Button(txt2,19,21,41,18)==1))
   \                     ??Termostat_Event_15:
   \   00000294   82B0               SUB      SP,SP,#+8
   \   00000296   1220               MOVS     R0,#+18
   \   00000298   0090               STR      R0,[SP, #+0]
   \   0000029A   2923               MOVS     R3,#+41
   \   0000029C   3022               MOVS     R2,#+48
   \   0000029E   1321               MOVS     R1,#+19
   \   000002A0   03A8               ADD      R0,SP,#+12
   \   000002A2   ........           BL       Button
   \   000002A6   02B0               ADD      SP,SP,#+8
   \   000002A8   0128               CMP      R0,#+1
   \   000002AA   0BD0               BEQ      ??Termostat_Event_16
   \   000002AC   82B0               SUB      SP,SP,#+8
   \   000002AE   1220               MOVS     R0,#+18
   \   000002B0   0090               STR      R0,[SP, #+0]
   \   000002B2   2923               MOVS     R3,#+41
   \   000002B4   1522               MOVS     R2,#+21
   \   000002B6   1321               MOVS     R1,#+19
   \   000002B8   05A8               ADD      R0,SP,#+20
   \   000002BA   ........           BL       Button
   \   000002BE   02B0               ADD      SP,SP,#+8
   \   000002C0   0128               CMP      R0,#+1
   \   000002C2   13D1               BNE      ??Termostat_Event_3
   1496                           {
   1497                                //zapis do flash
   1498                                  unsigned int Save = __get_interrupt_state();  
   \                     ??Termostat_Event_16:
   \   000002C4   ........           BL       __iar_get_interrupt_state
   \   000002C8   0500               MOVS     R5,R0
   1499                                  __disable_interrupt();
   \   000002CA   ........           BL       __iar_disable_interrupt
   1500                                    FlashWrite((char*)&(pProgramTab->Screen[CurrentSheet].Thermo.SetTemperature),&ScreenLokal->Thermo.SetTemperature,1);
                                           ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000002CE   0122               MOVS     R2,#+1
   \   000002D0   0699               LDR      R1,[SP, #+24]
   \   000002D2   9631               ADDS     R1,R1,#+150
   \   000002D4   1548               LDR      R0,??Termostat_Event_0+0x24  ;; 0xbc2e
   \   000002D6   2379               LDRB     R3,[R4, #+4]
   \   000002D8   A024               MOVS     R4,#+160
   \   000002DA   6343               MULS     R3,R4,R3
   \   000002DC   124C               LDR      R4,??Termostat_Event_0+0x20  ;; 0x130100
   \   000002DE   E318               ADDS     R3,R4,R3
   \   000002E0   1818               ADDS     R0,R3,R0
   \   000002E2   ........           BL       FlashWrite
   1501                                  __set_interrupt_state(Save);
   \   000002E6   2800               MOVS     R0,R5
   \   000002E8   ........           BL       __iar_set_interrupt_state
   1502                                  //koniec zapisu do flash
   1503                           }
   1504          
   1505                      }
   1506                      
   1507                      
   1508          
   1509                      
   1510              }
   1511           
   1512           
   1513          
   1514           
   1515           if (Repaint==1) 
   \                     ??Termostat_Event_3:
   \   000002EC   012E               CMP      R6,#+1
   \   000002EE   07D1               BNE      ??Termostat_Event_17
   1516           {
   1517             ThermostatsTimeChartExecute(); 
   \   000002F0   ........           BL       ThermostatsTimeChartExecute
   1518             ThermostatsExecute();
   \   000002F4   ........           BL       ThermostatsExecute
   1519             MenuPaint();
   \   000002F8   ........           BL       MenuPaint
   1520             ExecuteSpecialThermVar();
   \   000002FC   ........           BL       ExecuteSpecialThermVar
   1521           }
   1522          }//_______________________ Koniec funkcji Termostat_Event __________________________
   \                     ??Termostat_Event_17:
   \   00000300   07B0               ADD      SP,SP,#+28
   \   00000302   F0BC               POP      {R4-R7}
   \   00000304   01BC               POP      {R0}
   \   00000306   0047               BX       R0               ;; return
   \                     ??Termostat_Event_0:
   \   00000308   ........           DC32     TextToChangeLength
   \   0000030C   ........           DC32     Y_down
   \   00000310   ........           DC32     X_down
   \   00000314   ........           DC32     Y_up
   \   00000318   ........           DC32     X_up
   \   0000031C   ........           DC32     MainStage
   \   00000320   ........           DC32     `?<Constant {{128, 192, 192, 128, 128, 224, 128`
   \   00000324   26BC0000           DC32     0xbc26
   \   00000328   00011300           DC32     0x130100
   \   0000032C   2EBC0000           DC32     0xbc2e
   \   00000330   ........           DC32     gProg
   \   00000334   26070000           DC32     0x726
   \   00000338   ........           DC32     g_leng
   \   0000033C   140A0000           DC32     0xa14
   \   00000340   ........           DC32     Speech
   \   00000344   ........           DC32     DateTime
   \   00000348   30BC0000           DC32     0xbc30
   \   0000034C   2ABC0000           DC32     0xbc2a
   1523            
   1524          
   1525          
   1526          
   1527          
   1528          //*-----------------------------------------------------------------------------
   1529          //* Nazwa funkcji :    Termostat_Refresh
   1530          //* Funkcja strony g³ównej menu
   1531          //*-----------------------------------------------------------------------------
   1532          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1533          void Termostat_Refresh(_Screen* ScreenLokal)
   1534          {
   \                     Termostat_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   1535          
   1536            char dl;
   1537            char txt[6];
   1538            signed short Value=MainStage.StageI[ScreenLokal->Thermo.SensorNode].Value[ScreenLokal->Thermo.SensorReg];
   \   00000004   0400               MOVS     R4,R0
   \   00000006   8C34               ADDS     R4,R4,#+140
   \   00000008   A020               MOVS     R0,#+160
   \   0000000A   2179               LDRB     R1,[R4, #+4]
   \   0000000C   4900               LSLS     R1,R1,#+1
   \   0000000E   0322               MOVS     R2,#+3
   \   00000010   A256               LDRSB    R2,[R4, R2]
   \   00000012   1423               MOVS     R3,#+20
   \   00000014   5A43               MULS     R2,R3,R2
   \   00000016   734B               LDR      R3,??Termostat_Refresh_0  ;; MainStage
   \   00000018   9A18               ADDS     R2,R3,R2
   \   0000001A   5118               ADDS     R1,R2,R1
   \   0000001C   0D5E               LDRSH    R5,[R1, R0]
   1539            
   1540             if (ScreenLokal->Thermo.AutoOn==1)
   \   0000001E   A078               LDRB     R0,[R4, #+2]
   \   00000020   0128               CMP      R0,#+1
   \   00000022   1AD1               BNE      ??Termostat_Refresh_1
   1541            {
   1542                     
   1543                char dl=sIntToStr((ScreenLokal->Thermo.SetTemperature),txt); 
   \   00000024   6946               MOV      R1,SP
   \   00000026   0A20               MOVS     R0,#+10
   \   00000028   205E               LDRSH    R0,[R4, R0]
   \   0000002A   ........           BL       sIntToStr
   \   0000002E   0200               MOVS     R2,R0
   1544                txt[dl++]=127;
   \   00000030   6946               MOV      R1,SP
   \   00000032   7F23               MOVS     R3,#+127
   \   00000034   0B54               STRB     R3,[R1, R0]
   1545                Label(txt,0,17,43,dl,27,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000036   82B0               SUB      SP,SP,#+8
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0090               STR      R0,[SP, #+0]
   \   0000003C   6921               MOVS     R1,#+105
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   1B21               MOVS     R1,#+27
   \   00000042   521C               ADDS     R2,R2,#+1
   \   00000044   1000               MOVS     R0,R2
   \   00000046   0006               LSLS     R0,R0,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   2B23               MOVS     R3,#+43
   \   0000004E   1122               MOVS     R2,#+17
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   06A8               ADD      R0,SP,#+24
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
   \                     ??Termostat_Refresh_1:
   \   0000005A   6348               LDR      R0,??Termostat_Refresh_0+0x4  ;; 0xffff8aaa
   \   0000005C   8542               CMP      R5,R0
   \   0000005E   15D0               BEQ      ??Termostat_Refresh_2
   1546                
   1547            }
   1548            
   1549            
   1550             if  ((Value)!=(signed short)0x8AAA)          
   1551            { 
   1552              
   1553              dl=sIntToStr((MainStage.StageI[ScreenLokal->Thermo.SensorNode].Value[ScreenLokal->Thermo.SensorReg]),txt);
   \   00000060   6946               MOV      R1,SP
   \   00000062   A020               MOVS     R0,#+160
   \   00000064   2279               LDRB     R2,[R4, #+4]
   \   00000066   5200               LSLS     R2,R2,#+1
   \   00000068   0323               MOVS     R3,#+3
   \   0000006A   E356               LDRSB    R3,[R4, R3]
   \   0000006C   1426               MOVS     R6,#+20
   \   0000006E   7343               MULS     R3,R6,R3
   \   00000070   5C4E               LDR      R6,??Termostat_Refresh_0  ;; MainStage
   \   00000072   F318               ADDS     R3,R6,R3
   \   00000074   9A18               ADDS     R2,R3,R2
   \   00000076   105E               LDRSH    R0,[R2, R0]
   \   00000078   ........           BL       sIntToStr
   \   0000007C   0200               MOVS     R2,R0
   1554              txt[dl++]=127;
   \   0000007E   6946               MOV      R1,SP
   \   00000080   7F23               MOVS     R3,#+127
   \   00000082   0B54               STRB     R3,[R1, R0]
   \   00000084   521C               ADDS     R2,R2,#+1
   \   00000086   1206               LSLS     R2,R2,#+24
   \   00000088   120E               LSRS     R2,R2,#+24
   \   0000008A   0BE0               B        ??Termostat_Refresh_3
   1555            }else{
   1556              txt[0]='-';txt[1]=' ';txt[2]='?'; txt[3]=' ';txt[4]='-'; txt[5]=0;
   \                     ??Termostat_Refresh_2:
   \   0000008C   2D20               MOVS     R0,#+45
   \   0000008E   6946               MOV      R1,SP
   \   00000090   0870               STRB     R0,[R1, #+0]
   \   00000092   2022               MOVS     R2,#+32
   \   00000094   4A70               STRB     R2,[R1, #+1]
   \   00000096   3F23               MOVS     R3,#+63
   \   00000098   8B70               STRB     R3,[R1, #+2]
   \   0000009A   CA70               STRB     R2,[R1, #+3]
   \   0000009C   0871               STRB     R0,[R1, #+4]
   \   0000009E   0020               MOVS     R0,#+0
   \   000000A0   4871               STRB     R0,[R1, #+5]
   1557              dl=5;
   \   000000A2   0522               MOVS     R2,#+5
   1558            }
   1559          
   1560            char Ypoz=81;
   \                     ??Termostat_Refresh_3:
   \   000000A4   5127               MOVS     R7,#+81
   1561            if ((ScreenLokal->Button[0].Hide==0) || (CurrentSheet>0))
   \   000000A6   0298               LDR      R0,[SP, #+8]
   \   000000A8   807C               LDRB     R0,[R0, #+18]
   \   000000AA   C006               LSLS     R0,R0,#+27
   \   000000AC   03D5               BPL      ??Termostat_Refresh_4
   \   000000AE   4F48               LDR      R0,??Termostat_Refresh_0+0x8  ;; TextToChangeLength + 4
   \   000000B0   0078               LDRB     R0,[R0, #+0]
   \   000000B2   0028               CMP      R0,#+0
   \   000000B4   00D0               BEQ      ??Termostat_Refresh_5
   1562            {
   1563              Ypoz=73;
   \                     ??Termostat_Refresh_4:
   \   000000B6   4927               MOVS     R7,#+73
   1564            }
   1565            
   1566            
   1567            static DzielBat;
                          ^
Warning[Pe260]: explicit type is missing ("int" assumed)
   1568            
   1569            
   1570            if (DzielBat<20) {DzielBat++;} else {DzielBat=0;} 
   \                     ??Termostat_Refresh_5:
   \   000000B8   4D4E               LDR      R6,??Termostat_Refresh_0+0xC  ;; TextToChangeLength
   \   000000BA   706E               LDR      R0,[R6, #+100]
   \   000000BC   1428               CMP      R0,#+20
   \   000000BE   02DA               BGE      ??Termostat_Refresh_6
   \   000000C0   401C               ADDS     R0,R0,#+1
   \   000000C2   7066               STR      R0,[R6, #+100]
   \   000000C4   01E0               B        ??Termostat_Refresh_7
   \                     ??Termostat_Refresh_6:
   \   000000C6   0020               MOVS     R0,#+0
   \   000000C8   7066               STR      R0,[R6, #+100]
   1571            
   1572            if((MainStage.StageI[ScreenLokal->Thermo.SensorNode].Port & 0x8000) && (DzielBat>12) && ((Value)!=(signed short)0x8AAA))
   \                     ??Termostat_Refresh_7:
   \   000000CA   0320               MOVS     R0,#+3
   \   000000CC   2056               LDRSB    R0,[R4, R0]
   \   000000CE   1421               MOVS     R1,#+20
   \   000000D0   4843               MULS     R0,R1,R0
   \   000000D2   4449               LDR      R1,??Termostat_Refresh_0  ;; MainStage
   \   000000D4   0818               ADDS     R0,R1,R0
   \   000000D6   A030               ADDS     R0,R0,#+160
   \   000000D8   0088               LDRH     R0,[R0, #+0]
   \   000000DA   0004               LSLS     R0,R0,#+16
   \   000000DC   21D5               BPL      ??Termostat_Refresh_8
   \   000000DE   706E               LDR      R0,[R6, #+100]
   \   000000E0   0D28               CMP      R0,#+13
   \   000000E2   1EDB               BLT      ??Termostat_Refresh_8
   \   000000E4   4048               LDR      R0,??Termostat_Refresh_0+0x4  ;; 0xffff8aaa
   \   000000E6   8542               CMP      R5,R0
   \   000000E8   1BD0               BEQ      ??Termostat_Refresh_8
   1573            {
   1574              Label20(0,2,0,Ypoz,0,64,0,105,0);
                     ^
Warning[Pe223]: function "Label20" declared implicitly
   \   000000EA   82B0               SUB      SP,SP,#+8
   \   000000EC   0020               MOVS     R0,#+0
   \   000000EE   0090               STR      R0,[SP, #+0]
   \   000000F0   6921               MOVS     R1,#+105
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   4021               MOVS     R1,#+64
   \   000000F6   03B4               PUSH     {R0,R1}
   \   000000F8   3B00               MOVS     R3,R7
   \   000000FA   0200               MOVS     R2,R0
   \   000000FC   0221               MOVS     R1,#+2
   \   000000FE   ........           BL       Label20
   \   00000102   06B0               ADD      SP,SP,#+24
   1575              CopyToCanvasPoint((char*)BateriaWyladowanaDuza, 24, Ypoz+10, 19,8);
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0820               MOVS     R0,#+8
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   1323               MOVS     R3,#+19
   \   0000010C   0A37               ADDS     R7,R7,#+10
   \   0000010E   3A00               MOVS     R2,R7
   \   00000110   1206               LSLS     R2,R2,#+24
   \   00000112   120E               LSRS     R2,R2,#+24
   \   00000114   1821               MOVS     R1,#+24
   \   00000116   3000               MOVS     R0,R6
   \   00000118   7C30               ADDS     R0,R0,#+124
   \   0000011A   ........           BL       CopyToCanvasPoint
   \   0000011E   02B0               ADD      SP,SP,#+8
   \   00000120   0EE0               B        ??Termostat_Refresh_9
   1576            }  
   1577            else
   1578            {  
   1579              Label20(txt,2,0,Ypoz,dl,64,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                     ^
Warning[Pe223]: function "Label20" declared implicitly
   \                     ??Termostat_Refresh_8:
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   0020               MOVS     R0,#+0
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   6921               MOVS     R1,#+105
   \   0000012A   03B4               PUSH     {R0,R1}
   \   0000012C   4021               MOVS     R1,#+64
   \   0000012E   1000               MOVS     R0,R2
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   3B00               MOVS     R3,R7
   \   00000134   0022               MOVS     R2,#+0
   \   00000136   0221               MOVS     R1,#+2
   \   00000138   06A8               ADD      R0,SP,#+24
   \   0000013A   ........           BL       Label20
   \   0000013E   06B0               ADD      SP,SP,#+24
   1580            }
   1581            
   1582            
   1583            
   1584            V_line(9,36,12,0);
   \                     ??Termostat_Refresh_9:
   \   00000140   0023               MOVS     R3,#+0
   \   00000142   0C22               MOVS     R2,#+12
   \   00000144   2421               MOVS     R1,#+36
   \   00000146   0920               MOVS     R0,#+9
   \   00000148   ........           BL       V_line
   1585            
   1586            static int TermAmionation;
   1587            
   1588            TermAmionation++;
   \   0000014C   B06E               LDR      R0,[R6, #+104]
   \   0000014E   401C               ADDS     R0,R0,#+1
   \   00000150   B066               STR      R0,[R6, #+104]
   1589            if (TermAmionation>12) TermAmionation=1;
   \   00000152   0D28               CMP      R0,#+13
   \   00000154   01DB               BLT      ??Termostat_Refresh_10
   \   00000156   0120               MOVS     R0,#+1
   \   00000158   B066               STR      R0,[R6, #+104]
   1590            if ((PortStageRead(MainStage.StageQ[ScreenLokal->Thermo.ActorNode].Port , ScreenLokal->Thermo.ActorPort))==0) TermAmionation=4;
   \                     ??Termostat_Refresh_10:
   \   0000015A   6178               LDRB     R1,[R4, #+1]
   \   0000015C   D720               MOVS     R0,#+215
   \   0000015E   8000               LSLS     R0,R0,#+2        ;; #+860
   \   00000160   0022               MOVS     R2,#+0
   \   00000162   A256               LDRSB    R2,[R4, R2]
   \   00000164   1423               MOVS     R3,#+20
   \   00000166   5A43               MULS     R2,R3,R2
   \   00000168   1E4B               LDR      R3,??Termostat_Refresh_0  ;; MainStage
   \   0000016A   9A18               ADDS     R2,R3,R2
   \   0000016C   105A               LDRH     R0,[R2, R0]
   \   0000016E   0004               LSLS     R0,R0,#+16
   \   00000170   0014               ASRS     R0,R0,#+16
   \   00000172   ........           BL       PortStageRead
   \   00000176   0028               CMP      R0,#+0
   \   00000178   01D1               BNE      ??Termostat_Refresh_11
   \   0000017A   0420               MOVS     R0,#+4
   \   0000017C   B066               STR      R0,[R6, #+104]
   1591          
   1592            V_line(9,36,TermAmionation,1);
   \                     ??Termostat_Refresh_11:
   \   0000017E   0123               MOVS     R3,#+1
   \   00000180   B26E               LDR      R2,[R6, #+104]
   \   00000182   1206               LSLS     R2,R2,#+24
   \   00000184   120E               LSRS     R2,R2,#+24
   \   00000186   2421               MOVS     R1,#+36
   \   00000188   0920               MOVS     R0,#+9
   \   0000018A   ........           BL       V_line
   1593          
   1594            static short int LastTemp;
   1595            
   1596            if (LastTemp!=ScreenLokal->Thermo.SetTemperature)
   \   0000018E   3420               MOVS     R0,#+52
   \   00000190   305E               LDRSH    R0,[R6, R0]
   \   00000192   0A21               MOVS     R1,#+10
   \   00000194   615E               LDRSH    R1,[R4, R1]
   \   00000196   8842               CMP      R0,R1
   \   00000198   21D0               BEQ      ??Termostat_Refresh_12
   1597            {  
   1598          
   1599                  signed   short H_Tmp;
   1600                if (ScreenLokal->Thermo.Temperature[0]>ScreenLokal->Thermo.Temperature[1])
   \   0000019A   0820               MOVS     R0,#+8
   \   0000019C   205E               LDRSH    R0,[R4, R0]
   \   0000019E   0621               MOVS     R1,#+6
   \   000001A0   615E               LDRSH    R1,[R4, R1]
   \   000001A2   8842               CMP      R0,R1
   \   000001A4   00DA               BGE      ??Termostat_Refresh_13
   \   000001A6   0800               MOVS     R0,R1
   1601                {
   1602                  H_Tmp=ScreenLokal->Thermo.Temperature[0]; 
   1603                }else{
   1604                  H_Tmp=ScreenLokal->Thermo.Temperature[1];
   1605                }
   1606                
   1607                if (ScreenLokal->Thermo.AutoOn==1)
   \                     ??Termostat_Refresh_13:
   \   000001A8   A178               LDRB     R1,[R4, #+2]
   \   000001AA   0129               CMP      R1,#+1
   \   000001AC   15D1               BNE      ??Termostat_Refresh_14
   1608                {
   1609                  if (ScreenLokal->Thermo.SetTemperature==H_Tmp)
   \   000001AE   0A21               MOVS     R1,#+10
   \   000001B0   615E               LDRSH    R1,[R4, R1]
   \   000001B2   8142               CMP      R1,R0
   \   000001B4   6846               MOV      R0,SP
   \   000001B6   02D1               BNE      ??Termostat_Refresh_15
   1610                  {
   1611                   txt[0]=31; 
   \   000001B8   1F21               MOVS     R1,#+31
   \   000001BA   0170               STRB     R1,[R0, #+0]
   \   000001BC   01E0               B        ??Termostat_Refresh_16
   1612                  }else{
   1613                   txt[0]=30;       
   \                     ??Termostat_Refresh_15:
   \   000001BE   1E21               MOVS     R1,#+30
   \   000001C0   0170               STRB     R1,[R0, #+0]
   1614                  }
   1615                  txt[1]=0; 
   \                     ??Termostat_Refresh_16:
   \   000001C2   0021               MOVS     R1,#+0
   \   000001C4   4170               STRB     R1,[R0, #+1]
   1616                  
   1617                  Button(txt,45,44,15,17);
   \   000001C6   82B0               SUB      SP,SP,#+8
   \   000001C8   1120               MOVS     R0,#+17
   \   000001CA   0090               STR      R0,[SP, #+0]
   \   000001CC   0F23               MOVS     R3,#+15
   \   000001CE   2C22               MOVS     R2,#+44
   \   000001D0   2D21               MOVS     R1,#+45
   \   000001D2   02A8               ADD      R0,SP,#+8
   \   000001D4   ........           BL       Button
   \   000001D8   02B0               ADD      SP,SP,#+8
   1618                }
   1619                LastTemp=ScreenLokal->Thermo.SetTemperature;
   \                     ??Termostat_Refresh_14:
   \   000001DA   6089               LDRH     R0,[R4, #+10]
   \   000001DC   B086               STRH     R0,[R6, #+52]
   1620            }
   1621          
   1622            
   1623          }//_______________________ Koniec funkcji Termostat_Refresh __________________________
   \                     ??Termostat_Refresh_12:
   \   000001DE   FEBC               POP      {R1-R7}
   \   000001E0   01BC               POP      {R0}
   \   000001E2   0047               BX       R0               ;; return
   \                     ??Termostat_Refresh_0:
   \   000001E4   ........           DC32     MainStage
   \   000001E8   AA8AFFFF           DC32     0xffff8aaa
   \   000001EC   ........           DC32     TextToChangeLength + 4
   \   000001F0   ........           DC32     TextToChangeLength
   1624            
   1625          
   1626          
   1627          
   1628          
   1629          
   1630          

   \                                 In section Debug.txt, align 4, keep-with-next
   1631          void Timetable_Paint(char Screen)
   1632          {         
   \                     Timetable_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   89B0               SUB      SP,SP,#+36
   \   00000004   0400               MOVS     R4,R0
   1633            
   1634               if(Screen) List_Paint(Speech[g_leng].Terminarz,0,1,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   17D0               BEQ      ??Timetable_Paint_0
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   89A0               ADR      R0,??Timetable_Paint_1  ;; 0x20, 0x00, 0x00, 0x00
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0321               MOVS     R1,#+3
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   0122               MOVS     R2,#+1
   \   00000020   0100               MOVS     R1,R0
   \   00000022   8648               LDR      R0,??Timetable_Paint_1+0x4  ;; 0x753
   \   00000024   864D               LDR      R5,??Timetable_Paint_1+0x8  ;; g_leng
   \   00000026   2D68               LDR      R5,[R5, #+0]
   \   00000028   864E               LDR      R6,??Timetable_Paint_1+0xC  ;; 0xa14
   \   0000002A   7543               MULS     R5,R6,R5
   \   0000002C   864E               LDR      R6,??Timetable_Paint_1+0x10  ;; Speech
   \   0000002E   7519               ADDS     R5,R6,R5
   \   00000030   2818               ADDS     R0,R5,R0
   \   00000032   ........           BL       List_Paint
   \   00000036   0AB0               ADD      SP,SP,#+40
   1635          
   1636          
   1637              char L_TaskAmount;
   1638            
   1639              L_TaskAmount=AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount;
   \                     ??Timetable_Paint_0:
   \   00000038   1120               MOVS     R0,#+17
   \   0000003A   4443               MULS     R4,R0,R4
   \   0000003C   8348               LDR      R0,??Timetable_Paint_1+0x14  ;; 0x13d830
   \   0000003E   0019               ADDS     R0,R0,R4
   \   00000040   0290               STR      R0,[SP, #+8]
   \   00000042   6846               MOV      R0,SP
   \   00000044   0299               LDR      R1,[SP, #+8]
   \   00000046   0978               LDRB     R1,[R1, #+0]
   \   00000048   0170               STRB     R1,[R0, #+0]
   1640              if (L_TaskAmount>4) L_TaskAmount=4;
   \   0000004A   0800               MOVS     R0,R1
   \   0000004C   0528               CMP      R0,#+5
   \   0000004E   02D3               BCC      ??Timetable_Paint_2
   \   00000050   6846               MOV      R0,SP
   \   00000052   0421               MOVS     R1,#+4
   \   00000054   0170               STRB     R1,[R0, #+0]
   1641              char *ptTaskAmount=&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount);
   \                     ??Timetable_Paint_2:
   \   00000056   029B               LDR      R3,[SP, #+8]
   1642              if (L_TaskAmount==0)
   \   00000058   6846               MOV      R0,SP
   \   0000005A   0078               LDRB     R0,[R0, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   11D1               BNE      ??Timetable_Paint_3
   1643              {
   1644                L_TaskAmount=1;
   \   00000060   6846               MOV      R0,SP
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   0170               STRB     R1,[R0, #+0]
   1645                
   1646                        //zapis do flash
   1647                    unsigned int Save = __get_interrupt_state();  
   \   00000066   ........           BL       __iar_get_interrupt_state
   \   0000006A   0400               MOVS     R4,R0
   1648                    __disable_interrupt();
   \   0000006C   ........           BL       __iar_disable_interrupt
   1649                    //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)),0, &L_TaskAmount,1);
   1650                    FlashWrite(ptTaskAmount, &L_TaskAmount, 1);
                           ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000070   0A00               MOVS     R2,R1
   \   00000072   6946               MOV      R1,SP
   \   00000074   1800               MOVS     R0,R3
   \   00000076   ........           BL       FlashWrite
   1651                    __set_interrupt_state(Save);
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   ........           BL       __iar_set_interrupt_state
   1652                    __enable_interrupt();
   \   00000080   ........           BL       __iar_enable_interrupt
   1653                    //koniec zapisu do flash
   1654            
   1655              }
   1656             
   1657                
   1658                
   1659                char Ychart=108;
   \                     ??Timetable_Paint_3:
   \   00000084   6C24               MOVS     R4,#+108
   \   00000086   05A8               ADD      R0,SP,#+20
   \   00000088   7149               LDR      R1,??Timetable_Paint_1+0x18  ;; `?<Constant {130, 0}>`
   \   0000008A   0A68               LDR      R2,[R1, #0]
   \   0000008C   0260               STR      R2,[R0, #0]
   \   0000008E   03A8               ADD      R0,SP,#+12
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   4171               STRB     R1,[R0, #+5]
   1660                char CharOnOff[]={130,0};
   1661                char TimeString[6];
   1662                TimeString[5]=0;
   1663                for (char TN=0; TN<L_TaskAmount; TN++)
   \   00000094   0D00               MOVS     R5,R1
   \   00000096   48E0               B        ??Timetable_Paint_4
   1664                {
   1665                    
   1666                    H_line(1,Ychart,62,1);  
   1667                    H_line(1,Ychart-1,62,1);  
   1668                    H_line(1,Ychart-27,62,1);   
   1669                    V_line(0,Ychart-26,26,1); 
   1670                    V_line(63,Ychart-26,26,1); 
   1671                    
   1672                    
   1673                    Button(CharOnOff,2,Ychart-15,13,13);
   1674                    if ((TN>0) && (TN==L_TaskAmount-1)) Button("-",53,Ychart-13,11,14);
   1675                    
   1676                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   1677                    char LabelNeg=0;
   1678                    if (AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable) 
   1679                    {
   1680                     CopyToCanvasPoint((char *)ekran_tab,44,Ychart-13,8,10);   
   1681                     LabelNeg=1;
   1682                    }
   1683                    
   1684                    CharToStr2(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Hour, TimeString); //(char Value, char *Vstring, char ill);
                           ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   1685                    TimeString[2]=':';
   1686                    CharToStr2(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Minute, &(TimeString[3])); //(char Value, char *Vstring, char ill);
   1687                    Label(TimeString,2,17,Ychart-13,5,25,0,128,LabelNeg);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   1688                 
   1689                          
   1690                    for (char i=0; i<7; i++)
   1691                    {
   1692                      Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart-25,1,6,0,128,((AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Week>>i) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??Timetable_Paint_5:
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   0398               LDR      R0,[SP, #+12]
   \   0000009C   8078               LDRB     R0,[R0, #+2]
   \   0000009E   3041               ASRS     R0,R0,R6
   \   000000A0   0121               MOVS     R1,#+1
   \   000000A2   0140               ANDS     R1,R1,R0
   \   000000A4   0091               STR      R1,[SP, #+0]
   \   000000A6   8021               MOVS     R1,#+128
   \   000000A8   0020               MOVS     R0,#+0
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   0621               MOVS     R1,#+6
   \   000000AE   0120               MOVS     R0,#+1
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   3B00               MOVS     R3,R7
   \   000000B4   193B               SUBS     R3,R3,#+25
   \   000000B6   F200               LSLS     R2,R6,#+3
   \   000000B8   121D               ADDS     R2,R2,#+4
   \   000000BA   1206               LSLS     R2,R2,#+24
   \   000000BC   120E               LSRS     R2,R2,#+24
   \   000000BE   0221               MOVS     R1,#+2
   \   000000C0   02B5               PUSH     {R1,LR}
   \   000000C2   0192               STR      R2,[SP, #+4]
   \   000000C4   9C46               MOV      R12,R3
   \   000000C6   6349               LDR      R1,??Timetable_Paint_1+0x1C  ;; 0x6db
   \   000000C8   3200               MOVS     R2,R6
   \   000000CA   5D48               LDR      R0,??Timetable_Paint_1+0x8  ;; g_leng
   \   000000CC   0068               LDR      R0,[R0, #+0]
   \   000000CE   5D4B               LDR      R3,??Timetable_Paint_1+0xC  ;; 0xa14
   \   000000D0   5843               MULS     R0,R3,R0
   \   000000D2   5D4B               LDR      R3,??Timetable_Paint_1+0x10  ;; Speech
   \   000000D4   1818               ADDS     R0,R3,R0
   \   000000D6   8018               ADDS     R0,R0,R2
   \   000000D8   4018               ADDS     R0,R0,R1
   \   000000DA   6346               MOV      R3,R12
   \   000000DC   019A               LDR      R2,[SP, #+4]
   \   000000DE   0099               LDR      R1,[SP, #0]
   \   000000E0   02B0               ADD      SP,SP,#+8
   \   000000E2   ........           BL       Label
   \   000000E6   06B0               ADD      SP,SP,#+24
   1693                    }
   \   000000E8   761C               ADDS     R6,R6,#+1
   \   000000EA   3606               LSLS     R6,R6,#+24
   \   000000EC   360E               LSRS     R6,R6,#+24
   \                     ??Timetable_Paint_6:
   \   000000EE   3000               MOVS     R0,R6
   \   000000F0   0728               CMP      R0,#+7
   \   000000F2   D1D3               BCC      ??Timetable_Paint_5
   1694                    
   1695          
   1696                    
   1697                    Ychart=Ychart-27;
   \   000000F4   1B3C               SUBS     R4,R4,#+27
   \   000000F6   2406               LSLS     R4,R4,#+24
   \   000000F8   240E               LSRS     R4,R4,#+24
   1698                    
   1699                    if ((TN==L_TaskAmount-1)&& (TN<3)) Button("+",53,Ychart-13,11,14);
   \   000000FA   2800               MOVS     R0,R5
   \   000000FC   6946               MOV      R1,SP
   \   000000FE   0978               LDRB     R1,[R1, #+0]
   \   00000100   491E               SUBS     R1,R1,#+1
   \   00000102   8842               CMP      R0,R1
   \   00000104   0ED1               BNE      ??Timetable_Paint_7
   \   00000106   0328               CMP      R0,#+3
   \   00000108   0CD2               BCS      ??Timetable_Paint_7
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0E20               MOVS     R0,#+14
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   0B23               MOVS     R3,#+11
   \   00000112   2200               MOVS     R2,R4
   \   00000114   0D3A               SUBS     R2,R2,#+13
   \   00000116   1206               LSLS     R2,R2,#+24
   \   00000118   120E               LSRS     R2,R2,#+24
   \   0000011A   3521               MOVS     R1,#+53
   \   0000011C   4EA0               ADR      R0,??Timetable_Paint_1+0x20  ;; 0x2B, 0x00, 0x00, 0x00
   \   0000011E   ........           BL       Button
   \   00000122   02B0               ADD      SP,SP,#+8
   \                     ??Timetable_Paint_7:
   \   00000124   6D1C               ADDS     R5,R5,#+1
   \   00000126   2D06               LSLS     R5,R5,#+24
   \   00000128   2D0E               LSRS     R5,R5,#+24
   \                     ??Timetable_Paint_4:
   \   0000012A   2800               MOVS     R0,R5
   \   0000012C   6946               MOV      R1,SP
   \   0000012E   0978               LDRB     R1,[R1, #+0]
   \   00000130   8842               CMP      R0,R1
   \   00000132   7DD2               BCS      ??Timetable_Paint_8
   \   00000134   2700               MOVS     R7,R4
   \   00000136   0123               MOVS     R3,#+1
   \   00000138   3E22               MOVS     R2,#+62
   \   0000013A   3900               MOVS     R1,R7
   \   0000013C   1800               MOVS     R0,R3
   \   0000013E   ........           BL       H_line
   \   00000142   0123               MOVS     R3,#+1
   \   00000144   3E22               MOVS     R2,#+62
   \   00000146   791E               SUBS     R1,R7,#+1
   \   00000148   1800               MOVS     R0,R3
   \   0000014A   ........           BL       H_line
   \   0000014E   0123               MOVS     R3,#+1
   \   00000150   3E22               MOVS     R2,#+62
   \   00000152   3900               MOVS     R1,R7
   \   00000154   1B39               SUBS     R1,R1,#+27
   \   00000156   1800               MOVS     R0,R3
   \   00000158   ........           BL       H_line
   \   0000015C   3E00               MOVS     R6,R7
   \   0000015E   1A3E               SUBS     R6,R6,#+26
   \   00000160   0123               MOVS     R3,#+1
   \   00000162   1A22               MOVS     R2,#+26
   \   00000164   3100               MOVS     R1,R6
   \   00000166   0020               MOVS     R0,#+0
   \   00000168   ........           BL       V_line
   \   0000016C   0123               MOVS     R3,#+1
   \   0000016E   1A22               MOVS     R2,#+26
   \   00000170   3100               MOVS     R1,R6
   \   00000172   3F20               MOVS     R0,#+63
   \   00000174   ........           BL       V_line
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   0D20               MOVS     R0,#+13
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   0300               MOVS     R3,R0
   \   00000180   2200               MOVS     R2,R4
   \   00000182   0F3A               SUBS     R2,R2,#+15
   \   00000184   1206               LSLS     R2,R2,#+24
   \   00000186   120E               LSRS     R2,R2,#+24
   \   00000188   0221               MOVS     R1,#+2
   \   0000018A   07A8               ADD      R0,SP,#+28
   \   0000018C   ........           BL       Button
   \   00000190   02B0               ADD      SP,SP,#+8
   \   00000192   2800               MOVS     R0,R5
   \   00000194   11D0               BEQ      ??Timetable_Paint_9
   \   00000196   6946               MOV      R1,SP
   \   00000198   0978               LDRB     R1,[R1, #+0]
   \   0000019A   491E               SUBS     R1,R1,#+1
   \   0000019C   8842               CMP      R0,R1
   \   0000019E   0CD1               BNE      ??Timetable_Paint_9
   \   000001A0   82B0               SUB      SP,SP,#+8
   \   000001A2   0E20               MOVS     R0,#+14
   \   000001A4   0090               STR      R0,[SP, #+0]
   \   000001A6   0B23               MOVS     R3,#+11
   \   000001A8   2200               MOVS     R2,R4
   \   000001AA   0D3A               SUBS     R2,R2,#+13
   \   000001AC   1206               LSLS     R2,R2,#+24
   \   000001AE   120E               LSRS     R2,R2,#+24
   \   000001B0   3521               MOVS     R1,#+53
   \   000001B2   2AA0               ADR      R0,??Timetable_Paint_1+0x24  ;; 0x2D, 0x00, 0x00, 0x00
   \   000001B4   ........           BL       Button
   \   000001B8   02B0               ADD      SP,SP,#+8
   \                     ??Timetable_Paint_9:
   \   000001BA   06A8               ADD      R0,SP,#+24
   \   000001BC   2849               LDR      R1,??Timetable_Paint_1+0x28  ;; `?<Constant {130, 0}>` + 4
   \   000001BE   4CC9               LDM      R1!,{R2,R3,R6}
   \   000001C0   4CC0               STM      R0!,{R2,R3,R6}
   \   000001C2   0026               MOVS     R6,#+0
   \   000001C4   2800               MOVS     R0,R5
   \   000001C6   8000               LSLS     R0,R0,#+2
   \   000001C8   0299               LDR      R1,[SP, #+8]
   \   000001CA   0818               ADDS     R0,R1,R0
   \   000001CC   0190               STR      R0,[SP, #+4]
   \   000001CE   4078               LDRB     R0,[R0, #+1]
   \   000001D0   0028               CMP      R0,#+0
   \   000001D2   0DD0               BEQ      ??Timetable_Paint_10
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   0A20               MOVS     R0,#+10
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   0823               MOVS     R3,#+8
   \   000001DC   2200               MOVS     R2,R4
   \   000001DE   0D3A               SUBS     R2,R2,#+13
   \   000001E0   1206               LSLS     R2,R2,#+24
   \   000001E2   120E               LSRS     R2,R2,#+24
   \   000001E4   2C21               MOVS     R1,#+44
   \   000001E6   08A8               ADD      R0,SP,#+32
   \   000001E8   ........           BL       CopyToCanvasPoint
   \   000001EC   02B0               ADD      SP,SP,#+8
   \   000001EE   0126               MOVS     R6,#+1
   \                     ??Timetable_Paint_10:
   \   000001F0   03A9               ADD      R1,SP,#+12
   \   000001F2   0198               LDR      R0,[SP, #+4]
   \   000001F4   C078               LDRB     R0,[R0, #+3]
   \   000001F6   ........           BL       CharToStr2
   \   000001FA   03A8               ADD      R0,SP,#+12
   \   000001FC   3A21               MOVS     R1,#+58
   \   000001FE   8170               STRB     R1,[R0, #+2]
   \   00000200   03A9               ADD      R1,SP,#+12
   \   00000202   C91C               ADDS     R1,R1,#+3
   \   00000204   0198               LDR      R0,[SP, #+4]
   \   00000206   0079               LDRB     R0,[R0, #+4]
   \   00000208   ........           BL       CharToStr2
   \   0000020C   82B0               SUB      SP,SP,#+8
   \   0000020E   0096               STR      R6,[SP, #+0]
   \   00000210   8021               MOVS     R1,#+128
   \   00000212   0020               MOVS     R0,#+0
   \   00000214   03B4               PUSH     {R0,R1}
   \   00000216   1921               MOVS     R1,#+25
   \   00000218   0520               MOVS     R0,#+5
   \   0000021A   03B4               PUSH     {R0,R1}
   \   0000021C   3B00               MOVS     R3,R7
   \   0000021E   0D3B               SUBS     R3,R3,#+13
   \   00000220   1122               MOVS     R2,#+17
   \   00000222   0221               MOVS     R1,#+2
   \   00000224   09A8               ADD      R0,SP,#+36
   \   00000226   ........           BL       Label
   \   0000022A   06B0               ADD      SP,SP,#+24
   \   0000022C   0026               MOVS     R6,#+0
   \   0000022E   5EE7               B        ??Timetable_Paint_6
   1700           
   1701                }
   1702                
   1703              
   1704          
   1705                
   1706          
   1707          }//________________________________________________________________________
   \                     ??Timetable_Paint_8:
   \   00000230   09B0               ADD      SP,SP,#+36
   \   00000232   F0BC               POP      {R4-R7}
   \   00000234   01BC               POP      {R0}
   \   00000236   0047               BX       R0               ;; return
   \                     ??Timetable_Paint_1:
   \   00000238   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000023C   53070000           DC32     0x753
   \   00000240   ........           DC32     g_leng
   \   00000244   140A0000           DC32     0xa14
   \   00000248   ........           DC32     Speech
   \   0000024C   30D81300           DC32     0x13d830
   \   00000250   ........           DC32     `?<Constant {130, 0}>`
   \   00000254   DB060000           DC32     0x6db
   \   00000258   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   0000025C   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000260   ........           DC32     `?<Constant {130, 0}>` + 4
   1708          
   1709          
   1710          
   1711          __Task *TaskToChange;
   1712          char TimetableSet_Hour;
   1713          char TimetableSet_Minute;
   1714          char TimetableSet_Week;

   \                                 In section Debug.txt, align 4, keep-with-next
   1715          void Timetable_Event(char Screen)
   1716          {      
   \                     Timetable_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   87B0               SUB      SP,SP,#+28
   \   00000004   0026               MOVS     R6,#+0
   1717             char Repaint=0;
   1718             char CharToSave=0;
   \   00000006   6946               MOV      R1,SP
   \   00000008   3200               MOVS     R2,R6
   \   0000000A   8A70               STRB     R2,[R1, #+2]
   1719             char TaskAmount=AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount;
   \   0000000C   1121               MOVS     R1,#+17
   \   0000000E   4843               MULS     R0,R1,R0
   \   00000010   C949               LDR      R1,??Timetable_Event_0  ;; 0x13d830
   \   00000012   0818               ADDS     R0,R1,R0
   \   00000014   0390               STR      R0,[SP, #+12]
   \   00000016   6846               MOV      R0,SP
   \   00000018   0399               LDR      R1,[SP, #+12]
   \   0000001A   0978               LDRB     R1,[R1, #+0]
   \   0000001C   0170               STRB     R1,[R0, #+0]
   1720          
   1721             if (TaskAmount>4) TaskAmount=4;
   \   0000001E   0800               MOVS     R0,R1
   \   00000020   0528               CMP      R0,#+5
   \   00000022   02D3               BCC      ??Timetable_Event_1
   \   00000024   6846               MOV      R0,SP
   \   00000026   0421               MOVS     R1,#+4
   \   00000028   0170               STRB     R1,[R0, #+0]
   \                     ??Timetable_Event_1:
   \   0000002A   1100               MOVS     R1,R2
   \   0000002C   0800               MOVS     R0,R1
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0F21               MOVS     R1,#+15
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   C148               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   435E               LDRSH    R3,[R0, R1]
   \   0000003A   C148               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   0000003C   425E               LDRSH    R2,[R0, R1]
   \   0000003E   C148               LDR      R0,??Timetable_Event_0+0xC  ;; Y_up
   \   00000040   415E               LDRSH    R1,[R0, R1]
   \   00000042   C148               LDR      R0,??Timetable_Event_0+0x10  ;; X_up
   \   00000044   0024               MOVS     R4,#+0
   \   00000046   005F               LDRSH    R0,[R0, R4]
   1722             
   1723             if ((ScreenNr>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000048   ........           BL       List_Event
   \   0000004C   04B0               ADD      SP,SP,#+16
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   C943               MVNS     R1,R1            ;; #-1
   \   00000052   8842               CMP      R0,R1
   \   00000054   14D1               BNE      ??Timetable_Event_2
   1724              {
   1725                 if (SheetHistoryIndex>0)
   \   00000056   BD48               LDR      R0,??Timetable_Event_0+0x14  ;; TextToChangeLength
   \   00000058   C179               LDRB     R1,[R0, #+7]
   \   0000005A   0029               CMP      R1,#+0
   \   0000005C   07D0               BEQ      ??Timetable_Event_3
   1726                    {
   1727                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000005E   491E               SUBS     R1,R1,#+1
   \   00000060   C171               STRB     R1,[R0, #+7]
   \   00000062   0906               LSLS     R1,R1,#+24
   \   00000064   090E               LSRS     R1,R1,#+24
   \   00000066   4118               ADDS     R1,R0,R1
   \   00000068   2031               ADDS     R1,R1,#+32
   \   0000006A   0978               LDRB     R1,[R1, #+0]
   \   0000006C   0171               STRB     R1,[R0, #+4]
   1728                    } 
   1729                   Repaint=1; 
   \                     ??Timetable_Event_3:
   \   0000006E   0126               MOVS     R6,#+1
   1730              }else{
   1731                      
   1732                char Ychart=108;
   1733               
   1734                if ((X_down>1) && (X_down<63) && (Y_down>108)&& (Y_down<128)) Repaint=1;
   1735                
   1736               char PlusMinButton=0;  
   1737                
   1738                char CharOnOff[]={130,0};
   1739                char ButtonRes;
   1740                for (char TN=0; TN<TaskAmount; TN++)
   1741                {
   1742                  if ((TN==TaskAmount-1)&& (TN<3)) 
   1743                  {
   1744                      ButtonRes=Button("+",53,Ychart-13-27,11,14);
   1745                      if (ButtonRes==1)
   1746                      {
   1747                        TaskAmount++;
   1748                        //zapis do flash
   1749                        unsigned int Save = __get_interrupt_state();  
   1750                        __disable_interrupt();
   1751                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)), (char*) (&(TaskAmount)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1752                        __set_interrupt_state(Save);
   1753                        __enable_interrupt();
   1754                        //koniec zapisu do flash
   1755                        Repaint=1; 
   1756                        PlusMinButton=1;
   1757                      }
   1758                      if (ButtonRes==2)
   1759                      {
   1760                        PlusMinButton=1;
   1761                      }
   1762                  }
   1763                  
   1764                  if ((PlusMinButton==0) && (TN>0) && (TN==TaskAmount-1)) 
   1765                  {
   1766                    ButtonRes=Button("-",53,Ychart-13,11,14);
   1767                    if (ButtonRes==1)
   1768                    {
   1769                        TaskAmount--;
   1770                        //zapis do flash
   1771                        unsigned int Save = __get_interrupt_state();  
   1772                        __disable_interrupt();
   1773                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].TaskAmount)), (char*) (&(TaskAmount)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1774                        __set_interrupt_state(Save);
   1775                        __enable_interrupt();
   1776                        //koniec zapisu do flash
   1777                        Repaint=1; 
   1778                        PlusMinButton=1;
   1779                    }
   1780                    if (ButtonRes==2)
   1781                    {
   1782                        PlusMinButton=1;
   1783                    }
   1784                     
   1785                  }
   1786                  
   1787                  if (AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable) 
   1788                  {
   1789                      if (Button(CharOnOff,2,Ychart-15,13,13)==1)
   1790                      {
   1791                         CharToSave=0;
   1792                        //zapis do flash
   1793                          unsigned int Save = __get_interrupt_state();  
   1794                          __disable_interrupt();
   1795                          FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable)), (char*) (&(CharToSave)), 1);
                                 ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1796                          __set_interrupt_state(Save);
   1797                          __enable_interrupt();
   1798                          //koniec zapisu do flash
   1799                          Repaint=1; 
   1800                      } 
   1801                   }else{
   1802                        if(Button(CharOnOff,2,Ychart-15,13,13)==1)
   1803                        {
   1804                           CharToSave=1;
   1805                          //zapis do flash
   1806                            unsigned int Save = __get_interrupt_state();  
   1807                            __disable_interrupt();
   1808                            FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Enable)), (char*) (&(CharToSave)), 1);
                                   ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   1809                            __set_interrupt_state(Save);
   1810                            __enable_interrupt();
   1811                            //koniec zapisu do flash
   1812                            Repaint=1; 
   1813                        }
   1814                      }
   1815                      
   1816                      //wybór strefy 
   1817                      if ((Button(CharOnOff,2,Ychart-15,13,13)==0) && (PlusMinButton==0) && (X_down>1) && (X_down<63) && (Y_down>Ychart-27)&& (Y_down<Ychart))
   1818                      {
   1819                        MenuPaint();
   1820                        H_line(1,Ychart-2,62,1);  
   1821                        H_line(1,Ychart-26,62,1);   
   1822                        V_line(1,Ychart-26,24,1); 
   1823                        V_line(62,Ychart-26,26,1); 
   1824                      }
   1825                  
   1826                      //edycja strefy 
   1827                      if ((Button(CharOnOff,2,Ychart-15,13,13)==0) && (PlusMinButton==0) && (X_up>1) && (X_up<63) && (Y_up>Ychart-27)&& (Y_up<Ychart))
   1828                      {
   1829                          TaskToChange=&(AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN]);
   1830                          TimetableSet_Hour=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Hour;
   1831                          TimetableSet_Minute=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Minute;
   1832                          TimetableSet_Week=AT91C_IFLASH_MEM->Config.Timetable[Screen].Task[TN].Week;
   1833                          MenuLevel=13;
   1834                          Repaint=1; 
   1835                      }
   1836                  
   1837                      
   1838                  
   1839                    Ychart=Ychart-27;
   1840          
   1841                  }//koniec for (TN)
   1842                
   1843                
   1844            
   1845              }
   1846             if (Repaint) MenuPaint();
   \                     ??Timetable_Event_4:
   \   00000070   002E               CMP      R6,#+0
   \   00000072   01D0               BEQ      ??Timetable_Event_5
   \   00000074   ........           BL       MenuPaint
   1847          }
   \                     ??Timetable_Event_5:
   \   00000078   07B0               ADD      SP,SP,#+28
   \   0000007A   F0BC               POP      {R4-R7}
   \   0000007C   01BC               POP      {R0}
   \   0000007E   0047               BX       R0               ;; return
   \                     ??Timetable_Event_2:
   \   00000080   6C24               MOVS     R4,#+108
   \   00000082   AF48               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   405E               LDRSH    R0,[R0, R1]
   \   00000088   0228               CMP      R0,#+2
   \   0000008A   08DB               BLT      ??Timetable_Event_6
   \   0000008C   3F28               CMP      R0,#+63
   \   0000008E   06DA               BGE      ??Timetable_Event_6
   \   00000090   AA48               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   6D28               CMP      R0,#+109
   \   00000096   02DB               BLT      ??Timetable_Event_6
   \   00000098   8028               CMP      R0,#+128
   \   0000009A   00DA               BGE      ??Timetable_Event_6
   \   0000009C   0126               MOVS     R6,#+1
   \                     ??Timetable_Event_6:
   \   0000009E   6846               MOV      R0,SP
   \   000000A0   4170               STRB     R1,[R0, #+1]
   \   000000A2   04A8               ADD      R0,SP,#+16
   \   000000A4   AA49               LDR      R1,??Timetable_Event_0+0x18  ;; `?<Constant {130, 0}>_1`
   \   000000A6   0A68               LDR      R2,[R1, #0]
   \   000000A8   0260               STR      R2,[R0, #0]
   \   000000AA   0020               MOVS     R0,#+0
   \   000000AC   0290               STR      R0,[SP, #+8]
   \   000000AE   96E0               B        ??Timetable_Event_7
   \                     ??Timetable_Event_8:
   \   000000B0   0D20               MOVS     R0,#+13
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   0300               MOVS     R3,R0
   \   000000B6   2A00               MOVS     R2,R5
   \   000000B8   1206               LSLS     R2,R2,#+24
   \   000000BA   120E               LSRS     R2,R2,#+24
   \   000000BC   0221               MOVS     R1,#+2
   \   000000BE   06A8               ADD      R0,SP,#+24
   \   000000C0   ........           BL       Button
   \   000000C4   02B0               ADD      SP,SP,#+8
   \   000000C6   0128               CMP      R0,#+1
   \   000000C8   15D1               BNE      ??Timetable_Event_9
   \   000000CA   0127               MOVS     R7,#+1
   \   000000CC   6846               MOV      R0,SP
   \   000000CE   3900               MOVS     R1,R7
   \   000000D0   8170               STRB     R1,[R0, #+2]
   \   000000D2   ........           BL       __iar_get_interrupt_state
   \   000000D6   0600               MOVS     R6,R0
   \   000000D8   ........           BL       __iar_disable_interrupt
   \   000000DC   0A00               MOVS     R2,R1
   \   000000DE   00A9               ADD      R1,SP,#+0
   \   000000E0   891C               ADDS     R1,R1,#+2
   \   000000E2   0198               LDR      R0,[SP, #+4]
   \   000000E4   401C               ADDS     R0,R0,#+1
   \   000000E6   ........           BL       FlashWrite
   \   000000EA   3000               MOVS     R0,R6
   \   000000EC   ........           BL       __iar_set_interrupt_state
   \   000000F0   ........           BL       __iar_enable_interrupt
   \   000000F4   3E00               MOVS     R6,R7
   \                     ??Timetable_Event_9:
   \   000000F6   82B0               SUB      SP,SP,#+8
   \   000000F8   0D20               MOVS     R0,#+13
   \   000000FA   0090               STR      R0,[SP, #+0]
   \   000000FC   0300               MOVS     R3,R0
   \   000000FE   2A00               MOVS     R2,R5
   \   00000100   1206               LSLS     R2,R2,#+24
   \   00000102   120E               LSRS     R2,R2,#+24
   \   00000104   0221               MOVS     R1,#+2
   \   00000106   06A8               ADD      R0,SP,#+24
   \   00000108   ........           BL       Button
   \   0000010C   02B0               ADD      SP,SP,#+8
   \   0000010E   6946               MOV      R1,SP
   \   00000110   4978               LDRB     R1,[R1, #+1]
   \   00000112   0143               ORRS     R1,R1,R0
   \   00000114   2BD1               BNE      ??Timetable_Event_10
   \   00000116   8A48               LDR      R0,??Timetable_Event_0+0x8  ;; X_down
   \   00000118   0021               MOVS     R1,#+0
   \   0000011A   405E               LDRSH    R0,[R0, R1]
   \   0000011C   0228               CMP      R0,#+2
   \   0000011E   26DB               BLT      ??Timetable_Event_10
   \   00000120   3F28               CMP      R0,#+63
   \   00000122   24DA               BGE      ??Timetable_Event_10
   \   00000124   2700               MOVS     R7,R4
   \   00000126   8548               LDR      R0,??Timetable_Event_0+0x4  ;; Y_down
   \   00000128   405E               LDRSH    R0,[R0, R1]
   \   0000012A   3900               MOVS     R1,R7
   \   0000012C   1B39               SUBS     R1,R1,#+27
   \   0000012E   8142               CMP      R1,R0
   \   00000130   1DDA               BGE      ??Timetable_Event_10
   \   00000132   2100               MOVS     R1,R4
   \   00000134   8842               CMP      R0,R1
   \   00000136   1ADA               BGE      ??Timetable_Event_10
   \   00000138   ........           BL       MenuPaint
   \   0000013C   0123               MOVS     R3,#+1
   \   0000013E   3E22               MOVS     R2,#+62
   \   00000140   B91E               SUBS     R1,R7,#+2
   \   00000142   1800               MOVS     R0,R3
   \   00000144   ........           BL       H_line
   \   00000148   1A3F               SUBS     R7,R7,#+26
   \   0000014A   0123               MOVS     R3,#+1
   \   0000014C   3E22               MOVS     R2,#+62
   \   0000014E   3900               MOVS     R1,R7
   \   00000150   1800               MOVS     R0,R3
   \   00000152   ........           BL       H_line
   \   00000156   0123               MOVS     R3,#+1
   \   00000158   1822               MOVS     R2,#+24
   \   0000015A   3900               MOVS     R1,R7
   \   0000015C   1800               MOVS     R0,R3
   \   0000015E   ........           BL       V_line
   \   00000162   0123               MOVS     R3,#+1
   \   00000164   1A22               MOVS     R2,#+26
   \   00000166   3900               MOVS     R1,R7
   \   00000168   3E20               MOVS     R0,#+62
   \   0000016A   ........           BL       V_line
   \                     ??Timetable_Event_10:
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   0D20               MOVS     R0,#+13
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   0300               MOVS     R3,R0
   \   00000176   2A00               MOVS     R2,R5
   \   00000178   1206               LSLS     R2,R2,#+24
   \   0000017A   120E               LSRS     R2,R2,#+24
   \   0000017C   0221               MOVS     R1,#+2
   \   0000017E   06A8               ADD      R0,SP,#+24
   \   00000180   ........           BL       Button
   \   00000184   02B0               ADD      SP,SP,#+8
   \   00000186   6946               MOV      R1,SP
   \   00000188   4978               LDRB     R1,[R1, #+1]
   \   0000018A   0143               ORRS     R1,R1,R0
   \   0000018C   1FD1               BNE      ??Timetable_Event_11
   \   0000018E   6E48               LDR      R0,??Timetable_Event_0+0x10  ;; X_up
   \   00000190   0021               MOVS     R1,#+0
   \   00000192   405E               LDRSH    R0,[R0, R1]
   \   00000194   0228               CMP      R0,#+2
   \   00000196   1ADB               BLT      ??Timetable_Event_11
   \   00000198   3F28               CMP      R0,#+63
   \   0000019A   18DA               BGE      ??Timetable_Event_11
   \   0000019C   6948               LDR      R0,??Timetable_Event_0+0xC  ;; Y_up
   \   0000019E   405E               LDRSH    R0,[R0, R1]
   \   000001A0   2100               MOVS     R1,R4
   \   000001A2   1B39               SUBS     R1,R1,#+27
   \   000001A4   8142               CMP      R1,R0
   \   000001A6   12DA               BGE      ??Timetable_Event_11
   \   000001A8   2100               MOVS     R1,R4
   \   000001AA   8842               CMP      R0,R1
   \   000001AC   0FDA               BGE      ??Timetable_Event_11
   \   000001AE   6748               LDR      R0,??Timetable_Event_0+0x14  ;; TextToChangeLength
   \   000001B0   0199               LDR      R1,[SP, #+4]
   \   000001B2   491C               ADDS     R1,R1,#+1
   \   000001B4   C166               STR      R1,[R0, #+108]
   \   000001B6   0199               LDR      R1,[SP, #+4]
   \   000001B8   C978               LDRB     R1,[R1, #+3]
   \   000001BA   4173               STRB     R1,[R0, #+13]
   \   000001BC   0199               LDR      R1,[SP, #+4]
   \   000001BE   0979               LDRB     R1,[R1, #+4]
   \   000001C0   8173               STRB     R1,[R0, #+14]
   \   000001C2   0199               LDR      R1,[SP, #+4]
   \   000001C4   8978               LDRB     R1,[R1, #+2]
   \   000001C6   C173               STRB     R1,[R0, #+15]
   \   000001C8   0D21               MOVS     R1,#+13
   \   000001CA   8164               STR      R1,[R0, #+72]
   \   000001CC   0126               MOVS     R6,#+1
   \                     ??Timetable_Event_11:
   \   000001CE   1B3C               SUBS     R4,R4,#+27
   \   000001D0   2406               LSLS     R4,R4,#+24
   \   000001D2   240E               LSRS     R4,R4,#+24
   \   000001D4   0298               LDR      R0,[SP, #+8]
   \   000001D6   401C               ADDS     R0,R0,#+1
   \   000001D8   0006               LSLS     R0,R0,#+24
   \   000001DA   000E               LSRS     R0,R0,#+24
   \   000001DC   0290               STR      R0,[SP, #+8]
   \                     ??Timetable_Event_7:
   \   000001DE   0298               LDR      R0,[SP, #+8]
   \   000001E0   6946               MOV      R1,SP
   \   000001E2   0978               LDRB     R1,[R1, #+0]
   \   000001E4   0006               LSLS     R0,R0,#+24
   \   000001E6   000E               LSRS     R0,R0,#+24
   \   000001E8   8842               CMP      R0,R1
   \   000001EA   00D3               BCC      .+4
   \   000001EC   40E7               B        ??Timetable_Event_4
   \   000001EE   0298               LDR      R0,[SP, #+8]
   \   000001F0   0006               LSLS     R0,R0,#+24
   \   000001F2   000E               LSRS     R0,R0,#+24
   \   000001F4   0590               STR      R0,[SP, #+20]
   \   000001F6   6946               MOV      R1,SP
   \   000001F8   0978               LDRB     R1,[R1, #+0]
   \   000001FA   491E               SUBS     R1,R1,#+1
   \   000001FC   8842               CMP      R0,R1
   \   000001FE   31D1               BNE      ??Timetable_Event_12
   \   00000200   0298               LDR      R0,[SP, #+8]
   \   00000202   0006               LSLS     R0,R0,#+24
   \   00000204   000E               LSRS     R0,R0,#+24
   \   00000206   0328               CMP      R0,#+3
   \   00000208   2CD2               BCS      ??Timetable_Event_12
   \   0000020A   82B0               SUB      SP,SP,#+8
   \   0000020C   0E20               MOVS     R0,#+14
   \   0000020E   0090               STR      R0,[SP, #+0]
   \   00000210   0B23               MOVS     R3,#+11
   \   00000212   2200               MOVS     R2,R4
   \   00000214   283A               SUBS     R2,R2,#+40
   \   00000216   1206               LSLS     R2,R2,#+24
   \   00000218   120E               LSRS     R2,R2,#+24
   \   0000021A   3521               MOVS     R1,#+53
   \   0000021C   4DA0               ADR      R0,??Timetable_Event_0+0x1C  ;; 0x2B, 0x00, 0x00, 0x00
   \   0000021E   ........           BL       Button
   \   00000222   02B0               ADD      SP,SP,#+8
   \   00000224   0500               MOVS     R5,R0
   \   00000226   0128               CMP      R0,#+1
   \   00000228   17D1               BNE      ??Timetable_Event_13
   \   0000022A   6846               MOV      R0,SP
   \   0000022C   6946               MOV      R1,SP
   \   0000022E   0978               LDRB     R1,[R1, #+0]
   \   00000230   491C               ADDS     R1,R1,#+1
   \   00000232   0170               STRB     R1,[R0, #+0]
   \   00000234   ........           BL       __iar_get_interrupt_state
   \   00000238   0600               MOVS     R6,R0
   \   0000023A   ........           BL       __iar_disable_interrupt
   \   0000023E   0122               MOVS     R2,#+1
   \   00000240   6946               MOV      R1,SP
   \   00000242   0398               LDR      R0,[SP, #+12]
   \   00000244   ........           BL       FlashWrite
   \   00000248   3000               MOVS     R0,R6
   \   0000024A   ........           BL       __iar_set_interrupt_state
   \   0000024E   ........           BL       __iar_enable_interrupt
   \   00000252   0127               MOVS     R7,#+1
   \   00000254   3E00               MOVS     R6,R7
   \   00000256   6846               MOV      R0,SP
   \   00000258   4770               STRB     R7,[R0, #+1]
   \                     ??Timetable_Event_13:
   \   0000025A   022D               CMP      R5,#+2
   \   0000025C   02D1               BNE      ??Timetable_Event_12
   \   0000025E   6846               MOV      R0,SP
   \   00000260   0121               MOVS     R1,#+1
   \   00000262   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_12:
   \   00000264   6846               MOV      R0,SP
   \   00000266   4078               LDRB     R0,[R0, #+1]
   \   00000268   0028               CMP      R0,#+0
   \   0000026A   35D1               BNE      ??Timetable_Event_14
   \   0000026C   0298               LDR      R0,[SP, #+8]
   \   0000026E   0006               LSLS     R0,R0,#+24
   \   00000270   32D0               BEQ      ??Timetable_Event_14
   \   00000272   0598               LDR      R0,[SP, #+20]
   \   00000274   6946               MOV      R1,SP
   \   00000276   0978               LDRB     R1,[R1, #+0]
   \   00000278   491E               SUBS     R1,R1,#+1
   \   0000027A   8842               CMP      R0,R1
   \   0000027C   2CD1               BNE      ??Timetable_Event_14
   \   0000027E   82B0               SUB      SP,SP,#+8
   \   00000280   0E20               MOVS     R0,#+14
   \   00000282   0090               STR      R0,[SP, #+0]
   \   00000284   0B23               MOVS     R3,#+11
   \   00000286   2200               MOVS     R2,R4
   \   00000288   0D3A               SUBS     R2,R2,#+13
   \   0000028A   1206               LSLS     R2,R2,#+24
   \   0000028C   120E               LSRS     R2,R2,#+24
   \   0000028E   3521               MOVS     R1,#+53
   \   00000290   31A0               ADR      R0,??Timetable_Event_0+0x20  ;; 0x2D, 0x00, 0x00, 0x00
   \   00000292   ........           BL       Button
   \   00000296   02B0               ADD      SP,SP,#+8
   \   00000298   0500               MOVS     R5,R0
   \   0000029A   0128               CMP      R0,#+1
   \   0000029C   17D1               BNE      ??Timetable_Event_15
   \   0000029E   6846               MOV      R0,SP
   \   000002A0   6946               MOV      R1,SP
   \   000002A2   0978               LDRB     R1,[R1, #+0]
   \   000002A4   491E               SUBS     R1,R1,#+1
   \   000002A6   0170               STRB     R1,[R0, #+0]
   \   000002A8   ........           BL       __iar_get_interrupt_state
   \   000002AC   0600               MOVS     R6,R0
   \   000002AE   ........           BL       __iar_disable_interrupt
   \   000002B2   0122               MOVS     R2,#+1
   \   000002B4   6946               MOV      R1,SP
   \   000002B6   0398               LDR      R0,[SP, #+12]
   \   000002B8   ........           BL       FlashWrite
   \   000002BC   3000               MOVS     R0,R6
   \   000002BE   ........           BL       __iar_set_interrupt_state
   \   000002C2   ........           BL       __iar_enable_interrupt
   \   000002C6   0127               MOVS     R7,#+1
   \   000002C8   3E00               MOVS     R6,R7
   \   000002CA   6846               MOV      R0,SP
   \   000002CC   4770               STRB     R7,[R0, #+1]
   \                     ??Timetable_Event_15:
   \   000002CE   022D               CMP      R5,#+2
   \   000002D0   02D1               BNE      ??Timetable_Event_14
   \   000002D2   6846               MOV      R0,SP
   \   000002D4   0121               MOVS     R1,#+1
   \   000002D6   4170               STRB     R1,[R0, #+1]
   \                     ??Timetable_Event_14:
   \   000002D8   0598               LDR      R0,[SP, #+20]
   \   000002DA   8000               LSLS     R0,R0,#+2
   \   000002DC   0399               LDR      R1,[SP, #+12]
   \   000002DE   0818               ADDS     R0,R1,R0
   \   000002E0   0190               STR      R0,[SP, #+4]
   \   000002E2   2500               MOVS     R5,R4
   \   000002E4   0F3D               SUBS     R5,R5,#+15
   \   000002E6   4078               LDRB     R0,[R0, #+1]
   \   000002E8   0028               CMP      R0,#+0
   \   000002EA   82B0               SUB      SP,SP,#+8
   \   000002EC   00D1               BNE      .+4
   \   000002EE   DFE6               B        ??Timetable_Event_8
   \   000002F0   0D20               MOVS     R0,#+13
   \   000002F2   0090               STR      R0,[SP, #+0]
   \   000002F4   0300               MOVS     R3,R0
   \   000002F6   2A00               MOVS     R2,R5
   \   000002F8   1206               LSLS     R2,R2,#+24
   \   000002FA   120E               LSRS     R2,R2,#+24
   \   000002FC   0221               MOVS     R1,#+2
   \   000002FE   06A8               ADD      R0,SP,#+24
   \   00000300   ........           BL       Button
   \   00000304   02B0               ADD      SP,SP,#+8
   \   00000306   0128               CMP      R0,#+1
   \   00000308   00D0               BEQ      .+4
   \   0000030A   F4E6               B        ??Timetable_Event_9
   \   0000030C   6846               MOV      R0,SP
   \   0000030E   0021               MOVS     R1,#+0
   \   00000310   8170               STRB     R1,[R0, #+2]
   \   00000312   ........           BL       __iar_get_interrupt_state
   \   00000316   0600               MOVS     R6,R0
   \   00000318   ........           BL       __iar_disable_interrupt
   \   0000031C   0122               MOVS     R2,#+1
   \   0000031E   00A9               ADD      R1,SP,#+0
   \   00000320   891C               ADDS     R1,R1,#+2
   \   00000322   0198               LDR      R0,[SP, #+4]
   \   00000324   401C               ADDS     R0,R0,#+1
   \   00000326   ........           BL       FlashWrite
   \   0000032A   3000               MOVS     R0,R6
   \   0000032C   ........           BL       __iar_set_interrupt_state
   \   00000330   ........           BL       __iar_enable_interrupt
   \   00000334   0126               MOVS     R6,#+1
   \   00000336   DEE6               B        ??Timetable_Event_9
   \                     ??Timetable_Event_0:
   \   00000338   30D81300           DC32     0x13d830
   \   0000033C   ........           DC32     Y_down
   \   00000340   ........           DC32     X_down
   \   00000344   ........           DC32     Y_up
   \   00000348   ........           DC32     X_up
   \   0000034C   ........           DC32     TextToChangeLength
   \   00000350   ........           DC32     `?<Constant {130, 0}>_1`
   \   00000354   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   00000358   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   1848          
   1849          
   1850          
   1851          
   1852          
   1853          

   \                                 In section Debug.txt, align 4, keep-with-next
   1854          void TimetableSet_Paint(void)
   1855          {          
   \                     TimetableSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   88A0               ADR      R0,??TimetableSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   8548               LDR      R0,??TimetableSet_Paint_0+0x4  ;; 0x753
   \   00000020   854C               LDR      R4,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   00000022   2468               LDR      R4,[R4, #+0]
   \   00000024   854D               LDR      R5,??TimetableSet_Paint_0+0xC  ;; 0xa14
   \   00000026   6C43               MULS     R4,R5,R4
   \   00000028   854D               LDR      R5,??TimetableSet_Paint_0+0x10  ;; Speech
   \   0000002A   2C19               ADDS     R4,R5,R4
   \   0000002C   2018               ADDS     R0,R4,R0
   1856                 List_Paint(Speech[g_leng].Terminarz,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   \   00000034   0025               MOVS     R5,#+0
   1857                
   1858                char day=0;
   1859                char hlight=0;
   1860          
   1861                for (char row=0; row<3; row++)
   \   00000036   2800               MOVS     R0,R5
   \   00000038   0190               STR      R0,[SP, #+4]
   \   0000003A   6BE0               B        ??TimetableSet_Paint_1
   1862                for (char col=0; col<3; col++)
   1863                { 
   1864                  if (++day<8)
   \                     ??TimetableSet_Paint_2:
   \   0000003C   6D1C               ADDS     R5,R5,#+1
   \   0000003E   2D06               LSLS     R5,R5,#+24
   \   00000040   2D0E               LSRS     R5,R5,#+24
   \   00000042   2800               MOVS     R0,R5
   \   00000044   0828               CMP      R0,#+8
   \   00000046   5AD2               BCS      ??TimetableSet_Paint_3
   1865                  {
   1866                      H_line(4+col*18,105-row*14,19,1);
   \   00000048   2600               MOVS     R6,R4
   \   0000004A   1220               MOVS     R0,#+18
   \   0000004C   4643               MULS     R6,R0,R6
   \   0000004E   019F               LDR      R7,[SP, #+4]
   \   00000050   3F06               LSLS     R7,R7,#+24
   \   00000052   3F0E               LSRS     R7,R7,#+24
   \   00000054   0123               MOVS     R3,#+1
   \   00000056   1322               MOVS     R2,#+19
   \   00000058   6920               MOVS     R0,#+105
   \   0000005A   0E21               MOVS     R1,#+14
   \   0000005C   7943               MULS     R1,R7,R1
   \   0000005E   411A               SUBS     R1,R0,R1
   \   00000060   3000               MOVS     R0,R6
   \   00000062   001D               ADDS     R0,R0,#+4
   \   00000064   0006               LSLS     R0,R0,#+24
   \   00000066   000E               LSRS     R0,R0,#+24
   \   00000068   ........           BL       H_line
   1867                      H_line(4+col*18,105-(row+1)*14,19,1);
   \   0000006C   7F1C               ADDS     R7,R7,#+1
   \   0000006E   0E20               MOVS     R0,#+14
   \   00000070   4743               MULS     R7,R0,R7
   \   00000072   0397               STR      R7,[SP, #+12]
   \   00000074   6920               MOVS     R0,#+105
   \   00000076   3900               MOVS     R1,R7
   \   00000078   471A               SUBS     R7,R0,R1
   \   0000007A   0123               MOVS     R3,#+1
   \   0000007C   1322               MOVS     R2,#+19
   \   0000007E   3900               MOVS     R1,R7
   \   00000080   3000               MOVS     R0,R6
   \   00000082   001D               ADDS     R0,R0,#+4
   \   00000084   0006               LSLS     R0,R0,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   ........           BL       H_line
   1868                      V_line(4+col*18,105-(row+1)*14,14,1);
   \   0000008C   0123               MOVS     R3,#+1
   \   0000008E   0E22               MOVS     R2,#+14
   \   00000090   3900               MOVS     R1,R7
   \   00000092   3000               MOVS     R0,R6
   \   00000094   001D               ADDS     R0,R0,#+4
   \   00000096   0006               LSLS     R0,R0,#+24
   \   00000098   000E               LSRS     R0,R0,#+24
   \   0000009A   ........           BL       V_line
   1869                      V_line(4+(col+1)*18,105-(row+1)*14,14,1);
   \   0000009E   0123               MOVS     R3,#+1
   \   000000A0   0E22               MOVS     R2,#+14
   \   000000A2   3900               MOVS     R1,R7
   \   000000A4   3000               MOVS     R0,R6
   \   000000A6   1630               ADDS     R0,R0,#+22
   \   000000A8   0006               LSLS     R0,R0,#+24
   \   000000AA   000E               LSRS     R0,R0,#+24
   \   000000AC   ........           BL       V_line
   1870                      
   1871                      hlight=(((TimetableSet_Week>>(day-1))) &0x1);
   1872                      Label((char*)DeyOfWeekStr[g_leng][day],2,6+col*18 ,105-(row+1)*14+3,2,14,0,128,hlight);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   6448               LDR      R0,??TimetableSet_Paint_0+0x14  ;; TextToChangeLength + 15
   \   000000B4   0078               LDRB     R0,[R0, #+0]
   \   000000B6   2900               MOVS     R1,R5
   \   000000B8   491E               SUBS     R1,R1,#+1
   \   000000BA   0841               ASRS     R0,R0,R1
   \   000000BC   0121               MOVS     R1,#+1
   \   000000BE   0140               ANDS     R1,R1,R0
   \   000000C0   0091               STR      R1,[SP, #+0]
   \   000000C2   8021               MOVS     R1,#+128
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   03B4               PUSH     {R0,R1}
   \   000000C8   0E21               MOVS     R1,#+14
   \   000000CA   0220               MOVS     R0,#+2
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   6C20               MOVS     R0,#+108
   \   000000D0   0999               LDR      R1,[SP, #+36]
   \   000000D2   431A               SUBS     R3,R0,R1
   \   000000D4   B61D               ADDS     R6,R6,#+6
   \   000000D6   3200               MOVS     R2,R6
   \   000000D8   1206               LSLS     R2,R2,#+24
   \   000000DA   120E               LSRS     R2,R2,#+24
   \   000000DC   0221               MOVS     R1,#+2
   \   000000DE   B027               MOVS     R7,#+176
   \   000000E0   7F00               LSLS     R7,R7,#+1        ;; #+352
   \   000000E2   2800               MOVS     R0,R5
   \   000000E4   4600               LSLS     R6,R0,#+1
   \   000000E6   B446               MOV      R12,R6
   \   000000E8   5348               LDR      R0,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   000000EA   0068               LDR      R0,[R0, #+0]
   \   000000EC   0601               LSLS     R6,R0,#+4
   \   000000EE   5648               LDR      R0,??TimetableSet_Paint_0+0x18  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   000000F0   8019               ADDS     R0,R0,R6
   \   000000F2   6646               MOV      R6,R12
   \   000000F4   8019               ADDS     R0,R0,R6
   \   000000F6   C019               ADDS     R0,R0,R7
   \   000000F8   ........           BL       Label
   \   000000FC   06B0               ADD      SP,SP,#+24
   1873          
   1874                  }
   1875                }
   \                     ??TimetableSet_Paint_3:
   \   000000FE   641C               ADDS     R4,R4,#+1
   \   00000100   2406               LSLS     R4,R4,#+24
   \   00000102   240E               LSRS     R4,R4,#+24
   \                     ??TimetableSet_Paint_4:
   \   00000104   2000               MOVS     R0,R4
   \   00000106   0328               CMP      R0,#+3
   \   00000108   98D3               BCC      ??TimetableSet_Paint_2
   \   0000010A   0198               LDR      R0,[SP, #+4]
   \   0000010C   401C               ADDS     R0,R0,#+1
   \   0000010E   0006               LSLS     R0,R0,#+24
   \   00000110   000E               LSRS     R0,R0,#+24
   \   00000112   0190               STR      R0,[SP, #+4]
   \                     ??TimetableSet_Paint_1:
   \   00000114   0198               LDR      R0,[SP, #+4]
   \   00000116   0006               LSLS     R0,R0,#+24
   \   00000118   000E               LSRS     R0,R0,#+24
   \   0000011A   0328               CMP      R0,#+3
   \   0000011C   01D2               BCS      ??TimetableSet_Paint_5
   \   0000011E   0024               MOVS     R4,#+0
   \   00000120   F0E7               B        ??TimetableSet_Paint_4
   1876                
   1877                 Label(Speech[g_leng].Godzina,0,5,51,12,40,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??TimetableSet_Paint_5:
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   0020               MOVS     R0,#+0
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   7F21               MOVS     R1,#+127
   \   0000012A   0120               MOVS     R0,#+1
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   2821               MOVS     R1,#+40
   \   00000130   0C20               MOVS     R0,#+12
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   3323               MOVS     R3,#+51
   \   00000136   0522               MOVS     R2,#+5
   \   00000138   0021               MOVS     R1,#+0
   \   0000013A   B420               MOVS     R0,#+180
   \   0000013C   C000               LSLS     R0,R0,#+3        ;; #+1440
   \   0000013E   3E4C               LDR      R4,??TimetableSet_Paint_0+0x8  ;; g_leng
   \   00000140   2468               LDR      R4,[R4, #+0]
   \   00000142   3E4D               LDR      R5,??TimetableSet_Paint_0+0xC  ;; 0xa14
   \   00000144   6C43               MULS     R4,R5,R4
   \   00000146   3E4D               LDR      R5,??TimetableSet_Paint_0+0x10  ;; Speech
   \   00000148   2C19               ADDS     R4,R5,R4
   \   0000014A   2018               ADDS     R0,R4,R0
   \   0000014C   ........           BL       Label
   \   00000150   06B0               ADD      SP,SP,#+24
   1878                        
   1879                char LabelButt[2];
   1880                  
   1881                LabelButt[1]=0;
   \   00000152   6C46               MOV      R4,SP
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   6070               STRB     R0,[R4, #+1]
   1882                LabelButt[0]=30; //góra - godzina
   \   00000158   1E25               MOVS     R5,#+30
   \   0000015A   2570               STRB     R5,[R4, #+0]
   1883                Button(LabelButt,5,35,26,15);
   \   0000015C   82B0               SUB      SP,SP,#+8
   \   0000015E   0F20               MOVS     R0,#+15
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   1A23               MOVS     R3,#+26
   \   00000164   2322               MOVS     R2,#+35
   \   00000166   0521               MOVS     R1,#+5
   \   00000168   02A8               ADD      R0,SP,#+8
   \   0000016A   ........           BL       Button
   \   0000016E   02B0               ADD      SP,SP,#+8
   1884                LabelButt[0]=30; //góra- minuta
   \   00000170   2570               STRB     R5,[R4, #+0]
   1885                Button(LabelButt,34,35,26,15);
   \   00000172   82B0               SUB      SP,SP,#+8
   \   00000174   0F20               MOVS     R0,#+15
   \   00000176   0090               STR      R0,[SP, #+0]
   \   00000178   1A23               MOVS     R3,#+26
   \   0000017A   2322               MOVS     R2,#+35
   \   0000017C   2221               MOVS     R1,#+34
   \   0000017E   02A8               ADD      R0,SP,#+8
   \   00000180   ........           BL       Button
   \   00000184   02B0               ADD      SP,SP,#+8
   1886                
   1887                char time_char[2];
   1888                
   1889                 CharToStr2(TimetableSet_Hour, time_char); //(char Value, char *Vstring, char ill);
                        ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   \   00000186   314D               LDR      R5,??TimetableSet_Paint_0+0x1C  ;; TextToChangeLength
   \   00000188   02A9               ADD      R1,SP,#+8
   \   0000018A   687B               LDRB     R0,[R5, #+13]
   \   0000018C   ........           BL       CharToStr2
   1890                 Label(time_char,1,29,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000190   82B0               SUB      SP,SP,#+8
   \   00000192   0020               MOVS     R0,#+0
   \   00000194   0090               STR      R0,[SP, #+0]
   \   00000196   7F21               MOVS     R1,#+127
   \   00000198   0120               MOVS     R0,#+1
   \   0000019A   03B4               PUSH     {R0,R1}
   \   0000019C   0F21               MOVS     R1,#+15
   \   0000019E   0220               MOVS     R0,#+2
   \   000001A0   03B4               PUSH     {R0,R1}
   \   000001A2   1923               MOVS     R3,#+25
   \   000001A4   1D22               MOVS     R2,#+29
   \   000001A6   0121               MOVS     R1,#+1
   \   000001A8   08A8               ADD      R0,SP,#+32
   \   000001AA   ........           BL       Label
   \   000001AE   06B0               ADD      SP,SP,#+24
   1891                 
   1892                 Label(":",0,32,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001B0   82B0               SUB      SP,SP,#+8
   \   000001B2   0020               MOVS     R0,#+0
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   7F21               MOVS     R1,#+127
   \   000001B8   0120               MOVS     R0,#+1
   \   000001BA   03B4               PUSH     {R0,R1}
   \   000001BC   0F21               MOVS     R1,#+15
   \   000001BE   0220               MOVS     R0,#+2
   \   000001C0   03B4               PUSH     {R0,R1}
   \   000001C2   1923               MOVS     R3,#+25
   \   000001C4   2022               MOVS     R2,#+32
   \   000001C6   0021               MOVS     R1,#+0
   \   000001C8   21A0               ADR      R0,??TimetableSet_Paint_0+0x20  ;; 0x3A, 0x00, 0x00, 0x00
   \   000001CA   ........           BL       Label
   \   000001CE   06B0               ADD      SP,SP,#+24
   1893                 
   1894                 CharToStr2(TimetableSet_Minute, time_char); //(char Value, char *Vstring, char ill);
   \   000001D0   02A9               ADD      R1,SP,#+8
   \   000001D2   A87B               LDRB     R0,[R5, #+14]
   \   000001D4   ........           BL       CharToStr2
   1895                 Label(time_char,0,36,25,2,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001D8   82B0               SUB      SP,SP,#+8
   \   000001DA   0020               MOVS     R0,#+0
   \   000001DC   0090               STR      R0,[SP, #+0]
   \   000001DE   7F21               MOVS     R1,#+127
   \   000001E0   0120               MOVS     R0,#+1
   \   000001E2   03B4               PUSH     {R0,R1}
   \   000001E4   0F21               MOVS     R1,#+15
   \   000001E6   0220               MOVS     R0,#+2
   \   000001E8   03B4               PUSH     {R0,R1}
   \   000001EA   1923               MOVS     R3,#+25
   \   000001EC   2422               MOVS     R2,#+36
   \   000001EE   0021               MOVS     R1,#+0
   \   000001F0   08A8               ADD      R0,SP,#+32
   \   000001F2   ........           BL       Label
   \   000001F6   06B0               ADD      SP,SP,#+24
   1896                        
   1897                
   1898          
   1899                LabelButt[0]=31; //dó³ godzina
   \   000001F8   1F25               MOVS     R5,#+31
   \   000001FA   2570               STRB     R5,[R4, #+0]
   1900                Button(LabelButt,5, 9,26,15);
   \   000001FC   82B0               SUB      SP,SP,#+8
   \   000001FE   0F20               MOVS     R0,#+15
   \   00000200   0090               STR      R0,[SP, #+0]
   \   00000202   1A23               MOVS     R3,#+26
   \   00000204   0922               MOVS     R2,#+9
   \   00000206   0521               MOVS     R1,#+5
   \   00000208   02A8               ADD      R0,SP,#+8
   \   0000020A   ........           BL       Button
   \   0000020E   02B0               ADD      SP,SP,#+8
   1901                LabelButt[0]=31; //dó³ minuta
   \   00000210   2570               STRB     R5,[R4, #+0]
   1902                Button(LabelButt,34, 9,26,15);
   \   00000212   82B0               SUB      SP,SP,#+8
   \   00000214   0F20               MOVS     R0,#+15
   \   00000216   0090               STR      R0,[SP, #+0]
   \   00000218   1A23               MOVS     R3,#+26
   \   0000021A   0922               MOVS     R2,#+9
   \   0000021C   2221               MOVS     R1,#+34
   \   0000021E   02A8               ADD      R0,SP,#+8
   \   00000220   ........           BL       Button
   \   00000224   02B0               ADD      SP,SP,#+8
   1903                 
   1904          
   1905                 
   1906          }//________________________________________________________________________
   \   00000226   05B0               ADD      SP,SP,#+20
   \   00000228   F0BC               POP      {R4-R7}
   \   0000022A   01BC               POP      {R0}
   \   0000022C   0047               BX       R0               ;; return
   \   0000022E   C046               Nop      
   \                     ??TimetableSet_Paint_0:
   \   00000230   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000234   53070000           DC32     0x753
   \   00000238   ........           DC32     g_leng
   \   0000023C   140A0000           DC32     0xa14
   \   00000240   ........           DC32     Speech
   \   00000244   ........           DC32     TextToChangeLength + 15
   \   00000248   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   0000024C   ........           DC32     TextToChangeLength
   \   00000250   3A000000           DC8      0x3A, 0x00, 0x00, 0x00
   1907          
   1908              
   1909          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   1910          void TimetableSet_Event(void)
   1911                {
   \                     TimetableSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   804D               LDR      R5,??TimetableSet_Event_0  ;; Y_down
   \   00000006   2100               MOVS     R1,R4
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   7E48               LDR      R0,??TimetableSet_Event_0+0x4  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   7D48               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   7D48               LDR      R0,??TimetableSet_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   1912          
   1913                   char Repaint=0;
   1914                  
   1915            
   1916                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   27D5               BPL      ??TimetableSet_Event_1
   1917                  {
   1918                     //zapis do flash
   1919                            unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0400               MOVS     R4,R0
   1920                            __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
   1921                            FlashWrite((char*)(&(TaskToChange->Hour)), (char*) (&(TimetableSet_Hour)), 1);
                                   ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   784D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000038   0122               MOVS     R2,#+1
   \   0000003A   2900               MOVS     R1,R5
   \   0000003C   0D31               ADDS     R1,R1,#+13
   \   0000003E   E86E               LDR      R0,[R5, #+108]
   \   00000040   801C               ADDS     R0,R0,#+2
   \   00000042   ........           BL       FlashWrite
   1922                            FlashWrite((char*)(&(TaskToChange->Minute)), (char*) (&(TimetableSet_Minute)), 1);
   \   00000046   0122               MOVS     R2,#+1
   \   00000048   2900               MOVS     R1,R5
   \   0000004A   0E31               ADDS     R1,R1,#+14
   \   0000004C   E86E               LDR      R0,[R5, #+108]
   \   0000004E   C01C               ADDS     R0,R0,#+3
   \   00000050   ........           BL       FlashWrite
   1923                            FlashWrite((char*)(&(TaskToChange->Week)), (char*) (&(TimetableSet_Week)), 1);
   \   00000054   0122               MOVS     R2,#+1
   \   00000056   2900               MOVS     R1,R5
   \   00000058   0F31               ADDS     R1,R1,#+15
   \   0000005A   E86E               LDR      R0,[R5, #+108]
   \   0000005C   401C               ADDS     R0,R0,#+1
   \   0000005E   ........           BL       FlashWrite
   1924                            __set_interrupt_state(Save);
   \   00000062   2000               MOVS     R0,R4
   \   00000064   ........           BL       __iar_set_interrupt_state
   1925                            __enable_interrupt();
   \   00000068   ........           BL       __iar_enable_interrupt
   1926                            //koniec zapisu do flash
   1927                    
   1928                    
   1929                    MenuLevel=(MenuLevel/10);
   \   0000006C   A86C               LDR      R0,[R5, #+72]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   A864               STR      R0,[R5, #+72]
   1930                    MenuPaint();
   \   00000076   ........           BL       MenuPaint
   \   0000007A   C2E0               B        ??TimetableSet_Event_2
   1931                  } else if ((Y_down<112)  || (Y_up<112))
   \                     ??TimetableSet_Event_1:
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   285E               LDRSH    R0,[R5, R0]
   \   00000080   7028               CMP      R0,#+112
   \   00000082   05DB               BLT      ??TimetableSet_Event_3
   \   00000084   6248               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   00000086   0021               MOVS     R1,#+0
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   7028               CMP      R0,#+112
   \   0000008C   00DB               BLT      .+4
   \   0000008E   B8E0               B        ??TimetableSet_Event_2
   1932                  {  
   1933                      char day;
   1934                      day=0;
   1935                      for (char row=0; row<3; row++)
   \                     ??TimetableSet_Event_3:
   \   00000090   2200               MOVS     R2,R4
   \   00000092   02E0               B        ??TimetableSet_Event_4
   \                     ??TimetableSet_Event_5:
   \   00000094   521C               ADDS     R2,R2,#+1
   \   00000096   1206               LSLS     R2,R2,#+24
   \   00000098   120E               LSRS     R2,R2,#+24
   \                     ??TimetableSet_Event_4:
   \   0000009A   1000               MOVS     R0,R2
   \   0000009C   0328               CMP      R0,#+3
   \   0000009E   4BD2               BCS      ??TimetableSet_Event_6
   1936                      for (char col=0; col<3; col++)
   \   000000A0   0023               MOVS     R3,#+0
   \   000000A2   07E0               B        ??TimetableSet_Event_7
   1937                      { 
   1938                        if (++day<8)
   1939                        {
   1940                            if ((X_up>4+col*18) && (X_up<4+(col+1)*18) && (Y_up<105-row*14) && (Y_up>105-(row+1)*14))
   1941                            {
   1942                              if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                           ^
Warning[Pe063]: shift count is too large
   1943                              if ((TimetableSet_Week>>(day-1)) & 0x1)  //jezeli dzieñ aktywny to wy³acz je¿eli nie to w³¹cz
   1944                              {
   1945                                 TimetableSet_Week &= ~(1<<(day-1));
   1946                              }else{
   1947                                 TimetableSet_Week |= (1<<(day-1));
   \                     ??TimetableSet_Event_8:
   \   000000A4   0124               MOVS     R4,#+1
   \   000000A6   8440               LSLS     R4,R4,R0
   \   000000A8   0C43               ORRS     R4,R4,R1
   \   000000AA   EC73               STRB     R4,[R5, #+15]
   1948                              }
   1949          
   1950                              Repaint=1;
   \                     ??TimetableSet_Event_9:
   \   000000AC   0124               MOVS     R4,#+1
   \                     ??TimetableSet_Event_10:
   \   000000AE   5B1C               ADDS     R3,R3,#+1
   \   000000B0   1B06               LSLS     R3,R3,#+24
   \   000000B2   1B0E               LSRS     R3,R3,#+24
   \                     ??TimetableSet_Event_7:
   \   000000B4   1800               MOVS     R0,R3
   \   000000B6   0328               CMP      R0,#+3
   \   000000B8   ECD2               BCS      ??TimetableSet_Event_5
   \   000000BA   761C               ADDS     R6,R6,#+1
   \   000000BC   3606               LSLS     R6,R6,#+24
   \   000000BE   360E               LSRS     R6,R6,#+24
   \   000000C0   3000               MOVS     R0,R6
   \   000000C2   0828               CMP      R0,#+8
   \   000000C4   F3D2               BCS      ??TimetableSet_Event_10
   \   000000C6   1800               MOVS     R0,R3
   \   000000C8   1221               MOVS     R1,#+18
   \   000000CA   4843               MULS     R0,R1,R0
   \   000000CC   5149               LDR      R1,??TimetableSet_Event_0+0xC  ;; X_up
   \   000000CE   0025               MOVS     R5,#+0
   \   000000D0   495F               LDRSH    R1,[R1, R5]
   \   000000D2   0500               MOVS     R5,R0
   \   000000D4   2D1D               ADDS     R5,R5,#+4
   \   000000D6   8D42               CMP      R5,R1
   \   000000D8   E9DA               BGE      ??TimetableSet_Event_10
   \   000000DA   1630               ADDS     R0,R0,#+22
   \   000000DC   8142               CMP      R1,R0
   \   000000DE   E6DA               BGE      ??TimetableSet_Event_10
   \   000000E0   1100               MOVS     R1,R2
   \   000000E2   4B48               LDR      R0,??TimetableSet_Event_0+0x8  ;; Y_up
   \   000000E4   0025               MOVS     R5,#+0
   \   000000E6   455F               LDRSH    R5,[R0, R5]
   \   000000E8   6920               MOVS     R0,#+105
   \   000000EA   0E27               MOVS     R7,#+14
   \   000000EC   4F43               MULS     R7,R1,R7
   \   000000EE   C01B               SUBS     R0,R0,R7
   \   000000F0   8542               CMP      R5,R0
   \   000000F2   DCDA               BGE      ??TimetableSet_Event_10
   \   000000F4   6920               MOVS     R0,#+105
   \   000000F6   491C               ADDS     R1,R1,#+1
   \   000000F8   0E27               MOVS     R7,#+14
   \   000000FA   7943               MULS     R1,R7,R1
   \   000000FC   401A               SUBS     R0,R0,R1
   \   000000FE   A842               CMP      R0,R5
   \   00000100   D5DA               BGE      ??TimetableSet_Event_10
   \   00000102   4648               LDR      R0,??TimetableSet_Event_0+0x14  ;; 0x13d7e9
   \   00000104   0078               LDRB     R0,[R0, #+0]
   \   00000106   0028               CMP      R0,#+0
   \   00000108   09D1               BNE      ??TimetableSet_Event_11
   \   0000010A   4548               LDR      R0,??TimetableSet_Event_0+0x18  ;; 0xfffff430
   \   0000010C   0021               MOVS     R1,#+0
   \   0000010E   0160               STR      R1,[R0, #+0]
   \   00000110   444C               LDR      R4,??TimetableSet_Event_0+0x1C  ;; ButtonBipCounter
   \   00000112   4548               LDR      R0,??TimetableSet_Event_0+0x20  ;; g_counter
   \   00000114   03C8               LDM      R0!,{R0,R1}
   \   00000116   0025               MOVS     R5,#+0
   \   00000118   0830               ADDS     R0,R0,#+8
   \   0000011A   6941               ADCS     R1,R1,R5
   \   0000011C   03C4               STM      R4!,{R0,R1}
   \                     ??TimetableSet_Event_11:
   \   0000011E   3000               MOVS     R0,R6
   \   00000120   401E               SUBS     R0,R0,#+1
   \   00000122   3D4D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000124   E97B               LDRB     R1,[R5, #+15]
   \   00000126   0C00               MOVS     R4,R1
   \   00000128   0441               ASRS     R4,R4,R0
   \   0000012A   E407               LSLS     R4,R4,#+31
   \   0000012C   BAD5               BPL      ??TimetableSet_Event_8
   \   0000012E   0124               MOVS     R4,#+1
   \   00000130   8440               LSLS     R4,R4,R0
   \   00000132   A143               BICS     R1,R1,R4
   \   00000134   E973               STRB     R1,[R5, #+15]
   \   00000136   B9E7               B        ??TimetableSet_Event_9
   1951                  
   1952                            }
   1953          
   1954                        }
   1955                      }
   1956                      
   1957                      
   1958                            char LabelButt[2];
   1959                  
   1960                      
   1961                      LabelButt[1]=0;
   \                     ??TimetableSet_Event_6:
   \   00000138   6E46               MOV      R6,SP
   \   0000013A   0020               MOVS     R0,#+0
   \   0000013C   7070               STRB     R0,[R6, #+1]
   1962                      LabelButt[0]=30; //góra - godzina
   \   0000013E   1E27               MOVS     R7,#+30
   \   00000140   3770               STRB     R7,[R6, #+0]
   1963                      if (Button(LabelButt,5,35,26,15)==2){Repaint=1; if (TimetableSet_Hour<23) TimetableSet_Hour++; else TimetableSet_Hour=0; }
   \   00000142   82B0               SUB      SP,SP,#+8
   \   00000144   0F20               MOVS     R0,#+15
   \   00000146   0090               STR      R0,[SP, #+0]
   \   00000148   1A23               MOVS     R3,#+26
   \   0000014A   2322               MOVS     R2,#+35
   \   0000014C   0521               MOVS     R1,#+5
   \   0000014E   02A8               ADD      R0,SP,#+8
   \   00000150   ........           BL       Button
   \   00000154   02B0               ADD      SP,SP,#+8
   \   00000156   0228               CMP      R0,#+2
   \   00000158   09D1               BNE      ??TimetableSet_Event_12
   \   0000015A   0124               MOVS     R4,#+1
   \   0000015C   2E4D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   0000015E   687B               LDRB     R0,[R5, #+13]
   \   00000160   1728               CMP      R0,#+23
   \   00000162   02D2               BCS      ??TimetableSet_Event_13
   \   00000164   401C               ADDS     R0,R0,#+1
   \   00000166   6873               STRB     R0,[R5, #+13]
   \   00000168   01E0               B        ??TimetableSet_Event_12
   \                     ??TimetableSet_Event_13:
   \   0000016A   0020               MOVS     R0,#+0
   \   0000016C   6873               STRB     R0,[R5, #+13]
   1964                      LabelButt[0]=30; //góra- minuta
   \                     ??TimetableSet_Event_12:
   \   0000016E   3770               STRB     R7,[R6, #+0]
   1965                      if (Button(LabelButt,34,35,26,15)==2){Repaint=1; if (TimetableSet_Minute<59) TimetableSet_Minute++; else TimetableSet_Minute=0;}
   \   00000170   82B0               SUB      SP,SP,#+8
   \   00000172   0F20               MOVS     R0,#+15
   \   00000174   0090               STR      R0,[SP, #+0]
   \   00000176   1A23               MOVS     R3,#+26
   \   00000178   2322               MOVS     R2,#+35
   \   0000017A   2221               MOVS     R1,#+34
   \   0000017C   02A8               ADD      R0,SP,#+8
   \   0000017E   ........           BL       Button
   \   00000182   02B0               ADD      SP,SP,#+8
   \   00000184   0228               CMP      R0,#+2
   \   00000186   09D1               BNE      ??TimetableSet_Event_14
   \   00000188   0124               MOVS     R4,#+1
   \   0000018A   234D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   0000018C   A87B               LDRB     R0,[R5, #+14]
   \   0000018E   3B28               CMP      R0,#+59
   \   00000190   02D2               BCS      ??TimetableSet_Event_15
   \   00000192   401C               ADDS     R0,R0,#+1
   \   00000194   A873               STRB     R0,[R5, #+14]
   \   00000196   01E0               B        ??TimetableSet_Event_14
   \                     ??TimetableSet_Event_15:
   \   00000198   0020               MOVS     R0,#+0
   \   0000019A   A873               STRB     R0,[R5, #+14]
   1966                      
   1967                
   1968                      LabelButt[0]=31; //dó³ godzina
   \                     ??TimetableSet_Event_14:
   \   0000019C   1F27               MOVS     R7,#+31
   \   0000019E   3770               STRB     R7,[R6, #+0]
   1969                      if (Button(LabelButt,5, 9,26,15)==2){Repaint=1; if (TimetableSet_Hour>0) TimetableSet_Hour--; else TimetableSet_Hour=23;}
   \   000001A0   82B0               SUB      SP,SP,#+8
   \   000001A2   0F20               MOVS     R0,#+15
   \   000001A4   0090               STR      R0,[SP, #+0]
   \   000001A6   1A23               MOVS     R3,#+26
   \   000001A8   0922               MOVS     R2,#+9
   \   000001AA   0521               MOVS     R1,#+5
   \   000001AC   02A8               ADD      R0,SP,#+8
   \   000001AE   ........           BL       Button
   \   000001B2   02B0               ADD      SP,SP,#+8
   \   000001B4   0228               CMP      R0,#+2
   \   000001B6   09D1               BNE      ??TimetableSet_Event_16
   \   000001B8   0124               MOVS     R4,#+1
   \   000001BA   174D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   000001BC   687B               LDRB     R0,[R5, #+13]
   \   000001BE   0028               CMP      R0,#+0
   \   000001C0   02D0               BEQ      ??TimetableSet_Event_17
   \   000001C2   401E               SUBS     R0,R0,#+1
   \   000001C4   6873               STRB     R0,[R5, #+13]
   \   000001C6   01E0               B        ??TimetableSet_Event_16
   \                     ??TimetableSet_Event_17:
   \   000001C8   1720               MOVS     R0,#+23
   \   000001CA   6873               STRB     R0,[R5, #+13]
   1970                      LabelButt[0]=31; //dó³ minuta
   \                     ??TimetableSet_Event_16:
   \   000001CC   3770               STRB     R7,[R6, #+0]
   1971                      if (Button(LabelButt,34, 9,26,15)==2){Repaint=1; if (TimetableSet_Minute>0) TimetableSet_Minute--; else TimetableSet_Minute=59;}
   \   000001CE   82B0               SUB      SP,SP,#+8
   \   000001D0   0F20               MOVS     R0,#+15
   \   000001D2   0090               STR      R0,[SP, #+0]
   \   000001D4   1A23               MOVS     R3,#+26
   \   000001D6   0922               MOVS     R2,#+9
   \   000001D8   2221               MOVS     R1,#+34
   \   000001DA   02A8               ADD      R0,SP,#+8
   \   000001DC   ........           BL       Button
   \   000001E0   02B0               ADD      SP,SP,#+8
   \   000001E2   0228               CMP      R0,#+2
   \   000001E4   09D1               BNE      ??TimetableSet_Event_18
   \   000001E6   0124               MOVS     R4,#+1
   \   000001E8   0B4D               LDR      R5,??TimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   000001EA   A87B               LDRB     R0,[R5, #+14]
   \   000001EC   0028               CMP      R0,#+0
   \   000001EE   02D0               BEQ      ??TimetableSet_Event_19
   \   000001F0   401E               SUBS     R0,R0,#+1
   \   000001F2   A873               STRB     R0,[R5, #+14]
   \   000001F4   01E0               B        ??TimetableSet_Event_18
   \                     ??TimetableSet_Event_19:
   \   000001F6   3B20               MOVS     R0,#+59
   \   000001F8   A873               STRB     R0,[R5, #+14]
   1972                          
   1973                     
   1974                     
   1975                     if (Repaint==1) MenuPaint();      
   \                     ??TimetableSet_Event_18:
   \   000001FA   012C               CMP      R4,#+1
   \   000001FC   01D1               BNE      ??TimetableSet_Event_2
   \   000001FE   ........           BL       MenuPaint
   1976                    
   1977                  }
   1978          }//________________________________________________________________________
   \                     ??TimetableSet_Event_2:
   \   00000202   F8BC               POP      {R3-R7}
   \   00000204   01BC               POP      {R0}
   \   00000206   0047               BX       R0               ;; return
   \                     ??TimetableSet_Event_0:
   \   00000208   ........           DC32     Y_down
   \   0000020C   ........           DC32     X_down
   \   00000210   ........           DC32     Y_up
   \   00000214   ........           DC32     X_up
   \   00000218   ........           DC32     TextToChangeLength
   \   0000021C   E9D71300           DC32     0x13d7e9
   \   00000220   30F4FFFF           DC32     0xfffff430
   \   00000224   ........           DC32     ButtonBipCounter
   \   00000228   ........           DC32     g_counter
   1979              
   1980          
   1981          
   1982          
   1983          
   1984          
   1985          
   1986          
   1987          
   1988          
   1989          
   1990          
   1991          
   1992          
   1993          
   1994          //*-----------------------------------------------------------------------------
   1995          //* Nazwa funkcji :    Wait_Paint
   1996          //* Funkcja strony g³ównej menu
   1997          //*-----------------------------------------------------------------------------
   1998          //* Efekt widoczny po odwierzeniu LCD (Wait_Paint)
   1999          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2000          void Wait_Paint(void)
   2001          {
   \                     Wait_Paint:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   AFB0               SUB      SP,SP,#+188
   2002              CleanCanvas(); 
   \   00000004   ........           BL       CleanCanvas
   2003              
   2004              char ekran_tab[4][46] = {
   2005                            {0,240,252,127,143,243,251,251,251,227,131,3,7,15,14,30,60,120,240,224,192,128,0,0,0,128,192,224,240,112,56,156,206,239,119,3,3,3,227,255,255,31,7,31,254,252},
   2006                            {252,255,255,0,255,255,255,255,255,255,255,254,248,48,48,0,0,0,0,1,3,39,183,182,183,183,123,253,254,254,255,255,255,1,0,0,0,0,255,255,0,0,0,0,255,255},
   2007                            {1,63,255,248,199,63,127,127,127,31,7,1,128,128,192,224,240,120,60,30,15,7,3,3,3,7,15,30,61,123,247,239,223,158,176,0,0,0,31,255,252,192,128,224,255,255},
   2008                            {0,0,1,3,3,7,7,7,7,7,7,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,7,7,7,7,7,7,3,1,0},
   2009                            };
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0A49               LDR      R1,??Wait_Paint_0  ;; `?<Constant {{0, 240, 252, 127, 143, 243, 251, `
   \   0000000C   B822               MOVS     R2,#+184
   \   0000000E   ........           BL       __aeabi_memcpy4
   2010              
   2011          
   2012              CopyToCanvasPoint((char*)ekran_tab, 20, 40, 32,46);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   2E20               MOVS     R0,#+46
   \   00000016   0090               STR      R0,[SP, #+0]
   \   00000018   2023               MOVS     R3,#+32
   \   0000001A   2822               MOVS     R2,#+40
   \   0000001C   1421               MOVS     R1,#+20
   \   0000001E   02A8               ADD      R0,SP,#+8
   \   00000020   ........           BL       CopyToCanvasPoint
   \   00000024   02B0               ADD      SP,SP,#+8
   2013          
   2014           
   2015              RepaintLCD();
   \   00000026   ........           BL       RepaintLCD
   2016              RepaintLCD();
   \   0000002A   ........           BL       RepaintLCD
   2017          }//_______________________ Koniec funkcji Wait_Paint __________________________
   \   0000002E   2FB0               ADD      SP,SP,#+188
   \   00000030   01BC               POP      {R0}
   \   00000032   0047               BX       R0               ;; return
   \                     ??Wait_Paint_0:
   \   00000034   ........           DC32     `?<Constant {{0, 240, 252, 127, 143, 243, 251, `
   2018          
   2019          
   2020          
   2021          
   2022          
   2023          
   2024          
   2025          
   2026          
   2027          //******************************************************************************************************************************
   2028          //******************************************************************************************************************************
   2029          //******************************************************************************************************************************
   2030          //******************************************************************************************************************************
   2031          //******************************************************************************************************************************
   2032          
   2033          
   2034          
   2035          
   2036          
   2037          //*-----------------------------------------------------------------------------
   2038          //* Nazwa funkcji :    MainSide_Paint
   2039          //* Funkcja strony g³ównej menu
   2040          //*-----------------------------------------------------------------------------
   2041          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   2042          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2043          void Animation_Event(void)
   2044          {
   \                     Animation_Event:
   \   00000000   01B5               PUSH     {R0,LR}
   2045            
   2046              //akcja przycisku menu
   2047              if ((X_up>1) && (X_up<60) && (Y_up>1) && (Y_up<128))
   \   00000002   0A48               LDR      R0,??Animation_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   0228               CMP      R0,#+2
   \   0000000A   0CDB               BLT      ??Animation_Event_1
   \   0000000C   3C28               CMP      R0,#+60
   \   0000000E   0ADA               BGE      ??Animation_Event_1
   \   00000010   0748               LDR      R0,??Animation_Event_0+0x4  ;; Y_up
   \   00000012   405E               LDRSH    R0,[R0, R1]
   \   00000014   0228               CMP      R0,#+2
   \   00000016   06DB               BLT      ??Animation_Event_1
   \   00000018   8028               CMP      R0,#+128
   \   0000001A   04DA               BGE      ??Animation_Event_1
   2048              {
   2049                MenuLevel=4;
   \   0000001C   0548               LDR      R0,??Animation_Event_0+0x8  ;; TextToChangeLength + 72
   \   0000001E   0421               MOVS     R1,#+4
   \   00000020   0160               STR      R1,[R0, #+0]
   2050                MenuPaint();
   \   00000022   ........           BL       MenuPaint
   2051              }
   2052          }//_______________________ Koniec funkcji MainSide_Event __________________________
   \                     ??Animation_Event_1:
   \   00000026   08BC               POP      {R3}
   \   00000028   01BC               POP      {R0}
   \   0000002A   0047               BX       R0               ;; return
   \                     ??Animation_Event_0:
   \   0000002C   ........           DC32     X_up
   \   00000030   ........           DC32     Y_up
   \   00000034   ........           DC32     TextToChangeLength + 72
   2053          
   2054          
   2055          
   2056          
   2057          
   2058          
   2059          
   2060          
   2061                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2062                void AdvanceSet_Paint(void)
   2063                {
   \                     AdvanceSet_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   2064                  
   2065                  List_Paint(Speech[g_leng].Serwis,3,15,15,0,3, "Restart", Speech[g_leng].Czysc_pamiec, Speech[g_leng].Wyjdz , 0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0F48               LDR      R0,??AdvanceSet_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0F49               LDR      R1,??AdvanceSet_Paint_0+0x4  ;; 0xa14
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   0F49               LDR      R1,??AdvanceSet_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   F020               MOVS     R0,#+240
   \   00000018   C000               LSLS     R0,R0,#+3        ;; #+1920
   \   0000001A   2018               ADDS     R0,R4,R0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0B48               LDR      R0,??AdvanceSet_Paint_0+0xC  ;; 0x771
   \   00000020   2118               ADDS     R1,R4,R0
   \   00000022   0B48               LDR      R0,??AdvanceSet_Paint_0+0x10  ;; `?<Constant "Info ">` + 28
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0321               MOVS     R1,#+3
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0F23               MOVS     R3,#+15
   \   0000002E   1A00               MOVS     R2,R3
   \   00000030   0848               LDR      R0,??AdvanceSet_Paint_0+0x14  ;; 0x762
   \   00000032   2018               ADDS     R0,R4,R0
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   2066          
   2067                  
   2068                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000003A   10BC               POP      {R4}
   \   0000003C   01BC               POP      {R0}
   \   0000003E   0047               BX       R0               ;; return
   \                     ??AdvanceSet_Paint_0:
   \   00000040   ........           DC32     g_leng
   \   00000044   140A0000           DC32     0xa14
   \   00000048   ........           DC32     Speech
   \   0000004C   71070000           DC32     0x771
   \   00000050   ........           DC32     `?<Constant "Info ">` + 28
   \   00000054   62070000           DC32     0x762
   2069          
   2070          
   2071                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2072                void AdvanceSet_Event(void)
   2073                {
   \                     AdvanceSet_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   2074                  //char podswietl=0;
   2075                  int ans;
   2076                  
   2077                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,15); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0F21               MOVS     R1,#+15
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0320               MOVS     R0,#+3
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   1348               LDR      R0,??AdvanceSet_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   1348               LDR      R0,??AdvanceSet_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   1348               LDR      R0,??AdvanceSet_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   1348               LDR      R0,??AdvanceSet_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   2078            
   2079                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   15D0               BEQ      ??AdvanceSet_Event_1
   2080                    {
   2081                      if (ans==1) 
   \   0000002A   0128               CMP      R0,#+1
   \   0000002C   02D1               BNE      ??AdvanceSet_Event_2
   2082                      {
   2083                        //restart
   2084                        
   2085                        AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   0000002E   0F49               LDR      R1,??AdvanceSet_Event_0+0x10  ;; 0xfffffd00
   \   00000030   0F4A               LDR      R2,??AdvanceSet_Event_0+0x14  ;; 0xa5000005
   \   00000032   0A60               STR      R2,[R1, #+0]
   2086                      }
   2087                      if (ans==2) 
   \                     ??AdvanceSet_Event_2:
   \   00000034   0228               CMP      R0,#+2
   \   00000036   05D1               BNE      ??AdvanceSet_Event_3
   2088                      {
   2089                        MenuLevel=(MenuLevel*10+1);
   \   00000038   0E49               LDR      R1,??AdvanceSet_Event_0+0x18  ;; TextToChangeLength
   \   0000003A   8A6C               LDR      R2,[R1, #+72]
   \   0000003C   0A23               MOVS     R3,#+10
   \   0000003E   5A43               MULS     R2,R3,R2
   \   00000040   521C               ADDS     R2,R2,#+1
   \   00000042   8A64               STR      R2,[R1, #+72]
   2090                        //czyæ wczystko
   2091                        
   2092                      }
   2093                      
   2094                    if ((ans<0) || (ans==3)) MenuLevel=1;
   \                     ??AdvanceSet_Event_3:
   \   00000044   0028               CMP      R0,#+0
   \   00000046   01D4               BMI      ??AdvanceSet_Event_4
   \   00000048   0328               CMP      R0,#+3
   \   0000004A   02D1               BNE      ??AdvanceSet_Event_5
   \                     ??AdvanceSet_Event_4:
   \   0000004C   0A48               LDR      R0,??AdvanceSet_Event_0+0x1C  ;; TextToChangeLength + 72
   \   0000004E   0121               MOVS     R1,#+1
   \   00000050   0160               STR      R1,[R0, #+0]
   2095                    MenuPaint();
   \                     ??AdvanceSet_Event_5:
   \   00000052   ........           BL       MenuPaint
   2096                    } 
   2097                }//_______________________________________________________________________
   \                     ??AdvanceSet_Event_1:
   \   00000056   10BC               POP      {R4}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??AdvanceSet_Event_0:
   \   0000005C   ........           DC32     Y_down
   \   00000060   ........           DC32     X_down
   \   00000064   ........           DC32     Y_up
   \   00000068   ........           DC32     X_up
   \   0000006C   00FDFFFF           DC32     0xfffffd00
   \   00000070   050000A5           DC32     0xa5000005
   \   00000074   ........           DC32     TextToChangeLength
   \   00000078   ........           DC32     TextToChangeLength + 72
   2098          
   2099          
   2100             
   2101              //Wyczyæ wsyzstko
   2102                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2103                void CleanAll_Event(void)
   2104                {
   \                     CleanAll_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   2105                  AT91S_RSTC  g_AT91S_RSTC;
   2106                  int ans;
   2107           
   2108                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   2648               LDR      R0,??CleanAll_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   2548               LDR      R0,??CleanAll_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   2548               LDR      R0,??CleanAll_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   2548               LDR      R0,??CleanAll_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   2109            
   2110                  if (ans)
   \   0000001C   3AD0               BEQ      ??CleanAll_Event_1
   2111                    {
   2112                    if (ans==2) 
   \   0000001E   022C               CMP      R4,#+2
   \   00000020   2CD1               BNE      ??CleanAll_Event_2
   2113                    {
   2114                            korekta_X.A=AT91C_IFLASH_MEM->Config.Cor_X.A;
   \   00000022   224D               LDR      R5,??CleanAll_Event_0+0x10  ;; korekta_X
   \   00000024   2248               LDR      R0,??CleanAll_Event_0+0x14  ;; 0x13d828
   \   00000026   0068               LDR      R0,[R0, #+0]
   \   00000028   2860               STR      R0,[R5, #+0]
   2115                            korekta_X.B=AT91C_IFLASH_MEM->Config.Cor_X.B;
   \   0000002A   2248               LDR      R0,??CleanAll_Event_0+0x18  ;; 0x13d82c
   \   0000002C   0068               LDR      R0,[R0, #+0]
   \   0000002E   6860               STR      R0,[R5, #+4]
   2116                            korekta_Y.A=AT91C_IFLASH_MEM->Config.Cor_Y.A;
   \   00000030   214E               LDR      R6,??CleanAll_Event_0+0x1C  ;; korekta_Y
   \   00000032   2248               LDR      R0,??CleanAll_Event_0+0x20  ;; 0x13d820
   \   00000034   0068               LDR      R0,[R0, #+0]
   \   00000036   3060               STR      R0,[R6, #+0]
   2117                            korekta_Y.B=AT91C_IFLASH_MEM->Config.Cor_Y.B;
   \   00000038   2148               LDR      R0,??CleanAll_Event_0+0x24  ;; 0x13d824
   \   0000003A   0068               LDR      R0,[R0, #+0]
   \   0000003C   7060               STR      R0,[R6, #+4]
   2118                      
   2119                      //czyæ wszystko 
   2120                            unsigned int Save = __get_interrupt_state();  
   \   0000003E   ........           BL       __iar_get_interrupt_state
   \   00000042   0700               MOVS     R7,R0
   2121                            __disable_interrupt();
   \   00000044   ........           BL       __iar_disable_interrupt
   2122                             CleanFlash((char*)(AT91C_IFLASH_MEM),64+sizeof(AT91S_MEM)+sizeof(_Config));
                                    ^
Warning[Pe223]: function "CleanFlash" declared implicitly
   \   00000048   1E49               LDR      R1,??CleanAll_Event_0+0x28  ;; 0xdb20
   \   0000004A   9820               MOVS     R0,#+152
   \   0000004C   4003               LSLS     R0,R0,#+13       ;; #+1245184
   \   0000004E   ........           BL       CleanFlash
   2123                                               
   2124                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_X)), (char*) (&(korekta_X.A)), sizeof(korekta_X));
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000052   0822               MOVS     R2,#+8
   \   00000054   2900               MOVS     R1,R5
   \   00000056   1648               LDR      R0,??CleanAll_Event_0+0x14  ;; 0x13d828
   \   00000058   ........           BL       FlashWrite
   2125                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_Y)), (char*) (&(korekta_Y.A)), sizeof(korekta_Y));
   \   0000005C   0822               MOVS     R2,#+8
   \   0000005E   3100               MOVS     R1,R6
   \   00000060   1648               LDR      R0,??CleanAll_Event_0+0x20  ;; 0x13d820
   \   00000062   ........           BL       FlashWrite
   2126                            __set_interrupt_state(Save);
   \   00000066   3800               MOVS     R0,R7
   \   00000068   ........           BL       __iar_set_interrupt_state
   2127                            __enable_interrupt();
   \   0000006C   ........           BL       __iar_enable_interrupt
   2128                            
   2129                                //restar
   2130                            AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   00000070   1548               LDR      R0,??CleanAll_Event_0+0x2C  ;; 0xfffffd00
   \   00000072   1649               LDR      R1,??CleanAll_Event_0+0x30  ;; 0xa5000005
   \   00000074   0160               STR      R1,[R0, #+0]
   2131          
   2132          
   2133                          __set_interrupt_state(Save);
   \   00000076   3800               MOVS     R0,R7
   \   00000078   ........           BL       __iar_set_interrupt_state
   2134                          //koniec zapisu do flash
   2135                          
   2136                    }
   2137                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??CleanAll_Event_2:
   \   0000007C   002C               CMP      R4,#+0
   \   0000007E   01D4               BMI      ??CleanAll_Event_3
   \   00000080   012C               CMP      R4,#+1
   \   00000082   05D1               BNE      ??CleanAll_Event_4
   \                     ??CleanAll_Event_3:
   \   00000084   124C               LDR      R4,??CleanAll_Event_0+0x34  ;; TextToChangeLength
   \   00000086   A06C               LDR      R0,[R4, #+72]
   \   00000088   0A21               MOVS     R1,#+10
   \   0000008A   ........           BL       __aeabi_idivmod
   \   0000008E   A064               STR      R0,[R4, #+72]
   2138                    MenuPaint();
   \                     ??CleanAll_Event_4:
   \   00000090   ........           BL       MenuPaint
   2139                    } 
   2140                }//_______________________________________________________________________
   \                     ??CleanAll_Event_1:
   \   00000094   F8BC               POP      {R3-R7}
   \   00000096   01BC               POP      {R0}
   \   00000098   0047               BX       R0               ;; return
   \   0000009A   C046               Nop      
   \                     ??CleanAll_Event_0:
   \   0000009C   ........           DC32     Y_down
   \   000000A0   ........           DC32     X_down
   \   000000A4   ........           DC32     Y_up
   \   000000A8   ........           DC32     X_up
   \   000000AC   ........           DC32     korekta_X
   \   000000B0   28D81300           DC32     0x13d828
   \   000000B4   2CD81300           DC32     0x13d82c
   \   000000B8   ........           DC32     korekta_Y
   \   000000BC   20D81300           DC32     0x13d820
   \   000000C0   24D81300           DC32     0x13d824
   \   000000C4   20DB0000           DC32     0xdb20
   \   000000C8   00FDFFFF           DC32     0xfffffd00
   \   000000CC   050000A5           DC32     0xa5000005
   \   000000D0   ........           DC32     TextToChangeLength
   2141              
   2142              
   2143          
   2144          
   2145          //Lista MENU ******************************************************************************************************************
   2146          
   2147          
   2148                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2149                void MenuSide_Paint(void)
   2150                {
   \                     MenuSide_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   2151                  
   2152                  #ifdef __WIFI_MODULE   
   2153                    List_Paint("MENU",7,15,0,0,3, "Program ", Speech[g_leng].Ekran, Speech[g_leng].Opcje , Speech[g_leng].Ustawienia,Speech[g_leng].Wezly,"Info ",Speech[g_leng].Siec,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   1448               LDR      R0,??MenuSide_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   1449               LDR      R1,??MenuSide_Paint_0+0x4  ;; 0xa14
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1449               LDR      R1,??MenuSide_Paint_0+0x8  ;; Speech
   \   0000000C   0A18               ADDS     R2,R1,R0
   \   0000000E   144C               LDR      R4,??MenuSide_Paint_0+0xC  ;; `?<Constant "Info ">`
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   1448               LDR      R0,??MenuSide_Paint_0+0x10  ;; 0x8bb
   \   00000014   1018               ADDS     R0,R2,R0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   2100               MOVS     R1,R4
   \   0000001A   1348               LDR      R0,??MenuSide_Paint_0+0x14  ;; 0x627
   \   0000001C   1018               ADDS     R0,R2,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1100               MOVS     R1,R2
   \   00000022   3C31               ADDS     R1,R1,#+60
   \   00000024   8720               MOVS     R0,#+135
   \   00000026   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000028   1018               ADDS     R0,R2,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0F48               LDR      R0,??MenuSide_Paint_0+0x18  ;; 0x4dd
   \   0000002E   1118               ADDS     R1,R2,R0
   \   00000030   2000               MOVS     R0,R4
   \   00000032   2C30               ADDS     R0,R0,#+44
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   0321               MOVS     R1,#+3
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   0300               MOVS     R3,R0
   \   0000003E   0F22               MOVS     R2,#+15
   \   00000040   0721               MOVS     R1,#+7
   \   00000042   2434               ADDS     R4,R4,#+36
   \   00000044   2000               MOVS     R0,R4
   \   00000046   ........           BL       List_Paint
   \   0000004A   0AB0               ADD      SP,SP,#+40
   2154                  #else
   2155                    List_Paint("MENU",6,15,0,0,3, "Program ", Speech[g_leng].Ekran, Speech[g_leng].Opcje , Speech[g_leng].Ustawienia,Speech[g_leng].Wezly,"Info ",0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   2156                  #endif
   2157                                                                                                                                                              
   2158                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000004C   10BC               POP      {R4}
   \   0000004E   01BC               POP      {R0}
   \   00000050   0047               BX       R0               ;; return
   \   00000052   C046               Nop      
   \                     ??MenuSide_Paint_0:
   \   00000054   ........           DC32     g_leng
   \   00000058   140A0000           DC32     0xa14
   \   0000005C   ........           DC32     Speech
   \   00000060   ........           DC32     `?<Constant "Info ">`
   \   00000064   BB080000           DC32     0x8bb
   \   00000068   27060000           DC32     0x627
   \   0000006C   DD040000           DC32     0x4dd
   2159          
   2160          
   2161          
   2162                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2163                void MenuSide_Event(void)
   2164                {
   \                     MenuSide_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   2165                  //char podswietl=0;
   2166                  int ans;
   2167                  
   2168                  #ifdef __WIFI_MODULE  
   2169                    char il=7;
   2170                  #else
   2171                    char il=6;
   2172                  #endif
   2173          
   2174           
   2175                  ans=List_Event(X_up, Y_up, X_down, Y_down, il , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0720               MOVS     R0,#+7
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??MenuSide_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??MenuSide_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??MenuSide_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??MenuSide_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   2176            
   2177                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   15D0               BEQ      ??MenuSide_Event_1
   2178                    {
   2179                    if ((ans>0) && (ans<=il)) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   07DB               BLT      ??MenuSide_Event_2
   \   00000030   0828               CMP      R0,#+8
   \   00000032   05DA               BGE      ??MenuSide_Event_2
   \   00000034   0E4C               LDR      R4,??MenuSide_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A16C               LDR      R1,[R4, #+72]
   \   00000038   0A22               MOVS     R2,#+10
   \   0000003A   5143               MULS     R1,R2,R1
   \   0000003C   0918               ADDS     R1,R1,R0
   \   0000003E   A164               STR      R1,[R4, #+72]
   2180                    if (ans<0) {
   \                     ??MenuSide_Event_2:
   \   00000040   0028               CMP      R0,#+0
   \   00000042   07D5               BPL      ??MenuSide_Event_3
   2181                      MenuLevel=(MenuLevel/10);
   \   00000044   0A4C               LDR      R4,??MenuSide_Event_0+0x10  ;; TextToChangeLength
   \   00000046   A06C               LDR      R0,[R4, #+72]
   \   00000048   0A21               MOVS     R1,#+10
   \   0000004A   ........           BL       __aeabi_idivmod
   \   0000004E   A064               STR      R0,[R4, #+72]
   2182                     CurModifSheet=0; 
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   6071               STRB     R0,[R4, #+5]
   2183                    }
   2184                    MenuPaint();
   \                     ??MenuSide_Event_3:
   \   00000054   ........           BL       MenuPaint
   2185                    } 
   2186                }//_______________________________________________________________________
   \                     ??MenuSide_Event_1:
   \   00000058   10BC               POP      {R4}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??MenuSide_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
   2187          
   2188          
   2189          
   2190          
   2191          
   2192          //Wybór poziomu dostêpu *************************************************************************************************************
   2193                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2194                void MenuAccess_Paint(void)
   2195                {
   \                     MenuAccess_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   2196                    #define  Y   4   //przesuniêcie w dó³
   2197                    List_Paint("X",3,15,Y,5,0,Speech[g_leng].Poziom1, Speech[g_leng].Poziom2,  Speech[g_leng].Poziom3,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   1B48               LDR      R0,??MenuAccess_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   1B49               LDR      R1,??MenuAccess_Paint_0+0x4  ;; 0xa14
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1B49               LDR      R1,??MenuAccess_Paint_0+0x8  ;; Speech
   \   0000000C   0A18               ADDS     R2,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   A520               MOVS     R0,#+165
   \   00000018   4000               LSLS     R0,R0,#+1        ;; #+330
   \   0000001A   1018               ADDS     R0,R2,R0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   FF20               MOVS     R0,#+255
   \   00000020   3C30               ADDS     R0,R0,#+60       ;; #+315
   \   00000022   1118               ADDS     R1,R2,R0
   \   00000024   0F38               SUBS     R0,R0,#+15
   \   00000026   1018               ADDS     R0,R2,R0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   0021               MOVS     R1,#+0
   \   0000002C   0520               MOVS     R0,#+5
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0423               MOVS     R3,#+4
   \   00000032   0F22               MOVS     R2,#+15
   \   00000034   0321               MOVS     R1,#+3
   \   00000036   11A0               ADR      R0,??MenuAccess_Paint_0+0xC  ;; 0x58, 0x00, 0x00, 0x00
   \   00000038   ........           BL       List_Paint
   \   0000003C   0AB0               ADD      SP,SP,#+40
   2198                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000003E   6846               MOV      R0,SP
   \   00000040   0F49               LDR      R1,??MenuAccess_Paint_0+0x10  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`
   \   00000042   1CC9               LDM      R1!,{R2-R4}
   \   00000044   1CC0               STM      R0!,{R2-R4}
   2199                    CopyToCanvasPoint((char *)ekran_tab,49,97-Y-(15*(g_level)),8,10); 
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0A20               MOVS     R0,#+10
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   0823               MOVS     R3,#+8
   \   0000004E   5D20               MOVS     R0,#+93
   \   00000050   0C49               LDR      R1,??MenuAccess_Paint_0+0x14  ;; g_level
   \   00000052   0978               LDRB     R1,[R1, #+0]
   \   00000054   0F22               MOVS     R2,#+15
   \   00000056   5143               MULS     R1,R2,R1
   \   00000058   421A               SUBS     R2,R0,R1
   \   0000005A   1206               LSLS     R2,R2,#+24
   \   0000005C   120E               LSRS     R2,R2,#+24
   \   0000005E   3121               MOVS     R1,#+49
   \   00000060   02A8               ADD      R0,SP,#+8
   \   00000062   ........           BL       CopyToCanvasPoint
   \   00000066   02B0               ADD      SP,SP,#+8
   2200                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000068   1FBC               POP      {R0-R4}
   \   0000006A   01BC               POP      {R0}
   \   0000006C   0047               BX       R0               ;; return
   \   0000006E   C046               Nop      
   \                     ??MenuAccess_Paint_0:
   \   00000070   ........           DC32     g_leng
   \   00000074   140A0000           DC32     0xa14
   \   00000078   ........           DC32     Speech
   \   0000007C   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   00000080   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`
   \   00000084   ........           DC32     g_level
   2201          
   2202          
   2203                  char pass_tmp[9]={0,0,0,0,0,0,0,0,0};
   2204                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2205                void MenuAccess_Event(void)
   2206                {
   \                     MenuAccess_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   2207                  #define  Y   4   //przesuniêcie w dó³
   2208                  int ans;
   2209           
   2210                  ans=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 5,Y); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   2F4D               LDR      R5,??MenuAccess_Event_0  ;; X_up
   \   00000004   2F4E               LDR      R6,??MenuAccess_Event_0+0x4  ;; Y_up
   \   00000006   0421               MOVS     R1,#+4
   \   00000008   0520               MOVS     R0,#+5
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0320               MOVS     R0,#+3
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   2D48               LDR      R0,??MenuAccess_Event_0+0x8  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   2C48               LDR      R0,??MenuAccess_Event_0+0xC  ;; X_down
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   315E               LDRSH    R1,[R6, R0]
   \   00000020   285E               LDRSH    R0,[R5, R0]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0400               MOVS     R4,R0
   2211            
   2212                  if (ans)
   \   0000002A   36D0               BEQ      ??MenuAccess_Event_1
   2213                    {
   2214                      if ((ans>0) && (ans<4))
   \   0000002C   012C               CMP      R4,#+1
   \   0000002E   44DB               BLT      ??MenuAccess_Event_2
   \   00000030   042C               CMP      R4,#+4
   \   00000032   42DA               BGE      ??MenuAccess_Event_2
   2215                      {
   2216                        if (ans>1)
   \   00000034   022C               CMP      R4,#+2
   \   00000036   15DB               BLT      ??MenuAccess_Event_3
   2217                        {
   2218                          for (char i=0; i<8; i++) pass_tmp[i]=0;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0100               MOVS     R1,R0
   \   0000003C   06E0               B        ??MenuAccess_Event_4
   \                     ??MenuAccess_Event_5:
   \   0000003E   244B               LDR      R3,??MenuAccess_Event_0+0x10  ;; InsertPass1
   \   00000040   9A18               ADDS     R2,R3,R2
   \   00000042   0300               MOVS     R3,R0
   \   00000044   1373               STRB     R3,[R2, #+12]
   \   00000046   491C               ADDS     R1,R1,#+1
   \   00000048   0906               LSLS     R1,R1,#+24
   \   0000004A   090E               LSRS     R1,R1,#+24
   \                     ??MenuAccess_Event_4:
   \   0000004C   0A00               MOVS     R2,R1
   \   0000004E   082A               CMP      R2,#+8
   \   00000050   F5D3               BCC      ??MenuAccess_Event_5
   2219                          MenuLevel=(MenuLevel*10+ans);
   \   00000052   204D               LDR      R5,??MenuAccess_Event_0+0x14  ;; TextToChangeLength
   \   00000054   A86C               LDR      R0,[R5, #+72]
   \   00000056   0A21               MOVS     R1,#+10
   \   00000058   4843               MULS     R0,R1,R0
   \   0000005A   0019               ADDS     R0,R0,R4
   \   0000005C   A864               STR      R0,[R5, #+72]
   2220                          MenuPaint();
   \   0000005E   ........           BL       MenuPaint
   \   00000062   2AE0               B        ??MenuAccess_Event_2
   2221                         
   2222                        }
   2223                        else
   2224                        {
   2225                           MenuLevel=(MenuLevel/10);
   \                     ??MenuAccess_Event_3:
   \   00000064   1B4D               LDR      R5,??MenuAccess_Event_0+0x14  ;; TextToChangeLength
   \   00000066   A86C               LDR      R0,[R5, #+72]
   \   00000068   0A21               MOVS     R1,#+10
   \   0000006A   ........           BL       __aeabi_idivmod
   \   0000006E   A864               STR      R0,[R5, #+72]
   2226                           g_level=ans-1;
   \   00000070   1948               LDR      R0,??MenuAccess_Event_0+0x18  ;; g_level
   \   00000072   611E               SUBS     R1,R4,#+1
   \   00000074   0170               STRB     R1,[R0, #+0]
   2227                           Message_Paint(2,"","",Speech[g_leng].Poziom1,"","");
   \   00000076   19A1               ADR      R1,??MenuAccess_Event_0+0x1C  ;; 0x00, 0x00, 0x00, 0x00
   \   00000078   0800               MOVS     R0,R1
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   9620               MOVS     R0,#+150
   \   0000007E   4000               LSLS     R0,R0,#+1        ;; #+300
   \   00000080   174A               LDR      R2,??MenuAccess_Event_0+0x20  ;; g_leng
   \   00000082   1268               LDR      R2,[R2, #+0]
   \   00000084   174B               LDR      R3,??MenuAccess_Event_0+0x24  ;; 0xa14
   \   00000086   5A43               MULS     R2,R3,R2
   \   00000088   174B               LDR      R3,??MenuAccess_Event_0+0x28  ;; Speech
   \   0000008A   9A18               ADDS     R2,R3,R2
   \   0000008C   1318               ADDS     R3,R2,R0
   \   0000008E   0A00               MOVS     R2,R1
   \   00000090   0220               MOVS     R0,#+2
   \   00000092   ........           BL       Message_Paint
   \   00000096   02B0               ADD      SP,SP,#+8
   \   00000098   0FE0               B        ??MenuAccess_Event_2
   2228                        }
   2229                      }
   2230                      
   2231                    }
   2232                  else
   2233                    {
   2234                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??MenuAccess_Event_1:
   \   0000009A   0020               MOVS     R0,#+0
   \   0000009C   285E               LDRSH    R0,[R5, R0]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   0BDB               BLT      ??MenuAccess_Event_2
   \   000000A2   0020               MOVS     R0,#+0
   \   000000A4   305E               LDRSH    R0,[R6, R0]
   \   000000A6   0128               CMP      R0,#+1
   \   000000A8   07DB               BLT      ??MenuAccess_Event_2
   2235                      {
   2236                        MenuLevel=(MenuLevel/10);
   \   000000AA   0A4D               LDR      R5,??MenuAccess_Event_0+0x14  ;; TextToChangeLength
   \   000000AC   A86C               LDR      R0,[R5, #+72]
   \   000000AE   0A21               MOVS     R1,#+10
   \   000000B0   ........           BL       __aeabi_idivmod
   \   000000B4   A864               STR      R0,[R5, #+72]
   2237                        MenuPaint();
   \   000000B6   ........           BL       MenuPaint
   2238                      }
   2239                    }
   2240                }//_______________________________________________________________________
   \                     ??MenuAccess_Event_2:
   \   000000BA   70BC               POP      {R4-R6}
   \   000000BC   01BC               POP      {R0}
   \   000000BE   0047               BX       R0               ;; return
   \                     ??MenuAccess_Event_0:
   \   000000C0   ........           DC32     X_up
   \   000000C4   ........           DC32     Y_up
   \   000000C8   ........           DC32     Y_down
   \   000000CC   ........           DC32     X_down
   \   000000D0   ........           DC32     InsertPass1
   \   000000D4   ........           DC32     TextToChangeLength
   \   000000D8   ........           DC32     g_level
   \   000000DC   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000000E0   ........           DC32     g_leng
   \   000000E4   140A0000           DC32     0xa14
   \   000000E8   ........           DC32     Speech
   2241          
   2242          
   2243          
   2244          
   2245          
   2246          //has³o poziomu 1/2*************************************************************************************************************
   2247          char InsertPass1[9]= {0,0,0,0,0,0,0,0,0};
   2248          
   2249                //*-----------------------------------------------------------------------
   2250          

   \                                 In section Debug.txt, align 4, keep-with-next
   2251                void MenuAccessPass_Paint(char level)
   2252                {
   \                     MenuAccessPass_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   2253                   Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000004   1E4D               LDR      R5,??MenuAccessPass_Paint_0  ;; 0xa14
   \   00000006   1F4E               LDR      R6,??MenuAccessPass_Paint_0+0x4  ;; g_leng
   \   00000008   1F4F               LDR      R7,??MenuAccessPass_Paint_0+0x8  ;; Speech
   \   0000000A   20A2               ADR      R2,??MenuAccessPass_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000C   20A1               ADR      R1,??MenuAccessPass_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000E   FF20               MOVS     R0,#+255
   \   00000010   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000012   3368               LDR      R3,[R6, #+0]
   \   00000014   6B43               MULS     R3,R5,R3
   \   00000016   FB18               ADDS     R3,R7,R3
   \   00000018   1818               ADDS     R0,R3,R0
   \   0000001A   ........           BL       Number_Paint
   2254                    
   2255                   if (level==1) Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001E   012C               CMP      R4,#+1
   \   00000020   15D1               BNE      ??MenuAccessPass_Paint_1
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   3A21               MOVS     R1,#+58
   \   0000002E   0F20               MOVS     R0,#+15
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   6623               MOVS     R3,#+102
   \   00000034   0322               MOVS     R2,#+3
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   8C46               MOV      R12,R1
   \   0000003A   FF21               MOVS     R1,#+255
   \   0000003C   D231               ADDS     R1,R1,#+210      ;; #+465
   \   0000003E   3068               LDR      R0,[R6, #+0]
   \   00000040   6843               MULS     R0,R5,R0
   \   00000042   3818               ADDS     R0,R7,R0
   \   00000044   4018               ADDS     R0,R0,R1
   \   00000046   6146               MOV      R1,R12
   \   00000048   ........           BL       Label
   \   0000004C   06B0               ADD      SP,SP,#+24
   2256                   if (level==2) Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??MenuAccessPass_Paint_1:
   \   0000004E   022C               CMP      R4,#+2
   \   00000050   13D1               BNE      ??MenuAccessPass_Paint_2
   \   00000052   82B0               SUB      SP,SP,#+8
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   7F21               MOVS     R1,#+127
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   3A21               MOVS     R1,#+58
   \   0000005E   0F20               MOVS     R0,#+15
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   6623               MOVS     R3,#+102
   \   00000064   0322               MOVS     R2,#+3
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   FF20               MOVS     R0,#+255
   \   0000006A   D230               ADDS     R0,R0,#+210      ;; #+465
   \   0000006C   3468               LDR      R4,[R6, #+0]
   \   0000006E   6C43               MULS     R4,R5,R4
   \   00000070   3C19               ADDS     R4,R7,R4
   \   00000072   2018               ADDS     R0,R4,R0
   \   00000074   ........           BL       Label
   \   00000078   06B0               ADD      SP,SP,#+24
   2257                   
   2258                   
   2259                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??MenuAccessPass_Paint_2:
   \   0000007A   F8BC               POP      {R3-R7}
   \   0000007C   01BC               POP      {R0}
   \   0000007E   0047               BX       R0               ;; return
   \                     ??MenuAccessPass_Paint_0:
   \   00000080   140A0000           DC32     0xa14
   \   00000084   ........           DC32     g_leng
   \   00000088   ........           DC32     Speech
   \   0000008C   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000090   43000000           DC8      0x43, 0x00, 0x00, 0x00
   2260          
   2261          
   2262          
   2263          
   2264                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   2265                void MenuAccessPass_Event(char level)
   2266                {
   \                     MenuAccessPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   2267                  int ans;
   2268                  char roz=0;
   2269           
   2270                  
   2271                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   8448               LDR      R0,??MenuAccessPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   8448               LDR      R0,??MenuAccessPass_Event_0+0x4  ;; X_down
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   8448               LDR      R0,??MenuAccessPass_Event_0+0x8  ;; Y_up
   \   00000010   415E               LDRSH    R1,[R0, R1]
   \   00000012   8448               LDR      R0,??MenuAccessPass_Event_0+0xC  ;; X_up
   \   00000014   0024               MOVS     R4,#+0
   \   00000016   005F               LDRSH    R0,[R0, R4]
   \   00000018   ........           BL       Number_Event
   \   0000001C   0400               MOVS     R4,R0
   2272            
   2273                  if (ans>0)          {
   \   0000001E   012C               CMP      R4,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   E0E0               B        ??MenuAccessPass_Event_1
   2274                      
   2275                      if (InsertPass1[8]<=7) 
   \   00000024   804D               LDR      R5,??MenuAccessPass_Event_0+0x10  ;; InsertPass1
   \   00000026   287A               LDRB     R0,[R5, #+8]
   \   00000028   0828               CMP      R0,#+8
   \   0000002A   10D2               BCS      ??MenuAccessPass_Event_2
   2276                      { 
   2277                          if ((ans<10) || (ans==11)) 
   \   0000002C   0A2C               CMP      R4,#+10
   \   0000002E   01DB               BLT      ??MenuAccessPass_Event_3
   \   00000030   0B2C               CMP      R4,#+11
   \   00000032   0CD1               BNE      ??MenuAccessPass_Event_2
   2278                          {
   2279                            if (ans<10) InsertPass1[InsertPass1[8]]=ans+48;
   \                     ??MenuAccessPass_Event_3:
   \   00000034   0A2C               CMP      R4,#+10
   \   00000036   02DA               BGE      ??MenuAccessPass_Event_4
   \   00000038   2100               MOVS     R1,R4
   \   0000003A   3031               ADDS     R1,R1,#+48
   \   0000003C   2954               STRB     R1,[R5, R0]
   2280                            if (ans==11) InsertPass1[InsertPass1[8]]=ans+37;
   \                     ??MenuAccessPass_Event_4:
   \   0000003E   0B2C               CMP      R4,#+11
   \   00000040   02D1               BNE      ??MenuAccessPass_Event_5
   \   00000042   287A               LDRB     R0,[R5, #+8]
   \   00000044   3021               MOVS     R1,#+48
   \   00000046   2954               STRB     R1,[R5, R0]
   2281                            InsertPass1[8]++;
   \                     ??MenuAccessPass_Event_5:
   \   00000048   287A               LDRB     R0,[R5, #+8]
   \   0000004A   401C               ADDS     R0,R0,#+1
   \   0000004C   2872               STRB     R0,[R5, #+8]
   2282                          }
   2283                          
   2284                      }
   2285                      if ((ans==10) && (InsertPass1[8]>0) ) {InsertPass1[8]--; InsertPass1[InsertPass1[8]]=0;}
   \                     ??MenuAccessPass_Event_2:
   \   0000004E   0A2C               CMP      R4,#+10
   \   00000050   08D1               BNE      ??MenuAccessPass_Event_6
   \   00000052   287A               LDRB     R0,[R5, #+8]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   05D0               BEQ      ??MenuAccessPass_Event_6
   \   00000058   401E               SUBS     R0,R0,#+1
   \   0000005A   2872               STRB     R0,[R5, #+8]
   \   0000005C   0006               LSLS     R0,R0,#+24
   \   0000005E   000E               LSRS     R0,R0,#+24
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   2954               STRB     R1,[R5, R0]
   2286                      
   2287                      
   2288                     char InsertPassVar=0;
   \                     ??MenuAccessPass_Event_6:
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0100               MOVS     R1,R0
   2289                     for (char i=0; i<=8; i++)  pass_tmp[i]=0;
   \   00000068   0200               MOVS     R2,R0
   \   0000006A   0600               MOVS     R6,R0
   \   0000006C   04E0               B        ??MenuAccessPass_Event_7
   \                     ??MenuAccessPass_Event_8:
   \   0000006E   EB18               ADDS     R3,R5,R3
   \   00000070   1E73               STRB     R6,[R3, #+12]
   \   00000072   521C               ADDS     R2,R2,#+1
   \   00000074   1206               LSLS     R2,R2,#+24
   \   00000076   120E               LSRS     R2,R2,#+24
   \                     ??MenuAccessPass_Event_7:
   \   00000078   1300               MOVS     R3,R2
   \   0000007A   092B               CMP      R3,#+9
   \   0000007C   F7D3               BCC      ??MenuAccessPass_Event_8
   2290                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<8))
   \                     ??MenuAccessPass_Event_9:
   \   0000007E   0A00               MOVS     R2,R1
   \   00000080   AB5C               LDRB     R3,[R5, R2]
   \   00000082   002B               CMP      R3,#+0
   \   00000084   09D0               BEQ      ??MenuAccessPass_Event_10
   \   00000086   0B00               MOVS     R3,R1
   \   00000088   082B               CMP      R3,#+8
   \   0000008A   06D2               BCS      ??MenuAccessPass_Event_10
   2291                     {
   2292                       pass_tmp[InsertPassVar]=42; //42="*"
   \   0000008C   AA18               ADDS     R2,R5,R2
   \   0000008E   2A23               MOVS     R3,#+42
   \   00000090   1373               STRB     R3,[R2, #+12]
   2293                       InsertPassVar++;
   \   00000092   491C               ADDS     R1,R1,#+1
   \   00000094   0906               LSLS     R1,R1,#+24
   \   00000096   090E               LSRS     R1,R1,#+24
   \   00000098   F1E7               B        ??MenuAccessPass_Event_9
   2294                     }
   2295          
   2296                      
   2297                      //Sprawdzenie has³a
   2298                      if (ans==12)
   \                     ??MenuAccessPass_Event_10:
   \   0000009A   0C2C               CMP      R4,#+12
   \   0000009C   00D0               BEQ      .+4
   \   0000009E   8AE0               B        ??MenuAccessPass_Event_11
   2299                      {
   2300                        roz=0;
   \   000000A0   0100               MOVS     R1,R0
   2301                        for (int i=0; i<=7; i++)
   \   000000A2   0200               MOVS     R2,R0
   \   000000A4   13E0               B        ??MenuAccessPass_Event_12
   2302                        {
   2303                            if ((g_Password_1[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \                     ??MenuAccessPass_Event_13:
   \   000000A6   AB5C               LDRB     R3,[R5, R2]
   \   000000A8   604E               LDR      R6,??MenuAccessPass_Event_0+0x14  ;; g_Password_1
   \   000000AA   B65C               LDRB     R6,[R6, R2]
   \   000000AC   9E42               CMP      R6,R3
   \   000000AE   04D0               BEQ      ??MenuAccessPass_Event_14
   \   000000B0   6E46               MOV      R6,SP
   \   000000B2   367A               LDRB     R6,[R6, #+8]
   \   000000B4   012E               CMP      R6,#+1
   \   000000B6   00D1               BNE      ??MenuAccessPass_Event_14
   \   000000B8   0121               MOVS     R1,#+1
   2304                            if ((g_Password_2[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??MenuAccessPass_Event_14:
   \   000000BA   5D4E               LDR      R6,??MenuAccessPass_Event_0+0x18  ;; g_Password_2
   \   000000BC   B65C               LDRB     R6,[R6, R2]
   \   000000BE   9E42               CMP      R6,R3
   \   000000C0   04D0               BEQ      ??MenuAccessPass_Event_15
   \   000000C2   6B46               MOV      R3,SP
   \   000000C4   1B7A               LDRB     R3,[R3, #+8]
   \   000000C6   022B               CMP      R3,#+2
   \   000000C8   00D1               BNE      ??MenuAccessPass_Event_15
   \   000000CA   0121               MOVS     R1,#+1
   2305                        }
   \                     ??MenuAccessPass_Event_15:
   \   000000CC   521C               ADDS     R2,R2,#+1
   \                     ??MenuAccessPass_Event_12:
   \   000000CE   082A               CMP      R2,#+8
   \   000000D0   E9DB               BLT      ??MenuAccessPass_Event_13
   2306                        //has³o programisty
   2307                        if (roz)
   \   000000D2   0029               CMP      R1,#+0
   \   000000D4   19D0               BEQ      ??MenuAccessPass_Event_16
   2308                        {
   2309                          char MHS[]="060480";
   \   000000D6   6A46               MOV      R2,SP
   \   000000D8   564B               LDR      R3,??MenuAccessPass_Event_0+0x1C  ;; `?<Constant "060480">`
   \   000000DA   C0CB               LDM      R3!,{R6,R7}
   \   000000DC   C0C2               STM      R2!,{R6,R7}
   2310                            for (int i=0; i<6; i++)
   \   000000DE   0200               MOVS     R2,R0
   \   000000E0   11E0               B        ??MenuAccessPass_Event_17
   2311                            {
   2312                                if ((MHS[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \                     ??MenuAccessPass_Event_18:
   \   000000E2   AB5C               LDRB     R3,[R5, R2]
   \   000000E4   6E46               MOV      R6,SP
   \   000000E6   B65C               LDRB     R6,[R6, R2]
   \   000000E8   9E42               CMP      R6,R3
   \   000000EA   04D0               BEQ      ??MenuAccessPass_Event_19
   \   000000EC   6F46               MOV      R7,SP
   \   000000EE   3F7A               LDRB     R7,[R7, #+8]
   \   000000F0   012F               CMP      R7,#+1
   \   000000F2   00D1               BNE      ??MenuAccessPass_Event_19
   \   000000F4   0121               MOVS     R1,#+1
   2313                                if ((MHS[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??MenuAccessPass_Event_19:
   \   000000F6   9E42               CMP      R6,R3
   \   000000F8   04D0               BEQ      ??MenuAccessPass_Event_20
   \   000000FA   6B46               MOV      R3,SP
   \   000000FC   1B7A               LDRB     R3,[R3, #+8]
   \   000000FE   022B               CMP      R3,#+2
   \   00000100   00D1               BNE      ??MenuAccessPass_Event_20
   \   00000102   0121               MOVS     R1,#+1
   2314                            }              
   \                     ??MenuAccessPass_Event_20:
   \   00000104   521C               ADDS     R2,R2,#+1
   \                     ??MenuAccessPass_Event_17:
   \   00000106   062A               CMP      R2,#+6
   \   00000108   EBDB               BLT      ??MenuAccessPass_Event_18
   2315                        }
   2316                        
   2317                        
   2318                        if (roz==0)                                 //je¿eli poprawne haslo
   \                     ??MenuAccessPass_Event_16:
   \   0000010A   0029               CMP      R1,#+0
   \   0000010C   39D1               BNE      ??MenuAccessPass_Event_21
   2319                        {
   2320                           MenuLevel=11;
   \   0000010E   4A49               LDR      R1,??MenuAccessPass_Event_0+0x20  ;; TextToChangeLength + 72
   \   00000110   0B22               MOVS     R2,#+11
   \   00000112   0A60               STR      R2,[R1, #+0]
   2321                           g_level=level;         //poziom dostêpu 1
   \   00000114   4949               LDR      R1,??MenuAccessPass_Event_0+0x24  ;; g_level
   \   00000116   6A46               MOV      R2,SP
   \   00000118   127A               LDRB     R2,[R2, #+8]
   \   0000011A   0A70               STRB     R2,[R1, #+0]
   2322                           for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \   0000011C   0100               MOVS     R1,R0
   \   0000011E   0200               MOVS     R2,R0
   \   00000120   01E0               B        ??MenuAccessPass_Event_22
   \                     ??MenuAccessPass_Event_23:
   \   00000122   6A54               STRB     R2,[R5, R1]
   \   00000124   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_22:
   \   00000126   0829               CMP      R1,#+8
   \   00000128   FBDB               BLT      ??MenuAccessPass_Event_23
   2323                           InsertPass1[8]=0;
   \   0000012A   2872               STRB     R0,[R5, #+8]
   2324                           if (level==1)  Message_Paint(2,"","",Speech[g_leng].Poziom2,"","");
   \   0000012C   6846               MOV      R0,SP
   \   0000012E   007A               LDRB     R0,[R0, #+8]
   \   00000130   0128               CMP      R0,#+1
   \   00000132   10D1               BNE      ??MenuAccessPass_Event_24
   \   00000134   42A1               ADR      R1,??MenuAccessPass_Event_0+0x28  ;; 0x00, 0x00, 0x00, 0x00
   \   00000136   0800               MOVS     R0,R1
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   FF20               MOVS     R0,#+255
   \   0000013C   3C30               ADDS     R0,R0,#+60       ;; #+315
   \   0000013E   414A               LDR      R2,??MenuAccessPass_Event_0+0x2C  ;; g_leng
   \   00000140   1268               LDR      R2,[R2, #+0]
   \   00000142   414B               LDR      R3,??MenuAccessPass_Event_0+0x30  ;; 0xa14
   \   00000144   5A43               MULS     R2,R3,R2
   \   00000146   414B               LDR      R3,??MenuAccessPass_Event_0+0x34  ;; Speech
   \   00000148   9A18               ADDS     R2,R3,R2
   \   0000014A   1318               ADDS     R3,R2,R0
   \   0000014C   0A00               MOVS     R2,R1
   \   0000014E   0220               MOVS     R0,#+2
   \   00000150   ........           BL       Message_Paint
   \   00000154   02B0               ADD      SP,SP,#+8
   2325                           if (level==2)  Message_Paint(2,"","",Speech[g_leng].Poziom3,"","");
   \                     ??MenuAccessPass_Event_24:
   \   00000156   6846               MOV      R0,SP
   \   00000158   007A               LDRB     R0,[R0, #+8]
   \   0000015A   0228               CMP      R0,#+2
   \   0000015C   2BD1               BNE      ??MenuAccessPass_Event_11
   \   0000015E   38A1               ADR      R1,??MenuAccessPass_Event_0+0x28  ;; 0x00, 0x00, 0x00, 0x00
   \   00000160   0800               MOVS     R0,R1
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   A520               MOVS     R0,#+165
   \   00000166   4000               LSLS     R0,R0,#+1        ;; #+330
   \   00000168   364A               LDR      R2,??MenuAccessPass_Event_0+0x2C  ;; g_leng
   \   0000016A   1268               LDR      R2,[R2, #+0]
   \   0000016C   364B               LDR      R3,??MenuAccessPass_Event_0+0x30  ;; 0xa14
   \   0000016E   5A43               MULS     R2,R3,R2
   \   00000170   364B               LDR      R3,??MenuAccessPass_Event_0+0x34  ;; Speech
   \   00000172   9A18               ADDS     R2,R3,R2
   \   00000174   1318               ADDS     R3,R2,R0
   \   00000176   0A00               MOVS     R2,R1
   \   00000178   0220               MOVS     R0,#+2
   \   0000017A   ........           BL       Message_Paint
   \   0000017E   02B0               ADD      SP,SP,#+8
   \   00000180   19E0               B        ??MenuAccessPass_Event_11
   2326                        } 
   2327                        else
   2328                        {
   2329                           //informacja o b³ednym hale
   2330                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??MenuAccessPass_Event_21:
   \   00000182   0100               MOVS     R1,R0
   \   00000184   0200               MOVS     R2,R0
   \   00000186   01E0               B        ??MenuAccessPass_Event_25
   \                     ??MenuAccessPass_Event_26:
   \   00000188   6A54               STRB     R2,[R5, R1]
   \   0000018A   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_25:
   \   0000018C   0829               CMP      R1,#+8
   \   0000018E   FBDB               BLT      ??MenuAccessPass_Event_26
   2331                           InsertPass1[8]=0;
   \   00000190   2872               STRB     R0,[R5, #+8]
   \   00000192   2C48               LDR      R0,??MenuAccessPass_Event_0+0x2C  ;; g_leng
   \   00000194   0068               LDR      R0,[R0, #+0]
   \   00000196   2C49               LDR      R1,??MenuAccessPass_Event_0+0x30  ;; 0xa14
   \   00000198   4843               MULS     R0,R1,R0
   \   0000019A   2C49               LDR      R1,??MenuAccessPass_Event_0+0x34  ;; Speech
   \   0000019C   0A18               ADDS     R2,R1,R0
   \   0000019E   28A1               ADR      R1,??MenuAccessPass_Event_0+0x28  ;; 0x00, 0x00, 0x00, 0x00
   \   000001A0   0800               MOVS     R0,R1
   \   000001A2   03B4               PUSH     {R0,R1}
   \   000001A4   FF20               MOVS     R0,#+255
   \   000001A6   B430               ADDS     R0,R0,#+180      ;; #+435
   \   000001A8   1318               ADDS     R3,R2,R0
   \   000001AA   0F38               SUBS     R0,R0,#+15
   \   000001AC   1218               ADDS     R2,R2,R0
   \   000001AE   0220               MOVS     R0,#+2
   2332                        
   2333                           Message_Paint(2,"",Speech[g_leng].Bledne,Speech[g_leng].haslo,"","");
   \   000001B0   ........           BL       Message_Paint
   \   000001B4   02B0               ADD      SP,SP,#+8
   2334                        }
   2335                        //MenuPaint();
   2336                      }
   2337                     
   2338                     
   2339                      
   2340                      //MenuPaint();
   2341                      //Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   2342            
   2343                      if ((ans>=1) && (ans<=11)) 
   \                     ??MenuAccessPass_Event_11:
   \   000001B6   012C               CMP      R4,#+1
   \   000001B8   2BDB               BLT      ??MenuAccessPass_Event_27
   \   000001BA   0C2C               CMP      R4,#+12
   \   000001BC   29DA               BGE      ??MenuAccessPass_Event_27
   2344                      {
   2345                        MenuPaint();
   \                     ??MenuAccessPass_Event_28:
   \   000001BE   ........           BL       MenuPaint
   2346                        Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001C2   194D               LDR      R5,??MenuAccessPass_Event_0+0x10  ;; InsertPass1
   \   000001C4   82B0               SUB      SP,SP,#+8
   \   000001C6   0020               MOVS     R0,#+0
   \   000001C8   0090               STR      R0,[SP, #+0]
   \   000001CA   7F21               MOVS     R1,#+127
   \   000001CC   03B4               PUSH     {R0,R1}
   \   000001CE   3721               MOVS     R1,#+55
   \   000001D0   287A               LDRB     R0,[R5, #+8]
   \   000001D2   03B4               PUSH     {R0,R1}
   \   000001D4   5A23               MOVS     R3,#+90
   \   000001D6   0422               MOVS     R2,#+4
   \   000001D8   0221               MOVS     R1,#+2
   \   000001DA   0C35               ADDS     R5,R5,#+12
   \   000001DC   2800               MOVS     R0,R5
   \   000001DE   ........           BL       Label
   \   000001E2   06B0               ADD      SP,SP,#+24
   \   000001E4   15E0               B        ??MenuAccessPass_Event_27
   2347                      }
   2348                      
   2349                    }  
   2350                    else if (ans==0) 
   \                     ??MenuAccessPass_Event_1:
   \   000001E6   002C               CMP      R4,#+0
   \   000001E8   E9D0               BEQ      ??MenuAccessPass_Event_28
   2351                      {
   2352                        MenuPaint();
   2353                        Label(pass_tmp,2,4,90,InsertPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   2354                      }
   2355                  
   2356                   else if (ans<0)
   \   000001EA   12D5               BPL      ??MenuAccessPass_Event_27
   2357                    {
   2358                        MenuLevel=(MenuLevel/100);
   \   000001EC   184C               LDR      R4,??MenuAccessPass_Event_0+0x38  ;; TextToChangeLength
   \   000001EE   A06C               LDR      R0,[R4, #+72]
   \   000001F0   6421               MOVS     R1,#+100
   \   000001F2   ........           BL       __aeabi_idivmod
   \   000001F6   A064               STR      R0,[R4, #+72]
   2359                        MenuPaint();
   \   000001F8   ........           BL       MenuPaint
   2360                        for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \   000001FC   0020               MOVS     R0,#+0
   \   000001FE   0100               MOVS     R1,R0
   \   00000200   094A               LDR      R2,??MenuAccessPass_Event_0+0x10  ;; InsertPass1
   \   00000202   0300               MOVS     R3,R0
   \   00000204   01E0               B        ??MenuAccessPass_Event_29
   \                     ??MenuAccessPass_Event_30:
   \   00000206   5354               STRB     R3,[R2, R1]
   \   00000208   491C               ADDS     R1,R1,#+1
   \                     ??MenuAccessPass_Event_29:
   \   0000020A   0829               CMP      R1,#+8
   \   0000020C   FBDB               BLT      ??MenuAccessPass_Event_30
   2361                        InsertPass1[8]=0;
   \   0000020E   1149               LDR      R1,??MenuAccessPass_Event_0+0x3C  ;; InsertPass1 + 8
   \   00000210   0870               STRB     R0,[R1, #+0]
   2362                    }
   2363                 
   2364                }//_______________________________________________________________________
   \                     ??MenuAccessPass_Event_27:
   \   00000212   FEBC               POP      {R1-R7}
   \   00000214   01BC               POP      {R0}
   \   00000216   0047               BX       R0               ;; return
   \                     ??MenuAccessPass_Event_0:
   \   00000218   ........           DC32     Y_down
   \   0000021C   ........           DC32     X_down
   \   00000220   ........           DC32     Y_up
   \   00000224   ........           DC32     X_up
   \   00000228   ........           DC32     InsertPass1
   \   0000022C   ........           DC32     g_Password_1
   \   00000230   ........           DC32     g_Password_2
   \   00000234   ........           DC32     `?<Constant "060480">`
   \   00000238   ........           DC32     TextToChangeLength + 72
   \   0000023C   ........           DC32     g_level
   \   00000240   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000244   ........           DC32     g_leng
   \   00000248   140A0000           DC32     0xa14
   \   0000024C   ........           DC32     Speech
   \   00000250   ........           DC32     TextToChangeLength
   \   00000254   ........           DC32     InsertPass1 + 8
   2365          
   2366          
   2367                
   2368                
   2369          //Odrysuj procedurê **************************************************************************************************************
   2370          //*  x,y          - wspó³¿êdna lewego dolnego rogu boksu procedury
   2371          

   \                                 In section Debug.txt, align 4, keep-with-next
   2372                void PaintProc(char x, char y, _Procedure *Proc)
   2373                {   
   \                     PaintProc:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0F00               MOVS     R7,R1
   2374                    char PixPlab;
   2375                    char txt[7]={0,0,0,0,0,0,0};
   \   00000006   F34D               LDR      R5,??PaintProc_1  ;; `?<Constant {0, 0, 0, 0, 0, 0, 0}>`
   \   00000008   6846               MOV      R0,SP
   \   0000000A   06CD               LDM      R5!,{R1,R2}
   \   0000000C   06C0               STM      R0!,{R1,R2}
   \   0000000E   083D               SUBS     R5,R5,#+8
   2376                    char ind;
   2377                    switch (Proc->Type)
   \   00000010   0298               LDR      R0,[SP, #+8]
   \   00000012   0078               LDRB     R0,[R0, #+0]
   \   00000014   801E               SUBS     R0,R0,#+2
   \   00000016   3D28               CMP      R0,#+61
   \   00000018   01D9               BLS      .+6
   \   0000001A   00F056FF           BL       ??PaintProc_2
   \   0000001E   02A1               ADR      R1,??PaintProc_0
   \   00000020   4000               LSLS     R0,R0,#+1
   \   00000022   095A               LDRH     R1,[R1, R0]
   \   00000024   8F44               ADD      PC,PC,R1
   \   00000026   C046               Nop      
   \                     ??PaintProc_0:
   \   00000028   A400C4000801       DC16     +164,+196,+264,+332
   \              4C01        
   \   00000030   9001D4012202       DC16     +400,+468,+546,+124
   \              7C00        
   \   00000038   70029602BC02       DC16     +624,+662,+700,+3746
   \              A20E        
   \   00000040   A20EA20EA20E       DC16     +3746,+3746,+3746,+3746
   \              A20E        
   \   00000048   A20EA20ED803       DC16     +3746,+3746,+984,+1178
   \              9A04        
   \   00000050   7005BC063206       DC16     +1392,+1724,+1586,+3746
   \              A20E        
   \   00000058   A20EA20EA20E       DC16     +3746,+3746,+3746,+3746
   \              A20E        
   \   00000060   A20EA20E1A07       DC16     +3746,+3746,+1818,+2008
   \              D807        
   \   00000068   6808BC086609       DC16     +2152,+2236,+2406,+2608
   \              300A        
   \   00000070   C40A1209A20E       DC16     +2756,+2322,+3746,+3746
   \              A20E        
   \   00000078   A20EA20EA20E       DC16     +3746,+3746,+3746,+2888
   \              480B        
   \   00000080   D60B620CA20E       DC16     +3030,+3170,+3746,+3746
   \              A20E        
   \   00000088   A20EA20EA20E       DC16     +3746,+3746,+3746,+3746
   \              A20E        
   \   00000090   A20EC20C780D       DC16     +3746,+3266,+3448,+3596
   \              0C0E        
   \   00000098   E4020C033403       DC16     +740,+780,+820,+860
   \              5C03        
   \   000000A0   8403B003           DC16     +900,+944
   2378                    {
   2379                      
   2380                    case ProcNOT:
   2381                        CopyToCanvasPoint((char*)ProcNot_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_3:
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   0820               MOVS     R0,#+8
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   1323               MOVS     R3,#+19
   \   000000AC   FF1C               ADDS     R7,R7,#+3
   \   000000AE   3A00               MOVS     R2,R7
   \   000000B0   1206               LSLS     R2,R2,#+24
   \   000000B2   120E               LSRS     R2,R2,#+24
   \   000000B4   641C               ADDS     R4,R4,#+1
   \   000000B6   2100               MOVS     R1,R4
   \   000000B8   0906               LSLS     R1,R1,#+24
   \   000000BA   090E               LSRS     R1,R1,#+24
   \   000000BC   A920               MOVS     R0,#+169
   \   000000BE   8000               LSLS     R0,R0,#+2        ;; #+676
   \   000000C0   2818               ADDS     R0,R5,R0
   \   000000C2   ........           BL       CopyToCanvasPoint
   \   000000C6   02B0               ADD      SP,SP,#+8
   \   000000C8   00F0FFFE           BL       ??PaintProc_2
   2382                    break;  
   2383                    
   2384                    case ProcConect:
   2385                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_4:
   \   000000CC   0123               MOVS     R3,#+1
   \   000000CE   1522               MOVS     R2,#+21
   \   000000D0   3900               MOVS     R1,R7
   \   000000D2   891D               ADDS     R1,R1,#+6
   \   000000D4   2000               MOVS     R0,R4
   \   000000D6   ........           BL       H_line
   2386                        H_line(x,y+7,21,1); 
   \   000000DA   0123               MOVS     R3,#+1
   \   000000DC   1522               MOVS     R2,#+21
   \   000000DE   FF1D               ADDS     R7,R7,#+7
   \   000000E0   3900               MOVS     R1,R7
   \   000000E2   2000               MOVS     R0,R4
   \   000000E4   ........           BL       H_line
   \   000000E8   00F0EFFE           BL       ??PaintProc_2
   2387                    break;  
   2388                      
   2389                    case ProcDown:
   2390                        H_line(x,y+6,11,1); 
   \                     ??PaintProc_5:
   \   000000EC   0123               MOVS     R3,#+1
   \   000000EE   0B22               MOVS     R2,#+11
   \   000000F0   3900               MOVS     R1,R7
   \   000000F2   891D               ADDS     R1,R1,#+6
   \   000000F4   2000               MOVS     R0,R4
   \   000000F6   ........           BL       H_line
   2391                        H_line(x,y+7,11,1);
   \   000000FA   0123               MOVS     R3,#+1
   \   000000FC   0B22               MOVS     R2,#+11
   \   000000FE   3900               MOVS     R1,R7
   \   00000100   C91D               ADDS     R1,R1,#+7
   \   00000102   2000               MOVS     R0,R4
   \   00000104   ........           BL       H_line
   2392                        V_line(x+9,y,6,1);
   \   00000108   0123               MOVS     R3,#+1
   \   0000010A   0622               MOVS     R2,#+6
   \   0000010C   3900               MOVS     R1,R7
   \   0000010E   2000               MOVS     R0,R4
   \   00000110   0930               ADDS     R0,R0,#+9
   \   00000112   0006               LSLS     R0,R0,#+24
   \   00000114   000E               LSRS     R0,R0,#+24
   \   00000116   ........           BL       V_line
   2393                        V_line(x+10,y,6,1); 
   \   0000011A   0123               MOVS     R3,#+1
   \   0000011C   0622               MOVS     R2,#+6
   \   0000011E   3900               MOVS     R1,R7
   \   00000120   0A34               ADDS     R4,R4,#+10
   \   00000122   2000               MOVS     R0,R4
   \   00000124   0006               LSLS     R0,R0,#+24
   \   00000126   000E               LSRS     R0,R0,#+24
   \   00000128   ........           BL       V_line
   \   0000012C   00F0CDFE           BL       ??PaintProc_2
   2394                    break;  
   2395                    
   2396                    case ProcDownRight:
   2397                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_6:
   \   00000130   0123               MOVS     R3,#+1
   \   00000132   1522               MOVS     R2,#+21
   \   00000134   3900               MOVS     R1,R7
   \   00000136   891D               ADDS     R1,R1,#+6
   \   00000138   2000               MOVS     R0,R4
   \   0000013A   ........           BL       H_line
   2398                        H_line(x,y+7,21,1);
   \   0000013E   0123               MOVS     R3,#+1
   \   00000140   1522               MOVS     R2,#+21
   \   00000142   3900               MOVS     R1,R7
   \   00000144   C91D               ADDS     R1,R1,#+7
   \   00000146   2000               MOVS     R0,R4
   \   00000148   ........           BL       H_line
   2399                        V_line(x+9,y,6,1);
   \   0000014C   0123               MOVS     R3,#+1
   \   0000014E   0622               MOVS     R2,#+6
   \   00000150   3900               MOVS     R1,R7
   \   00000152   2000               MOVS     R0,R4
   \   00000154   0930               ADDS     R0,R0,#+9
   \   00000156   0006               LSLS     R0,R0,#+24
   \   00000158   000E               LSRS     R0,R0,#+24
   \   0000015A   ........           BL       V_line
   2400                        V_line(x+10,y,6,1); 
   \   0000015E   0123               MOVS     R3,#+1
   \   00000160   0622               MOVS     R2,#+6
   \   00000162   3900               MOVS     R1,R7
   \   00000164   0A34               ADDS     R4,R4,#+10
   \   00000166   2000               MOVS     R0,R4
   \   00000168   0006               LSLS     R0,R0,#+24
   \   0000016A   000E               LSRS     R0,R0,#+24
   \   0000016C   ........           BL       V_line
   \   00000170   00F0ABFE           BL       ??PaintProc_2
   2401                    break;  
   2402          
   2403                    case ProcSumLogDown:
   2404                        H_line(x,y+6,9,1); 
   \                     ??PaintProc_7:
   \   00000174   0123               MOVS     R3,#+1
   \   00000176   0922               MOVS     R2,#+9
   \   00000178   3900               MOVS     R1,R7
   \   0000017A   891D               ADDS     R1,R1,#+6
   \   0000017C   2000               MOVS     R0,R4
   \   0000017E   ........           BL       H_line
   2405                        H_line(x,y+7,9,1);
   \   00000182   0123               MOVS     R3,#+1
   \   00000184   0922               MOVS     R2,#+9
   \   00000186   3900               MOVS     R1,R7
   \   00000188   C91D               ADDS     R1,R1,#+7
   \   0000018A   2000               MOVS     R0,R4
   \   0000018C   ........           BL       H_line
   2406                        V_line(x+9,y,21,1);
   \   00000190   0123               MOVS     R3,#+1
   \   00000192   1522               MOVS     R2,#+21
   \   00000194   3900               MOVS     R1,R7
   \   00000196   2000               MOVS     R0,R4
   \   00000198   0930               ADDS     R0,R0,#+9
   \   0000019A   0006               LSLS     R0,R0,#+24
   \   0000019C   000E               LSRS     R0,R0,#+24
   \   0000019E   ........           BL       V_line
   2407                        V_line(x+10,y,21,1); 
   \   000001A2   0123               MOVS     R3,#+1
   \   000001A4   1522               MOVS     R2,#+21
   \   000001A6   3900               MOVS     R1,R7
   \   000001A8   0A34               ADDS     R4,R4,#+10
   \   000001AA   2000               MOVS     R0,R4
   \   000001AC   0006               LSLS     R0,R0,#+24
   \   000001AE   000E               LSRS     R0,R0,#+24
   \   000001B0   ........           BL       V_line
   \   000001B4   00F089FE           BL       ??PaintProc_2
   2408                    break;  
   2409                    
   2410                    case ProcSumLogRight:
   2411                        H_line(x,y+6,21,1); 
   \                     ??PaintProc_8:
   \   000001B8   0123               MOVS     R3,#+1
   \   000001BA   1522               MOVS     R2,#+21
   \   000001BC   3900               MOVS     R1,R7
   \   000001BE   891D               ADDS     R1,R1,#+6
   \   000001C0   2000               MOVS     R0,R4
   \   000001C2   ........           BL       H_line
   2412                        H_line(x,y+7,21,1);
   \   000001C6   FF1D               ADDS     R7,R7,#+7
   \   000001C8   0123               MOVS     R3,#+1
   \   000001CA   1522               MOVS     R2,#+21
   \   000001CC   3900               MOVS     R1,R7
   \   000001CE   2000               MOVS     R0,R4
   \   000001D0   ........           BL       H_line
   2413                        V_line(x+9,y+7,14,1);
   \   000001D4   0123               MOVS     R3,#+1
   \   000001D6   0E22               MOVS     R2,#+14
   \   000001D8   3900               MOVS     R1,R7
   \   000001DA   2000               MOVS     R0,R4
   \   000001DC   0930               ADDS     R0,R0,#+9
   \   000001DE   0006               LSLS     R0,R0,#+24
   \   000001E0   000E               LSRS     R0,R0,#+24
   \   000001E2   ........           BL       V_line
   2414                        V_line(x+10,y+7,14,1); 
   \   000001E6   0123               MOVS     R3,#+1
   \   000001E8   0E22               MOVS     R2,#+14
   \   000001EA   3900               MOVS     R1,R7
   \   000001EC   0A34               ADDS     R4,R4,#+10
   \   000001EE   2000               MOVS     R0,R4
   \   000001F0   0006               LSLS     R0,R0,#+24
   \   000001F2   000E               LSRS     R0,R0,#+24
   \   000001F4   ........           BL       V_line
   \   000001F8   00F067FE           BL       ??PaintProc_2
   2415                    break;  
   2416                    
   2417                    case ProcUpToRight:
   2418                        H_line(x+9 ,y+6,12,1); 
   \                     ??PaintProc_9:
   \   000001FC   2500               MOVS     R5,R4
   \   000001FE   0935               ADDS     R5,R5,#+9
   \   00000200   0123               MOVS     R3,#+1
   \   00000202   0C22               MOVS     R2,#+12
   \   00000204   3900               MOVS     R1,R7
   \   00000206   891D               ADDS     R1,R1,#+6
   \   00000208   2800               MOVS     R0,R5
   \   0000020A   0006               LSLS     R0,R0,#+24
   \   0000020C   000E               LSRS     R0,R0,#+24
   \   0000020E   ........           BL       H_line
   2419                        H_line(x+9,y+7,12,1);
   \   00000212   FF1D               ADDS     R7,R7,#+7
   \   00000214   0123               MOVS     R3,#+1
   \   00000216   0C22               MOVS     R2,#+12
   \   00000218   3900               MOVS     R1,R7
   \   0000021A   2800               MOVS     R0,R5
   \   0000021C   0006               LSLS     R0,R0,#+24
   \   0000021E   000E               LSRS     R0,R0,#+24
   \   00000220   ........           BL       H_line
   2420                        V_line(x+9,y+7,15,1);
   \   00000224   0123               MOVS     R3,#+1
   \   00000226   0F22               MOVS     R2,#+15
   \   00000228   3900               MOVS     R1,R7
   \   0000022A   2800               MOVS     R0,R5
   \   0000022C   0006               LSLS     R0,R0,#+24
   \   0000022E   000E               LSRS     R0,R0,#+24
   \   00000230   ........           BL       V_line
   2421                        V_line(x+10,y+7,15,1); 
   \   00000234   0123               MOVS     R3,#+1
   \   00000236   0F22               MOVS     R2,#+15
   \   00000238   3900               MOVS     R1,R7
   \   0000023A   0A34               ADDS     R4,R4,#+10
   \   0000023C   2000               MOVS     R0,R4
   \   0000023E   0006               LSLS     R0,R0,#+24
   \   00000240   000E               LSRS     R0,R0,#+24
   \   00000242   ........           BL       V_line
   \   00000246   00F040FE           BL       ??PaintProc_2
   2422                    break;  
   2423          
   2424                    
   2425                    case ProcUpToRightDown:
   2426                        H_line(x+9 ,y+6,12,1); 
   \                     ??PaintProc_10:
   \   0000024A   2500               MOVS     R5,R4
   \   0000024C   0935               ADDS     R5,R5,#+9
   \   0000024E   0123               MOVS     R3,#+1
   \   00000250   0C22               MOVS     R2,#+12
   \   00000252   3900               MOVS     R1,R7
   \   00000254   891D               ADDS     R1,R1,#+6
   \   00000256   2800               MOVS     R0,R5
   \   00000258   0006               LSLS     R0,R0,#+24
   \   0000025A   000E               LSRS     R0,R0,#+24
   \   0000025C   ........           BL       H_line
   2427                        H_line(x+9,y+7,12,1);
   \   00000260   0123               MOVS     R3,#+1
   \   00000262   0C22               MOVS     R2,#+12
   \   00000264   3900               MOVS     R1,R7
   \   00000266   C91D               ADDS     R1,R1,#+7
   \   00000268   2800               MOVS     R0,R5
   \   0000026A   0006               LSLS     R0,R0,#+24
   \   0000026C   000E               LSRS     R0,R0,#+24
   \   0000026E   ........           BL       H_line
   2428                        V_line(x+9,y,21,1);
   \   00000272   0123               MOVS     R3,#+1
   \   00000274   1522               MOVS     R2,#+21
   \   00000276   3900               MOVS     R1,R7
   \   00000278   2800               MOVS     R0,R5
   \   0000027A   0006               LSLS     R0,R0,#+24
   \   0000027C   000E               LSRS     R0,R0,#+24
   \   0000027E   ........           BL       V_line
   2429                        V_line(x+10,y,21,1); 
   \   00000282   0123               MOVS     R3,#+1
   \   00000284   1522               MOVS     R2,#+21
   \   00000286   3900               MOVS     R1,R7
   \   00000288   0A34               ADDS     R4,R4,#+10
   \   0000028A   2000               MOVS     R0,R4
   \   0000028C   0006               LSLS     R0,R0,#+24
   \   0000028E   000E               LSRS     R0,R0,#+24
   \   00000290   ........           BL       V_line
   \   00000294   00F019FE           BL       ??PaintProc_2
   2430                    break;  
   2431                    
   2432                    
   2433                    case ProcToggleRS:
   2434                        CopyToCanvasPoint((char*)ProcToggleRS_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_11:
   \   00000298   82B0               SUB      SP,SP,#+8
   \   0000029A   1320               MOVS     R0,#+19
   \   0000029C   0090               STR      R0,[SP, #+0]
   \   0000029E   0300               MOVS     R3,R0
   \   000002A0   BF1C               ADDS     R7,R7,#+2
   \   000002A2   3A00               MOVS     R2,R7
   \   000002A4   1206               LSLS     R2,R2,#+24
   \   000002A6   120E               LSRS     R2,R2,#+24
   \   000002A8   641C               ADDS     R4,R4,#+1
   \   000002AA   2100               MOVS     R1,R4
   \   000002AC   0906               LSLS     R1,R1,#+24
   \   000002AE   090E               LSRS     R1,R1,#+24
   \   000002B0   A035               ADDS     R5,R5,#+160
   \   000002B2   2800               MOVS     R0,R5
   \   000002B4   ........           BL       CopyToCanvasPoint
   \   000002B8   02B0               ADD      SP,SP,#+8
   \   000002BA   00F006FE           BL       ??PaintProc_2
   2435                    break;   
   2436          
   2437                    case ProcToggleT:
   2438                        CopyToCanvasPoint((char*)ProcToggleT_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_12:
   \   000002BE   82B0               SUB      SP,SP,#+8
   \   000002C0   1320               MOVS     R0,#+19
   \   000002C2   0090               STR      R0,[SP, #+0]
   \   000002C4   0300               MOVS     R3,R0
   \   000002C6   BF1C               ADDS     R7,R7,#+2
   \   000002C8   3A00               MOVS     R2,R7
   \   000002CA   1206               LSLS     R2,R2,#+24
   \   000002CC   120E               LSRS     R2,R2,#+24
   \   000002CE   641C               ADDS     R4,R4,#+1
   \   000002D0   2100               MOVS     R1,R4
   \   000002D2   0906               LSLS     R1,R1,#+24
   \   000002D4   090E               LSRS     R1,R1,#+24
   \   000002D6   DC35               ADDS     R5,R5,#+220
   \   000002D8   2800               MOVS     R0,R5
   \   000002DA   ........           BL       CopyToCanvasPoint
   \   000002DE   02B0               ADD      SP,SP,#+8
   \   000002E0   00F0F3FD           BL       ??PaintProc_2
   2439                    break;             
   2440                    
   2441                    case ProcTLI1:
   2442                        CopyToCanvasPoint((char*)ProcTLI1_graf, x+1, y+2, 19,19);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_13:
   \   000002E4   82B0               SUB      SP,SP,#+8
   \   000002E6   1320               MOVS     R0,#+19
   \   000002E8   0090               STR      R0,[SP, #+0]
   \   000002EA   0300               MOVS     R3,R0
   \   000002EC   BF1C               ADDS     R7,R7,#+2
   \   000002EE   3A00               MOVS     R2,R7
   \   000002F0   1206               LSLS     R2,R2,#+24
   \   000002F2   120E               LSRS     R2,R2,#+24
   \   000002F4   641C               ADDS     R4,R4,#+1
   \   000002F6   2100               MOVS     R1,R4
   \   000002F8   0906               LSLS     R1,R1,#+24
   \   000002FA   090E               LSRS     R1,R1,#+24
   \   000002FC   8C20               MOVS     R0,#+140
   \   000002FE   4000               LSLS     R0,R0,#+1        ;; #+280
   \   00000300   2818               ADDS     R0,R5,R0
   \   00000302   ........           BL       CopyToCanvasPoint
   \   00000306   02B0               ADD      SP,SP,#+8
   \   00000308   00F0DFFD           BL       ??PaintProc_2
   2443                    break;      
   2444          
   2445                    case ProcLim:
   2446                        CopyToCanvasPoint((char*)ProcLim_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_14:
   \   0000030C   82B0               SUB      SP,SP,#+8
   \   0000030E   1220               MOVS     R0,#+18
   \   00000310   0090               STR      R0,[SP, #+0]
   \   00000312   1323               MOVS     R3,#+19
   \   00000314   FF1C               ADDS     R7,R7,#+3
   \   00000316   3A00               MOVS     R2,R7
   \   00000318   1206               LSLS     R2,R2,#+24
   \   0000031A   120E               LSRS     R2,R2,#+24
   \   0000031C   641C               ADDS     R4,R4,#+1
   \   0000031E   2100               MOVS     R1,R4
   \   00000320   0906               LSLS     R1,R1,#+24
   \   00000322   090E               LSRS     R1,R1,#+24
   \   00000324   AA20               MOVS     R0,#+170
   \   00000326   4000               LSLS     R0,R0,#+1        ;; #+340
   \   00000328   2818               ADDS     R0,R5,R0
   \   0000032A   ........           BL       CopyToCanvasPoint
   \   0000032E   02B0               ADD      SP,SP,#+8
   \   00000330   00F0CBFD           BL       ??PaintProc_2
   2447                    break;  
   2448                    
   2449                    
   2450                    case ProcEven:
   2451                        CopyToCanvasPoint((char*)ProcEven_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_15:
   \   00000334   82B0               SUB      SP,SP,#+8
   \   00000336   1220               MOVS     R0,#+18
   \   00000338   0090               STR      R0,[SP, #+0]
   \   0000033A   1323               MOVS     R3,#+19
   \   0000033C   FF1C               ADDS     R7,R7,#+3
   \   0000033E   3A00               MOVS     R2,R7
   \   00000340   1206               LSLS     R2,R2,#+24
   \   00000342   120E               LSRS     R2,R2,#+24
   \   00000344   641C               ADDS     R4,R4,#+1
   \   00000346   2100               MOVS     R1,R4
   \   00000348   0906               LSLS     R1,R1,#+24
   \   0000034A   090E               LSRS     R1,R1,#+24
   \   0000034C   C620               MOVS     R0,#+198
   \   0000034E   4000               LSLS     R0,R0,#+1        ;; #+396
   \   00000350   2818               ADDS     R0,R5,R0
   \   00000352   ........           BL       CopyToCanvasPoint
   \   00000356   02B0               ADD      SP,SP,#+8
   \   00000358   00F0B7FD           BL       ??PaintProc_2
   2452                    break;  
   2453                    
   2454          
   2455                    case ProcPlus:
   2456                        CopyToCanvasPoint((char*)ProcPlus_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_16:
   \   0000035C   82B0               SUB      SP,SP,#+8
   \   0000035E   1220               MOVS     R0,#+18
   \   00000360   0090               STR      R0,[SP, #+0]
   \   00000362   1323               MOVS     R3,#+19
   \   00000364   FF1C               ADDS     R7,R7,#+3
   \   00000366   3A00               MOVS     R2,R7
   \   00000368   1206               LSLS     R2,R2,#+24
   \   0000036A   120E               LSRS     R2,R2,#+24
   \   0000036C   641C               ADDS     R4,R4,#+1
   \   0000036E   2100               MOVS     R1,R4
   \   00000370   0906               LSLS     R1,R1,#+24
   \   00000372   090E               LSRS     R1,R1,#+24
   \   00000374   E220               MOVS     R0,#+226
   \   00000376   4000               LSLS     R0,R0,#+1        ;; #+452
   \   00000378   2818               ADDS     R0,R5,R0
   \   0000037A   ........           BL       CopyToCanvasPoint
   \   0000037E   02B0               ADD      SP,SP,#+8
   \   00000380   00F0A3FD           BL       ??PaintProc_2
   2457                    break;  
   2458                    
   2459                    case ProcMinus:
   2460                        CopyToCanvasPoint((char*)ProcMinus_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_17:
   \   00000384   82B0               SUB      SP,SP,#+8
   \   00000386   1220               MOVS     R0,#+18
   \   00000388   0090               STR      R0,[SP, #+0]
   \   0000038A   1323               MOVS     R3,#+19
   \   0000038C   FF1C               ADDS     R7,R7,#+3
   \   0000038E   3A00               MOVS     R2,R7
   \   00000390   1206               LSLS     R2,R2,#+24
   \   00000392   120E               LSRS     R2,R2,#+24
   \   00000394   641C               ADDS     R4,R4,#+1
   \   00000396   2100               MOVS     R1,R4
   \   00000398   0906               LSLS     R1,R1,#+24
   \   0000039A   090E               LSRS     R1,R1,#+24
   \   0000039C   FE20               MOVS     R0,#+254
   \   0000039E   4000               LSLS     R0,R0,#+1        ;; #+508
   \   000003A0   2818               ADDS     R0,R5,R0
   \   000003A2   ........           BL       CopyToCanvasPoint
   \   000003A6   02B0               ADD      SP,SP,#+8
   \   000003A8   00F08FFD           BL       ??PaintProc_2
   2461                    break;  
   2462          
   2463                    case ProcMul:
   2464                        CopyToCanvasPoint((char*)ProcMul_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_18:
   \   000003AC   82B0               SUB      SP,SP,#+8
   \   000003AE   1220               MOVS     R0,#+18
   \   000003B0   0090               STR      R0,[SP, #+0]
   \   000003B2   1323               MOVS     R3,#+19
   \   000003B4   FF1C               ADDS     R7,R7,#+3
   \   000003B6   3A00               MOVS     R2,R7
   \   000003B8   1206               LSLS     R2,R2,#+24
   \   000003BA   120E               LSRS     R2,R2,#+24
   \   000003BC   641C               ADDS     R4,R4,#+1
   \   000003BE   2100               MOVS     R1,R4
   \   000003C0   0906               LSLS     R1,R1,#+24
   \   000003C2   090E               LSRS     R1,R1,#+24
   \   000003C4   8D20               MOVS     R0,#+141
   \   000003C6   8000               LSLS     R0,R0,#+2        ;; #+564
   \   000003C8   2818               ADDS     R0,R5,R0
   \   000003CA   ........           BL       CopyToCanvasPoint
   \   000003CE   02B0               ADD      SP,SP,#+8
   \   000003D0   00F07BFD           BL       ??PaintProc_2
   \                     ??PaintProc_1:
   \   000003D4   ........           DC32     `?<Constant {0, 0, 0, 0, 0, 0, 0}>`
   2465                    break;  
   2466          
   2467                    case ProcDiv:
   2468                        CopyToCanvasPoint((char*)ProcDiv_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_19:
   \   000003D8   82B0               SUB      SP,SP,#+8
   \   000003DA   1220               MOVS     R0,#+18
   \   000003DC   0090               STR      R0,[SP, #+0]
   \   000003DE   1323               MOVS     R3,#+19
   \   000003E0   FF1C               ADDS     R7,R7,#+3
   \   000003E2   3A00               MOVS     R2,R7
   \   000003E4   1206               LSLS     R2,R2,#+24
   \   000003E6   120E               LSRS     R2,R2,#+24
   \   000003E8   641C               ADDS     R4,R4,#+1
   \   000003EA   2100               MOVS     R1,R4
   \   000003EC   0906               LSLS     R1,R1,#+24
   \   000003EE   090E               LSRS     R1,R1,#+24
   \   000003F0   9B20               MOVS     R0,#+155
   \   000003F2   8000               LSLS     R0,R0,#+2        ;; #+620
   \   000003F4   2818               ADDS     R0,R5,R0
   \   000003F6   ........           BL       CopyToCanvasPoint
   \   000003FA   02B0               ADD      SP,SP,#+8
   \   000003FC   00F065FD           BL       ??PaintProc_2
   2469                    break;  
   2470          
   2471                    
   2472                    case ProcStI:
   2473                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_20:
   \   00000400   82B0               SUB      SP,SP,#+8
   \   00000402   0820               MOVS     R0,#+8
   \   00000404   0090               STR      R0,[SP, #+0]
   \   00000406   1323               MOVS     R3,#+19
   \   00000408   3A00               MOVS     R2,R7
   \   0000040A   D21C               ADDS     R2,R2,#+3
   \   0000040C   1206               LSLS     R2,R2,#+24
   \   0000040E   120E               LSRS     R2,R2,#+24
   \   00000410   2100               MOVS     R1,R4
   \   00000412   491C               ADDS     R1,R1,#+1
   \   00000414   0906               LSLS     R1,R1,#+24
   \   00000416   090E               LSRS     R1,R1,#+24
   \   00000418   0835               ADDS     R5,R5,#+8
   \   0000041A   2800               MOVS     R0,R5
   \   0000041C   ........           BL       CopyToCanvasPoint
   \   00000420   02B0               ADD      SP,SP,#+8
   2474                        
   2475                        if (Proc->Nr>=0)
   \   00000422   0120               MOVS     R0,#+1
   \   00000424   0299               LDR      R1,[SP, #+8]
   \   00000426   0856               LDRSB    R0,[R1, R0]
   \   00000428   0028               CMP      R0,#+0
   \   0000042A   14D4               BMI      ??PaintProc_21
   2476                        {
   2477                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000042C   0222               MOVS     R2,#+2
   \   0000042E   6946               MOV      R1,SP
   \   00000430   0120               MOVS     R0,#+1
   \   00000432   029B               LDR      R3,[SP, #+8]
   \   00000434   1856               LDRSB    R0,[R3, R0]
   \   00000436   0006               LSLS     R0,R0,#+24
   \   00000438   000E               LSRS     R0,R0,#+24
   \   0000043A   ........           BL       CharToStr
   \   0000043E   0600               MOVS     R6,R0
   2478                          txt[ind]='.';
   \   00000440   6D46               MOV      R5,SP
   \   00000442   A919               ADDS     R1,R5,R6
   \   00000444   2E20               MOVS     R0,#+46
   \   00000446   0870               STRB     R0,[R1, #+0]
   2479                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000448   0222               MOVS     R2,#+2
   \   0000044A   491C               ADDS     R1,R1,#+1
   \   0000044C   0298               LDR      R0,[SP, #+8]
   \   0000044E   007A               LDRB     R0,[R0, #+8]
   \   00000450   ........           BL       CharToStr
   \   00000454   09E0               B        ??PaintProc_22
   2480                        }else{
   2481                          txt[0]='b';
   \                     ??PaintProc_21:
   \   00000456   6D46               MOV      R5,SP
   \   00000458   6220               MOVS     R0,#+98
   \   0000045A   2870               STRB     R0,[R5, #+0]
   2482                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   0000045C   0222               MOVS     R2,#+2
   \   0000045E   6D1C               ADDS     R5,R5,#+1
   \   00000460   2900               MOVS     R1,R5
   \   00000462   0298               LDR      R0,[SP, #+8]
   \   00000464   007A               LDRB     R0,[R0, #+8]
   \   00000466   ........           BL       CharToStr
   2483                        }     
   2484                        
   2485                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_22:
   \   0000046A   82B0               SUB      SP,SP,#+8
   \   0000046C   0020               MOVS     R0,#+0
   \   0000046E   0090               STR      R0,[SP, #+0]
   \   00000470   7821               MOVS     R1,#+120
   \   00000472   03B4               PUSH     {R0,R1}
   \   00000474   0C21               MOVS     R1,#+12
   \   00000476   0520               MOVS     R0,#+5
   \   00000478   03B4               PUSH     {R0,R1}
   \   0000047A   3B00               MOVS     R3,R7
   \   0000047C   0B33               ADDS     R3,R3,#+11
   \   0000047E   2200               MOVS     R2,R4
   \   00000480   121D               ADDS     R2,R2,#+4
   \   00000482   1206               LSLS     R2,R2,#+24
   \   00000484   120E               LSRS     R2,R2,#+24
   \   00000486   0221               MOVS     R1,#+2
   \   00000488   06A8               ADD      R0,SP,#+24
   \   0000048A   ........           BL       Label
   \   0000048E   06B0               ADD      SP,SP,#+24
   2486                        txt[0]='I'; txt[1]=0;
   \   00000490   6D46               MOV      R5,SP
   \   00000492   4920               MOVS     R0,#+73
   \   00000494   2870               STRB     R0,[R5, #+0]
   \   00000496   0020               MOVS     R0,#+0
   \   00000498   6870               STRB     R0,[R5, #+1]
   2487                        Label(txt,2,x+6,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000049A   82B0               SUB      SP,SP,#+8
   \   0000049C   0090               STR      R0,[SP, #+0]
   \   0000049E   7821               MOVS     R1,#+120
   \   000004A0   03B4               PUSH     {R0,R1}
   \   000004A2   0621               MOVS     R1,#+6
   \   000004A4   0120               MOVS     R0,#+1
   \   000004A6   03B4               PUSH     {R0,R1}
   \   000004A8   BF1C               ADDS     R7,R7,#+2
   \   000004AA   3B00               MOVS     R3,R7
   \   000004AC   A41D               ADDS     R4,R4,#+6
   \   000004AE   2200               MOVS     R2,R4
   \   000004B0   1206               LSLS     R2,R2,#+24
   \   000004B2   120E               LSRS     R2,R2,#+24
   \   000004B4   0221               MOVS     R1,#+2
   \   000004B6   06A8               ADD      R0,SP,#+24
   \   000004B8   ........           BL       Label
   \   000004BC   06B0               ADD      SP,SP,#+24
   \   000004BE   00F004FD           BL       ??PaintProc_2
   2488                    break;
   2489          
   2490                    case ProcStNI:
   2491                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_23:
   \   000004C2   82B0               SUB      SP,SP,#+8
   \   000004C4   0820               MOVS     R0,#+8
   \   000004C6   0090               STR      R0,[SP, #+0]
   \   000004C8   1323               MOVS     R3,#+19
   \   000004CA   3A00               MOVS     R2,R7
   \   000004CC   D21C               ADDS     R2,R2,#+3
   \   000004CE   1206               LSLS     R2,R2,#+24
   \   000004D0   120E               LSRS     R2,R2,#+24
   \   000004D2   2100               MOVS     R1,R4
   \   000004D4   491C               ADDS     R1,R1,#+1
   \   000004D6   0906               LSLS     R1,R1,#+24
   \   000004D8   090E               LSRS     R1,R1,#+24
   \   000004DA   0835               ADDS     R5,R5,#+8
   \   000004DC   2800               MOVS     R0,R5
   \   000004DE   ........           BL       CopyToCanvasPoint
   \   000004E2   02B0               ADD      SP,SP,#+8
   2492                        H_line(x+7,y+11,6,1);
   \   000004E4   0123               MOVS     R3,#+1
   \   000004E6   0622               MOVS     R2,#+6
   \   000004E8   3900               MOVS     R1,R7
   \   000004EA   0B31               ADDS     R1,R1,#+11
   \   000004EC   2000               MOVS     R0,R4
   \   000004EE   C01D               ADDS     R0,R0,#+7
   \   000004F0   0006               LSLS     R0,R0,#+24
   \   000004F2   000E               LSRS     R0,R0,#+24
   \   000004F4   ........           BL       H_line
   2493                        
   2494                        if (Proc->Nr>=0)
   \   000004F8   0120               MOVS     R0,#+1
   \   000004FA   0299               LDR      R1,[SP, #+8]
   \   000004FC   0856               LDRSB    R0,[R1, R0]
   \   000004FE   0028               CMP      R0,#+0
   \   00000500   14D4               BMI      ??PaintProc_24
   2495                        {
   2496                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000502   0222               MOVS     R2,#+2
   \   00000504   6946               MOV      R1,SP
   \   00000506   0120               MOVS     R0,#+1
   \   00000508   029B               LDR      R3,[SP, #+8]
   \   0000050A   1856               LDRSB    R0,[R3, R0]
   \   0000050C   0006               LSLS     R0,R0,#+24
   \   0000050E   000E               LSRS     R0,R0,#+24
   \   00000510   ........           BL       CharToStr
   \   00000514   0600               MOVS     R6,R0
   2497                          txt[ind]='.';
   \   00000516   6D46               MOV      R5,SP
   \   00000518   A919               ADDS     R1,R5,R6
   \   0000051A   2E20               MOVS     R0,#+46
   \   0000051C   0870               STRB     R0,[R1, #+0]
   2498                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   0000051E   0222               MOVS     R2,#+2
   \   00000520   491C               ADDS     R1,R1,#+1
   \   00000522   0298               LDR      R0,[SP, #+8]
   \   00000524   007A               LDRB     R0,[R0, #+8]
   \   00000526   ........           BL       CharToStr
   \   0000052A   09E0               B        ??PaintProc_25
   2499                        }else{
   2500                          txt[0]='b';
   \                     ??PaintProc_24:
   \   0000052C   6D46               MOV      R5,SP
   \   0000052E   6220               MOVS     R0,#+98
   \   00000530   2870               STRB     R0,[R5, #+0]
   2501                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000532   0222               MOVS     R2,#+2
   \   00000534   6D1C               ADDS     R5,R5,#+1
   \   00000536   2900               MOVS     R1,R5
   \   00000538   0298               LDR      R0,[SP, #+8]
   \   0000053A   007A               LDRB     R0,[R0, #+8]
   \   0000053C   ........           BL       CharToStr
   2502                        }   
   2503                        Label(txt,2,x+4,y+12,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_25:
   \   00000540   82B0               SUB      SP,SP,#+8
   \   00000542   0020               MOVS     R0,#+0
   \   00000544   0090               STR      R0,[SP, #+0]
   \   00000546   7821               MOVS     R1,#+120
   \   00000548   03B4               PUSH     {R0,R1}
   \   0000054A   0C21               MOVS     R1,#+12
   \   0000054C   0520               MOVS     R0,#+5
   \   0000054E   03B4               PUSH     {R0,R1}
   \   00000550   3B00               MOVS     R3,R7
   \   00000552   0C33               ADDS     R3,R3,#+12
   \   00000554   2200               MOVS     R2,R4
   \   00000556   121D               ADDS     R2,R2,#+4
   \   00000558   1206               LSLS     R2,R2,#+24
   \   0000055A   120E               LSRS     R2,R2,#+24
   \   0000055C   0221               MOVS     R1,#+2
   \   0000055E   06A8               ADD      R0,SP,#+24
   \   00000560   ........           BL       Label
   \   00000564   06B0               ADD      SP,SP,#+24
   2504                        txt[0]='I'; txt[1]=0;
   \   00000566   6D46               MOV      R5,SP
   \   00000568   4920               MOVS     R0,#+73
   \   0000056A   2870               STRB     R0,[R5, #+0]
   \   0000056C   0020               MOVS     R0,#+0
   \   0000056E   6870               STRB     R0,[R5, #+1]
   2505                        Label(txt,2,x+6,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000570   82B0               SUB      SP,SP,#+8
   \   00000572   0090               STR      R0,[SP, #+0]
   \   00000574   7821               MOVS     R1,#+120
   \   00000576   03B4               PUSH     {R0,R1}
   \   00000578   0621               MOVS     R1,#+6
   \   0000057A   0120               MOVS     R0,#+1
   \   0000057C   03B4               PUSH     {R0,R1}
   \   0000057E   BF1C               ADDS     R7,R7,#+2
   \   00000580   3B00               MOVS     R3,R7
   \   00000582   A41D               ADDS     R4,R4,#+6
   \   00000584   2200               MOVS     R2,R4
   \   00000586   1206               LSLS     R2,R2,#+24
   \   00000588   120E               LSRS     R2,R2,#+24
   \   0000058A   0221               MOVS     R1,#+2
   \   0000058C   06A8               ADD      R0,SP,#+24
   \   0000058E   ........           BL       Label
   \   00000592   06B0               ADD      SP,SP,#+24
   \   00000594   00F099FC           BL       ??PaintProc_2
   2506                    break;
   2507                    
   2508                    
   2509                    case ProcStQ:
   2510                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_26:
   \   00000598   82B0               SUB      SP,SP,#+8
   \   0000059A   0820               MOVS     R0,#+8
   \   0000059C   0090               STR      R0,[SP, #+0]
   \   0000059E   1323               MOVS     R3,#+19
   \   000005A0   3A00               MOVS     R2,R7
   \   000005A2   D21C               ADDS     R2,R2,#+3
   \   000005A4   1206               LSLS     R2,R2,#+24
   \   000005A6   120E               LSRS     R2,R2,#+24
   \   000005A8   2100               MOVS     R1,R4
   \   000005AA   491C               ADDS     R1,R1,#+1
   \   000005AC   0906               LSLS     R1,R1,#+24
   \   000005AE   090E               LSRS     R1,R1,#+24
   \   000005B0   0835               ADDS     R5,R5,#+8
   \   000005B2   2800               MOVS     R0,R5
   \   000005B4   ........           BL       CopyToCanvasPoint
   \   000005B8   02B0               ADD      SP,SP,#+8
   2511                        if (Proc->Nr>=0)
   \   000005BA   0120               MOVS     R0,#+1
   \   000005BC   0299               LDR      R1,[SP, #+8]
   \   000005BE   0856               LDRSB    R0,[R1, R0]
   \   000005C0   0028               CMP      R0,#+0
   \   000005C2   14D4               BMI      ??PaintProc_27
   2512                        {
   2513                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000005C4   0222               MOVS     R2,#+2
   \   000005C6   6946               MOV      R1,SP
   \   000005C8   0120               MOVS     R0,#+1
   \   000005CA   029B               LDR      R3,[SP, #+8]
   \   000005CC   1856               LDRSB    R0,[R3, R0]
   \   000005CE   0006               LSLS     R0,R0,#+24
   \   000005D0   000E               LSRS     R0,R0,#+24
   \   000005D2   ........           BL       CharToStr
   \   000005D6   0600               MOVS     R6,R0
   2514                          txt[ind]='.';
   \   000005D8   6D46               MOV      R5,SP
   \   000005DA   A919               ADDS     R1,R5,R6
   \   000005DC   2E20               MOVS     R0,#+46
   \   000005DE   0870               STRB     R0,[R1, #+0]
   2515                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   000005E0   0222               MOVS     R2,#+2
   \   000005E2   491C               ADDS     R1,R1,#+1
   \   000005E4   0298               LDR      R0,[SP, #+8]
   \   000005E6   007A               LDRB     R0,[R0, #+8]
   \   000005E8   ........           BL       CharToStr
   \   000005EC   09E0               B        ??PaintProc_28
   2516                        }else{
   2517                          txt[0]='b';
   \                     ??PaintProc_27:
   \   000005EE   6D46               MOV      R5,SP
   \   000005F0   6220               MOVS     R0,#+98
   \   000005F2   2870               STRB     R0,[R5, #+0]
   2518                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   000005F4   0222               MOVS     R2,#+2
   \   000005F6   6D1C               ADDS     R5,R5,#+1
   \   000005F8   2900               MOVS     R1,R5
   \   000005FA   0298               LDR      R0,[SP, #+8]
   \   000005FC   007A               LDRB     R0,[R0, #+8]
   \   000005FE   ........           BL       CharToStr
   2519                        } 
   2520                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_28:
   \   00000602   82B0               SUB      SP,SP,#+8
   \   00000604   0020               MOVS     R0,#+0
   \   00000606   0090               STR      R0,[SP, #+0]
   \   00000608   7821               MOVS     R1,#+120
   \   0000060A   03B4               PUSH     {R0,R1}
   \   0000060C   0C21               MOVS     R1,#+12
   \   0000060E   0520               MOVS     R0,#+5
   \   00000610   03B4               PUSH     {R0,R1}
   \   00000612   3B00               MOVS     R3,R7
   \   00000614   0B33               ADDS     R3,R3,#+11
   \   00000616   2200               MOVS     R2,R4
   \   00000618   121D               ADDS     R2,R2,#+4
   \   0000061A   1206               LSLS     R2,R2,#+24
   \   0000061C   120E               LSRS     R2,R2,#+24
   \   0000061E   0221               MOVS     R1,#+2
   \   00000620   06A8               ADD      R0,SP,#+24
   \   00000622   ........           BL       Label
   \   00000626   06B0               ADD      SP,SP,#+24
   2521                        txt[0]='Q'; txt[1]=0;
   \   00000628   6D46               MOV      R5,SP
   \   0000062A   5120               MOVS     R0,#+81
   \   0000062C   2870               STRB     R0,[R5, #+0]
   \   0000062E   0020               MOVS     R0,#+0
   \   00000630   6870               STRB     R0,[R5, #+1]
   2522                        Label(txt,2,x+7,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000632   82B0               SUB      SP,SP,#+8
   \   00000634   0090               STR      R0,[SP, #+0]
   \   00000636   7821               MOVS     R1,#+120
   \   00000638   03B4               PUSH     {R0,R1}
   \   0000063A   0621               MOVS     R1,#+6
   \   0000063C   0120               MOVS     R0,#+1
   \   0000063E   03B4               PUSH     {R0,R1}
   \   00000640   BF1C               ADDS     R7,R7,#+2
   \   00000642   3B00               MOVS     R3,R7
   \   00000644   E41D               ADDS     R4,R4,#+7
   \   00000646   2200               MOVS     R2,R4
   \   00000648   1206               LSLS     R2,R2,#+24
   \   0000064A   120E               LSRS     R2,R2,#+24
   \   0000064C   0221               MOVS     R1,#+2
   \   0000064E   06A8               ADD      R0,SP,#+24
   \   00000650   ........           BL       Label
   \   00000654   06B0               ADD      SP,SP,#+24
   \   00000656   00F038FC           BL       ??PaintProc_2
   2523                    break;
   2524          
   2525                    case ProcStS:
   2526                        CopyToCanvasPoint((char*)ProcSt_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_29:
   \   0000065A   82B0               SUB      SP,SP,#+8
   \   0000065C   0820               MOVS     R0,#+8
   \   0000065E   0090               STR      R0,[SP, #+0]
   \   00000660   1323               MOVS     R3,#+19
   \   00000662   3A00               MOVS     R2,R7
   \   00000664   D21C               ADDS     R2,R2,#+3
   \   00000666   1206               LSLS     R2,R2,#+24
   \   00000668   120E               LSRS     R2,R2,#+24
   \   0000066A   2100               MOVS     R1,R4
   \   0000066C   491C               ADDS     R1,R1,#+1
   \   0000066E   0906               LSLS     R1,R1,#+24
   \   00000670   090E               LSRS     R1,R1,#+24
   \   00000672   0835               ADDS     R5,R5,#+8
   \   00000674   2800               MOVS     R0,R5
   \   00000676   ........           BL       CopyToCanvasPoint
   \   0000067A   02B0               ADD      SP,SP,#+8
   2527                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000067C   0222               MOVS     R2,#+2
   \   0000067E   6946               MOV      R1,SP
   \   00000680   0120               MOVS     R0,#+1
   \   00000682   029B               LDR      R3,[SP, #+8]
   \   00000684   1856               LDRSB    R0,[R3, R0]
   \   00000686   0006               LSLS     R0,R0,#+24
   \   00000688   000E               LSRS     R0,R0,#+24
   \   0000068A   ........           BL       CharToStr
   2528          
   2529                        Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000068E   82B0               SUB      SP,SP,#+8
   \   00000690   0020               MOVS     R0,#+0
   \   00000692   0090               STR      R0,[SP, #+0]
   \   00000694   7821               MOVS     R1,#+120
   \   00000696   03B4               PUSH     {R0,R1}
   \   00000698   0C21               MOVS     R1,#+12
   \   0000069A   0220               MOVS     R0,#+2
   \   0000069C   03B4               PUSH     {R0,R1}
   \   0000069E   3B00               MOVS     R3,R7
   \   000006A0   0B33               ADDS     R3,R3,#+11
   \   000006A2   2200               MOVS     R2,R4
   \   000006A4   121D               ADDS     R2,R2,#+4
   \   000006A6   1206               LSLS     R2,R2,#+24
   \   000006A8   120E               LSRS     R2,R2,#+24
   \   000006AA   0100               MOVS     R1,R0
   \   000006AC   06A8               ADD      R0,SP,#+24
   \   000006AE   ........           BL       Label
   \   000006B2   06B0               ADD      SP,SP,#+24
   2530                        txt[0]='S'; txt[1]=0;
   \   000006B4   6D46               MOV      R5,SP
   \   000006B6   5320               MOVS     R0,#+83
   \   000006B8   2870               STRB     R0,[R5, #+0]
   \   000006BA   0020               MOVS     R0,#+0
   \   000006BC   6870               STRB     R0,[R5, #+1]
   2531                        Label(txt,2,x+7,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000006BE   82B0               SUB      SP,SP,#+8
   \   000006C0   0090               STR      R0,[SP, #+0]
   \   000006C2   7821               MOVS     R1,#+120
   \   000006C4   03B4               PUSH     {R0,R1}
   \   000006C6   0621               MOVS     R1,#+6
   \   000006C8   0120               MOVS     R0,#+1
   \   000006CA   03B4               PUSH     {R0,R1}
   \   000006CC   BF1C               ADDS     R7,R7,#+2
   \   000006CE   3B00               MOVS     R3,R7
   \   000006D0   E41D               ADDS     R4,R4,#+7
   \   000006D2   2200               MOVS     R2,R4
   \   000006D4   1206               LSLS     R2,R2,#+24
   \   000006D6   120E               LSRS     R2,R2,#+24
   \   000006D8   0221               MOVS     R1,#+2
   \   000006DA   06A8               ADD      R0,SP,#+24
   \   000006DC   ........           BL       Label
   \   000006E0   06B0               ADD      SP,SP,#+24
   \   000006E2   F2E3               B        ??PaintProc_2
   2532                    break;      
   2533                    
   2534                    
   2535                    case ProcStB:
   2536                        CopyToCanvasPoint((char*)ProcSt_Button, x+1, y+6, 19,6);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_30:
   \   000006E4   82B0               SUB      SP,SP,#+8
   \   000006E6   0620               MOVS     R0,#+6
   \   000006E8   0090               STR      R0,[SP, #+0]
   \   000006EA   1323               MOVS     R3,#+19
   \   000006EC   3A00               MOVS     R2,R7
   \   000006EE   921D               ADDS     R2,R2,#+6
   \   000006F0   1206               LSLS     R2,R2,#+24
   \   000006F2   120E               LSRS     R2,R2,#+24
   \   000006F4   2100               MOVS     R1,R4
   \   000006F6   491C               ADDS     R1,R1,#+1
   \   000006F8   0906               LSLS     R1,R1,#+24
   \   000006FA   090E               LSRS     R1,R1,#+24
   \   000006FC   C920               MOVS     R0,#+201
   \   000006FE   8000               LSLS     R0,R0,#+2        ;; #+804
   \   00000700   2818               ADDS     R0,R5,R0
   \   00000702   ........           BL       CopyToCanvasPoint
   \   00000706   02B0               ADD      SP,SP,#+8
   2537                        ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000708   0222               MOVS     R2,#+2
   \   0000070A   6946               MOV      R1,SP
   \   0000070C   0120               MOVS     R0,#+1
   \   0000070E   029B               LDR      R3,[SP, #+8]
   \   00000710   1856               LDRSB    R0,[R3, R0]
   \   00000712   0006               LSLS     R0,R0,#+24
   \   00000714   000E               LSRS     R0,R0,#+24
   \   00000716   ........           BL       CharToStr
   2538          
   2539                        Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000071A   82B0               SUB      SP,SP,#+8
   \   0000071C   0020               MOVS     R0,#+0
   \   0000071E   0090               STR      R0,[SP, #+0]
   \   00000720   7821               MOVS     R1,#+120
   \   00000722   03B4               PUSH     {R0,R1}
   \   00000724   0C21               MOVS     R1,#+12
   \   00000726   0220               MOVS     R0,#+2
   \   00000728   03B4               PUSH     {R0,R1}
   \   0000072A   0B37               ADDS     R7,R7,#+11
   \   0000072C   3B00               MOVS     R3,R7
   \   0000072E   241D               ADDS     R4,R4,#+4
   \   00000730   2200               MOVS     R2,R4
   \   00000732   1206               LSLS     R2,R2,#+24
   \   00000734   120E               LSRS     R2,R2,#+24
   \   00000736   0100               MOVS     R1,R0
   \   00000738   06A8               ADD      R0,SP,#+24
   \   0000073A   ........           BL       Label
   \   0000073E   06B0               ADD      SP,SP,#+24
   \   00000740   C3E3               B        ??PaintProc_2
   2540                    break;   
   2541                    
   2542                    
   2543          
   2544                    
   2545                    case ProcWOUT:
   2546                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_31:
   \   00000742   82B0               SUB      SP,SP,#+8
   \   00000744   0920               MOVS     R0,#+9
   \   00000746   0090               STR      R0,[SP, #+0]
   \   00000748   1323               MOVS     R3,#+19
   \   0000074A   3A00               MOVS     R2,R7
   \   0000074C   D21C               ADDS     R2,R2,#+3
   \   0000074E   1206               LSLS     R2,R2,#+24
   \   00000750   120E               LSRS     R2,R2,#+24
   \   00000752   2100               MOVS     R1,R4
   \   00000754   491C               ADDS     R1,R1,#+1
   \   00000756   0906               LSLS     R1,R1,#+24
   \   00000758   090E               LSRS     R1,R1,#+24
   \   0000075A   E048               LDR      R0,??PaintProc_32  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   0000075C   ........           BL       CopyToCanvasPoint
   \   00000760   02B0               ADD      SP,SP,#+8
   2547                        if (Proc->Nr>=0)
   \   00000762   0120               MOVS     R0,#+1
   \   00000764   0299               LDR      R1,[SP, #+8]
   \   00000766   0856               LDRSB    R0,[R1, R0]
   \   00000768   0028               CMP      R0,#+0
   \   0000076A   14D4               BMI      ??PaintProc_33
   2548                        {
   2549                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000076C   0222               MOVS     R2,#+2
   \   0000076E   6946               MOV      R1,SP
   \   00000770   0120               MOVS     R0,#+1
   \   00000772   029B               LDR      R3,[SP, #+8]
   \   00000774   1856               LDRSB    R0,[R3, R0]
   \   00000776   0006               LSLS     R0,R0,#+24
   \   00000778   000E               LSRS     R0,R0,#+24
   \   0000077A   ........           BL       CharToStr
   \   0000077E   0600               MOVS     R6,R0
   2550                          txt[ind]='.';
   \   00000780   6D46               MOV      R5,SP
   \   00000782   A919               ADDS     R1,R5,R6
   \   00000784   2E20               MOVS     R0,#+46
   \   00000786   0870               STRB     R0,[R1, #+0]
   2551                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000788   0222               MOVS     R2,#+2
   \   0000078A   491C               ADDS     R1,R1,#+1
   \   0000078C   0298               LDR      R0,[SP, #+8]
   \   0000078E   007A               LDRB     R0,[R0, #+8]
   \   00000790   ........           BL       CharToStr
   \   00000794   09E0               B        ??PaintProc_34
   2552                        }else{
   2553                          txt[0]='b';
   \                     ??PaintProc_33:
   \   00000796   6D46               MOV      R5,SP
   \   00000798   6220               MOVS     R0,#+98
   \   0000079A   2870               STRB     R0,[R5, #+0]
   2554                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   0000079C   0222               MOVS     R2,#+2
   \   0000079E   6D1C               ADDS     R5,R5,#+1
   \   000007A0   2900               MOVS     R1,R5
   \   000007A2   0298               LDR      R0,[SP, #+8]
   \   000007A4   007A               LDRB     R0,[R0, #+8]
   \   000007A6   ........           BL       CharToStr
   2555                        } 
   2556                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_34:
   \   000007AA   82B0               SUB      SP,SP,#+8
   \   000007AC   0020               MOVS     R0,#+0
   \   000007AE   0090               STR      R0,[SP, #+0]
   \   000007B0   7821               MOVS     R1,#+120
   \   000007B2   03B4               PUSH     {R0,R1}
   \   000007B4   0C21               MOVS     R1,#+12
   \   000007B6   0520               MOVS     R0,#+5
   \   000007B8   03B4               PUSH     {R0,R1}
   \   000007BA   3B00               MOVS     R3,R7
   \   000007BC   0B33               ADDS     R3,R3,#+11
   \   000007BE   2200               MOVS     R2,R4
   \   000007C0   121D               ADDS     R2,R2,#+4
   \   000007C2   1206               LSLS     R2,R2,#+24
   \   000007C4   120E               LSRS     R2,R2,#+24
   \   000007C6   0221               MOVS     R1,#+2
   \   000007C8   06A8               ADD      R0,SP,#+24
   \   000007CA   ........           BL       Label
   \   000007CE   06B0               ADD      SP,SP,#+24
   2557                        txt[0]='Q'; txt[1]=0;
   \   000007D0   6D46               MOV      R5,SP
   \   000007D2   5120               MOVS     R0,#+81
   \   000007D4   2870               STRB     R0,[R5, #+0]
   \   000007D6   0020               MOVS     R0,#+0
   \   000007D8   6870               STRB     R0,[R5, #+1]
   2558                        Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000007DA   82B0               SUB      SP,SP,#+8
   \   000007DC   0090               STR      R0,[SP, #+0]
   \   000007DE   7821               MOVS     R1,#+120
   \   000007E0   03B4               PUSH     {R0,R1}
   \   000007E2   0621               MOVS     R1,#+6
   \   000007E4   0120               MOVS     R0,#+1
   \   000007E6   03B4               PUSH     {R0,R1}
   \   000007E8   BF1C               ADDS     R7,R7,#+2
   \   000007EA   3B00               MOVS     R3,R7
   \   000007EC   0834               ADDS     R4,R4,#+8
   \   000007EE   2200               MOVS     R2,R4
   \   000007F0   1206               LSLS     R2,R2,#+24
   \   000007F2   120E               LSRS     R2,R2,#+24
   \   000007F4   0221               MOVS     R1,#+2
   \   000007F6   06A8               ADD      R0,SP,#+24
   \   000007F8   ........           BL       Label
   \   000007FC   06B0               ADD      SP,SP,#+24
   \   000007FE   64E3               B        ??PaintProc_2
   2559                    break;
   2560                    
   2561                    
   2562                    
   2563                    case ProcWOUTS:
   2564                        CopyToCanvasPoint((char*)ProcWOUTS_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_35:
   \   00000800   82B0               SUB      SP,SP,#+8
   \   00000802   0920               MOVS     R0,#+9
   \   00000804   0090               STR      R0,[SP, #+0]
   \   00000806   1323               MOVS     R3,#+19
   \   00000808   3A00               MOVS     R2,R7
   \   0000080A   D21C               ADDS     R2,R2,#+3
   \   0000080C   1206               LSLS     R2,R2,#+24
   \   0000080E   120E               LSRS     R2,R2,#+24
   \   00000810   2100               MOVS     R1,R4
   \   00000812   491C               ADDS     R1,R1,#+1
   \   00000814   0906               LSLS     R1,R1,#+24
   \   00000816   090E               LSRS     R1,R1,#+24
   \   00000818   B148               LDR      R0,??PaintProc_32+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 168
   \   0000081A   ........           BL       CopyToCanvasPoint
   \   0000081E   02B0               ADD      SP,SP,#+8
   2565                        if (Proc->Nr>=0)
   \   00000820   0120               MOVS     R0,#+1
   \   00000822   0299               LDR      R1,[SP, #+8]
   \   00000824   0856               LDRSB    R0,[R1, R0]
   \   00000826   0028               CMP      R0,#+0
   \   00000828   14D4               BMI      ??PaintProc_36
   2566                        {
   2567                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   0000082A   0222               MOVS     R2,#+2
   \   0000082C   6946               MOV      R1,SP
   \   0000082E   0120               MOVS     R0,#+1
   \   00000830   029B               LDR      R3,[SP, #+8]
   \   00000832   1856               LDRSB    R0,[R3, R0]
   \   00000834   0006               LSLS     R0,R0,#+24
   \   00000836   000E               LSRS     R0,R0,#+24
   \   00000838   ........           BL       CharToStr
   \   0000083C   0600               MOVS     R6,R0
   2568                          txt[ind]='.';
   \   0000083E   6D46               MOV      R5,SP
   \   00000840   A919               ADDS     R1,R5,R6
   \   00000842   2E20               MOVS     R0,#+46
   \   00000844   0870               STRB     R0,[R1, #+0]
   2569                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000846   0222               MOVS     R2,#+2
   \   00000848   491C               ADDS     R1,R1,#+1
   \   0000084A   0298               LDR      R0,[SP, #+8]
   \   0000084C   007A               LDRB     R0,[R0, #+8]
   \   0000084E   ........           BL       CharToStr
   \   00000852   09E0               B        ??PaintProc_37
   2570                        }else{
   2571                          txt[0]='b';
   \                     ??PaintProc_36:
   \   00000854   6D46               MOV      R5,SP
   \   00000856   6220               MOVS     R0,#+98
   \   00000858   2870               STRB     R0,[R5, #+0]
   2572                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   0000085A   0222               MOVS     R2,#+2
   \   0000085C   6D1C               ADDS     R5,R5,#+1
   \   0000085E   2900               MOVS     R1,R5
   \   00000860   0298               LDR      R0,[SP, #+8]
   \   00000862   007A               LDRB     R0,[R0, #+8]
   \   00000864   ........           BL       CharToStr
   2573                        } 
   2574                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_37:
   \   00000868   82B0               SUB      SP,SP,#+8
   \   0000086A   0020               MOVS     R0,#+0
   \   0000086C   0090               STR      R0,[SP, #+0]
   \   0000086E   7821               MOVS     R1,#+120
   \   00000870   03B4               PUSH     {R0,R1}
   \   00000872   0C21               MOVS     R1,#+12
   \   00000874   0520               MOVS     R0,#+5
   \   00000876   03B4               PUSH     {R0,R1}
   \   00000878   0B37               ADDS     R7,R7,#+11
   \   0000087A   3B00               MOVS     R3,R7
   \   0000087C   241D               ADDS     R4,R4,#+4
   \   0000087E   2200               MOVS     R2,R4
   \   00000880   1206               LSLS     R2,R2,#+24
   \   00000882   120E               LSRS     R2,R2,#+24
   \   00000884   0221               MOVS     R1,#+2
   \   00000886   06A8               ADD      R0,SP,#+24
   \   00000888   ........           BL       Label
   \   0000088C   06B0               ADD      SP,SP,#+24
   \   0000088E   1CE3               B        ??PaintProc_2
   2575                        //txt[0]='Q'; txt[1]=0;
   2576                        //Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2577                    break;
   2578                    
   2579                    case ProcWOUTR:
   2580                        CopyToCanvasPoint((char*)ProcWOUTR_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_38:
   \   00000890   82B0               SUB      SP,SP,#+8
   \   00000892   0920               MOVS     R0,#+9
   \   00000894   0090               STR      R0,[SP, #+0]
   \   00000896   1323               MOVS     R3,#+19
   \   00000898   3A00               MOVS     R2,R7
   \   0000089A   D21C               ADDS     R2,R2,#+3
   \   0000089C   1206               LSLS     R2,R2,#+24
   \   0000089E   120E               LSRS     R2,R2,#+24
   \   000008A0   2100               MOVS     R1,R4
   \   000008A2   491C               ADDS     R1,R1,#+1
   \   000008A4   0906               LSLS     R1,R1,#+24
   \   000008A6   090E               LSRS     R1,R1,#+24
   \   000008A8   8E48               LDR      R0,??PaintProc_32+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 196
   \   000008AA   ........           BL       CopyToCanvasPoint
   \   000008AE   02B0               ADD      SP,SP,#+8
   2581                        if (Proc->Nr>=0)
   \   000008B0   0120               MOVS     R0,#+1
   \   000008B2   0299               LDR      R1,[SP, #+8]
   \   000008B4   0856               LDRSB    R0,[R1, R0]
   \   000008B6   0028               CMP      R0,#+0
   \   000008B8   CCD4               BMI      ??PaintProc_36
   2582                        {
   2583                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000008BA   0222               MOVS     R2,#+2
   \   000008BC   6946               MOV      R1,SP
   \   000008BE   0120               MOVS     R0,#+1
   \   000008C0   029B               LDR      R3,[SP, #+8]
   \   000008C2   1856               LDRSB    R0,[R3, R0]
   \   000008C4   0006               LSLS     R0,R0,#+24
   \   000008C6   000E               LSRS     R0,R0,#+24
   \   000008C8   ........           BL       CharToStr
   \   000008CC   0600               MOVS     R6,R0
   2584                          txt[ind]='.';
   \   000008CE   6D46               MOV      R5,SP
   \   000008D0   A919               ADDS     R1,R5,R6
   \   000008D2   2E20               MOVS     R0,#+46
   \   000008D4   0870               STRB     R0,[R1, #+0]
   2585                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   000008D6   0222               MOVS     R2,#+2
   \   000008D8   491C               ADDS     R1,R1,#+1
   \   000008DA   0298               LDR      R0,[SP, #+8]
   \   000008DC   007A               LDRB     R0,[R0, #+8]
   \   000008DE   ........           BL       CharToStr
   \   000008E2   C1E7               B        ??PaintProc_37
   2586                        }else{
   2587                          txt[0]='b';
   2588                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   2589                        } 
   2590                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2591                    break;  
   2592                    
   2593                    
   2594                    case ProcWOUTC:
   2595                        CopyToCanvasPoint((char*)ProcWOUTC_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_39:
   \   000008E4   82B0               SUB      SP,SP,#+8
   \   000008E6   0920               MOVS     R0,#+9
   \   000008E8   0090               STR      R0,[SP, #+0]
   \   000008EA   1323               MOVS     R3,#+19
   \   000008EC   3A00               MOVS     R2,R7
   \   000008EE   D21C               ADDS     R2,R2,#+3
   \   000008F0   1206               LSLS     R2,R2,#+24
   \   000008F2   120E               LSRS     R2,R2,#+24
   \   000008F4   2100               MOVS     R1,R4
   \   000008F6   491C               ADDS     R1,R1,#+1
   \   000008F8   0906               LSLS     R1,R1,#+24
   \   000008FA   090E               LSRS     R1,R1,#+24
   \   000008FC   2035               ADDS     R5,R5,#+32
   \   000008FE   2800               MOVS     R0,R5
   \   00000900   ........           BL       CopyToCanvasPoint
   \   00000904   02B0               ADD      SP,SP,#+8
   2596                        if (Proc->Nr>=0)
   \   00000906   0120               MOVS     R0,#+1
   \   00000908   0299               LDR      R1,[SP, #+8]
   \   0000090A   0856               LDRSB    R0,[R1, R0]
   \   0000090C   0028               CMP      R0,#+0
   \   0000090E   A1D4               BMI      ??PaintProc_36
   2597                        {
   2598                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000910   0222               MOVS     R2,#+2
   \   00000912   6946               MOV      R1,SP
   \   00000914   0120               MOVS     R0,#+1
   \   00000916   029B               LDR      R3,[SP, #+8]
   \   00000918   1856               LDRSB    R0,[R3, R0]
   \   0000091A   0006               LSLS     R0,R0,#+24
   \   0000091C   000E               LSRS     R0,R0,#+24
   \   0000091E   ........           BL       CharToStr
   \   00000922   0600               MOVS     R6,R0
   2599                          txt[ind]='.';
   \   00000924   6D46               MOV      R5,SP
   \   00000926   A919               ADDS     R1,R5,R6
   \   00000928   2E20               MOVS     R0,#+46
   \   0000092A   0870               STRB     R0,[R1, #+0]
   2600                          CharToStr(Proc->Tag.Port, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   0000092C   0222               MOVS     R2,#+2
   \   0000092E   491C               ADDS     R1,R1,#+1
   \   00000930   0298               LDR      R0,[SP, #+8]
   \   00000932   007A               LDRB     R0,[R0, #+8]
   \   00000934   ........           BL       CharToStr
   \   00000938   96E7               B        ??PaintProc_37
   2601                        }else{
   2602                          txt[0]='b';
   2603                          CharToStr(Proc->Tag.Port, &txt[1], 2); //(char Value, char *Vstring, char ill);
   2604                        } 
   2605                        Label(txt,2,x+4,y+11,5,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2606                    break; 
   2607                    
   2608                    case ProcSPK:
   2609                        CopyToCanvasPoint((char*)ProcSPK_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_40:
   \   0000093A   82B0               SUB      SP,SP,#+8
   \   0000093C   0920               MOVS     R0,#+9
   \   0000093E   0090               STR      R0,[SP, #+0]
   \   00000940   1323               MOVS     R3,#+19
   \   00000942   3A00               MOVS     R2,R7
   \   00000944   D21C               ADDS     R2,R2,#+3
   \   00000946   1206               LSLS     R2,R2,#+24
   \   00000948   120E               LSRS     R2,R2,#+24
   \   0000094A   2100               MOVS     R1,R4
   \   0000094C   491C               ADDS     R1,R1,#+1
   \   0000094E   0906               LSLS     R1,R1,#+24
   \   00000950   090E               LSRS     R1,R1,#+24
   \   00000952   3C35               ADDS     R5,R5,#+60
   \   00000954   2800               MOVS     R0,R5
   \   00000956   ........           BL       CopyToCanvasPoint
   \   0000095A   02B0               ADD      SP,SP,#+8
   2610                        CopyToCanvasPoint((char*)SPK_1[Proc->Tag.SpeakerType], x+3,y+13, 16,5); 
   \   0000095C   82B0               SUB      SP,SP,#+8
   \   0000095E   0520               MOVS     R0,#+5
   \   00000960   0090               STR      R0,[SP, #+0]
   \   00000962   1023               MOVS     R3,#+16
   \   00000964   0D37               ADDS     R7,R7,#+13
   \   00000966   3A00               MOVS     R2,R7
   \   00000968   1206               LSLS     R2,R2,#+24
   \   0000096A   120E               LSRS     R2,R2,#+24
   \   0000096C   E41C               ADDS     R4,R4,#+3
   \   0000096E   2100               MOVS     R1,R4
   \   00000970   0906               LSLS     R1,R1,#+24
   \   00000972   090E               LSRS     R1,R1,#+24
   \   00000974   9C20               MOVS     R0,#+156
   \   00000976   4000               LSLS     R0,R0,#+1        ;; #+312
   \   00000978   049C               LDR      R4,[SP, #+16]
   \   0000097A   247A               LDRB     R4,[R4, #+8]
   \   0000097C   0A25               MOVS     R5,#+10
   \   0000097E   6C43               MULS     R4,R5,R4
   \   00000980   594D               LDR      R5,??PaintProc_32+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000982   2C19               ADDS     R4,R5,R4
   \   00000984   2018               ADDS     R0,R4,R0
   \   00000986   ........           BL       CopyToCanvasPoint
   \   0000098A   02B0               ADD      SP,SP,#+8
   \   0000098C   9DE2               B        ??PaintProc_2
   2611          
   2612                    break;  
   2613          
   2614          
   2615                    
   2616                    
   2617                    case ProcSetScn:
   2618                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_41:
   \   0000098E   82B0               SUB      SP,SP,#+8
   \   00000990   0920               MOVS     R0,#+9
   \   00000992   0090               STR      R0,[SP, #+0]
   \   00000994   1323               MOVS     R3,#+19
   \   00000996   3A00               MOVS     R2,R7
   \   00000998   D21C               ADDS     R2,R2,#+3
   \   0000099A   1206               LSLS     R2,R2,#+24
   \   0000099C   120E               LSRS     R2,R2,#+24
   \   0000099E   2100               MOVS     R1,R4
   \   000009A0   491C               ADDS     R1,R1,#+1
   \   000009A2   0906               LSLS     R1,R1,#+24
   \   000009A4   090E               LSRS     R1,R1,#+24
   \   000009A6   4D48               LDR      R0,??PaintProc_32  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   000009A8   ........           BL       CopyToCanvasPoint
   \   000009AC   02B0               ADD      SP,SP,#+8
   2619                       if (Proc->Nr==0)
   \   000009AE   0120               MOVS     R0,#+1
   \   000009B0   0299               LDR      R1,[SP, #+8]
   \   000009B2   0856               LDRSB    R0,[R1, R0]
   \   000009B4   0028               CMP      R0,#+0
   \   000009B6   1BD1               BNE      ??PaintProc_42
   2620                        {
   2621                          txt[0]='0'; txt[1]='/'; txt[2]='1'; txt[3]=0; //(char Value, char *Vstring, char ill);
   \   000009B8   6D46               MOV      R5,SP
   \   000009BA   3020               MOVS     R0,#+48
   \   000009BC   2870               STRB     R0,[R5, #+0]
   \   000009BE   2F20               MOVS     R0,#+47
   \   000009C0   6870               STRB     R0,[R5, #+1]
   \   000009C2   3120               MOVS     R0,#+49
   \   000009C4   A870               STRB     R0,[R5, #+2]
   \   000009C6   0020               MOVS     R0,#+0
   \   000009C8   E870               STRB     R0,[R5, #+3]
   2622                          Label(txt,2,x+3,y+11,3,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000009CA   82B0               SUB      SP,SP,#+8
   \   000009CC   0090               STR      R0,[SP, #+0]
   \   000009CE   7821               MOVS     R1,#+120
   \   000009D0   03B4               PUSH     {R0,R1}
   \   000009D2   0C21               MOVS     R1,#+12
   \   000009D4   0320               MOVS     R0,#+3
   \   000009D6   03B4               PUSH     {R0,R1}
   \   000009D8   3B00               MOVS     R3,R7
   \   000009DA   0B33               ADDS     R3,R3,#+11
   \   000009DC   2200               MOVS     R2,R4
   \   000009DE   D21C               ADDS     R2,R2,#+3
   \   000009E0   1206               LSLS     R2,R2,#+24
   \   000009E2   120E               LSRS     R2,R2,#+24
   \   000009E4   0221               MOVS     R1,#+2
   \   000009E6   06A8               ADD      R0,SP,#+24
   \   000009E8   ........           BL       Label
   \   000009EC   06B0               ADD      SP,SP,#+24
   \   000009EE   1BE0               B        ??PaintProc_43
   2623                        }else{
   2624                          ind=CharToStr(Proc->Nr, txt, 3); //(char Value, char *Vstring, char ill);
   \                     ??PaintProc_42:
   \   000009F0   0322               MOVS     R2,#+3
   \   000009F2   6946               MOV      R1,SP
   \   000009F4   0120               MOVS     R0,#+1
   \   000009F6   029B               LDR      R3,[SP, #+8]
   \   000009F8   1856               LDRSB    R0,[R3, R0]
   \   000009FA   0006               LSLS     R0,R0,#+24
   \   000009FC   000E               LSRS     R0,R0,#+24
   \   000009FE   ........           BL       CharToStr
   2625                          Label(txt,2,x+4,y+11,2,12,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A02   82B0               SUB      SP,SP,#+8
   \   00000A04   0020               MOVS     R0,#+0
   \   00000A06   0090               STR      R0,[SP, #+0]
   \   00000A08   7821               MOVS     R1,#+120
   \   00000A0A   03B4               PUSH     {R0,R1}
   \   00000A0C   0C21               MOVS     R1,#+12
   \   00000A0E   0220               MOVS     R0,#+2
   \   00000A10   03B4               PUSH     {R0,R1}
   \   00000A12   3B00               MOVS     R3,R7
   \   00000A14   0B33               ADDS     R3,R3,#+11
   \   00000A16   2200               MOVS     R2,R4
   \   00000A18   121D               ADDS     R2,R2,#+4
   \   00000A1A   1206               LSLS     R2,R2,#+24
   \   00000A1C   120E               LSRS     R2,R2,#+24
   \   00000A1E   0100               MOVS     R1,R0
   \   00000A20   06A8               ADD      R0,SP,#+24
   \   00000A22   ........           BL       Label
   \   00000A26   06B0               ADD      SP,SP,#+24
   2626                        }
   2627                        
   2628                        txt[0]='S'; txt[1]=0;
   \                     ??PaintProc_43:
   \   00000A28   6D46               MOV      R5,SP
   \   00000A2A   5320               MOVS     R0,#+83
   \   00000A2C   2870               STRB     R0,[R5, #+0]
   \   00000A2E   0020               MOVS     R0,#+0
   \   00000A30   6870               STRB     R0,[R5, #+1]
   2629                        Label(txt,2,x+8,y+2,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A32   82B0               SUB      SP,SP,#+8
   \   00000A34   0090               STR      R0,[SP, #+0]
   \   00000A36   7821               MOVS     R1,#+120
   \   00000A38   03B4               PUSH     {R0,R1}
   \   00000A3A   0621               MOVS     R1,#+6
   \   00000A3C   0120               MOVS     R0,#+1
   \   00000A3E   03B4               PUSH     {R0,R1}
   \   00000A40   BF1C               ADDS     R7,R7,#+2
   \   00000A42   3B00               MOVS     R3,R7
   \   00000A44   0834               ADDS     R4,R4,#+8
   \   00000A46   2200               MOVS     R2,R4
   \   00000A48   1206               LSLS     R2,R2,#+24
   \   00000A4A   120E               LSRS     R2,R2,#+24
   \   00000A4C   0221               MOVS     R1,#+2
   \   00000A4E   06A8               ADD      R0,SP,#+24
   \   00000A50   ........           BL       Label
   \   00000A54   06B0               ADD      SP,SP,#+24
   \   00000A56   38E2               B        ??PaintProc_2
   2630                    break;             
   2631            
   2632                    case ProcInc:
   2633                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_44:
   \   00000A58   82B0               SUB      SP,SP,#+8
   \   00000A5A   0920               MOVS     R0,#+9
   \   00000A5C   0090               STR      R0,[SP, #+0]
   \   00000A5E   1323               MOVS     R3,#+19
   \   00000A60   3A00               MOVS     R2,R7
   \   00000A62   D21C               ADDS     R2,R2,#+3
   \   00000A64   1206               LSLS     R2,R2,#+24
   \   00000A66   120E               LSRS     R2,R2,#+24
   \   00000A68   2100               MOVS     R1,R4
   \   00000A6A   491C               ADDS     R1,R1,#+1
   \   00000A6C   0906               LSLS     R1,R1,#+24
   \   00000A6E   090E               LSRS     R1,R1,#+24
   \   00000A70   1A48               LDR      R0,??PaintProc_32  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   00000A72   ........           BL       CopyToCanvasPoint
   \   00000A76   02B0               ADD      SP,SP,#+8
   2634                        txt[0]='+'; txt[1]=0; txt[2]=0;
   \   00000A78   6D46               MOV      R5,SP
   \   00000A7A   2B20               MOVS     R0,#+43
   \   00000A7C   2870               STRB     R0,[R5, #+0]
   \   00000A7E   0020               MOVS     R0,#+0
   \   00000A80   6870               STRB     R0,[R5, #+1]
   \   00000A82   A870               STRB     R0,[R5, #+2]
   2635                        Label(txt,2,x+7,y+4,1,9,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A84   82B0               SUB      SP,SP,#+8
   \   00000A86   0090               STR      R0,[SP, #+0]
   \   00000A88   7821               MOVS     R1,#+120
   \   00000A8A   03B4               PUSH     {R0,R1}
   \   00000A8C   0921               MOVS     R1,#+9
   \   00000A8E   0120               MOVS     R0,#+1
   \   00000A90   03B4               PUSH     {R0,R1}
   \   00000A92   3B00               MOVS     R3,R7
   \   00000A94   1B1D               ADDS     R3,R3,#+4
   \   00000A96   2200               MOVS     R2,R4
   \   00000A98   D21D               ADDS     R2,R2,#+7
   \   00000A9A   1206               LSLS     R2,R2,#+24
   \   00000A9C   120E               LSRS     R2,R2,#+24
   \   00000A9E   0221               MOVS     R1,#+2
   \   00000AA0   06A8               ADD      R0,SP,#+24
   \   00000AA2   ........           BL       Label
   \   00000AA6   06B0               ADD      SP,SP,#+24
   2636                        txt[0]='S';txt[1]='c';txt[2]='n';
   \   00000AA8   5320               MOVS     R0,#+83
   \   00000AAA   2870               STRB     R0,[R5, #+0]
   \   00000AAC   6320               MOVS     R0,#+99
   \   00000AAE   6870               STRB     R0,[R5, #+1]
   \   00000AB0   6E20               MOVS     R0,#+110
   \   00000AB2   A870               STRB     R0,[R5, #+2]
   2637                        Label(txt,2,x+4,y+11,3,11,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000AB4   82B0               SUB      SP,SP,#+8
   \   00000AB6   0020               MOVS     R0,#+0
   \   00000AB8   0090               STR      R0,[SP, #+0]
   \   00000ABA   7821               MOVS     R1,#+120
   \   00000ABC   03B4               PUSH     {R0,R1}
   \   00000ABE   0B21               MOVS     R1,#+11
   \   00000AC0   0320               MOVS     R0,#+3
   \   00000AC2   03B4               PUSH     {R0,R1}
   \   00000AC4   0B37               ADDS     R7,R7,#+11
   \   00000AC6   3B00               MOVS     R3,R7
   \   00000AC8   241D               ADDS     R4,R4,#+4
   \   00000ACA   2200               MOVS     R2,R4
   \   00000ACC   1206               LSLS     R2,R2,#+24
   \   00000ACE   120E               LSRS     R2,R2,#+24
   \   00000AD0   0221               MOVS     R1,#+2
   \   00000AD2   06A8               ADD      R0,SP,#+24
   \   00000AD4   ........           BL       Label
   \   00000AD8   06B0               ADD      SP,SP,#+24
   \   00000ADA   F6E1               B        ??PaintProc_2
   \                     ??PaintProc_32:
   \   00000ADC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   00000AE0   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 168
   \   00000AE4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 196
   \   00000AE8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   2638                         
   2639                   break;               
   2640            
   2641                    case ProcDec:
   2642                        CopyToCanvasPoint((char*)ProcSet_graf, x+1, y+3, 19,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_45:
   \   00000AEC   82B0               SUB      SP,SP,#+8
   \   00000AEE   0920               MOVS     R0,#+9
   \   00000AF0   0090               STR      R0,[SP, #+0]
   \   00000AF2   1323               MOVS     R3,#+19
   \   00000AF4   3A00               MOVS     R2,R7
   \   00000AF6   D21C               ADDS     R2,R2,#+3
   \   00000AF8   1206               LSLS     R2,R2,#+24
   \   00000AFA   120E               LSRS     R2,R2,#+24
   \   00000AFC   2100               MOVS     R1,R4
   \   00000AFE   491C               ADDS     R1,R1,#+1
   \   00000B00   0906               LSLS     R1,R1,#+24
   \   00000B02   090E               LSRS     R1,R1,#+24
   \   00000B04   E148               LDR      R0,??PaintProc_46  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   \   00000B06   ........           BL       CopyToCanvasPoint
   \   00000B0A   02B0               ADD      SP,SP,#+8
   2643                      
   2644                        txt[0]='-'; txt[1]='-'; txt[2]=0;
   \   00000B0C   2D20               MOVS     R0,#+45
   \   00000B0E   6D46               MOV      R5,SP
   \   00000B10   2870               STRB     R0,[R5, #+0]
   \   00000B12   6870               STRB     R0,[R5, #+1]
   \   00000B14   0020               MOVS     R0,#+0
   \   00000B16   A870               STRB     R0,[R5, #+2]
   2645                        Label(txt,2,x+7,y+4,2,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000B18   82B0               SUB      SP,SP,#+8
   \   00000B1A   0090               STR      R0,[SP, #+0]
   \   00000B1C   7821               MOVS     R1,#+120
   \   00000B1E   03B4               PUSH     {R0,R1}
   \   00000B20   0621               MOVS     R1,#+6
   \   00000B22   0220               MOVS     R0,#+2
   \   00000B24   03B4               PUSH     {R0,R1}
   \   00000B26   3B00               MOVS     R3,R7
   \   00000B28   1B1D               ADDS     R3,R3,#+4
   \   00000B2A   2200               MOVS     R2,R4
   \   00000B2C   D21D               ADDS     R2,R2,#+7
   \   00000B2E   1206               LSLS     R2,R2,#+24
   \   00000B30   120E               LSRS     R2,R2,#+24
   \   00000B32   0100               MOVS     R1,R0
   \   00000B34   06A8               ADD      R0,SP,#+24
   \   00000B36   ........           BL       Label
   \   00000B3A   06B0               ADD      SP,SP,#+24
   2646                        txt[0]='S';txt[1]='c';txt[2]='n';
   \   00000B3C   5320               MOVS     R0,#+83
   \   00000B3E   2870               STRB     R0,[R5, #+0]
   \   00000B40   6320               MOVS     R0,#+99
   \   00000B42   6870               STRB     R0,[R5, #+1]
   \   00000B44   6E20               MOVS     R0,#+110
   \   00000B46   A870               STRB     R0,[R5, #+2]
   2647                        Label(txt,2,x+4,y+11,3,11,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000B48   82B0               SUB      SP,SP,#+8
   \   00000B4A   0020               MOVS     R0,#+0
   \   00000B4C   0090               STR      R0,[SP, #+0]
   \   00000B4E   7821               MOVS     R1,#+120
   \   00000B50   03B4               PUSH     {R0,R1}
   \   00000B52   0B21               MOVS     R1,#+11
   \   00000B54   0320               MOVS     R0,#+3
   \   00000B56   03B4               PUSH     {R0,R1}
   \   00000B58   0B37               ADDS     R7,R7,#+11
   \   00000B5A   3B00               MOVS     R3,R7
   \   00000B5C   241D               ADDS     R4,R4,#+4
   \   00000B5E   2200               MOVS     R2,R4
   \   00000B60   1206               LSLS     R2,R2,#+24
   \   00000B62   120E               LSRS     R2,R2,#+24
   \   00000B64   0221               MOVS     R1,#+2
   \   00000B66   06A8               ADD      R0,SP,#+24
   \   00000B68   ........           BL       Label
   \   00000B6C   06B0               ADD      SP,SP,#+24
   \   00000B6E   ACE1               B        ??PaintProc_2
   2648                       
   2649                    break;    
   2650                    
   2651                    case ProcTimerSet:
   2652                        
   2653                        CopyToCanvasPoint((char*)ProcTime_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_47:
   \   00000B70   82B0               SUB      SP,SP,#+8
   \   00000B72   0820               MOVS     R0,#+8
   \   00000B74   0090               STR      R0,[SP, #+0]
   \   00000B76   1323               MOVS     R3,#+19
   \   00000B78   3A00               MOVS     R2,R7
   \   00000B7A   D21C               ADDS     R2,R2,#+3
   \   00000B7C   1206               LSLS     R2,R2,#+24
   \   00000B7E   120E               LSRS     R2,R2,#+24
   \   00000B80   2100               MOVS     R1,R4
   \   00000B82   491C               ADDS     R1,R1,#+1
   \   00000B84   0906               LSLS     R1,R1,#+24
   \   00000B86   090E               LSRS     R1,R1,#+24
   \   00000B88   5835               ADDS     R5,R5,#+88
   \   00000B8A   2800               MOVS     R0,R5
   \   00000B8C   ........           BL       CopyToCanvasPoint
   \   00000B90   02B0               ADD      SP,SP,#+8
   2654                      
   2655                        ind=FloToStr(Proc->Tag.SetCounter, txt, 5); //(char Value, char *Vstring, char ill);
   \   00000B92   0522               MOVS     R2,#+5
   \   00000B94   6946               MOV      R1,SP
   \   00000B96   0D00               MOVS     R5,R1
   \   00000B98   1600               MOVS     R6,R2
   \   00000B9A   0298               LDR      R0,[SP, #+8]
   \   00000B9C   8068               LDR      R0,[R0, #+8]
   \   00000B9E   ........           BL       __aeabi_ui2f
   \   00000BA2   3200               MOVS     R2,R6
   \   00000BA4   2900               MOVS     R1,R5
   \   00000BA6   ........           BL       FloToStr
   2656                        PixPlab=Label(txt,0,x+2,y+11,4,17,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000BAA   0B37               ADDS     R7,R7,#+11
   \   00000BAC   82B0               SUB      SP,SP,#+8
   \   00000BAE   0020               MOVS     R0,#+0
   \   00000BB0   0090               STR      R0,[SP, #+0]
   \   00000BB2   7821               MOVS     R1,#+120
   \   00000BB4   03B4               PUSH     {R0,R1}
   \   00000BB6   1121               MOVS     R1,#+17
   \   00000BB8   0420               MOVS     R0,#+4
   \   00000BBA   03B4               PUSH     {R0,R1}
   \   00000BBC   3B00               MOVS     R3,R7
   \   00000BBE   2200               MOVS     R2,R4
   \   00000BC0   921C               ADDS     R2,R2,#+2
   \   00000BC2   1206               LSLS     R2,R2,#+24
   \   00000BC4   120E               LSRS     R2,R2,#+24
   \   00000BC6   0021               MOVS     R1,#+0
   \   00000BC8   06A8               ADD      R0,SP,#+24
   \   00000BCA   ........           BL       Label
   \   00000BCE   06B0               ADD      SP,SP,#+24
   \   00000BD0   0200               MOVS     R2,R0
   2657                        if(PixPlab<14) Label("s",0,x+3+PixPlab,y+11,1,4,0,120,0);
   \   00000BD2   0E28               CMP      R0,#+14
   \   00000BD4   00D3               BCC      .+4
   \   00000BD6   78E1               B        ??PaintProc_2
   \   00000BD8   82B0               SUB      SP,SP,#+8
   \   00000BDA   0020               MOVS     R0,#+0
   \   00000BDC   0090               STR      R0,[SP, #+0]
   \   00000BDE   7821               MOVS     R1,#+120
   \   00000BE0   03B4               PUSH     {R0,R1}
   \   00000BE2   0421               MOVS     R1,#+4
   \   00000BE4   0120               MOVS     R0,#+1
   \   00000BE6   03B4               PUSH     {R0,R1}
   \   00000BE8   3B00               MOVS     R3,R7
   \   00000BEA   A218               ADDS     R2,R4,R2
   \   00000BEC   D21C               ADDS     R2,R2,#+3
   \   00000BEE   1206               LSLS     R2,R2,#+24
   \   00000BF0   120E               LSRS     R2,R2,#+24
   \   00000BF2   0021               MOVS     R1,#+0
   \   00000BF4   B6A0               ADR      R0,??PaintProc_48  ;; 0x73, 0x00, 0x00, 0x00
   \   00000BF6   ........           BL       Label
   \   00000BFA   06B0               ADD      SP,SP,#+24
   \   00000BFC   65E1               B        ??PaintProc_2
   2658                    break;   
   2659                    
   2660          
   2661                      
   2662                    case ProcClock:
   2663                      
   2664                        CopyToCanvasPoint((char*)ProcClock_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_49:
   \   00000BFE   82B0               SUB      SP,SP,#+8
   \   00000C00   0820               MOVS     R0,#+8
   \   00000C02   0090               STR      R0,[SP, #+0]
   \   00000C04   1323               MOVS     R3,#+19
   \   00000C06   3A00               MOVS     R2,R7
   \   00000C08   D21C               ADDS     R2,R2,#+3
   \   00000C0A   1206               LSLS     R2,R2,#+24
   \   00000C0C   120E               LSRS     R2,R2,#+24
   \   00000C0E   2100               MOVS     R1,R4
   \   00000C10   491C               ADDS     R1,R1,#+1
   \   00000C12   0906               LSLS     R1,R1,#+24
   \   00000C14   090E               LSRS     R1,R1,#+24
   \   00000C16   2800               MOVS     R0,R5
   \   00000C18   7030               ADDS     R0,R0,#+112
   \   00000C1A   ........           BL       CopyToCanvasPoint
   \   00000C1E   02B0               ADD      SP,SP,#+8
   2665          
   2666                        Label((char*)ShortDate[Proc->Tag.ClkPrcType],0,x+2,y+11,1,17,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000C20   0B37               ADDS     R7,R7,#+11
   \   00000C22   82B0               SUB      SP,SP,#+8
   \   00000C24   0020               MOVS     R0,#+0
   \   00000C26   0090               STR      R0,[SP, #+0]
   \   00000C28   7821               MOVS     R1,#+120
   \   00000C2A   03B4               PUSH     {R0,R1}
   \   00000C2C   1121               MOVS     R1,#+17
   \   00000C2E   0120               MOVS     R0,#+1
   \   00000C30   03B4               PUSH     {R0,R1}
   \   00000C32   3B00               MOVS     R3,R7
   \   00000C34   2200               MOVS     R2,R4
   \   00000C36   921C               ADDS     R2,R2,#+2
   \   00000C38   1206               LSLS     R2,R2,#+24
   \   00000C3A   120E               LSRS     R2,R2,#+24
   \   00000C3C   0021               MOVS     R1,#+0
   \   00000C3E   CE20               MOVS     R0,#+206
   \   00000C40   8000               LSLS     R0,R0,#+2        ;; #+824
   \   00000C42   8446               MOV      R12,R0
   \   00000C44   0898               LDR      R0,[SP, #+32]
   \   00000C46   067A               LDRB     R6,[R0, #+8]
   \   00000C48   0320               MOVS     R0,#+3
   \   00000C4A   4643               MULS     R6,R0,R6
   \   00000C4C   AD19               ADDS     R5,R5,R6
   \   00000C4E   6046               MOV      R0,R12
   \   00000C50   2818               ADDS     R0,R5,R0
   \   00000C52   ........           BL       Label
   \   00000C56   06B0               ADD      SP,SP,#+24
   2667                        CharToStr(Proc->Tag.ClkPrcVal, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000C58   0222               MOVS     R2,#+2
   \   00000C5A   6946               MOV      R1,SP
   \   00000C5C   0298               LDR      R0,[SP, #+8]
   \   00000C5E   407A               LDRB     R0,[R0, #+9]
   \   00000C60   ........           BL       CharToStr
   2668                        Label(txt,0,x+10,y+11,5,9,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000C64   82B0               SUB      SP,SP,#+8
   \   00000C66   0020               MOVS     R0,#+0
   \   00000C68   0090               STR      R0,[SP, #+0]
   \   00000C6A   7821               MOVS     R1,#+120
   \   00000C6C   03B4               PUSH     {R0,R1}
   \   00000C6E   0921               MOVS     R1,#+9
   \   00000C70   0520               MOVS     R0,#+5
   \   00000C72   03B4               PUSH     {R0,R1}
   \   00000C74   3B00               MOVS     R3,R7
   \   00000C76   0A34               ADDS     R4,R4,#+10
   \   00000C78   2200               MOVS     R2,R4
   \   00000C7A   1206               LSLS     R2,R2,#+24
   \   00000C7C   120E               LSRS     R2,R2,#+24
   \   00000C7E   0021               MOVS     R1,#+0
   \   00000C80   06A8               ADD      R0,SP,#+24
   \   00000C82   ........           BL       Label
   \   00000C86   06B0               ADD      SP,SP,#+24
   \   00000C88   1FE1               B        ??PaintProc_2
   2669                                
   2670                      break;         
   2671                    
   2672          
   2673                    case ProcDay:
   2674                      
   2675                        CopyToCanvasPoint((char*)ProcDay_graf, x+1, y+3, 19,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_50:
   \   00000C8A   82B0               SUB      SP,SP,#+8
   \   00000C8C   0820               MOVS     R0,#+8
   \   00000C8E   0090               STR      R0,[SP, #+0]
   \   00000C90   1323               MOVS     R3,#+19
   \   00000C92   3A00               MOVS     R2,R7
   \   00000C94   D21C               ADDS     R2,R2,#+3
   \   00000C96   1206               LSLS     R2,R2,#+24
   \   00000C98   120E               LSRS     R2,R2,#+24
   \   00000C9A   2100               MOVS     R1,R4
   \   00000C9C   491C               ADDS     R1,R1,#+1
   \   00000C9E   0906               LSLS     R1,R1,#+24
   \   00000CA0   090E               LSRS     R1,R1,#+24
   \   00000CA2   8835               ADDS     R5,R5,#+136
   \   00000CA4   2800               MOVS     R0,R5
   \   00000CA6   ........           BL       CopyToCanvasPoint
   \   00000CAA   02B0               ADD      SP,SP,#+8
   2676                        Label((char*)DeyOfWeekStr[g_leng][Proc->Tag.DayOfWeek],0,x+4,y+11,2,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000CAC   82B0               SUB      SP,SP,#+8
   \   00000CAE   0020               MOVS     R0,#+0
   \   00000CB0   0090               STR      R0,[SP, #+0]
   \   00000CB2   7821               MOVS     R1,#+120
   \   00000CB4   03B4               PUSH     {R0,R1}
   \   00000CB6   0F21               MOVS     R1,#+15
   \   00000CB8   0220               MOVS     R0,#+2
   \   00000CBA   03B4               PUSH     {R0,R1}
   \   00000CBC   0B37               ADDS     R7,R7,#+11
   \   00000CBE   3B00               MOVS     R3,R7
   \   00000CC0   241D               ADDS     R4,R4,#+4
   \   00000CC2   2200               MOVS     R2,R4
   \   00000CC4   1206               LSLS     R2,R2,#+24
   \   00000CC6   120E               LSRS     R2,R2,#+24
   \   00000CC8   0021               MOVS     R1,#+0
   \   00000CCA   B020               MOVS     R0,#+176
   \   00000CCC   4000               LSLS     R0,R0,#+1        ;; #+352
   \   00000CCE   089C               LDR      R4,[SP, #+32]
   \   00000CD0   247A               LDRB     R4,[R4, #+8]
   \   00000CD2   6400               LSLS     R4,R4,#+1
   \   00000CD4   7F4D               LDR      R5,??PaintProc_48+0x4  ;; g_leng
   \   00000CD6   2D68               LDR      R5,[R5, #+0]
   \   00000CD8   2D01               LSLS     R5,R5,#+4
   \   00000CDA   7F4E               LDR      R6,??PaintProc_48+0x8  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000CDC   7519               ADDS     R5,R6,R5
   \   00000CDE   2C19               ADDS     R4,R5,R4
   \   00000CE0   2018               ADDS     R0,R4,R0
   \   00000CE2   ........           BL       Label
   \   00000CE6   06B0               ADD      SP,SP,#+24
   \   00000CE8   EFE0               B        ??PaintProc_2
   2677                     
   2678                      break;         
   2679                    
   2680                    
   2681                    case ProcConstAnal:
   2682                      
   2683                        //CopyToCanvasPoint((char*)ProcConstAnal_graf, x+1, y+3, 19,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   2684                        
   2685          
   2686                        H_line(x+2 ,y+2,19,1);
   \                     ??PaintProc_51:
   \   00000CEA   0123               MOVS     R3,#+1
   \   00000CEC   1322               MOVS     R2,#+19
   \   00000CEE   3900               MOVS     R1,R7
   \   00000CF0   891C               ADDS     R1,R1,#+2
   \   00000CF2   2000               MOVS     R0,R4
   \   00000CF4   801C               ADDS     R0,R0,#+2
   \   00000CF6   0006               LSLS     R0,R0,#+24
   \   00000CF8   000E               LSRS     R0,R0,#+24
   \   00000CFA   ........           BL       H_line
   2687                        V_line(x+20 ,y+3,6,1);
   \   00000CFE   3D00               MOVS     R5,R7
   \   00000D00   ED1C               ADDS     R5,R5,#+3
   \   00000D02   0123               MOVS     R3,#+1
   \   00000D04   0622               MOVS     R2,#+6
   \   00000D06   2900               MOVS     R1,R5
   \   00000D08   2000               MOVS     R0,R4
   \   00000D0A   1430               ADDS     R0,R0,#+20
   \   00000D0C   0006               LSLS     R0,R0,#+24
   \   00000D0E   000E               LSRS     R0,R0,#+24
   \   00000D10   ........           BL       V_line
   2688                        
   2689                        ind=sIntToStr(Proc->Tag.ConstAnValue, txt);
   \   00000D14   6946               MOV      R1,SP
   \   00000D16   0820               MOVS     R0,#+8
   \   00000D18   029A               LDR      R2,[SP, #+8]
   \   00000D1A   105E               LDRSH    R0,[R2, R0]
   \   00000D1C   ........           BL       sIntToStr
   \   00000D20   0600               MOVS     R6,R0
   2690                        
   2691                        if (ind>4)
   \   00000D22   0528               CMP      R0,#+5
   \   00000D24   29D3               BCC      ??PaintProc_52
   2692                        { 
   2693                          Label(txt,1,x+18,y+11,ind-4 ,4,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000D26   1234               ADDS     R4,R4,#+18
   \   00000D28   82B0               SUB      SP,SP,#+8
   \   00000D2A   0020               MOVS     R0,#+0
   \   00000D2C   0090               STR      R0,[SP, #+0]
   \   00000D2E   7821               MOVS     R1,#+120
   \   00000D30   03B4               PUSH     {R0,R1}
   \   00000D32   0421               MOVS     R1,#+4
   \   00000D34   3000               MOVS     R0,R6
   \   00000D36   001F               SUBS     R0,R0,#+4
   \   00000D38   0006               LSLS     R0,R0,#+24
   \   00000D3A   000E               LSRS     R0,R0,#+24
   \   00000D3C   03B4               PUSH     {R0,R1}
   \   00000D3E   0B37               ADDS     R7,R7,#+11
   \   00000D40   3B00               MOVS     R3,R7
   \   00000D42   2200               MOVS     R2,R4
   \   00000D44   1206               LSLS     R2,R2,#+24
   \   00000D46   120E               LSRS     R2,R2,#+24
   \   00000D48   0121               MOVS     R1,#+1
   \   00000D4A   06A8               ADD      R0,SP,#+24
   \   00000D4C   ........           BL       Label
   \   00000D50   06B0               ADD      SP,SP,#+24
   2694                          Label(&(txt[ind-4]),1,x+18,y+3,4 ,16,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000D52   82B0               SUB      SP,SP,#+8
   \   00000D54   0020               MOVS     R0,#+0
   \   00000D56   0090               STR      R0,[SP, #+0]
   \   00000D58   7821               MOVS     R1,#+120
   \   00000D5A   03B4               PUSH     {R0,R1}
   \   00000D5C   1021               MOVS     R1,#+16
   \   00000D5E   0420               MOVS     R0,#+4
   \   00000D60   03B4               PUSH     {R0,R1}
   \   00000D62   2B00               MOVS     R3,R5
   \   00000D64   2200               MOVS     R2,R4
   \   00000D66   1206               LSLS     R2,R2,#+24
   \   00000D68   120E               LSRS     R2,R2,#+24
   \   00000D6A   0121               MOVS     R1,#+1
   \   00000D6C   06A8               ADD      R0,SP,#+24
   \   00000D6E   8019               ADDS     R0,R0,R6
   \   00000D70   001F               SUBS     R0,R0,#+4
   \   00000D72   ........           BL       Label
   \   00000D76   06B0               ADD      SP,SP,#+24
   \   00000D78   A7E0               B        ??PaintProc_2
   2695                        }else{
   2696                          Label(txt,1,x+19,y+3,ind,16,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_52:
   \   00000D7A   82B0               SUB      SP,SP,#+8
   \   00000D7C   0020               MOVS     R0,#+0
   \   00000D7E   0090               STR      R0,[SP, #+0]
   \   00000D80   7821               MOVS     R1,#+120
   \   00000D82   03B4               PUSH     {R0,R1}
   \   00000D84   1021               MOVS     R1,#+16
   \   00000D86   3000               MOVS     R0,R6
   \   00000D88   03B4               PUSH     {R0,R1}
   \   00000D8A   2B00               MOVS     R3,R5
   \   00000D8C   1334               ADDS     R4,R4,#+19
   \   00000D8E   2200               MOVS     R2,R4
   \   00000D90   1206               LSLS     R2,R2,#+24
   \   00000D92   120E               LSRS     R2,R2,#+24
   \   00000D94   0121               MOVS     R1,#+1
   \   00000D96   06A8               ADD      R0,SP,#+24
   \   00000D98   ........           BL       Label
   \   00000D9C   06B0               ADD      SP,SP,#+24
   \   00000D9E   94E0               B        ??PaintProc_2
   2697                         
   2698                        }
   2699                        //Label((char*)DeyOfWeekStr[g_leng][Proc->Tag.DayOfWeek],0,x+4,y+11,2,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   2700                         
   2701                       
   2702                        
   2703                        
   2704                      break;   
   2705                      
   2706                     case ProcGetReg:
   2707                        CopyToCanvasPoint((char*)ProcGetAnal_graf, x+1, y+3, 19,17);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_53:
   \   00000DA0   82B0               SUB      SP,SP,#+8
   \   00000DA2   1120               MOVS     R0,#+17
   \   00000DA4   0090               STR      R0,[SP, #+0]
   \   00000DA6   1323               MOVS     R3,#+19
   \   00000DA8   3A00               MOVS     R2,R7
   \   00000DAA   D21C               ADDS     R2,R2,#+3
   \   00000DAC   1206               LSLS     R2,R2,#+24
   \   00000DAE   120E               LSRS     R2,R2,#+24
   \   00000DB0   2100               MOVS     R1,R4
   \   00000DB2   491C               ADDS     R1,R1,#+1
   \   00000DB4   0906               LSLS     R1,R1,#+24
   \   00000DB6   090E               LSRS     R1,R1,#+24
   \   00000DB8   AF20               MOVS     R0,#+175
   \   00000DBA   8000               LSLS     R0,R0,#+2        ;; #+700
   \   00000DBC   2818               ADDS     R0,R5,R0
   \   00000DBE   ........           BL       CopyToCanvasPoint
   \   00000DC2   02B0               ADD      SP,SP,#+8
   2708                        if (Proc->Nr>=0)
   \   00000DC4   0120               MOVS     R0,#+1
   \   00000DC6   0299               LDR      R1,[SP, #+8]
   \   00000DC8   0856               LDRSB    R0,[R1, R0]
   \   00000DCA   0028               CMP      R0,#+0
   \   00000DCC   14D4               BMI      ??PaintProc_54
   2709                        {
   2710                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000DCE   0222               MOVS     R2,#+2
   \   00000DD0   6946               MOV      R1,SP
   \   00000DD2   0120               MOVS     R0,#+1
   \   00000DD4   029B               LDR      R3,[SP, #+8]
   \   00000DD6   1856               LDRSB    R0,[R3, R0]
   \   00000DD8   0006               LSLS     R0,R0,#+24
   \   00000DDA   000E               LSRS     R0,R0,#+24
   \   00000DDC   ........           BL       CharToStr
   \   00000DE0   0600               MOVS     R6,R0
   2711                          txt[ind]='.';
   \   00000DE2   6D46               MOV      R5,SP
   \   00000DE4   A919               ADDS     R1,R5,R6
   \   00000DE6   2E20               MOVS     R0,#+46
   \   00000DE8   0870               STRB     R0,[R1, #+0]
   2712                          CharToStr(Proc->Tag.RegNr, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000DEA   0222               MOVS     R2,#+2
   \   00000DEC   491C               ADDS     R1,R1,#+1
   \   00000DEE   0298               LDR      R0,[SP, #+8]
   \   00000DF0   007A               LDRB     R0,[R0, #+8]
   \   00000DF2   ........           BL       CharToStr
   \   00000DF6   09E0               B        ??PaintProc_55
   2713                        }else{
   2714                          txt[0]='a';
   \                     ??PaintProc_54:
   \   00000DF8   6D46               MOV      R5,SP
   \   00000DFA   6120               MOVS     R0,#+97
   \   00000DFC   2870               STRB     R0,[R5, #+0]
   2715                          CharToStr(Proc->Tag.RegNr, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000DFE   0222               MOVS     R2,#+2
   \   00000E00   6D1C               ADDS     R5,R5,#+1
   \   00000E02   2900               MOVS     R1,R5
   \   00000E04   0298               LDR      R0,[SP, #+8]
   \   00000E06   007A               LDRB     R0,[R0, #+8]
   \   00000E08   ........           BL       CharToStr
   2716                        }
   2717                        
   2718                        Label(txt,2,x+2, y+4,5,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_55:
   \   00000E0C   82B0               SUB      SP,SP,#+8
   \   00000E0E   0020               MOVS     R0,#+0
   \   00000E10   0090               STR      R0,[SP, #+0]
   \   00000E12   7821               MOVS     R1,#+120
   \   00000E14   03B4               PUSH     {R0,R1}
   \   00000E16   0F21               MOVS     R1,#+15
   \   00000E18   0520               MOVS     R0,#+5
   \   00000E1A   03B4               PUSH     {R0,R1}
   \   00000E1C   3F1D               ADDS     R7,R7,#+4
   \   00000E1E   3B00               MOVS     R3,R7
   \   00000E20   A41C               ADDS     R4,R4,#+2
   \   00000E22   2200               MOVS     R2,R4
   \   00000E24   1206               LSLS     R2,R2,#+24
   \   00000E26   120E               LSRS     R2,R2,#+24
   \   00000E28   0221               MOVS     R1,#+2
   \   00000E2A   06A8               ADD      R0,SP,#+24
   \   00000E2C   ........           BL       Label
   \   00000E30   06B0               ADD      SP,SP,#+24
   \   00000E32   4AE0               B        ??PaintProc_2
   2719          
   2720                      break;   
   2721                      
   2722                      case ProcSetReg:
   2723                        CopyToCanvasPoint((char*)ProcSetAnal_graf, x+1, y+3, 19,17);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \                     ??PaintProc_56:
   \   00000E34   82B0               SUB      SP,SP,#+8
   \   00000E36   1120               MOVS     R0,#+17
   \   00000E38   0090               STR      R0,[SP, #+0]
   \   00000E3A   1323               MOVS     R3,#+19
   \   00000E3C   3A00               MOVS     R2,R7
   \   00000E3E   D21C               ADDS     R2,R2,#+3
   \   00000E40   1206               LSLS     R2,R2,#+24
   \   00000E42   120E               LSRS     R2,R2,#+24
   \   00000E44   2100               MOVS     R1,R4
   \   00000E46   491C               ADDS     R1,R1,#+1
   \   00000E48   0906               LSLS     R1,R1,#+24
   \   00000E4A   090E               LSRS     R1,R1,#+24
   \   00000E4C   BC20               MOVS     R0,#+188
   \   00000E4E   8000               LSLS     R0,R0,#+2        ;; #+752
   \   00000E50   2818               ADDS     R0,R5,R0
   \   00000E52   ........           BL       CopyToCanvasPoint
   \   00000E56   02B0               ADD      SP,SP,#+8
   2724                        if (Proc->Nr>=0)
   \   00000E58   0120               MOVS     R0,#+1
   \   00000E5A   0299               LDR      R1,[SP, #+8]
   \   00000E5C   0856               LDRSB    R0,[R1, R0]
   \   00000E5E   0028               CMP      R0,#+0
   \   00000E60   16D4               BMI      ??PaintProc_57
   2725                        {
   2726                          ind=CharToStr(Proc->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000E62   0222               MOVS     R2,#+2
   \   00000E64   6946               MOV      R1,SP
   \   00000E66   0120               MOVS     R0,#+1
   \   00000E68   029B               LDR      R3,[SP, #+8]
   \   00000E6A   1856               LDRSB    R0,[R3, R0]
   \   00000E6C   0006               LSLS     R0,R0,#+24
   \   00000E6E   000E               LSRS     R0,R0,#+24
   \   00000E70   ........           BL       CharToStr
   \   00000E74   0600               MOVS     R6,R0
   2727                          txt[ind]='.';
   \   00000E76   6D46               MOV      R5,SP
   \   00000E78   A919               ADDS     R1,R5,R6
   \   00000E7A   2E20               MOVS     R0,#+46
   \   00000E7C   0870               STRB     R0,[R1, #+0]
   2728                          CharToStr(Proc->Tag.RegNr, &txt[ind+1], 2); //(char Value, char *Vstring, char ill);
   \   00000E7E   0222               MOVS     R2,#+2
   \   00000E80   491C               ADDS     R1,R1,#+1
   \   00000E82   0298               LDR      R0,[SP, #+8]
   \   00000E84   007A               LDRB     R0,[R0, #+8]
   \   00000E86   ........           BL       CharToStr
   \   00000E8A   0BE0               B        ??PaintProc_58
   \                     ??PaintProc_46:
   \   00000E8C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 140
   2729                        }else{
   2730                          txt[0]='a';
   \                     ??PaintProc_57:
   \   00000E90   6D46               MOV      R5,SP
   \   00000E92   6120               MOVS     R0,#+97
   \   00000E94   2870               STRB     R0,[R5, #+0]
   2731                          CharToStr(Proc->Tag.RegNr, &txt[1], 2); //(char Value, char *Vstring, char ill);
   \   00000E96   0222               MOVS     R2,#+2
   \   00000E98   6D1C               ADDS     R5,R5,#+1
   \   00000E9A   2900               MOVS     R1,R5
   \   00000E9C   0298               LDR      R0,[SP, #+8]
   \   00000E9E   007A               LDRB     R0,[R0, #+8]
   \   00000EA0   ........           BL       CharToStr
   2732                        }
   2733                        Label(txt,2,x+3, y+4,5,15,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??PaintProc_58:
   \   00000EA4   82B0               SUB      SP,SP,#+8
   \   00000EA6   0020               MOVS     R0,#+0
   \   00000EA8   0090               STR      R0,[SP, #+0]
   \   00000EAA   7821               MOVS     R1,#+120
   \   00000EAC   03B4               PUSH     {R0,R1}
   \   00000EAE   0F21               MOVS     R1,#+15
   \   00000EB0   0520               MOVS     R0,#+5
   \   00000EB2   03B4               PUSH     {R0,R1}
   \   00000EB4   3F1D               ADDS     R7,R7,#+4
   \   00000EB6   3B00               MOVS     R3,R7
   \   00000EB8   E41C               ADDS     R4,R4,#+3
   \   00000EBA   2200               MOVS     R2,R4
   \   00000EBC   1206               LSLS     R2,R2,#+24
   \   00000EBE   120E               LSRS     R2,R2,#+24
   \   00000EC0   0221               MOVS     R1,#+2
   \   00000EC2   06A8               ADD      R0,SP,#+24
   \   00000EC4   ........           BL       Label
   \   00000EC8   06B0               ADD      SP,SP,#+24
   2734          
   2735                      break;   
   2736                      
   2737                      
   2738                    }
   2739                    
   2740                    
   2741                    
   2742                }//_______________________________________________________________________
   \                     ??PaintProc_2:
   \   00000ECA   FEBC               POP      {R1-R7}
   \   00000ECC   01BC               POP      {R0}
   \   00000ECE   0047               BX       R0               ;; return
   \                     ??PaintProc_48:
   \   00000ED0   73000000           DC8      0x73, 0x00, 0x00, 0x00
   \   00000ED4   ........           DC32     g_leng
   \   00000ED8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   2743                
   2744                
   2745                
   2746          
   2747          //lader **************************************************************************************************************
   2748                char LaderLine=0;
   2749                char LaderCol=0;
   2750                //*----------------------------------------------------------------------------
   2751                #define MaxRow 3
   2752                #define MaxCol 3
   2753                

   \                                 In section Debug.txt, align 4, keep-with-next
   2754                void Lader_Paint(void)
   2755                {  
   \                     Lader_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   2756                  
   2757                char txt[5];
   2758                 
   2759                
   2760                 List_Paint("Program ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   78A0               ADR      R0,??Lader_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   7548               LDR      R0,??Lader_Paint_0+0x4  ;; `?<Constant "Info ">` + 44
   \   0000001E   ........           BL       List_Paint
   \   00000022   0AB0               ADD      SP,SP,#+40
   \   00000024   0025               MOVS     R5,#+0
   \   00000026   3DE0               B        ??Lader_Paint_1
   2761          
   2762                //siatka
   2763                
   2764                for (char i=0; i<4; i++)
   2765                {
   2766                    H_line(3,44+i*21,58,2);   
   \                     ??Lader_Paint_2:
   \   00000028   2E00               MOVS     R6,R5
   \   0000002A   1520               MOVS     R0,#+21
   \   0000002C   4643               MULS     R6,R0,R6
   \   0000002E   0223               MOVS     R3,#+2
   \   00000030   3A22               MOVS     R2,#+58
   \   00000032   3100               MOVS     R1,R6
   \   00000034   2C31               ADDS     R1,R1,#+44
   \   00000036   0320               MOVS     R0,#+3
   \   00000038   ........           BL       H_line
   \   0000003C   6E48               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   0000003E   0078               LDRB     R0,[R0, #+0]
   \   00000040   0028               CMP      R0,#+0
   \   00000042   2CD1               BNE      ??Lader_Paint_3
   \   00000044   2800               MOVS     R0,R5
   \   00000046   0328               CMP      R0,#+3
   \   00000048   29D2               BCS      ??Lader_Paint_3
   2767                    if ((LaderCol==0) && (i<3))
   2768                    { 
   2769                       CharToStr(LaderLine+3-i, txt, 3); //(char Value, char *Vstring, char ill);
   \   0000004A   0322               MOVS     R2,#+3
   \   0000004C   01A9               ADD      R1,SP,#+4
   \   0000004E   6B48               LDR      R0,??Lader_Paint_0+0xC  ;; TextToChangeLength + 16
   \   00000050   0078               LDRB     R0,[R0, #+0]
   \   00000052   C01C               ADDS     R0,R0,#+3
   \   00000054   2B00               MOVS     R3,R5
   \   00000056   C01A               SUBS     R0,R0,R3
   \   00000058   0006               LSLS     R0,R0,#+24
   \   0000005A   000E               LSRS     R0,R0,#+24
   \   0000005C   ........           BL       CharToStr
   2770                       Label(txt,0,3,51+i*21,4,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000060   3400               MOVS     R4,R6
   \   00000062   3334               ADDS     R4,R4,#+51
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   6921               MOVS     R1,#+105
   \   0000006C   1020               MOVS     R0,#+16
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   1721               MOVS     R1,#+23
   \   00000072   0420               MOVS     R0,#+4
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   2300               MOVS     R3,R4
   \   00000078   0322               MOVS     R2,#+3
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   07A8               ADD      R0,SP,#+28
   \   0000007E   ........           BL       Label
   \   00000082   06B0               ADD      SP,SP,#+24
   2771          
   2772                       H_line(17,50+i*21,5,1); 
   \   00000084   0123               MOVS     R3,#+1
   \   00000086   0522               MOVS     R2,#+5
   \   00000088   3236               ADDS     R6,R6,#+50
   \   0000008A   3100               MOVS     R1,R6
   \   0000008C   1120               MOVS     R0,#+17
   \   0000008E   ........           BL       H_line
   2773                       H_line(17,51+i*21,5,1); 
   \   00000092   0123               MOVS     R3,#+1
   \   00000094   0522               MOVS     R2,#+5
   \   00000096   2100               MOVS     R1,R4
   \   00000098   1120               MOVS     R0,#+17
   \   0000009A   ........           BL       H_line
   2774                    }
   2775                }
   \                     ??Lader_Paint_3:
   \   0000009E   6D1C               ADDS     R5,R5,#+1
   \   000000A0   2D06               LSLS     R5,R5,#+24
   \   000000A2   2D0E               LSRS     R5,R5,#+24
   \                     ??Lader_Paint_1:
   \   000000A4   2800               MOVS     R0,R5
   \   000000A6   0428               CMP      R0,#+4
   \   000000A8   BED3               BCC      ??Lader_Paint_2
   2776                for (char i=0; i<4; i++)
   \   000000AA   0024               MOVS     R4,#+0
   \   000000AC   1425               MOVS     R5,#+20
   \   000000AE   0BE0               B        ??Lader_Paint_4
   2777                {
   2778                    V_line(1+i*20,44,64,2);         
   \                     ??Lader_Paint_5:
   \   000000B0   0223               MOVS     R3,#+2
   \   000000B2   4022               MOVS     R2,#+64
   \   000000B4   2C21               MOVS     R1,#+44
   \   000000B6   6843               MULS     R0,R5,R0
   \   000000B8   401C               ADDS     R0,R0,#+1
   \   000000BA   0006               LSLS     R0,R0,#+24
   \   000000BC   000E               LSRS     R0,R0,#+24
   \   000000BE   ........           BL       V_line
   2779                }
   \   000000C2   641C               ADDS     R4,R4,#+1
   \   000000C4   2406               LSLS     R4,R4,#+24
   \   000000C6   240E               LSRS     R4,R4,#+24
   \                     ??Lader_Paint_4:
   \   000000C8   2000               MOVS     R0,R4
   \   000000CA   0428               CMP      R0,#+4
   \   000000CC   F0D3               BCC      ??Lader_Paint_5
   \   000000CE   4A48               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   000000D0   0078               LDRB     R0,[R0, #+0]
   \   000000D2   0028               CMP      R0,#+0
   \   000000D4   11D1               BNE      ??Lader_Paint_6
   2780                //------koniec siatki
   2781                
   2782                
   2783                if (LaderCol==0)
   2784                {
   2785                   V_line(16,44,64,1);
   \   000000D6   0123               MOVS     R3,#+1
   \   000000D8   4022               MOVS     R2,#+64
   \   000000DA   2C21               MOVS     R1,#+44
   \   000000DC   1020               MOVS     R0,#+16
   \   000000DE   ........           BL       V_line
   2786                   V_line(17,44,64,1);  
   \   000000E2   0123               MOVS     R3,#+1
   \   000000E4   4022               MOVS     R2,#+64
   \   000000E6   2C21               MOVS     R1,#+44
   \   000000E8   1120               MOVS     R0,#+17
   \   000000EA   ........           BL       V_line
   2787                   V_line(18,44,64,1); 
   \   000000EE   0123               MOVS     R3,#+1
   \   000000F0   4022               MOVS     R2,#+64
   \   000000F2   2C21               MOVS     R1,#+44
   \   000000F4   1220               MOVS     R0,#+18
   \   000000F6   ........           BL       V_line
   2788                }
   2789                
   2790                CharToStr(LaderCol, txt, 2); //(char Value, char *Vstring, char ill);
   \                     ??Lader_Paint_6:
   \   000000FA   0222               MOVS     R2,#+2
   \   000000FC   01A9               ADD      R1,SP,#+4
   \   000000FE   3E48               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   00000100   0078               LDRB     R0,[R0, #+0]
   \   00000102   ........           BL       CharToStr
   2791                Label(txt,0,8,35,8,23,16,105,0);
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   0020               MOVS     R0,#+0
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   6921               MOVS     R1,#+105
   \   0000010E   1020               MOVS     R0,#+16
   \   00000110   03B4               PUSH     {R0,R1}
   \   00000112   1721               MOVS     R1,#+23
   \   00000114   0820               MOVS     R0,#+8
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   2323               MOVS     R3,#+35
   \   0000011A   0200               MOVS     R2,R0
   \   0000011C   0021               MOVS     R1,#+0
   \   0000011E   07A8               ADD      R0,SP,#+28
   \   00000120   ........           BL       Label
   \   00000124   06B0               ADD      SP,SP,#+24
   2792                  
   2793                
   2794                  //Label(Speech[g_leng].UruchomienieSter,0,2,j+(Label_move*2)-8,15,8,16,96,0); break;
   2795                   
   2796                      char LabelButt[2];
   2797                      LabelButt[1]=0;
   \   00000126   6C46               MOV      R4,SP
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   6070               STRB     R0,[R4, #+1]
   2798                      LabelButt[0]=30;
   \   0000012C   1E20               MOVS     R0,#+30
   \   0000012E   2070               STRB     R0,[R4, #+0]
   2799                      Button(LabelButt,22,23,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000130   82B0               SUB      SP,SP,#+8
   \   00000132   1220               MOVS     R0,#+18
   \   00000134   0090               STR      R0,[SP, #+0]
   \   00000136   2B00               MOVS     R3,R5
   \   00000138   1722               MOVS     R2,#+23
   \   0000013A   1621               MOVS     R1,#+22
   \   0000013C   02A8               ADD      R0,SP,#+8
   \   0000013E   ........           BL       Button
   \   00000142   02B0               ADD      SP,SP,#+8
   2800                      LabelButt[0]=31;
   \   00000144   1F20               MOVS     R0,#+31
   \   00000146   2070               STRB     R0,[R4, #+0]
   2801                      Button(LabelButt,22,3,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   1220               MOVS     R0,#+18
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   2B00               MOVS     R3,R5
   \   00000150   0322               MOVS     R2,#+3
   \   00000152   1621               MOVS     R1,#+22
   \   00000154   02A8               ADD      R0,SP,#+8
   \   00000156   ........           BL       Button
   \   0000015A   02B0               ADD      SP,SP,#+8
   2802                      LabelButt[0]='>';
   \   0000015C   3E20               MOVS     R0,#+62
   \   0000015E   2070               STRB     R0,[R4, #+0]
   2803                      Button(LabelButt,42,13,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000160   82B0               SUB      SP,SP,#+8
   \   00000162   1220               MOVS     R0,#+18
   \   00000164   0090               STR      R0,[SP, #+0]
   \   00000166   2B00               MOVS     R3,R5
   \   00000168   0D22               MOVS     R2,#+13
   \   0000016A   2A21               MOVS     R1,#+42
   \   0000016C   02A8               ADD      R0,SP,#+8
   \   0000016E   ........           BL       Button
   \   00000172   02B0               ADD      SP,SP,#+8
   2804                      LabelButt[0]='<';
   \   00000174   3C20               MOVS     R0,#+60
   \   00000176   2070               STRB     R0,[R4, #+0]
   2805                      Button(LabelButt,2,13,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   1220               MOVS     R0,#+18
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   2B00               MOVS     R3,R5
   \   00000180   0D22               MOVS     R2,#+13
   \   00000182   0221               MOVS     R1,#+2
   \   00000184   02A8               ADD      R0,SP,#+8
   \   00000186   ........           BL       Button
   \   0000018A   02B0               ADD      SP,SP,#+8
   2806                     
   2807                  char row, col;
   2808          
   2809          
   2810              
   2811                  row=LaderLine; 
   \   0000018C   1B48               LDR      R0,??Lader_Paint_0+0xC  ;; TextToChangeLength + 16
   \   0000018E   0478               LDRB     R4,[R0, #+0]
   2812                  for (int j=(MaxRow-1); j>=0; j--)
   \   00000190   0225               MOVS     R5,#+2
   \   00000192   24E0               B        ??Lader_Paint_7
   2813                  {
   2814                    
   2815                    col=LaderCol;
   2816                    for (int i=0; i<MaxCol; i++)
   2817                    {
   2818                      
   2819                      //if (LaderCol) PaintProc(21+j*20,44+i*21,&gProg.Line[row].Proc[col-1]);
   2820                      if ((LaderCol) || ((LaderCol==0)&&(i!=0)))  PaintProc(1+i*20,44+j*21,&gProg.Line[row].Proc[col-1]);
   \                     ??Lader_Paint_8:
   \   00000194   1848               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   00000196   0078               LDRB     R0,[R0, #+0]
   \   00000198   0028               CMP      R0,#+0
   \   0000019A   01D1               BNE      ??Lader_Paint_9
   \   0000019C   002E               CMP      R6,#+0
   \   0000019E   14D0               BEQ      ??Lader_Paint_10
   \                     ??Lader_Paint_9:
   \   000001A0   3800               MOVS     R0,R7
   \   000001A2   1821               MOVS     R1,#+24
   \   000001A4   4843               MULS     R0,R1,R0
   \   000001A6   2100               MOVS     R1,R4
   \   000001A8   F022               MOVS     R2,#+240
   \   000001AA   5143               MULS     R1,R2,R1
   \   000001AC   144A               LDR      R2,??Lader_Paint_0+0x10  ;; gProg
   \   000001AE   5118               ADDS     R1,R2,R1
   \   000001B0   0A18               ADDS     R2,R1,R0
   \   000001B2   1521               MOVS     R1,#+21
   \   000001B4   6943               MULS     R1,R5,R1
   \   000001B6   2C31               ADDS     R1,R1,#+44
   \   000001B8   0906               LSLS     R1,R1,#+24
   \   000001BA   090E               LSRS     R1,R1,#+24
   \   000001BC   1420               MOVS     R0,#+20
   \   000001BE   7043               MULS     R0,R6,R0
   \   000001C0   401C               ADDS     R0,R0,#+1
   \   000001C2   0006               LSLS     R0,R0,#+24
   \   000001C4   000E               LSRS     R0,R0,#+24
   \   000001C6   ........           BL       PaintProc
   2821                      col++;
   \                     ??Lader_Paint_10:
   \   000001CA   7F1C               ADDS     R7,R7,#+1
   \   000001CC   3F06               LSLS     R7,R7,#+24
   \   000001CE   3F0E               LSRS     R7,R7,#+24
   2822                    }
   \   000001D0   761C               ADDS     R6,R6,#+1
   \                     ??Lader_Paint_11:
   \   000001D2   032E               CMP      R6,#+3
   \   000001D4   DEDB               BLT      ??Lader_Paint_8
   2823                    row++;
   \   000001D6   641C               ADDS     R4,R4,#+1
   \   000001D8   2406               LSLS     R4,R4,#+24
   \   000001DA   240E               LSRS     R4,R4,#+24
   \   000001DC   6D1E               SUBS     R5,R5,#+1
   \                     ??Lader_Paint_7:
   \   000001DE   002D               CMP      R5,#+0
   \   000001E0   03D4               BMI      ??Lader_Paint_12
   \   000001E2   0548               LDR      R0,??Lader_Paint_0+0x8  ;; TextToChangeLength + 17
   \   000001E4   0778               LDRB     R7,[R0, #+0]
   \   000001E6   0026               MOVS     R6,#+0
   \   000001E8   F3E7               B        ??Lader_Paint_11
   2824                  }
   2825                  
   2826                }//________________________________________________________________________
   \                     ??Lader_Paint_12:
   \   000001EA   FEBC               POP      {R1-R7}
   \   000001EC   01BC               POP      {R0}
   \   000001EE   0047               BX       R0               ;; return
   \                     ??Lader_Paint_0:
   \   000001F0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001F4   ........           DC32     `?<Constant "Info ">` + 44
   \   000001F8   ........           DC32     TextToChangeLength + 17
   \   000001FC   ........           DC32     TextToChangeLength + 16
   \   00000200   ........           DC32     gProg
   2827          
   2828              
   2829                //*-----------------------------------------------------------------------------
   2830                long long int Touch_EventTime;
   2831                char ChoseRow, ChoseCol;

   \                                 In section Debug.txt, align 4, keep-with-next
   2832                void Lader_Event(void)
   2833                {
   \                     Lader_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   6D46               MOV      R5,SP
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   6870               STRB     R0,[R5, #+1]
   2834                 char LabelButt[2];
   2835                      LabelButt[1]=0;
   2836                      LabelButt[0]='>';
   \   00000008   3E20               MOVS     R0,#+62
   \   0000000A   2870               STRB     R0,[R5, #+0]
   2837                      if ((Button(LabelButt,42,13,20,18)) && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) && (LaderCol<=MaxPrcInLine-MaxCol))
   \   0000000C   82B0               SUB      SP,SP,#+8
   \   0000000E   1220               MOVS     R0,#+18
   \   00000010   0090               STR      R0,[SP, #+0]
   \   00000012   1423               MOVS     R3,#+20
   \   00000014   0D22               MOVS     R2,#+13
   \   00000016   2A21               MOVS     R1,#+42
   \   00000018   02A8               ADD      R0,SP,#+8
   \   0000001A   ........           BL       Button
   \   0000001E   02B0               ADD      SP,SP,#+8
   \   00000020   0028               CMP      R0,#+0
   \   00000022   1DD0               BEQ      ??Lader_Event_0
   \   00000024   A94C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   00000026   2000               MOVS     R0,R4
   \   00000028   3830               ADDS     R0,R0,#+56
   \   0000002A   C0C8               LDM      R0!,{R6,R7}
   \   0000002C   A848               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   0000002E   03C8               LDM      R0!,{R0,R1}
   \   00000030   C822               MOVS     R2,#+200
   \   00000032   0023               MOVS     R3,#+0
   \   00000034   9219               ADDS     R2,R2,R6
   \   00000036   7B41               ADCS     R3,R3,R7
   \   00000038   8B42               CMP      R3,R1
   \   0000003A   07D3               BCC      ??Lader_Event_2
   \   0000003C   01D8               BHI      ??Lader_Event_3
   \   0000003E   8242               CMP      R2,R0
   \   00000040   04D3               BCC      ??Lader_Event_2
   \                     ??Lader_Event_3:
   \   00000042   B942               CMP      R1,R7
   \   00000044   0CD8               BHI      ??Lader_Event_0
   \   00000046   01D3               BCC      ??Lader_Event_2
   \   00000048   B042               CMP      R0,R6
   \   0000004A   09D2               BCS      ??Lader_Event_0
   \                     ??Lader_Event_2:
   \   0000004C   627C               LDRB     R2,[R4, #+17]
   \   0000004E   082A               CMP      R2,#+8
   \   00000050   06D2               BCS      ??Lader_Event_0
   2838                      {
   2839                        Touch_EventTime=g_counter;
   \   00000052   2300               MOVS     R3,R4
   \   00000054   3833               ADDS     R3,R3,#+56
   \   00000056   03C3               STM      R3!,{R0,R1}
   2840                        LaderCol++;    //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000058   521C               ADDS     R2,R2,#+1
   \   0000005A   6274               STRB     R2,[R4, #+17]
   2841                        MenuPaint();
   \   0000005C   ........           BL       MenuPaint
   2842                      }
   2843                      LabelButt[0]='<';
   \                     ??Lader_Event_0:
   \   00000060   3C20               MOVS     R0,#+60
   \   00000062   2870               STRB     R0,[R5, #+0]
   2844                      if ((Button(LabelButt,2,13,20,18))  && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) && (LaderCol>0))            
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   1220               MOVS     R0,#+18
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   1423               MOVS     R3,#+20
   \   0000006C   0D22               MOVS     R2,#+13
   \   0000006E   0221               MOVS     R1,#+2
   \   00000070   02A8               ADD      R0,SP,#+8
   \   00000072   ........           BL       Button
   \   00000076   02B0               ADD      SP,SP,#+8
   \   00000078   0028               CMP      R0,#+0
   \   0000007A   1DD0               BEQ      ??Lader_Event_4
   \   0000007C   934C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   0000007E   2000               MOVS     R0,R4
   \   00000080   3830               ADDS     R0,R0,#+56
   \   00000082   C0C8               LDM      R0!,{R6,R7}
   \   00000084   9248               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000086   03C8               LDM      R0!,{R0,R1}
   \   00000088   C822               MOVS     R2,#+200
   \   0000008A   0023               MOVS     R3,#+0
   \   0000008C   9219               ADDS     R2,R2,R6
   \   0000008E   7B41               ADCS     R3,R3,R7
   \   00000090   8B42               CMP      R3,R1
   \   00000092   07D3               BCC      ??Lader_Event_5
   \   00000094   01D8               BHI      ??Lader_Event_6
   \   00000096   8242               CMP      R2,R0
   \   00000098   04D3               BCC      ??Lader_Event_5
   \                     ??Lader_Event_6:
   \   0000009A   B942               CMP      R1,R7
   \   0000009C   0CD8               BHI      ??Lader_Event_4
   \   0000009E   01D3               BCC      ??Lader_Event_5
   \   000000A0   B042               CMP      R0,R6
   \   000000A2   09D2               BCS      ??Lader_Event_4
   \                     ??Lader_Event_5:
   \   000000A4   627C               LDRB     R2,[R4, #+17]
   \   000000A6   002A               CMP      R2,#+0
   \   000000A8   06D0               BEQ      ??Lader_Event_4
   2845                      {
   2846                        Touch_EventTime=g_counter;
   \   000000AA   2300               MOVS     R3,R4
   \   000000AC   3833               ADDS     R3,R3,#+56
   \   000000AE   03C3               STM      R3!,{R0,R1}
   2847                        LaderCol--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B0   501E               SUBS     R0,R2,#+1
   \   000000B2   6074               STRB     R0,[R4, #+17]
   2848                        MenuPaint();
   \   000000B4   ........           BL       MenuPaint
   2849                      } 
   2850                      
   2851                      LabelButt[0]=30;
   \                     ??Lader_Event_4:
   \   000000B8   1E20               MOVS     R0,#+30
   \   000000BA   2870               STRB     R0,[R5, #+0]
   2852                      if ((Button(LabelButt,22,23,20,18))  && ((g_counter>Touch_EventTime+50) || (Touch_EventTime>g_counter)) && (LaderLine>0))            
   \   000000BC   82B0               SUB      SP,SP,#+8
   \   000000BE   1220               MOVS     R0,#+18
   \   000000C0   0090               STR      R0,[SP, #+0]
   \   000000C2   1423               MOVS     R3,#+20
   \   000000C4   1722               MOVS     R2,#+23
   \   000000C6   1621               MOVS     R1,#+22
   \   000000C8   02A8               ADD      R0,SP,#+8
   \   000000CA   ........           BL       Button
   \   000000CE   02B0               ADD      SP,SP,#+8
   \   000000D0   0028               CMP      R0,#+0
   \   000000D2   1DD0               BEQ      ??Lader_Event_7
   \   000000D4   7D4C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   000000D6   2000               MOVS     R0,R4
   \   000000D8   3830               ADDS     R0,R0,#+56
   \   000000DA   C0C8               LDM      R0!,{R6,R7}
   \   000000DC   7C48               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000000DE   03C8               LDM      R0!,{R0,R1}
   \   000000E0   3222               MOVS     R2,#+50
   \   000000E2   0023               MOVS     R3,#+0
   \   000000E4   9219               ADDS     R2,R2,R6
   \   000000E6   7B41               ADCS     R3,R3,R7
   \   000000E8   8B42               CMP      R3,R1
   \   000000EA   07D3               BCC      ??Lader_Event_8
   \   000000EC   01D8               BHI      ??Lader_Event_9
   \   000000EE   8242               CMP      R2,R0
   \   000000F0   04D3               BCC      ??Lader_Event_8
   \                     ??Lader_Event_9:
   \   000000F2   B942               CMP      R1,R7
   \   000000F4   0CD8               BHI      ??Lader_Event_7
   \   000000F6   01D3               BCC      ??Lader_Event_8
   \   000000F8   B042               CMP      R0,R6
   \   000000FA   09D2               BCS      ??Lader_Event_7
   \                     ??Lader_Event_8:
   \   000000FC   227C               LDRB     R2,[R4, #+16]
   \   000000FE   002A               CMP      R2,#+0
   \   00000100   06D0               BEQ      ??Lader_Event_7
   2853                      {
   2854                        Touch_EventTime=g_counter;
   \   00000102   2300               MOVS     R3,R4
   \   00000104   3833               ADDS     R3,R3,#+56
   \   00000106   03C3               STM      R3!,{R0,R1}
   2855                        LaderLine--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000108   501E               SUBS     R0,R2,#+1
   \   0000010A   2074               STRB     R0,[R4, #+16]
   2856                        MenuPaint();
   \   0000010C   ........           BL       MenuPaint
   2857                      } 
   2858                      
   2859                      LabelButt[0]=31;
   \                     ??Lader_Event_7:
   \   00000110   1F20               MOVS     R0,#+31
   \   00000112   2870               STRB     R0,[R5, #+0]
   2860                      if ((Button(LabelButt,22,3,20,18)) && ((g_counter>Touch_EventTime+50) || (Touch_EventTime>g_counter)) && (LaderLine<MaxPrcLines-MaxRow))
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   1220               MOVS     R0,#+18
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   1423               MOVS     R3,#+20
   \   0000011C   0322               MOVS     R2,#+3
   \   0000011E   1621               MOVS     R1,#+22
   \   00000120   02A8               ADD      R0,SP,#+8
   \   00000122   ........           BL       Button
   \   00000126   02B0               ADD      SP,SP,#+8
   \   00000128   0028               CMP      R0,#+0
   \   0000012A   1DD0               BEQ      ??Lader_Event_10
   \   0000012C   674C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   0000012E   2000               MOVS     R0,R4
   \   00000130   3830               ADDS     R0,R0,#+56
   \   00000132   C0C8               LDM      R0!,{R6,R7}
   \   00000134   6648               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000136   03C8               LDM      R0!,{R0,R1}
   \   00000138   3222               MOVS     R2,#+50
   \   0000013A   0023               MOVS     R3,#+0
   \   0000013C   9219               ADDS     R2,R2,R6
   \   0000013E   7B41               ADCS     R3,R3,R7
   \   00000140   8B42               CMP      R3,R1
   \   00000142   07D3               BCC      ??Lader_Event_11
   \   00000144   01D8               BHI      ??Lader_Event_12
   \   00000146   8242               CMP      R2,R0
   \   00000148   04D3               BCC      ??Lader_Event_11
   \                     ??Lader_Event_12:
   \   0000014A   B942               CMP      R1,R7
   \   0000014C   0CD8               BHI      ??Lader_Event_10
   \   0000014E   01D3               BCC      ??Lader_Event_11
   \   00000150   B042               CMP      R0,R6
   \   00000152   09D2               BCS      ??Lader_Event_10
   \                     ??Lader_Event_11:
   \   00000154   227C               LDRB     R2,[R4, #+16]
   \   00000156   C52A               CMP      R2,#+197
   \   00000158   06D2               BCS      ??Lader_Event_10
   2861                      {
   2862                        Touch_EventTime=g_counter;
   \   0000015A   2300               MOVS     R3,R4
   \   0000015C   3833               ADDS     R3,R3,#+56
   \   0000015E   03C3               STM      R3!,{R0,R1}
   2863                        LaderLine++;    
   \   00000160   521C               ADDS     R2,R2,#+1
   \   00000162   2274               STRB     R2,[R4, #+16]
   2864                        MenuPaint();
   \   00000164   ........           BL       MenuPaint
   2865                      }
   2866                      
   2867          
   2868                  //zdarzenie typu down "X"
   2869                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \                     ??Lader_Event_10:
   \   00000168   5A48               LDR      R0,??Lader_Event_1+0x8  ;; X_down
   \   0000016A   0021               MOVS     R1,#+0
   \   0000016C   405E               LDRSH    R0,[R0, R1]
   \   0000016E   2F28               CMP      R0,#+47
   \   00000170   2DDB               BLT      ??Lader_Event_13
   \   00000172   3F28               CMP      R0,#+63
   \   00000174   2BDA               BGE      ??Lader_Event_13
   \   00000176   5848               LDR      R0,??Lader_Event_1+0xC  ;; Y_down
   \   00000178   405E               LDRSH    R0,[R0, R1]
   \   0000017A   7128               CMP      R0,#+113
   \   0000017C   27DB               BLT      ??Lader_Event_13
   \   0000017E   7F28               CMP      R0,#+127
   \   00000180   25DA               BGE      ??Lader_Event_13
   2870                  {
   2871                    //MenuPaint();
   2872                    H_line(49,114,10,0);
   \   00000182   0B00               MOVS     R3,R1
   \   00000184   0A22               MOVS     R2,#+10
   \   00000186   7221               MOVS     R1,#+114
   \   00000188   3120               MOVS     R0,#+49
   \   0000018A   ........           BL       H_line
   2873                    H_line(49,123,10,0); 
   \   0000018E   0023               MOVS     R3,#+0
   \   00000190   0A22               MOVS     R2,#+10
   \   00000192   7B21               MOVS     R1,#+123
   \   00000194   3120               MOVS     R0,#+49
   \   00000196   ........           BL       H_line
   2874                    V_line(49,114,10,0); 
   \   0000019A   0023               MOVS     R3,#+0
   \   0000019C   0A22               MOVS     R2,#+10
   \   0000019E   7221               MOVS     R1,#+114
   \   000001A0   3120               MOVS     R0,#+49
   \   000001A2   ........           BL       V_line
   2875                    V_line(58,114,10,0); 
   \   000001A6   0023               MOVS     R3,#+0
   \   000001A8   0A22               MOVS     R2,#+10
   \   000001AA   7221               MOVS     R1,#+114
   \   000001AC   3A20               MOVS     R0,#+58
   \   000001AE   ........           BL       V_line
   2876                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \   000001B2   4A48               LDR      R0,??Lader_Event_1+0x10  ;; 0x13d7e9
   \   000001B4   0078               LDRB     R0,[R0, #+0]
   \   000001B6   0028               CMP      R0,#+0
   \   000001B8   09D1               BNE      ??Lader_Event_13
   \   000001BA   4948               LDR      R0,??Lader_Event_1+0x14  ;; 0xfffff430
   \   000001BC   0021               MOVS     R1,#+0
   \   000001BE   0160               STR      R1,[R0, #+0]
   \   000001C0   484A               LDR      R2,??Lader_Event_1+0x18  ;; ButtonBipCounter
   \   000001C2   4348               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000001C4   03C8               LDM      R0!,{R0,R1}
   \   000001C6   0023               MOVS     R3,#+0
   \   000001C8   0830               ADDS     R0,R0,#+8
   \   000001CA   5941               ADCS     R1,R1,R3
   \   000001CC   03C2               STM      R2!,{R0,R1}
   2877                    
   2878                  }
   2879            
   2880                  
   2881          
   2882                  
   2883                  //edycja procedury
   2884                  char row, col;
   2885                  
   2886                  row=LaderLine; 
   \                     ??Lader_Event_13:
   \   000001CE   3F4C               LDR      R4,??Lader_Event_1  ;; TextToChangeLength
   \   000001D0   207C               LDRB     R0,[R4, #+16]
   \   000001D2   0190               STR      R0,[SP, #+4]
   2887                  for (int j=(MaxRow-1); j>=0; j--)
   \   000001D4   0227               MOVS     R7,#+2
   \   000001D6   05E0               B        ??Lader_Event_14
   2888                  {          
   2889                    col=LaderCol;
   2890                    for (int i=0; i<MaxCol; i++)
   2891                    {
   2892                        if ((X_up>1+i*20) && (X_up<1+(i+1)*20) && (Y_up>44+j*21) && (Y_up<44+(j+1)*21))                    //"X"
   2893                        {
   2894                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe063]: shift count is too large
   2895                          
   2896                          ChoseRow=row;
   2897                          ChoseCol=col-1;
   2898                          if (ChoseCol!=0xff)  //je¿eli nie zerowa kolumna
   2899                          {
   2900                          MenuLevel=MenuLevel*10+1;
   2901                          }else{
   2902                          MenuLevel=MenuLevel*10+2;  
   2903                          }
   2904                          
   2905                          MenuPaint();
   2906                         
   2907                        }  
   2908                      col++;
   2909                    }
   2910                    row++;
   \                     ??Lader_Event_15:
   \   000001D8   0198               LDR      R0,[SP, #+4]
   \   000001DA   401C               ADDS     R0,R0,#+1
   \   000001DC   0006               LSLS     R0,R0,#+24
   \   000001DE   000E               LSRS     R0,R0,#+24
   \   000001E0   0190               STR      R0,[SP, #+4]
   \   000001E2   7F1E               SUBS     R7,R7,#+1
   \                     ??Lader_Event_14:
   \   000001E4   002F               CMP      R7,#+0
   \   000001E6   43D4               BMI      ??Lader_Event_16
   \   000001E8   657C               LDRB     R5,[R4, #+17]
   \   000001EA   0026               MOVS     R6,#+0
   \   000001EC   09E0               B        ??Lader_Event_17
   \                     ??Lader_Event_18:
   \   000001EE   0A21               MOVS     R1,#+10
   \   000001F0   4843               MULS     R0,R1,R0
   \   000001F2   801C               ADDS     R0,R0,#+2
   \   000001F4   A064               STR      R0,[R4, #+72]
   \                     ??Lader_Event_19:
   \   000001F6   ........           BL       MenuPaint
   \                     ??Lader_Event_20:
   \   000001FA   6D1C               ADDS     R5,R5,#+1
   \   000001FC   2D06               LSLS     R5,R5,#+24
   \   000001FE   2D0E               LSRS     R5,R5,#+24
   \   00000200   761C               ADDS     R6,R6,#+1
   \                     ??Lader_Event_17:
   \   00000202   032E               CMP      R6,#+3
   \   00000204   E8DA               BGE      ??Lader_Event_15
   \   00000206   3848               LDR      R0,??Lader_Event_1+0x1C  ;; X_up
   \   00000208   0021               MOVS     R1,#+0
   \   0000020A   405E               LDRSH    R0,[R0, R1]
   \   0000020C   1421               MOVS     R1,#+20
   \   0000020E   7143               MULS     R1,R6,R1
   \   00000210   0A00               MOVS     R2,R1
   \   00000212   521C               ADDS     R2,R2,#+1
   \   00000214   8242               CMP      R2,R0
   \   00000216   F0DA               BGE      ??Lader_Event_20
   \   00000218   1531               ADDS     R1,R1,#+21
   \   0000021A   8842               CMP      R0,R1
   \   0000021C   EDDA               BGE      ??Lader_Event_20
   \   0000021E   3348               LDR      R0,??Lader_Event_1+0x20  ;; Y_up
   \   00000220   0021               MOVS     R1,#+0
   \   00000222   405E               LDRSH    R0,[R0, R1]
   \   00000224   1521               MOVS     R1,#+21
   \   00000226   7943               MULS     R1,R7,R1
   \   00000228   0A00               MOVS     R2,R1
   \   0000022A   2C32               ADDS     R2,R2,#+44
   \   0000022C   8242               CMP      R2,R0
   \   0000022E   E4DA               BGE      ??Lader_Event_20
   \   00000230   4131               ADDS     R1,R1,#+65
   \   00000232   8842               CMP      R0,R1
   \   00000234   E1DA               BGE      ??Lader_Event_20
   \   00000236   2948               LDR      R0,??Lader_Event_1+0x10  ;; 0x13d7e9
   \   00000238   0078               LDRB     R0,[R0, #+0]
   \   0000023A   0028               CMP      R0,#+0
   \   0000023C   09D1               BNE      ??Lader_Event_21
   \   0000023E   2848               LDR      R0,??Lader_Event_1+0x14  ;; 0xfffff430
   \   00000240   0021               MOVS     R1,#+0
   \   00000242   0160               STR      R1,[R0, #+0]
   \   00000244   274A               LDR      R2,??Lader_Event_1+0x18  ;; ButtonBipCounter
   \   00000246   2248               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   00000248   03C8               LDM      R0!,{R0,R1}
   \   0000024A   0023               MOVS     R3,#+0
   \   0000024C   0830               ADDS     R0,R0,#+8
   \   0000024E   5941               ADCS     R1,R1,R3
   \   00000250   03C2               STM      R2!,{R0,R1}
   \                     ??Lader_Event_21:
   \   00000252   0198               LDR      R0,[SP, #+4]
   \   00000254   A074               STRB     R0,[R4, #+18]
   \   00000256   2800               MOVS     R0,R5
   \   00000258   401E               SUBS     R0,R0,#+1
   \   0000025A   E074               STRB     R0,[R4, #+19]
   \   0000025C   0006               LSLS     R0,R0,#+24
   \   0000025E   000E               LSRS     R0,R0,#+24
   \   00000260   FF28               CMP      R0,#+255
   \   00000262   A06C               LDR      R0,[R4, #+72]
   \   00000264   C3D0               BEQ      ??Lader_Event_18
   \   00000266   0A21               MOVS     R1,#+10
   \   00000268   4843               MULS     R0,R1,R0
   \   0000026A   401C               ADDS     R0,R0,#+1
   \   0000026C   A064               STR      R0,[R4, #+72]
   \   0000026E   C2E7               B        ??Lader_Event_19
   2911                  }
   2912                  
   2913                   
   2914          
   2915          
   2916              
   2917                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??Lader_Event_16:
   \   00000270   1D48               LDR      R0,??Lader_Event_1+0x1C  ;; X_up
   \   00000272   0021               MOVS     R1,#+0
   \   00000274   405E               LDRSH    R0,[R0, R1]
   \   00000276   2F28               CMP      R0,#+47
   \   00000278   25DB               BLT      ??Lader_Event_22
   \   0000027A   3F28               CMP      R0,#+63
   \   0000027C   23DA               BGE      ??Lader_Event_22
   \   0000027E   1B48               LDR      R0,??Lader_Event_1+0x20  ;; Y_up
   \   00000280   405E               LDRSH    R0,[R0, R1]
   \   00000282   7128               CMP      R0,#+113
   \   00000284   1FDB               BLT      ??Lader_Event_22
   \   00000286   7F28               CMP      R0,#+127
   \   00000288   1DDA               BGE      ??Lader_Event_22
   2918                  {
   2919                    Rej_poz=0;
   \   0000028A   0800               MOVS     R0,R1
   \   0000028C   E064               STR      R0,[R4, #+76]
   2920                    if (ProgramChange) 
   \   0000028E   207A               LDRB     R0,[R4, #+8]
   \   00000290   0028               CMP      R0,#+0
   \   00000292   A06C               LDR      R0,[R4, #+72]
   \   00000294   03D0               BEQ      ??Lader_Event_23
   2921                    {
   2922                     
   2923                      MenuLevel=(MenuLevel*10+0);
   \   00000296   0A21               MOVS     R1,#+10
   \   00000298   4843               MULS     R0,R1,R0
   \   0000029A   A064               STR      R0,[R4, #+72]
   \   0000029C   03E0               B        ??Lader_Event_24
   2924                       
   2925                      
   2926                    }else{
   2927                      MenuLevel=(MenuLevel/10);
   \                     ??Lader_Event_23:
   \   0000029E   0A21               MOVS     R1,#+10
   \   000002A0   ........           BL       __aeabi_idivmod
   \   000002A4   A064               STR      R0,[R4, #+72]
   2928                    }
   2929                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \                     ??Lader_Event_24:
   \   000002A6   0D48               LDR      R0,??Lader_Event_1+0x10  ;; 0x13d7e9
   \   000002A8   0078               LDRB     R0,[R0, #+0]
   \   000002AA   0028               CMP      R0,#+0
   \   000002AC   09D1               BNE      ??Lader_Event_25
   \   000002AE   0C48               LDR      R0,??Lader_Event_1+0x14  ;; 0xfffff430
   \   000002B0   0021               MOVS     R1,#+0
   \   000002B2   0160               STR      R1,[R0, #+0]
   \   000002B4   0B4A               LDR      R2,??Lader_Event_1+0x18  ;; ButtonBipCounter
   \   000002B6   0648               LDR      R0,??Lader_Event_1+0x4  ;; g_counter
   \   000002B8   03C8               LDM      R0!,{R0,R1}
   \   000002BA   0023               MOVS     R3,#+0
   \   000002BC   0830               ADDS     R0,R0,#+8
   \   000002BE   5941               ADCS     R1,R1,R3
   \   000002C0   03C2               STM      R2!,{R0,R1}
   2930                    MenuPaint();
   \                     ??Lader_Event_25:
   \   000002C2   ........           BL       MenuPaint
   2931                  }  
   2932            
   2933               
   2934          
   2935                }//________________________________________________________________________
   \                     ??Lader_Event_22:
   \   000002C6   FEBC               POP      {R1-R7}
   \   000002C8   01BC               POP      {R0}
   \   000002CA   0047               BX       R0               ;; return
   \                     ??Lader_Event_1:
   \   000002CC   ........           DC32     TextToChangeLength
   \   000002D0   ........           DC32     g_counter
   \   000002D4   ........           DC32     X_down
   \   000002D8   ........           DC32     Y_down
   \   000002DC   E9D71300           DC32     0x13d7e9
   \   000002E0   30F4FFFF           DC32     0xfffff430
   \   000002E4   ........           DC32     ButtonBipCounter
   \   000002E8   ........           DC32     X_up
   \   000002EC   ........           DC32     Y_up
   2936              

   \                                 In section Debug.txt, align 4, keep-with-next
   2937          void WybProc(char col, char row)
   2938          {
   \                     WybProc:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   2939             row=2-row;
   \   00000002   0222               MOVS     R2,#+2
   \   00000004   561A               SUBS     R6,R2,R1
   2940             H_line(4+col*19,50+row*19,17,1);  
   \   00000006   3606               LSLS     R6,R6,#+24
   \   00000008   360E               LSRS     R6,R6,#+24
   \   0000000A   1321               MOVS     R1,#+19
   \   0000000C   4E43               MULS     R6,R1,R6
   \   0000000E   3400               MOVS     R4,R6
   \   00000010   3234               ADDS     R4,R4,#+50
   \   00000012   4843               MULS     R0,R1,R0
   \   00000014   0700               MOVS     R7,R0
   \   00000016   0123               MOVS     R3,#+1
   \   00000018   1122               MOVS     R2,#+17
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   001D               ADDS     R0,R0,#+4
   \   0000001E   0006               LSLS     R0,R0,#+24
   \   00000020   000E               LSRS     R0,R0,#+24
   \   00000022   ........           BL       H_line
   \   00000026   3D00               MOVS     R5,R7
   \   00000028   ED1C               ADDS     R5,R5,#+3
   \   0000002A   0123               MOVS     R3,#+1
   \   0000002C   1122               MOVS     R2,#+17
   \   0000002E   4336               ADDS     R6,R6,#+67
   \   00000030   3100               MOVS     R1,R6
   \   00000032   2800               MOVS     R0,R5
   \   00000034   0006               LSLS     R0,R0,#+24
   \   00000036   000E               LSRS     R0,R0,#+24
   2941             H_line(3+col*19,50+17+row*19,17,1); 
   \   00000038   ........           BL       H_line
   2942             V_line(3+col*19,50+row*19,18,1); 
   \   0000003C   0123               MOVS     R3,#+1
   \   0000003E   1222               MOVS     R2,#+18
   \   00000040   2100               MOVS     R1,R4
   \   00000042   2800               MOVS     R0,R5
   \   00000044   0006               LSLS     R0,R0,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   ........           BL       V_line
   2943             V_line(3+17+col*19,50+row*19,18,1); 
   \   0000004C   0123               MOVS     R3,#+1
   \   0000004E   1222               MOVS     R2,#+18
   \   00000050   2100               MOVS     R1,R4
   \   00000052   1437               ADDS     R7,R7,#+20
   \   00000054   3800               MOVS     R0,R7
   \   00000056   0006               LSLS     R0,R0,#+24
   \   00000058   000E               LSRS     R0,R0,#+24
   \   0000005A   ........           BL       V_line
   2944          }
   \   0000005E   F8BC               POP      {R3-R7}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   2945          
   2946          char SetTimeCell=1;

   \                                 In section Debug.txt, align 4, keep-with-next
   2947          void Procedure_Paint(void)
   2948                { 
   \                     Procedure_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   89B0               SUB      SP,SP,#+36
   2949                  
   2950                  
   2951                  List_Paint(Speech[g_leng].Procedura,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   D94C               LDR      R4,??Procedure_Paint_1  ;; 0xa14
   \   00000006   DA4D               LDR      R5,??Procedure_Paint_1+0x4  ;; g_leng
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   D8A0               ADR      R0,??Procedure_Paint_1+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0321               MOVS     R1,#+3
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   6C22               MOVS     R2,#+108
   \   00000020   0121               MOVS     R1,#+1
   \   00000022   D548               LDR      R0,??Procedure_Paint_1+0xC  ;; 0x2ee
   \   00000024   2E68               LDR      R6,[R5, #+0]
   \   00000026   6643               MULS     R6,R4,R6
   \   00000028   D44F               LDR      R7,??Procedure_Paint_1+0x10  ;; Speech
   \   0000002A   BE19               ADDS     R6,R7,R6
   \   0000002C   3018               ADDS     R0,R6,R0
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   \   00000034   0126               MOVS     R6,#+1
   \   00000036   18E0               B        ??Procedure_Paint_2
   2952                
   2953                   char txt[5];
   2954                   //CharToStr(LaderLine+3-i, txt, 2); //(char Value, char *Vstring, char ill);
   2955          
   2956                   
   2957                   for (char i=1; i<4; i++)
   2958                   {
   2959                    H_line(3,49+i*19,18,3);  
   \                     ??Procedure_Paint_3:
   \   00000038   3700               MOVS     R7,R6
   \   0000003A   1320               MOVS     R0,#+19
   \   0000003C   4743               MULS     R7,R0,R7
   \   0000003E   3137               ADDS     R7,R7,#+49
   \   00000040   0323               MOVS     R3,#+3
   \   00000042   1222               MOVS     R2,#+18
   \   00000044   3900               MOVS     R1,R7
   \   00000046   1800               MOVS     R0,R3
   \   00000048   ........           BL       H_line
   2960                    H_line(22,49+i*19,18,3);  
   \   0000004C   0323               MOVS     R3,#+3
   \   0000004E   1222               MOVS     R2,#+18
   \   00000050   3900               MOVS     R1,R7
   \   00000052   1620               MOVS     R0,#+22
   \   00000054   ........           BL       H_line
   2961                    H_line(41,49+i*19,18,3);  
   \   00000058   0323               MOVS     R3,#+3
   \   0000005A   1222               MOVS     R2,#+18
   \   0000005C   3900               MOVS     R1,R7
   \   0000005E   2920               MOVS     R0,#+41
   \   00000060   ........           BL       H_line
   2962                    }
   \   00000064   761C               ADDS     R6,R6,#+1
   \   00000066   3606               LSLS     R6,R6,#+24
   \   00000068   360E               LSRS     R6,R6,#+24
   \                     ??Procedure_Paint_2:
   \   0000006A   3000               MOVS     R0,R6
   \   0000006C   0428               CMP      R0,#+4
   \   0000006E   E3D3               BCC      ??Procedure_Paint_3
   \   00000070   0026               MOVS     R6,#+0
   \   00000072   16E0               B        ??Procedure_Paint_4
   2963                    for (char i=0; i<4; i++)
   2964                    {
   2965                    V_line(2+i*19,69,18,3);  
   \                     ??Procedure_Paint_5:
   \   00000074   3700               MOVS     R7,R6
   \   00000076   1320               MOVS     R0,#+19
   \   00000078   4743               MULS     R7,R0,R7
   \   0000007A   BF1C               ADDS     R7,R7,#+2
   \   0000007C   0323               MOVS     R3,#+3
   \   0000007E   1222               MOVS     R2,#+18
   \   00000080   4521               MOVS     R1,#+69
   \   00000082   3800               MOVS     R0,R7
   \   00000084   0006               LSLS     R0,R0,#+24
   \   00000086   000E               LSRS     R0,R0,#+24
   \   00000088   ........           BL       V_line
   2966                    V_line(2+i*19,88,18,3);  
   \   0000008C   0323               MOVS     R3,#+3
   \   0000008E   1222               MOVS     R2,#+18
   \   00000090   5821               MOVS     R1,#+88
   \   00000092   3800               MOVS     R0,R7
   \   00000094   0006               LSLS     R0,R0,#+24
   \   00000096   000E               LSRS     R0,R0,#+24
   \   00000098   ........           BL       V_line
   2967                    }
   \   0000009C   761C               ADDS     R6,R6,#+1
   \   0000009E   3606               LSLS     R6,R6,#+24
   \   000000A0   360E               LSRS     R6,R6,#+24
   \                     ??Procedure_Paint_4:
   \   000000A2   3000               MOVS     R0,R6
   \   000000A4   0428               CMP      R0,#+4
   \   000000A6   E5D3               BCC      ??Procedure_Paint_5
   \   000000A8   82B0               SUB      SP,SP,#+8
   \   000000AA   0820               MOVS     R0,#+8
   \   000000AC   0090               STR      R0,[SP, #+0]
   \   000000AE   1023               MOVS     R3,#+16
   \   000000B0   5D22               MOVS     R2,#+93
   \   000000B2   1821               MOVS     R1,#+24
   \   000000B4   B248               LDR      R0,??Procedure_Paint_1+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 224
   2968                   
   2969                   CopyToCanvasPoint((char*)ProcSt_iko, 24, 93,16,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000B6   ........           BL       CopyToCanvasPoint
   \   000000BA   02B0               ADD      SP,SP,#+8
   2970                   CopyToCanvasPoint((char*)ProcSet_iko, 43, 93,16,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000BC   82B0               SUB      SP,SP,#+8
   \   000000BE   0820               MOVS     R0,#+8
   \   000000C0   0090               STR      R0,[SP, #+0]
   \   000000C2   1023               MOVS     R3,#+16
   \   000000C4   5D22               MOVS     R2,#+93
   \   000000C6   2B21               MOVS     R1,#+43
   \   000000C8   AE48               LDR      R0,??Procedure_Paint_1+0x18  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 240
   \   000000CA   ........           BL       CopyToCanvasPoint
   \   000000CE   02B0               ADD      SP,SP,#+8
   2971                   CopyToCanvasPoint((char*)ProcLog_iko, 5, 73,15,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000D0   82B0               SUB      SP,SP,#+8
   \   000000D2   0820               MOVS     R0,#+8
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   0F23               MOVS     R3,#+15
   \   000000D8   4922               MOVS     R2,#+73
   \   000000DA   0521               MOVS     R1,#+5
   \   000000DC   AA48               LDR      R0,??Procedure_Paint_1+0x1C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 280
   \   000000DE   ........           BL       CopyToCanvasPoint
   \   000000E2   02B0               ADD      SP,SP,#+8
   2972                   CopyToCanvasPoint((char*)ProcTime_iko, 25, 72,13,12);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   0C20               MOVS     R0,#+12
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   0D23               MOVS     R3,#+13
   \   000000EC   4822               MOVS     R2,#+72
   \   000000EE   1921               MOVS     R1,#+25
   \   000000F0   A648               LDR      R0,??Procedure_Paint_1+0x20  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 256
   \   000000F2   ........           BL       CopyToCanvasPoint
   \   000000F6   02B0               ADD      SP,SP,#+8
   2973                   CopyToCanvasPoint((char*)ProcAnl_iko, 43, 73,15,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);     
   \   000000F8   82B0               SUB      SP,SP,#+8
   \   000000FA   0820               MOVS     R0,#+8
   \   000000FC   0090               STR      R0,[SP, #+0]
   \   000000FE   0F23               MOVS     R3,#+15
   \   00000100   4922               MOVS     R2,#+73
   \   00000102   2B21               MOVS     R1,#+43
   \   00000104   A248               LDR      R0,??Procedure_Paint_1+0x24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 296
   \   00000106   ........           BL       CopyToCanvasPoint
   \   0000010A   02B0               ADD      SP,SP,#+8
   2974                   
   2975          
   2976                           
   2977                   
   2978                   //jaka procedura
   2979                   
   2980                   _Procedure Prc=(gProg.Line[ChoseRow].Proc[ChoseCol]);
   \   0000010C   A14A               LDR      R2,??Procedure_Paint_1+0x28  ;; TextToChangeLength
   \   0000010E   02A8               ADD      R0,SP,#+8
   \   00000110   D17C               LDRB     R1,[R2, #+19]
   \   00000112   1823               MOVS     R3,#+24
   \   00000114   5943               MULS     R1,R3,R1
   \   00000116   927C               LDRB     R2,[R2, #+18]
   \   00000118   F023               MOVS     R3,#+240
   \   0000011A   5A43               MULS     R2,R3,R2
   \   0000011C   9E4B               LDR      R3,??Procedure_Paint_1+0x2C  ;; gProg
   \   0000011E   9A18               ADDS     R2,R3,R2
   \   00000120   5118               ADDS     R1,R2,R1
   \   00000122   1831               ADDS     R1,R1,#+24
   \   00000124   1822               MOVS     R2,#+24
   \   00000126   ........           BL       __aeabi_memcpy4
   2981                   
   2982                   
   2983                      if  (Prc.Type==None)
   \   0000012A   02AE               ADD      R6,SP,#+8
   \   0000012C   3078               LDRB     R0,[R6, #+0]
   \   0000012E   0028               CMP      R0,#+0
   \   00000130   02D1               BNE      ??Procedure_Paint_6
   2984                      {
   2985                        WybProc(0,0);
   \   00000132   0021               MOVS     R1,#+0
   \   00000134   ........           BL       WybProc
   2986                      }
   2987          
   2988                      
   2989                      if  ((Prc.Type>ProcLogStart) && (Prc.Type<ProcLogStop))
   \                     ??Procedure_Paint_6:
   \   00000138   3078               LDRB     R0,[R6, #+0]
   \   0000013A   0228               CMP      R0,#+2
   \   0000013C   25D3               BCC      ??Procedure_Paint_7
   \   0000013E   0D28               CMP      R0,#+13
   \   00000140   23D2               BCS      ??Procedure_Paint_7
   2990                      { 
   2991                        WybProc(0,1);
   \   00000142   0121               MOVS     R1,#+1
   \   00000144   0020               MOVS     R0,#+0
   \   00000146   ........           BL       WybProc
   2992                        txt[1]=0;
   \   0000014A   6F46               MOV      R7,SP
   \   0000014C   0020               MOVS     R0,#+0
   \   0000014E   7870               STRB     R0,[R7, #+1]
   2993                        txt[0]='>';
   \   00000150   3E20               MOVS     R0,#+62
   \   00000152   3870               STRB     R0,[R7, #+0]
   2994                        Button(txt,43,39,18,18);
   \   00000154   82B0               SUB      SP,SP,#+8
   \   00000156   1220               MOVS     R0,#+18
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   0300               MOVS     R3,R0
   \   0000015C   2722               MOVS     R2,#+39
   \   0000015E   2B21               MOVS     R1,#+43
   \   00000160   02A8               ADD      R0,SP,#+8
   \   00000162   ........           BL       Button
   \   00000166   02B0               ADD      SP,SP,#+8
   2995                        txt[0]='<';
   \   00000168   3C20               MOVS     R0,#+60
   \   0000016A   3870               STRB     R0,[R7, #+0]
   2996                        Button(txt,2,39,18,18);
   \   0000016C   82B0               SUB      SP,SP,#+8
   \   0000016E   1220               MOVS     R0,#+18
   \   00000170   0090               STR      R0,[SP, #+0]
   \   00000172   0300               MOVS     R3,R0
   \   00000174   2722               MOVS     R2,#+39
   \   00000176   0221               MOVS     R1,#+2
   \   00000178   02A8               ADD      R0,SP,#+8
   \   0000017A   ........           BL       Button
   \   0000017E   02B0               ADD      SP,SP,#+8
   2997                        PaintProc(21, 40, &Prc);
   \   00000180   02AA               ADD      R2,SP,#+8
   \   00000182   2821               MOVS     R1,#+40
   \   00000184   1520               MOVS     R0,#+21
   \   00000186   ........           BL       PaintProc
   2998                      }
   2999                      
   3000                      
   3001                      
   3002                      if  (((Prc.Type>ProcStStart) && (Prc.Type<ProcStStop)) || 
   3003                           ((Prc.Type>ProcSetStart) && (Prc.Type<ProcSetStop))||
   3004                           ((Prc.Type>ProcTimeStart) && (Prc.Type<ProcTimeStop))||
   3005                           ((Prc.Type>ProcAnalogStart) && (Prc.Type<ProcAnalogStop))
   3006                           ) 
   \                     ??Procedure_Paint_7:
   \   0000018A   3078               LDRB     R0,[R6, #+0]
   \   0000018C   1428               CMP      R0,#+20
   \   0000018E   01D3               BCC      ??Procedure_Paint_8
   \   00000190   1928               CMP      R0,#+25
   \   00000192   0DD3               BCC      ??Procedure_Paint_9
   \                     ??Procedure_Paint_8:
   \   00000194   2028               CMP      R0,#+32
   \   00000196   01D3               BCC      ??Procedure_Paint_10
   \   00000198   2828               CMP      R0,#+40
   \   0000019A   09D3               BCC      ??Procedure_Paint_9
   \                     ??Procedure_Paint_10:
   \   0000019C   2D28               CMP      R0,#+45
   \   0000019E   01D3               BCC      ??Procedure_Paint_11
   \   000001A0   3028               CMP      R0,#+48
   \   000001A2   05D3               BCC      ??Procedure_Paint_9
   \                     ??Procedure_Paint_11:
   \   000001A4   3728               CMP      R0,#+55
   \   000001A6   00D2               BCS      .+4
   \   000001A8   CAE3               B        ??Procedure_Paint_12
   \   000001AA   4028               CMP      R0,#+64
   \   000001AC   00D3               BCC      .+4
   \   000001AE   C7E3               B        ??Procedure_Paint_12
   3007                          
   3008                      { 
   3009                        txt[1]=0;
   \                     ??Procedure_Paint_9:
   \   000001B0   6F46               MOV      R7,SP
   \   000001B2   0020               MOVS     R0,#+0
   \   000001B4   7870               STRB     R0,[R7, #+1]
   \   000001B6   3E20               MOVS     R0,#+62
   \   000001B8   3870               STRB     R0,[R7, #+0]
   3010                        txt[0]='>';
   3011                        if (Prc.Type>ProcStStart) Button(txt,43,46,18,18);
   \   000001BA   3078               LDRB     R0,[R6, #+0]
   \   000001BC   1428               CMP      R0,#+20
   \   000001BE   09D3               BCC      ??Procedure_Paint_13
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   1220               MOVS     R0,#+18
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   0300               MOVS     R3,R0
   \   000001C8   2E22               MOVS     R2,#+46
   \   000001CA   2B21               MOVS     R1,#+43
   \   000001CC   02A8               ADD      R0,SP,#+8
   \   000001CE   ........           BL       Button
   \   000001D2   02B0               ADD      SP,SP,#+8
   3012                        
   3013                        
   3014                        if (
   3015                           (Prc.Type==ProcConstAnal) ||
   3016                           (Prc.Type==ProcLim) ||
   3017                           (Prc.Type==ProcEven) || 
   3018                           (Prc.Type==ProcPlus) || 
   3019                           (Prc.Type==ProcMinus) || 
   3020                           (Prc.Type==ProcMul) ||
   3021                           (Prc.Type==ProcDiv)
   3022                           )
   \                     ??Procedure_Paint_13:
   \   000001D4   3078               LDRB     R0,[R6, #+0]
   \   000001D6   3728               CMP      R0,#+55
   \   000001D8   0BD0               BEQ      ??Procedure_Paint_14
   \   000001DA   3A28               CMP      R0,#+58
   \   000001DC   09D0               BEQ      ??Procedure_Paint_14
   \   000001DE   3B28               CMP      R0,#+59
   \   000001E0   07D0               BEQ      ??Procedure_Paint_14
   \   000001E2   3C28               CMP      R0,#+60
   \   000001E4   05D0               BEQ      ??Procedure_Paint_14
   \   000001E6   3D28               CMP      R0,#+61
   \   000001E8   03D0               BEQ      ??Procedure_Paint_14
   \   000001EA   3E28               CMP      R0,#+62
   \   000001EC   01D0               BEQ      ??Procedure_Paint_14
   \   000001EE   3F28               CMP      R0,#+63
   \   000001F0   05D1               BNE      ??Procedure_Paint_15
   3023                        {
   3024                          PaintProc(20, 38, &Prc);
   \                     ??Procedure_Paint_14:
   \   000001F2   02AA               ADD      R2,SP,#+8
   \   000001F4   2621               MOVS     R1,#+38
   \   000001F6   1420               MOVS     R0,#+20
   \   000001F8   ........           BL       PaintProc
   \   000001FC   2EE0               B        ??Procedure_Paint_16
   3025                        }else if 
   3026                          (
   3027                           (Prc.Type==ProcGetReg) || 
   3028                           (Prc.Type==ProcSetReg)  
   3029                          )
   \                     ??Procedure_Paint_15:
   \   000001FE   3828               CMP      R0,#+56
   \   00000200   01D0               BEQ      ??Procedure_Paint_17
   \   00000202   3928               CMP      R0,#+57
   \   00000204   15D1               BNE      ??Procedure_Paint_18
   3030                          
   3031                        {  
   3032                          PaintProc(20, 41, &Prc);
   \                     ??Procedure_Paint_17:
   \   00000206   02AA               ADD      R2,SP,#+8
   \   00000208   2921               MOVS     R1,#+41
   \   0000020A   1420               MOVS     R0,#+20
   \   0000020C   ........           BL       PaintProc
   3033                          Label(" ",0,3,55,15,39,16,105,0);
   \   00000210   82B0               SUB      SP,SP,#+8
   \   00000212   0020               MOVS     R0,#+0
   \   00000214   0090               STR      R0,[SP, #+0]
   \   00000216   6921               MOVS     R1,#+105
   \   00000218   1020               MOVS     R0,#+16
   \   0000021A   03B4               PUSH     {R0,R1}
   \   0000021C   2721               MOVS     R1,#+39
   \   0000021E   0F20               MOVS     R0,#+15
   \   00000220   03B4               PUSH     {R0,R1}
   \   00000222   3723               MOVS     R3,#+55
   \   00000224   0322               MOVS     R2,#+3
   \   00000226   0021               MOVS     R1,#+0
   \   00000228   52A0               ADR      R0,??Procedure_Paint_1+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   0000022A   ........           BL       Label
   \   0000022E   06B0               ADD      SP,SP,#+24
   \   00000230   14E0               B        ??Procedure_Paint_16
   3034                        }else{
   3035                          PaintProc(20, 43, &Prc);
   \                     ??Procedure_Paint_18:
   \   00000232   02AA               ADD      R2,SP,#+8
   \   00000234   2B21               MOVS     R1,#+43
   \   00000236   1420               MOVS     R0,#+20
   \   00000238   ........           BL       PaintProc
   3036                          Label(" ",0,3,55,15,39,16,105,0);
   \   0000023C   82B0               SUB      SP,SP,#+8
   \   0000023E   0020               MOVS     R0,#+0
   \   00000240   0090               STR      R0,[SP, #+0]
   \   00000242   6921               MOVS     R1,#+105
   \   00000244   1020               MOVS     R0,#+16
   \   00000246   03B4               PUSH     {R0,R1}
   \   00000248   2721               MOVS     R1,#+39
   \   0000024A   0F20               MOVS     R0,#+15
   \   0000024C   03B4               PUSH     {R0,R1}
   \   0000024E   3723               MOVS     R3,#+55
   \   00000250   0322               MOVS     R2,#+3
   \   00000252   0021               MOVS     R1,#+0
   \   00000254   47A0               ADR      R0,??Procedure_Paint_1+0x8  ;; 0x20, 0x00, 0x00, 0x00
   \   00000256   ........           BL       Label
   \   0000025A   06B0               ADD      SP,SP,#+24
   3037                        }
   3038                        char Htmp=58;  //po³o¿enie napisu
   3039                        
   3040                        switch (Prc.Type)
   \                     ??Procedure_Paint_16:
   \   0000025C   3078               LDRB     R0,[R6, #+0]
   \   0000025E   1438               SUBS     R0,R0,#+20
   \   00000260   2B28               CMP      R0,#+43
   \   00000262   00D9               BLS      .+4
   \   00000264   84E2               B        ??Procedure_Paint_19
   \   00000266   02A1               ADR      R1,??Procedure_Paint_0
   \   00000268   4000               LSLS     R0,R0,#+1
   \   0000026A   095A               LDRH     R1,[R1, R0]
   \   0000026C   8F44               ADD      PC,PC,R1
   \   0000026E   C046               Nop      
   \                     ??Procedure_Paint_0:
   \   00000270   58008E00C600       DC16     +88,+142,+198,+1280
   \              0005        
   \   00000278   340100050005       DC16     +308,+1280,+1280,+1280
   \              0005        
   \   00000280   000500050005       DC16     +1280,+1280,+1280,+1280
   \              0005        
   \   00000288   6C01A201D801       DC16     +364,+418,+472,+472
   \              D801        
   \   00000290   0E0244027A02       DC16     +526,+580,+634,+688
   \              B002        
   \   00000298   000500050005       DC16     +1280,+1280,+1280,+1280
   \              0005        
   \   000002A0   0005E8021E03       DC16     +1280,+744,+798,+852
   \              5403        
   \   000002A8   000500050005       DC16     +1280,+1280,+1280,+1280
   \              0005        
   \   000002B0   000500050005       DC16     +1280,+1280,+1280,+906
   \              8A03        
   \   000002B8   AC03CE03F003       DC16     +940,+974,+1008,+1042
   \              1204        
   \   000002C0   340456047804       DC16     +1076,+1110,+1144,+1248
   \              E004        
   3041                        {
   3042                          case ProcStI: Label(Speech[g_leng].StanWejscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_20:
   \   000002C8   82B0               SUB      SP,SP,#+8
   \   000002CA   0020               MOVS     R0,#+0
   \   000002CC   0090               STR      R0,[SP, #+0]
   \   000002CE   6921               MOVS     R1,#+105
   \   000002D0   1020               MOVS     R0,#+16
   \   000002D2   03B4               PUSH     {R0,R1}
   \   000002D4   2721               MOVS     R1,#+39
   \   000002D6   0F20               MOVS     R0,#+15
   \   000002D8   03B4               PUSH     {R0,R1}
   \   000002DA   3A23               MOVS     R3,#+58
   \   000002DC   0322               MOVS     R2,#+3
   \   000002DE   0021               MOVS     R1,#+0
   \   000002E0   02B5               PUSH     {R1,LR}
   \   000002E2   2E49               LDR      R1,??Procedure_Paint_1+0x30  ;; 0x2fd
   \   000002E4   8C46               MOV      R12,R1
   \   000002E6   2968               LDR      R1,[R5, #+0]
   \   000002E8   6143               MULS     R1,R4,R1
   \   000002EA   2448               LDR      R0,??Procedure_Paint_1+0x10  ;; Speech
   \   000002EC   4018               ADDS     R0,R0,R1
   \   000002EE   6146               MOV      R1,R12
   \   000002F0   4018               ADDS     R0,R0,R1
   \   000002F2   0099               LDR      R1,[SP, #0]
   \   000002F4   02B0               ADD      SP,SP,#+8
   \   000002F6   ........           BL       Label
   \   000002FA   06B0               ADD      SP,SP,#+24
   \   000002FC   38E2               B        ??Procedure_Paint_19
   3043                          case ProcStNI: Label(Speech[g_leng].NegWejscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_21:
   \   000002FE   82B0               SUB      SP,SP,#+8
   \   00000300   0020               MOVS     R0,#+0
   \   00000302   0090               STR      R0,[SP, #+0]
   \   00000304   6921               MOVS     R1,#+105
   \   00000306   1020               MOVS     R0,#+16
   \   00000308   03B4               PUSH     {R0,R1}
   \   0000030A   2721               MOVS     R1,#+39
   \   0000030C   0F20               MOVS     R0,#+15
   \   0000030E   03B4               PUSH     {R0,R1}
   \   00000310   3A23               MOVS     R3,#+58
   \   00000312   0322               MOVS     R2,#+3
   \   00000314   0021               MOVS     R1,#+0
   \   00000316   02B5               PUSH     {R1,LR}
   \   00000318   C321               MOVS     R1,#+195
   \   0000031A   8900               LSLS     R1,R1,#+2        ;; #+780
   \   0000031C   8C46               MOV      R12,R1
   \   0000031E   2968               LDR      R1,[R5, #+0]
   \   00000320   6143               MULS     R1,R4,R1
   \   00000322   1648               LDR      R0,??Procedure_Paint_1+0x10  ;; Speech
   \   00000324   4018               ADDS     R0,R0,R1
   \   00000326   6146               MOV      R1,R12
   \   00000328   4018               ADDS     R0,R0,R1
   \   0000032A   0099               LDR      R1,[SP, #0]
   \   0000032C   02B0               ADD      SP,SP,#+8
   \   0000032E   ........           BL       Label
   \   00000332   06B0               ADD      SP,SP,#+24
   \   00000334   1CE2               B        ??Procedure_Paint_19
   3044                          case ProcStQ: Label(Speech[g_leng].StanWyjscia,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_22:
   \   00000336   82B0               SUB      SP,SP,#+8
   \   00000338   0020               MOVS     R0,#+0
   \   0000033A   0090               STR      R0,[SP, #+0]
   \   0000033C   6921               MOVS     R1,#+105
   \   0000033E   1020               MOVS     R0,#+16
   \   00000340   03B4               PUSH     {R0,R1}
   \   00000342   2721               MOVS     R1,#+39
   \   00000344   0F20               MOVS     R0,#+15
   \   00000346   03B4               PUSH     {R0,R1}
   \   00000348   3A23               MOVS     R3,#+58
   \   0000034A   0322               MOVS     R2,#+3
   \   0000034C   0021               MOVS     R1,#+0
   \   0000034E   02B5               PUSH     {R1,LR}
   \   00000350   1349               LDR      R1,??Procedure_Paint_1+0x34  ;; 0x31b
   \   00000352   8C46               MOV      R12,R1
   \   00000354   2968               LDR      R1,[R5, #+0]
   \   00000356   6143               MULS     R1,R4,R1
   \   00000358   0848               LDR      R0,??Procedure_Paint_1+0x10  ;; Speech
   \   0000035A   4018               ADDS     R0,R0,R1
   \   0000035C   6146               MOV      R1,R12
   \   0000035E   4018               ADDS     R0,R0,R1
   \   00000360   0099               LDR      R1,[SP, #0]
   \   00000362   02B0               ADD      SP,SP,#+8
   \   00000364   ........           BL       Label
   \   00000368   06B0               ADD      SP,SP,#+24
   \   0000036A   01E2               B        ??Procedure_Paint_19
   \                     ??Procedure_Paint_1:
   \   0000036C   140A0000           DC32     0xa14
   \   00000370   ........           DC32     g_leng
   \   00000374   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000378   EE020000           DC32     0x2ee
   \   0000037C   ........           DC32     Speech
   \   00000380   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 224
   \   00000384   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 240
   \   00000388   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 280
   \   0000038C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 256
   \   00000390   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 296
   \   00000394   ........           DC32     TextToChangeLength
   \   00000398   ........           DC32     gProg
   \   0000039C   FD020000           DC32     0x2fd
   \   000003A0   1B030000           DC32     0x31b
   3045                          case ProcStS: Label(Speech[g_leng].StSceny,0,3,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_23:
   \   000003A4   82B0               SUB      SP,SP,#+8
   \   000003A6   0020               MOVS     R0,#+0
   \   000003A8   0090               STR      R0,[SP, #+0]
   \   000003AA   6921               MOVS     R1,#+105
   \   000003AC   1020               MOVS     R0,#+16
   \   000003AE   03B4               PUSH     {R0,R1}
   \   000003B0   2721               MOVS     R1,#+39
   \   000003B2   0F20               MOVS     R0,#+15
   \   000003B4   03B4               PUSH     {R0,R1}
   \   000003B6   3A23               MOVS     R3,#+58
   \   000003B8   0322               MOVS     R2,#+3
   \   000003BA   0021               MOVS     R1,#+0
   \   000003BC   02B5               PUSH     {R1,LR}
   \   000003BE   FF21               MOVS     R1,#+255
   \   000003C0   8900               LSLS     R1,R1,#+2        ;; #+1020
   \   000003C2   8C46               MOV      R12,R1
   \   000003C4   2968               LDR      R1,[R5, #+0]
   \   000003C6   6143               MULS     R1,R4,R1
   \   000003C8   D048               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000003CA   4018               ADDS     R0,R0,R1
   \   000003CC   6146               MOV      R1,R12
   \   000003CE   4018               ADDS     R0,R0,R1
   \   000003D0   0099               LDR      R1,[SP, #0]
   \   000003D2   02B0               ADD      SP,SP,#+8
   \   000003D4   ........           BL       Label
   \   000003D8   06B0               ADD      SP,SP,#+24
   \   000003DA   C9E1               B        ??Procedure_Paint_19
   3046                         // case ProcStT: Label(Speech[g_leng].StanTimera,0,3,Htmp,15,39,16,105,0); break;
   3047                         // case ProcStNT: Label(Speech[g_leng].StanTimeraNeg,0,3,Htmp,15,39,16,105,0); break;
   3048                          case ProcWOUT: Label(Speech[g_leng].UstawWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_25:
   \   000003DC   82B0               SUB      SP,SP,#+8
   \   000003DE   0020               MOVS     R0,#+0
   \   000003E0   0090               STR      R0,[SP, #+0]
   \   000003E2   6921               MOVS     R1,#+105
   \   000003E4   1020               MOVS     R0,#+16
   \   000003E6   03B4               PUSH     {R0,R1}
   \   000003E8   2721               MOVS     R1,#+39
   \   000003EA   0F20               MOVS     R0,#+15
   \   000003EC   03B4               PUSH     {R0,R1}
   \   000003EE   3A23               MOVS     R3,#+58
   \   000003F0   0222               MOVS     R2,#+2
   \   000003F2   0021               MOVS     R1,#+0
   \   000003F4   02B5               PUSH     {R1,LR}
   \   000003F6   C649               LDR      R1,??Procedure_Paint_24+0x4  ;; 0x357
   \   000003F8   8C46               MOV      R12,R1
   \   000003FA   2968               LDR      R1,[R5, #+0]
   \   000003FC   6143               MULS     R1,R4,R1
   \   000003FE   C348               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000400   4018               ADDS     R0,R0,R1
   \   00000402   6146               MOV      R1,R12
   \   00000404   4018               ADDS     R0,R0,R1
   \   00000406   0099               LDR      R1,[SP, #0]
   \   00000408   02B0               ADD      SP,SP,#+8
   \   0000040A   ........           BL       Label
   \   0000040E   06B0               ADD      SP,SP,#+24
   \   00000410   AEE1               B        ??Procedure_Paint_19
   3049                          case ProcWOUTS: Label(Speech[g_leng].WlaczWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_26:
   \   00000412   82B0               SUB      SP,SP,#+8
   \   00000414   0020               MOVS     R0,#+0
   \   00000416   0090               STR      R0,[SP, #+0]
   \   00000418   6921               MOVS     R1,#+105
   \   0000041A   1020               MOVS     R0,#+16
   \   0000041C   03B4               PUSH     {R0,R1}
   \   0000041E   2721               MOVS     R1,#+39
   \   00000420   0F20               MOVS     R0,#+15
   \   00000422   03B4               PUSH     {R0,R1}
   \   00000424   3A23               MOVS     R3,#+58
   \   00000426   0222               MOVS     R2,#+2
   \   00000428   0021               MOVS     R1,#+0
   \   0000042A   02B5               PUSH     {R1,LR}
   \   0000042C   B949               LDR      R1,??Procedure_Paint_24+0x8  ;; 0x366
   \   0000042E   8C46               MOV      R12,R1
   \   00000430   2968               LDR      R1,[R5, #+0]
   \   00000432   6143               MULS     R1,R4,R1
   \   00000434   B548               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000436   4018               ADDS     R0,R0,R1
   \   00000438   6146               MOV      R1,R12
   \   0000043A   4018               ADDS     R0,R0,R1
   \   0000043C   0099               LDR      R1,[SP, #0]
   \   0000043E   02B0               ADD      SP,SP,#+8
   \   00000440   ........           BL       Label
   \   00000444   06B0               ADD      SP,SP,#+24
   \   00000446   93E1               B        ??Procedure_Paint_19
   3050                          case ProcWOUTR: Label(Speech[g_leng].ZerujWyjscie,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_27:
   \   00000448   82B0               SUB      SP,SP,#+8
   \   0000044A   0020               MOVS     R0,#+0
   \   0000044C   0090               STR      R0,[SP, #+0]
   \   0000044E   6921               MOVS     R1,#+105
   \   00000450   1020               MOVS     R0,#+16
   \   00000452   03B4               PUSH     {R0,R1}
   \   00000454   2721               MOVS     R1,#+39
   \   00000456   0F20               MOVS     R0,#+15
   \   00000458   03B4               PUSH     {R0,R1}
   \   0000045A   3A23               MOVS     R3,#+58
   \   0000045C   0222               MOVS     R2,#+2
   \   0000045E   0021               MOVS     R1,#+0
   \   00000460   02B5               PUSH     {R1,LR}
   \   00000462   AD49               LDR      R1,??Procedure_Paint_24+0xC  ;; 0x375
   \   00000464   8C46               MOV      R12,R1
   \   00000466   2968               LDR      R1,[R5, #+0]
   \   00000468   6143               MULS     R1,R4,R1
   \   0000046A   A848               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   0000046C   4018               ADDS     R0,R0,R1
   \   0000046E   6146               MOV      R1,R12
   \   00000470   4018               ADDS     R0,R0,R1
   \   00000472   0099               LDR      R1,[SP, #0]
   \   00000474   02B0               ADD      SP,SP,#+8
   \   00000476   ........           BL       Label
   \   0000047A   06B0               ADD      SP,SP,#+24
   \   0000047C   78E1               B        ??Procedure_Paint_19
   3051                          case ProcWOUTC: Label(Speech[g_leng].ZerujWyjscie,0,2,Htmp,15,39,16,105,0); break;
   3052                          case ProcSetScn: Label(Speech[g_leng].W³Scene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_28:
   \   0000047E   82B0               SUB      SP,SP,#+8
   \   00000480   0020               MOVS     R0,#+0
   \   00000482   0090               STR      R0,[SP, #+0]
   \   00000484   6921               MOVS     R1,#+105
   \   00000486   1020               MOVS     R0,#+16
   \   00000488   03B4               PUSH     {R0,R1}
   \   0000048A   2721               MOVS     R1,#+39
   \   0000048C   0F20               MOVS     R0,#+15
   \   0000048E   03B4               PUSH     {R0,R1}
   \   00000490   3A23               MOVS     R3,#+58
   \   00000492   0222               MOVS     R2,#+2
   \   00000494   0021               MOVS     R1,#+0
   \   00000496   02B5               PUSH     {R1,LR}
   \   00000498   A049               LDR      R1,??Procedure_Paint_24+0x10  ;; 0x3a2
   \   0000049A   8C46               MOV      R12,R1
   \   0000049C   2968               LDR      R1,[R5, #+0]
   \   0000049E   6143               MULS     R1,R4,R1
   \   000004A0   9A48               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000004A2   4018               ADDS     R0,R0,R1
   \   000004A4   6146               MOV      R1,R12
   \   000004A6   4018               ADDS     R0,R0,R1
   \   000004A8   0099               LDR      R1,[SP, #0]
   \   000004AA   02B0               ADD      SP,SP,#+8
   \   000004AC   ........           BL       Label
   \   000004B0   06B0               ADD      SP,SP,#+24
   \   000004B2   5DE1               B        ??Procedure_Paint_19
   3053                          case ProcInc: Label(Speech[g_leng].IncScene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_29:
   \   000004B4   82B0               SUB      SP,SP,#+8
   \   000004B6   0020               MOVS     R0,#+0
   \   000004B8   0090               STR      R0,[SP, #+0]
   \   000004BA   6921               MOVS     R1,#+105
   \   000004BC   1020               MOVS     R0,#+16
   \   000004BE   03B4               PUSH     {R0,R1}
   \   000004C0   2721               MOVS     R1,#+39
   \   000004C2   0F20               MOVS     R0,#+15
   \   000004C4   03B4               PUSH     {R0,R1}
   \   000004C6   3A23               MOVS     R3,#+58
   \   000004C8   0222               MOVS     R2,#+2
   \   000004CA   0021               MOVS     R1,#+0
   \   000004CC   02B5               PUSH     {R1,LR}
   \   000004CE   9449               LDR      R1,??Procedure_Paint_24+0x14  ;; 0x3b1
   \   000004D0   8C46               MOV      R12,R1
   \   000004D2   2968               LDR      R1,[R5, #+0]
   \   000004D4   6143               MULS     R1,R4,R1
   \   000004D6   8D48               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000004D8   4018               ADDS     R0,R0,R1
   \   000004DA   6146               MOV      R1,R12
   \   000004DC   4018               ADDS     R0,R0,R1
   \   000004DE   0099               LDR      R1,[SP, #0]
   \   000004E0   02B0               ADD      SP,SP,#+8
   \   000004E2   ........           BL       Label
   \   000004E6   06B0               ADD      SP,SP,#+24
   \   000004E8   42E1               B        ??Procedure_Paint_19
   3054                          case ProcDec: Label(Speech[g_leng].DecScene,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_30:
   \   000004EA   82B0               SUB      SP,SP,#+8
   \   000004EC   0020               MOVS     R0,#+0
   \   000004EE   0090               STR      R0,[SP, #+0]
   \   000004F0   6921               MOVS     R1,#+105
   \   000004F2   1020               MOVS     R0,#+16
   \   000004F4   03B4               PUSH     {R0,R1}
   \   000004F6   2721               MOVS     R1,#+39
   \   000004F8   0F20               MOVS     R0,#+15
   \   000004FA   03B4               PUSH     {R0,R1}
   \   000004FC   3A23               MOVS     R3,#+58
   \   000004FE   0222               MOVS     R2,#+2
   \   00000500   0021               MOVS     R1,#+0
   \   00000502   02B5               PUSH     {R1,LR}
   \   00000504   8101               LSLS     R1,R0,#+6
   \   00000506   8C46               MOV      R12,R1
   \   00000508   2968               LDR      R1,[R5, #+0]
   \   0000050A   6143               MULS     R1,R4,R1
   \   0000050C   7F48               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   0000050E   4018               ADDS     R0,R0,R1
   \   00000510   6146               MOV      R1,R12
   \   00000512   4018               ADDS     R0,R0,R1
   \   00000514   0099               LDR      R1,[SP, #0]
   \   00000516   02B0               ADD      SP,SP,#+8
   \   00000518   ........           BL       Label
   \   0000051C   06B0               ADD      SP,SP,#+24
   \   0000051E   27E1               B        ??Procedure_Paint_19
   3055                          case ProcSPK: Label(Speech[g_leng].Glosnik,0,2,Htmp,15,34,16,105,0); break;
   \                     ??Procedure_Paint_31:
   \   00000520   82B0               SUB      SP,SP,#+8
   \   00000522   0020               MOVS     R0,#+0
   \   00000524   0090               STR      R0,[SP, #+0]
   \   00000526   6921               MOVS     R1,#+105
   \   00000528   1020               MOVS     R0,#+16
   \   0000052A   03B4               PUSH     {R0,R1}
   \   0000052C   2221               MOVS     R1,#+34
   \   0000052E   0F20               MOVS     R0,#+15
   \   00000530   03B4               PUSH     {R0,R1}
   \   00000532   3A23               MOVS     R3,#+58
   \   00000534   0222               MOVS     R2,#+2
   \   00000536   0021               MOVS     R1,#+0
   \   00000538   02B5               PUSH     {R1,LR}
   \   0000053A   FF21               MOVS     R1,#+255
   \   0000053C   C900               LSLS     R1,R1,#+3        ;; #+2040
   \   0000053E   8C46               MOV      R12,R1
   \   00000540   2968               LDR      R1,[R5, #+0]
   \   00000542   6143               MULS     R1,R4,R1
   \   00000544   7148               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   00000546   4018               ADDS     R0,R0,R1
   \   00000548   6146               MOV      R1,R12
   \   0000054A   4018               ADDS     R0,R0,R1
   \   0000054C   0099               LDR      R1,[SP, #0]
   \   0000054E   02B0               ADD      SP,SP,#+8
   \   00000550   ........           BL       Label
   \   00000554   06B0               ADD      SP,SP,#+24
   \   00000556   0BE1               B        ??Procedure_Paint_19
   3056                          case ProcTimerSet: Label(Speech[g_leng].Timer,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_32:
   \   00000558   82B0               SUB      SP,SP,#+8
   \   0000055A   0020               MOVS     R0,#+0
   \   0000055C   0090               STR      R0,[SP, #+0]
   \   0000055E   6921               MOVS     R1,#+105
   \   00000560   1020               MOVS     R0,#+16
   \   00000562   03B4               PUSH     {R0,R1}
   \   00000564   2721               MOVS     R1,#+39
   \   00000566   0F20               MOVS     R0,#+15
   \   00000568   03B4               PUSH     {R0,R1}
   \   0000056A   3A23               MOVS     R3,#+58
   \   0000056C   0222               MOVS     R2,#+2
   \   0000056E   0021               MOVS     R1,#+0
   \   00000570   02B5               PUSH     {R1,LR}
   \   00000572   6C49               LDR      R1,??Procedure_Paint_24+0x18  ;; 0x3cf
   \   00000574   8C46               MOV      R12,R1
   \   00000576   2968               LDR      R1,[R5, #+0]
   \   00000578   6143               MULS     R1,R4,R1
   \   0000057A   6448               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   0000057C   4018               ADDS     R0,R0,R1
   \   0000057E   6146               MOV      R1,R12
   \   00000580   4018               ADDS     R0,R0,R1
   \   00000582   0099               LDR      R1,[SP, #0]
   \   00000584   02B0               ADD      SP,SP,#+8
   \   00000586   ........           BL       Label
   \   0000058A   06B0               ADD      SP,SP,#+24
   \   0000058C   F0E0               B        ??Procedure_Paint_19
   3057                          case ProcClock: Label(Speech[g_leng].Zegar,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_33:
   \   0000058E   82B0               SUB      SP,SP,#+8
   \   00000590   0020               MOVS     R0,#+0
   \   00000592   0090               STR      R0,[SP, #+0]
   \   00000594   6921               MOVS     R1,#+105
   \   00000596   1020               MOVS     R0,#+16
   \   00000598   03B4               PUSH     {R0,R1}
   \   0000059A   2721               MOVS     R1,#+39
   \   0000059C   0F20               MOVS     R0,#+15
   \   0000059E   03B4               PUSH     {R0,R1}
   \   000005A0   3A23               MOVS     R3,#+58
   \   000005A2   0222               MOVS     R2,#+2
   \   000005A4   0021               MOVS     R1,#+0
   \   000005A6   02B5               PUSH     {R1,LR}
   \   000005A8   5F49               LDR      R1,??Procedure_Paint_24+0x1C  ;; 0x3de
   \   000005AA   8C46               MOV      R12,R1
   \   000005AC   2968               LDR      R1,[R5, #+0]
   \   000005AE   6143               MULS     R1,R4,R1
   \   000005B0   5648               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000005B2   4018               ADDS     R0,R0,R1
   \   000005B4   6146               MOV      R1,R12
   \   000005B6   4018               ADDS     R0,R0,R1
   \   000005B8   0099               LDR      R1,[SP, #0]
   \   000005BA   02B0               ADD      SP,SP,#+8
   \   000005BC   ........           BL       Label
   \   000005C0   06B0               ADD      SP,SP,#+24
   \   000005C2   D5E0               B        ??Procedure_Paint_19
   3058                          case ProcDay: Label(Speech[g_leng].DzienTygodnia,0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_34:
   \   000005C4   82B0               SUB      SP,SP,#+8
   \   000005C6   0020               MOVS     R0,#+0
   \   000005C8   0090               STR      R0,[SP, #+0]
   \   000005CA   6921               MOVS     R1,#+105
   \   000005CC   1020               MOVS     R0,#+16
   \   000005CE   03B4               PUSH     {R0,R1}
   \   000005D0   2721               MOVS     R1,#+39
   \   000005D2   0F20               MOVS     R0,#+15
   \   000005D4   03B4               PUSH     {R0,R1}
   \   000005D6   3A23               MOVS     R3,#+58
   \   000005D8   0222               MOVS     R2,#+2
   \   000005DA   0021               MOVS     R1,#+0
   \   000005DC   02B5               PUSH     {R1,LR}
   \   000005DE   5349               LDR      R1,??Procedure_Paint_24+0x20  ;; 0x564
   \   000005E0   8C46               MOV      R12,R1
   \   000005E2   2968               LDR      R1,[R5, #+0]
   \   000005E4   6143               MULS     R1,R4,R1
   \   000005E6   4948               LDR      R0,??Procedure_Paint_24  ;; Speech
   \   000005E8   4018               ADDS     R0,R0,R1
   \   000005EA   6146               MOV      R1,R12
   \   000005EC   4018               ADDS     R0,R0,R1
   \   000005EE   0099               LDR      R1,[SP, #0]
   \   000005F0   02B0               ADD      SP,SP,#+8
   \   000005F2   ........           BL       Label
   \   000005F6   06B0               ADD      SP,SP,#+24
   \   000005F8   BAE0               B        ??Procedure_Paint_19
   3059                          case ProcConstAnal: Label("Const. ",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_35:
   \   000005FA   82B0               SUB      SP,SP,#+8
   \   000005FC   0020               MOVS     R0,#+0
   \   000005FE   0090               STR      R0,[SP, #+0]
   \   00000600   6921               MOVS     R1,#+105
   \   00000602   1020               MOVS     R0,#+16
   \   00000604   03B4               PUSH     {R0,R1}
   \   00000606   2721               MOVS     R1,#+39
   \   00000608   0F20               MOVS     R0,#+15
   \   0000060A   03B4               PUSH     {R0,R1}
   \   0000060C   3A23               MOVS     R3,#+58
   \   0000060E   0222               MOVS     R2,#+2
   \   00000610   0021               MOVS     R1,#+0
   \   00000612   4748               LDR      R0,??Procedure_Paint_24+0x24  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 12
   \   00000614   ........           BL       Label
   \   00000618   06B0               ADD      SP,SP,#+24
   \   0000061A   A9E0               B        ??Procedure_Paint_19
   3060                          case ProcGetReg: Label("Get reg.",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_36:
   \   0000061C   82B0               SUB      SP,SP,#+8
   \   0000061E   0020               MOVS     R0,#+0
   \   00000620   0090               STR      R0,[SP, #+0]
   \   00000622   6921               MOVS     R1,#+105
   \   00000624   1020               MOVS     R0,#+16
   \   00000626   03B4               PUSH     {R0,R1}
   \   00000628   2721               MOVS     R1,#+39
   \   0000062A   0F20               MOVS     R0,#+15
   \   0000062C   03B4               PUSH     {R0,R1}
   \   0000062E   3A23               MOVS     R3,#+58
   \   00000630   0222               MOVS     R2,#+2
   \   00000632   0021               MOVS     R1,#+0
   \   00000634   3F48               LDR      R0,??Procedure_Paint_24+0x28  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 20
   \   00000636   ........           BL       Label
   \   0000063A   06B0               ADD      SP,SP,#+24
   \   0000063C   98E0               B        ??Procedure_Paint_19
   3061                          case ProcSetReg: Label("Set reg.",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_37:
   \   0000063E   82B0               SUB      SP,SP,#+8
   \   00000640   0020               MOVS     R0,#+0
   \   00000642   0090               STR      R0,[SP, #+0]
   \   00000644   6921               MOVS     R1,#+105
   \   00000646   1020               MOVS     R0,#+16
   \   00000648   03B4               PUSH     {R0,R1}
   \   0000064A   2721               MOVS     R1,#+39
   \   0000064C   0F20               MOVS     R0,#+15
   \   0000064E   03B4               PUSH     {R0,R1}
   \   00000650   3A23               MOVS     R3,#+58
   \   00000652   0222               MOVS     R2,#+2
   \   00000654   0021               MOVS     R1,#+0
   \   00000656   3848               LDR      R0,??Procedure_Paint_24+0x2C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 32
   \   00000658   ........           BL       Label
   \   0000065C   06B0               ADD      SP,SP,#+24
   \   0000065E   87E0               B        ??Procedure_Paint_19
   3062                          case ProcLim: Label("1>2 Q=1",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_38:
   \   00000660   82B0               SUB      SP,SP,#+8
   \   00000662   0020               MOVS     R0,#+0
   \   00000664   0090               STR      R0,[SP, #+0]
   \   00000666   6921               MOVS     R1,#+105
   \   00000668   1020               MOVS     R0,#+16
   \   0000066A   03B4               PUSH     {R0,R1}
   \   0000066C   2721               MOVS     R1,#+39
   \   0000066E   0F20               MOVS     R0,#+15
   \   00000670   03B4               PUSH     {R0,R1}
   \   00000672   3A23               MOVS     R3,#+58
   \   00000674   0222               MOVS     R2,#+2
   \   00000676   0021               MOVS     R1,#+0
   \   00000678   3048               LDR      R0,??Procedure_Paint_24+0x30  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 44
   \   0000067A   ........           BL       Label
   \   0000067E   06B0               ADD      SP,SP,#+24
   \   00000680   76E0               B        ??Procedure_Paint_19
   3063                          case ProcEven: Label("1=2 Q=1",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_39:
   \   00000682   82B0               SUB      SP,SP,#+8
   \   00000684   0020               MOVS     R0,#+0
   \   00000686   0090               STR      R0,[SP, #+0]
   \   00000688   6921               MOVS     R1,#+105
   \   0000068A   1020               MOVS     R0,#+16
   \   0000068C   03B4               PUSH     {R0,R1}
   \   0000068E   2721               MOVS     R1,#+39
   \   00000690   0F20               MOVS     R0,#+15
   \   00000692   03B4               PUSH     {R0,R1}
   \   00000694   3A23               MOVS     R3,#+58
   \   00000696   0222               MOVS     R2,#+2
   \   00000698   0021               MOVS     R1,#+0
   \   0000069A   2948               LDR      R0,??Procedure_Paint_24+0x34  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 52
   \   0000069C   ........           BL       Label
   \   000006A0   06B0               ADD      SP,SP,#+24
   \   000006A2   65E0               B        ??Procedure_Paint_19
   3064                          case ProcPlus: Label("Q=1+2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_40:
   \   000006A4   82B0               SUB      SP,SP,#+8
   \   000006A6   0020               MOVS     R0,#+0
   \   000006A8   0090               STR      R0,[SP, #+0]
   \   000006AA   6921               MOVS     R1,#+105
   \   000006AC   1020               MOVS     R0,#+16
   \   000006AE   03B4               PUSH     {R0,R1}
   \   000006B0   2721               MOVS     R1,#+39
   \   000006B2   0F20               MOVS     R0,#+15
   \   000006B4   03B4               PUSH     {R0,R1}
   \   000006B6   3A23               MOVS     R3,#+58
   \   000006B8   0222               MOVS     R2,#+2
   \   000006BA   0021               MOVS     R1,#+0
   \   000006BC   2148               LDR      R0,??Procedure_Paint_24+0x38  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 60
   \   000006BE   ........           BL       Label
   \   000006C2   06B0               ADD      SP,SP,#+24
   \   000006C4   54E0               B        ??Procedure_Paint_19
   3065                          case ProcMinus: Label("Q=1-2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_41:
   \   000006C6   82B0               SUB      SP,SP,#+8
   \   000006C8   0020               MOVS     R0,#+0
   \   000006CA   0090               STR      R0,[SP, #+0]
   \   000006CC   6921               MOVS     R1,#+105
   \   000006CE   1020               MOVS     R0,#+16
   \   000006D0   03B4               PUSH     {R0,R1}
   \   000006D2   2721               MOVS     R1,#+39
   \   000006D4   0F20               MOVS     R0,#+15
   \   000006D6   03B4               PUSH     {R0,R1}
   \   000006D8   3A23               MOVS     R3,#+58
   \   000006DA   0222               MOVS     R2,#+2
   \   000006DC   0021               MOVS     R1,#+0
   \   000006DE   1A48               LDR      R0,??Procedure_Paint_24+0x3C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 68
   \   000006E0   ........           BL       Label
   \   000006E4   06B0               ADD      SP,SP,#+24
   \   000006E6   43E0               B        ??Procedure_Paint_19
   3066                          case ProcMul: Label("Q=1x2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_42:
   \   000006E8   82B0               SUB      SP,SP,#+8
   \   000006EA   0020               MOVS     R0,#+0
   \   000006EC   0090               STR      R0,[SP, #+0]
   \   000006EE   6921               MOVS     R1,#+105
   \   000006F0   1020               MOVS     R0,#+16
   \   000006F2   03B4               PUSH     {R0,R1}
   \   000006F4   2721               MOVS     R1,#+39
   \   000006F6   0F20               MOVS     R0,#+15
   \   000006F8   03B4               PUSH     {R0,R1}
   \   000006FA   3A23               MOVS     R3,#+58
   \   000006FC   0222               MOVS     R2,#+2
   \   000006FE   0021               MOVS     R1,#+0
   \   00000700   1248               LDR      R0,??Procedure_Paint_24+0x40  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 76
   \   00000702   ........           BL       Label
   \   00000706   06B0               ADD      SP,SP,#+24
   \   00000708   32E0               B        ??Procedure_Paint_19
   \   0000070A   C046               Nop      
   \                     ??Procedure_Paint_24:
   \   0000070C   ........           DC32     Speech
   \   00000710   57030000           DC32     0x357
   \   00000714   66030000           DC32     0x366
   \   00000718   75030000           DC32     0x375
   \   0000071C   A2030000           DC32     0x3a2
   \   00000720   B1030000           DC32     0x3b1
   \   00000724   CF030000           DC32     0x3cf
   \   00000728   DE030000           DC32     0x3de
   \   0000072C   64050000           DC32     0x564
   \   00000730   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 12
   \   00000734   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 20
   \   00000738   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 32
   \   0000073C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 44
   \   00000740   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 52
   \   00000744   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 60
   \   00000748   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 68
   \   0000074C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 76
   3067                          case ProcDiv: Label("Q=1/2",0,2,Htmp,15,39,16,105,0); break;
   \                     ??Procedure_Paint_43:
   \   00000750   82B0               SUB      SP,SP,#+8
   \   00000752   0020               MOVS     R0,#+0
   \   00000754   0090               STR      R0,[SP, #+0]
   \   00000756   6921               MOVS     R1,#+105
   \   00000758   1020               MOVS     R0,#+16
   \   0000075A   03B4               PUSH     {R0,R1}
   \   0000075C   2721               MOVS     R1,#+39
   \   0000075E   0F20               MOVS     R0,#+15
   \   00000760   03B4               PUSH     {R0,R1}
   \   00000762   3A23               MOVS     R3,#+58
   \   00000764   0222               MOVS     R2,#+2
   \   00000766   0021               MOVS     R1,#+0
   \   00000768   6648               LDR      R0,??Procedure_Paint_44  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 84
   \   0000076A   ........           BL       Label
   \   0000076E   06B0               ADD      SP,SP,#+24
   3068          
   3069                                       
   3070                        }
   3071                        
   3072                        
   3073                        
   3074                        if (
   3075                           (Prc.Type!=ProcInc) && 
   3076                           (Prc.Type!=ProcDec) &&
   3077                           ((Prc.Type<ProcTimeStart)
   3078                            || (Prc.Type==ProcGetReg)
   3079                            || (Prc.Type==ProcSetReg)
   3080                           )
   3081                          )
   \                     ??Procedure_Paint_19:
   \   00000770   3078               LDRB     R0,[R6, #+0]
   \   00000772   2528               CMP      R0,#+37
   \   00000774   67D0               BEQ      ??Procedure_Paint_45
   \   00000776   2628               CMP      R0,#+38
   \   00000778   65D0               BEQ      ??Procedure_Paint_45
   \   0000077A   2C28               CMP      R0,#+44
   \   0000077C   03D3               BCC      ??Procedure_Paint_46
   \   0000077E   3828               CMP      R0,#+56
   \   00000780   01D0               BEQ      ??Procedure_Paint_46
   \   00000782   3928               CMP      R0,#+57
   \   00000784   5FD1               BNE      ??Procedure_Paint_45
   3082                        {
   3083                          txt[0]='>';
   \                     ??Procedure_Paint_46:
   \   00000786   3E20               MOVS     R0,#+62
   \   00000788   3870               STRB     R0,[R7, #+0]
   3084                          Button(txt,43,25,18,18);
   \   0000078A   82B0               SUB      SP,SP,#+8
   \   0000078C   1220               MOVS     R0,#+18
   \   0000078E   0090               STR      R0,[SP, #+0]
   \   00000790   0300               MOVS     R3,R0
   \   00000792   1922               MOVS     R2,#+25
   \   00000794   2B21               MOVS     R1,#+43
   \   00000796   02A8               ADD      R0,SP,#+8
   \   00000798   ........           BL       Button
   \   0000079C   02B0               ADD      SP,SP,#+8
   3085                          txt[0]='<';
   \   0000079E   3C20               MOVS     R0,#+60
   \   000007A0   3870               STRB     R0,[R7, #+0]
   3086                          Button(txt,2,25,18,18);
   \   000007A2   82B0               SUB      SP,SP,#+8
   \   000007A4   1220               MOVS     R0,#+18
   \   000007A6   0090               STR      R0,[SP, #+0]
   \   000007A8   0300               MOVS     R3,R0
   \   000007AA   1922               MOVS     R2,#+25
   \   000007AC   0221               MOVS     R1,#+2
   \   000007AE   02A8               ADD      R0,SP,#+8
   \   000007B0   ........           BL       Button
   \   000007B4   02B0               ADD      SP,SP,#+8
   3087                         
   3088                          if (Prc.Type!=ProcSPK)
   \   000007B6   3078               LDRB     R0,[R6, #+0]
   \   000007B8   2728               CMP      R0,#+39
   \   000007BA   29D0               BEQ      ??Procedure_Paint_47
   3089                          {
   3090                            if (Prc.Nr>=0)
   \   000007BC   0120               MOVS     R0,#+1
   \   000007BE   3056               LDRSB    R0,[R6, R0]
   \   000007C0   0028               CMP      R0,#+0
   \   000007C2   0FD4               BMI      ??Procedure_Paint_48
   3091                            {
   3092                              txt[0]='N';txt[1]='r';txt[2]=':';
   \   000007C4   4E20               MOVS     R0,#+78
   \   000007C6   3870               STRB     R0,[R7, #+0]
   \   000007C8   7220               MOVS     R0,#+114
   \   000007CA   7870               STRB     R0,[R7, #+1]
   \   000007CC   3A20               MOVS     R0,#+58
   \   000007CE   B870               STRB     R0,[R7, #+2]
   3093                              CharToStr(Prc.Nr, &txt[3], 2); //(char Value, char *Vstring, char ill);
   \   000007D0   0222               MOVS     R2,#+2
   \   000007D2   3900               MOVS     R1,R7
   \   000007D4   C91C               ADDS     R1,R1,#+3
   \   000007D6   0120               MOVS     R0,#+1
   \   000007D8   3056               LDRSB    R0,[R6, R0]
   \   000007DA   0006               LSLS     R0,R0,#+24
   \   000007DC   000E               LSRS     R0,R0,#+24
   \   000007DE   ........           BL       CharToStr
   \   000007E2   05E0               B        ??Procedure_Paint_49
   3094                              
   3095                            }else{
   3096                              txt[0]='V';txt[1]='a';txt[2]='r';
   \                     ??Procedure_Paint_48:
   \   000007E4   5620               MOVS     R0,#+86
   \   000007E6   3870               STRB     R0,[R7, #+0]
   \   000007E8   6120               MOVS     R0,#+97
   \   000007EA   7870               STRB     R0,[R7, #+1]
   \   000007EC   7220               MOVS     R0,#+114
   \   000007EE   B870               STRB     R0,[R7, #+2]
   3097                            }
   3098                            Label(txt,2,21,29,5,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \                     ??Procedure_Paint_49:
   \   000007F0   82B0               SUB      SP,SP,#+8
   \   000007F2   0020               MOVS     R0,#+0
   \   000007F4   0090               STR      R0,[SP, #+0]
   \   000007F6   6921               MOVS     R1,#+105
   \   000007F8   03B4               PUSH     {R0,R1}
   \   000007FA   1421               MOVS     R1,#+20
   \   000007FC   0520               MOVS     R0,#+5
   \   000007FE   03B4               PUSH     {R0,R1}
   \   00000800   1D23               MOVS     R3,#+29
   \   00000802   1522               MOVS     R2,#+21
   \   00000804   0221               MOVS     R1,#+2
   \   00000806   06A8               ADD      R0,SP,#+24
   \   00000808   ........           BL       Label
   \   0000080C   06B0               ADD      SP,SP,#+24
   \   0000080E   1AE0               B        ??Procedure_Paint_45
   3099                          }else{
   3100                            if(Prc.Tag.SpeakerType>SPK_Amount-1) Prc.Tag.SpeakerType=0;
   \                     ??Procedure_Paint_47:
   \   00000810   307A               LDRB     R0,[R6, #+8]
   \   00000812   0428               CMP      R0,#+4
   \   00000814   01D3               BCC      ??Procedure_Paint_50
   \   00000816   0020               MOVS     R0,#+0
   \   00000818   3072               STRB     R0,[R6, #+8]
   3101                            CopyToCanvasPoint((char*)SPK_1[Prc.Tag.SpeakerType], 23,31, 16,5); 
   \                     ??Procedure_Paint_50:
   \   0000081A   82B0               SUB      SP,SP,#+8
   \   0000081C   0520               MOVS     R0,#+5
   \   0000081E   0090               STR      R0,[SP, #+0]
   \   00000820   1023               MOVS     R3,#+16
   \   00000822   1F22               MOVS     R2,#+31
   \   00000824   1721               MOVS     R1,#+23
   \   00000826   02B5               PUSH     {R1,LR}
   \   00000828   9446               MOV      R12,R2
   \   0000082A   9C21               MOVS     R1,#+156
   \   0000082C   4900               LSLS     R1,R1,#+1        ;; #+312
   \   0000082E   307A               LDRB     R0,[R6, #+8]
   \   00000830   0A22               MOVS     R2,#+10
   \   00000832   5043               MULS     R0,R2,R0
   \   00000834   344A               LDR      R2,??Procedure_Paint_44+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000836   1018               ADDS     R0,R2,R0
   \   00000838   4018               ADDS     R0,R0,R1
   \   0000083A   6246               MOV      R2,R12
   \   0000083C   0099               LDR      R1,[SP, #0]
   \   0000083E   02B0               ADD      SP,SP,#+8
   \   00000840   ........           BL       CopyToCanvasPoint
   \   00000844   02B0               ADD      SP,SP,#+8
   3102                          }
   3103                        }
   3104                        
   3105                        if ((Prc.Type==ProcStI) || (Prc.Type==ProcStNI) || (Prc.Type==ProcStQ) || (Prc.Type==ProcWOUT) || (Prc.Type==ProcWOUTS) || (Prc.Type==ProcWOUTR)|| (Prc.Type==ProcWOUTC))
   \                     ??Procedure_Paint_45:
   \   00000846   3078               LDRB     R0,[R6, #+0]
   \   00000848   1428               CMP      R0,#+20
   \   0000084A   0BD0               BEQ      ??Procedure_Paint_51
   \   0000084C   1528               CMP      R0,#+21
   \   0000084E   09D0               BEQ      ??Procedure_Paint_51
   \   00000850   1628               CMP      R0,#+22
   \   00000852   07D0               BEQ      ??Procedure_Paint_51
   \   00000854   2028               CMP      R0,#+32
   \   00000856   05D0               BEQ      ??Procedure_Paint_51
   \   00000858   2128               CMP      R0,#+33
   \   0000085A   03D0               BEQ      ??Procedure_Paint_51
   \   0000085C   2228               CMP      R0,#+34
   \   0000085E   01D0               BEQ      ??Procedure_Paint_51
   \   00000860   2328               CMP      R0,#+35
   \   00000862   6DD1               BNE      ??Procedure_Paint_12
   3106                        {
   3107                          txt[1]=0;
   \                     ??Procedure_Paint_51:
   \   00000864   0020               MOVS     R0,#+0
   \   00000866   7870               STRB     R0,[R7, #+1]
   3108                          txt[0]='>';
   \   00000868   3E20               MOVS     R0,#+62
   \   0000086A   3870               STRB     R0,[R7, #+0]
   3109                          Button(txt,43,4,18,18);
   \   0000086C   82B0               SUB      SP,SP,#+8
   \   0000086E   1220               MOVS     R0,#+18
   \   00000870   0090               STR      R0,[SP, #+0]
   \   00000872   0300               MOVS     R3,R0
   \   00000874   0422               MOVS     R2,#+4
   \   00000876   2B21               MOVS     R1,#+43
   \   00000878   02A8               ADD      R0,SP,#+8
   \   0000087A   ........           BL       Button
   \   0000087E   02B0               ADD      SP,SP,#+8
   3110                          txt[0]='<';
   \   00000880   3C20               MOVS     R0,#+60
   \   00000882   3870               STRB     R0,[R7, #+0]
   3111                          Button(txt,2,4,18,18);
   \   00000884   82B0               SUB      SP,SP,#+8
   \   00000886   1220               MOVS     R0,#+18
   \   00000888   0090               STR      R0,[SP, #+0]
   \   0000088A   0300               MOVS     R3,R0
   \   0000088C   0422               MOVS     R2,#+4
   \   0000088E   0221               MOVS     R1,#+2
   \   00000890   02A8               ADD      R0,SP,#+8
   \   00000892   ........           BL       Button
   \   00000896   02B0               ADD      SP,SP,#+8
   3112                          if (Prc.Nr>=0)
   \   00000898   0120               MOVS     R0,#+1
   \   0000089A   3056               LDRSB    R0,[R6, R0]
   \   0000089C   0028               CMP      R0,#+0
   \   0000089E   35D4               BMI      ??Procedure_Paint_52
   3113                            {
   3114                              txt[0]='P';txt[1]='o';txt[2]='r';txt[3]='t';txt[4]=':';
   \   000008A0   5020               MOVS     R0,#+80
   \   000008A2   3870               STRB     R0,[R7, #+0]
   \   000008A4   6F20               MOVS     R0,#+111
   \   000008A6   7870               STRB     R0,[R7, #+1]
   \   000008A8   7220               MOVS     R0,#+114
   \   000008AA   B870               STRB     R0,[R7, #+2]
   \   000008AC   7420               MOVS     R0,#+116
   \   000008AE   F870               STRB     R0,[R7, #+3]
   \   000008B0   3A20               MOVS     R0,#+58
   \   000008B2   3871               STRB     R0,[R7, #+4]
   3115                              Label(txt,2,21,12,5,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000008B4   82B0               SUB      SP,SP,#+8
   \   000008B6   0020               MOVS     R0,#+0
   \   000008B8   0090               STR      R0,[SP, #+0]
   \   000008BA   6921               MOVS     R1,#+105
   \   000008BC   03B4               PUSH     {R0,R1}
   \   000008BE   1421               MOVS     R1,#+20
   \   000008C0   0520               MOVS     R0,#+5
   \   000008C2   03B4               PUSH     {R0,R1}
   \   000008C4   0C23               MOVS     R3,#+12
   \   000008C6   1522               MOVS     R2,#+21
   \   000008C8   0221               MOVS     R1,#+2
   \   000008CA   06A8               ADD      R0,SP,#+24
   \   000008CC   ........           BL       Label
   \   000008D0   06B0               ADD      SP,SP,#+24
   3116                              txt[1]=0;txt[2]=0;
   \   000008D2   0020               MOVS     R0,#+0
   \   000008D4   7870               STRB     R0,[R7, #+1]
   \   000008D6   B870               STRB     R0,[R7, #+2]
   3117                              CharToStr(Prc.Tag.Port, txt, 2); //(char Value, char *Vstring, char ill);
   \   000008D8   0222               MOVS     R2,#+2
   \   000008DA   6946               MOV      R1,SP
   \   000008DC   307A               LDRB     R0,[R6, #+8]
   \   000008DE   ........           BL       CharToStr
   3118                              Label(txt,0,26,4,2,10,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)
   \   000008E2   82B0               SUB      SP,SP,#+8
   \   000008E4   0020               MOVS     R0,#+0
   \   000008E6   0090               STR      R0,[SP, #+0]
   \   000008E8   6921               MOVS     R1,#+105
   \   000008EA   03B4               PUSH     {R0,R1}
   \   000008EC   0A21               MOVS     R1,#+10
   \   000008EE   0220               MOVS     R0,#+2
   \   000008F0   03B4               PUSH     {R0,R1}
   \   000008F2   0423               MOVS     R3,#+4
   \   000008F4   1A22               MOVS     R2,#+26
   \   000008F6   0021               MOVS     R1,#+0
   \   000008F8   06A8               ADD      R0,SP,#+24
   \   000008FA   ........           BL       Label
   \   000008FE   06B0               ADD      SP,SP,#+24
   \   00000900   1EE0               B        ??Procedure_Paint_12
   \   00000902   C046               Nop      
   \                     ??Procedure_Paint_44:
   \   00000904   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 84
   \   00000908   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   3119                            }else{
   3120                              txt[0]='b';txt[1]=0;txt[2]=0;
   \                     ??Procedure_Paint_52:
   \   0000090C   6220               MOVS     R0,#+98
   \   0000090E   3870               STRB     R0,[R7, #+0]
   \   00000910   0020               MOVS     R0,#+0
   \   00000912   7870               STRB     R0,[R7, #+1]
   \   00000914   B870               STRB     R0,[R7, #+2]
   3121                              CharToStr(Prc.Tag.Port, txt+1, 2); //(char Value, char *Vstring, char ill);
   \   00000916   0222               MOVS     R2,#+2
   \   00000918   7F1C               ADDS     R7,R7,#+1
   \   0000091A   3900               MOVS     R1,R7
   \   0000091C   307A               LDRB     R0,[R6, #+8]
   \   0000091E   ........           BL       CharToStr
   3122                              Label(txt,2,21,12,3,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000922   82B0               SUB      SP,SP,#+8
   \   00000924   0020               MOVS     R0,#+0
   \   00000926   0090               STR      R0,[SP, #+0]
   \   00000928   6921               MOVS     R1,#+105
   \   0000092A   03B4               PUSH     {R0,R1}
   \   0000092C   1421               MOVS     R1,#+20
   \   0000092E   0320               MOVS     R0,#+3
   \   00000930   03B4               PUSH     {R0,R1}
   \   00000932   0C23               MOVS     R3,#+12
   \   00000934   1522               MOVS     R2,#+21
   \   00000936   0221               MOVS     R1,#+2
   \   00000938   06A8               ADD      R0,SP,#+24
   \   0000093A   ........           BL       Label
   \   0000093E   06B0               ADD      SP,SP,#+24
   3123                          
   3124                             /* txt[1]=0;txt[2]=0;
   3125                          CharToStr(Prc.Tag.Port, txt, 2); //(char Value, char *Vstring, char ill);
   3126                          Label(txt,0,26,4,2,10,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)
   3127                              */
   3128                            }
   3129                           
   3130                        }
   3131                      }
   3132          
   3133                    
   3134                      if ((Prc.Type>ProcStStart) && (Prc.Type<ProcStStop)) WybProc(1,0);
   \                     ??Procedure_Paint_12:
   \   00000940   3078               LDRB     R0,[R6, #+0]
   \   00000942   1428               CMP      R0,#+20
   \   00000944   05D3               BCC      ??Procedure_Paint_53
   \   00000946   1928               CMP      R0,#+25
   \   00000948   03D2               BCS      ??Procedure_Paint_53
   \   0000094A   0021               MOVS     R1,#+0
   \   0000094C   0120               MOVS     R0,#+1
   \   0000094E   ........           BL       WybProc
   3135                        
   3136                      
   3137                      
   3138                      if  ((Prc.Type>ProcSetStart) && (Prc.Type<ProcSetStop))
   \                     ??Procedure_Paint_53:
   \   00000952   3078               LDRB     R0,[R6, #+0]
   \   00000954   2028               CMP      R0,#+32
   \   00000956   05D3               BCC      ??Procedure_Paint_54
   \   00000958   2828               CMP      R0,#+40
   \   0000095A   03D2               BCS      ??Procedure_Paint_54
   3139                      { 
   3140                        WybProc(2,0);
   \   0000095C   0021               MOVS     R1,#+0
   \   0000095E   0220               MOVS     R0,#+2
   \   00000960   ........           BL       WybProc
   3141                      }
   3142          
   3143           
   3144          
   3145                      if  ((Prc.Type>ProcTimeStart) && (Prc.Type<ProcTimeStop))
   \                     ??Procedure_Paint_54:
   \   00000964   3078               LDRB     R0,[R6, #+0]
   \   00000966   2D28               CMP      R0,#+45
   \   00000968   05D3               BCC      ??Procedure_Paint_55
   \   0000096A   3028               CMP      R0,#+48
   \   0000096C   03D2               BCS      ??Procedure_Paint_55
   3146                      { 
   3147                        WybProc(1,1);
   \   0000096E   0121               MOVS     R1,#+1
   \   00000970   0800               MOVS     R0,R1
   \   00000972   ........           BL       WybProc
   3148                      } 
   3149          
   3150                      if  ((Prc.Type>ProcAnalogStart) && (Prc.Type<ProcAnalogStop))
   \                     ??Procedure_Paint_55:
   \   00000976   3078               LDRB     R0,[R6, #+0]
   \   00000978   3728               CMP      R0,#+55
   \   0000097A   05D3               BCC      ??Procedure_Paint_56
   \   0000097C   4028               CMP      R0,#+64
   \   0000097E   03D2               BCS      ??Procedure_Paint_56
   3151                      { 
   3152                        WybProc(2,1);
   \   00000980   0121               MOVS     R1,#+1
   \   00000982   0220               MOVS     R0,#+2
   \   00000984   ........           BL       WybProc
   3153                      } 
   3154                      
   3155                  if ((Prc.Type==ProcTimerSet))
   \                     ??Procedure_Paint_56:
   \   00000988   3078               LDRB     R0,[R6, #+0]
   \   0000098A   2D28               CMP      R0,#+45
   \   0000098C   65D1               BNE      ??Procedure_Paint_57
   3156                  {
   3157                    Label(Speech[g_leng].IleSek,0,3,37,13,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000098E   82B0               SUB      SP,SP,#+8
   \   00000990   0020               MOVS     R0,#+0
   \   00000992   0090               STR      R0,[SP, #+0]
   \   00000994   7F21               MOVS     R1,#+127
   \   00000996   0120               MOVS     R0,#+1
   \   00000998   03B4               PUSH     {R0,R1}
   \   0000099A   2121               MOVS     R1,#+33
   \   0000099C   0D20               MOVS     R0,#+13
   \   0000099E   03B4               PUSH     {R0,R1}
   \   000009A0   2523               MOVS     R3,#+37
   \   000009A2   0322               MOVS     R2,#+3
   \   000009A4   0021               MOVS     R1,#+0
   \   000009A6   BA4F               LDR      R7,??Procedure_Paint_58  ;; 0x3ed
   \   000009A8   BC46               MOV      R12,R7
   \   000009AA   2F68               LDR      R7,[R5, #+0]
   \   000009AC   6743               MULS     R7,R4,R7
   \   000009AE   B948               LDR      R0,??Procedure_Paint_58+0x4  ;; Speech
   \   000009B0   C019               ADDS     R0,R0,R7
   \   000009B2   6746               MOV      R7,R12
   \   000009B4   C019               ADDS     R0,R0,R7
   \   000009B6   ........           BL       Label
   \   000009BA   06B0               ADD      SP,SP,#+24
   3158                              
   3159                    FloToStr(Prc.Tag.SetCounter , txt, 9); //(char Value, char *Vstring, char ill);
   \   000009BC   0922               MOVS     R2,#+9
   \   000009BE   6946               MOV      R1,SP
   \   000009C0   02B5               PUSH     {R1,LR}
   \   000009C2   1700               MOVS     R7,R2
   \   000009C4   0698               LDR      R0,[SP, #+24]
   \   000009C6   ........           BL       __aeabi_ui2f
   \   000009CA   3A00               MOVS     R2,R7
   \   000009CC   0099               LDR      R1,[SP, #0]
   \   000009CE   02B0               ADD      SP,SP,#+8
   \   000009D0   ........           BL       FloToStr
   3160                    Label(txt,0,12,26,9,44,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000009D4   82B0               SUB      SP,SP,#+8
   \   000009D6   0020               MOVS     R0,#+0
   \   000009D8   0090               STR      R0,[SP, #+0]
   \   000009DA   7F21               MOVS     R1,#+127
   \   000009DC   0120               MOVS     R0,#+1
   \   000009DE   03B4               PUSH     {R0,R1}
   \   000009E0   2C21               MOVS     R1,#+44
   \   000009E2   3800               MOVS     R0,R7
   \   000009E4   03B4               PUSH     {R0,R1}
   \   000009E6   1A23               MOVS     R3,#+26
   \   000009E8   0C22               MOVS     R2,#+12
   \   000009EA   0021               MOVS     R1,#+0
   \   000009EC   06A8               ADD      R0,SP,#+24
   \   000009EE   ........           BL       Label
   \   000009F2   06B0               ADD      SP,SP,#+24
   3161          
   3162                    H_line(10,36,46,1); // (char X, int Y, char lenght, char typ) 
   \   000009F4   0123               MOVS     R3,#+1
   \   000009F6   2E22               MOVS     R2,#+46
   \   000009F8   2421               MOVS     R1,#+36
   \   000009FA   0A20               MOVS     R0,#+10
   \   000009FC   ........           BL       H_line
   3163                    H_line(10,24,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000A00   0123               MOVS     R3,#+1
   \   00000A02   2E22               MOVS     R2,#+46
   \   00000A04   1821               MOVS     R1,#+24
   \   00000A06   0A20               MOVS     R0,#+10
   \   00000A08   ........           BL       H_line
   3164                    V_line(10,25,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000A0C   0123               MOVS     R3,#+1
   \   00000A0E   0B22               MOVS     R2,#+11
   \   00000A10   1921               MOVS     R1,#+25
   \   00000A12   0A20               MOVS     R0,#+10
   \   00000A14   ........           BL       V_line
   3165                    V_line(55,25,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000A18   0123               MOVS     R3,#+1
   \   00000A1A   0B22               MOVS     R2,#+11
   \   00000A1C   1921               MOVS     R1,#+25
   \   00000A1E   3720               MOVS     R0,#+55
   \   00000A20   ........           BL       V_line
   3166                    
   3167                    
   3168                    
   3169                    txt[1]=0;
   \   00000A24   6F46               MOV      R7,SP
   \   00000A26   0020               MOVS     R0,#+0
   \   00000A28   7870               STRB     R0,[R7, #+1]
   3170                    txt[0]=30;
   \   00000A2A   1E20               MOVS     R0,#+30
   \   00000A2C   3870               STRB     R0,[R7, #+0]
   3171                    Button(txt,33,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000A2E   82B0               SUB      SP,SP,#+8
   \   00000A30   1320               MOVS     R0,#+19
   \   00000A32   0090               STR      R0,[SP, #+0]
   \   00000A34   0300               MOVS     R3,R0
   \   00000A36   0322               MOVS     R2,#+3
   \   00000A38   2121               MOVS     R1,#+33
   \   00000A3A   02A8               ADD      R0,SP,#+8
   \   00000A3C   ........           BL       Button
   \   00000A40   02B0               ADD      SP,SP,#+8
   3172                    txt[0]=31;
   \   00000A42   1F20               MOVS     R0,#+31
   \   00000A44   3870               STRB     R0,[R7, #+0]
   3173                    Button(txt,12,3,19,19); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000A46   82B0               SUB      SP,SP,#+8
   \   00000A48   1320               MOVS     R0,#+19
   \   00000A4A   0090               STR      R0,[SP, #+0]
   \   00000A4C   0300               MOVS     R3,R0
   \   00000A4E   0322               MOVS     R2,#+3
   \   00000A50   0C21               MOVS     R1,#+12
   \   00000A52   02A8               ADD      R0,SP,#+8
   \   00000A54   ........           BL       Button
   \   00000A58   02B0               ADD      SP,SP,#+8
   3174                 
   3175                  }
   3176                  
   3177                  
   3178                  
   3179                  if (Prc.Type==ProcClock)
   \                     ??Procedure_Paint_57:
   \   00000A5A   3078               LDRB     R0,[R6, #+0]
   \   00000A5C   2E28               CMP      R0,#+46
   \   00000A5E   00D0               BEQ      .+4
   \   00000A60   86E0               B        ??Procedure_Paint_59
   3180                  {
   3181          
   3182                 
   3183                 Label(   Speech[g_leng].Typ_,0,4,33,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A62   82B0               SUB      SP,SP,#+8
   \   00000A64   0020               MOVS     R0,#+0
   \   00000A66   0090               STR      R0,[SP, #+0]
   \   00000A68   7F21               MOVS     R1,#+127
   \   00000A6A   0120               MOVS     R0,#+1
   \   00000A6C   03B4               PUSH     {R0,R1}
   \   00000A6E   2121               MOVS     R1,#+33
   \   00000A70   0A20               MOVS     R0,#+10
   \   00000A72   03B4               PUSH     {R0,R1}
   \   00000A74   0B00               MOVS     R3,R1
   \   00000A76   0422               MOVS     R2,#+4
   \   00000A78   0021               MOVS     R1,#+0
   \   00000A7A   874F               LDR      R7,??Procedure_Paint_58+0x8  ;; 0x5cd
   \   00000A7C   BC46               MOV      R12,R7
   \   00000A7E   2F68               LDR      R7,[R5, #+0]
   \   00000A80   6743               MULS     R7,R4,R7
   \   00000A82   8448               LDR      R0,??Procedure_Paint_58+0x4  ;; Speech
   \   00000A84   C019               ADDS     R0,R0,R7
   \   00000A86   6746               MOV      R7,R12
   \   00000A88   C019               ADDS     R0,R0,R7
   \   00000A8A   ........           BL       Label
   \   00000A8E   06B0               ADD      SP,SP,#+24
   3184                       
   3185                 Label(   Speech[g_leng].Miesiac+(Prc.Tag.ClkPrcType  *15),0,4,24,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000A90   82B0               SUB      SP,SP,#+8
   \   00000A92   0020               MOVS     R0,#+0
   \   00000A94   0090               STR      R0,[SP, #+0]
   \   00000A96   7F21               MOVS     R1,#+127
   \   00000A98   0120               MOVS     R0,#+1
   \   00000A9A   03B4               PUSH     {R0,R1}
   \   00000A9C   2121               MOVS     R1,#+33
   \   00000A9E   0A20               MOVS     R0,#+10
   \   00000AA0   03B4               PUSH     {R0,R1}
   \   00000AA2   1823               MOVS     R3,#+24
   \   00000AA4   0422               MOVS     R2,#+4
   \   00000AA6   0021               MOVS     R1,#+0
   \   00000AA8   02B5               PUSH     {R1,LR}
   \   00000AAA   4B3F               SUBS     R7,R7,#+75
   \   00000AAC   317A               LDRB     R1,[R6, #+8]
   \   00000AAE   0F20               MOVS     R0,#+15
   \   00000AB0   4143               MULS     R1,R0,R1
   \   00000AB2   8C46               MOV      R12,R1
   \   00000AB4   2968               LDR      R1,[R5, #+0]
   \   00000AB6   6143               MULS     R1,R4,R1
   \   00000AB8   7648               LDR      R0,??Procedure_Paint_58+0x4  ;; Speech
   \   00000ABA   4018               ADDS     R0,R0,R1
   \   00000ABC   6146               MOV      R1,R12
   \   00000ABE   4018               ADDS     R0,R0,R1
   \   00000AC0   C019               ADDS     R0,R0,R7
   \   00000AC2   0099               LDR      R1,[SP, #0]
   \   00000AC4   02B0               ADD      SP,SP,#+8
   \   00000AC6   ........           BL       Label
   \   00000ACA   06B0               ADD      SP,SP,#+24
   3186                              
   3187          
   3188                 
   3189                 CharToStr(Prc.Tag.ClkPrcVal, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000ACC   0222               MOVS     R2,#+2
   \   00000ACE   6946               MOV      R1,SP
   \   00000AD0   707A               LDRB     R0,[R6, #+9]
   \   00000AD2   ........           BL       CharToStr
   3190                 Label(txt,2,24,7,2,14,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000AD6   82B0               SUB      SP,SP,#+8
   \   00000AD8   0020               MOVS     R0,#+0
   \   00000ADA   0090               STR      R0,[SP, #+0]
   \   00000ADC   7F21               MOVS     R1,#+127
   \   00000ADE   0120               MOVS     R0,#+1
   \   00000AE0   03B4               PUSH     {R0,R1}
   \   00000AE2   0E21               MOVS     R1,#+14
   \   00000AE4   0220               MOVS     R0,#+2
   \   00000AE6   03B4               PUSH     {R0,R1}
   \   00000AE8   0723               MOVS     R3,#+7
   \   00000AEA   1822               MOVS     R2,#+24
   \   00000AEC   0100               MOVS     R1,R0
   \   00000AEE   06A8               ADD      R0,SP,#+24
   \   00000AF0   ........           BL       Label
   \   00000AF4   06B0               ADD      SP,SP,#+24
   3191                  
   3192                 
   3193                 //przycisk zmiany typu procedury zegara (godzina, minuta,...)
   3194                 Button("> ",43,24,18,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000AF6   82B0               SUB      SP,SP,#+8
   \   00000AF8   1320               MOVS     R0,#+19
   \   00000AFA   0090               STR      R0,[SP, #+0]
   \   00000AFC   1223               MOVS     R3,#+18
   \   00000AFE   1822               MOVS     R2,#+24
   \   00000B00   2B21               MOVS     R1,#+43
   \   00000B02   66A0               ADR      R0,??Procedure_Paint_58+0xC  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000B04   ........           BL       Button
   \   00000B08   02B0               ADD      SP,SP,#+8
   3195                 
   3196                 H_line(23,17,17,1); // (char X, int Y, char lenght, char typ) 
   \   00000B0A   0123               MOVS     R3,#+1
   \   00000B0C   1122               MOVS     R2,#+17
   \   00000B0E   1100               MOVS     R1,R2
   \   00000B10   1720               MOVS     R0,#+23
   \   00000B12   ........           BL       H_line
   3197                 H_line(23,6,17,1); // (char X, int Y, char lenght, char typ) 
   \   00000B16   0123               MOVS     R3,#+1
   \   00000B18   1122               MOVS     R2,#+17
   \   00000B1A   0621               MOVS     R1,#+6
   \   00000B1C   1720               MOVS     R0,#+23
   \   00000B1E   ........           BL       H_line
   3198                 V_line(23,6,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000B22   0123               MOVS     R3,#+1
   \   00000B24   0B22               MOVS     R2,#+11
   \   00000B26   0621               MOVS     R1,#+6
   \   00000B28   1720               MOVS     R0,#+23
   \   00000B2A   ........           BL       V_line
   3199                 V_line(39,6,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000B2E   0123               MOVS     R3,#+1
   \   00000B30   0B22               MOVS     R2,#+11
   \   00000B32   0621               MOVS     R1,#+6
   \   00000B34   2720               MOVS     R0,#+39
   \   00000B36   ........           BL       V_line
   3200          
   3201                 
   3202                
   3203                 
   3204          
   3205                 txt[1]=0;
   \   00000B3A   6F46               MOV      R7,SP
   \   00000B3C   0020               MOVS     R0,#+0
   \   00000B3E   7870               STRB     R0,[R7, #+1]
   3206                 txt[0]=30;
   \   00000B40   1E20               MOVS     R0,#+30
   \   00000B42   3870               STRB     R0,[R7, #+0]
   3207                 Button(txt,43,3,18,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000B44   82B0               SUB      SP,SP,#+8
   \   00000B46   1320               MOVS     R0,#+19
   \   00000B48   0090               STR      R0,[SP, #+0]
   \   00000B4A   1223               MOVS     R3,#+18
   \   00000B4C   0322               MOVS     R2,#+3
   \   00000B4E   2B21               MOVS     R1,#+43
   \   00000B50   02A8               ADD      R0,SP,#+8
   \   00000B52   ........           BL       Button
   \   00000B56   02B0               ADD      SP,SP,#+8
   3208                 txt[0]=31;
   \   00000B58   1F20               MOVS     R0,#+31
   \   00000B5A   3870               STRB     R0,[R7, #+0]
   3209                 Button(txt,2,3,18,19); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000B5C   82B0               SUB      SP,SP,#+8
   \   00000B5E   1320               MOVS     R0,#+19
   \   00000B60   0090               STR      R0,[SP, #+0]
   \   00000B62   1223               MOVS     R3,#+18
   \   00000B64   0322               MOVS     R2,#+3
   \   00000B66   0221               MOVS     R1,#+2
   \   00000B68   02A8               ADD      R0,SP,#+8
   \   00000B6A   ........           BL       Button
   \   00000B6E   02B0               ADD      SP,SP,#+8
   3210                 
   3211                        
   3212                      }   
   3213                /*   
   3214                 if (Prc.Type==ProcStartTimer) 
   3215                 {
   3216                   Button("> ",2,46,18,11); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   3217                 }
   3218                */   
   3219                 
   3220                 if (Prc.Type==ProcDay) 
   \                     ??Procedure_Paint_59:
   \   00000B70   3078               LDRB     R0,[R6, #+0]
   \   00000B72   2F28               CMP      R0,#+47
   \   00000B74   35D1               BNE      ??Procedure_Paint_60
   3221                 {
   3222                          Button("> ",43,25,18,18);
   \   00000B76   82B0               SUB      SP,SP,#+8
   \   00000B78   1220               MOVS     R0,#+18
   \   00000B7A   0090               STR      R0,[SP, #+0]
   \   00000B7C   0300               MOVS     R3,R0
   \   00000B7E   1922               MOVS     R2,#+25
   \   00000B80   2B21               MOVS     R1,#+43
   \   00000B82   46A0               ADR      R0,??Procedure_Paint_58+0xC  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000B84   ........           BL       Button
   \   00000B88   02B0               ADD      SP,SP,#+8
   3223                          Button("< ",2,25,18,18);
   \   00000B8A   82B0               SUB      SP,SP,#+8
   \   00000B8C   1220               MOVS     R0,#+18
   \   00000B8E   0090               STR      R0,[SP, #+0]
   \   00000B90   0300               MOVS     R3,R0
   \   00000B92   1922               MOVS     R2,#+25
   \   00000B94   0221               MOVS     R1,#+2
   \   00000B96   42A0               ADR      R0,??Procedure_Paint_58+0x10  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000B98   ........           BL       Button
   \   00000B9C   02B0               ADD      SP,SP,#+8
   3224                          
   3225                          if(Prc.Tag.DayOfWeek==0) Prc.Tag.DayOfWeek=1;
   \   00000B9E   307A               LDRB     R0,[R6, #+8]
   \   00000BA0   0028               CMP      R0,#+0
   \   00000BA2   01D1               BNE      ??Procedure_Paint_61
   \   00000BA4   0120               MOVS     R0,#+1
   \   00000BA6   3072               STRB     R0,[R6, #+8]
   3226                          Label((char*)DeyOfWeekStr[g_leng][Prc.Tag.DayOfWeek],2,20,29,2,20,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \                     ??Procedure_Paint_61:
   \   00000BA8   82B0               SUB      SP,SP,#+8
   \   00000BAA   0020               MOVS     R0,#+0
   \   00000BAC   0090               STR      R0,[SP, #+0]
   \   00000BAE   6921               MOVS     R1,#+105
   \   00000BB0   03B4               PUSH     {R0,R1}
   \   00000BB2   1421               MOVS     R1,#+20
   \   00000BB4   0220               MOVS     R0,#+2
   \   00000BB6   03B4               PUSH     {R0,R1}
   \   00000BB8   1D23               MOVS     R3,#+29
   \   00000BBA   0A00               MOVS     R2,R1
   \   00000BBC   0100               MOVS     R1,R0
   \   00000BBE   02B5               PUSH     {R1,LR}
   \   00000BC0   B027               MOVS     R7,#+176
   \   00000BC2   7F00               LSLS     R7,R7,#+1        ;; #+352
   \   00000BC4   307A               LDRB     R0,[R6, #+8]
   \   00000BC6   4100               LSLS     R1,R0,#+1
   \   00000BC8   8C46               MOV      R12,R1
   \   00000BCA   2868               LDR      R0,[R5, #+0]
   \   00000BCC   0101               LSLS     R1,R0,#+4
   \   00000BCE   3548               LDR      R0,??Procedure_Paint_58+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000BD0   4018               ADDS     R0,R0,R1
   \   00000BD2   6146               MOV      R1,R12
   \   00000BD4   4018               ADDS     R0,R0,R1
   \   00000BD6   C019               ADDS     R0,R0,R7
   \   00000BD8   0099               LDR      R1,[SP, #0]
   \   00000BDA   02B0               ADD      SP,SP,#+8
   \   00000BDC   ........           BL       Label
   \   00000BE0   06B0               ADD      SP,SP,#+24
   3227                        
   3228                 }
   3229                 
   3230                 
   3231                 if (Prc.Type==ProcConstAnal) 
   \                     ??Procedure_Paint_60:
   \   00000BE2   3078               LDRB     R0,[R6, #+0]
   \   00000BE4   3728               CMP      R0,#+55
   \   00000BE6   0ED1               BNE      ??Procedure_Paint_62
   3232                 {
   3233                          Button(Speech[g_leng].Zmiana,10,16,40,18);
   \   00000BE8   82B0               SUB      SP,SP,#+8
   \   00000BEA   1220               MOVS     R0,#+18
   \   00000BEC   0090               STR      R0,[SP, #+0]
   \   00000BEE   2823               MOVS     R3,#+40
   \   00000BF0   1022               MOVS     R2,#+16
   \   00000BF2   0A21               MOVS     R1,#+10
   \   00000BF4   6008               LSRS     R0,R4,#+1
   \   00000BF6   2D68               LDR      R5,[R5, #+0]
   \   00000BF8   6543               MULS     R5,R4,R5
   \   00000BFA   264C               LDR      R4,??Procedure_Paint_58+0x4  ;; Speech
   \   00000BFC   6419               ADDS     R4,R4,R5
   \   00000BFE   2018               ADDS     R0,R4,R0
   \   00000C00   ........           BL       Button
   \   00000C04   02B0               ADD      SP,SP,#+8
   3234                 
   3235                 }
   3236                 
   3237                 if ((Prc.Type==ProcGetReg) || (Prc.Type==ProcSetReg) )
   \                     ??Procedure_Paint_62:
   \   00000C06   3078               LDRB     R0,[R6, #+0]
   \   00000C08   3828               CMP      R0,#+56
   \   00000C0A   01D0               BEQ      ??Procedure_Paint_63
   \   00000C0C   3928               CMP      R0,#+57
   \   00000C0E   3BD1               BNE      ??Procedure_Paint_64
   3238                 {
   3239                 
   3240                     Button("> ",43,5,18,18);
   \                     ??Procedure_Paint_63:
   \   00000C10   82B0               SUB      SP,SP,#+8
   \   00000C12   1220               MOVS     R0,#+18
   \   00000C14   0090               STR      R0,[SP, #+0]
   \   00000C16   0300               MOVS     R3,R0
   \   00000C18   0522               MOVS     R2,#+5
   \   00000C1A   2B21               MOVS     R1,#+43
   \   00000C1C   1FA0               ADR      R0,??Procedure_Paint_58+0xC  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000C1E   ........           BL       Button
   \   00000C22   02B0               ADD      SP,SP,#+8
   3241                     Button("< ",2, 5,18,18);
   \   00000C24   82B0               SUB      SP,SP,#+8
   \   00000C26   1220               MOVS     R0,#+18
   \   00000C28   0090               STR      R0,[SP, #+0]
   \   00000C2A   0300               MOVS     R3,R0
   \   00000C2C   0522               MOVS     R2,#+5
   \   00000C2E   0221               MOVS     R1,#+2
   \   00000C30   1BA0               ADR      R0,??Procedure_Paint_58+0x10  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000C32   ........           BL       Button
   \   00000C36   02B0               ADD      SP,SP,#+8
   3242                     Label("Reg:",0,22,15,4,14,1,127,0);
   \   00000C38   82B0               SUB      SP,SP,#+8
   \   00000C3A   0020               MOVS     R0,#+0
   \   00000C3C   0090               STR      R0,[SP, #+0]
   \   00000C3E   7F21               MOVS     R1,#+127
   \   00000C40   0120               MOVS     R0,#+1
   \   00000C42   03B4               PUSH     {R0,R1}
   \   00000C44   0E21               MOVS     R1,#+14
   \   00000C46   0420               MOVS     R0,#+4
   \   00000C48   03B4               PUSH     {R0,R1}
   \   00000C4A   0F23               MOVS     R3,#+15
   \   00000C4C   1622               MOVS     R2,#+22
   \   00000C4E   0021               MOVS     R1,#+0
   \   00000C50   1548               LDR      R0,??Procedure_Paint_58+0x18  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 92
   \   00000C52   ........           BL       Label
   \   00000C56   06B0               ADD      SP,SP,#+24
   3243                     txt[1]=0;
   \   00000C58   6846               MOV      R0,SP
   \   00000C5A   0021               MOVS     R1,#+0
   \   00000C5C   4170               STRB     R1,[R0, #+1]
   3244                     char il=CharToStr(Prc.Tag.RegNr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000C5E   0222               MOVS     R2,#+2
   \   00000C60   6946               MOV      R1,SP
   \   00000C62   307A               LDRB     R0,[R6, #+8]
   \   00000C64   ........           BL       CharToStr
   3245                     Label(txt,2,22,5,4,18,1,127,0);
   \   00000C68   82B0               SUB      SP,SP,#+8
   \   00000C6A   0020               MOVS     R0,#+0
   \   00000C6C   0090               STR      R0,[SP, #+0]
   \   00000C6E   7F21               MOVS     R1,#+127
   \   00000C70   0120               MOVS     R0,#+1
   \   00000C72   03B4               PUSH     {R0,R1}
   \   00000C74   1221               MOVS     R1,#+18
   \   00000C76   0420               MOVS     R0,#+4
   \   00000C78   03B4               PUSH     {R0,R1}
   \   00000C7A   0523               MOVS     R3,#+5
   \   00000C7C   1622               MOVS     R2,#+22
   \   00000C7E   0221               MOVS     R1,#+2
   \   00000C80   06A8               ADD      R0,SP,#+24
   \   00000C82   ........           BL       Label
   \   00000C86   06B0               ADD      SP,SP,#+24
   3246                 }
   3247                 
   3248                }
   \                     ??Procedure_Paint_64:
   \   00000C88   09B0               ADD      SP,SP,#+36
   \   00000C8A   F0BC               POP      {R4-R7}
   \   00000C8C   01BC               POP      {R0}
   \   00000C8E   0047               BX       R0               ;; return
   \                     ??Procedure_Paint_58:
   \   00000C90   ED030000           DC32     0x3ed
   \   00000C94   ........           DC32     Speech
   \   00000C98   CD050000           DC32     0x5cd
   \   00000C9C   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000CA0   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000CA4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000CA8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 92
   3249                
   3250          char ProcGlobType_down;
   3251          
   3252          

   \                                 In section Debug.txt, align 4, keep-with-next
   3253          void Procedure_Event(void)
   3254                {
   \                     Procedure_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   3255                 char MenuPaintExecut=0;
   \   00000002   0027               MOVS     R7,#+0
   \   00000004   3E00               MOVS     R6,R7
   3256                 char ProcGlobType_up;
   3257                 char ind;
   3258                 char txt[2];
   3259                 char exit;
   3260                 
   3261                 
   3262                        exit=0;
   \   00000006   3C00               MOVS     R4,R7
   3263                 //zdarzenie typu down "X"
   3264                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000008   C248               LDR      R0,??Procedure_Event_3  ;; X_down
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   405E               LDRSH    R0,[R0, R1]
   \   0000000E   2F28               CMP      R0,#+47
   \   00000010   2DDB               BLT      ??Procedure_Event_4
   \   00000012   3F28               CMP      R0,#+63
   \   00000014   2BDA               BGE      ??Procedure_Event_4
   \   00000016   C048               LDR      R0,??Procedure_Event_3+0x4  ;; Y_down
   \   00000018   405E               LDRSH    R0,[R0, R1]
   \   0000001A   7128               CMP      R0,#+113
   \   0000001C   27DB               BLT      ??Procedure_Event_4
   \   0000001E   7F28               CMP      R0,#+127
   \   00000020   25DA               BGE      ??Procedure_Event_4
   3265                  {
   3266                    //MenuPaint();
   3267                    H_line(49,114,10,0);
   \   00000022   0B00               MOVS     R3,R1
   \   00000024   0A22               MOVS     R2,#+10
   \   00000026   7221               MOVS     R1,#+114
   \   00000028   3120               MOVS     R0,#+49
   \   0000002A   ........           BL       H_line
   3268                    H_line(49,123,10,0); 
   \   0000002E   2300               MOVS     R3,R4
   \   00000030   0A22               MOVS     R2,#+10
   \   00000032   7B21               MOVS     R1,#+123
   \   00000034   3120               MOVS     R0,#+49
   \   00000036   ........           BL       H_line
   3269                    V_line(49,114,10,0); 
   \   0000003A   2300               MOVS     R3,R4
   \   0000003C   0A22               MOVS     R2,#+10
   \   0000003E   7221               MOVS     R1,#+114
   \   00000040   3120               MOVS     R0,#+49
   \   00000042   ........           BL       V_line
   3270                    V_line(58,114,10,0); 
   \   00000046   2300               MOVS     R3,R4
   \   00000048   0A22               MOVS     R2,#+10
   \   0000004A   7221               MOVS     R1,#+114
   \   0000004C   3A20               MOVS     R0,#+58
   \   0000004E   ........           BL       V_line
   3271                    exit=1;
   \   00000052   0124               MOVS     R4,#+1
   3272                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \   00000054   B148               LDR      R0,??Procedure_Event_3+0x8  ;; 0x13d7e9
   \   00000056   0078               LDRB     R0,[R0, #+0]
   \   00000058   0028               CMP      R0,#+0
   \   0000005A   08D1               BNE      ??Procedure_Event_4
   \   0000005C   B048               LDR      R0,??Procedure_Event_3+0xC  ;; 0xfffff430
   \   0000005E   0760               STR      R7,[R0, #+0]
   \   00000060   B04A               LDR      R2,??Procedure_Event_3+0x10  ;; ButtonBipCounter
   \   00000062   B148               LDR      R0,??Procedure_Event_3+0x14  ;; g_counter
   \   00000064   03C8               LDM      R0!,{R0,R1}
   \   00000066   0023               MOVS     R3,#+0
   \   00000068   0830               ADDS     R0,R0,#+8
   \   0000006A   5941               ADCS     R1,R1,R3
   \   0000006C   03C2               STM      R2!,{R0,R1}
   \                     ??Procedure_Event_4:
   \   0000006E   AF48               LDR      R0,??Procedure_Event_3+0x18  ;; X_up
   \   00000070   0021               MOVS     R1,#+0
   \   00000072   405E               LDRSH    R0,[R0, R1]
   \   00000074   2F28               CMP      R0,#+47
   \   00000076   22DB               BLT      ??Procedure_Event_5
   \   00000078   3F28               CMP      R0,#+63
   \   0000007A   20DA               BGE      ??Procedure_Event_5
   \   0000007C   AC48               LDR      R0,??Procedure_Event_3+0x1C  ;; Y_up
   \   0000007E   405E               LDRSH    R0,[R0, R1]
   \   00000080   7128               CMP      R0,#+113
   \   00000082   1CDB               BLT      ??Procedure_Event_5
   \   00000084   7F28               CMP      R0,#+127
   \   00000086   1ADA               BGE      ??Procedure_Event_5
   3273                  }
   3274            
   3275              
   3276                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   3277                  {
   3278                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \   00000088   A448               LDR      R0,??Procedure_Event_3+0x8  ;; 0x13d7e9
   \   0000008A   0078               LDRB     R0,[R0, #+0]
   \   0000008C   0028               CMP      R0,#+0
   \   0000008E   08D1               BNE      ??Procedure_Event_6
   \   00000090   A348               LDR      R0,??Procedure_Event_3+0xC  ;; 0xfffff430
   \   00000092   0760               STR      R7,[R0, #+0]
   \   00000094   A34A               LDR      R2,??Procedure_Event_3+0x10  ;; ButtonBipCounter
   \   00000096   A448               LDR      R0,??Procedure_Event_3+0x14  ;; g_counter
   \   00000098   03C8               LDM      R0!,{R0,R1}
   \   0000009A   0023               MOVS     R3,#+0
   \   0000009C   0830               ADDS     R0,R0,#+8
   \   0000009E   5941               ADCS     R1,R1,R3
   \   000000A0   03C2               STM      R2!,{R0,R1}
   \                     ??Procedure_Event_6:
   \   000000A2   0124               MOVS     R4,#+1
   \   000000A4   A348               LDR      R0,??Procedure_Event_3+0x20  ;; TextToChangeLength + 76
   \   000000A6   0760               STR      R7,[R0, #+0]
   3279                    exit=1;
   3280                    Rej_poz=0;
   3281          
   3282                    CountLines(&gProg);
   \   000000A8   A348               LDR      R0,??Procedure_Event_3+0x24  ;; gProg
   \   000000AA   ........           BL       CountLines
   3283            
   3284                    
   3285                      MenuLevel=(MenuLevel/10);
   \   000000AE   A348               LDR      R0,??Procedure_Event_3+0x28  ;; TextToChangeLength + 72
   \   000000B0   0068               LDR      R0,[R0, #+0]
   \   000000B2   0A21               MOVS     R1,#+10
   \   000000B4   ........           BL       __aeabi_idivmod
   \   000000B8   A049               LDR      R1,??Procedure_Event_3+0x28  ;; TextToChangeLength + 72
   \   000000BA   0860               STR      R0,[R1, #+0]
   3286                      MenuPaintExecut=1;
   \   000000BC   2600               MOVS     R6,R4
   3287          
   3288                  }  
   3289                 
   3290          if (exit==0)       
   \                     ??Procedure_Event_5:
   \   000000BE   002C               CMP      R4,#+0
   \   000000C0   01D0               BEQ      .+6
   \   000000C2   00F052FD           BL       ??Procedure_Event_7
   \   000000C6   9E48               LDR      R0,??Procedure_Event_3+0x2C  ;; TextToChangeLength + 8
   \   000000C8   0121               MOVS     R1,#+1
   \   000000CA   0170               STRB     R1,[R0, #+0]
   3291          {
   3292                  
   3293                  ProgramChange=1;  
   3294                  ProcGlobType_up=0;
   \   000000CC   0197               STR      R7,[SP, #+4]
   3295                  ind=0;
   \   000000CE   0222               MOVS     R2,#+2
   \   000000D0   47E0               B        ??Procedure_Event_8
   3296                  for (char j=2; j>=1; j--)
   3297                   for(char i=0; i<3; i++)
   3298                   {
   3299                      ind++;
   \                     ??Procedure_Event_9:
   \   000000D2   641C               ADDS     R4,R4,#+1
   \   000000D4   2406               LSLS     R4,R4,#+24
   \   000000D6   240E               LSRS     R4,R4,#+24
   3300                      if ((X_up>2+i*19) && (X_up<2+17+i*19) && (Y_up>51+j*19) && (Y_up<50+17+j*19))    //"X"
   \   000000D8   1321               MOVS     R1,#+19
   \   000000DA   4843               MULS     R0,R1,R0
   \   000000DC   9349               LDR      R1,??Procedure_Event_3+0x18  ;; X_up
   \   000000DE   0025               MOVS     R5,#+0
   \   000000E0   495F               LDRSH    R1,[R1, R5]
   \   000000E2   0500               MOVS     R5,R0
   \   000000E4   AD1C               ADDS     R5,R5,#+2
   \   000000E6   8D42               CMP      R5,R1
   \   000000E8   32DA               BGE      ??Procedure_Event_10
   \   000000EA   1330               ADDS     R0,R0,#+19
   \   000000EC   8142               CMP      R1,R0
   \   000000EE   2FDA               BGE      ??Procedure_Event_10
   \   000000F0   1100               MOVS     R1,R2
   \   000000F2   1320               MOVS     R0,#+19
   \   000000F4   4143               MULS     R1,R0,R1
   \   000000F6   8E48               LDR      R0,??Procedure_Event_3+0x1C  ;; Y_up
   \   000000F8   0025               MOVS     R5,#+0
   \   000000FA   405F               LDRSH    R0,[R0, R5]
   \   000000FC   0D00               MOVS     R5,R1
   \   000000FE   3335               ADDS     R5,R5,#+51
   \   00000100   8542               CMP      R5,R0
   \   00000102   25DA               BGE      ??Procedure_Event_10
   \   00000104   4331               ADDS     R1,R1,#+67
   \   00000106   8842               CMP      R0,R1
   \   00000108   22DA               BGE      ??Procedure_Event_10
   3301                      {
   3302                        ProcGlobType_up=ind;
   \   0000010A   0194               STR      R4,[SP, #+4]
   3303                        gProg.Line[ChoseRow].Proc[ChoseCol].Tag.Tag=0;
   \   0000010C   8A48               LDR      R0,??Procedure_Event_3+0x24  ;; gProg
   \   0000010E   8D49               LDR      R1,??Procedure_Event_3+0x30  ;; TextToChangeLength + 19
   \   00000110   0978               LDRB     R1,[R1, #+0]
   \   00000112   1825               MOVS     R5,#+24
   \   00000114   6943               MULS     R1,R5,R1
   \   00000116   8C46               MOV      R12,R1
   \   00000118   8B49               LDR      R1,??Procedure_Event_3+0x34  ;; TextToChangeLength + 18
   \   0000011A   0D78               LDRB     R5,[R1, #+0]
   \   0000011C   F021               MOVS     R1,#+240
   \   0000011E   4D43               MULS     R5,R1,R5
   \   00000120   4019               ADDS     R0,R0,R5
   \   00000122   6146               MOV      R1,R12
   \   00000124   4518               ADDS     R5,R0,R1
   \   00000126   2035               ADDS     R5,R5,#+32
   \   00000128   3800               MOVS     R0,R7
   \   0000012A   0100               MOVS     R1,R0
   \   0000012C   03C5               STM      R5!,{R0,R1}
   \   0000012E   083D               SUBS     R5,R5,#+8
   3304                        gProg.Line[ChoseRow].Proc[ChoseCol].LastIn=0;
   \   00000130   2872               STRB     R0,[R5, #+8]
   3305                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe063]: shift count is too large
   \   00000132   7A48               LDR      R0,??Procedure_Event_3+0x8  ;; 0x13d7e9
   \   00000134   0078               LDRB     R0,[R0, #+0]
   \   00000136   0028               CMP      R0,#+0
   \   00000138   0AD1               BNE      ??Procedure_Event_10
   \   0000013A   7948               LDR      R0,??Procedure_Event_3+0xC  ;; 0xfffff430
   \   0000013C   0760               STR      R7,[R0, #+0]
   \   0000013E   794D               LDR      R5,??Procedure_Event_3+0x10  ;; ButtonBipCounter
   \   00000140   AC46               MOV      R12,R5
   \   00000142   7948               LDR      R0,??Procedure_Event_3+0x14  ;; g_counter
   \   00000144   03C8               LDM      R0!,{R0,R1}
   \   00000146   0025               MOVS     R5,#+0
   \   00000148   0830               ADDS     R0,R0,#+8
   \   0000014A   6941               ADCS     R1,R1,R5
   \   0000014C   6546               MOV      R5,R12
   \   0000014E   03C5               STM      R5!,{R0,R1}
   3306                        
   3307                      }
   3308                      
   3309                   }
   \                     ??Procedure_Event_10:
   \   00000150   5B1C               ADDS     R3,R3,#+1
   \   00000152   1B06               LSLS     R3,R3,#+24
   \   00000154   1B0E               LSRS     R3,R3,#+24
   \                     ??Procedure_Event_11:
   \   00000156   1800               MOVS     R0,R3
   \   00000158   0328               CMP      R0,#+3
   \   0000015A   BAD3               BCC      ??Procedure_Event_9
   \   0000015C   521E               SUBS     R2,R2,#+1
   \   0000015E   1206               LSLS     R2,R2,#+24
   \   00000160   120E               LSRS     R2,R2,#+24
   \                     ??Procedure_Event_8:
   \   00000162   1000               MOVS     R0,R2
   \   00000164   01D0               BEQ      ??Procedure_Event_12
   \   00000166   3B00               MOVS     R3,R7
   \   00000168   F5E7               B        ??Procedure_Event_11
   3310          
   3311              ProcGlobType_down=ProcGlobType_up;
   \                     ??Procedure_Event_12:
   \   0000016A   7848               LDR      R0,??Procedure_Event_3+0x38  ;; TextToChangeLength + 20
   \   0000016C   0199               LDR      R1,[SP, #+4]
   \   0000016E   0170               STRB     R1,[R0, #+0]
   3312                
   3313              _Procedure *TypePrc=&(gProg.Line[ChoseRow].Proc[ChoseCol]);
   \   00000170   7148               LDR      R0,??Procedure_Event_3+0x24  ;; gProg
   \   00000172   7449               LDR      R1,??Procedure_Event_3+0x30  ;; TextToChangeLength + 19
   \   00000174   0978               LDRB     R1,[R1, #+0]
   \   00000176   1822               MOVS     R2,#+24
   \   00000178   5143               MULS     R1,R2,R1
   \   0000017A   734A               LDR      R2,??Procedure_Event_3+0x34  ;; TextToChangeLength + 18
   \   0000017C   1278               LDRB     R2,[R2, #+0]
   \   0000017E   F023               MOVS     R3,#+240
   \   00000180   5A43               MULS     R2,R3,R2
   \   00000182   8018               ADDS     R0,R0,R2
   \   00000184   4018               ADDS     R0,R0,R1
   \   00000186   1830               ADDS     R0,R0,#+24
   \   00000188   0400               MOVS     R4,R0
   3314                   
   3315                  
   3316          
   3317                      
   3318                     
   3319                 if ((ProcGlobType_up>0) && (ProcGlobType_down==ProcGlobType_up) && (exit==0))
   \   0000018A   0199               LDR      R1,[SP, #+4]
   \   0000018C   0906               LSLS     R1,R1,#+24
   \   0000018E   20D0               BEQ      ??Procedure_Event_13
   3320                 {
   3321                 ProcGlobType_down=0;
   \   00000190   6E49               LDR      R1,??Procedure_Event_3+0x38  ;; TextToChangeLength + 20
   \   00000192   3A00               MOVS     R2,R7
   \   00000194   0A70               STRB     R2,[R1, #+0]
   3322                 switch (ProcGlobType_up)
   \   00000196   0199               LDR      R1,[SP, #+4]
   \   00000198   0906               LSLS     R1,R1,#+24
   \   0000019A   090E               LSRS     R1,R1,#+24
   \   0000019C   491E               SUBS     R1,R1,#+1
   \   0000019E   0529               CMP      R1,#+5
   \   000001A0   16D8               BHI      ??Procedure_Event_14
   \   000001A2   01A2               ADR      R2,??Procedure_Event_0
   \   000001A4   525C               LDRB     R2,[R2, R1]
   \   000001A6   9744               ADD      PC,PC,R2
   \                     ??Procedure_Event_0:
   \   000001A8   040A1016           DC8      +4,+10,+16,+22
   \   000001AC   1C22               DC8      +28,+34
   3323                 {
   3324                   case 1:  //Pusty
   3325                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=None;
   \                     ??Procedure_Event_15:
   \   000001AE   3900               MOVS     R1,R7
   \   000001B0   0170               STRB     R1,[R0, #+0]
   \   000001B2   0DE0               B        ??Procedure_Event_14
   3326                   break;
   3327                   
   3328                   
   3329                   case 2: //Stan
   3330                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcStStart+1);
   \                     ??Procedure_Event_16:
   \   000001B4   1421               MOVS     R1,#+20
   \   000001B6   0170               STRB     R1,[R0, #+0]
   \   000001B8   0AE0               B        ??Procedure_Event_14
   3331                   break;
   3332                   
   3333                   
   3334                   case 3: //ustaw
   3335                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcSetStart+1);
   \                     ??Procedure_Event_17:
   \   000001BA   2021               MOVS     R1,#+32
   \   000001BC   0170               STRB     R1,[R0, #+0]
   \   000001BE   07E0               B        ??Procedure_Event_14
   3336                   break;
   3337                   
   3338                   
   3339                   case 4: //Logika
   3340                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcLogStart+1);
   \                     ??Procedure_Event_18:
   \   000001C0   0221               MOVS     R1,#+2
   \   000001C2   0170               STRB     R1,[R0, #+0]
   \   000001C4   04E0               B        ??Procedure_Event_14
   3341                   break;
   3342                   
   3343                   
   3344                   case 5: //timery, zegary
   3345                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcTimeStart+1);
   \                     ??Procedure_Event_19:
   \   000001C6   2D21               MOVS     R1,#+45
   \   000001C8   0170               STRB     R1,[R0, #+0]
   \   000001CA   01E0               B        ??Procedure_Event_14
   3346                   break;
   3347                   
   3348                   
   3349                   case 6: //timery, zegary
   3350                     gProg.Line[ChoseRow].Proc[ChoseCol].Type=(_ProcType)(ProcAnalogStart+1);
   \                     ??Procedure_Event_20:
   \   000001CC   3721               MOVS     R1,#+55
   \   000001CE   0170               STRB     R1,[R0, #+0]
   3351                   break;
   3352                 }
   3353                 
   3354                
   3355                   MenuPaintExecut=1; 
   \                     ??Procedure_Event_14:
   \   000001D0   0126               MOVS     R6,#+1
   3356                   
   3357                 }
   3358                   
   3359          
   3360                 
   3361                 //Je¿eli logika
   3362                  if  ((TypePrc->Type>ProcLogStart) && (TypePrc->Type<ProcLogStop))
   \                     ??Procedure_Event_13:
   \   000001D2   2078               LDRB     R0,[R4, #+0]
   \   000001D4   0228               CMP      R0,#+2
   \   000001D6   3AD3               BCC      ??Procedure_Event_21
   \   000001D8   0D28               CMP      R0,#+13
   \   000001DA   38D2               BCS      ??Procedure_Event_21
   3363                      {     
   3364                        txt[0]='>';
   \   000001DC   6D46               MOV      R5,SP
   \   000001DE   3E20               MOVS     R0,#+62
   \   000001E0   2870               STRB     R0,[R5, #+0]
   3365                        txt[1]=0;
   \   000001E2   3800               MOVS     R0,R7
   \   000001E4   6870               STRB     R0,[R5, #+1]
   3366                        if (Button(txt,43,39,18,18)==1) 
   \   000001E6   82B0               SUB      SP,SP,#+8
   \   000001E8   1220               MOVS     R0,#+18
   \   000001EA   0090               STR      R0,[SP, #+0]
   \   000001EC   0300               MOVS     R3,R0
   \   000001EE   2722               MOVS     R2,#+39
   \   000001F0   2B21               MOVS     R1,#+43
   \   000001F2   02A8               ADD      R0,SP,#+8
   \   000001F4   ........           BL       Button
   \   000001F8   02B0               ADD      SP,SP,#+8
   \   000001FA   0128               CMP      R0,#+1
   \   000001FC   0DD1               BNE      ??Procedure_Event_22
   3367                          if (TypePrc->Type+1<ProcLogStop) {TypePrc->Type++;MenuPaintExecut=1;  } else {TypePrc->Type=(_ProcType)(ProcLogStart+1);MenuPaintExecut=1;  }
   \   000001FE   2078               LDRB     R0,[R4, #+0]
   \   00000200   401C               ADDS     R0,R0,#+1
   \   00000202   0004               LSLS     R0,R0,#+16
   \   00000204   000C               LSRS     R0,R0,#+16
   \   00000206   0D28               CMP      R0,#+13
   \   00000208   04D2               BCS      ??Procedure_Event_23
   \   0000020A   2078               LDRB     R0,[R4, #+0]
   \   0000020C   401C               ADDS     R0,R0,#+1
   \   0000020E   2070               STRB     R0,[R4, #+0]
   \   00000210   0126               MOVS     R6,#+1
   \   00000212   02E0               B        ??Procedure_Event_22
   \                     ??Procedure_Event_23:
   \   00000214   0220               MOVS     R0,#+2
   \   00000216   2070               STRB     R0,[R4, #+0]
   \   00000218   0126               MOVS     R6,#+1
   3368                        txt[0]='<';
   \                     ??Procedure_Event_22:
   \   0000021A   3C20               MOVS     R0,#+60
   \   0000021C   2870               STRB     R0,[R5, #+0]
   3369                        if (Button(txt,2,39,18,18)==1) 
   \   0000021E   82B0               SUB      SP,SP,#+8
   \   00000220   1220               MOVS     R0,#+18
   \   00000222   0090               STR      R0,[SP, #+0]
   \   00000224   0300               MOVS     R3,R0
   \   00000226   2722               MOVS     R2,#+39
   \   00000228   0221               MOVS     R1,#+2
   \   0000022A   02A8               ADD      R0,SP,#+8
   \   0000022C   ........           BL       Button
   \   00000230   02B0               ADD      SP,SP,#+8
   \   00000232   0128               CMP      R0,#+1
   \   00000234   0BD1               BNE      ??Procedure_Event_21
   3370                          if (TypePrc->Type-1>ProcLogStart) {TypePrc->Type--;MenuPaintExecut=1;  } else {TypePrc->Type=(_ProcType)(ProcLogStop-1);MenuPaintExecut=1;  }
   \   00000236   2078               LDRB     R0,[R4, #+0]
   \   00000238   401E               SUBS     R0,R0,#+1
   \   0000023A   0228               CMP      R0,#+2
   \   0000023C   04DB               BLT      ??Procedure_Event_24
   \   0000023E   2078               LDRB     R0,[R4, #+0]
   \   00000240   401E               SUBS     R0,R0,#+1
   \   00000242   2070               STRB     R0,[R4, #+0]
   \   00000244   0126               MOVS     R6,#+1
   \   00000246   02E0               B        ??Procedure_Event_21
   \                     ??Procedure_Event_24:
   \   00000248   0C20               MOVS     R0,#+12
   \   0000024A   2070               STRB     R0,[R4, #+0]
   \   0000024C   0126               MOVS     R6,#+1
   3371                   
   3372                      }
   3373           
   3374                 
   3375                 //zmiana numeru procedur
   3376                 if ((((TypePrc->Type>ProcStStart) && (TypePrc->Type<ProcTimeStart))
   3377                     || (TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg)   
   3378                     ) && (TypePrc->Type!=ProcInc) && (TypePrc->Type!=ProcInc))
   \                     ??Procedure_Event_21:
   \   0000024E   2078               LDRB     R0,[R4, #+0]
   \   00000250   1428               CMP      R0,#+20
   \   00000252   01D3               BCC      ??Procedure_Event_25
   \   00000254   2C28               CMP      R0,#+44
   \   00000256   04D3               BCC      ??Procedure_Event_26
   \                     ??Procedure_Event_25:
   \   00000258   3828               CMP      R0,#+56
   \   0000025A   02D0               BEQ      ??Procedure_Event_26
   \   0000025C   3928               CMP      R0,#+57
   \   0000025E   00D0               BEQ      .+4
   \   00000260   C6E1               B        ??Procedure_Event_27
   \                     ??Procedure_Event_26:
   \   00000262   2528               CMP      R0,#+37
   \   00000264   00D1               BNE      .+4
   \   00000266   C3E1               B        ??Procedure_Event_27
   3379                 {  
   3380                    txt[1]=0;
   \   00000268   6D46               MOV      R5,SP
   \   0000026A   3800               MOVS     R0,R7
   \   0000026C   6870               STRB     R0,[R5, #+1]
   3381                    txt[0]='>';
   \   0000026E   3E20               MOVS     R0,#+62
   \   00000270   2870               STRB     R0,[R5, #+0]
   3382                    if (Button(txt,43,25,18,18)==1) 
   \   00000272   82B0               SUB      SP,SP,#+8
   \   00000274   1220               MOVS     R0,#+18
   \   00000276   0090               STR      R0,[SP, #+0]
   \   00000278   0300               MOVS     R3,R0
   \   0000027A   1922               MOVS     R2,#+25
   \   0000027C   2B21               MOVS     R1,#+43
   \   0000027E   02A8               ADD      R0,SP,#+8
   \   00000280   ........           BL       Button
   \   00000284   02B0               ADD      SP,SP,#+8
   \   00000286   0128               CMP      R0,#+1
   \   00000288   00D0               BEQ      .+4
   \   0000028A   EDE0               B        ??Procedure_Event_28
   3383                    {
   3384                      switch (TypePrc->Type)
   \   0000028C   2078               LDRB     R0,[R4, #+0]
   \   0000028E   1438               SUBS     R0,R0,#+20
   \   00000290   2528               CMP      R0,#+37
   \   00000292   00D9               BLS      .+4
   \   00000294   E7E0               B        ??Procedure_Event_29
   \   00000296   02A1               ADR      R1,??Procedure_Event_1
   \   00000298   095C               LDRB     R1,[R1, R0]
   \   0000029A   4900               LSLS     R1,R1,#+1
   \   0000029C   8F44               ADD      PC,PC,R1
   \   0000029E   C046               Nop      
   \                     ??Procedure_Event_1:
   \   000002A0   13212F5C           DC8      +19,+33,+47,+92
   \   000002A4   69E3E3E3           DC8      +105,+227,+227,+227
   \   000002A8   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002AC   768492A0           DC8      +118,+132,+146,+160
   \   000002B0   AEE3E3D7           DC8      +174,+227,+227,+215
   \   000002B4   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002B8   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002BC   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002C0   E3E3E3E3           DC8      +227,+227,+227,+227
   \   000002C4   BBC9               DC8      +187,+201
   3385                      {
   3386                        case ProcStI: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_30:
   \   000002C6   0120               MOVS     R0,#+1
   \   000002C8   2056               LDRSB    R0,[R4, R0]
   \   000002CA   401C               ADDS     R0,R0,#+1
   \   000002CC   2328               CMP      R0,#+35
   \   000002CE   04DA               BGE      ??Procedure_Event_31
   \   000002D0   0120               MOVS     R0,#+1
   \   000002D2   2056               LDRSB    R0,[R4, R0]
   \   000002D4   401C               ADDS     R0,R0,#+1
   \   000002D6   6070               STRB     R0,[R4, #+1]
   \   000002D8   C5E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_31:
   \   000002DA   0020               MOVS     R0,#+0
   \   000002DC   C043               MVNS     R0,R0            ;; #-1
   \   000002DE   6070               STRB     R0,[R4, #+1]
   \   000002E0   C1E0               B        ??Procedure_Event_29
   3387                        case ProcStNI: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_32:
   \   000002E2   0120               MOVS     R0,#+1
   \   000002E4   2056               LDRSB    R0,[R4, R0]
   \   000002E6   401C               ADDS     R0,R0,#+1
   \   000002E8   2328               CMP      R0,#+35
   \   000002EA   04DA               BGE      ??Procedure_Event_33
   \   000002EC   0120               MOVS     R0,#+1
   \   000002EE   2056               LDRSB    R0,[R4, R0]
   \   000002F0   401C               ADDS     R0,R0,#+1
   \   000002F2   6070               STRB     R0,[R4, #+1]
   \   000002F4   B7E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_33:
   \   000002F6   0020               MOVS     R0,#+0
   \   000002F8   C043               MVNS     R0,R0            ;; #-1
   \   000002FA   6070               STRB     R0,[R4, #+1]
   \   000002FC   B3E0               B        ??Procedure_Event_29
   3388                        case ProcStQ: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_34:
   \   000002FE   0120               MOVS     R0,#+1
   \   00000300   2056               LDRSB    R0,[R4, R0]
   \   00000302   401C               ADDS     R0,R0,#+1
   \   00000304   2328               CMP      R0,#+35
   \   00000306   23DA               BGE      ??Procedure_Event_35
   \   00000308   0120               MOVS     R0,#+1
   \   0000030A   2056               LDRSB    R0,[R4, R0]
   \   0000030C   401C               ADDS     R0,R0,#+1
   \   0000030E   6070               STRB     R0,[R4, #+1]
   \   00000310   A9E0               B        ??Procedure_Event_29
   \   00000312   C046               Nop      
   \                     ??Procedure_Event_3:
   \   00000314   ........           DC32     X_down
   \   00000318   ........           DC32     Y_down
   \   0000031C   E9D71300           DC32     0x13d7e9
   \   00000320   30F4FFFF           DC32     0xfffff430
   \   00000324   ........           DC32     ButtonBipCounter
   \   00000328   ........           DC32     g_counter
   \   0000032C   ........           DC32     X_up
   \   00000330   ........           DC32     Y_up
   \   00000334   ........           DC32     TextToChangeLength + 76
   \   00000338   ........           DC32     gProg
   \   0000033C   ........           DC32     TextToChangeLength + 72
   \   00000340   ........           DC32     TextToChangeLength + 8
   \   00000344   ........           DC32     TextToChangeLength + 19
   \   00000348   ........           DC32     TextToChangeLength + 18
   \   0000034C   ........           DC32     TextToChangeLength + 20
   \                     ??Procedure_Event_35:
   \   00000350   0020               MOVS     R0,#+0
   \   00000352   C043               MVNS     R0,R0            ;; #-1
   \   00000354   6070               STRB     R0,[R4, #+1]
   \   00000356   86E0               B        ??Procedure_Event_29
   3389                        case ProcStB: if (TypePrc->Nr+1<NumberButton) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_36:
   \   00000358   0120               MOVS     R0,#+1
   \   0000035A   2056               LDRSB    R0,[R4, R0]
   \   0000035C   401C               ADDS     R0,R0,#+1
   \   0000035E   5028               CMP      R0,#+80
   \   00000360   04DA               BGE      ??Procedure_Event_37
   \   00000362   0120               MOVS     R0,#+1
   \   00000364   2056               LDRSB    R0,[R4, R0]
   \   00000366   401C               ADDS     R0,R0,#+1
   \   00000368   6070               STRB     R0,[R4, #+1]
   \   0000036A   7CE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_37:
   \   0000036C   3800               MOVS     R0,R7
   \   0000036E   6070               STRB     R0,[R4, #+1]
   \   00000370   79E0               B        ??Procedure_Event_29
   3390                        case ProcStS: if (TypePrc->Nr+1<NumberSceneMax) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_38:
   \   00000372   0120               MOVS     R0,#+1
   \   00000374   2056               LDRSB    R0,[R4, R0]
   \   00000376   401C               ADDS     R0,R0,#+1
   \   00000378   0A28               CMP      R0,#+10
   \   0000037A   04DA               BGE      ??Procedure_Event_39
   \   0000037C   0120               MOVS     R0,#+1
   \   0000037E   2056               LDRSB    R0,[R4, R0]
   \   00000380   401C               ADDS     R0,R0,#+1
   \   00000382   6070               STRB     R0,[R4, #+1]
   \   00000384   6FE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_39:
   \   00000386   3800               MOVS     R0,R7
   \   00000388   6070               STRB     R0,[R4, #+1]
   \   0000038A   6CE0               B        ??Procedure_Event_29
   3391                        case ProcWOUT: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_40:
   \   0000038C   0120               MOVS     R0,#+1
   \   0000038E   2056               LDRSB    R0,[R4, R0]
   \   00000390   401C               ADDS     R0,R0,#+1
   \   00000392   2328               CMP      R0,#+35
   \   00000394   04DA               BGE      ??Procedure_Event_41
   \   00000396   0120               MOVS     R0,#+1
   \   00000398   2056               LDRSB    R0,[R4, R0]
   \   0000039A   401C               ADDS     R0,R0,#+1
   \   0000039C   6070               STRB     R0,[R4, #+1]
   \   0000039E   62E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_41:
   \   000003A0   0020               MOVS     R0,#+0
   \   000003A2   C043               MVNS     R0,R0            ;; #-1
   \   000003A4   6070               STRB     R0,[R4, #+1]
   \   000003A6   5EE0               B        ??Procedure_Event_29
   3392                        case ProcWOUTS: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_42:
   \   000003A8   0120               MOVS     R0,#+1
   \   000003AA   2056               LDRSB    R0,[R4, R0]
   \   000003AC   401C               ADDS     R0,R0,#+1
   \   000003AE   2328               CMP      R0,#+35
   \   000003B0   04DA               BGE      ??Procedure_Event_43
   \   000003B2   0120               MOVS     R0,#+1
   \   000003B4   2056               LDRSB    R0,[R4, R0]
   \   000003B6   401C               ADDS     R0,R0,#+1
   \   000003B8   6070               STRB     R0,[R4, #+1]
   \   000003BA   54E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_43:
   \   000003BC   0020               MOVS     R0,#+0
   \   000003BE   C043               MVNS     R0,R0            ;; #-1
   \   000003C0   6070               STRB     R0,[R4, #+1]
   \   000003C2   50E0               B        ??Procedure_Event_29
   3393                        case ProcWOUTR: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_44:
   \   000003C4   0120               MOVS     R0,#+1
   \   000003C6   2056               LDRSB    R0,[R4, R0]
   \   000003C8   401C               ADDS     R0,R0,#+1
   \   000003CA   2328               CMP      R0,#+35
   \   000003CC   04DA               BGE      ??Procedure_Event_45
   \   000003CE   0120               MOVS     R0,#+1
   \   000003D0   2056               LDRSB    R0,[R4, R0]
   \   000003D2   401C               ADDS     R0,R0,#+1
   \   000003D4   6070               STRB     R0,[R4, #+1]
   \   000003D6   46E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_45:
   \   000003D8   0020               MOVS     R0,#+0
   \   000003DA   C043               MVNS     R0,R0            ;; #-1
   \   000003DC   6070               STRB     R0,[R4, #+1]
   \   000003DE   42E0               B        ??Procedure_Event_29
   3394                        case ProcWOUTC: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_46:
   \   000003E0   0120               MOVS     R0,#+1
   \   000003E2   2056               LDRSB    R0,[R4, R0]
   \   000003E4   401C               ADDS     R0,R0,#+1
   \   000003E6   2328               CMP      R0,#+35
   \   000003E8   04DA               BGE      ??Procedure_Event_47
   \   000003EA   0120               MOVS     R0,#+1
   \   000003EC   2056               LDRSB    R0,[R4, R0]
   \   000003EE   401C               ADDS     R0,R0,#+1
   \   000003F0   6070               STRB     R0,[R4, #+1]
   \   000003F2   38E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_47:
   \   000003F4   0020               MOVS     R0,#+0
   \   000003F6   C043               MVNS     R0,R0            ;; #-1
   \   000003F8   6070               STRB     R0,[R4, #+1]
   \   000003FA   34E0               B        ??Procedure_Event_29
   3395                        case ProcSetScn: if (TypePrc->Nr+1<NumberSceneMax) {TypePrc->Nr++;} else {TypePrc->Nr=0;} break;
   \                     ??Procedure_Event_48:
   \   000003FC   0120               MOVS     R0,#+1
   \   000003FE   2056               LDRSB    R0,[R4, R0]
   \   00000400   401C               ADDS     R0,R0,#+1
   \   00000402   0A28               CMP      R0,#+10
   \   00000404   04DA               BGE      ??Procedure_Event_49
   \   00000406   0120               MOVS     R0,#+1
   \   00000408   2056               LDRSB    R0,[R4, R0]
   \   0000040A   401C               ADDS     R0,R0,#+1
   \   0000040C   6070               STRB     R0,[R4, #+1]
   \   0000040E   2AE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_49:
   \   00000410   3800               MOVS     R0,R7
   \   00000412   6070               STRB     R0,[R4, #+1]
   \   00000414   27E0               B        ??Procedure_Event_29
   3396                        case ProcGetReg: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_50:
   \   00000416   0120               MOVS     R0,#+1
   \   00000418   2056               LDRSB    R0,[R4, R0]
   \   0000041A   401C               ADDS     R0,R0,#+1
   \   0000041C   2328               CMP      R0,#+35
   \   0000041E   04DA               BGE      ??Procedure_Event_51
   \   00000420   0120               MOVS     R0,#+1
   \   00000422   2056               LDRSB    R0,[R4, R0]
   \   00000424   401C               ADDS     R0,R0,#+1
   \   00000426   6070               STRB     R0,[R4, #+1]
   \   00000428   1DE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_51:
   \   0000042A   0020               MOVS     R0,#+0
   \   0000042C   C043               MVNS     R0,R0            ;; #-1
   \   0000042E   6070               STRB     R0,[R4, #+1]
   \   00000430   19E0               B        ??Procedure_Event_29
   3397                        case ProcSetReg: if (TypePrc->Nr+1<NumberNeurons) {TypePrc->Nr++;} else {TypePrc->Nr=-1;} break;
   \                     ??Procedure_Event_52:
   \   00000432   0120               MOVS     R0,#+1
   \   00000434   2056               LDRSB    R0,[R4, R0]
   \   00000436   401C               ADDS     R0,R0,#+1
   \   00000438   2328               CMP      R0,#+35
   \   0000043A   04DA               BGE      ??Procedure_Event_53
   \   0000043C   0120               MOVS     R0,#+1
   \   0000043E   2056               LDRSB    R0,[R4, R0]
   \   00000440   401C               ADDS     R0,R0,#+1
   \   00000442   6070               STRB     R0,[R4, #+1]
   \   00000444   0FE0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_53:
   \   00000446   0020               MOVS     R0,#+0
   \   00000448   C043               MVNS     R0,R0            ;; #-1
   \   0000044A   6070               STRB     R0,[R4, #+1]
   \   0000044C   0BE0               B        ??Procedure_Event_29
   3398                        case ProcSPK: if (TypePrc->Tag.SpeakerType+1<SPK_Amount) {TypePrc->Tag.SpeakerType++;} else {TypePrc->Tag.SpeakerType=0;} break;
   \                     ??Procedure_Event_54:
   \   0000044E   207A               LDRB     R0,[R4, #+8]
   \   00000450   401C               ADDS     R0,R0,#+1
   \   00000452   0004               LSLS     R0,R0,#+16
   \   00000454   000C               LSRS     R0,R0,#+16
   \   00000456   0428               CMP      R0,#+4
   \   00000458   03D2               BCS      ??Procedure_Event_55
   \   0000045A   207A               LDRB     R0,[R4, #+8]
   \   0000045C   401C               ADDS     R0,R0,#+1
   \   0000045E   2072               STRB     R0,[R4, #+8]
   \   00000460   01E0               B        ??Procedure_Event_29
   \                     ??Procedure_Event_55:
   \   00000462   3800               MOVS     R0,R7
   \   00000464   2072               STRB     R0,[R4, #+8]
   3399                        
   3400          
   3401                      }
   3402                      
   3403                      
   3404                      
   3405                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_29:
   \   00000466   0126               MOVS     R6,#+1
   3406                    }
   3407                    txt[0]='<';
   \                     ??Procedure_Event_28:
   \   00000468   3C20               MOVS     R0,#+60
   \   0000046A   2870               STRB     R0,[R5, #+0]
   3408                    if (Button(txt,2,25,18,18)==1) 
   \   0000046C   82B0               SUB      SP,SP,#+8
   \   0000046E   1220               MOVS     R0,#+18
   \   00000470   0090               STR      R0,[SP, #+0]
   \   00000472   0300               MOVS     R3,R0
   \   00000474   1922               MOVS     R2,#+25
   \   00000476   0221               MOVS     R1,#+2
   \   00000478   02A8               ADD      R0,SP,#+8
   \   0000047A   ........           BL       Button
   \   0000047E   02B0               ADD      SP,SP,#+8
   \   00000480   0128               CMP      R0,#+1
   \   00000482   00D0               BEQ      .+4
   \   00000484   B4E0               B        ??Procedure_Event_27
   3409                    {
   3410                      
   3411                      switch (TypePrc->Type)
   \   00000486   2078               LDRB     R0,[R4, #+0]
   \   00000488   1438               SUBS     R0,R0,#+20
   \   0000048A   2528               CMP      R0,#+37
   \   0000048C   00D9               BLS      .+4
   \   0000048E   AEE0               B        ??Procedure_Event_56
   \   00000490   01A1               ADR      R1,??Procedure_Event_2
   \   00000492   095C               LDRB     R1,[R1, R0]
   \   00000494   4900               LSLS     R1,R1,#+1
   \   00000496   8F44               ADD      PC,PC,R1
   \                     ??Procedure_Event_2:
   \   00000498   121E2A42           DC8      +18,+30,+42,+66
   \   0000049C   36AAAAAA           DC8      +54,+170,+170,+170
   \   000004A0   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004A4   4E5A6672           DC8      +78,+90,+102,+114
   \   000004A8   7EAAAAA2           DC8      +126,+170,+170,+162
   \   000004AC   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004B0   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004B4   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004B8   AAAAAAAA           DC8      +170,+170,+170,+170
   \   000004BC   8A96               DC8      +138,+150
   3412                      {
   3413                        case ProcStI: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_57:
   \   000004BE   0120               MOVS     R0,#+1
   \   000004C0   2056               LDRSB    R0,[R4, R0]
   \   000004C2   0028               CMP      R0,#+0
   \   000004C4   04D4               BMI      ??Procedure_Event_58
   \   000004C6   0120               MOVS     R0,#+1
   \   000004C8   2056               LDRSB    R0,[R4, R0]
   \   000004CA   401E               SUBS     R0,R0,#+1
   \   000004CC   6070               STRB     R0,[R4, #+1]
   \   000004CE   8EE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_58:
   \   000004D0   2220               MOVS     R0,#+34
   \   000004D2   6070               STRB     R0,[R4, #+1]
   \   000004D4   8BE0               B        ??Procedure_Event_56
   3414                        case ProcStNI: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_59:
   \   000004D6   0120               MOVS     R0,#+1
   \   000004D8   2056               LDRSB    R0,[R4, R0]
   \   000004DA   0028               CMP      R0,#+0
   \   000004DC   04D4               BMI      ??Procedure_Event_60
   \   000004DE   0120               MOVS     R0,#+1
   \   000004E0   2056               LDRSB    R0,[R4, R0]
   \   000004E2   401E               SUBS     R0,R0,#+1
   \   000004E4   6070               STRB     R0,[R4, #+1]
   \   000004E6   82E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_60:
   \   000004E8   2220               MOVS     R0,#+34
   \   000004EA   6070               STRB     R0,[R4, #+1]
   \   000004EC   7FE0               B        ??Procedure_Event_56
   3415                        case ProcStQ: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_61:
   \   000004EE   0120               MOVS     R0,#+1
   \   000004F0   2056               LDRSB    R0,[R4, R0]
   \   000004F2   0028               CMP      R0,#+0
   \   000004F4   04D4               BMI      ??Procedure_Event_62
   \   000004F6   0120               MOVS     R0,#+1
   \   000004F8   2056               LDRSB    R0,[R4, R0]
   \   000004FA   401E               SUBS     R0,R0,#+1
   \   000004FC   6070               STRB     R0,[R4, #+1]
   \   000004FE   76E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_62:
   \   00000500   2220               MOVS     R0,#+34
   \   00000502   6070               STRB     R0,[R4, #+1]
   \   00000504   73E0               B        ??Procedure_Event_56
   3416                        case ProcStS: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberSceneMax-1;} break;
   \                     ??Procedure_Event_63:
   \   00000506   0120               MOVS     R0,#+1
   \   00000508   2056               LDRSB    R0,[R4, R0]
   \   0000050A   0128               CMP      R0,#+1
   \   0000050C   04DB               BLT      ??Procedure_Event_64
   \   0000050E   0120               MOVS     R0,#+1
   \   00000510   2056               LDRSB    R0,[R4, R0]
   \   00000512   401E               SUBS     R0,R0,#+1
   \   00000514   6070               STRB     R0,[R4, #+1]
   \   00000516   6AE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_64:
   \   00000518   0920               MOVS     R0,#+9
   \   0000051A   6070               STRB     R0,[R4, #+1]
   \   0000051C   67E0               B        ??Procedure_Event_56
   3417                        case ProcStB: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_65:
   \   0000051E   0120               MOVS     R0,#+1
   \   00000520   2056               LDRSB    R0,[R4, R0]
   \   00000522   0128               CMP      R0,#+1
   \   00000524   04DB               BLT      ??Procedure_Event_66
   \   00000526   0120               MOVS     R0,#+1
   \   00000528   2056               LDRSB    R0,[R4, R0]
   \   0000052A   401E               SUBS     R0,R0,#+1
   \   0000052C   6070               STRB     R0,[R4, #+1]
   \   0000052E   5EE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_66:
   \   00000530   2220               MOVS     R0,#+34
   \   00000532   6070               STRB     R0,[R4, #+1]
   \   00000534   5BE0               B        ??Procedure_Event_56
   3418                        case ProcWOUT: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_67:
   \   00000536   0120               MOVS     R0,#+1
   \   00000538   2056               LDRSB    R0,[R4, R0]
   \   0000053A   0028               CMP      R0,#+0
   \   0000053C   04D4               BMI      ??Procedure_Event_68
   \   0000053E   0120               MOVS     R0,#+1
   \   00000540   2056               LDRSB    R0,[R4, R0]
   \   00000542   401E               SUBS     R0,R0,#+1
   \   00000544   6070               STRB     R0,[R4, #+1]
   \   00000546   52E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_68:
   \   00000548   2220               MOVS     R0,#+34
   \   0000054A   6070               STRB     R0,[R4, #+1]
   \   0000054C   4FE0               B        ??Procedure_Event_56
   3419                        case ProcWOUTS: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_69:
   \   0000054E   0120               MOVS     R0,#+1
   \   00000550   2056               LDRSB    R0,[R4, R0]
   \   00000552   0028               CMP      R0,#+0
   \   00000554   04D4               BMI      ??Procedure_Event_70
   \   00000556   0120               MOVS     R0,#+1
   \   00000558   2056               LDRSB    R0,[R4, R0]
   \   0000055A   401E               SUBS     R0,R0,#+1
   \   0000055C   6070               STRB     R0,[R4, #+1]
   \   0000055E   46E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_70:
   \   00000560   2220               MOVS     R0,#+34
   \   00000562   6070               STRB     R0,[R4, #+1]
   \   00000564   43E0               B        ??Procedure_Event_56
   3420                        case ProcWOUTR: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_71:
   \   00000566   0120               MOVS     R0,#+1
   \   00000568   2056               LDRSB    R0,[R4, R0]
   \   0000056A   0028               CMP      R0,#+0
   \   0000056C   04D4               BMI      ??Procedure_Event_72
   \   0000056E   0120               MOVS     R0,#+1
   \   00000570   2056               LDRSB    R0,[R4, R0]
   \   00000572   401E               SUBS     R0,R0,#+1
   \   00000574   6070               STRB     R0,[R4, #+1]
   \   00000576   3AE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_72:
   \   00000578   2220               MOVS     R0,#+34
   \   0000057A   6070               STRB     R0,[R4, #+1]
   \   0000057C   37E0               B        ??Procedure_Event_56
   3421                        case ProcWOUTC: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_73:
   \   0000057E   0120               MOVS     R0,#+1
   \   00000580   2056               LDRSB    R0,[R4, R0]
   \   00000582   0028               CMP      R0,#+0
   \   00000584   04D4               BMI      ??Procedure_Event_74
   \   00000586   0120               MOVS     R0,#+1
   \   00000588   2056               LDRSB    R0,[R4, R0]
   \   0000058A   401E               SUBS     R0,R0,#+1
   \   0000058C   6070               STRB     R0,[R4, #+1]
   \   0000058E   2EE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_74:
   \   00000590   2220               MOVS     R0,#+34
   \   00000592   6070               STRB     R0,[R4, #+1]
   \   00000594   2BE0               B        ??Procedure_Event_56
   3422                        case ProcSetScn: if (TypePrc->Nr>0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberSceneMax-1;} break;
   \                     ??Procedure_Event_75:
   \   00000596   0120               MOVS     R0,#+1
   \   00000598   2056               LDRSB    R0,[R4, R0]
   \   0000059A   0128               CMP      R0,#+1
   \   0000059C   04DB               BLT      ??Procedure_Event_76
   \   0000059E   0120               MOVS     R0,#+1
   \   000005A0   2056               LDRSB    R0,[R4, R0]
   \   000005A2   401E               SUBS     R0,R0,#+1
   \   000005A4   6070               STRB     R0,[R4, #+1]
   \   000005A6   22E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_76:
   \   000005A8   0920               MOVS     R0,#+9
   \   000005AA   6070               STRB     R0,[R4, #+1]
   \   000005AC   1FE0               B        ??Procedure_Event_56
   3423                        case ProcGetReg: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_77:
   \   000005AE   0120               MOVS     R0,#+1
   \   000005B0   2056               LDRSB    R0,[R4, R0]
   \   000005B2   0028               CMP      R0,#+0
   \   000005B4   04D4               BMI      ??Procedure_Event_78
   \   000005B6   0120               MOVS     R0,#+1
   \   000005B8   2056               LDRSB    R0,[R4, R0]
   \   000005BA   401E               SUBS     R0,R0,#+1
   \   000005BC   6070               STRB     R0,[R4, #+1]
   \   000005BE   16E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_78:
   \   000005C0   2220               MOVS     R0,#+34
   \   000005C2   6070               STRB     R0,[R4, #+1]
   \   000005C4   13E0               B        ??Procedure_Event_56
   3424                        case ProcSetReg: if (TypePrc->Nr>=0) {TypePrc->Nr--;} else {TypePrc->Nr=NumberNeurons-1;} break;
   \                     ??Procedure_Event_79:
   \   000005C6   0120               MOVS     R0,#+1
   \   000005C8   2056               LDRSB    R0,[R4, R0]
   \   000005CA   0028               CMP      R0,#+0
   \   000005CC   04D4               BMI      ??Procedure_Event_80
   \   000005CE   0120               MOVS     R0,#+1
   \   000005D0   2056               LDRSB    R0,[R4, R0]
   \   000005D2   401E               SUBS     R0,R0,#+1
   \   000005D4   6070               STRB     R0,[R4, #+1]
   \   000005D6   0AE0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_80:
   \   000005D8   2220               MOVS     R0,#+34
   \   000005DA   6070               STRB     R0,[R4, #+1]
   \   000005DC   07E0               B        ??Procedure_Event_56
   3425                        case ProcSPK: if (TypePrc->Tag.SpeakerType>0) {TypePrc->Tag.SpeakerType--;} else {TypePrc->Tag.SpeakerType=SPK_Amount-1;} break;
   \                     ??Procedure_Event_81:
   \   000005DE   207A               LDRB     R0,[R4, #+8]
   \   000005E0   0028               CMP      R0,#+0
   \   000005E2   02D0               BEQ      ??Procedure_Event_82
   \   000005E4   401E               SUBS     R0,R0,#+1
   \   000005E6   2072               STRB     R0,[R4, #+8]
   \   000005E8   01E0               B        ??Procedure_Event_56
   \                     ??Procedure_Event_82:
   \   000005EA   0320               MOVS     R0,#+3
   \   000005EC   2072               STRB     R0,[R4, #+8]
   3426                      }
   3427                      
   3428          
   3429                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_56:
   \   000005EE   0126               MOVS     R6,#+1
   3430                    }
   3431                 }
   3432                 
   3433          
   3434                 //zmiana numeru portu
   3435                 if(((TypePrc->Type==ProcStI) ||
   3436                    (TypePrc->Type==ProcStNI) ||
   3437                    (TypePrc->Type==ProcStQ) ||
   3438                    (TypePrc->Type==ProcWOUT) ||
   3439                    (TypePrc->Type==ProcWOUTS) ||
   3440                    (TypePrc->Type==ProcWOUTR) ||
   3441                    (TypePrc->Type==ProcWOUTC)  
   3442                      )
   3443                   && (TypePrc->Type<ProcTimeStart))
   \                     ??Procedure_Event_27:
   \   000005F0   2078               LDRB     R0,[R4, #+0]
   \   000005F2   1428               CMP      R0,#+20
   \   000005F4   0CD0               BEQ      ??Procedure_Event_83
   \   000005F6   1528               CMP      R0,#+21
   \   000005F8   0AD0               BEQ      ??Procedure_Event_83
   \   000005FA   1628               CMP      R0,#+22
   \   000005FC   08D0               BEQ      ??Procedure_Event_83
   \   000005FE   2028               CMP      R0,#+32
   \   00000600   06D0               BEQ      ??Procedure_Event_83
   \   00000602   2128               CMP      R0,#+33
   \   00000604   04D0               BEQ      ??Procedure_Event_83
   \   00000606   2228               CMP      R0,#+34
   \   00000608   02D0               BEQ      ??Procedure_Event_83
   \   0000060A   2328               CMP      R0,#+35
   \   0000060C   00D0               BEQ      .+4
   \   0000060E   ADE0               B        ??Procedure_Event_84
   \                     ??Procedure_Event_83:
   \   00000610   2C28               CMP      R0,#+44
   \   00000612   00D3               BCC      .+4
   \   00000614   AAE0               B        ??Procedure_Event_84
   3444                 {  
   3445                    txt[1]=0;
   \   00000616   6D46               MOV      R5,SP
   \   00000618   3800               MOVS     R0,R7
   \   0000061A   6870               STRB     R0,[R5, #+1]
   3446                    txt[0]='>';
   \   0000061C   3E20               MOVS     R0,#+62
   \   0000061E   2870               STRB     R0,[R5, #+0]
   3447                    if (Button(txt,43,4,18,18)==1) 
   \   00000620   82B0               SUB      SP,SP,#+8
   \   00000622   1220               MOVS     R0,#+18
   \   00000624   0090               STR      R0,[SP, #+0]
   \   00000626   0300               MOVS     R3,R0
   \   00000628   0422               MOVS     R2,#+4
   \   0000062A   2B21               MOVS     R1,#+43
   \   0000062C   02A8               ADD      R0,SP,#+8
   \   0000062E   ........           BL       Button
   \   00000632   02B0               ADD      SP,SP,#+8
   \   00000634   0128               CMP      R0,#+1
   \   00000636   1DD1               BNE      ??Procedure_Event_85
   3448                    {
   3449                      switch (TypePrc->Type)
   \   00000638   2078               LDRB     R0,[R4, #+0]
   \   0000063A   1438               SUBS     R0,R0,#+20
   \   0000063C   0228               CMP      R0,#+2
   \   0000063E   02D9               BLS      ??Procedure_Event_86
   \   00000640   0C38               SUBS     R0,R0,#+12
   \   00000642   0328               CMP      R0,#+3
   \   00000644   15D8               BHI      ??Procedure_Event_87
   3450                      {
   3451                        case ProcStI: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)   || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   \                     ??Procedure_Event_86:
   \   00000646   207A               LDRB     R0,[R4, #+8]
   \   00000648   401C               ADDS     R0,R0,#+1
   \   0000064A   0004               LSLS     R0,R0,#+16
   \   0000064C   000C               LSRS     R0,R0,#+16
   \   0000064E   1028               CMP      R0,#+16
   \   00000650   09D3               BCC      ??Procedure_Event_88
   \   00000652   0120               MOVS     R0,#+1
   \   00000654   2056               LDRSB    R0,[R4, R0]
   \   00000656   0028               CMP      R0,#+0
   \   00000658   09D5               BPL      ??Procedure_Event_89
   \   0000065A   207A               LDRB     R0,[R4, #+8]
   \   0000065C   401C               ADDS     R0,R0,#+1
   \   0000065E   0004               LSLS     R0,R0,#+16
   \   00000660   000C               LSRS     R0,R0,#+16
   \   00000662   6328               CMP      R0,#+99
   \   00000664   03D2               BCS      ??Procedure_Event_89
   \                     ??Procedure_Event_88:
   \   00000666   207A               LDRB     R0,[R4, #+8]
   \   00000668   401C               ADDS     R0,R0,#+1
   \   0000066A   2072               STRB     R0,[R4, #+8]
   \   0000066C   01E0               B        ??Procedure_Event_87
   \                     ??Procedure_Event_89:
   \   0000066E   3800               MOVS     R0,R7
   \   00000670   2072               STRB     R0,[R4, #+8]
   3452                        case ProcStNI: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)  || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3453                        case ProcStQ: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)   || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3454                        case ProcWOUT: if ((TypePrc->Tag.Port+1<NumberNeuronsPort)  || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3455                        case ProcWOUTS: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3456                        case ProcWOUTR: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3457                        case ProcWOUTC: if ((TypePrc->Tag.Port+1<NumberNeuronsPort) || ((TypePrc->Nr<0) &&(TypePrc->Tag.Port+1<99))) {TypePrc->Tag.Port++;} else {TypePrc->Tag.Port=0;} break;
   3458                      }
   3459                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_87:
   \   00000672   0126               MOVS     R6,#+1
   3460                    }
   3461                    txt[0]='<';
   \                     ??Procedure_Event_85:
   \   00000674   3C20               MOVS     R0,#+60
   \   00000676   2870               STRB     R0,[R5, #+0]
   3462                    if (Button(txt,2,4,18,18)==1) 
   \   00000678   82B0               SUB      SP,SP,#+8
   \   0000067A   1220               MOVS     R0,#+18
   \   0000067C   0090               STR      R0,[SP, #+0]
   \   0000067E   0300               MOVS     R3,R0
   \   00000680   0422               MOVS     R2,#+4
   \   00000682   0221               MOVS     R1,#+2
   \   00000684   02A8               ADD      R0,SP,#+8
   \   00000686   ........           BL       Button
   \   0000068A   02B0               ADD      SP,SP,#+8
   \   0000068C   0128               CMP      R0,#+1
   \   0000068E   6DD1               BNE      ??Procedure_Event_84
   3463                    {
   3464                      switch (TypePrc->Type)
   \   00000690   2078               LDRB     R0,[R4, #+0]
   \   00000692   1428               CMP      R0,#+20
   \   00000694   0CD0               BEQ      ??Procedure_Event_90
   \   00000696   1528               CMP      R0,#+21
   \   00000698   1AD0               BEQ      ??Procedure_Event_91
   \   0000069A   1628               CMP      R0,#+22
   \   0000069C   25D0               BEQ      ??Procedure_Event_92
   \   0000069E   2028               CMP      R0,#+32
   \   000006A0   30D0               BEQ      ??Procedure_Event_93
   \   000006A2   2128               CMP      R0,#+33
   \   000006A4   3BD0               BEQ      ??Procedure_Event_94
   \   000006A6   2228               CMP      R0,#+34
   \   000006A8   46D0               BEQ      ??Procedure_Event_95
   \   000006AA   2328               CMP      R0,#+35
   \   000006AC   51D0               BEQ      ??Procedure_Event_96
   \   000006AE   5CE0               B        ??Procedure_Event_97
   3465                      {
   3466                        case ProcStI: if (TypePrc->Tag.Port>0)  {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_90:
   \   000006B0   207A               LDRB     R0,[R4, #+8]
   \   000006B2   0028               CMP      R0,#+0
   \   000006B4   02D0               BEQ      ??Procedure_Event_98
   \                     ??Procedure_Event_99:
   \   000006B6   401E               SUBS     R0,R0,#+1
   \   000006B8   2072               STRB     R0,[R4, #+8]
   \   000006BA   56E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_98:
   \   000006BC   0120               MOVS     R0,#+1
   \   000006BE   2056               LDRSB    R0,[R4, R0]
   \   000006C0   0128               CMP      R0,#+1
   \   000006C2   02DB               BLT      ??Procedure_Event_100
   \   000006C4   0F20               MOVS     R0,#+15
   \   000006C6   2072               STRB     R0,[R4, #+8]
   \   000006C8   4FE0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_100:
   \   000006CA   6320               MOVS     R0,#+99
   \   000006CC   2072               STRB     R0,[R4, #+8]
   \   000006CE   4CE0               B        ??Procedure_Event_97
   3467                        case ProcStNI: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0)  TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_91:
   \   000006D0   207A               LDRB     R0,[R4, #+8]
   \   000006D2   0028               CMP      R0,#+0
   \   000006D4   EFD1               BNE      ??Procedure_Event_99
   \   000006D6   0120               MOVS     R0,#+1
   \   000006D8   2056               LDRSB    R0,[R4, R0]
   \   000006DA   0128               CMP      R0,#+1
   \   000006DC   02DB               BLT      ??Procedure_Event_101
   \   000006DE   0F20               MOVS     R0,#+15
   \   000006E0   2072               STRB     R0,[R4, #+8]
   \   000006E2   42E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_101:
   \   000006E4   6320               MOVS     R0,#+99
   \   000006E6   2072               STRB     R0,[R4, #+8]
   \   000006E8   3FE0               B        ??Procedure_Event_97
   3468                        case ProcStQ: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_92:
   \   000006EA   207A               LDRB     R0,[R4, #+8]
   \   000006EC   0028               CMP      R0,#+0
   \   000006EE   E2D1               BNE      ??Procedure_Event_99
   \   000006F0   0120               MOVS     R0,#+1
   \   000006F2   2056               LDRSB    R0,[R4, R0]
   \   000006F4   0128               CMP      R0,#+1
   \   000006F6   02DB               BLT      ??Procedure_Event_102
   \   000006F8   0F20               MOVS     R0,#+15
   \   000006FA   2072               STRB     R0,[R4, #+8]
   \   000006FC   35E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_102:
   \   000006FE   6320               MOVS     R0,#+99
   \   00000700   2072               STRB     R0,[R4, #+8]
   \   00000702   32E0               B        ??Procedure_Event_97
   3469                        case ProcWOUT: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_93:
   \   00000704   207A               LDRB     R0,[R4, #+8]
   \   00000706   0028               CMP      R0,#+0
   \   00000708   D5D1               BNE      ??Procedure_Event_99
   \   0000070A   0120               MOVS     R0,#+1
   \   0000070C   2056               LDRSB    R0,[R4, R0]
   \   0000070E   0128               CMP      R0,#+1
   \   00000710   02DB               BLT      ??Procedure_Event_103
   \   00000712   0F20               MOVS     R0,#+15
   \   00000714   2072               STRB     R0,[R4, #+8]
   \   00000716   28E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_103:
   \   00000718   6320               MOVS     R0,#+99
   \   0000071A   2072               STRB     R0,[R4, #+8]
   \   0000071C   25E0               B        ??Procedure_Event_97
   3470                        case ProcWOUTS: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_94:
   \   0000071E   207A               LDRB     R0,[R4, #+8]
   \   00000720   0028               CMP      R0,#+0
   \   00000722   C8D1               BNE      ??Procedure_Event_99
   \   00000724   0120               MOVS     R0,#+1
   \   00000726   2056               LDRSB    R0,[R4, R0]
   \   00000728   0128               CMP      R0,#+1
   \   0000072A   02DB               BLT      ??Procedure_Event_104
   \   0000072C   0F20               MOVS     R0,#+15
   \   0000072E   2072               STRB     R0,[R4, #+8]
   \   00000730   1BE0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_104:
   \   00000732   6320               MOVS     R0,#+99
   \   00000734   2072               STRB     R0,[R4, #+8]
   \   00000736   18E0               B        ??Procedure_Event_97
   3471                        case ProcWOUTR: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_95:
   \   00000738   207A               LDRB     R0,[R4, #+8]
   \   0000073A   0028               CMP      R0,#+0
   \   0000073C   BBD1               BNE      ??Procedure_Event_99
   \   0000073E   0120               MOVS     R0,#+1
   \   00000740   2056               LDRSB    R0,[R4, R0]
   \   00000742   0128               CMP      R0,#+1
   \   00000744   02DB               BLT      ??Procedure_Event_105
   \   00000746   0F20               MOVS     R0,#+15
   \   00000748   2072               STRB     R0,[R4, #+8]
   \   0000074A   0EE0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_105:
   \   0000074C   6320               MOVS     R0,#+99
   \   0000074E   2072               STRB     R0,[R4, #+8]
   \   00000750   0BE0               B        ??Procedure_Event_97
   3472                        case ProcWOUTC: if (TypePrc->Tag.Port>0) {TypePrc->Tag.Port--;} else {if(TypePrc->Nr>0) TypePrc->Tag.Port=NumberNeuronsPort-1; else TypePrc->Tag.Port=99; } break;
   \                     ??Procedure_Event_96:
   \   00000752   207A               LDRB     R0,[R4, #+8]
   \   00000754   0028               CMP      R0,#+0
   \   00000756   AED1               BNE      ??Procedure_Event_99
   \   00000758   0120               MOVS     R0,#+1
   \   0000075A   2056               LDRSB    R0,[R4, R0]
   \   0000075C   0128               CMP      R0,#+1
   \   0000075E   02DB               BLT      ??Procedure_Event_106
   \   00000760   0F20               MOVS     R0,#+15
   \   00000762   2072               STRB     R0,[R4, #+8]
   \   00000764   01E0               B        ??Procedure_Event_97
   \                     ??Procedure_Event_106:
   \   00000766   6320               MOVS     R0,#+99
   \   00000768   2072               STRB     R0,[R4, #+8]
   3473                      }
   3474                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_97:
   \   0000076A   0126               MOVS     R6,#+1
   3475                    }
   3476                 }
   3477                 
   3478                 //Zmiana typu procedury w ramach grupy
   3479                 txt[1]=0;
   \                     ??Procedure_Event_84:
   \   0000076C   6D46               MOV      R5,SP
   \   0000076E   3800               MOVS     R0,R7
   \   00000770   6870               STRB     R0,[R5, #+1]
   3480                 txt[0]='>';
   \   00000772   3E20               MOVS     R0,#+62
   \   00000774   2870               STRB     R0,[R5, #+0]
   3481                 if ((TypePrc->Type>ProcStStart) )
   \   00000776   2078               LDRB     R0,[R4, #+0]
   \   00000778   1428               CMP      R0,#+20
   \   0000077A   66D3               BCC      ??Procedure_Event_107
   3482                 if (Button(txt,43,46,18,18)==1)
   \   0000077C   82B0               SUB      SP,SP,#+8
   \   0000077E   1220               MOVS     R0,#+18
   \   00000780   0090               STR      R0,[SP, #+0]
   \   00000782   0300               MOVS     R3,R0
   \   00000784   2E22               MOVS     R2,#+46
   \   00000786   2B21               MOVS     R1,#+43
   \   00000788   02A8               ADD      R0,SP,#+8
   \   0000078A   ........           BL       Button
   \   0000078E   02B0               ADD      SP,SP,#+8
   \   00000790   0128               CMP      R0,#+1
   \   00000792   5AD1               BNE      ??Procedure_Event_107
   3483                 {
   3484                   //je¿eli stany
   3485                   if  ((TypePrc->Type>ProcStStart) && (TypePrc->Type<ProcStStop))
   \   00000794   2078               LDRB     R0,[R4, #+0]
   \   00000796   1428               CMP      R0,#+20
   \   00000798   14D3               BCC      ??Procedure_Event_108
   \   0000079A   1928               CMP      R0,#+25
   \   0000079C   12D2               BCS      ??Procedure_Event_108
   3486                      { 
   3487                        if (TypePrc->Type+1<ProcStStop) 
   \   0000079E   401C               ADDS     R0,R0,#+1
   \   000007A0   0004               LSLS     R0,R0,#+16
   \   000007A2   000C               LSRS     R0,R0,#+16
   \   000007A4   1928               CMP      R0,#+25
   \   000007A6   0AD2               BCS      ??Procedure_Event_109
   3488                        {
   3489                          TypePrc->Type++;MenuPaintExecut=1;  
   \   000007A8   2078               LDRB     R0,[R4, #+0]
   \   000007AA   401C               ADDS     R0,R0,#+1
   \   000007AC   2070               STRB     R0,[R4, #+0]
   \   000007AE   0126               MOVS     R6,#+1
   3490                          if (TypePrc->Type>ProcStQ) {TypePrc->Nr=0; TypePrc->Tag.Port=0;}
   \   000007B0   2078               LDRB     R0,[R4, #+0]
   \   000007B2   1728               CMP      R0,#+23
   \   000007B4   06D3               BCC      ??Procedure_Event_108
   \   000007B6   3800               MOVS     R0,R7
   \   000007B8   6070               STRB     R0,[R4, #+1]
   \   000007BA   2072               STRB     R0,[R4, #+8]
   \   000007BC   02E0               B        ??Procedure_Event_108
   3491                        } else {TypePrc->Type=(_ProcType)(ProcStStart+1);MenuPaintExecut=1;  }
   \                     ??Procedure_Event_109:
   \   000007BE   1420               MOVS     R0,#+20
   \   000007C0   2070               STRB     R0,[R4, #+0]
   \   000007C2   0126               MOVS     R6,#+1
   3492                      }
   3493                   if  ((TypePrc->Type>ProcSetStart) && (TypePrc->Type<ProcSetStop))
   \                     ??Procedure_Event_108:
   \   000007C4   2078               LDRB     R0,[R4, #+0]
   \   000007C6   2028               CMP      R0,#+32
   \   000007C8   14D3               BCC      ??Procedure_Event_110
   \   000007CA   2828               CMP      R0,#+40
   \   000007CC   12D2               BCS      ??Procedure_Event_110
   3494                      { 
   3495                        if (TypePrc->Type+1<ProcSetStop) 
   \   000007CE   401C               ADDS     R0,R0,#+1
   \   000007D0   0004               LSLS     R0,R0,#+16
   \   000007D2   000C               LSRS     R0,R0,#+16
   \   000007D4   2828               CMP      R0,#+40
   \   000007D6   0AD2               BCS      ??Procedure_Event_111
   3496                        {
   3497                          TypePrc->Type++;MenuPaintExecut=1;  
   \   000007D8   2078               LDRB     R0,[R4, #+0]
   \   000007DA   401C               ADDS     R0,R0,#+1
   \   000007DC   2070               STRB     R0,[R4, #+0]
   \   000007DE   0126               MOVS     R6,#+1
   3498                          if (TypePrc->Type>ProcWOUTC) {TypePrc->Nr=0; TypePrc->Tag.Port=0;}
   \   000007E0   2078               LDRB     R0,[R4, #+0]
   \   000007E2   2428               CMP      R0,#+36
   \   000007E4   06D3               BCC      ??Procedure_Event_110
   \   000007E6   3800               MOVS     R0,R7
   \   000007E8   6070               STRB     R0,[R4, #+1]
   \   000007EA   2072               STRB     R0,[R4, #+8]
   \   000007EC   02E0               B        ??Procedure_Event_110
   3499                        } else {TypePrc->Type=(_ProcType)(ProcSetStart+1);MenuPaintExecut=1;  }
   \                     ??Procedure_Event_111:
   \   000007EE   2020               MOVS     R0,#+32
   \   000007F0   2070               STRB     R0,[R4, #+0]
   \   000007F2   0126               MOVS     R6,#+1
   3500                      }
   3501                   
   3502                   
   3503                   if  ((TypePrc->Type>ProcTimeStart) && (TypePrc->Type<ProcTimeStop))
   \                     ??Procedure_Event_110:
   \   000007F4   2078               LDRB     R0,[R4, #+0]
   \   000007F6   2D28               CMP      R0,#+45
   \   000007F8   0ED3               BCC      ??Procedure_Event_112
   \   000007FA   3028               CMP      R0,#+48
   \   000007FC   0CD2               BCS      ??Procedure_Event_112
   3504                   {  
   3505                      if (TypePrc->Type+1<ProcTimeStop) 
   \   000007FE   401C               ADDS     R0,R0,#+1
   \   00000800   0004               LSLS     R0,R0,#+16
   \   00000802   000C               LSRS     R0,R0,#+16
   \   00000804   3028               CMP      R0,#+48
   \   00000806   04D2               BCS      ??Procedure_Event_113
   3506                      {TypePrc->Type++;MenuPaintExecut=1;  
   \   00000808   2078               LDRB     R0,[R4, #+0]
   \   0000080A   401C               ADDS     R0,R0,#+1
   \   0000080C   2070               STRB     R0,[R4, #+0]
   \   0000080E   0126               MOVS     R6,#+1
   \   00000810   02E0               B        ??Procedure_Event_112
   3507                      } else {
   3508                        TypePrc->Type=(_ProcType)(ProcTimeStart+1);MenuPaintExecut=1;  
   \                     ??Procedure_Event_113:
   \   00000812   2D20               MOVS     R0,#+45
   \   00000814   2070               STRB     R0,[R4, #+0]
   \   00000816   0126               MOVS     R6,#+1
   3509                      }
   3510          
   3511                   }
   3512                   
   3513                   if  ((TypePrc->Type>ProcAnalogStart) && (TypePrc->Type<ProcAnalogStop))
   \                     ??Procedure_Event_112:
   \   00000818   2078               LDRB     R0,[R4, #+0]
   \   0000081A   3728               CMP      R0,#+55
   \   0000081C   0ED3               BCC      ??Procedure_Event_114
   \   0000081E   4028               CMP      R0,#+64
   \   00000820   0CD2               BCS      ??Procedure_Event_114
   3514                      { 
   3515                        if (TypePrc->Type+1<ProcAnalogStop) 
   \   00000822   401C               ADDS     R0,R0,#+1
   \   00000824   0004               LSLS     R0,R0,#+16
   \   00000826   000C               LSRS     R0,R0,#+16
   \   00000828   4028               CMP      R0,#+64
   \   0000082A   04D2               BCS      ??Procedure_Event_115
   3516                        {TypePrc->Type++;MenuPaintExecut=1;  } else {TypePrc->Type=ProcAnalogStart+1;MenuPaintExecut=1;  }
                                                                                         ^
Warning[Pe188]: enumerated type mixed with another type
   \   0000082C   2078               LDRB     R0,[R4, #+0]
   \   0000082E   401C               ADDS     R0,R0,#+1
   \   00000830   2070               STRB     R0,[R4, #+0]
   \   00000832   0126               MOVS     R6,#+1
   \   00000834   02E0               B        ??Procedure_Event_114
   \                     ??Procedure_Event_115:
   \   00000836   3720               MOVS     R0,#+55
   \   00000838   2070               STRB     R0,[R4, #+0]
   \   0000083A   0126               MOVS     R6,#+1
   3517                      }
   3518                   
   3519                   
   3520                   
   3521                   if ((TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg) )
   \                     ??Procedure_Event_114:
   \   0000083C   2078               LDRB     R0,[R4, #+0]
   \   0000083E   3828               CMP      R0,#+56
   \   00000840   01D0               BEQ      ??Procedure_Event_116
   \   00000842   3928               CMP      R0,#+57
   \   00000844   01D1               BNE      ??Procedure_Event_107
   3522                        {
   3523                          TypePrc->Tag.RegNr=1;
   \                     ??Procedure_Event_116:
   \   00000846   0120               MOVS     R0,#+1
   \   00000848   2072               STRB     R0,[R4, #+8]
   3524                        }
   3525                   
   3526                   
   3527                 }
   3528                 
   3529                 
   3530                 /*
   3531                 if (TypePrc->Type==ProcStartTimer)
   3532                 if (Button("> ",2,46,18,11)==1)
   3533                 {
   3534                   if (TypePrc->Nr+1<NumberTimer) {TypePrc->Nr++;} else {TypePrc->Nr=0;}   
   3535                   
   3536                   MenuPaintExecut=1; 
   3537                 }
   3538                 */
   3539                 
   3540                 if (TypePrc->Type==ProcClock)
   \                     ??Procedure_Event_107:
   \   0000084A   2078               LDRB     R0,[R4, #+0]
   \   0000084C   2E28               CMP      R0,#+46
   \   0000084E   00D0               BEQ      .+4
   \   00000850   9CE0               B        ??Procedure_Event_117
   3541                 {
   3542          
   3543                    txt[1]=0;
   \   00000852   3800               MOVS     R0,R7
   \   00000854   6870               STRB     R0,[R5, #+1]
   3544                    txt[0]=30;
   \   00000856   1E20               MOVS     R0,#+30
   \   00000858   2870               STRB     R0,[R5, #+0]
   3545                    if (Button(txt,43,3,18,19)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   0000085A   82B0               SUB      SP,SP,#+8
   \   0000085C   1320               MOVS     R0,#+19
   \   0000085E   0090               STR      R0,[SP, #+0]
   \   00000860   1223               MOVS     R3,#+18
   \   00000862   0322               MOVS     R2,#+3
   \   00000864   2B21               MOVS     R1,#+43
   \   00000866   02A8               ADD      R0,SP,#+8
   \   00000868   ........           BL       Button
   \   0000086C   02B0               ADD      SP,SP,#+8
   \   0000086E   0128               CMP      R0,#+1
   \   00000870   28D1               BNE      ??Procedure_Event_118
   3546                    {
   3547                    
   3548                      if ((TypePrc->Tag.ClkPrcType==PrcMounth) && (TypePrc->Tag.ClkPrcVal<12)) 
   \   00000872   207A               LDRB     R0,[R4, #+8]
   \   00000874   0028               CMP      R0,#+0
   \   00000876   04D1               BNE      ??Procedure_Event_119
   \   00000878   607A               LDRB     R0,[R4, #+9]
   \   0000087A   0C28               CMP      R0,#+12
   \   0000087C   01D2               BCS      ??Procedure_Event_119
   3549                          {TypePrc->Tag.ClkPrcVal++;} 
   \   0000087E   401C               ADDS     R0,R0,#+1
   \   00000880   6072               STRB     R0,[R4, #+9]
   3550                      if ((TypePrc->Tag.ClkPrcType==PrcDay) &&(TypePrc->Tag.ClkPrcVal<31)) 
   \                     ??Procedure_Event_119:
   \   00000882   207A               LDRB     R0,[R4, #+8]
   \   00000884   0128               CMP      R0,#+1
   \   00000886   04D1               BNE      ??Procedure_Event_120
   \   00000888   607A               LDRB     R0,[R4, #+9]
   \   0000088A   1F28               CMP      R0,#+31
   \   0000088C   01D2               BCS      ??Procedure_Event_120
   3551                          {TypePrc->Tag.ClkPrcVal++;}
   \   0000088E   401C               ADDS     R0,R0,#+1
   \   00000890   6072               STRB     R0,[R4, #+9]
   3552                      if ((TypePrc->Tag.ClkPrcType==PrcHour) &&(TypePrc->Tag.ClkPrcVal<23)) 
   \                     ??Procedure_Event_120:
   \   00000892   207A               LDRB     R0,[R4, #+8]
   \   00000894   0228               CMP      R0,#+2
   \   00000896   04D1               BNE      ??Procedure_Event_121
   \   00000898   607A               LDRB     R0,[R4, #+9]
   \   0000089A   1728               CMP      R0,#+23
   \   0000089C   01D2               BCS      ??Procedure_Event_121
   3553                         {TypePrc->Tag.ClkPrcVal++;} 
   \   0000089E   401C               ADDS     R0,R0,#+1
   \   000008A0   6072               STRB     R0,[R4, #+9]
   3554                      if ((TypePrc->Tag.ClkPrcType==PrcMinute) &&(TypePrc->Tag.ClkPrcVal<59)) 
   \                     ??Procedure_Event_121:
   \   000008A2   207A               LDRB     R0,[R4, #+8]
   \   000008A4   0328               CMP      R0,#+3
   \   000008A6   04D1               BNE      ??Procedure_Event_122
   \   000008A8   607A               LDRB     R0,[R4, #+9]
   \   000008AA   3B28               CMP      R0,#+59
   \   000008AC   01D2               BCS      ??Procedure_Event_122
   3555                          {TypePrc->Tag.ClkPrcVal++;} 
   \   000008AE   401C               ADDS     R0,R0,#+1
   \   000008B0   6072               STRB     R0,[R4, #+9]
   3556                      if ((TypePrc->Tag.ClkPrcType==PrcSecond) &&(TypePrc->Tag.ClkPrcVal<59)) 
   \                     ??Procedure_Event_122:
   \   000008B2   207A               LDRB     R0,[R4, #+8]
   \   000008B4   0428               CMP      R0,#+4
   \   000008B6   04D1               BNE      ??Procedure_Event_123
   \   000008B8   607A               LDRB     R0,[R4, #+9]
   \   000008BA   3B28               CMP      R0,#+59
   \   000008BC   01D2               BCS      ??Procedure_Event_123
   3557                          {TypePrc->Tag.ClkPrcVal++;}
   \   000008BE   401C               ADDS     R0,R0,#+1
   \   000008C0   6072               STRB     R0,[R4, #+9]
   3558                    
   3559                       
   3560                       
   3561                       
   3562                       MenuPaintExecut=1;  
   \                     ??Procedure_Event_123:
   \   000008C2   0126               MOVS     R6,#+1
   \                     ??Procedure_Event_118:
   \   000008C4   1F20               MOVS     R0,#+31
   \   000008C6   2870               STRB     R0,[R5, #+0]
   3563                    }
   3564              
   3565                    
   3566                    txt[0]=31;
   3567                    if  (Button(txt,2,3,18,19)==1)//(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000008C8   82B0               SUB      SP,SP,#+8
   \   000008CA   1320               MOVS     R0,#+19
   \   000008CC   0090               STR      R0,[SP, #+0]
   \   000008CE   1223               MOVS     R3,#+18
   \   000008D0   0322               MOVS     R2,#+3
   \   000008D2   0221               MOVS     R1,#+2
   \   000008D4   02A8               ADD      R0,SP,#+8
   \   000008D6   ........           BL       Button
   \   000008DA   02B0               ADD      SP,SP,#+8
   \   000008DC   0128               CMP      R0,#+1
   \   000008DE   37D1               BNE      ??Procedure_Event_124
   3568                    { 
   3569                      if (TypePrc->Tag.ClkPrcType==PrcMounth) if (TypePrc->Tag.ClkPrcVal>1)
   \   000008E0   207A               LDRB     R0,[R4, #+8]
   \   000008E2   0028               CMP      R0,#+0
   \   000008E4   07D1               BNE      ??Procedure_Event_125
   \   000008E6   607A               LDRB     R0,[R4, #+9]
   \   000008E8   0228               CMP      R0,#+2
   \   000008EA   02D3               BCC      ??Procedure_Event_126
   3570                          {TypePrc->Tag.ClkPrcVal--; } else {TypePrc->Tag.ClkPrcVal=12;}
   \   000008EC   401E               SUBS     R0,R0,#+1
   \   000008EE   6072               STRB     R0,[R4, #+9]
   \   000008F0   01E0               B        ??Procedure_Event_125
   \                     ??Procedure_Event_126:
   \   000008F2   0C20               MOVS     R0,#+12
   \   000008F4   6072               STRB     R0,[R4, #+9]
   3571                      if (TypePrc->Tag.ClkPrcType==PrcDay) if(TypePrc->Tag.ClkPrcVal>1) 
   \                     ??Procedure_Event_125:
   \   000008F6   207A               LDRB     R0,[R4, #+8]
   \   000008F8   0128               CMP      R0,#+1
   \   000008FA   07D1               BNE      ??Procedure_Event_127
   \   000008FC   607A               LDRB     R0,[R4, #+9]
   \   000008FE   0228               CMP      R0,#+2
   \   00000900   02D3               BCC      ??Procedure_Event_128
   3572                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=31;}
   \   00000902   401E               SUBS     R0,R0,#+1
   \   00000904   6072               STRB     R0,[R4, #+9]
   \   00000906   01E0               B        ??Procedure_Event_127
   \                     ??Procedure_Event_128:
   \   00000908   1F20               MOVS     R0,#+31
   \   0000090A   6072               STRB     R0,[R4, #+9]
   3573                      if (TypePrc->Tag.ClkPrcType==PrcHour) if(TypePrc->Tag.ClkPrcVal>0)
   \                     ??Procedure_Event_127:
   \   0000090C   207A               LDRB     R0,[R4, #+8]
   \   0000090E   0228               CMP      R0,#+2
   \   00000910   07D1               BNE      ??Procedure_Event_129
   \   00000912   607A               LDRB     R0,[R4, #+9]
   \   00000914   0028               CMP      R0,#+0
   \   00000916   02D0               BEQ      ??Procedure_Event_130
   3574                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=23;}
   \   00000918   401E               SUBS     R0,R0,#+1
   \   0000091A   6072               STRB     R0,[R4, #+9]
   \   0000091C   01E0               B        ??Procedure_Event_129
   \                     ??Procedure_Event_130:
   \   0000091E   1720               MOVS     R0,#+23
   \   00000920   6072               STRB     R0,[R4, #+9]
   3575                      if (TypePrc->Tag.ClkPrcType==PrcMinute) if(TypePrc->Tag.ClkPrcVal>0) 
   \                     ??Procedure_Event_129:
   \   00000922   207A               LDRB     R0,[R4, #+8]
   \   00000924   0328               CMP      R0,#+3
   \   00000926   07D1               BNE      ??Procedure_Event_131
   \   00000928   607A               LDRB     R0,[R4, #+9]
   \   0000092A   0028               CMP      R0,#+0
   \   0000092C   02D0               BEQ      ??Procedure_Event_132
   3576                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=59;}
   \   0000092E   401E               SUBS     R0,R0,#+1
   \   00000930   6072               STRB     R0,[R4, #+9]
   \   00000932   01E0               B        ??Procedure_Event_131
   \                     ??Procedure_Event_132:
   \   00000934   3B20               MOVS     R0,#+59
   \   00000936   6072               STRB     R0,[R4, #+9]
   3577                      if (TypePrc->Tag.ClkPrcType==PrcSecond) if(TypePrc->Tag.ClkPrcVal>0) 
   \                     ??Procedure_Event_131:
   \   00000938   207A               LDRB     R0,[R4, #+8]
   \   0000093A   0428               CMP      R0,#+4
   \   0000093C   07D1               BNE      ??Procedure_Event_133
   \   0000093E   607A               LDRB     R0,[R4, #+9]
   \   00000940   0028               CMP      R0,#+0
   \   00000942   02D0               BEQ      ??Procedure_Event_134
   3578                          {TypePrc->Tag.ClkPrcVal--;} else {TypePrc->Tag.ClkPrcVal=59;}
   \   00000944   401E               SUBS     R0,R0,#+1
   \   00000946   6072               STRB     R0,[R4, #+9]
   \   00000948   01E0               B        ??Procedure_Event_133
   \                     ??Procedure_Event_134:
   \   0000094A   3B20               MOVS     R0,#+59
   \   0000094C   6072               STRB     R0,[R4, #+9]
   3579                        
   3580                       MenuPaintExecut=1;  
   \                     ??Procedure_Event_133:
   \   0000094E   0126               MOVS     R6,#+1
   3581                      
   3582                    }
   3583               
   3584                    
   3585                   //przycisk zmiany typu procedury zegara (godzina, minuta,...)
   3586                   if (Button("> ",43,24,18,19)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??Procedure_Event_124:
   \   00000950   82B0               SUB      SP,SP,#+8
   \   00000952   1320               MOVS     R0,#+19
   \   00000954   0090               STR      R0,[SP, #+0]
   \   00000956   1223               MOVS     R3,#+18
   \   00000958   1822               MOVS     R2,#+24
   \   0000095A   2B21               MOVS     R1,#+43
   \   0000095C   86A0               ADR      R0,??Procedure_Event_135  ;; 0x3E, 0x20, 0x00, 0x00
   \   0000095E   ........           BL       Button
   \   00000962   02B0               ADD      SP,SP,#+8
   \   00000964   0128               CMP      R0,#+1
   \   00000966   11D1               BNE      ??Procedure_Event_117
   3587                   {
   3588                     if (TypePrc->Tag.ClkPrcType<PrcSecond) 
   \   00000968   207A               LDRB     R0,[R4, #+8]
   \   0000096A   0428               CMP      R0,#+4
   \   0000096C   02D2               BCS      ??Procedure_Event_136
   3589                     {
   3590                       TypePrc->Tag.ClkPrcType++;
   \   0000096E   401C               ADDS     R0,R0,#+1
   \   00000970   2072               STRB     R0,[R4, #+8]
   \   00000972   01E0               B        ??Procedure_Event_137
   3591                     }else{
   3592                       TypePrc->Tag.ClkPrcType=PrcMounth;
   \                     ??Procedure_Event_136:
   \   00000974   3800               MOVS     R0,R7
   \   00000976   2072               STRB     R0,[R4, #+8]
   3593                     }
   3594          
   3595                       TypePrc->Tag.ClkPrcVal=0; 
   \                     ??Procedure_Event_137:
   \   00000978   3800               MOVS     R0,R7
   \   0000097A   6072               STRB     R0,[R4, #+9]
   3596                       if ((TypePrc->Tag.ClkPrcType==PrcMounth) || (TypePrc->Tag.ClkPrcType==PrcDay)) TypePrc->Tag.ClkPrcVal=1; 
   \   0000097C   207A               LDRB     R0,[R4, #+8]
   \   0000097E   0028               CMP      R0,#+0
   \   00000980   01D0               BEQ      ??Procedure_Event_138
   \   00000982   0128               CMP      R0,#+1
   \   00000984   01D1               BNE      ??Procedure_Event_139
   \                     ??Procedure_Event_138:
   \   00000986   0120               MOVS     R0,#+1
   \   00000988   6072               STRB     R0,[R4, #+9]
   3597          
   3598          
   3599                     
   3600                     MenuPaintExecut=1; 
   \                     ??Procedure_Event_139:
   \   0000098A   0126               MOVS     R6,#+1
   3601                     
   3602                   }
   3603                    
   3604                 }
   3605               
   3606                 if (TypePrc->Type==ProcTimerSet)
   \                     ??Procedure_Event_117:
   \   0000098C   2078               LDRB     R0,[R4, #+0]
   \   0000098E   2D28               CMP      R0,#+45
   \   00000990   63D1               BNE      ??Procedure_Event_140
   3607                 {  
   3608                   
   3609                    txt[1]=0;
   \   00000992   3800               MOVS     R0,R7
   \   00000994   6870               STRB     R0,[R5, #+1]
   3610                    txt[0]=30;
   \   00000996   1E20               MOVS     R0,#+30
   \   00000998   2870               STRB     R0,[R5, #+0]
   3611                    if ((Button(txt,33,3,19,19)) &&  ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter)) )//(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000099A   82B0               SUB      SP,SP,#+8
   \   0000099C   1320               MOVS     R0,#+19
   \   0000099E   0090               STR      R0,[SP, #+0]
   \   000009A0   0300               MOVS     R3,R0
   \   000009A2   0322               MOVS     R2,#+3
   \   000009A4   2121               MOVS     R1,#+33
   \   000009A6   02A8               ADD      R0,SP,#+8
   \   000009A8   ........           BL       Button
   \   000009AC   02B0               ADD      SP,SP,#+8
   \   000009AE   0028               CMP      R0,#+0
   \   000009B0   26D0               BEQ      ??Procedure_Event_141
   \   000009B2   7248               LDR      R0,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   000009B4   03C8               LDM      R0!,{R0,R1}
   \   000009B6   0022               MOVS     R2,#+0
   \   000009B8   C830               ADDS     R0,R0,#+200
   \   000009BA   5141               ADCS     R1,R1,R2
   \   000009BC   0200               MOVS     R2,R0
   \   000009BE   0B00               MOVS     R3,R1
   \   000009C0   6F48               LDR      R0,??Procedure_Event_135+0x8  ;; g_counter
   \   000009C2   03C8               LDM      R0!,{R0,R1}
   \   000009C4   8B42               CMP      R3,R1
   \   000009C6   0DD3               BCC      ??Procedure_Event_142
   \   000009C8   01D8               BHI      ??Procedure_Event_143
   \   000009CA   8242               CMP      R2,R0
   \   000009CC   0AD3               BCC      ??Procedure_Event_142
   \                     ??Procedure_Event_143:
   \   000009CE   6C48               LDR      R0,??Procedure_Event_135+0x8  ;; g_counter
   \   000009D0   03C8               LDM      R0!,{R0,R1}
   \   000009D2   0200               MOVS     R2,R0
   \   000009D4   0B00               MOVS     R3,R1
   \   000009D6   6948               LDR      R0,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   000009D8   03C8               LDM      R0!,{R0,R1}
   \   000009DA   8B42               CMP      R3,R1
   \   000009DC   10D8               BHI      ??Procedure_Event_141
   \   000009DE   01D3               BCC      ??Procedure_Event_142
   \   000009E0   8242               CMP      R2,R0
   \   000009E2   0DD2               BCS      ??Procedure_Event_141
   3612                    {
   3613                      Touch_EventTime=g_counter;
   \                     ??Procedure_Event_142:
   \   000009E4   654A               LDR      R2,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   000009E6   6648               LDR      R0,??Procedure_Event_135+0x8  ;; g_counter
   \   000009E8   03C8               LDM      R0!,{R0,R1}
   \   000009EA   03C2               STM      R2!,{R0,R1}
   3614                      if (TypePrc->Tag.SetCounter<10000)  
   \   000009EC   A068               LDR      R0,[R4, #+8]
   \   000009EE   6549               LDR      R1,??Procedure_Event_135+0xC  ;; 0x2710
   \   000009F0   8842               CMP      R0,R1
   \   000009F2   03D2               BCS      ??Procedure_Event_144
   3615                      { 
   3616                       TypePrc->Tag.SetCounter++;
   \   000009F4   A068               LDR      R0,[R4, #+8]
   \   000009F6   401C               ADDS     R0,R0,#+1
   \   000009F8   A060               STR      R0,[R4, #+8]
   \   000009FA   00E0               B        ??Procedure_Event_145
   3617                       
   3618                      }else {
   3619                       TypePrc->Tag.SetCounter=0; 
   \                     ??Procedure_Event_144:
   \   000009FC   A760               STR      R7,[R4, #+8]
   3620                      }
   3621                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_145:
   \   000009FE   0126               MOVS     R6,#+1
   3622                    }
   3623                    
   3624                    txt[0]=31;
   \                     ??Procedure_Event_141:
   \   00000A00   1F20               MOVS     R0,#+31
   \   00000A02   2870               STRB     R0,[R5, #+0]
   3625                    if ((Button(txt,12,3,19,19)) && ((g_counter>Touch_EventTime+200) || (Touch_EventTime>g_counter))) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000A04   82B0               SUB      SP,SP,#+8
   \   00000A06   1320               MOVS     R0,#+19
   \   00000A08   0090               STR      R0,[SP, #+0]
   \   00000A0A   0300               MOVS     R3,R0
   \   00000A0C   0322               MOVS     R2,#+3
   \   00000A0E   0C21               MOVS     R1,#+12
   \   00000A10   02A8               ADD      R0,SP,#+8
   \   00000A12   ........           BL       Button
   \   00000A16   02B0               ADD      SP,SP,#+8
   \   00000A18   0028               CMP      R0,#+0
   \   00000A1A   1ED0               BEQ      ??Procedure_Event_140
   \   00000A1C   5848               LDR      R0,??Procedure_Event_135+0x8  ;; g_counter
   \   00000A1E   03C8               LDM      R0!,{R0,R1}
   \   00000A20   564A               LDR      R2,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   00000A22   0CCA               LDM      R2!,{R2,R3}
   \   00000A24   0025               MOVS     R5,#+0
   \   00000A26   C832               ADDS     R2,R2,#+200
   \   00000A28   6B41               ADCS     R3,R3,R5
   \   00000A2A   8B42               CMP      R3,R1
   \   00000A2C   09D3               BCC      ??Procedure_Event_146
   \   00000A2E   01D8               BHI      ??Procedure_Event_147
   \   00000A30   8242               CMP      R2,R0
   \   00000A32   06D3               BCC      ??Procedure_Event_146
   \                     ??Procedure_Event_147:
   \   00000A34   514A               LDR      R2,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   00000A36   0CCA               LDM      R2!,{R2,R3}
   \   00000A38   9942               CMP      R1,R3
   \   00000A3A   0ED8               BHI      ??Procedure_Event_140
   \   00000A3C   01D3               BCC      ??Procedure_Event_146
   \   00000A3E   9042               CMP      R0,R2
   \   00000A40   0BD2               BCS      ??Procedure_Event_140
   3626                    {
   3627                      Touch_EventTime=g_counter;
   \                     ??Procedure_Event_146:
   \   00000A42   4E4A               LDR      R2,??Procedure_Event_135+0x4  ;; TextToChangeLength + 56
   \   00000A44   03C2               STM      R2!,{R0,R1}
   3628                      if (TypePrc->Tag.SetCounter>0) 
   \   00000A46   A068               LDR      R0,[R4, #+8]
   \   00000A48   0028               CMP      R0,#+0
   \   00000A4A   03D0               BEQ      ??Procedure_Event_148
   3629                      {
   3630                       TypePrc->Tag.SetCounter--;
   \   00000A4C   A068               LDR      R0,[R4, #+8]
   \   00000A4E   401E               SUBS     R0,R0,#+1
   \   00000A50   A060               STR      R0,[R4, #+8]
   \   00000A52   01E0               B        ??Procedure_Event_149
   3631                       
   3632                      }else{
   3633                        TypePrc->Tag.SetCounter=100000;
   \                     ??Procedure_Event_148:
   \   00000A54   4C48               LDR      R0,??Procedure_Event_135+0x10  ;; 0x186a0
   \   00000A56   A060               STR      R0,[R4, #+8]
   3634                      }
   3635                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_149:
   \   00000A58   0126               MOVS     R6,#+1
   3636                    }
   3637                 }
   3638                 
   3639                        //zmiana numeru procedur Dnia
   3640                 if (TypePrc->Type==ProcDay)
   \                     ??Procedure_Event_140:
   \   00000A5A   2078               LDRB     R0,[R4, #+0]
   \   00000A5C   2F28               CMP      R0,#+47
   \   00000A5E   29D1               BNE      ??Procedure_Event_150
   3641                 {  
   3642          
   3643                    
   3644                    if (Button("> ",43,25,18,18)==1) 
   \   00000A60   82B0               SUB      SP,SP,#+8
   \   00000A62   1220               MOVS     R0,#+18
   \   00000A64   0090               STR      R0,[SP, #+0]
   \   00000A66   0300               MOVS     R3,R0
   \   00000A68   1922               MOVS     R2,#+25
   \   00000A6A   2B21               MOVS     R1,#+43
   \   00000A6C   42A0               ADR      R0,??Procedure_Event_135  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000A6E   ........           BL       Button
   \   00000A72   02B0               ADD      SP,SP,#+8
   \   00000A74   0128               CMP      R0,#+1
   \   00000A76   08D1               BNE      ??Procedure_Event_151
   3645                    {
   3646            
   3647                      if (TypePrc->Tag.DayOfWeek<Sunday) {TypePrc->Tag.DayOfWeek++;} else {TypePrc->Tag.DayOfWeek=Monday;}
   \   00000A78   207A               LDRB     R0,[R4, #+8]
   \   00000A7A   0728               CMP      R0,#+7
   \   00000A7C   02D2               BCS      ??Procedure_Event_152
   \   00000A7E   401C               ADDS     R0,R0,#+1
   \   00000A80   2072               STRB     R0,[R4, #+8]
   \   00000A82   01E0               B        ??Procedure_Event_153
   \                     ??Procedure_Event_152:
   \   00000A84   0120               MOVS     R0,#+1
   \   00000A86   2072               STRB     R0,[R4, #+8]
   3648                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_153:
   \   00000A88   0126               MOVS     R6,#+1
   3649                    }
   3650              
   3651                    if (Button("< ",2,25,18,18)==1) 
   \                     ??Procedure_Event_151:
   \   00000A8A   82B0               SUB      SP,SP,#+8
   \   00000A8C   1220               MOVS     R0,#+18
   \   00000A8E   0090               STR      R0,[SP, #+0]
   \   00000A90   0300               MOVS     R3,R0
   \   00000A92   1922               MOVS     R2,#+25
   \   00000A94   0221               MOVS     R1,#+2
   \   00000A96   3DA0               ADR      R0,??Procedure_Event_135+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000A98   ........           BL       Button
   \   00000A9C   02B0               ADD      SP,SP,#+8
   \   00000A9E   0128               CMP      R0,#+1
   \   00000AA0   08D1               BNE      ??Procedure_Event_150
   3652                    {
   3653                      
   3654                        if (TypePrc->Tag.DayOfWeek>Monday) {TypePrc->Tag.DayOfWeek--;} else {TypePrc->Tag.DayOfWeek=Sunday;}
   \   00000AA2   207A               LDRB     R0,[R4, #+8]
   \   00000AA4   0228               CMP      R0,#+2
   \   00000AA6   02D3               BCC      ??Procedure_Event_154
   \   00000AA8   401E               SUBS     R0,R0,#+1
   \   00000AAA   2072               STRB     R0,[R4, #+8]
   \   00000AAC   01E0               B        ??Procedure_Event_155
   \                     ??Procedure_Event_154:
   \   00000AAE   0720               MOVS     R0,#+7
   \   00000AB0   2072               STRB     R0,[R4, #+8]
   3655          
   3656                      MenuPaintExecut=1; 
   \                     ??Procedure_Event_155:
   \   00000AB2   0126               MOVS     R6,#+1
   3657                    }
   3658                 }
   3659                 
   3660                 
   3661                  if (TypePrc->Type==ProcConstAnal) 
   \                     ??Procedure_Event_150:
   \   00000AB4   2078               LDRB     R0,[R4, #+0]
   \   00000AB6   3728               CMP      R0,#+55
   \   00000AB8   1ED1               BNE      ??Procedure_Event_156
   3662                 {
   3663                         if  (Button(Speech[g_leng].Zmiana,10,16,40,18)==1)
   \   00000ABA   82B0               SUB      SP,SP,#+8
   \   00000ABC   1220               MOVS     R0,#+18
   \   00000ABE   0090               STR      R0,[SP, #+0]
   \   00000AC0   2823               MOVS     R3,#+40
   \   00000AC2   1022               MOVS     R2,#+16
   \   00000AC4   0A21               MOVS     R1,#+10
   \   00000AC6   3248               LDR      R0,??Procedure_Event_135+0x18  ;; 0x50a
   \   00000AC8   324D               LDR      R5,??Procedure_Event_135+0x1C  ;; g_leng
   \   00000ACA   2D68               LDR      R5,[R5, #+0]
   \   00000ACC   4700               LSLS     R7,R0,#+1
   \   00000ACE   7D43               MULS     R5,R7,R5
   \   00000AD0   314F               LDR      R7,??Procedure_Event_135+0x20  ;; Speech
   \   00000AD2   7D19               ADDS     R5,R7,R5
   \   00000AD4   2818               ADDS     R0,R5,R0
   \   00000AD6   ........           BL       Button
   \   00000ADA   02B0               ADD      SP,SP,#+8
   \   00000ADC   0128               CMP      R0,#+1
   \   00000ADE   0BD1               BNE      ??Procedure_Event_156
   3664                         {
   3665                           ValueChange= &(TypePrc->Tag.ConstAnValue);
   \   00000AE0   2E48               LDR      R0,??Procedure_Event_135+0x24  ;; TextToChangeLength + 88
   \   00000AE2   2100               MOVS     R1,R4
   \   00000AE4   0831               ADDS     R1,R1,#+8
   \   00000AE6   0160               STR      R1,[R0, #+0]
   3666                           MenuLevel=(MenuLevel*10+1);
   \   00000AE8   2D48               LDR      R0,??Procedure_Event_135+0x28  ;; TextToChangeLength + 72
   \   00000AEA   2D49               LDR      R1,??Procedure_Event_135+0x28  ;; TextToChangeLength + 72
   \   00000AEC   0968               LDR      R1,[R1, #+0]
   \   00000AEE   0A22               MOVS     R2,#+10
   \   00000AF0   5143               MULS     R1,R2,R1
   \   00000AF2   491C               ADDS     R1,R1,#+1
   \   00000AF4   0160               STR      R1,[R0, #+0]
   3667                           MenuPaintExecut=1;
   \   00000AF6   0126               MOVS     R6,#+1
   3668                         }
   3669                 }
   3670                 
   3671                 
   3672                  if ((TypePrc->Type==ProcGetReg) || (TypePrc->Type==ProcSetReg)    )
   \                     ??Procedure_Event_156:
   \   00000AF8   2078               LDRB     R0,[R4, #+0]
   \   00000AFA   3828               CMP      R0,#+56
   \   00000AFC   01D0               BEQ      ??Procedure_Event_157
   \   00000AFE   3928               CMP      R0,#+57
   \   00000B00   33D1               BNE      ??Procedure_Event_7
   3673                 {
   3674                 
   3675                      if (Button("> ",43,5,18,18)==1) 
   \                     ??Procedure_Event_157:
   \   00000B02   82B0               SUB      SP,SP,#+8
   \   00000B04   1220               MOVS     R0,#+18
   \   00000B06   0090               STR      R0,[SP, #+0]
   \   00000B08   0300               MOVS     R3,R0
   \   00000B0A   0522               MOVS     R2,#+5
   \   00000B0C   2B21               MOVS     R1,#+43
   \   00000B0E   1AA0               ADR      R0,??Procedure_Event_135  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000B10   ........           BL       Button
   \   00000B14   02B0               ADD      SP,SP,#+8
   \   00000B16   0128               CMP      R0,#+1
   \   00000B18   0DD1               BNE      ??Procedure_Event_158
   3676                      {
   3677                        if (TypePrc->Nr<0)
   \   00000B1A   2056               LDRSB    R0,[R4, R0]
   \   00000B1C   0028               CMP      R0,#+0
   \   00000B1E   207A               LDRB     R0,[R4, #+8]
   \   00000B20   04D5               BPL      ??Procedure_Event_159
   3678                        {
   3679                          if (TypePrc->Tag.RegNr<AnalogVarAmount-1) TypePrc->Tag.RegNr++;  
   \   00000B22   1328               CMP      R0,#+19
   \   00000B24   06D2               BCS      ??Procedure_Event_160
   \   00000B26   401C               ADDS     R0,R0,#+1
   \   00000B28   2072               STRB     R0,[R4, #+8]
   \   00000B2A   03E0               B        ??Procedure_Event_160
   3680                        }else{
   3681                          if (TypePrc->Tag.RegNr<NumberReg-1) TypePrc->Tag.RegNr++;
   \                     ??Procedure_Event_159:
   \   00000B2C   0928               CMP      R0,#+9
   \   00000B2E   01D2               BCS      ??Procedure_Event_160
   \   00000B30   401C               ADDS     R0,R0,#+1
   \   00000B32   2072               STRB     R0,[R4, #+8]
   3682                        }
   3683                        MenuPaintExecut=1;
   \                     ??Procedure_Event_160:
   \   00000B34   0126               MOVS     R6,#+1
   3684                      }
   3685                      
   3686                      if (Button("< ",2,5,18,18)==1)
   \                     ??Procedure_Event_158:
   \   00000B36   82B0               SUB      SP,SP,#+8
   \   00000B38   1220               MOVS     R0,#+18
   \   00000B3A   0090               STR      R0,[SP, #+0]
   \   00000B3C   0300               MOVS     R3,R0
   \   00000B3E   0522               MOVS     R2,#+5
   \   00000B40   0221               MOVS     R1,#+2
   \   00000B42   12A0               ADR      R0,??Procedure_Event_135+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000B44   ........           BL       Button
   \   00000B48   02B0               ADD      SP,SP,#+8
   \   00000B4A   0128               CMP      R0,#+1
   \   00000B4C   0DD1               BNE      ??Procedure_Event_7
   3687                      {
   3688                        if (TypePrc->Nr<0)
   \   00000B4E   2056               LDRSB    R0,[R4, R0]
   \   00000B50   0028               CMP      R0,#+0
   \   00000B52   207A               LDRB     R0,[R4, #+8]
   \   00000B54   04D5               BPL      ??Procedure_Event_161
   3689                        {
   3690                          if (TypePrc->Tag.RegNr>0) TypePrc->Tag.RegNr--;
   \   00000B56   0028               CMP      R0,#+0
   \   00000B58   06D0               BEQ      ??Procedure_Event_162
   \   00000B5A   401E               SUBS     R0,R0,#+1
   \   00000B5C   2072               STRB     R0,[R4, #+8]
   \   00000B5E   03E0               B        ??Procedure_Event_162
   3691                        }else{
   3692                          if (TypePrc->Tag.RegNr>1) TypePrc->Tag.RegNr--;
   \                     ??Procedure_Event_161:
   \   00000B60   0228               CMP      R0,#+2
   \   00000B62   01D3               BCC      ??Procedure_Event_162
   \   00000B64   401E               SUBS     R0,R0,#+1
   \   00000B66   2072               STRB     R0,[R4, #+8]
   3693                        }
   3694                        MenuPaintExecut=1;
   \                     ??Procedure_Event_162:
   \   00000B68   0126               MOVS     R6,#+1
   3695                      }
   3696                 }
   3697                 
   3698          }
   3699                 
   3700            
   3701                 if ((X_up>0) && (Y_up>0))   exit=0;                 
   3702                  
   3703                 
   3704                 if (MenuPaintExecut) MenuPaint();
   \                     ??Procedure_Event_7:
   \   00000B6A   002E               CMP      R6,#+0
   \   00000B6C   01D0               BEQ      ??Procedure_Event_163
   \   00000B6E   ........           BL       MenuPaint
   3705          
   3706                }//________________________________________________________________________
   \                     ??Procedure_Event_163:
   \   00000B72   FEBC               POP      {R1-R7}
   \   00000B74   01BC               POP      {R0}
   \   00000B76   0047               BX       R0               ;; return
   \                     ??Procedure_Event_135:
   \   00000B78   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000B7C   ........           DC32     TextToChangeLength + 56
   \   00000B80   ........           DC32     g_counter
   \   00000B84   10270000           DC32     0x2710
   \   00000B88   A0860100           DC32     0x186a0
   \   00000B8C   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000B90   0A050000           DC32     0x50a
   \   00000B94   ........           DC32     g_leng
   \   00000B98   ........           DC32     Speech
   \   00000B9C   ........           DC32     TextToChangeLength + 88
   \   00000BA0   ........           DC32     TextToChangeLength + 72
   3707                   
   3708          
   3709          
   3710            
   3711          char ValueChangeTxtTmp[8]; 
   3712          char VCTT_ill=0;   //iloæ znaków napisu ValueChangeTxtTmp
   3713          char VCTT_point_flag=0;  //pozycja kropki
   3714          

   \                                 In section Debug.txt, align 4, keep-with-next
   3715          void ValueChange_Paint( short int *ValToChange)
   3716                { 
   \                     ValueChange_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   3717                  List_Paint(Speech[g_leng].Wartosc,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   58A0               ADR      R0,??ValueChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   5548               LDR      R0,??ValueChange_Paint_0+0x4  ;; 0x5dc
   \   0000001E   564C               LDR      R4,??ValueChange_Paint_0+0x8  ;; g_leng
   \   00000020   2468               LDR      R4,[R4, #+0]
   \   00000022   564D               LDR      R5,??ValueChange_Paint_0+0xC  ;; 0xa14
   \   00000024   6C43               MULS     R4,R5,R4
   \   00000026   564D               LDR      R5,??ValueChange_Paint_0+0x10  ;; Speech
   \   00000028   2C19               ADDS     R4,R5,R4
   \   0000002A   2018               ADDS     R0,R4,R0
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   3718                  
   3719             
   3720                  if (VCTT_ill==0) for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   00000032   544D               LDR      R5,??ValueChange_Paint_0+0x14  ;; VCTT_ill
   \   00000034   2878               LDRB     R0,[R5, #+0]
   \   00000036   0028               CMP      R0,#+0
   \   00000038   0AD1               BNE      ??ValueChange_Paint_1
   \   0000003A   0024               MOVS     R4,#+0
   \   0000003C   2200               MOVS     R2,R4
   \   0000003E   04E0               B        ??ValueChange_Paint_2
   \                     ??ValueChange_Paint_3:
   \   00000040   6918               ADDS     R1,R5,R1
   \   00000042   0A71               STRB     R2,[R1, #+4]
   \   00000044   401C               ADDS     R0,R0,#+1
   \   00000046   0006               LSLS     R0,R0,#+24
   \   00000048   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Paint_2:
   \   0000004A   0100               MOVS     R1,R0
   \   0000004C   0729               CMP      R1,#+7
   \   0000004E   F7D3               BCC      ??ValueChange_Paint_3
   3721                  
   3722                  H_line(11,106,40,1);
   \                     ??ValueChange_Paint_1:
   \   00000050   0123               MOVS     R3,#+1
   \   00000052   2822               MOVS     R2,#+40
   \   00000054   6A21               MOVS     R1,#+106
   \   00000056   0B20               MOVS     R0,#+11
   \   00000058   ........           BL       H_line
   3723                  H_line(11,96,40,1);
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   2822               MOVS     R2,#+40
   \   00000060   6021               MOVS     R1,#+96
   \   00000062   0B20               MOVS     R0,#+11
   \   00000064   ........           BL       H_line
   3724                  V_line(10,97,9,1); 
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   0922               MOVS     R2,#+9
   \   0000006C   6121               MOVS     R1,#+97
   \   0000006E   0A20               MOVS     R0,#+10
   \   00000070   ........           BL       V_line
   3725                  V_line(51,97,9,1); 
   \   00000074   0123               MOVS     R3,#+1
   \   00000076   0922               MOVS     R2,#+9
   \   00000078   6121               MOVS     R1,#+97
   \   0000007A   3320               MOVS     R0,#+51
   \   0000007C   ........           BL       V_line
   3726          
   3727                  
   3728                  //char txt[7];
   3729                  
   3730                 
   3731                  //tmpVal=*ValueChange;
   3732                  //char dl=sIntToStr(tmpVal, txt);
   3733                  
   3734                  Label(ValueChangeTxtTmp,1,50,97,7,38,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   8021               MOVS     R1,#+128
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   2621               MOVS     R1,#+38
   \   0000008C   0720               MOVS     R0,#+7
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   6123               MOVS     R3,#+97
   \   00000092   3222               MOVS     R2,#+50
   \   00000094   0121               MOVS     R1,#+1
   \   00000096   2D1D               ADDS     R5,R5,#+4
   \   00000098   2800               MOVS     R0,R5
   \   0000009A   ........           BL       Label
   \   0000009E   06B0               ADD      SP,SP,#+24
   3735                                
   3736          
   3737                  
   3738                  char txt[2];
   3739                  txt[1]=0;
   \   000000A0   0024               MOVS     R4,#+0
   \   000000A2   6846               MOV      R0,SP
   \   000000A4   2100               MOVS     R1,R4
   \   000000A6   4170               STRB     R1,[R0, #+1]
   3740                  char ind=0;
   \   000000A8   2700               MOVS     R7,R4
   3741                  for (char j=0; j<3; j++)
   \   000000AA   2500               MOVS     R5,R4
   \   000000AC   25E0               B        ??ValueChange_Paint_4
   3742                    for (char i=0; i<3; i++)
   3743                    {
   3744                      ind++;
   \                     ??ValueChange_Paint_5:
   \   000000AE   7F1C               ADDS     R7,R7,#+1
   \   000000B0   3F06               LSLS     R7,R7,#+24
   \   000000B2   3F0E               LSRS     R7,R7,#+24
   3745                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   000000B4   0122               MOVS     R2,#+1
   \   000000B6   6946               MOV      R1,SP
   \   000000B8   3800               MOVS     R0,R7
   \   000000BA   ........           BL       CharToStr
   3746                      Button(txt,2+20*i,76-(19*j),18,17);
   \   000000BE   82B0               SUB      SP,SP,#+8
   \   000000C0   1120               MOVS     R0,#+17
   \   000000C2   0090               STR      R0,[SP, #+0]
   \   000000C4   1223               MOVS     R3,#+18
   \   000000C6   4C20               MOVS     R0,#+76
   \   000000C8   2900               MOVS     R1,R5
   \   000000CA   1322               MOVS     R2,#+19
   \   000000CC   5143               MULS     R1,R2,R1
   \   000000CE   421A               SUBS     R2,R0,R1
   \   000000D0   1206               LSLS     R2,R2,#+24
   \   000000D2   120E               LSRS     R2,R2,#+24
   \   000000D4   3100               MOVS     R1,R6
   \   000000D6   1420               MOVS     R0,#+20
   \   000000D8   4143               MULS     R1,R0,R1
   \   000000DA   891C               ADDS     R1,R1,#+2
   \   000000DC   0906               LSLS     R1,R1,#+24
   \   000000DE   090E               LSRS     R1,R1,#+24
   \   000000E0   02A8               ADD      R0,SP,#+8
   \   000000E2   ........           BL       Button
   \   000000E6   02B0               ADD      SP,SP,#+8
   3747                    }
   \   000000E8   761C               ADDS     R6,R6,#+1
   \   000000EA   3606               LSLS     R6,R6,#+24
   \   000000EC   360E               LSRS     R6,R6,#+24
   \                     ??ValueChange_Paint_6:
   \   000000EE   3000               MOVS     R0,R6
   \   000000F0   0328               CMP      R0,#+3
   \   000000F2   DCD3               BCC      ??ValueChange_Paint_5
   \   000000F4   6D1C               ADDS     R5,R5,#+1
   \   000000F6   2D06               LSLS     R5,R5,#+24
   \   000000F8   2D0E               LSRS     R5,R5,#+24
   \                     ??ValueChange_Paint_4:
   \   000000FA   2800               MOVS     R0,R5
   \   000000FC   0328               CMP      R0,#+3
   \   000000FE   01D2               BCS      ??ValueChange_Paint_7
   \   00000100   2600               MOVS     R6,R4
   \   00000102   F4E7               B        ??ValueChange_Paint_6
   3748                  Button(".",2+20*0,76-(19*3),18,17);
   \                     ??ValueChange_Paint_7:
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   1120               MOVS     R0,#+17
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   1223               MOVS     R3,#+18
   \   0000010C   1322               MOVS     R2,#+19
   \   0000010E   0221               MOVS     R1,#+2
   \   00000110   1DA0               ADR      R0,??ValueChange_Paint_0+0x18  ;; 0x2E, 0x00, 0x00, 0x00
   \   00000112   ........           BL       Button
   \   00000116   02B0               ADD      SP,SP,#+8
   3749                  Button("0",2+20*1,76-(19*3),18,17);
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   1120               MOVS     R0,#+17
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   1223               MOVS     R3,#+18
   \   00000120   1322               MOVS     R2,#+19
   \   00000122   1621               MOVS     R1,#+22
   \   00000124   19A0               ADR      R0,??ValueChange_Paint_0+0x1C  ;; 0x30, 0x00, 0x00, 0x00
   \   00000126   ........           BL       Button
   \   0000012A   02B0               ADD      SP,SP,#+8
   3750                  Button("-",2+20*2,76-(19*3),18,17);
   \   0000012C   82B0               SUB      SP,SP,#+8
   \   0000012E   1120               MOVS     R0,#+17
   \   00000130   0090               STR      R0,[SP, #+0]
   \   00000132   1223               MOVS     R3,#+18
   \   00000134   1322               MOVS     R2,#+19
   \   00000136   2A21               MOVS     R1,#+42
   \   00000138   15A0               ADR      R0,??ValueChange_Paint_0+0x20  ;; 0x2D, 0x00, 0x00, 0x00
   \   0000013A   ........           BL       Button
   \   0000013E   02B0               ADD      SP,SP,#+8
   3751                  
   3752                  Button("Ok ",22,4,38,13);
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0D20               MOVS     R0,#+13
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   2623               MOVS     R3,#+38
   \   00000148   0422               MOVS     R2,#+4
   \   0000014A   1621               MOVS     R1,#+22
   \   0000014C   11A0               ADR      R0,??ValueChange_Paint_0+0x24  ;; "Ok "
   \   0000014E   ........           BL       Button
   \   00000152   02B0               ADD      SP,SP,#+8
   3753                  Button("C ",3,4,17,13);
   \   00000154   82B0               SUB      SP,SP,#+8
   \   00000156   0D20               MOVS     R0,#+13
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   1123               MOVS     R3,#+17
   \   0000015C   0422               MOVS     R2,#+4
   \   0000015E   0321               MOVS     R1,#+3
   \   00000160   0DA0               ADR      R0,??ValueChange_Paint_0+0x28  ;; 0x43, 0x20, 0x00, 0x00
   \   00000162   ........           BL       Button
   \   00000166   02B0               ADD      SP,SP,#+8
   3754                }
   \   00000168   F8BC               POP      {R3-R7}
   \   0000016A   01BC               POP      {R0}
   \   0000016C   0047               BX       R0               ;; return
   \   0000016E   C046               Nop      
   \                     ??ValueChange_Paint_0:
   \   00000170   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000174   DC050000           DC32     0x5dc
   \   00000178   ........           DC32     g_leng
   \   0000017C   140A0000           DC32     0xa14
   \   00000180   ........           DC32     Speech
   \   00000184   ........           DC32     VCTT_ill
   \   00000188   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   0000018C   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000190   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000194   4F6B2000           DC8      "Ok "
   \   00000198   43200000           DC8      0x43, 0x20, 0x00, 0x00
   3755          
   3756          
   3757          

   \                                 In section Debug.txt, align 4, keep-with-next
   3758          void ValueChange_Evant( short int *ValToChange)
   3759                { 
   \                     ValueChange_Evant:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   0024               MOVS     R4,#+0
   3760                 int ValueTmp=0; 
   3761                 char ind=0;
   \   00000006   2700               MOVS     R7,R4
   3762                 char txt[2];
   3763                 char Refresh=0;
   \   00000008   6846               MOV      R0,SP
   \   0000000A   2100               MOVS     R1,R4
   \   0000000C   4170               STRB     R1,[R0, #+1]
   3764                 char MaxChar;
   3765                 
   3766          
   3767                 txt[1]=0;
   \   0000000E   02A8               ADD      R0,SP,#+8
   \   00000010   4170               STRB     R1,[R0, #+1]
   3768                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000012   BE48               LDR      R0,??ValueChange_Evant_0  ;; X_up
   \   00000014   405E               LDRSH    R0,[R0, R1]
   \   00000016   2F28               CMP      R0,#+47
   \   00000018   21DB               BLT      ??ValueChange_Evant_1
   \   0000001A   3F28               CMP      R0,#+63
   \   0000001C   1FDA               BGE      ??ValueChange_Evant_1
   \   0000001E   BC48               LDR      R0,??ValueChange_Evant_0+0x4  ;; Y_up
   \   00000020   405E               LDRSH    R0,[R0, R1]
   \   00000022   7128               CMP      R0,#+113
   \   00000024   1BDB               BLT      ??ValueChange_Evant_1
   \   00000026   7F28               CMP      R0,#+127
   \   00000028   19DA               BGE      ??ValueChange_Evant_1
   3769                  {
   3770                       for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   0000002A   0800               MOVS     R0,R1
   \   0000002C   06E0               B        ??ValueChange_Evant_2
   \                     ??ValueChange_Evant_3:
   \   0000002E   B94A               LDR      R2,??ValueChange_Evant_0+0x8  ;; VCTT_ill
   \   00000030   5118               ADDS     R1,R2,R1
   \   00000032   2200               MOVS     R2,R4
   \   00000034   0A71               STRB     R2,[R1, #+4]
   \   00000036   401C               ADDS     R0,R0,#+1
   \   00000038   0006               LSLS     R0,R0,#+24
   \   0000003A   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Evant_2:
   \   0000003C   0100               MOVS     R1,R0
   \   0000003E   0729               CMP      R1,#+7
   \   00000040   F5D3               BCC      ??ValueChange_Evant_3
   3771                          ValueTmp=0;
   3772                          VCTT_ill=0;
   \   00000042   B44D               LDR      R5,??ValueChange_Evant_0+0x8  ;; VCTT_ill
   \   00000044   2000               MOVS     R0,R4
   \   00000046   2870               STRB     R0,[R5, #+0]
   3773                          VCTT_point_flag=0;
   \   00000048   6870               STRB     R0,[R5, #+1]
   3774                    
   3775                      MenuLevel=(MenuLevel/10);
   \   0000004A   B34E               LDR      R6,??ValueChange_Evant_0+0xC  ;; TextToChangeLength
   \   0000004C   B06C               LDR      R0,[R6, #+72]
   \   0000004E   0A21               MOVS     R1,#+10
   \   00000050   ........           BL       __aeabi_idivmod
   \   00000054   B064               STR      R0,[R6, #+72]
   3776                      Refresh=1;
   \   00000056   6846               MOV      R0,SP
   \   00000058   0121               MOVS     R1,#+1
   \   0000005A   4170               STRB     R1,[R0, #+1]
   \   0000005C   4BE1               B        ??ValueChange_Evant_4
   3777                  } else {
   3778                    
   3779                           
   3780                    if (ValueChangeTxtTmp[0]=='-')
   \                     ??ValueChange_Evant_1:
   \   0000005E   AD4D               LDR      R5,??ValueChange_Evant_0+0x8  ;; VCTT_ill
   \   00000060   6878               LDRB     R0,[R5, #+1]
   \   00000062   2979               LDRB     R1,[R5, #+4]
   \   00000064   2D29               CMP      R1,#+45
   \   00000066   08D1               BNE      ??ValueChange_Evant_5
   3781                    {
   3782                      if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   00000068   0028               CMP      R0,#+0
   \   0000006A   6846               MOV      R0,SP
   \   0000006C   02D0               BEQ      ??ValueChange_Evant_6
   \   0000006E   0721               MOVS     R1,#+7
   \   00000070   0170               STRB     R1,[R0, #+0]
   \   00000072   0AE0               B        ??ValueChange_Evant_7
   \                     ??ValueChange_Evant_6:
   \   00000074   0521               MOVS     R1,#+5
   \   00000076   0170               STRB     R1,[R0, #+0]
   \   00000078   07E0               B        ??ValueChange_Evant_7
   3783                    }else{
   3784                      if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   \                     ??ValueChange_Evant_5:
   \   0000007A   0028               CMP      R0,#+0
   \   0000007C   6846               MOV      R0,SP
   \   0000007E   02D0               BEQ      ??ValueChange_Evant_8
   \   00000080   0621               MOVS     R1,#+6
   \   00000082   0170               STRB     R1,[R0, #+0]
   \   00000084   01E0               B        ??ValueChange_Evant_7
   \                     ??ValueChange_Evant_8:
   \   00000086   0421               MOVS     R1,#+4
   \   00000088   0170               STRB     R1,[R0, #+0]
   3785                    }
   3786                   
   3787                       
   3788                    for (char j=0; j<3; j++)
   \                     ??ValueChange_Evant_7:
   \   0000008A   2000               MOVS     R0,R4
   \   0000008C   0190               STR      R0,[SP, #+4]
   \   0000008E   40E0               B        ??ValueChange_Evant_9
   3789                    {
   3790                    for (char i=0; i<3; i++)
   3791                    {
   3792                      ind++;
   \                     ??ValueChange_Evant_10:
   \   00000090   7F1C               ADDS     R7,R7,#+1
   \   00000092   3F06               LSLS     R7,R7,#+24
   \   00000094   3F0E               LSRS     R7,R7,#+24
   3793                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   00000096   0122               MOVS     R2,#+1
   \   00000098   02A9               ADD      R1,SP,#+8
   \   0000009A   3800               MOVS     R0,R7
   \   0000009C   ........           BL       CharToStr
   3794                      if ((Button(txt,2+20*i,76-(19*j),18,17)==1) && (VCTT_ill<MaxChar) && ((VCTT_point_flag==0) || (VCTT_ill<=VCTT_point_flag+1) ) ){ValueChangeTxtTmp[VCTT_ill++]=48+ind;   Refresh=1;}
   \   000000A0   82B0               SUB      SP,SP,#+8
   \   000000A2   1120               MOVS     R0,#+17
   \   000000A4   0090               STR      R0,[SP, #+0]
   \   000000A6   1223               MOVS     R3,#+18
   \   000000A8   4C20               MOVS     R0,#+76
   \   000000AA   0399               LDR      R1,[SP, #+12]
   \   000000AC   0906               LSLS     R1,R1,#+24
   \   000000AE   090E               LSRS     R1,R1,#+24
   \   000000B0   1322               MOVS     R2,#+19
   \   000000B2   5143               MULS     R1,R2,R1
   \   000000B4   421A               SUBS     R2,R0,R1
   \   000000B6   1206               LSLS     R2,R2,#+24
   \   000000B8   120E               LSRS     R2,R2,#+24
   \   000000BA   3100               MOVS     R1,R6
   \   000000BC   1420               MOVS     R0,#+20
   \   000000BE   4143               MULS     R1,R0,R1
   \   000000C0   891C               ADDS     R1,R1,#+2
   \   000000C2   0906               LSLS     R1,R1,#+24
   \   000000C4   090E               LSRS     R1,R1,#+24
   \   000000C6   04A8               ADD      R0,SP,#+16
   \   000000C8   ........           BL       Button
   \   000000CC   02B0               ADD      SP,SP,#+8
   \   000000CE   0128               CMP      R0,#+1
   \   000000D0   14D1               BNE      ??ValueChange_Evant_11
   \   000000D2   2878               LDRB     R0,[R5, #+0]
   \   000000D4   6946               MOV      R1,SP
   \   000000D6   0978               LDRB     R1,[R1, #+0]
   \   000000D8   8842               CMP      R0,R1
   \   000000DA   0FD2               BCS      ??ValueChange_Evant_11
   \   000000DC   0100               MOVS     R1,R0
   \   000000DE   6A78               LDRB     R2,[R5, #+1]
   \   000000E0   002A               CMP      R2,#+0
   \   000000E2   02D0               BEQ      ??ValueChange_Evant_12
   \   000000E4   521C               ADDS     R2,R2,#+1
   \   000000E6   8A42               CMP      R2,R1
   \   000000E8   08DB               BLT      ??ValueChange_Evant_11
   \                     ??ValueChange_Evant_12:
   \   000000EA   6918               ADDS     R1,R5,R1
   \   000000EC   3A00               MOVS     R2,R7
   \   000000EE   3032               ADDS     R2,R2,#+48
   \   000000F0   0A71               STRB     R2,[R1, #+4]
   \   000000F2   401C               ADDS     R0,R0,#+1
   \   000000F4   2870               STRB     R0,[R5, #+0]
   \   000000F6   6846               MOV      R0,SP
   \   000000F8   0121               MOVS     R1,#+1
   \   000000FA   4170               STRB     R1,[R0, #+1]
   3795                      
   3796                     }
   \                     ??ValueChange_Evant_11:
   \   000000FC   761C               ADDS     R6,R6,#+1
   \   000000FE   3606               LSLS     R6,R6,#+24
   \   00000100   360E               LSRS     R6,R6,#+24
   \                     ??ValueChange_Evant_13:
   \   00000102   3000               MOVS     R0,R6
   \   00000104   0328               CMP      R0,#+3
   \   00000106   C3D3               BCC      ??ValueChange_Evant_10
   \   00000108   0198               LDR      R0,[SP, #+4]
   \   0000010A   401C               ADDS     R0,R0,#+1
   \   0000010C   0006               LSLS     R0,R0,#+24
   \   0000010E   000E               LSRS     R0,R0,#+24
   \   00000110   0190               STR      R0,[SP, #+4]
   \                     ??ValueChange_Evant_9:
   \   00000112   0198               LDR      R0,[SP, #+4]
   \   00000114   0006               LSLS     R0,R0,#+24
   \   00000116   000E               LSRS     R0,R0,#+24
   \   00000118   0328               CMP      R0,#+3
   \   0000011A   01D2               BCS      ??ValueChange_Evant_14
   \   0000011C   2600               MOVS     R6,R4
   \   0000011E   F0E7               B        ??ValueChange_Evant_13
   3797                    }
   3798                      
   3799                      
   3800                      if ((Button(".",2+20*0,76-(19*3),18,17)==1) && (VCTT_ill<MaxChar+2) && (VCTT_point_flag==0)) 
   \                     ??ValueChange_Evant_14:
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   1120               MOVS     R0,#+17
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   1223               MOVS     R3,#+18
   \   00000128   1322               MOVS     R2,#+19
   \   0000012A   0221               MOVS     R1,#+2
   \   0000012C   7BA0               ADR      R0,??ValueChange_Evant_0+0x10  ;; 0x2E, 0x00, 0x00, 0x00
   \   0000012E   ........           BL       Button
   \   00000132   02B0               ADD      SP,SP,#+8
   \   00000134   0128               CMP      R0,#+1
   \   00000136   27D1               BNE      ??ValueChange_Evant_15
   \   00000138   2878               LDRB     R0,[R5, #+0]
   \   0000013A   0100               MOVS     R1,R0
   \   0000013C   6A46               MOV      R2,SP
   \   0000013E   1278               LDRB     R2,[R2, #+0]
   \   00000140   921C               ADDS     R2,R2,#+2
   \   00000142   9142               CMP      R1,R2
   \   00000144   20DA               BGE      ??ValueChange_Evant_15
   \   00000146   6A78               LDRB     R2,[R5, #+1]
   \   00000148   002A               CMP      R2,#+0
   \   0000014A   1DD1               BNE      ??ValueChange_Evant_15
   3801                      {ValueChangeTxtTmp[VCTT_ill++]='.';   Refresh=1; VCTT_point_flag=VCTT_ill-1;
   \   0000014C   6918               ADDS     R1,R5,R1
   \   0000014E   2E22               MOVS     R2,#+46
   \   00000150   0A71               STRB     R2,[R1, #+4]
   \   00000152   401C               ADDS     R0,R0,#+1
   \   00000154   2870               STRB     R0,[R5, #+0]
   \   00000156   6946               MOV      R1,SP
   \   00000158   0122               MOVS     R2,#+1
   \   0000015A   4A70               STRB     R2,[R1, #+1]
   \   0000015C   401E               SUBS     R0,R0,#+1
   \   0000015E   6870               STRB     R0,[R5, #+1]
   3802                        if (ValueChangeTxtTmp[0]=='-')
   \   00000160   2979               LDRB     R1,[R5, #+4]
   \   00000162   2D29               CMP      R1,#+45
   \   00000164   08D1               BNE      ??ValueChange_Evant_16
   3803                         {
   3804                          if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   \   00000166   0028               CMP      R0,#+0
   \   00000168   6846               MOV      R0,SP
   \   0000016A   02D0               BEQ      ??ValueChange_Evant_17
   \   0000016C   0721               MOVS     R1,#+7
   \   0000016E   0170               STRB     R1,[R0, #+0]
   \   00000170   0AE0               B        ??ValueChange_Evant_15
   \                     ??ValueChange_Evant_17:
   \   00000172   0521               MOVS     R1,#+5
   \   00000174   0170               STRB     R1,[R0, #+0]
   \   00000176   07E0               B        ??ValueChange_Evant_15
   3805                          }else{
   3806                          if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   \                     ??ValueChange_Evant_16:
   \   00000178   0028               CMP      R0,#+0
   \   0000017A   6846               MOV      R0,SP
   \   0000017C   02D0               BEQ      ??ValueChange_Evant_18
   \   0000017E   0621               MOVS     R1,#+6
   \   00000180   0170               STRB     R1,[R0, #+0]
   \   00000182   01E0               B        ??ValueChange_Evant_15
   \                     ??ValueChange_Evant_18:
   \   00000184   0421               MOVS     R1,#+4
   \   00000186   0170               STRB     R1,[R0, #+0]
   3807                          }
   3808                      }
   3809                      
   3810                   
   3811                      if ((Button("0",2+20*1,76-(19*3),18,17)==1) && (VCTT_ill<MaxChar) && ((VCTT_point_flag==0) || (VCTT_ill<=VCTT_point_flag+1))) {ValueChangeTxtTmp[VCTT_ill++]=48;    Refresh=1;}
   \                     ??ValueChange_Evant_15:
   \   00000188   82B0               SUB      SP,SP,#+8
   \   0000018A   1120               MOVS     R0,#+17
   \   0000018C   0090               STR      R0,[SP, #+0]
   \   0000018E   1223               MOVS     R3,#+18
   \   00000190   1322               MOVS     R2,#+19
   \   00000192   1621               MOVS     R1,#+22
   \   00000194   62A0               ADR      R0,??ValueChange_Evant_0+0x14  ;; 0x30, 0x00, 0x00, 0x00
   \   00000196   ........           BL       Button
   \   0000019A   02B0               ADD      SP,SP,#+8
   \   0000019C   0128               CMP      R0,#+1
   \   0000019E   13D1               BNE      ??ValueChange_Evant_19
   \   000001A0   2878               LDRB     R0,[R5, #+0]
   \   000001A2   6946               MOV      R1,SP
   \   000001A4   0978               LDRB     R1,[R1, #+0]
   \   000001A6   8842               CMP      R0,R1
   \   000001A8   0ED2               BCS      ??ValueChange_Evant_19
   \   000001AA   0100               MOVS     R1,R0
   \   000001AC   6A78               LDRB     R2,[R5, #+1]
   \   000001AE   002A               CMP      R2,#+0
   \   000001B0   02D0               BEQ      ??ValueChange_Evant_20
   \   000001B2   521C               ADDS     R2,R2,#+1
   \   000001B4   8A42               CMP      R2,R1
   \   000001B6   07DB               BLT      ??ValueChange_Evant_19
   \                     ??ValueChange_Evant_20:
   \   000001B8   6918               ADDS     R1,R5,R1
   \   000001BA   3022               MOVS     R2,#+48
   \   000001BC   0A71               STRB     R2,[R1, #+4]
   \   000001BE   401C               ADDS     R0,R0,#+1
   \   000001C0   2870               STRB     R0,[R5, #+0]
   \   000001C2   6846               MOV      R0,SP
   \   000001C4   0121               MOVS     R1,#+1
   \   000001C6   4170               STRB     R1,[R0, #+1]
   3812                      if ((Button("-",2+20*2,76-(19*3),18,17)==1) && (VCTT_ill==0))
   \                     ??ValueChange_Evant_19:
   \   000001C8   82B0               SUB      SP,SP,#+8
   \   000001CA   1120               MOVS     R0,#+17
   \   000001CC   0090               STR      R0,[SP, #+0]
   \   000001CE   1223               MOVS     R3,#+18
   \   000001D0   1322               MOVS     R2,#+19
   \   000001D2   2A21               MOVS     R1,#+42
   \   000001D4   53A0               ADR      R0,??ValueChange_Evant_0+0x18  ;; 0x2D, 0x00, 0x00, 0x00
   \   000001D6   ........           BL       Button
   \   000001DA   02B0               ADD      SP,SP,#+8
   \   000001DC   0128               CMP      R0,#+1
   \   000001DE   09D1               BNE      ??ValueChange_Evant_21
   \   000001E0   2878               LDRB     R0,[R5, #+0]
   \   000001E2   0028               CMP      R0,#+0
   \   000001E4   06D1               BNE      ??ValueChange_Evant_21
   3813                      {
   3814                        ValueChangeTxtTmp[VCTT_ill++]='-';    
   \   000001E6   2D20               MOVS     R0,#+45
   \   000001E8   2871               STRB     R0,[R5, #+4]
   \   000001EA   0120               MOVS     R0,#+1
   \   000001EC   0100               MOVS     R1,R0
   \   000001EE   2970               STRB     R1,[R5, #+0]
   3815                        if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   3816                        Refresh=1;
   \   000001F0   6946               MOV      R1,SP
   \   000001F2   4870               STRB     R0,[R1, #+1]
   3817                      }
   3818                      
   3819                      
   3820                  
   3821                      
   3822                      if (Button("C ",3,4,17,13)==1)
   \                     ??ValueChange_Evant_21:
   \   000001F4   82B0               SUB      SP,SP,#+8
   \   000001F6   0D20               MOVS     R0,#+13
   \   000001F8   0090               STR      R0,[SP, #+0]
   \   000001FA   1123               MOVS     R3,#+17
   \   000001FC   0422               MOVS     R2,#+4
   \   000001FE   0321               MOVS     R1,#+3
   \   00000200   49A0               ADR      R0,??ValueChange_Evant_0+0x1C  ;; 0x43, 0x20, 0x00, 0x00
   \   00000202   ........           BL       Button
   \   00000206   02B0               ADD      SP,SP,#+8
   \   00000208   0128               CMP      R0,#+1
   \   0000020A   10D1               BNE      ??ValueChange_Evant_22
   3823                      {
   3824                        if (VCTT_ill) VCTT_ill--;
   \   0000020C   2878               LDRB     R0,[R5, #+0]
   \   0000020E   0028               CMP      R0,#+0
   \   00000210   01D0               BEQ      ??ValueChange_Evant_23
   \   00000212   401E               SUBS     R0,R0,#+1
   \   00000214   2870               STRB     R0,[R5, #+0]
   3825                        if (ValueChangeTxtTmp[VCTT_ill]=='.') VCTT_point_flag=0;
   \                     ??ValueChange_Evant_23:
   \   00000216   2878               LDRB     R0,[R5, #+0]
   \   00000218   2818               ADDS     R0,R5,R0
   \   0000021A   0179               LDRB     R1,[R0, #+4]
   \   0000021C   2E29               CMP      R1,#+46
   \   0000021E   01D1               BNE      ??ValueChange_Evant_24
   \   00000220   2100               MOVS     R1,R4
   \   00000222   6970               STRB     R1,[R5, #+1]
   3826                        ValueChangeTxtTmp[VCTT_ill]=0;
   \                     ??ValueChange_Evant_24:
   \   00000224   2100               MOVS     R1,R4
   \   00000226   0171               STRB     R1,[R0, #+4]
   3827                        
   3828                        if (ValueChangeTxtTmp[0]=='-')
   3829                        {
   3830                          if  (VCTT_point_flag) {MaxChar=7;} else {MaxChar=5;}
   3831                        }else{
   3832                          if  (VCTT_point_flag) {MaxChar=6;} else {MaxChar=4;}
   3833                        }
   3834                        Refresh=1;
   \   00000228   6846               MOV      R0,SP
   \   0000022A   0121               MOVS     R1,#+1
   \   0000022C   4170               STRB     R1,[R0, #+1]
   3835                      }
   3836                    
   3837                  
   3838                      int mnz=10;     
   \                     ??ValueChange_Evant_22:
   \   0000022E   0A26               MOVS     R6,#+10
   3839                      char prs=0;
   \   00000230   2700               MOVS     R7,R4
   3840                      if (ValueChangeTxtTmp[0]=='-')  prs=1; 
   \   00000232   2879               LDRB     R0,[R5, #+4]
   \   00000234   2D28               CMP      R0,#+45
   \   00000236   00D1               BNE      ??ValueChange_Evant_25
   \   00000238   0127               MOVS     R7,#+1
   3841                      //zapamiêtanie wartoci
   3842                      if (Button("Ok ",22,4,38,13)==1)
   \                     ??ValueChange_Evant_25:
   \   0000023A   82B0               SUB      SP,SP,#+8
   \   0000023C   0D20               MOVS     R0,#+13
   \   0000023E   0090               STR      R0,[SP, #+0]
   \   00000240   2623               MOVS     R3,#+38
   \   00000242   0422               MOVS     R2,#+4
   \   00000244   1621               MOVS     R1,#+22
   \   00000246   39A0               ADR      R0,??ValueChange_Evant_0+0x20  ;; "Ok "
   \   00000248   ........           BL       Button
   \   0000024C   02B0               ADD      SP,SP,#+8
   \   0000024E   0128               CMP      R0,#+1
   \   00000250   51D1               BNE      ??ValueChange_Evant_4
   \   00000252   6878               LDRB     R0,[R5, #+1]
   \   00000254   0028               CMP      R0,#+0
   \   00000256   11D1               BNE      ??ValueChange_Evant_26
   3843                      {
   3844                        //je¿eli nie ma kropki 
   3845                        if (VCTT_point_flag==0)
   3846                        {
   3847                          for (char i=0; i<VCTT_ill-prs; i++)
   \                     ??ValueChange_Evant_27:
   \   00000258   0100               MOVS     R1,R0
   \   0000025A   2A78               LDRB     R2,[R5, #+0]
   \   0000025C   3B00               MOVS     R3,R7
   \   0000025E   D31A               SUBS     R3,R2,R3
   \   00000260   9942               CMP      R1,R3
   \   00000262   22DA               BGE      ??ValueChange_Evant_28
   3848                          {
   3849                             ValueTmp+=(ValueChangeTxtTmp[VCTT_ill-i-1]-48)*mnz;
   \   00000264   511A               SUBS     R1,R2,R1
   \   00000266   6918               ADDS     R1,R5,R1
   \   00000268   C978               LDRB     R1,[R1, #+3]
   \   0000026A   3039               SUBS     R1,R1,#+48
   \   0000026C   7143               MULS     R1,R6,R1
   \   0000026E   6418               ADDS     R4,R4,R1
   3850                             mnz*=10;
   \   00000270   0A21               MOVS     R1,#+10
   \   00000272   4E43               MULS     R6,R1,R6
   3851                          }
   \   00000274   401C               ADDS     R0,R0,#+1
   \   00000276   0006               LSLS     R0,R0,#+24
   \   00000278   000E               LSRS     R0,R0,#+24
   \   0000027A   EDE7               B        ??ValueChange_Evant_27
   3852                          
   3853                          
   3854                        }else{
   3855                          ValueTmp+=ValueChangeTxtTmp[VCTT_ill-1]-48;
   \                     ??ValueChange_Evant_26:
   \   0000027C   2878               LDRB     R0,[R5, #+0]
   \   0000027E   2818               ADDS     R0,R5,R0
   \   00000280   C478               LDRB     R4,[R0, #+3]
   \   00000282   303C               SUBS     R4,R4,#+48
   3856                          
   3857                          for (char i=1; i<=VCTT_point_flag-prs; i++)
   \   00000284   0120               MOVS     R0,#+1
   \   00000286   0AE0               B        ??ValueChange_Evant_29
   3858                          {
   3859                             ValueTmp+=(ValueChangeTxtTmp[VCTT_point_flag-i]-48)*mnz;
   \                     ??ValueChange_Evant_30:
   \   00000288   891A               SUBS     R1,R1,R2
   \   0000028A   6918               ADDS     R1,R5,R1
   \   0000028C   0979               LDRB     R1,[R1, #+4]
   \   0000028E   3039               SUBS     R1,R1,#+48
   \   00000290   7143               MULS     R1,R6,R1
   \   00000292   6418               ADDS     R4,R4,R1
   3860                             mnz*=10;
   \   00000294   0A21               MOVS     R1,#+10
   \   00000296   4E43               MULS     R6,R1,R6
   3861                          }
   \   00000298   401C               ADDS     R0,R0,#+1
   \   0000029A   0006               LSLS     R0,R0,#+24
   \   0000029C   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Evant_29:
   \   0000029E   6978               LDRB     R1,[R5, #+1]
   \   000002A0   0200               MOVS     R2,R0
   \   000002A2   3B00               MOVS     R3,R7
   \   000002A4   CB1A               SUBS     R3,R1,R3
   \   000002A6   9342               CMP      R3,R2
   \   000002A8   EEDA               BGE      ??ValueChange_Evant_30
   3862                          
   3863                        }
   3864                        if (ValueTmp>30000) 
   \                     ??ValueChange_Evant_28:
   \   000002AA   2148               LDR      R0,??ValueChange_Evant_0+0x24  ;; 0x7531
   \   000002AC   8442               CMP      R4,R0
   \   000002AE   1A4E               LDR      R6,??ValueChange_Evant_0+0xC  ;; TextToChangeLength
   \   000002B0   B06C               LDR      R0,[R6, #+72]
   \   000002B2   04DB               BLT      ??ValueChange_Evant_31
   3865                        {
   3866                          //ValueTmp=30000;
   3867                          MenuLevel=MenuLevel*10+1;
   \   000002B4   0A21               MOVS     R1,#+10
   \   000002B6   4843               MULS     R0,R1,R0
   \   000002B8   401C               ADDS     R0,R0,#+1
   \   000002BA   B064               STR      R0,[R6, #+72]
   \   000002BC   18E0               B        ??ValueChange_Evant_32
   3868                        }else{
   3869                          MenuLevel/=10; 
   \                     ??ValueChange_Evant_31:
   \   000002BE   0A21               MOVS     R1,#+10
   \   000002C0   ........           BL       __aeabi_idivmod
   \   000002C4   B064               STR      R0,[R6, #+72]
   3870                          if (ValueChangeTxtTmp[0]=='-')  ValueTmp*=-1; 
   \   000002C6   2879               LDRB     R0,[R5, #+4]
   \   000002C8   2D28               CMP      R0,#+45
   \   000002CA   01D1               BNE      ??ValueChange_Evant_33
   \   000002CC   2000               MOVS     R0,R4
   \   000002CE   4442               RSBS     R4,R0,#+0
   3871                          *ValToChange=ValueTmp;
   \                     ??ValueChange_Evant_33:
   \   000002D0   0498               LDR      R0,[SP, #+16]
   \   000002D2   0480               STRH     R4,[R0, #+0]
   3872                          for (char i=0; i<7; i++) ValueChangeTxtTmp[i]=0;
   \   000002D4   0020               MOVS     R0,#+0
   \   000002D6   0200               MOVS     R2,R0
   \   000002D8   04E0               B        ??ValueChange_Evant_34
   \                     ??ValueChange_Evant_35:
   \   000002DA   6918               ADDS     R1,R5,R1
   \   000002DC   0A71               STRB     R2,[R1, #+4]
   \   000002DE   401C               ADDS     R0,R0,#+1
   \   000002E0   0006               LSLS     R0,R0,#+24
   \   000002E2   000E               LSRS     R0,R0,#+24
   \                     ??ValueChange_Evant_34:
   \   000002E4   0100               MOVS     R1,R0
   \   000002E6   0729               CMP      R1,#+7
   \   000002E8   F7D3               BCC      ??ValueChange_Evant_35
   3873                          ValueTmp=0;
   3874                          VCTT_ill=0;
   \   000002EA   1000               MOVS     R0,R2
   \   000002EC   2870               STRB     R0,[R5, #+0]
   3875                          VCTT_point_flag=0;
   \   000002EE   6870               STRB     R0,[R5, #+1]
   3876                          
   3877                        }
   3878                        
   3879                        
   3880                        Refresh=1;
   \                     ??ValueChange_Evant_32:
   \   000002F0   6846               MOV      R0,SP
   \   000002F2   0121               MOVS     R1,#+1
   \   000002F4   4170               STRB     R1,[R0, #+1]
   3881                        
   3882                      }
   3883                    
   3884                    
   3885                  }
   3886                  
   3887                  
   3888                  if (Refresh==1) MenuPaint();
   \                     ??ValueChange_Evant_4:
   \   000002F6   6846               MOV      R0,SP
   \   000002F8   4078               LDRB     R0,[R0, #+1]
   \   000002FA   0128               CMP      R0,#+1
   \   000002FC   01D1               BNE      ??ValueChange_Evant_36
   \   000002FE   ........           BL       MenuPaint
   3889                  
   3890          }
   \                     ??ValueChange_Evant_36:
   \   00000302   05B0               ADD      SP,SP,#+20
   \   00000304   F0BC               POP      {R4-R7}
   \   00000306   01BC               POP      {R0}
   \   00000308   0047               BX       R0               ;; return
   \   0000030A   C046               Nop      
   \                     ??ValueChange_Evant_0:
   \   0000030C   ........           DC32     X_up
   \   00000310   ........           DC32     Y_up
   \   00000314   ........           DC32     VCTT_ill
   \   00000318   ........           DC32     TextToChangeLength
   \   0000031C   2E000000           DC8      0x2E, 0x00, 0x00, 0x00
   \   00000320   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000324   2D000000           DC8      0x2D, 0x00, 0x00, 0x00
   \   00000328   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   0000032C   4F6B2000           DC8      "Ok "
   \   00000330   31750000           DC32     0x7531
   3891                
   3892          
   3893          //*-----------------------------------------------------------------------
   3894          char *ptxt;

   \                                 In section Debug.txt, align 4, keep-with-next
   3895          void LaderChange_Paint(void)
   3896                { 
   \                     LaderChange_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   3897                 char y=20;   //przesuniêcie w dó³
   3898          
   3899                 
   3900                  List_Paint(Speech[g_leng].Opcje,2,15,y,0,3,Speech[g_leng].DodajWiersz, Speech[g_leng].UsunWiersz, 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   0F48               LDR      R0,??LaderChange_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0F49               LDR      R1,??LaderChange_Paint_0+0x4  ;; 0xa14
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   0F49               LDR      R1,??LaderChange_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0C48               LDR      R0,??LaderChange_Paint_0+0xC  ;; 0x41a
   \   0000001A   2118               ADDS     R1,R4,R0
   \   0000001C   0F38               SUBS     R0,R0,#+15
   \   0000001E   2018               ADDS     R0,R4,R0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0321               MOVS     R1,#+3
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   1423               MOVS     R3,#+20
   \   0000002A   0F22               MOVS     R2,#+15
   \   0000002C   0221               MOVS     R1,#+2
   \   0000002E   8720               MOVS     R0,#+135
   \   00000030   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000032   2018               ADDS     R0,R4,R0
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   3901          
   3902          
   3903                }
   \   0000003A   10BC               POP      {R4}
   \   0000003C   01BC               POP      {R0}
   \   0000003E   0047               BX       R0               ;; return
   \                     ??LaderChange_Paint_0:
   \   00000040   ........           DC32     g_leng
   \   00000044   140A0000           DC32     0xa14
   \   00000048   ........           DC32     Speech
   \   0000004C   1A040000           DC32     0x41a
   3904          
   3905          
   3906          

   \                                 In section Debug.txt, align 4, keep-with-next
   3907          void LaderChange_Event(void)
   3908                { 
   \                     LaderChange_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   3909                  char y=20;   //przesuniêcie w dó³
   3910                  int ans;
   3911                  char Repaint=0;
   \   00000002   0024               MOVS     R4,#+0
   3912          
   3913                  
   3914                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,y); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   214D               LDR      R5,??LaderChange_Event_0  ;; X_up
   \   00000006   224E               LDR      R6,??LaderChange_Event_0+0x4  ;; Y_up
   \   00000008   1421               MOVS     R1,#+20
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0F21               MOVS     R1,#+15
   \   00000010   0220               MOVS     R0,#+2
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   1F48               LDR      R0,??LaderChange_Event_0+0x8  ;; Y_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   435E               LDRSH    R3,[R0, R1]
   \   0000001A   1F48               LDR      R0,??LaderChange_Event_0+0xC  ;; X_down
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   315E               LDRSH    R1,[R6, R0]
   \   00000022   285E               LDRSH    R0,[R5, R0]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   3915            
   3916                  if (ans>0)
   \   0000002A   0128               CMP      R0,#+1
   \   0000002C   15DB               BLT      ??LaderChange_Event_1
   3917                    {
   3918                      if ((ans>0) && (ans<3))
   \   0000002E   0128               CMP      R0,#+1
   \   00000030   24DB               BLT      ??LaderChange_Event_2
   \   00000032   0328               CMP      R0,#+3
   \   00000034   22DA               BGE      ??LaderChange_Event_2
   3919                      {
   3920                        if (ans==1) 
   \   00000036   0128               CMP      R0,#+1
   \   00000038   184C               LDR      R4,??LaderChange_Event_0+0x10  ;; TextToChangeLength
   \   0000003A   07D1               BNE      ??LaderChange_Event_3
   3921                        {
   3922                          MenuLevel=(MenuLevel/10);
   \   0000003C   A06C               LDR      R0,[R4, #+72]
   \   0000003E   0A21               MOVS     R1,#+10
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   A064               STR      R0,[R4, #+72]
   3923                          AddRow();
   \   00000046   ........           BL       AddRow
   \   0000004A   04E0               B        ??LaderChange_Event_4
   3924                          
   3925                        }else{
   3926                          MenuLevel=(MenuLevel*10+ans);
   \                     ??LaderChange_Event_3:
   \   0000004C   A16C               LDR      R1,[R4, #+72]
   \   0000004E   0A22               MOVS     R2,#+10
   \   00000050   5143               MULS     R1,R2,R1
   \   00000052   0818               ADDS     R0,R1,R0
   \   00000054   A064               STR      R0,[R4, #+72]
   3927                        }
   3928                        Repaint=1;
   \                     ??LaderChange_Event_4:
   \   00000056   0124               MOVS     R4,#+1
   \   00000058   10E0               B        ??LaderChange_Event_2
   3929                      }
   3930                      
   3931                    }
   3932                  else if (ans<0)
   \                     ??LaderChange_Event_1:
   \   0000005A   0028               CMP      R0,#+0
   \   0000005C   0ED5               BPL      ??LaderChange_Event_2
   3933                    {
   3934                      
   3935                      if ((X_up>0) &&(Y_up>0)) 
   \   0000005E   0020               MOVS     R0,#+0
   \   00000060   285E               LDRSH    R0,[R5, R0]
   \   00000062   0128               CMP      R0,#+1
   \   00000064   0ADB               BLT      ??LaderChange_Event_2
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   305E               LDRSH    R0,[R6, R0]
   \   0000006A   0128               CMP      R0,#+1
   \   0000006C   06DB               BLT      ??LaderChange_Event_2
   3936                      {
   3937                        MenuLevel=(MenuLevel/10);
   \   0000006E   0B4C               LDR      R4,??LaderChange_Event_0+0x10  ;; TextToChangeLength
   \   00000070   A06C               LDR      R0,[R4, #+72]
   \   00000072   0A21               MOVS     R1,#+10
   \   00000074   ........           BL       __aeabi_idivmod
   \   00000078   A064               STR      R0,[R4, #+72]
   3938                        Repaint=1;
   \   0000007A   0124               MOVS     R4,#+1
   3939                        
   3940                      }
   3941                      
   3942                    }
   3943                  if (Repaint) MenuPaint();
   \                     ??LaderChange_Event_2:
   \   0000007C   002C               CMP      R4,#+0
   \   0000007E   01D0               BEQ      ??LaderChange_Event_5
   \   00000080   ........           BL       MenuPaint
   3944          }
   \                     ??LaderChange_Event_5:
   \   00000084   70BC               POP      {R4-R6}
   \   00000086   01BC               POP      {R0}
   \   00000088   0047               BX       R0               ;; return
   \   0000008A   C046               Nop      
   \                     ??LaderChange_Event_0:
   \   0000008C   ........           DC32     X_up
   \   00000090   ........           DC32     Y_up
   \   00000094   ........           DC32     Y_down
   \   00000098   ........           DC32     X_down
   \   0000009C   ........           DC32     TextToChangeLength
   3945          
   3946          
   3947          
   3948          int row_tmp;

   \                                 In section Debug.txt, align 4, keep-with-next
   3949          void AddRow(void)
   3950                { 
   \                     AddRow:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \                     ??AddRow_0:
   \   00000002   2848               LDR      R0,??AddRow_1    ;; Busy_program
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   FBD1               BNE      ??AddRow_0
   \   0000000A   2648               LDR      R0,??AddRow_1    ;; Busy_program
   \   0000000C   0121               MOVS     R1,#+1
   \   0000000E   0170               STRB     R1,[R0, #+0]
   3951              
   3952                  while (Busy_program) {}
   3953           
   3954                Busy_program=1;
   3955                    //for ( row_tmp=5; row_tmp>ChoseRow; row_tmp--)
   3956                    for ( row_tmp=MaxPrcLines-1; row_tmp>ChoseRow; row_tmp--)
   \   00000010   254A               LDR      R2,??AddRow_1+0x4  ;; TextToChangeLength
   \   00000012   C720               MOVS     R0,#+199
   \   00000014   1067               STR      R0,[R2, #+112]
   \   00000016   20E0               B        ??AddRow_2
   3957                    {
   3958          
   3959                      for (char col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   3960                      {
   3961                     
   3962                        gProg.Line[row_tmp].Proc[col_tmp].Type=gProg.Line[row_tmp-1].Proc[col_tmp].Type;
   \                     ??AddRow_3:
   \   00000018   2448               LDR      R0,??AddRow_1+0x8  ;; gProg
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   1825               MOVS     R5,#+24
   \   0000001E   6943               MULS     R1,R5,R1
   \   00000020   F025               MOVS     R5,#+240
   \   00000022   5D43               MULS     R5,R3,R5
   \   00000024   4019               ADDS     R0,R0,R5
   \   00000026   4018               ADDS     R0,R0,R1
   \   00000028   0500               MOVS     R5,R0
   \   0000002A   1835               ADDS     R5,R5,#+24
   \   0000002C   0600               MOVS     R6,R0
   \   0000002E   D83E               SUBS     R6,R6,#+216
   \   00000030   3178               LDRB     R1,[R6, #+0]
   \   00000032   2970               STRB     R1,[R5, #+0]
   3963                        gProg.Line[row_tmp].Proc[col_tmp].Nr=gProg.Line[row_tmp-1].Proc[col_tmp].Nr;
   \   00000034   7178               LDRB     R1,[R6, #+1]
   \   00000036   6970               STRB     R1,[R5, #+1]
   3964                        gProg.Line[row_tmp].Proc[col_tmp].Tag=gProg.Line[row_tmp-1].Proc[col_tmp].Tag;
   \   00000038   0700               MOVS     R7,R0
   \   0000003A   2037               ADDS     R7,R7,#+32
   \   0000003C   D038               SUBS     R0,R0,#+208
   \   0000003E   03C8               LDM      R0!,{R0,R1}
   \   00000040   03C7               STM      R7!,{R0,R1}
   3965                        gProg.Line[row_tmp].Proc[col_tmp].LastIn=gProg.Line[row_tmp-1].Proc[col_tmp].LastIn;
   \   00000042   307C               LDRB     R0,[R6, #+16]
   \   00000044   2874               STRB     R0,[R5, #+16]
   3966                        gProg.Line[row_tmp].Proc[col_tmp].Out=gProg.Line[row_tmp-1].Proc[col_tmp].Out;
   \   00000046   708A               LDRH     R0,[R6, #+18]
   \   00000048   6882               STRH     R0,[R5, #+18]
   3967          
   3968                      }
   \   0000004A   641C               ADDS     R4,R4,#+1
   \   0000004C   2406               LSLS     R4,R4,#+24
   \   0000004E   240E               LSRS     R4,R4,#+24
   \                     ??AddRow_4:
   \   00000050   2000               MOVS     R0,R4
   \   00000052   0A28               CMP      R0,#+10
   \   00000054   E0D3               BCC      ??AddRow_3
   \   00000056   5B1E               SUBS     R3,R3,#+1
   \   00000058   1367               STR      R3,[R2, #+112]
   \                     ??AddRow_2:
   \   0000005A   947C               LDRB     R4,[R2, #+18]
   \   0000005C   136F               LDR      R3,[R2, #+112]
   \   0000005E   9C42               CMP      R4,R3
   \   00000060   01DA               BGE      ??AddRow_5
   \   00000062   0024               MOVS     R4,#+0
   \   00000064   F4E7               B        ??AddRow_4
   3969                    }
   3970                  
   3971                     for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \                     ??AddRow_5:
   \   00000066   0023               MOVS     R3,#+0
   \   00000068   1D00               MOVS     R5,R3
   \   0000006A   11E0               B        ??AddRow_6
   3972                      {
   3973                        gProg.Line[ChoseRow].Proc[col_tmp].Type=None;
   \                     ??AddRow_7:
   \   0000006C   0F48               LDR      R0,??AddRow_1+0x8  ;; gProg
   \   0000006E   1821               MOVS     R1,#+24
   \   00000070   6943               MULS     R1,R5,R1
   \   00000072   F026               MOVS     R6,#+240
   \   00000074   6643               MULS     R6,R4,R6
   \   00000076   8019               ADDS     R0,R0,R6
   \   00000078   4618               ADDS     R6,R0,R1
   \   0000007A   1836               ADDS     R6,R6,#+24
   \   0000007C   1800               MOVS     R0,R3
   \   0000007E   3070               STRB     R0,[R6, #+0]
   3974                        gProg.Line[ChoseRow].Proc[col_tmp].Nr=0;
   \   00000080   7070               STRB     R0,[R6, #+1]
   3975                        gProg.Line[ChoseRow].Proc[col_tmp].Tag.Tag=0;
   \   00000082   3700               MOVS     R7,R6
   \   00000084   0837               ADDS     R7,R7,#+8
   \   00000086   0100               MOVS     R1,R0
   \   00000088   03C7               STM      R7!,{R0,R1}
   3976                        gProg.Line[ChoseRow].Proc[col_tmp].LastIn=0;
   \   0000008A   3074               STRB     R0,[R6, #+16]
   3977                        gProg.Line[ChoseRow].Proc[col_tmp].Out=0;
   \   0000008C   7082               STRH     R0,[R6, #+18]
   3978          
   3979                      }
   \   0000008E   6D1C               ADDS     R5,R5,#+1
   \                     ??AddRow_6:
   \   00000090   0A2D               CMP      R5,#+10
   \   00000092   EBDB               BLT      ??AddRow_7
   3980                  
   3981                    ProgramChange=1;
   \   00000094   0120               MOVS     R0,#+1
   \   00000096   1072               STRB     R0,[R2, #+8]
   3982          
   3983                  Busy_program=0;
   \   00000098   0248               LDR      R0,??AddRow_1    ;; Busy_program
   \   0000009A   0370               STRB     R3,[R0, #+0]
   3984            
   3985          }
   \   0000009C   F8BC               POP      {R3-R7}
   \   0000009E   01BC               POP      {R0}
   \   000000A0   0047               BX       R0               ;; return
   \   000000A2   C046               Nop      
   \                     ??AddRow_1:
   \   000000A4   ........           DC32     Busy_program
   \   000000A8   ........           DC32     TextToChangeLength
   \   000000AC   ........           DC32     gProg
   3986              
   3987          
   3988          
   3989          //procedura usuniêcia lini

   \                                 In section Debug.txt, align 4, keep-with-next
   3990          void RemRow(void)
   3991          {
   \                     RemRow:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   3992                    for (int row_tmp=ChoseRow; row_tmp<MaxPrcLines-1; row_tmp++)
   \   00000002   2148               LDR      R0,??RemRow_0    ;; TextToChangeLength + 18
   \   00000004   0278               LDRB     R2,[R0, #+0]
   \   00000006   22E0               B        ??RemRow_1
   3993                    {
   3994                      for (char col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   3995                      {
   3996                     
   3997                        gProg.Line[row_tmp].Proc[col_tmp].Type=gProg.Line[row_tmp+1].Proc[col_tmp].Type;
   \                     ??RemRow_2:
   \   00000008   2048               LDR      R0,??RemRow_0+0x4  ;; gProg
   \   0000000A   1900               MOVS     R1,R3
   \   0000000C   1824               MOVS     R4,#+24
   \   0000000E   6143               MULS     R1,R4,R1
   \   00000010   F024               MOVS     R4,#+240
   \   00000012   5443               MULS     R4,R2,R4
   \   00000014   0019               ADDS     R0,R0,R4
   \   00000016   4018               ADDS     R0,R0,R1
   \   00000018   0400               MOVS     R4,R0
   \   0000001A   1834               ADDS     R4,R4,#+24
   \   0000001C   8421               MOVS     R1,#+132
   \   0000001E   4900               LSLS     R1,R1,#+1        ;; #+264
   \   00000020   4518               ADDS     R5,R0,R1
   \   00000022   2978               LDRB     R1,[R5, #+0]
   \   00000024   2170               STRB     R1,[R4, #+0]
   3998                        gProg.Line[row_tmp].Proc[col_tmp].Nr=gProg.Line[row_tmp+1].Proc[col_tmp].Nr;
   \   00000026   6978               LDRB     R1,[R5, #+1]
   \   00000028   6170               STRB     R1,[R4, #+1]
   3999                        gProg.Line[row_tmp].Proc[col_tmp].Tag=gProg.Line[row_tmp+1].Proc[col_tmp].Tag;
   \   0000002A   0600               MOVS     R6,R0
   \   0000002C   2036               ADDS     R6,R6,#+32
   \   0000002E   8821               MOVS     R1,#+136
   \   00000030   4900               LSLS     R1,R1,#+1        ;; #+272
   \   00000032   4018               ADDS     R0,R0,R1
   \   00000034   03C8               LDM      R0!,{R0,R1}
   \   00000036   03C6               STM      R6!,{R0,R1}
   4000                        gProg.Line[row_tmp].Proc[col_tmp].LastIn=gProg.Line[row_tmp+1].Proc[col_tmp].LastIn;
   \   00000038   287C               LDRB     R0,[R5, #+16]
   \   0000003A   2074               STRB     R0,[R4, #+16]
   4001                        gProg.Line[row_tmp].Proc[col_tmp].Out=gProg.Line[row_tmp+1].Proc[col_tmp].Out;
   \   0000003C   688A               LDRH     R0,[R5, #+18]
   \   0000003E   6082               STRH     R0,[R4, #+18]
   4002                      }
   \   00000040   5B1C               ADDS     R3,R3,#+1
   \   00000042   1B06               LSLS     R3,R3,#+24
   \   00000044   1B0E               LSRS     R3,R3,#+24
   \                     ??RemRow_3:
   \   00000046   1800               MOVS     R0,R3
   \   00000048   0A28               CMP      R0,#+10
   \   0000004A   DDD3               BCC      ??RemRow_2
   \   0000004C   521C               ADDS     R2,R2,#+1
   \                     ??RemRow_1:
   \   0000004E   C72A               CMP      R2,#+199
   \   00000050   01DA               BGE      ??RemRow_4
   \   00000052   0023               MOVS     R3,#+0
   \   00000054   F7E7               B        ??RemRow_3
   4003                    }
   4004                    
   4005                     for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \                     ??RemRow_4:
   \   00000056   0022               MOVS     R2,#+0
   \   00000058   1300               MOVS     R3,R2
   \   0000005A   0FE0               B        ??RemRow_5
   4006                      {
   4007                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Type=None;
   \                     ??RemRow_6:
   \   0000005C   0B48               LDR      R0,??RemRow_0+0x4  ;; gProg
   \   0000005E   0C49               LDR      R1,??RemRow_0+0x8  ;; 0xbaa8
   \   00000060   1824               MOVS     R4,#+24
   \   00000062   5C43               MULS     R4,R3,R4
   \   00000064   0019               ADDS     R0,R0,R4
   \   00000066   4418               ADDS     R4,R0,R1
   \   00000068   1000               MOVS     R0,R2
   \   0000006A   2070               STRB     R0,[R4, #+0]
   4008                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Nr=0;
   \   0000006C   6070               STRB     R0,[R4, #+1]
   4009                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Tag.Tag=0;
   \   0000006E   2500               MOVS     R5,R4
   \   00000070   0835               ADDS     R5,R5,#+8
   \   00000072   0100               MOVS     R1,R0
   \   00000074   03C5               STM      R5!,{R0,R1}
   4010                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].LastIn=0;
   \   00000076   2074               STRB     R0,[R4, #+16]
   4011                        gProg.Line[MaxPrcLines-1].Proc[col_tmp].Out=0;
   \   00000078   6082               STRH     R0,[R4, #+18]
   4012          
   4013                      }
   \   0000007A   5B1C               ADDS     R3,R3,#+1
   \                     ??RemRow_5:
   \   0000007C   0A2B               CMP      R3,#+10
   \   0000007E   EDDB               BLT      ??RemRow_6
   4014            
   4015          }
   \   00000080   70BC               POP      {R4-R6}
   \   00000082   01BC               POP      {R0}
   \   00000084   0047               BX       R0               ;; return
   \   00000086   C046               Nop      
   \                     ??RemRow_0:
   \   00000088   ........           DC32     TextToChangeLength + 18
   \   0000008C   ........           DC32     gProg
   \   00000090   A8BA0000           DC32     0xbaa8
   4016          
   4017          
   4018          

   \                                 In section Debug.txt, align 4, keep-with-next
   4019          void RemRow_Paint(void)
   4020                { 
   \                     RemRow_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   4021          
   4022                  //czy s¹ procedury na lini do usuniêia
   4023                  char ProcExst=0;
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   4024                  for (int col_tmp=0; col_tmp<MaxPrcInLine; col_tmp++)
   \   00000006   0DE0               B        ??RemRow_Paint_0
   4025                      {
   4026                        if (gProg.Line[ChoseRow].Proc[col_tmp].Type!=None) ProcExst=1;
   \                     ??RemRow_Paint_1:
   \   00000008   1822               MOVS     R2,#+24
   \   0000000A   4A43               MULS     R2,R1,R2
   \   0000000C   154B               LDR      R3,??RemRow_Paint_2  ;; TextToChangeLength + 18
   \   0000000E   1B78               LDRB     R3,[R3, #+0]
   \   00000010   F024               MOVS     R4,#+240
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   144C               LDR      R4,??RemRow_Paint_2+0x4  ;; gProg
   \   00000016   E318               ADDS     R3,R4,R3
   \   00000018   9A18               ADDS     R2,R3,R2
   \   0000001A   127E               LDRB     R2,[R2, #+24]
   \   0000001C   002A               CMP      R2,#+0
   \   0000001E   00D0               BEQ      ??RemRow_Paint_3
   \   00000020   0120               MOVS     R0,#+1
   4027                        
   4028                      }
   \                     ??RemRow_Paint_3:
   \   00000022   491C               ADDS     R1,R1,#+1
   \                     ??RemRow_Paint_0:
   \   00000024   0A29               CMP      R1,#+10
   \   00000026   EFDB               BLT      ??RemRow_Paint_1
   4029                  
   4030                  //je¿eli s¹ procedury w lini
   4031                  if (ProcExst)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0ED0               BEQ      ??RemRow_Paint_4
   4032                  {
   4033                    Ask_Paint("?",Speech[g_leng].UsunWiersz,Speech[g_leng].Zprocedurami);  
   \   0000002C   0F48               LDR      R0,??RemRow_Paint_2+0x8  ;; g_leng
   \   0000002E   0068               LDR      R0,[R0, #+0]
   \   00000030   0F49               LDR      R1,??RemRow_Paint_2+0xC  ;; 0xa14
   \   00000032   4843               MULS     R0,R1,R0
   \   00000034   0F49               LDR      R1,??RemRow_Paint_2+0x10  ;; Speech
   \   00000036   0818               ADDS     R0,R1,R0
   \   00000038   8721               MOVS     R1,#+135
   \   0000003A   C900               LSLS     R1,R1,#+3        ;; #+1080
   \   0000003C   4218               ADDS     R2,R0,R1
   \   0000003E   1E39               SUBS     R1,R1,#+30
   \   00000040   4118               ADDS     R1,R0,R1
   \   00000042   0DA0               ADR      R0,??RemRow_Paint_2+0x14  ;; 0x3F, 0x00, 0x00, 0x00
   \   00000044   ........           BL       Ask_Paint
   \   00000048   09E0               B        ??RemRow_Paint_5
   4034          
   4035                  }else{  //je¿eli linia pusta
   4036                    RemRow();
   \                     ??RemRow_Paint_4:
   \   0000004A   ........           BL       RemRow
   4037                    MenuLevel=(MenuLevel/100);
   \   0000004E   0B4C               LDR      R4,??RemRow_Paint_2+0x18  ;; TextToChangeLength
   \   00000050   A06C               LDR      R0,[R4, #+72]
   \   00000052   6421               MOVS     R1,#+100
   \   00000054   ........           BL       __aeabi_idivmod
   \   00000058   A064               STR      R0,[R4, #+72]
   4038                    MenuPaint();
   \   0000005A   ........           BL       MenuPaint
   4039                  }
   4040                  
   4041                }
   \                     ??RemRow_Paint_5:
   \   0000005E   10BC               POP      {R4}
   \   00000060   01BC               POP      {R0}
   \   00000062   0047               BX       R0               ;; return
   \                     ??RemRow_Paint_2:
   \   00000064   ........           DC32     TextToChangeLength + 18
   \   00000068   ........           DC32     gProg
   \   0000006C   ........           DC32     g_leng
   \   00000070   140A0000           DC32     0xa14
   \   00000074   ........           DC32     Speech
   \   00000078   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   0000007C   ........           DC32     TextToChangeLength
   4042          
   4043          
   4044          
   4045          //restart
   4046                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   4047                void RemRow_Event(void)
   4048                {
   \                     RemRow_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   4049                  int ans;
   4050                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1448               LDR      R0,??RemRow_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1348               LDR      R0,??RemRow_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1348               LDR      R0,??RemRow_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1348               LDR      R0,??RemRow_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   4051            
   4052                  if (ans)
   \   0000001C   17D0               BEQ      ??RemRow_Event_1
   4053                    {
   4054                    if (ans==2) 
   \   0000001E   022C               CMP      R4,#+2
   \   00000020   09D1               BNE      ??RemRow_Event_2
   4055                    {
   4056                      RemRow();
   \   00000022   ........           BL       RemRow
   4057                      MenuLevel=(MenuLevel/100);
   \   00000026   0F4D               LDR      R5,??RemRow_Event_0+0x10  ;; TextToChangeLength
   \   00000028   A86C               LDR      R0,[R5, #+72]
   \   0000002A   6421               MOVS     R1,#+100
   \   0000002C   ........           BL       __aeabi_idivmod
   \   00000030   A864               STR      R0,[R5, #+72]
   4058                      ProgramChange=1;
   \   00000032   0120               MOVS     R0,#+1
   \   00000034   2872               STRB     R0,[R5, #+8]
   4059                    }
   4060                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/100);
   \                     ??RemRow_Event_2:
   \   00000036   002C               CMP      R4,#+0
   \   00000038   01D4               BMI      ??RemRow_Event_3
   \   0000003A   012C               CMP      R4,#+1
   \   0000003C   05D1               BNE      ??RemRow_Event_4
   \                     ??RemRow_Event_3:
   \   0000003E   094D               LDR      R5,??RemRow_Event_0+0x10  ;; TextToChangeLength
   \   00000040   A86C               LDR      R0,[R5, #+72]
   \   00000042   6421               MOVS     R1,#+100
   \   00000044   ........           BL       __aeabi_idivmod
   \   00000048   A864               STR      R0,[R5, #+72]
   4061                    MenuPaint();
   \                     ??RemRow_Event_4:
   \   0000004A   ........           BL       MenuPaint
   4062                    } 
   4063                }//_______________________________________________________________________
   \                     ??RemRow_Event_1:
   \   0000004E   38BC               POP      {R3-R5}
   \   00000050   01BC               POP      {R0}
   \   00000052   0047               BX       R0               ;; return
   \                     ??RemRow_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     TextToChangeLength
   4064              
   4065            
   4066          
   4067          
   4068          //SaveChanges_Evant****************************************************************

   \                                 In section Debug.txt, align 4, keep-with-next
   4069          void SaveChanges_Evant(void)
   4070          {
   \                     SaveChanges_Evant:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   4071                    int ans;
   4072                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1E48               LDR      R0,??SaveChanges_Evant_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1D48               LDR      R0,??SaveChanges_Evant_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1D48               LDR      R0,??SaveChanges_Evant_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1D48               LDR      R0,??SaveChanges_Evant_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   4073            
   4074                  if (ans)
   \   0000001C   2BD0               BEQ      ??SaveChanges_Evant_1
   4075                    {
   4076                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe063]: shift count is too large
   \   0000001E   1B48               LDR      R0,??SaveChanges_Evant_0+0x10  ;; 0x13d7e9
   \   00000020   0078               LDRB     R0,[R0, #+0]
   \   00000022   0028               CMP      R0,#+0
   \   00000024   09D1               BNE      ??SaveChanges_Evant_2
   \   00000026   1A48               LDR      R0,??SaveChanges_Evant_0+0x14  ;; 0xfffff430
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   0160               STR      R1,[R0, #+0]
   \   0000002C   194A               LDR      R2,??SaveChanges_Evant_0+0x18  ;; ButtonBipCounter
   \   0000002E   1A48               LDR      R0,??SaveChanges_Evant_0+0x1C  ;; g_counter
   \   00000030   03C8               LDM      R0!,{R0,R1}
   \   00000032   0023               MOVS     R3,#+0
   \   00000034   0830               ADDS     R0,R0,#+8
   \   00000036   5941               ADCS     R1,R1,R3
   \   00000038   03C2               STM      R2!,{R0,R1}
   4077                    if (ans==2) 
   \                     ??SaveChanges_Evant_2:
   \   0000003A   022C               CMP      R4,#+2
   \   0000003C   0CD1               BNE      ??SaveChanges_Evant_3
   4078                    {
   4079                       ProgramChange=0;
   \   0000003E   174D               LDR      R5,??SaveChanges_Evant_0+0x20  ;; TextToChangeLength
   \   00000040   0020               MOVS     R0,#+0
   \   00000042   2872               STRB     R0,[R5, #+8]
   4080                        
   4081                      ProgramChangeExecute(&gProg); 
   \   00000044   1648               LDR      R0,??SaveChanges_Evant_0+0x24  ;; gProg
   \   00000046   ........           BL       ProgramChangeExecute
   4082                      RamToFlash();
   \   0000004A   ........           BL       RamToFlash
   4083                      
   4084                      MenuLevel=(MenuLevel/100);
   \   0000004E   A86C               LDR      R0,[R5, #+72]
   \   00000050   6421               MOVS     R1,#+100
   \   00000052   ........           BL       __aeabi_idivmod
   \   00000056   A864               STR      R0,[R5, #+72]
   4085                    }
   4086          
   4087                      ProgramChangeExecute(&gProg);
   \                     ??SaveChanges_Evant_3:
   \   00000058   1148               LDR      R0,??SaveChanges_Evant_0+0x24  ;; gProg
   \   0000005A   ........           BL       ProgramChangeExecute
   4088                   
   4089                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/100);
   \   0000005E   002C               CMP      R4,#+0
   \   00000060   01D4               BMI      ??SaveChanges_Evant_4
   \   00000062   012C               CMP      R4,#+1
   \   00000064   05D1               BNE      ??SaveChanges_Evant_5
   \                     ??SaveChanges_Evant_4:
   \   00000066   0D4D               LDR      R5,??SaveChanges_Evant_0+0x20  ;; TextToChangeLength
   \   00000068   A86C               LDR      R0,[R5, #+72]
   \   0000006A   6421               MOVS     R1,#+100
   \   0000006C   ........           BL       __aeabi_idivmod
   \   00000070   A864               STR      R0,[R5, #+72]
   4090                    MenuPaint();
   \                     ??SaveChanges_Evant_5:
   \   00000072   ........           BL       MenuPaint
   4091                    } 
   4092            
   4093          }
   \                     ??SaveChanges_Evant_1:
   \   00000076   38BC               POP      {R3-R5}
   \   00000078   01BC               POP      {R0}
   \   0000007A   0047               BX       R0               ;; return
   \                     ??SaveChanges_Evant_0:
   \   0000007C   ........           DC32     Y_down
   \   00000080   ........           DC32     X_down
   \   00000084   ........           DC32     Y_up
   \   00000088   ........           DC32     X_up
   \   0000008C   E9D71300           DC32     0x13d7e9
   \   00000090   30F4FFFF           DC32     0xfffff430
   \   00000094   ........           DC32     ButtonBipCounter
   \   00000098   ........           DC32     g_counter
   \   0000009C   ........           DC32     TextToChangeLength
   \   000000A0   ........           DC32     gProg
   4094          
   4095          
   4096                   
   4097          
   4098                    
   4099          
   4100          char OpenScreenSet=0;
   4101          
   4102          //Ustawienie grafiki ekranu******************************************************************************************************************

   \                                 In section Debug.txt, align 4, keep-with-next
   4103          void ScreenSet_Paint(_Screen* ScreenLokal)
   4104          {
   \                     ScreenSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0400               MOVS     R4,R0
   4105            char PaternDesignNr;
   4106            
   4107            if (CurModifSheet==0) 
   \   00000006   754D               LDR      R5,??ScreenSet_Paint_0  ;; TextToChangeLength
   \   00000008   6879               LDRB     R0,[R5, #+5]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D1               BNE      ??ScreenSet_Paint_1
   4108            {
   4109              PaternDesignNr=ScreenSetTab_0_Nr;
   \   0000000E   0827               MOVS     R7,#+8
   \   00000010   00E0               B        ??ScreenSet_Paint_2
   4110            }else{
   4111              PaternDesignNr=ScreenSetTab_1_Nr; 
   \                     ??ScreenSet_Paint_1:
   \   00000012   0527               MOVS     R7,#+5
   4112            }      
   4113            
   4114            if (OpenScreenSet==0)
   \                     ??ScreenSet_Paint_2:
   \   00000014   697D               LDRB     R1,[R5, #+21]
   \   00000016   0029               CMP      R1,#+0
   \   00000018   0CD1               BNE      ??ScreenSet_Paint_3
   4115            {
   4116              OpenScreenSet=1; 
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   6975               STRB     R1,[R5, #+21]
   4117              if (ScreenLokal->PaternDesign>4)    if (CurModifSheet==0) RowsPoz=3; else RowsPoz=2;
   \   0000001E   2178               LDRB     R1,[R4, #+0]
   \   00000020   0529               CMP      R1,#+5
   \   00000022   07D3               BCC      ??ScreenSet_Paint_3
   \   00000024   0028               CMP      R0,#+0
   \   00000026   6E49               LDR      R1,??ScreenSet_Paint_0+0x4  ;; RowsPoz
   \   00000028   02D1               BNE      ??ScreenSet_Paint_4
   \   0000002A   0322               MOVS     R2,#+3
   \   0000002C   0A70               STRB     R2,[R1, #+0]
   \   0000002E   01E0               B        ??ScreenSet_Paint_3
   \                     ??ScreenSet_Paint_4:
   \   00000030   0222               MOVS     R2,#+2
   \   00000032   0A70               STRB     R2,[R1, #+0]
   4118            }
   4119            
   4120            
   4121          
   4122          #ifdef __ALARM 
   4123            if (CurModifSheet==0)
   \                     ??ScreenSet_Paint_3:
   \   00000034   0028               CMP      R0,#+0
   \   00000036   6B48               LDR      R0,??ScreenSet_Paint_0+0x8  ;; g_leng
   \   00000038   0068               LDR      R0,[R0, #+0]
   \   0000003A   2ED1               BNE      ??ScreenSet_Paint_5
   4124            {
   4125              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+4,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Styl6,Speech[g_leng].Styl7, Speech[g_leng].Styl8,Speech[g_leng].Termostat,Speech[g_leng].Terminarz, "Alarm"); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000003C   6A49               LDR      R1,??ScreenSet_Paint_0+0xC  ;; 0xa14
   \   0000003E   4843               MULS     R0,R1,R0
   \   00000040   6A49               LDR      R1,??ScreenSet_Paint_0+0x10  ;; Speech
   \   00000042   0E18               ADDS     R6,R1,R0
   \   00000044   6A49               LDR      R1,??ScreenSet_Paint_0+0x14  ;; `?<Constant "Alarm">`
   \   00000046   6B48               LDR      R0,??ScreenSet_Paint_0+0x18  ;; 0x753
   \   00000048   3018               ADDS     R0,R6,R0
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   6A48               LDR      R0,??ScreenSet_Paint_0+0x1C  ;; 0x6cc
   \   0000004E   3118               ADDS     R1,R6,R0
   \   00000050   6A48               LDR      R0,??ScreenSet_Paint_0+0x20  ;; 0x4ce
   \   00000052   3018               ADDS     R0,R6,R0
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   6A48               LDR      R0,??ScreenSet_Paint_0+0x24  ;; 0x4bf
   \   00000058   3118               ADDS     R1,R6,R0
   \   0000005A   0F38               SUBS     R0,R0,#+15
   \   0000005C   3018               ADDS     R0,R6,R0
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   6848               LDR      R0,??ScreenSet_Paint_0+0x28  ;; 0x4a1
   \   00000062   3118               ADDS     R1,R6,R0
   \   00000064   0F38               SUBS     R0,R0,#+15
   \   00000066   3018               ADDS     R0,R6,R0
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   6748               LDR      R0,??ScreenSet_Paint_0+0x2C  ;; 0x483
   \   0000006C   3118               ADDS     R1,R6,R0
   \   0000006E   0F38               SUBS     R0,R0,#+15
   \   00000070   3018               ADDS     R0,R6,R0
   \   00000072   03B4               PUSH     {R0,R1}
   \   00000074   6548               LDR      R0,??ScreenSet_Paint_0+0x30  ;; 0x465
   \   00000076   3118               ADDS     R1,R6,R0
   \   00000078   65A0               ADR      R0,??ScreenSet_Paint_0+0x34  ;; 0x00, 0x00, 0x00, 0x00
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0021               MOVS     R1,#+0
   \   0000007E   0800               MOVS     R0,R1
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   0300               MOVS     R3,R0
   \   00000084   0D22               MOVS     R2,#+13
   \   00000086   3F1D               ADDS     R7,R7,#+4
   \   00000088   3900               MOVS     R1,R7
   \   0000008A   0906               LSLS     R1,R1,#+24
   \   0000008C   090E               LSRS     R1,R1,#+24
   \   0000008E   6148               LDR      R0,??ScreenSet_Paint_0+0x38  ;; 0x4dd
   \   00000090   3018               ADDS     R0,R6,R0
   \   00000092   ........           BL       List_Paint
   \   00000096   0EB0               ADD      SP,SP,#+56
   \   00000098   27E0               B        ??ScreenSet_Paint_6
   4126            }else{
   4127              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+4,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Termostat,Speech[g_leng].Terminarz, "Alarm"); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??ScreenSet_Paint_5:
   \   0000009A   5349               LDR      R1,??ScreenSet_Paint_0+0xC  ;; 0xa14
   \   0000009C   4843               MULS     R0,R1,R0
   \   0000009E   5349               LDR      R1,??ScreenSet_Paint_0+0x10  ;; Speech
   \   000000A0   0E18               ADDS     R6,R1,R0
   \   000000A2   82B0               SUB      SP,SP,#+8
   \   000000A4   5248               LDR      R0,??ScreenSet_Paint_0+0x14  ;; `?<Constant "Alarm">`
   \   000000A6   0090               STR      R0,[SP, #+0]
   \   000000A8   5248               LDR      R0,??ScreenSet_Paint_0+0x18  ;; 0x753
   \   000000AA   3118               ADDS     R1,R6,R0
   \   000000AC   8738               SUBS     R0,R0,#+135
   \   000000AE   3018               ADDS     R0,R6,R0
   \   000000B0   03B4               PUSH     {R0,R1}
   \   000000B2   5448               LDR      R0,??ScreenSet_Paint_0+0x28  ;; 0x4a1
   \   000000B4   3118               ADDS     R1,R6,R0
   \   000000B6   0F38               SUBS     R0,R0,#+15
   \   000000B8   3018               ADDS     R0,R6,R0
   \   000000BA   03B4               PUSH     {R0,R1}
   \   000000BC   5248               LDR      R0,??ScreenSet_Paint_0+0x2C  ;; 0x483
   \   000000BE   3118               ADDS     R1,R6,R0
   \   000000C0   0F38               SUBS     R0,R0,#+15
   \   000000C2   3018               ADDS     R0,R6,R0
   \   000000C4   03B4               PUSH     {R0,R1}
   \   000000C6   5148               LDR      R0,??ScreenSet_Paint_0+0x30  ;; 0x465
   \   000000C8   3118               ADDS     R1,R6,R0
   \   000000CA   51A0               ADR      R0,??ScreenSet_Paint_0+0x34  ;; 0x00, 0x00, 0x00, 0x00
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   0800               MOVS     R0,R1
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   0300               MOVS     R3,R0
   \   000000D6   0D22               MOVS     R2,#+13
   \   000000D8   3F1D               ADDS     R7,R7,#+4
   \   000000DA   3900               MOVS     R1,R7
   \   000000DC   0906               LSLS     R1,R1,#+24
   \   000000DE   090E               LSRS     R1,R1,#+24
   \   000000E0   4C48               LDR      R0,??ScreenSet_Paint_0+0x38  ;; 0x4dd
   \   000000E2   3018               ADDS     R0,R6,R0
   \   000000E4   ........           BL       List_Paint
   \   000000E8   0CB0               ADD      SP,SP,#+48
   4128            }
   4129          #else  
   4130            if (CurModifSheet==0)
   4131            {
   4132              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+3,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Styl6,Speech[g_leng].Styl7, Speech[g_leng].Styl8,Speech[g_leng].Termostat,Speech[g_leng].Terminarz); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4133            }else{
   4134              List_Paint(Speech[g_leng].Ekran,PaternDesignNr+3,13,0,0,0,"", Speech[g_leng].Styl1, Speech[g_leng].Styl2, Speech[g_leng].Styl3,Speech[g_leng].Styl4,Speech[g_leng].Styl5,Speech[g_leng].Termostat,Speech[g_leng].Terminarz); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4135            }
   4136          #endif
   4137            
   4138             char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \                     ??ScreenSet_Paint_6:
   \   000000EA   4B4E               LDR      R6,??ScreenSet_Paint_0+0x3C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`
   \   000000EC   02A8               ADD      R0,SP,#+8
   \   000000EE   0ECE               LDM      R6!,{R1-R3}
   \   000000F0   0EC0               STM      R0!,{R1-R3}
   \   000000F2   0C3E               SUBS     R6,R6,#+12
   4139             char MarkPoz= ScreenLokal->PaternDesign+1-RowsPoz; 
   \   000000F4   2078               LDRB     R0,[R4, #+0]
   \   000000F6   401C               ADDS     R0,R0,#+1
   \   000000F8   3949               LDR      R1,??ScreenSet_Paint_0+0x4  ;; RowsPoz
   \   000000FA   0978               LDRB     R1,[R1, #+0]
   \   000000FC   401A               SUBS     R0,R0,R1
   \   000000FE   0006               LSLS     R0,R0,#+24
   \   00000100   000E               LSRS     R0,R0,#+24
   4140             if (CurModifSheet==0)
   \   00000102   6979               LDRB     R1,[R5, #+5]
   \   00000104   0029               CMP      R1,#+0
   \   00000106   13D1               BNE      ??ScreenSet_Paint_7
   4141               {
   4142                if ((MarkPoz!=0) && (MarkPoz<=6))   CopyToCanvasPoint((char *)ekran_tab,52,98-(13*( MarkPoz)),8,10);  
   \   00000108   0100               MOVS     R1,R0
   \   0000010A   24D0               BEQ      ??ScreenSet_Paint_8
   \   0000010C   0729               CMP      R1,#+7
   \   0000010E   22D2               BCS      ??ScreenSet_Paint_8
   \   00000110   82B0               SUB      SP,SP,#+8
   \   00000112   0A21               MOVS     R1,#+10
   \   00000114   0091               STR      R1,[SP, #+0]
   \   00000116   0823               MOVS     R3,#+8
   \   00000118   6221               MOVS     R1,#+98
   \   0000011A   0D22               MOVS     R2,#+13
   \   0000011C   5043               MULS     R0,R2,R0
   \   0000011E   0A1A               SUBS     R2,R1,R0
   \   00000120   1206               LSLS     R2,R2,#+24
   \   00000122   120E               LSRS     R2,R2,#+24
   \   00000124   3421               MOVS     R1,#+52
   \   00000126   04A8               ADD      R0,SP,#+16
   \   00000128   ........           BL       CopyToCanvasPoint
   \   0000012C   02B0               ADD      SP,SP,#+8
   \   0000012E   12E0               B        ??ScreenSet_Paint_8
   4143               }else{
   4144                if ((MarkPoz!=0) && (MarkPoz<=6))   CopyToCanvasPoint((char *)ekran_tab,52,98-(13*( MarkPoz)),8,10); 
   \                     ??ScreenSet_Paint_7:
   \   00000130   0100               MOVS     R1,R0
   \   00000132   10D0               BEQ      ??ScreenSet_Paint_8
   \   00000134   0729               CMP      R1,#+7
   \   00000136   0ED2               BCS      ??ScreenSet_Paint_8
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0A21               MOVS     R1,#+10
   \   0000013C   0091               STR      R1,[SP, #+0]
   \   0000013E   0823               MOVS     R3,#+8
   \   00000140   6221               MOVS     R1,#+98
   \   00000142   0D22               MOVS     R2,#+13
   \   00000144   5043               MULS     R0,R2,R0
   \   00000146   0A1A               SUBS     R2,R1,R0
   \   00000148   1206               LSLS     R2,R2,#+24
   \   0000014A   120E               LSRS     R2,R2,#+24
   \   0000014C   3421               MOVS     R1,#+52
   \   0000014E   04A8               ADD      R0,SP,#+16
   \   00000150   ........           BL       CopyToCanvasPoint
   \   00000154   02B0               ADD      SP,SP,#+8
   4145               }
   4146          
   4147            
   4148            CleanCanvasArea(1,97,60,11,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??ScreenSet_Paint_8:
   \   00000156   82B0               SUB      SP,SP,#+8
   \   00000158   0020               MOVS     R0,#+0
   \   0000015A   0090               STR      R0,[SP, #+0]
   \   0000015C   0B23               MOVS     R3,#+11
   \   0000015E   3C22               MOVS     R2,#+60
   \   00000160   6121               MOVS     R1,#+97
   \   00000162   0120               MOVS     R0,#+1
   \   00000164   ........           BL       CleanCanvasArea
   \   00000168   02B0               ADD      SP,SP,#+8
   4149              
   4150            Button("< ",1,96,15,13);
   \   0000016A   82B0               SUB      SP,SP,#+8
   \   0000016C   0D20               MOVS     R0,#+13
   \   0000016E   0090               STR      R0,[SP, #+0]
   \   00000170   0F23               MOVS     R3,#+15
   \   00000172   6022               MOVS     R2,#+96
   \   00000174   0121               MOVS     R1,#+1
   \   00000176   29A0               ADR      R0,??ScreenSet_Paint_0+0x40  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000178   ........           BL       Button
   \   0000017C   02B0               ADD      SP,SP,#+8
   4151            Button("> ",47,96,15,13);
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   0D20               MOVS     R0,#+13
   \   00000182   0090               STR      R0,[SP, #+0]
   \   00000184   0F23               MOVS     R3,#+15
   \   00000186   6022               MOVS     R2,#+96
   \   00000188   2F21               MOVS     R1,#+47
   \   0000018A   25A0               ADR      R0,??ScreenSet_Paint_0+0x44  ;; 0x3E, 0x20, 0x00, 0x00
   \   0000018C   ........           BL       Button
   \   00000190   02B0               ADD      SP,SP,#+8
   4152            
   4153            char txt[5]={'N', 'r', '.',':', 0,};
   \   00000192   6846               MOV      R0,SP
   \   00000194   0C36               ADDS     R6,R6,#+12
   \   00000196   06CE               LDM      R6!,{R1,R2}
   \   00000198   06C0               STM      R0!,{R1,R2}
   4154            
   4155            CharToStr(CurModifSheet, &txt[4], 1); //(char Value, char *Vstring, char ill);
   \   0000019A   0122               MOVS     R2,#+1
   \   0000019C   6946               MOV      R1,SP
   \   0000019E   091D               ADDS     R1,R1,#+4
   \   000001A0   6879               LDRB     R0,[R5, #+5]
   \   000001A2   ........           BL       CharToStr
   4156            Label(txt,0,22,98,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001A6   82B0               SUB      SP,SP,#+8
   \   000001A8   0020               MOVS     R0,#+0
   \   000001AA   0090               STR      R0,[SP, #+0]
   \   000001AC   7F21               MOVS     R1,#+127
   \   000001AE   0120               MOVS     R0,#+1
   \   000001B0   03B4               PUSH     {R0,R1}
   \   000001B2   1421               MOVS     R1,#+20
   \   000001B4   0520               MOVS     R0,#+5
   \   000001B6   03B4               PUSH     {R0,R1}
   \   000001B8   6223               MOVS     R3,#+98
   \   000001BA   1622               MOVS     R2,#+22
   \   000001BC   0021               MOVS     R1,#+0
   \   000001BE   06A8               ADD      R0,SP,#+24
   \   000001C0   ........           BL       Label
   \   000001C4   06B0               ADD      SP,SP,#+24
   4157          
   4158            H_line(0,95,61,1); 
   \   000001C6   0123               MOVS     R3,#+1
   \   000001C8   3D22               MOVS     R2,#+61
   \   000001CA   5F21               MOVS     R1,#+95
   \   000001CC   0020               MOVS     R0,#+0
   \   000001CE   ........           BL       H_line
   4159          
   4160          }
   \   000001D2   05B0               ADD      SP,SP,#+20
   \   000001D4   F0BC               POP      {R4-R7}
   \   000001D6   01BC               POP      {R0}
   \   000001D8   0047               BX       R0               ;; return
   \   000001DA   C046               Nop      
   \                     ??ScreenSet_Paint_0:
   \   000001DC   ........           DC32     TextToChangeLength
   \   000001E0   ........           DC32     RowsPoz
   \   000001E4   ........           DC32     g_leng
   \   000001E8   140A0000           DC32     0xa14
   \   000001EC   ........           DC32     Speech
   \   000001F0   ........           DC32     `?<Constant "Alarm">`
   \   000001F4   53070000           DC32     0x753
   \   000001F8   CC060000           DC32     0x6cc
   \   000001FC   CE040000           DC32     0x4ce
   \   00000200   BF040000           DC32     0x4bf
   \   00000204   A1040000           DC32     0x4a1
   \   00000208   83040000           DC32     0x483
   \   0000020C   65040000           DC32     0x465
   \   00000210   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   00000214   DD040000           DC32     0x4dd
   \   00000218   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`
   \   0000021C   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000220   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   4161          
   4162              char MenuPaintExecute=0;
   4163          

   \                                 In section Debug.txt, align 4, keep-with-next
   4164          void ScreenSet_Event(_Screen* ScreenLokal)
   4165          {
   \                     ScreenSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4166              char PaternDesignNr;
   4167          
   4168              MenuPaintExecute=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   554E               LDR      R6,??ScreenSet_Event_0  ;; TextToChangeLength
   \   00000008   2800               MOVS     R0,R5
   \   0000000A   B075               STRB     R0,[R6, #+22]
   4169            if (CurModifSheet==0) 
   \   0000000C   7079               LDRB     R0,[R6, #+5]
   \   0000000E   0028               CMP      R0,#+0
   \   00000010   01D1               BNE      ??ScreenSet_Event_1
   4170            {
   4171              PaternDesignNr=ScreenSetTab_0_Nr;
   \   00000012   0822               MOVS     R2,#+8
   \   00000014   00E0               B        ??ScreenSet_Event_2
   4172            }else{
   4173              PaternDesignNr=ScreenSetTab_1_Nr; 
   \                     ??ScreenSet_Event_1:
   \   00000016   0522               MOVS     R2,#+5
   4174            }      
   4175          
   4176                  int ans;
   4177          #ifdef __ALARM
   4178                  ans= List_Event(X_up, Y_up, X_down, Y_down, PaternDesignNr+4 , 13, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??ScreenSet_Event_2:
   \   00000018   2900               MOVS     R1,R5
   \   0000001A   0800               MOVS     R0,R1
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0D21               MOVS     R1,#+13
   \   00000020   121D               ADDS     R2,R2,#+4
   \   00000022   1000               MOVS     R0,R2
   \   00000024   0006               LSLS     R0,R0,#+24
   \   00000026   000E               LSRS     R0,R0,#+24
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   4D48               LDR      R0,??ScreenSet_Event_0+0x4  ;; Y_down
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   435E               LDRSH    R3,[R0, R1]
   \   00000030   4C48               LDR      R0,??ScreenSet_Event_0+0x8  ;; X_down
   \   00000032   425E               LDRSH    R2,[R0, R1]
   \   00000034   4C48               LDR      R0,??ScreenSet_Event_0+0xC  ;; Y_up
   \   00000036   415E               LDRSH    R1,[R0, R1]
   \   00000038   4C48               LDR      R0,??ScreenSet_Event_0+0x10  ;; X_up
   \   0000003A   0027               MOVS     R7,#+0
   \   0000003C   C05F               LDRSH    R0,[R0, R7]
   \   0000003E   ........           BL       List_Event
   \   00000042   04B0               ADD      SP,SP,#+16
   \   00000044   0700               MOVS     R7,R0
   4179          #else
   4180                  ans= List_Event(X_up, Y_up, X_down, Y_down, PaternDesignNr+3 , 13, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   4181          #endif        
   4182                  if ((ans>0) && (RowsPoz+1>=ans)) ans=0;
   \   00000046   012F               CMP      R7,#+1
   \   00000048   05DB               BLT      ??ScreenSet_Event_3
   \   0000004A   4948               LDR      R0,??ScreenSet_Event_0+0x14  ;; RowsPoz
   \   0000004C   0078               LDRB     R0,[R0, #+0]
   \   0000004E   401C               ADDS     R0,R0,#+1
   \   00000050   B842               CMP      R0,R7
   \   00000052   00DB               BLT      ??ScreenSet_Event_3
   \   00000054   2F00               MOVS     R7,R5
   4183                      
   4184                        if (ans>1) 
   \                     ??ScreenSet_Event_3:
   \   00000056   022F               CMP      R7,#+2
   \   00000058   38DB               BLT      ??ScreenSet_Event_4
   4185                        { 
   4186                          OpenScreenSet=0;
   \   0000005A   2800               MOVS     R0,R5
   \   0000005C   7075               STRB     R0,[R6, #+21]
   4187                          ScreenLokal->PaternDesign=ans-2;
   \   0000005E   3800               MOVS     R0,R7
   \   00000060   801E               SUBS     R0,R0,#+2
   \   00000062   2070               STRB     R0,[R4, #+0]
   4188                          if (((CurModifSheet==0) && (ans==PaternDesignThermoMS) ) || ((CurModifSheet>0) && (ans==PaternDesignThermoSS)))
   \   00000064   7079               LDRB     R0,[R6, #+5]
   \   00000066   0028               CMP      R0,#+0
   \   00000068   01D1               BNE      ??ScreenSet_Event_5
   \   0000006A   0A2F               CMP      R7,#+10
   \   0000006C   03D0               BEQ      ??ScreenSet_Event_6
   \                     ??ScreenSet_Event_5:
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   07D0               BEQ      ??ScreenSet_Event_7
   \   00000072   072F               CMP      R7,#+7
   \   00000074   05D1               BNE      ??ScreenSet_Event_7
   4189                          {
   4190                            MenuLevel=(MenuLevel*10+2);         //uruchomienie ustawiania termostatu
   \                     ??ScreenSet_Event_6:
   \   00000076   B06C               LDR      R0,[R6, #+72]
   \   00000078   0A21               MOVS     R1,#+10
   \   0000007A   4843               MULS     R0,R1,R0
   \   0000007C   801C               ADDS     R0,R0,#+2
   \   0000007E   B064               STR      R0,[R6, #+72]
   \   00000080   20E0               B        ??ScreenSet_Event_8
   4191                          }
   4192                          else if (((CurModifSheet==0) && (ans==PaternDesignTimetableMS) ) || ((CurModifSheet>0) && (ans==PaternDesignTimetableSS)))
   \                     ??ScreenSet_Event_7:
   \   00000082   0028               CMP      R0,#+0
   \   00000084   01D1               BNE      ??ScreenSet_Event_9
   \   00000086   0B2F               CMP      R7,#+11
   \   00000088   03D0               BEQ      ??ScreenSet_Event_10
   \                     ??ScreenSet_Event_9:
   \   0000008A   0028               CMP      R0,#+0
   \   0000008C   07D0               BEQ      ??ScreenSet_Event_11
   \   0000008E   082F               CMP      R7,#+8
   \   00000090   05D1               BNE      ??ScreenSet_Event_11
   4193                          {
   4194                            MenuLevel=(MenuLevel*10+3);         //ustawianie ekranów
   \                     ??ScreenSet_Event_10:
   \   00000092   B06C               LDR      R0,[R6, #+72]
   \   00000094   0A21               MOVS     R1,#+10
   \   00000096   4843               MULS     R0,R1,R0
   \   00000098   C01C               ADDS     R0,R0,#+3
   \   0000009A   B064               STR      R0,[R6, #+72]
   \   0000009C   12E0               B        ??ScreenSet_Event_8
   4195                      
   4196                          #ifdef __ALARM
   4197                          }
   4198                          else if (((CurModifSheet==0) && (ans==PaternDesignAlarmMS) ) || ((CurModifSheet>0) && (ans==PaternDesignAlarmSS)))
   \                     ??ScreenSet_Event_11:
   \   0000009E   0028               CMP      R0,#+0
   \   000000A0   01D1               BNE      ??ScreenSet_Event_12
   \   000000A2   0C2F               CMP      R7,#+12
   \   000000A4   03D0               BEQ      ??ScreenSet_Event_13
   \                     ??ScreenSet_Event_12:
   \   000000A6   0028               CMP      R0,#+0
   \   000000A8   07D0               BEQ      ??ScreenSet_Event_14
   \   000000AA   092F               CMP      R7,#+9
   \   000000AC   05D1               BNE      ??ScreenSet_Event_14
   4199                          {
   4200                          MenuLevel=(MenuLevel*10+4);         //ustawianie ekranów
   \                     ??ScreenSet_Event_13:
   \   000000AE   B06C               LDR      R0,[R6, #+72]
   \   000000B0   0A21               MOVS     R1,#+10
   \   000000B2   4843               MULS     R0,R1,R0
   \   000000B4   001D               ADDS     R0,R0,#+4
   \   000000B6   B064               STR      R0,[R6, #+72]
   \   000000B8   04E0               B        ??ScreenSet_Event_8
   4201                          #endif
   4202                          }else{
   4203                            MenuLevel=(MenuLevel*10+1);         //ustawianie ekranów
   \                     ??ScreenSet_Event_14:
   \   000000BA   B06C               LDR      R0,[R6, #+72]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   4843               MULS     R0,R1,R0
   \   000000C0   401C               ADDS     R0,R0,#+1
   \   000000C2   B064               STR      R0,[R6, #+72]
   4204                          }
   4205                          MenuPaintExecute=1;
   \                     ??ScreenSet_Event_8:
   \   000000C4   0120               MOVS     R0,#+1
   \   000000C6   0100               MOVS     R1,R0
   \   000000C8   B175               STRB     R1,[R6, #+22]
   4206                          ProgramChange=1;
   \   000000CA   3072               STRB     R0,[R6, #+8]
   4207                        }else if (ans==1)
   4208                        {
   4209          
   4210                        }  
   4211                        
   4212                                        
   4213                          if ((Button("< ",1,96,15,13)==1) && (CurModifSheet>0)) {MenuPaintExecute=1; CurModifSheet--; RowsPoz=0; OpenScreenSet=0;}
   \                     ??ScreenSet_Event_4:
   \   000000CC   82B0               SUB      SP,SP,#+8
   \   000000CE   0D20               MOVS     R0,#+13
   \   000000D0   0090               STR      R0,[SP, #+0]
   \   000000D2   0F23               MOVS     R3,#+15
   \   000000D4   6022               MOVS     R2,#+96
   \   000000D6   0121               MOVS     R1,#+1
   \   000000D8   26A0               ADR      R0,??ScreenSet_Event_0+0x18  ;; 0x3C, 0x20, 0x00, 0x00
   \   000000DA   ........           BL       Button
   \   000000DE   02B0               ADD      SP,SP,#+8
   \   000000E0   0128               CMP      R0,#+1
   \   000000E2   0BD1               BNE      ??ScreenSet_Event_15
   \   000000E4   7079               LDRB     R0,[R6, #+5]
   \   000000E6   0028               CMP      R0,#+0
   \   000000E8   08D0               BEQ      ??ScreenSet_Event_15
   \   000000EA   0121               MOVS     R1,#+1
   \   000000EC   B175               STRB     R1,[R6, #+22]
   \   000000EE   401E               SUBS     R0,R0,#+1
   \   000000F0   7071               STRB     R0,[R6, #+5]
   \   000000F2   1F48               LDR      R0,??ScreenSet_Event_0+0x14  ;; RowsPoz
   \   000000F4   2900               MOVS     R1,R5
   \   000000F6   0170               STRB     R1,[R0, #+0]
   \   000000F8   2800               MOVS     R0,R5
   \   000000FA   7075               STRB     R0,[R6, #+21]
   4214                          if ((Button("> ",47,96,15,13)==1)&& (CurModifSheet<ScreenNr-1)) {
   \                     ??ScreenSet_Event_15:
   \   000000FC   82B0               SUB      SP,SP,#+8
   \   000000FE   0D20               MOVS     R0,#+13
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   0F23               MOVS     R3,#+15
   \   00000104   6022               MOVS     R2,#+96
   \   00000106   2F21               MOVS     R1,#+47
   \   00000108   1BA0               ADR      R0,??ScreenSet_Event_0+0x1C  ;; 0x3E, 0x20, 0x00, 0x00
   \   0000010A   ........           BL       Button
   \   0000010E   02B0               ADD      SP,SP,#+8
   \   00000110   0128               CMP      R0,#+1
   \   00000112   0BD1               BNE      ??ScreenSet_Event_16
   \   00000114   7079               LDRB     R0,[R6, #+5]
   \   00000116   0728               CMP      R0,#+7
   \   00000118   08D2               BCS      ??ScreenSet_Event_16
   4215                            OpenScreenSet=0;
   \   0000011A   2900               MOVS     R1,R5
   \   0000011C   7175               STRB     R1,[R6, #+21]
   4216                            RowsPoz=0;
   \   0000011E   1449               LDR      R1,??ScreenSet_Event_0+0x14  ;; RowsPoz
   \   00000120   0D70               STRB     R5,[R1, #+0]
   4217                            MenuPaintExecute=1; 
   \   00000122   0121               MOVS     R1,#+1
   \   00000124   B175               STRB     R1,[R6, #+22]
   4218                            CurModifSheet++; 
   \   00000126   401C               ADDS     R0,R0,#+1
   \   00000128   7071               STRB     R0,[R6, #+5]
   \   0000012A   0FE0               B        ??ScreenSet_Event_17
   4219                             }
   4220                          
   4221                        
   4222                        else if (ans<0)
   \                     ??ScreenSet_Event_16:
   \   0000012C   002F               CMP      R7,#+0
   \   0000012E   0DD5               BPL      ??ScreenSet_Event_17
   4223                        {
   4224                             if (ProgramChange) 
   \   00000130   307A               LDRB     R0,[R6, #+8]
   \   00000132   0028               CMP      R0,#+0
   \   00000134   B06C               LDR      R0,[R6, #+72]
   \   00000136   03D0               BEQ      ??ScreenSet_Event_18
   4225                              {
   4226                                  MenuLevel=(MenuLevel*10+0);
   \   00000138   0A21               MOVS     R1,#+10
   \   0000013A   4843               MULS     R0,R1,R0
   \   0000013C   B064               STR      R0,[R6, #+72]
   \   0000013E   03E0               B        ??ScreenSet_Event_19
   4227                              }else{
   4228                                  MenuLevel=(MenuLevel/10);
   \                     ??ScreenSet_Event_18:
   \   00000140   0A21               MOVS     R1,#+10
   \   00000142   ........           BL       __aeabi_idivmod
   \   00000146   B064               STR      R0,[R6, #+72]
   4229                              }
   4230                                MenuPaintExecute=1;
   \                     ??ScreenSet_Event_19:
   \   00000148   0120               MOVS     R0,#+1
   \   0000014A   B075               STRB     R0,[R6, #+22]
   4231                          
   4232                        }else{
   4233          
   4234                        }
   4235                        
   4236                        
   4237                        
   4238                        if (MenuPaintExecute) MenuPaint(); 
   \                     ??ScreenSet_Event_17:
   \   0000014C   B07D               LDRB     R0,[R6, #+22]
   \   0000014E   0028               CMP      R0,#+0
   \   00000150   01D0               BEQ      ??ScreenSet_Event_20
   \   00000152   ........           BL       MenuPaint
   4239                     
   4240             
   4241          }
   \                     ??ScreenSet_Event_20:
   \   00000156   F8BC               POP      {R3-R7}
   \   00000158   01BC               POP      {R0}
   \   0000015A   0047               BX       R0               ;; return
   \                     ??ScreenSet_Event_0:
   \   0000015C   ........           DC32     TextToChangeLength
   \   00000160   ........           DC32     Y_down
   \   00000164   ........           DC32     X_down
   \   00000168   ........           DC32     Y_up
   \   0000016C   ........           DC32     X_up
   \   00000170   ........           DC32     RowsPoz
   \   00000174   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000178   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   4242          
   4243          
   4244          
   4245          

   \                                 In section Debug.txt, align 4, keep-with-next
   4246          void ThermostatSet_Paint(_Screen* Screen)
   4247          {          
   \                     ThermostatSet_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   C4A0               ADR      R0,??ThermostatSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0100               MOVS     R1,R0
   \   0000001E   C148               LDR      R0,??ThermostatSet_Paint_0+0x4  ;; `?<Constant {129, 0}>` + 4
   4248                 List_Paint("Therm set ",0,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   7F21               MOVS     R1,#+127
   \   0000002E   0120               MOVS     R0,#+1
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   3421               MOVS     R1,#+52
   \   00000034   0A20               MOVS     R0,#+10
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   6423               MOVS     R3,#+100
   \   0000003A   0522               MOVS     R2,#+5
   \   0000003C   0221               MOVS     R1,#+2
   \   0000003E   BA48               LDR      R0,??ThermostatSet_Paint_0+0x8  ;; 0x6ea
   \   00000040   BA4C               LDR      R4,??ThermostatSet_Paint_0+0xC  ;; g_leng
   \   00000042   2468               LDR      R4,[R4, #+0]
   \   00000044   BA4D               LDR      R5,??ThermostatSet_Paint_0+0x10  ;; 0xa14
   \   00000046   6C43               MULS     R4,R5,R4
   \   00000048   BA4D               LDR      R5,??ThermostatSet_Paint_0+0x14  ;; Speech
   \   0000004A   2C19               ADDS     R4,R5,R4
   \   0000004C   2018               ADDS     R0,R4,R0
   4249          
   4250                 char txt[8];
   4251                 
   4252                 
   4253                    Label(Speech[g_leng].Czujnik,2,5, 100 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000004E   ........           BL       Label
   \   00000052   06B0               ADD      SP,SP,#+24
   4254                    char ind;
   4255                    if ((Screen->Thermo.SensorNode>=0) && (Screen->Thermo.SensorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   00000054   029C               LDR      R4,[SP, #+8]
   \   00000056   8C34               ADDS     R4,R4,#+140
   \   00000058   0320               MOVS     R0,#+3
   \   0000005A   2056               LDRSB    R0,[R4, R0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   2FD4               BMI      ??ThermostatSet_Paint_1
   \   00000060   0320               MOVS     R0,#+3
   \   00000062   2056               LDRSB    R0,[R4, R0]
   \   00000064   FF28               CMP      R0,#+255
   \   00000066   2BD0               BEQ      ??ThermostatSet_Paint_1
   4256                    {
   4257                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' '; txt[4]=0;
   \   00000068   6D46               MOV      R5,SP
   \   0000006A   4920               MOVS     R0,#+73
   \   0000006C   2870               STRB     R0,[R5, #+0]
   \   0000006E   6420               MOVS     R0,#+100
   \   00000070   6870               STRB     R0,[R5, #+1]
   \   00000072   3A20               MOVS     R0,#+58
   \   00000074   A870               STRB     R0,[R5, #+2]
   \   00000076   2020               MOVS     R0,#+32
   \   00000078   E870               STRB     R0,[R5, #+3]
   \   0000007A   0026               MOVS     R6,#+0
   \   0000007C   3000               MOVS     R0,R6
   \   0000007E   2871               STRB     R0,[R5, #+4]
   4258                      ind=CharToStr(Screen->Thermo.SensorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000080   0222               MOVS     R2,#+2
   \   00000082   2900               MOVS     R1,R5
   \   00000084   C91C               ADDS     R1,R1,#+3
   \   00000086   0320               MOVS     R0,#+3
   \   00000088   2056               LDRSB    R0,[R4, R0]
   \   0000008A   0006               LSLS     R0,R0,#+24
   \   0000008C   000E               LSRS     R0,R0,#+24
   \   0000008E   ........           BL       CharToStr
   \   00000092   0200               MOVS     R2,R0
   4259                      txt[ind+3]=0;
   \   00000094   2818               ADDS     R0,R5,R0
   \   00000096   C670               STRB     R6,[R0, #+3]
   4260                      Label(txt,2,20, 88 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   3000               MOVS     R0,R6
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   7F21               MOVS     R1,#+127
   \   000000A0   0120               MOVS     R0,#+1
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   1621               MOVS     R1,#+22
   \   000000A6   D21C               ADDS     R2,R2,#+3
   \   000000A8   1000               MOVS     R0,R2
   \   000000AA   0006               LSLS     R0,R0,#+24
   \   000000AC   000E               LSRS     R0,R0,#+24
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   5823               MOVS     R3,#+88
   \   000000B2   1422               MOVS     R2,#+20
   \   000000B4   0221               MOVS     R1,#+2
   \   000000B6   06A8               ADD      R0,SP,#+24
   \   000000B8   ........           BL       Label
   \   000000BC   06B0               ADD      SP,SP,#+24
   \   000000BE   0FE0               B        ??ThermostatSet_Paint_2
   4261                    }else{
   4262                      Label("Var",2,20, 88 ,3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ThermostatSet_Paint_1:
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   0020               MOVS     R0,#+0
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   7F21               MOVS     R1,#+127
   \   000000C8   0120               MOVS     R0,#+1
   \   000000CA   03B4               PUSH     {R0,R1}
   \   000000CC   1621               MOVS     R1,#+22
   \   000000CE   0320               MOVS     R0,#+3
   \   000000D0   03B4               PUSH     {R0,R1}
   \   000000D2   5823               MOVS     R3,#+88
   \   000000D4   1422               MOVS     R2,#+20
   \   000000D6   0221               MOVS     R1,#+2
   \   000000D8   97A0               ADR      R0,??ThermostatSet_Paint_0+0x18  ;; "Var"
   \   000000DA   ........           BL       Label
   \   000000DE   06B0               ADD      SP,SP,#+24
   \                     ??ThermostatSet_Paint_2:
   \   000000E0   6D46               MOV      R5,SP
   \   000000E2   3C20               MOVS     R0,#+60
   \   000000E4   2870               STRB     R0,[R5, #+0]
   4263                    }
   4264                            
   4265                    txt[0]='<';txt[1]=0;
   \   000000E6   0026               MOVS     R6,#+0
   \   000000E8   3000               MOVS     R0,R6
   \   000000EA   6870               STRB     R0,[R5, #+1]
   4266                    Button(txt,3,85,15,15); 
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   0F20               MOVS     R0,#+15
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   0300               MOVS     R3,R0
   \   000000F4   5522               MOVS     R2,#+85
   \   000000F6   0321               MOVS     R1,#+3
   \   000000F8   02A8               ADD      R0,SP,#+8
   \   000000FA   ........           BL       Button
   \   000000FE   02B0               ADD      SP,SP,#+8
   4267                    txt[0]='>';
   \   00000100   3E27               MOVS     R7,#+62
   \   00000102   2F70               STRB     R7,[R5, #+0]
   4268                    Button(txt,45,85,15,15); 
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0F20               MOVS     R0,#+15
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   0300               MOVS     R3,R0
   \   0000010C   5522               MOVS     R2,#+85
   \   0000010E   2D21               MOVS     R1,#+45
   \   00000110   02A8               ADD      R0,SP,#+8
   \   00000112   ........           BL       Button
   \   00000116   02B0               ADD      SP,SP,#+8
   4269                    
   4270          
   4271                                txt[0]='R'; txt[1]='e'; txt[2]='g'; txt[3]=':'; txt[4]=' ';
   \   00000118   5220               MOVS     R0,#+82
   \   0000011A   2870               STRB     R0,[R5, #+0]
   \   0000011C   6520               MOVS     R0,#+101
   \   0000011E   6870               STRB     R0,[R5, #+1]
   \   00000120   6720               MOVS     R0,#+103
   \   00000122   A870               STRB     R0,[R5, #+2]
   \   00000124   3A20               MOVS     R0,#+58
   \   00000126   E870               STRB     R0,[R5, #+3]
   \   00000128   2020               MOVS     R0,#+32
   \   0000012A   2871               STRB     R0,[R5, #+4]
   4272                
   4273                    ind=CharToStr(Screen->Thermo.SensorReg, &(txt[4]), 2); //(char Value, char *Vstring, char ill);
   \   0000012C   0222               MOVS     R2,#+2
   \   0000012E   2900               MOVS     R1,R5
   \   00000130   091D               ADDS     R1,R1,#+4
   \   00000132   2079               LDRB     R0,[R4, #+4]
   \   00000134   ........           BL       CharToStr
   \   00000138   0200               MOVS     R2,R0
   4274                    txt[ind+4]=0;
   \   0000013A   2818               ADDS     R0,R5,R0
   \   0000013C   3100               MOVS     R1,R6
   \   0000013E   0171               STRB     R1,[R0, #+4]
   4275                    Label(txt,2,20, 72 ,ind+4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0800               MOVS     R0,R1
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   7F21               MOVS     R1,#+127
   \   00000148   0120               MOVS     R0,#+1
   \   0000014A   03B4               PUSH     {R0,R1}
   \   0000014C   1621               MOVS     R1,#+22
   \   0000014E   121D               ADDS     R2,R2,#+4
   \   00000150   1000               MOVS     R0,R2
   \   00000152   0006               LSLS     R0,R0,#+24
   \   00000154   000E               LSRS     R0,R0,#+24
   \   00000156   03B4               PUSH     {R0,R1}
   \   00000158   4823               MOVS     R3,#+72
   \   0000015A   1422               MOVS     R2,#+20
   \   0000015C   0221               MOVS     R1,#+2
   \   0000015E   06A8               ADD      R0,SP,#+24
   \   00000160   ........           BL       Label
   \   00000164   06B0               ADD      SP,SP,#+24
   4276                  
   4277                    txt[0]='<';txt[1]=0;
   \   00000166   3C20               MOVS     R0,#+60
   \   00000168   2870               STRB     R0,[R5, #+0]
   \   0000016A   3000               MOVS     R0,R6
   \   0000016C   6870               STRB     R0,[R5, #+1]
   4278                    Button(txt,3,69,15,15); 
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   0F20               MOVS     R0,#+15
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   0300               MOVS     R3,R0
   \   00000176   4522               MOVS     R2,#+69
   \   00000178   0321               MOVS     R1,#+3
   \   0000017A   02A8               ADD      R0,SP,#+8
   \   0000017C   ........           BL       Button
   \   00000180   02B0               ADD      SP,SP,#+8
   4279                    txt[0]='>';
   \   00000182   2F70               STRB     R7,[R5, #+0]
   4280                    Button(txt,45,69,15,15); 
   \   00000184   82B0               SUB      SP,SP,#+8
   \   00000186   0F20               MOVS     R0,#+15
   \   00000188   0090               STR      R0,[SP, #+0]
   \   0000018A   0300               MOVS     R3,R0
   \   0000018C   4522               MOVS     R2,#+69
   \   0000018E   2D21               MOVS     R1,#+45
   \   00000190   02A8               ADD      R0,SP,#+8
   \   00000192   ........           BL       Button
   \   00000196   02B0               ADD      SP,SP,#+8
   4281            
   4282                    
   4283                    
   4284                
   4285                    Label(Speech[g_leng].Wykonawca,2,5, 58 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   00000198   82B0               SUB      SP,SP,#+8
   \   0000019A   3000               MOVS     R0,R6
   \   0000019C   0090               STR      R0,[SP, #+0]
   \   0000019E   7F21               MOVS     R1,#+127
   \   000001A0   0120               MOVS     R0,#+1
   \   000001A2   03B4               PUSH     {R0,R1}
   \   000001A4   3421               MOVS     R1,#+52
   \   000001A6   0A20               MOVS     R0,#+10
   \   000001A8   03B4               PUSH     {R0,R1}
   \   000001AA   3A23               MOVS     R3,#+58
   \   000001AC   0522               MOVS     R2,#+5
   \   000001AE   0221               MOVS     R1,#+2
   \   000001B0   02B5               PUSH     {R1,LR}
   \   000001B2   9446               MOV      R12,R2
   \   000001B4   6149               LDR      R1,??ThermostatSet_Paint_0+0x1C  ;; 0x6f9
   \   000001B6   5D48               LDR      R0,??ThermostatSet_Paint_0+0xC  ;; g_leng
   \   000001B8   0068               LDR      R0,[R0, #+0]
   \   000001BA   5D4A               LDR      R2,??ThermostatSet_Paint_0+0x10  ;; 0xa14
   \   000001BC   5043               MULS     R0,R2,R0
   \   000001BE   5D4A               LDR      R2,??ThermostatSet_Paint_0+0x14  ;; Speech
   \   000001C0   1018               ADDS     R0,R2,R0
   \   000001C2   4018               ADDS     R0,R0,R1
   \   000001C4   6246               MOV      R2,R12
   \   000001C6   0099               LDR      R1,[SP, #0]
   \   000001C8   02B0               ADD      SP,SP,#+8
   \   000001CA   ........           BL       Label
   \   000001CE   06B0               ADD      SP,SP,#+24
   4286                    if (((Screen->Thermo.ActorNode)>=0) && (Screen->Thermo.ActorNode!=0xFF))
                                                                                           ^
Warning[Pa084]: pointless integer comparison with an out of range value
   \   000001D0   0020               MOVS     R0,#+0
   \   000001D2   2056               LDRSB    R0,[R4, R0]
   \   000001D4   0028               CMP      R0,#+0
   \   000001D6   2DD4               BMI      ??ThermostatSet_Paint_3
   \   000001D8   0020               MOVS     R0,#+0
   \   000001DA   2056               LDRSB    R0,[R4, R0]
   \   000001DC   FF28               CMP      R0,#+255
   \   000001DE   29D0               BEQ      ??ThermostatSet_Paint_3
   4287                    {
   4288                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' '; txt[4]=0;
   \   000001E0   4920               MOVS     R0,#+73
   \   000001E2   2870               STRB     R0,[R5, #+0]
   \   000001E4   6420               MOVS     R0,#+100
   \   000001E6   6870               STRB     R0,[R5, #+1]
   \   000001E8   3A20               MOVS     R0,#+58
   \   000001EA   A870               STRB     R0,[R5, #+2]
   \   000001EC   2020               MOVS     R0,#+32
   \   000001EE   E870               STRB     R0,[R5, #+3]
   \   000001F0   3000               MOVS     R0,R6
   \   000001F2   2871               STRB     R0,[R5, #+4]
   4289                      ind=CharToStr(Screen->Thermo.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   000001F4   0222               MOVS     R2,#+2
   \   000001F6   2900               MOVS     R1,R5
   \   000001F8   C91C               ADDS     R1,R1,#+3
   \   000001FA   2056               LDRSB    R0,[R4, R0]
   \   000001FC   0006               LSLS     R0,R0,#+24
   \   000001FE   000E               LSRS     R0,R0,#+24
   \   00000200   ........           BL       CharToStr
   \   00000204   0200               MOVS     R2,R0
   4290                      txt[ind+3]=0;
   \   00000206   2818               ADDS     R0,R5,R0
   \   00000208   3100               MOVS     R1,R6
   \   0000020A   C170               STRB     R1,[R0, #+3]
   4291                      Label(txt,2,20, 45 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000020C   82B0               SUB      SP,SP,#+8
   \   0000020E   0800               MOVS     R0,R1
   \   00000210   0090               STR      R0,[SP, #+0]
   \   00000212   7F21               MOVS     R1,#+127
   \   00000214   0120               MOVS     R0,#+1
   \   00000216   03B4               PUSH     {R0,R1}
   \   00000218   1621               MOVS     R1,#+22
   \   0000021A   D21C               ADDS     R2,R2,#+3
   \   0000021C   1000               MOVS     R0,R2
   \   0000021E   0006               LSLS     R0,R0,#+24
   \   00000220   000E               LSRS     R0,R0,#+24
   \   00000222   03B4               PUSH     {R0,R1}
   \   00000224   2D23               MOVS     R3,#+45
   \   00000226   1422               MOVS     R2,#+20
   \   00000228   0221               MOVS     R1,#+2
   \   0000022A   06A8               ADD      R0,SP,#+24
   \   0000022C   ........           BL       Label
   \   00000230   06B0               ADD      SP,SP,#+24
   \   00000232   0FE0               B        ??ThermostatSet_Paint_4
   4292                    }else{
   4293                      Label("Var",2,20, 45, 3,22,1,127,0);
   \                     ??ThermostatSet_Paint_3:
   \   00000234   82B0               SUB      SP,SP,#+8
   \   00000236   3000               MOVS     R0,R6
   \   00000238   0090               STR      R0,[SP, #+0]
   \   0000023A   7F21               MOVS     R1,#+127
   \   0000023C   0120               MOVS     R0,#+1
   \   0000023E   03B4               PUSH     {R0,R1}
   \   00000240   1621               MOVS     R1,#+22
   \   00000242   0320               MOVS     R0,#+3
   \   00000244   03B4               PUSH     {R0,R1}
   \   00000246   2D23               MOVS     R3,#+45
   \   00000248   1422               MOVS     R2,#+20
   \   0000024A   0221               MOVS     R1,#+2
   \   0000024C   3AA0               ADR      R0,??ThermostatSet_Paint_0+0x18  ;; "Var"
   \   0000024E   ........           BL       Label
   \   00000252   06B0               ADD      SP,SP,#+24
   4294                    }
   4295                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Paint_4:
   \   00000254   3C20               MOVS     R0,#+60
   \   00000256   2870               STRB     R0,[R5, #+0]
   \   00000258   3000               MOVS     R0,R6
   \   0000025A   6870               STRB     R0,[R5, #+1]
   4296                    Button(txt,3,42,15,15); 
   \   0000025C   82B0               SUB      SP,SP,#+8
   \   0000025E   0F20               MOVS     R0,#+15
   \   00000260   0090               STR      R0,[SP, #+0]
   \   00000262   0300               MOVS     R3,R0
   \   00000264   2A22               MOVS     R2,#+42
   \   00000266   0321               MOVS     R1,#+3
   \   00000268   02A8               ADD      R0,SP,#+8
   \   0000026A   ........           BL       Button
   \   0000026E   02B0               ADD      SP,SP,#+8
   4297                    txt[0]='>';
   \   00000270   2F70               STRB     R7,[R5, #+0]
   4298                    Button(txt,45,42,15,15); 
   \   00000272   82B0               SUB      SP,SP,#+8
   \   00000274   0F20               MOVS     R0,#+15
   \   00000276   0090               STR      R0,[SP, #+0]
   \   00000278   0300               MOVS     R3,R0
   \   0000027A   2A22               MOVS     R2,#+42
   \   0000027C   2D21               MOVS     R1,#+45
   \   0000027E   02A8               ADD      R0,SP,#+8
   \   00000280   ........           BL       Button
   \   00000284   02B0               ADD      SP,SP,#+8
   4299                    
   4300                    txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   00000286   5020               MOVS     R0,#+80
   \   00000288   2870               STRB     R0,[R5, #+0]
   \   0000028A   3A20               MOVS     R0,#+58
   \   0000028C   6870               STRB     R0,[R5, #+1]
   \   0000028E   2020               MOVS     R0,#+32
   \   00000290   A870               STRB     R0,[R5, #+2]
   4301                    ind=CharToStr(Screen->Thermo.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   00000292   0222               MOVS     R2,#+2
   \   00000294   2900               MOVS     R1,R5
   \   00000296   891C               ADDS     R1,R1,#+2
   \   00000298   6078               LDRB     R0,[R4, #+1]
   \   0000029A   ........           BL       CharToStr
   \   0000029E   0200               MOVS     R2,R0
   4302                    txt[ind+2]=0;
   \   000002A0   2818               ADDS     R0,R5,R0
   \   000002A2   3100               MOVS     R1,R6
   \   000002A4   8170               STRB     R1,[R0, #+2]
   4303                    Label(txt,2,20, 29 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002A6   82B0               SUB      SP,SP,#+8
   \   000002A8   0800               MOVS     R0,R1
   \   000002AA   0090               STR      R0,[SP, #+0]
   \   000002AC   7F21               MOVS     R1,#+127
   \   000002AE   0120               MOVS     R0,#+1
   \   000002B0   03B4               PUSH     {R0,R1}
   \   000002B2   1621               MOVS     R1,#+22
   \   000002B4   921C               ADDS     R2,R2,#+2
   \   000002B6   1000               MOVS     R0,R2
   \   000002B8   0006               LSLS     R0,R0,#+24
   \   000002BA   000E               LSRS     R0,R0,#+24
   \   000002BC   03B4               PUSH     {R0,R1}
   \   000002BE   1D23               MOVS     R3,#+29
   \   000002C0   1422               MOVS     R2,#+20
   \   000002C2   0221               MOVS     R1,#+2
   \   000002C4   06A8               ADD      R0,SP,#+24
   \   000002C6   ........           BL       Label
   \   000002CA   06B0               ADD      SP,SP,#+24
   4304                  
   4305                    txt[0]='<';txt[1]=0;
   \   000002CC   3C20               MOVS     R0,#+60
   \   000002CE   2870               STRB     R0,[R5, #+0]
   \   000002D0   6E70               STRB     R6,[R5, #+1]
   4306                    Button(txt,3,26,15,15); 
   \   000002D2   82B0               SUB      SP,SP,#+8
   \   000002D4   0F20               MOVS     R0,#+15
   \   000002D6   0090               STR      R0,[SP, #+0]
   \   000002D8   0300               MOVS     R3,R0
   \   000002DA   1A22               MOVS     R2,#+26
   \   000002DC   0321               MOVS     R1,#+3
   \   000002DE   02A8               ADD      R0,SP,#+8
   \   000002E0   ........           BL       Button
   \   000002E4   02B0               ADD      SP,SP,#+8
   4307                    txt[0]='>';
   \   000002E6   2F70               STRB     R7,[R5, #+0]
   4308                    Button(txt,45,26,15,15); 
   \   000002E8   82B0               SUB      SP,SP,#+8
   \   000002EA   0F20               MOVS     R0,#+15
   \   000002EC   0090               STR      R0,[SP, #+0]
   \   000002EE   0300               MOVS     R3,R0
   \   000002F0   1A22               MOVS     R2,#+26
   \   000002F2   2D21               MOVS     R1,#+45
   \   000002F4   02A8               ADD      R0,SP,#+8
   \   000002F6   ........           BL       Button
   \   000002FA   02B0               ADD      SP,SP,#+8
   4309          
   4310                    if (CurModifSheet==0) ZoneButon(Screen->Button[0].Text,4,3,56,22,(char*)ButtonName[10*CurModifSheet]); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000002FC   1048               LDR      R0,??ThermostatSet_Paint_0+0x20  ;; TextToChangeLength + 5
   \   000002FE   0078               LDRB     R0,[R0, #+0]
   \   00000300   0028               CMP      R0,#+0
   \   00000302   0AD1               BNE      ??ThermostatSet_Paint_5
   \   00000304   0F49               LDR      R1,??ThermostatSet_Paint_0+0x24  ;; `?<Constant {129, 0}>` + 1696
   \   00000306   1620               MOVS     R0,#+22
   \   00000308   03B4               PUSH     {R0,R1}
   \   0000030A   3823               MOVS     R3,#+56
   \   0000030C   0322               MOVS     R2,#+3
   \   0000030E   0421               MOVS     R1,#+4
   \   00000310   0498               LDR      R0,[SP, #+16]
   \   00000312   0B30               ADDS     R0,R0,#+11
   \   00000314   ........           BL       ZoneButon
   \   00000318   02B0               ADD      SP,SP,#+8
   4311             
   4312                 
   4313          }
   \                     ??ThermostatSet_Paint_5:
   \   0000031A   FEBC               POP      {R1-R7}
   \   0000031C   01BC               POP      {R0}
   \   0000031E   0047               BX       R0               ;; return
   \                     ??ThermostatSet_Paint_0:
   \   00000320   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000324   ........           DC32     `?<Constant {129, 0}>` + 4
   \   00000328   EA060000           DC32     0x6ea
   \   0000032C   ........           DC32     g_leng
   \   00000330   140A0000           DC32     0xa14
   \   00000334   ........           DC32     Speech
   \   00000338   56617200           DC8      "Var"
   \   0000033C   F9060000           DC32     0x6f9
   \   00000340   ........           DC32     TextToChangeLength + 5
   \   00000344   ........           DC32     `?<Constant {129, 0}>` + 1696
   4314          

   \                                 In section Debug.txt, align 4, keep-with-next
   4315          void ThermostatSet_Event(_Screen* Screen)
   4316          {
   \                     ThermostatSet_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4317            char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   2E00               MOVS     R6,R5
   \   00000008   984F               LDR      R7,??ThermostatSet_Event_0  ;; Y_down
   \   0000000A   2900               MOVS     R1,R5
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   3B5E               LDRSH    R3,[R7, R0]
   \   00000016   9648               LDR      R0,??ThermostatSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   9548               LDR      R0,??ThermostatSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   8C46               MOV      R12,R1
   \   00000022   9548               LDR      R0,??ThermostatSet_Event_0+0xC  ;; X_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   405E               LDRSH    R0,[R0, R1]
   \   00000028   6146               MOV      R1,R12
   4318                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   07D5               BPL      ??ThermostatSet_Event_1
   4319                  {
   4320                    MenuLevel=(MenuLevel/10);
   \   00000034   914D               LDR      R5,??ThermostatSet_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A86C               LDR      R0,[R5, #+72]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   A864               STR      R0,[R5, #+72]
   4321                    Repaint=1;
   \   00000040   0126               MOVS     R6,#+1
   \   00000042   0BE1               B        ??ThermostatSet_Event_2
   4322                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ThermostatSet_Event_1:
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   385E               LDRSH    R0,[R7, R0]
   \   00000048   7028               CMP      R0,#+112
   \   0000004A   05DB               BLT      ??ThermostatSet_Event_3
   \   0000004C   8948               LDR      R0,??ThermostatSet_Event_0+0x8  ;; Y_up
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   405E               LDRSH    R0,[R0, R1]
   \   00000052   7028               CMP      R0,#+112
   \   00000054   00DB               BLT      .+4
   \   00000056   01E1               B        ??ThermostatSet_Event_2
   \                     ??ThermostatSet_Event_3:
   \   00000058   6F46               MOV      R7,SP
   \   0000005A   3C20               MOVS     R0,#+60
   \   0000005C   3870               STRB     R0,[R7, #+0]
   4323                  { 
   4324                    
   4325                    char txt[5];         
   4326                    txt[0]='<';txt[1]=0;
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   7870               STRB     R0,[R7, #+1]
   4327                    if (Button(txt,3,85,15,15)==1) { if(Screen->Thermo.SensorNode>=0) Screen->Thermo.SensorNode--; else Screen->Thermo.SensorNode=NumberNeurons-1; Repaint=1;}  
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0F20               MOVS     R0,#+15
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   0300               MOVS     R3,R0
   \   0000006A   5522               MOVS     R2,#+85
   \   0000006C   0321               MOVS     R1,#+3
   \   0000006E   02A8               ADD      R0,SP,#+8
   \   00000070   ........           BL       Button
   \   00000074   02B0               ADD      SP,SP,#+8
   \   00000076   0128               CMP      R0,#+1
   \   00000078   0DD1               BNE      ??ThermostatSet_Event_4
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   8C30               ADDS     R0,R0,#+140
   \   0000007E   0321               MOVS     R1,#+3
   \   00000080   4156               LDRSB    R1,[R0, R1]
   \   00000082   0029               CMP      R1,#+0
   \   00000084   04D4               BMI      ??ThermostatSet_Event_5
   \   00000086   0321               MOVS     R1,#+3
   \   00000088   4156               LDRSB    R1,[R0, R1]
   \   0000008A   491E               SUBS     R1,R1,#+1
   \   0000008C   C170               STRB     R1,[R0, #+3]
   \   0000008E   01E0               B        ??ThermostatSet_Event_6
   \                     ??ThermostatSet_Event_5:
   \   00000090   2221               MOVS     R1,#+34
   \   00000092   C170               STRB     R1,[R0, #+3]
   \                     ??ThermostatSet_Event_6:
   \   00000094   0126               MOVS     R6,#+1
   \                     ??ThermostatSet_Event_4:
   \   00000096   3E20               MOVS     R0,#+62
   \   00000098   3870               STRB     R0,[R7, #+0]
   4328                    txt[0]='>';
   4329                    if (Button(txt,45,85,15,15)==1) { if(Screen->Thermo.SensorNode+1<NumberNeurons) Screen->Thermo.SensorNode++; else Screen->Thermo.SensorNode=-1; Repaint=1;} 
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0F20               MOVS     R0,#+15
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   0300               MOVS     R3,R0
   \   000000A2   5522               MOVS     R2,#+85
   \   000000A4   2D21               MOVS     R1,#+45
   \   000000A6   02A8               ADD      R0,SP,#+8
   \   000000A8   ........           BL       Button
   \   000000AC   02B0               ADD      SP,SP,#+8
   \   000000AE   0128               CMP      R0,#+1
   \   000000B0   0FD1               BNE      ??ThermostatSet_Event_7
   \   000000B2   2000               MOVS     R0,R4
   \   000000B4   8C30               ADDS     R0,R0,#+140
   \   000000B6   0321               MOVS     R1,#+3
   \   000000B8   4156               LDRSB    R1,[R0, R1]
   \   000000BA   491C               ADDS     R1,R1,#+1
   \   000000BC   2329               CMP      R1,#+35
   \   000000BE   04DA               BGE      ??ThermostatSet_Event_8
   \   000000C0   0321               MOVS     R1,#+3
   \   000000C2   4156               LDRSB    R1,[R0, R1]
   \   000000C4   491C               ADDS     R1,R1,#+1
   \   000000C6   C170               STRB     R1,[R0, #+3]
   \   000000C8   02E0               B        ??ThermostatSet_Event_9
   \                     ??ThermostatSet_Event_8:
   \   000000CA   0021               MOVS     R1,#+0
   \   000000CC   C943               MVNS     R1,R1            ;; #-1
   \   000000CE   C170               STRB     R1,[R0, #+3]
   \                     ??ThermostatSet_Event_9:
   \   000000D0   0126               MOVS     R6,#+1
   4330                   
   4331                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_7:
   \   000000D2   3C20               MOVS     R0,#+60
   \   000000D4   3870               STRB     R0,[R7, #+0]
   \   000000D6   2800               MOVS     R0,R5
   \   000000D8   7870               STRB     R0,[R7, #+1]
   4332                    if (Button(txt,3,69,15,15)==1) { if(Screen->Thermo.SensorReg>1) Screen->Thermo.SensorReg--; else Screen->Thermo.SensorReg=NumberReg-1; Repaint=1;}  
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0F20               MOVS     R0,#+15
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   0300               MOVS     R3,R0
   \   000000E2   4522               MOVS     R2,#+69
   \   000000E4   0321               MOVS     R1,#+3
   \   000000E6   02A8               ADD      R0,SP,#+8
   \   000000E8   ........           BL       Button
   \   000000EC   02B0               ADD      SP,SP,#+8
   \   000000EE   0128               CMP      R0,#+1
   \   000000F0   0AD1               BNE      ??ThermostatSet_Event_10
   \   000000F2   2000               MOVS     R0,R4
   \   000000F4   8C30               ADDS     R0,R0,#+140
   \   000000F6   0179               LDRB     R1,[R0, #+4]
   \   000000F8   0229               CMP      R1,#+2
   \   000000FA   02D3               BCC      ??ThermostatSet_Event_11
   \   000000FC   491E               SUBS     R1,R1,#+1
   \   000000FE   0171               STRB     R1,[R0, #+4]
   \   00000100   01E0               B        ??ThermostatSet_Event_12
   \                     ??ThermostatSet_Event_11:
   \   00000102   0921               MOVS     R1,#+9
   \   00000104   0171               STRB     R1,[R0, #+4]
   \                     ??ThermostatSet_Event_12:
   \   00000106   0126               MOVS     R6,#+1
   4333                    txt[0]='>';
   \                     ??ThermostatSet_Event_10:
   \   00000108   3E20               MOVS     R0,#+62
   \   0000010A   3870               STRB     R0,[R7, #+0]
   4334                    if (Button(txt,45,69,15,15)==1) { if(Screen->Thermo.SensorReg+1<NumberReg) Screen->Thermo.SensorReg++; else Screen->Thermo.SensorReg=1; Repaint=1;} 
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   0F20               MOVS     R0,#+15
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   0300               MOVS     R3,R0
   \   00000114   4522               MOVS     R2,#+69
   \   00000116   2D21               MOVS     R1,#+45
   \   00000118   02A8               ADD      R0,SP,#+8
   \   0000011A   ........           BL       Button
   \   0000011E   02B0               ADD      SP,SP,#+8
   \   00000120   0128               CMP      R0,#+1
   \   00000122   0ED1               BNE      ??ThermostatSet_Event_13
   \   00000124   2000               MOVS     R0,R4
   \   00000126   8C30               ADDS     R0,R0,#+140
   \   00000128   0179               LDRB     R1,[R0, #+4]
   \   0000012A   491C               ADDS     R1,R1,#+1
   \   0000012C   0904               LSLS     R1,R1,#+16
   \   0000012E   090C               LSRS     R1,R1,#+16
   \   00000130   0A29               CMP      R1,#+10
   \   00000132   03D2               BCS      ??ThermostatSet_Event_14
   \   00000134   0179               LDRB     R1,[R0, #+4]
   \   00000136   491C               ADDS     R1,R1,#+1
   \   00000138   0171               STRB     R1,[R0, #+4]
   \   0000013A   01E0               B        ??ThermostatSet_Event_15
   \                     ??ThermostatSet_Event_14:
   \   0000013C   0121               MOVS     R1,#+1
   \   0000013E   0171               STRB     R1,[R0, #+4]
   \                     ??ThermostatSet_Event_15:
   \   00000140   0126               MOVS     R6,#+1
   4335                   
   4336                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_13:
   \   00000142   3C20               MOVS     R0,#+60
   \   00000144   3870               STRB     R0,[R7, #+0]
   \   00000146   2800               MOVS     R0,R5
   \   00000148   7870               STRB     R0,[R7, #+1]
   4337                    if (Button(txt,3,42,15,15)==1) { if(Screen->Thermo.ActorNode>=0) Screen->Thermo.ActorNode--; else Screen->Thermo.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   0F20               MOVS     R0,#+15
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   0300               MOVS     R3,R0
   \   00000152   2A22               MOVS     R2,#+42
   \   00000154   0321               MOVS     R1,#+3
   \   00000156   02A8               ADD      R0,SP,#+8
   \   00000158   ........           BL       Button
   \   0000015C   02B0               ADD      SP,SP,#+8
   \   0000015E   0128               CMP      R0,#+1
   \   00000160   0DD1               BNE      ??ThermostatSet_Event_16
   \   00000162   2000               MOVS     R0,R4
   \   00000164   8C30               ADDS     R0,R0,#+140
   \   00000166   0021               MOVS     R1,#+0
   \   00000168   4156               LDRSB    R1,[R0, R1]
   \   0000016A   0029               CMP      R1,#+0
   \   0000016C   04D4               BMI      ??ThermostatSet_Event_17
   \   0000016E   0021               MOVS     R1,#+0
   \   00000170   4156               LDRSB    R1,[R0, R1]
   \   00000172   491E               SUBS     R1,R1,#+1
   \   00000174   0170               STRB     R1,[R0, #+0]
   \   00000176   01E0               B        ??ThermostatSet_Event_18
   \                     ??ThermostatSet_Event_17:
   \   00000178   2221               MOVS     R1,#+34
   \   0000017A   0170               STRB     R1,[R0, #+0]
   \                     ??ThermostatSet_Event_18:
   \   0000017C   0126               MOVS     R6,#+1
   4338                    txt[0]='>';
   \                     ??ThermostatSet_Event_16:
   \   0000017E   3E20               MOVS     R0,#+62
   \   00000180   3870               STRB     R0,[R7, #+0]
   4339                    if (Button(txt,45,42,15,15)==1) { if(Screen->Thermo.ActorNode+1<NumberNeurons) Screen->Thermo.ActorNode++; else Screen->Thermo.ActorNode=-1; Repaint=1;} 
   \   00000182   82B0               SUB      SP,SP,#+8
   \   00000184   0F20               MOVS     R0,#+15
   \   00000186   0090               STR      R0,[SP, #+0]
   \   00000188   0300               MOVS     R3,R0
   \   0000018A   2A22               MOVS     R2,#+42
   \   0000018C   2D21               MOVS     R1,#+45
   \   0000018E   02A8               ADD      R0,SP,#+8
   \   00000190   ........           BL       Button
   \   00000194   02B0               ADD      SP,SP,#+8
   \   00000196   0128               CMP      R0,#+1
   \   00000198   0FD1               BNE      ??ThermostatSet_Event_19
   \   0000019A   2000               MOVS     R0,R4
   \   0000019C   8C30               ADDS     R0,R0,#+140
   \   0000019E   0021               MOVS     R1,#+0
   \   000001A0   4156               LDRSB    R1,[R0, R1]
   \   000001A2   491C               ADDS     R1,R1,#+1
   \   000001A4   2329               CMP      R1,#+35
   \   000001A6   04DA               BGE      ??ThermostatSet_Event_20
   \   000001A8   0021               MOVS     R1,#+0
   \   000001AA   4156               LDRSB    R1,[R0, R1]
   \   000001AC   491C               ADDS     R1,R1,#+1
   \   000001AE   0170               STRB     R1,[R0, #+0]
   \   000001B0   02E0               B        ??ThermostatSet_Event_21
   \                     ??ThermostatSet_Event_20:
   \   000001B2   0021               MOVS     R1,#+0
   \   000001B4   C943               MVNS     R1,R1            ;; #-1
   \   000001B6   0170               STRB     R1,[R0, #+0]
   \                     ??ThermostatSet_Event_21:
   \   000001B8   0126               MOVS     R6,#+1
   4340                   
   4341                    txt[0]='<';txt[1]=0;
   \                     ??ThermostatSet_Event_19:
   \   000001BA   3C20               MOVS     R0,#+60
   \   000001BC   3870               STRB     R0,[R7, #+0]
   \   000001BE   2800               MOVS     R0,R5
   \   000001C0   7870               STRB     R0,[R7, #+1]
   4342                    if (Button(txt,3,26,15,15)==1) { if(Screen->Thermo.ActorPort-1>0) Screen->Thermo.ActorPort--; else Screen->Thermo.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   000001C2   82B0               SUB      SP,SP,#+8
   \   000001C4   0F20               MOVS     R0,#+15
   \   000001C6   0090               STR      R0,[SP, #+0]
   \   000001C8   0300               MOVS     R3,R0
   \   000001CA   1A22               MOVS     R2,#+26
   \   000001CC   0321               MOVS     R1,#+3
   \   000001CE   02A8               ADD      R0,SP,#+8
   \   000001D0   ........           BL       Button
   \   000001D4   02B0               ADD      SP,SP,#+8
   \   000001D6   0128               CMP      R0,#+1
   \   000001D8   0CD1               BNE      ??ThermostatSet_Event_22
   \   000001DA   2000               MOVS     R0,R4
   \   000001DC   8C30               ADDS     R0,R0,#+140
   \   000001DE   4178               LDRB     R1,[R0, #+1]
   \   000001E0   491E               SUBS     R1,R1,#+1
   \   000001E2   0129               CMP      R1,#+1
   \   000001E4   03DB               BLT      ??ThermostatSet_Event_23
   \   000001E6   4178               LDRB     R1,[R0, #+1]
   \   000001E8   491E               SUBS     R1,R1,#+1
   \   000001EA   4170               STRB     R1,[R0, #+1]
   \   000001EC   01E0               B        ??ThermostatSet_Event_24
   \                     ??ThermostatSet_Event_23:
   \   000001EE   0F21               MOVS     R1,#+15
   \   000001F0   4170               STRB     R1,[R0, #+1]
   \                     ??ThermostatSet_Event_24:
   \   000001F2   0126               MOVS     R6,#+1
   4343                    txt[0]='>';
   \                     ??ThermostatSet_Event_22:
   \   000001F4   3E20               MOVS     R0,#+62
   \   000001F6   3870               STRB     R0,[R7, #+0]
   4344                    if (Button(txt,45,26,15,15)==1) { if(Screen->Thermo.ActorPort+1<NumberNeuronsPort) Screen->Thermo.ActorPort++; else Screen->Thermo.ActorPort=0; Repaint=1;} 
   \   000001F8   82B0               SUB      SP,SP,#+8
   \   000001FA   0F20               MOVS     R0,#+15
   \   000001FC   0090               STR      R0,[SP, #+0]
   \   000001FE   0300               MOVS     R3,R0
   \   00000200   1A22               MOVS     R2,#+26
   \   00000202   2D21               MOVS     R1,#+45
   \   00000204   02A8               ADD      R0,SP,#+8
   \   00000206   ........           BL       Button
   \   0000020A   02B0               ADD      SP,SP,#+8
   \   0000020C   0128               CMP      R0,#+1
   \   0000020E   0DD1               BNE      ??ThermostatSet_Event_25
   \   00000210   2000               MOVS     R0,R4
   \   00000212   8C30               ADDS     R0,R0,#+140
   \   00000214   4178               LDRB     R1,[R0, #+1]
   \   00000216   491C               ADDS     R1,R1,#+1
   \   00000218   0904               LSLS     R1,R1,#+16
   \   0000021A   090C               LSRS     R1,R1,#+16
   \   0000021C   1029               CMP      R1,#+16
   \   0000021E   03D2               BCS      ??ThermostatSet_Event_26
   \   00000220   4178               LDRB     R1,[R0, #+1]
   \   00000222   491C               ADDS     R1,R1,#+1
   \   00000224   4170               STRB     R1,[R0, #+1]
   \   00000226   00E0               B        ??ThermostatSet_Event_27
   \                     ??ThermostatSet_Event_26:
   \   00000228   4570               STRB     R5,[R0, #+1]
   \                     ??ThermostatSet_Event_27:
   \   0000022A   0126               MOVS     R6,#+1
   4345                        
   4346                    
   4347                    if (CurModifSheet==0) 
   \                     ??ThermostatSet_Event_25:
   \   0000022C   134D               LDR      R5,??ThermostatSet_Event_0+0x10  ;; TextToChangeLength
   \   0000022E   6879               LDRB     R0,[R5, #+5]
   \   00000230   0028               CMP      R0,#+0
   \   00000232   13D1               BNE      ??ThermostatSet_Event_2
   4348                    if (
   4349                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   4350                            4,3,56,22,
   4351                            2)==1
   4352                           )
   \   00000234   0221               MOVS     R1,#+2
   \   00000236   1620               MOVS     R0,#+22
   \   00000238   03B4               PUSH     {R0,R1}
   \   0000023A   3823               MOVS     R3,#+56
   \   0000023C   0322               MOVS     R2,#+3
   \   0000023E   0421               MOVS     R1,#+4
   \   00000240   0020               MOVS     R0,#+0
   \   00000242   ........           BL       Zone
   \   00000246   02B0               ADD      SP,SP,#+8
   \   00000248   0128               CMP      R0,#+1
   \   0000024A   07D1               BNE      ??ThermostatSet_Event_2
   4353                           {
   4354                              ButtonToChange=&(Screen->Button[0]);
   \   0000024C   0B34               ADDS     R4,R4,#+11
   \   0000024E   6C65               STR      R4,[R5, #+84]
   4355                              MenuLevel=(MenuLevel*10+4); Repaint=1;
   \   00000250   A86C               LDR      R0,[R5, #+72]
   \   00000252   0A21               MOVS     R1,#+10
   \   00000254   4843               MULS     R0,R1,R0
   \   00000256   001D               ADDS     R0,R0,#+4
   \   00000258   A864               STR      R0,[R5, #+72]
   \   0000025A   0126               MOVS     R6,#+1
   4356                           }
   4357                    
   4358                    
   4359                    
   4360                  }
   4361                  if (Repaint) MenuPaint();
   \                     ??ThermostatSet_Event_2:
   \   0000025C   002E               CMP      R6,#+0
   \   0000025E   01D0               BEQ      ??ThermostatSet_Event_28
   \   00000260   ........           BL       MenuPaint
   4362          }
   \                     ??ThermostatSet_Event_28:
   \   00000264   FEBC               POP      {R1-R7}
   \   00000266   01BC               POP      {R0}
   \   00000268   0047               BX       R0               ;; return
   \   0000026A   C046               Nop      
   \                     ??ThermostatSet_Event_0:
   \   0000026C   ........           DC32     Y_down
   \   00000270   ........           DC32     X_down
   \   00000274   ........           DC32     Y_up
   \   00000278   ........           DC32     X_up
   \   0000027C   ........           DC32     TextToChangeLength
   4363          
   4364          
   4365          
   4366          
   4367          
   4368          
   4369          

   \                                 In section Debug.txt, align 4, keep-with-next
   4370          void ScreenTimetableSet_Paint(_Screen* Screen)
   4371          {          
   \                     ScreenTimetableSet_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   \   00000004   0500               MOVS     R5,R0
   4372                 //List_Paint(Speech[g_leng].Opcje,2,15,y,0,3,Speech[g_leng].DodajWiersz, Speech[g_leng].UsunWiersz, 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   4373                 List_Paint("Actor",0,108,0,0,3,0,0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000006   B14C               LDR      R4,??ScreenTimetableSet_Paint_0  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0321               MOVS     R1,#+3
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0100               MOVS     R1,R0
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   6430               ADDS     R0,R0,#+100
   \   00000022   ........           BL       List_Paint
   \   00000026   0AB0               ADD      SP,SP,#+40
   4374                 
   4375                 char txt[8];
   4376                 
   4377          
   4378          
   4379                    char ind=0;
   4380                    
   4381                    Label(Speech[g_leng].Wykonawca,2,5, 88 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   00000028   82B0               SUB      SP,SP,#+8
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   0090               STR      R0,[SP, #+0]
   \   0000002E   7F21               MOVS     R1,#+127
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   3421               MOVS     R1,#+52
   \   00000036   0A20               MOVS     R0,#+10
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   5823               MOVS     R3,#+88
   \   0000003C   0522               MOVS     R2,#+5
   \   0000003E   0221               MOVS     R1,#+2
   \   00000040   A348               LDR      R0,??ScreenTimetableSet_Paint_0+0x4  ;; 0x6f9
   \   00000042   A44E               LDR      R6,??ScreenTimetableSet_Paint_0+0x8  ;; g_leng
   \   00000044   3668               LDR      R6,[R6, #+0]
   \   00000046   A44F               LDR      R7,??ScreenTimetableSet_Paint_0+0xC  ;; 0xa14
   \   00000048   7E43               MULS     R6,R7,R6
   \   0000004A   A44F               LDR      R7,??ScreenTimetableSet_Paint_0+0x10  ;; Speech
   \   0000004C   BE19               ADDS     R6,R7,R6
   \   0000004E   3018               ADDS     R0,R6,R0
   \   00000050   ........           BL       Label
   \   00000054   06B0               ADD      SP,SP,#+24
   4382                   
   4383                    if (Screen->Timetable.ActorNode>=0)
   \   00000056   8C35               ADDS     R5,R5,#+140
   \   00000058   0020               MOVS     R0,#+0
   \   0000005A   2856               LDRSB    R0,[R5, R0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   26D4               BMI      ??ScreenTimetableSet_Paint_1
   4384                    {
   4385                      txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   00000060   6E46               MOV      R6,SP
   \   00000062   4920               MOVS     R0,#+73
   \   00000064   3070               STRB     R0,[R6, #+0]
   \   00000066   6420               MOVS     R0,#+100
   \   00000068   7070               STRB     R0,[R6, #+1]
   \   0000006A   3A20               MOVS     R0,#+58
   \   0000006C   B070               STRB     R0,[R6, #+2]
   \   0000006E   2020               MOVS     R0,#+32
   \   00000070   F070               STRB     R0,[R6, #+3]
   4386                      ind=CharToStr(Screen->Timetable.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000072   0222               MOVS     R2,#+2
   \   00000074   F61C               ADDS     R6,R6,#+3
   \   00000076   3100               MOVS     R1,R6
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   2856               LDRSB    R0,[R5, R0]
   \   0000007C   0006               LSLS     R0,R0,#+24
   \   0000007E   000E               LSRS     R0,R0,#+24
   \   00000080   ........           BL       CharToStr
   \   00000084   0200               MOVS     R2,R0
   4387                      Label(txt,2,20, 75 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000086   82B0               SUB      SP,SP,#+8
   \   00000088   0020               MOVS     R0,#+0
   \   0000008A   0090               STR      R0,[SP, #+0]
   \   0000008C   7F21               MOVS     R1,#+127
   \   0000008E   0120               MOVS     R0,#+1
   \   00000090   03B4               PUSH     {R0,R1}
   \   00000092   1621               MOVS     R1,#+22
   \   00000094   D21C               ADDS     R2,R2,#+3
   \   00000096   1000               MOVS     R0,R2
   \   00000098   0006               LSLS     R0,R0,#+24
   \   0000009A   000E               LSRS     R0,R0,#+24
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   4B23               MOVS     R3,#+75
   \   000000A0   1422               MOVS     R2,#+20
   \   000000A2   0221               MOVS     R1,#+2
   \   000000A4   06A8               ADD      R0,SP,#+24
   \   000000A6   ........           BL       Label
   \   000000AA   06B0               ADD      SP,SP,#+24
   \   000000AC   0FE0               B        ??ScreenTimetableSet_Paint_2
   4388                    }else{
   4389                      Label("Var",2,20, 75 ,ind+3,22,1,127,0);  
   \                     ??ScreenTimetableSet_Paint_1:
   \   000000AE   82B0               SUB      SP,SP,#+8
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   7F21               MOVS     R1,#+127
   \   000000B6   0120               MOVS     R0,#+1
   \   000000B8   03B4               PUSH     {R0,R1}
   \   000000BA   1621               MOVS     R1,#+22
   \   000000BC   0320               MOVS     R0,#+3
   \   000000BE   03B4               PUSH     {R0,R1}
   \   000000C0   4B23               MOVS     R3,#+75
   \   000000C2   1422               MOVS     R2,#+20
   \   000000C4   0221               MOVS     R1,#+2
   \   000000C6   86A0               ADR      R0,??ScreenTimetableSet_Paint_0+0x14  ;; "Var"
   \   000000C8   ........           BL       Label
   \   000000CC   06B0               ADD      SP,SP,#+24
   \                     ??ScreenTimetableSet_Paint_2:
   \   000000CE   6E46               MOV      R6,SP
   \   000000D0   3C20               MOVS     R0,#+60
   \   000000D2   3070               STRB     R0,[R6, #+0]
   4390                    }
   4391                    txt[0]='<';txt[1]=0;
   \   000000D4   0027               MOVS     R7,#+0
   \   000000D6   3800               MOVS     R0,R7
   \   000000D8   7070               STRB     R0,[R6, #+1]
   4392                    Button(txt,3,72,15,15); 
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0F20               MOVS     R0,#+15
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   0300               MOVS     R3,R0
   \   000000E2   4822               MOVS     R2,#+72
   \   000000E4   0321               MOVS     R1,#+3
   \   000000E6   02A8               ADD      R0,SP,#+8
   \   000000E8   ........           BL       Button
   \   000000EC   02B0               ADD      SP,SP,#+8
   \   000000EE   3E20               MOVS     R0,#+62
   \   000000F0   3070               STRB     R0,[R6, #+0]
   4393                    txt[0]='>';
   4394                    Button(txt,45,72,15,15); 
   \   000000F2   82B0               SUB      SP,SP,#+8
   \   000000F4   0F20               MOVS     R0,#+15
   \   000000F6   0090               STR      R0,[SP, #+0]
   \   000000F8   0300               MOVS     R3,R0
   \   000000FA   4822               MOVS     R2,#+72
   \   000000FC   2D21               MOVS     R1,#+45
   \   000000FE   02A8               ADD      R0,SP,#+8
   \   00000100   ........           BL       Button
   \   00000104   02B0               ADD      SP,SP,#+8
   4395                    
   4396                    if (Screen->Timetable.ActorNode>=0)
   \   00000106   0020               MOVS     R0,#+0
   \   00000108   2856               LDRSB    R0,[R5, R0]
   \   0000010A   0028               CMP      R0,#+0
   \   0000010C   0ED4               BMI      ??ScreenTimetableSet_Paint_3
   4397                    {
   4398                      txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   0000010E   5020               MOVS     R0,#+80
   \   00000110   3070               STRB     R0,[R6, #+0]
   \   00000112   3A20               MOVS     R0,#+58
   \   00000114   7070               STRB     R0,[R6, #+1]
   \   00000116   2020               MOVS     R0,#+32
   \   00000118   B070               STRB     R0,[R6, #+2]
   4399                       ind=CharToStr(Screen->Timetable.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000011A   0222               MOVS     R2,#+2
   \   0000011C   3100               MOVS     R1,R6
   \   0000011E   891C               ADDS     R1,R1,#+2
   \   00000120   6878               LDRB     R0,[R5, #+1]
   \   00000122   ........           BL       CharToStr
   \   00000126   0200               MOVS     R2,R0
   4400                       ind+=2;
   \   00000128   921C               ADDS     R2,R2,#+2
   \   0000012A   0FE0               B        ??ScreenTimetableSet_Paint_4
   4401                    }else{
   4402                      txt[0]='N'; txt[1]='r'; txt[2]=':'; txt[3]=' '; 
   \                     ??ScreenTimetableSet_Paint_3:
   \   0000012C   4E20               MOVS     R0,#+78
   \   0000012E   3070               STRB     R0,[R6, #+0]
   \   00000130   7220               MOVS     R0,#+114
   \   00000132   7070               STRB     R0,[R6, #+1]
   \   00000134   3A20               MOVS     R0,#+58
   \   00000136   B070               STRB     R0,[R6, #+2]
   \   00000138   2020               MOVS     R0,#+32
   \   0000013A   F070               STRB     R0,[R6, #+3]
   4403                       ind=CharToStr(Screen->Timetable.ActorPort, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   0000013C   0222               MOVS     R2,#+2
   \   0000013E   3100               MOVS     R1,R6
   \   00000140   C91C               ADDS     R1,R1,#+3
   \   00000142   6878               LDRB     R0,[R5, #+1]
   \   00000144   ........           BL       CharToStr
   \   00000148   0200               MOVS     R2,R0
   4404                       ind+=3;
   \   0000014A   D21C               ADDS     R2,R2,#+3
   4405                    }
   4406                    
   4407                   
   4408                   
   4409                    Label(txt,2,20, 55 ,ind,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenTimetableSet_Paint_4:
   \   0000014C   82B0               SUB      SP,SP,#+8
   \   0000014E   3800               MOVS     R0,R7
   \   00000150   0090               STR      R0,[SP, #+0]
   \   00000152   7F21               MOVS     R1,#+127
   \   00000154   0120               MOVS     R0,#+1
   \   00000156   03B4               PUSH     {R0,R1}
   \   00000158   1621               MOVS     R1,#+22
   \   0000015A   1000               MOVS     R0,R2
   \   0000015C   0006               LSLS     R0,R0,#+24
   \   0000015E   000E               LSRS     R0,R0,#+24
   \   00000160   03B4               PUSH     {R0,R1}
   \   00000162   3723               MOVS     R3,#+55
   \   00000164   1422               MOVS     R2,#+20
   \   00000166   0221               MOVS     R1,#+2
   \   00000168   06A8               ADD      R0,SP,#+24
   \   0000016A   ........           BL       Label
   \   0000016E   06B0               ADD      SP,SP,#+24
   4410                
   4411                    
   4412                    
   4413                    txt[0]='<';txt[1]=0;
   \   00000170   3C20               MOVS     R0,#+60
   \   00000172   3070               STRB     R0,[R6, #+0]
   \   00000174   3800               MOVS     R0,R7
   \   00000176   7070               STRB     R0,[R6, #+1]
   4414                    Button(txt,3,52,15,15); 
   \   00000178   82B0               SUB      SP,SP,#+8
   \   0000017A   0F20               MOVS     R0,#+15
   \   0000017C   0090               STR      R0,[SP, #+0]
   \   0000017E   0300               MOVS     R3,R0
   \   00000180   3422               MOVS     R2,#+52
   \   00000182   0321               MOVS     R1,#+3
   \   00000184   02A8               ADD      R0,SP,#+8
   \   00000186   ........           BL       Button
   \   0000018A   02B0               ADD      SP,SP,#+8
   4415                    txt[0]='>';
   \   0000018C   3E20               MOVS     R0,#+62
   \   0000018E   3070               STRB     R0,[R6, #+0]
   4416                    Button(txt,45,52,15,15); 
   \   00000190   82B0               SUB      SP,SP,#+8
   \   00000192   0F20               MOVS     R0,#+15
   \   00000194   0090               STR      R0,[SP, #+0]
   \   00000196   0300               MOVS     R3,R0
   \   00000198   3422               MOVS     R2,#+52
   \   0000019A   2D21               MOVS     R1,#+45
   \   0000019C   02A8               ADD      R0,SP,#+8
   \   0000019E   ........           BL       Button
   \   000001A2   02B0               ADD      SP,SP,#+8
   4417          
   4418                   
   4419                    txt[0]='<';txt[1]=0;
   \   000001A4   3C20               MOVS     R0,#+60
   \   000001A6   3070               STRB     R0,[R6, #+0]
   \   000001A8   3800               MOVS     R0,R7
   \   000001AA   7070               STRB     R0,[R6, #+1]
   4420                    Button(txt,3,24,15,15); 
   \   000001AC   82B0               SUB      SP,SP,#+8
   \   000001AE   0F20               MOVS     R0,#+15
   \   000001B0   0090               STR      R0,[SP, #+0]
   \   000001B2   0300               MOVS     R3,R0
   \   000001B4   1822               MOVS     R2,#+24
   \   000001B6   0321               MOVS     R1,#+3
   \   000001B8   02A8               ADD      R0,SP,#+8
   \   000001BA   ........           BL       Button
   \   000001BE   02B0               ADD      SP,SP,#+8
   4421                    txt[0]='>';
   \   000001C0   3E20               MOVS     R0,#+62
   \   000001C2   3070               STRB     R0,[R6, #+0]
   4422                    Button(txt,45,24,15,15); 
   \   000001C4   82B0               SUB      SP,SP,#+8
   \   000001C6   0F20               MOVS     R0,#+15
   \   000001C8   0090               STR      R0,[SP, #+0]
   \   000001CA   0300               MOVS     R3,R0
   \   000001CC   1822               MOVS     R2,#+24
   \   000001CE   2D21               MOVS     R1,#+45
   \   000001D0   02A8               ADD      R0,SP,#+8
   \   000001D2   ........           BL       Button
   \   000001D6   02B0               ADD      SP,SP,#+8
   4423                 
   4424                    switch (Screen->Timetable.ActionType)
   \   000001D8   A878               LDRB     R0,[R5, #+2]
   \   000001DA   0028               CMP      R0,#+0
   \   000001DC   04D0               BEQ      ??ScreenTimetableSet_Paint_5
   \   000001DE   0128               CMP      R0,#+1
   \   000001E0   20D0               BEQ      ??ScreenTimetableSet_Paint_6
   \   000001E2   0228               CMP      R0,#+2
   \   000001E4   2AD0               BEQ      ??ScreenTimetableSet_Paint_7
   \   000001E6   34E0               B        ??ScreenTimetableSet_Paint_8
   4425                    {
   4426                      case 0: CopyToCanvasPoint((char*)ProcSet_graf, 21, 27,24,9); 
   \                     ??ScreenTimetableSet_Paint_5:
   \   000001E8   82B0               SUB      SP,SP,#+8
   \   000001EA   0920               MOVS     R0,#+9
   \   000001EC   0090               STR      R0,[SP, #+0]
   \   000001EE   1823               MOVS     R3,#+24
   \   000001F0   1B22               MOVS     R2,#+27
   \   000001F2   1521               MOVS     R1,#+21
   \   000001F4   2000               MOVS     R0,R4
   \   000001F6   8C30               ADDS     R0,R0,#+140
   \   000001F8   ........           BL       CopyToCanvasPoint
   \   000001FC   02B0               ADD      SP,SP,#+8
   4427                                txt[0]='Q'; txt[1]=0;
   \   000001FE   5120               MOVS     R0,#+81
   \   00000200   3070               STRB     R0,[R6, #+0]
   \   00000202   7770               STRB     R7,[R6, #+1]
   4428                                Label(txt,2,28,27,1,6,0,120,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000204   82B0               SUB      SP,SP,#+8
   \   00000206   3800               MOVS     R0,R7
   \   00000208   0090               STR      R0,[SP, #+0]
   \   0000020A   7821               MOVS     R1,#+120
   \   0000020C   03B4               PUSH     {R0,R1}
   \   0000020E   0621               MOVS     R1,#+6
   \   00000210   0120               MOVS     R0,#+1
   \   00000212   03B4               PUSH     {R0,R1}
   \   00000214   1B23               MOVS     R3,#+27
   \   00000216   1C22               MOVS     R2,#+28
   \   00000218   0221               MOVS     R1,#+2
   \   0000021A   06A8               ADD      R0,SP,#+24
   \   0000021C   ........           BL       Label
   \   00000220   06B0               ADD      SP,SP,#+24
   \   00000222   16E0               B        ??ScreenTimetableSet_Paint_8
   4429          
   4430                      
   4431                                break; //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght); 
   4432                      case 1: CopyToCanvasPoint((char*)ProcWOUTS_graf, 21, 27,24,9); break;
   \                     ??ScreenTimetableSet_Paint_6:
   \   00000224   82B0               SUB      SP,SP,#+8
   \   00000226   0920               MOVS     R0,#+9
   \   00000228   0090               STR      R0,[SP, #+0]
   \   0000022A   1823               MOVS     R3,#+24
   \   0000022C   1B22               MOVS     R2,#+27
   \   0000022E   1521               MOVS     R1,#+21
   \   00000230   2000               MOVS     R0,R4
   \   00000232   A830               ADDS     R0,R0,#+168
   \   00000234   ........           BL       CopyToCanvasPoint
   \   00000238   02B0               ADD      SP,SP,#+8
   \   0000023A   0AE0               B        ??ScreenTimetableSet_Paint_8
   4433                      case 2: CopyToCanvasPoint((char*)ProcWOUTR_graf, 21, 27,24,9); break;
   \                     ??ScreenTimetableSet_Paint_7:
   \   0000023C   82B0               SUB      SP,SP,#+8
   \   0000023E   0920               MOVS     R0,#+9
   \   00000240   0090               STR      R0,[SP, #+0]
   \   00000242   1823               MOVS     R3,#+24
   \   00000244   1B22               MOVS     R2,#+27
   \   00000246   1521               MOVS     R1,#+21
   \   00000248   2000               MOVS     R0,R4
   \   0000024A   C430               ADDS     R0,R0,#+196
   \   0000024C   ........           BL       CopyToCanvasPoint
   \   00000250   02B0               ADD      SP,SP,#+8
   4434                    }
   4435                    
   4436          
   4437                      
   4438                    
   4439                    Label( "-1h",1,27,6,5,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenTimetableSet_Paint_8:
   \   00000252   82B0               SUB      SP,SP,#+8
   \   00000254   3800               MOVS     R0,R7
   \   00000256   0090               STR      R0,[SP, #+0]
   \   00000258   7F21               MOVS     R1,#+127
   \   0000025A   0120               MOVS     R0,#+1
   \   0000025C   03B4               PUSH     {R0,R1}
   \   0000025E   2121               MOVS     R1,#+33
   \   00000260   0520               MOVS     R0,#+5
   \   00000262   03B4               PUSH     {R0,R1}
   \   00000264   0623               MOVS     R3,#+6
   \   00000266   1B22               MOVS     R2,#+27
   \   00000268   0121               MOVS     R1,#+1
   \   0000026A   1EA0               ADR      R0,??ScreenTimetableSet_Paint_0+0x18  ;; "-1h"
   \   0000026C   ........           BL       Label
   \   00000270   06B0               ADD      SP,SP,#+24
   4440                    H_line(30,4,12,1); 
   \   00000272   0123               MOVS     R3,#+1
   \   00000274   0C22               MOVS     R2,#+12
   \   00000276   0421               MOVS     R1,#+4
   \   00000278   1E20               MOVS     R0,#+30
   \   0000027A   ........           BL       H_line
   4441                    H_line(30,16,12,1); 
   \   0000027E   0123               MOVS     R3,#+1
   \   00000280   0C22               MOVS     R2,#+12
   \   00000282   1021               MOVS     R1,#+16
   \   00000284   1E20               MOVS     R0,#+30
   \   00000286   ........           BL       H_line
   4442                    V_line(30,4,12,1);
   \   0000028A   0123               MOVS     R3,#+1
   \   0000028C   0C22               MOVS     R2,#+12
   \   0000028E   0421               MOVS     R1,#+4
   \   00000290   1E20               MOVS     R0,#+30
   \   00000292   ........           BL       V_line
   4443                    V_line(42,4,13,1); 
   \   00000296   0123               MOVS     R3,#+1
   \   00000298   0D22               MOVS     R2,#+13
   \   0000029A   0421               MOVS     R1,#+4
   \   0000029C   2A20               MOVS     R0,#+42
   \   0000029E   ........           BL       V_line
   4444                    
   4445          
   4446                    if (Screen->Timetable.Min1h)
   \   000002A2   E878               LDRB     R0,[R5, #+3]
   \   000002A4   0028               CMP      R0,#+0
   \   000002A6   0CD0               BEQ      ??ScreenTimetableSet_Paint_9
   4447                    {
   4448                       char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   000002A8   02A8               ADD      R0,SP,#+8
   \   000002AA   0ECC               LDM      R4!,{R1-R3}
   \   000002AC   0EC0               STM      R0!,{R1-R3}
   4449                      CopyToCanvasPoint((char *)ekran_tab,33,5,8,10);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght
   \   000002AE   82B0               SUB      SP,SP,#+8
   \   000002B0   0A20               MOVS     R0,#+10
   \   000002B2   0090               STR      R0,[SP, #+0]
   \   000002B4   0823               MOVS     R3,#+8
   \   000002B6   0522               MOVS     R2,#+5
   \   000002B8   2121               MOVS     R1,#+33
   \   000002BA   04A8               ADD      R0,SP,#+16
   \   000002BC   ........           BL       CopyToCanvasPoint
   \   000002C0   02B0               ADD      SP,SP,#+8
   4450                    }
   4451          
   4452          }
   \                     ??ScreenTimetableSet_Paint_9:
   \   000002C2   05B0               ADD      SP,SP,#+20
   \   000002C4   F0BC               POP      {R4-R7}
   \   000002C6   01BC               POP      {R0}
   \   000002C8   0047               BX       R0               ;; return
   \   000002CA   C046               Nop      
   \                     ??ScreenTimetableSet_Paint_0:
   \   000002CC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   000002D0   F9060000           DC32     0x6f9
   \   000002D4   ........           DC32     g_leng
   \   000002D8   140A0000           DC32     0xa14
   \   000002DC   ........           DC32     Speech
   \   000002E0   56617200           DC8      "Var"
   \   000002E4   2D316800           DC8      "-1h"
   4453          

   \                                 In section Debug.txt, align 4, keep-with-next
   4454          void ScreenTimetableSet_Event(_Screen* Screen)
   4455          {
   \                     ScreenTimetableSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4456            char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   2E00               MOVS     R6,R5
   \   00000008   8B4F               LDR      R7,??ScreenTimetableSet_Event_0  ;; Y_down
   \   0000000A   2900               MOVS     R1,R5
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   3B5E               LDRSH    R3,[R7, R0]
   \   00000016   8948               LDR      R0,??ScreenTimetableSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   8848               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   8C46               MOV      R12,R1
   \   00000022   8848               LDR      R0,??ScreenTimetableSet_Event_0+0xC  ;; X_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   405E               LDRSH    R0,[R0, R1]
   \   00000028   6146               MOV      R1,R12
   4457                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   07D5               BPL      ??ScreenTimetableSet_Event_1
   4458                  {
   4459                    MenuLevel=(MenuLevel/10);
   \   00000034   844C               LDR      R4,??ScreenTimetableSet_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A06C               LDR      R0,[R4, #+72]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   A064               STR      R0,[R4, #+72]
   4460                    Repaint=1;
   \   00000040   0126               MOVS     R6,#+1
   \   00000042   F1E0               B        ??ScreenTimetableSet_Event_2
   4461                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ScreenTimetableSet_Event_1:
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   385E               LDRSH    R0,[R7, R0]
   \   00000048   7028               CMP      R0,#+112
   \   0000004A   05DB               BLT      ??ScreenTimetableSet_Event_3
   \   0000004C   7C48               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   405E               LDRSH    R0,[R0, R1]
   \   00000052   7028               CMP      R0,#+112
   \   00000054   00DB               BLT      .+4
   \   00000056   E7E0               B        ??ScreenTimetableSet_Event_2
   \                     ??ScreenTimetableSet_Event_3:
   \   00000058   6F46               MOV      R7,SP
   \   0000005A   3C20               MOVS     R0,#+60
   \   0000005C   3870               STRB     R0,[R7, #+0]
   4462                  { 
   4463                    char txt[3];
   4464                    txt[0]='<';txt[1]=0;
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   7870               STRB     R0,[R7, #+1]
   4465                    if (Button(txt,3,72,15,15)==1) { if(Screen->Timetable.ActorNode>-1) Screen->Timetable.ActorNode--; else Screen->Timetable.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   00000062   8C34               ADDS     R4,R4,#+140
   \   00000064   82B0               SUB      SP,SP,#+8
   \   00000066   0F20               MOVS     R0,#+15
   \   00000068   0090               STR      R0,[SP, #+0]
   \   0000006A   0300               MOVS     R3,R0
   \   0000006C   4822               MOVS     R2,#+72
   \   0000006E   0321               MOVS     R1,#+3
   \   00000070   02A8               ADD      R0,SP,#+8
   \   00000072   ........           BL       Button
   \   00000076   02B0               ADD      SP,SP,#+8
   \   00000078   0128               CMP      R0,#+1
   \   0000007A   0BD1               BNE      ??ScreenTimetableSet_Event_4
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   2056               LDRSB    R0,[R4, R0]
   \   00000080   0028               CMP      R0,#+0
   \   00000082   04D4               BMI      ??ScreenTimetableSet_Event_5
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   2056               LDRSB    R0,[R4, R0]
   \   00000088   401E               SUBS     R0,R0,#+1
   \   0000008A   2070               STRB     R0,[R4, #+0]
   \   0000008C   01E0               B        ??ScreenTimetableSet_Event_6
   \                     ??ScreenTimetableSet_Event_5:
   \   0000008E   2220               MOVS     R0,#+34
   \   00000090   2070               STRB     R0,[R4, #+0]
   \                     ??ScreenTimetableSet_Event_6:
   \   00000092   0126               MOVS     R6,#+1
   \                     ??ScreenTimetableSet_Event_4:
   \   00000094   3E20               MOVS     R0,#+62
   \   00000096   3870               STRB     R0,[R7, #+0]
   4466                    txt[0]='>';
   4467                    if (Button(txt,45,72,15,15)==1) { if(Screen->Timetable.ActorNode+1<NumberNeurons) Screen->Timetable.ActorNode++; else Screen->Timetable.ActorNode=-1; Repaint=1;} 
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   0F20               MOVS     R0,#+15
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   0300               MOVS     R3,R0
   \   000000A0   4822               MOVS     R2,#+72
   \   000000A2   2D21               MOVS     R1,#+45
   \   000000A4   02A8               ADD      R0,SP,#+8
   \   000000A6   ........           BL       Button
   \   000000AA   02B0               ADD      SP,SP,#+8
   \   000000AC   0128               CMP      R0,#+1
   \   000000AE   0DD1               BNE      ??ScreenTimetableSet_Event_7
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   2056               LDRSB    R0,[R4, R0]
   \   000000B4   401C               ADDS     R0,R0,#+1
   \   000000B6   2328               CMP      R0,#+35
   \   000000B8   04DA               BGE      ??ScreenTimetableSet_Event_8
   \   000000BA   0020               MOVS     R0,#+0
   \   000000BC   2056               LDRSB    R0,[R4, R0]
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   2070               STRB     R0,[R4, #+0]
   \   000000C2   02E0               B        ??ScreenTimetableSet_Event_9
   \                     ??ScreenTimetableSet_Event_8:
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   C043               MVNS     R0,R0            ;; #-1
   \   000000C8   2070               STRB     R0,[R4, #+0]
   \                     ??ScreenTimetableSet_Event_9:
   \   000000CA   0126               MOVS     R6,#+1
   4468                   
   4469                    
   4470                    if (Screen->Timetable.ActorNode>=0)
   \                     ??ScreenTimetableSet_Event_7:
   \   000000CC   0020               MOVS     R0,#+0
   \   000000CE   2056               LDRSB    R0,[R4, R0]
   \   000000D0   0028               CMP      R0,#+0
   \   000000D2   49D4               BMI      ??ScreenTimetableSet_Event_10
   4471                    {
   4472                      txt[0]='<';txt[1]=0;
   \   000000D4   3C20               MOVS     R0,#+60
   \   000000D6   3870               STRB     R0,[R7, #+0]
   \   000000D8   2800               MOVS     R0,R5
   \   000000DA   7870               STRB     R0,[R7, #+1]
   4473                      if (Button(txt,3,52,15,15)==1) { if(Screen->Timetable.ActorPort>0) Screen->Timetable.ActorPort--; else Screen->Timetable.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0F20               MOVS     R0,#+15
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   0300               MOVS     R3,R0
   \   000000E4   3422               MOVS     R2,#+52
   \   000000E6   0321               MOVS     R1,#+3
   \   000000E8   02A8               ADD      R0,SP,#+8
   \   000000EA   ........           BL       Button
   \   000000EE   02B0               ADD      SP,SP,#+8
   \   000000F0   0128               CMP      R0,#+1
   \   000000F2   08D1               BNE      ??ScreenTimetableSet_Event_11
   \   000000F4   6078               LDRB     R0,[R4, #+1]
   \   000000F6   0028               CMP      R0,#+0
   \   000000F8   02D0               BEQ      ??ScreenTimetableSet_Event_12
   \   000000FA   401E               SUBS     R0,R0,#+1
   \   000000FC   6070               STRB     R0,[R4, #+1]
   \   000000FE   01E0               B        ??ScreenTimetableSet_Event_13
   \                     ??ScreenTimetableSet_Event_12:
   \   00000100   0F20               MOVS     R0,#+15
   \   00000102   6070               STRB     R0,[R4, #+1]
   \                     ??ScreenTimetableSet_Event_13:
   \   00000104   0126               MOVS     R6,#+1
   4474                      txt[0]='>';
   \                     ??ScreenTimetableSet_Event_11:
   \   00000106   3E20               MOVS     R0,#+62
   \   00000108   3870               STRB     R0,[R7, #+0]
   4475                      if (Button(txt,45,52,15,15)==1) { if(Screen->Timetable.ActorPort+1<NumberNeuronsPort) Screen->Timetable.ActorPort++; else Screen->Timetable.ActorPort=0; Repaint=1;} 
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0F20               MOVS     R0,#+15
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   0300               MOVS     R3,R0
   \   00000112   3422               MOVS     R2,#+52
   \   00000114   2D21               MOVS     R1,#+45
   \   00000116   02A8               ADD      R0,SP,#+8
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   0128               CMP      R0,#+1
   \   00000120   0CD1               BNE      ??ScreenTimetableSet_Event_14
   \   00000122   6078               LDRB     R0,[R4, #+1]
   \   00000124   401C               ADDS     R0,R0,#+1
   \   00000126   0004               LSLS     R0,R0,#+16
   \   00000128   000C               LSRS     R0,R0,#+16
   \   0000012A   1028               CMP      R0,#+16
   \   0000012C   03D2               BCS      ??ScreenTimetableSet_Event_15
   \   0000012E   6078               LDRB     R0,[R4, #+1]
   \   00000130   401C               ADDS     R0,R0,#+1
   \   00000132   6070               STRB     R0,[R4, #+1]
   \   00000134   01E0               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_15:
   \   00000136   2800               MOVS     R0,R5
   \   00000138   6070               STRB     R0,[R4, #+1]
   \                     ??ScreenTimetableSet_Event_16:
   \   0000013A   0126               MOVS     R6,#+1
   4476                    }else{
   4477                      //je¿eli znienna 
   4478                      txt[0]='<';txt[1]=0;
   4479                      if (Button(txt,3,52,15,15)==1) { if(Screen->Timetable.ActorPort>0) Screen->Timetable.ActorPort--; else Screen->Timetable.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   4480                      txt[0]='>';
   4481                      if (Button(txt,45,52,15,15)==1) { if(Screen->Timetable.ActorPort+1<NumberNeuronsPort) Screen->Timetable.ActorPort++; else Screen->Timetable.ActorPort=99; Repaint=1;} 
   4482                    }
   4483                      
   4484                    
   4485                    txt[0]='<';txt[1]=0;
   \                     ??ScreenTimetableSet_Event_14:
   \   0000013C   3C20               MOVS     R0,#+60
   \   0000013E   3870               STRB     R0,[R7, #+0]
   \   00000140   2800               MOVS     R0,R5
   \   00000142   7870               STRB     R0,[R7, #+1]
   4486                    if (Button(txt,3,24,15,15)==1) {if (Screen->Timetable.ActionType>0) Screen->Timetable.ActionType--; else Screen->Timetable.ActionType=2; Repaint=1;} 
   \   00000144   82B0               SUB      SP,SP,#+8
   \   00000146   0F20               MOVS     R0,#+15
   \   00000148   0090               STR      R0,[SP, #+0]
   \   0000014A   0300               MOVS     R3,R0
   \   0000014C   1822               MOVS     R2,#+24
   \   0000014E   0321               MOVS     R1,#+3
   \   00000150   02A8               ADD      R0,SP,#+8
   \   00000152   ........           BL       Button
   \   00000156   02B0               ADD      SP,SP,#+8
   \   00000158   0128               CMP      R0,#+1
   \   0000015A   3CD1               BNE      ??ScreenTimetableSet_Event_17
   \   0000015C   A078               LDRB     R0,[R4, #+2]
   \   0000015E   0028               CMP      R0,#+0
   \   00000160   36D0               BEQ      ??ScreenTimetableSet_Event_18
   \   00000162   401E               SUBS     R0,R0,#+1
   \   00000164   A070               STRB     R0,[R4, #+2]
   \   00000166   35E0               B        ??ScreenTimetableSet_Event_19
   \                     ??ScreenTimetableSet_Event_10:
   \   00000168   3C20               MOVS     R0,#+60
   \   0000016A   3870               STRB     R0,[R7, #+0]
   \   0000016C   2800               MOVS     R0,R5
   \   0000016E   7870               STRB     R0,[R7, #+1]
   \   00000170   82B0               SUB      SP,SP,#+8
   \   00000172   0F20               MOVS     R0,#+15
   \   00000174   0090               STR      R0,[SP, #+0]
   \   00000176   0300               MOVS     R3,R0
   \   00000178   3422               MOVS     R2,#+52
   \   0000017A   0321               MOVS     R1,#+3
   \   0000017C   02A8               ADD      R0,SP,#+8
   \   0000017E   ........           BL       Button
   \   00000182   02B0               ADD      SP,SP,#+8
   \   00000184   0128               CMP      R0,#+1
   \   00000186   08D1               BNE      ??ScreenTimetableSet_Event_20
   \   00000188   6078               LDRB     R0,[R4, #+1]
   \   0000018A   0028               CMP      R0,#+0
   \   0000018C   02D0               BEQ      ??ScreenTimetableSet_Event_21
   \   0000018E   401E               SUBS     R0,R0,#+1
   \   00000190   6070               STRB     R0,[R4, #+1]
   \   00000192   01E0               B        ??ScreenTimetableSet_Event_22
   \                     ??ScreenTimetableSet_Event_21:
   \   00000194   0F20               MOVS     R0,#+15
   \   00000196   6070               STRB     R0,[R4, #+1]
   \                     ??ScreenTimetableSet_Event_22:
   \   00000198   0126               MOVS     R6,#+1
   \                     ??ScreenTimetableSet_Event_20:
   \   0000019A   3E20               MOVS     R0,#+62
   \   0000019C   3870               STRB     R0,[R7, #+0]
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0F20               MOVS     R0,#+15
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   0300               MOVS     R3,R0
   \   000001A6   3422               MOVS     R2,#+52
   \   000001A8   2D21               MOVS     R1,#+45
   \   000001AA   02A8               ADD      R0,SP,#+8
   \   000001AC   ........           BL       Button
   \   000001B0   02B0               ADD      SP,SP,#+8
   \   000001B2   0128               CMP      R0,#+1
   \   000001B4   C2D1               BNE      ??ScreenTimetableSet_Event_14
   \   000001B6   6078               LDRB     R0,[R4, #+1]
   \   000001B8   401C               ADDS     R0,R0,#+1
   \   000001BA   0004               LSLS     R0,R0,#+16
   \   000001BC   000C               LSRS     R0,R0,#+16
   \   000001BE   1028               CMP      R0,#+16
   \   000001C0   03D2               BCS      ??ScreenTimetableSet_Event_23
   \   000001C2   6078               LDRB     R0,[R4, #+1]
   \   000001C4   401C               ADDS     R0,R0,#+1
   \   000001C6   6070               STRB     R0,[R4, #+1]
   \   000001C8   B7E7               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_23:
   \   000001CA   6320               MOVS     R0,#+99
   \   000001CC   6070               STRB     R0,[R4, #+1]
   \   000001CE   B4E7               B        ??ScreenTimetableSet_Event_16
   \                     ??ScreenTimetableSet_Event_18:
   \   000001D0   0220               MOVS     R0,#+2
   \   000001D2   A070               STRB     R0,[R4, #+2]
   \                     ??ScreenTimetableSet_Event_19:
   \   000001D4   0126               MOVS     R6,#+1
   4487                    txt[0]='>';
   \                     ??ScreenTimetableSet_Event_17:
   \   000001D6   3E20               MOVS     R0,#+62
   \   000001D8   3870               STRB     R0,[R7, #+0]
   4488                    if (Button(txt,45,24,15,15)==1) {if (Screen->Timetable.ActionType<2) Screen->Timetable.ActionType++; else Screen->Timetable.ActionType=0; Repaint=1;}  
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0F20               MOVS     R0,#+15
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   0300               MOVS     R3,R0
   \   000001E2   1822               MOVS     R2,#+24
   \   000001E4   2D21               MOVS     R1,#+45
   \   000001E6   02A8               ADD      R0,SP,#+8
   \   000001E8   ........           BL       Button
   \   000001EC   02B0               ADD      SP,SP,#+8
   \   000001EE   0128               CMP      R0,#+1
   \   000001F0   07D1               BNE      ??ScreenTimetableSet_Event_24
   \   000001F2   A078               LDRB     R0,[R4, #+2]
   \   000001F4   0228               CMP      R0,#+2
   \   000001F6   02D2               BCS      ??ScreenTimetableSet_Event_25
   \   000001F8   401C               ADDS     R0,R0,#+1
   \   000001FA   A070               STRB     R0,[R4, #+2]
   \   000001FC   00E0               B        ??ScreenTimetableSet_Event_26
   \                     ??ScreenTimetableSet_Event_25:
   \   000001FE   A570               STRB     R5,[R4, #+2]
   \                     ??ScreenTimetableSet_Event_26:
   \   00000200   0126               MOVS     R6,#+1
   4489                    
   4490                    //jezeli przyciniêto znacznik -1h
   4491                    if ((X_up>=30) && (X_up<=42) && (Y_up>=4) && (Y_up<=16)) {if (Screen->Timetable.Min1h) Screen->Timetable.Min1h=0; else Screen->Timetable.Min1h=1;  Repaint=1;}
   \                     ??ScreenTimetableSet_Event_24:
   \   00000202   1048               LDR      R0,??ScreenTimetableSet_Event_0+0xC  ;; X_up
   \   00000204   0021               MOVS     R1,#+0
   \   00000206   405E               LDRSH    R0,[R0, R1]
   \   00000208   1E28               CMP      R0,#+30
   \   0000020A   0DDB               BLT      ??ScreenTimetableSet_Event_2
   \   0000020C   2B28               CMP      R0,#+43
   \   0000020E   0BDA               BGE      ??ScreenTimetableSet_Event_2
   \   00000210   0B48               LDR      R0,??ScreenTimetableSet_Event_0+0x8  ;; Y_up
   \   00000212   405E               LDRSH    R0,[R0, R1]
   \   00000214   0428               CMP      R0,#+4
   \   00000216   07DB               BLT      ??ScreenTimetableSet_Event_2
   \   00000218   1128               CMP      R0,#+17
   \   0000021A   05DA               BGE      ??ScreenTimetableSet_Event_2
   \   0000021C   E078               LDRB     R0,[R4, #+3]
   \   0000021E   411E               SUBS     R1,R0,#+1
   \   00000220   8941               SBCS     R1,R1,R1
   \   00000222   C90F               LSRS     R1,R1,#+31
   \   00000224   E170               STRB     R1,[R4, #+3]
   \   00000226   0126               MOVS     R6,#+1
   4492                  }  
   4493                  if (Repaint) MenuPaint();
   \                     ??ScreenTimetableSet_Event_2:
   \   00000228   002E               CMP      R6,#+0
   \   0000022A   01D0               BEQ      ??ScreenTimetableSet_Event_27
   \   0000022C   ........           BL       MenuPaint
   4494                  
   4495          
   4496          }
   \                     ??ScreenTimetableSet_Event_27:
   \   00000230   F8BC               POP      {R3-R7}
   \   00000232   01BC               POP      {R0}
   \   00000234   0047               BX       R0               ;; return
   \   00000236   C046               Nop      
   \                     ??ScreenTimetableSet_Event_0:
   \   00000238   ........           DC32     Y_down
   \   0000023C   ........           DC32     X_down
   \   00000240   ........           DC32     Y_up
   \   00000244   ........           DC32     X_up
   \   00000248   ........           DC32     TextToChangeLength
   4497          
   4498          
   4499          
   4500          
   4501          
   4502          
   4503          

   \                                 In section Debug.txt, align 4, keep-with-next
   4504          void ScreenAlarmSet_Paint(_Screen* Screen)
   4505          {          
   \                     ScreenAlarmSet_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   4506                 List_Paint("Alarm",1,108,0,0,3,0,0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0300               MOVS     R3,R0
   \   00000016   6C22               MOVS     R2,#+108
   \   00000018   0121               MOVS     R1,#+1
   \   0000001A   9748               LDR      R0,??ScreenAlarmSet_Paint_0  ;; `?<Constant "Alarm">`
   \   0000001C   ........           BL       List_Paint
   \   00000020   0AB0               ADD      SP,SP,#+40
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3421               MOVS     R1,#+52
   \   00000030   0A20               MOVS     R0,#+10
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   6423               MOVS     R3,#+100
   \   00000036   0522               MOVS     R2,#+5
   \   00000038   0221               MOVS     R1,#+2
   \   0000003A   9048               LDR      R0,??ScreenAlarmSet_Paint_0+0x4  ;; 0x6ea
   \   0000003C   904C               LDR      R4,??ScreenAlarmSet_Paint_0+0x8  ;; g_leng
   \   0000003E   2468               LDR      R4,[R4, #+0]
   \   00000040   904D               LDR      R5,??ScreenAlarmSet_Paint_0+0xC  ;; 0xa14
   \   00000042   6C43               MULS     R4,R5,R4
   \   00000044   904D               LDR      R5,??ScreenAlarmSet_Paint_0+0x10  ;; Speech
   \   00000046   2C19               ADDS     R4,R5,R4
   \   00000048   2018               ADDS     R0,R4,R0
   4507                 
   4508                 char txt[8];
   4509                 
   4510                    Label(Speech[g_leng].Czujnik,2,5, 100 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000004A   ........           BL       Label
   \   0000004E   06B0               ADD      SP,SP,#+24
   \   00000050   6C46               MOV      R4,SP
   \   00000052   4920               MOVS     R0,#+73
   \   00000054   2070               STRB     R0,[R4, #+0]
   \   00000056   6420               MOVS     R0,#+100
   \   00000058   6070               STRB     R0,[R4, #+1]
   \   0000005A   3A20               MOVS     R0,#+58
   \   0000005C   A070               STRB     R0,[R4, #+2]
   \   0000005E   2020               MOVS     R0,#+32
   \   00000060   E070               STRB     R0,[R4, #+3]
   \   00000062   0222               MOVS     R2,#+2
   \   00000064   2100               MOVS     R1,R4
   \   00000066   C91C               ADDS     R1,R1,#+3
   \   00000068   1000               MOVS     R0,R2
   \   0000006A   029B               LDR      R3,[SP, #+8]
   \   0000006C   8C33               ADDS     R3,R3,#+140
   \   0000006E   1856               LDRSB    R0,[R3, R0]
   \   00000070   0006               LSLS     R0,R0,#+24
   \   00000072   000E               LSRS     R0,R0,#+24
   4511                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   4512                    char ind=CharToStr(Screen->Alarm.SensorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000074   ........           BL       CharToStr
   \   00000078   0200               MOVS     R2,R0
   4513                    Label(txt,2,20, 88 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   7F21               MOVS     R1,#+127
   \   00000082   0120               MOVS     R0,#+1
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   1621               MOVS     R1,#+22
   \   00000088   D21C               ADDS     R2,R2,#+3
   \   0000008A   1000               MOVS     R0,R2
   \   0000008C   0006               LSLS     R0,R0,#+24
   \   0000008E   000E               LSRS     R0,R0,#+24
   \   00000090   03B4               PUSH     {R0,R1}
   \   00000092   5823               MOVS     R3,#+88
   \   00000094   1422               MOVS     R2,#+20
   \   00000096   0221               MOVS     R1,#+2
   \   00000098   06A8               ADD      R0,SP,#+24
   \   0000009A   ........           BL       Label
   \   0000009E   06B0               ADD      SP,SP,#+24
   4514                  
   4515                    txt[0]='<';txt[1]=0;
   \   000000A0   3C25               MOVS     R5,#+60
   \   000000A2   2570               STRB     R5,[R4, #+0]
   \   000000A4   0026               MOVS     R6,#+0
   \   000000A6   3000               MOVS     R0,R6
   \   000000A8   6070               STRB     R0,[R4, #+1]
   4516                    Button(txt,3,85,15,15); 
   \   000000AA   82B0               SUB      SP,SP,#+8
   \   000000AC   0F20               MOVS     R0,#+15
   \   000000AE   0090               STR      R0,[SP, #+0]
   \   000000B0   0300               MOVS     R3,R0
   \   000000B2   5522               MOVS     R2,#+85
   \   000000B4   0321               MOVS     R1,#+3
   \   000000B6   02A8               ADD      R0,SP,#+8
   \   000000B8   ........           BL       Button
   \   000000BC   02B0               ADD      SP,SP,#+8
   4517                    txt[0]='>';
   \   000000BE   3E27               MOVS     R7,#+62
   \   000000C0   2770               STRB     R7,[R4, #+0]
   4518                    Button(txt,45,85,15,15); 
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0F20               MOVS     R0,#+15
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   0300               MOVS     R3,R0
   \   000000CA   5522               MOVS     R2,#+85
   \   000000CC   2D21               MOVS     R1,#+45
   \   000000CE   02A8               ADD      R0,SP,#+8
   \   000000D0   ........           BL       Button
   \   000000D4   02B0               ADD      SP,SP,#+8
   \   000000D6   5020               MOVS     R0,#+80
   \   000000D8   2070               STRB     R0,[R4, #+0]
   4519                    
   4520                    txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   000000DA   3A20               MOVS     R0,#+58
   \   000000DC   6070               STRB     R0,[R4, #+1]
   \   000000DE   2020               MOVS     R0,#+32
   \   000000E0   A070               STRB     R0,[R4, #+2]
   4521                    ind=CharToStr(Screen->Alarm.SensorPort, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   000000E2   0222               MOVS     R2,#+2
   \   000000E4   2100               MOVS     R1,R4
   \   000000E6   C91C               ADDS     R1,R1,#+3
   \   000000E8   0298               LDR      R0,[SP, #+8]
   \   000000EA   8C30               ADDS     R0,R0,#+140
   \   000000EC   C078               LDRB     R0,[R0, #+3]
   \   000000EE   ........           BL       CharToStr
   \   000000F2   0200               MOVS     R2,R0
   4522                   
   4523                    Label(txt,2,20, 72 ,ind+4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000F4   82B0               SUB      SP,SP,#+8
   \   000000F6   3000               MOVS     R0,R6
   \   000000F8   0090               STR      R0,[SP, #+0]
   \   000000FA   7F21               MOVS     R1,#+127
   \   000000FC   0120               MOVS     R0,#+1
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   1621               MOVS     R1,#+22
   \   00000102   121D               ADDS     R2,R2,#+4
   \   00000104   1000               MOVS     R0,R2
   \   00000106   0006               LSLS     R0,R0,#+24
   \   00000108   000E               LSRS     R0,R0,#+24
   \   0000010A   03B4               PUSH     {R0,R1}
   \   0000010C   4823               MOVS     R3,#+72
   \   0000010E   1422               MOVS     R2,#+20
   \   00000110   0221               MOVS     R1,#+2
   \   00000112   06A8               ADD      R0,SP,#+24
   \   00000114   ........           BL       Label
   \   00000118   06B0               ADD      SP,SP,#+24
   4524                  
   4525                    txt[0]='<';txt[1]=0;
   \   0000011A   2570               STRB     R5,[R4, #+0]
   \   0000011C   3000               MOVS     R0,R6
   \   0000011E   6070               STRB     R0,[R4, #+1]
   4526                    Button(txt,3,69,15,15); 
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0F20               MOVS     R0,#+15
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   0300               MOVS     R3,R0
   \   00000128   4522               MOVS     R2,#+69
   \   0000012A   0321               MOVS     R1,#+3
   \   0000012C   02A8               ADD      R0,SP,#+8
   \   0000012E   ........           BL       Button
   \   00000132   02B0               ADD      SP,SP,#+8
   4527                    txt[0]='>';
   \   00000134   2770               STRB     R7,[R4, #+0]
   4528                    Button(txt,45,69,15,15);   
   \   00000136   82B0               SUB      SP,SP,#+8
   \   00000138   0F20               MOVS     R0,#+15
   \   0000013A   0090               STR      R0,[SP, #+0]
   \   0000013C   0300               MOVS     R3,R0
   \   0000013E   4522               MOVS     R2,#+69
   \   00000140   2D21               MOVS     R1,#+45
   \   00000142   02A8               ADD      R0,SP,#+8
   \   00000144   ........           BL       Button
   \   00000148   02B0               ADD      SP,SP,#+8
   4529                    
   4530                    Label(Speech[g_leng].Syrena,2,5, 58 ,10,52,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)      
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   3000               MOVS     R0,R6
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   7F21               MOVS     R1,#+127
   \   00000152   0120               MOVS     R0,#+1
   \   00000154   03B4               PUSH     {R0,R1}
   \   00000156   3421               MOVS     R1,#+52
   \   00000158   0A20               MOVS     R0,#+10
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   3A23               MOVS     R3,#+58
   \   0000015E   0522               MOVS     R2,#+5
   \   00000160   0221               MOVS     R1,#+2
   \   00000162   02B5               PUSH     {R1,LR}
   \   00000164   9446               MOV      R12,R2
   \   00000166   4949               LDR      R1,??ScreenAlarmSet_Paint_0+0x14  ;; 0x7ad
   \   00000168   4548               LDR      R0,??ScreenAlarmSet_Paint_0+0x8  ;; g_leng
   \   0000016A   0068               LDR      R0,[R0, #+0]
   \   0000016C   454A               LDR      R2,??ScreenAlarmSet_Paint_0+0xC  ;; 0xa14
   \   0000016E   5043               MULS     R0,R2,R0
   \   00000170   454A               LDR      R2,??ScreenAlarmSet_Paint_0+0x10  ;; Speech
   \   00000172   1018               ADDS     R0,R2,R0
   \   00000174   4018               ADDS     R0,R0,R1
   \   00000176   6246               MOV      R2,R12
   \   00000178   0099               LDR      R1,[SP, #0]
   \   0000017A   02B0               ADD      SP,SP,#+8
   \   0000017C   ........           BL       Label
   \   00000180   06B0               ADD      SP,SP,#+24
   4531                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   00000182   4920               MOVS     R0,#+73
   \   00000184   2070               STRB     R0,[R4, #+0]
   \   00000186   6420               MOVS     R0,#+100
   \   00000188   6070               STRB     R0,[R4, #+1]
   \   0000018A   3A20               MOVS     R0,#+58
   \   0000018C   A070               STRB     R0,[R4, #+2]
   \   0000018E   2020               MOVS     R0,#+32
   \   00000190   E070               STRB     R0,[R4, #+3]
   4532                    ind=CharToStr(Screen->Alarm.ActorNode, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   00000192   0222               MOVS     R2,#+2
   \   00000194   2100               MOVS     R1,R4
   \   00000196   C91C               ADDS     R1,R1,#+3
   \   00000198   8C20               MOVS     R0,#+140
   \   0000019A   029B               LDR      R3,[SP, #+8]
   \   0000019C   1856               LDRSB    R0,[R3, R0]
   \   0000019E   0006               LSLS     R0,R0,#+24
   \   000001A0   000E               LSRS     R0,R0,#+24
   \   000001A2   ........           BL       CharToStr
   \   000001A6   0200               MOVS     R2,R0
   4533                    Label(txt,2,20, 45 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001A8   82B0               SUB      SP,SP,#+8
   \   000001AA   3000               MOVS     R0,R6
   \   000001AC   0090               STR      R0,[SP, #+0]
   \   000001AE   7F21               MOVS     R1,#+127
   \   000001B0   0120               MOVS     R0,#+1
   \   000001B2   03B4               PUSH     {R0,R1}
   \   000001B4   1621               MOVS     R1,#+22
   \   000001B6   D21C               ADDS     R2,R2,#+3
   \   000001B8   1000               MOVS     R0,R2
   \   000001BA   0006               LSLS     R0,R0,#+24
   \   000001BC   000E               LSRS     R0,R0,#+24
   \   000001BE   03B4               PUSH     {R0,R1}
   \   000001C0   2D23               MOVS     R3,#+45
   \   000001C2   1422               MOVS     R2,#+20
   \   000001C4   0221               MOVS     R1,#+2
   \   000001C6   06A8               ADD      R0,SP,#+24
   \   000001C8   ........           BL       Label
   \   000001CC   06B0               ADD      SP,SP,#+24
   4534                  
   4535                    txt[0]='<';txt[1]=0;
   \   000001CE   2570               STRB     R5,[R4, #+0]
   \   000001D0   3000               MOVS     R0,R6
   \   000001D2   6070               STRB     R0,[R4, #+1]
   4536                    Button(txt,3,42,15,15); 
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   0F20               MOVS     R0,#+15
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   0300               MOVS     R3,R0
   \   000001DC   2A22               MOVS     R2,#+42
   \   000001DE   0321               MOVS     R1,#+3
   \   000001E0   02A8               ADD      R0,SP,#+8
   \   000001E2   ........           BL       Button
   \   000001E6   02B0               ADD      SP,SP,#+8
   4537                    txt[0]='>';
   \   000001E8   2770               STRB     R7,[R4, #+0]
   4538                    Button(txt,45,42,15,15); 
   \   000001EA   82B0               SUB      SP,SP,#+8
   \   000001EC   0F20               MOVS     R0,#+15
   \   000001EE   0090               STR      R0,[SP, #+0]
   \   000001F0   0300               MOVS     R3,R0
   \   000001F2   2A22               MOVS     R2,#+42
   \   000001F4   2D21               MOVS     R1,#+45
   \   000001F6   02A8               ADD      R0,SP,#+8
   \   000001F8   ........           BL       Button
   \   000001FC   02B0               ADD      SP,SP,#+8
   4539                    
   4540                    txt[0]='P'; txt[1]=':'; txt[2]=' '; 
   \   000001FE   5020               MOVS     R0,#+80
   \   00000200   2070               STRB     R0,[R4, #+0]
   \   00000202   3A20               MOVS     R0,#+58
   \   00000204   6070               STRB     R0,[R4, #+1]
   \   00000206   2020               MOVS     R0,#+32
   \   00000208   A070               STRB     R0,[R4, #+2]
   4541                    ind=CharToStr(Screen->Alarm.ActorPort, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   0000020A   0222               MOVS     R2,#+2
   \   0000020C   2100               MOVS     R1,R4
   \   0000020E   891C               ADDS     R1,R1,#+2
   \   00000210   0298               LDR      R0,[SP, #+8]
   \   00000212   8C30               ADDS     R0,R0,#+140
   \   00000214   4078               LDRB     R0,[R0, #+1]
   \   00000216   ........           BL       CharToStr
   \   0000021A   0200               MOVS     R2,R0
   4542                   
   4543                    Label(txt,2,20, 29 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000021C   82B0               SUB      SP,SP,#+8
   \   0000021E   3000               MOVS     R0,R6
   \   00000220   0090               STR      R0,[SP, #+0]
   \   00000222   7F21               MOVS     R1,#+127
   \   00000224   0120               MOVS     R0,#+1
   \   00000226   03B4               PUSH     {R0,R1}
   \   00000228   1621               MOVS     R1,#+22
   \   0000022A   921C               ADDS     R2,R2,#+2
   \   0000022C   1000               MOVS     R0,R2
   \   0000022E   0006               LSLS     R0,R0,#+24
   \   00000230   000E               LSRS     R0,R0,#+24
   \   00000232   03B4               PUSH     {R0,R1}
   \   00000234   1D23               MOVS     R3,#+29
   \   00000236   1422               MOVS     R2,#+20
   \   00000238   0221               MOVS     R1,#+2
   \   0000023A   06A8               ADD      R0,SP,#+24
   \   0000023C   ........           BL       Label
   \   00000240   06B0               ADD      SP,SP,#+24
   4544                  
   4545                    txt[0]='<';txt[1]=0;
   \   00000242   2570               STRB     R5,[R4, #+0]
   \   00000244   6670               STRB     R6,[R4, #+1]
   4546                    Button(txt,3,26,15,15); 
   \   00000246   82B0               SUB      SP,SP,#+8
   \   00000248   0F20               MOVS     R0,#+15
   \   0000024A   0090               STR      R0,[SP, #+0]
   \   0000024C   0300               MOVS     R3,R0
   \   0000024E   1A22               MOVS     R2,#+26
   \   00000250   0321               MOVS     R1,#+3
   \   00000252   02A8               ADD      R0,SP,#+8
   \   00000254   ........           BL       Button
   \   00000258   02B0               ADD      SP,SP,#+8
   4547                    txt[0]='>';
   \   0000025A   2770               STRB     R7,[R4, #+0]
   4548                    Button(txt,45,26,15,15);       
   \   0000025C   82B0               SUB      SP,SP,#+8
   \   0000025E   0F20               MOVS     R0,#+15
   \   00000260   0090               STR      R0,[SP, #+0]
   \   00000262   0300               MOVS     R3,R0
   \   00000264   1A22               MOVS     R2,#+26
   \   00000266   2D21               MOVS     R1,#+45
   \   00000268   02A8               ADD      R0,SP,#+8
   \   0000026A   ........           BL       Button
   \   0000026E   02B0               ADD      SP,SP,#+8
   4549          }
   \   00000270   FEBC               POP      {R1-R7}
   \   00000272   01BC               POP      {R0}
   \   00000274   0047               BX       R0               ;; return
   \   00000276   C046               Nop      
   \                     ??ScreenAlarmSet_Paint_0:
   \   00000278   ........           DC32     `?<Constant "Alarm">`
   \   0000027C   EA060000           DC32     0x6ea
   \   00000280   ........           DC32     g_leng
   \   00000284   140A0000           DC32     0xa14
   \   00000288   ........           DC32     Speech
   \   0000028C   AD070000           DC32     0x7ad
   4550          

   \                                 In section Debug.txt, align 4, keep-with-next
   4551          void ScreenAlarmSet_Event(_Screen* Screen)
   4552          {
   \                     ScreenAlarmSet_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   4553             char Repaint=0;
   \   00000004   0025               MOVS     R5,#+0
   \   00000006   2E00               MOVS     R6,R5
   \   00000008   8A4F               LDR      R7,??ScreenAlarmSet_Event_0  ;; Y_down
   \   0000000A   2900               MOVS     R1,R5
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   3B5E               LDRSH    R3,[R7, R0]
   \   00000016   8848               LDR      R0,??ScreenAlarmSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   8748               LDR      R0,??ScreenAlarmSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   8C46               MOV      R12,R1
   \   00000022   8748               LDR      R0,??ScreenAlarmSet_Event_0+0xC  ;; X_up
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   405E               LDRSH    R0,[R0, R1]
   \   00000028   6146               MOV      R1,R12
   4554                    if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0028               CMP      R0,#+0
   \   00000032   07D5               BPL      ??ScreenAlarmSet_Event_1
   4555                  {
   4556                    MenuLevel=(MenuLevel/10);
   \   00000034   834C               LDR      R4,??ScreenAlarmSet_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A06C               LDR      R0,[R4, #+72]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   ........           BL       __aeabi_idivmod
   \   0000003E   A064               STR      R0,[R4, #+72]
   4557                    Repaint=1;
   \   00000040   0126               MOVS     R6,#+1
   \   00000042   F0E0               B        ??ScreenAlarmSet_Event_2
   4558                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ScreenAlarmSet_Event_1:
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   385E               LDRSH    R0,[R7, R0]
   \   00000048   7028               CMP      R0,#+112
   \   0000004A   05DB               BLT      ??ScreenAlarmSet_Event_3
   \   0000004C   7B48               LDR      R0,??ScreenAlarmSet_Event_0+0x8  ;; Y_up
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   405E               LDRSH    R0,[R0, R1]
   \   00000052   7028               CMP      R0,#+112
   \   00000054   00DB               BLT      .+4
   \   00000056   E6E0               B        ??ScreenAlarmSet_Event_2
   \                     ??ScreenAlarmSet_Event_3:
   \   00000058   6F46               MOV      R7,SP
   \   0000005A   3C20               MOVS     R0,#+60
   \   0000005C   3870               STRB     R0,[R7, #+0]
   4559                  { 
   4560                    
   4561                    char txt[5];         
   4562                    txt[0]='<';txt[1]=0;
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   7870               STRB     R0,[R7, #+1]
   4563                    if (Button(txt,3,85,15,15)==1) { if(Screen->Alarm.SensorNode>0) Screen->Alarm.SensorNode--; else Screen->Alarm.SensorNode=NumberNeurons-1; Repaint=1;}  
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0F20               MOVS     R0,#+15
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   0300               MOVS     R3,R0
   \   0000006A   5522               MOVS     R2,#+85
   \   0000006C   0321               MOVS     R1,#+3
   \   0000006E   02A8               ADD      R0,SP,#+8
   \   00000070   ........           BL       Button
   \   00000074   02B0               ADD      SP,SP,#+8
   \   00000076   0128               CMP      R0,#+1
   \   00000078   0DD1               BNE      ??ScreenAlarmSet_Event_4
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   8C30               ADDS     R0,R0,#+140
   \   0000007E   0221               MOVS     R1,#+2
   \   00000080   4156               LDRSB    R1,[R0, R1]
   \   00000082   0129               CMP      R1,#+1
   \   00000084   04DB               BLT      ??ScreenAlarmSet_Event_5
   \   00000086   0221               MOVS     R1,#+2
   \   00000088   4156               LDRSB    R1,[R0, R1]
   \   0000008A   491E               SUBS     R1,R1,#+1
   \   0000008C   8170               STRB     R1,[R0, #+2]
   \   0000008E   01E0               B        ??ScreenAlarmSet_Event_6
   \                     ??ScreenAlarmSet_Event_5:
   \   00000090   2221               MOVS     R1,#+34
   \   00000092   8170               STRB     R1,[R0, #+2]
   \                     ??ScreenAlarmSet_Event_6:
   \   00000094   0126               MOVS     R6,#+1
   \                     ??ScreenAlarmSet_Event_4:
   \   00000096   3E20               MOVS     R0,#+62
   \   00000098   3870               STRB     R0,[R7, #+0]
   4564                    txt[0]='>';
   4565                    if (Button(txt,45,85,15,15)==1) { if(Screen->Alarm.SensorNode+1<NumberNeurons) Screen->Alarm.SensorNode++; else Screen->Alarm.SensorNode=0; Repaint=1;} 
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0F20               MOVS     R0,#+15
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   0300               MOVS     R3,R0
   \   000000A2   5522               MOVS     R2,#+85
   \   000000A4   2D21               MOVS     R1,#+45
   \   000000A6   02A8               ADD      R0,SP,#+8
   \   000000A8   ........           BL       Button
   \   000000AC   02B0               ADD      SP,SP,#+8
   \   000000AE   0128               CMP      R0,#+1
   \   000000B0   0ED1               BNE      ??ScreenAlarmSet_Event_7
   \   000000B2   2000               MOVS     R0,R4
   \   000000B4   8C30               ADDS     R0,R0,#+140
   \   000000B6   0221               MOVS     R1,#+2
   \   000000B8   4156               LDRSB    R1,[R0, R1]
   \   000000BA   491C               ADDS     R1,R1,#+1
   \   000000BC   2329               CMP      R1,#+35
   \   000000BE   04DA               BGE      ??ScreenAlarmSet_Event_8
   \   000000C0   0221               MOVS     R1,#+2
   \   000000C2   4156               LDRSB    R1,[R0, R1]
   \   000000C4   491C               ADDS     R1,R1,#+1
   \   000000C6   8170               STRB     R1,[R0, #+2]
   \   000000C8   01E0               B        ??ScreenAlarmSet_Event_9
   \                     ??ScreenAlarmSet_Event_8:
   \   000000CA   2900               MOVS     R1,R5
   \   000000CC   8170               STRB     R1,[R0, #+2]
   \                     ??ScreenAlarmSet_Event_9:
   \   000000CE   0126               MOVS     R6,#+1
   4566                   
   4567                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_7:
   \   000000D0   3C20               MOVS     R0,#+60
   \   000000D2   3870               STRB     R0,[R7, #+0]
   \   000000D4   2800               MOVS     R0,R5
   \   000000D6   7870               STRB     R0,[R7, #+1]
   4568                    if (Button(txt,3,69,15,15)==1) { if(Screen->Alarm.SensorPort>0) Screen->Alarm.SensorPort--; else Screen->Alarm.SensorPort=NumberReg-1; Repaint=1;}  
   \   000000D8   82B0               SUB      SP,SP,#+8
   \   000000DA   0F20               MOVS     R0,#+15
   \   000000DC   0090               STR      R0,[SP, #+0]
   \   000000DE   0300               MOVS     R3,R0
   \   000000E0   4522               MOVS     R2,#+69
   \   000000E2   0321               MOVS     R1,#+3
   \   000000E4   02A8               ADD      R0,SP,#+8
   \   000000E6   ........           BL       Button
   \   000000EA   02B0               ADD      SP,SP,#+8
   \   000000EC   0128               CMP      R0,#+1
   \   000000EE   0AD1               BNE      ??ScreenAlarmSet_Event_10
   \   000000F0   2000               MOVS     R0,R4
   \   000000F2   8C30               ADDS     R0,R0,#+140
   \   000000F4   C178               LDRB     R1,[R0, #+3]
   \   000000F6   0029               CMP      R1,#+0
   \   000000F8   02D0               BEQ      ??ScreenAlarmSet_Event_11
   \   000000FA   491E               SUBS     R1,R1,#+1
   \   000000FC   C170               STRB     R1,[R0, #+3]
   \   000000FE   01E0               B        ??ScreenAlarmSet_Event_12
   \                     ??ScreenAlarmSet_Event_11:
   \   00000100   0921               MOVS     R1,#+9
   \   00000102   C170               STRB     R1,[R0, #+3]
   \                     ??ScreenAlarmSet_Event_12:
   \   00000104   0126               MOVS     R6,#+1
   4569                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_10:
   \   00000106   3E20               MOVS     R0,#+62
   \   00000108   3870               STRB     R0,[R7, #+0]
   4570                    if (Button(txt,45,69,15,15)==1) { if(Screen->Alarm.SensorPort+1<NumberReg) Screen->Alarm.SensorPort++; else Screen->Alarm.SensorPort=0; Repaint=1;} 
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0F20               MOVS     R0,#+15
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   0300               MOVS     R3,R0
   \   00000112   4522               MOVS     R2,#+69
   \   00000114   2D21               MOVS     R1,#+45
   \   00000116   02A8               ADD      R0,SP,#+8
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   0128               CMP      R0,#+1
   \   00000120   0ED1               BNE      ??ScreenAlarmSet_Event_13
   \   00000122   2000               MOVS     R0,R4
   \   00000124   8C30               ADDS     R0,R0,#+140
   \   00000126   C178               LDRB     R1,[R0, #+3]
   \   00000128   491C               ADDS     R1,R1,#+1
   \   0000012A   0904               LSLS     R1,R1,#+16
   \   0000012C   090C               LSRS     R1,R1,#+16
   \   0000012E   0A29               CMP      R1,#+10
   \   00000130   03D2               BCS      ??ScreenAlarmSet_Event_14
   \   00000132   C178               LDRB     R1,[R0, #+3]
   \   00000134   491C               ADDS     R1,R1,#+1
   \   00000136   C170               STRB     R1,[R0, #+3]
   \   00000138   01E0               B        ??ScreenAlarmSet_Event_15
   \                     ??ScreenAlarmSet_Event_14:
   \   0000013A   2900               MOVS     R1,R5
   \   0000013C   C170               STRB     R1,[R0, #+3]
   \                     ??ScreenAlarmSet_Event_15:
   \   0000013E   0126               MOVS     R6,#+1
   4571                   
   4572                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_13:
   \   00000140   3C20               MOVS     R0,#+60
   \   00000142   3870               STRB     R0,[R7, #+0]
   \   00000144   2800               MOVS     R0,R5
   \   00000146   7870               STRB     R0,[R7, #+1]
   4573                    if (Button(txt,3,42,15,15)==1) { if(Screen->Alarm.ActorNode-1>0) Screen->Alarm.ActorNode--; else Screen->Alarm.ActorNode=NumberNeurons-1; Repaint=1;}  
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   0F20               MOVS     R0,#+15
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   0300               MOVS     R3,R0
   \   00000150   2A22               MOVS     R2,#+42
   \   00000152   0321               MOVS     R1,#+3
   \   00000154   02A8               ADD      R0,SP,#+8
   \   00000156   ........           BL       Button
   \   0000015A   02B0               ADD      SP,SP,#+8
   \   0000015C   0128               CMP      R0,#+1
   \   0000015E   0ED1               BNE      ??ScreenAlarmSet_Event_16
   \   00000160   2000               MOVS     R0,R4
   \   00000162   8C30               ADDS     R0,R0,#+140
   \   00000164   0021               MOVS     R1,#+0
   \   00000166   4156               LDRSB    R1,[R0, R1]
   \   00000168   491E               SUBS     R1,R1,#+1
   \   0000016A   0129               CMP      R1,#+1
   \   0000016C   04DB               BLT      ??ScreenAlarmSet_Event_17
   \   0000016E   0021               MOVS     R1,#+0
   \   00000170   4156               LDRSB    R1,[R0, R1]
   \   00000172   491E               SUBS     R1,R1,#+1
   \   00000174   0170               STRB     R1,[R0, #+0]
   \   00000176   01E0               B        ??ScreenAlarmSet_Event_18
   \                     ??ScreenAlarmSet_Event_17:
   \   00000178   2221               MOVS     R1,#+34
   \   0000017A   0170               STRB     R1,[R0, #+0]
   \                     ??ScreenAlarmSet_Event_18:
   \   0000017C   0126               MOVS     R6,#+1
   4574                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_16:
   \   0000017E   3E20               MOVS     R0,#+62
   \   00000180   3870               STRB     R0,[R7, #+0]
   4575                    if (Button(txt,45,42,15,15)==1) { if(Screen->Alarm.ActorNode+1<NumberNeurons) Screen->Alarm.ActorNode++; else Screen->Alarm.ActorNode=0; Repaint=1;} 
   \   00000182   82B0               SUB      SP,SP,#+8
   \   00000184   0F20               MOVS     R0,#+15
   \   00000186   0090               STR      R0,[SP, #+0]
   \   00000188   0300               MOVS     R3,R0
   \   0000018A   2A22               MOVS     R2,#+42
   \   0000018C   2D21               MOVS     R1,#+45
   \   0000018E   02A8               ADD      R0,SP,#+8
   \   00000190   ........           BL       Button
   \   00000194   02B0               ADD      SP,SP,#+8
   \   00000196   0128               CMP      R0,#+1
   \   00000198   0ED1               BNE      ??ScreenAlarmSet_Event_19
   \   0000019A   2000               MOVS     R0,R4
   \   0000019C   8C30               ADDS     R0,R0,#+140
   \   0000019E   0021               MOVS     R1,#+0
   \   000001A0   4156               LDRSB    R1,[R0, R1]
   \   000001A2   491C               ADDS     R1,R1,#+1
   \   000001A4   2329               CMP      R1,#+35
   \   000001A6   04DA               BGE      ??ScreenAlarmSet_Event_20
   \   000001A8   0021               MOVS     R1,#+0
   \   000001AA   4156               LDRSB    R1,[R0, R1]
   \   000001AC   491C               ADDS     R1,R1,#+1
   \   000001AE   0170               STRB     R1,[R0, #+0]
   \   000001B0   01E0               B        ??ScreenAlarmSet_Event_21
   \                     ??ScreenAlarmSet_Event_20:
   \   000001B2   2900               MOVS     R1,R5
   \   000001B4   0170               STRB     R1,[R0, #+0]
   \                     ??ScreenAlarmSet_Event_21:
   \   000001B6   0126               MOVS     R6,#+1
   4576                   
   4577                    txt[0]='<';txt[1]=0;
   \                     ??ScreenAlarmSet_Event_19:
   \   000001B8   3C20               MOVS     R0,#+60
   \   000001BA   3870               STRB     R0,[R7, #+0]
   \   000001BC   2800               MOVS     R0,R5
   \   000001BE   7870               STRB     R0,[R7, #+1]
   4578                    if (Button(txt,3,26,15,15)==1) { if(Screen->Alarm.ActorPort>0) Screen->Alarm.ActorPort--; else Screen->Alarm.ActorPort=NumberNeuronsPort-1; Repaint=1;}  
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   0F20               MOVS     R0,#+15
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   0300               MOVS     R3,R0
   \   000001C8   1A22               MOVS     R2,#+26
   \   000001CA   0321               MOVS     R1,#+3
   \   000001CC   02A8               ADD      R0,SP,#+8
   \   000001CE   ........           BL       Button
   \   000001D2   02B0               ADD      SP,SP,#+8
   \   000001D4   0128               CMP      R0,#+1
   \   000001D6   0AD1               BNE      ??ScreenAlarmSet_Event_22
   \   000001D8   2000               MOVS     R0,R4
   \   000001DA   8C30               ADDS     R0,R0,#+140
   \   000001DC   4178               LDRB     R1,[R0, #+1]
   \   000001DE   0029               CMP      R1,#+0
   \   000001E0   02D0               BEQ      ??ScreenAlarmSet_Event_23
   \   000001E2   491E               SUBS     R1,R1,#+1
   \   000001E4   4170               STRB     R1,[R0, #+1]
   \   000001E6   01E0               B        ??ScreenAlarmSet_Event_24
   \                     ??ScreenAlarmSet_Event_23:
   \   000001E8   0F21               MOVS     R1,#+15
   \   000001EA   4170               STRB     R1,[R0, #+1]
   \                     ??ScreenAlarmSet_Event_24:
   \   000001EC   0126               MOVS     R6,#+1
   4579                    txt[0]='>';
   \                     ??ScreenAlarmSet_Event_22:
   \   000001EE   3E20               MOVS     R0,#+62
   \   000001F0   3870               STRB     R0,[R7, #+0]
   4580                    if (Button(txt,45,26,15,15)==1) { if(Screen->Alarm.ActorPort+1<NumberNeuronsPort) Screen->Alarm.ActorPort++; else Screen->Alarm.ActorPort=0; Repaint=1;} 
   \   000001F2   82B0               SUB      SP,SP,#+8
   \   000001F4   0F20               MOVS     R0,#+15
   \   000001F6   0090               STR      R0,[SP, #+0]
   \   000001F8   0300               MOVS     R3,R0
   \   000001FA   1A22               MOVS     R2,#+26
   \   000001FC   2D21               MOVS     R1,#+45
   \   000001FE   02A8               ADD      R0,SP,#+8
   \   00000200   ........           BL       Button
   \   00000204   02B0               ADD      SP,SP,#+8
   \   00000206   0128               CMP      R0,#+1
   \   00000208   0DD1               BNE      ??ScreenAlarmSet_Event_2
   \   0000020A   8C34               ADDS     R4,R4,#+140
   \   0000020C   2000               MOVS     R0,R4
   \   0000020E   4178               LDRB     R1,[R0, #+1]
   \   00000210   491C               ADDS     R1,R1,#+1
   \   00000212   0904               LSLS     R1,R1,#+16
   \   00000214   090C               LSRS     R1,R1,#+16
   \   00000216   1029               CMP      R1,#+16
   \   00000218   03D2               BCS      ??ScreenAlarmSet_Event_25
   \   0000021A   4178               LDRB     R1,[R0, #+1]
   \   0000021C   491C               ADDS     R1,R1,#+1
   \   0000021E   4170               STRB     R1,[R0, #+1]
   \   00000220   00E0               B        ??ScreenAlarmSet_Event_26
   \                     ??ScreenAlarmSet_Event_25:
   \   00000222   4570               STRB     R5,[R0, #+1]
   \                     ??ScreenAlarmSet_Event_26:
   \   00000224   0126               MOVS     R6,#+1
   4581          
   4582                  }
   4583                  if (Repaint) MenuPaint();
   \                     ??ScreenAlarmSet_Event_2:
   \   00000226   002E               CMP      R6,#+0
   \   00000228   01D0               BEQ      ??ScreenAlarmSet_Event_27
   \   0000022A   ........           BL       MenuPaint
   4584          }
   \                     ??ScreenAlarmSet_Event_27:
   \   0000022E   FEBC               POP      {R1-R7}
   \   00000230   01BC               POP      {R0}
   \   00000232   0047               BX       R0               ;; return
   \                     ??ScreenAlarmSet_Event_0:
   \   00000234   ........           DC32     Y_down
   \   00000238   ........           DC32     X_down
   \   0000023C   ........           DC32     Y_up
   \   00000240   ........           DC32     X_up
   \   00000244   ........           DC32     TextToChangeLength
   4585          
   4586          
   4587          
   4588          
   4589          
   4590          

   \                                 In section Debug.txt, align 4, keep-with-next
   4591          void ZoneButon(char _Label[15], char poz_X , char poz_Y ,char width, char height, char *Vstring)
   4592          {
   \                     ZoneButon:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1500               MOVS     R5,R2
   \   00000006   1E00               MOVS     R6,R3
   \   00000008   6846               MOV      R0,SP
   \   0000000A   077E               LDRB     R7,[R0, #+24]
   4593           if (height>12)
   \   0000000C   0D2F               CMP      R7,#+13
   \   0000000E   30D3               BCC      ??ZoneButon_0
   4594           {
   4595            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000010   0221               MOVS     R1,#+2
   \   00000012   3800               MOVS     R0,R7
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   2100               MOVS     R1,R4
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   ........           BL       Zone
   \   0000001E   02B0               ADD      SP,SP,#+8
   4596            Label(Vstring,0,poz_X+2,poz_Y+height-10,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000020   A41C               ADDS     R4,R4,#+2
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   0A21               MOVS     R1,#+10
   \   00000030   0320               MOVS     R0,#+3
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   EB19               ADDS     R3,R5,R7
   \   00000036   0A3B               SUBS     R3,R3,#+10
   \   00000038   2200               MOVS     R2,R4
   \   0000003A   1206               LSLS     R2,R2,#+24
   \   0000003C   120E               LSRS     R2,R2,#+24
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   0D98               LDR      R0,[SP, #+52]
   \   00000042   ........           BL       Label
   \   00000046   06B0               ADD      SP,SP,#+24
   4597            Zone(_Label,poz_X+2,poz_Y+2,width-4,height-12,1); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with 
   \   00000048   0121               MOVS     R1,#+1
   \   0000004A   0C3F               SUBS     R7,R7,#+12
   \   0000004C   3800               MOVS     R0,R7
   \   0000004E   0006               LSLS     R0,R0,#+24
   \   00000050   000E               LSRS     R0,R0,#+24
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   331F               SUBS     R3,R6,#+4
   \   00000056   1B06               LSLS     R3,R3,#+24
   \   00000058   1B0E               LSRS     R3,R3,#+24
   \   0000005A   AD1C               ADDS     R5,R5,#+2
   \   0000005C   2A00               MOVS     R2,R5
   \   0000005E   1206               LSLS     R2,R2,#+24
   \   00000060   120E               LSRS     R2,R2,#+24
   \   00000062   2100               MOVS     R1,R4
   \   00000064   0906               LSLS     R1,R1,#+24
   \   00000066   090E               LSRS     R1,R1,#+24
   \   00000068   0298               LDR      R0,[SP, #+8]
   \   0000006A   ........           BL       Zone
   \   0000006E   02B0               ADD      SP,SP,#+8
   \   00000070   30E0               B        ??ZoneButon_1
   4598           }else{
   4599            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with, LineType- typ lini 0-bia³a 1=ci¹gla, 2=kropkowana, 3=kreskowana
   \                     ??ZoneButon_0:
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   3800               MOVS     R0,R7
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   2100               MOVS     R1,R4
   \   0000007A   0020               MOVS     R0,#+0
   \   0000007C   ........           BL       Zone
   \   00000080   02B0               ADD      SP,SP,#+8
   4600            
   4601            Label(Vstring,0,poz_X+2,poz_Y+1,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000082   82B0               SUB      SP,SP,#+8
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   0090               STR      R0,[SP, #+0]
   \   00000088   7F21               MOVS     R1,#+127
   \   0000008A   0120               MOVS     R0,#+1
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   0A21               MOVS     R1,#+10
   \   00000090   0320               MOVS     R0,#+3
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   2B00               MOVS     R3,R5
   \   00000096   5B1C               ADDS     R3,R3,#+1
   \   00000098   2200               MOVS     R2,R4
   \   0000009A   921C               ADDS     R2,R2,#+2
   \   0000009C   1206               LSLS     R2,R2,#+24
   \   0000009E   120E               LSRS     R2,R2,#+24
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   0D98               LDR      R0,[SP, #+52]
   \   000000A4   ........           BL       Label
   \   000000A8   06B0               ADD      SP,SP,#+24
   4602            Zone(_Label,poz_X+17,poz_Y+2,width-19,height-4,1); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with 
   \   000000AA   0121               MOVS     R1,#+1
   \   000000AC   381F               SUBS     R0,R7,#+4
   \   000000AE   0006               LSLS     R0,R0,#+24
   \   000000B0   000E               LSRS     R0,R0,#+24
   \   000000B2   03B4               PUSH     {R0,R1}
   \   000000B4   133E               SUBS     R6,R6,#+19
   \   000000B6   3300               MOVS     R3,R6
   \   000000B8   1B06               LSLS     R3,R3,#+24
   \   000000BA   1B0E               LSRS     R3,R3,#+24
   \   000000BC   AD1C               ADDS     R5,R5,#+2
   \   000000BE   2A00               MOVS     R2,R5
   \   000000C0   1206               LSLS     R2,R2,#+24
   \   000000C2   120E               LSRS     R2,R2,#+24
   \   000000C4   1134               ADDS     R4,R4,#+17
   \   000000C6   2100               MOVS     R1,R4
   \   000000C8   0906               LSLS     R1,R1,#+24
   \   000000CA   090E               LSRS     R1,R1,#+24
   \   000000CC   0298               LDR      R0,[SP, #+8]
   \   000000CE   ........           BL       Zone
   \   000000D2   02B0               ADD      SP,SP,#+8
   4603             
   4604           }
   4605          }
   \                     ??ZoneButon_1:
   \   000000D4   F8BC               POP      {R3-R7}
   \   000000D6   01BC               POP      {R0}
   \   000000D8   0047               BX       R0               ;; return
   4606          

   \                                 In section Debug.txt, align 4, keep-with-next
   4607          void ZoneGraph(char _Label[15], char poz_X , char poz_Y ,char width, char height, char *Vstring, _Graph *Graph)
   4608          {
   \                     ZoneGraph:
   \   00000000   FBB5               PUSH     {R0,R1,R3-R7,LR}
   \   00000002   0E00               MOVS     R6,R1
   \   00000004   1400               MOVS     R4,R2
   \   00000006   0A9D               LDR      R5,[SP, #+40]
   4609             if ((Graph->Type>GraphNone) && (Graph->Type<=GraphTermometr))
   \   00000008   2878               LDRB     R0,[R5, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   11D0               BEQ      ??ZoneGraph_0
   \   0000000E   0828               CMP      R0,#+8
   \   00000010   0FD2               BCS      ??ZoneGraph_0
   4610             {
   4611               CopyToCanvasPoint((char*) GraphTab[Graph->Type], poz_X, poz_Y+3, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   1220               MOVS     R0,#+18
   \   00000016   0090               STR      R0,[SP, #+0]
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   D21C               ADDS     R2,R2,#+3
   \   0000001C   1206               LSLS     R2,R2,#+24
   \   0000001E   120E               LSRS     R2,R2,#+24
   \   00000020   2878               LDRB     R0,[R5, #+0]
   \   00000022   3627               MOVS     R7,#+54
   \   00000024   7843               MULS     R0,R7,R0
   \   00000026   794F               LDR      R7,??ZoneGraph_1  ;; `?<Constant {0, 0}>`
   \   00000028   3818               ADDS     R0,R7,R0
   \   0000002A   9C30               ADDS     R0,R0,#+156
   \   0000002C   ........           BL       CopyToCanvasPoint
   \   00000030   02B0               ADD      SP,SP,#+8
   4612             
   4613             }   
   4614          
   4615             if ((Graph->Type==GraphOnOff) && (Graph->PlusOnOff==0))
   \                     ??ZoneGraph_0:
   \   00000032   2878               LDRB     R0,[R5, #+0]
   \   00000034   0B28               CMP      R0,#+11
   \   00000036   2AD1               BNE      ??ZoneGraph_2
   \   00000038   A879               LDRB     R0,[R5, #+6]
   \   0000003A   C007               LSLS     R0,R0,#+31
   \   0000003C   27D4               BMI      ??ZoneGraph_2
   4616             {
   4617               Label("On ",2,poz_X,poz_Y+(height/2)+2,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003E   08A8               ADD      R0,SP,#+32
   \   00000040   0078               LDRB     R0,[R0, #+0]
   \   00000042   4008               LSRS     R0,R0,#+1
   \   00000044   2718               ADDS     R7,R4,R0
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   7F21               MOVS     R1,#+127
   \   0000004E   0120               MOVS     R0,#+1
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   04A8               ADD      R0,SP,#+16
   \   00000054   017A               LDRB     R1,[R0, #+8]
   \   00000056   0320               MOVS     R0,#+3
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   3B00               MOVS     R3,R7
   \   0000005C   9B1C               ADDS     R3,R3,#+2
   \   0000005E   3200               MOVS     R2,R6
   \   00000060   0221               MOVS     R1,#+2
   \   00000062   6BA0               ADR      R0,??ZoneGraph_1+0x4  ;; "On "
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
   4618               Label("Off ",2,poz_X,poz_Y+(height/2)-6,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   0020               MOVS     R0,#+0
   \   0000006E   0090               STR      R0,[SP, #+0]
   \   00000070   7F21               MOVS     R1,#+127
   \   00000072   0120               MOVS     R0,#+1
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   04A8               ADD      R0,SP,#+16
   \   00000078   017A               LDRB     R1,[R0, #+8]
   \   0000007A   0320               MOVS     R0,#+3
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   BF1F               SUBS     R7,R7,#+6
   \   00000080   3B00               MOVS     R3,R7
   \   00000082   3200               MOVS     R2,R6
   \   00000084   0221               MOVS     R1,#+2
   \   00000086   6348               LDR      R0,??ZoneGraph_1+0x8  ;; `?<Constant {0, 0}>` + 76
   \   00000088   ........           BL       Label
   \   0000008C   06B0               ADD      SP,SP,#+24
   4619          
   4620             }   
   4621             
   4622             if (Graph->Type==GraphScena)
   \                     ??ZoneGraph_2:
   \   0000008E   2878               LDRB     R0,[R5, #+0]
   \   00000090   0928               CMP      R0,#+9
   \   00000092   22D1               BNE      ??ZoneGraph_3
   4623             {
   4624               Label("Scn ",2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000094   08A8               ADD      R0,SP,#+32
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   4008               LSRS     R0,R0,#+1
   \   0000009A   2718               ADDS     R7,R4,R0
   \   0000009C   82B0               SUB      SP,SP,#+8
   \   0000009E   0020               MOVS     R0,#+0
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   0120               MOVS     R0,#+1
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   04A8               ADD      R0,SP,#+16
   \   000000AA   017A               LDRB     R1,[R0, #+8]
   \   000000AC   0320               MOVS     R0,#+3
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   FB1E               SUBS     R3,R7,#+3
   \   000000B2   3200               MOVS     R2,R6
   \   000000B4   0221               MOVS     R1,#+2
   \   000000B6   5848               LDR      R0,??ZoneGraph_1+0xC  ;; `?<Constant {0, 0}>` + 84
   \   000000B8   ........           BL       Label
   \   000000BC   06B0               ADD      SP,SP,#+24
   4625               H_line(poz_X+3,poz_Y+(height/2)-5,width-6,1); 
   \   000000BE   0123               MOVS     R3,#+1
   \   000000C0   6846               MOV      R0,SP
   \   000000C2   007A               LDRB     R0,[R0, #+8]
   \   000000C4   821F               SUBS     R2,R0,#+6
   \   000000C6   1206               LSLS     R2,R2,#+24
   \   000000C8   120E               LSRS     R2,R2,#+24
   \   000000CA   7F1F               SUBS     R7,R7,#+5
   \   000000CC   3900               MOVS     R1,R7
   \   000000CE   3000               MOVS     R0,R6
   \   000000D0   C01C               ADDS     R0,R0,#+3
   \   000000D2   0006               LSLS     R0,R0,#+24
   \   000000D4   000E               LSRS     R0,R0,#+24
   \   000000D6   ........           BL       H_line
   4626             }
   4627             
   4628             if ((Graph->Type==GraphText) && (Graph->PlusOnOff==0))
   \                     ??ZoneGraph_3:
   \   000000DA   2878               LDRB     R0,[R5, #+0]
   \   000000DC   0828               CMP      R0,#+8
   \   000000DE   18D1               BNE      ??ZoneGraph_4
   \   000000E0   A879               LDRB     R0,[R5, #+6]
   \   000000E2   C007               LSLS     R0,R0,#+31
   \   000000E4   15D4               BMI      ??ZoneGraph_4
   4629             {
   4630               Label(Graph->Text,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000E6   82B0               SUB      SP,SP,#+8
   \   000000E8   0020               MOVS     R0,#+0
   \   000000EA   0090               STR      R0,[SP, #+0]
   \   000000EC   7F21               MOVS     R1,#+127
   \   000000EE   0120               MOVS     R0,#+1
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   04A8               ADD      R0,SP,#+16
   \   000000F4   017A               LDRB     R1,[R0, #+8]
   \   000000F6   0320               MOVS     R0,#+3
   \   000000F8   03B4               PUSH     {R0,R1}
   \   000000FA   0EA8               ADD      R0,SP,#+56
   \   000000FC   0078               LDRB     R0,[R0, #+0]
   \   000000FE   4008               LSRS     R0,R0,#+1
   \   00000100   2318               ADDS     R3,R4,R0
   \   00000102   DB1E               SUBS     R3,R3,#+3
   \   00000104   3200               MOVS     R2,R6
   \   00000106   0221               MOVS     R1,#+2
   \   00000108   2800               MOVS     R0,R5
   \   0000010A   401C               ADDS     R0,R0,#+1
   \   0000010C   ........           BL       Label
   \   00000110   06B0               ADD      SP,SP,#+24
   4631             }   
   4632             
   4633             if ((Graph->PlusOnOff) && (((Graph->Type==GraphOnOff))||(Graph->Type==GraphText)))
   \                     ??ZoneGraph_4:
   \   00000112   A879               LDRB     R0,[R5, #+6]
   \   00000114   C007               LSLS     R0,R0,#+31
   \   00000116   2DD5               BPL      ??ZoneGraph_5
   \   00000118   2878               LDRB     R0,[R5, #+0]
   \   0000011A   0B28               CMP      R0,#+11
   \   0000011C   01D0               BEQ      ??ZoneGraph_6
   \   0000011E   0828               CMP      R0,#+8
   \   00000120   28D1               BNE      ??ZoneGraph_5
   4634             {
   4635                Label(Graph->Text,2,poz_X,poz_Y+(height/2)+1,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ZoneGraph_6:
   \   00000122   08A8               ADD      R0,SP,#+32
   \   00000124   0078               LDRB     R0,[R0, #+0]
   \   00000126   4008               LSRS     R0,R0,#+1
   \   00000128   2718               ADDS     R7,R4,R0
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   0020               MOVS     R0,#+0
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   7F21               MOVS     R1,#+127
   \   00000132   0120               MOVS     R0,#+1
   \   00000134   03B4               PUSH     {R0,R1}
   \   00000136   04A8               ADD      R0,SP,#+16
   \   00000138   017A               LDRB     R1,[R0, #+8]
   \   0000013A   0320               MOVS     R0,#+3
   \   0000013C   03B4               PUSH     {R0,R1}
   \   0000013E   3B00               MOVS     R3,R7
   \   00000140   5B1C               ADDS     R3,R3,#+1
   \   00000142   3200               MOVS     R2,R6
   \   00000144   0221               MOVS     R1,#+2
   \   00000146   2800               MOVS     R0,R5
   \   00000148   401C               ADDS     R0,R0,#+1
   \   0000014A   ........           BL       Label
   \   0000014E   06B0               ADD      SP,SP,#+24
   4636                Label("On? ",2,poz_X,poz_Y+(height/2)-7,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000150   82B0               SUB      SP,SP,#+8
   \   00000152   0020               MOVS     R0,#+0
   \   00000154   0090               STR      R0,[SP, #+0]
   \   00000156   7F21               MOVS     R1,#+127
   \   00000158   0120               MOVS     R0,#+1
   \   0000015A   03B4               PUSH     {R0,R1}
   \   0000015C   04A8               ADD      R0,SP,#+16
   \   0000015E   017A               LDRB     R1,[R0, #+8]
   \   00000160   0320               MOVS     R0,#+3
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   FF1F               SUBS     R7,R7,#+7
   \   00000166   3B00               MOVS     R3,R7
   \   00000168   3200               MOVS     R2,R6
   \   0000016A   0221               MOVS     R1,#+2
   \   0000016C   2B48               LDR      R0,??ZoneGraph_1+0x10  ;; `?<Constant {0, 0}>` + 92
   \   0000016E   ........           BL       Label
   \   00000172   06B0               ADD      SP,SP,#+24
   4637             }
   4638             
   4639             
   4640             if (Graph->Type==GraphWartosc)
   \                     ??ZoneGraph_5:
   \   00000174   2878               LDRB     R0,[R5, #+0]
   \   00000176   0A28               CMP      R0,#+10
   \   00000178   1FD1               BNE      ??ZoneGraph_7
   4641              {
   4642                char txt[5];
   4643                txt[0]='A';txt[1]='n';txt[2]='a'; txt[3]=0; 
   \   0000017A   6846               MOV      R0,SP
   \   0000017C   4121               MOVS     R1,#+65
   \   0000017E   0170               STRB     R1,[R0, #+0]
   \   00000180   6E21               MOVS     R1,#+110
   \   00000182   4170               STRB     R1,[R0, #+1]
   \   00000184   6121               MOVS     R1,#+97
   \   00000186   8170               STRB     R1,[R0, #+2]
   \   00000188   0021               MOVS     R1,#+0
   \   0000018A   C170               STRB     R1,[R0, #+3]
   4644                Label(txt,2,poz_X-1,poz_Y+(height/2)-4,3,width,1,127,0); 
   \   0000018C   82B0               SUB      SP,SP,#+8
   \   0000018E   0800               MOVS     R0,R1
   \   00000190   0090               STR      R0,[SP, #+0]
   \   00000192   7F21               MOVS     R1,#+127
   \   00000194   0120               MOVS     R0,#+1
   \   00000196   03B4               PUSH     {R0,R1}
   \   00000198   04A8               ADD      R0,SP,#+16
   \   0000019A   017A               LDRB     R1,[R0, #+8]
   \   0000019C   0320               MOVS     R0,#+3
   \   0000019E   03B4               PUSH     {R0,R1}
   \   000001A0   0EA8               ADD      R0,SP,#+56
   \   000001A2   0078               LDRB     R0,[R0, #+0]
   \   000001A4   4008               LSRS     R0,R0,#+1
   \   000001A6   2318               ADDS     R3,R4,R0
   \   000001A8   1B1F               SUBS     R3,R3,#+4
   \   000001AA   721E               SUBS     R2,R6,#+1
   \   000001AC   1206               LSLS     R2,R2,#+24
   \   000001AE   120E               LSRS     R2,R2,#+24
   \   000001B0   0221               MOVS     R1,#+2
   \   000001B2   06A8               ADD      R0,SP,#+24
   \   000001B4   ........           BL       Label
   \   000001B8   06B0               ADD      SP,SP,#+24
   4645              }
   4646             
   4647            Zone(0,poz_X,poz_Y,width,height,2); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \                     ??ZoneGraph_7:
   \   000001BA   0221               MOVS     R1,#+2
   \   000001BC   08A8               ADD      R0,SP,#+32
   \   000001BE   0078               LDRB     R0,[R0, #+0]
   \   000001C0   03B4               PUSH     {R0,R1}
   \   000001C2   02A8               ADD      R0,SP,#+8
   \   000001C4   037A               LDRB     R3,[R0, #+8]
   \   000001C6   2200               MOVS     R2,R4
   \   000001C8   3100               MOVS     R1,R6
   \   000001CA   0020               MOVS     R0,#+0
   \   000001CC   ........           BL       Zone
   \   000001D0   02B0               ADD      SP,SP,#+8
   4648            if (Vstring!=0) Label(Vstring,0,poz_X+2,poz_Y+height-10,11,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001D2   0998               LDR      R0,[SP, #+36]
   \   000001D4   0028               CMP      R0,#+0
   \   000001D6   15D0               BEQ      ??ZoneGraph_8
   \   000001D8   82B0               SUB      SP,SP,#+8
   \   000001DA   0020               MOVS     R0,#+0
   \   000001DC   0090               STR      R0,[SP, #+0]
   \   000001DE   7F21               MOVS     R1,#+127
   \   000001E0   0120               MOVS     R0,#+1
   \   000001E2   03B4               PUSH     {R0,R1}
   \   000001E4   0A21               MOVS     R1,#+10
   \   000001E6   0B20               MOVS     R0,#+11
   \   000001E8   03B4               PUSH     {R0,R1}
   \   000001EA   0EA8               ADD      R0,SP,#+56
   \   000001EC   0078               LDRB     R0,[R0, #+0]
   \   000001EE   2318               ADDS     R3,R4,R0
   \   000001F0   0A3B               SUBS     R3,R3,#+10
   \   000001F2   B61C               ADDS     R6,R6,#+2
   \   000001F4   3200               MOVS     R2,R6
   \   000001F6   1206               LSLS     R2,R2,#+24
   \   000001F8   120E               LSRS     R2,R2,#+24
   \   000001FA   0021               MOVS     R1,#+0
   \   000001FC   0F98               LDR      R0,[SP, #+60]
   \   000001FE   ........           BL       Label
   \   00000202   06B0               ADD      SP,SP,#+24
   4649           
   4650          }
   \                     ??ZoneGraph_8:
   \   00000204   FEBC               POP      {R1-R7}
   \   00000206   01BC               POP      {R0}
   \   00000208   0047               BX       R0               ;; return
   \   0000020A   C046               Nop      
   \                     ??ZoneGraph_1:
   \   0000020C   ........           DC32     `?<Constant {0, 0}>`
   \   00000210   4F6E2000           DC8      "On "
   \   00000214   ........           DC32     `?<Constant {0, 0}>` + 76
   \   00000218   ........           DC32     `?<Constant {0, 0}>` + 84
   \   0000021C   ........           DC32     `?<Constant {0, 0}>` + 92
   4651          

   \                                 In section Debug.txt, align 4, keep-with-next
   4652          void ScreenGraph(char poz_X , char poz_Y ,char width, char height, _Graph *Graph)
   4653          {
   \                     ScreenGraph:
   \   00000000   F5B5               PUSH     {R0,R2,R4-R7,LR}
   \   00000002   83B0               SUB      SP,SP,#+12
   \   00000004   0C00               MOVS     R4,R1
   \   00000006   1D00               MOVS     R5,R3
   \   00000008   0A9E               LDR      R6,[SP, #+40]
   4654             if ((Graph->Type>GraphNone) && (Graph->Type<=GraphTermometr))
   \   0000000A   3078               LDRB     R0,[R6, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   14D0               BEQ      ??ScreenGraph_0
   \   00000010   0828               CMP      R0,#+8
   \   00000012   12D2               BCS      ??ScreenGraph_0
   4655             {
   4656               CopyToCanvasPoint((char*) GraphTab[Graph->Type], poz_X, poz_Y+3, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   00000014   82B0               SUB      SP,SP,#+8
   \   00000016   1220               MOVS     R0,#+18
   \   00000018   0090               STR      R0,[SP, #+0]
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   2200               MOVS     R2,R4
   \   0000001E   D21C               ADDS     R2,R2,#+3
   \   00000020   1206               LSLS     R2,R2,#+24
   \   00000022   120E               LSRS     R2,R2,#+24
   \   00000024   02A8               ADD      R0,SP,#+8
   \   00000026   017B               LDRB     R1,[R0, #+12]
   \   00000028   3078               LDRB     R0,[R6, #+0]
   \   0000002A   3627               MOVS     R7,#+54
   \   0000002C   7843               MULS     R0,R7,R0
   \   0000002E   B44F               LDR      R7,??ScreenGraph_1  ;; `?<Constant {0, 0}>`
   \   00000030   3818               ADDS     R0,R7,R0
   \   00000032   9C30               ADDS     R0,R0,#+156
   \   00000034   ........           BL       CopyToCanvasPoint
   \   00000038   02B0               ADD      SP,SP,#+8
   4657             
   4658             }   
   4659          
   4660             if ((Graph->Type==GraphOnOff) && (Graph->PlusOnOff==0))
   \                     ??ScreenGraph_0:
   \   0000003A   3078               LDRB     R0,[R6, #+0]
   \   0000003C   0B28               CMP      R0,#+11
   \   0000003E   3AD1               BNE      ??ScreenGraph_2
   \   00000040   B079               LDRB     R0,[R6, #+6]
   \   00000042   C007               LSLS     R0,R0,#+31
   \   00000044   37D4               BMI      ??ScreenGraph_2
   4661             {
   4662                
   4663                 if (PortStageRead(MainStage.StageI[Graph->Nr].Port, Graph->Port))
   \   00000046   7179               LDRB     R1,[R6, #+5]
   \   00000048   3079               LDRB     R0,[R6, #+4]
   \   0000004A   1422               MOVS     R2,#+20
   \   0000004C   5043               MULS     R0,R2,R0
   \   0000004E   AD4A               LDR      R2,??ScreenGraph_1+0x4  ;; MainStage
   \   00000050   1018               ADDS     R0,R2,R0
   \   00000052   A030               ADDS     R0,R0,#+160
   \   00000054   0088               LDRH     R0,[R0, #+0]
   \   00000056   0004               LSLS     R0,R0,#+16
   \   00000058   0014               ASRS     R0,R0,#+16
   \   0000005A   ........           BL       PortStageRead
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   82B0               SUB      SP,SP,#+8
   \   00000062   14D0               BEQ      ??ScreenGraph_3
   4664                 {
   4665                    Label("On",2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   7F21               MOVS     R1,#+127
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   04A8               ADD      R0,SP,#+16
   \   00000070   017C               LDRB     R1,[R0, #+16]
   \   00000072   0320               MOVS     R0,#+3
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   2800               MOVS     R0,R5
   \   00000078   4008               LSRS     R0,R0,#+1
   \   0000007A   2318               ADDS     R3,R4,R0
   \   0000007C   DB1E               SUBS     R3,R3,#+3
   \   0000007E   06A8               ADD      R0,SP,#+24
   \   00000080   027B               LDRB     R2,[R0, #+12]
   \   00000082   0221               MOVS     R1,#+2
   \   00000084   A0A0               ADR      R0,??ScreenGraph_1+0x8  ;; 0x4F, 0x6E, 0x00, 0x00
   \   00000086   ........           BL       Label
   \   0000008A   06B0               ADD      SP,SP,#+24
   \   0000008C   13E0               B        ??ScreenGraph_2
   4666                 }else{
   4667                    Label("Off",2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_3:
   \   0000008E   0020               MOVS     R0,#+0
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   7F21               MOVS     R1,#+127
   \   00000094   0120               MOVS     R0,#+1
   \   00000096   03B4               PUSH     {R0,R1}
   \   00000098   04A8               ADD      R0,SP,#+16
   \   0000009A   017C               LDRB     R1,[R0, #+16]
   \   0000009C   0320               MOVS     R0,#+3
   \   0000009E   03B4               PUSH     {R0,R1}
   \   000000A0   2800               MOVS     R0,R5
   \   000000A2   4008               LSRS     R0,R0,#+1
   \   000000A4   2318               ADDS     R3,R4,R0
   \   000000A6   DB1E               SUBS     R3,R3,#+3
   \   000000A8   06A8               ADD      R0,SP,#+24
   \   000000AA   027B               LDRB     R2,[R0, #+12]
   \   000000AC   0221               MOVS     R1,#+2
   \   000000AE   97A0               ADR      R0,??ScreenGraph_1+0xC  ;; "Off"
   \   000000B0   ........           BL       Label
   \   000000B4   06B0               ADD      SP,SP,#+24
   4668                 }
   4669             }
   4670             
   4671             if (Graph->Type==GraphScena)
   \                     ??ScreenGraph_2:
   \   000000B6   3078               LDRB     R0,[R6, #+0]
   \   000000B8   0928               CMP      R0,#+9
   \   000000BA   1DD1               BNE      ??ScreenGraph_4
   4672             {
   4673                char LabelButt[2] = {0,0};
   \   000000BC   02A8               ADD      R0,SP,#+8
   \   000000BE   0021               MOVS     R1,#+0
   \   000000C0   0160               STR      R1,[R0, #0]
   4674                
   4675                CharToStr(MainStage.SceneNr,LabelButt,1);
   \   000000C2   0122               MOVS     R2,#+1
   \   000000C4   02A9               ADD      R1,SP,#+8
   \   000000C6   9248               LDR      R0,??ScreenGraph_1+0x10  ;; MainStage + 1560
   \   000000C8   0078               LDRB     R0,[R0, #+0]
   \   000000CA   ........           BL       CharToStr
   4676                Label(LabelButt,2,poz_X,poz_Y+(height/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000CE   82B0               SUB      SP,SP,#+8
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   0090               STR      R0,[SP, #+0]
   \   000000D4   7F21               MOVS     R1,#+127
   \   000000D6   0120               MOVS     R0,#+1
   \   000000D8   03B4               PUSH     {R0,R1}
   \   000000DA   04A8               ADD      R0,SP,#+16
   \   000000DC   017C               LDRB     R1,[R0, #+16]
   \   000000DE   0320               MOVS     R0,#+3
   \   000000E0   03B4               PUSH     {R0,R1}
   \   000000E2   2800               MOVS     R0,R5
   \   000000E4   4008               LSRS     R0,R0,#+1
   \   000000E6   2318               ADDS     R3,R4,R0
   \   000000E8   DB1E               SUBS     R3,R3,#+3
   \   000000EA   06A8               ADD      R0,SP,#+24
   \   000000EC   027B               LDRB     R2,[R0, #+12]
   \   000000EE   0221               MOVS     R1,#+2
   \   000000F0   08A8               ADD      R0,SP,#+32
   \   000000F2   ........           BL       Label
   \   000000F6   06B0               ADD      SP,SP,#+24
   4677             }
   4678             
   4679             if ((Graph->Type==GraphText) && (Graph->PlusOnOff==0))
   \                     ??ScreenGraph_4:
   \   000000F8   3078               LDRB     R0,[R6, #+0]
   \   000000FA   0828               CMP      R0,#+8
   \   000000FC   18D1               BNE      ??ScreenGraph_5
   \   000000FE   B079               LDRB     R0,[R6, #+6]
   \   00000100   C007               LSLS     R0,R0,#+31
   \   00000102   15D4               BMI      ??ScreenGraph_5
   4680             {
   4681               Label(Graph->Text,2,poz_X,poz_Y+(width/2)-3,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0020               MOVS     R0,#+0
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   7F21               MOVS     R1,#+127
   \   0000010C   0120               MOVS     R0,#+1
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   04A8               ADD      R0,SP,#+16
   \   00000112   017C               LDRB     R1,[R0, #+16]
   \   00000114   0320               MOVS     R0,#+3
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   0800               MOVS     R0,R1
   \   0000011A   4008               LSRS     R0,R0,#+1
   \   0000011C   2318               ADDS     R3,R4,R0
   \   0000011E   DB1E               SUBS     R3,R3,#+3
   \   00000120   06A8               ADD      R0,SP,#+24
   \   00000122   027B               LDRB     R2,[R0, #+12]
   \   00000124   0221               MOVS     R1,#+2
   \   00000126   3000               MOVS     R0,R6
   \   00000128   401C               ADDS     R0,R0,#+1
   \   0000012A   ........           BL       Label
   \   0000012E   06B0               ADD      SP,SP,#+24
   4682             }   
   4683             
   4684                if ((Graph->PlusOnOff) && (((Graph->Type==GraphOnOff))||(Graph->Type==GraphText)))
   \                     ??ScreenGraph_5:
   \   00000130   B079               LDRB     R0,[R6, #+6]
   \   00000132   C007               LSLS     R0,R0,#+31
   \   00000134   4FD5               BPL      ??ScreenGraph_6
   \   00000136   3078               LDRB     R0,[R6, #+0]
   \   00000138   0B28               CMP      R0,#+11
   \   0000013A   01D0               BEQ      ??ScreenGraph_7
   \   0000013C   0828               CMP      R0,#+8
   \   0000013E   4AD1               BNE      ??ScreenGraph_6
   4685             {
   4686                Label(Graph->Text,2,poz_X,poz_Y+(height/2)+1,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_7:
   \   00000140   2800               MOVS     R0,R5
   \   00000142   4008               LSRS     R0,R0,#+1
   \   00000144   2718               ADDS     R7,R4,R0
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   0020               MOVS     R0,#+0
   \   0000014A   0090               STR      R0,[SP, #+0]
   \   0000014C   7F21               MOVS     R1,#+127
   \   0000014E   0120               MOVS     R0,#+1
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   04A8               ADD      R0,SP,#+16
   \   00000154   017C               LDRB     R1,[R0, #+16]
   \   00000156   0320               MOVS     R0,#+3
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   3B00               MOVS     R3,R7
   \   0000015C   5B1C               ADDS     R3,R3,#+1
   \   0000015E   06A8               ADD      R0,SP,#+24
   \   00000160   027B               LDRB     R2,[R0, #+12]
   \   00000162   0221               MOVS     R1,#+2
   \   00000164   3000               MOVS     R0,R6
   \   00000166   401C               ADDS     R0,R0,#+1
   \   00000168   ........           BL       Label
   \   0000016C   06B0               ADD      SP,SP,#+24
   4687                if (PortStageRead(MainStage.StageI[Graph->Nr].Port, Graph->Port))
   \   0000016E   7179               LDRB     R1,[R6, #+5]
   \   00000170   3079               LDRB     R0,[R6, #+4]
   \   00000172   1422               MOVS     R2,#+20
   \   00000174   5043               MULS     R0,R2,R0
   \   00000176   634A               LDR      R2,??ScreenGraph_1+0x4  ;; MainStage
   \   00000178   1018               ADDS     R0,R2,R0
   \   0000017A   A030               ADDS     R0,R0,#+160
   \   0000017C   0088               LDRH     R0,[R0, #+0]
   \   0000017E   0004               LSLS     R0,R0,#+16
   \   00000180   0014               ASRS     R0,R0,#+16
   \   00000182   ........           BL       PortStageRead
   \   00000186   0028               CMP      R0,#+0
   \   00000188   82B0               SUB      SP,SP,#+8
   \   0000018A   12D0               BEQ      ??ScreenGraph_8
   4688                 {
   4689                    Label("On",2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000018C   0020               MOVS     R0,#+0
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   7F21               MOVS     R1,#+127
   \   00000192   0120               MOVS     R0,#+1
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   04A8               ADD      R0,SP,#+16
   \   00000198   017C               LDRB     R1,[R0, #+16]
   \   0000019A   0320               MOVS     R0,#+3
   \   0000019C   03B4               PUSH     {R0,R1}
   \   0000019E   083F               SUBS     R7,R7,#+8
   \   000001A0   3B00               MOVS     R3,R7
   \   000001A2   06A8               ADD      R0,SP,#+24
   \   000001A4   027B               LDRB     R2,[R0, #+12]
   \   000001A6   0221               MOVS     R1,#+2
   \   000001A8   57A0               ADR      R0,??ScreenGraph_1+0x8  ;; 0x4F, 0x6E, 0x00, 0x00
   \   000001AA   ........           BL       Label
   \   000001AE   06B0               ADD      SP,SP,#+24
   \   000001B0   11E0               B        ??ScreenGraph_6
   4690                 }else{
   4691                    Label("Off",2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ScreenGraph_8:
   \   000001B2   0020               MOVS     R0,#+0
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   7F21               MOVS     R1,#+127
   \   000001B8   0120               MOVS     R0,#+1
   \   000001BA   03B4               PUSH     {R0,R1}
   \   000001BC   04A8               ADD      R0,SP,#+16
   \   000001BE   017C               LDRB     R1,[R0, #+16]
   \   000001C0   0320               MOVS     R0,#+3
   \   000001C2   03B4               PUSH     {R0,R1}
   \   000001C4   083F               SUBS     R7,R7,#+8
   \   000001C6   3B00               MOVS     R3,R7
   \   000001C8   06A8               ADD      R0,SP,#+24
   \   000001CA   027B               LDRB     R2,[R0, #+12]
   \   000001CC   0221               MOVS     R1,#+2
   \   000001CE   4FA0               ADR      R0,??ScreenGraph_1+0xC  ;; "Off"
   \   000001D0   ........           BL       Label
   \   000001D4   06B0               ADD      SP,SP,#+24
   4692                 }
   4693             }
   4694             
   4695             
   4696                           //Analogi
   4697               char IlLiter=0;
   4698              signed short Value;
   4699              char txt[5];
   4700             if (Graph->Type==GraphWartosc)
   \                     ??ScreenGraph_6:
   \   000001D6   3078               LDRB     R0,[R6, #+0]
   \   000001D8   0A28               CMP      R0,#+10
   \   000001DA   00D0               BEQ      .+4
   \   000001DC   8BE0               B        ??ScreenGraph_9
   4701             {
   4702              
   4703                               if ((Graph->Nr>0) || ((Graph->Nr==0)&&(Graph->Reg>0)))
   \   000001DE   3079               LDRB     R0,[R6, #+4]
   \   000001E0   0028               CMP      R0,#+0
   \   000001E2   05D1               BNE      ??ScreenGraph_10
   \   000001E4   00D0               BEQ      .+4
   \   000001E6   86E0               B        ??ScreenGraph_9
   \   000001E8   7079               LDRB     R0,[R6, #+5]
   \   000001EA   0028               CMP      R0,#+0
   \   000001EC   00D1               BNE      .+4
   \   000001EE   82E0               B        ??ScreenGraph_9
   4704                               {
   4705                               IlLiter=0;
   4706                               Value=MainStage.StageI[Graph->Nr].Value[Graph->Reg];
   \                     ??ScreenGraph_10:
   \   000001F0   A020               MOVS     R0,#+160
   \   000001F2   7179               LDRB     R1,[R6, #+5]
   \   000001F4   4900               LSLS     R1,R1,#+1
   \   000001F6   3279               LDRB     R2,[R6, #+4]
   \   000001F8   1423               MOVS     R3,#+20
   \   000001FA   5A43               MULS     R2,R3,R2
   \   000001FC   414B               LDR      R3,??ScreenGraph_1+0x4  ;; MainStage
   \   000001FE   9A18               ADDS     R2,R3,R2
   \   00000200   5118               ADDS     R1,R2,R1
   \   00000202   085E               LDRSH    R0,[R1, R0]
   4707          
   4708                               if (Value==(signed short)0x8AAA)  //je¿eli sygna³ niewiarygodny
   \   00000204   4349               LDR      R1,??ScreenGraph_1+0x14  ;; 0xffff8aaa
   \   00000206   8842               CMP      R0,R1
   \   00000208   1AD1               BNE      ??ScreenGraph_11
   4709                               {
   4710                                 txt[0]='?';txt[1]='?';txt[2]='?'; txt[3]=0; IlLiter+=3;
   \   0000020A   3F20               MOVS     R0,#+63
   \   0000020C   6946               MOV      R1,SP
   \   0000020E   0870               STRB     R0,[R1, #+0]
   \   00000210   4870               STRB     R0,[R1, #+1]
   \   00000212   8870               STRB     R0,[R1, #+2]
   \   00000214   0020               MOVS     R0,#+0
   \   00000216   C870               STRB     R0,[R1, #+3]
   4711                                 Label(txt,2,poz_X,poz_Y+(height/2)-8,3,width,1,127,0);
   \   00000218   82B0               SUB      SP,SP,#+8
   \   0000021A   0090               STR      R0,[SP, #+0]
   \   0000021C   7F21               MOVS     R1,#+127
   \   0000021E   0120               MOVS     R0,#+1
   \   00000220   03B4               PUSH     {R0,R1}
   \   00000222   04A8               ADD      R0,SP,#+16
   \   00000224   017C               LDRB     R1,[R0, #+16]
   \   00000226   0320               MOVS     R0,#+3
   \   00000228   03B4               PUSH     {R0,R1}
   \   0000022A   2800               MOVS     R0,R5
   \   0000022C   4008               LSRS     R0,R0,#+1
   \   0000022E   2318               ADDS     R3,R4,R0
   \   00000230   083B               SUBS     R3,R3,#+8
   \   00000232   06A8               ADD      R0,SP,#+24
   \   00000234   027B               LDRB     R2,[R0, #+12]
   \   00000236   0221               MOVS     R1,#+2
   \   00000238   ........           BL       Label
   \   0000023C   06B0               ADD      SP,SP,#+24
   \   0000023E   5AE0               B        ??ScreenGraph_9
   4712                               }else{ //je¿eli sygna³ wiarygodny
   4713                                
   4714                                 if (Graph->Flip)
   \                     ??ScreenGraph_11:
   \   00000240   B179               LDRB     R1,[R6, #+6]
   \   00000242   0029               CMP      R1,#+0
   \   00000244   6946               MOV      R1,SP
   \   00000246   2BD0               BEQ      ??ScreenGraph_12
   4715                                   {
   4716                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   \   00000248   ........           BL       sIntToStr
   \   0000024C   0200               MOVS     R2,R0
   4717                                       Label(txt,2,poz_X,poz_Y+(height/2)+0,IlLiter,width,1,127,0);
   \   0000024E   2800               MOVS     R0,R5
   \   00000250   4008               LSRS     R0,R0,#+1
   \   00000252   2718               ADDS     R7,R4,R0
   \   00000254   82B0               SUB      SP,SP,#+8
   \   00000256   0020               MOVS     R0,#+0
   \   00000258   0090               STR      R0,[SP, #+0]
   \   0000025A   7F21               MOVS     R1,#+127
   \   0000025C   0120               MOVS     R0,#+1
   \   0000025E   03B4               PUSH     {R0,R1}
   \   00000260   04A8               ADD      R0,SP,#+16
   \   00000262   017C               LDRB     R1,[R0, #+16]
   \   00000264   1000               MOVS     R0,R2
   \   00000266   03B4               PUSH     {R0,R1}
   \   00000268   3B00               MOVS     R3,R7
   \   0000026A   06A8               ADD      R0,SP,#+24
   \   0000026C   027B               LDRB     R2,[R0, #+12]
   \   0000026E   0221               MOVS     R1,#+2
   \   00000270   ........           BL       Label
   \   00000274   06B0               ADD      SP,SP,#+24
   4718                                       Label(Graph->Text,2,poz_X,poz_Y+(height/2)-9,3,width,1,127,0);
   \   00000276   82B0               SUB      SP,SP,#+8
   \   00000278   0020               MOVS     R0,#+0
   \   0000027A   0090               STR      R0,[SP, #+0]
   \   0000027C   7F21               MOVS     R1,#+127
   \   0000027E   0120               MOVS     R0,#+1
   \   00000280   03B4               PUSH     {R0,R1}
   \   00000282   04A8               ADD      R0,SP,#+16
   \   00000284   017C               LDRB     R1,[R0, #+16]
   \   00000286   0320               MOVS     R0,#+3
   \   00000288   03B4               PUSH     {R0,R1}
   \   0000028A   093F               SUBS     R7,R7,#+9
   \   0000028C   3B00               MOVS     R3,R7
   \   0000028E   06A8               ADD      R0,SP,#+24
   \   00000290   027B               LDRB     R2,[R0, #+12]
   \   00000292   0221               MOVS     R1,#+2
   \   00000294   761C               ADDS     R6,R6,#+1
   \   00000296   3000               MOVS     R0,R6
   \   00000298   ........           BL       Label
   \   0000029C   06B0               ADD      SP,SP,#+24
   \   0000029E   2AE0               B        ??ScreenGraph_9
   4719                                       
   4720                                   }else{
   4721                                       IlLiter=sIntToStr(Value, &(txt[0])); //(char Value, char *Vstring, char ill);
   \                     ??ScreenGraph_12:
   \   000002A0   ........           BL       sIntToStr
   \   000002A4   0200               MOVS     R2,R0
   4722                                       Label(txt,2,poz_X,poz_Y+(height/2)-9,IlLiter,width,1,127,0);
   \   000002A6   2800               MOVS     R0,R5
   \   000002A8   4008               LSRS     R0,R0,#+1
   \   000002AA   2718               ADDS     R7,R4,R0
   \   000002AC   82B0               SUB      SP,SP,#+8
   \   000002AE   0020               MOVS     R0,#+0
   \   000002B0   0090               STR      R0,[SP, #+0]
   \   000002B2   7F21               MOVS     R1,#+127
   \   000002B4   0120               MOVS     R0,#+1
   \   000002B6   03B4               PUSH     {R0,R1}
   \   000002B8   04A8               ADD      R0,SP,#+16
   \   000002BA   017C               LDRB     R1,[R0, #+16]
   \   000002BC   1000               MOVS     R0,R2
   \   000002BE   03B4               PUSH     {R0,R1}
   \   000002C0   3B00               MOVS     R3,R7
   \   000002C2   093B               SUBS     R3,R3,#+9
   \   000002C4   06A8               ADD      R0,SP,#+24
   \   000002C6   027B               LDRB     R2,[R0, #+12]
   \   000002C8   0221               MOVS     R1,#+2
   \   000002CA   ........           BL       Label
   \   000002CE   06B0               ADD      SP,SP,#+24
   4723                                       Label(Graph->Text,2,poz_X,poz_Y+(height/2)+0,3,width,1,127,0);
   \   000002D0   82B0               SUB      SP,SP,#+8
   \   000002D2   0020               MOVS     R0,#+0
   \   000002D4   0090               STR      R0,[SP, #+0]
   \   000002D6   7F21               MOVS     R1,#+127
   \   000002D8   0120               MOVS     R0,#+1
   \   000002DA   03B4               PUSH     {R0,R1}
   \   000002DC   04A8               ADD      R0,SP,#+16
   \   000002DE   017C               LDRB     R1,[R0, #+16]
   \   000002E0   0320               MOVS     R0,#+3
   \   000002E2   03B4               PUSH     {R0,R1}
   \   000002E4   3B00               MOVS     R3,R7
   \   000002E6   06A8               ADD      R0,SP,#+24
   \   000002E8   027B               LDRB     R2,[R0, #+12]
   \   000002EA   0221               MOVS     R1,#+2
   \   000002EC   761C               ADDS     R6,R6,#+1
   \   000002EE   3000               MOVS     R0,R6
   \   000002F0   ........           BL       Label
   \   000002F4   06B0               ADD      SP,SP,#+24
   4724                                   }
   4725          
   4726                               }  
   4727                 
   4728                               
   4729                                                        
   4730                               }
   4731             }
   4732                      
   4733             
   4734             
   4735          }
   \                     ??ScreenGraph_9:
   \   000002F6   05B0               ADD      SP,SP,#+20
   \   000002F8   F0BC               POP      {R4-R7}
   \   000002FA   01BC               POP      {R0}
   \   000002FC   0047               BX       R0               ;; return
   \   000002FE   C046               Nop      
   \                     ??ScreenGraph_1:
   \   00000300   ........           DC32     `?<Constant {0, 0}>`
   \   00000304   ........           DC32     MainStage
   \   00000308   4F6E0000           DC8      0x4F, 0x6E, 0x00, 0x00
   \   0000030C   4F666600           DC8      "Off"
   \   00000310   ........           DC32     MainStage + 1560
   \   00000314   AA8AFFFF           DC32     0xffff8aaa
   4736          
   4737          
   4738          

   \                                 In section Debug.txt, align 4, keep-with-next
   4739          void ScreenDesign1_Paint(_Screen *ScreenLocal)
   4740          {
   \                     ScreenDesign1_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   4741          
   4742            const _ScreenPaternDesign *ScreenPaternDesign;
   4743            CleanCanvas();
   \   00000004   ........           BL       CleanCanvas
   \   00000008   8748               LDR      R0,??ScreenDesign1_Paint_0  ;; TextToChangeLength + 5
   \   0000000A   0078               LDRB     R0,[R0, #+0]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   01D1               BNE      ??ScreenDesign1_Paint_1
   4744            if (CurModifSheet==0) 
   4745            {
   4746              ScreenPaternDesign=ScreenSetTab_0;
   \   00000010   864C               LDR      R4,??ScreenDesign1_Paint_0+0x4  ;; `?<Constant {129, 0}>` + 24
   \   00000012   0EE0               B        ??ScreenDesign1_Paint_2
   4747            }else{
   4748              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??ScreenDesign1_Paint_1:
   \   00000014   864C               LDR      R4,??ScreenDesign1_Paint_0+0x8  ;; `?<Constant {129, 0}>` + 992
   4749              
   4750              //Strefa etykiety podstrony
   4751               ZoneGraph(0, 15,114,38,12,
   4752                      ScreenLocal->Label,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000016   82B0               SUB      SP,SP,#+8
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   0090               STR      R0,[SP, #+0]
   \   0000001C   0499               LDR      R1,[SP, #+16]
   \   0000001E   491C               ADDS     R1,R1,#+1
   \   00000020   0C20               MOVS     R0,#+12
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   2623               MOVS     R3,#+38
   \   00000026   7222               MOVS     R2,#+114
   \   00000028   0F21               MOVS     R1,#+15
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   ........           BL       ZoneGraph
   \   00000030   04B0               ADD      SP,SP,#+16
   4753              
   4754              
   4755            }  
   4756          
   4757           
   4758             char PaternDesign=ScreenLocal->PaternDesign;
   \                     ??ScreenDesign1_Paint_2:
   \   00000032   0298               LDR      R0,[SP, #+8]
   \   00000034   0078               LDRB     R0,[R0, #+0]
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   01A8               ADD      R0,SP,#+4
   \   0000003A   7E49               LDR      R1,??ScreenDesign1_Paint_0+0xC  ;; `?<Constant {129, 0}>`
   \   0000003C   0A68               LDR      R2,[R1, #0]
   \   0000003E   0260               STR      R2,[R0, #0]
   4759          
   4760             
   4761             
   4762             
   4763             char LabelButt[2] = {129,0};
   4764             Button(LabelButt,0,113,13,13);
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   0D20               MOVS     R0,#+13
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   0300               MOVS     R3,R0
   \   00000048   7122               MOVS     R2,#+113
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   03A8               ADD      R0,SP,#+12
   \   0000004E   ........           BL       Button
   \   00000052   02B0               ADD      SP,SP,#+8
   \   00000054   0025               MOVS     R5,#+0
   \   00000056   25E0               B        ??ScreenDesign1_Paint_3
   4765          
   4766             //przyciski
   4767            for (char i=0; i<ScrenButtonNr; i++)
   4768            {
   4769              if (ScreenPaternDesign[PaternDesign].Button[i].Width>0)
   \                     ??ScreenDesign1_Paint_4:
   \   00000058   0098               LDR      R0,[SP, #+0]
   \   0000005A   0006               LSLS     R0,R0,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \   0000005E   5821               MOVS     R1,#+88
   \   00000060   4843               MULS     R0,R1,R0
   \   00000062   2018               ADDS     R0,R4,R0
   \   00000064   2E00               MOVS     R6,R5
   \   00000066   B100               LSLS     R1,R6,#+2
   \   00000068   4718               ADDS     R7,R0,R1
   \   0000006A   B878               LDRB     R0,[R7, #+2]
   \   0000006C   0028               CMP      R0,#+0
   \   0000006E   16D0               BEQ      ??ScreenDesign1_Paint_5
   4770              {
   4771                      ZoneButon(ScreenLocal->Button[i].Text,
   4772                      ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   4773                      ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   4774                      ScreenPaternDesign[PaternDesign].Button[i].Width,
   4775                      ScreenPaternDesign[PaternDesign].Button[i].Height,(char*)ButtonName[i+10*CurModifSheet]); //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000070   D420               MOVS     R0,#+212
   \   00000072   C000               LSLS     R0,R0,#+3        ;; #+1696
   \   00000074   6C49               LDR      R1,??ScreenDesign1_Paint_0  ;; TextToChangeLength + 5
   \   00000076   0978               LDRB     R1,[R1, #+0]
   \   00000078   0A22               MOVS     R2,#+10
   \   0000007A   5143               MULS     R1,R2,R1
   \   0000007C   7118               ADDS     R1,R6,R1
   \   0000007E   8900               LSLS     R1,R1,#+2
   \   00000080   6C4A               LDR      R2,??ScreenDesign1_Paint_0+0xC  ;; `?<Constant {129, 0}>`
   \   00000082   5118               ADDS     R1,R2,R1
   \   00000084   0918               ADDS     R1,R1,R0
   \   00000086   F878               LDRB     R0,[R7, #+3]
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   BB78               LDRB     R3,[R7, #+2]
   \   0000008C   7A78               LDRB     R2,[R7, #+1]
   \   0000008E   3978               LDRB     R1,[R7, #+0]
   \   00000090   F000               LSLS     R0,R6,#+3
   \   00000092   049E               LDR      R6,[SP, #+16]
   \   00000094   3018               ADDS     R0,R6,R0
   \   00000096   0B30               ADDS     R0,R0,#+11
   \   00000098   ........           BL       ZoneButon
   \   0000009C   02B0               ADD      SP,SP,#+8
   4776              }
   4777             }
   \                     ??ScreenDesign1_Paint_5:
   \   0000009E   6D1C               ADDS     R5,R5,#+1
   \   000000A0   2D06               LSLS     R5,R5,#+24
   \   000000A2   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_3:
   \   000000A4   2800               MOVS     R0,R5
   \   000000A6   0928               CMP      R0,#+9
   \   000000A8   D6D3               BCC      ??ScreenDesign1_Paint_4
   4778          
   4779          
   4780            //grafika
   4781            for (char i=0; i<ScrenGraphNr; i++)
   \   000000AA   0025               MOVS     R5,#+0
   \   000000AC   20E0               B        ??ScreenDesign1_Paint_6
   4782            {
   4783          
   4784              if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??ScreenDesign1_Paint_7:
   \   000000AE   0098               LDR      R0,[SP, #+0]
   \   000000B0   0006               LSLS     R0,R0,#+24
   \   000000B2   000E               LSRS     R0,R0,#+24
   \   000000B4   5821               MOVS     R1,#+88
   \   000000B6   4843               MULS     R0,R1,R0
   \   000000B8   2018               ADDS     R0,R4,R0
   \   000000BA   2900               MOVS     R1,R5
   \   000000BC   8A00               LSLS     R2,R1,#+2
   \   000000BE   8618               ADDS     R6,R0,R2
   \   000000C0   2436               ADDS     R6,R6,#+36
   \   000000C2   B078               LDRB     R0,[R6, #+2]
   \   000000C4   0028               CMP      R0,#+0
   \   000000C6   10D0               BEQ      ??ScreenDesign1_Paint_8
   4785              {
   4786                      ZoneGraph(0,
   4787                      ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   4788                      ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   4789                      ScreenPaternDesign[PaternDesign].Graph[i].Width,
   4790                      ScreenPaternDesign[PaternDesign].Graph[i].Height,
   4791                      0,&(ScreenLocal->Graph[i]));  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   0720               MOVS     R0,#+7
   \   000000CC   4143               MULS     R1,R0,R1
   \   000000CE   0498               LDR      R0,[SP, #+16]
   \   000000D0   4018               ADDS     R0,R0,R1
   \   000000D2   5330               ADDS     R0,R0,#+83
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   F078               LDRB     R0,[R6, #+3]
   \   000000DA   03B4               PUSH     {R0,R1}
   \   000000DC   B378               LDRB     R3,[R6, #+2]
   \   000000DE   7278               LDRB     R2,[R6, #+1]
   \   000000E0   3178               LDRB     R1,[R6, #+0]
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   ........           BL       ZoneGraph
   \   000000E8   04B0               ADD      SP,SP,#+16
   4792              
   4793              }
   4794             }
   \                     ??ScreenDesign1_Paint_8:
   \   000000EA   6D1C               ADDS     R5,R5,#+1
   \   000000EC   2D06               LSLS     R5,R5,#+24
   \   000000EE   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_6:
   \   000000F0   2800               MOVS     R0,R5
   \   000000F2   0428               CMP      R0,#+4
   \   000000F4   DBD3               BCC      ??ScreenDesign1_Paint_7
   4795          
   4796             //analogi
   4797             for (char i=0; i<ScrenAnalogNr; i++)
   \   000000F6   0025               MOVS     R5,#+0
   \   000000F8   1CE0               B        ??ScreenDesign1_Paint_9
   4798             {
   4799                 if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
   \                     ??ScreenDesign1_Paint_10:
   \   000000FA   0098               LDR      R0,[SP, #+0]
   \   000000FC   0006               LSLS     R0,R0,#+24
   \   000000FE   000E               LSRS     R0,R0,#+24
   \   00000100   5821               MOVS     R1,#+88
   \   00000102   4843               MULS     R0,R1,R0
   \   00000104   2018               ADDS     R0,R4,R0
   \   00000106   2900               MOVS     R1,R5
   \   00000108   8900               LSLS     R1,R1,#+2
   \   0000010A   4618               ADDS     R6,R0,R1
   \   0000010C   3436               ADDS     R6,R6,#+52
   \   0000010E   B078               LDRB     R0,[R6, #+2]
   \   00000110   0028               CMP      R0,#+0
   \   00000112   0CD0               BEQ      ??ScreenDesign1_Paint_11
   4800              {
   4801                      ZoneGraph(0,
   4802                      ScreenPaternDesign[PaternDesign].Value[i].Poz.x,
   4803                      ScreenPaternDesign[PaternDesign].Value[i].Poz.y,
   4804                      ScreenPaternDesign[PaternDesign].Value[i].Width,
   4805                      ScreenPaternDesign[PaternDesign].Value[i].Height,
   4806                      "Analo. ",0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   0020               MOVS     R0,#+0
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   4749               LDR      R1,??ScreenDesign1_Paint_0+0x10  ;; `?<Constant {129, 0}>` + 16
   \   0000011C   F078               LDRB     R0,[R6, #+3]
   \   0000011E   03B4               PUSH     {R0,R1}
   \   00000120   B378               LDRB     R3,[R6, #+2]
   \   00000122   7278               LDRB     R2,[R6, #+1]
   \   00000124   3178               LDRB     R1,[R6, #+0]
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   ........           BL       ZoneGraph
   \   0000012C   04B0               ADD      SP,SP,#+16
   4807              
   4808              }
   4809             }
   \                     ??ScreenDesign1_Paint_11:
   \   0000012E   6D1C               ADDS     R5,R5,#+1
   \   00000130   2D06               LSLS     R5,R5,#+24
   \   00000132   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_9:
   \   00000134   2800               MOVS     R0,R5
   \   00000136   0428               CMP      R0,#+4
   \   00000138   DFD3               BCC      ??ScreenDesign1_Paint_10
   4810            
   4811             //Linie
   4812             for (char i=0; i<ScrenLineNr; i++)
   \   0000013A   0025               MOVS     R5,#+0
   \   0000013C   08E0               B        ??ScreenDesign1_Paint_12
   4813             {
   4814              if (ScreenPaternDesign[PaternDesign].Line[i].Width>0)
   4815              {
   4816                  if (ScreenPaternDesign[PaternDesign].Line[i].Width>ScreenPaternDesign[PaternDesign].Line[i].Height)
   4817                  {
   4818                      H_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Width,1); // (char X, int Y, char lenght, char typ)
   4819                  }else{
   4820                      V_line(ScreenPaternDesign[PaternDesign].Line[i].Poz.x,ScreenPaternDesign[PaternDesign].Line[i].Poz.y,ScreenPaternDesign[PaternDesign].Line[i].Height,1); // (char X, int Y, char lenght, char typ)
   \                     ??ScreenDesign1_Paint_13:
   \   0000013E   0123               MOVS     R3,#+1
   \   00000140   0A00               MOVS     R2,R1
   \   00000142   4178               LDRB     R1,[R0, #+1]
   \   00000144   0078               LDRB     R0,[R0, #+0]
   \   00000146   ........           BL       V_line
   4821              
   4822                  }
   \                     ??ScreenDesign1_Paint_14:
   \   0000014A   6D1C               ADDS     R5,R5,#+1
   \   0000014C   2D06               LSLS     R5,R5,#+24
   \   0000014E   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Paint_12:
   \   00000150   2800               MOVS     R0,R5
   \   00000152   0228               CMP      R0,#+2
   \   00000154   16D2               BCS      ??ScreenDesign1_Paint_15
   \   00000156   0098               LDR      R0,[SP, #+0]
   \   00000158   0006               LSLS     R0,R0,#+24
   \   0000015A   000E               LSRS     R0,R0,#+24
   \   0000015C   5821               MOVS     R1,#+88
   \   0000015E   4843               MULS     R0,R1,R0
   \   00000160   2018               ADDS     R0,R4,R0
   \   00000162   2900               MOVS     R1,R5
   \   00000164   8900               LSLS     R1,R1,#+2
   \   00000166   4018               ADDS     R0,R0,R1
   \   00000168   4430               ADDS     R0,R0,#+68
   \   0000016A   8178               LDRB     R1,[R0, #+2]
   \   0000016C   0029               CMP      R1,#+0
   \   0000016E   ECD0               BEQ      ??ScreenDesign1_Paint_14
   \   00000170   C178               LDRB     R1,[R0, #+3]
   \   00000172   8278               LDRB     R2,[R0, #+2]
   \   00000174   9142               CMP      R1,R2
   \   00000176   E2D2               BCS      ??ScreenDesign1_Paint_13
   \   00000178   0123               MOVS     R3,#+1
   \   0000017A   4178               LDRB     R1,[R0, #+1]
   \   0000017C   0078               LDRB     R0,[R0, #+0]
   \   0000017E   ........           BL       H_line
   \   00000182   E2E7               B        ??ScreenDesign1_Paint_14
   4823              }
   4824             }
   4825          
   4826             //Zegar
   4827             for (char i=0; i<ScrenLineNr; i++)
   \                     ??ScreenDesign1_Paint_15:
   \   00000184   0026               MOVS     R6,#+0
   \   00000186   21E0               B        ??ScreenDesign1_Paint_16
   4828             {
   4829              if (ScreenPaternDesign[PaternDesign].Time.Width>0)
   \                     ??ScreenDesign1_Paint_17:
   \   00000188   0098               LDR      R0,[SP, #+0]
   \   0000018A   0006               LSLS     R0,R0,#+24
   \   0000018C   000E               LSRS     R0,R0,#+24
   \   0000018E   5821               MOVS     R1,#+88
   \   00000190   4843               MULS     R0,R1,R0
   \   00000192   2018               ADDS     R0,R4,R0
   \   00000194   4C30               ADDS     R0,R0,#+76
   \   00000196   0500               MOVS     R5,R0
   \   00000198   A879               LDRB     R0,[R5, #+6]
   \   0000019A   0028               CMP      R0,#+0
   \   0000019C   13D0               BEQ      ??ScreenDesign1_Paint_18
   4830              {
   4831                      ZoneGraph(0,
   4832                      ScreenPaternDesign[PaternDesign].Time.Poz.x,
   4833                      ScreenPaternDesign[PaternDesign].Time.Poz.y,
   4834                      ScreenPaternDesign[PaternDesign].Time.Width,
   4835                      ScreenPaternDesign[PaternDesign].Time.Height,
   4836                      Speech[g_leng].Zegar,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   0000019E   82B0               SUB      SP,SP,#+8
   \   000001A0   0020               MOVS     R0,#+0
   \   000001A2   0090               STR      R0,[SP, #+0]
   \   000001A4   2548               LDR      R0,??ScreenDesign1_Paint_0+0x14  ;; 0x3de
   \   000001A6   2649               LDR      R1,??ScreenDesign1_Paint_0+0x18  ;; g_leng
   \   000001A8   0968               LDR      R1,[R1, #+0]
   \   000001AA   264A               LDR      R2,??ScreenDesign1_Paint_0+0x1C  ;; 0xa14
   \   000001AC   5143               MULS     R1,R2,R1
   \   000001AE   264A               LDR      R2,??ScreenDesign1_Paint_0+0x20  ;; Speech
   \   000001B0   5118               ADDS     R1,R2,R1
   \   000001B2   0918               ADDS     R1,R1,R0
   \   000001B4   E879               LDRB     R0,[R5, #+7]
   \   000001B6   03B4               PUSH     {R0,R1}
   \   000001B8   AB79               LDRB     R3,[R5, #+6]
   \   000001BA   6A79               LDRB     R2,[R5, #+5]
   \   000001BC   2979               LDRB     R1,[R5, #+4]
   \   000001BE   0020               MOVS     R0,#+0
   \   000001C0   ........           BL       ZoneGraph
   \   000001C4   04B0               ADD      SP,SP,#+16
   4837              }
   4838             }  
   \                     ??ScreenDesign1_Paint_18:
   \   000001C6   761C               ADDS     R6,R6,#+1
   \   000001C8   3606               LSLS     R6,R6,#+24
   \   000001CA   360E               LSRS     R6,R6,#+24
   \                     ??ScreenDesign1_Paint_16:
   \   000001CC   3000               MOVS     R0,R6
   \   000001CE   0228               CMP      R0,#+2
   \   000001D0   DAD3               BCC      ??ScreenDesign1_Paint_17
   4839            
   4840             //Du¿a temperatura
   4841             for (char i=0; i<ScrenLineNr; i++)
   \   000001D2   0026               MOVS     R6,#+0
   \   000001D4   21E0               B        ??ScreenDesign1_Paint_19
   4842             {
   4843              if (ScreenPaternDesign[PaternDesign].Temperature.Width>0)
   \                     ??ScreenDesign1_Paint_20:
   \   000001D6   0098               LDR      R0,[SP, #+0]
   \   000001D8   0006               LSLS     R0,R0,#+24
   \   000001DA   000E               LSRS     R0,R0,#+24
   \   000001DC   5821               MOVS     R1,#+88
   \   000001DE   4843               MULS     R0,R1,R0
   \   000001E0   2018               ADDS     R0,R4,R0
   \   000001E2   4C30               ADDS     R0,R0,#+76
   \   000001E4   0500               MOVS     R5,R0
   \   000001E6   A878               LDRB     R0,[R5, #+2]
   \   000001E8   0028               CMP      R0,#+0
   \   000001EA   13D0               BEQ      ??ScreenDesign1_Paint_21
   4844              {
   4845                      ZoneGraph(0,
   4846                      ScreenPaternDesign[PaternDesign].Temperature.Poz.x,
   4847                      ScreenPaternDesign[PaternDesign].Temperature.Poz.y,
   4848                      ScreenPaternDesign[PaternDesign].Temperature.Width,
   4849                      ScreenPaternDesign[PaternDesign].Temperature.Height,
   4850                      Speech[g_leng].Temperatura,0);  //graf2   //*  Label- etykieta,  poz_X - pozycja lewy róg, poz_Y - pozycja dolny róg, height, with
   \   000001EC   82B0               SUB      SP,SP,#+8
   \   000001EE   0020               MOVS     R0,#+0
   \   000001F0   0090               STR      R0,[SP, #+0]
   \   000001F2   1648               LDR      R0,??ScreenDesign1_Paint_0+0x24  ;; 0x744
   \   000001F4   1249               LDR      R1,??ScreenDesign1_Paint_0+0x18  ;; g_leng
   \   000001F6   0968               LDR      R1,[R1, #+0]
   \   000001F8   124A               LDR      R2,??ScreenDesign1_Paint_0+0x1C  ;; 0xa14
   \   000001FA   5143               MULS     R1,R2,R1
   \   000001FC   124A               LDR      R2,??ScreenDesign1_Paint_0+0x20  ;; Speech
   \   000001FE   5118               ADDS     R1,R2,R1
   \   00000200   0918               ADDS     R1,R1,R0
   \   00000202   E878               LDRB     R0,[R5, #+3]
   \   00000204   03B4               PUSH     {R0,R1}
   \   00000206   AB78               LDRB     R3,[R5, #+2]
   \   00000208   6A78               LDRB     R2,[R5, #+1]
   \   0000020A   2978               LDRB     R1,[R5, #+0]
   \   0000020C   0020               MOVS     R0,#+0
   \   0000020E   ........           BL       ZoneGraph
   \   00000212   04B0               ADD      SP,SP,#+16
   4851                      
   4852          
   4853                      
   4854                      
   4855              }
   4856             }   
   \                     ??ScreenDesign1_Paint_21:
   \   00000214   761C               ADDS     R6,R6,#+1
   \   00000216   3606               LSLS     R6,R6,#+24
   \   00000218   360E               LSRS     R6,R6,#+24
   \                     ??ScreenDesign1_Paint_19:
   \   0000021A   3000               MOVS     R0,R6
   \   0000021C   0228               CMP      R0,#+2
   \   0000021E   DAD3               BCC      ??ScreenDesign1_Paint_20
   4857            
   4858            
   4859          }
   \   00000220   FEBC               POP      {R1-R7}
   \   00000222   01BC               POP      {R0}
   \   00000224   0047               BX       R0               ;; return
   \   00000226   C046               Nop      
   \                     ??ScreenDesign1_Paint_0:
   \   00000228   ........           DC32     TextToChangeLength + 5
   \   0000022C   ........           DC32     `?<Constant {129, 0}>` + 24
   \   00000230   ........           DC32     `?<Constant {129, 0}>` + 992
   \   00000234   ........           DC32     `?<Constant {129, 0}>`
   \   00000238   ........           DC32     `?<Constant {129, 0}>` + 16
   \   0000023C   DE030000           DC32     0x3de
   \   00000240   ........           DC32     g_leng
   \   00000244   140A0000           DC32     0xa14
   \   00000248   ........           DC32     Speech
   \   0000024C   44070000           DC32     0x744
   4860          
   4861          
   4862          char ZoneButtonClick=0;
   4863          char ZoneGrapfNrClick=0;
   4864          char ZoneValueNrClick=0;
   4865          char ZoneLabelClick=0;
   4866          int TxtSpaceAvable=0;
   4867          

   \                                 In section Debug.txt, align 4, keep-with-next
   4868          void ScreenDesign1_Event(_Screen* ScreenLokal)
   4869          {
   \                     ScreenDesign1_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   4870            char PaternDesign=ScreenLokal->PaternDesign;
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0290               STR      R0,[SP, #+8]
   4871            
   4872            const _ScreenPaternDesign *ScreenPaternDesign;
   4873            if (CurModifSheet==0) 
   \   00000008   9A4C               LDR      R4,??ScreenDesign1_Event_0  ;; TextToChangeLength
   \   0000000A   6079               LDRB     R0,[R4, #+5]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   02D1               BNE      ??ScreenDesign1_Event_1
   4874            {
   4875              ScreenPaternDesign=ScreenSetTab_0;
   \   00000010   9948               LDR      R0,??ScreenDesign1_Event_0+0x4  ;; `?<Constant {129, 0}>` + 24
   \   00000012   0090               STR      R0,[SP, #+0]
   \   00000014   01E0               B        ??ScreenDesign1_Event_2
   4876            }else{
   4877              ScreenPaternDesign=ScreenSetTab_1; 
   \                     ??ScreenDesign1_Event_1:
   \   00000016   9948               LDR      R0,??ScreenDesign1_Event_0+0x8  ;; `?<Constant {129, 0}>` + 992
   \   00000018   0090               STR      R0,[SP, #+0]
   4878            }  
   4879            
   4880            
   4881                   char LabelButt[2] = {129,0};
   \                     ??ScreenDesign1_Event_2:
   \   0000001A   01A8               ADD      R0,SP,#+4
   \   0000001C   9849               LDR      R1,??ScreenDesign1_Event_0+0xC  ;; `?<Constant {129, 0}>_1`
   \   0000001E   0A68               LDR      R2,[R1, #0]
   \   00000020   0260               STR      R2,[R0, #0]
   4882                   if (Button(LabelButt,0,113,13,13)==1)
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0D20               MOVS     R0,#+13
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   0300               MOVS     R3,R0
   \   0000002A   7122               MOVS     R2,#+113
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   03A8               ADD      R0,SP,#+12
   \   00000030   ........           BL       Button
   \   00000034   02B0               ADD      SP,SP,#+8
   \   00000036   0128               CMP      R0,#+1
   \   00000038   15D1               BNE      ??ScreenDesign1_Event_3
   4883                   {
   4884                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe063]: shift count is too large
   \   0000003A   9248               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   0000003C   0078               LDRB     R0,[R0, #+0]
   \   0000003E   0028               CMP      R0,#+0
   \   00000040   09D1               BNE      ??ScreenDesign1_Event_4
   \   00000042   9148               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   0160               STR      R1,[R0, #+0]
   \   00000048   904A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   0000004A   9148               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   0000004C   03C8               LDM      R0!,{R0,R1}
   \   0000004E   0023               MOVS     R3,#+0
   \   00000050   0830               ADDS     R0,R0,#+8
   \   00000052   5941               ADCS     R1,R1,R3
   \   00000054   03C2               STM      R2!,{R0,R1}
   4885                        MenuLevel=(MenuLevel/10);
   \                     ??ScreenDesign1_Event_4:
   \   00000056   A06C               LDR      R0,[R4, #+72]
   \   00000058   0A21               MOVS     R1,#+10
   \   0000005A   ........           BL       __aeabi_idivmod
   \   0000005E   A064               STR      R0,[R4, #+72]
   4886                        MenuPaint();
   \   00000060   ........           BL       MenuPaint
   \   00000064   02E1               B        ??ScreenDesign1_Event_5
   4887                    } 
   \                     ??ScreenDesign1_Event_3:
   \   00000066   0020               MOVS     R0,#+0
   \   00000068   E075               STRB     R0,[R4, #+23]
   4888                   else
   4889                   {   
   4890                     
   4891                     
   4892                    
   4893                   ZoneButtonClick=0;
   4894                   ZoneGrapfNrClick=0;
   \   0000006A   2076               STRB     R0,[R4, #+24]
   4895                 
   4896                   
   4897              
   4898                   //STREFY przycisków
   4899                    for (char i=0; i<ScrenButtonNr; i++)
   \   0000006C   0500               MOVS     R5,R0
   \   0000006E   27E0               B        ??ScreenDesign1_Event_6
   4900                    {
   4901                      if (ScreenPaternDesign[PaternDesign].Button[i].Width>0)
   \                     ??ScreenDesign1_Event_7:
   \   00000070   8000               LSLS     R0,R0,#+2
   \   00000072   3E18               ADDS     R6,R7,R0
   \   00000074   B078               LDRB     R0,[R6, #+2]
   \   00000076   0028               CMP      R0,#+0
   \   00000078   1FD0               BEQ      ??ScreenDesign1_Event_8
   4902                      {
   4903                        if (
   4904                            Zone(0,  //*  (char _Label[15], char poz_ , char poz_Y ,char width, char height, char LineType) 
   4905                            ScreenPaternDesign[PaternDesign].Button[i].Poz.x,
   4906                            ScreenPaternDesign[PaternDesign].Button[i].Poz.y,
   4907                            ScreenPaternDesign[PaternDesign].Button[i].Width,
   4908                            ScreenPaternDesign[PaternDesign].Button[i].Height,
   4909                            2)==1
   4910                           )
   \   0000007A   0221               MOVS     R1,#+2
   \   0000007C   F078               LDRB     R0,[R6, #+3]
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   B378               LDRB     R3,[R6, #+2]
   \   00000082   7278               LDRB     R2,[R6, #+1]
   \   00000084   3178               LDRB     R1,[R6, #+0]
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   ........           BL       Zone
   \   0000008C   02B0               ADD      SP,SP,#+8
   \   0000008E   0128               CMP      R0,#+1
   \   00000090   13D1               BNE      ??ScreenDesign1_Event_8
   4911                           {
   4912                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe063]: shift count is too large
   \   00000092   7C48               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000094   0078               LDRB     R0,[R0, #+0]
   \   00000096   0028               CMP      R0,#+0
   \   00000098   09D1               BNE      ??ScreenDesign1_Event_9
   \   0000009A   7B48               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   0000009C   0021               MOVS     R1,#+0
   \   0000009E   0160               STR      R1,[R0, #+0]
   \   000000A0   7A4A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   000000A2   7B48               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   000000A4   03C8               LDM      R0!,{R0,R1}
   \   000000A6   0023               MOVS     R3,#+0
   \   000000A8   0830               ADDS     R0,R0,#+8
   \   000000AA   5941               ADCS     R1,R1,R3
   \   000000AC   03C2               STM      R2!,{R0,R1}
   4913                             ZoneButtonClick=i+1;
   \                     ??ScreenDesign1_Event_9:
   \   000000AE   2800               MOVS     R0,R5
   \   000000B0   401C               ADDS     R0,R0,#+1
   \   000000B2   E075               STRB     R0,[R4, #+23]
   4914                             TxtSpaceAvable=ScreenPaternDesign[PaternDesign].Button[i].Width-6;
   \   000000B4   B078               LDRB     R0,[R6, #+2]
   \   000000B6   801F               SUBS     R0,R0,#+6
   \   000000B8   6067               STR      R0,[R4, #+116]
   4915                           }
   4916                      }
   4917                    }
   \                     ??ScreenDesign1_Event_8:
   \   000000BA   6D1C               ADDS     R5,R5,#+1
   \   000000BC   2D06               LSLS     R5,R5,#+24
   \   000000BE   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Event_6:
   \   000000C0   0298               LDR      R0,[SP, #+8]
   \   000000C2   0006               LSLS     R0,R0,#+24
   \   000000C4   000E               LSRS     R0,R0,#+24
   \   000000C6   5821               MOVS     R1,#+88
   \   000000C8   4843               MULS     R0,R1,R0
   \   000000CA   0099               LDR      R1,[SP, #+0]
   \   000000CC   0F18               ADDS     R7,R1,R0
   \   000000CE   2800               MOVS     R0,R5
   \   000000D0   0928               CMP      R0,#+9
   \   000000D2   CDD3               BCC      ??ScreenDesign1_Event_7
   \   000000D4   FF20               MOVS     R0,#+255
   \   000000D6   2076               STRB     R0,[R4, #+24]
   4918                    
   4919          
   4920                     
   4921                     
   4922                     //Strefy grafiki
   4923                     ZoneGrapfNrClick=0xff;
   4924                    for (char i=0; i<ScrenGraphNr; i++)
   \   000000D8   0025               MOVS     R5,#+0
   \   000000DA   27E0               B        ??ScreenDesign1_Event_10
   4925                    {
   4926                      if (ScreenPaternDesign[PaternDesign].Graph[i].Width>0)
   \                     ??ScreenDesign1_Event_11:
   \   000000DC   8000               LSLS     R0,R0,#+2
   \   000000DE   3E18               ADDS     R6,R7,R0
   \   000000E0   2436               ADDS     R6,R6,#+36
   \   000000E2   B078               LDRB     R0,[R6, #+2]
   \   000000E4   0028               CMP      R0,#+0
   \   000000E6   1ED0               BEQ      ??ScreenDesign1_Event_12
   4927                      {
   4928                        if (
   4929                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   4930                            ScreenPaternDesign[PaternDesign].Graph[i].Poz.x,
   4931                            ScreenPaternDesign[PaternDesign].Graph[i].Poz.y,
   4932                            ScreenPaternDesign[PaternDesign].Graph[i].Width,
   4933                            ScreenPaternDesign[PaternDesign].Graph[i].Height,
   4934                            2)==1
   4935                           )
   \   000000E8   0221               MOVS     R1,#+2
   \   000000EA   F078               LDRB     R0,[R6, #+3]
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   B378               LDRB     R3,[R6, #+2]
   \   000000F0   7278               LDRB     R2,[R6, #+1]
   \   000000F2   3178               LDRB     R1,[R6, #+0]
   \   000000F4   0020               MOVS     R0,#+0
   \   000000F6   ........           BL       Zone
   \   000000FA   02B0               ADD      SP,SP,#+8
   \   000000FC   0128               CMP      R0,#+1
   \   000000FE   12D1               BNE      ??ScreenDesign1_Event_12
   4936                           {
   4937                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe063]: shift count is too large
   \   00000100   6048               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000102   0078               LDRB     R0,[R0, #+0]
   \   00000104   0028               CMP      R0,#+0
   \   00000106   09D1               BNE      ??ScreenDesign1_Event_13
   \   00000108   5F48               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   0000010A   0021               MOVS     R1,#+0
   \   0000010C   0160               STR      R1,[R0, #+0]
   \   0000010E   5F4A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   00000110   5F48               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   00000112   03C8               LDM      R0!,{R0,R1}
   \   00000114   0023               MOVS     R3,#+0
   \   00000116   0830               ADDS     R0,R0,#+8
   \   00000118   5941               ADCS     R1,R1,R3
   \   0000011A   03C2               STM      R2!,{R0,R1}
   4938                             TxtSpaceAvable=ScreenPaternDesign[PaternDesign].Graph[i].Width-6;
   \                     ??ScreenDesign1_Event_13:
   \   0000011C   B078               LDRB     R0,[R6, #+2]
   \   0000011E   801F               SUBS     R0,R0,#+6
   \   00000120   6067               STR      R0,[R4, #+116]
   4939                             ZoneGrapfNrClick=i;
   \   00000122   2800               MOVS     R0,R5
   \   00000124   2076               STRB     R0,[R4, #+24]
   4940                           }
   4941                      }
   4942                    }
   \                     ??ScreenDesign1_Event_12:
   \   00000126   6D1C               ADDS     R5,R5,#+1
   \   00000128   2D06               LSLS     R5,R5,#+24
   \   0000012A   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Event_10:
   \   0000012C   2800               MOVS     R0,R5
   \   0000012E   0428               CMP      R0,#+4
   \   00000130   D4D3               BCC      ??ScreenDesign1_Event_11
   4943                    
   4944          
   4945                    //Strefy analogów
   4946                    ZoneValueNrClick=0xff;
   \   00000132   FF20               MOVS     R0,#+255
   \   00000134   6076               STRB     R0,[R4, #+25]
   4947                    for (char i=0; i<ScrenAnalogNr; i++)
   \   00000136   0025               MOVS     R5,#+0
   \   00000138   24E0               B        ??ScreenDesign1_Event_14
   4948                    {
   4949                      if (ScreenPaternDesign[PaternDesign].Value[i].Width>0)
   \                     ??ScreenDesign1_Event_15:
   \   0000013A   8000               LSLS     R0,R0,#+2
   \   0000013C   3E18               ADDS     R6,R7,R0
   \   0000013E   3436               ADDS     R6,R6,#+52
   \   00000140   B078               LDRB     R0,[R6, #+2]
   \   00000142   0028               CMP      R0,#+0
   \   00000144   1BD0               BEQ      ??ScreenDesign1_Event_16
   4950                      {
   4951                        if (
   4952                            Zone(0,  //*  (char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   4953                            ScreenPaternDesign[PaternDesign].Value[i].Poz.x,
   4954                            ScreenPaternDesign[PaternDesign].Value[i].Poz.y,
   4955                            ScreenPaternDesign[PaternDesign].Value[i].Width,
   4956                            ScreenPaternDesign[PaternDesign].Value[i].Height,
   4957                            2)==1
   4958                           )
   \   00000146   0221               MOVS     R1,#+2
   \   00000148   F078               LDRB     R0,[R6, #+3]
   \   0000014A   03B4               PUSH     {R0,R1}
   \   0000014C   B378               LDRB     R3,[R6, #+2]
   \   0000014E   7278               LDRB     R2,[R6, #+1]
   \   00000150   3178               LDRB     R1,[R6, #+0]
   \   00000152   0020               MOVS     R0,#+0
   \   00000154   ........           BL       Zone
   \   00000158   02B0               ADD      SP,SP,#+8
   \   0000015A   0128               CMP      R0,#+1
   \   0000015C   0FD1               BNE      ??ScreenDesign1_Event_16
   4959                           {
   4960                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                          ^
Warning[Pe063]: shift count is too large
   \   0000015E   4948               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   00000160   0078               LDRB     R0,[R0, #+0]
   \   00000162   0028               CMP      R0,#+0
   \   00000164   09D1               BNE      ??ScreenDesign1_Event_17
   \   00000166   4848               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   00000168   0021               MOVS     R1,#+0
   \   0000016A   0160               STR      R1,[R0, #+0]
   \   0000016C   474A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   0000016E   4848               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   00000170   03C8               LDM      R0!,{R0,R1}
   \   00000172   0023               MOVS     R3,#+0
   \   00000174   0830               ADDS     R0,R0,#+8
   \   00000176   5941               ADCS     R1,R1,R3
   \   00000178   03C2               STM      R2!,{R0,R1}
   4961                             ZoneValueNrClick=i;
   \                     ??ScreenDesign1_Event_17:
   \   0000017A   2800               MOVS     R0,R5
   \   0000017C   6076               STRB     R0,[R4, #+25]
   4962                           }
   4963                      }
   4964                    }
   \                     ??ScreenDesign1_Event_16:
   \   0000017E   6D1C               ADDS     R5,R5,#+1
   \   00000180   2D06               LSLS     R5,R5,#+24
   \   00000182   2D0E               LSRS     R5,R5,#+24
   \                     ??ScreenDesign1_Event_14:
   \   00000184   2800               MOVS     R0,R5
   \   00000186   0428               CMP      R0,#+4
   \   00000188   D7D3               BCC      ??ScreenDesign1_Event_15
   4965                    
   4966                    
   4967                    
   4968                    
   4969                       //Du¿a temperatura
   4970                     char  ZoneTemperature=0;
   \   0000018A   0025               MOVS     R5,#+0
   4971          
   4972                      if (ScreenPaternDesign[PaternDesign].Temperature.Width>0)
   \   0000018C   4C37               ADDS     R7,R7,#+76
   \   0000018E   B878               LDRB     R0,[R7, #+2]
   \   00000190   0028               CMP      R0,#+0
   \   00000192   1AD0               BEQ      ??ScreenDesign1_Event_18
   4973                      {   
   4974                            if(
   4975                                Zone(0,
   4976                                ScreenPaternDesign[PaternDesign].Temperature.Poz.x,
   4977                                ScreenPaternDesign[PaternDesign].Temperature.Poz.y,
   4978                                ScreenPaternDesign[PaternDesign].Temperature.Width,
   4979                                ScreenPaternDesign[PaternDesign].Temperature.Height,
   4980                                2)==1  
   4981                              )
   \   00000194   0221               MOVS     R1,#+2
   \   00000196   F878               LDRB     R0,[R7, #+3]
   \   00000198   03B4               PUSH     {R0,R1}
   \   0000019A   BB78               LDRB     R3,[R7, #+2]
   \   0000019C   7A78               LDRB     R2,[R7, #+1]
   \   0000019E   3978               LDRB     R1,[R7, #+0]
   \   000001A0   2800               MOVS     R0,R5
   \   000001A2   ........           BL       Zone
   \   000001A6   02B0               ADD      SP,SP,#+8
   \   000001A8   0128               CMP      R0,#+1
   \   000001AA   0ED1               BNE      ??ScreenDesign1_Event_18
   4982                             {
   4983                               if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                            ^
Warning[Pe063]: shift count is too large
   \   000001AC   3548               LDR      R0,??ScreenDesign1_Event_0+0x10  ;; 0x13d7e9
   \   000001AE   0078               LDRB     R0,[R0, #+0]
   \   000001B0   0028               CMP      R0,#+0
   \   000001B2   09D1               BNE      ??ScreenDesign1_Event_19
   \   000001B4   3448               LDR      R0,??ScreenDesign1_Event_0+0x14  ;; 0xfffff430
   \   000001B6   2900               MOVS     R1,R5
   \   000001B8   0160               STR      R1,[R0, #+0]
   \   000001BA   344A               LDR      R2,??ScreenDesign1_Event_0+0x18  ;; ButtonBipCounter
   \   000001BC   3448               LDR      R0,??ScreenDesign1_Event_0+0x1C  ;; g_counter
   \   000001BE   03C8               LDM      R0!,{R0,R1}
   \   000001C0   0023               MOVS     R3,#+0
   \   000001C2   0830               ADDS     R0,R0,#+8
   \   000001C4   5941               ADCS     R1,R1,R3
   \   000001C6   03C2               STM      R2!,{R0,R1}
   4984                               ZoneTemperature=1;
   \                     ??ScreenDesign1_Event_19:
   \   000001C8   0125               MOVS     R5,#+1
   4985                             }
   4986                     }
   4987                    
   4988          
   4989                    //Strefa etykiety podstrony
   4990                     ZoneLabelClick=0;
   \                     ??ScreenDesign1_Event_18:
   \   000001CA   0020               MOVS     R0,#+0
   \   000001CC   A076               STRB     R0,[R4, #+26]
   4991          
   4992                     if (CurModifSheet>0) 
   \   000001CE   6079               LDRB     R0,[R4, #+5]
   \   000001D0   0028               CMP      R0,#+0
   \   000001D2   0CD0               BEQ      ??ScreenDesign1_Event_20
   4993                    {
   4994                        if (
   4995                            Zone(0, 15,114,38,12,
   4996                            2)==1
   4997                           )
   \   000001D4   0221               MOVS     R1,#+2
   \   000001D6   0C20               MOVS     R0,#+12
   \   000001D8   03B4               PUSH     {R0,R1}
   \   000001DA   2623               MOVS     R3,#+38
   \   000001DC   7222               MOVS     R2,#+114
   \   000001DE   0F21               MOVS     R1,#+15
   \   000001E0   0020               MOVS     R0,#+0
   \   000001E2   ........           BL       Zone
   \   000001E6   02B0               ADD      SP,SP,#+8
   \   000001E8   0128               CMP      R0,#+1
   \   000001EA   00D1               BNE      ??ScreenDesign1_Event_20
   4998                           {
   4999                             ZoneLabelClick=1;
   \   000001EC   A076               STRB     R0,[R4, #+26]
   5000                           }          
   5001                    } 
   5002                    
   5003                        
   5004                    
   5005                   
   5006                    
   5007          
   5008                   
   5009                     if (ZoneButtonClick>0)
   \                     ??ScreenDesign1_Event_20:
   \   000001EE   E07D               LDRB     R0,[R4, #+23]
   \   000001F0   0028               CMP      R0,#+0
   \   000001F2   0BD0               BEQ      ??ScreenDesign1_Event_21
   5010                     {
   5011                       //TextToChange=ScreenLokal->Button[ZoneButtonClick-1].Text;
   5012                       ButtonToChange=&(ScreenLokal->Button[ZoneButtonClick-1]);
   \   000001F4   C000               LSLS     R0,R0,#+3
   \   000001F6   0499               LDR      R1,[SP, #+16]
   \   000001F8   0818               ADDS     R0,R1,R0
   \   000001FA   C01C               ADDS     R0,R0,#+3
   \   000001FC   6065               STR      R0,[R4, #+84]
   5013                       MenuLevel=(MenuLevel*10+4); MenuPaint();
   \   000001FE   A06C               LDR      R0,[R4, #+72]
   \   00000200   0A21               MOVS     R1,#+10
   \   00000202   4843               MULS     R0,R1,R0
   \   00000204   001D               ADDS     R0,R0,#+4
   \   00000206   A064               STR      R0,[R4, #+72]
   \   00000208   ........           BL       MenuPaint
   5014                     }
   5015                    
   5016                    if (ZoneValueNrClick<0xFF)
   \                     ??ScreenDesign1_Event_21:
   \   0000020C   607E               LDRB     R0,[R4, #+25]
   \   0000020E   FF28               CMP      R0,#+255
   \   00000210   0CD0               BEQ      ??ScreenDesign1_Event_22
   5017                     {
   5018                       AnalogToChange=&(ScreenLokal->Analog[ZoneValueNrClick]);
   \   00000212   0721               MOVS     R1,#+7
   \   00000214   4843               MULS     R0,R1,R0
   \   00000216   0499               LDR      R1,[SP, #+16]
   \   00000218   0818               ADDS     R0,R1,R0
   \   0000021A   6F30               ADDS     R0,R0,#+111
   \   0000021C   2066               STR      R0,[R4, #+96]
   5019                       MenuLevel=(MenuLevel*10+3); MenuPaint();
   \   0000021E   A06C               LDR      R0,[R4, #+72]
   \   00000220   0A21               MOVS     R1,#+10
   \   00000222   4843               MULS     R0,R1,R0
   \   00000224   C01C               ADDS     R0,R0,#+3
   \   00000226   A064               STR      R0,[R4, #+72]
   \   00000228   ........           BL       MenuPaint
   5020                     }
   5021                    
   5022                   
   5023                     if (ZoneLabelClick>0)
   \                     ??ScreenDesign1_Event_22:
   \   0000022C   A07E               LDRB     R0,[R4, #+26]
   \   0000022E   0028               CMP      R0,#+0
   \   00000230   09D0               BEQ      ??ScreenDesign1_Event_23
   5024                     {
   5025                       TextToChange=ScreenLokal->Label;
   \   00000232   0498               LDR      R0,[SP, #+16]
   \   00000234   401C               ADDS     R0,R0,#+1
   \   00000236   2065               STR      R0,[R4, #+80]
   5026                       MenuLevel=(MenuLevel*10+2); MenuPaint();
   \   00000238   A06C               LDR      R0,[R4, #+72]
   \   0000023A   0A21               MOVS     R1,#+10
   \   0000023C   4843               MULS     R0,R1,R0
   \   0000023E   801C               ADDS     R0,R0,#+2
   \   00000240   A064               STR      R0,[R4, #+72]
   \   00000242   ........           BL       MenuPaint
   5027                     }
   5028                     
   5029                     if (ZoneTemperature>0)
   \                     ??ScreenDesign1_Event_23:
   \   00000246   002D               CMP      R5,#+0
   \   00000248   06D0               BEQ      ??ScreenDesign1_Event_24
   5030                     {
   5031                       MenuLevel=(MenuLevel*10+5); MenuPaint();
   \   0000024A   A06C               LDR      R0,[R4, #+72]
   \   0000024C   0A21               MOVS     R1,#+10
   \   0000024E   4843               MULS     R0,R1,R0
   \   00000250   401D               ADDS     R0,R0,#+5
   \   00000252   A064               STR      R0,[R4, #+72]
   \   00000254   ........           BL       MenuPaint
   5032                     }          
   5033             
   5034                    
   5035                     if (ZoneGrapfNrClick!=0xFF){MenuLevel=(MenuLevel*10+1); MenuPaint();}
   \                     ??ScreenDesign1_Event_24:
   \   00000258   207E               LDRB     R0,[R4, #+24]
   \   0000025A   FF28               CMP      R0,#+255
   \   0000025C   06D0               BEQ      ??ScreenDesign1_Event_5
   \   0000025E   A06C               LDR      R0,[R4, #+72]
   \   00000260   0A21               MOVS     R1,#+10
   \   00000262   4843               MULS     R0,R1,R0
   \   00000264   401C               ADDS     R0,R0,#+1
   \   00000266   A064               STR      R0,[R4, #+72]
   \   00000268   ........           BL       MenuPaint
   5036           
   5037                  
   5038                      
   5039                     
   5040                   
   5041            
   5042                   }
   5043                   
   5044                   
   5045          }
   \                     ??ScreenDesign1_Event_5:
   \   0000026C   05B0               ADD      SP,SP,#+20
   \   0000026E   F0BC               POP      {R4-R7}
   \   00000270   01BC               POP      {R0}
   \   00000272   0047               BX       R0               ;; return
   \                     ??ScreenDesign1_Event_0:
   \   00000274   ........           DC32     TextToChangeLength
   \   00000278   ........           DC32     `?<Constant {129, 0}>` + 24
   \   0000027C   ........           DC32     `?<Constant {129, 0}>` + 992
   \   00000280   ........           DC32     `?<Constant {129, 0}>_1`
   \   00000284   E9D71300           DC32     0x13d7e9
   \   00000288   30F4FFFF           DC32     0xfffff430
   \   0000028C   ........           DC32     ButtonBipCounter
   \   00000290   ........           DC32     g_counter
   5046          
   5047          
   5048          
   5049          

   \                                 In section Debug.txt, align 4, keep-with-next
   5050          void ButtonOptions_Paint(_ButtonGraph *ButtonGraph)
   5051          {
   \                     ButtonOptions_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   5052          
   5053          
   5054           List_Paint(
   5055                        Speech[g_leng].Przycisk, //(char name[7]
   5056                        3,        //char Rows,
   5057                        15,       //char RowWith,
   5058                        0,        //char Y,
   5059                        0,        //char FormStyle,
   5060                        3,        //char algin,
   5061                        Speech[g_leng].Text, Speech[g_leng].Akcja, Speech[g_leng].Ukryj," ",0,0,0,0); //char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000004   1848               LDR      R0,??ButtonOptions_Paint_0  ;; g_leng
   \   00000006   0068               LDR      R0,[R0, #+0]
   \   00000008   1849               LDR      R1,??ButtonOptions_Paint_0+0x4  ;; 0xa14
   \   0000000A   4843               MULS     R0,R1,R0
   \   0000000C   1849               LDR      R1,??ButtonOptions_Paint_0+0x8  ;; Speech
   \   0000000E   0D18               ADDS     R5,R1,R0
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   16A1               ADR      R1,??ButtonOptions_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001A   1748               LDR      R0,??ButtonOptions_Paint_0+0x10  ;; 0x717
   \   0000001C   2818               ADDS     R0,R5,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1648               LDR      R0,??ButtonOptions_Paint_0+0x14  ;; 0x5fa
   \   00000022   2918               ADDS     R1,R5,R0
   \   00000024   E120               MOVS     R0,#+225
   \   00000026   C000               LSLS     R0,R0,#+3        ;; #+1800
   \   00000028   2818               ADDS     R0,R5,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0321               MOVS     R1,#+3
   \   0000002E   0020               MOVS     R0,#+0
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0300               MOVS     R3,R0
   \   00000034   0F22               MOVS     R2,#+15
   \   00000036   1248               LDR      R0,??ButtonOptions_Paint_0+0x18  ;; 0x5eb
   \   00000038   2818               ADDS     R0,R5,R0
   \   0000003A   ........           BL       List_Paint
   \   0000003E   0AB0               ADD      SP,SP,#+40
   5062              
   5063                     //znacznik ukrycia przycisku
   5064                   if (ButtonGraph->Hide)
   \   00000040   E079               LDRB     R0,[R4, #+7]
   \   00000042   C006               LSLS     R0,R0,#+27
   \   00000044   0DD5               BPL      ??ButtonOptions_Paint_1
   5065                        {
   5066                              
   5067                          char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   00000046   6846               MOV      R0,SP
   \   00000048   0E49               LDR      R1,??ButtonOptions_Paint_0+0x1C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`
   \   0000004A   1CC9               LDM      R1!,{R2-R4}
   \   0000004C   1CC0               STM      R0!,{R2-R4}
   5068                          CopyToCanvasPoint((char *)ekran_tab,50,97-(15*(2)),8,10); 
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   0A20               MOVS     R0,#+10
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   0823               MOVS     R3,#+8
   \   00000056   4322               MOVS     R2,#+67
   \   00000058   3221               MOVS     R1,#+50
   \   0000005A   02A8               ADD      R0,SP,#+8
   \   0000005C   ........           BL       CopyToCanvasPoint
   \   00000060   02B0               ADD      SP,SP,#+8
   5069                        }    
   5070          }
   \                     ??ButtonOptions_Paint_1:
   \   00000062   3EBC               POP      {R1-R5}
   \   00000064   01BC               POP      {R0}
   \   00000066   0047               BX       R0               ;; return
   \                     ??ButtonOptions_Paint_0:
   \   00000068   ........           DC32     g_leng
   \   0000006C   140A0000           DC32     0xa14
   \   00000070   ........           DC32     Speech
   \   00000074   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000078   17070000           DC32     0x717
   \   0000007C   FA050000           DC32     0x5fa
   \   00000080   EB050000           DC32     0x5eb
   \   00000084   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`
   5071          
   5072          

   \                                 In section Debug.txt, align 4, keep-with-next
   5073          void ButtonOptions_Event(_ButtonGraph *ButtonGraph)
   5074          {
   \                     ButtonOptions_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0400               MOVS     R4,R0
   5075            int odp=List_Event(X_up, Y_up, X_down, Y_down, 3 , 15, 0,0);
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0320               MOVS     R0,#+3
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   1D48               LDR      R0,??ButtonOptions_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   1D48               LDR      R0,??ButtonOptions_Event_0+0x4  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   1D48               LDR      R0,??ButtonOptions_Event_0+0x8  ;; Y_up
   \   0000001C   415E               LDRSH    R1,[R0, R1]
   \   0000001E   1D48               LDR      R0,??ButtonOptions_Event_0+0xC  ;; X_up
   \   00000020   0025               MOVS     R5,#+0
   \   00000022   405F               LDRSH    R0,[R0, R5]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   5076            if (odp<0) 
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   08D5               BPL      ??ButtonOptions_Event_1
   5077                  {
   5078                    MenuLevel=(MenuLevel/10);
   \   0000002E   1A4D               LDR      R5,??ButtonOptions_Event_0+0x10  ;; TextToChangeLength
   \   00000030   A86C               LDR      R0,[R5, #+72]
   \   00000032   0A21               MOVS     R1,#+10
   \   00000034   ........           BL       __aeabi_idivmod
   \   00000038   A864               STR      R0,[R5, #+72]
   5079                    MenuPaint();
   \   0000003A   ........           BL       MenuPaint
   \   0000003E   1FE0               B        ??ButtonOptions_Event_2
   5080                  }else if (odp>0) 
   \                     ??ButtonOptions_Event_1:
   \   00000040   0128               CMP      R0,#+1
   \   00000042   1DDB               BLT      ??ButtonOptions_Event_2
   5081                  {
   5082                   
   5083                    if  (odp<3)
   \   00000044   0328               CMP      R0,#+3
   \   00000046   0EDA               BGE      ??ButtonOptions_Event_3
   5084                    {
   5085                      if (odp==1) {
   \   00000048   0128               CMP      R0,#+1
   \   0000004A   05D1               BNE      ??ButtonOptions_Event_4
   5086                        TextToChange=ButtonGraph->Text; 
   \   0000004C   124D               LDR      R5,??ButtonOptions_Event_0+0x10  ;; TextToChangeLength
   \   0000004E   2C65               STR      R4,[R5, #+80]
   5087                        TextToChangeLength=ButonMaxText;
   \   00000050   0721               MOVS     R1,#+7
   \   00000052   2970               STRB     R1,[R5, #+0]
   5088                        TextToChangeMaxPixSize=TxtSpaceAvable;
   \   00000054   696F               LDR      R1,[R5, #+116]
   \   00000056   6970               STRB     R1,[R5, #+1]
   5089                      }
   5090                      MenuLevel=(MenuLevel*10)+odp; 
   \                     ??ButtonOptions_Event_4:
   \   00000058   0F4D               LDR      R5,??ButtonOptions_Event_0+0x10  ;; TextToChangeLength
   \   0000005A   A96C               LDR      R1,[R5, #+72]
   \   0000005C   0A22               MOVS     R2,#+10
   \   0000005E   5143               MULS     R1,R2,R1
   \   00000060   0818               ADDS     R0,R1,R0
   \   00000062   A864               STR      R0,[R5, #+72]
   \   00000064   0AE0               B        ??ButtonOptions_Event_5
   5091                    }else{
   5092                      if (ButtonGraph->Hide) ButtonGraph->Hide=0; else ButtonGraph->Hide=1; 
   \                     ??ButtonOptions_Event_3:
   \   00000066   E079               LDRB     R0,[R4, #+7]
   \   00000068   C006               LSLS     R0,R0,#+27
   \   0000006A   E079               LDRB     R0,[R4, #+7]
   \   0000006C   03D5               BPL      ??ButtonOptions_Event_6
   \   0000006E   EF21               MOVS     R1,#+239
   \   00000070   0140               ANDS     R1,R1,R0
   \   00000072   E171               STRB     R1,[R4, #+7]
   \   00000074   02E0               B        ??ButtonOptions_Event_5
   \                     ??ButtonOptions_Event_6:
   \   00000076   1021               MOVS     R1,#+16
   \   00000078   0143               ORRS     R1,R1,R0
   \   0000007A   E171               STRB     R1,[R4, #+7]
   5093                    }
   5094                   
   5095                    MenuPaint();
   \                     ??ButtonOptions_Event_5:
   \   0000007C   ........           BL       MenuPaint
   5096                  }
   5097                    
   5098                    
   5099                    
   5100                  
   5101          }
   \                     ??ButtonOptions_Event_2:
   \   00000080   38BC               POP      {R3-R5}
   \   00000082   01BC               POP      {R0}
   \   00000084   0047               BX       R0               ;; return
   \   00000086   C046               Nop      
   \                     ??ButtonOptions_Event_0:
   \   00000088   ........           DC32     Y_down
   \   0000008C   ........           DC32     X_down
   \   00000090   ........           DC32     Y_up
   \   00000094   ........           DC32     X_up
   \   00000098   ........           DC32     TextToChangeLength
   5102          
   5103          

   \                                 In section Debug.txt, align 4, keep-with-next
   5104          void ButtonAction_Paint(_ButtonGraph *ButtonGraph)
   5105          {
   \                     ButtonAction_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   5106          
   5107            List_Paint(Speech[g_leng].Akcja,1,98,0,0,0,"",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   454D               LDR      R5,??ButtonAction_Paint_0  ;; 0xa14
   \   00000006   464E               LDR      R6,??ButtonAction_Paint_0+0x4  ;; g_leng
   \   00000008   464F               LDR      R7,??ButtonAction_Paint_0+0x8  ;; Speech
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   44A0               ADR      R0,??ButtonAction_Paint_0+0xC  ;; 0x00, 0x00, 0x00, 0x00
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0800               MOVS     R0,R1
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   6222               MOVS     R2,#+98
   \   00000020   0121               MOVS     R1,#+1
   \   00000022   8C46               MOV      R12,R1
   \   00000024   4149               LDR      R1,??ButtonAction_Paint_0+0x10  ;; 0x5fa
   \   00000026   3068               LDR      R0,[R6, #+0]
   \   00000028   6843               MULS     R0,R5,R0
   \   0000002A   3818               ADDS     R0,R7,R0
   \   0000002C   4018               ADDS     R0,R0,R1
   \   0000002E   6146               MOV      R1,R12
   \   00000030   ........           BL       List_Paint
   \   00000034   0AB0               ADD      SP,SP,#+40
   5108               
   5109            
   5110            Button("< ",3,71,16,23);
   \   00000036   82B0               SUB      SP,SP,#+8
   \   00000038   1720               MOVS     R0,#+23
   \   0000003A   0090               STR      R0,[SP, #+0]
   \   0000003C   1023               MOVS     R3,#+16
   \   0000003E   4722               MOVS     R2,#+71
   \   00000040   0321               MOVS     R1,#+3
   \   00000042   3BA0               ADR      R0,??ButtonAction_Paint_0+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   00000044   ........           BL       Button
   \   00000048   02B0               ADD      SP,SP,#+8
   5111            Button("> ",44,71,16,23);
   \   0000004A   82B0               SUB      SP,SP,#+8
   \   0000004C   1720               MOVS     R0,#+23
   \   0000004E   0090               STR      R0,[SP, #+0]
   \   00000050   1023               MOVS     R3,#+16
   \   00000052   4722               MOVS     R2,#+71
   \   00000054   2C21               MOVS     R1,#+44
   \   00000056   37A0               ADR      R0,??ButtonAction_Paint_0+0x18  ;; 0x3E, 0x20, 0x00, 0x00
   \   00000058   ........           BL       Button
   \   0000005C   02B0               ADD      SP,SP,#+8
   5112            
   5113            
   5114            Label(Speech[g_leng].OtworzStrone,0,3,96,15,58,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005E   82B0               SUB      SP,SP,#+8
   \   00000060   0020               MOVS     R0,#+0
   \   00000062   0090               STR      R0,[SP, #+0]
   \   00000064   7F21               MOVS     R1,#+127
   \   00000066   0120               MOVS     R0,#+1
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   3A21               MOVS     R1,#+58
   \   0000006C   0F20               MOVS     R0,#+15
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   6023               MOVS     R3,#+96
   \   00000072   0322               MOVS     R2,#+3
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   8C46               MOV      R12,R1
   \   00000078   2F49               LDR      R1,??ButtonAction_Paint_0+0x1C  ;; 0x609
   \   0000007A   3068               LDR      R0,[R6, #+0]
   \   0000007C   6843               MULS     R0,R5,R0
   \   0000007E   3818               ADDS     R0,R7,R0
   \   00000080   4018               ADDS     R0,R0,R1
   \   00000082   6146               MOV      R1,R12
   \   00000084   ........           BL       Label
   \   00000088   06B0               ADD      SP,SP,#+24
   5115            
   5116            char txt[5]={'N','r', ':',0,0};
   \   0000008A   6846               MOV      R0,SP
   \   0000008C   2B49               LDR      R1,??ButtonAction_Paint_0+0x20  ;; `?<Constant {78, 114, 58, 0, 0}>`
   \   0000008E   0CC9               LDM      R1!,{R2,R3}
   \   00000090   0CC0               STM      R0!,{R2,R3}
   5117            if (ButtonGraph->OpenPage==0)
   \   00000092   0F20               MOVS     R0,#+15
   \   00000094   E179               LDRB     R1,[R4, #+7]
   \   00000096   0142               TST      R1,R0
   \   00000098   15D1               BNE      ??ButtonAction_Paint_1
   5118            {
   5119                Label(Speech[g_leng].Wyl,0,23,75,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   7F21               MOVS     R1,#+127
   \   000000A2   0120               MOVS     R0,#+1
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   1421               MOVS     R1,#+20
   \   000000A8   0520               MOVS     R0,#+5
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   4B23               MOVS     R3,#+75
   \   000000AE   1722               MOVS     R2,#+23
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   C320               MOVS     R0,#+195
   \   000000B4   C000               LSLS     R0,R0,#+3        ;; #+1560
   \   000000B6   3468               LDR      R4,[R6, #+0]
   \   000000B8   6C43               MULS     R4,R5,R4
   \   000000BA   3C19               ADDS     R4,R7,R4
   \   000000BC   2018               ADDS     R0,R4,R0
   \   000000BE   ........           BL       Label
   \   000000C2   06B0               ADD      SP,SP,#+24
   \   000000C4   27E0               B        ??ButtonAction_Paint_2
   5120          
   5121            }else{
   5122                CharToStr(ButtonGraph->OpenPage-1, &txt[3], 1); //(char Value, char *Vstring, char ill);
   \                     ??ButtonAction_Paint_1:
   \   000000C6   0122               MOVS     R2,#+1
   \   000000C8   6946               MOV      R1,SP
   \   000000CA   C91C               ADDS     R1,R1,#+3
   \   000000CC   E379               LDRB     R3,[R4, #+7]
   \   000000CE   1840               ANDS     R0,R0,R3
   \   000000D0   401E               SUBS     R0,R0,#+1
   \   000000D2   0006               LSLS     R0,R0,#+24
   \   000000D4   000E               LSRS     R0,R0,#+24
   \   000000D6   ........           BL       CharToStr
   5123                Label(txt,0,22,76,5,20,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0020               MOVS     R0,#+0
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   7F21               MOVS     R1,#+127
   \   000000E2   0120               MOVS     R0,#+1
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   1421               MOVS     R1,#+20
   \   000000E8   0520               MOVS     R0,#+5
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   4C23               MOVS     R3,#+76
   \   000000EE   1622               MOVS     R2,#+22
   \   000000F0   0021               MOVS     R1,#+0
   \   000000F2   06A8               ADD      R0,SP,#+24
   \   000000F4   ........           BL       Label
   \   000000F8   06B0               ADD      SP,SP,#+24
   5124          
   5125                Button(Speech[g_leng].Konfiguracja,3,54,57,14);
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   0E20               MOVS     R0,#+14
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   3923               MOVS     R3,#+57
   \   00000102   3622               MOVS     R2,#+54
   \   00000104   0321               MOVS     R1,#+3
   \   00000106   0E48               LDR      R0,??ButtonAction_Paint_0+0x24  ;; 0x2df
   \   00000108   3468               LDR      R4,[R6, #+0]
   \   0000010A   6C43               MULS     R4,R5,R4
   \   0000010C   3C19               ADDS     R4,R7,R4
   \   0000010E   2018               ADDS     R0,R4,R0
   \   00000110   ........           BL       Button
   \   00000114   02B0               ADD      SP,SP,#+8
   5126            }
   5127            
   5128          }
   \                     ??ButtonAction_Paint_2:
   \   00000116   FEBC               POP      {R1-R7}
   \   00000118   01BC               POP      {R0}
   \   0000011A   0047               BX       R0               ;; return
   \                     ??ButtonAction_Paint_0:
   \   0000011C   140A0000           DC32     0xa14
   \   00000120   ........           DC32     g_leng
   \   00000124   ........           DC32     Speech
   \   00000128   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   0000012C   FA050000           DC32     0x5fa
   \   00000130   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000134   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000138   09060000           DC32     0x609
   \   0000013C   ........           DC32     `?<Constant {78, 114, 58, 0, 0}>`
   \   00000140   DF020000           DC32     0x2df
   5129          
   5130          

   \                                 In section Debug.txt, align 4, keep-with-next
   5131          void ButtonAction_Event(_ButtonGraph *ButtonGraph)
   5132          {
   \                     ButtonAction_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   5133            char MenuPaintExecute=0;
   \   00000004   0025               MOVS     R5,#+0
   5134            int odp=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   5135            if (odp<0) 
   \   00000006   2900               MOVS     R1,R5
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   4948               LDR      R0,??ButtonAction_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   4948               LDR      R0,??ButtonAction_Event_0+0x4  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   4948               LDR      R0,??ButtonAction_Event_0+0x8  ;; Y_up
   \   0000001C   415E               LDRSH    R1,[R0, R1]
   \   0000001E   4948               LDR      R0,??ButtonAction_Event_0+0xC  ;; X_up
   \   00000020   0026               MOVS     R6,#+0
   \   00000022   805F               LDRSH    R0,[R0, R6]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   \   0000002A   0028               CMP      R0,#+0
   \   0000002C   07D5               BPL      ??ButtonAction_Event_1
   5136                  {
   5137                    MenuLevel=(MenuLevel/10);
   \   0000002E   464D               LDR      R5,??ButtonAction_Event_0+0x10  ;; TextToChangeLength
   \   00000030   A86C               LDR      R0,[R5, #+72]
   \   00000032   0A21               MOVS     R1,#+10
   \   00000034   ........           BL       __aeabi_idivmod
   \   00000038   A864               STR      R0,[R5, #+72]
   5138                    MenuPaintExecute=1;
   \   0000003A   0125               MOVS     R5,#+1
   \   0000003C   75E0               B        ??ButtonAction_Event_2
   5139                  }else 
   5140                  {
   5141                    if ((Button("< ",3,71,16,23)==1) && (ButtonGraph->OpenPage>0))  
   \                     ??ButtonAction_Event_1:
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   1720               MOVS     R0,#+23
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   1023               MOVS     R3,#+16
   \   00000046   4722               MOVS     R2,#+71
   \   00000048   0321               MOVS     R1,#+3
   \   0000004A   40A0               ADR      R0,??ButtonAction_Event_0+0x14  ;; 0x3C, 0x20, 0x00, 0x00
   \   0000004C   ........           BL       Button
   \   00000050   02B0               ADD      SP,SP,#+8
   \   00000052   0128               CMP      R0,#+1
   \   00000054   1FD1               BNE      ??ButtonAction_Event_3
   \   00000056   0F20               MOVS     R0,#+15
   \   00000058   E179               LDRB     R1,[R4, #+7]
   \   0000005A   0142               TST      R1,R0
   \   0000005C   1BD0               BEQ      ??ButtonAction_Event_3
   5142                    { 
   5143                      if ((ButtonGraph->OpenPage-1)!=CurModifSheet+1)
   \   0000005E   0140               ANDS     R1,R1,R0
   \   00000060   491E               SUBS     R1,R1,#+1
   \   00000062   3B4A               LDR      R2,??ButtonAction_Event_0+0x18  ;; TextToChangeLength + 5
   \   00000064   1278               LDRB     R2,[R2, #+0]
   \   00000066   521C               ADDS     R2,R2,#+1
   \   00000068   9142               CMP      R1,R2
   \   0000006A   E179               LDRB     R1,[R4, #+7]
   \   0000006C   07D0               BEQ      ??ButtonAction_Event_4
   5144                      {
   5145                        ButtonGraph->OpenPage--;  MenuPaintExecute=1;
   \   0000006E   F022               MOVS     R2,#+240
   \   00000070   0A40               ANDS     R2,R2,R1
   \   00000072   491E               SUBS     R1,R1,#+1
   \   00000074   0840               ANDS     R0,R0,R1
   \   00000076   1043               ORRS     R0,R0,R2
   \   00000078   E071               STRB     R0,[R4, #+7]
   \   0000007A   0125               MOVS     R5,#+1
   \   0000007C   0BE0               B        ??ButtonAction_Event_3
   5146                      }else if ((ButtonGraph->OpenPage-1)>0)
   \                     ??ButtonAction_Event_4:
   \   0000007E   0140               ANDS     R1,R1,R0
   \   00000080   491E               SUBS     R1,R1,#+1
   \   00000082   0129               CMP      R1,#+1
   \   00000084   07DB               BLT      ??ButtonAction_Event_3
   5147                      {
   5148                        ButtonGraph->OpenPage -=2;  MenuPaintExecute=1;
   \   00000086   E179               LDRB     R1,[R4, #+7]
   \   00000088   F022               MOVS     R2,#+240
   \   0000008A   0A40               ANDS     R2,R2,R1
   \   0000008C   891E               SUBS     R1,R1,#+2
   \   0000008E   0840               ANDS     R0,R0,R1
   \   00000090   1043               ORRS     R0,R0,R2
   \   00000092   E071               STRB     R0,[R4, #+7]
   \   00000094   0125               MOVS     R5,#+1
   5149                      }
   5150                    } 
   5151                    if ((Button("> ",44,71,16,23)==1) && (ButtonGraph->OpenPage<ScreenNr)) 
   \                     ??ButtonAction_Event_3:
   \   00000096   82B0               SUB      SP,SP,#+8
   \   00000098   1720               MOVS     R0,#+23
   \   0000009A   0090               STR      R0,[SP, #+0]
   \   0000009C   1023               MOVS     R3,#+16
   \   0000009E   4722               MOVS     R2,#+71
   \   000000A0   2C21               MOVS     R1,#+44
   \   000000A2   2CA0               ADR      R0,??ButtonAction_Event_0+0x1C  ;; 0x3E, 0x20, 0x00, 0x00
   \   000000A4   ........           BL       Button
   \   000000A8   02B0               ADD      SP,SP,#+8
   \   000000AA   0128               CMP      R0,#+1
   \   000000AC   21D1               BNE      ??ButtonAction_Event_5
   \   000000AE   0F20               MOVS     R0,#+15
   \   000000B0   E179               LDRB     R1,[R4, #+7]
   \   000000B2   0140               ANDS     R1,R1,R0
   \   000000B4   0829               CMP      R1,#+8
   \   000000B6   1CD2               BCS      ??ButtonAction_Event_5
   5152                    {
   5153                       if ((ButtonGraph->OpenPage+1)!=CurModifSheet+1)
   \   000000B8   E179               LDRB     R1,[R4, #+7]
   \   000000BA   0140               ANDS     R1,R1,R0
   \   000000BC   244A               LDR      R2,??ButtonAction_Event_0+0x18  ;; TextToChangeLength + 5
   \   000000BE   1278               LDRB     R2,[R2, #+0]
   \   000000C0   9142               CMP      R1,R2
   \   000000C2   E179               LDRB     R1,[R4, #+7]
   \   000000C4   07D0               BEQ      ??ButtonAction_Event_6
   5154                      {
   5155                        ButtonGraph->OpenPage++;  MenuPaintExecute=1;
   \   000000C6   F022               MOVS     R2,#+240
   \   000000C8   0A40               ANDS     R2,R2,R1
   \   000000CA   491C               ADDS     R1,R1,#+1
   \   000000CC   0840               ANDS     R0,R0,R1
   \   000000CE   1043               ORRS     R0,R0,R2
   \   000000D0   E071               STRB     R0,[R4, #+7]
   \   000000D2   0125               MOVS     R5,#+1
   \   000000D4   0DE0               B        ??ButtonAction_Event_5
   5156                      }else if (ButtonGraph->OpenPage+1<ScreenNr)
   \                     ??ButtonAction_Event_6:
   \   000000D6   0140               ANDS     R1,R1,R0
   \   000000D8   491C               ADDS     R1,R1,#+1
   \   000000DA   0906               LSLS     R1,R1,#+24
   \   000000DC   090E               LSRS     R1,R1,#+24
   \   000000DE   0829               CMP      R1,#+8
   \   000000E0   07D2               BCS      ??ButtonAction_Event_5
   5157                      {
   5158                        ButtonGraph->OpenPage +=2;  MenuPaintExecute=1;
   \   000000E2   E179               LDRB     R1,[R4, #+7]
   \   000000E4   F022               MOVS     R2,#+240
   \   000000E6   0A40               ANDS     R2,R2,R1
   \   000000E8   891C               ADDS     R1,R1,#+2
   \   000000EA   0840               ANDS     R0,R0,R1
   \   000000EC   1043               ORRS     R0,R0,R2
   \   000000EE   E071               STRB     R0,[R4, #+7]
   \   000000F0   0125               MOVS     R5,#+1
   5159                      }
   5160                    }
   5161                    if (Button(Speech[g_leng].Konfiguracja,3,54,57,14)==1)
   \                     ??ButtonAction_Event_5:
   \   000000F2   82B0               SUB      SP,SP,#+8
   \   000000F4   0E20               MOVS     R0,#+14
   \   000000F6   0090               STR      R0,[SP, #+0]
   \   000000F8   3923               MOVS     R3,#+57
   \   000000FA   3622               MOVS     R2,#+54
   \   000000FC   0321               MOVS     R1,#+3
   \   000000FE   1648               LDR      R0,??ButtonAction_Event_0+0x20  ;; 0x2df
   \   00000100   164E               LDR      R6,??ButtonAction_Event_0+0x24  ;; g_leng
   \   00000102   3668               LDR      R6,[R6, #+0]
   \   00000104   164F               LDR      R7,??ButtonAction_Event_0+0x28  ;; 0xa14
   \   00000106   7E43               MULS     R6,R7,R6
   \   00000108   164F               LDR      R7,??ButtonAction_Event_0+0x2C  ;; Speech
   \   0000010A   BE19               ADDS     R6,R7,R6
   \   0000010C   3018               ADDS     R0,R6,R0
   \   0000010E   ........           BL       Button
   \   00000112   02B0               ADD      SP,SP,#+8
   \   00000114   0128               CMP      R0,#+1
   \   00000116   08D1               BNE      ??ButtonAction_Event_2
   5162                    {
   5163                      CurModifSheet=ButtonGraph->OpenPage-1;
   \   00000118   0B4D               LDR      R5,??ButtonAction_Event_0+0x10  ;; TextToChangeLength
   \   0000011A   E079               LDRB     R0,[R4, #+7]
   \   0000011C   0007               LSLS     R0,R0,#+28
   \   0000011E   000F               LSRS     R0,R0,#+28
   \   00000120   401E               SUBS     R0,R0,#+1
   \   00000122   6871               STRB     R0,[R5, #+5]
   5164                      MenuLevel=112;
   \   00000124   7020               MOVS     R0,#+112
   \   00000126   A864               STR      R0,[R5, #+72]
   5165                      MenuPaintExecute=1;
   \   00000128   0125               MOVS     R5,#+1
   5166                    }
   5167                   
   5168                    
   5169          
   5170                    
   5171                  }
   5172                    
   5173                    
   5174                  if (MenuPaintExecute)  MenuPaint();
   \                     ??ButtonAction_Event_2:
   \   0000012A   002D               CMP      R5,#+0
   \   0000012C   01D0               BEQ      ??ButtonAction_Event_7
   \   0000012E   ........           BL       MenuPaint
   5175                
   5176          }
   \                     ??ButtonAction_Event_7:
   \   00000132   F8BC               POP      {R3-R7}
   \   00000134   01BC               POP      {R0}
   \   00000136   0047               BX       R0               ;; return
   \                     ??ButtonAction_Event_0:
   \   00000138   ........           DC32     Y_down
   \   0000013C   ........           DC32     X_down
   \   00000140   ........           DC32     Y_up
   \   00000144   ........           DC32     X_up
   \   00000148   ........           DC32     TextToChangeLength
   \   0000014C   3C200000           DC8      0x3C, 0x20, 0x00, 0x00
   \   00000150   ........           DC32     TextToChangeLength + 5
   \   00000154   3E200000           DC8      0x3E, 0x20, 0x00, 0x00
   \   00000158   DF020000           DC32     0x2df
   \   0000015C   ........           DC32     g_leng
   \   00000160   140A0000           DC32     0xa14
   \   00000164   ........           DC32     Speech
   5177          
   5178          
   5179          
   5180          
   5181          
   5182          

   \                                 In section Debug.txt, align 4, keep-with-next
   5183          void BigTemperLabel_Paint(void)
   5184                {  
   \                     BigTemperLabel_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   5185                  char txt[5];
   5186                  List_Paint("Temeper.",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   504C               LDR      R4,??BigTemperLabel_Paint_0  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   4EA0               ADR      R0,??BigTemperLabel_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   6C30               ADDS     R0,R0,#+108
   \   00000022   ........           BL       List_Paint
   \   00000026   0AB0               ADD      SP,SP,#+40
   5187          
   5188                    Label("Node ID:",2,20, 92 ,8,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000028   82B0               SUB      SP,SP,#+8
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   0090               STR      R0,[SP, #+0]
   \   0000002E   7F21               MOVS     R1,#+127
   \   00000030   0120               MOVS     R0,#+1
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   1621               MOVS     R1,#+22
   \   00000036   0820               MOVS     R0,#+8
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   5C23               MOVS     R3,#+92
   \   0000003C   1422               MOVS     R2,#+20
   \   0000003E   0221               MOVS     R1,#+2
   \   00000040   2000               MOVS     R0,R4
   \   00000042   7830               ADDS     R0,R0,#+120
   \   00000044   ........           BL       Label
   \   00000048   06B0               ADD      SP,SP,#+24
   5189                    char ind=CharToStr(gProg.Screen[0].Analog[0].Nr, &(txt[0]), 2); //(char Value, char *Vstring, char ill);
   \   0000004A   4048               LDR      R0,??BigTemperLabel_Paint_0+0x8  ;; gProg + 48139
   \   0000004C   0290               STR      R0,[SP, #+8]
   \   0000004E   0222               MOVS     R2,#+2
   \   00000050   6946               MOV      R1,SP
   \   00000052   0078               LDRB     R0,[R0, #+0]
   \   00000054   ........           BL       CharToStr
   \   00000058   0200               MOVS     R2,R0
   5190                    Label(txt,2,20, 77 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7F21               MOVS     R1,#+127
   \   00000062   0120               MOVS     R0,#+1
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   1621               MOVS     R1,#+22
   \   00000068   D21C               ADDS     R2,R2,#+3
   \   0000006A   1000               MOVS     R0,R2
   \   0000006C   0006               LSLS     R0,R0,#+24
   \   0000006E   000E               LSRS     R0,R0,#+24
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   4D23               MOVS     R3,#+77
   \   00000074   1422               MOVS     R2,#+20
   \   00000076   0221               MOVS     R1,#+2
   \   00000078   06A8               ADD      R0,SP,#+24
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
   \   00000080   6D46               MOV      R5,SP
   \   00000082   3C20               MOVS     R0,#+60
   \   00000084   2870               STRB     R0,[R5, #+0]
   5191                  
   5192                    txt[0]='<';txt[1]=0;
   \   00000086   0026               MOVS     R6,#+0
   \   00000088   3000               MOVS     R0,R6
   \   0000008A   6870               STRB     R0,[R5, #+1]
   5193                    Button(txt,3,70,15,20); 
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   1420               MOVS     R0,#+20
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   0F23               MOVS     R3,#+15
   \   00000094   4622               MOVS     R2,#+70
   \   00000096   0321               MOVS     R1,#+3
   \   00000098   02A8               ADD      R0,SP,#+8
   \   0000009A   ........           BL       Button
   \   0000009E   02B0               ADD      SP,SP,#+8
   5194                    txt[0]='>';
   \   000000A0   3E27               MOVS     R7,#+62
   \   000000A2   2F70               STRB     R7,[R5, #+0]
   5195                    Button(txt,45,70,15,20); 
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   1420               MOVS     R0,#+20
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   0F23               MOVS     R3,#+15
   \   000000AC   4622               MOVS     R2,#+70
   \   000000AE   2D21               MOVS     R1,#+45
   \   000000B0   02A8               ADD      R0,SP,#+8
   \   000000B2   ........           BL       Button
   \   000000B6   02B0               ADD      SP,SP,#+8
   5196                    
   5197                    Label("Reg:",2,20, 50 ,4,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   3000               MOVS     R0,R6
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   7F21               MOVS     R1,#+127
   \   000000C0   0120               MOVS     R0,#+1
   \   000000C2   03B4               PUSH     {R0,R1}
   \   000000C4   1621               MOVS     R1,#+22
   \   000000C6   0420               MOVS     R0,#+4
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   3223               MOVS     R3,#+50
   \   000000CC   1422               MOVS     R2,#+20
   \   000000CE   0221               MOVS     R1,#+2
   \   000000D0   5C34               ADDS     R4,R4,#+92
   \   000000D2   2000               MOVS     R0,R4
   \   000000D4   ........           BL       Label
   \   000000D8   06B0               ADD      SP,SP,#+24
   5198                    
   5199                    ind=CharToStr(gProg.Screen[0].Analog[0].Reg, txt, 2); //(char Value, char *Vstring, char ill);
   \   000000DA   0222               MOVS     R2,#+2
   \   000000DC   6946               MOV      R1,SP
   \   000000DE   0298               LDR      R0,[SP, #+8]
   \   000000E0   4078               LDRB     R0,[R0, #+1]
   \   000000E2   ........           BL       CharToStr
   \   000000E6   0200               MOVS     R2,R0
   5200                   
   5201                    Label(txt,2,20, 40 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000E8   82B0               SUB      SP,SP,#+8
   \   000000EA   3000               MOVS     R0,R6
   \   000000EC   0090               STR      R0,[SP, #+0]
   \   000000EE   7F21               MOVS     R1,#+127
   \   000000F0   0120               MOVS     R0,#+1
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   1621               MOVS     R1,#+22
   \   000000F6   921C               ADDS     R2,R2,#+2
   \   000000F8   1000               MOVS     R0,R2
   \   000000FA   0006               LSLS     R0,R0,#+24
   \   000000FC   000E               LSRS     R0,R0,#+24
   \   000000FE   03B4               PUSH     {R0,R1}
   \   00000100   2823               MOVS     R3,#+40
   \   00000102   1422               MOVS     R2,#+20
   \   00000104   0221               MOVS     R1,#+2
   \   00000106   06A8               ADD      R0,SP,#+24
   \   00000108   ........           BL       Label
   \   0000010C   06B0               ADD      SP,SP,#+24
   5202                  
   5203                    txt[0]='<';txt[1]=0;
   \   0000010E   3C20               MOVS     R0,#+60
   \   00000110   2870               STRB     R0,[R5, #+0]
   \   00000112   6E70               STRB     R6,[R5, #+1]
   5204                    Button(txt,3,40,15,20); 
   \   00000114   82B0               SUB      SP,SP,#+8
   \   00000116   1420               MOVS     R0,#+20
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   0F23               MOVS     R3,#+15
   \   0000011C   2822               MOVS     R2,#+40
   \   0000011E   0321               MOVS     R1,#+3
   \   00000120   02A8               ADD      R0,SP,#+8
   \   00000122   ........           BL       Button
   \   00000126   02B0               ADD      SP,SP,#+8
   5205                    txt[0]='>';
   \   00000128   2F70               STRB     R7,[R5, #+0]
   5206                    Button(txt,45,40,15,20);   
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   1420               MOVS     R0,#+20
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   0F23               MOVS     R3,#+15
   \   00000132   2822               MOVS     R2,#+40
   \   00000134   2D21               MOVS     R1,#+45
   \   00000136   02A8               ADD      R0,SP,#+8
   \   00000138   ........           BL       Button
   \   0000013C   02B0               ADD      SP,SP,#+8
   5207                     
   5208                  
   5209                }
   \   0000013E   FEBC               POP      {R1-R7}
   \   00000140   01BC               POP      {R0}
   \   00000142   0047               BX       R0               ;; return
   \                     ??BigTemperLabel_Paint_0:
   \   00000144   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000148   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000014C   ........           DC32     gProg + 48139
   5210          

   \                                 In section Debug.txt, align 4, keep-with-next
   5211          void BigTemperLabel_Event(void)
   5212                {  
   \                     BigTemperLabel_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   5213                 char Repaint=0; 
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2700               MOVS     R7,R4
   5214                 char txt[8];
   5215                 _Analog *Anal=&(gProg.Screen[0].Analog[0]);       
   5216                 
   5217                 
   5218                  //zdarzenie typu down "X"
   5219                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000006   5548               LDR      R0,??BigTemperLabel_Event_0  ;; X_down
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   405E               LDRSH    R0,[R0, R1]
   \   0000000C   2F28               CMP      R0,#+47
   \   0000000E   1FDB               BLT      ??BigTemperLabel_Event_1
   \   00000010   3F28               CMP      R0,#+63
   \   00000012   1DDA               BGE      ??BigTemperLabel_Event_1
   \   00000014   5248               LDR      R0,??BigTemperLabel_Event_0+0x4  ;; Y_down
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   7128               CMP      R0,#+113
   \   0000001A   19DB               BLT      ??BigTemperLabel_Event_1
   \   0000001C   7F28               CMP      R0,#+127
   \   0000001E   17DA               BGE      ??BigTemperLabel_Event_1
   5220                  {
   5221                    //MenuPaint();
   5222                    H_line(49,114,10,0);
   \   00000020   0B00               MOVS     R3,R1
   \   00000022   0A22               MOVS     R2,#+10
   \   00000024   7221               MOVS     R1,#+114
   \   00000026   3120               MOVS     R0,#+49
   \   00000028   ........           BL       H_line
   5223                    H_line(49,123,10,0); 
   \   0000002C   2300               MOVS     R3,R4
   \   0000002E   0A22               MOVS     R2,#+10
   \   00000030   7B21               MOVS     R1,#+123
   \   00000032   3120               MOVS     R0,#+49
   \   00000034   ........           BL       H_line
   5224                    V_line(49,114,10,0); 
   \   00000038   2300               MOVS     R3,R4
   \   0000003A   0A22               MOVS     R2,#+10
   \   0000003C   7221               MOVS     R1,#+114
   \   0000003E   3120               MOVS     R0,#+49
   \   00000040   ........           BL       V_line
   5225                    V_line(58,114,10,0); 
   \   00000044   2300               MOVS     R3,R4
   \   00000046   0A22               MOVS     R2,#+10
   \   00000048   7221               MOVS     R1,#+114
   \   0000004A   3A20               MOVS     R0,#+58
   \   0000004C   ........           BL       V_line
   5226                    
   5227                  }
   5228            
   5229                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??BigTemperLabel_Event_1:
   \   00000050   4448               LDR      R0,??BigTemperLabel_Event_0+0x8  ;; X_up
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   405E               LDRSH    R0,[R0, R1]
   \   00000056   2F28               CMP      R0,#+47
   \   00000058   10DB               BLT      ??BigTemperLabel_Event_2
   \   0000005A   3F28               CMP      R0,#+63
   \   0000005C   0EDA               BGE      ??BigTemperLabel_Event_2
   \   0000005E   4248               LDR      R0,??BigTemperLabel_Event_0+0xC  ;; Y_up
   \   00000060   405E               LDRSH    R0,[R0, R1]
   \   00000062   7128               CMP      R0,#+113
   \   00000064   0ADB               BLT      ??BigTemperLabel_Event_2
   \   00000066   7F28               CMP      R0,#+127
   \   00000068   08DA               BGE      ??BigTemperLabel_Event_2
   5230                  {
   5231                    MenuLevel=(MenuLevel/10);
   \   0000006A   404C               LDR      R4,??BigTemperLabel_Event_0+0x10  ;; TextToChangeLength
   \   0000006C   A06C               LDR      R0,[R4, #+72]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   A064               STR      R0,[R4, #+72]
   5232                    MenuPaint();
   \   00000076   ........           BL       MenuPaint
   \   0000007A   68E0               B        ??BigTemperLabel_Event_3
   5233                  }  
   \                     ??BigTemperLabel_Event_2:
   \   0000007C   6D46               MOV      R5,SP
   \   0000007E   3C20               MOVS     R0,#+60
   \   00000080   2870               STRB     R0,[R5, #+0]
   5234                  else
   5235                  {
   5236                      txt[0]='<';txt[1]=0;
   \   00000082   6C70               STRB     R4,[R5, #+1]
   5237                      if (Button(txt,3,70,15,20)==2){if (Anal->Nr>0) {Anal->Nr--;} else {Anal->Nr=NumberNeurons;} Repaint=1;}
   \   00000084   82B0               SUB      SP,SP,#+8
   \   00000086   1420               MOVS     R0,#+20
   \   00000088   0090               STR      R0,[SP, #+0]
   \   0000008A   0F23               MOVS     R3,#+15
   \   0000008C   4622               MOVS     R2,#+70
   \   0000008E   0321               MOVS     R1,#+3
   \   00000090   02A8               ADD      R0,SP,#+8
   \   00000092   ........           BL       Button
   \   00000096   02B0               ADD      SP,SP,#+8
   \   00000098   0228               CMP      R0,#+2
   \   0000009A   09D1               BNE      ??BigTemperLabel_Event_4
   \   0000009C   3448               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   0000009E   0178               LDRB     R1,[R0, #+0]
   \   000000A0   0029               CMP      R1,#+0
   \   000000A2   02D0               BEQ      ??BigTemperLabel_Event_5
   \   000000A4   491E               SUBS     R1,R1,#+1
   \   000000A6   0170               STRB     R1,[R0, #+0]
   \   000000A8   01E0               B        ??BigTemperLabel_Event_6
   \                     ??BigTemperLabel_Event_5:
   \   000000AA   2321               MOVS     R1,#+35
   \   000000AC   0170               STRB     R1,[R0, #+0]
   \                     ??BigTemperLabel_Event_6:
   \   000000AE   0127               MOVS     R7,#+1
   5238                      txt[0]='>';
   \                     ??BigTemperLabel_Event_4:
   \   000000B0   3E26               MOVS     R6,#+62
   \   000000B2   2E70               STRB     R6,[R5, #+0]
   5239                      if (Button(txt,45,70,15,20)==2){if (Anal->Nr+1<NumberNeurons) {Anal->Nr++;} else {Anal->Nr=0;}  Repaint=1;}
   \   000000B4   82B0               SUB      SP,SP,#+8
   \   000000B6   1420               MOVS     R0,#+20
   \   000000B8   0090               STR      R0,[SP, #+0]
   \   000000BA   0F23               MOVS     R3,#+15
   \   000000BC   4622               MOVS     R2,#+70
   \   000000BE   2D21               MOVS     R1,#+45
   \   000000C0   02A8               ADD      R0,SP,#+8
   \   000000C2   ........           BL       Button
   \   000000C6   02B0               ADD      SP,SP,#+8
   \   000000C8   0228               CMP      R0,#+2
   \   000000CA   0CD1               BNE      ??BigTemperLabel_Event_7
   \   000000CC   2848               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   000000CE   0178               LDRB     R1,[R0, #+0]
   \   000000D0   0A00               MOVS     R2,R1
   \   000000D2   521C               ADDS     R2,R2,#+1
   \   000000D4   1204               LSLS     R2,R2,#+16
   \   000000D6   120C               LSRS     R2,R2,#+16
   \   000000D8   232A               CMP      R2,#+35
   \   000000DA   02D2               BCS      ??BigTemperLabel_Event_8
   \   000000DC   491C               ADDS     R1,R1,#+1
   \   000000DE   0170               STRB     R1,[R0, #+0]
   \   000000E0   00E0               B        ??BigTemperLabel_Event_9
   \                     ??BigTemperLabel_Event_8:
   \   000000E2   0470               STRB     R4,[R0, #+0]
   \                     ??BigTemperLabel_Event_9:
   \   000000E4   0127               MOVS     R7,#+1
   5240                    
   5241                      txt[0]='<';txt[1]=0;
   \                     ??BigTemperLabel_Event_7:
   \   000000E6   3C20               MOVS     R0,#+60
   \   000000E8   2870               STRB     R0,[R5, #+0]
   \   000000EA   6C70               STRB     R4,[R5, #+1]
   5242                      if (Button(txt,3,40,15,20)==2){if (Anal->Reg>1) {Anal->Reg--;} else {Anal->Reg=NumberReg;} Repaint=1;} 
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   1420               MOVS     R0,#+20
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   0F23               MOVS     R3,#+15
   \   000000F4   2822               MOVS     R2,#+40
   \   000000F6   0321               MOVS     R1,#+3
   \   000000F8   02A8               ADD      R0,SP,#+8
   \   000000FA   ........           BL       Button
   \   000000FE   02B0               ADD      SP,SP,#+8
   \   00000100   0228               CMP      R0,#+2
   \   00000102   09D1               BNE      ??BigTemperLabel_Event_10
   \   00000104   1A48               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   00000106   4178               LDRB     R1,[R0, #+1]
   \   00000108   0229               CMP      R1,#+2
   \   0000010A   02D3               BCC      ??BigTemperLabel_Event_11
   \   0000010C   491E               SUBS     R1,R1,#+1
   \   0000010E   4170               STRB     R1,[R0, #+1]
   \   00000110   01E0               B        ??BigTemperLabel_Event_12
   \                     ??BigTemperLabel_Event_11:
   \   00000112   0A21               MOVS     R1,#+10
   \   00000114   4170               STRB     R1,[R0, #+1]
   \                     ??BigTemperLabel_Event_12:
   \   00000116   0127               MOVS     R7,#+1
   5243                      txt[0]='>';
   \                     ??BigTemperLabel_Event_10:
   \   00000118   2E70               STRB     R6,[R5, #+0]
   5244                      if (Button(txt,45,40,15,20)==2){if (Anal->Reg+1<NumberReg) {Anal->Reg++;} else {Anal->Reg=1;}  Repaint=1;}
   \   0000011A   82B0               SUB      SP,SP,#+8
   \   0000011C   1420               MOVS     R0,#+20
   \   0000011E   0090               STR      R0,[SP, #+0]
   \   00000120   0F23               MOVS     R3,#+15
   \   00000122   2822               MOVS     R2,#+40
   \   00000124   2D21               MOVS     R1,#+45
   \   00000126   02A8               ADD      R0,SP,#+8
   \   00000128   ........           BL       Button
   \   0000012C   02B0               ADD      SP,SP,#+8
   \   0000012E   0228               CMP      R0,#+2
   \   00000130   0DD1               BNE      ??BigTemperLabel_Event_3
   \   00000132   0F48               LDR      R0,??BigTemperLabel_Event_0+0x14  ;; gProg + 48139
   \   00000134   4178               LDRB     R1,[R0, #+1]
   \   00000136   0A00               MOVS     R2,R1
   \   00000138   521C               ADDS     R2,R2,#+1
   \   0000013A   1204               LSLS     R2,R2,#+16
   \   0000013C   120C               LSRS     R2,R2,#+16
   \   0000013E   0A2A               CMP      R2,#+10
   \   00000140   02D2               BCS      ??BigTemperLabel_Event_13
   \   00000142   491C               ADDS     R1,R1,#+1
   \   00000144   4170               STRB     R1,[R0, #+1]
   \   00000146   01E0               B        ??BigTemperLabel_Event_14
   \                     ??BigTemperLabel_Event_13:
   \   00000148   0121               MOVS     R1,#+1
   \   0000014A   4170               STRB     R1,[R0, #+1]
   \                     ??BigTemperLabel_Event_14:
   \   0000014C   0127               MOVS     R7,#+1
   5245                }
   5246                
   5247                if (Repaint) MenuPaint();
   \                     ??BigTemperLabel_Event_3:
   \   0000014E   002F               CMP      R7,#+0
   \   00000150   01D0               BEQ      ??BigTemperLabel_Event_15
   \   00000152   ........           BL       MenuPaint
   5248          
   5249          }
   \                     ??BigTemperLabel_Event_15:
   \   00000156   FEBC               POP      {R1-R7}
   \   00000158   01BC               POP      {R0}
   \   0000015A   0047               BX       R0               ;; return
   \                     ??BigTemperLabel_Event_0:
   \   0000015C   ........           DC32     X_down
   \   00000160   ........           DC32     Y_down
   \   00000164   ........           DC32     X_up
   \   00000168   ........           DC32     Y_up
   \   0000016C   ........           DC32     TextToChangeLength
   \   00000170   ........           DC32     gProg + 48139
   5250          
   5251          
   5252          
   5253                #define MaxRowGr 4
   5254                #define MaxColGr 3
   5255                #define Y_offset 27
   5256          

   \                                 In section Debug.txt, align 4, keep-with-next
   5257          void ZoneGraph_Paint(_Screen* ScreenLokal)
   5258              {
   \                     ZoneGraph_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   E1A0               ADR      R0,??ZoneGraph_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   DE48               LDR      R0,??ZoneGraph_Paint_0+0x4  ;; 0x4ec
   \   00000020   DE4C               LDR      R4,??ZoneGraph_Paint_0+0x8  ;; g_leng
   \   00000022   2468               LDR      R4,[R4, #+0]
   \   00000024   DE4D               LDR      R5,??ZoneGraph_Paint_0+0xC  ;; 0xa14
   \   00000026   6C43               MULS     R4,R5,R4
   \   00000028   DE4D               LDR      R5,??ZoneGraph_Paint_0+0x10  ;; Speech
   \   0000002A   2C19               ADDS     R4,R5,R4
   \   0000002C   2018               ADDS     R0,R4,R0
   5259          
   5260                  
   5261                 List_Paint(Speech[g_leng].Grafika,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   5262                 char txt[8];
   5263                 
   5264                 
   5265                 
   5266                 
   5267                //siatka 
   5268                 
   5269                for (char i=0; i<=MaxRowGr; i++)
   \   00000034   0024               MOVS     R4,#+0
   \   00000036   2500               MOVS     R5,R4
   \   00000038   0BE0               B        ??ZoneGraph_Paint_1
   5270                {
   5271                    H_line(3,Y_offset+i*20,58,2);   
   \                     ??ZoneGraph_Paint_2:
   \   0000003A   0223               MOVS     R3,#+2
   \   0000003C   3A22               MOVS     R2,#+58
   \   0000003E   2900               MOVS     R1,R5
   \   00000040   1420               MOVS     R0,#+20
   \   00000042   4143               MULS     R1,R0,R1
   \   00000044   1B31               ADDS     R1,R1,#+27
   \   00000046   0320               MOVS     R0,#+3
   \   00000048   ........           BL       H_line
   5272                }
   \   0000004C   6D1C               ADDS     R5,R5,#+1
   \   0000004E   2D06               LSLS     R5,R5,#+24
   \   00000050   2D0E               LSRS     R5,R5,#+24
   \                     ??ZoneGraph_Paint_1:
   \   00000052   2800               MOVS     R0,R5
   \   00000054   0528               CMP      R0,#+5
   \   00000056   F0D3               BCC      ??ZoneGraph_Paint_2
   5273                for (char i=0; i<=MaxColGr; i++)
   \   00000058   2500               MOVS     R5,R4
   \   0000005A   1426               MOVS     R6,#+20
   \   0000005C   0BE0               B        ??ZoneGraph_Paint_3
   5274                {
   5275                    V_line(1+i*20,Y_offset,80,2);         
   \                     ??ZoneGraph_Paint_4:
   \   0000005E   0223               MOVS     R3,#+2
   \   00000060   5022               MOVS     R2,#+80
   \   00000062   1B21               MOVS     R1,#+27
   \   00000064   7043               MULS     R0,R6,R0
   \   00000066   401C               ADDS     R0,R0,#+1
   \   00000068   0006               LSLS     R0,R0,#+24
   \   0000006A   000E               LSRS     R0,R0,#+24
   \   0000006C   ........           BL       V_line
   5276                }
   \   00000070   6D1C               ADDS     R5,R5,#+1
   \   00000072   2D06               LSLS     R5,R5,#+24
   \   00000074   2D0E               LSRS     R5,R5,#+24
   \                     ??ZoneGraph_Paint_3:
   \   00000076   2800               MOVS     R0,R5
   \   00000078   0428               CMP      R0,#+4
   \   0000007A   F0D3               BCC      ??ZoneGraph_Paint_4
   \   0000007C   CA48               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; TextToChangeLength + 24
   \   0000007E   0078               LDRB     R0,[R0, #+0]
   \   00000080   0721               MOVS     R1,#+7
   \   00000082   4843               MULS     R0,R1,R0
   \   00000084   0499               LDR      R1,[SP, #+16]
   \   00000086   0D18               ADDS     R5,R1,R0
   \   00000088   0326               MOVS     R6,#+3
   \   0000008A   5320               MOVS     R0,#+83
   \   0000008C   285C               LDRB     R0,[R5, R0]
   \   0000008E   3100               MOVS     R1,R6
   \   00000090   ........           BL       __aeabi_idivmod
   \   00000094   361A               SUBS     R6,R6,R0
   \   00000096   3606               LSLS     R6,R6,#+24
   \   00000098   360E               LSRS     R6,R6,#+24
   5277                //------koniec siatki
   5278          
   5279                //zaznaczenie wybranego
   5280                char RowChos = MaxRowGr-ScreenLokal->Graph[ZoneGrapfNrClick].Type/3-1;
   5281                char ColChos = ScreenLokal->Graph[ZoneGrapfNrClick].Type-((ScreenLokal->Graph[ZoneGrapfNrClick].Type/3)*3);
   \   0000009A   5320               MOVS     R0,#+83
   \   0000009C   2F5C               LDRB     R7,[R5, R0]
   \   0000009E   3800               MOVS     R0,R7
   \   000000A0   0321               MOVS     R1,#+3
   \   000000A2   ........           BL       __aeabi_idivmod
   \   000000A6   0321               MOVS     R1,#+3
   \   000000A8   4843               MULS     R0,R1,R0
   \   000000AA   3D1A               SUBS     R5,R7,R0
   \   000000AC   2D06               LSLS     R5,R5,#+24
   \   000000AE   2D0E               LSRS     R5,R5,#+24
   5282                H_line(1+ColChos*20  ,Y_offset+RowChos*20,20,1);  
   \   000000B0   1420               MOVS     R0,#+20
   \   000000B2   4543               MULS     R5,R0,R5
   \   000000B4   6946               MOV      R1,SP
   \   000000B6   2800               MOVS     R0,R5
   \   000000B8   401C               ADDS     R0,R0,#+1
   \   000000BA   0872               STRB     R0,[R1, #+8]
   \   000000BC   1420               MOVS     R0,#+20
   \   000000BE   4643               MULS     R6,R0,R6
   \   000000C0   3700               MOVS     R7,R6
   \   000000C2   1B37               ADDS     R7,R7,#+27
   \   000000C4   0123               MOVS     R3,#+1
   \   000000C6   0200               MOVS     R2,R0
   \   000000C8   3900               MOVS     R1,R7
   \   000000CA   6846               MOV      R0,SP
   \   000000CC   007A               LDRB     R0,[R0, #+8]
   \   000000CE   ........           BL       H_line
   5283                H_line(1+ColChos*20    ,Y_offset+(RowChos+1)*20,20,1); 
   \   000000D2   0123               MOVS     R3,#+1
   \   000000D4   1422               MOVS     R2,#+20
   \   000000D6   2F36               ADDS     R6,R6,#+47
   \   000000D8   3100               MOVS     R1,R6
   \   000000DA   6846               MOV      R0,SP
   \   000000DC   007A               LDRB     R0,[R0, #+8]
   \   000000DE   ........           BL       H_line
   5284                V_line(1+ColChos*20    ,Y_offset+RowChos*20,20,1);  
   \   000000E2   0123               MOVS     R3,#+1
   \   000000E4   1422               MOVS     R2,#+20
   \   000000E6   3900               MOVS     R1,R7
   \   000000E8   6846               MOV      R0,SP
   \   000000EA   007A               LDRB     R0,[R0, #+8]
   \   000000EC   ........           BL       V_line
   5285                V_line(1+(ColChos+1)*20    ,Y_offset+RowChos*20,20,1);  
   \   000000F0   0123               MOVS     R3,#+1
   \   000000F2   1422               MOVS     R2,#+20
   \   000000F4   3900               MOVS     R1,R7
   \   000000F6   1535               ADDS     R5,R5,#+21
   \   000000F8   2800               MOVS     R0,R5
   \   000000FA   0006               LSLS     R0,R0,#+24
   \   000000FC   000E               LSRS     R0,R0,#+24
   \   000000FE   ........           BL       V_line
   5286                //---------------------
   5287                
   5288                
   5289                
   5290                 if (((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) || (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff)) && (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff))
   \   00000102   A948               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; TextToChangeLength + 24
   \   00000104   0078               LDRB     R0,[R0, #+0]
   \   00000106   0721               MOVS     R1,#+7
   \   00000108   4843               MULS     R0,R1,R0
   \   0000010A   0499               LDR      R1,[SP, #+16]
   \   0000010C   0818               ADDS     R0,R1,R0
   \   0000010E   5330               ADDS     R0,R0,#+83
   \   00000110   0178               LDRB     R1,[R0, #+0]
   \   00000112   0829               CMP      R1,#+8
   \   00000114   01D0               BEQ      ??ZoneGraph_Paint_5
   \   00000116   0B29               CMP      R1,#+11
   \   00000118   11D1               BNE      ??ZoneGraph_Paint_6
   \                     ??ZoneGraph_Paint_5:
   \   0000011A   8079               LDRB     R0,[R0, #+6]
   \   0000011C   C007               LSLS     R0,R0,#+31
   \   0000011E   0ED5               BPL      ??ZoneGraph_Paint_6
   5291                  {
   5292                   Label("+",2,5+2*20, Y_offset+17 ,1,12,1,127,0);
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   2000               MOVS     R0,R4
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   7F21               MOVS     R1,#+127
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   03B4               PUSH     {R0,R1}
   \   0000012C   0C21               MOVS     R1,#+12
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   2C23               MOVS     R3,#+44
   \   00000132   2D22               MOVS     R2,#+45
   \   00000134   0221               MOVS     R1,#+2
   \   00000136   9DA0               ADR      R0,??ZoneGraph_Paint_0+0x18  ;; 0x2B, 0x00, 0x00, 0x00
   \   00000138   ........           BL       Label
   \   0000013C   06B0               ADD      SP,SP,#+24
   5293          
   5294                  }
   5295                  
   5296                
   5297                  char idx=0;
   \                     ??ZoneGraph_Paint_6:
   \   0000013E   2500               MOVS     R5,R4
   5298          
   5299                  for (int j=(MaxRowGr-1); j>=0; j--)
   \   00000140   0326               MOVS     R6,#+3
   \   00000142   37E0               B        ??ZoneGraph_Paint_7
   5300                  {
   5301                    for (int i=0; i<MaxColGr; i++)
   5302                    {
   5303                      if (idx<=MaxGraphIdx) CopyToCanvasPoint((char*)&GraphTab[idx], 2+i*20, Y_offset+1+j*20, 18,18);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??ZoneGraph_Paint_8:
   \   00000144   2800               MOVS     R0,R5
   \   00000146   0828               CMP      R0,#+8
   \   00000148   18D2               BCS      ??ZoneGraph_Paint_9
   \   0000014A   82B0               SUB      SP,SP,#+8
   \   0000014C   1220               MOVS     R0,#+18
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   0300               MOVS     R3,R0
   \   00000152   1422               MOVS     R2,#+20
   \   00000154   7243               MULS     R2,R6,R2
   \   00000156   1C32               ADDS     R2,R2,#+28
   \   00000158   1206               LSLS     R2,R2,#+24
   \   0000015A   120E               LSRS     R2,R2,#+24
   \   0000015C   1421               MOVS     R1,#+20
   \   0000015E   7943               MULS     R1,R7,R1
   \   00000160   891C               ADDS     R1,R1,#+2
   \   00000162   0906               LSLS     R1,R1,#+24
   \   00000164   090E               LSRS     R1,R1,#+24
   \   00000166   8C46               MOV      R12,R1
   \   00000168   2800               MOVS     R0,R5
   \   0000016A   3621               MOVS     R1,#+54
   \   0000016C   4843               MULS     R0,R1,R0
   \   0000016E   9049               LDR      R1,??ZoneGraph_Paint_0+0x1C  ;; `?<Constant {0, 0}>`
   \   00000170   0818               ADDS     R0,R1,R0
   \   00000172   9C30               ADDS     R0,R0,#+156
   \   00000174   6146               MOV      R1,R12
   \   00000176   ........           BL       CopyToCanvasPoint
   \   0000017A   02B0               ADD      SP,SP,#+8
   5304                      if (idx==MaxGraphIdx+1) {
   \                     ??ZoneGraph_Paint_9:
   \   0000017C   2800               MOVS     R0,R5
   \   0000017E   0828               CMP      R0,#+8
   \   00000180   11D1               BNE      ??ZoneGraph_Paint_10
   5305                        Label("Text",0,2 +2*20, Y_offset+6+j*20 ,4,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000182   82B0               SUB      SP,SP,#+8
   \   00000184   2000               MOVS     R0,R4
   \   00000186   0090               STR      R0,[SP, #+0]
   \   00000188   7F21               MOVS     R1,#+127
   \   0000018A   0120               MOVS     R0,#+1
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   0A21               MOVS     R1,#+10
   \   00000190   0420               MOVS     R0,#+4
   \   00000192   03B4               PUSH     {R0,R1}
   \   00000194   1423               MOVS     R3,#+20
   \   00000196   7343               MULS     R3,R6,R3
   \   00000198   2133               ADDS     R3,R3,#+33
   \   0000019A   2A22               MOVS     R2,#+42
   \   0000019C   2100               MOVS     R1,R4
   \   0000019E   8548               LDR      R0,??ZoneGraph_Paint_0+0x20  ;; `?<Constant {0, 0}>` + 100
   \   000001A0   ........           BL       Label
   \   000001A4   06B0               ADD      SP,SP,#+24
   5306                      }
   5307                      idx++;
   \                     ??ZoneGraph_Paint_10:
   \   000001A6   6D1C               ADDS     R5,R5,#+1
   \   000001A8   2D06               LSLS     R5,R5,#+24
   \   000001AA   2D0E               LSRS     R5,R5,#+24
   5308                    }
   \   000001AC   7F1C               ADDS     R7,R7,#+1
   \                     ??ZoneGraph_Paint_11:
   \   000001AE   032F               CMP      R7,#+3
   \   000001B0   C8DB               BLT      ??ZoneGraph_Paint_8
   \   000001B2   761E               SUBS     R6,R6,#+1
   \                     ??ZoneGraph_Paint_7:
   \   000001B4   002E               CMP      R6,#+0
   \   000001B6   01D4               BMI      ??ZoneGraph_Paint_12
   \   000001B8   2700               MOVS     R7,R4
   \   000001BA   F8E7               B        ??ZoneGraph_Paint_11
   5309                  }
   5310                  
   5311                  
   5312                  
   5313                  
   5314                  Label("Scn ",0,4 +0*20, Y_offset+7 ,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??ZoneGraph_Paint_12:
   \   000001BC   7C4D               LDR      R5,??ZoneGraph_Paint_0+0x1C  ;; `?<Constant {0, 0}>`
   \   000001BE   82B0               SUB      SP,SP,#+8
   \   000001C0   2000               MOVS     R0,R4
   \   000001C2   0090               STR      R0,[SP, #+0]
   \   000001C4   7F21               MOVS     R1,#+127
   \   000001C6   0120               MOVS     R0,#+1
   \   000001C8   03B4               PUSH     {R0,R1}
   \   000001CA   0A21               MOVS     R1,#+10
   \   000001CC   0320               MOVS     R0,#+3
   \   000001CE   03B4               PUSH     {R0,R1}
   \   000001D0   2223               MOVS     R3,#+34
   \   000001D2   0422               MOVS     R2,#+4
   \   000001D4   2100               MOVS     R1,R4
   \   000001D6   2800               MOVS     R0,R5
   \   000001D8   5430               ADDS     R0,R0,#+84
   \   000001DA   ........           BL       Label
   \   000001DE   06B0               ADD      SP,SP,#+24
   5315                  Label("Val ",0,5 +1*20, Y_offset+7 ,3,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001E0   82B0               SUB      SP,SP,#+8
   \   000001E2   2000               MOVS     R0,R4
   \   000001E4   0090               STR      R0,[SP, #+0]
   \   000001E6   7F21               MOVS     R1,#+127
   \   000001E8   0120               MOVS     R0,#+1
   \   000001EA   03B4               PUSH     {R0,R1}
   \   000001EC   0F21               MOVS     R1,#+15
   \   000001EE   0320               MOVS     R0,#+3
   \   000001F0   03B4               PUSH     {R0,R1}
   \   000001F2   2223               MOVS     R3,#+34
   \   000001F4   1922               MOVS     R2,#+25
   \   000001F6   2100               MOVS     R1,R4
   \   000001F8   2800               MOVS     R0,R5
   \   000001FA   6C30               ADDS     R0,R0,#+108
   \   000001FC   ........           BL       Label
   \   00000200   06B0               ADD      SP,SP,#+24
   5316                  //Label("Text",0,2 +2*20, Y_offset+7 ,4,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   5317                  Label("On ",0,6 +2*20,  Y_offset+9,3,10,1,127,0);
   \   00000202   82B0               SUB      SP,SP,#+8
   \   00000204   2000               MOVS     R0,R4
   \   00000206   0090               STR      R0,[SP, #+0]
   \   00000208   7F21               MOVS     R1,#+127
   \   0000020A   0120               MOVS     R0,#+1
   \   0000020C   03B4               PUSH     {R0,R1}
   \   0000020E   0A21               MOVS     R1,#+10
   \   00000210   0320               MOVS     R0,#+3
   \   00000212   03B4               PUSH     {R0,R1}
   \   00000214   2423               MOVS     R3,#+36
   \   00000216   2E22               MOVS     R2,#+46
   \   00000218   2100               MOVS     R1,R4
   \   0000021A   67A0               ADR      R0,??ZoneGraph_Paint_0+0x24  ;; "On "
   \   0000021C   ........           BL       Label
   \   00000220   06B0               ADD      SP,SP,#+24
   5318                  Label("Off ",0,6 +2*20, Y_offset+1,3,10,1,127,0);
   \   00000222   82B0               SUB      SP,SP,#+8
   \   00000224   2000               MOVS     R0,R4
   \   00000226   0090               STR      R0,[SP, #+0]
   \   00000228   7F21               MOVS     R1,#+127
   \   0000022A   0120               MOVS     R0,#+1
   \   0000022C   03B4               PUSH     {R0,R1}
   \   0000022E   0A21               MOVS     R1,#+10
   \   00000230   0320               MOVS     R0,#+3
   \   00000232   03B4               PUSH     {R0,R1}
   \   00000234   1C23               MOVS     R3,#+28
   \   00000236   2E22               MOVS     R2,#+46
   \   00000238   2100               MOVS     R1,R4
   \   0000023A   2800               MOVS     R0,R5
   \   0000023C   4C30               ADDS     R0,R0,#+76
   \   0000023E   ........           BL       Label
   \   00000242   06B0               ADD      SP,SP,#+24
   5319                  
   5320                  //je¿eli On / Off
   5321                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff) 
   \   00000244   5848               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; TextToChangeLength + 24
   \   00000246   0078               LDRB     R0,[R0, #+0]
   \   00000248   0721               MOVS     R1,#+7
   \   0000024A   4843               MULS     R0,R1,R0
   \   0000024C   0499               LDR      R1,[SP, #+16]
   \   0000024E   0818               ADDS     R0,R1,R0
   \   00000250   5330               ADDS     R0,R0,#+83
   \   00000252   0178               LDRB     R1,[R0, #+0]
   \   00000254   0B29               CMP      R1,#+11
   \   00000256   7CD1               BNE      ??ZoneGraph_Paint_13
   5322                  {
   5323                    
   5324                    txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=' ';
   \   00000258   6E46               MOV      R6,SP
   \   0000025A   4921               MOVS     R1,#+73
   \   0000025C   3170               STRB     R1,[R6, #+0]
   \   0000025E   6421               MOVS     R1,#+100
   \   00000260   7170               STRB     R1,[R6, #+1]
   \   00000262   3A21               MOVS     R1,#+58
   \   00000264   B170               STRB     R1,[R6, #+2]
   \   00000266   2021               MOVS     R1,#+32
   \   00000268   F170               STRB     R1,[R6, #+3]
   5325                    char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Nr, &(txt[3]), 2); //(char Value, char *Vstring, char ill);
   \   0000026A   0222               MOVS     R2,#+2
   \   0000026C   3100               MOVS     R1,R6
   \   0000026E   C91C               ADDS     R1,R1,#+3
   \   00000270   0079               LDRB     R0,[R0, #+4]
   \   00000272   ........           BL       CharToStr
   \   00000276   0200               MOVS     R2,R0
   5326                    Label(txt,2,20, 16 ,ind+3,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000278   82B0               SUB      SP,SP,#+8
   \   0000027A   2000               MOVS     R0,R4
   \   0000027C   0090               STR      R0,[SP, #+0]
   \   0000027E   7F21               MOVS     R1,#+127
   \   00000280   0120               MOVS     R0,#+1
   \   00000282   03B4               PUSH     {R0,R1}
   \   00000284   1621               MOVS     R1,#+22
   \   00000286   D21C               ADDS     R2,R2,#+3
   \   00000288   1000               MOVS     R0,R2
   \   0000028A   0006               LSLS     R0,R0,#+24
   \   0000028C   000E               LSRS     R0,R0,#+24
   \   0000028E   03B4               PUSH     {R0,R1}
   \   00000290   1023               MOVS     R3,#+16
   \   00000292   1422               MOVS     R2,#+20
   \   00000294   0221               MOVS     R1,#+2
   \   00000296   06A8               ADD      R0,SP,#+24
   \   00000298   ........           BL       Label
   \   0000029C   06B0               ADD      SP,SP,#+24
   5327                  
   5328                    txt[0]='<';txt[1]=0;
   \   0000029E   3C27               MOVS     R7,#+60
   \   000002A0   3770               STRB     R7,[R6, #+0]
   \   000002A2   2000               MOVS     R0,R4
   \   000002A4   7070               STRB     R0,[R6, #+1]
   5329                    Button(txt,3,15,15,11); 
   \   000002A6   82B0               SUB      SP,SP,#+8
   \   000002A8   0B20               MOVS     R0,#+11
   \   000002AA   0090               STR      R0,[SP, #+0]
   \   000002AC   0F23               MOVS     R3,#+15
   \   000002AE   1A00               MOVS     R2,R3
   \   000002B0   0321               MOVS     R1,#+3
   \   000002B2   02A8               ADD      R0,SP,#+8
   \   000002B4   ........           BL       Button
   \   000002B8   02B0               ADD      SP,SP,#+8
   \   000002BA   3E20               MOVS     R0,#+62
   \   000002BC   3070               STRB     R0,[R6, #+0]
   5330                    txt[0]='>';
   5331                    Button(txt,45,15,15,11); 
   \   000002BE   82B0               SUB      SP,SP,#+8
   \   000002C0   0B20               MOVS     R0,#+11
   \   000002C2   0090               STR      R0,[SP, #+0]
   \   000002C4   0F23               MOVS     R3,#+15
   \   000002C6   1A00               MOVS     R2,R3
   \   000002C8   2D21               MOVS     R1,#+45
   \   000002CA   02A8               ADD      R0,SP,#+8
   \   000002CC   ........           BL       Button
   \   000002D0   02B0               ADD      SP,SP,#+8
   5332                    
   5333                    txt[0]='P'; txt[1]=':'; txt[2]=0; 
   \   000002D2   5020               MOVS     R0,#+80
   \   000002D4   3070               STRB     R0,[R6, #+0]
   \   000002D6   3A20               MOVS     R0,#+58
   \   000002D8   7070               STRB     R0,[R6, #+1]
   \   000002DA   2000               MOVS     R0,R4
   \   000002DC   B070               STRB     R0,[R6, #+2]
   5334                    ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Port, &(txt[2]), 2); //(char Value, char *Vstring, char ill);
   \   000002DE   0222               MOVS     R2,#+2
   \   000002E0   3100               MOVS     R1,R6
   \   000002E2   891C               ADDS     R1,R1,#+2
   \   000002E4   3048               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; TextToChangeLength + 24
   \   000002E6   0078               LDRB     R0,[R0, #+0]
   \   000002E8   0723               MOVS     R3,#+7
   \   000002EA   5843               MULS     R0,R3,R0
   \   000002EC   049B               LDR      R3,[SP, #+16]
   \   000002EE   1818               ADDS     R0,R3,R0
   \   000002F0   5830               ADDS     R0,R0,#+88
   \   000002F2   0078               LDRB     R0,[R0, #+0]
   \   000002F4   ........           BL       CharToStr
   \   000002F8   0200               MOVS     R2,R0
   5335                   
   5336                    Label(txt,2,20, 3 ,ind+2,22,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002FA   82B0               SUB      SP,SP,#+8
   \   000002FC   2000               MOVS     R0,R4
   \   000002FE   0090               STR      R0,[SP, #+0]
   \   00000300   7F21               MOVS     R1,#+127
   \   00000302   0120               MOVS     R0,#+1
   \   00000304   03B4               PUSH     {R0,R1}
   \   00000306   1621               MOVS     R1,#+22
   \   00000308   921C               ADDS     R2,R2,#+2
   \   0000030A   1000               MOVS     R0,R2
   \   0000030C   0006               LSLS     R0,R0,#+24
   \   0000030E   000E               LSRS     R0,R0,#+24
   \   00000310   03B4               PUSH     {R0,R1}
   \   00000312   0323               MOVS     R3,#+3
   \   00000314   1422               MOVS     R2,#+20
   \   00000316   0221               MOVS     R1,#+2
   \   00000318   06A8               ADD      R0,SP,#+24
   \   0000031A   ........           BL       Label
   \   0000031E   06B0               ADD      SP,SP,#+24
   5337                  
   5338                    txt[0]='<';txt[1]=0;
   \   00000320   3770               STRB     R7,[R6, #+0]
   \   00000322   2000               MOVS     R0,R4
   \   00000324   7070               STRB     R0,[R6, #+1]
   5339                    Button(txt,3,3,15,11); 
   \   00000326   82B0               SUB      SP,SP,#+8
   \   00000328   0B20               MOVS     R0,#+11
   \   0000032A   0090               STR      R0,[SP, #+0]
   \   0000032C   0F23               MOVS     R3,#+15
   \   0000032E   0322               MOVS     R2,#+3
   \   00000330   1100               MOVS     R1,R2
   \   00000332   02A8               ADD      R0,SP,#+8
   \   00000334   ........           BL       Button
   \   00000338   02B0               ADD      SP,SP,#+8
   5340                    txt[0]='>';
   \   0000033A   3E20               MOVS     R0,#+62
   \   0000033C   3070               STRB     R0,[R6, #+0]
   5341                    Button(txt,45,3,15,11); 
   \   0000033E   82B0               SUB      SP,SP,#+8
   \   00000340   0B20               MOVS     R0,#+11
   \   00000342   0090               STR      R0,[SP, #+0]
   \   00000344   0F23               MOVS     R3,#+15
   \   00000346   0322               MOVS     R2,#+3
   \   00000348   2D21               MOVS     R1,#+45
   \   0000034A   02A8               ADD      R0,SP,#+8
   \   0000034C   ........           BL       Button
   \   00000350   02B0               ADD      SP,SP,#+8
   5342                    
   5343                    
   5344                  }        
   5345                  
   5346                  //je¿eli tekst
   5347                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) 
   \                     ??ZoneGraph_Paint_13:
   \   00000352   1548               LDR      R0,??ZoneGraph_Paint_0+0x14  ;; TextToChangeLength + 24
   \   00000354   0078               LDRB     R0,[R0, #+0]
   \   00000356   0721               MOVS     R1,#+7
   \   00000358   4843               MULS     R0,R1,R0
   \   0000035A   0499               LDR      R1,[SP, #+16]
   \   0000035C   0E18               ADDS     R6,R1,R0
   \   0000035E   3000               MOVS     R0,R6
   \   00000360   5330               ADDS     R0,R0,#+83
   \   00000362   0178               LDRB     R1,[R0, #+0]
   \   00000364   0829               CMP      R1,#+8
   \   00000366   78D1               BNE      ??ZoneGraph_Paint_14
   5348                  {
   5349          
   5350                    if (ScreenLokal->Graph[ZoneGrapfNrClick].Text[0]!=0)
   \   00000368   4078               LDRB     R0,[R0, #+1]
   \   0000036A   0028               CMP      R0,#+0
   \   0000036C   82B0               SUB      SP,SP,#+8
   \   0000036E   25D0               BEQ      ??ZoneGraph_Paint_15
   5351                    {
   5352                      Label(ScreenLokal->Graph[ZoneGrapfNrClick].Text,0,31, 17 ,6,10,1,127,0); 
   \   00000370   2000               MOVS     R0,R4
   \   00000372   0090               STR      R0,[SP, #+0]
   \   00000374   7F21               MOVS     R1,#+127
   \   00000376   0120               MOVS     R0,#+1
   \   00000378   03B4               PUSH     {R0,R1}
   \   0000037A   0A21               MOVS     R1,#+10
   \   0000037C   0620               MOVS     R0,#+6
   \   0000037E   03B4               PUSH     {R0,R1}
   \   00000380   1123               MOVS     R3,#+17
   \   00000382   1F22               MOVS     R2,#+31
   \   00000384   2100               MOVS     R1,R4
   \   00000386   5436               ADDS     R6,R6,#+84
   \   00000388   3000               MOVS     R0,R6
   \   0000038A   ........           BL       Label
   \   0000038E   06B0               ADD      SP,SP,#+24
   \   00000390   24E0               B        ??ZoneGraph_Paint_16
   \   00000392   C046               Nop      
   \                     ??ZoneGraph_Paint_0:
   \   00000394   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000398   EC040000           DC32     0x4ec
   \   0000039C   ........           DC32     g_leng
   \   000003A0   140A0000           DC32     0xa14
   \   000003A4   ........           DC32     Speech
   \   000003A8   ........           DC32     TextToChangeLength + 24
   \   000003AC   2B000000           DC8      0x2B, 0x00, 0x00, 0x00
   \   000003B0   ........           DC32     `?<Constant {0, 0}>`
   \   000003B4   ........           DC32     `?<Constant {0, 0}>` + 100
   \   000003B8   4F6E2000           DC8      "On "
   5353                    }else{
   5354                      Label("...... ",0,31, 17 ,6,10,1,127,0); 
   \                     ??ZoneGraph_Paint_15:
   \   000003BC   2000               MOVS     R0,R4
   \   000003BE   0090               STR      R0,[SP, #+0]
   \   000003C0   7F21               MOVS     R1,#+127
   \   000003C2   0120               MOVS     R0,#+1
   \   000003C4   03B4               PUSH     {R0,R1}
   \   000003C6   0A21               MOVS     R1,#+10
   \   000003C8   0620               MOVS     R0,#+6
   \   000003CA   03B4               PUSH     {R0,R1}
   \   000003CC   1123               MOVS     R3,#+17
   \   000003CE   1F22               MOVS     R2,#+31
   \   000003D0   2100               MOVS     R1,R4
   \   000003D2   2800               MOVS     R0,R5
   \   000003D4   7430               ADDS     R0,R0,#+116
   \   000003D6   ........           BL       Label
   \   000003DA   06B0               ADD      SP,SP,#+24
   5355                    }
   5356                    
   5357                    Button("Text",2,15,25,11); 
   \                     ??ZoneGraph_Paint_16:
   \   000003DC   82B0               SUB      SP,SP,#+8
   \   000003DE   0B20               MOVS     R0,#+11
   \   000003E0   0090               STR      R0,[SP, #+0]
   \   000003E2   1923               MOVS     R3,#+25
   \   000003E4   0F22               MOVS     R2,#+15
   \   000003E6   0221               MOVS     R1,#+2
   \   000003E8   2800               MOVS     R0,R5
   \   000003EA   6430               ADDS     R0,R0,#+100
   \   000003EC   ........           BL       Button
   \   000003F0   02B0               ADD      SP,SP,#+8
   5358                    
   5359                    Label("+On/Off",0,3, 4 ,7,10,1,127,0); 
   \   000003F2   82B0               SUB      SP,SP,#+8
   \   000003F4   2000               MOVS     R0,R4
   \   000003F6   0090               STR      R0,[SP, #+0]
   \   000003F8   7F21               MOVS     R1,#+127
   \   000003FA   0120               MOVS     R0,#+1
   \   000003FC   03B4               PUSH     {R0,R1}
   \   000003FE   0A21               MOVS     R1,#+10
   \   00000400   0720               MOVS     R0,#+7
   \   00000402   03B4               PUSH     {R0,R1}
   \   00000404   0423               MOVS     R3,#+4
   \   00000406   0322               MOVS     R2,#+3
   \   00000408   2100               MOVS     R1,R4
   \   0000040A   7C35               ADDS     R5,R5,#+124
   \   0000040C   2800               MOVS     R0,R5
   \   0000040E   ........           BL       Label
   \   00000412   06B0               ADD      SP,SP,#+24
   5360                    
   5361                    if (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff) 
   \   00000414   7348               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 24
   \   00000416   0078               LDRB     R0,[R0, #+0]
   \   00000418   0721               MOVS     R1,#+7
   \   0000041A   4843               MULS     R0,R1,R0
   \   0000041C   0499               LDR      R1,[SP, #+16]
   \   0000041E   0818               ADDS     R0,R1,R0
   \   00000420   5930               ADDS     R0,R0,#+89
   \   00000422   0078               LDRB     R0,[R0, #+0]
   \   00000424   C007               LSLS     R0,R0,#+31
   \   00000426   6E46               MOV      R6,SP
   \   00000428   07D5               BPL      ??ZoneGraph_Paint_18
   5362                    {
   5363                      txt[0]='O'; txt[1]='f';txt[2]='f'; txt[3]=0;
   \   0000042A   4F20               MOVS     R0,#+79
   \   0000042C   3070               STRB     R0,[R6, #+0]
   \   0000042E   6620               MOVS     R0,#+102
   \   00000430   7070               STRB     R0,[R6, #+1]
   \   00000432   B070               STRB     R0,[R6, #+2]
   \   00000434   2000               MOVS     R0,R4
   \   00000436   F070               STRB     R0,[R6, #+3]
   \   00000438   05E0               B        ??ZoneGraph_Paint_19
   5364                    }else{
   5365                      txt[0]='O'; txt[1]='n'; txt[2]=0;
   \                     ??ZoneGraph_Paint_18:
   \   0000043A   4F20               MOVS     R0,#+79
   \   0000043C   3070               STRB     R0,[R6, #+0]
   \   0000043E   6E20               MOVS     R0,#+110
   \   00000440   7070               STRB     R0,[R6, #+1]
   \   00000442   2000               MOVS     R0,R4
   \   00000444   B070               STRB     R0,[R6, #+2]
   5366                    }
   5367                    
   5368                    Button(txt,40,3,21,11); 
   \                     ??ZoneGraph_Paint_19:
   \   00000446   82B0               SUB      SP,SP,#+8
   \   00000448   0B20               MOVS     R0,#+11
   \   0000044A   0090               STR      R0,[SP, #+0]
   \   0000044C   1523               MOVS     R3,#+21
   \   0000044E   0322               MOVS     R2,#+3
   \   00000450   2821               MOVS     R1,#+40
   \   00000452   02A8               ADD      R0,SP,#+8
   \   00000454   ........           BL       Button
   \   00000458   02B0               ADD      SP,SP,#+8
   5369                    
   5370                    
   5371                  }
   5372                  
   5373          
   5374                       
   5375                       
   5376                  //je¿eli wartoæ
   5377                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphWartosc) 
   \                     ??ZoneGraph_Paint_14:
   \   0000045A   6248               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 24
   \   0000045C   0078               LDRB     R0,[R0, #+0]
   \   0000045E   0721               MOVS     R1,#+7
   \   00000460   4843               MULS     R0,R1,R0
   \   00000462   0499               LDR      R1,[SP, #+16]
   \   00000464   0818               ADDS     R0,R1,R0
   \   00000466   5330               ADDS     R0,R0,#+83
   \   00000468   0078               LDRB     R0,[R0, #+0]
   \   0000046A   0A28               CMP      R0,#+10
   \   0000046C   00D0               BEQ      .+4
   \   0000046E   94E0               B        ??ZoneGraph_Paint_20
   5378                  {
   5379                    for (char i=0; i<3; i++) 
   \   00000470   2500               MOVS     R5,R4
   \   00000472   13E0               B        ??ZoneGraph_Paint_21
   5380                    {
   5381                     if (ScreenLokal->Graph[ZoneGrapfNrClick].Text[i]>=30) 
   5382                     {Label(&(ScreenLokal->Graph[ZoneGrapfNrClick].Text[i]),2,30-((3-i)*9),17,1,7,1,127,1); 
   5383                     }else{
   5384                      Label(" ",2,30-((3-i)*9),17,1,8,1,127,1);  
   \                     ??ZoneGraph_Paint_22:
   \   00000474   0120               MOVS     R0,#+1
   \   00000476   0090               STR      R0,[SP, #+0]
   \   00000478   7F21               MOVS     R1,#+127
   \   0000047A   03B4               PUSH     {R0,R1}
   \   0000047C   0821               MOVS     R1,#+8
   \   0000047E   03B4               PUSH     {R0,R1}
   \   00000480   1123               MOVS     R3,#+17
   \   00000482   0920               MOVS     R0,#+9
   \   00000484   4243               MULS     R2,R0,R2
   \   00000486   D21C               ADDS     R2,R2,#+3
   \   00000488   1206               LSLS     R2,R2,#+24
   \   0000048A   120E               LSRS     R2,R2,#+24
   \   0000048C   0221               MOVS     R1,#+2
   \   0000048E   56A0               ADR      R0,??ZoneGraph_Paint_17+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000490   ........           BL       Label
   \   00000494   06B0               ADD      SP,SP,#+24
   5385                     }
   \                     ??ZoneGraph_Paint_23:
   \   00000496   6D1C               ADDS     R5,R5,#+1
   \   00000498   2D06               LSLS     R5,R5,#+24
   \   0000049A   2D0E               LSRS     R5,R5,#+24
   \                     ??ZoneGraph_Paint_21:
   \   0000049C   2800               MOVS     R0,R5
   \   0000049E   0328               CMP      R0,#+3
   \   000004A0   1FD2               BCS      ??ZoneGraph_Paint_24
   \   000004A2   2A00               MOVS     R2,R5
   \   000004A4   4F48               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 24
   \   000004A6   0078               LDRB     R0,[R0, #+0]
   \   000004A8   0721               MOVS     R1,#+7
   \   000004AA   4843               MULS     R0,R1,R0
   \   000004AC   0499               LDR      R1,[SP, #+16]
   \   000004AE   0818               ADDS     R0,R1,R0
   \   000004B0   8618               ADDS     R6,R0,R2
   \   000004B2   5420               MOVS     R0,#+84
   \   000004B4   305C               LDRB     R0,[R6, R0]
   \   000004B6   1E28               CMP      R0,#+30
   \   000004B8   82B0               SUB      SP,SP,#+8
   \   000004BA   DBD3               BCC      ??ZoneGraph_Paint_22
   \   000004BC   0120               MOVS     R0,#+1
   \   000004BE   0090               STR      R0,[SP, #+0]
   \   000004C0   7F21               MOVS     R1,#+127
   \   000004C2   03B4               PUSH     {R0,R1}
   \   000004C4   0721               MOVS     R1,#+7
   \   000004C6   03B4               PUSH     {R0,R1}
   \   000004C8   1123               MOVS     R3,#+17
   \   000004CA   0920               MOVS     R0,#+9
   \   000004CC   4243               MULS     R2,R0,R2
   \   000004CE   D21C               ADDS     R2,R2,#+3
   \   000004D0   1206               LSLS     R2,R2,#+24
   \   000004D2   120E               LSRS     R2,R2,#+24
   \   000004D4   0221               MOVS     R1,#+2
   \   000004D6   5436               ADDS     R6,R6,#+84
   \   000004D8   3000               MOVS     R0,R6
   \   000004DA   ........           BL       Label
   \   000004DE   06B0               ADD      SP,SP,#+24
   \   000004E0   D9E7               B        ??ZoneGraph_Paint_23
   5386                    }
   5387                    
   5388                    txt[0]='N'; txt[1]=':'; txt[2]=0;
   \                     ??ZoneGraph_Paint_24:
   \   000004E2   6E46               MOV      R6,SP
   \   000004E4   4E20               MOVS     R0,#+78
   \   000004E6   3070               STRB     R0,[R6, #+0]
   \   000004E8   3A20               MOVS     R0,#+58
   \   000004EA   7070               STRB     R0,[R6, #+1]
   \   000004EC   2000               MOVS     R0,R4
   \   000004EE   B070               STRB     R0,[R6, #+2]
   5389                    Label(txt,0,33, 17 ,2,10,1,127,0); 
   \   000004F0   82B0               SUB      SP,SP,#+8
   \   000004F2   0090               STR      R0,[SP, #+0]
   \   000004F4   7F21               MOVS     R1,#+127
   \   000004F6   0120               MOVS     R0,#+1
   \   000004F8   03B4               PUSH     {R0,R1}
   \   000004FA   0A21               MOVS     R1,#+10
   \   000004FC   0220               MOVS     R0,#+2
   \   000004FE   03B4               PUSH     {R0,R1}
   \   00000500   1123               MOVS     R3,#+17
   \   00000502   2122               MOVS     R2,#+33
   \   00000504   2100               MOVS     R1,R4
   \   00000506   06A8               ADD      R0,SP,#+24
   \   00000508   ........           BL       Label
   \   0000050C   06B0               ADD      SP,SP,#+24
   5390                    txt[1]=0;txt[2]=0;
   \   0000050E   2000               MOVS     R0,R4
   \   00000510   7070               STRB     R0,[R6, #+1]
   \   00000512   B470               STRB     R4,[R6, #+2]
   5391                    char ind=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000514   0222               MOVS     R2,#+2
   \   00000516   6946               MOV      R1,SP
   \   00000518   3248               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 24
   \   0000051A   0078               LDRB     R0,[R0, #+0]
   \   0000051C   0723               MOVS     R3,#+7
   \   0000051E   5843               MULS     R0,R3,R0
   \   00000520   049B               LDR      R3,[SP, #+16]
   \   00000522   1818               ADDS     R0,R3,R0
   \   00000524   5730               ADDS     R0,R0,#+87
   \   00000526   0078               LDRB     R0,[R0, #+0]
   \   00000528   ........           BL       CharToStr
   5392                    txt[ind++]='.';
   \   0000052C   0100               MOVS     R1,R0
   \   0000052E   2E22               MOVS     R2,#+46
   \   00000530   7254               STRB     R2,[R6, R1]
   \   00000532   401C               ADDS     R0,R0,#+1
   \   00000534   0006               LSLS     R0,R0,#+24
   \   00000536   000E               LSRS     R0,R0,#+24
   5393                    ind+=CharToStr(ScreenLokal->Graph[ZoneGrapfNrClick].Reg, &txt[ind], 2); //(char Value, char *Vstring, char ill);
   \   00000538   0400               MOVS     R4,R0
   \   0000053A   0222               MOVS     R2,#+2
   \   0000053C   3118               ADDS     R1,R6,R0
   \   0000053E   2948               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 24
   \   00000540   0078               LDRB     R0,[R0, #+0]
   \   00000542   0723               MOVS     R3,#+7
   \   00000544   5843               MULS     R0,R3,R0
   \   00000546   049B               LDR      R3,[SP, #+16]
   \   00000548   1818               ADDS     R0,R3,R0
   \   0000054A   5830               ADDS     R0,R0,#+88
   \   0000054C   0078               LDRB     R0,[R0, #+0]
   \   0000054E   ........           BL       CharToStr
   \   00000552   2218               ADDS     R2,R4,R0
   \   00000554   1206               LSLS     R2,R2,#+24
   \   00000556   120E               LSRS     R2,R2,#+24
   5394                    Label(txt,0,42, 17 ,ind,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000558   82B0               SUB      SP,SP,#+8
   \   0000055A   0020               MOVS     R0,#+0
   \   0000055C   0090               STR      R0,[SP, #+0]
   \   0000055E   7F21               MOVS     R1,#+127
   \   00000560   0120               MOVS     R0,#+1
   \   00000562   03B4               PUSH     {R0,R1}
   \   00000564   0A21               MOVS     R1,#+10
   \   00000566   1000               MOVS     R0,R2
   \   00000568   03B4               PUSH     {R0,R1}
   \   0000056A   1123               MOVS     R3,#+17
   \   0000056C   2A22               MOVS     R2,#+42
   \   0000056E   0021               MOVS     R1,#+0
   \   00000570   06A8               ADD      R0,SP,#+24
   \   00000572   ........           BL       Label
   \   00000576   06B0               ADD      SP,SP,#+24
   5395                  
   5396                    Button(Speech[g_leng].Zmiana,8,3,44,13); 
   \   00000578   82B0               SUB      SP,SP,#+8
   \   0000057A   0D20               MOVS     R0,#+13
   \   0000057C   0090               STR      R0,[SP, #+0]
   \   0000057E   2C23               MOVS     R3,#+44
   \   00000580   0322               MOVS     R2,#+3
   \   00000582   0821               MOVS     R1,#+8
   \   00000584   1948               LDR      R0,??ZoneGraph_Paint_17+0x8  ;; 0x50a
   \   00000586   1A4C               LDR      R4,??ZoneGraph_Paint_17+0xC  ;; g_leng
   \   00000588   2468               LDR      R4,[R4, #+0]
   \   0000058A   4500               LSLS     R5,R0,#+1
   \   0000058C   6C43               MULS     R4,R5,R4
   \   0000058E   194D               LDR      R5,??ZoneGraph_Paint_17+0x10  ;; Speech
   \   00000590   2C19               ADDS     R4,R5,R4
   \   00000592   2018               ADDS     R0,R4,R0
   \   00000594   ........           BL       Button
   \   00000598   02B0               ADD      SP,SP,#+8
   5397             
   5398                  }
   5399                  
   5400                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphScena) 
   \                     ??ZoneGraph_Paint_20:
   \   0000059A   1248               LDR      R0,??ZoneGraph_Paint_17  ;; TextToChangeLength + 24
   \   0000059C   0078               LDRB     R0,[R0, #+0]
   \   0000059E   0721               MOVS     R1,#+7
   \   000005A0   4843               MULS     R0,R1,R0
   \   000005A2   0499               LDR      R1,[SP, #+16]
   \   000005A4   0818               ADDS     R0,R1,R0
   \   000005A6   5330               ADDS     R0,R0,#+83
   \   000005A8   0078               LDRB     R0,[R0, #+0]
   \   000005AA   0928               CMP      R0,#+9
   \   000005AC   16D1               BNE      ??ZoneGraph_Paint_25
   5401                  {
   5402                    Label(Speech[g_leng].NumerSceny,0,2, 12 ,15,10,1,127,0); 
   \   000005AE   82B0               SUB      SP,SP,#+8
   \   000005B0   0020               MOVS     R0,#+0
   \   000005B2   0090               STR      R0,[SP, #+0]
   \   000005B4   7F21               MOVS     R1,#+127
   \   000005B6   0120               MOVS     R0,#+1
   \   000005B8   03B4               PUSH     {R0,R1}
   \   000005BA   0A21               MOVS     R1,#+10
   \   000005BC   0F20               MOVS     R0,#+15
   \   000005BE   03B4               PUSH     {R0,R1}
   \   000005C0   0C23               MOVS     R3,#+12
   \   000005C2   0222               MOVS     R2,#+2
   \   000005C4   0021               MOVS     R1,#+0
   \   000005C6   0C48               LDR      R0,??ZoneGraph_Paint_17+0x14  ;; 0x4fb
   \   000005C8   094C               LDR      R4,??ZoneGraph_Paint_17+0xC  ;; g_leng
   \   000005CA   2468               LDR      R4,[R4, #+0]
   \   000005CC   0B4D               LDR      R5,??ZoneGraph_Paint_17+0x18  ;; 0xa14
   \   000005CE   6C43               MULS     R4,R5,R4
   \   000005D0   084D               LDR      R5,??ZoneGraph_Paint_17+0x10  ;; Speech
   \   000005D2   2C19               ADDS     R4,R5,R4
   \   000005D4   2018               ADDS     R0,R4,R0
   \   000005D6   ........           BL       Label
   \   000005DA   06B0               ADD      SP,SP,#+24
   5403                  }
   5404                  
   5405                  
   5406                }//________________________________________________________________________
   \                     ??ZoneGraph_Paint_25:
   \   000005DC   05B0               ADD      SP,SP,#+20
   \   000005DE   F0BC               POP      {R4-R7}
   \   000005E0   01BC               POP      {R0}
   \   000005E2   0047               BX       R0               ;; return
   \                     ??ZoneGraph_Paint_17:
   \   000005E4   ........           DC32     TextToChangeLength + 24
   \   000005E8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000005EC   0A050000           DC32     0x50a
   \   000005F0   ........           DC32     g_leng
   \   000005F4   ........           DC32     Speech
   \   000005F8   FB040000           DC32     0x4fb
   \   000005FC   140A0000           DC32     0xa14
   5407          
   5408              
   5409          
   5410          

   \                                 In section Debug.txt, align 4, keep-with-next
   5411           void ZoneGraph_Event(_Screen* ScreenLokal)
   5412                {
   \                     ZoneGraph_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   6846               MOV      R0,SP
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0170               STRB     R1,[R0, #+0]
   5413                     char ButonClickNr=0;
   5414                  //zdarzenie typu down "X"
   5415                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   0000000A   A148               LDR      R0,??ZoneGraph_Event_0  ;; X_down
   \   0000000C   405E               LDRSH    R0,[R0, R1]
   \   0000000E   2F28               CMP      R0,#+47
   \   00000010   2DDB               BLT      ??ZoneGraph_Event_1
   \   00000012   3F28               CMP      R0,#+63
   \   00000014   2BDA               BGE      ??ZoneGraph_Event_1
   \   00000016   9F48               LDR      R0,??ZoneGraph_Event_0+0x4  ;; Y_down
   \   00000018   405E               LDRSH    R0,[R0, R1]
   \   0000001A   7128               CMP      R0,#+113
   \   0000001C   27DB               BLT      ??ZoneGraph_Event_1
   \   0000001E   7F28               CMP      R0,#+127
   \   00000020   25DA               BGE      ??ZoneGraph_Event_1
   5416                  {
   5417                    //MenuPaint();
   5418                    H_line(49,114,10,0);
   \   00000022   0B00               MOVS     R3,R1
   \   00000024   0A22               MOVS     R2,#+10
   \   00000026   7221               MOVS     R1,#+114
   \   00000028   3120               MOVS     R0,#+49
   \   0000002A   ........           BL       H_line
   5419                    H_line(49,123,10,0); 
   \   0000002E   0023               MOVS     R3,#+0
   \   00000030   0A22               MOVS     R2,#+10
   \   00000032   7B21               MOVS     R1,#+123
   \   00000034   3120               MOVS     R0,#+49
   \   00000036   ........           BL       H_line
   5420                    V_line(49,114,10,0); 
   \   0000003A   0023               MOVS     R3,#+0
   \   0000003C   0A22               MOVS     R2,#+10
   \   0000003E   7221               MOVS     R1,#+114
   \   00000040   3120               MOVS     R0,#+49
   \   00000042   ........           BL       V_line
   5421                    V_line(58,114,10,0); 
   \   00000046   0023               MOVS     R3,#+0
   \   00000048   0A22               MOVS     R2,#+10
   \   0000004A   7221               MOVS     R1,#+114
   \   0000004C   3A20               MOVS     R0,#+58
   \   0000004E   ........           BL       V_line
   5422                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \   00000052   9148               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   00000054   0078               LDRB     R0,[R0, #+0]
   \   00000056   0028               CMP      R0,#+0
   \   00000058   09D1               BNE      ??ZoneGraph_Event_1
   \   0000005A   9048               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   0000005C   0021               MOVS     R1,#+0
   \   0000005E   0160               STR      R1,[R0, #+0]
   \   00000060   8F4A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   00000062   9048               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   00000064   03C8               LDM      R0!,{R0,R1}
   \   00000066   0023               MOVS     R3,#+0
   \   00000068   0830               ADDS     R0,R0,#+8
   \   0000006A   5941               ADCS     R1,R1,R3
   \   0000006C   03C2               STM      R2!,{R0,R1}
   \                     ??ZoneGraph_Event_1:
   \   0000006E   8E48               LDR      R0,??ZoneGraph_Event_0+0x18  ;; X_up
   \   00000070   0021               MOVS     R1,#+0
   \   00000072   405E               LDRSH    R0,[R0, R1]
   \   00000074   2F28               CMP      R0,#+47
   \   00000076   1DDB               BLT      ??ZoneGraph_Event_2
   \   00000078   3F28               CMP      R0,#+63
   \   0000007A   1BDA               BGE      ??ZoneGraph_Event_2
   \   0000007C   8B48               LDR      R0,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   0000007E   405E               LDRSH    R0,[R0, R1]
   \   00000080   7128               CMP      R0,#+113
   \   00000082   17DB               BLT      ??ZoneGraph_Event_2
   \   00000084   7F28               CMP      R0,#+127
   \   00000086   15DA               BGE      ??ZoneGraph_Event_2
   5423                    
   5424                  }
   5425            
   5426                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   5427                  {
   5428                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe063]: shift count is too large
   \   00000088   8348               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   0000008A   0078               LDRB     R0,[R0, #+0]
   \   0000008C   0028               CMP      R0,#+0
   \   0000008E   08D1               BNE      ??ZoneGraph_Event_3
   \   00000090   8248               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   00000092   0160               STR      R1,[R0, #+0]
   \   00000094   824A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   00000096   8348               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   00000098   03C8               LDM      R0!,{R0,R1}
   \   0000009A   0023               MOVS     R3,#+0
   \   0000009C   0830               ADDS     R0,R0,#+8
   \   0000009E   5941               ADCS     R1,R1,R3
   \   000000A0   03C2               STM      R2!,{R0,R1}
   5429                      MenuLevel=(MenuLevel/10);
   \                     ??ZoneGraph_Event_3:
   \   000000A2   834F               LDR      R7,??ZoneGraph_Event_0+0x20  ;; TextToChangeLength
   \   000000A4   B86C               LDR      R0,[R7, #+72]
   \   000000A6   0A21               MOVS     R1,#+10
   \   000000A8   ........           BL       __aeabi_idivmod
   \   000000AC   B864               STR      R0,[R7, #+72]
   5430                      MenuPaint();
   \   000000AE   ........           BL       MenuPaint
   \   000000B2   ACE1               B        ??ZoneGraph_Event_4
   5431                  }  
   5432                  else
   5433                  {
   5434          
   5435                  
   5436                  //wybór grafiki
   5437                  char idx=0;
   \                     ??ZoneGraph_Event_2:
   \   000000B4   0C00               MOVS     R4,R1
   5438                  char click=0;
   \   000000B6   6846               MOV      R0,SP
   \   000000B8   4170               STRB     R1,[R0, #+1]
   \   000000BA   0325               MOVS     R5,#+3
   \   000000BC   3CE0               B        ??ZoneGraph_Event_5
   5439          
   5440                  for (int j=(MaxRowGr-1); j>=0; j--)
   5441                  {
   5442                    for (int i=0; i<MaxColGr; i++)
   \                     ??ZoneGraph_Event_6:
   \   000000BE   7A48               LDR      R0,??ZoneGraph_Event_0+0x18  ;; X_up
   \   000000C0   0021               MOVS     R1,#+0
   \   000000C2   405E               LDRSH    R0,[R0, R1]
   \   000000C4   1421               MOVS     R1,#+20
   \   000000C6   7143               MULS     R1,R6,R1
   \   000000C8   0A00               MOVS     R2,R1
   \   000000CA   521C               ADDS     R2,R2,#+1
   \   000000CC   8242               CMP      R2,R0
   \   000000CE   2CDA               BGE      ??ZoneGraph_Event_7
   \   000000D0   1531               ADDS     R1,R1,#+21
   \   000000D2   8842               CMP      R0,R1
   \   000000D4   29DA               BGE      ??ZoneGraph_Event_7
   \   000000D6   7548               LDR      R0,??ZoneGraph_Event_0+0x1C  ;; Y_up
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   405E               LDRSH    R0,[R0, R1]
   \   000000DC   1421               MOVS     R1,#+20
   \   000000DE   6943               MULS     R1,R5,R1
   \   000000E0   0A00               MOVS     R2,R1
   \   000000E2   1B32               ADDS     R2,R2,#+27
   \   000000E4   8242               CMP      R2,R0
   \   000000E6   20DA               BGE      ??ZoneGraph_Event_7
   \   000000E8   3031               ADDS     R1,R1,#+48
   \   000000EA   8842               CMP      R0,R1
   \   000000EC   1DDA               BGE      ??ZoneGraph_Event_7
   5443                    {
   5444                        
   5445                        if ((X_up>1+i*20) && (X_up<1+(i+1)*20) && (Y_up>Y_offset+j*20) && (Y_up<Y_offset+1+(j+1)*20))                    //"X"
   5446                        {
   5447          
   5448                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe063]: shift count is too large
   \   000000EE   6A48               LDR      R0,??ZoneGraph_Event_0+0x8  ;; 0x13d7e9
   \   000000F0   0078               LDRB     R0,[R0, #+0]
   \   000000F2   0028               CMP      R0,#+0
   \   000000F4   09D1               BNE      ??ZoneGraph_Event_8
   \   000000F6   6948               LDR      R0,??ZoneGraph_Event_0+0xC  ;; 0xfffff430
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   0160               STR      R1,[R0, #+0]
   \   000000FC   684A               LDR      R2,??ZoneGraph_Event_0+0x10  ;; ButtonBipCounter
   \   000000FE   6948               LDR      R0,??ZoneGraph_Event_0+0x14  ;; g_counter
   \   00000100   03C8               LDM      R0!,{R0,R1}
   \   00000102   0023               MOVS     R3,#+0
   \   00000104   0830               ADDS     R0,R0,#+8
   \   00000106   5941               ADCS     R1,R1,R3
   \   00000108   03C2               STM      R2!,{R0,R1}
   5449          
   5450                          ScreenLokal->Graph[ZoneGrapfNrClick].Type=idx;
                                                                          ^
Warning[Pe188]: enumerated type mixed with another type
   \                     ??ZoneGraph_Event_8:
   \   0000010A   694F               LDR      R7,??ZoneGraph_Event_0+0x20  ;; TextToChangeLength
   \   0000010C   387E               LDRB     R0,[R7, #+24]
   \   0000010E   0721               MOVS     R1,#+7
   \   00000110   4843               MULS     R0,R1,R0
   \   00000112   0299               LDR      R1,[SP, #+8]
   \   00000114   0818               ADDS     R0,R1,R0
   \   00000116   5330               ADDS     R0,R0,#+83
   \   00000118   2100               MOVS     R1,R4
   \   0000011A   0170               STRB     R1,[R0, #+0]
   5451                          click=1;
   \   0000011C   0120               MOVS     R0,#+1
   \   0000011E   6946               MOV      R1,SP
   \   00000120   0200               MOVS     R2,R0
   \   00000122   4A70               STRB     R2,[R1, #+1]
   5452                          ProgramChange=1;
   \   00000124   3872               STRB     R0,[R7, #+8]
   5453                          MenuPaint();
   \   00000126   ........           BL       MenuPaint
   5454                         
   5455                        }
   5456                        idx++;
   \                     ??ZoneGraph_Event_7:
   \   0000012A   641C               ADDS     R4,R4,#+1
   \   0000012C   2406               LSLS     R4,R4,#+24
   \   0000012E   240E               LSRS     R4,R4,#+24
   5457                      
   5458                    }
   \   00000130   761C               ADDS     R6,R6,#+1
   \                     ??ZoneGraph_Event_9:
   \   00000132   032E               CMP      R6,#+3
   \   00000134   C3DB               BLT      ??ZoneGraph_Event_6
   \   00000136   6D1E               SUBS     R5,R5,#+1
   \                     ??ZoneGraph_Event_5:
   \   00000138   002D               CMP      R5,#+0
   \   0000013A   01D4               BMI      ??ZoneGraph_Event_10
   \   0000013C   0026               MOVS     R6,#+0
   \   0000013E   F8E7               B        ??ZoneGraph_Event_9
   5459                    
   5460                  }
   5461                  
   5462          
   5463            
   5464               
   5465                  if (click)
   \                     ??ZoneGraph_Event_10:
   \   00000140   5B4F               LDR      R7,??ZoneGraph_Event_0+0x20  ;; TextToChangeLength
   \   00000142   387E               LDRB     R0,[R7, #+24]
   \   00000144   0721               MOVS     R1,#+7
   \   00000146   4843               MULS     R0,R1,R0
   \   00000148   0299               LDR      R1,[SP, #+8]
   \   0000014A   0818               ADDS     R0,R1,R0
   \   0000014C   6946               MOV      R1,SP
   \   0000014E   4978               LDRB     R1,[R1, #+1]
   \   00000150   0029               CMP      R1,#+0
   \   00000152   09D0               BEQ      ??ZoneGraph_Event_11
   5466                  {
   5467          
   5468                  
   5469                  if ((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText) )
   \   00000154   5330               ADDS     R0,R0,#+83
   \   00000156   0078               LDRB     R0,[R0, #+0]
   \   00000158   0828               CMP      R0,#+8
   \   0000015A   00D0               BEQ      .+4
   \   0000015C   57E1               B        ??ZoneGraph_Event_4
   5470                  {
   5471                    ProgramChange=1;
   \   0000015E   0120               MOVS     R0,#+1
   \   00000160   3872               STRB     R0,[R7, #+8]
   5472          
   5473                    MenuPaint(); 
   \   00000162   ........           BL       MenuPaint
   \   00000166   52E1               B        ??ZoneGraph_Event_4
   5474                  }
   5475                  
   5476                  }
   5477                  else
   5478                  {
   5479                  
   5480                 
   5481           
   5482                  //je¿eli On / Off
   5483                  if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphOnOff) 
   \                     ??ZoneGraph_Event_11:
   \   00000168   5330               ADDS     R0,R0,#+83
   \   0000016A   0078               LDRB     R0,[R0, #+0]
   \   0000016C   0B28               CMP      R0,#+11
   \   0000016E   00D0               BEQ      .+4
   \   00000170   A8E0               B        ??ZoneGraph_Event_12
   5484                  {
   5485                    char txt[2];
   5486                    char Repaint=0;
   \   00000172   0026               MOVS     R6,#+0
   \   00000174   01AC               ADD      R4,SP,#+4
   \   00000176   3C20               MOVS     R0,#+60
   \   00000178   2070               STRB     R0,[R4, #+0]
   5487                    txt[0]='<';txt[1]=0;
   \   0000017A   3000               MOVS     R0,R6
   \   0000017C   6070               STRB     R0,[R4, #+1]
   5488                    if (Button(txt,3,15,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Nr>0) ScreenLokal->Graph[ZoneGrapfNrClick].Nr--; else ScreenLokal->Graph[ZoneGrapfNrClick].Nr=NumberNeurons-1; Repaint=1;}  
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   0B20               MOVS     R0,#+11
   \   00000182   0090               STR      R0,[SP, #+0]
   \   00000184   0F23               MOVS     R3,#+15
   \   00000186   1A00               MOVS     R2,R3
   \   00000188   0321               MOVS     R1,#+3
   \   0000018A   03A8               ADD      R0,SP,#+12
   \   0000018C   ........           BL       Button
   \   00000190   02B0               ADD      SP,SP,#+8
   \   00000192   0128               CMP      R0,#+1
   \   00000194   13D1               BNE      ??ZoneGraph_Event_13
   \   00000196   387E               LDRB     R0,[R7, #+24]
   \   00000198   0721               MOVS     R1,#+7
   \   0000019A   4843               MULS     R0,R1,R0
   \   0000019C   0299               LDR      R1,[SP, #+8]
   \   0000019E   0818               ADDS     R0,R1,R0
   \   000001A0   5721               MOVS     R1,#+87
   \   000001A2   415C               LDRB     R1,[R0, R1]
   \   000001A4   0029               CMP      R1,#+0
   \   000001A6   06D0               BEQ      ??ZoneGraph_Event_14
   \   000001A8   5721               MOVS     R1,#+87
   \   000001AA   0200               MOVS     R2,R0
   \   000001AC   5732               ADDS     R2,R2,#+87
   \   000001AE   1278               LDRB     R2,[R2, #+0]
   \   000001B0   521E               SUBS     R2,R2,#+1
   \   000001B2   4254               STRB     R2,[R0, R1]
   \   000001B4   02E0               B        ??ZoneGraph_Event_15
   \                     ??ZoneGraph_Event_14:
   \   000001B6   5730               ADDS     R0,R0,#+87
   \   000001B8   2221               MOVS     R1,#+34
   \   000001BA   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_15:
   \   000001BC   0126               MOVS     R6,#+1
   5489                    txt[0]='>';
   \                     ??ZoneGraph_Event_13:
   \   000001BE   3E25               MOVS     R5,#+62
   \   000001C0   2570               STRB     R5,[R4, #+0]
   5490                    if (Button(txt,45,15,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Nr+1<NumberNeurons) ScreenLokal->Graph[ZoneGrapfNrClick].Nr++; else ScreenLokal->Graph[ZoneGrapfNrClick].Nr=0; Repaint=1;} 
   \   000001C2   82B0               SUB      SP,SP,#+8
   \   000001C4   0B20               MOVS     R0,#+11
   \   000001C6   0090               STR      R0,[SP, #+0]
   \   000001C8   0F23               MOVS     R3,#+15
   \   000001CA   1A00               MOVS     R2,R3
   \   000001CC   2D21               MOVS     R1,#+45
   \   000001CE   03A8               ADD      R0,SP,#+12
   \   000001D0   ........           BL       Button
   \   000001D4   02B0               ADD      SP,SP,#+8
   \   000001D6   0128               CMP      R0,#+1
   \   000001D8   16D1               BNE      ??ZoneGraph_Event_16
   \   000001DA   387E               LDRB     R0,[R7, #+24]
   \   000001DC   0721               MOVS     R1,#+7
   \   000001DE   4843               MULS     R0,R1,R0
   \   000001E0   0299               LDR      R1,[SP, #+8]
   \   000001E2   0818               ADDS     R0,R1,R0
   \   000001E4   5721               MOVS     R1,#+87
   \   000001E6   415C               LDRB     R1,[R0, R1]
   \   000001E8   491C               ADDS     R1,R1,#+1
   \   000001EA   0904               LSLS     R1,R1,#+16
   \   000001EC   090C               LSRS     R1,R1,#+16
   \   000001EE   2329               CMP      R1,#+35
   \   000001F0   06D2               BCS      ??ZoneGraph_Event_17
   \   000001F2   5721               MOVS     R1,#+87
   \   000001F4   0200               MOVS     R2,R0
   \   000001F6   5732               ADDS     R2,R2,#+87
   \   000001F8   1278               LDRB     R2,[R2, #+0]
   \   000001FA   521C               ADDS     R2,R2,#+1
   \   000001FC   4254               STRB     R2,[R0, R1]
   \   000001FE   02E0               B        ??ZoneGraph_Event_18
   \                     ??ZoneGraph_Event_17:
   \   00000200   5730               ADDS     R0,R0,#+87
   \   00000202   0021               MOVS     R1,#+0
   \   00000204   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_18:
   \   00000206   0126               MOVS     R6,#+1
   5491                   
   5492                    txt[0]='<';txt[1]=0;
   \                     ??ZoneGraph_Event_16:
   \   00000208   3C20               MOVS     R0,#+60
   \   0000020A   2070               STRB     R0,[R4, #+0]
   \   0000020C   0020               MOVS     R0,#+0
   \   0000020E   6070               STRB     R0,[R4, #+1]
   5493                    if (Button(txt,3,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port>0) ScreenLokal->Graph[ZoneGrapfNrClick].Port--; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=NumberNeuronsPort-1; Repaint=1;}  
   \   00000210   82B0               SUB      SP,SP,#+8
   \   00000212   0B20               MOVS     R0,#+11
   \   00000214   0090               STR      R0,[SP, #+0]
   \   00000216   0F23               MOVS     R3,#+15
   \   00000218   0322               MOVS     R2,#+3
   \   0000021A   1100               MOVS     R1,R2
   \   0000021C   03A8               ADD      R0,SP,#+12
   \   0000021E   ........           BL       Button
   \   00000222   02B0               ADD      SP,SP,#+8
   \   00000224   0128               CMP      R0,#+1
   \   00000226   13D1               BNE      ??ZoneGraph_Event_19
   \   00000228   387E               LDRB     R0,[R7, #+24]
   \   0000022A   0721               MOVS     R1,#+7
   \   0000022C   4843               MULS     R0,R1,R0
   \   0000022E   0299               LDR      R1,[SP, #+8]
   \   00000230   0818               ADDS     R0,R1,R0
   \   00000232   5821               MOVS     R1,#+88
   \   00000234   415C               LDRB     R1,[R0, R1]
   \   00000236   0029               CMP      R1,#+0
   \   00000238   06D0               BEQ      ??ZoneGraph_Event_20
   \   0000023A   5821               MOVS     R1,#+88
   \   0000023C   0200               MOVS     R2,R0
   \   0000023E   5832               ADDS     R2,R2,#+88
   \   00000240   1278               LDRB     R2,[R2, #+0]
   \   00000242   521E               SUBS     R2,R2,#+1
   \   00000244   4254               STRB     R2,[R0, R1]
   \   00000246   02E0               B        ??ZoneGraph_Event_21
   \                     ??ZoneGraph_Event_20:
   \   00000248   5830               ADDS     R0,R0,#+88
   \   0000024A   0F21               MOVS     R1,#+15
   \   0000024C   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_21:
   \   0000024E   0126               MOVS     R6,#+1
   5494                    txt[0]='>';
   \                     ??ZoneGraph_Event_19:
   \   00000250   2570               STRB     R5,[R4, #+0]
   5495                    if (Button(txt,45,3,15,11)==1) { if(ScreenLokal->Graph[ZoneGrapfNrClick].Port+1<NumberNeuronsPort) ScreenLokal->Graph[ZoneGrapfNrClick].Port++; else ScreenLokal->Graph[ZoneGrapfNrClick].Port=0; Repaint=1;} 
   \   00000252   82B0               SUB      SP,SP,#+8
   \   00000254   0B20               MOVS     R0,#+11
   \   00000256   0090               STR      R0,[SP, #+0]
   \   00000258   0F23               MOVS     R3,#+15
   \   0000025A   0322               MOVS     R2,#+3
   \   0000025C   2D21               MOVS     R1,#+45
   \   0000025E   03A8               ADD      R0,SP,#+12
   \   00000260   ........           BL       Button
   \   00000264   02B0               ADD      SP,SP,#+8
   \   00000266   0128               CMP      R0,#+1
   \   00000268   28D1               BNE      ??ZoneGraph_Event_22
   \   0000026A   387E               LDRB     R0,[R7, #+24]
   \   0000026C   0721               MOVS     R1,#+7
   \   0000026E   4843               MULS     R0,R1,R0
   \   00000270   0299               LDR      R1,[SP, #+8]
   \   00000272   0818               ADDS     R0,R1,R0
   \   00000274   5821               MOVS     R1,#+88
   \   00000276   415C               LDRB     R1,[R0, R1]
   \   00000278   491C               ADDS     R1,R1,#+1
   \   0000027A   0904               LSLS     R1,R1,#+16
   \   0000027C   090C               LSRS     R1,R1,#+16
   \   0000027E   1029               CMP      R1,#+16
   \   00000280   18D2               BCS      ??ZoneGraph_Event_23
   \   00000282   5821               MOVS     R1,#+88
   \   00000284   0200               MOVS     R2,R0
   \   00000286   5832               ADDS     R2,R2,#+88
   \   00000288   1278               LDRB     R2,[R2, #+0]
   \   0000028A   521C               ADDS     R2,R2,#+1
   \   0000028C   4254               STRB     R2,[R0, R1]
   \   0000028E   14E0               B        ??ZoneGraph_Event_24
   \                     ??ZoneGraph_Event_0:
   \   00000290   ........           DC32     X_down
   \   00000294   ........           DC32     Y_down
   \   00000298   E9D71300           DC32     0x13d7e9
   \   0000029C   30F4FFFF           DC32     0xfffff430
   \   000002A0   ........           DC32     ButtonBipCounter
   \   000002A4   ........           DC32     g_counter
   \   000002A8   ........           DC32     X_up
   \   000002AC   ........           DC32     Y_up
   \   000002B0   ........           DC32     TextToChangeLength
   \                     ??ZoneGraph_Event_23:
   \   000002B4   5830               ADDS     R0,R0,#+88
   \   000002B6   0021               MOVS     R1,#+0
   \   000002B8   0170               STRB     R1,[R0, #+0]
   \                     ??ZoneGraph_Event_24:
   \   000002BA   0126               MOVS     R6,#+1
   5496                      
   5497                    if (Repaint) MenuPaint(); 
   \                     ??ZoneGraph_Event_22:
   \   000002BC   002E               CMP      R6,#+0
   \   000002BE   01D0               BEQ      ??ZoneGraph_Event_12
   \   000002C0   ........           BL       MenuPaint
   5498                  } 
   5499                     
   5500                     
   5501                    if (ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphWartosc) 
   \                     ??ZoneGraph_Event_12:
   \   000002C4   387E               LDRB     R0,[R7, #+24]
   \   000002C6   0721               MOVS     R1,#+7
   \   000002C8   4843               MULS     R0,R1,R0
   \   000002CA   0299               LDR      R1,[SP, #+8]
   \   000002CC   0818               ADDS     R0,R1,R0
   \   000002CE   5330               ADDS     R0,R0,#+83
   \   000002D0   0078               LDRB     R0,[R0, #+0]
   \   000002D2   0A28               CMP      R0,#+10
   \   000002D4   15D1               BNE      ??ZoneGraph_Event_25
   5502                    {
   5503                       if (Button(Speech[g_leng].Zmiana,8,3,44,13)==1) ButonClickNr=1;
   \   000002D6   82B0               SUB      SP,SP,#+8
   \   000002D8   0D20               MOVS     R0,#+13
   \   000002DA   0090               STR      R0,[SP, #+0]
   \   000002DC   2C23               MOVS     R3,#+44
   \   000002DE   0322               MOVS     R2,#+3
   \   000002E0   0821               MOVS     R1,#+8
   \   000002E2   4C48               LDR      R0,??ZoneGraph_Event_26  ;; 0x50a
   \   000002E4   4C4C               LDR      R4,??ZoneGraph_Event_26+0x4  ;; g_leng
   \   000002E6   2468               LDR      R4,[R4, #+0]
   \   000002E8   4500               LSLS     R5,R0,#+1
   \   000002EA   6C43               MULS     R4,R5,R4
   \   000002EC   4B4D               LDR      R5,??ZoneGraph_Event_26+0x8  ;; Speech
   \   000002EE   2C19               ADDS     R4,R5,R4
   \   000002F0   2018               ADDS     R0,R4,R0
   \   000002F2   ........           BL       Button
   \   000002F6   02B0               ADD      SP,SP,#+8
   \   000002F8   0128               CMP      R0,#+1
   \   000002FA   02D1               BNE      ??ZoneGraph_Event_25
   \   000002FC   6846               MOV      R0,SP
   \   000002FE   0121               MOVS     R1,#+1
   \   00000300   0170               STRB     R1,[R0, #+0]
   5504                    }
   5505                    
   5506                    if ((ScreenLokal->Graph[ZoneGrapfNrClick].Type==GraphText))
   \                     ??ZoneGraph_Event_25:
   \   00000302   387E               LDRB     R0,[R7, #+24]
   \   00000304   0721               MOVS     R1,#+7
   \   00000306   4843               MULS     R0,R1,R0
   \   00000308   0299               LDR      R1,[SP, #+8]
   \   0000030A   0818               ADDS     R0,R1,R0
   \   0000030C   5330               ADDS     R0,R0,#+83
   \   0000030E   0078               LDRB     R0,[R0, #+0]
   \   00000310   0828               CMP      R0,#+8
   \   00000312   4DD1               BNE      ??ZoneGraph_Event_27
   5507                    {
   5508                      if (Button("Text",2,15,25,11)==1) ButonClickNr=2;
   \   00000314   82B0               SUB      SP,SP,#+8
   \   00000316   0B20               MOVS     R0,#+11
   \   00000318   0090               STR      R0,[SP, #+0]
   \   0000031A   1923               MOVS     R3,#+25
   \   0000031C   0F22               MOVS     R2,#+15
   \   0000031E   0221               MOVS     R1,#+2
   \   00000320   3F48               LDR      R0,??ZoneGraph_Event_26+0xC  ;; `?<Constant {0, 0}>` + 100
   \   00000322   ........           BL       Button
   \   00000326   02B0               ADD      SP,SP,#+8
   \   00000328   0128               CMP      R0,#+1
   \   0000032A   02D1               BNE      ??ZoneGraph_Event_28
   \   0000032C   6846               MOV      R0,SP
   \   0000032E   0221               MOVS     R1,#+2
   \   00000330   0170               STRB     R1,[R0, #+0]
   5509                      if (ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff) 
   \                     ??ZoneGraph_Event_28:
   \   00000332   387E               LDRB     R0,[R7, #+24]
   \   00000334   0721               MOVS     R1,#+7
   \   00000336   4843               MULS     R0,R1,R0
   \   00000338   0299               LDR      R1,[SP, #+8]
   \   0000033A   0818               ADDS     R0,R1,R0
   \   0000033C   5930               ADDS     R0,R0,#+89
   \   0000033E   0078               LDRB     R0,[R0, #+0]
   \   00000340   C007               LSLS     R0,R0,#+31
   \   00000342   82B0               SUB      SP,SP,#+8
   \   00000344   1AD5               BPL      ??ZoneGraph_Event_29
   5510                      {
   5511                        if (Button("Off",40,3,21,11)==1) {ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff=0;
   \   00000346   0B20               MOVS     R0,#+11
   \   00000348   0090               STR      R0,[SP, #+0]
   \   0000034A   1523               MOVS     R3,#+21
   \   0000034C   0322               MOVS     R2,#+3
   \   0000034E   2821               MOVS     R1,#+40
   \   00000350   34A0               ADR      R0,??ZoneGraph_Event_26+0x10  ;; "Off"
   \   00000352   ........           BL       Button
   \   00000356   02B0               ADD      SP,SP,#+8
   \   00000358   0128               CMP      R0,#+1
   \   0000035A   29D1               BNE      ??ZoneGraph_Event_27
   \   0000035C   387E               LDRB     R0,[R7, #+24]
   \   0000035E   0721               MOVS     R1,#+7
   \   00000360   4843               MULS     R0,R1,R0
   \   00000362   0299               LDR      R1,[SP, #+8]
   \   00000364   0818               ADDS     R0,R1,R0
   \   00000366   5921               MOVS     R1,#+89
   \   00000368   0200               MOVS     R2,R0
   \   0000036A   5932               ADDS     R2,R2,#+89
   \   0000036C   1278               LDRB     R2,[R2, #+0]
   \   0000036E   FE23               MOVS     R3,#+254
   \   00000370   1340               ANDS     R3,R3,R2
   \   00000372   4354               STRB     R3,[R0, R1]
   5512                        ButonClickNr=3;}
   \   00000374   6846               MOV      R0,SP
   \   00000376   0321               MOVS     R1,#+3
   \   00000378   0170               STRB     R1,[R0, #+0]
   \   0000037A   19E0               B        ??ZoneGraph_Event_27
   5513                      }else{
   5514                        if (Button("On",40,3,21,11)==1) {ScreenLokal->Graph[ZoneGrapfNrClick].PlusOnOff=1;
   \                     ??ZoneGraph_Event_29:
   \   0000037C   0B20               MOVS     R0,#+11
   \   0000037E   0090               STR      R0,[SP, #+0]
   \   00000380   1523               MOVS     R3,#+21
   \   00000382   0322               MOVS     R2,#+3
   \   00000384   2821               MOVS     R1,#+40
   \   00000386   28A0               ADR      R0,??ZoneGraph_Event_26+0x14  ;; 0x4F, 0x6E, 0x00, 0x00
   \   00000388   ........           BL       Button
   \   0000038C   02B0               ADD      SP,SP,#+8
   \   0000038E   0128               CMP      R0,#+1
   \   00000390   0ED1               BNE      ??ZoneGraph_Event_27
   \   00000392   387E               LDRB     R0,[R7, #+24]
   \   00000394   0721               MOVS     R1,#+7
   \   00000396   4843               MULS     R0,R1,R0
   \   00000398   0299               LDR      R1,[SP, #+8]
   \   0000039A   0818               ADDS     R0,R1,R0
   \   0000039C   5921               MOVS     R1,#+89
   \   0000039E   0200               MOVS     R2,R0
   \   000003A0   5932               ADDS     R2,R2,#+89
   \   000003A2   1278               LDRB     R2,[R2, #+0]
   \   000003A4   0123               MOVS     R3,#+1
   \   000003A6   1343               ORRS     R3,R3,R2
   \   000003A8   4354               STRB     R3,[R0, R1]
   5515                        ButonClickNr=3;}
   \   000003AA   6846               MOV      R0,SP
   \   000003AC   0321               MOVS     R1,#+3
   \   000003AE   0170               STRB     R1,[R0, #+0]
   5516                      }
   5517                    
   5518                       
   5519                    }    
   5520                    
   5521                     if (ButonClickNr==1) 
   \                     ??ZoneGraph_Event_27:
   \   000003B0   6846               MOV      R0,SP
   \   000003B2   0078               LDRB     R0,[R0, #+0]
   \   000003B4   0128               CMP      R0,#+1
   \   000003B6   0ED1               BNE      ??ZoneGraph_Event_30
   5522                        {
   5523                          ProgramChange=1;
   \   000003B8   3872               STRB     R0,[R7, #+8]
   5524                          AnalogToChange=(_Analog*)&ScreenLokal->Graph[ZoneGrapfNrClick];
   \   000003BA   387E               LDRB     R0,[R7, #+24]
   \   000003BC   0721               MOVS     R1,#+7
   \   000003BE   4843               MULS     R0,R1,R0
   \   000003C0   0299               LDR      R1,[SP, #+8]
   \   000003C2   0818               ADDS     R0,R1,R0
   \   000003C4   5330               ADDS     R0,R0,#+83
   \   000003C6   3866               STR      R0,[R7, #+96]
   5525                          MenuLevel=(MenuLevel*10+2); 
   \   000003C8   B86C               LDR      R0,[R7, #+72]
   \   000003CA   0A21               MOVS     R1,#+10
   \   000003CC   4843               MULS     R0,R1,R0
   \   000003CE   801C               ADDS     R0,R0,#+2
   \   000003D0   B864               STR      R0,[R7, #+72]
   5526                          MenuPaint(); 
   \   000003D2   ........           BL       MenuPaint
   5527                    
   5528                        }
   5529                  
   5530                      if (ButonClickNr==2) 
   \                     ??ZoneGraph_Event_30:
   \   000003D6   6846               MOV      R0,SP
   \   000003D8   0078               LDRB     R0,[R0, #+0]
   \   000003DA   0228               CMP      R0,#+2
   \   000003DC   11D1               BNE      ??ZoneGraph_Event_31
   5531                      {
   5532                        ProgramChange=1;
   \   000003DE   0120               MOVS     R0,#+1
   \   000003E0   3872               STRB     R0,[R7, #+8]
   5533                      TextToChangeLength=3;//TextToChangeMaxPixSize
   \   000003E2   0320               MOVS     R0,#+3
   \   000003E4   3870               STRB     R0,[R7, #+0]
   5534                      TextToChange=ScreenLokal->Graph[ZoneGrapfNrClick].Text;
   \   000003E6   387E               LDRB     R0,[R7, #+24]
   \   000003E8   0721               MOVS     R1,#+7
   \   000003EA   4843               MULS     R0,R1,R0
   \   000003EC   0299               LDR      R1,[SP, #+8]
   \   000003EE   0818               ADDS     R0,R1,R0
   \   000003F0   5430               ADDS     R0,R0,#+84
   \   000003F2   3865               STR      R0,[R7, #+80]
   5535                      MenuLevel=(MenuLevel*10+1); 
   \   000003F4   B86C               LDR      R0,[R7, #+72]
   \   000003F6   0A21               MOVS     R1,#+10
   \   000003F8   4843               MULS     R0,R1,R0
   \   000003FA   401C               ADDS     R0,R0,#+1
   \   000003FC   B864               STR      R0,[R7, #+72]
   5536                      MenuPaint(); 
   \   000003FE   ........           BL       MenuPaint
   5537                      }
   5538                      if (ButonClickNr==3) 
   \                     ??ZoneGraph_Event_31:
   \   00000402   6846               MOV      R0,SP
   \   00000404   0078               LDRB     R0,[R0, #+0]
   \   00000406   0328               CMP      R0,#+3
   \   00000408   01D1               BNE      ??ZoneGraph_Event_4
   5539                      {
   5540                        MenuPaint(); 
   \   0000040A   ........           BL       MenuPaint
   5541                      }
   5542                     
   5543                  
   5544                  
   5545                  }
   5546                  
   5547                  }
   5548                }//________________________________________________________________________
   \                     ??ZoneGraph_Event_4:
   \   0000040E   FEBC               POP      {R1-R7}
   \   00000410   01BC               POP      {R0}
   \   00000412   0047               BX       R0               ;; return
   \                     ??ZoneGraph_Event_26:
   \   00000414   0A050000           DC32     0x50a
   \   00000418   ........           DC32     g_leng
   \   0000041C   ........           DC32     Speech
   \   00000420   ........           DC32     `?<Constant {0, 0}>` + 100
   \   00000424   4F666600           DC8      "Off"
   \   00000428   4F6E0000           DC8      0x4F, 0x6E, 0x00, 0x00

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0}>`:
   \   00000000   00000000           DC8 0, 0, 0, 0
   5549              
   5550          
   5551          
   5552          
   5553           
   5554           
   5555          #define MaxLetherOnScr    24 
   5556           
   5557           
   5558          char TextChangeCharNr=0;
   5559          char TextChangePoz=0;
   5560          
   5561          const char QWERTY[3][MaxLetherOnScr]={
   \                     QWERTY:
   \   00000004   414243444546       DC8 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81
   \              4748494A4B4C
   \              4D4E4F5051  
   \   00000015   525354555759       DC8 82, 83, 84, 85, 87, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104
   \              5A6162636465
   \              666768      
   \   00000024   696A6B6C6D6E       DC8 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
   \              6F7071727374
   \              75          
   \   00000031   77797A203031       DC8 119, 121, 122, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 45
   \              323334353637
   \              38392B2D    
   \   00000041   5F3C3E2E782F       DC8 95, 60, 62, 46, 120, 47, 127, 30, 31, 35, 36
   \              7F1E1F2324  
   \   0000004C   4F66662000         DC8 "Off "
   \   00000051   000000             DC8 0, 0, 0
   \   00000054   53636E2000         DC8 "Scn "
   \   00000059   000000             DC8 0, 0, 0
   \   0000005C   4F6E3F2000         DC8 "On? "
   \   00000061   000000             DC8 0, 0, 0
   \   00000064   5465787400         DC8 "Text"
   \   00000069   000000             DC8 0, 0, 0
   \   0000006C   56616C2000         DC8 "Val "
   \   00000071   000000             DC8 0, 0, 0
   \   00000074   2E2E2E2E2E2E       DC8 "...... "
   \              2000        
   \   0000007C   2B4F6E2F4F66       DC8 "+On/Off"
   \              6600        
   \   00000084   546578742000       DC8 "Text "
   \   0000008A   0000               DC8 0, 0
   \   0000008C   416E616C6F67       DC8 "Analog "
   \              2000        
   \   00000094   416E616C6F67       DC8 "Analog"
   \              00          
   \   0000009B   00                 DC8 0
   \   char const __data GraphTab[8][3][18]
   \                     GraphTab:
   \   0000009C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000B3   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 64, 192, 72, 208, 194, 36, 144
   \              000080C040C0
   \              48D0C22490  
   \   000000DB   908B101024C2       DC8 144, 139, 16, 16, 36, 194, 16, 8, 0, 7, 9, 14, 9, 76, 43, 15, 147
   \              10080007090E
   \              094C2B0F93  
   \   000000EC   222444202090       DC8 34, 36, 68, 32, 32, 144, 12, 35, 64, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0
   \              0C2340010000
   \              000000000100
   \              00          
   \   000000FF   000300000001       DC8 0, 3, 0, 0, 0, 1, 0, 0, 0, 252, 252, 252, 4, 252, 4, 252, 4, 252, 4
   \              000000FCFCFC
   \              04FC04FC04FC
   \              04          
   \   00000112   FC04FCFEFFFF       DC8 252, 4, 252, 254, 255, 255, 254, 252, 255, 255, 255, 0, 255, 0, 255
   \              FEFCFFFFFF00
   \              FF00FF      
   \   00000121   00FF00FF007F       DC8 0, 255, 0, 255, 0, 127, 159, 15, 15, 159, 127, 1, 1, 1, 1, 1, 1, 1
   \              9F0F0F9F7F01
   \              010101010101
   \   00000133   010101010101       DC8 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 240, 64, 128, 128, 28, 226, 193
   \              0101010000F0
   \              4080801CE2C1
   \   00000145   E171CDC3C141       DC8 225, 113, 205, 195, 193, 65, 32, 32, 32, 64, 128, 7, 8, 16, 16, 17
   \              202020408007
   \              08101011    
   \   00000155   0B0F0CC83C07       DC8 11, 15, 12, 200, 60, 7, 14, 18, 226, 4, 4, 8, 63, 0, 0, 0, 0, 0, 2
   \              0E12E2040408
   \              3F0000000000
   \              02          
   \   00000168   020302020202       DC8 2, 3, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 240, 240, 48, 48, 48, 48, 48
   \              010000000000
   \              00F0F0303030
   \              3030        
   \   0000017C   FFFFAA54A850       DC8 255, 255, 170, 84, 168, 80, 176, 240, 240, 0, 0, 255, 255, 0, 0, 0
   \              B0F0F00000FF
   \              FF000000    
   \   0000018C   0000070F1A35       DC8 0, 0, 7, 15, 26, 53, 106, 213, 170, 255, 255, 0, 0, 3, 3, 3, 3, 3
   \              6AD5AAFFFF00
   \              000303030303
   \   0000019E   030303030303       DC8 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 96, 224, 224, 184, 104, 168
   \              030303030300
   \              60E0E0B868A8
   \   000001B0   68A868A868A8       DC8 104, 168, 104, 168, 104, 168, 104, 136, 8, 8, 8, 248, 0, 1, 7, 63
   \              6888080808F8
   \              0001073F    
   \   000001C0   3E3926392639       DC8 62, 57, 38, 57, 38, 57, 38, 57, 38, 57, 38, 56, 32, 63, 0, 0, 0, 0
   \              263926392638
   \              203F00000000
   \   000001D2   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 128, 128, 0, 128
   \              000000000000
   \              000080008080
   \              0080        
   \   000001E6   00E0A0A0A020       DC8 0, 224, 160, 160, 160, 32, 32, 64, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              204080000000
   \              000000000000
   \   000001F8   000101011BFF       DC8 0, 1, 1, 1, 27, 255, 254, 0, 231, 60, 24, 255, 0, 0, 0, 0, 0, 0, 0
   \              FE00E73C18FF
   \              000000000000
   \              00          
   \   0000020B   000000000303       DC8 0, 0, 0, 0, 3, 3, 0, 3, 0, 0, 0, 128, 192, 192, 128, 128, 224, 128
   \              000300000080
   \              C0C08080E080
   \   0000021D   E080E0808080       DC8 224, 128, 224, 128, 128, 128, 128, 128, 128, 128, 0, 3, 7, 7, 3, 3
   \              808080800003
   \              07070303    
   \   0000022D   030303020202       DC8 3, 3, 3, 2, 2, 2, 14, 2, 14, 2, 14, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0E020E020E02
   \              010000000000
   \              00000000    
   \   00000243   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      

   \                                 In section .rodata, align 4
   \                     `?<Constant {129, 0}>`:
   \   00000000   81000000           DC8 129, 0, 0, 0
   \   00000004   546865726D20       DC8 "Therm set "
   \              7365742000  
   \   0000000F   00                 DC8 0
   \   00000010   416E616C6F2E       DC8 "Analo. "
   \              2000        
   \   struct <unnamed> const __data ScreenSetTab_0[11]
   \                     ScreenSetTab_0:
   \   00000018   1E6722160030       DC8 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0, 0, 22, 40, 42, 0
   \              16352A301635
   \              000016282A00
   \   0000002A   162800000000       DC8 22, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 75, 18
   \              000000000000
   \              000000000000
   \              174B12      
   \   0000003F   181732121817       DC8 24, 23, 50, 18, 24, 23, 8, 18, 24, 0, 0, 0, 0, 0, 102, 29, 11
   \              081218000000
   \              0000661D0B  
   \   00000050   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 64, 1, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              002C40010000
   \              00000000    
   \   00000066   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 105, 34, 21, 0, 0, 22, 57, 42, 0
   \              000000001E69
   \              221500001639
   \              2A00        
   \   0000007A   163900000000       DC8 22, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000090   00000000171D       DC8 0, 0, 0, 0, 23, 29, 18, 24, 23, 4, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              121817041218
   \              000000000000
   \              0000        
   \   000000A4   000000000065       DC8 0, 0, 0, 0, 0, 101, 29, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 64, 1
   \              1D0B00000000
   \              00000000003C
   \              4001        
   \   000000B8   00000000004A       DC8 0, 0, 0, 0, 0, 74, 64, 24, 30, 62, 35, 11, 0, 0, 0, 0, 30, 105, 34
   \              40181E3E230B
   \              000000001E69
   \              22          
   \   000000CB   15001A16312A       DC8 21, 0, 26, 22, 49, 42, 26, 22, 49, 0, 0, 22, 24, 42, 0, 22, 24, 0
   \              1A1631000016
   \              182A00161800
   \   000000DD   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 51, 18, 23, 23, 27
   \              000000000000
   \              000000173312
   \              17171B      
   \   000000F2   121717001218       DC8 18, 23, 23, 0, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 29, 11
   \              000000000000
   \              000000661D0B
   \   00000104   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 64, 23, 0, 0
   \              000000000000
   \              00000000004C
   \              40170000    
   \   0000011A   000000000000       DC8 0, 0, 0, 0, 0, 0, 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0
   \              1E6722160030
   \              16352A301635
   \              00          
   \   0000012D   181E1522181E       DC8 24, 30, 21, 34, 24, 30, 21, 0, 0, 30, 21, 34, 0, 30, 21, 0, 0, 0, 0
   \              1500001E1522
   \              001E15000000
   \              00          
   \   00000140   00000000174B       DC8 0, 0, 0, 0, 23, 75, 18, 24, 23, 50, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              121817321218
   \              000000000000
   \              0000        
   \   00000154   00661D090000       DC8 0, 102, 29, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   00000168   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 22, 53, 42
   \              000000000000
   \              000000000030
   \              16352A      
   \   0000017D   30163500181E       DC8 48, 22, 53, 0, 24, 30, 21, 34, 24, 30, 21, 0, 0, 30, 21, 34, 0, 30
   \              1522181E1500
   \              001E1522001E
   \   0000018F   150000000000       DC8 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 75, 18, 24, 23, 50, 18
   \              000000000000
   \              00174B121817
   \              3212        
   \   000001A3   182D67121800       DC8 24, 45, 103, 18, 24, 0, 0, 0, 0, 15, 115, 29, 11, 15, 104, 29, 11
   \              0000000F731D
   \              0B0F681D0B  
   \   000001B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001CB   00000000001E       DC8 0, 0, 0, 0, 0, 30, 103, 34, 22, 0, 48, 22, 53, 42, 48, 22, 53, 0
   \              672216003016
   \              352A30163500
   \   000001DD   181415161814       DC8 24, 20, 21, 22, 24, 20, 21, 44, 24, 20, 21, 0, 0, 20, 21, 22, 0, 20
   \              152C18141500
   \              001415160014
   \   000001EF   152C00141517       DC8 21, 44, 0, 20, 21, 23, 75, 18, 24, 23, 50, 18, 24
   \              4B1218173212
   \              18          
   \   000001FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 29, 11, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000661D0B
   \              000000000000
   \              0000        
   \   00000210   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000227   00004E16232A       DC8 0, 0, 78, 22, 35, 42, 78, 22, 35, 0, 39, 22, 35, 42, 39, 22, 35, 0
   \              4E1623002716
   \              232A27162300
   \   00000239   0016232A0016       DC8 0, 22, 35, 42, 0, 22, 35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23
   \              230000000000
   \              000000000000
   \              0017        
   \   0000024D   541218172B12       DC8 84, 18, 24, 23, 43, 18, 24, 23, 5, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              181705121800
   \              000000000000
   \              00          
   \   00000260   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000277   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 22, 26, 42, 84, 22, 26, 0, 56, 22
   \              000000005416
   \              1A2A54161A00
   \              3816        
   \   0000028B   1A2A38161A00       DC8 26, 42, 56, 22, 26, 0, 28, 22, 26, 42, 28, 22, 26, 0, 0, 22, 26, 42
   \              1C161A2A1C16
   \              1A0000161A2A
   \   0000029D   00161A000000       DC8 0, 22, 26, 0, 0, 0, 0, 23, 85, 18, 24, 23, 57, 18, 24, 23, 29, 18
   \              001755121817
   \              391218171D12
   \   000002AF   181701121800       DC8 24, 23, 1, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000002C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 103
   \              000000000000
   \              000000000000
   \              00001967    
   \   000002DA   271600000000       DC8 39, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000002F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000307   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000031E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000335   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000034C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000363   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   00000378   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000038F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003A6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003BD   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   struct <unnamed> const __data ScreenSetTab_1[8]
   \                     ScreenSetTab_1:
   \   000003E0   024A1320294A       DC8 2, 74, 19, 32, 41, 74, 19, 32, 2, 39, 19, 32, 41, 39, 19, 32, 2, 3
   \              132002271320
   \              292713200203
   \   000003F2   132029031320       DC8 19, 32, 41, 3, 19, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 80
   \              000000000000
   \              000000000000
   \              1650        
   \   00000406   1218162B1218       DC8 18, 24, 22, 43, 18, 24, 22, 9, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0
   \              160912180000
   \              000000000000
   \   00000418   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000042F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 82, 19, 24, 41, 82, 19, 24, 2, 55, 19
   \              000000025213
   \              182952131802
   \              3713        
   \   00000443   182937131802       DC8 24, 41, 55, 19, 24, 2, 29, 19, 24, 41, 29, 19, 24, 2, 3, 19, 24, 41
   \              1D1318291D13
   \              180203131829
   \   00000455   031318000000       DC8 3, 19, 24, 0, 0, 0, 0, 22, 83, 18, 24, 22, 56, 18, 24, 22, 30, 18
   \              001653121816
   \              381218161E12
   \   00000467   181604121800       DC8 24, 22, 4, 18, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   0000047C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 84
   \              000000000000
   \              000000000000
   \              00001654    
   \   00000492   241616392416       DC8 36, 22, 22, 57, 36, 22, 22, 31, 36, 22, 22, 5, 36, 22, 0, 0, 0, 0
   \              161F24161605
   \              241600000000
   \   000004A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 83, 18, 24, 2
   \              000000000000
   \              000000000253
   \              121802      
   \   000004B9   381218021E12       DC8 56, 18, 24, 2, 30, 18, 24, 2, 4, 18, 24, 0, 0, 0, 0
   \              180204121800
   \              000000      
   \   000004C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000004DF   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000004F6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2
   \              000000000000
   \              000000000000
   \              0000000002  
   \   0000050D   531218023812       DC8 83, 18, 24, 2, 56, 18, 24, 2, 30, 18, 24, 2, 4, 18, 24, 23, 89, 35
   \              18021E121802
   \              041218175923
   \   0000051F   0B173D230B17       DC8 11, 23, 61, 35, 11, 23, 36, 35, 11, 23, 10, 35, 11, 0, 0, 0, 0
   \              24230B170A23
   \              0B00000000  
   \   00000530   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 94, 57, 12, 3
   \              000000000000
   \              00000000035E
   \              390C03      
   \   00000545   4F390C034039       DC8 79, 57, 12, 3, 64, 57, 12, 3, 49, 57, 12, 3, 34, 57, 12, 3, 19, 57
   \              0C0331390C03
   \              22390C031339
   \   00000557   0C0304390C00       DC8 12, 3, 4, 57, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000000000  
   \   00000568   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000578   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000058F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 103, 39, 22, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000196727
   \              160000000000
   \              000000      
   \   000005A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000005BB   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   000005D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000005E7   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000005FE   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000615   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   00000628   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000063F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000656   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000066D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   00000680   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000697   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000      
   \   char const __data ButtonName[99][4]
   \                     ButtonName:
   \   000006A0   623100006232       DC8 98, 49, 0, 0, 98, 50, 0, 0, 98, 51, 0, 0, 98, 52, 0, 0, 98, 53, 0
   \              000062330000
   \              623400006235
   \              00          
   \   000006B3   006236000062       DC8 0, 98, 54, 0, 0, 98, 55, 0, 0, 98, 56, 0, 0, 98, 57, 0, 0, 98, 49
   \              370000623800
   \              006239000062
   \              31          
   \   000006C6   300062313100       DC8 48, 0, 98, 49, 49, 0, 98, 49, 50, 0, 98, 49, 51, 0, 98, 49, 52, 0
   \              623132006231
   \              330062313400
   \   000006D8   623135006231       DC8 98, 49, 53, 0, 98, 49, 54, 0, 98, 49, 55, 0, 98, 49, 56, 0, 98, 49
   \              360062313700
   \              623138006231
   \   000006EA   390062323000       DC8 57, 0, 98, 50, 48, 0, 98, 50, 49, 0, 98, 50, 50, 0, 98, 50, 51, 0
   \              623231006232
   \              320062323300
   \   000006FC   623234006232       DC8 98, 50, 52, 0, 98, 50, 53, 0, 98, 50, 54, 0, 98, 50, 55, 0, 98, 50
   \              350062323600
   \              623237006232
   \   0000070E   380062323900       DC8 56, 0, 98, 50, 57, 0, 98, 51, 48, 0, 98, 51, 49, 0, 98, 51, 50, 0
   \              623330006233
   \              310062333200
   \   00000720   623333006233       DC8 98, 51, 51, 0, 98, 51, 52, 0, 98, 51, 53, 0, 98, 51, 54, 0, 98, 51
   \              340062333500
   \              623336006233
   \   00000732   370062333800       DC8 55, 0, 98, 51, 56, 0, 98, 51, 57, 0, 98, 52, 48, 0, 98, 52, 49, 0
   \              623339006234
   \              300062343100
   \   00000744   623432006234       DC8 98, 52, 50, 0, 98, 52, 51, 0, 98, 52, 52, 0, 98, 52, 53, 0, 98, 52
   \              330062343400
   \              623435006234
   \   00000756   360062343700       DC8 54, 0, 98, 52, 55, 0, 98, 52, 56, 0, 98, 52, 57, 0, 98, 53, 48, 0
   \              623438006234
   \              390062353000
   \   00000768   623531006235       DC8 98, 53, 49, 0, 98, 53, 50, 0, 98, 53, 51, 0, 98, 53, 52, 0, 98, 53
   \              320062353300
   \              623534006235
   \   0000077A   350062353600       DC8 53, 0, 98, 53, 54, 0, 98, 53, 55, 0, 98, 53, 56, 0, 98, 53, 57, 0
   \              623537006235
   \              380062353900
   \   0000078C   623630006236       DC8 98, 54, 48, 0, 98, 54, 49, 0, 98, 54, 50, 0, 98, 54, 51, 0, 98, 54
   \              310062363200
   \              623633006236
   \   0000079E   340062363500       DC8 52, 0, 98, 54, 53, 0, 98, 54, 54, 0, 98, 54, 55, 0, 98, 54, 56, 0
   \              623636006236
   \              370062363800
   \   000007B0   623639006237       DC8 98, 54, 57, 0, 98, 55, 48, 0, 98, 55, 49, 0, 98, 55, 50, 0, 98, 55
   \              300062373100
   \              623732006237
   \   000007C2   330062373400       DC8 51, 0, 98, 55, 52, 0, 98, 55, 53, 0, 98, 55, 54, 0, 98, 55, 55, 0
   \              623735006237
   \              360062373700
   \   000007D4   623738006237       DC8 98, 55, 56, 0, 98, 55, 57, 0, 98, 56, 48, 0, 98, 56, 49, 0, 98, 56
   \              390062383000
   \              623831006238
   \   000007E6   320062383300       DC8 50, 0, 98, 56, 51, 0, 98, 56, 52, 0, 98, 56, 53, 0, 98, 56, 54, 0
   \              623834006238
   \              350062383600
   \   000007F8   623837006238       DC8 98, 56, 55, 0, 98, 56, 56, 0, 98, 56, 57, 0, 98, 57, 48, 0, 98, 57
   \              380062383900
   \              623930006239
   \   0000080A   310062393200       DC8 49, 0, 98, 57, 50, 0, 98, 57, 51, 0, 98, 57, 52, 0, 98, 57, 53, 0
   \              623933006239
   \              340062393500
   \   0000081C   623936006239       DC8 98, 57, 54, 0, 98, 57, 55, 0, 98, 57, 56, 0, 98, 57, 57, 0
   \              370062393800
   \              62393900    

   \                                 In section .rodata, align 4
   \   int const __data abc
   \                     abc:
   \   00000000   02000000           DC32 2

   \                                 In section .rodata, align 4
   \   char const __data DeyOfWeekLongStr[2][8][12]
   \                     DeyOfWeekLongStr:
   \   00000000   457200000000       DC8 69, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 111, 110, 105, 101, 100
   \              000000000000
   \              506F6E696564
   \   00000012   7A69616C656B       DC8 122, 105, 97, 108, 101, 107, 87, 116, 111, 114, 101, 107, 0, 0, 0
   \              57746F72656B
   \              000000      
   \   00000021   00000053726F       DC8 0, 0, 0, 83, 114, 111, 100, 97, 0, 0, 0, 0, 0, 0, 0, 67, 122, 119
   \              646100000000
   \              000000437A77
   \   00000033   617274656B00       DC8 97, 114, 116, 101, 107, 0, 0, 0, 0, 80, 105, 97, 116, 101, 107, 0
   \              000000506961
   \              74656B00    
   \   00000043   000000000053       DC8 0, 0, 0, 0, 0, 83, 111, 98, 111, 116, 97, 0, 0, 0, 0, 0, 0, 78, 105
   \              6F626F746100
   \              00000000004E
   \              69          
   \   00000056   65647A69656C       DC8 101, 100, 122, 105, 101, 108, 97, 0, 0, 0, 69, 114, 0, 0, 0, 0, 0
   \              610000004572
   \              0000000000  
   \   00000067   00000000004D       DC8 0, 0, 0, 0, 0, 77, 111, 110, 100, 97, 121, 0, 0, 0, 0, 0, 0, 84
   \              6F6E64617900
   \              000000000054
   \   00000079   756573646179       DC8 117, 101, 115, 100, 97, 121, 0, 0, 0, 0, 0, 87, 101, 100, 110, 101
   \              000000000057
   \              65646E65    
   \   00000089   736461790000       DC8 115, 100, 97, 121, 0, 0, 0, 84, 104, 117, 114, 115, 100, 97, 121, 0
   \              005468757273
   \              64617900    
   \   00000099   000000467269       DC8 0, 0, 0, 70, 114, 105, 100, 97, 121, 0, 0, 0, 0, 0, 0, 83, 97, 116
   \              646179000000
   \              000000536174
   \   000000AB   757264617900       DC8 117, 114, 100, 97, 121, 0, 0, 0, 0, 83, 117, 110, 100, 97, 121, 0
   \              00000053756E
   \              64617900    
   \   000000BB   0000000000         DC8 0, 0, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Firmware: ">`:
   \   00000000   4669726D7761       DC8 "Firmware: "
   \              72653A2000  
   \   0000000B   00                 DC8 0
   \   char const __data Logo_Ceuron[8][16]
   \                     Logo_Ceuron:
   \   0000000C   E0F87C1E0E0F       DC8 224, 248, 124, 30, 14, 15, 7, 7, 7, 7, 15, 14, 28, 124, 240, 224
   \              070707070F0E
   \              1C7CF0E0    
   \   0000001C   83C3E0F07030       DC8 131, 195, 224, 240, 112, 48, 0, 254, 254, 0, 48, 112, 240, 224, 195
   \              00FEFE003070
   \              F0E0C3      
   \   0000002B   031F9FC3C0C0       DC8 3, 31, 159, 195, 192, 192, 192, 192, 199, 199, 192, 192, 192, 192
   \              C0C0C7C7C0C0
   \              C0C0        
   \   00000039   C3DFDF1F3F71       DC8 195, 223, 223, 31, 63, 113, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96
   \              606060606060
   \              60606060    
   \   00000049   60606080C0C0       DC8 96, 96, 96, 128, 192, 192, 192, 224, 112, 56, 252, 252, 192, 128
   \              C0E07038FCFC
   \              C080        
   \   00000057   80C0E0FF3FF1       DC8 128, 192, 224, 255, 63, 241, 249, 29, 12, 12, 12, 12, 12, 13, 13
   \              F91D0C0C0C0C
   \              0C0D0D      
   \   00000066   0D0D0D1DF8F0       DC8 13, 13, 13, 29, 248, 240, 97, 99, 103, 102, 102, 102, 102, 102, 102
   \              616367666666
   \              666666      
   \   00000075   66666666E7E3       DC8 102, 102, 102, 102, 231, 227, 193, 112, 248, 248, 220, 220, 204
   \              C170F8F8DCDC
   \              CC          
   \   00000082   CCCCCCCCCECE       DC8 204, 204, 204, 204, 206, 206, 198, 199, 199, 195
   \              C6C7C7C3    

   \                                 In section .rodata, align 4
   \   struct <unnamed> const __data TouchTestSor[4]
   \                     TouchTestSor:
   \   00000000   07073A070773       DC8 7, 7, 58, 7, 7, 115, 58, 115
   \              3A73        

   \                                 In section .rodata, align 4
   \   char const __data Klepsydra[1][8]
   \                     Klepsydra:
   \   00000000   1F15110A040A       DC8 31, 21, 17, 10, 4, 10, 17, 31
   \              111F        

   \                                 In section .rodata, align 4
   \   char const __data Siec[7][24]
   \                     Siec:
   \   00000000   0000FF01C101       DC8 0, 0, 255, 1, 193, 1, 241, 241, 241, 241, 241, 241, 241, 241, 241
   \              F1F1F1F1F1F1
   \              F1F1F1      
   \   0000000F   F1F1F1010101       DC8 241, 241, 241, 1, 1, 1, 255, 0, 0, 0, 0, 63, 32, 32, 32, 35, 35, 35
   \              FF000000003F
   \              202020232323
   \   00000021   232323232323       DC8 35, 35, 35, 35, 35, 35, 35, 35, 35, 32, 32, 32, 63, 0, 0, 0, 0, 0
   \              232323202020
   \              3F0000000000
   \   00000033   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   0000004A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0
   \              000080808080
   \              000000000000
   \              0000        
   \   0000005E   000000C030C8       DC8 0, 0, 0, 192, 48, 200, 124, 62, 126, 127, 255, 31, 6, 2, 4, 4, 15
   \              7C3E7E7FFF1F
   \              060204040F  
   \   0000006F   071F1E1E1C38       DC8 7, 31, 30, 30, 28, 56, 112, 192, 0, 62, 253, 112, 0, 0, 0, 128, 128
   \              70C0003EFD70
   \              0000008080  
   \   00000080   80C0F0F8F0E0       DC8 128, 192, 240, 248, 240, 224, 240, 176, 8, 56, 248, 224, 224, 240
   \              F0B00838F8E0
   \              E0F0        
   \   0000008E   FF3E00010608       DC8 255, 62, 0, 1, 6, 8, 16, 33, 33, 67, 67, 71, 135, 143, 143, 223, 71
   \              102121434347
   \              878F8FDF47  
   \   0000009F   737E3E3F1F0F       DC8 115, 126, 62, 63, 31, 15, 7, 1, 0
   \              070100      

   \                                 In section .rodata, align 4
   \   char const __data StrzalkaPrawo[2][5]
   \                     StrzalkaPrawo:
   \   00000000   0000FF000001       DC8 0, 0, 255, 0, 0, 1, 3, 7, 3, 1, 0, 0
   \              030703010000
   \   char const __data StrzalkaLewo[2][5]
   \                     StrzalkaLewo:
   \   0000000C   0406FF060400       DC8 4, 6, 255, 6, 4, 0, 0, 7, 0, 0, 0, 0
   \              000700000000
   5562                        {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','W','Y','Z'}, 
   5563                        {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','w','y','z'}, 
   5564                        {' ','0','1','2','3','4','5','6','7','8','9','+','-','_','<','>','.','x','/',127,30,31,35,36},
   5565                        };
   5566          
   5567          //* text- wskanik do stringa
   5568          //* MaxChar - maksymalna iloæ znaków tekstu. Maksymalnie 6. Je¿eli MaxChar=0 to domylnie MaxChar=6;
   5569          char AlfaType=0;
   5570          

   \                                 In section Debug.txt, align 4, keep-with-next
   5571          void TextChange_Paint(char* text, char* MaxChar)
   5572                {  
   \                     TextChange_Paint:
   \   00000000   F3B5               PUSH     {R0,R1,R4-R7,LR}
   \   00000002   81B0               SUB      SP,SP,#+4
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   6DA0               ADR      R0,??TextChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   6A48               LDR      R0,??TextChange_Paint_0+0x4  ;; `?<Constant {0, 0}>` + 132
   5573                  List_Paint("Text ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   5574                  V_line(62,98,15,0);
   \   00000026   0023               MOVS     R3,#+0
   \   00000028   0F22               MOVS     R2,#+15
   \   0000002A   6221               MOVS     R1,#+98
   \   0000002C   3E20               MOVS     R0,#+62
   \   0000002E   ........           BL       V_line
   \   00000032   0024               MOVS     R4,#+0
   5575                  
   5576                  char idx=0;
   5577                  char y=86;
   \   00000034   5625               MOVS     R5,#+86
   5578          
   5579                  char PrzesZnak=0;
   \   00000036   2700               MOVS     R7,R4
   \   00000038   6448               LDR      R0,??TextChange_Paint_0+0x8  ;; TextToChangeLength + 28
   \   0000003A   0078               LDRB     R0,[R0, #+0]
   \   0000003C   0D28               CMP      R0,#+13
   \   0000003E   03D3               BCC      ??TextChange_Paint_1
   5580                  if (TextChangePoz>12) PrzesZnak=TextChangePoz-12;
   \   00000040   0700               MOVS     R7,R0
   \   00000042   0C3F               SUBS     R7,R7,#+12
   \   00000044   3F06               LSLS     R7,R7,#+24
   \   00000046   3F0E               LSRS     R7,R7,#+24
   5581                  
   5582                  H_line(1,109,62,0);
   \                     ??TextChange_Paint_1:
   \   00000048   2300               MOVS     R3,R4
   \   0000004A   3E22               MOVS     R2,#+62
   \   0000004C   6D21               MOVS     R1,#+109
   \   0000004E   0120               MOVS     R0,#+1
   \   00000050   ........           BL       H_line
   \   00000054   02E0               B        ??TextChange_Paint_2
   5583                  
   5584                  char DlTxt; //d³ugoæ tekstu
   5585                  while ((DlTxt<*MaxChar) && (text[DlTxt]>0)) DlTxt++;
                                 ^
Warning[Pe549]: variable "DlTxt" is used before its value is set
   \                     ??TextChange_Paint_3:
   \   00000056   761C               ADDS     R6,R6,#+1
   \   00000058   3606               LSLS     R6,R6,#+24
   \   0000005A   360E               LSRS     R6,R6,#+24
   \                     ??TextChange_Paint_2:
   \   0000005C   3000               MOVS     R0,R6
   \   0000005E   0299               LDR      R1,[SP, #+8]
   \   00000060   0978               LDRB     R1,[R1, #+0]
   \   00000062   0006               LSLS     R0,R0,#+24
   \   00000064   000E               LSRS     R0,R0,#+24
   \   00000066   8842               CMP      R0,R1
   \   00000068   06D2               BCS      ??TextChange_Paint_4
   \   0000006A   3000               MOVS     R0,R6
   \   0000006C   0006               LSLS     R0,R0,#+24
   \   0000006E   000E               LSRS     R0,R0,#+24
   \   00000070   0199               LDR      R1,[SP, #+4]
   \   00000072   085C               LDRB     R0,[R1, R0]
   \   00000074   0028               CMP      R0,#+0
   \   00000076   EED1               BNE      ??TextChange_Paint_3
   5586                  Label(&text[PrzesZnak],0,2,100,DlTxt-PrzesZnak,11,1,127,0); 
   \                     ??TextChange_Paint_4:
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   0B21               MOVS     R1,#+11
   \   00000086   3800               MOVS     R0,R7
   \   00000088   301A               SUBS     R0,R6,R0
   \   0000008A   0006               LSLS     R0,R0,#+24
   \   0000008C   000E               LSRS     R0,R0,#+24
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   6423               MOVS     R3,#+100
   \   00000092   0222               MOVS     R2,#+2
   \   00000094   2100               MOVS     R1,R4
   \   00000096   0798               LDR      R0,[SP, #+28]
   \   00000098   C019               ADDS     R0,R0,R7
   \   0000009A   ........           BL       Label
   \   0000009E   06B0               ADD      SP,SP,#+24
   5587                  
   5588                   for (char j=0; j<6; j++) 
   \   000000A0   2000               MOVS     R0,R4
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   44E0               B        ??TextChange_Paint_5
   5589                   {
   5590                      for (char i=0; i<4; i++) 
   \                     ??TextChange_Paint_6:
   \   000000A6   2000               MOVS     R0,R4
   \   000000A8   4949               LDR      R1,??TextChange_Paint_0+0xC  ;; TextToChangeLength + 29
   \   000000AA   0978               LDRB     R1,[R1, #+0]
   \   000000AC   1822               MOVS     R2,#+24
   \   000000AE   5143               MULS     R1,R2,R1
   \   000000B0   484A               LDR      R2,??TextChange_Paint_0+0x10  ;; `?<Constant {0, 0}>`
   \   000000B2   5118               ADDS     R1,R2,R1
   \   000000B4   0818               ADDS     R0,R1,R0
   \   000000B6   0079               LDRB     R0,[R0, #+4]
   \   000000B8   0028               CMP      R0,#+0
   \   000000BA   2BD0               BEQ      ??TextChange_Paint_7
   5591                      {
   5592                        if (QWERTY[AlfaType][idx]>0)
   5593                        {
   5594                          Rectangle(2+i*15,y,14,13);
   \   000000BC   3700               MOVS     R7,R6
   \   000000BE   0F20               MOVS     R0,#+15
   \   000000C0   4743               MULS     R7,R0,R7
   \   000000C2   0D23               MOVS     R3,#+13
   \   000000C4   0E22               MOVS     R2,#+14
   \   000000C6   2900               MOVS     R1,R5
   \   000000C8   3800               MOVS     R0,R7
   \   000000CA   801C               ADDS     R0,R0,#+2
   \   000000CC   0006               LSLS     R0,R0,#+24
   \   000000CE   000E               LSRS     R0,R0,#+24
   \   000000D0   ........           BL       Rectangle
   5595                          Label((char*)&QWERTY[AlfaType][idx],2,3+i*15,y+2,1,11,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000D4   82B0               SUB      SP,SP,#+8
   \   000000D6   0020               MOVS     R0,#+0
   \   000000D8   0090               STR      R0,[SP, #+0]
   \   000000DA   7F21               MOVS     R1,#+127
   \   000000DC   0120               MOVS     R0,#+1
   \   000000DE   03B4               PUSH     {R0,R1}
   \   000000E0   0B21               MOVS     R1,#+11
   \   000000E2   03B4               PUSH     {R0,R1}
   \   000000E4   2B00               MOVS     R3,R5
   \   000000E6   9B1C               ADDS     R3,R3,#+2
   \   000000E8   FF1C               ADDS     R7,R7,#+3
   \   000000EA   3A00               MOVS     R2,R7
   \   000000EC   1206               LSLS     R2,R2,#+24
   \   000000EE   120E               LSRS     R2,R2,#+24
   \   000000F0   0221               MOVS     R1,#+2
   \   000000F2   8C46               MOV      R12,R1
   \   000000F4   2100               MOVS     R1,R4
   \   000000F6   3648               LDR      R0,??TextChange_Paint_0+0xC  ;; TextToChangeLength + 29
   \   000000F8   0078               LDRB     R0,[R0, #+0]
   \   000000FA   1827               MOVS     R7,#+24
   \   000000FC   7843               MULS     R0,R7,R0
   \   000000FE   354F               LDR      R7,??TextChange_Paint_0+0x10  ;; `?<Constant {0, 0}>`
   \   00000100   3818               ADDS     R0,R7,R0
   \   00000102   4018               ADDS     R0,R0,R1
   \   00000104   001D               ADDS     R0,R0,#+4
   \   00000106   6146               MOV      R1,R12
   \   00000108   ........           BL       Label
   \   0000010C   06B0               ADD      SP,SP,#+24
   5596                          idx++;
   \   0000010E   641C               ADDS     R4,R4,#+1
   \   00000110   2406               LSLS     R4,R4,#+24
   \   00000112   240E               LSRS     R4,R4,#+24
   5597                        }
   5598                      }
   \                     ??TextChange_Paint_7:
   \   00000114   761C               ADDS     R6,R6,#+1
   \   00000116   3606               LSLS     R6,R6,#+24
   \   00000118   360E               LSRS     R6,R6,#+24
   \                     ??TextChange_Paint_8:
   \   0000011A   3000               MOVS     R0,R6
   \   0000011C   0428               CMP      R0,#+4
   \   0000011E   C2D3               BCC      ??TextChange_Paint_6
   5599                      y-=14;
   \   00000120   0E3D               SUBS     R5,R5,#+14
   \   00000122   2D06               LSLS     R5,R5,#+24
   \   00000124   2D0E               LSRS     R5,R5,#+24
   \   00000126   0098               LDR      R0,[SP, #+0]
   \   00000128   401C               ADDS     R0,R0,#+1
   \   0000012A   0006               LSLS     R0,R0,#+24
   \   0000012C   000E               LSRS     R0,R0,#+24
   \   0000012E   0090               STR      R0,[SP, #+0]
   \                     ??TextChange_Paint_5:
   \   00000130   0098               LDR      R0,[SP, #+0]
   \   00000132   0006               LSLS     R0,R0,#+24
   \   00000134   000E               LSRS     R0,R0,#+24
   \   00000136   0628               CMP      R0,#+6
   \   00000138   01D2               BCS      ??TextChange_Paint_9
   \   0000013A   0026               MOVS     R6,#+0
   \   0000013C   EDE7               B        ??TextChange_Paint_8
   5600                   }
   5601                  
   5602          
   5603                  Label("C",2,3,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \                     ??TextChange_Paint_9:
   \   0000013E   82B0               SUB      SP,SP,#+8
   \   00000140   0120               MOVS     R0,#+1
   \   00000142   0090               STR      R0,[SP, #+0]
   \   00000144   7F21               MOVS     R1,#+127
   \   00000146   03B4               PUSH     {R0,R1}
   \   00000148   0B21               MOVS     R1,#+11
   \   0000014A   03B4               PUSH     {R0,R1}
   \   0000014C   0423               MOVS     R3,#+4
   \   0000014E   0322               MOVS     R2,#+3
   \   00000150   0221               MOVS     R1,#+2
   \   00000152   21A0               ADR      R0,??TextChange_Paint_0+0x14  ;; 0x43, 0x00, 0x00, 0x00
   \   00000154   ........           BL       Label
   \   00000158   06B0               ADD      SP,SP,#+24
   5604                  Label("<",2,3+1*15,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000015A   82B0               SUB      SP,SP,#+8
   \   0000015C   0120               MOVS     R0,#+1
   \   0000015E   0090               STR      R0,[SP, #+0]
   \   00000160   7F21               MOVS     R1,#+127
   \   00000162   03B4               PUSH     {R0,R1}
   \   00000164   0B21               MOVS     R1,#+11
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   0423               MOVS     R3,#+4
   \   0000016A   1222               MOVS     R2,#+18
   \   0000016C   0221               MOVS     R1,#+2
   \   0000016E   1BA0               ADR      R0,??TextChange_Paint_0+0x18  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000170   ........           BL       Label
   \   00000174   06B0               ADD      SP,SP,#+24
   5605                  Label(">",2,3+2*15,4,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000176   82B0               SUB      SP,SP,#+8
   \   00000178   0120               MOVS     R0,#+1
   \   0000017A   0090               STR      R0,[SP, #+0]
   \   0000017C   7F21               MOVS     R1,#+127
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   0B21               MOVS     R1,#+11
   \   00000182   03B4               PUSH     {R0,R1}
   \   00000184   0423               MOVS     R3,#+4
   \   00000186   2122               MOVS     R2,#+33
   \   00000188   0221               MOVS     R1,#+2
   \   0000018A   15A0               ADR      R0,??TextChange_Paint_0+0x1C  ;; 0x3E, 0x00, 0x00, 0x00
   \   0000018C   ........           BL       Label
   \   00000190   06B0               ADD      SP,SP,#+24
   5606                  Label("...",2,3+3*15,4,3,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000192   82B0               SUB      SP,SP,#+8
   \   00000194   0120               MOVS     R0,#+1
   \   00000196   0090               STR      R0,[SP, #+0]
   \   00000198   7F21               MOVS     R1,#+127
   \   0000019A   03B4               PUSH     {R0,R1}
   \   0000019C   0B21               MOVS     R1,#+11
   \   0000019E   0320               MOVS     R0,#+3
   \   000001A0   03B4               PUSH     {R0,R1}
   \   000001A2   0423               MOVS     R3,#+4
   \   000001A4   3022               MOVS     R2,#+48
   \   000001A6   0221               MOVS     R1,#+2
   \   000001A8   0EA0               ADR      R0,??TextChange_Paint_0+0x20  ;; "..."
   \   000001AA   ........           BL       Label
   \   000001AE   06B0               ADD      SP,SP,#+24
   5607          
   5608                  
   5609                  
   5610                  V_line(63,98,15,1);
   \   000001B0   0123               MOVS     R3,#+1
   \   000001B2   0F22               MOVS     R2,#+15
   \   000001B4   6221               MOVS     R1,#+98
   \   000001B6   3F20               MOVS     R0,#+63
   \   000001B8   ........           BL       V_line
   5611                  
   5612           }
   \   000001BC   FEBC               POP      {R1-R7}
   \   000001BE   01BC               POP      {R0}
   \   000001C0   0047               BX       R0               ;; return
   \   000001C2   C046               Nop      
   \                     ??TextChange_Paint_0:
   \   000001C4   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001C8   ........           DC32     `?<Constant {0, 0}>` + 132
   \   000001CC   ........           DC32     TextToChangeLength + 28
   \   000001D0   ........           DC32     TextToChangeLength + 29
   \   000001D4   ........           DC32     `?<Constant {0, 0}>`
   \   000001D8   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   000001DC   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   000001E0   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   \   000001E4   2E2E2E00           DC8      "..."
   5613                  
   5614                  

   \                                 In section Debug.txt, align 4, keep-with-next
   5615          void TextChange_Refresh(char* text, char* MaxChar)
   5616          {
   \                     TextChange_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   5617            char DlTxt; //d³ugoæ tekstu
                        ^
Warning[Pe177]: variable "DlTxt" was declared but never referenced
   5618            char Pix;  //piksel
   5619            char offset=30;
   5620            //while ((DlTxt<MaxChar) && (text[DlTxt]>0)) DlTxt++;
   5621            char PrzesZnak=0;
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2100               MOVS     R1,R4
   \   00000006   1F48               LDR      R0,??TextChange_Refresh_0  ;; TextToChangeLength + 28
   \   00000008   0278               LDRB     R2,[R0, #+0]
   \   0000000A   0D2A               CMP      R2,#+13
   \   0000000C   03D3               BCC      ??TextChange_Refresh_1
   5622                  if (TextChangePoz>12) PrzesZnak=TextChangePoz-12;
   \   0000000E   1100               MOVS     R1,R2
   \   00000010   0C39               SUBS     R1,R1,#+12
   \   00000012   0906               LSLS     R1,R1,#+24
   \   00000014   090E               LSRS     R1,R1,#+24
   5623            
   5624            static char count=0;
   5625            static char mig=0;
   5626            if (count<8) 
   \                     ??TextChange_Refresh_1:
   \   00000016   1C4B               LDR      R3,??TextChange_Refresh_0+0x4  ;; ??count
   \   00000018   1878               LDRB     R0,[R3, #+0]
   \   0000001A   0828               CMP      R0,#+8
   \   0000001C   02D2               BCS      ??TextChange_Refresh_2
   5627            {
   5628              count++;
   \   0000001E   401C               ADDS     R0,R0,#+1
   \   00000020   1870               STRB     R0,[R3, #+0]
   \   00000022   2BE0               B        ??TextChange_Refresh_3
   5629            }else{
   5630                count=0;
   \                     ??TextChange_Refresh_2:
   \   00000024   2000               MOVS     R0,R4
   \   00000026   1870               STRB     R0,[R3, #+0]
   5631                if (mig) mig=0; else mig=1;  
   \   00000028   5878               LDRB     R0,[R3, #+1]
   \   0000002A   451E               SUBS     R5,R0,#+1
   \   0000002C   AD41               SBCS     R5,R5,R5
   \   0000002E   ED0F               LSRS     R5,R5,#+31
   \   00000030   5D70               STRB     R5,[R3, #+1]
   5632                Pix=1;
   \   00000032   0120               MOVS     R0,#+1
   5633                for (char Znak=0; Znak<TextChangePoz-PrzesZnak; Znak++)
   \   00000034   0FE0               B        ??TextChange_Refresh_4
   5634                {
   5635                   Pix += Arial_7[text[Znak+PrzesZnak]-offset][0];
   5636                   Pix+=1; //przerwa pomiêdzy znakami
   \                     ??TextChange_Refresh_5:
   \   00000036   154F               LDR      R7,??TextChange_Refresh_0+0x8  ;; 0xfffffed4
   \   00000038   AD19               ADDS     R5,R5,R6
   \   0000003A   009E               LDR      R6,[SP, #+0]
   \   0000003C   755D               LDRB     R5,[R6, R5]
   \   0000003E   0A26               MOVS     R6,#+10
   \   00000040   7543               MULS     R5,R6,R5
   \   00000042   134E               LDR      R6,??TextChange_Refresh_0+0xC  ;; Arial_7
   \   00000044   7519               ADDS     R5,R6,R5
   \   00000046   ED5D               LDRB     R5,[R5, R7]
   \   00000048   4019               ADDS     R0,R0,R5
   \   0000004A   401C               ADDS     R0,R0,#+1
   \   0000004C   0006               LSLS     R0,R0,#+24
   \   0000004E   000E               LSRS     R0,R0,#+24
   5637                }
   \   00000050   641C               ADDS     R4,R4,#+1
   \   00000052   2406               LSLS     R4,R4,#+24
   \   00000054   240E               LSRS     R4,R4,#+24
   \                     ??TextChange_Refresh_4:
   \   00000056   0E00               MOVS     R6,R1
   \   00000058   2500               MOVS     R5,R4
   \   0000005A   971B               SUBS     R7,R2,R6
   \   0000005C   BD42               CMP      R5,R7
   \   0000005E   EADB               BLT      ??TextChange_Refresh_5
   5638                
   5639                if (mig) 
   \   00000060   5978               LDRB     R1,[R3, #+1]
   \   00000062   0029               CMP      R1,#+0
   \   00000064   05D0               BEQ      ??TextChange_Refresh_6
   5640                    {
   5641                      V_line(Pix,100,9,1);
   \   00000066   0123               MOVS     R3,#+1
   \   00000068   0922               MOVS     R2,#+9
   \   0000006A   6421               MOVS     R1,#+100
   \   0000006C   ........           BL       V_line
   \   00000070   04E0               B        ??TextChange_Refresh_3
   5642                    }else{ 
   5643                      V_line(Pix,100,9,0);
   \                     ??TextChange_Refresh_6:
   \   00000072   0023               MOVS     R3,#+0
   \   00000074   0922               MOVS     R2,#+9
   \   00000076   6421               MOVS     R1,#+100
   \   00000078   ........           BL       V_line
   5644                    }
   5645                
   5646                
   5647            }
   5648            
   5649           
   5650          }
   \                     ??TextChange_Refresh_3:
   \   0000007C   F8BC               POP      {R3-R7}
   \   0000007E   01BC               POP      {R0}
   \   00000080   0047               BX       R0               ;; return
   \   00000082   C046               Nop      
   \                     ??TextChange_Refresh_0:
   \   00000084   ........           DC32     TextToChangeLength + 28
   \   00000088   ........           DC32     ??count
   \   0000008C   D4FEFFFF           DC32     0xfffffed4
   \   00000090   ........           DC32     Arial_7
   5651           
   5652          
   5653          long long int LastText_EventTime=0;

   \                                 In section Debug.txt, align 4, keep-with-next
   5654          void TextChange_Evant(char* text, char* MaxChar, char* MaxPix)
   5655                {  
   \                     TextChange_Evant:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   5656                  char y=86;
   \   00000004   5620               MOVS     R0,#+86
   \   00000006   0190               STR      R0,[SP, #+4]
   \   00000008   6846               MOV      R0,SP
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0170               STRB     R1,[R0, #+0]
   \   0000000E   AD48               LDR      R0,??TextChange_Evant_0  ;; X_down
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   2F28               CMP      R0,#+47
   \   00000014   2DDB               BLT      ??TextChange_Evant_1
   \   00000016   3F28               CMP      R0,#+63
   \   00000018   2BDA               BGE      ??TextChange_Evant_1
   \   0000001A   AB48               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   0000001C   405E               LDRSH    R0,[R0, R1]
   \   0000001E   7128               CMP      R0,#+113
   \   00000020   27DB               BLT      ??TextChange_Evant_1
   \   00000022   7F28               CMP      R0,#+127
   \   00000024   25DA               BGE      ??TextChange_Evant_1
   5657                  char Repaint=0;
   5658                  //zdarzenie typu down "X"
   5659                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   5660                  {
   5661                    //MenuPaint();
   5662                    H_line(49,114,10,0);
   \   00000026   0B00               MOVS     R3,R1
   \   00000028   0A22               MOVS     R2,#+10
   \   0000002A   7221               MOVS     R1,#+114
   \   0000002C   3120               MOVS     R0,#+49
   \   0000002E   ........           BL       H_line
   5663                    H_line(49,123,10,0); 
   \   00000032   0023               MOVS     R3,#+0
   \   00000034   0A22               MOVS     R2,#+10
   \   00000036   7B21               MOVS     R1,#+123
   \   00000038   3120               MOVS     R0,#+49
   \   0000003A   ........           BL       H_line
   5664                    V_line(49,114,10,0); 
   \   0000003E   0023               MOVS     R3,#+0
   \   00000040   0A22               MOVS     R2,#+10
   \   00000042   7221               MOVS     R1,#+114
   \   00000044   3120               MOVS     R0,#+49
   \   00000046   ........           BL       V_line
   5665                    V_line(58,114,10,0); 
   \   0000004A   0023               MOVS     R3,#+0
   \   0000004C   0A22               MOVS     R2,#+10
   \   0000004E   7221               MOVS     R1,#+114
   \   00000050   3A20               MOVS     R0,#+58
   \   00000052   ........           BL       V_line
   5666                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \   00000056   9D48               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   00000058   0078               LDRB     R0,[R0, #+0]
   \   0000005A   0028               CMP      R0,#+0
   \   0000005C   09D1               BNE      ??TextChange_Evant_1
   \   0000005E   9C48               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   0160               STR      R1,[R0, #+0]
   \   00000064   9B4A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   00000066   9C48               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   00000068   03C8               LDM      R0!,{R0,R1}
   \   0000006A   0023               MOVS     R3,#+0
   \   0000006C   0830               ADDS     R0,R0,#+8
   \   0000006E   5941               ADCS     R1,R1,R3
   \   00000070   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_1:
   \   00000072   9A48               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   00000074   0021               MOVS     R1,#+0
   \   00000076   405E               LDRSH    R0,[R0, R1]
   \   00000078   2F28               CMP      R0,#+47
   \   0000007A   50DB               BLT      ??TextChange_Evant_2
   \   0000007C   3F28               CMP      R0,#+63
   \   0000007E   4EDA               BGE      ??TextChange_Evant_2
   \   00000080   9748               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   00000082   405E               LDRSH    R0,[R0, R1]
   \   00000084   7128               CMP      R0,#+113
   \   00000086   4ADB               BLT      ??TextChange_Evant_2
   \   00000088   7F28               CMP      R0,#+127
   \   0000008A   48DA               BGE      ??TextChange_Evant_2
   5667                    
   5668                  }
   5669            
   5670                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   5671                  {
   5672                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \   0000008C   8F48               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   0000008E   0078               LDRB     R0,[R0, #+0]
   \   00000090   0028               CMP      R0,#+0
   \   00000092   08D1               BNE      ??TextChange_Evant_3
   \   00000094   8E48               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   00000096   0160               STR      R1,[R0, #+0]
   \   00000098   8E4A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   0000009A   8F48               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   0000009C   03C8               LDM      R0!,{R0,R1}
   \   0000009E   0023               MOVS     R3,#+0
   \   000000A0   0830               ADDS     R0,R0,#+8
   \   000000A2   5941               ADCS     R1,R1,R3
   \   000000A4   03C2               STM      R2!,{R0,R1}
   5673          
   5674                    char LastChar=0;
   \                     ??TextChange_Evant_3:
   \   000000A6   0020               MOVS     R0,#+0
   5675                    for (char i=0; i<*MaxChar; i++) if ((text[i]>=30) &&  (text[i]<=129) && (text[i]!=32)) LastChar=i;
   \   000000A8   0100               MOVS     R1,R0
   \   000000AA   0DE0               B        ??TextChange_Evant_4
   \                     ??TextChange_Evant_5:
   \   000000AC   069B               LDR      R3,[SP, #+24]
   \   000000AE   9A18               ADDS     R2,R3,R2
   \   000000B0   1378               LDRB     R3,[R2, #+0]
   \   000000B2   1E2B               CMP      R3,#+30
   \   000000B4   05D3               BCC      ??TextChange_Evant_6
   \   000000B6   822B               CMP      R3,#+130
   \   000000B8   03D2               BCS      ??TextChange_Evant_6
   \   000000BA   1A00               MOVS     R2,R3
   \   000000BC   202A               CMP      R2,#+32
   \   000000BE   00D0               BEQ      ??TextChange_Evant_6
   \   000000C0   0800               MOVS     R0,R1
   \                     ??TextChange_Evant_6:
   \   000000C2   491C               ADDS     R1,R1,#+1
   \   000000C4   0906               LSLS     R1,R1,#+24
   \   000000C6   090E               LSRS     R1,R1,#+24
   \                     ??TextChange_Evant_4:
   \   000000C8   0A00               MOVS     R2,R1
   \   000000CA   079B               LDR      R3,[SP, #+28]
   \   000000CC   1B78               LDRB     R3,[R3, #+0]
   \   000000CE   9A42               CMP      R2,R3
   \   000000D0   ECD3               BCC      ??TextChange_Evant_5
   5676                    for (char i=LastChar+1; i<*MaxChar; i++) text[i]=0;
   \   000000D2   401C               ADDS     R0,R0,#+1
   \   000000D4   0006               LSLS     R0,R0,#+24
   \   000000D6   000E               LSRS     R0,R0,#+24
   \   000000D8   0023               MOVS     R3,#+0
   \   000000DA   04E0               B        ??TextChange_Evant_7
   \                     ??TextChange_Evant_8:
   \   000000DC   069A               LDR      R2,[SP, #+24]
   \   000000DE   5354               STRB     R3,[R2, R1]
   \   000000E0   401C               ADDS     R0,R0,#+1
   \   000000E2   0006               LSLS     R0,R0,#+24
   \   000000E4   000E               LSRS     R0,R0,#+24
   \                     ??TextChange_Evant_7:
   \   000000E6   0100               MOVS     R1,R0
   \   000000E8   079A               LDR      R2,[SP, #+28]
   \   000000EA   1278               LDRB     R2,[R2, #+0]
   \   000000EC   9142               CMP      R1,R2
   \   000000EE   F5D3               BCC      ??TextChange_Evant_8
   5677          
   5678                    TextChangeCharNr=0;
   \   000000F0   7C4C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   000000F2   1800               MOVS     R0,R3
   \   000000F4   E076               STRB     R0,[R4, #+27]
   5679                    TextChangePoz=0;
   \   000000F6   2077               STRB     R0,[R4, #+28]
   5680                    TextToChangeMaxPixSize=0;
   \   000000F8   6070               STRB     R0,[R4, #+1]
   5681                    MaxChar=0;
   5682                    Rej_poz=0;
   \   000000FA   E064               STR      R0,[R4, #+76]
   5683                    
   5684                    MenuLevel=(MenuLevel/10);
   \   000000FC   A06C               LDR      R0,[R4, #+72]
   \   000000FE   0A21               MOVS     R1,#+10
   \   00000100   ........           BL       __aeabi_idivmod
   \   00000104   A064               STR      R0,[R4, #+72]
   5685                    MenuPaint();
   \   00000106   ........           BL       MenuPaint
   5686                  }  
   5687                  else
   5688                  {
   5689                    Label("<",2,3+1*15,4,1,11,1,127,1);
   5690                    
   5691                    if ((X_up>3) && (X_up<62) && (Y_up>4) &&  (Y_up<108)) Repaint=1;
   5692                    
   5693                    //przyciski funkcyjne
   5694                    char FunkButt=0;
   5695                    for (char i=0; i<4; i++)
   5696                    {
   5697                      if ((X_down>3+i*15) && (X_down<3+i*15+15) && (Y_down>4) &&  (Y_down<4+9)) 
   5698                      {
   5699                        MenuPaint();
   5700                        Rectangle(2+i*15,3,14,11);
   5701                        
   5702                      }
   5703                      
   5704                      if ((X_up>3+i*15) && (X_up<3+i*15+15) && (Y_up>4) &&  (Y_up<4+9))
   5705                      {
   5706                        FunkButt=i+1;
   5707                        if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                     ^
Warning[Pe063]: shift count is too large
   5708                      }
   5709                    }
   5710                    
   5711                    //obliczenie d³ugoci tekstu
   5712                    char TextLength=0;
   5713                    while ((TextLength<*MaxChar) && (text[TextLength]!=0)) TextLength++;
   5714          
   5715                    
   5716                     //przycisk zmiany alfabetu
   5717                    if ((FunkButt==1) && (TextChangePoz>0)) 
   5718                    {
   5719                      for (char i=TextChangePoz; i<TextLength; i++)  text[i-1]=text[i];
   5720                      TextChangePoz--;
   5721                      TextLength--;
   5722                      text[TextLength]=0;  
   5723                      Repaint=1;
   5724                    }
   5725                    if (FunkButt==2) {if (TextChangePoz>0) {TextChangePoz--;} Repaint=1;}
   5726                    if (FunkButt==3) {if (TextChangePoz<TextLength) {TextChangePoz++;} Repaint=1;}
   5727                    if (FunkButt==4) {if (AlfaType<2) AlfaType++; else AlfaType=0; Repaint=1;}
   5728                    
   5729          
   5730                   char idx=0;
   5731                    for (char j=0; j<6; j++) 
   5732                   {
   5733                      for (char i=0; i<4; i++) 
   5734                      {
   5735                        if (QWERTY[AlfaType][idx]>0)
   5736                        {
   5737                          if ((X_down>3+i*15) && (X_down<3+i*15+15) && (Y_down>y) &&  (Y_down<y+13))
   5738                          {
   5739                            MenuPaint();
   5740                            Label((char*)&QWERTY[AlfaType][idx],2,3+i*15,y+2,1,11,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   5741                          }
   5742                          if ((X_up>3+i*15) && (X_up<3+i*15+15) && (Y_up>y) &&  (Y_up<y+13)) 
   5743                          {
   5744                            if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                         ^
Warning[Pe063]: shift count is too large
   5745                            if (TextChangePoz<*MaxChar)
   5746                            {
   5747                               if ((*MaxPix==0) || ((LabelLength(text,*MaxChar)+LabelLength((char*)&(QWERTY[AlfaType][idx]),1))<*MaxPix ))
   5748                               {
   5749                                text[TextChangePoz]=QWERTY[AlfaType][idx];
   5750                                TextChangePoz++;
   5751                                if ((TextChangePoz==1) && (text[TextChangePoz]==0) && (AlfaType==0)) AlfaType=1;
   5752                               }else{
   5753                                if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+200;} 
                                                                                                             ^
Warning[Pe063]: shift count is too large
   5754                               }
   5755                            }else{
   5756                             if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+200;} 
                                                                                                          ^
Warning[Pe063]: shift count is too large
   5757                            }
   5758                             
   5759                            char AT=1;
   5760                            //for (char AT=0; AT<3; AT++)
   5761                            //{
   5762                                for (char i=0; i<MaxLetherOnScr; i++)
   5763                                {
   5764                                  if (text[TextChangePoz]==QWERTY[AT][i]) AlfaType=AT; 
   5765                                }
   5766                            //}
   5767                            
   5768                            Repaint=1;
   5769                          }
   5770                          idx++;
   5771                        }
   5772                      }
   5773                      y-=14;
   5774                   }
   5775                    
   5776                    
   5777                    
   5778                   
   5779                    
   5780          
   5781                    
   5782                  }
   5783                  
   5784                  
   5785                  if (Repaint) MenuPaint();
   \                     ??TextChange_Evant_9:
   \   0000010A   6846               MOV      R0,SP
   \   0000010C   0078               LDRB     R0,[R0, #+0]
   \   0000010E   0028               CMP      R0,#+0
   \   00000110   01D0               BEQ      ??TextChange_Evant_10
   \   00000112   ........           BL       MenuPaint
   5786                  
   5787                }
   \                     ??TextChange_Evant_10:
   \   00000116   09B0               ADD      SP,SP,#+36
   \   00000118   F0BC               POP      {R4-R7}
   \   0000011A   01BC               POP      {R0}
   \   0000011C   0047               BX       R0               ;; return
   \                     ??TextChange_Evant_2:
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   0120               MOVS     R0,#+1
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   7F21               MOVS     R1,#+127
   \   00000126   03B4               PUSH     {R0,R1}
   \   00000128   0B21               MOVS     R1,#+11
   \   0000012A   03B4               PUSH     {R0,R1}
   \   0000012C   0423               MOVS     R3,#+4
   \   0000012E   1222               MOVS     R2,#+18
   \   00000130   0221               MOVS     R1,#+2
   \   00000132   6DA0               ADR      R0,??TextChange_Evant_0+0x24  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000134   ........           BL       Label
   \   00000138   06B0               ADD      SP,SP,#+24
   \   0000013A   6848               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   0000013C   0021               MOVS     R1,#+0
   \   0000013E   405E               LDRSH    R0,[R0, R1]
   \   00000140   0428               CMP      R0,#+4
   \   00000142   0ADB               BLT      ??TextChange_Evant_11
   \   00000144   3E28               CMP      R0,#+62
   \   00000146   08DA               BGE      ??TextChange_Evant_11
   \   00000148   6548               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   0000014A   405E               LDRSH    R0,[R0, R1]
   \   0000014C   0528               CMP      R0,#+5
   \   0000014E   04DB               BLT      ??TextChange_Evant_11
   \   00000150   6C28               CMP      R0,#+108
   \   00000152   02DA               BGE      ??TextChange_Evant_11
   \   00000154   6846               MOV      R0,SP
   \   00000156   0121               MOVS     R1,#+1
   \   00000158   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_11:
   \   0000015A   0025               MOVS     R5,#+0
   \   0000015C   2C00               MOVS     R4,R5
   \   0000015E   41E0               B        ??TextChange_Evant_12
   \                     ??TextChange_Evant_13:
   \   00000160   2600               MOVS     R6,R4
   \   00000162   0F20               MOVS     R0,#+15
   \   00000164   4643               MULS     R6,R0,R6
   \   00000166   3700               MOVS     R7,R6
   \   00000168   FF1C               ADDS     R7,R7,#+3
   \   0000016A   5648               LDR      R0,??TextChange_Evant_0  ;; X_down
   \   0000016C   0021               MOVS     R1,#+0
   \   0000016E   415E               LDRSH    R1,[R0, R1]
   \   00000170   8F42               CMP      R7,R1
   \   00000172   15DA               BGE      ??TextChange_Evant_14
   \   00000174   3000               MOVS     R0,R6
   \   00000176   1230               ADDS     R0,R0,#+18
   \   00000178   8142               CMP      R1,R0
   \   0000017A   11DA               BGE      ??TextChange_Evant_14
   \   0000017C   5248               LDR      R0,??TextChange_Evant_0+0x4  ;; Y_down
   \   0000017E   0021               MOVS     R1,#+0
   \   00000180   405E               LDRSH    R0,[R0, R1]
   \   00000182   0528               CMP      R0,#+5
   \   00000184   0CDB               BLT      ??TextChange_Evant_14
   \   00000186   0D28               CMP      R0,#+13
   \   00000188   0ADA               BGE      ??TextChange_Evant_14
   \   0000018A   ........           BL       MenuPaint
   \   0000018E   0B23               MOVS     R3,#+11
   \   00000190   0E22               MOVS     R2,#+14
   \   00000192   0321               MOVS     R1,#+3
   \   00000194   3000               MOVS     R0,R6
   \   00000196   801C               ADDS     R0,R0,#+2
   \   00000198   0006               LSLS     R0,R0,#+24
   \   0000019A   000E               LSRS     R0,R0,#+24
   \   0000019C   ........           BL       Rectangle
   \                     ??TextChange_Evant_14:
   \   000001A0   4E48               LDR      R0,??TextChange_Evant_0+0x18  ;; X_up
   \   000001A2   0021               MOVS     R1,#+0
   \   000001A4   405E               LDRSH    R0,[R0, R1]
   \   000001A6   8742               CMP      R7,R0
   \   000001A8   19DA               BGE      ??TextChange_Evant_15
   \   000001AA   1236               ADDS     R6,R6,#+18
   \   000001AC   B042               CMP      R0,R6
   \   000001AE   16DA               BGE      ??TextChange_Evant_15
   \   000001B0   4B48               LDR      R0,??TextChange_Evant_0+0x1C  ;; Y_up
   \   000001B2   405E               LDRSH    R0,[R0, R1]
   \   000001B4   0528               CMP      R0,#+5
   \   000001B6   12DB               BLT      ??TextChange_Evant_15
   \   000001B8   0D28               CMP      R0,#+13
   \   000001BA   10DA               BGE      ??TextChange_Evant_15
   \   000001BC   2500               MOVS     R5,R4
   \   000001BE   6D1C               ADDS     R5,R5,#+1
   \   000001C0   2D06               LSLS     R5,R5,#+24
   \   000001C2   2D0E               LSRS     R5,R5,#+24
   \   000001C4   4148               LDR      R0,??TextChange_Evant_0+0x8  ;; 0x13d7e9
   \   000001C6   0078               LDRB     R0,[R0, #+0]
   \   000001C8   0028               CMP      R0,#+0
   \   000001CA   08D1               BNE      ??TextChange_Evant_15
   \   000001CC   4048               LDR      R0,??TextChange_Evant_0+0xC  ;; 0xfffff430
   \   000001CE   0160               STR      R1,[R0, #+0]
   \   000001D0   404A               LDR      R2,??TextChange_Evant_0+0x10  ;; ButtonBipCounter
   \   000001D2   4148               LDR      R0,??TextChange_Evant_0+0x14  ;; g_counter
   \   000001D4   03C8               LDM      R0!,{R0,R1}
   \   000001D6   0023               MOVS     R3,#+0
   \   000001D8   0830               ADDS     R0,R0,#+8
   \   000001DA   5941               ADCS     R1,R1,R3
   \   000001DC   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_15:
   \   000001DE   641C               ADDS     R4,R4,#+1
   \   000001E0   2406               LSLS     R4,R4,#+24
   \   000001E2   240E               LSRS     R4,R4,#+24
   \                     ??TextChange_Evant_12:
   \   000001E4   2000               MOVS     R0,R4
   \   000001E6   0428               CMP      R0,#+4
   \   000001E8   BAD3               BCC      ??TextChange_Evant_13
   \   000001EA   0020               MOVS     R0,#+0
   \   000001EC   02E0               B        ??TextChange_Evant_16
   \                     ??TextChange_Evant_17:
   \   000001EE   401C               ADDS     R0,R0,#+1
   \   000001F0   0006               LSLS     R0,R0,#+24
   \   000001F2   000E               LSRS     R0,R0,#+24
   \                     ??TextChange_Evant_16:
   \   000001F4   0100               MOVS     R1,R0
   \   000001F6   079A               LDR      R2,[SP, #+28]
   \   000001F8   1278               LDRB     R2,[R2, #+0]
   \   000001FA   9142               CMP      R1,R2
   \   000001FC   03D2               BCS      ??TextChange_Evant_18
   \   000001FE   069A               LDR      R2,[SP, #+24]
   \   00000200   515C               LDRB     R1,[R2, R1]
   \   00000202   0029               CMP      R1,#+0
   \   00000204   F3D1               BNE      ??TextChange_Evant_17
   \                     ??TextChange_Evant_18:
   \   00000206   2900               MOVS     R1,R5
   \   00000208   0129               CMP      R1,#+1
   \   0000020A   1DD1               BNE      ??TextChange_Evant_19
   \   0000020C   354C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   0000020E   217F               LDRB     R1,[R4, #+28]
   \   00000210   0029               CMP      R1,#+0
   \   00000212   19D0               BEQ      ??TextChange_Evant_19
   \   00000214   07E0               B        ??TextChange_Evant_20
   \                     ??TextChange_Evant_21:
   \   00000216   069B               LDR      R3,[SP, #+24]
   \   00000218   9A18               ADDS     R2,R3,R2
   \   0000021A   531E               SUBS     R3,R2,#+1
   \   0000021C   1278               LDRB     R2,[R2, #+0]
   \   0000021E   1A70               STRB     R2,[R3, #+0]
   \   00000220   491C               ADDS     R1,R1,#+1
   \   00000222   0906               LSLS     R1,R1,#+24
   \   00000224   090E               LSRS     R1,R1,#+24
   \                     ??TextChange_Evant_20:
   \   00000226   0A00               MOVS     R2,R1
   \   00000228   0300               MOVS     R3,R0
   \   0000022A   9A42               CMP      R2,R3
   \   0000022C   F3D3               BCC      ??TextChange_Evant_21
   \   0000022E   217F               LDRB     R1,[R4, #+28]
   \   00000230   491E               SUBS     R1,R1,#+1
   \   00000232   2177               STRB     R1,[R4, #+28]
   \   00000234   401E               SUBS     R0,R0,#+1
   \   00000236   0006               LSLS     R0,R0,#+24
   \   00000238   000E               LSRS     R0,R0,#+24
   \   0000023A   0100               MOVS     R1,R0
   \   0000023C   069A               LDR      R2,[SP, #+24]
   \   0000023E   0023               MOVS     R3,#+0
   \   00000240   5354               STRB     R3,[R2, R1]
   \   00000242   6946               MOV      R1,SP
   \   00000244   0122               MOVS     R2,#+1
   \   00000246   0A70               STRB     R2,[R1, #+0]
   \                     ??TextChange_Evant_19:
   \   00000248   2900               MOVS     R1,R5
   \   0000024A   0229               CMP      R1,#+2
   \   0000024C   08D1               BNE      ??TextChange_Evant_22
   \   0000024E   254C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   00000250   217F               LDRB     R1,[R4, #+28]
   \   00000252   0029               CMP      R1,#+0
   \   00000254   01D0               BEQ      ??TextChange_Evant_23
   \   00000256   491E               SUBS     R1,R1,#+1
   \   00000258   2177               STRB     R1,[R4, #+28]
   \                     ??TextChange_Evant_23:
   \   0000025A   6946               MOV      R1,SP
   \   0000025C   0122               MOVS     R2,#+1
   \   0000025E   0A70               STRB     R2,[R1, #+0]
   \                     ??TextChange_Evant_22:
   \   00000260   2900               MOVS     R1,R5
   \   00000262   0329               CMP      R1,#+3
   \   00000264   08D1               BNE      ??TextChange_Evant_24
   \   00000266   1F4C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   00000268   217F               LDRB     R1,[R4, #+28]
   \   0000026A   8142               CMP      R1,R0
   \   0000026C   01D2               BCS      ??TextChange_Evant_25
   \   0000026E   491C               ADDS     R1,R1,#+1
   \   00000270   2177               STRB     R1,[R4, #+28]
   \                     ??TextChange_Evant_25:
   \   00000272   6846               MOV      R0,SP
   \   00000274   0121               MOVS     R1,#+1
   \   00000276   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_24:
   \   00000278   042D               CMP      R5,#+4
   \   0000027A   0BD1               BNE      ??TextChange_Evant_26
   \   0000027C   194C               LDR      R4,??TextChange_Evant_0+0x20  ;; TextToChangeLength
   \   0000027E   607F               LDRB     R0,[R4, #+29]
   \   00000280   0228               CMP      R0,#+2
   \   00000282   02D2               BCS      ??TextChange_Evant_27
   \   00000284   401C               ADDS     R0,R0,#+1
   \   00000286   6077               STRB     R0,[R4, #+29]
   \   00000288   01E0               B        ??TextChange_Evant_28
   \                     ??TextChange_Evant_27:
   \   0000028A   0020               MOVS     R0,#+0
   \   0000028C   6077               STRB     R0,[R4, #+29]
   \                     ??TextChange_Evant_28:
   \   0000028E   6846               MOV      R0,SP
   \   00000290   0121               MOVS     R1,#+1
   \   00000292   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_26:
   \   00000294   0020               MOVS     R0,#+0
   \   00000296   0490               STR      R0,[SP, #+16]
   \   00000298   0590               STR      R0,[SP, #+20]
   \   0000029A   09E0               B        ??TextChange_Evant_29
   \                     ??TextChange_Evant_30:
   \   0000029C   0198               LDR      R0,[SP, #+4]
   \   0000029E   0E38               SUBS     R0,R0,#+14
   \   000002A0   0006               LSLS     R0,R0,#+24
   \   000002A2   000E               LSRS     R0,R0,#+24
   \   000002A4   0190               STR      R0,[SP, #+4]
   \   000002A6   0598               LDR      R0,[SP, #+20]
   \   000002A8   401C               ADDS     R0,R0,#+1
   \   000002AA   0006               LSLS     R0,R0,#+24
   \   000002AC   000E               LSRS     R0,R0,#+24
   \   000002AE   0590               STR      R0,[SP, #+20]
   \                     ??TextChange_Evant_29:
   \   000002B0   0598               LDR      R0,[SP, #+20]
   \   000002B2   0006               LSLS     R0,R0,#+24
   \   000002B4   000E               LSRS     R0,R0,#+24
   \   000002B6   0628               CMP      R0,#+6
   \   000002B8   00D3               BCC      .+4
   \   000002BA   26E7               B        ??TextChange_Evant_9
   \   000002BC   0020               MOVS     R0,#+0
   \   000002BE   0390               STR      R0,[SP, #+12]
   \   000002C0   32E0               B        ??TextChange_Evant_31
   \   000002C2   C046               Nop      
   \                     ??TextChange_Evant_0:
   \   000002C4   ........           DC32     X_down
   \   000002C8   ........           DC32     Y_down
   \   000002CC   E9D71300           DC32     0x13d7e9
   \   000002D0   30F4FFFF           DC32     0xfffff430
   \   000002D4   ........           DC32     ButtonBipCounter
   \   000002D8   ........           DC32     g_counter
   \   000002DC   ........           DC32     X_up
   \   000002E0   ........           DC32     Y_up
   \   000002E4   ........           DC32     TextToChangeLength
   \   000002E8   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \                     ??TextChange_Evant_32:
   \   000002EC   217F               LDRB     R1,[R4, #+28]
   \   000002EE   069A               LDR      R2,[SP, #+24]
   \   000002F0   515C               LDRB     R1,[R2, R1]
   \   000002F2   0200               MOVS     R2,R0
   \   000002F4   684B               LDR      R3,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   000002F6   9A18               ADDS     R2,R3,R2
   \   000002F8   127F               LDRB     R2,[R2, #+28]
   \   000002FA   9142               CMP      R1,R2
   \   000002FC   01D1               BNE      ??TextChange_Evant_34
   \   000002FE   0121               MOVS     R1,#+1
   \   00000300   6177               STRB     R1,[R4, #+29]
   \                     ??TextChange_Evant_34:
   \   00000302   401C               ADDS     R0,R0,#+1
   \   00000304   0006               LSLS     R0,R0,#+24
   \   00000306   000E               LSRS     R0,R0,#+24
   \                     ??TextChange_Evant_35:
   \   00000308   0100               MOVS     R1,R0
   \   0000030A   1829               CMP      R1,#+24
   \   0000030C   EED3               BCC      ??TextChange_Evant_32
   \   0000030E   6846               MOV      R0,SP
   \   00000310   0121               MOVS     R1,#+1
   \   00000312   0170               STRB     R1,[R0, #+0]
   \                     ??TextChange_Evant_36:
   \   00000314   0498               LDR      R0,[SP, #+16]
   \   00000316   401C               ADDS     R0,R0,#+1
   \   00000318   0006               LSLS     R0,R0,#+24
   \   0000031A   000E               LSRS     R0,R0,#+24
   \   0000031C   0490               STR      R0,[SP, #+16]
   \                     ??TextChange_Evant_37:
   \   0000031E   0398               LDR      R0,[SP, #+12]
   \   00000320   401C               ADDS     R0,R0,#+1
   \   00000322   0006               LSLS     R0,R0,#+24
   \   00000324   000E               LSRS     R0,R0,#+24
   \   00000326   0390               STR      R0,[SP, #+12]
   \                     ??TextChange_Evant_31:
   \   00000328   0398               LDR      R0,[SP, #+12]
   \   0000032A   0006               LSLS     R0,R0,#+24
   \   0000032C   000E               LSRS     R0,R0,#+24
   \   0000032E   0428               CMP      R0,#+4
   \   00000330   B4D2               BCS      ??TextChange_Evant_30
   \   00000332   0498               LDR      R0,[SP, #+16]
   \   00000334   0006               LSLS     R0,R0,#+24
   \   00000336   000E               LSRS     R0,R0,#+24
   \   00000338   0290               STR      R0,[SP, #+8]
   \   0000033A   584C               LDR      R4,??TextChange_Evant_33+0x4  ;; TextToChangeLength
   \   0000033C   617F               LDRB     R1,[R4, #+29]
   \   0000033E   1822               MOVS     R2,#+24
   \   00000340   5143               MULS     R1,R2,R1
   \   00000342   554A               LDR      R2,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   00000344   5118               ADDS     R1,R2,R1
   \   00000346   0818               ADDS     R0,R1,R0
   \   00000348   0079               LDRB     R0,[R0, #+4]
   \   0000034A   0028               CMP      R0,#+0
   \   0000034C   E7D0               BEQ      ??TextChange_Evant_37
   \   0000034E   039D               LDR      R5,[SP, #+12]
   \   00000350   2D06               LSLS     R5,R5,#+24
   \   00000352   2D0E               LSRS     R5,R5,#+24
   \   00000354   0F20               MOVS     R0,#+15
   \   00000356   4543               MULS     R5,R0,R5
   \   00000358   2E00               MOVS     R6,R5
   \   0000035A   F61C               ADDS     R6,R6,#+3
   \   0000035C   5048               LDR      R0,??TextChange_Evant_33+0x8  ;; X_down
   \   0000035E   0021               MOVS     R1,#+0
   \   00000360   415E               LDRSH    R1,[R0, R1]
   \   00000362   8E42               CMP      R6,R1
   \   00000364   2EDA               BGE      ??TextChange_Evant_38
   \   00000366   2800               MOVS     R0,R5
   \   00000368   1230               ADDS     R0,R0,#+18
   \   0000036A   8142               CMP      R1,R0
   \   0000036C   2ADA               BGE      ??TextChange_Evant_38
   \   0000036E   4D48               LDR      R0,??TextChange_Evant_33+0xC  ;; Y_down
   \   00000370   0021               MOVS     R1,#+0
   \   00000372   415E               LDRSH    R1,[R0, R1]
   \   00000374   0198               LDR      R0,[SP, #+4]
   \   00000376   0006               LSLS     R0,R0,#+24
   \   00000378   000E               LSRS     R0,R0,#+24
   \   0000037A   8842               CMP      R0,R1
   \   0000037C   22DA               BGE      ??TextChange_Evant_38
   \   0000037E   019F               LDR      R7,[SP, #+4]
   \   00000380   3F06               LSLS     R7,R7,#+24
   \   00000382   3F0E               LSRS     R7,R7,#+24
   \   00000384   3800               MOVS     R0,R7
   \   00000386   0D30               ADDS     R0,R0,#+13
   \   00000388   8142               CMP      R1,R0
   \   0000038A   1BDA               BGE      ??TextChange_Evant_38
   \   0000038C   ........           BL       MenuPaint
   \   00000390   82B0               SUB      SP,SP,#+8
   \   00000392   0120               MOVS     R0,#+1
   \   00000394   0090               STR      R0,[SP, #+0]
   \   00000396   7F21               MOVS     R1,#+127
   \   00000398   03B4               PUSH     {R0,R1}
   \   0000039A   0B21               MOVS     R1,#+11
   \   0000039C   03B4               PUSH     {R0,R1}
   \   0000039E   BF1C               ADDS     R7,R7,#+2
   \   000003A0   3B00               MOVS     R3,R7
   \   000003A2   3200               MOVS     R2,R6
   \   000003A4   1206               LSLS     R2,R2,#+24
   \   000003A6   120E               LSRS     R2,R2,#+24
   \   000003A8   0221               MOVS     R1,#+2
   \   000003AA   8C46               MOV      R12,R1
   \   000003AC   0899               LDR      R1,[SP, #+32]
   \   000003AE   607F               LDRB     R0,[R4, #+29]
   \   000003B0   1827               MOVS     R7,#+24
   \   000003B2   7843               MULS     R0,R7,R0
   \   000003B4   384F               LDR      R7,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   000003B6   3818               ADDS     R0,R7,R0
   \   000003B8   4018               ADDS     R0,R0,R1
   \   000003BA   001D               ADDS     R0,R0,#+4
   \   000003BC   6146               MOV      R1,R12
   \   000003BE   ........           BL       Label
   \   000003C2   06B0               ADD      SP,SP,#+24
   \                     ??TextChange_Evant_38:
   \   000003C4   3848               LDR      R0,??TextChange_Evant_33+0x10  ;; X_up
   \   000003C6   0021               MOVS     R1,#+0
   \   000003C8   405E               LDRSH    R0,[R0, R1]
   \   000003CA   8642               CMP      R6,R0
   \   000003CC   A2DA               BGE      ??TextChange_Evant_36
   \   000003CE   1235               ADDS     R5,R5,#+18
   \   000003D0   A842               CMP      R0,R5
   \   000003D2   9FDA               BGE      ??TextChange_Evant_36
   \   000003D4   3548               LDR      R0,??TextChange_Evant_33+0x14  ;; Y_up
   \   000003D6   405E               LDRSH    R0,[R0, R1]
   \   000003D8   0199               LDR      R1,[SP, #+4]
   \   000003DA   0906               LSLS     R1,R1,#+24
   \   000003DC   090E               LSRS     R1,R1,#+24
   \   000003DE   8142               CMP      R1,R0
   \   000003E0   98DA               BGE      ??TextChange_Evant_36
   \   000003E2   0199               LDR      R1,[SP, #+4]
   \   000003E4   0906               LSLS     R1,R1,#+24
   \   000003E6   090E               LSRS     R1,R1,#+24
   \   000003E8   0D31               ADDS     R1,R1,#+13
   \   000003EA   8842               CMP      R0,R1
   \   000003EC   92DA               BGE      ??TextChange_Evant_36
   \   000003EE   304D               LDR      R5,??TextChange_Evant_33+0x18  ;; 0x13d7e9
   \   000003F0   2878               LDRB     R0,[R5, #+0]
   \   000003F2   0028               CMP      R0,#+0
   \   000003F4   09D1               BNE      ??TextChange_Evant_39
   \   000003F6   2F48               LDR      R0,??TextChange_Evant_33+0x1C  ;; 0xfffff430
   \   000003F8   0021               MOVS     R1,#+0
   \   000003FA   0160               STR      R1,[R0, #+0]
   \   000003FC   2E4A               LDR      R2,??TextChange_Evant_33+0x20  ;; ButtonBipCounter
   \   000003FE   2F48               LDR      R0,??TextChange_Evant_33+0x24  ;; g_counter
   \   00000400   03C8               LDM      R0!,{R0,R1}
   \   00000402   0023               MOVS     R3,#+0
   \   00000404   0830               ADDS     R0,R0,#+8
   \   00000406   5941               ADCS     R1,R1,R3
   \   00000408   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_39:
   \   0000040A   207F               LDRB     R0,[R4, #+28]
   \   0000040C   0799               LDR      R1,[SP, #+28]
   \   0000040E   0978               LDRB     R1,[R1, #+0]
   \   00000410   8842               CMP      R0,R1
   \   00000412   31D2               BCS      ??TextChange_Evant_40
   \   00000414   0898               LDR      R0,[SP, #+32]
   \   00000416   0078               LDRB     R0,[R0, #+0]
   \   00000418   0028               CMP      R0,#+0
   \   0000041A   13D0               BEQ      ??TextChange_Evant_41
   \   0000041C   0698               LDR      R0,[SP, #+24]
   \   0000041E   ........           BL       LabelLength
   \   00000422   0600               MOVS     R6,R0
   \   00000424   0121               MOVS     R1,#+1
   \   00000426   0298               LDR      R0,[SP, #+8]
   \   00000428   627F               LDRB     R2,[R4, #+29]
   \   0000042A   1823               MOVS     R3,#+24
   \   0000042C   5A43               MULS     R2,R3,R2
   \   0000042E   1A4B               LDR      R3,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   00000430   9A18               ADDS     R2,R3,R2
   \   00000432   1018               ADDS     R0,R2,R0
   \   00000434   001D               ADDS     R0,R0,#+4
   \   00000436   ........           BL       LabelLength
   \   0000043A   3018               ADDS     R0,R6,R0
   \   0000043C   0899               LDR      R1,[SP, #+32]
   \   0000043E   0978               LDRB     R1,[R1, #+0]
   \   00000440   8842               CMP      R0,R1
   \   00000442   19DA               BGE      ??TextChange_Evant_40
   \                     ??TextChange_Evant_41:
   \   00000444   207F               LDRB     R0,[R4, #+28]
   \   00000446   0699               LDR      R1,[SP, #+24]
   \   00000448   029A               LDR      R2,[SP, #+8]
   \   0000044A   637F               LDRB     R3,[R4, #+29]
   \   0000044C   1825               MOVS     R5,#+24
   \   0000044E   6B43               MULS     R3,R5,R3
   \   00000450   114D               LDR      R5,??TextChange_Evant_33  ;; `?<Constant {0, 0}>`
   \   00000452   EB18               ADDS     R3,R5,R3
   \   00000454   9A18               ADDS     R2,R3,R2
   \   00000456   1279               LDRB     R2,[R2, #+4]
   \   00000458   0A54               STRB     R2,[R1, R0]
   \   0000045A   207F               LDRB     R0,[R4, #+28]
   \   0000045C   401C               ADDS     R0,R0,#+1
   \   0000045E   2077               STRB     R0,[R4, #+28]
   \   00000460   0006               LSLS     R0,R0,#+24
   \   00000462   000E               LSRS     R0,R0,#+24
   \   00000464   0128               CMP      R0,#+1
   \   00000466   14D1               BNE      ??TextChange_Evant_42
   \   00000468   0698               LDR      R0,[SP, #+24]
   \   0000046A   4078               LDRB     R0,[R0, #+1]
   \   0000046C   617F               LDRB     R1,[R4, #+29]
   \   0000046E   0143               ORRS     R1,R1,R0
   \   00000470   0FD1               BNE      ??TextChange_Evant_42
   \   00000472   0120               MOVS     R0,#+1
   \   00000474   6077               STRB     R0,[R4, #+29]
   \   00000476   0CE0               B        ??TextChange_Evant_42
   \                     ??TextChange_Evant_40:
   \   00000478   2878               LDRB     R0,[R5, #+0]
   \   0000047A   0028               CMP      R0,#+0
   \   0000047C   09D1               BNE      ??TextChange_Evant_42
   \   0000047E   0D48               LDR      R0,??TextChange_Evant_33+0x1C  ;; 0xfffff430
   \   00000480   0021               MOVS     R1,#+0
   \   00000482   0160               STR      R1,[R0, #+0]
   \   00000484   0C4A               LDR      R2,??TextChange_Evant_33+0x20  ;; ButtonBipCounter
   \   00000486   0D48               LDR      R0,??TextChange_Evant_33+0x24  ;; g_counter
   \   00000488   03C8               LDM      R0!,{R0,R1}
   \   0000048A   0023               MOVS     R3,#+0
   \   0000048C   C830               ADDS     R0,R0,#+200
   \   0000048E   5941               ADCS     R1,R1,R3
   \   00000490   03C2               STM      R2!,{R0,R1}
   \                     ??TextChange_Evant_42:
   \   00000492   0020               MOVS     R0,#+0
   \   00000494   38E7               B        ??TextChange_Evant_35
   \   00000496   C046               Nop      
   \                     ??TextChange_Evant_33:
   \   00000498   ........           DC32     `?<Constant {0, 0}>`
   \   0000049C   ........           DC32     TextToChangeLength
   \   000004A0   ........           DC32     X_down
   \   000004A4   ........           DC32     Y_down
   \   000004A8   ........           DC32     X_up
   \   000004AC   ........           DC32     Y_up
   \   000004B0   E9D71300           DC32     0x13d7e9
   \   000004B4   30F4FFFF           DC32     0xfffff430
   \   000004B8   ........           DC32     ButtonBipCounter
   \   000004BC   ........           DC32     g_counter
   5788          
   5789          
   5790          
   5791          
   5792          
   5793          

   \                                 In section Debug.txt, align 4, keep-with-next
   5794          void AnalogGraph_Paint(_Analog *Anal)
   5795                {  
   \                     AnalogGraph_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   86B0               SUB      SP,SP,#+24
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   7EA0               ADR      R0,??AnalogGraph_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   7B48               LDR      R0,??AnalogGraph_Paint_0+0x4  ;; `?<Constant {0, 0}>` + 140
   5796                  
   5797                  List_Paint("Analog ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   5798                  char txt[8];
   5799                  
   5800                  Button("<>",24,96,15,11);
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0B20               MOVS     R0,#+11
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   0F23               MOVS     R3,#+15
   \   0000002E   6022               MOVS     R2,#+96
   \   00000030   1821               MOVS     R1,#+24
   \   00000032   77A0               ADR      R0,??AnalogGraph_Paint_0+0x8  ;; 0x3C, 0x3E, 0x00, 0x00
   \   00000034   ........           BL       Button
   \   00000038   02B0               ADD      SP,SP,#+8
   5801                  
   5802                  char Tp=0;
   \   0000003A   0024               MOVS     R4,#+0
   \   0000003C   2500               MOVS     R5,R4
   5803                  char Tb=4;
   \   0000003E   6846               MOV      R0,SP
   \   00000040   0421               MOVS     R1,#+4
   \   00000042   0175               STRB     R1,[R0, #+20]
   5804                  char Tk=0;
   \   00000044   0494               STR      R4,[SP, #+16]
   5805                  char Ap=32;
   \   00000046   2020               MOVS     R0,#+32
   \   00000048   0600               MOVS     R6,R0
   5806                  char Ab=32;
   \   0000004A   0090               STR      R0,[SP, #+0]
   5807                  char Ak=32;
   \   0000004C   0390               STR      R0,[SP, #+12]
   5808                  
   5809                  if (Anal->Flip)
   \   0000004E   0699               LDR      R1,[SP, #+24]
   \   00000050   8979               LDRB     R1,[R1, #+6]
   \   00000052   0029               CMP      R1,#+0
   \   00000054   0AD0               BEQ      ??AnalogGraph_Paint_1
   5810                  {
   5811                     Tp=32;
   \   00000056   0500               MOVS     R5,R0
   5812                     Tb=33;
   \   00000058   6846               MOV      R0,SP
   \   0000005A   2121               MOVS     R1,#+33
   \   0000005C   0175               STRB     R1,[R0, #+20]
   5813                     Tk=29;
   \   0000005E   1D20               MOVS     R0,#+29
   \   00000060   0490               STR      R0,[SP, #+16]
   5814                     Ap=0;
   \   00000062   2600               MOVS     R6,R4
   5815                     Ab=1;
   \   00000064   0120               MOVS     R0,#+1
   \   00000066   0090               STR      R0,[SP, #+0]
   5816                     Ak=6;
   \   00000068   0620               MOVS     R0,#+6
   \   0000006A   0390               STR      R0,[SP, #+12]
   5817                  }
   5818                  
   5819                  V_line(31,10,85,1); 
   \                     ??AnalogGraph_Paint_1:
   \   0000006C   0123               MOVS     R3,#+1
   \   0000006E   5522               MOVS     R2,#+85
   \   00000070   0A21               MOVS     R1,#+10
   \   00000072   1F20               MOVS     R0,#+31
   \   00000074   ........           BL       V_line
   5820                  
   5821                  Label("Text "  ,2,Tp+2 ,86,4,27,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000078   82B0               SUB      SP,SP,#+8
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   7F21               MOVS     R1,#+127
   \   00000080   0120               MOVS     R0,#+1
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   1B21               MOVS     R1,#+27
   \   00000086   0420               MOVS     R0,#+4
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   5623               MOVS     R3,#+86
   \   0000008C   AD1C               ADDS     R5,R5,#+2
   \   0000008E   2A00               MOVS     R2,R5
   \   00000090   1206               LSLS     R2,R2,#+24
   \   00000092   120E               LSRS     R2,R2,#+24
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   D148               LDR      R0,??AnalogGraph_Paint_2  ;; `?<Constant {0, 0}>` + 132
   \   00000098   ........           BL       Label
   \   0000009C   06B0               ADD      SP,SP,#+24
   5822                  Label("Analog",2,Ap+1,86,7,27,1,127,0); 
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   2000               MOVS     R0,R4
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   7F21               MOVS     R1,#+127
   \   000000A6   0120               MOVS     R0,#+1
   \   000000A8   03B4               PUSH     {R0,R1}
   \   000000AA   1B21               MOVS     R1,#+27
   \   000000AC   0720               MOVS     R0,#+7
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   5623               MOVS     R3,#+86
   \   000000B2   761C               ADDS     R6,R6,#+1
   \   000000B4   3200               MOVS     R2,R6
   \   000000B6   1206               LSLS     R2,R2,#+24
   \   000000B8   120E               LSRS     R2,R2,#+24
   \   000000BA   0221               MOVS     R1,#+2
   \   000000BC   C848               LDR      R0,??AnalogGraph_Paint_2+0x4  ;; `?<Constant {0, 0}>` + 148
   \   000000BE   ........           BL       Label
   \   000000C2   06B0               ADD      SP,SP,#+24
   5823                  
   5824                  char LastChar=0;
   \   000000C4   2500               MOVS     R5,R4
   5825                  char SumOfPixel=1;
   \   000000C6   0126               MOVS     R6,#+1
   5826                  for (char i=0; i<3; i++) if ((Anal->Text[i]>=30) && (Anal->Text[i]!=' ')) 
   \   000000C8   2000               MOVS     R0,R4
   \   000000CA   17E0               B        ??AnalogGraph_Paint_3
   \                     ??AnalogGraph_Paint_4:
   \   000000CC   069A               LDR      R2,[SP, #+24]
   \   000000CE   5118               ADDS     R1,R2,R1
   \   000000D0   4A78               LDRB     R2,[R1, #+1]
   \   000000D2   1E2A               CMP      R2,#+30
   \   000000D4   0FD3               BCC      ??AnalogGraph_Paint_5
   \   000000D6   202A               CMP      R2,#+32
   \   000000D8   0DD0               BEQ      ??AnalogGraph_Paint_5
   5827                  {
   5828                    LastChar=i+1;
   \   000000DA   0500               MOVS     R5,R0
   \   000000DC   6D1C               ADDS     R5,R5,#+1
   \   000000DE   2D06               LSLS     R5,R5,#+24
   \   000000E0   2D0E               LSRS     R5,R5,#+24
   5829                    SumOfPixel+= Arial_7[Anal->Text[i]-30][0]; 
   \   000000E2   C04A               LDR      R2,??AnalogGraph_Paint_2+0x8  ;; 0xfffffed4
   \   000000E4   4978               LDRB     R1,[R1, #+1]
   \   000000E6   0A23               MOVS     R3,#+10
   \   000000E8   5943               MULS     R1,R3,R1
   \   000000EA   BF4B               LDR      R3,??AnalogGraph_Paint_2+0xC  ;; Arial_7
   \   000000EC   5918               ADDS     R1,R3,R1
   \   000000EE   895C               LDRB     R1,[R1, R2]
   \   000000F0   7618               ADDS     R6,R6,R1
   \   000000F2   3606               LSLS     R6,R6,#+24
   \   000000F4   360E               LSRS     R6,R6,#+24
   5830                  }
   \                     ??AnalogGraph_Paint_5:
   \   000000F6   401C               ADDS     R0,R0,#+1
   \   000000F8   0006               LSLS     R0,R0,#+24
   \   000000FA   000E               LSRS     R0,R0,#+24
   \                     ??AnalogGraph_Paint_3:
   \   000000FC   0100               MOVS     R1,R0
   \   000000FE   0329               CMP      R1,#+3
   \   00000100   E4D3               BCC      ??AnalogGraph_Paint_4
   5831                  
   5832                  
   5833                  H_line(Tk+3,70,27,2); 
   \   00000102   049F               LDR      R7,[SP, #+16]
   \   00000104   FF1C               ADDS     R7,R7,#+3
   \   00000106   0223               MOVS     R3,#+2
   \   00000108   1B22               MOVS     R2,#+27
   \   0000010A   4621               MOVS     R1,#+70
   \   0000010C   3800               MOVS     R0,R7
   \   0000010E   0006               LSLS     R0,R0,#+24
   \   00000110   000E               LSRS     R0,R0,#+24
   \   00000112   ........           BL       H_line
   5834                  H_line(Tk+3,80,27,2); 
   \   00000116   0223               MOVS     R3,#+2
   \   00000118   1B22               MOVS     R2,#+27
   \   0000011A   5021               MOVS     R1,#+80
   \   0000011C   3800               MOVS     R0,R7
   \   0000011E   0006               LSLS     R0,R0,#+24
   \   00000120   000E               LSRS     R0,R0,#+24
   \   00000122   ........           BL       H_line
   5835                  for (char i=0; i<=3; i++) V_line((Tk+30)-9*i,70,10,2);  
   \   00000126   2700               MOVS     R7,R4
   \   00000128   16E0               B        ??AnalogGraph_Paint_6
   \                     ??AnalogGraph_Paint_7:
   \   0000012A   0223               MOVS     R3,#+2
   \   0000012C   0A22               MOVS     R2,#+10
   \   0000012E   4621               MOVS     R1,#+70
   \   00000130   02B5               PUSH     {R1,LR}
   \   00000132   0698               LDR      R0,[SP, #+24]
   \   00000134   0006               LSLS     R0,R0,#+24
   \   00000136   000E               LSRS     R0,R0,#+24
   \   00000138   1E30               ADDS     R0,R0,#+30
   \   0000013A   8446               MOV      R12,R0
   \   0000013C   3900               MOVS     R1,R7
   \   0000013E   0920               MOVS     R0,#+9
   \   00000140   4143               MULS     R1,R0,R1
   \   00000142   6046               MOV      R0,R12
   \   00000144   401A               SUBS     R0,R0,R1
   \   00000146   0099               LDR      R1,[SP, #0]
   \   00000148   02B0               ADD      SP,SP,#+8
   \   0000014A   0006               LSLS     R0,R0,#+24
   \   0000014C   000E               LSRS     R0,R0,#+24
   \   0000014E   ........           BL       V_line
   \   00000152   7F1C               ADDS     R7,R7,#+1
   \   00000154   3F06               LSLS     R7,R7,#+24
   \   00000156   3F0E               LSRS     R7,R7,#+24
   \                     ??AnalogGraph_Paint_6:
   \   00000158   3800               MOVS     R0,R7
   \   0000015A   0428               CMP      R0,#+4
   \   0000015C   E5D3               BCC      ??AnalogGraph_Paint_7
   5836                  for (char i=0; i<LastChar; i++) Label(&Anal->Text[i],2,(Tk+30)-((LastChar-i)*9),71,1,8,1,127,1); 
   \   0000015E   2700               MOVS     R7,R4
   \   00000160   1EE0               B        ??AnalogGraph_Paint_8
   \                     ??AnalogGraph_Paint_9:
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0120               MOVS     R0,#+1
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   7F21               MOVS     R1,#+127
   \   0000016A   03B4               PUSH     {R0,R1}
   \   0000016C   0821               MOVS     R1,#+8
   \   0000016E   03B4               PUSH     {R0,R1}
   \   00000170   4723               MOVS     R3,#+71
   \   00000172   0A98               LDR      R0,[SP, #+40]
   \   00000174   3900               MOVS     R1,R7
   \   00000176   2A00               MOVS     R2,R5
   \   00000178   891A               SUBS     R1,R1,R2
   \   0000017A   0922               MOVS     R2,#+9
   \   0000017C   5143               MULS     R1,R2,R1
   \   0000017E   4218               ADDS     R2,R0,R1
   \   00000180   1E32               ADDS     R2,R2,#+30
   \   00000182   1206               LSLS     R2,R2,#+24
   \   00000184   120E               LSRS     R2,R2,#+24
   \   00000186   0221               MOVS     R1,#+2
   \   00000188   8C46               MOV      R12,R1
   \   0000018A   3900               MOVS     R1,R7
   \   0000018C   0C98               LDR      R0,[SP, #+48]
   \   0000018E   4018               ADDS     R0,R0,R1
   \   00000190   401C               ADDS     R0,R0,#+1
   \   00000192   6146               MOV      R1,R12
   \   00000194   ........           BL       Label
   \   00000198   06B0               ADD      SP,SP,#+24
   \   0000019A   7F1C               ADDS     R7,R7,#+1
   \   0000019C   3F06               LSLS     R7,R7,#+24
   \   0000019E   3F0E               LSRS     R7,R7,#+24
   \                     ??AnalogGraph_Paint_8:
   \   000001A0   3800               MOVS     R0,R7
   \   000001A2   2900               MOVS     R1,R5
   \   000001A4   8842               CMP      R0,R1
   \   000001A6   DCD3               BCC      ??AnalogGraph_Paint_9
   5837          
   5838                  H_line(Ak,70,4*6,2); 
   \   000001A8   0223               MOVS     R3,#+2
   \   000001AA   1822               MOVS     R2,#+24
   \   000001AC   4621               MOVS     R1,#+70
   \   000001AE   0398               LDR      R0,[SP, #+12]
   \   000001B0   0006               LSLS     R0,R0,#+24
   \   000001B2   000E               LSRS     R0,R0,#+24
   \   000001B4   ........           BL       H_line
   5839                  H_line(Ak,80,4*6,2); 
   \   000001B8   0223               MOVS     R3,#+2
   \   000001BA   1822               MOVS     R2,#+24
   \   000001BC   5021               MOVS     R1,#+80
   \   000001BE   0398               LDR      R0,[SP, #+12]
   \   000001C0   0006               LSLS     R0,R0,#+24
   \   000001C2   000E               LSRS     R0,R0,#+24
   \   000001C4   ........           BL       H_line
   5840                  for (char i=0; i<=6; i++) V_line(Ak+4*i,70,11,2); 
   \   000001C8   2500               MOVS     R5,R4
   \   000001CA   0EE0               B        ??AnalogGraph_Paint_10
   \                     ??AnalogGraph_Paint_11:
   \   000001CC   0223               MOVS     R3,#+2
   \   000001CE   0B22               MOVS     R2,#+11
   \   000001D0   4621               MOVS     R1,#+70
   \   000001D2   0398               LDR      R0,[SP, #+12]
   \   000001D4   0006               LSLS     R0,R0,#+24
   \   000001D6   000E               LSRS     R0,R0,#+24
   \   000001D8   AF00               LSLS     R7,R5,#+2
   \   000001DA   C019               ADDS     R0,R0,R7
   \   000001DC   0006               LSLS     R0,R0,#+24
   \   000001DE   000E               LSRS     R0,R0,#+24
   \   000001E0   ........           BL       V_line
   \   000001E4   6D1C               ADDS     R5,R5,#+1
   \   000001E6   2D06               LSLS     R5,R5,#+24
   \   000001E8   2D0E               LSRS     R5,R5,#+24
   \                     ??AnalogGraph_Paint_10:
   \   000001EA   2800               MOVS     R0,R5
   \   000001EC   0728               CMP      R0,#+7
   \   000001EE   EDD3               BCC      ??AnalogGraph_Paint_11
   5841                  
   5842                  
   5843                  char LastPixel=29-SumOfPixel;
   5844                  char MaxCharTmp=LastPixel/4;
   \   000001F0   1D20               MOVS     R0,#+29
   \   000001F2   801B               SUBS     R0,R0,R6
   \   000001F4   0500               MOVS     R5,R0
   \   000001F6   2D06               LSLS     R5,R5,#+24
   \   000001F8   2D0E               LSRS     R5,R5,#+24
   \   000001FA   AD08               LSRS     R5,R5,#+2
   5845                  if (MaxCharTmp>6) MaxCharTmp=6;
   \   000001FC   2800               MOVS     R0,R5
   \   000001FE   0728               CMP      R0,#+7
   \   00000200   00D3               BCC      ??AnalogGraph_Paint_12
   \   00000202   0625               MOVS     R5,#+6
   5846                  for (char i=0; i<MaxCharTmp; i++)
   \                     ??AnalogGraph_Paint_12:
   \   00000204   2600               MOVS     R6,R4
   \   00000206   27E0               B        ??AnalogGraph_Paint_13
   \                     ??AnalogGraph_Paint_0:
   \   00000208   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000020C   ........           DC32     `?<Constant {0, 0}>` + 140
   \   00000210   3C3E0000           DC8      0x3C, 0x3E, 0x00, 0x00
   5847                  {
   5848                    V_line(Ak+4*i+1,71,9,1); 
   \                     ??AnalogGraph_Paint_14:
   \   00000214   0398               LDR      R0,[SP, #+12]
   \   00000216   3100               MOVS     R1,R6
   \   00000218   8900               LSLS     R1,R1,#+2
   \   0000021A   4718               ADDS     R7,R0,R1
   \   0000021C   0123               MOVS     R3,#+1
   \   0000021E   0922               MOVS     R2,#+9
   \   00000220   4721               MOVS     R1,#+71
   \   00000222   3800               MOVS     R0,R7
   \   00000224   401C               ADDS     R0,R0,#+1
   \   00000226   0006               LSLS     R0,R0,#+24
   \   00000228   000E               LSRS     R0,R0,#+24
   \   0000022A   ........           BL       V_line
   5849                    V_line(Ak+4*i+2,71,9,1); 
   \   0000022E   0123               MOVS     R3,#+1
   \   00000230   0922               MOVS     R2,#+9
   \   00000232   4721               MOVS     R1,#+71
   \   00000234   3800               MOVS     R0,R7
   \   00000236   801C               ADDS     R0,R0,#+2
   \   00000238   0006               LSLS     R0,R0,#+24
   \   0000023A   000E               LSRS     R0,R0,#+24
   \   0000023C   ........           BL       V_line
   5850                    V_line(Ak+4*i+3,71,9,1); 
   \   00000240   0123               MOVS     R3,#+1
   \   00000242   0922               MOVS     R2,#+9
   \   00000244   4721               MOVS     R1,#+71
   \   00000246   FF1C               ADDS     R7,R7,#+3
   \   00000248   3800               MOVS     R0,R7
   \   0000024A   0006               LSLS     R0,R0,#+24
   \   0000024C   000E               LSRS     R0,R0,#+24
   \   0000024E   ........           BL       V_line
   5851                  }
   \   00000252   761C               ADDS     R6,R6,#+1
   \   00000254   3606               LSLS     R6,R6,#+24
   \   00000256   360E               LSRS     R6,R6,#+24
   \                     ??AnalogGraph_Paint_13:
   \   00000258   3000               MOVS     R0,R6
   \   0000025A   2900               MOVS     R1,R5
   \   0000025C   8842               CMP      R0,R1
   \   0000025E   D9D3               BCC      ??AnalogGraph_Paint_14
   5852                  
   5853                   Button("Text",Tb,50,26,15);
   \   00000260   82B0               SUB      SP,SP,#+8
   \   00000262   0F20               MOVS     R0,#+15
   \   00000264   0090               STR      R0,[SP, #+0]
   \   00000266   1A23               MOVS     R3,#+26
   \   00000268   3222               MOVS     R2,#+50
   \   0000026A   02A8               ADD      R0,SP,#+8
   \   0000026C   017D               LDRB     R1,[R0, #+20]
   \   0000026E   5F48               LDR      R0,??AnalogGraph_Paint_2+0x10  ;; `?<Constant {0, 0}>` + 100
   \   00000270   ........           BL       Button
   \   00000274   02B0               ADD      SP,SP,#+8
   5854                  
   5855                  
   5856                  txt[0]='I'; txt[1]='d'; txt[2]=':'; txt[3]=0;
   \   00000276   01AD               ADD      R5,SP,#+4
   \   00000278   4920               MOVS     R0,#+73
   \   0000027A   2870               STRB     R0,[R5, #+0]
   \   0000027C   6420               MOVS     R0,#+100
   \   0000027E   6870               STRB     R0,[R5, #+1]
   \   00000280   3A20               MOVS     R0,#+58
   \   00000282   A870               STRB     R0,[R5, #+2]
   \   00000284   2000               MOVS     R0,R4
   \   00000286   E870               STRB     R0,[R5, #+3]
   5857                    Label(txt,0,Ab+4, 53 ,3,10,1,127,0); 
   \   00000288   82B0               SUB      SP,SP,#+8
   \   0000028A   0090               STR      R0,[SP, #+0]
   \   0000028C   7F21               MOVS     R1,#+127
   \   0000028E   0120               MOVS     R0,#+1
   \   00000290   03B4               PUSH     {R0,R1}
   \   00000292   0A21               MOVS     R1,#+10
   \   00000294   0320               MOVS     R0,#+3
   \   00000296   03B4               PUSH     {R0,R1}
   \   00000298   3523               MOVS     R3,#+53
   \   0000029A   069A               LDR      R2,[SP, #+24]
   \   0000029C   121D               ADDS     R2,R2,#+4
   \   0000029E   1206               LSLS     R2,R2,#+24
   \   000002A0   120E               LSRS     R2,R2,#+24
   \   000002A2   2100               MOVS     R1,R4
   \   000002A4   07A8               ADD      R0,SP,#+28
   \   000002A6   ........           BL       Label
   \   000002AA   06B0               ADD      SP,SP,#+24
   5858                    txt[1]=0;txt[2]=0;
   \   000002AC   2000               MOVS     R0,R4
   \   000002AE   6870               STRB     R0,[R5, #+1]
   \   000002B0   A870               STRB     R0,[R5, #+2]
   5859                    char ind=CharToStr(Anal->Nr, txt, 2); //(char Value, char *Vstring, char ill);
   \   000002B2   0222               MOVS     R2,#+2
   \   000002B4   01A9               ADD      R1,SP,#+4
   \   000002B6   0698               LDR      R0,[SP, #+24]
   \   000002B8   0079               LDRB     R0,[R0, #+4]
   \   000002BA   ........           BL       CharToStr
   \   000002BE   0200               MOVS     R2,R0
   5860                    Label(txt,0,Ab+19, 53 ,ind,8,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000002C0   82B0               SUB      SP,SP,#+8
   \   000002C2   2000               MOVS     R0,R4
   \   000002C4   0090               STR      R0,[SP, #+0]
   \   000002C6   7F21               MOVS     R1,#+127
   \   000002C8   0120               MOVS     R0,#+1
   \   000002CA   03B4               PUSH     {R0,R1}
   \   000002CC   0821               MOVS     R1,#+8
   \   000002CE   1000               MOVS     R0,R2
   \   000002D0   03B4               PUSH     {R0,R1}
   \   000002D2   3523               MOVS     R3,#+53
   \   000002D4   069A               LDR      R2,[SP, #+24]
   \   000002D6   1332               ADDS     R2,R2,#+19
   \   000002D8   1206               LSLS     R2,R2,#+24
   \   000002DA   120E               LSRS     R2,R2,#+24
   \   000002DC   2100               MOVS     R1,R4
   \   000002DE   07A8               ADD      R0,SP,#+28
   \   000002E0   ........           BL       Label
   \   000002E4   06B0               ADD      SP,SP,#+24
   \   000002E6   3C20               MOVS     R0,#+60
   \   000002E8   2870               STRB     R0,[R5, #+0]
   5861                                
   5862                    txt[0]='<';txt[1]=0;
   \   000002EA   2000               MOVS     R0,R4
   \   000002EC   6870               STRB     R0,[R5, #+1]
   5863                    Button(txt,Ab+1,35,13,15); 
   \   000002EE   009E               LDR      R6,[SP, #+0]
   \   000002F0   761C               ADDS     R6,R6,#+1
   \   000002F2   82B0               SUB      SP,SP,#+8
   \   000002F4   0F20               MOVS     R0,#+15
   \   000002F6   0090               STR      R0,[SP, #+0]
   \   000002F8   0D23               MOVS     R3,#+13
   \   000002FA   2322               MOVS     R2,#+35
   \   000002FC   3100               MOVS     R1,R6
   \   000002FE   0906               LSLS     R1,R1,#+24
   \   00000300   090E               LSRS     R1,R1,#+24
   \   00000302   03A8               ADD      R0,SP,#+12
   \   00000304   ........           BL       Button
   \   00000308   02B0               ADD      SP,SP,#+8
   \   0000030A   3E20               MOVS     R0,#+62
   \   0000030C   2870               STRB     R0,[R5, #+0]
   5864                    txt[0]='>';
   5865                    Button(txt,Ab+16,35,13,15); 
   \   0000030E   009F               LDR      R7,[SP, #+0]
   \   00000310   1037               ADDS     R7,R7,#+16
   \   00000312   82B0               SUB      SP,SP,#+8
   \   00000314   0F20               MOVS     R0,#+15
   \   00000316   0090               STR      R0,[SP, #+0]
   \   00000318   0D23               MOVS     R3,#+13
   \   0000031A   2322               MOVS     R2,#+35
   \   0000031C   3900               MOVS     R1,R7
   \   0000031E   0906               LSLS     R1,R1,#+24
   \   00000320   090E               LSRS     R1,R1,#+24
   \   00000322   03A8               ADD      R0,SP,#+12
   \   00000324   ........           BL       Button
   \   00000328   02B0               ADD      SP,SP,#+8
   5866                    
   5867                    
   5868                    txt[0]='R'; txt[1]='e'; txt[2]='g'; txt[3]=':'; txt[4]=0;
   \   0000032A   5220               MOVS     R0,#+82
   \   0000032C   2870               STRB     R0,[R5, #+0]
   \   0000032E   6520               MOVS     R0,#+101
   \   00000330   6870               STRB     R0,[R5, #+1]
   \   00000332   6720               MOVS     R0,#+103
   \   00000334   A870               STRB     R0,[R5, #+2]
   \   00000336   3A20               MOVS     R0,#+58
   \   00000338   E870               STRB     R0,[R5, #+3]
   \   0000033A   2000               MOVS     R0,R4
   \   0000033C   2871               STRB     R0,[R5, #+4]
   5869                    Label(txt,0,Ab+1, 23 ,4,10,1,127,0); 
   \   0000033E   82B0               SUB      SP,SP,#+8
   \   00000340   0090               STR      R0,[SP, #+0]
   \   00000342   7F21               MOVS     R1,#+127
   \   00000344   0120               MOVS     R0,#+1
   \   00000346   03B4               PUSH     {R0,R1}
   \   00000348   0A21               MOVS     R1,#+10
   \   0000034A   0420               MOVS     R0,#+4
   \   0000034C   03B4               PUSH     {R0,R1}
   \   0000034E   1723               MOVS     R3,#+23
   \   00000350   3200               MOVS     R2,R6
   \   00000352   1206               LSLS     R2,R2,#+24
   \   00000354   120E               LSRS     R2,R2,#+24
   \   00000356   2100               MOVS     R1,R4
   \   00000358   07A8               ADD      R0,SP,#+28
   \   0000035A   ........           BL       Label
   \   0000035E   06B0               ADD      SP,SP,#+24
   5870                    txt[1]=0;txt[2]=0;
   \   00000360   2000               MOVS     R0,R4
   \   00000362   6870               STRB     R0,[R5, #+1]
   \   00000364   A870               STRB     R0,[R5, #+2]
   5871                    
   5872                    ind=CharToStr(Anal->Reg, txt, 2); //(char Value, char *Vstring, char ill);
   \   00000366   0222               MOVS     R2,#+2
   \   00000368   01A9               ADD      R1,SP,#+4
   \   0000036A   0698               LDR      R0,[SP, #+24]
   \   0000036C   4079               LDRB     R0,[R0, #+5]
   \   0000036E   ........           BL       CharToStr
   \   00000372   0200               MOVS     R2,R0
   5873                    Label(txt,0,Ab+21, 23 ,ind,8,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000374   82B0               SUB      SP,SP,#+8
   \   00000376   2000               MOVS     R0,R4
   \   00000378   0090               STR      R0,[SP, #+0]
   \   0000037A   7F21               MOVS     R1,#+127
   \   0000037C   0120               MOVS     R0,#+1
   \   0000037E   03B4               PUSH     {R0,R1}
   \   00000380   0821               MOVS     R1,#+8
   \   00000382   1000               MOVS     R0,R2
   \   00000384   03B4               PUSH     {R0,R1}
   \   00000386   1723               MOVS     R3,#+23
   \   00000388   069A               LDR      R2,[SP, #+24]
   \   0000038A   1532               ADDS     R2,R2,#+21
   \   0000038C   1206               LSLS     R2,R2,#+24
   \   0000038E   120E               LSRS     R2,R2,#+24
   \   00000390   2100               MOVS     R1,R4
   \   00000392   07A8               ADD      R0,SP,#+28
   \   00000394   ........           BL       Label
   \   00000398   06B0               ADD      SP,SP,#+24
   5874                  
   5875                    txt[0]='<';txt[1]=0;
   \   0000039A   3C20               MOVS     R0,#+60
   \   0000039C   2870               STRB     R0,[R5, #+0]
   \   0000039E   6C70               STRB     R4,[R5, #+1]
   5876                    Button(txt,Ab+1,5,13,15); 
   \   000003A0   82B0               SUB      SP,SP,#+8
   \   000003A2   0F20               MOVS     R0,#+15
   \   000003A4   0090               STR      R0,[SP, #+0]
   \   000003A6   0D23               MOVS     R3,#+13
   \   000003A8   0522               MOVS     R2,#+5
   \   000003AA   3100               MOVS     R1,R6
   \   000003AC   0906               LSLS     R1,R1,#+24
   \   000003AE   090E               LSRS     R1,R1,#+24
   \   000003B0   03A8               ADD      R0,SP,#+12
   \   000003B2   ........           BL       Button
   \   000003B6   02B0               ADD      SP,SP,#+8
   5877                    txt[0]='>';
   \   000003B8   3E20               MOVS     R0,#+62
   \   000003BA   2870               STRB     R0,[R5, #+0]
   5878                    Button(txt,Ab+16,5,13,15); 
   \   000003BC   82B0               SUB      SP,SP,#+8
   \   000003BE   0F20               MOVS     R0,#+15
   \   000003C0   0090               STR      R0,[SP, #+0]
   \   000003C2   0D23               MOVS     R3,#+13
   \   000003C4   0522               MOVS     R2,#+5
   \   000003C6   3900               MOVS     R1,R7
   \   000003C8   0906               LSLS     R1,R1,#+24
   \   000003CA   090E               LSRS     R1,R1,#+24
   \   000003CC   03A8               ADD      R0,SP,#+12
   \   000003CE   ........           BL       Button
   \   000003D2   02B0               ADD      SP,SP,#+8
   5879                  
   5880                  
   5881                }
   \   000003D4   07B0               ADD      SP,SP,#+28
   \   000003D6   F0BC               POP      {R4-R7}
   \   000003D8   01BC               POP      {R0}
   \   000003DA   0047               BX       R0               ;; return
   \                     ??AnalogGraph_Paint_2:
   \   000003DC   ........           DC32     `?<Constant {0, 0}>` + 132
   \   000003E0   ........           DC32     `?<Constant {0, 0}>` + 148
   \   000003E4   D4FEFFFF           DC32     0xfffffed4
   \   000003E8   ........           DC32     Arial_7
   \   000003EC   ........           DC32     `?<Constant {0, 0}>` + 100
   5882          

   \                                 In section Debug.txt, align 4, keep-with-next
   5883          void AnalogGraph_Event(_Analog *Anal)
   5884                {  
   \                     AnalogGraph_Event:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0425               MOVS     R5,#+4
   5885                  
   5886                 //List_Paint(Speech[g_leng].ZmAnalog,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   5887                 char txt[8];
   5888                 
   5889          
   5890                  char Tb=4;
   5891                  char Ab=32;
   \   00000006   2026               MOVS     R6,#+32
   5892                  
   5893                  if (Anal->Flip)
   \   00000008   A079               LDRB     R0,[R4, #+6]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   01D0               BEQ      ??AnalogGraph_Event_0
   5894                  {
   5895                     Tb=33;
   \   0000000E   2125               MOVS     R5,#+33
   5896                     Ab=1;
   \   00000010   0126               MOVS     R6,#+1
   5897                  }
   5898                 
   5899                 
   5900                         //zdarzenie typu down "X"
   5901                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \                     ??AnalogGraph_Event_0:
   \   00000012   9348               LDR      R0,??AnalogGraph_Event_1  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   405E               LDRSH    R0,[R0, R1]
   \   00000018   2F28               CMP      R0,#+47
   \   0000001A   2DDB               BLT      ??AnalogGraph_Event_2
   \   0000001C   3F28               CMP      R0,#+63
   \   0000001E   2BDA               BGE      ??AnalogGraph_Event_2
   \   00000020   9048               LDR      R0,??AnalogGraph_Event_1+0x4  ;; Y_down
   \   00000022   405E               LDRSH    R0,[R0, R1]
   \   00000024   7128               CMP      R0,#+113
   \   00000026   27DB               BLT      ??AnalogGraph_Event_2
   \   00000028   7F28               CMP      R0,#+127
   \   0000002A   25DA               BGE      ??AnalogGraph_Event_2
   5902                  {
   5903                    //MenuPaint();
   5904                    H_line(49,114,10,0);
   \   0000002C   0B00               MOVS     R3,R1
   \   0000002E   0A22               MOVS     R2,#+10
   \   00000030   7221               MOVS     R1,#+114
   \   00000032   3120               MOVS     R0,#+49
   \   00000034   ........           BL       H_line
   5905                    H_line(49,123,10,0); 
   \   00000038   0023               MOVS     R3,#+0
   \   0000003A   0A22               MOVS     R2,#+10
   \   0000003C   7B21               MOVS     R1,#+123
   \   0000003E   3120               MOVS     R0,#+49
   \   00000040   ........           BL       H_line
   5906                    V_line(49,114,10,0); 
   \   00000044   0023               MOVS     R3,#+0
   \   00000046   0A22               MOVS     R2,#+10
   \   00000048   7221               MOVS     R1,#+114
   \   0000004A   3120               MOVS     R0,#+49
   \   0000004C   ........           BL       V_line
   5907                    V_line(58,114,10,0); 
   \   00000050   0023               MOVS     R3,#+0
   \   00000052   0A22               MOVS     R2,#+10
   \   00000054   7221               MOVS     R1,#+114
   \   00000056   3A20               MOVS     R0,#+58
   \   00000058   ........           BL       V_line
   5908                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \   0000005C   8248               LDR      R0,??AnalogGraph_Event_1+0x8  ;; 0x13d7e9
   \   0000005E   0078               LDRB     R0,[R0, #+0]
   \   00000060   0028               CMP      R0,#+0
   \   00000062   09D1               BNE      ??AnalogGraph_Event_2
   \   00000064   8148               LDR      R0,??AnalogGraph_Event_1+0xC  ;; 0xfffff430
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   0160               STR      R1,[R0, #+0]
   \   0000006A   814A               LDR      R2,??AnalogGraph_Event_1+0x10  ;; ButtonBipCounter
   \   0000006C   8148               LDR      R0,??AnalogGraph_Event_1+0x14  ;; g_counter
   \   0000006E   03C8               LDM      R0!,{R0,R1}
   \   00000070   0023               MOVS     R3,#+0
   \   00000072   0830               ADDS     R0,R0,#+8
   \   00000074   5941               ADCS     R1,R1,R3
   \   00000076   03C2               STM      R2!,{R0,R1}
   5909                    
   5910                  }
   5911            
   5912                     if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??AnalogGraph_Event_2:
   \   00000078   7F48               LDR      R0,??AnalogGraph_Event_1+0x18  ;; X_up
   \   0000007A   0021               MOVS     R1,#+0
   \   0000007C   405E               LDRSH    R0,[R0, R1]
   \   0000007E   2F28               CMP      R0,#+47
   \   00000080   1DDB               BLT      ??AnalogGraph_Event_3
   \   00000082   3F28               CMP      R0,#+63
   \   00000084   1BDA               BGE      ??AnalogGraph_Event_3
   \   00000086   7D48               LDR      R0,??AnalogGraph_Event_1+0x1C  ;; Y_up
   \   00000088   405E               LDRSH    R0,[R0, R1]
   \   0000008A   7128               CMP      R0,#+113
   \   0000008C   17DB               BLT      ??AnalogGraph_Event_3
   \   0000008E   7F28               CMP      R0,#+127
   \   00000090   15DA               BGE      ??AnalogGraph_Event_3
   5913                  {
   5914                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \   00000092   7548               LDR      R0,??AnalogGraph_Event_1+0x8  ;; 0x13d7e9
   \   00000094   0078               LDRB     R0,[R0, #+0]
   \   00000096   0028               CMP      R0,#+0
   \   00000098   08D1               BNE      ??AnalogGraph_Event_4
   \   0000009A   7448               LDR      R0,??AnalogGraph_Event_1+0xC  ;; 0xfffff430
   \   0000009C   0160               STR      R1,[R0, #+0]
   \   0000009E   744A               LDR      R2,??AnalogGraph_Event_1+0x10  ;; ButtonBipCounter
   \   000000A0   7448               LDR      R0,??AnalogGraph_Event_1+0x14  ;; g_counter
   \   000000A2   03C8               LDM      R0!,{R0,R1}
   \   000000A4   0023               MOVS     R3,#+0
   \   000000A6   0830               ADDS     R0,R0,#+8
   \   000000A8   5941               ADCS     R1,R1,R3
   \   000000AA   03C2               STM      R2!,{R0,R1}
   5915                    MenuLevel=(MenuLevel/10);
   \                     ??AnalogGraph_Event_4:
   \   000000AC   744D               LDR      R5,??AnalogGraph_Event_1+0x20  ;; TextToChangeLength
   \   000000AE   A86C               LDR      R0,[R5, #+72]
   \   000000B0   0A21               MOVS     R1,#+10
   \   000000B2   ........           BL       __aeabi_idivmod
   \   000000B6   A864               STR      R0,[R5, #+72]
   5916                    MenuPaint();
   \   000000B8   ........           BL       MenuPaint
   \   000000BC   CDE0               B        ??AnalogGraph_Event_5
   5917                  }  
   \                     ??AnalogGraph_Event_3:
   \   000000BE   0F00               MOVS     R7,R1
   5918                  else
   5919                  {
   5920                    
   5921                    char ButtonDownNr=0;
   5922                    
   5923                    
   5924                    if (Button("Text",Tb,50,26,15)==1) ButtonDownNr=1;
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   0F20               MOVS     R0,#+15
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   1A23               MOVS     R3,#+26
   \   000000C8   3222               MOVS     R2,#+50
   \   000000CA   2900               MOVS     R1,R5
   \   000000CC   6D48               LDR      R0,??AnalogGraph_Event_1+0x24  ;; `?<Constant {0, 0}>` + 100
   \   000000CE   ........           BL       Button
   \   000000D2   02B0               ADD      SP,SP,#+8
   \   000000D4   0128               CMP      R0,#+1
   \   000000D6   00D1               BNE      ??AnalogGraph_Event_6
   \   000000D8   0127               MOVS     R7,#+1
   \                     ??AnalogGraph_Event_6:
   \   000000DA   01AD               ADD      R5,SP,#+4
   \   000000DC   3E20               MOVS     R0,#+62
   \   000000DE   2870               STRB     R0,[R5, #+0]
   5925                    txt[0]='>'; txt[1]=0; 
   \   000000E0   0020               MOVS     R0,#+0
   \   000000E2   6870               STRB     R0,[R5, #+1]
   5926                    if (Button(txt,Ab+16,35,13,15)==1) ButtonDownNr=2;
   \   000000E4   6846               MOV      R0,SP
   \   000000E6   3100               MOVS     R1,R6
   \   000000E8   1031               ADDS     R1,R1,#+16
   \   000000EA   0170               STRB     R1,[R0, #+0]
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   0F20               MOVS     R0,#+15
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   0D23               MOVS     R3,#+13
   \   000000F4   2322               MOVS     R2,#+35
   \   000000F6   02A8               ADD      R0,SP,#+8
   \   000000F8   0178               LDRB     R1,[R0, #+0]
   \   000000FA   03A8               ADD      R0,SP,#+12
   \   000000FC   ........           BL       Button
   \   00000100   02B0               ADD      SP,SP,#+8
   \   00000102   0128               CMP      R0,#+1
   \   00000104   00D1               BNE      ??AnalogGraph_Event_7
   \   00000106   0227               MOVS     R7,#+2
   \                     ??AnalogGraph_Event_7:
   \   00000108   3C20               MOVS     R0,#+60
   \   0000010A   2870               STRB     R0,[R5, #+0]
   5927                    txt[0]='<';txt[1]=0;
   \   0000010C   0020               MOVS     R0,#+0
   \   0000010E   6870               STRB     R0,[R5, #+1]
   5928                    if (Button(txt,Ab+1,35,13,15)==1) ButtonDownNr=3;
   \   00000110   761C               ADDS     R6,R6,#+1
   \   00000112   82B0               SUB      SP,SP,#+8
   \   00000114   0F20               MOVS     R0,#+15
   \   00000116   0090               STR      R0,[SP, #+0]
   \   00000118   0D23               MOVS     R3,#+13
   \   0000011A   2322               MOVS     R2,#+35
   \   0000011C   3100               MOVS     R1,R6
   \   0000011E   0906               LSLS     R1,R1,#+24
   \   00000120   090E               LSRS     R1,R1,#+24
   \   00000122   03A8               ADD      R0,SP,#+12
   \   00000124   ........           BL       Button
   \   00000128   02B0               ADD      SP,SP,#+8
   \   0000012A   0128               CMP      R0,#+1
   \   0000012C   00D1               BNE      ??AnalogGraph_Event_8
   \   0000012E   0327               MOVS     R7,#+3
   5929                    txt[0]='>'; txt[1]=0; 
   \                     ??AnalogGraph_Event_8:
   \   00000130   3E20               MOVS     R0,#+62
   \   00000132   2870               STRB     R0,[R5, #+0]
   \   00000134   0020               MOVS     R0,#+0
   \   00000136   6870               STRB     R0,[R5, #+1]
   5930                    if (Button(txt,Ab+16,5,13,15)==1) ButtonDownNr=4;
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0F20               MOVS     R0,#+15
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   0D23               MOVS     R3,#+13
   \   00000140   0522               MOVS     R2,#+5
   \   00000142   02A8               ADD      R0,SP,#+8
   \   00000144   0178               LDRB     R1,[R0, #+0]
   \   00000146   03A8               ADD      R0,SP,#+12
   \   00000148   ........           BL       Button
   \   0000014C   02B0               ADD      SP,SP,#+8
   \   0000014E   0128               CMP      R0,#+1
   \   00000150   00D1               BNE      ??AnalogGraph_Event_9
   \   00000152   0427               MOVS     R7,#+4
   5931                    txt[0]='<';txt[1]=0;
   \                     ??AnalogGraph_Event_9:
   \   00000154   3C20               MOVS     R0,#+60
   \   00000156   2870               STRB     R0,[R5, #+0]
   \   00000158   0020               MOVS     R0,#+0
   \   0000015A   6870               STRB     R0,[R5, #+1]
   5932                    if (Button(txt,Ab+1,5,13,15)==1) ButtonDownNr=5;
   \   0000015C   82B0               SUB      SP,SP,#+8
   \   0000015E   0F20               MOVS     R0,#+15
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   0D23               MOVS     R3,#+13
   \   00000164   0522               MOVS     R2,#+5
   \   00000166   3100               MOVS     R1,R6
   \   00000168   0906               LSLS     R1,R1,#+24
   \   0000016A   090E               LSRS     R1,R1,#+24
   \   0000016C   03A8               ADD      R0,SP,#+12
   \   0000016E   ........           BL       Button
   \   00000172   02B0               ADD      SP,SP,#+8
   \   00000174   0128               CMP      R0,#+1
   \   00000176   00D1               BNE      ??AnalogGraph_Event_10
   \   00000178   0527               MOVS     R7,#+5
   5933                    if (Button ("<>",24,96,15,11)==1) ButtonDownNr=6;
   \                     ??AnalogGraph_Event_10:
   \   0000017A   82B0               SUB      SP,SP,#+8
   \   0000017C   0B20               MOVS     R0,#+11
   \   0000017E   0090               STR      R0,[SP, #+0]
   \   00000180   0F23               MOVS     R3,#+15
   \   00000182   6022               MOVS     R2,#+96
   \   00000184   1821               MOVS     R1,#+24
   \   00000186   40A0               ADR      R0,??AnalogGraph_Event_1+0x28  ;; 0x3C, 0x3E, 0x00, 0x00
   \   00000188   ........           BL       Button
   \   0000018C   02B0               ADD      SP,SP,#+8
   \   0000018E   0128               CMP      R0,#+1
   \   00000190   00D1               BNE      ??AnalogGraph_Event_11
   \   00000192   0627               MOVS     R7,#+6
   5934                    
   5935                    if (ButtonDownNr==1)
   \                     ??AnalogGraph_Event_11:
   \   00000194   012F               CMP      R7,#+1
   \   00000196   0ED1               BNE      ??AnalogGraph_Event_12
   5936                    {
   5937          
   5938                      ProgramChange=1;
   \   00000198   394D               LDR      R5,??AnalogGraph_Event_1+0x20  ;; TextToChangeLength
   \   0000019A   0120               MOVS     R0,#+1
   \   0000019C   2872               STRB     R0,[R5, #+8]
   5939                      TextToChangeLength=3;
   \   0000019E   0320               MOVS     R0,#+3
   \   000001A0   2870               STRB     R0,[R5, #+0]
   5940                      TextToChange=Anal->Text;
   \   000001A2   2000               MOVS     R0,R4
   \   000001A4   401C               ADDS     R0,R0,#+1
   \   000001A6   2865               STR      R0,[R5, #+80]
   5941                      MenuLevel=(MenuLevel*10+1); 
   \   000001A8   A86C               LDR      R0,[R5, #+72]
   \   000001AA   0A21               MOVS     R1,#+10
   \   000001AC   4843               MULS     R0,R1,R0
   \   000001AE   401C               ADDS     R0,R0,#+1
   \   000001B0   A864               STR      R0,[R5, #+72]
   5942                      MenuPaint(); 
   \   000001B2   ........           BL       MenuPaint
   5943                    }
   5944                    
   5945                    
   5946                    if (ButtonDownNr==2) 
   \                     ??AnalogGraph_Event_12:
   \   000001B6   022F               CMP      R7,#+2
   \   000001B8   10D1               BNE      ??AnalogGraph_Event_13
   5947                    {
   5948                      
   5949                        ProgramChange=1;
   \   000001BA   3448               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   000001BC   0121               MOVS     R1,#+1
   \   000001BE   0170               STRB     R1,[R0, #+0]
   5950                        if (Anal->Nr+1<NumberNeurons) {Anal->Nr++;} else {Anal->Nr=0;} 
   \   000001C0   2079               LDRB     R0,[R4, #+4]
   \   000001C2   401C               ADDS     R0,R0,#+1
   \   000001C4   0004               LSLS     R0,R0,#+16
   \   000001C6   000C               LSRS     R0,R0,#+16
   \   000001C8   2328               CMP      R0,#+35
   \   000001CA   03D2               BCS      ??AnalogGraph_Event_14
   \   000001CC   2079               LDRB     R0,[R4, #+4]
   \   000001CE   401C               ADDS     R0,R0,#+1
   \   000001D0   2071               STRB     R0,[R4, #+4]
   \   000001D2   01E0               B        ??AnalogGraph_Event_15
   \                     ??AnalogGraph_Event_14:
   \   000001D4   0020               MOVS     R0,#+0
   \   000001D6   2071               STRB     R0,[R4, #+4]
   5951                        MenuPaint(); 
   \                     ??AnalogGraph_Event_15:
   \   000001D8   ........           BL       MenuPaint
   5952                    }
   5953                     
   5954                    
   5955                    
   5956                    if (ButtonDownNr==3) 
   \                     ??AnalogGraph_Event_13:
   \   000001DC   032F               CMP      R7,#+3
   \   000001DE   0DD1               BNE      ??AnalogGraph_Event_16
   5957                    {
   5958                       ProgramChange=1;
   \   000001E0   2A48               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   000001E2   0121               MOVS     R1,#+1
   \   000001E4   0170               STRB     R1,[R0, #+0]
   5959                       if (Anal->Nr>0) {Anal->Nr--;} else {Anal->Nr=NumberNeurons;}
   \   000001E6   2079               LDRB     R0,[R4, #+4]
   \   000001E8   0028               CMP      R0,#+0
   \   000001EA   03D0               BEQ      ??AnalogGraph_Event_17
   \   000001EC   2079               LDRB     R0,[R4, #+4]
   \   000001EE   401E               SUBS     R0,R0,#+1
   \   000001F0   2071               STRB     R0,[R4, #+4]
   \   000001F2   01E0               B        ??AnalogGraph_Event_18
   \                     ??AnalogGraph_Event_17:
   \   000001F4   2320               MOVS     R0,#+35
   \   000001F6   2071               STRB     R0,[R4, #+4]
   5960                      MenuPaint(); 
   \                     ??AnalogGraph_Event_18:
   \   000001F8   ........           BL       MenuPaint
   5961                    }
   5962                    
   5963                    
   5964                    if (ButtonDownNr==4) 
   \                     ??AnalogGraph_Event_16:
   \   000001FC   042F               CMP      R7,#+4
   \   000001FE   10D1               BNE      ??AnalogGraph_Event_19
   5965                    {
   5966                      
   5967                        ProgramChange=1;
   \   00000200   0120               MOVS     R0,#+1
   \   00000202   2249               LDR      R1,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   00000204   0200               MOVS     R2,R0
   \   00000206   0A70               STRB     R2,[R1, #+0]
   5968                        if (Anal->Reg+1<NumberReg) {Anal->Reg++;} else {Anal->Reg=1;} 
   \   00000208   6179               LDRB     R1,[R4, #+5]
   \   0000020A   491C               ADDS     R1,R1,#+1
   \   0000020C   0904               LSLS     R1,R1,#+16
   \   0000020E   090C               LSRS     R1,R1,#+16
   \   00000210   0A29               CMP      R1,#+10
   \   00000212   03D2               BCS      ??AnalogGraph_Event_20
   \   00000214   6079               LDRB     R0,[R4, #+5]
   \   00000216   401C               ADDS     R0,R0,#+1
   \   00000218   6071               STRB     R0,[R4, #+5]
   \   0000021A   00E0               B        ??AnalogGraph_Event_21
   \                     ??AnalogGraph_Event_20:
   \   0000021C   6071               STRB     R0,[R4, #+5]
   5969                        MenuPaint(); 
   \                     ??AnalogGraph_Event_21:
   \   0000021E   ........           BL       MenuPaint
   5970                    }
   5971                     
   5972                    
   5973                    
   5974                    if (ButtonDownNr==5) 
   \                     ??AnalogGraph_Event_19:
   \   00000222   052F               CMP      R7,#+5
   \   00000224   0DD1               BNE      ??AnalogGraph_Event_22
   5975                    {
   5976                       ProgramChange=1;
   \   00000226   1948               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   00000228   0121               MOVS     R1,#+1
   \   0000022A   0170               STRB     R1,[R0, #+0]
   5977                       if (Anal->Reg>1) {Anal->Reg--;} else {Anal->Reg=NumberReg;}
   \   0000022C   6079               LDRB     R0,[R4, #+5]
   \   0000022E   0228               CMP      R0,#+2
   \   00000230   03D3               BCC      ??AnalogGraph_Event_23
   \   00000232   6079               LDRB     R0,[R4, #+5]
   \   00000234   401E               SUBS     R0,R0,#+1
   \   00000236   6071               STRB     R0,[R4, #+5]
   \   00000238   01E0               B        ??AnalogGraph_Event_24
   \                     ??AnalogGraph_Event_23:
   \   0000023A   0A20               MOVS     R0,#+10
   \   0000023C   6071               STRB     R0,[R4, #+5]
   5978                      MenuPaint(); 
   \                     ??AnalogGraph_Event_24:
   \   0000023E   ........           BL       MenuPaint
   5979                    }
   5980                    
   5981                    if (ButtonDownNr==6) 
   \                     ??AnalogGraph_Event_22:
   \   00000242   062F               CMP      R7,#+6
   \   00000244   09D1               BNE      ??AnalogGraph_Event_5
   5982                    {
   5983                       if (Anal->Flip) Anal->Flip=0; else Anal->Flip=1;
   \   00000246   A079               LDRB     R0,[R4, #+6]
   \   00000248   411E               SUBS     R1,R0,#+1
   \   0000024A   8941               SBCS     R1,R1,R1
   \   0000024C   C90F               LSRS     R1,R1,#+31
   \   0000024E   A171               STRB     R1,[R4, #+6]
   5984                       ProgramChange=1;
   \   00000250   0E48               LDR      R0,??AnalogGraph_Event_1+0x2C  ;; TextToChangeLength + 8
   \   00000252   0121               MOVS     R1,#+1
   \   00000254   0170               STRB     R1,[R0, #+0]
   5985          
   5986                      MenuPaint(); 
   \   00000256   ........           BL       MenuPaint
   5987                    }
   5988                    
   5989                  }
   5990                 
   5991                 
   5992                }
   \                     ??AnalogGraph_Event_5:
   \   0000025A   FEBC               POP      {R1-R7}
   \   0000025C   01BC               POP      {R0}
   \   0000025E   0047               BX       R0               ;; return
   \                     ??AnalogGraph_Event_1:
   \   00000260   ........           DC32     X_down
   \   00000264   ........           DC32     Y_down
   \   00000268   E9D71300           DC32     0x13d7e9
   \   0000026C   30F4FFFF           DC32     0xfffff430
   \   00000270   ........           DC32     ButtonBipCounter
   \   00000274   ........           DC32     g_counter
   \   00000278   ........           DC32     X_up
   \   0000027C   ........           DC32     Y_up
   \   00000280   ........           DC32     TextToChangeLength
   \   00000284   ........           DC32     `?<Constant {0, 0}>` + 100
   \   00000288   3C3E0000           DC8      0x3C, 0x3E, 0x00, 0x00
   \   0000028C   ........           DC32     TextToChangeLength + 8
   5993          
   5994          
   5995          
   5996                
   5997                
   5998          //opcje  **************************************************************************************************************
   5999          
   6000                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6001                void Options_Paint(void)
   6002                {  
   \                     Options_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   6003                  
   6004                  if (g_Stop_Program==0)
   \   00000002   1F48               LDR      R0,??Options_Paint_0  ;; g_Stop_Program
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   1E48               LDR      R0,??Options_Paint_0+0x4  ;; g_leng
   \   0000000A   0068               LDR      R0,[R0, #+0]
   \   0000000C   1AD1               BNE      ??Options_Paint_1
   6005                  {
   6006          
   6007                      List_Paint(Speech[g_leng].Opcje,2,15,0,0,3,Speech[g_leng].RestartSter, "Program stop ", 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000E   1E49               LDR      R1,??Options_Paint_0+0x8  ;; 0xa14
   \   00000010   4843               MULS     R0,R1,R0
   \   00000012   1E49               LDR      R1,??Options_Paint_0+0xC  ;; Speech
   \   00000014   0C18               ADDS     R4,R1,R0
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0800               MOVS     R0,R1
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1B49               LDR      R1,??Options_Paint_0+0x10  ;; `?<Constant "Program stop ">`
   \   00000022   F020               MOVS     R0,#+240
   \   00000024   4000               LSLS     R0,R0,#+1        ;; #+480
   \   00000026   2018               ADDS     R0,R4,R0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   0321               MOVS     R1,#+3
   \   0000002C   0020               MOVS     R0,#+0
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   0300               MOVS     R3,R0
   \   00000032   0F22               MOVS     R2,#+15
   \   00000034   0221               MOVS     R1,#+2
   \   00000036   8720               MOVS     R0,#+135
   \   00000038   8000               LSLS     R0,R0,#+2        ;; #+540
   \   0000003A   2018               ADDS     R0,R4,R0
   \   0000003C   ........           BL       List_Paint
   \   00000040   0AB0               ADD      SP,SP,#+40
   \   00000042   19E0               B        ??Options_Paint_2
   6008                    }else{
   6009          
   6010                      List_Paint(Speech[g_leng].Opcje,2,15,0,0,3,Speech[g_leng].RestartSter, "Program start ", 0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Options_Paint_1:
   \   00000044   1049               LDR      R1,??Options_Paint_0+0x8  ;; 0xa14
   \   00000046   4843               MULS     R0,R1,R0
   \   00000048   1049               LDR      R1,??Options_Paint_0+0xC  ;; Speech
   \   0000004A   0C18               ADDS     R4,R1,R0
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   0800               MOVS     R0,R1
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   0F49               LDR      R1,??Options_Paint_0+0x14  ;; `?<Constant "Program stop ">` + 16
   \   00000058   F020               MOVS     R0,#+240
   \   0000005A   4000               LSLS     R0,R0,#+1        ;; #+480
   \   0000005C   2018               ADDS     R0,R4,R0
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   0321               MOVS     R1,#+3
   \   00000062   0020               MOVS     R0,#+0
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   0300               MOVS     R3,R0
   \   00000068   0F22               MOVS     R2,#+15
   \   0000006A   0221               MOVS     R1,#+2
   \   0000006C   8720               MOVS     R0,#+135
   \   0000006E   8000               LSLS     R0,R0,#+2        ;; #+540
   \   00000070   2018               ADDS     R0,R4,R0
   \   00000072   ........           BL       List_Paint
   \   00000076   0AB0               ADD      SP,SP,#+40
   6011          
   6012                  }
   6013          
   6014              
   6015                }//________________________________________________________________________
   \                     ??Options_Paint_2:
   \   00000078   10BC               POP      {R4}
   \   0000007A   01BC               POP      {R0}
   \   0000007C   0047               BX       R0               ;; return
   \   0000007E   C046               Nop      
   \                     ??Options_Paint_0:
   \   00000080   ........           DC32     g_Stop_Program
   \   00000084   ........           DC32     g_leng
   \   00000088   140A0000           DC32     0xa14
   \   0000008C   ........           DC32     Speech
   \   00000090   ........           DC32     `?<Constant "Program stop ">`
   \   00000094   ........           DC32     `?<Constant "Program stop ">` + 16
   6016          
   6017              
   6018                //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6019                void Options_Event(void)
   6020                {
   \                     Options_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6021                  int ans;
   6022                  ans= List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0);//(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1948               LDR      R0,??Options_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1848               LDR      R0,??Options_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1848               LDR      R0,??Options_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1848               LDR      R0,??Options_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0400               MOVS     R4,R0
   6023                  if (ans)
   \   0000002A   20D0               BEQ      ??Options_Event_1
   6024                    {
   6025                      
   6026                        if (ans==1) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   012C               CMP      R4,#+1
   \   0000002E   05D1               BNE      ??Options_Event_2
   \   00000030   144D               LDR      R5,??Options_Event_0+0x10  ;; TextToChangeLength
   \   00000032   A86C               LDR      R0,[R5, #+72]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   4843               MULS     R0,R1,R0
   \   00000038   401C               ADDS     R0,R0,#+1
   \   0000003A   A864               STR      R0,[R5, #+72]
   6027                        if (ans==2) 
   \                     ??Options_Event_2:
   \   0000003C   022C               CMP      R4,#+2
   \   0000003E   0CD1               BNE      ??Options_Event_3
   6028                            {if (g_Stop_Program==0) 
   \   00000040   1148               LDR      R0,??Options_Event_0+0x14  ;; g_Stop_Program
   \   00000042   0178               LDRB     R1,[R0, #+0]
   \   00000044   0029               CMP      R1,#+0
   \   00000046   04D1               BNE      ??Options_Event_4
   6029                              {g_Stop_Program=1; MenuPaint();} else {g_Stop_Program=0; MenuPaint();}
   \   00000048   0121               MOVS     R1,#+1
   \   0000004A   0170               STRB     R1,[R0, #+0]
   \   0000004C   ........           BL       MenuPaint
   \   00000050   03E0               B        ??Options_Event_3
   \                     ??Options_Event_4:
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   0170               STRB     R1,[R0, #+0]
   \   00000056   ........           BL       MenuPaint
   6030                            }
   6031                        if (ans<0) MenuLevel=(MenuLevel/10);
   \                     ??Options_Event_3:
   \   0000005A   002C               CMP      R4,#+0
   \   0000005C   05D5               BPL      ??Options_Event_5
   \   0000005E   094D               LDR      R5,??Options_Event_0+0x10  ;; TextToChangeLength
   \   00000060   A86C               LDR      R0,[R5, #+72]
   \   00000062   0A21               MOVS     R1,#+10
   \   00000064   ........           BL       __aeabi_idivmod
   \   00000068   A864               STR      R0,[R5, #+72]
   6032                        MenuPaint();
   \                     ??Options_Event_5:
   \   0000006A   ........           BL       MenuPaint
   6033                    } 
   6034                    
   6035          
   6036                  
   6037                }//________________________________________________________________________
   \                     ??Options_Event_1:
   \   0000006E   38BC               POP      {R3-R5}
   \   00000070   01BC               POP      {R0}
   \   00000072   0047               BX       R0               ;; return
   \                     ??Options_Event_0:
   \   00000074   ........           DC32     Y_down
   \   00000078   ........           DC32     X_down
   \   0000007C   ........           DC32     Y_up
   \   00000080   ........           DC32     X_up
   \   00000084   ........           DC32     TextToChangeLength
   \   00000088   ........           DC32     g_Stop_Program
   6038              
   6039                      
   6040          
   6041          
   6042          //Ustawienia ******************************************************************************************************************
   6043          char RF_Channel_nr_tmp;
   6044          
   6045          
   6046                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6047                void Setup_Paint(void)
   6048                {  
   \                     Setup_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   6049                   if (!SlaveMode) 
   \   00000002   3148               LDR      R0,??Setup_Paint_0  ;; SlaveMode
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   3048               LDR      R0,??Setup_Paint_0+0x4  ;; g_leng
   \   0000000A   0068               LDR      R0,[R0, #+0]
   \   0000000C   22D1               BNE      ??Setup_Paint_1
   6050                    {
   6051                      List_Paint(Speech[g_leng].Ustawienia,8,13,0,0,0,Speech[g_leng].Jezyk,Speech[g_leng].DataCzas,Speech[g_leng].Hasla,Speech[g_leng].Dotyk, Speech[g_leng].ScreenSever,Speech[g_leng].Dzwiek, "Master/Slave ", Speech[g_leng].RfChannel); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000E   3049               LDR      R1,??Setup_Paint_0+0x8  ;; 0xa14
   \   00000010   4843               MULS     R0,R1,R0
   \   00000012   3049               LDR      R1,??Setup_Paint_0+0xC  ;; Speech
   \   00000014   0C18               ADDS     R4,R1,R0
   \   00000016   3048               LDR      R0,??Setup_Paint_0+0x10  ;; 0x636
   \   00000018   2118               ADDS     R1,R4,R0
   \   0000001A   3048               LDR      R0,??Setup_Paint_0+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5` + 12
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   3048               LDR      R0,??Setup_Paint_0+0x18  ;; 0x6bd
   \   00000020   2118               ADDS     R1,R4,R0
   \   00000022   6938               SUBS     R0,R0,#+105
   \   00000024   2018               ADDS     R0,R4,R0
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   2E48               LDR      R0,??Setup_Paint_0+0x1C  ;; 0x519
   \   0000002A   2118               ADDS     R1,R4,R0
   \   0000002C   2000               MOVS     R0,R4
   \   0000002E   C330               ADDS     R0,R0,#+195
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   2100               MOVS     R1,R4
   \   00000034   B431               ADDS     R1,R1,#+180
   \   00000036   2000               MOVS     R0,R4
   \   00000038   6930               ADDS     R0,R0,#+105
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   0800               MOVS     R0,R1
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   0300               MOVS     R3,R0
   \   00000044   0D22               MOVS     R2,#+13
   \   00000046   0821               MOVS     R1,#+8
   \   00000048   3C34               ADDS     R4,R4,#+60
   \   0000004A   2000               MOVS     R0,R4
   \   0000004C   ........           BL       List_Paint
   \   00000050   0AB0               ADD      SP,SP,#+40
   \   00000052   20E0               B        ??Setup_Paint_2
   6052                    }else{
   6053                      List_Paint(Speech[g_leng].Ustawienia,7,13,0,0,0,Speech[g_leng].Jezyk,Speech[g_leng].DataCzas,Speech[g_leng].Hasla,Speech[g_leng].Dotyk, Speech[g_leng].ScreenSever, Speech[g_leng].Dzwiek,"Master/Slave ",0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char back, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \                     ??Setup_Paint_1:
   \   00000054   1E49               LDR      R1,??Setup_Paint_0+0x8  ;; 0xa14
   \   00000056   4843               MULS     R0,R1,R0
   \   00000058   1E49               LDR      R1,??Setup_Paint_0+0xC  ;; Speech
   \   0000005A   0C18               ADDS     R4,R1,R0
   \   0000005C   0021               MOVS     R1,#+0
   \   0000005E   1F48               LDR      R0,??Setup_Paint_0+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5` + 12
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   1F48               LDR      R0,??Setup_Paint_0+0x18  ;; 0x6bd
   \   00000064   2118               ADDS     R1,R4,R0
   \   00000066   6938               SUBS     R0,R0,#+105
   \   00000068   2018               ADDS     R0,R4,R0
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   1D48               LDR      R0,??Setup_Paint_0+0x1C  ;; 0x519
   \   0000006E   2118               ADDS     R1,R4,R0
   \   00000070   2000               MOVS     R0,R4
   \   00000072   C330               ADDS     R0,R0,#+195
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   2100               MOVS     R1,R4
   \   00000078   B431               ADDS     R1,R1,#+180
   \   0000007A   2000               MOVS     R0,R4
   \   0000007C   6930               ADDS     R0,R0,#+105
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   0021               MOVS     R1,#+0
   \   00000082   0800               MOVS     R0,R1
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   0300               MOVS     R3,R0
   \   00000088   0D22               MOVS     R2,#+13
   \   0000008A   0721               MOVS     R1,#+7
   \   0000008C   3C34               ADDS     R4,R4,#+60
   \   0000008E   2000               MOVS     R0,R4
   \   00000090   ........           BL       List_Paint
   \   00000094   0AB0               ADD      SP,SP,#+40
   6054                    }
   6055                    RF_Channel_nr_tmp=RF_Status.Ch;
   \                     ??Setup_Paint_2:
   \   00000096   1448               LDR      R0,??Setup_Paint_0+0x20  ;; RF_Channel_nr_tmp
   \   00000098   1449               LDR      R1,??Setup_Paint_0+0x24  ;; RF_Status + 13
   \   0000009A   0978               LDRB     R1,[R1, #+0]
   \   0000009C   0170               STRB     R1,[R0, #+0]
   6056                   
   6057                   //znacznik dzwieku
   6058                   if (!(AT91C_IFLASH_MEM->Config.SoundOff))
   \   0000009E   1448               LDR      R0,??Setup_Paint_0+0x28  ;; 0x13d7e9
   \   000000A0   0078               LDRB     R0,[R0, #+0]
   \   000000A2   0028               CMP      R0,#+0
   \   000000A4   0DD1               BNE      ??Setup_Paint_3
   6059                        {
   6060                              
   6061                          char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   000000A6   6846               MOV      R0,SP
   \   000000A8   1249               LDR      R1,??Setup_Paint_0+0x2C  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`
   \   000000AA   1CC9               LDM      R1!,{R2-R4}
   \   000000AC   1CC0               STM      R0!,{R2-R4}
   6062                          CopyToCanvasPoint((char *)ekran_tab,45,99-(13*(5)),8,10); 
   \   000000AE   82B0               SUB      SP,SP,#+8
   \   000000B0   0A20               MOVS     R0,#+10
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   0823               MOVS     R3,#+8
   \   000000B6   2222               MOVS     R2,#+34
   \   000000B8   2D21               MOVS     R1,#+45
   \   000000BA   02A8               ADD      R0,SP,#+8
   \   000000BC   ........           BL       CopyToCanvasPoint
   \   000000C0   02B0               ADD      SP,SP,#+8
   6063                        }
   6064                }//________________________________________________________________________
   \                     ??Setup_Paint_3:
   \   000000C2   1FBC               POP      {R0-R4}
   \   000000C4   01BC               POP      {R0}
   \   000000C6   0047               BX       R0               ;; return
   \                     ??Setup_Paint_0:
   \   000000C8   ........           DC32     SlaveMode
   \   000000CC   ........           DC32     g_leng
   \   000000D0   140A0000           DC32     0xa14
   \   000000D4   ........           DC32     Speech
   \   000000D8   36060000           DC32     0x636
   \   000000DC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5` + 12
   \   000000E0   BD060000           DC32     0x6bd
   \   000000E4   19050000           DC32     0x519
   \   000000E8   ........           DC32     RF_Channel_nr_tmp
   \   000000EC   ........           DC32     RF_Status + 13
   \   000000F0   E9D71300           DC32     0x13d7e9
   \   000000F4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`
   6065          
   6066          
   6067          
   6068                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6069                void Setup_Event(void)
   6070                {
   \                     Setup_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6071                  int ans;
   6072                  char repaint=0;
   \   00000002   0024               MOVS     R4,#+0
   6073                  if (!SlaveMode) 
   \   00000004   2E48               LDR      R0,??Setup_Event_0  ;; SlaveMode
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   12D1               BNE      ??Setup_Event_1
   6074                    {
   6075                      ans=List_Event(X_up, Y_up, X_down, Y_down, 8 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000C   2100               MOVS     R1,R4
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0D21               MOVS     R1,#+13
   \   00000012   0820               MOVS     R0,#+8
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   2B48               LDR      R0,??Setup_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   435E               LDRSH    R3,[R0, R1]
   \   0000001C   2A48               LDR      R0,??Setup_Event_0+0x8  ;; X_down
   \   0000001E   425E               LDRSH    R2,[R0, R1]
   \   00000020   2A48               LDR      R0,??Setup_Event_0+0xC  ;; Y_up
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   2A48               LDR      R0,??Setup_Event_0+0x10  ;; X_up
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   405F               LDRSH    R0,[R0, R5]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   12E0               B        ??Setup_Event_2
   6076                    }else{
   6077                      ans=List_Event(X_up, Y_up, X_down, Y_down, 7 , 13, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??Setup_Event_1:
   \   00000032   2100               MOVS     R1,R4
   \   00000034   0800               MOVS     R0,R1
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0D21               MOVS     R1,#+13
   \   0000003A   0720               MOVS     R0,#+7
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   2148               LDR      R0,??Setup_Event_0+0x4  ;; Y_down
   \   00000040   0021               MOVS     R1,#+0
   \   00000042   435E               LDRSH    R3,[R0, R1]
   \   00000044   2048               LDR      R0,??Setup_Event_0+0x8  ;; X_down
   \   00000046   425E               LDRSH    R2,[R0, R1]
   \   00000048   2048               LDR      R0,??Setup_Event_0+0xC  ;; Y_up
   \   0000004A   415E               LDRSH    R1,[R0, R1]
   \   0000004C   2048               LDR      R0,??Setup_Event_0+0x10  ;; X_up
   \   0000004E   0025               MOVS     R5,#+0
   \   00000050   405F               LDRSH    R0,[R0, R5]
   \   00000052   ........           BL       List_Event
   \   00000056   04B0               ADD      SP,SP,#+16
   6078                    }
   6079                  if (ans>0)
   \                     ??Setup_Event_2:
   \   00000058   0128               CMP      R0,#+1
   \   0000005A   21DB               BLT      ??Setup_Event_3
   6080                    {
   6081                      repaint=1;
   \   0000005C   0124               MOVS     R4,#+1
   6082                    if (ans!=6) MenuLevel=(MenuLevel*10+ans);
   \   0000005E   0628               CMP      R0,#+6
   \   00000060   05D0               BEQ      ??Setup_Event_4
   \   00000062   1C4D               LDR      R5,??Setup_Event_0+0x14  ;; TextToChangeLength
   \   00000064   A96C               LDR      R1,[R5, #+72]
   \   00000066   0A22               MOVS     R2,#+10
   \   00000068   5143               MULS     R1,R2,R1
   \   0000006A   0918               ADDS     R1,R1,R0
   \   0000006C   A964               STR      R1,[R5, #+72]
   6083                    if (ans==6)
   \                     ??Setup_Event_4:
   \   0000006E   0628               CMP      R0,#+6
   \   00000070   1FD1               BNE      ??Setup_Event_5
   6084                    {
   6085                      char SoundOff;
   6086                      if (AT91C_IFLASH_MEM->Config.SoundOff)
   \   00000072   194B               LDR      R3,??Setup_Event_0+0x18  ;; 0x13d7e9
   \   00000074   6846               MOV      R0,SP
   \   00000076   1978               LDRB     R1,[R3, #+0]
   \   00000078   4A1E               SUBS     R2,R1,#+1
   \   0000007A   9241               SBCS     R2,R2,R2
   \   0000007C   D20F               LSRS     R2,R2,#+31
   \   0000007E   0270               STRB     R2,[R0, #+0]
   6087                        {
   6088                          SoundOff=0;
   6089                        }else{
   6090                          SoundOff=1; 
   6091                        }
   6092                      
   6093                      //zapis do flash
   6094                        unsigned int Save = __get_interrupt_state();  
   \   00000080   ........           BL       __iar_get_interrupt_state
   \   00000084   0500               MOVS     R5,R0
   6095                        __disable_interrupt();
   \   00000086   ........           BL       __iar_disable_interrupt
   6096                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.SoundOff)), (char*) (&(SoundOff)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000008A   2200               MOVS     R2,R4
   \   0000008C   6946               MOV      R1,SP
   \   0000008E   1800               MOVS     R0,R3
   \   00000090   ........           BL       FlashWrite
   6097                        __set_interrupt_state(Save);
   \   00000094   2800               MOVS     R0,R5
   \   00000096   ........           BL       __iar_set_interrupt_state
   6098                        __enable_interrupt();
   \   0000009A   ........           BL       __iar_enable_interrupt
   \   0000009E   08E0               B        ??Setup_Event_5
   6099                        //koniec zapisu do flash
   6100                       
   6101                    }
   6102                    
   6103                    }else if (ans<0){
   \                     ??Setup_Event_3:
   \   000000A0   0028               CMP      R0,#+0
   \   000000A2   06D5               BPL      ??Setup_Event_5
   6104                      MenuLevel=(MenuLevel/10);
   \   000000A4   0B4D               LDR      R5,??Setup_Event_0+0x14  ;; TextToChangeLength
   \   000000A6   A86C               LDR      R0,[R5, #+72]
   \   000000A8   0A21               MOVS     R1,#+10
   \   000000AA   ........           BL       __aeabi_idivmod
   \   000000AE   A864               STR      R0,[R5, #+72]
   6105                      repaint=1;
   \   000000B0   0124               MOVS     R4,#+1
   6106                    } 
   6107                  
   6108                   if (repaint) MenuPaint();
   \                     ??Setup_Event_5:
   \   000000B2   002C               CMP      R4,#+0
   \   000000B4   01D0               BEQ      ??Setup_Event_6
   \   000000B6   ........           BL       MenuPaint
   6109                }//_______________________________________________________________________
   \                     ??Setup_Event_6:
   \   000000BA   38BC               POP      {R3-R5}
   \   000000BC   01BC               POP      {R0}
   \   000000BE   0047               BX       R0               ;; return
   \                     ??Setup_Event_0:
   \   000000C0   ........           DC32     SlaveMode
   \   000000C4   ........           DC32     Y_down
   \   000000C8   ........           DC32     X_down
   \   000000CC   ........           DC32     Y_up
   \   000000D0   ........           DC32     X_up
   \   000000D4   ........           DC32     TextToChangeLength
   \   000000D8   E9D71300           DC32     0x13d7e9
   6110          
   6111          
   6112          
   6113          //Ustawienia jêzyka******************************************************************************************************************
   6114          
   6115                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6116                void SetupLang_Paint(void)
   6117                {  
   \                     SetupLang_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   6118                    //char Y=3;
   6119                    int Y_tmp = 3;   //przesuniêcie w dó³
   6120          
   6121                    List_Paint("Jezyk",2,15,Y_tmp,7,0,Speech[g_leng].Polski, Speech[g_leng].Angielski,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   194C               LDR      R4,??SetupLang_Paint_0  ;; g_leng
   \   00000004   2068               LDR      R0,[R4, #+0]
   \   00000006   1949               LDR      R1,??SetupLang_Paint_0+0x4  ;; 0xa14
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1949               LDR      R1,??SetupLang_Paint_0+0x8  ;; Speech
   \   0000000C   0A18               ADDS     R2,R1,R0
   \   0000000E   194D               LDR      R5,??SetupLang_Paint_0+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0800               MOVS     R0,R1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   1100               MOVS     R1,R2
   \   0000001C   E131               ADDS     R1,R1,#+225
   \   0000001E   D232               ADDS     R2,R2,#+210
   \   00000020   1000               MOVS     R0,R2
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   0720               MOVS     R0,#+7
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   0323               MOVS     R3,#+3
   \   0000002C   0F22               MOVS     R2,#+15
   \   0000002E   0221               MOVS     R1,#+2
   \   00000030   2800               MOVS     R0,R5
   \   00000032   0C30               ADDS     R0,R0,#+12
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   6122                
   6123                    
   6124                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000003A   6846               MOV      R0,SP
   \   0000003C   0ECD               LDM      R5!,{R1-R3}
   \   0000003E   0EC0               STM      R0!,{R1-R3}
   6125                 
   6126                  
   6127                    CopyToCanvasPoint((char *)ekran_tab,45,97-Y_tmp-(15*(g_leng)),8,10); 
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   0A20               MOVS     R0,#+10
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   0823               MOVS     R3,#+8
   \   00000048   5E20               MOVS     R0,#+94
   \   0000004A   2168               LDR      R1,[R4, #+0]
   \   0000004C   0F22               MOVS     R2,#+15
   \   0000004E   5143               MULS     R1,R2,R1
   \   00000050   421A               SUBS     R2,R0,R1
   \   00000052   1206               LSLS     R2,R2,#+24
   \   00000054   120E               LSRS     R2,R2,#+24
   \   00000056   2D21               MOVS     R1,#+45
   \   00000058   02A8               ADD      R0,SP,#+8
   \   0000005A   ........           BL       CopyToCanvasPoint
   \   0000005E   02B0               ADD      SP,SP,#+8
   6128                    
   6129                }//________________________________________________________________________
   \   00000060   3EBC               POP      {R1-R5}
   \   00000062   01BC               POP      {R0}
   \   00000064   0047               BX       R0               ;; return
   \   00000066   C046               Nop      
   \                     ??SetupLang_Paint_0:
   \   00000068   ........           DC32     g_leng
   \   0000006C   140A0000           DC32     0xa14
   \   00000070   ........           DC32     Speech
   \   00000074   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`
   6130          
   6131          
   6132          
   6133                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6134                void SetupLang_Event(void)
   6135                {
   \                     SetupLang_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6136                  int ans;
   6137           
   6138                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 7,3); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1B4C               LDR      R4,??SetupLang_Event_0  ;; X_up
   \   00000004   1B4D               LDR      R5,??SetupLang_Event_0+0x4  ;; Y_up
   \   00000006   0321               MOVS     R1,#+3
   \   00000008   0720               MOVS     R0,#+7
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0220               MOVS     R0,#+2
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   1948               LDR      R0,??SetupLang_Event_0+0x8  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   1848               LDR      R0,??SetupLang_Event_0+0xC  ;; X_down
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   295E               LDRSH    R1,[R5, R0]
   \   00000020   205E               LDRSH    R0,[R4, R0]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   6139            
   6140                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0FD0               BEQ      ??SetupLang_Event_1
   6141                    {
   6142                      if ((ans>0) && (ans<3))
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   1CDB               BLT      ??SetupLang_Event_2
   \   00000030   0328               CMP      R0,#+3
   \   00000032   1ADA               BGE      ??SetupLang_Event_2
   6143                      {
   6144                        g_leng=ans-1;
   \   00000034   1249               LDR      R1,??SetupLang_Event_0+0x10  ;; g_leng
   \   00000036   401E               SUBS     R0,R0,#+1
   \   00000038   0860               STR      R0,[R1, #+0]
   6145                        MenuLevel=(MenuLevel/10);
   \   0000003A   124C               LDR      R4,??SetupLang_Event_0+0x14  ;; TextToChangeLength
   \   0000003C   A06C               LDR      R0,[R4, #+72]
   \   0000003E   0A21               MOVS     R1,#+10
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   A064               STR      R0,[R4, #+72]
   6146                        MenuPaint();
   \   00000046   ........           BL       MenuPaint
   \   0000004A   0EE0               B        ??SetupLang_Event_2
   6147                      }
   6148                    } 
   6149                  else
   6150                    {
   6151                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??SetupLang_Event_1:
   \   0000004C   205E               LDRSH    R0,[R4, R0]
   \   0000004E   0128               CMP      R0,#+1
   \   00000050   0BDB               BLT      ??SetupLang_Event_2
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   285E               LDRSH    R0,[R5, R0]
   \   00000056   0128               CMP      R0,#+1
   \   00000058   07DB               BLT      ??SetupLang_Event_2
   6152                      {
   6153                        MenuLevel=(MenuLevel/10);
   \   0000005A   0A4C               LDR      R4,??SetupLang_Event_0+0x14  ;; TextToChangeLength
   \   0000005C   A06C               LDR      R0,[R4, #+72]
   \   0000005E   0A21               MOVS     R1,#+10
   \   00000060   ........           BL       __aeabi_idivmod
   \   00000064   A064               STR      R0,[R4, #+72]
   6154                        MenuPaint();
   \   00000066   ........           BL       MenuPaint
   6155                      }
   6156                    }
   6157                }//_______________________________________________________________________
   \                     ??SetupLang_Event_2:
   \   0000006A   38BC               POP      {R3-R5}
   \   0000006C   01BC               POP      {R0}
   \   0000006E   0047               BX       R0               ;; return
   \                     ??SetupLang_Event_0:
   \   00000070   ........           DC32     X_up
   \   00000074   ........           DC32     Y_up
   \   00000078   ........           DC32     Y_down
   \   0000007C   ........           DC32     X_down
   \   00000080   ........           DC32     g_leng
   \   00000084   ........           DC32     TextToChangeLength
   6158          
   6159          
   6160          
   6161          
   6162          
   6163          
   6164          
   6165          //Ustawienia hasla wybór poziomu******************************************************************************************************************
   6166          
   6167                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6168                void SetupPass_Paint(void)
   6169                {  
   \                     SetupPass_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   6170          
   6171            
   6172                     
   6173                    if (g_NeedPass==1)
   \   00000002   2448               LDR      R0,??SetupPass_Paint_0  ;; g_NeedPass
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   2348               LDR      R0,??SetupPass_Paint_0+0x4  ;; g_leng
   \   0000000A   0068               LDR      R0,[R0, #+0]
   \   0000000C   28D1               BNE      ??SetupPass_Paint_1
   6174                    {
   6175                      List_Paint(Speech[g_leng].Hasla     ,2,15,10,0,0,Speech[g_leng].HasloWl, Speech[g_leng].ZmHasla,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000E   2349               LDR      R1,??SetupPass_Paint_0+0x8  ;; 0xa14
   \   00000010   4843               MULS     R0,R1,R0
   \   00000012   2349               LDR      R1,??SetupPass_Paint_0+0xC  ;; Speech
   \   00000014   0C18               ADDS     R4,R1,R0
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0800               MOVS     R0,R1
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   FF20               MOVS     R0,#+255
   \   00000022   1E30               ADDS     R0,R0,#+30       ;; #+285
   \   00000024   2118               ADDS     R1,R4,R0
   \   00000026   1F48               LDR      R0,??SetupPass_Paint_0+0x10  ;; 0x555
   \   00000028   2018               ADDS     R0,R4,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   0800               MOVS     R0,R1
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0A23               MOVS     R3,#+10
   \   00000034   0F22               MOVS     R2,#+15
   \   00000036   0221               MOVS     R1,#+2
   \   00000038   C334               ADDS     R4,R4,#+195
   \   0000003A   2000               MOVS     R0,R4
   \   0000003C   ........           BL       List_Paint
   \   00000040   0AB0               ADD      SP,SP,#+40
   6176                      char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};  
   \   00000042   6846               MOV      R0,SP
   \   00000044   1849               LDR      R1,??SetupPass_Paint_0+0x14  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`
   \   00000046   1CC9               LDM      R1!,{R2-R4}
   \   00000048   1CC0               STM      R0!,{R2-R4}
   6177                      CopyToCanvasPoint((char *)ekran_tab,50,97-(10),8,10); 
   \   0000004A   82B0               SUB      SP,SP,#+8
   \   0000004C   0A20               MOVS     R0,#+10
   \   0000004E   0090               STR      R0,[SP, #+0]
   \   00000050   0823               MOVS     R3,#+8
   \   00000052   5722               MOVS     R2,#+87
   \   00000054   3221               MOVS     R1,#+50
   \   00000056   02A8               ADD      R0,SP,#+8
   \   00000058   ........           BL       CopyToCanvasPoint
   \   0000005C   02B0               ADD      SP,SP,#+8
   \   0000005E   15E0               B        ??SetupPass_Paint_2
   6178                    }else
   6179                    {
   6180                      List_Paint(Speech[g_leng].Hasla     ,1,15,10,0,0,Speech[g_leng].HasloWl, 0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12]) 
   \                     ??SetupPass_Paint_1:
   \   00000060   0E49               LDR      R1,??SetupPass_Paint_0+0x8  ;; 0xa14
   \   00000062   4843               MULS     R0,R1,R0
   \   00000064   0E49               LDR      R1,??SetupPass_Paint_0+0xC  ;; Speech
   \   00000066   0C18               ADDS     R4,R1,R0
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   0800               MOVS     R0,R1
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   03B4               PUSH     {R0,R1}
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   0C48               LDR      R0,??SetupPass_Paint_0+0x10  ;; 0x555
   \   00000074   2018               ADDS     R0,R4,R0
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   0800               MOVS     R0,R1
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0A23               MOVS     R3,#+10
   \   0000007E   0F22               MOVS     R2,#+15
   \   00000080   0121               MOVS     R1,#+1
   \   00000082   C334               ADDS     R4,R4,#+195
   \   00000084   2000               MOVS     R0,R4
   \   00000086   ........           BL       List_Paint
   \   0000008A   0AB0               ADD      SP,SP,#+40
   6181                    }
   6182                  
   6183                }//________________________________________________________________________
   \                     ??SetupPass_Paint_2:
   \   0000008C   1FBC               POP      {R0-R4}
   \   0000008E   01BC               POP      {R0}
   \   00000090   0047               BX       R0               ;; return
   \   00000092   C046               Nop      
   \                     ??SetupPass_Paint_0:
   \   00000094   ........           DC32     g_NeedPass
   \   00000098   ........           DC32     g_leng
   \   0000009C   140A0000           DC32     0xa14
   \   000000A0   ........           DC32     Speech
   \   000000A4   55050000           DC32     0x555
   \   000000A8   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`
   6184          
   6185          
   6186          
   6187                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6188                void SetupPass_Event(void)
   6189                {
   \                     SetupPass_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6190                  int ans;
   6191          
   6192                  if (g_NeedPass==1)
   \   00000002   3C4D               LDR      R5,??SetupPass_Event_0  ;; g_NeedPass
   \   00000004   2878               LDRB     R0,[R5, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   14D1               BNE      ??SetupPass_Event_1
   6193                    {  
   6194                      ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,10); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000A   0A21               MOVS     R1,#+10
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   0220               MOVS     R0,#+2
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   3848               LDR      R0,??SetupPass_Event_0+0x4  ;; Y_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   435E               LDRSH    R3,[R0, R1]
   \   0000001C   3748               LDR      R0,??SetupPass_Event_0+0x8  ;; X_down
   \   0000001E   425E               LDRSH    R2,[R0, R1]
   \   00000020   3748               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   00000022   415E               LDRSH    R1,[R0, R1]
   \   00000024   3748               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   00000026   0024               MOVS     R4,#+0
   \   00000028   005F               LDRSH    R0,[R0, R4]
   \   0000002A   ........           BL       List_Event
   \   0000002E   04B0               ADD      SP,SP,#+16
   \   00000030   0400               MOVS     R4,R0
   \   00000032   13E0               B        ??SetupPass_Event_2
   6195                    }else{
   6196                      ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 15, 0,10); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \                     ??SetupPass_Event_1:
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0F21               MOVS     R1,#+15
   \   0000003C   0120               MOVS     R0,#+1
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   2D48               LDR      R0,??SetupPass_Event_0+0x4  ;; Y_down
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   435E               LDRSH    R3,[R0, R1]
   \   00000046   2D48               LDR      R0,??SetupPass_Event_0+0x8  ;; X_down
   \   00000048   425E               LDRSH    R2,[R0, R1]
   \   0000004A   2D48               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   0000004C   415E               LDRSH    R1,[R0, R1]
   \   0000004E   2D48               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   00000050   0024               MOVS     R4,#+0
   \   00000052   005F               LDRSH    R0,[R0, R4]
   \   00000054   ........           BL       List_Event
   \   00000058   04B0               ADD      SP,SP,#+16
   \   0000005A   0400               MOVS     R4,R0
   6197                    }
   6198                  
   6199                  if (ans)          {
   \                     ??SetupPass_Event_2:
   \   0000005C   002C               CMP      R4,#+0
   \   0000005E   33D0               BEQ      ??SetupPass_Event_3
   6200                      if (ans==1)
   \   00000060   012C               CMP      R4,#+1
   \   00000062   27D1               BNE      ??SetupPass_Event_4
   6201                      
   6202                        
   6203                      if (g_NeedPass) 
   \   00000064   2878               LDRB     R0,[R5, #+0]
   \   00000066   0028               CMP      R0,#+0
   \   00000068   12D0               BEQ      ??SetupPass_Event_5
   6204                      {
   6205                        char NeedPassFlag=0xEC;
   \   0000006A   6846               MOV      R0,SP
   \   0000006C   EC21               MOVS     R1,#+236
   \   0000006E   0170               STRB     R1,[R0, #+0]
   6206                        g_NeedPass=0; 
   \   00000070   0020               MOVS     R0,#+0
   \   00000072   2870               STRB     R0,[R5, #+0]
   6207                        //zapis do flash
   6208                        unsigned int Save = __get_interrupt_state();  
   \   00000074   ........           BL       __iar_get_interrupt_state
   \   00000078   0500               MOVS     R5,R0
   6209                        __disable_interrupt();
   \   0000007A   ........           BL       __iar_disable_interrupt
   6210                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.NeedPass1)), (char*) (&(NeedPassFlag)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000007E   0122               MOVS     R2,#+1
   \   00000080   6946               MOV      R1,SP
   \   00000082   2148               LDR      R0,??SetupPass_Event_0+0x14  ;; 0x13d7dc
   \   00000084   ........           BL       FlashWrite
   6211                        __set_interrupt_state(Save);
   \   00000088   2800               MOVS     R0,R5
   \   0000008A   ........           BL       __iar_set_interrupt_state
   \   0000008E   11E0               B        ??SetupPass_Event_4
   6212                        //koniec zapisu do flash
   6213                      }else
   6214                      {
   6215                        g_NeedPass=1;
   \                     ??SetupPass_Event_5:
   \   00000090   0120               MOVS     R0,#+1
   \   00000092   2870               STRB     R0,[R5, #+0]
   6216                        char NeedPassFlag=0xEB;
   \   00000094   6846               MOV      R0,SP
   \   00000096   EB21               MOVS     R1,#+235
   \   00000098   0170               STRB     R1,[R0, #+0]
   6217                        //zapis do flash
   6218                        unsigned int Save = __get_interrupt_state();  
   \   0000009A   ........           BL       __iar_get_interrupt_state
   \   0000009E   0500               MOVS     R5,R0
   6219                        __disable_interrupt();
   \   000000A0   ........           BL       __iar_disable_interrupt
   6220                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.NeedPass1)), (char*) (&(NeedPassFlag)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000A4   0122               MOVS     R2,#+1
   \   000000A6   6946               MOV      R1,SP
   \   000000A8   1748               LDR      R0,??SetupPass_Event_0+0x14  ;; 0x13d7dc
   \   000000AA   ........           BL       FlashWrite
   6221                        __set_interrupt_state(Save);
   \   000000AE   2800               MOVS     R0,R5
   \   000000B0   ........           BL       __iar_set_interrupt_state
   6222                        //koniec zapisu do flash
   6223                      }
   6224                       
   6225                    
   6226                      if (ans==2)
   \                     ??SetupPass_Event_4:
   \   000000B4   022C               CMP      R4,#+2
   \   000000B6   05D1               BNE      ??SetupPass_Event_6
   6227                      {
   6228                         MenuLevel=(MenuLevel*10+1);
   \   000000B8   144D               LDR      R5,??SetupPass_Event_0+0x18  ;; TextToChangeLength
   \   000000BA   A86C               LDR      R0,[R5, #+72]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   4843               MULS     R0,R1,R0
   \   000000C0   401C               ADDS     R0,R0,#+1
   \   000000C2   A864               STR      R0,[R5, #+72]
   6229                      }
   6230                      
   6231                      
   6232                      MenuPaint();
   \                     ??SetupPass_Event_6:
   \   000000C4   ........           BL       MenuPaint
   6233                    }
   6234                    if (ans<0)
   \                     ??SetupPass_Event_3:
   \   000000C8   002C               CMP      R4,#+0
   \   000000CA   10D5               BPL      ??SetupPass_Event_7
   6235                    {
   6236                      if ((X_up>0) &&(Y_up>0)) 
   \   000000CC   0D48               LDR      R0,??SetupPass_Event_0+0x10  ;; X_up
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   405E               LDRSH    R0,[R0, R1]
   \   000000D2   0128               CMP      R0,#+1
   \   000000D4   0BDB               BLT      ??SetupPass_Event_7
   \   000000D6   0A48               LDR      R0,??SetupPass_Event_0+0xC  ;; Y_up
   \   000000D8   405E               LDRSH    R0,[R0, R1]
   \   000000DA   0128               CMP      R0,#+1
   \   000000DC   07DB               BLT      ??SetupPass_Event_7
   6237                      {
   6238                        MenuLevel=(MenuLevel/10);
   \   000000DE   0B4D               LDR      R5,??SetupPass_Event_0+0x18  ;; TextToChangeLength
   \   000000E0   A86C               LDR      R0,[R5, #+72]
   \   000000E2   0A21               MOVS     R1,#+10
   \   000000E4   ........           BL       __aeabi_idivmod
   \   000000E8   A864               STR      R0,[R5, #+72]
   6239                        MenuPaint();
   \   000000EA   ........           BL       MenuPaint
   6240                      }
   6241                    }
   6242                }//_______________________________________________________________________
   \                     ??SetupPass_Event_7:
   \   000000EE   38BC               POP      {R3-R5}
   \   000000F0   01BC               POP      {R0}
   \   000000F2   0047               BX       R0               ;; return
   \                     ??SetupPass_Event_0:
   \   000000F4   ........           DC32     g_NeedPass
   \   000000F8   ........           DC32     Y_down
   \   000000FC   ........           DC32     X_down
   \   00000100   ........           DC32     Y_up
   \   00000104   ........           DC32     X_up
   \   00000108   DCD71300           DC32     0x13d7dc
   \   0000010C   ........           DC32     TextToChangeLength
   6243          
   6244          
   6245                
   6246          
   6247          
   6248          
   6249          
   6250          //Wpisanie obecnego has³a  poziom 1/2**************************************************************************************************************
   6251                char InsertOldPass1[9]={0,0,0,0,0,0,0,0,0};
   6252              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6253              void SetupOldPass_Paint()
   6254              {  
   \                     SetupOldPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   6255                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   1B4C               LDR      R4,??SetupOldPass_Paint_0  ;; 0xa14
   \   00000004   1B4D               LDR      R5,??SetupOldPass_Paint_0+0x4  ;; g_leng
   \   00000006   1C4E               LDR      R6,??SetupOldPass_Paint_0+0x8  ;; Speech
   \   00000008   1CA2               ADR      R2,??SetupOldPass_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000A   1DA1               ADR      R1,??SetupOldPass_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000C   FF20               MOVS     R0,#+255
   \   0000000E   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000010   2B68               LDR      R3,[R5, #+0]
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   F318               ADDS     R3,R6,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   6256                    
   6257                    Label(Speech[g_leng].ObecneHaslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   7F21               MOVS     R1,#+127
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   3A21               MOVS     R1,#+58
   \   00000028   0F20               MOVS     R0,#+15
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   6623               MOVS     R3,#+102
   \   0000002E   0322               MOVS     R2,#+3
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   FF20               MOVS     R0,#+255
   \   00000034   7830               ADDS     R0,R0,#+120      ;; #+375
   \   00000036   2D68               LDR      R5,[R5, #+0]
   \   00000038   6543               MULS     R5,R4,R5
   \   0000003A   7419               ADDS     R4,R6,R5
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       Label
   \   00000042   06B0               ADD      SP,SP,#+24
   6258              
   6259                    if (InsertOldPass1[8])  Label(InsertOldPass1,2,4,90,8,55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000044   0F4C               LDR      R4,??SetupOldPass_Paint_0+0x14  ;; InsertOldPass1
   \   00000046   207A               LDRB     R0,[R4, #+8]
   \   00000048   0028               CMP      R0,#+0
   \   0000004A   0ED0               BEQ      ??SetupOldPass_Paint_1
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   7F21               MOVS     R1,#+127
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   3721               MOVS     R1,#+55
   \   00000058   0820               MOVS     R0,#+8
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   5A23               MOVS     R3,#+90
   \   0000005E   0422               MOVS     R2,#+4
   \   00000060   0221               MOVS     R1,#+2
   \   00000062   2000               MOVS     R0,R4
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
   6260          
   6261                    
   6262              }//________________________________________________________________________
   \                     ??SetupOldPass_Paint_1:
   \   0000006A   70BC               POP      {R4-R6}
   \   0000006C   01BC               POP      {R0}
   \   0000006E   0047               BX       R0               ;; return
   \                     ??SetupOldPass_Paint_0:
   \   00000070   140A0000           DC32     0xa14
   \   00000074   ........           DC32     g_leng
   \   00000078   ........           DC32     Speech
   \   0000007C   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000080   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000084   ........           DC32     InsertOldPass1
   6263          
   6264          
   6265              
   6266              //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6267              void SetupOldPass_Event(char level)
   6268              {
   \                     SetupOldPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   6269                  int ans;
   6270                  char roz=0;
   6271          
   6272                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   5E48               LDR      R0,??SetupOldPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   5E48               LDR      R0,??SetupOldPass_Event_0+0x4  ;; X_down
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   5E48               LDR      R0,??SetupOldPass_Event_0+0x8  ;; Y_up
   \   00000010   415E               LDRSH    R1,[R0, R1]
   \   00000012   5E48               LDR      R0,??SetupOldPass_Event_0+0xC  ;; X_up
   \   00000014   0024               MOVS     R4,#+0
   \   00000016   005F               LDRSH    R0,[R0, R4]
   \   00000018   ........           BL       Number_Event
   \   0000001C   0400               MOVS     R4,R0
   6273            
   6274                  if (ans>0)
   \   0000001E   012C               CMP      R4,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   94E0               B        ??SetupOldPass_Event_1
   6275                    {
   6276                      
   6277                      //MenuPaint();
   6278                      if (InsertOldPass1[8]<=7) 
   \   00000024   5A4D               LDR      R5,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1
   \   00000026   287A               LDRB     R0,[R5, #+8]
   \   00000028   0828               CMP      R0,#+8
   \   0000002A   10D2               BCS      ??SetupOldPass_Event_2
   6279                      { 
   6280                          if ((ans<10) || (ans==11)) 
   \   0000002C   0A2C               CMP      R4,#+10
   \   0000002E   01DB               BLT      ??SetupOldPass_Event_3
   \   00000030   0B2C               CMP      R4,#+11
   \   00000032   0CD1               BNE      ??SetupOldPass_Event_2
   6281                          {
   6282                            if (ans<10) InsertOldPass1[InsertOldPass1[8]]=ans+48;
   \                     ??SetupOldPass_Event_3:
   \   00000034   0A2C               CMP      R4,#+10
   \   00000036   02DA               BGE      ??SetupOldPass_Event_4
   \   00000038   2100               MOVS     R1,R4
   \   0000003A   3031               ADDS     R1,R1,#+48
   \   0000003C   2954               STRB     R1,[R5, R0]
   6283                            if (ans==11) InsertOldPass1[InsertOldPass1[8]]=ans+37;
   \                     ??SetupOldPass_Event_4:
   \   0000003E   0B2C               CMP      R4,#+11
   \   00000040   02D1               BNE      ??SetupOldPass_Event_5
   \   00000042   287A               LDRB     R0,[R5, #+8]
   \   00000044   3021               MOVS     R1,#+48
   \   00000046   2954               STRB     R1,[R5, R0]
   6284                            InsertOldPass1[8]++;
   \                     ??SetupOldPass_Event_5:
   \   00000048   287A               LDRB     R0,[R5, #+8]
   \   0000004A   401C               ADDS     R0,R0,#+1
   \   0000004C   2872               STRB     R0,[R5, #+8]
   6285                            
   6286                          }
   6287                          
   6288                      }
   6289                      
   6290                      if ((ans==10) && (InsertOldPass1[8]>0) ) 
   \                     ??SetupOldPass_Event_2:
   \   0000004E   0A2C               CMP      R4,#+10
   \   00000050   08D1               BNE      ??SetupOldPass_Event_6
   \   00000052   287A               LDRB     R0,[R5, #+8]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   05D0               BEQ      ??SetupOldPass_Event_6
   6291                      {InsertOldPass1[8]--; 
   \   00000058   401E               SUBS     R0,R0,#+1
   \   0000005A   2872               STRB     R0,[R5, #+8]
   6292                      InsertOldPass1[InsertOldPass1[8]]=0;
   \   0000005C   0006               LSLS     R0,R0,#+24
   \   0000005E   000E               LSRS     R0,R0,#+24
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   2954               STRB     R1,[R5, R0]
   6293                      }
   6294                      
   6295                      if (ans==12)
   \                     ??SetupOldPass_Event_6:
   \   00000064   0C2C               CMP      R4,#+12
   \   00000066   5DD1               BNE      ??SetupOldPass_Event_7
   6296                      {
   6297                        roz=0;
   \   00000068   0020               MOVS     R0,#+0
   \   0000006A   0100               MOVS     R1,R0
   6298                        for (int i=0; i<=7; i++)
   \   0000006C   0200               MOVS     R2,R0
   \   0000006E   13E0               B        ??SetupOldPass_Event_8
   6299                        {
   6300                            if ((g_Password_1[i]!=InsertOldPass1[i]) && (level==1)) roz=1;
   \                     ??SetupOldPass_Event_9:
   \   00000070   AB5C               LDRB     R3,[R5, R2]
   \   00000072   484E               LDR      R6,??SetupOldPass_Event_0+0x14  ;; g_Password_1
   \   00000074   B65C               LDRB     R6,[R6, R2]
   \   00000076   9E42               CMP      R6,R3
   \   00000078   04D0               BEQ      ??SetupOldPass_Event_10
   \   0000007A   6E46               MOV      R6,SP
   \   0000007C   367A               LDRB     R6,[R6, #+8]
   \   0000007E   012E               CMP      R6,#+1
   \   00000080   00D1               BNE      ??SetupOldPass_Event_10
   \   00000082   0121               MOVS     R1,#+1
   6301                            if ((g_Password_2[i]!=InsertOldPass1[i]) && (level==2)) roz=1;
   \                     ??SetupOldPass_Event_10:
   \   00000084   444E               LDR      R6,??SetupOldPass_Event_0+0x18  ;; g_Password_2
   \   00000086   B65C               LDRB     R6,[R6, R2]
   \   00000088   9E42               CMP      R6,R3
   \   0000008A   04D0               BEQ      ??SetupOldPass_Event_11
   \   0000008C   6B46               MOV      R3,SP
   \   0000008E   1B7A               LDRB     R3,[R3, #+8]
   \   00000090   022B               CMP      R3,#+2
   \   00000092   00D1               BNE      ??SetupOldPass_Event_11
   \   00000094   0121               MOVS     R1,#+1
   6302                        }
   \                     ??SetupOldPass_Event_11:
   \   00000096   521C               ADDS     R2,R2,#+1
   \                     ??SetupOldPass_Event_8:
   \   00000098   082A               CMP      R2,#+8
   \   0000009A   E9DB               BLT      ??SetupOldPass_Event_9
   6303                        
   6304                        //has³o programisty
   6305                        if (roz)
   \   0000009C   0029               CMP      R1,#+0
   \   0000009E   1BD0               BEQ      ??SetupOldPass_Event_12
   6306                        {
   6307                          roz=0;
   \   000000A0   0100               MOVS     R1,R0
   6308                          char MHS[]="060480";
   \   000000A2   6A46               MOV      R2,SP
   \   000000A4   3D4B               LDR      R3,??SetupOldPass_Event_0+0x1C  ;; `?<Constant "060480">_1`
   \   000000A6   C0CB               LDM      R3!,{R6,R7}
   \   000000A8   C0C2               STM      R2!,{R6,R7}
   6309                            for (int i=0; i<6; i++)
   \   000000AA   0200               MOVS     R2,R0
   \   000000AC   12E0               B        ??SetupOldPass_Event_13
   \                     ??SetupOldPass_Event_14:
   \   000000AE   3C4B               LDR      R3,??SetupOldPass_Event_0+0x20  ;; InsertPass1
   \   000000B0   9B5C               LDRB     R3,[R3, R2]
   \   000000B2   6E46               MOV      R6,SP
   \   000000B4   B65C               LDRB     R6,[R6, R2]
   \   000000B6   9E42               CMP      R6,R3
   \   000000B8   04D0               BEQ      ??SetupOldPass_Event_15
   \   000000BA   6F46               MOV      R7,SP
   \   000000BC   3F7A               LDRB     R7,[R7, #+8]
   \   000000BE   012F               CMP      R7,#+1
   \   000000C0   00D1               BNE      ??SetupOldPass_Event_15
   6310                            {
   6311                                if ((MHS[i]!=InsertPass1[i]) && (level==1)) roz=1;
   \   000000C2   0121               MOVS     R1,#+1
   6312                                if ((MHS[i]!=InsertPass1[i]) && (level==2)) roz=1;
   \                     ??SetupOldPass_Event_15:
   \   000000C4   9E42               CMP      R6,R3
   \   000000C6   04D0               BEQ      ??SetupOldPass_Event_16
   \   000000C8   6B46               MOV      R3,SP
   \   000000CA   1B7A               LDRB     R3,[R3, #+8]
   \   000000CC   022B               CMP      R3,#+2
   \   000000CE   00D1               BNE      ??SetupOldPass_Event_16
   \   000000D0   0121               MOVS     R1,#+1
   6313                            }              
   \                     ??SetupOldPass_Event_16:
   \   000000D2   521C               ADDS     R2,R2,#+1
   \                     ??SetupOldPass_Event_13:
   \   000000D4   062A               CMP      R2,#+6
   \   000000D6   EADB               BLT      ??SetupOldPass_Event_14
   6314                        }
   6315                        
   6316                        if (roz==0)
   \                     ??SetupOldPass_Event_12:
   \   000000D8   0029               CMP      R1,#+0
   \   000000DA   10D1               BNE      ??SetupOldPass_Event_17
   6317                        {
   6318                           MenuLevel=(MenuLevel*10+1);
   \   000000DC   314E               LDR      R6,??SetupOldPass_Event_0+0x24  ;; TextToChangeLength
   \   000000DE   B16C               LDR      R1,[R6, #+72]
   \   000000E0   0A22               MOVS     R2,#+10
   \   000000E2   5143               MULS     R1,R2,R1
   \   000000E4   491C               ADDS     R1,R1,#+1
   \   000000E6   B164               STR      R1,[R6, #+72]
   6319                           for (int i=0; i<=7; i++) InsertOldPass1[i]=0;
   \   000000E8   0100               MOVS     R1,R0
   \   000000EA   0200               MOVS     R2,R0
   \   000000EC   01E0               B        ??SetupOldPass_Event_18
   \                     ??SetupOldPass_Event_19:
   \   000000EE   6A54               STRB     R2,[R5, R1]
   \   000000F0   491C               ADDS     R1,R1,#+1
   \                     ??SetupOldPass_Event_18:
   \   000000F2   0829               CMP      R1,#+8
   \   000000F4   FBDB               BLT      ??SetupOldPass_Event_19
   6320                           InsertOldPass1[8]=0;
   \   000000F6   2872               STRB     R0,[R5, #+8]
   6321                           MenuPaint();
   \   000000F8   ........           BL       MenuPaint
   \   000000FC   12E0               B        ??SetupOldPass_Event_7
   6322                        } 
   6323                        else
   6324                        {
   6325                           //informacja o b³ednym hale
   6326                          Message_Paint(2,"",Speech[g_leng].Bledne,Speech[g_leng].haslo,"","");
   \                     ??SetupOldPass_Event_17:
   \   000000FE   2A48               LDR      R0,??SetupOldPass_Event_0+0x28  ;; g_leng
   \   00000100   0068               LDR      R0,[R0, #+0]
   \   00000102   2A49               LDR      R1,??SetupOldPass_Event_0+0x2C  ;; 0xa14
   \   00000104   4843               MULS     R0,R1,R0
   \   00000106   2A49               LDR      R1,??SetupOldPass_Event_0+0x30  ;; Speech
   \   00000108   0A18               ADDS     R2,R1,R0
   \   0000010A   2AA0               ADR      R0,??SetupOldPass_Event_0+0x34  ;; 0x00, 0x00, 0x00, 0x00
   \   0000010C   0100               MOVS     R1,R0
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   FF21               MOVS     R1,#+255
   \   00000112   B431               ADDS     R1,R1,#+180      ;; #+435
   \   00000114   5318               ADDS     R3,R2,R1
   \   00000116   0F39               SUBS     R1,R1,#+15
   \   00000118   5218               ADDS     R2,R2,R1
   \   0000011A   0100               MOVS     R1,R0
   \   0000011C   0220               MOVS     R0,#+2
   \   0000011E   ........           BL       Message_Paint
   \   00000122   02B0               ADD      SP,SP,#+8
   6327                        }
   6328               
   6329                      }
   6330                      
   6331                      if ((ans>=1) && (ans<=11)) 
   \                     ??SetupOldPass_Event_7:
   \   00000124   012C               CMP      R4,#+1
   \   00000126   12DB               BLT      ??SetupOldPass_Event_1
   \   00000128   0C2C               CMP      R4,#+12
   \   0000012A   10DA               BGE      ??SetupOldPass_Event_1
   6332                      {
   6333                        MenuPaint();
   \   0000012C   ........           BL       MenuPaint
   6334                        Label(InsertOldPass1,2,4,90,InsertOldPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000130   82B0               SUB      SP,SP,#+8
   \   00000132   0020               MOVS     R0,#+0
   \   00000134   0090               STR      R0,[SP, #+0]
   \   00000136   7F21               MOVS     R1,#+127
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   3721               MOVS     R1,#+55
   \   0000013C   287A               LDRB     R0,[R5, #+8]
   \   0000013E   03B4               PUSH     {R0,R1}
   \   00000140   5A23               MOVS     R3,#+90
   \   00000142   0422               MOVS     R2,#+4
   \   00000144   0221               MOVS     R1,#+2
   \   00000146   2800               MOVS     R0,R5
   \   00000148   ........           BL       Label
   \   0000014C   06B0               ADD      SP,SP,#+24
   6335                      }
   6336                      
   6337                      
   6338                    }
   6339                  if (ans<0)
   \                     ??SetupOldPass_Event_1:
   \   0000014E   002C               CMP      R4,#+0
   \   00000150   12D5               BPL      ??SetupOldPass_Event_20
   6340                    {
   6341                        MenuLevel=(MenuLevel/100);
   \   00000152   144E               LDR      R6,??SetupOldPass_Event_0+0x24  ;; TextToChangeLength
   \   00000154   B06C               LDR      R0,[R6, #+72]
   \   00000156   6421               MOVS     R1,#+100
   \   00000158   ........           BL       __aeabi_idivmod
   \   0000015C   B064               STR      R0,[R6, #+72]
   6342                        MenuPaint();
   \   0000015E   ........           BL       MenuPaint
   6343                        for (int i=0; i<=7; i++) InsertOldPass1[i]=0;
   \   00000162   0020               MOVS     R0,#+0
   \   00000164   0100               MOVS     R1,R0
   \   00000166   0A4A               LDR      R2,??SetupOldPass_Event_0+0x10  ;; InsertOldPass1
   \   00000168   0300               MOVS     R3,R0
   \   0000016A   01E0               B        ??SetupOldPass_Event_21
   \                     ??SetupOldPass_Event_22:
   \   0000016C   5354               STRB     R3,[R2, R1]
   \   0000016E   491C               ADDS     R1,R1,#+1
   \                     ??SetupOldPass_Event_21:
   \   00000170   0829               CMP      R1,#+8
   \   00000172   FBDB               BLT      ??SetupOldPass_Event_22
   6344                        InsertOldPass1[8]=0;
   \   00000174   1049               LDR      R1,??SetupOldPass_Event_0+0x38  ;; InsertOldPass1 + 8
   \   00000176   0870               STRB     R0,[R1, #+0]
   6345                    }
   6346               
   6347              }//________________________________________________________________________
   \                     ??SetupOldPass_Event_20:
   \   00000178   FEBC               POP      {R1-R7}
   \   0000017A   01BC               POP      {R0}
   \   0000017C   0047               BX       R0               ;; return
   \   0000017E   C046               Nop      
   \                     ??SetupOldPass_Event_0:
   \   00000180   ........           DC32     Y_down
   \   00000184   ........           DC32     X_down
   \   00000188   ........           DC32     Y_up
   \   0000018C   ........           DC32     X_up
   \   00000190   ........           DC32     InsertOldPass1
   \   00000194   ........           DC32     g_Password_1
   \   00000198   ........           DC32     g_Password_2
   \   0000019C   ........           DC32     `?<Constant "060480">_1`
   \   000001A0   ........           DC32     InsertPass1
   \   000001A4   ........           DC32     TextToChangeLength
   \   000001A8   ........           DC32     g_leng
   \   000001AC   140A0000           DC32     0xa14
   \   000001B0   ........           DC32     Speech
   \   000001B4   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000001B8   ........           DC32     InsertOldPass1 + 8
   6348          
   6349              
   6350          
   6351          
   6352          //Wpisanie nowego has³a  poziom 1**************************************************************************************************************
   6353              char InsertNewPass1[9]={0,0,0,0,0,0,0,0,0};
   6354              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6355              void SetupNewPass_Paint(void)
   6356              {  
   \                     SetupNewPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   6357                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   1C4C               LDR      R4,??SetupNewPass_Paint_0  ;; 0xa14
   \   00000004   1C4D               LDR      R5,??SetupNewPass_Paint_0+0x4  ;; g_leng
   \   00000006   1D4E               LDR      R6,??SetupNewPass_Paint_0+0x8  ;; Speech
   \   00000008   1DA2               ADR      R2,??SetupNewPass_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000A   1EA1               ADR      R1,??SetupNewPass_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000C   FF20               MOVS     R0,#+255
   \   0000000E   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000010   2B68               LDR      R3,[R5, #+0]
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   F318               ADDS     R3,R6,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   6358                    
   6359                    Label(Speech[g_leng].NoweHaslo,0,3,102,15,58,0,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   7F21               MOVS     R1,#+127
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   3A21               MOVS     R1,#+58
   \   00000028   0F20               MOVS     R0,#+15
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   6623               MOVS     R3,#+102
   \   0000002E   0322               MOVS     R2,#+3
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   C320               MOVS     R0,#+195
   \   00000034   4000               LSLS     R0,R0,#+1        ;; #+390
   \   00000036   2D68               LDR      R5,[R5, #+0]
   \   00000038   6543               MULS     R5,R4,R5
   \   0000003A   7419               ADDS     R4,R6,R5
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       Label
   \   00000042   06B0               ADD      SP,SP,#+24
   6360              
   6361                    if (InsertNewPass1[8])  Label(InsertNewPass1,2,4,90,8,55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000044   104C               LDR      R4,??SetupNewPass_Paint_0+0x14  ;; InsertOldPass1
   \   00000046   207D               LDRB     R0,[R4, #+20]
   \   00000048   0028               CMP      R0,#+0
   \   0000004A   0FD0               BEQ      ??SetupNewPass_Paint_1
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   7F21               MOVS     R1,#+127
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   3721               MOVS     R1,#+55
   \   00000058   0820               MOVS     R0,#+8
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   5A23               MOVS     R3,#+90
   \   0000005E   0422               MOVS     R2,#+4
   \   00000060   0221               MOVS     R1,#+2
   \   00000062   0C34               ADDS     R4,R4,#+12
   \   00000064   2000               MOVS     R0,R4
   \   00000066   ........           BL       Label
   \   0000006A   06B0               ADD      SP,SP,#+24
   6362          
   6363                    
   6364              }//________________________________________________________________________
   \                     ??SetupNewPass_Paint_1:
   \   0000006C   70BC               POP      {R4-R6}
   \   0000006E   01BC               POP      {R0}
   \   00000070   0047               BX       R0               ;; return
   \   00000072   C046               Nop      
   \                     ??SetupNewPass_Paint_0:
   \   00000074   140A0000           DC32     0xa14
   \   00000078   ........           DC32     g_leng
   \   0000007C   ........           DC32     Speech
   \   00000080   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   00000084   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   00000088   ........           DC32     InsertOldPass1
   6365          
   6366          
   6367          
   6368              //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6369              void SetupNewPass_Event(char level)
   6370              {
   \                     SetupNewPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   6371                  int ans;
   6372                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   5C48               LDR      R0,??SetupNewPass_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   435E               LDRSH    R3,[R0, R1]
   \   0000000A   5C48               LDR      R0,??SetupNewPass_Event_0+0x4  ;; X_down
   \   0000000C   425E               LDRSH    R2,[R0, R1]
   \   0000000E   5C48               LDR      R0,??SetupNewPass_Event_0+0x8  ;; Y_up
   \   00000010   415E               LDRSH    R1,[R0, R1]
   \   00000012   5C48               LDR      R0,??SetupNewPass_Event_0+0xC  ;; X_up
   \   00000014   0025               MOVS     R5,#+0
   \   00000016   405F               LDRSH    R0,[R0, R5]
   \   00000018   ........           BL       Number_Event
   \   0000001C   0500               MOVS     R5,R0
   6373            
   6374                  if (ans>0)
   \   0000001E   012D               CMP      R5,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   90E0               B        ??SetupNewPass_Event_1
   6375                    {
   6376                      //MenuPaint();
   6377                      if (InsertNewPass1[8]<=7) 
   \   00000024   584E               LDR      R6,??SetupNewPass_Event_0+0x10  ;; InsertOldPass1
   \   00000026   307D               LDRB     R0,[R6, #+20]
   \   00000028   0828               CMP      R0,#+8
   \   0000002A   12D2               BCS      ??SetupNewPass_Event_2
   6378                      { 
   6379                          if ((ans<10) || (ans==11)) 
   \   0000002C   0A2D               CMP      R5,#+10
   \   0000002E   01DB               BLT      ??SetupNewPass_Event_3
   \   00000030   0B2D               CMP      R5,#+11
   \   00000032   0ED1               BNE      ??SetupNewPass_Event_2
   6380                          {
   6381                            if (ans<10) InsertNewPass1[InsertNewPass1[8]]=ans+48;
   \                     ??SetupNewPass_Event_3:
   \   00000034   0A2D               CMP      R5,#+10
   \   00000036   03DA               BGE      ??SetupNewPass_Event_4
   \   00000038   3018               ADDS     R0,R6,R0
   \   0000003A   2900               MOVS     R1,R5
   \   0000003C   3031               ADDS     R1,R1,#+48
   \   0000003E   0173               STRB     R1,[R0, #+12]
   6382                            if (ans==11) InsertNewPass1[InsertNewPass1[8]]=ans+37;
   \                     ??SetupNewPass_Event_4:
   \   00000040   0B2D               CMP      R5,#+11
   \   00000042   03D1               BNE      ??SetupNewPass_Event_5
   \   00000044   307D               LDRB     R0,[R6, #+20]
   \   00000046   3018               ADDS     R0,R6,R0
   \   00000048   3021               MOVS     R1,#+48
   \   0000004A   0173               STRB     R1,[R0, #+12]
   6383                            InsertNewPass1[8]++;
   \                     ??SetupNewPass_Event_5:
   \   0000004C   307D               LDRB     R0,[R6, #+20]
   \   0000004E   401C               ADDS     R0,R0,#+1
   \   00000050   3075               STRB     R0,[R6, #+20]
   6384                          }
   6385                          
   6386                      }
   6387                      if ((ans==10) && (InsertNewPass1[8]>0) ) {InsertNewPass1[8]--; InsertNewPass1[InsertOldPass1[8]]=0;}
   \                     ??SetupNewPass_Event_2:
   \   00000052   0A2D               CMP      R5,#+10
   \   00000054   08D1               BNE      ??SetupNewPass_Event_6
   \   00000056   307D               LDRB     R0,[R6, #+20]
   \   00000058   0028               CMP      R0,#+0
   \   0000005A   05D0               BEQ      ??SetupNewPass_Event_6
   \   0000005C   401E               SUBS     R0,R0,#+1
   \   0000005E   3075               STRB     R0,[R6, #+20]
   \   00000060   307A               LDRB     R0,[R6, #+8]
   \   00000062   3018               ADDS     R0,R6,R0
   \   00000064   0021               MOVS     R1,#+0
   \   00000066   0173               STRB     R1,[R0, #+12]
   6388                      //Label(InsertNewPass1,2,4,90,InsertNewPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   6389                      
   6390                      
   6391                      
   6392                      
   6393                      
   6394                      if ((ans==12) && (InsertNewPass1[8]>0))
   \                     ??SetupNewPass_Event_6:
   \   00000068   0C2D               CMP      R5,#+12
   \   0000006A   56D1               BNE      ??SetupNewPass_Event_7
   \   0000006C   307D               LDRB     R0,[R6, #+20]
   \   0000006E   0028               CMP      R0,#+0
   \   00000070   53D0               BEQ      ??SetupNewPass_Event_7
   6395                      {
   6396                        
   6397                        for (int i=0; i<=7; i++)
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0100               MOVS     R1,R0
   \   00000076   0FE0               B        ??SetupNewPass_Event_8
   6398                        {
   6399                            if (level==1) g_Password_1[i]=InsertNewPass1[i];
   \                     ??SetupNewPass_Event_9:
   \   00000078   012C               CMP      R4,#+1
   \   0000007A   03D1               BNE      ??SetupNewPass_Event_10
   \   0000007C   434A               LDR      R2,??SetupNewPass_Event_0+0x14  ;; g_Password_1
   \   0000007E   7318               ADDS     R3,R6,R1
   \   00000080   1B7B               LDRB     R3,[R3, #+12]
   \   00000082   5354               STRB     R3,[R2, R1]
   6400                            if (level==2) g_Password_2[i]=InsertNewPass1[i];
   \                     ??SetupNewPass_Event_10:
   \   00000084   022C               CMP      R4,#+2
   \   00000086   03D1               BNE      ??SetupNewPass_Event_11
   \   00000088   414A               LDR      R2,??SetupNewPass_Event_0+0x18  ;; g_Password_2
   \   0000008A   7318               ADDS     R3,R6,R1
   \   0000008C   1B7B               LDRB     R3,[R3, #+12]
   \   0000008E   5354               STRB     R3,[R2, R1]
   6401                            InsertNewPass1[i]=0;
   \                     ??SetupNewPass_Event_11:
   \   00000090   7218               ADDS     R2,R6,R1
   \   00000092   0300               MOVS     R3,R0
   \   00000094   1373               STRB     R3,[R2, #+12]
   6402                        }
   \   00000096   491C               ADDS     R1,R1,#+1
   \                     ??SetupNewPass_Event_8:
   \   00000098   0829               CMP      R1,#+8
   \   0000009A   EDDB               BLT      ??SetupNewPass_Event_9
   6403                        InsertNewPass1[8]=0;
   \   0000009C   3075               STRB     R0,[R6, #+20]
   6404          
   6405                        //zapis has³a do flash
   6406                        unsigned int Save = __get_interrupt_state();  
   \   0000009E   ........           BL       __iar_get_interrupt_state
   \   000000A2   0700               MOVS     R7,R0
   6407                        __disable_interrupt();
   \   000000A4   ........           BL       __iar_disable_interrupt
   \   000000A8   0122               MOVS     R2,#+1
   \   000000AA   3849               LDR      R1,??SetupNewPass_Event_0+0x14  ;; g_Password_1
   \   000000AC   3948               LDR      R0,??SetupNewPass_Event_0+0x1C  ;; 0x13d7dd
   6408                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.Pass1[0])),0,g_Password_1,9);
   6409                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Pass1[0])), (char*) (&(g_Password_1)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000AE   ........           BL       FlashWrite
   6410                        __set_interrupt_state(Save);
   \   000000B2   3800               MOVS     R0,R7
   \   000000B4   ........           BL       __iar_set_interrupt_state
   6411                        //koniec zapisu do flash
   6412                        
   6413          
   6414                        
   6415                           //informacja o zmianie hasla
   6416                         MenuLevel=(MenuLevel/1000);
   \   000000B8   374F               LDR      R7,??SetupNewPass_Event_0+0x20  ;; TextToChangeLength
   \   000000BA   B86C               LDR      R0,[R7, #+72]
   \   000000BC   FA21               MOVS     R1,#+250
   \   000000BE   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   000000C0   ........           BL       __aeabi_idivmod
   \   000000C4   B864               STR      R0,[R7, #+72]
   6417                          if (level==1) Message_Paint(2,Speech[g_leng].Nowe,Speech[g_leng].haslo,"------------",g_Password_1,"");
   \   000000C6   012C               CMP      R4,#+1
   \   000000C8   12D1               BNE      ??SetupNewPass_Event_12
   \   000000CA   3448               LDR      R0,??SetupNewPass_Event_0+0x24  ;; 0xa14
   \   000000CC   3449               LDR      R1,??SetupNewPass_Event_0+0x28  ;; g_leng
   \   000000CE   354A               LDR      R2,??SetupNewPass_Event_0+0x2C  ;; Speech
   \   000000D0   0968               LDR      R1,[R1, #+0]
   \   000000D2   4143               MULS     R1,R0,R1
   \   000000D4   5718               ADDS     R7,R2,R1
   \   000000D6   34A1               ADR      R1,??SetupNewPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   000000D8   2C48               LDR      R0,??SetupNewPass_Event_0+0x14  ;; g_Password_1
   \   000000DA   03B4               PUSH     {R0,R1}
   \   000000DC   334B               LDR      R3,??SetupNewPass_Event_0+0x34  ;; `?<Constant "------------">`
   \   000000DE   FF20               MOVS     R0,#+255
   \   000000E0   B430               ADDS     R0,R0,#+180      ;; #+435
   \   000000E2   3A18               ADDS     R2,R7,R0
   \   000000E4   0F30               ADDS     R0,R0,#+15
   \   000000E6   3918               ADDS     R1,R7,R0
   \   000000E8   0220               MOVS     R0,#+2
   \   000000EA   ........           BL       Message_Paint
   \   000000EE   02B0               ADD      SP,SP,#+8
   6418                          if (level==2) Message_Paint(2,Speech[g_leng].Nowe,Speech[g_leng].haslo,"------------",g_Password_2,"");
   \                     ??SetupNewPass_Event_12:
   \   000000F0   022C               CMP      R4,#+2
   \   000000F2   12D1               BNE      ??SetupNewPass_Event_7
   \   000000F4   2948               LDR      R0,??SetupNewPass_Event_0+0x24  ;; 0xa14
   \   000000F6   2A49               LDR      R1,??SetupNewPass_Event_0+0x28  ;; g_leng
   \   000000F8   2A4A               LDR      R2,??SetupNewPass_Event_0+0x2C  ;; Speech
   \   000000FA   0968               LDR      R1,[R1, #+0]
   \   000000FC   4143               MULS     R1,R0,R1
   \   000000FE   5418               ADDS     R4,R2,R1
   \   00000100   29A1               ADR      R1,??SetupNewPass_Event_0+0x30  ;; 0x00, 0x00, 0x00, 0x00
   \   00000102   2348               LDR      R0,??SetupNewPass_Event_0+0x18  ;; g_Password_2
   \   00000104   03B4               PUSH     {R0,R1}
   \   00000106   294B               LDR      R3,??SetupNewPass_Event_0+0x34  ;; `?<Constant "------------">`
   \   00000108   FF20               MOVS     R0,#+255
   \   0000010A   B430               ADDS     R0,R0,#+180      ;; #+435
   \   0000010C   2218               ADDS     R2,R4,R0
   \   0000010E   0F30               ADDS     R0,R0,#+15
   \   00000110   2118               ADDS     R1,R4,R0
   \   00000112   0220               MOVS     R0,#+2
   \   00000114   ........           BL       Message_Paint
   \   00000118   02B0               ADD      SP,SP,#+8
   6419                      
   6420                        
   6421                        //MenuPaint();
   6422                      } 
   6423                      
   6424                      
   6425                      if ((ans>=1) && (ans<=11)) 
   \                     ??SetupNewPass_Event_7:
   \   0000011A   012D               CMP      R5,#+1
   \   0000011C   13DB               BLT      ??SetupNewPass_Event_1
   \   0000011E   0C2D               CMP      R5,#+12
   \   00000120   11DA               BGE      ??SetupNewPass_Event_1
   6426                      {
   6427                        MenuPaint();
   \   00000122   ........           BL       MenuPaint
   6428                        Label(InsertNewPass1,2,4,90,InsertNewPass1[8],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000126   82B0               SUB      SP,SP,#+8
   \   00000128   0020               MOVS     R0,#+0
   \   0000012A   0090               STR      R0,[SP, #+0]
   \   0000012C   7F21               MOVS     R1,#+127
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   3721               MOVS     R1,#+55
   \   00000132   307D               LDRB     R0,[R6, #+20]
   \   00000134   03B4               PUSH     {R0,R1}
   \   00000136   5A23               MOVS     R3,#+90
   \   00000138   0422               MOVS     R2,#+4
   \   0000013A   0221               MOVS     R1,#+2
   \   0000013C   0C36               ADDS     R6,R6,#+12
   \   0000013E   3000               MOVS     R0,R6
   \   00000140   ........           BL       Label
   \   00000144   06B0               ADD      SP,SP,#+24
   6429                      }
   6430                      
   6431                      
   6432                     }
   6433                    
   6434                  if (ans<0)
   \                     ??SetupNewPass_Event_1:
   \   00000146   002D               CMP      R5,#+0
   \   00000148   13D5               BPL      ??SetupNewPass_Event_13
   6435                    {
   6436                        MenuLevel=(MenuLevel/100);
   \   0000014A   134F               LDR      R7,??SetupNewPass_Event_0+0x20  ;; TextToChangeLength
   \   0000014C   B86C               LDR      R0,[R7, #+72]
   \   0000014E   6421               MOVS     R1,#+100
   \   00000150   ........           BL       __aeabi_idivmod
   \   00000154   B864               STR      R0,[R7, #+72]
   6437                        MenuPaint();
   \   00000156   ........           BL       MenuPaint
   6438                        for (int i=0; i<=7; i++) InsertNewPass1[i]=0;
   \   0000015A   0020               MOVS     R0,#+0
   \   0000015C   0100               MOVS     R1,R0
   \   0000015E   0300               MOVS     R3,R0
   \   00000160   03E0               B        ??SetupNewPass_Event_14
   \                     ??SetupNewPass_Event_15:
   \   00000162   094A               LDR      R2,??SetupNewPass_Event_0+0x10  ;; InsertOldPass1
   \   00000164   5218               ADDS     R2,R2,R1
   \   00000166   1373               STRB     R3,[R2, #+12]
   \   00000168   491C               ADDS     R1,R1,#+1
   \                     ??SetupNewPass_Event_14:
   \   0000016A   0829               CMP      R1,#+8
   \   0000016C   F9DB               BLT      ??SetupNewPass_Event_15
   6439                        InsertNewPass1[8]=0;
   \   0000016E   1049               LDR      R1,??SetupNewPass_Event_0+0x38  ;; InsertOldPass1 + 20
   \   00000170   0870               STRB     R0,[R1, #+0]
   6440                    }
   6441                
   6442              }//________________________________________________________________________
   \                     ??SetupNewPass_Event_13:
   \   00000172   F8BC               POP      {R3-R7}
   \   00000174   01BC               POP      {R0}
   \   00000176   0047               BX       R0               ;; return
   \                     ??SetupNewPass_Event_0:
   \   00000178   ........           DC32     Y_down
   \   0000017C   ........           DC32     X_down
   \   00000180   ........           DC32     Y_up
   \   00000184   ........           DC32     X_up
   \   00000188   ........           DC32     InsertOldPass1
   \   0000018C   ........           DC32     g_Password_1
   \   00000190   ........           DC32     g_Password_2
   \   00000194   DDD71300           DC32     0x13d7dd
   \   00000198   ........           DC32     TextToChangeLength
   \   0000019C   140A0000           DC32     0xa14
   \   000001A0   ........           DC32     g_leng
   \   000001A4   ........           DC32     Speech
   \   000001A8   00000000           DC8      0x00, 0x00, 0x00, 0x00
   \   000001AC   ........           DC32     `?<Constant "------------">`
   \   000001B0   ........           DC32     InsertOldPass1 + 20
   6443          
   6444          
   6445              
   6446              
   6447              
   6448          
   6449              
   6450              
   6451              
   6452              
   6453          
   6454          //Ustawienia ******************************************************************************************************************
   6455          
   6456          
   6457              
   6458          
   6459          
   6460          //*-----------------------------------------------------------------------------
   6461          //* Nazwa funkcji :    SetTouchScreen_Paint
   6462          //* Funkcja sustawienia ekranu dotykowego
   6463          //*-----------------------------------------------------------------------------
   6464          //*-----------------------------------------------------------------------------
   6465          char SetTouchStep=0;
   6466          
   6467          

   \                                 In section Debug.txt, align 4, keep-with-next
   6468          void SetTouchScreen_Paint(void)
   6469          {
   \                     SetTouchScreen_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   6470          
   6471          if (SetTouchStep==0)
   \   00000002   644C               LDR      R4,??SetTouchScreen_Paint_0  ;; StartAdvance
   \   00000004   6078               LDRB     R0,[R4, #+1]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   08D1               BNE      ??SetTouchScreen_Paint_1
   6472          {
   6473                   korekta_X.A=1;
   \   0000000A   6349               LDR      R1,??SetTouchScreen_Paint_0+0x4  ;; korekta_X
   \   0000000C   FE22               MOVS     R2,#+254
   \   0000000E   9205               LSLS     R2,R2,#+22       ;; #+1065353216
   \   00000010   0A60               STR      R2,[R1, #+0]
   6474                  korekta_X.B=0;
   \   00000012   0023               MOVS     R3,#+0
   \   00000014   4B60               STR      R3,[R1, #+4]
   6475                  korekta_Y.A=1;
   \   00000016   6149               LDR      R1,??SetTouchScreen_Paint_0+0x8  ;; korekta_Y
   \   00000018   0A60               STR      R2,[R1, #+0]
   6476                  korekta_Y.B=0; 
   \   0000001A   4B60               STR      R3,[R1, #+4]
   6477          }
   6478            
   6479          if (SetTouchStep==MaxTouchTest)
   \                     ??SetTouchScreen_Paint_1:
   \   0000001C   0428               CMP      R0,#+4
   \   0000001E   2AD1               BNE      ??SetTouchScreen_Paint_2
   6480          {
   6481                H_line(0,15,127,1);
   \   00000020   0123               MOVS     R3,#+1
   \   00000022   7F22               MOVS     R2,#+127
   \   00000024   0F21               MOVS     R1,#+15
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   ........           BL       H_line
   6482                H_line(0,45,127,1);
   \   0000002C   0123               MOVS     R3,#+1
   \   0000002E   7F22               MOVS     R2,#+127
   \   00000030   2D21               MOVS     R1,#+45
   \   00000032   0020               MOVS     R0,#+0
   \   00000034   ........           BL       H_line
   6483                H_line(0,75,127,1);
   \   00000038   0123               MOVS     R3,#+1
   \   0000003A   7F22               MOVS     R2,#+127
   \   0000003C   4B21               MOVS     R1,#+75
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   ........           BL       H_line
   6484                H_line(0,110,127,1);
   \   00000044   0123               MOVS     R3,#+1
   \   00000046   7F22               MOVS     R2,#+127
   \   00000048   6E21               MOVS     R1,#+110
   \   0000004A   0020               MOVS     R0,#+0
   \   0000004C   ........           BL       H_line
   6485                V_line(15,0,127,1);
   \   00000050   0123               MOVS     R3,#+1
   \   00000052   7F22               MOVS     R2,#+127
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   0F20               MOVS     R0,#+15
   \   00000058   ........           BL       V_line
   6486                V_line(32,0,127,1);
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   7F22               MOVS     R2,#+127
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   2020               MOVS     R0,#+32
   \   00000064   ........           BL       V_line
   6487                V_line(50,0,127,1);
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   7F22               MOVS     R2,#+127
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   3220               MOVS     R0,#+50
   \   00000070   ........           BL       V_line
   \   00000074   8AE0               B        ??SetTouchScreen_Paint_3
   6488          }  
   6489          else
   6490          {
   6491              CleanCanvas();
   \                     ??SetTouchScreen_Paint_2:
   \   00000076   ........           BL       CleanCanvas
   6492            
   6493              Label(Speech[g_leng].Dotknij,    2,1,70,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000007A   494D               LDR      R5,??SetTouchScreen_Paint_0+0xC  ;; 0xa14
   \   0000007C   494E               LDR      R6,??SetTouchScreen_Paint_0+0x10  ;; g_leng
   \   0000007E   4A4F               LDR      R7,??SetTouchScreen_Paint_0+0x14  ;; Speech
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0020               MOVS     R0,#+0
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   8021               MOVS     R1,#+128
   \   00000088   0120               MOVS     R0,#+1
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   3E21               MOVS     R1,#+62
   \   0000008E   0F20               MOVS     R0,#+15
   \   00000090   03B4               PUSH     {R0,R1}
   \   00000092   4623               MOVS     R3,#+70
   \   00000094   0122               MOVS     R2,#+1
   \   00000096   0221               MOVS     R1,#+2
   \   00000098   8C46               MOV      R12,R1
   \   0000009A   A521               MOVS     R1,#+165
   \   0000009C   C900               LSLS     R1,R1,#+3        ;; #+1320
   \   0000009E   3068               LDR      R0,[R6, #+0]
   \   000000A0   6843               MULS     R0,R5,R0
   \   000000A2   3818               ADDS     R0,R7,R0
   \   000000A4   4018               ADDS     R0,R0,R1
   \   000000A6   6146               MOV      R1,R12
   \   000000A8   ........           BL       Label
   \   000000AC   06B0               ADD      SP,SP,#+24
   6494              Label(Speech[g_leng].precyzyjnie,2,1,60,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000AE   82B0               SUB      SP,SP,#+8
   \   000000B0   0020               MOVS     R0,#+0
   \   000000B2   0090               STR      R0,[SP, #+0]
   \   000000B4   8021               MOVS     R1,#+128
   \   000000B6   0120               MOVS     R0,#+1
   \   000000B8   03B4               PUSH     {R0,R1}
   \   000000BA   3E21               MOVS     R1,#+62
   \   000000BC   0F20               MOVS     R0,#+15
   \   000000BE   03B4               PUSH     {R0,R1}
   \   000000C0   3C23               MOVS     R3,#+60
   \   000000C2   0122               MOVS     R2,#+1
   \   000000C4   0221               MOVS     R1,#+2
   \   000000C6   8C46               MOV      R12,R1
   \   000000C8   3849               LDR      R1,??SetTouchScreen_Paint_0+0x18  ;; 0x537
   \   000000CA   3068               LDR      R0,[R6, #+0]
   \   000000CC   6843               MULS     R0,R5,R0
   \   000000CE   3818               ADDS     R0,R7,R0
   \   000000D0   4018               ADDS     R0,R0,R1
   \   000000D2   6146               MOV      R1,R12
   \   000000D4   ........           BL       Label
   \   000000D8   06B0               ADD      SP,SP,#+24
   6495              Label(Speech[g_leng].wskaznik,   2,1,50,15,62,1,128,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000DA   82B0               SUB      SP,SP,#+8
   \   000000DC   0020               MOVS     R0,#+0
   \   000000DE   0090               STR      R0,[SP, #+0]
   \   000000E0   8021               MOVS     R1,#+128
   \   000000E2   0120               MOVS     R0,#+1
   \   000000E4   03B4               PUSH     {R0,R1}
   \   000000E6   3E21               MOVS     R1,#+62
   \   000000E8   0F20               MOVS     R0,#+15
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   3223               MOVS     R3,#+50
   \   000000EE   0122               MOVS     R2,#+1
   \   000000F0   0221               MOVS     R1,#+2
   \   000000F2   2F48               LDR      R0,??SetTouchScreen_Paint_0+0x1C  ;; 0x546
   \   000000F4   3668               LDR      R6,[R6, #+0]
   \   000000F6   6E43               MULS     R6,R5,R6
   \   000000F8   BD19               ADDS     R5,R7,R6
   \   000000FA   2818               ADDS     R0,R5,R0
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   6496          
   6497               CanvasPixel(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y,1);   //(char X, char Y, char Colour)
   \   00000102   2C4D               LDR      R5,??SetTouchScreen_Paint_0+0x20  ;; TouchTestSor
   \   00000104   6078               LDRB     R0,[R4, #+1]
   \   00000106   4000               LSLS     R0,R0,#+1
   \   00000108   2818               ADDS     R0,R5,R0
   \   0000010A   0122               MOVS     R2,#+1
   \   0000010C   1100               MOVS     R1,R2
   \   0000010E   4156               LDRSB    R1,[R0, R1]
   \   00000110   0906               LSLS     R1,R1,#+24
   \   00000112   090E               LSRS     R1,R1,#+24
   \   00000114   0023               MOVS     R3,#+0
   \   00000116   C056               LDRSB    R0,[R0, R3]
   \   00000118   0006               LSLS     R0,R0,#+24
   \   0000011A   000E               LSRS     R0,R0,#+24
   \   0000011C   ........           BL       CanvasPixel
   6498               H_line(TouchTestSor[SetTouchStep].x+2,TouchTestSor[SetTouchStep].y,5,1); // (char X, int Y, char lenght, char typ)
   \   00000120   6078               LDRB     R0,[R4, #+1]
   \   00000122   4000               LSLS     R0,R0,#+1
   \   00000124   2818               ADDS     R0,R5,R0
   \   00000126   0123               MOVS     R3,#+1
   \   00000128   0522               MOVS     R2,#+5
   \   0000012A   1900               MOVS     R1,R3
   \   0000012C   4156               LDRSB    R1,[R0, R1]
   \   0000012E   0026               MOVS     R6,#+0
   \   00000130   8057               LDRSB    R0,[R0, R6]
   \   00000132   801C               ADDS     R0,R0,#+2
   \   00000134   0006               LSLS     R0,R0,#+24
   \   00000136   000E               LSRS     R0,R0,#+24
   \   00000138   ........           BL       H_line
   6499               H_line(TouchTestSor[SetTouchStep].x-6,TouchTestSor[SetTouchStep].y,5,1); // (char X, int Y, char lenght, char typ) 
   \   0000013C   6078               LDRB     R0,[R4, #+1]
   \   0000013E   4000               LSLS     R0,R0,#+1
   \   00000140   2818               ADDS     R0,R5,R0
   \   00000142   0123               MOVS     R3,#+1
   \   00000144   0522               MOVS     R2,#+5
   \   00000146   1900               MOVS     R1,R3
   \   00000148   4156               LDRSB    R1,[R0, R1]
   \   0000014A   8057               LDRSB    R0,[R0, R6]
   \   0000014C   801F               SUBS     R0,R0,#+6
   \   0000014E   0006               LSLS     R0,R0,#+24
   \   00000150   000E               LSRS     R0,R0,#+24
   \   00000152   ........           BL       H_line
   6500               V_line(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y+2,5,1); // (char X, int Y, char lenght, char typ) 
   \   00000156   6078               LDRB     R0,[R4, #+1]
   \   00000158   4000               LSLS     R0,R0,#+1
   \   0000015A   2818               ADDS     R0,R5,R0
   \   0000015C   0123               MOVS     R3,#+1
   \   0000015E   0522               MOVS     R2,#+5
   \   00000160   1900               MOVS     R1,R3
   \   00000162   4156               LDRSB    R1,[R0, R1]
   \   00000164   891C               ADDS     R1,R1,#+2
   \   00000166   8057               LDRSB    R0,[R0, R6]
   \   00000168   0006               LSLS     R0,R0,#+24
   \   0000016A   000E               LSRS     R0,R0,#+24
   \   0000016C   ........           BL       V_line
   6501               V_line(TouchTestSor[SetTouchStep].x,TouchTestSor[SetTouchStep].y-6,5,1); // (char X, int Y, char lenght, char typ) 
   \   00000170   6078               LDRB     R0,[R4, #+1]
   \   00000172   4000               LSLS     R0,R0,#+1
   \   00000174   2818               ADDS     R0,R5,R0
   \   00000176   0123               MOVS     R3,#+1
   \   00000178   0522               MOVS     R2,#+5
   \   0000017A   1900               MOVS     R1,R3
   \   0000017C   4156               LDRSB    R1,[R0, R1]
   \   0000017E   891F               SUBS     R1,R1,#+6
   \   00000180   0024               MOVS     R4,#+0
   \   00000182   0057               LDRSB    R0,[R0, R4]
   \   00000184   0006               LSLS     R0,R0,#+24
   \   00000186   000E               LSRS     R0,R0,#+24
   \   00000188   ........           BL       V_line
   6502          }
   6503          }
   \                     ??SetTouchScreen_Paint_3:
   \   0000018C   F8BC               POP      {R3-R7}
   \   0000018E   01BC               POP      {R0}
   \   00000190   0047               BX       R0               ;; return
   \   00000192   C046               Nop      
   \                     ??SetTouchScreen_Paint_0:
   \   00000194   ........           DC32     StartAdvance
   \   00000198   ........           DC32     korekta_X
   \   0000019C   ........           DC32     korekta_Y
   \   000001A0   140A0000           DC32     0xa14
   \   000001A4   ........           DC32     g_leng
   \   000001A8   ........           DC32     Speech
   \   000001AC   37050000           DC32     0x537
   \   000001B0   46050000           DC32     0x546
   \   000001B4   ........           DC32     TouchTestSor

   \                                 In section .bss, align 4
   \                     StartAdvance:
   \   00000000                      DS8 1
   \                     SetTouchStep:
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   6504          
   6505          
   6506          extern _Correct korekta_Y;
   6507          extern _Correct korekta_X;
   6508          signed short Diff_X[MaxTouchTest];
   \                     Diff_X:
   \   00000004                      DS8 8
   6509          signed short Diff_Y[MaxTouchTest];
   \                     Diff_Y:
   \   0000000C                      DS8 8
   6510          float Xo1, Xo2, Yo1, Yo2;
   \                     Xo1:
   \   00000014                      DS8 4
   \                     Xo2:
   \   00000018                      DS8 4
   \                     Yo1:
   \   0000001C                      DS8 4
   \                     Yo2:
   \   00000020                      DS8 4

   \                                 In section .bss, align 4
   \                     InsertPass1:
   \   00000000                      DS8 12
   \                     pass_tmp:
   \   0000000C                      DS8 12

   \                                 In section .bss, align 4
   \                     VCTT_ill:
   \   00000000                      DS8 1
   \                     VCTT_point_flag:
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \                     ValueChangeTxtTmp:
   \   00000004                      DS8 8

   \                                 In section .bss, align 4
   \                     ptxt:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     ??count:
   \   00000000                      DS8 1
   \   00000001                      DS8 1

   \                                 In section .bss, align 8
   \                     LastText_EventTime:
   \   00000000                      DS8 8

   \                                 In section Debug.txt, align 4, keep-with-next
   6511          void SetTouchScreen_Event(void)
   6512          {
   \                     SetTouchScreen_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   6513          
   6514          
   6515          if (SetTouchStep==MaxTouchTest)
   \   00000004   6D4C               LDR      R4,??SetTouchScreen_Event_0  ;; StartAdvance
   \   00000006   6678               LDRB     R6,[R4, #+1]
   \   00000008   042E               CMP      R6,#+4
   \   0000000A   13D1               BNE      ??SetTouchScreen_Event_1
   6516          {
   6517             if ((X_down>0) && (Y_down>0))
   \   0000000C   6C48               LDR      R0,??SetTouchScreen_Event_0+0x4  ;; X_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   405E               LDRSH    R0,[R0, R1]
   \   00000012   0128               CMP      R0,#+1
   \   00000014   00DA               BGE      .+4
   \   00000016   CCE0               B        ??SetTouchScreen_Event_2
   \   00000018   6A49               LDR      R1,??SetTouchScreen_Event_0+0x8  ;; Y_down
   \   0000001A   0022               MOVS     R2,#+0
   \   0000001C   895E               LDRSH    R1,[R1, R2]
   \   0000001E   0129               CMP      R1,#+1
   \   00000020   00DA               BGE      .+4
   \   00000022   C6E0               B        ??SetTouchScreen_Event_2
   6518             {
   6519                CanvasPixel(X_down,Y_down,1);
   \   00000024   0122               MOVS     R2,#+1
   \   00000026   0906               LSLS     R1,R1,#+24
   \   00000028   090E               LSRS     R1,R1,#+24
   \   0000002A   0006               LSLS     R0,R0,#+24
   \   0000002C   000E               LSRS     R0,R0,#+24
   \   0000002E   ........           BL       CanvasPixel
   \   00000032   BEE0               B        ??SetTouchScreen_Event_2
   6520               
   6521             }
   6522          }else{
   6523            
   6524            if ((X_up>0) && (Y_up>0)&& ((g_counter>Touch_EventTime+400) || (Touch_EventTime>g_counter)) )
   \                     ??SetTouchScreen_Event_1:
   \   00000034   6846               MOV      R0,SP
   \   00000036   6449               LDR      R1,??SetTouchScreen_Event_0+0xC  ;; X_up
   \   00000038   0988               LDRH     R1,[R1, #+0]
   \   0000003A   0181               STRH     R1,[R0, #+8]
   \   0000003C   6946               MOV      R1,SP
   \   0000003E   0820               MOVS     R0,#+8
   \   00000040   085E               LDRSH    R0,[R1, R0]
   \   00000042   0128               CMP      R0,#+1
   \   00000044   00DA               BGE      .+4
   \   00000046   B4E0               B        ??SetTouchScreen_Event_2
   \   00000048   6048               LDR      R0,??SetTouchScreen_Event_0+0x10  ;; Y_up
   \   0000004A   0021               MOVS     R1,#+0
   \   0000004C   475E               LDRSH    R7,[R0, R1]
   \   0000004E   012F               CMP      R7,#+1
   \   00000050   00DA               BGE      .+4
   \   00000052   AEE0               B        ??SetTouchScreen_Event_2
   \   00000054   5E4D               LDR      R5,??SetTouchScreen_Event_0+0x14  ;; TextToChangeLength
   \   00000056   6A46               MOV      R2,SP
   \   00000058   5E48               LDR      R0,??SetTouchScreen_Event_0+0x18  ;; g_counter
   \   0000005A   03C8               LDM      R0!,{R0,R1}
   \   0000005C   03C2               STM      R2!,{R0,R1}
   \   0000005E   2800               MOVS     R0,R5
   \   00000060   3830               ADDS     R0,R0,#+56
   \   00000062   03C8               LDM      R0!,{R0,R1}
   \   00000064   0200               MOVS     R2,R0
   \   00000066   0B00               MOVS     R3,R1
   \   00000068   C820               MOVS     R0,#+200
   \   0000006A   4000               LSLS     R0,R0,#+1        ;; #+400
   \   0000006C   0021               MOVS     R1,#+0
   \   0000006E   8018               ADDS     R0,R0,R2
   \   00000070   5941               ADCS     R1,R1,R3
   \   00000072   0200               MOVS     R2,R0
   \   00000074   0B00               MOVS     R3,R1
   \   00000076   6846               MOV      R0,SP
   \   00000078   03C8               LDM      R0!,{R0,R1}
   \   0000007A   8B42               CMP      R3,R1
   \   0000007C   10D3               BCC      ??SetTouchScreen_Event_3
   \   0000007E   01D8               BHI      ??SetTouchScreen_Event_4
   \   00000080   8242               CMP      R2,R0
   \   00000082   0DD3               BCC      ??SetTouchScreen_Event_3
   \                     ??SetTouchScreen_Event_4:
   \   00000084   6846               MOV      R0,SP
   \   00000086   03C8               LDM      R0!,{R0,R1}
   \   00000088   0200               MOVS     R2,R0
   \   0000008A   0B00               MOVS     R3,R1
   \   0000008C   2800               MOVS     R0,R5
   \   0000008E   3830               ADDS     R0,R0,#+56
   \   00000090   03C8               LDM      R0!,{R0,R1}
   \   00000092   8B42               CMP      R3,R1
   \   00000094   00D9               BLS      .+4
   \   00000096   8CE0               B        ??SetTouchScreen_Event_2
   \   00000098   02D3               BCC      ??SetTouchScreen_Event_3
   \   0000009A   8242               CMP      R2,R0
   \   0000009C   00D3               BCC      .+4
   \   0000009E   88E0               B        ??SetTouchScreen_Event_2
   6525            {
   6526                Touch_EventTime=g_counter;
   \                     ??SetTouchScreen_Event_3:
   \   000000A0   2A00               MOVS     R2,R5
   \   000000A2   3832               ADDS     R2,R2,#+56
   \   000000A4   6846               MOV      R0,SP
   \   000000A6   03C8               LDM      R0!,{R0,R1}
   \   000000A8   03C2               STM      R2!,{R0,R1}
   6527                Diff_X[SetTouchStep]=X_up;
   \   000000AA   7000               LSLS     R0,R6,#+1
   \   000000AC   2018               ADDS     R0,R4,R0
   \   000000AE   6946               MOV      R1,SP
   \   000000B0   0989               LDRH     R1,[R1, #+8]
   \   000000B2   8180               STRH     R1,[R0, #+4]
   6528                Diff_Y[SetTouchStep]=Y_up;
   \   000000B4   8781               STRH     R7,[R0, #+12]
   6529                
   6530                if (SetTouchStep<MaxTouchTest-1)
   \   000000B6   032E               CMP      R6,#+3
   \   000000B8   04D2               BCS      ??SetTouchScreen_Event_5
   6531                {
   6532                  SetTouchStep++;
   \   000000BA   761C               ADDS     R6,R6,#+1
   \   000000BC   6670               STRB     R6,[R4, #+1]
   6533                  MenuPaint();
   \   000000BE   ........           BL       MenuPaint
   \   000000C2   76E0               B        ??SetTouchScreen_Event_2
   6534                }else{
   6535                  
   6536                  
   6537                  Xo1=(Diff_X[0]+Diff_X[2])/2;
   \                     ??SetTouchScreen_Event_5:
   \   000000C4   0420               MOVS     R0,#+4
   \   000000C6   205E               LDRSH    R0,[R4, R0]
   \   000000C8   0821               MOVS     R1,#+8
   \   000000CA   615E               LDRSH    R1,[R4, R1]
   \   000000CC   4018               ADDS     R0,R0,R1
   \   000000CE   0100               MOVS     R1,R0
   \   000000D0   C90F               LSRS     R1,R1,#+31
   \   000000D2   0818               ADDS     R0,R1,R0
   \   000000D4   4010               ASRS     R0,R0,#+1
   \   000000D6   ........           BL       __aeabi_i2f
   \   000000DA   6061               STR      R0,[R4, #+20]
   6538                  Xo2=(Diff_X[1]+Diff_X[3])/2;
   \   000000DC   0620               MOVS     R0,#+6
   \   000000DE   205E               LDRSH    R0,[R4, R0]
   \   000000E0   0A21               MOVS     R1,#+10
   \   000000E2   615E               LDRSH    R1,[R4, R1]
   \   000000E4   4018               ADDS     R0,R0,R1
   \   000000E6   0100               MOVS     R1,R0
   \   000000E8   C90F               LSRS     R1,R1,#+31
   \   000000EA   0818               ADDS     R0,R1,R0
   \   000000EC   4010               ASRS     R0,R0,#+1
   \   000000EE   ........           BL       __aeabi_i2f
   \   000000F2   A061               STR      R0,[R4, #+24]
   6539                  Yo1=(Diff_Y[0]+Diff_Y[1])/2;
   \   000000F4   0C20               MOVS     R0,#+12
   \   000000F6   205E               LDRSH    R0,[R4, R0]
   \   000000F8   0E21               MOVS     R1,#+14
   \   000000FA   615E               LDRSH    R1,[R4, R1]
   \   000000FC   4018               ADDS     R0,R0,R1
   \   000000FE   0100               MOVS     R1,R0
   \   00000100   C90F               LSRS     R1,R1,#+31
   \   00000102   0818               ADDS     R0,R1,R0
   \   00000104   4010               ASRS     R0,R0,#+1
   \   00000106   ........           BL       __aeabi_i2f
   \   0000010A   0600               MOVS     R6,R0
   \   0000010C   E661               STR      R6,[R4, #+28]
   6540                  Yo2=(Diff_Y[2]+Diff_Y[3])/2;
   \   0000010E   1020               MOVS     R0,#+16
   \   00000110   205E               LDRSH    R0,[R4, R0]
   \   00000112   1221               MOVS     R1,#+18
   \   00000114   615E               LDRSH    R1,[R4, R1]
   \   00000116   4018               ADDS     R0,R0,R1
   \   00000118   0100               MOVS     R1,R0
   \   0000011A   C90F               LSRS     R1,R1,#+31
   \   0000011C   0818               ADDS     R0,R1,R0
   \   0000011E   4010               ASRS     R0,R0,#+1
   \   00000120   ........           BL       __aeabi_i2f
   \   00000124   0700               MOVS     R7,R0
   \   00000126   2762               STR      R7,[R4, #+32]
   6541                  
   6542                  float Xw1=TouchTestSor[0].x;
   6543                  float Xw2=TouchTestSor[1].x;
   6544                  float Yw1=TouchTestSor[0].y;
   6545                  float Yw2=TouchTestSor[3].y;
   6546                  
   6547                  
   6548                  korekta_X.A=(Xw2-Xw1)/(Xo2-Xo1);
   \   00000128   A069               LDR      R0,[R4, #+24]
   \   0000012A   6169               LDR      R1,[R4, #+20]
   \   0000012C   ........           BL       __aeabi_fsub
   \   00000130   0100               MOVS     R1,R0
   \   00000132   2948               LDR      R0,??SetTouchScreen_Event_0+0x1C  ;; 0x424c0000
   \   00000134   ........           BL       __aeabi_fdiv
   \   00000138   2849               LDR      R1,??SetTouchScreen_Event_0+0x20  ;; korekta_X
   \   0000013A   0860               STR      R0,[R1, #+0]
   \   0000013C   6169               LDR      R1,[R4, #+20]
   \   0000013E   ........           BL       __aeabi_fmul
   \   00000142   0100               MOVS     R1,R0
   \   00000144   2648               LDR      R0,??SetTouchScreen_Event_0+0x24  ;; 0x40e00000
   \   00000146   ........           BL       __aeabi_fsub
   \   0000014A   2649               LDR      R1,??SetTouchScreen_Event_0+0x28  ;; korekta_X + 4
   \   0000014C   0860               STR      R0,[R1, #+0]
   6549                  korekta_X.B=Xw1-korekta_X.A*Xo1;
   6550                  korekta_Y.A=(Yw2-Yw1)/(Yo2-Yo1);
   \   0000014E   3800               MOVS     R0,R7
   \   00000150   3100               MOVS     R1,R6
   \   00000152   ........           BL       __aeabi_fsub
   \   00000156   0100               MOVS     R1,R0
   \   00000158   2348               LDR      R0,??SetTouchScreen_Event_0+0x2C  ;; 0x42d80000
   \   0000015A   ........           BL       __aeabi_fdiv
   \   0000015E   234F               LDR      R7,??SetTouchScreen_Event_0+0x30  ;; korekta_Y
   \   00000160   3860               STR      R0,[R7, #+0]
   6551                  korekta_Y.B=Yw1-korekta_Y.A*Yo1;
   \   00000162   3100               MOVS     R1,R6
   \   00000164   ........           BL       __aeabi_fmul
   \   00000168   0100               MOVS     R1,R0
   \   0000016A   1D48               LDR      R0,??SetTouchScreen_Event_0+0x24  ;; 0x40e00000
   \   0000016C   ........           BL       __aeabi_fsub
   \   00000170   7860               STR      R0,[R7, #+4]
   6552                  
   6553                       
   6554                  //zapis korekt do flash
   6555                  unsigned int Save = __get_interrupt_state();  
   \   00000172   ........           BL       __iar_get_interrupt_state
   \   00000176   0600               MOVS     R6,R0
   6556                  __disable_interrupt();
   \   00000178   ........           BL       __iar_disable_interrupt
   6557                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_X)), (char*) (&(korekta_X.A)), sizeof(korekta_X));
                             ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000017C   0822               MOVS     R2,#+8
   \   0000017E   1749               LDR      R1,??SetTouchScreen_Event_0+0x20  ;; korekta_X
   \   00000180   1B48               LDR      R0,??SetTouchScreen_Event_0+0x34  ;; 0x13d828
   \   00000182   ........           BL       FlashWrite
   6558                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.Cor_Y)), (char*) (&(korekta_Y.A)), sizeof(korekta_Y));
   \   00000186   0822               MOVS     R2,#+8
   \   00000188   3900               MOVS     R1,R7
   \   0000018A   1A48               LDR      R0,??SetTouchScreen_Event_0+0x38  ;; 0x13d820
   \   0000018C   ........           BL       FlashWrite
   6559                  __set_interrupt_state(Save);
   \   00000190   3000               MOVS     R0,R6
   \   00000192   ........           BL       __iar_set_interrupt_state
   6560                  //koniec zapisu do flash
   6561                
   6562                  //je¿eli wejcie w opcje zaawansowane
   6563                  if (StartAdvance)
   \   00000196   2078               LDRB     R0,[R4, #+0]
   \   00000198   0028               CMP      R0,#+0
   \   0000019A   04D0               BEQ      ??SetTouchScreen_Event_6
   6564                  {
   6565                    StartAdvance=0;
   \   0000019C   0020               MOVS     R0,#+0
   \   0000019E   2070               STRB     R0,[R4, #+0]
   6566                    MenuLevel=5;
   \   000001A0   0520               MOVS     R0,#+5
   \   000001A2   A864               STR      R0,[R5, #+72]
   \   000001A4   01E0               B        ??SetTouchScreen_Event_7
   6567                  }else{
   6568                    MenuLevel=1;
   \                     ??SetTouchScreen_Event_6:
   \   000001A6   0120               MOVS     R0,#+1
   \   000001A8   A864               STR      R0,[R5, #+72]
   6569                  }
   6570                  //SetTouchStep=MaxTouchTest;
   6571                  //CleanCanvas();
   6572                  SetTouchStep=0;
   \                     ??SetTouchScreen_Event_7:
   \   000001AA   0020               MOVS     R0,#+0
   \   000001AC   6070               STRB     R0,[R4, #+1]
   6573                  MenuPaint();
   \   000001AE   ........           BL       MenuPaint
   6574                }
   6575            }
   6576          }
   6577          
   6578          }
   \                     ??SetTouchScreen_Event_2:
   \   000001B2   05B0               ADD      SP,SP,#+20
   \   000001B4   F0BC               POP      {R4-R7}
   \   000001B6   01BC               POP      {R0}
   \   000001B8   0047               BX       R0               ;; return
   \   000001BA   C046               Nop      
   \                     ??SetTouchScreen_Event_0:
   \   000001BC   ........           DC32     StartAdvance
   \   000001C0   ........           DC32     X_down
   \   000001C4   ........           DC32     Y_down
   \   000001C8   ........           DC32     X_up
   \   000001CC   ........           DC32     Y_up
   \   000001D0   ........           DC32     TextToChangeLength
   \   000001D4   ........           DC32     g_counter
   \   000001D8   00004C42           DC32     0x424c0000
   \   000001DC   ........           DC32     korekta_X
   \   000001E0   0000E040           DC32     0x40e00000
   \   000001E4   ........           DC32     korekta_X + 4
   \   000001E8   0000D842           DC32     0x42d80000
   \   000001EC   ........           DC32     korekta_Y
   \   000001F0   28D81300           DC32     0x13d828
   \   000001F4   20D81300           DC32     0x13d820
   6579              
   6580              
   6581              
   6582              
   6583          
   6584          //restart
   6585                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6586                void Restart_Event(void)
   6587                {
   \                     Restart_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   6588                  AT91S_RSTC  g_AT91S_RSTC;
   6589                  int ans;
   6590           
   6591                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1148               LDR      R0,??Restart_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1048               LDR      R0,??Restart_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1048               LDR      R0,??Restart_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1048               LDR      R0,??Restart_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   6592            
   6593                  if (ans)
   \   0000001A   0028               CMP      R0,#+0
   \   0000001C   10D0               BEQ      ??Restart_Event_1
   6594                    {
   6595                    if (ans==2) 
   \   0000001E   0228               CMP      R0,#+2
   \   00000020   02D1               BNE      ??Restart_Event_2
   6596                    {
   6597          
   6598                      //restart
   6599                      AT91C_BASE_RSTC->RSTC_RCR = AT91C_RSTC_PROCRST | AT91C_RSTC_PERRST | AT91C_RSTC_KEY;
   \   00000022   0D49               LDR      R1,??Restart_Event_0+0x10  ;; 0xfffffd00
   \   00000024   0D4A               LDR      R2,??Restart_Event_0+0x14  ;; 0xa5000005
   \   00000026   0A60               STR      R2,[R1, #+0]
   6600                    }
   6601                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??Restart_Event_2:
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   01D4               BMI      ??Restart_Event_3
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   05D1               BNE      ??Restart_Event_4
   \                     ??Restart_Event_3:
   \   00000030   0B4C               LDR      R4,??Restart_Event_0+0x18  ;; TextToChangeLength
   \   00000032   A06C               LDR      R0,[R4, #+72]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   A064               STR      R0,[R4, #+72]
   6602                    MenuPaint();
   \                     ??Restart_Event_4:
   \   0000003C   ........           BL       MenuPaint
   6603                    } 
   6604                }//_______________________________________________________________________
   \                     ??Restart_Event_1:
   \   00000040   10BC               POP      {R4}
   \   00000042   01BC               POP      {R0}
   \   00000044   0047               BX       R0               ;; return
   \   00000046   C046               Nop      
   \                     ??Restart_Event_0:
   \   00000048   ........           DC32     Y_down
   \   0000004C   ........           DC32     X_down
   \   00000050   ........           DC32     Y_up
   \   00000054   ........           DC32     X_up
   \   00000058   00FDFFFF           DC32     0xfffffd00
   \   0000005C   050000A5           DC32     0xa5000005
   \   00000060   ........           DC32     TextToChangeLength
   6605              
   6606              
   6607          
   6608              
   6609          
   6610          
   6611              
   6612          //czyæ rejestr
   6613                //*-----------------------------------------------------------------------
   6614              

   \                                 In section Debug.txt, align 4, keep-with-next
   6615                void CleanReg_Event(void)
   6616                {
   \                     CleanReg_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   6617                  int ans;
   6618           
   6619                  ans=Ask_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   1448               LDR      R0,??CleanReg_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   1348               LDR      R0,??CleanReg_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   1348               LDR      R0,??CleanReg_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   1348               LDR      R0,??CleanReg_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Ask_Event
   \   0000001A   0400               MOVS     R4,R0
   6620            
   6621                  if (ans)
   \   0000001C   17D0               BEQ      ??CleanReg_Event_1
   6622                    {
   6623                    if (ans==2) 
   \   0000001E   022C               CMP      R4,#+2
   \   00000020   09D1               BNE      ??CleanReg_Event_2
   6624                    {
   6625                      //czyszczenie rejestru
   6626                      CleanReg();
   \   00000022   ........           BL       CleanReg
   6627                      MenuLevel=(MenuLevel/10);
   \   00000026   0F4D               LDR      R5,??CleanReg_Event_0+0x10  ;; TextToChangeLength
   \   00000028   A86C               LDR      R0,[R5, #+72]
   \   0000002A   0A21               MOVS     R1,#+10
   \   0000002C   ........           BL       __aeabi_idivmod
   \   00000030   A864               STR      R0,[R5, #+72]
   6628                      MenuPaint();
   \   00000032   ........           BL       MenuPaint
   6629                    }
   6630                    if ((ans<0) || (ans==1))  MenuLevel=(MenuLevel/10);
   \                     ??CleanReg_Event_2:
   \   00000036   002C               CMP      R4,#+0
   \   00000038   01D4               BMI      ??CleanReg_Event_3
   \   0000003A   012C               CMP      R4,#+1
   \   0000003C   05D1               BNE      ??CleanReg_Event_4
   \                     ??CleanReg_Event_3:
   \   0000003E   094D               LDR      R5,??CleanReg_Event_0+0x10  ;; TextToChangeLength
   \   00000040   A86C               LDR      R0,[R5, #+72]
   \   00000042   0A21               MOVS     R1,#+10
   \   00000044   ........           BL       __aeabi_idivmod
   \   00000048   A864               STR      R0,[R5, #+72]
   6631                    MenuPaint();
   \                     ??CleanReg_Event_4:
   \   0000004A   ........           BL       MenuPaint
   6632                    } 
   6633                }//_______________________________________________________________________
   \                     ??CleanReg_Event_1:
   \   0000004E   38BC               POP      {R3-R5}
   \   00000050   01BC               POP      {R0}
   \   00000052   0047               BX       R0               ;; return
   \                     ??CleanReg_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     TextToChangeLength
   6634                   
   6635              
   6636              
   6637          //Ustawienia czasu  **************************************************************************************************************
   6638              //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   6639              void SetupTime_Paint(void)
   6640              {  
   \                     SetupTime_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   B04C               LDR      R4,??SetupTime_Paint_0  ;; g_leng
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   AEA0               ADR      R0,??SetupTime_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0121               MOVS     R1,#+1
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   2068               LDR      R0,[R4, #+0]
   \   0000001E   AB4D               LDR      R5,??SetupTime_Paint_0+0x8  ;; 0xa14
   \   00000020   6843               MULS     R0,R5,R0
   \   00000022   AB4D               LDR      R5,??SetupTime_Paint_0+0xC  ;; Speech
   \   00000024   2818               ADDS     R0,R5,R0
   \   00000026   B430               ADDS     R0,R0,#+180
   6641                 List_Paint(Speech[g_leng].DataCzas,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
   6642                 
   6643          
   6644                 
   6645                 Label(Speech[g_leng].CzasGMS,0,3,99,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000002E   82B0               SUB      SP,SP,#+8
   \   00000030   0020               MOVS     R0,#+0
   \   00000032   0090               STR      R0,[SP, #+0]
   \   00000034   7F21               MOVS     R1,#+127
   \   00000036   0120               MOVS     R0,#+1
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   2121               MOVS     R1,#+33
   \   0000003C   0A20               MOVS     R0,#+10
   \   0000003E   03B4               PUSH     {R0,R1}
   \   00000040   6323               MOVS     R3,#+99
   \   00000042   0322               MOVS     R2,#+3
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   2068               LDR      R0,[R4, #+0]
   \   00000048   A04D               LDR      R5,??SetupTime_Paint_0+0x8  ;; 0xa14
   \   0000004A   6843               MULS     R0,R5,R0
   \   0000004C   A04D               LDR      R5,??SetupTime_Paint_0+0xC  ;; Speech
   \   0000004E   2818               ADDS     R0,R5,R0
   \   00000050   8730               ADDS     R0,R0,#+135
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   6646                    
   6647                    
   6648                 char time_char[3];
   6649                  
   6650                 CharToStr(DateTime.Hour, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000058   9E4D               LDR      R5,??SetupTime_Paint_0+0x10  ;; DateTime
   \   0000005A   0222               MOVS     R2,#+2
   \   0000005C   6946               MOV      R1,SP
   \   0000005E   E878               LDRB     R0,[R5, #+3]
   \   00000060   ........           BL       CharToStr
   6651                 Label(time_char,2,12,87,2,11,1,127,((SetupTimeCarPoz)&0x1) );  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000064   0126               MOVS     R6,#+1
   \   00000066   9C4F               LDR      R7,??SetupTime_Paint_0+0x14  ;; SetupTimeCarPoz
   \   00000068   82B0               SUB      SP,SP,#+8
   \   0000006A   3878               LDRB     R0,[R7, #+0]
   \   0000006C   3100               MOVS     R1,R6
   \   0000006E   0140               ANDS     R1,R1,R0
   \   00000070   0091               STR      R1,[SP, #+0]
   \   00000072   7F21               MOVS     R1,#+127
   \   00000074   3000               MOVS     R0,R6
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   0B21               MOVS     R1,#+11
   \   0000007A   0220               MOVS     R0,#+2
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   5723               MOVS     R3,#+87
   \   00000080   0C22               MOVS     R2,#+12
   \   00000082   0100               MOVS     R1,R0
   \   00000084   06A8               ADD      R0,SP,#+24
   \   00000086   ........           BL       Label
   \   0000008A   06B0               ADD      SP,SP,#+24
   6652                 CharToStr(DateTime.Minute, time_char, 2); //(char Value, char *Vstring, char ill);
   \   0000008C   0222               MOVS     R2,#+2
   \   0000008E   6946               MOV      R1,SP
   \   00000090   2879               LDRB     R0,[R5, #+4]
   \   00000092   ........           BL       CharToStr
   6653                 Label(time_char,2,27,87,2,11,1,127,(SetupTimeCarPoz>>1)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000096   82B0               SUB      SP,SP,#+8
   \   00000098   3878               LDRB     R0,[R7, #+0]
   \   0000009A   4008               LSRS     R0,R0,#+1
   \   0000009C   3100               MOVS     R1,R6
   \   0000009E   0140               ANDS     R1,R1,R0
   \   000000A0   0091               STR      R1,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   3000               MOVS     R0,R6
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   0B21               MOVS     R1,#+11
   \   000000AA   0220               MOVS     R0,#+2
   \   000000AC   03B4               PUSH     {R0,R1}
   \   000000AE   5723               MOVS     R3,#+87
   \   000000B0   1B22               MOVS     R2,#+27
   \   000000B2   0100               MOVS     R1,R0
   \   000000B4   06A8               ADD      R0,SP,#+24
   \   000000B6   ........           BL       Label
   \   000000BA   06B0               ADD      SP,SP,#+24
   6654                 CharToStr(DateTime.Second, time_char, 2); //(char Value, char *Vstring, char ill);
   \   000000BC   0222               MOVS     R2,#+2
   \   000000BE   6946               MOV      R1,SP
   \   000000C0   6879               LDRB     R0,[R5, #+5]
   \   000000C2   ........           BL       CharToStr
   6655                 Label(time_char,2,42,87,2,11,1,127,(SetupTimeCarPoz>>2)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   3878               LDRB     R0,[R7, #+0]
   \   000000CA   8008               LSRS     R0,R0,#+2
   \   000000CC   3100               MOVS     R1,R6
   \   000000CE   0140               ANDS     R1,R1,R0
   \   000000D0   0091               STR      R1,[SP, #+0]
   \   000000D2   7F21               MOVS     R1,#+127
   \   000000D4   3000               MOVS     R0,R6
   \   000000D6   03B4               PUSH     {R0,R1}
   \   000000D8   0B21               MOVS     R1,#+11
   \   000000DA   0220               MOVS     R0,#+2
   \   000000DC   03B4               PUSH     {R0,R1}
   \   000000DE   5723               MOVS     R3,#+87
   \   000000E0   2A22               MOVS     R2,#+42
   \   000000E2   0100               MOVS     R1,R0
   \   000000E4   06A8               ADD      R0,SP,#+24
   \   000000E6   ........           BL       Label
   \   000000EA   06B0               ADD      SP,SP,#+24
   6656                  
   6657                 
   6658                 Label(Speech[g_leng].DataDMR,0,3,74,10,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   0020               MOVS     R0,#+0
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   7F21               MOVS     R1,#+127
   \   000000F4   3000               MOVS     R0,R6
   \   000000F6   03B4               PUSH     {R0,R1}
   \   000000F8   2121               MOVS     R1,#+33
   \   000000FA   0A20               MOVS     R0,#+10
   \   000000FC   03B4               PUSH     {R0,R1}
   \   000000FE   4A23               MOVS     R3,#+74
   \   00000100   0322               MOVS     R2,#+3
   \   00000102   0021               MOVS     R1,#+0
   \   00000104   8C46               MOV      R12,R1
   \   00000106   2068               LDR      R0,[R4, #+0]
   \   00000108   7049               LDR      R1,??SetupTime_Paint_0+0x8  ;; 0xa14
   \   0000010A   4843               MULS     R0,R1,R0
   \   0000010C   7049               LDR      R1,??SetupTime_Paint_0+0xC  ;; Speech
   \   0000010E   0818               ADDS     R0,R1,R0
   \   00000110   A530               ADDS     R0,R0,#+165
   \   00000112   6146               MOV      R1,R12
   \   00000114   ........           BL       Label
   \   00000118   06B0               ADD      SP,SP,#+24
   6659                
   6660                 CharToStrData(DateTime.Day, time_char); //(char Value, char *Vstring, char ill);
   \   0000011A   6946               MOV      R1,SP
   \   0000011C   A878               LDRB     R0,[R5, #+2]
   \   0000011E   ........           BL       CharToStrData
   6661                 Label(time_char,2,12,62,2,10,1,127,(SetupTimeCarPoz>>3)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   3878               LDRB     R0,[R7, #+0]
   \   00000126   C008               LSRS     R0,R0,#+3
   \   00000128   3100               MOVS     R1,R6
   \   0000012A   0140               ANDS     R1,R1,R0
   \   0000012C   0091               STR      R1,[SP, #+0]
   \   0000012E   7F21               MOVS     R1,#+127
   \   00000130   3000               MOVS     R0,R6
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   0A21               MOVS     R1,#+10
   \   00000136   0220               MOVS     R0,#+2
   \   00000138   03B4               PUSH     {R0,R1}
   \   0000013A   3E23               MOVS     R3,#+62
   \   0000013C   0C22               MOVS     R2,#+12
   \   0000013E   0100               MOVS     R1,R0
   \   00000140   06A8               ADD      R0,SP,#+24
   \   00000142   ........           BL       Label
   \   00000146   06B0               ADD      SP,SP,#+24
   6662                 CharToStrData(DateTime.Mounth, time_char); //(char Value, char *Vstring, char ill);
   \   00000148   6946               MOV      R1,SP
   \   0000014A   6878               LDRB     R0,[R5, #+1]
   \   0000014C   ........           BL       CharToStrData
   6663                 Label(time_char,2,27,62,2,10,1,127,(SetupTimeCarPoz>>4)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000150   82B0               SUB      SP,SP,#+8
   \   00000152   3878               LDRB     R0,[R7, #+0]
   \   00000154   0009               LSRS     R0,R0,#+4
   \   00000156   3100               MOVS     R1,R6
   \   00000158   0140               ANDS     R1,R1,R0
   \   0000015A   0091               STR      R1,[SP, #+0]
   \   0000015C   7F21               MOVS     R1,#+127
   \   0000015E   3000               MOVS     R0,R6
   \   00000160   03B4               PUSH     {R0,R1}
   \   00000162   0A21               MOVS     R1,#+10
   \   00000164   0220               MOVS     R0,#+2
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   3E23               MOVS     R3,#+62
   \   0000016A   1B22               MOVS     R2,#+27
   \   0000016C   0100               MOVS     R1,R0
   \   0000016E   06A8               ADD      R0,SP,#+24
   \   00000170   ........           BL       Label
   \   00000174   06B0               ADD      SP,SP,#+24
   6664                 CharToStrData(DateTime.Year, time_char); //(char Value, char *Vstring, char ill);
   \   00000176   6946               MOV      R1,SP
   \   00000178   2878               LDRB     R0,[R5, #+0]
   \   0000017A   ........           BL       CharToStrData
   6665                 Label(time_char,2,42,62,2,10,1,127,(SetupTimeCarPoz>>5)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   3878               LDRB     R0,[R7, #+0]
   \   00000182   4009               LSRS     R0,R0,#+5
   \   00000184   0640               ANDS     R6,R6,R0
   \   00000186   0096               STR      R6,[SP, #+0]
   \   00000188   7F21               MOVS     R1,#+127
   \   0000018A   0120               MOVS     R0,#+1
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   0A21               MOVS     R1,#+10
   \   00000190   0220               MOVS     R0,#+2
   \   00000192   03B4               PUSH     {R0,R1}
   \   00000194   3E23               MOVS     R3,#+62
   \   00000196   2A22               MOVS     R2,#+42
   \   00000198   0100               MOVS     R1,R0
   \   0000019A   06A8               ADD      R0,SP,#+24
   \   0000019C   ........           BL       Label
   \   000001A0   06B0               ADD      SP,SP,#+24
   6666                  
   6667              
   6668                 
   6669                 H_line(10,97,46,1); // (char X, int Y, char lenght, char typ) 
   \   000001A2   0123               MOVS     R3,#+1
   \   000001A4   2E22               MOVS     R2,#+46
   \   000001A6   6121               MOVS     R1,#+97
   \   000001A8   0A20               MOVS     R0,#+10
   \   000001AA   ........           BL       H_line
   6670                 H_line(10,85,46,1); // (char X, int Y, char lenght, char typ) 
   \   000001AE   0123               MOVS     R3,#+1
   \   000001B0   2E22               MOVS     R2,#+46
   \   000001B2   5521               MOVS     R1,#+85
   \   000001B4   0A20               MOVS     R0,#+10
   \   000001B6   ........           BL       H_line
   6671                 V_line(10,86,11,1); // (char X, int Y, char lenght, char typ) 
   \   000001BA   0123               MOVS     R3,#+1
   \   000001BC   0B22               MOVS     R2,#+11
   \   000001BE   5621               MOVS     R1,#+86
   \   000001C0   0A20               MOVS     R0,#+10
   \   000001C2   ........           BL       V_line
   6672                 Label(":",0,25,88,1,1,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001C6   45A6               ADR      R6,??SetupTime_Paint_0+0x18  ;; 0x3A, 0x00, 0x00, 0x00
   \   000001C8   82B0               SUB      SP,SP,#+8
   \   000001CA   0020               MOVS     R0,#+0
   \   000001CC   0090               STR      R0,[SP, #+0]
   \   000001CE   7F21               MOVS     R1,#+127
   \   000001D0   0120               MOVS     R0,#+1
   \   000001D2   03B4               PUSH     {R0,R1}
   \   000001D4   0100               MOVS     R1,R0
   \   000001D6   03B4               PUSH     {R0,R1}
   \   000001D8   5823               MOVS     R3,#+88
   \   000001DA   1922               MOVS     R2,#+25
   \   000001DC   0021               MOVS     R1,#+0
   \   000001DE   3000               MOVS     R0,R6
   \   000001E0   ........           BL       Label
   \   000001E4   06B0               ADD      SP,SP,#+24
   6673                 Label(":",0,40,88,1,1,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001E6   82B0               SUB      SP,SP,#+8
   \   000001E8   0020               MOVS     R0,#+0
   \   000001EA   0090               STR      R0,[SP, #+0]
   \   000001EC   7F21               MOVS     R1,#+127
   \   000001EE   0120               MOVS     R0,#+1
   \   000001F0   03B4               PUSH     {R0,R1}
   \   000001F2   0100               MOVS     R1,R0
   \   000001F4   03B4               PUSH     {R0,R1}
   \   000001F6   5823               MOVS     R3,#+88
   \   000001F8   2822               MOVS     R2,#+40
   \   000001FA   0021               MOVS     R1,#+0
   \   000001FC   3000               MOVS     R0,R6
   \   000001FE   ........           BL       Label
   \   00000202   06B0               ADD      SP,SP,#+24
   6674                   
   6675                 //V_line(25,86,11,1); // (char X, int Y, char lenght, char typ) 
   6676                 //V_line(40,86,11,1); // (char X, int Y, char lenght, char typ) 
   6677                 V_line(55,86,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000204   0123               MOVS     R3,#+1
   \   00000206   0B22               MOVS     R2,#+11
   \   00000208   5621               MOVS     R1,#+86
   \   0000020A   3720               MOVS     R0,#+55
   \   0000020C   ........           BL       V_line
   6678                 
   6679                 H_line(10,72,46,1); // (char X, int Y, char lenght, char typ) 
   \   00000210   0123               MOVS     R3,#+1
   \   00000212   2E22               MOVS     R2,#+46
   \   00000214   4821               MOVS     R1,#+72
   \   00000216   0A20               MOVS     R0,#+10
   \   00000218   ........           BL       H_line
   6680                 H_line(10,60,46,1); // (char X, int Y, char lenght, char typ) 
   \   0000021C   0123               MOVS     R3,#+1
   \   0000021E   2E22               MOVS     R2,#+46
   \   00000220   3C21               MOVS     R1,#+60
   \   00000222   0A20               MOVS     R0,#+10
   \   00000224   ........           BL       H_line
   6681                 V_line(10,61,11,1); // (char X, int Y, char lenght, char typ) 
   \   00000228   0123               MOVS     R3,#+1
   \   0000022A   0B22               MOVS     R2,#+11
   \   0000022C   3D21               MOVS     R1,#+61
   \   0000022E   0A20               MOVS     R0,#+10
   \   00000230   ........           BL       V_line
   6682                 H_line(23,66,4,1); // (char X, int Y, char lenght, char typ) 
   \   00000234   0123               MOVS     R3,#+1
   \   00000236   0422               MOVS     R2,#+4
   \   00000238   4221               MOVS     R1,#+66
   \   0000023A   1720               MOVS     R0,#+23
   \   0000023C   ........           BL       H_line
   6683                 H_line(38,66,4,1); // (char X, int Y, char lenght, char typ) 
   \   00000240   0123               MOVS     R3,#+1
   \   00000242   0422               MOVS     R2,#+4
   \   00000244   4221               MOVS     R1,#+66
   \   00000246   2620               MOVS     R0,#+38
   \   00000248   ........           BL       H_line
   6684                 //V_line(25,61,11,1); // (char X, int Y, char lenght, char typ) 
   6685                 //V_line(40,61,11,1); // (char X, int Y, char lenght, char typ) 
   6686                 V_line(55,61,11,1); // (char X, int Y, char lenght, char typ) 
   \   0000024C   0123               MOVS     R3,#+1
   \   0000024E   0B22               MOVS     R2,#+11
   \   00000250   3D21               MOVS     R1,#+61
   \   00000252   3720               MOVS     R0,#+55
   \   00000254   ........           BL       V_line
   6687                 
   6688                
   6689                // Button("> ",42,5,18,18);
   6690                // Button("< ",3,5,18,18);
   6691          
   6692                 Label((char*)DeyOfWeekLongStr[g_leng][DateTime.DayOfWeek],2,2,9,12,58,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000258   82B0               SUB      SP,SP,#+8
   \   0000025A   0020               MOVS     R0,#+0
   \   0000025C   0090               STR      R0,[SP, #+0]
   \   0000025E   6921               MOVS     R1,#+105
   \   00000260   03B4               PUSH     {R0,R1}
   \   00000262   3A21               MOVS     R1,#+58
   \   00000264   0C20               MOVS     R0,#+12
   \   00000266   03B4               PUSH     {R0,R1}
   \   00000268   0923               MOVS     R3,#+9
   \   0000026A   0222               MOVS     R2,#+2
   \   0000026C   1100               MOVS     R1,R2
   \   0000026E   A879               LDRB     R0,[R5, #+6]
   \   00000270   0C25               MOVS     R5,#+12
   \   00000272   6843               MULS     R0,R5,R0
   \   00000274   2468               LDR      R4,[R4, #+0]
   \   00000276   6025               MOVS     R5,#+96
   \   00000278   6C43               MULS     R4,R5,R4
   \   0000027A   194D               LDR      R5,??SetupTime_Paint_0+0x1C  ;; DeyOfWeekLongStr
   \   0000027C   2C19               ADDS     R4,R5,R4
   \   0000027E   2018               ADDS     R0,R4,R0
   \   00000280   ........           BL       Label
   \   00000284   06B0               ADD      SP,SP,#+24
   6693                        
   6694                 
   6695                 
   6696                 char LabelButt[2];
   6697                 LabelButt[1]=0;
   \   00000286   01AC               ADD      R4,SP,#+4
   \   00000288   0020               MOVS     R0,#+0
   \   0000028A   6070               STRB     R0,[R4, #+1]
   6698                 LabelButt[0]=30;
   \   0000028C   1E20               MOVS     R0,#+30
   \   0000028E   2070               STRB     R0,[R4, #+0]
   6699                 Button(LabelButt,33,30,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000290   82B0               SUB      SP,SP,#+8
   \   00000292   1920               MOVS     R0,#+25
   \   00000294   0090               STR      R0,[SP, #+0]
   \   00000296   1323               MOVS     R3,#+19
   \   00000298   1E22               MOVS     R2,#+30
   \   0000029A   2121               MOVS     R1,#+33
   \   0000029C   03A8               ADD      R0,SP,#+12
   \   0000029E   ........           BL       Button
   \   000002A2   02B0               ADD      SP,SP,#+8
   6700                 LabelButt[0]=31;
   \   000002A4   1F20               MOVS     R0,#+31
   \   000002A6   2070               STRB     R0,[R4, #+0]
   6701                 Button(LabelButt,12,30,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000002A8   82B0               SUB      SP,SP,#+8
   \   000002AA   1920               MOVS     R0,#+25
   \   000002AC   0090               STR      R0,[SP, #+0]
   \   000002AE   1323               MOVS     R3,#+19
   \   000002B0   1E22               MOVS     R2,#+30
   \   000002B2   0C21               MOVS     R1,#+12
   \   000002B4   03A8               ADD      R0,SP,#+12
   \   000002B6   ........           BL       Button
   \   000002BA   02B0               ADD      SP,SP,#+8
   6702                 
   6703                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   6704              }//________________________________________________________________________
   \   000002BC   FEBC               POP      {R1-R7}
   \   000002BE   01BC               POP      {R0}
   \   000002C0   0047               BX       R0               ;; return
   \   000002C2   C046               Nop      
   \                     ??SetupTime_Paint_0:
   \   000002C4   ........           DC32     g_leng
   \   000002C8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000002CC   140A0000           DC32     0xa14
   \   000002D0   ........           DC32     Speech
   \   000002D4   ........           DC32     DateTime
   \   000002D8   ........           DC32     SetupTimeCarPoz
   \   000002DC   3A000000           DC8      0x3A, 0x00, 0x00, 0x00
   \   000002E0   ........           DC32     DeyOfWeekLongStr
   6705          

   \                                 In section Debug.txt, align 4, keep-with-next
   6706              void SetupTime_Refresh(void)
   6707              {  
   \                     SetupTime_Refresh:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   6708          
   6709                 char time_char[3];
   6710                  
   6711                 CharToStr(DateTime.Hour, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000002   544C               LDR      R4,??SetupTime_Refresh_0  ;; DateTime
   \   00000004   0222               MOVS     R2,#+2
   \   00000006   6946               MOV      R1,SP
   \   00000008   E078               LDRB     R0,[R4, #+3]
   \   0000000A   ........           BL       CharToStr
   6712                 Label(time_char,2,12,87,2,11,1,127,((SetupTimeCarPoz)&0x1) );  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000000E   0126               MOVS     R6,#+1
   \   00000010   514D               LDR      R5,??SetupTime_Refresh_0+0x4  ;; SetupTimeCarPoz
   \   00000012   82B0               SUB      SP,SP,#+8
   \   00000014   2878               LDRB     R0,[R5, #+0]
   \   00000016   3100               MOVS     R1,R6
   \   00000018   0140               ANDS     R1,R1,R0
   \   0000001A   0091               STR      R1,[SP, #+0]
   \   0000001C   7F21               MOVS     R1,#+127
   \   0000001E   3000               MOVS     R0,R6
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0B21               MOVS     R1,#+11
   \   00000024   0220               MOVS     R0,#+2
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   5723               MOVS     R3,#+87
   \   0000002A   0C22               MOVS     R2,#+12
   \   0000002C   0100               MOVS     R1,R0
   \   0000002E   06A8               ADD      R0,SP,#+24
   \   00000030   ........           BL       Label
   \   00000034   06B0               ADD      SP,SP,#+24
   6713                 CharToStr2(DateTime.Minute, time_char, 2); //(char Value, char *Vstring, char ill);
                        ^
Warning[Pe223]: function "CharToStr2" declared implicitly
   \   00000036   0222               MOVS     R2,#+2
   \   00000038   6946               MOV      R1,SP
   \   0000003A   2079               LDRB     R0,[R4, #+4]
   \   0000003C   ........           BL       CharToStr2
   6714                 Label(time_char,2,27,87,2,11,1,127,(SetupTimeCarPoz>>1)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   2878               LDRB     R0,[R5, #+0]
   \   00000044   4008               LSRS     R0,R0,#+1
   \   00000046   3100               MOVS     R1,R6
   \   00000048   0140               ANDS     R1,R1,R0
   \   0000004A   0091               STR      R1,[SP, #+0]
   \   0000004C   7F21               MOVS     R1,#+127
   \   0000004E   3000               MOVS     R0,R6
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0B21               MOVS     R1,#+11
   \   00000054   0220               MOVS     R0,#+2
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   5723               MOVS     R3,#+87
   \   0000005A   1B22               MOVS     R2,#+27
   \   0000005C   0100               MOVS     R1,R0
   \   0000005E   06A8               ADD      R0,SP,#+24
   \   00000060   ........           BL       Label
   \   00000064   06B0               ADD      SP,SP,#+24
   6715                 CharToStr2(DateTime.Second, time_char, 2); //(char Value, char *Vstring, char ill);
   \   00000066   0222               MOVS     R2,#+2
   \   00000068   6946               MOV      R1,SP
   \   0000006A   6079               LDRB     R0,[R4, #+5]
   \   0000006C   ........           BL       CharToStr2
   6716                 Label(time_char,2,42,87,2,11,1,127,(SetupTimeCarPoz>>2)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   2878               LDRB     R0,[R5, #+0]
   \   00000074   8008               LSRS     R0,R0,#+2
   \   00000076   3100               MOVS     R1,R6
   \   00000078   0140               ANDS     R1,R1,R0
   \   0000007A   0091               STR      R1,[SP, #+0]
   \   0000007C   7F21               MOVS     R1,#+127
   \   0000007E   3000               MOVS     R0,R6
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   0B21               MOVS     R1,#+11
   \   00000084   0220               MOVS     R0,#+2
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   5723               MOVS     R3,#+87
   \   0000008A   2A22               MOVS     R2,#+42
   \   0000008C   0100               MOVS     R1,R0
   \   0000008E   06A8               ADD      R0,SP,#+24
   \   00000090   ........           BL       Label
   \   00000094   06B0               ADD      SP,SP,#+24
   6717                  
   6718          
   6719                 CharToStrData(DateTime.Day, time_char); //(char Value, char *Vstring, char ill);
   \   00000096   6946               MOV      R1,SP
   \   00000098   A078               LDRB     R0,[R4, #+2]
   \   0000009A   ........           BL       CharToStrData
   6720                 Label(time_char,2,12,62,2,10,1,127,(SetupTimeCarPoz>>3)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   2878               LDRB     R0,[R5, #+0]
   \   000000A2   C008               LSRS     R0,R0,#+3
   \   000000A4   3100               MOVS     R1,R6
   \   000000A6   0140               ANDS     R1,R1,R0
   \   000000A8   0091               STR      R1,[SP, #+0]
   \   000000AA   7F21               MOVS     R1,#+127
   \   000000AC   3000               MOVS     R0,R6
   \   000000AE   03B4               PUSH     {R0,R1}
   \   000000B0   0A21               MOVS     R1,#+10
   \   000000B2   0220               MOVS     R0,#+2
   \   000000B4   03B4               PUSH     {R0,R1}
   \   000000B6   3E23               MOVS     R3,#+62
   \   000000B8   0C22               MOVS     R2,#+12
   \   000000BA   0100               MOVS     R1,R0
   \   000000BC   06A8               ADD      R0,SP,#+24
   \   000000BE   ........           BL       Label
   \   000000C2   06B0               ADD      SP,SP,#+24
   6721                 CharToStrData(DateTime.Mounth, time_char); //(char Value, char *Vstring, char ill);
   \   000000C4   6946               MOV      R1,SP
   \   000000C6   6078               LDRB     R0,[R4, #+1]
   \   000000C8   ........           BL       CharToStrData
   6722                 Label(time_char,2,27,62,2,10,1,127,(SetupTimeCarPoz>>4)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000CC   82B0               SUB      SP,SP,#+8
   \   000000CE   2878               LDRB     R0,[R5, #+0]
   \   000000D0   0009               LSRS     R0,R0,#+4
   \   000000D2   3100               MOVS     R1,R6
   \   000000D4   0140               ANDS     R1,R1,R0
   \   000000D6   0091               STR      R1,[SP, #+0]
   \   000000D8   7F21               MOVS     R1,#+127
   \   000000DA   3000               MOVS     R0,R6
   \   000000DC   03B4               PUSH     {R0,R1}
   \   000000DE   0A21               MOVS     R1,#+10
   \   000000E0   0220               MOVS     R0,#+2
   \   000000E2   03B4               PUSH     {R0,R1}
   \   000000E4   3E23               MOVS     R3,#+62
   \   000000E6   1B22               MOVS     R2,#+27
   \   000000E8   0100               MOVS     R1,R0
   \   000000EA   06A8               ADD      R0,SP,#+24
   \   000000EC   ........           BL       Label
   \   000000F0   06B0               ADD      SP,SP,#+24
   6723                 CharToStrData(DateTime.Year, time_char); //(char Value, char *Vstring, char ill);
   \   000000F2   6946               MOV      R1,SP
   \   000000F4   2078               LDRB     R0,[R4, #+0]
   \   000000F6   ........           BL       CharToStrData
   6724                 Label(time_char,2,42,62,2,10,1,127,(SetupTimeCarPoz>>5)&0x1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   2878               LDRB     R0,[R5, #+0]
   \   000000FE   4009               LSRS     R0,R0,#+5
   \   00000100   0640               ANDS     R6,R6,R0
   \   00000102   0096               STR      R6,[SP, #+0]
   \   00000104   7F21               MOVS     R1,#+127
   \   00000106   0120               MOVS     R0,#+1
   \   00000108   03B4               PUSH     {R0,R1}
   \   0000010A   0A21               MOVS     R1,#+10
   \   0000010C   0220               MOVS     R0,#+2
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   3E23               MOVS     R3,#+62
   \   00000112   2A22               MOVS     R2,#+42
   \   00000114   0100               MOVS     R1,R0
   \   00000116   06A8               ADD      R0,SP,#+24
   \   00000118   ........           BL       Label
   \   0000011C   06B0               ADD      SP,SP,#+24
   6725                  
   6726                 
   6727                 Label((char*)DeyOfWeekLongStr[g_leng][DateTime.DayOfWeek],2,2,9,12,58,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000011E   82B0               SUB      SP,SP,#+8
   \   00000120   0020               MOVS     R0,#+0
   \   00000122   0090               STR      R0,[SP, #+0]
   \   00000124   6921               MOVS     R1,#+105
   \   00000126   03B4               PUSH     {R0,R1}
   \   00000128   3A21               MOVS     R1,#+58
   \   0000012A   0C20               MOVS     R0,#+12
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   0923               MOVS     R3,#+9
   \   00000130   0222               MOVS     R2,#+2
   \   00000132   1100               MOVS     R1,R2
   \   00000134   A079               LDRB     R0,[R4, #+6]
   \   00000136   0C24               MOVS     R4,#+12
   \   00000138   6043               MULS     R0,R4,R0
   \   0000013A   084C               LDR      R4,??SetupTime_Refresh_0+0x8  ;; g_leng
   \   0000013C   2468               LDR      R4,[R4, #+0]
   \   0000013E   6025               MOVS     R5,#+96
   \   00000140   6C43               MULS     R4,R5,R4
   \   00000142   074D               LDR      R5,??SetupTime_Refresh_0+0xC  ;; DeyOfWeekLongStr
   \   00000144   2C19               ADDS     R4,R5,R4
   \   00000146   2018               ADDS     R0,R4,R0
   \   00000148   ........           BL       Label
   \   0000014C   06B0               ADD      SP,SP,#+24
   6728                        
   6729              }//________________________________________________________________________
   \   0000014E   7CBC               POP      {R2-R6}
   \   00000150   01BC               POP      {R0}
   \   00000152   0047               BX       R0               ;; return
   \                     ??SetupTime_Refresh_0:
   \   00000154   ........           DC32     DateTime
   \   00000158   ........           DC32     SetupTimeCarPoz
   \   0000015C   ........           DC32     g_leng
   \   00000160   ........           DC32     DeyOfWeekLongStr
   6730          
   6731          

   \                                 In section Debug.txt, align 4, keep-with-next
   6732          int przestepny(int rok) {
   \                     przestepny:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   6733          	return ((rok % 4 == 0  &&  rok % 100 != 0) || rok % 400 == 0);
   \   00000004   4010               ASRS     R0,R0,#+1
   \   00000006   800F               LSRS     R0,R0,#+30
   \   00000008   0019               ADDS     R0,R0,R4
   \   0000000A   8010               ASRS     R0,R0,#+2
   \   0000000C   8000               LSLS     R0,R0,#+2
   \   0000000E   201A               SUBS     R0,R4,R0
   \   00000010   05D1               BNE      ??przestepny_0
   \   00000012   2000               MOVS     R0,R4
   \   00000014   6421               MOVS     R1,#+100
   \   00000016   ........           BL       __aeabi_idivmod
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   09D1               BNE      ??przestepny_1
   \                     ??przestepny_0:
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   C821               MOVS     R1,#+200
   \   00000022   4900               LSLS     R1,R1,#+1        ;; #+400
   \   00000024   ........           BL       __aeabi_idivmod
   \   00000028   0800               MOVS     R0,R1
   \   0000002A   401E               SUBS     R0,R0,#+1
   \   0000002C   8041               SBCS     R0,R0,R0
   \   0000002E   C00F               LSRS     R0,R0,#+31
   \   00000030   00E0               B        ??przestepny_2
   \                     ??przestepny_1:
   \   00000032   0120               MOVS     R0,#+1
   \                     ??przestepny_2:
   \   00000034   10BC               POP      {R4}
   \   00000036   02BC               POP      {R1}
   \   00000038   0847               BX       R1               ;; return
   6734          }
   6735          
   6736          

   \                                 In section Debug.txt, align 4, keep-with-next
   6737          int dzienTygodnia(int dzien, int miesiac, int rok) 
   6738          {
   \                     dzienTygodnia:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   8CB0               SUB      SP,SP,#+48
   \   00000004   0500               MOVS     R5,R0
   \   00000006   0E00               MOVS     R6,R1
   \   00000008   1400               MOVS     R4,R2
   6739          	int dr, yy, c, g, wynik;
   6740          	int liczbaDni[] = {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};
   \   0000000A   6846               MOV      R0,SP
   \   0000000C   1C49               LDR      R1,??dzienTygodnia_0  ;; `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`
   \   0000000E   3022               MOVS     R2,#+48
   \   00000010   ........           BL       __aeabi_memcpy4
   6741          	dr = dzien + liczbaDni[miesiac-1];
   \   00000014   B000               LSLS     R0,R6,#+2
   \   00000016   6946               MOV      R1,SP
   \   00000018   0818               ADDS     R0,R1,R0
   \   0000001A   001F               SUBS     R0,R0,#+4
   \   0000001C   0068               LDR      R0,[R0, #+0]
   \   0000001E   2D18               ADDS     R5,R5,R0
   6742          	if ((miesiac > 2) && (przestepny(rok) == 1))
   \   00000020   032E               CMP      R6,#+3
   \   00000022   05DB               BLT      ??dzienTygodnia_1
   \   00000024   2000               MOVS     R0,R4
   \   00000026   ........           BL       przestepny
   \   0000002A   0128               CMP      R0,#+1
   \   0000002C   00D1               BNE      ??dzienTygodnia_1
   6743          		dr++;
   \   0000002E   6D1C               ADDS     R5,R5,#+1
   6744          	yy = (rok - 1) % 100;
   \                     ??dzienTygodnia_1:
   \   00000030   641E               SUBS     R4,R4,#+1
   \   00000032   2000               MOVS     R0,R4
   \   00000034   6421               MOVS     R1,#+100
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   0E00               MOVS     R6,R1
   6745          	c = (rok - 1) - yy;
   6746          	g = yy + (yy / 4);
   6747          	wynik = (((((c / 100) % 4) * 5) + g) % 7);
   6748          	wynik += dr - 1;
   6749          	wynik %= 7;
   6750          	return wynik+1;
   \   0000003C   A01B               SUBS     R0,R4,R6
   \   0000003E   6421               MOVS     R1,#+100
   \   00000040   ........           BL       __aeabi_idivmod
   \   00000044   0100               MOVS     R1,R0
   \   00000046   4910               ASRS     R1,R1,#+1
   \   00000048   890F               LSRS     R1,R1,#+30
   \   0000004A   0918               ADDS     R1,R1,R0
   \   0000004C   8910               ASRS     R1,R1,#+2
   \   0000004E   8900               LSLS     R1,R1,#+2
   \   00000050   401A               SUBS     R0,R0,R1
   \   00000052   0521               MOVS     R1,#+5
   \   00000054   4843               MULS     R0,R1,R0
   \   00000056   8019               ADDS     R0,R0,R6
   \   00000058   3100               MOVS     R1,R6
   \   0000005A   4910               ASRS     R1,R1,#+1
   \   0000005C   890F               LSRS     R1,R1,#+30
   \   0000005E   8919               ADDS     R1,R1,R6
   \   00000060   8910               ASRS     R1,R1,#+2
   \   00000062   4018               ADDS     R0,R0,R1
   \   00000064   0721               MOVS     R1,#+7
   \   00000066   ........           BL       __aeabi_idivmod
   \   0000006A   4819               ADDS     R0,R1,R5
   \   0000006C   401E               SUBS     R0,R0,#+1
   \   0000006E   0721               MOVS     R1,#+7
   \   00000070   ........           BL       __aeabi_idivmod
   \   00000074   0800               MOVS     R0,R1
   \   00000076   401C               ADDS     R0,R0,#+1
   \   00000078   0CB0               ADD      SP,SP,#+48
   \   0000007A   70BC               POP      {R4-R6}
   \   0000007C   02BC               POP      {R1}
   \   0000007E   0847               BX       R1               ;; return
   \                     ??dzienTygodnia_0:
   \   00000080   ........           DC32     `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`
   6751          }
   6752          
   6753          
   6754          
   6755              //*-----------------------------------------------------------------------------
   6756              char SleepModTime=0;

   \                                 In section Debug.txt, align 4, keep-with-next
   6757              void SetupTime_Event(void)
   6758              {
   \                     SetupTime_Event:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   6759                  int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0);  //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   AF4C               LDR      R4,??SetupTime_Event_2  ;; X_up
   \   00000006   B04D               LDR      R5,??SetupTime_Event_2+0x4  ;; Y_up
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   0120               MOVS     R0,#+1
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   AE48               LDR      R0,??SetupTime_Event_2+0x8  ;; Y_down
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   AE48               LDR      R0,??SetupTime_Event_2+0xC  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   295E               LDRSH    R1,[R5, R0]
   \   0000001E   205E               LDRSH    R0,[R4, R0]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   \   00000026   0600               MOVS     R6,R0
   6760                  
   6761                  char  SetupPozTmp=0;
   6762                  if ((X_up>10) && (X_up<56) &&  (Y_up>85) && (Y_up<97))  
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   205E               LDRSH    R0,[R4, R0]
   \   0000002C   0B28               CMP      R0,#+11
   \   0000002E   1DDB               BLT      ??SetupTime_Event_3
   \   00000030   3828               CMP      R0,#+56
   \   00000032   1BDA               BGE      ??SetupTime_Event_3
   \   00000034   0021               MOVS     R1,#+0
   \   00000036   695E               LDRSH    R1,[R5, R1]
   \   00000038   5629               CMP      R1,#+86
   \   0000003A   17DB               BLT      ??SetupTime_Event_3
   \   0000003C   6129               CMP      R1,#+97
   \   0000003E   15DA               BGE      ??SetupTime_Event_3
   6763                  {
   6764                     SetupPozTmp = (X_up-10)/15;
   6765                     SetupTimeCarPoz=0;
   6766                     SetupTimeCarPoz=1<<SetupPozTmp;
   \   00000040   0127               MOVS     R7,#+1
   \   00000042   0A38               SUBS     R0,R0,#+10
   \   00000044   0F21               MOVS     R1,#+15
   \   00000046   ........           BL       __aeabi_idivmod
   \   0000004A   8740               LSLS     R7,R7,R0
   \   0000004C   A148               LDR      R0,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   0000004E   0770               STRB     R7,[R0, #+0]
   6767                     if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                  ^
Warning[Pe063]: shift count is too large
   \   00000050   A148               LDR      R0,??SetupTime_Event_2+0x14  ;; 0x13d7e9
   \   00000052   0078               LDRB     R0,[R0, #+0]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   09D1               BNE      ??SetupTime_Event_3
   \   00000058   A048               LDR      R0,??SetupTime_Event_2+0x18  ;; 0xfffff430
   \   0000005A   0021               MOVS     R1,#+0
   \   0000005C   0160               STR      R1,[R0, #+0]
   \   0000005E   A04A               LDR      R2,??SetupTime_Event_2+0x1C  ;; ButtonBipCounter
   \   00000060   A048               LDR      R0,??SetupTime_Event_2+0x20  ;; g_counter
   \   00000062   03C8               LDM      R0!,{R0,R1}
   \   00000064   0023               MOVS     R3,#+0
   \   00000066   0830               ADDS     R0,R0,#+8
   \   00000068   5941               ADCS     R1,R1,R3
   \   0000006A   03C2               STM      R2!,{R0,R1}
   6768                  }
   6769                  if ((X_up>10) && (X_up<56) &&  (Y_up>60) && (Y_up<72))  
   \                     ??SetupTime_Event_3:
   \   0000006C   0020               MOVS     R0,#+0
   \   0000006E   205E               LDRSH    R0,[R4, R0]
   \   00000070   0B28               CMP      R0,#+11
   \   00000072   1EDB               BLT      ??SetupTime_Event_4
   \   00000074   3828               CMP      R0,#+56
   \   00000076   1CDA               BGE      ??SetupTime_Event_4
   \   00000078   0021               MOVS     R1,#+0
   \   0000007A   695E               LDRSH    R1,[R5, R1]
   \   0000007C   3D29               CMP      R1,#+61
   \   0000007E   18DB               BLT      ??SetupTime_Event_4
   \   00000080   4829               CMP      R1,#+72
   \   00000082   16DA               BGE      ??SetupTime_Event_4
   6770                  {
   6771                     SetupPozTmp = (X_up-10)/15;
   6772                     SetupTimeCarPoz=0;
   6773                     SetupTimeCarPoz=1<<SetupPozTmp+3;
   \   00000084   0124               MOVS     R4,#+1
   \   00000086   0A38               SUBS     R0,R0,#+10
   \   00000088   0F21               MOVS     R1,#+15
   \   0000008A   ........           BL       __aeabi_idivmod
   \   0000008E   C01C               ADDS     R0,R0,#+3
   \   00000090   8440               LSLS     R4,R4,R0
   \   00000092   9048               LDR      R0,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   00000094   0470               STRB     R4,[R0, #+0]
   6774                     if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                  ^
Warning[Pe063]: shift count is too large
   \   00000096   9048               LDR      R0,??SetupTime_Event_2+0x14  ;; 0x13d7e9
   \   00000098   0078               LDRB     R0,[R0, #+0]
   \   0000009A   0028               CMP      R0,#+0
   \   0000009C   09D1               BNE      ??SetupTime_Event_4
   \   0000009E   8F48               LDR      R0,??SetupTime_Event_2+0x18  ;; 0xfffff430
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   0160               STR      R1,[R0, #+0]
   \   000000A4   8E4A               LDR      R2,??SetupTime_Event_2+0x1C  ;; ButtonBipCounter
   \   000000A6   8F48               LDR      R0,??SetupTime_Event_2+0x20  ;; g_counter
   \   000000A8   03C8               LDM      R0!,{R0,R1}
   \   000000AA   0023               MOVS     R3,#+0
   \   000000AC   0830               ADDS     R0,R0,#+8
   \   000000AE   5941               ADCS     R1,R1,R3
   \   000000B0   03C2               STM      R2!,{R0,R1}
   6775                  }
   6776                  
   6777                 if (ans<0)  
   \                     ??SetupTime_Event_4:
   \   000000B2   002E               CMP      R6,#+0
   \   000000B4   0AD5               BPL      ??SetupTime_Event_5
   6778                 {
   6779                    SetRTC_DateTime();  //Ustawinie: sekundy, minuty,  godziny, dzieñ tyg, dnia, miesi¹ca, roku
   \   000000B6   ........           BL       SetRTC_DateTime
   6780                    MenuLevel=(MenuLevel/10);
   \   000000BA   AD4C               LDR      R4,??SetupTime_Event_6  ;; TextToChangeLength
   \   000000BC   A06C               LDR      R0,[R4, #+72]
   \   000000BE   0A21               MOVS     R1,#+10
   \   000000C0   ........           BL       __aeabi_idivmod
   \   000000C4   A064               STR      R0,[R4, #+72]
   6781                    MenuPaint();
   \   000000C6   ........           BL       MenuPaint
   \   000000CA   4CE1               B        ??SetupTime_Event_7
   6782                 }
   \                     ??SetupTime_Event_5:
   \   000000CC   0020               MOVS     R0,#+0
   \   000000CE   0190               STR      R0,[SP, #+4]
   6783                 else
   6784                 {
   6785                  char odp=0;
   6786                  int set_zm=0;
   6787                  char LabelButt[1]={30};
   \   000000D0   03A8               ADD      R0,SP,#+12
   \   000000D2   A849               LDR      R1,??SetupTime_Event_6+0x4  ;; `?<Constant {30}>`
   \   000000D4   0A68               LDR      R2,[R1, #0]
   \   000000D6   0260               STR      R2,[R0, #0]
   6788                  odp = (Button(LabelButt,33,30,19,25));
   \   000000D8   82B0               SUB      SP,SP,#+8
   \   000000DA   1920               MOVS     R0,#+25
   \   000000DC   0090               STR      R0,[SP, #+0]
   \   000000DE   1323               MOVS     R3,#+19
   \   000000E0   1E22               MOVS     R2,#+30
   \   000000E2   2121               MOVS     R1,#+33
   \   000000E4   05A8               ADD      R0,SP,#+20
   \   000000E6   ........           BL       Button
   \   000000EA   02B0               ADD      SP,SP,#+8
   6789                  if ((odp==2) && (SleepModTime==0)) set_zm=1;
   \   000000EC   0100               MOVS     R1,R0
   \   000000EE   0229               CMP      R1,#+2
   \   000000F0   05D1               BNE      ??SetupTime_Event_8
   \   000000F2   A149               LDR      R1,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   000000F4   0978               LDRB     R1,[R1, #+0]
   \   000000F6   0029               CMP      R1,#+0
   \   000000F8   01D1               BNE      ??SetupTime_Event_8
   \   000000FA   0121               MOVS     R1,#+1
   \   000000FC   0191               STR      R1,[SP, #+4]
   6790                  if (odp==2) { SleepModTime++; if (SleepModTime>10) SleepModTime=0;};            //(char poz_X , char poz_Y ,char width, char height)
   \                     ??SetupTime_Event_8:
   \   000000FE   0100               MOVS     R1,R0
   \   00000100   0229               CMP      R1,#+2
   \   00000102   09D1               BNE      ??SetupTime_Event_9
   \   00000104   7349               LDR      R1,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   00000106   4A78               LDRB     R2,[R1, #+1]
   \   00000108   521C               ADDS     R2,R2,#+1
   \   0000010A   4A70               STRB     R2,[R1, #+1]
   \   0000010C   1206               LSLS     R2,R2,#+24
   \   0000010E   120E               LSRS     R2,R2,#+24
   \   00000110   0B2A               CMP      R2,#+11
   \   00000112   01D3               BCC      ??SetupTime_Event_9
   \   00000114   0022               MOVS     R2,#+0
   \   00000116   4A70               STRB     R2,[R1, #+1]
   6791                  
   6792                  
   6793                  if (odp==1) {SleepModTime=0;}
   \                     ??SetupTime_Event_9:
   \   00000118   0128               CMP      R0,#+1
   \   0000011A   02D1               BNE      ??SetupTime_Event_10
   \   0000011C   9648               LDR      R0,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   0000011E   0021               MOVS     R1,#+0
   \   00000120   0170               STRB     R1,[R0, #+0]
   \                     ??SetupTime_Event_10:
   \   00000122   6846               MOV      R0,SP
   \   00000124   1F21               MOVS     R1,#+31
   \   00000126   0173               STRB     R1,[R0, #+12]
   6794                  
   6795                  LabelButt[0]=31;
   6796                  odp=0;
   6797                  odp = (Button(LabelButt,12,30,19,25));
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   1920               MOVS     R0,#+25
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   1323               MOVS     R3,#+19
   \   00000130   1E22               MOVS     R2,#+30
   \   00000132   0C21               MOVS     R1,#+12
   \   00000134   05A8               ADD      R0,SP,#+20
   \   00000136   ........           BL       Button
   \   0000013A   02B0               ADD      SP,SP,#+8
   6798                  if ((odp==2)&& (SleepModTime==0))  set_zm=-1;
   \   0000013C   0100               MOVS     R1,R0
   \   0000013E   0229               CMP      R1,#+2
   \   00000140   06D1               BNE      ??SetupTime_Event_11
   \   00000142   8D49               LDR      R1,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   00000144   0978               LDRB     R1,[R1, #+0]
   \   00000146   0029               CMP      R1,#+0
   \   00000148   02D1               BNE      ??SetupTime_Event_11
   \   0000014A   0021               MOVS     R1,#+0
   \   0000014C   C943               MVNS     R1,R1            ;; #-1
   \   0000014E   0191               STR      R1,[SP, #+4]
   6799                  if (odp==2) { SleepModTime++; if (SleepModTime>10) SleepModTime=0;};            //(char poz_X , char poz_Y ,char width, char height)
   \                     ??SetupTime_Event_11:
   \   00000150   0100               MOVS     R1,R0
   \   00000152   0229               CMP      R1,#+2
   \   00000154   09D1               BNE      ??SetupTime_Event_12
   \   00000156   5F49               LDR      R1,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   00000158   4A78               LDRB     R2,[R1, #+1]
   \   0000015A   521C               ADDS     R2,R2,#+1
   \   0000015C   4A70               STRB     R2,[R1, #+1]
   \   0000015E   1206               LSLS     R2,R2,#+24
   \   00000160   120E               LSRS     R2,R2,#+24
   \   00000162   0B2A               CMP      R2,#+11
   \   00000164   01D3               BCC      ??SetupTime_Event_12
   \   00000166   0022               MOVS     R2,#+0
   \   00000168   4A70               STRB     R2,[R1, #+1]
   6800                  
   6801                  if (odp==1) {SleepModTime=0;} 
   \                     ??SetupTime_Event_12:
   \   0000016A   0128               CMP      R0,#+1
   \   0000016C   02D1               BNE      ??SetupTime_Event_13
   \   0000016E   8248               LDR      R0,??SetupTime_Event_6+0x8  ;; SetupTimeCarPoz + 1
   \   00000170   0021               MOVS     R1,#+0
   \   00000172   0170               STRB     R1,[R0, #+0]
   \                     ??SetupTime_Event_13:
   \   00000174   8148               LDR      R0,??SetupTime_Event_6+0xC  ;; DateTime + 2
   \   00000176   0078               LDRB     R0,[R0, #+0]
   \   00000178   0090               STR      R0,[SP, #+0]
   6802                  
   6803                  
   6804                  signed int dzien_tmp= DateTime.Day;
   6805                  signed int mies_tmp=DateTime.Mounth;
   \   0000017A   8148               LDR      R0,??SetupTime_Event_6+0x10  ;; DateTime + 1
   \   0000017C   0678               LDRB     R6,[R0, #+0]
   6806                  signed int rok_tmp=DateTime.Year;
   \   0000017E   8148               LDR      R0,??SetupTime_Event_6+0x14  ;; DateTime
   \   00000180   0778               LDRB     R7,[R0, #+0]
   6807                  signed int godz_tmp=DateTime.Hour;
   \   00000182   8148               LDR      R0,??SetupTime_Event_6+0x18  ;; DateTime + 3
   \   00000184   0578               LDRB     R5,[R0, #+0]
   6808                  signed int mi_tmp=DateTime.Minute;
   \   00000186   8148               LDR      R0,??SetupTime_Event_6+0x1C  ;; DateTime + 4
   \   00000188   0478               LDRB     R4,[R0, #+0]
   6809                  signed int sek_tmp=DateTime.Second;
   \   0000018A   8148               LDR      R0,??SetupTime_Event_6+0x20  ;; DateTime + 5
   \   0000018C   0078               LDRB     R0,[R0, #+0]
   \   0000018E   0290               STR      R0,[SP, #+8]
   6810                  
   6811                  
   6812                  switch (SetupTimeCarPoz)
   \   00000190   5048               LDR      R0,??SetupTime_Event_2+0x10  ;; SetupTimeCarPoz
   \   00000192   0078               LDRB     R0,[R0, #+0]
   \   00000194   0128               CMP      R0,#+1
   \   00000196   0AD0               BEQ      ??SetupTime_Event_14
   \   00000198   0228               CMP      R0,#+2
   \   0000019A   0BD0               BEQ      ??SetupTime_Event_15
   \   0000019C   0428               CMP      R0,#+4
   \   0000019E   0CD0               BEQ      ??SetupTime_Event_16
   \   000001A0   0828               CMP      R0,#+8
   \   000001A2   0FD0               BEQ      ??SetupTime_Event_17
   \   000001A4   1028               CMP      R0,#+16
   \   000001A6   12D0               BEQ      ??SetupTime_Event_18
   \   000001A8   2028               CMP      R0,#+32
   \   000001AA   13D0               BEQ      ??SetupTime_Event_19
   \   000001AC   14E0               B        ??SetupTime_Event_20
   6813                  {
   6814                    case 1: godz_tmp+=set_zm;  break;
   \                     ??SetupTime_Event_14:
   \   000001AE   0198               LDR      R0,[SP, #+4]
   \   000001B0   2D18               ADDS     R5,R5,R0
   \   000001B2   11E0               B        ??SetupTime_Event_20
   6815                    case 2: mi_tmp+=set_zm;     break;
   \                     ??SetupTime_Event_15:
   \   000001B4   0198               LDR      R0,[SP, #+4]
   \   000001B6   2418               ADDS     R4,R4,R0
   \   000001B8   0EE0               B        ??SetupTime_Event_20
   6816                    case 4: sek_tmp+=set_zm;   break;
   \                     ??SetupTime_Event_16:
   \   000001BA   0298               LDR      R0,[SP, #+8]
   \   000001BC   0199               LDR      R1,[SP, #+4]
   \   000001BE   4018               ADDS     R0,R0,R1
   \   000001C0   0290               STR      R0,[SP, #+8]
   \   000001C2   09E0               B        ??SetupTime_Event_20
   6817                    case 8: dzien_tmp+=set_zm;  /*DateTime.DayOfWeek+=set_zm;*/  break;
   \                     ??SetupTime_Event_17:
   \   000001C4   0098               LDR      R0,[SP, #+0]
   \   000001C6   0199               LDR      R1,[SP, #+4]
   \   000001C8   4018               ADDS     R0,R0,R1
   \   000001CA   0090               STR      R0,[SP, #+0]
   \   000001CC   04E0               B        ??SetupTime_Event_20
   6818                    case 16: mies_tmp+=set_zm;   break;
   \                     ??SetupTime_Event_18:
   \   000001CE   0198               LDR      R0,[SP, #+4]
   \   000001D0   3618               ADDS     R6,R6,R0
   \   000001D2   01E0               B        ??SetupTime_Event_20
   6819                    case 32: rok_tmp+=set_zm;   break; 
   \                     ??SetupTime_Event_19:
   \   000001D4   0198               LDR      R0,[SP, #+4]
   \   000001D6   3F18               ADDS     R7,R7,R0
   6820                  }
   6821                  
   6822                  if (sek_tmp>59) {sek_tmp=0; mi_tmp++;} 
   \                     ??SetupTime_Event_20:
   \   000001D8   0298               LDR      R0,[SP, #+8]
   \   000001DA   3C28               CMP      R0,#+60
   \   000001DC   02DB               BLT      ??SetupTime_Event_21
   \   000001DE   0020               MOVS     R0,#+0
   \   000001E0   0290               STR      R0,[SP, #+8]
   \   000001E2   641C               ADDS     R4,R4,#+1
   6823                  if (mi_tmp>59)  {mi_tmp=0; godz_tmp++;}
   \                     ??SetupTime_Event_21:
   \   000001E4   3C2C               CMP      R4,#+60
   \   000001E6   01DB               BLT      ??SetupTime_Event_22
   \   000001E8   0024               MOVS     R4,#+0
   \   000001EA   6D1C               ADDS     R5,R5,#+1
   6824                  if (godz_tmp>23) godz_tmp=0;  
   \                     ??SetupTime_Event_22:
   \   000001EC   182D               CMP      R5,#+24
   \   000001EE   00DB               BLT      ??SetupTime_Event_23
   \   000001F0   0025               MOVS     R5,#+0
   6825                  
   6826                  if (sek_tmp<0) {sek_tmp=59; mi_tmp--;}
   \                     ??SetupTime_Event_23:
   \   000001F2   0298               LDR      R0,[SP, #+8]
   \   000001F4   0028               CMP      R0,#+0
   \   000001F6   02D5               BPL      ??SetupTime_Event_24
   \   000001F8   3B20               MOVS     R0,#+59
   \   000001FA   0290               STR      R0,[SP, #+8]
   \   000001FC   641E               SUBS     R4,R4,#+1
   6827                  if (mi_tmp<0)  {mi_tmp=59; godz_tmp--;}
   \                     ??SetupTime_Event_24:
   \   000001FE   002C               CMP      R4,#+0
   \   00000200   01D5               BPL      ??SetupTime_Event_25
   \   00000202   3B24               MOVS     R4,#+59
   \   00000204   6D1E               SUBS     R5,R5,#+1
   6828                  if (godz_tmp<0) godz_tmp=23;
   \                     ??SetupTime_Event_25:
   \   00000206   002D               CMP      R5,#+0
   \   00000208   00D5               BPL      ??SetupTime_Event_26
   \   0000020A   1725               MOVS     R5,#+23
   6829                 
   6830                  char mies_tmp2 = mies_tmp;
   6831                  switch (mies_tmp2)
   \                     ??SetupTime_Event_26:
   \   0000020C   3000               MOVS     R0,R6
   \   0000020E   0006               LSLS     R0,R0,#+24
   \   00000210   000E               LSRS     R0,R0,#+24
   \   00000212   401E               SUBS     R0,R0,#+1
   \   00000214   0B28               CMP      R0,#+11
   \   00000216   37D8               BHI      ??SetupTime_Event_27
   \   00000218   01A1               ADR      R1,??SetupTime_Event_0
   \   0000021A   095C               LDRB     R1,[R1, R0]
   \   0000021C   8F44               ADD      PC,PC,R1
   \   0000021E   C046               Nop      
   \                     ??SetupTime_Event_0:
   \   00000220   0C1A0C54           DC8      +12,+26,+12,+84
   \   00000224   0C540C0C           DC8      +12,+84,+12,+12
   \   00000228   540C545C           DC8      +84,+12,+84,+92
   6832                  {
   6833                    case 1  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   \                     ??SetupTime_Event_28:
   \   0000022C   0098               LDR      R0,[SP, #+0]
   \   0000022E   2028               CMP      R0,#+32
   \   00000230   2ADB               BLT      ??SetupTime_Event_27
   \                     ??SetupTime_Event_29:
   \   00000232   0120               MOVS     R0,#+1
   \   00000234   0090               STR      R0,[SP, #+0]
   \   00000236   761C               ADDS     R6,R6,#+1
   \   00000238   26E0               B        ??SetupTime_Event_27
   6834                    case 2  : if ((rok_tmp%4==0) && (rok_tmp%100 != 0) || (rok_tmp%400 == 0))  //je¿eli rok przestêpny
   \                     ??SetupTime_Event_30:
   \   0000023A   3800               MOVS     R0,R7
   \   0000023C   4010               ASRS     R0,R0,#+1
   \   0000023E   800F               LSRS     R0,R0,#+30
   \   00000240   C019               ADDS     R0,R0,R7
   \   00000242   8010               ASRS     R0,R0,#+2
   \   00000244   8000               LSLS     R0,R0,#+2
   \   00000246   381A               SUBS     R0,R7,R0
   \   00000248   05D1               BNE      ??SetupTime_Event_31
   \   0000024A   3800               MOVS     R0,R7
   \   0000024C   6421               MOVS     R1,#+100
   \   0000024E   ........           BL       __aeabi_idivmod
   \   00000252   0029               CMP      R1,#+0
   \   00000254   06D1               BNE      ??SetupTime_Event_32
   \                     ??SetupTime_Event_31:
   \   00000256   3800               MOVS     R0,R7
   \   00000258   C821               MOVS     R1,#+200
   \   0000025A   4900               LSLS     R1,R1,#+1        ;; #+400
   \   0000025C   ........           BL       __aeabi_idivmod
   \   00000260   0029               CMP      R1,#+0
   \   00000262   03D1               BNE      ??SetupTime_Event_33
   6835                                {  
   6836                                  if (dzien_tmp>29) {dzien_tmp=1; mies_tmp++;} 
   \                     ??SetupTime_Event_32:
   \   00000264   0098               LDR      R0,[SP, #+0]
   \   00000266   1E28               CMP      R0,#+30
   \   00000268   0EDB               BLT      ??SetupTime_Event_27
   \   0000026A   E2E7               B        ??SetupTime_Event_29
   6837                                  }else {if (dzien_tmp>28) {dzien_tmp=1; mies_tmp++;} 
   \                     ??SetupTime_Event_33:
   \   0000026C   0098               LDR      R0,[SP, #+0]
   \   0000026E   1D28               CMP      R0,#+29
   \   00000270   0ADB               BLT      ??SetupTime_Event_27
   \   00000272   DEE7               B        ??SetupTime_Event_29
   6838                                  }     
   6839                              break;
   6840                    case 3  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6841                    case 4  : if (dzien_tmp>30) {dzien_tmp=1; mies_tmp++;} break;
   \                     ??SetupTime_Event_34:
   \   00000274   0098               LDR      R0,[SP, #+0]
   \   00000276   1F28               CMP      R0,#+31
   \   00000278   06DB               BLT      ??SetupTime_Event_27
   \   0000027A   DAE7               B        ??SetupTime_Event_29
   6842                    case 5  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6843                    case 6  : if (dzien_tmp>30) {dzien_tmp=1; mies_tmp++;} break;
   6844                    case 7  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6845                    case 8  : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6846                    case 9  : if (dzien_tmp>30) {dzien_tmp=1; mies_tmp++;} break;
   6847                    case 10 : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp++;} break;
   6848                    case 11 : if (dzien_tmp>30) {dzien_tmp=1; mies_tmp++;} break;
   6849                    case 12 : if (dzien_tmp>31) {dzien_tmp=1; mies_tmp=1; rok_tmp++;} break;
   \                     ??SetupTime_Event_35:
   \   0000027C   0098               LDR      R0,[SP, #+0]
   \   0000027E   2028               CMP      R0,#+32
   \   00000280   02DB               BLT      ??SetupTime_Event_27
   \   00000282   0126               MOVS     R6,#+1
   \   00000284   0096               STR      R6,[SP, #+0]
   \   00000286   7F1C               ADDS     R7,R7,#+1
   6850                  }  
   6851                  
   6852                  if (mies_tmp>12)  {mies_tmp=1; rok_tmp++;}
   \                     ??SetupTime_Event_27:
   \   00000288   0D2E               CMP      R6,#+13
   \   0000028A   01DB               BLT      ??SetupTime_Event_36
   \   0000028C   0126               MOVS     R6,#+1
   \   0000028E   7F1C               ADDS     R7,R7,#+1
   6853                  if (rok_tmp>99) rok_tmp=0;  
   \                     ??SetupTime_Event_36:
   \   00000290   642F               CMP      R7,#+100
   \   00000292   00DB               BLT      ??SetupTime_Event_37
   \   00000294   0027               MOVS     R7,#+0
   6854                 
   6855                  mies_tmp2 = mies_tmp;
   \                     ??SetupTime_Event_37:
   \   00000296   3000               MOVS     R0,R6
   \   00000298   0006               LSLS     R0,R0,#+24
   \   0000029A   000E               LSRS     R0,R0,#+24
   6856                  if (dzien_tmp<=0)
   \   0000029C   0099               LDR      R1,[SP, #+0]
   \   0000029E   0129               CMP      R1,#+1
   \   000002A0   42DA               BGE      ??SetupTime_Event_38
   6857                  switch (mies_tmp2)
   \   000002A2   401E               SUBS     R0,R0,#+1
   \   000002A4   0B28               CMP      R0,#+11
   \   000002A6   3FD8               BHI      ??SetupTime_Event_38
   \   000002A8   01A1               ADR      R1,??SetupTime_Event_1
   \   000002AA   095C               LDRB     R1,[R1, R0]
   \   000002AC   8F44               ADD      PC,PC,R1
   \   000002AE   C046               Nop      
   \                     ??SetupTime_Event_1:
   \   000002B0   0C0C380C           DC8      +12,+12,+56,+12
   \   000002B4   720C720C           DC8      +114,+12,+114,+12
   \   000002B8   0C720C72           DC8      +12,+114,+12,+114
   6858                  {
   6859                    case 1  : dzien_tmp=31; mies_tmp--; break;
   \                     ??SetupTime_Event_39:
   \   000002BC   1F20               MOVS     R0,#+31
   \   000002BE   0090               STR      R0,[SP, #+0]
   \   000002C0   761E               SUBS     R6,R6,#+1
   \   000002C2   31E0               B        ??SetupTime_Event_38
   \                     ??SetupTime_Event_2:
   \   000002C4   ........           DC32     X_up
   \   000002C8   ........           DC32     Y_up
   \   000002CC   ........           DC32     Y_down
   \   000002D0   ........           DC32     X_down
   \   000002D4   ........           DC32     SetupTimeCarPoz
   \   000002D8   E9D71300           DC32     0x13d7e9
   \   000002DC   30F4FFFF           DC32     0xfffff430
   \   000002E0   ........           DC32     ButtonBipCounter
   \   000002E4   ........           DC32     g_counter
   6860                    case 2  : dzien_tmp=31; mies_tmp--; break;
   6861                    case 3  : if ((rok_tmp%4==0) && (rok_tmp%100 != 0) || (rok_tmp%400 == 0))  //je¿eli rok przestêpny
   \                     ??SetupTime_Event_40:
   \   000002E8   3800               MOVS     R0,R7
   \   000002EA   4010               ASRS     R0,R0,#+1
   \   000002EC   800F               LSRS     R0,R0,#+30
   \   000002EE   C019               ADDS     R0,R0,R7
   \   000002F0   8010               ASRS     R0,R0,#+2
   \   000002F2   8000               LSLS     R0,R0,#+2
   \   000002F4   381A               SUBS     R0,R7,R0
   \   000002F6   05D1               BNE      ??SetupTime_Event_41
   \   000002F8   3800               MOVS     R0,R7
   \   000002FA   6421               MOVS     R1,#+100
   \   000002FC   ........           BL       __aeabi_idivmod
   \   00000300   0029               CMP      R1,#+0
   \   00000302   06D1               BNE      ??SetupTime_Event_42
   \                     ??SetupTime_Event_41:
   \   00000304   3800               MOVS     R0,R7
   \   00000306   C821               MOVS     R1,#+200
   \   00000308   4900               LSLS     R1,R1,#+1        ;; #+400
   \   0000030A   ........           BL       __aeabi_idivmod
   \   0000030E   0029               CMP      R1,#+0
   \   00000310   03D1               BNE      ??SetupTime_Event_43
   6862                             { dzien_tmp=29; mies_tmp--; } else { dzien_tmp=28; mies_tmp--; }  break;
   \                     ??SetupTime_Event_42:
   \   00000312   1D20               MOVS     R0,#+29
   \   00000314   0090               STR      R0,[SP, #+0]
   \   00000316   761E               SUBS     R6,R6,#+1
   \   00000318   06E0               B        ??SetupTime_Event_38
   \                     ??SetupTime_Event_43:
   \   0000031A   1C20               MOVS     R0,#+28
   \   0000031C   0090               STR      R0,[SP, #+0]
   \   0000031E   761E               SUBS     R6,R6,#+1
   \   00000320   02E0               B        ??SetupTime_Event_38
   6863                    case 4  : dzien_tmp=31; mies_tmp--;  break;
   6864                    case 5  : dzien_tmp=30; mies_tmp--;  break;
   \                     ??SetupTime_Event_44:
   \   00000322   1E20               MOVS     R0,#+30
   \   00000324   0090               STR      R0,[SP, #+0]
   \   00000326   761E               SUBS     R6,R6,#+1
   6865                    case 6  : dzien_tmp=31; mies_tmp--;  break;
   6866                    case 7  : dzien_tmp=30; mies_tmp--;  break;
   6867                    case 8  : dzien_tmp=31; mies_tmp--;  break;
   6868                    case 9  : dzien_tmp=31; mies_tmp--;  break;
   6869                    case 10 : dzien_tmp=30; mies_tmp--;  break;
   6870                    case 11 : dzien_tmp=31; mies_tmp--;  break;
   6871                    case 12 : dzien_tmp=30; mies_tmp--;  break;
   6872                  } 
   6873                   
   6874                  if (mies_tmp<0)  {mies_tmp=12; rok_tmp--;}
   \                     ??SetupTime_Event_38:
   \   00000328   002E               CMP      R6,#+0
   \   0000032A   01D5               BPL      ??SetupTime_Event_45
   \   0000032C   0C26               MOVS     R6,#+12
   \   0000032E   7F1E               SUBS     R7,R7,#+1
   6875                  if (rok_tmp<0) rok_tmp=0;
   \                     ??SetupTime_Event_45:
   \   00000330   002F               CMP      R7,#+0
   \   00000332   00D5               BPL      ??SetupTime_Event_46
   \   00000334   0027               MOVS     R7,#+0
   6876          
   6877          
   6878                  DateTime.Day= dzien_tmp;
   \                     ??SetupTime_Event_46:
   \   00000336   1148               LDR      R0,??SetupTime_Event_6+0xC  ;; DateTime + 2
   \   00000338   0099               LDR      R1,[SP, #+0]
   \   0000033A   0170               STRB     R1,[R0, #+0]
   6879                  DateTime.Mounth=mies_tmp;
   \   0000033C   1048               LDR      R0,??SetupTime_Event_6+0x10  ;; DateTime + 1
   \   0000033E   0670               STRB     R6,[R0, #+0]
   6880                  DateTime.Year=rok_tmp;
   \   00000340   1048               LDR      R0,??SetupTime_Event_6+0x14  ;; DateTime
   \   00000342   0770               STRB     R7,[R0, #+0]
   6881                  DateTime.Hour=godz_tmp;
   \   00000344   1048               LDR      R0,??SetupTime_Event_6+0x18  ;; DateTime + 3
   \   00000346   0570               STRB     R5,[R0, #+0]
   6882                  DateTime.Minute=mi_tmp;
   \   00000348   1048               LDR      R0,??SetupTime_Event_6+0x1C  ;; DateTime + 4
   \   0000034A   0470               STRB     R4,[R0, #+0]
   6883                  DateTime.Second=sek_tmp;
   \   0000034C   1048               LDR      R0,??SetupTime_Event_6+0x20  ;; DateTime + 5
   \   0000034E   0299               LDR      R1,[SP, #+8]
   \   00000350   0170               STRB     R1,[R0, #+0]
   6884                  
   6885                 
   6886                // SetRTC_DateTime();  //Ustawinie: sekundy, minuty,  godziny, dzieñ tyg, dnia, miesi¹ca, roku
   6887          
   6888                 
   6889                 
   6890                 DateTime.DayOfWeek=dzienTygodnia(DateTime.Day,DateTime.Mounth,DateTime.Year ); //(int dzien, int miesiac, int rok) 
   \   00000352   0C48               LDR      R0,??SetupTime_Event_6+0x14  ;; DateTime
   \   00000354   0278               LDRB     R2,[R0, #+0]
   \   00000356   0A48               LDR      R0,??SetupTime_Event_6+0x10  ;; DateTime + 1
   \   00000358   0178               LDRB     R1,[R0, #+0]
   \   0000035A   0848               LDR      R0,??SetupTime_Event_6+0xC  ;; DateTime + 2
   \   0000035C   0078               LDRB     R0,[R0, #+0]
   \   0000035E   ........           BL       dzienTygodnia
   \   00000362   0C49               LDR      R1,??SetupTime_Event_6+0x24  ;; DateTime + 6
   \   00000364   0870               STRB     R0,[R1, #+0]
   6891                   /*
   6892                 if (Button("> ",42,5,18,18)==1) 
   6893                    {
   6894            
   6895                      if (DateTime.DayOfWeek<Sunday) {DateTime.DayOfWeek++;} else {DateTime.DayOfWeek=Monday;}
   6896                      MenuPaint(); 
   6897                    }
   6898              
   6899                    if (Button("< ",3,5,18,18)==1) 
   6900                    {
   6901                      
   6902                        if (DateTime.DayOfWeek>Monday) {DateTime.DayOfWeek--;} else {DateTime.DayOfWeek=Sunday;}
   6903          
   6904                      MenuPaint(); 
   6905                    }
   6906                  */
   6907                // SetRTC_DateTime();  //Ustawinie: sekundy, minuty,  godziny, dzieñ tyg, dnia, miesi¹ca, roku
   6908          
   6909                 }
   6910              }//________________________________________________________________________
   \                     ??SetupTime_Event_7:
   \   00000366   05B0               ADD      SP,SP,#+20
   \   00000368   F0BC               POP      {R4-R7}
   \   0000036A   01BC               POP      {R0}
   \   0000036C   0047               BX       R0               ;; return
   \   0000036E   C046               Nop      
   \                     ??SetupTime_Event_6:
   \   00000370   ........           DC32     TextToChangeLength
   \   00000374   ........           DC32     `?<Constant {30}>`
   \   00000378   ........           DC32     SetupTimeCarPoz + 1
   \   0000037C   ........           DC32     DateTime + 2
   \   00000380   ........           DC32     DateTime + 1
   \   00000384   ........           DC32     DateTime
   \   00000388   ........           DC32     DateTime + 3
   \   0000038C   ........           DC32     DateTime + 4
   \   00000390   ........           DC32     DateTime + 5
   \   00000394   ........           DC32     DateTime + 6
   6911          
   6912          
   6913              
   6914              
   6915              
   6916          //Ustawienia wygaszacza  **************************************************************************************************************
   6917          extern char g_ScreenSever_On;
   6918          extern char g_ScreenSever_Time_On;
   6919          extern char g_ScreenSever_Time_Off;
   6920          //*---------------------------------------------------------------------------- 

   \                                 In section Debug.txt, align 4, keep-with-next
   6921              void ScreenSever_Paint(void)
   6922              {  
   \                     ScreenSever_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   7A4C               LDR      R4,??ScreenSever_Paint_0  ;; g_leng
   \   00000004   7AA5               ADR      R5,??ScreenSever_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2800               MOVS     R0,R5
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   0121               MOVS     R1,#+1
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   0300               MOVS     R3,R0
   \   0000001C   6C22               MOVS     R2,#+108
   \   0000001E   7548               LDR      R0,??ScreenSever_Paint_0+0x8  ;; 0x654
   \   00000020   2668               LDR      R6,[R4, #+0]
   \   00000022   754F               LDR      R7,??ScreenSever_Paint_0+0xC  ;; 0xa14
   \   00000024   7E43               MULS     R6,R7,R6
   \   00000026   754F               LDR      R7,??ScreenSever_Paint_0+0x10  ;; Speech
   \   00000028   BE19               ADDS     R6,R7,R6
   \   0000002A   3018               ADDS     R0,R6,R0
   6923                
   6924                 List_Paint(Speech[g_leng].ScreenSever,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   6925                 
   6926                 g_Stop_Program=1;
   \   00000032   7348               LDR      R0,??ScreenSever_Paint_0+0x14  ;; g_Stop_Program
   \   00000034   0121               MOVS     R1,#+1
   \   00000036   0170               STRB     R1,[R0, #+0]
   6927                 
   6928                 //Speech[g_leng].RfChannel
   6929                 Label("On/off",0,6,90,10,33,1,127,0);
   \   00000038   82B0               SUB      SP,SP,#+8
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   0090               STR      R0,[SP, #+0]
   \   0000003E   7F21               MOVS     R1,#+127
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   2121               MOVS     R1,#+33
   \   00000046   0A20               MOVS     R0,#+10
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   5A23               MOVS     R3,#+90
   \   0000004C   0622               MOVS     R2,#+6
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   6C48               LDR      R0,??ScreenSever_Paint_0+0x18  ;; `?<Constant "On/off">`
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   6930                 if (g_ScreenSever_On==0)
   \   00000058   6B48               LDR      R0,??ScreenSever_Paint_0+0x1C  ;; g_ScreenSever_On
   \   0000005A   0078               LDRB     R0,[R0, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   0AD1               BNE      ??ScreenSever_Paint_1
   6931                 {
   6932                    Zone(" ",40,86,15,16,1);//(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \   00000060   0121               MOVS     R1,#+1
   \   00000062   1020               MOVS     R0,#+16
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   0F23               MOVS     R3,#+15
   \   00000068   5622               MOVS     R2,#+86
   \   0000006A   2821               MOVS     R1,#+40
   \   0000006C   2800               MOVS     R0,R5
   \   0000006E   ........           BL       Zone
   \   00000072   02B0               ADD      SP,SP,#+8
   \   00000074   B6E0               B        ??ScreenSever_Paint_2
   6933                 }else{
   6934                    Zone("X",40,86,15,16,1);//(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \                     ??ScreenSever_Paint_1:
   \   00000076   0121               MOVS     R1,#+1
   \   00000078   1020               MOVS     R0,#+16
   \   0000007A   03B4               PUSH     {R0,R1}
   \   0000007C   0F23               MOVS     R3,#+15
   \   0000007E   5622               MOVS     R2,#+86
   \   00000080   2821               MOVS     R1,#+40
   \   00000082   62A0               ADR      R0,??ScreenSever_Paint_0+0x20  ;; 0x58, 0x00, 0x00, 0x00
   \   00000084   ........           BL       Zone
   \   00000088   02B0               ADD      SP,SP,#+8
   6935                
   6936                 char tmp_char[3];
   6937                 Label(Speech[g_leng].TimeOn,0,5,73,15,33,1,127,0);
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0020               MOVS     R0,#+0
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   7F21               MOVS     R1,#+127
   \   00000092   0120               MOVS     R0,#+1
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   2121               MOVS     R1,#+33
   \   00000098   0F20               MOVS     R0,#+15
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   4923               MOVS     R3,#+73
   \   0000009E   0522               MOVS     R2,#+5
   \   000000A0   0021               MOVS     R1,#+0
   \   000000A2   5B48               LDR      R0,??ScreenSever_Paint_0+0x24  ;; 0x663
   \   000000A4   2568               LDR      R5,[R4, #+0]
   \   000000A6   544E               LDR      R6,??ScreenSever_Paint_0+0xC  ;; 0xa14
   \   000000A8   7543               MULS     R5,R6,R5
   \   000000AA   544E               LDR      R6,??ScreenSever_Paint_0+0x10  ;; Speech
   \   000000AC   7519               ADDS     R5,R6,R5
   \   000000AE   2818               ADDS     R0,R5,R0
   \   000000B0   ........           BL       Label
   \   000000B4   06B0               ADD      SP,SP,#+24
   6938                 CharToStr(g_ScreenSever_Time_On, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   000000B6   0222               MOVS     R2,#+2
   \   000000B8   01A9               ADD      R1,SP,#+4
   \   000000BA   5648               LDR      R0,??ScreenSever_Paint_0+0x28  ;; g_ScreenSever_Time_On
   \   000000BC   0078               LDRB     R0,[R0, #+0]
   \   000000BE   ........           BL       CharToStr
   6939                 Label(tmp_char,1,29,54,2,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   7F21               MOVS     R1,#+127
   \   000000CA   0120               MOVS     R0,#+1
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   0A21               MOVS     R1,#+10
   \   000000D0   0220               MOVS     R0,#+2
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   3623               MOVS     R3,#+54
   \   000000D6   1D22               MOVS     R2,#+29
   \   000000D8   0121               MOVS     R1,#+1
   \   000000DA   07A8               ADD      R0,SP,#+28
   \   000000DC   ........           BL       Label
   \   000000E0   06B0               ADD      SP,SP,#+24
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   0020               MOVS     R0,#+0
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   7F21               MOVS     R1,#+127
   \   000000EA   0120               MOVS     R0,#+1
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   0A21               MOVS     R1,#+10
   \   000000F0   0320               MOVS     R0,#+3
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   3623               MOVS     R3,#+54
   \   000000F6   1E22               MOVS     R2,#+30
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   47A0               ADR      R0,??ScreenSever_Paint_0+0x2C  ;; ":00"
   6940                 Label(":00",0,30,54,3,10,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   6941                          
   6942                 
   6943                 char LabelButt[2];
   6944                 LabelButt[1]=0;
   \   00000102   6D46               MOV      R5,SP
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   6870               STRB     R0,[R5, #+1]
   6945                 LabelButt[0]=30;
   \   00000108   1E26               MOVS     R6,#+30
   \   0000010A   2E70               STRB     R6,[R5, #+0]
   6946                 Button(LabelButt,44,47,17,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   1920               MOVS     R0,#+25
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   1123               MOVS     R3,#+17
   \   00000114   2F22               MOVS     R2,#+47
   \   00000116   2C21               MOVS     R1,#+44
   \   00000118   02A8               ADD      R0,SP,#+8
   \   0000011A   ........           BL       Button
   \   0000011E   02B0               ADD      SP,SP,#+8
   6947                 LabelButt[0]=31;
   \   00000120   1F27               MOVS     R7,#+31
   \   00000122   2F70               STRB     R7,[R5, #+0]
   6948                 Button(LabelButt,2,47,17,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   1920               MOVS     R0,#+25
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   1123               MOVS     R3,#+17
   \   0000012C   2F22               MOVS     R2,#+47
   \   0000012E   0221               MOVS     R1,#+2
   \   00000130   02A8               ADD      R0,SP,#+8
   \   00000132   ........           BL       Button
   \   00000136   02B0               ADD      SP,SP,#+8
   6949                 
   6950                 Label(Speech[g_leng].TimeOff,0,5,34,15,33,1,127,0);
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0020               MOVS     R0,#+0
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   7F21               MOVS     R1,#+127
   \   00000140   0120               MOVS     R0,#+1
   \   00000142   03B4               PUSH     {R0,R1}
   \   00000144   2121               MOVS     R1,#+33
   \   00000146   0F20               MOVS     R0,#+15
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   2223               MOVS     R3,#+34
   \   0000014C   0522               MOVS     R2,#+5
   \   0000014E   0021               MOVS     R1,#+0
   \   00000150   8C46               MOV      R12,R1
   \   00000152   3249               LDR      R1,??ScreenSever_Paint_0+0x30  ;; 0x672
   \   00000154   2068               LDR      R0,[R4, #+0]
   \   00000156   284C               LDR      R4,??ScreenSever_Paint_0+0xC  ;; 0xa14
   \   00000158   6043               MULS     R0,R4,R0
   \   0000015A   284C               LDR      R4,??ScreenSever_Paint_0+0x10  ;; Speech
   \   0000015C   2018               ADDS     R0,R4,R0
   \   0000015E   4018               ADDS     R0,R0,R1
   \   00000160   6146               MOV      R1,R12
   \   00000162   ........           BL       Label
   \   00000166   06B0               ADD      SP,SP,#+24
   6951                 CharToStr(g_ScreenSever_Time_Off, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000168   0222               MOVS     R2,#+2
   \   0000016A   01A9               ADD      R1,SP,#+4
   \   0000016C   2C48               LDR      R0,??ScreenSever_Paint_0+0x34  ;; g_ScreenSever_Time_Off
   \   0000016E   0078               LDRB     R0,[R0, #+0]
   \   00000170   ........           BL       CharToStr
   6952                 Label(tmp_char,1,29,16,2,18,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000174   82B0               SUB      SP,SP,#+8
   \   00000176   0020               MOVS     R0,#+0
   \   00000178   0090               STR      R0,[SP, #+0]
   \   0000017A   7F21               MOVS     R1,#+127
   \   0000017C   0120               MOVS     R0,#+1
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   1221               MOVS     R1,#+18
   \   00000182   0220               MOVS     R0,#+2
   \   00000184   03B4               PUSH     {R0,R1}
   \   00000186   1023               MOVS     R3,#+16
   \   00000188   1D22               MOVS     R2,#+29
   \   0000018A   0121               MOVS     R1,#+1
   \   0000018C   07A8               ADD      R0,SP,#+28
   \   0000018E   ........           BL       Label
   \   00000192   06B0               ADD      SP,SP,#+24
   6953                 Label(":00",0,30,16,3,18,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000194   82B0               SUB      SP,SP,#+8
   \   00000196   0020               MOVS     R0,#+0
   \   00000198   0090               STR      R0,[SP, #+0]
   \   0000019A   7F21               MOVS     R1,#+127
   \   0000019C   0120               MOVS     R0,#+1
   \   0000019E   03B4               PUSH     {R0,R1}
   \   000001A0   1221               MOVS     R1,#+18
   \   000001A2   0320               MOVS     R0,#+3
   \   000001A4   03B4               PUSH     {R0,R1}
   \   000001A6   1023               MOVS     R3,#+16
   \   000001A8   3200               MOVS     R2,R6
   \   000001AA   0021               MOVS     R1,#+0
   \   000001AC   1AA0               ADR      R0,??ScreenSever_Paint_0+0x2C  ;; ":00"
   \   000001AE   ........           BL       Label
   \   000001B2   06B0               ADD      SP,SP,#+24
   6954                                     
   6955               
   6956                 LabelButt[1]=0;
   \   000001B4   0020               MOVS     R0,#+0
   \   000001B6   6870               STRB     R0,[R5, #+1]
   6957                 LabelButt[0]=30;
   \   000001B8   2E70               STRB     R6,[R5, #+0]
   6958                 Button(LabelButt,44,8,17,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000001BA   82B0               SUB      SP,SP,#+8
   \   000001BC   1920               MOVS     R0,#+25
   \   000001BE   0090               STR      R0,[SP, #+0]
   \   000001C0   1123               MOVS     R3,#+17
   \   000001C2   0822               MOVS     R2,#+8
   \   000001C4   2C21               MOVS     R1,#+44
   \   000001C6   02A8               ADD      R0,SP,#+8
   \   000001C8   ........           BL       Button
   \   000001CC   02B0               ADD      SP,SP,#+8
   6959                 LabelButt[0]=31;
   \   000001CE   2F70               STRB     R7,[R5, #+0]
   6960                 Button(LabelButt,2,8,17,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000001D0   82B0               SUB      SP,SP,#+8
   \   000001D2   1920               MOVS     R0,#+25
   \   000001D4   0090               STR      R0,[SP, #+0]
   \   000001D6   1123               MOVS     R3,#+17
   \   000001D8   0822               MOVS     R2,#+8
   \   000001DA   0221               MOVS     R1,#+2
   \   000001DC   02A8               ADD      R0,SP,#+8
   \   000001DE   ........           BL       Button
   \   000001E2   02B0               ADD      SP,SP,#+8
   6961                 }
   6962          
   6963                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   6964              }//________________________________________________________________________
   \                     ??ScreenSever_Paint_2:
   \   000001E4   FEBC               POP      {R1-R7}
   \   000001E6   01BC               POP      {R0}
   \   000001E8   0047               BX       R0               ;; return
   \   000001EA   C046               Nop      
   \                     ??ScreenSever_Paint_0:
   \   000001EC   ........           DC32     g_leng
   \   000001F0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001F4   54060000           DC32     0x654
   \   000001F8   140A0000           DC32     0xa14
   \   000001FC   ........           DC32     Speech
   \   00000200   ........           DC32     g_Stop_Program
   \   00000204   ........           DC32     `?<Constant "On/off">`
   \   00000208   ........           DC32     g_ScreenSever_On
   \   0000020C   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   00000210   63060000           DC32     0x663
   \   00000214   ........           DC32     g_ScreenSever_Time_On
   \   00000218   3A303000           DC8      ":00"
   \   0000021C   72060000           DC32     0x672
   \   00000220   ........           DC32     g_ScreenSever_Time_Off
   6965          
   6966          
   6967              
   6968              //*-----------------------------------------------------------------------------
   6969          

   \                                 In section Debug.txt, align 4, keep-with-next
   6970              void ScreenSever_Event(void)
   6971              {
   \                     ScreenSever_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   6972                char RepaintTMP=0;
   \   00000002   0025               MOVS     R5,#+0
   \   00000004   2E00               MOVS     R6,R5
   6973                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   6974                if (ans<0)  
   \   00000006   2900               MOVS     R1,R5
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0120               MOVS     R0,#+1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   5848               LDR      R0,??ScreenSever_Event_0  ;; Y_down
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   5848               LDR      R0,??ScreenSever_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   5848               LDR      R0,??ScreenSever_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   5848               LDR      R0,??ScreenSever_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   21D5               BPL      ??ScreenSever_Event_1
   6975                 {
   6976                    //zapis do flash
   6977                        unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0400               MOVS     R4,R0
   6978                        __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
   6979                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_On)),0, &g_ScreenSever_On,1);
   6980                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_On)),0, &g_ScreenSever_Time_On,1);
   6981                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_Off)),0, &g_ScreenSever_Time_Off,1);
   6982                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_On)), (char*) (&(g_ScreenSever_On)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   0122               MOVS     R2,#+1
   \   00000038   5249               LDR      R1,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   0000003A   5348               LDR      R0,??ScreenSever_Event_0+0x14  ;; 0x13d7ea
   \   0000003C   ........           BL       FlashWrite
   6983                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_On)), (char*) (&(g_ScreenSever_Time_On)), 1);
   \   00000040   524E               LDR      R6,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   00000042   0122               MOVS     R2,#+1
   \   00000044   3100               MOVS     R1,R6
   \   00000046   5248               LDR      R0,??ScreenSever_Event_0+0x1C  ;; 0x13d7eb
   \   00000048   ........           BL       FlashWrite
   6984                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.ScreenSever_Time_Off)), (char*) (&(g_ScreenSever_Time_On)), 1);
   \   0000004C   0122               MOVS     R2,#+1
   \   0000004E   3100               MOVS     R1,R6
   \   00000050   5048               LDR      R0,??ScreenSever_Event_0+0x20  ;; 0x13d7ec
   \   00000052   ........           BL       FlashWrite
   6985                        __set_interrupt_state(Save);
   \   00000056   2000               MOVS     R0,R4
   \   00000058   ........           BL       __iar_set_interrupt_state
   6986                        //koniec zapisu do flash
   6987                   
   6988                    g_Stop_Program=0;
   \   0000005C   4E48               LDR      R0,??ScreenSever_Event_0+0x24  ;; g_Stop_Program
   \   0000005E   0570               STRB     R5,[R0, #+0]
   6989                    MenuLevel=(MenuLevel/10);
   \   00000060   4E4C               LDR      R4,??ScreenSever_Event_0+0x28  ;; TextToChangeLength
   \   00000062   A06C               LDR      R0,[R4, #+72]
   \   00000064   0A21               MOVS     R1,#+10
   \   00000066   ........           BL       __aeabi_idivmod
   \   0000006A   A064               STR      R0,[R4, #+72]
   6990                    RepaintTMP=1;
   \   0000006C   0126               MOVS     R6,#+1
   \   0000006E   7AE0               B        ??ScreenSever_Event_2
   6991                 }else{
   6992                
   6993                   if (g_ScreenSever_On==1)
   \                     ??ScreenSever_Event_1:
   \   00000070   444C               LDR      R4,??ScreenSever_Event_0+0x10  ;; g_ScreenSever_On
   \   00000072   2078               LDRB     R0,[R4, #+0]
   \   00000074   0128               CMP      R0,#+1
   \   00000076   63D1               BNE      ??ScreenSever_Event_3
   6994                   {
   6995                    if (Zone("X",40,86,15,16,1)==1)  //(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \   00000078   0121               MOVS     R1,#+1
   \   0000007A   1020               MOVS     R0,#+16
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0F23               MOVS     R3,#+15
   \   00000080   5622               MOVS     R2,#+86
   \   00000082   2821               MOVS     R1,#+40
   \   00000084   46A0               ADR      R0,??ScreenSever_Event_0+0x2C  ;; 0x58, 0x00, 0x00, 0x00
   \   00000086   ........           BL       Zone
   \   0000008A   02B0               ADD      SP,SP,#+8
   \   0000008C   0128               CMP      R0,#+1
   \   0000008E   02D1               BNE      ??ScreenSever_Event_4
   6996                    {
   6997                      g_ScreenSever_On=0;
   \   00000090   2800               MOVS     R0,R5
   \   00000092   2070               STRB     R0,[R4, #+0]
   6998                      RepaintTMP=1;
   \   00000094   0126               MOVS     R6,#+1
   6999                    }
   7000                    
   7001                    char LabelButt[2];
   7002                      LabelButt[1]=0;
   \                     ??ScreenSever_Event_4:
   \   00000096   6C46               MOV      R4,SP
   \   00000098   6570               STRB     R5,[R4, #+1]
   7003                      LabelButt[0]=30;
   \   0000009A   1E25               MOVS     R5,#+30
   \   0000009C   2570               STRB     R5,[R4, #+0]
   7004                      if (Button(LabelButt,44,47,17,25)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   1920               MOVS     R0,#+25
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   1123               MOVS     R3,#+17
   \   000000A6   2F22               MOVS     R2,#+47
   \   000000A8   2C21               MOVS     R1,#+44
   \   000000AA   02A8               ADD      R0,SP,#+8
   \   000000AC   ........           BL       Button
   \   000000B0   02B0               ADD      SP,SP,#+8
   \   000000B2   0128               CMP      R0,#+1
   \   000000B4   06D1               BNE      ??ScreenSever_Event_5
   7005                      {
   7006                        if (g_ScreenSever_Time_On<23) 
   \   000000B6   354E               LDR      R6,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000B8   3078               LDRB     R0,[R6, #+0]
   \   000000BA   1728               CMP      R0,#+23
   \   000000BC   01D2               BCS      ??ScreenSever_Event_6
   7007                        {
   7008                          g_ScreenSever_Time_On++;
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   3070               STRB     R0,[R6, #+0]
   7009                        }
   7010                        RepaintTMP=1;
   \                     ??ScreenSever_Event_6:
   \   000000C2   0126               MOVS     R6,#+1
   7011                      }
   7012                      LabelButt[0]=31;
   \                     ??ScreenSever_Event_5:
   \   000000C4   1F27               MOVS     R7,#+31
   \   000000C6   2770               STRB     R7,[R4, #+0]
   7013                      if (Button(LabelButt,2,47,17,25)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   1920               MOVS     R0,#+25
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   1123               MOVS     R3,#+17
   \   000000D0   2F22               MOVS     R2,#+47
   \   000000D2   0221               MOVS     R1,#+2
   \   000000D4   02A8               ADD      R0,SP,#+8
   \   000000D6   ........           BL       Button
   \   000000DA   02B0               ADD      SP,SP,#+8
   \   000000DC   0128               CMP      R0,#+1
   \   000000DE   06D1               BNE      ??ScreenSever_Event_7
   7014                      {
   7015                         if (g_ScreenSever_Time_On>0) g_ScreenSever_Time_On--;
   \   000000E0   2A4E               LDR      R6,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   000000E2   3078               LDRB     R0,[R6, #+0]
   \   000000E4   0028               CMP      R0,#+0
   \   000000E6   01D0               BEQ      ??ScreenSever_Event_8
   \   000000E8   401E               SUBS     R0,R0,#+1
   \   000000EA   3070               STRB     R0,[R6, #+0]
   7016                        RepaintTMP=1;
   \                     ??ScreenSever_Event_8:
   \   000000EC   0126               MOVS     R6,#+1
   7017                      }
   7018                      LabelButt[0]=30;
   \                     ??ScreenSever_Event_7:
   \   000000EE   2570               STRB     R5,[R4, #+0]
   7019                      if (Button(LabelButt,44,8,17,25)==1) //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000F0   82B0               SUB      SP,SP,#+8
   \   000000F2   1920               MOVS     R0,#+25
   \   000000F4   0090               STR      R0,[SP, #+0]
   \   000000F6   1123               MOVS     R3,#+17
   \   000000F8   0822               MOVS     R2,#+8
   \   000000FA   2C21               MOVS     R1,#+44
   \   000000FC   02A8               ADD      R0,SP,#+8
   \   000000FE   ........           BL       Button
   \   00000102   02B0               ADD      SP,SP,#+8
   \   00000104   0128               CMP      R0,#+1
   \   00000106   06D1               BNE      ??ScreenSever_Event_9
   7020                      {
   7021                        if (g_ScreenSever_Time_Off<23) g_ScreenSever_Time_Off++;
   \   00000108   2648               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   0000010A   0178               LDRB     R1,[R0, #+0]
   \   0000010C   1729               CMP      R1,#+23
   \   0000010E   01D2               BCS      ??ScreenSever_Event_10
   \   00000110   491C               ADDS     R1,R1,#+1
   \   00000112   0170               STRB     R1,[R0, #+0]
   7022                        RepaintTMP=1;
   \                     ??ScreenSever_Event_10:
   \   00000114   0126               MOVS     R6,#+1
   7023                      }
   7024                      LabelButt[0]=31;
   \                     ??ScreenSever_Event_9:
   \   00000116   2770               STRB     R7,[R4, #+0]
   7025                      if (Button(LabelButt,2,8,17,25)==1) //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   00000118   82B0               SUB      SP,SP,#+8
   \   0000011A   1920               MOVS     R0,#+25
   \   0000011C   0090               STR      R0,[SP, #+0]
   \   0000011E   1123               MOVS     R3,#+17
   \   00000120   0822               MOVS     R2,#+8
   \   00000122   0221               MOVS     R1,#+2
   \   00000124   02A8               ADD      R0,SP,#+8
   \   00000126   ........           BL       Button
   \   0000012A   02B0               ADD      SP,SP,#+8
   \   0000012C   0128               CMP      R0,#+1
   \   0000012E   1AD1               BNE      ??ScreenSever_Event_2
   7026                      {
   7027                         if (g_ScreenSever_Time_Off>0) 
   \   00000130   1C48               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000132   0178               LDRB     R1,[R0, #+0]
   \   00000134   0029               CMP      R1,#+0
   \   00000136   01D0               BEQ      ??ScreenSever_Event_11
   7028                         {
   7029                           g_ScreenSever_Time_Off--;
   \   00000138   491E               SUBS     R1,R1,#+1
   \   0000013A   0170               STRB     R1,[R0, #+0]
   7030                         }
   7031                        RepaintTMP=1;
   \                     ??ScreenSever_Event_11:
   \   0000013C   0126               MOVS     R6,#+1
   \   0000013E   12E0               B        ??ScreenSever_Event_2
   7032                      }
   7033                   }else{
   7034                     if (Zone(" ",40,86,15,16,1)==1)  //(char _Label[15], char poz_X , char poz_Y ,char width, char height, char LineType) 
   \                     ??ScreenSever_Event_3:
   \   00000140   0121               MOVS     R1,#+1
   \   00000142   1020               MOVS     R0,#+16
   \   00000144   03B4               PUSH     {R0,R1}
   \   00000146   0F23               MOVS     R3,#+15
   \   00000148   5622               MOVS     R2,#+86
   \   0000014A   2821               MOVS     R1,#+40
   \   0000014C   16A0               ADR      R0,??ScreenSever_Event_0+0x34  ;; 0x20, 0x00, 0x00, 0x00
   \   0000014E   ........           BL       Zone
   \   00000152   02B0               ADD      SP,SP,#+8
   \   00000154   0128               CMP      R0,#+1
   \   00000156   06D1               BNE      ??ScreenSever_Event_2
   7035                    {
   7036                      g_ScreenSever_On=1;
   \   00000158   0126               MOVS     R6,#+1
   \   0000015A   2070               STRB     R0,[R4, #+0]
   7037                      g_ScreenSever_Time_On=0;
   \   0000015C   0B48               LDR      R0,??ScreenSever_Event_0+0x18  ;; g_ScreenSever_Time_On
   \   0000015E   2900               MOVS     R1,R5
   \   00000160   0170               STRB     R1,[R0, #+0]
   7038                      g_ScreenSever_Time_Off=0;
   \   00000162   1048               LDR      R0,??ScreenSever_Event_0+0x30  ;; g_ScreenSever_Time_Off
   \   00000164   0570               STRB     R5,[R0, #+0]
   7039                      RepaintTMP=1;
   7040                    }
   7041                   }
   7042                   
   7043                   
   7044                 }
   7045                 
   7046               
   7047                
   7048                 if (RepaintTMP) MenuPaint();  
   \                     ??ScreenSever_Event_2:
   \   00000166   002E               CMP      R6,#+0
   \   00000168   01D0               BEQ      ??ScreenSever_Event_12
   \   0000016A   ........           BL       MenuPaint
   7049                 
   7050               
   7051              }//________________________________________________________________________
   \                     ??ScreenSever_Event_12:
   \   0000016E   F8BC               POP      {R3-R7}
   \   00000170   01BC               POP      {R0}
   \   00000172   0047               BX       R0               ;; return
   \                     ??ScreenSever_Event_0:
   \   00000174   ........           DC32     Y_down
   \   00000178   ........           DC32     X_down
   \   0000017C   ........           DC32     Y_up
   \   00000180   ........           DC32     X_up
   \   00000184   ........           DC32     g_ScreenSever_On
   \   00000188   EAD71300           DC32     0x13d7ea
   \   0000018C   ........           DC32     g_ScreenSever_Time_On
   \   00000190   EBD71300           DC32     0x13d7eb
   \   00000194   ECD71300           DC32     0x13d7ec
   \   00000198   ........           DC32     g_Stop_Program
   \   0000019C   ........           DC32     TextToChangeLength
   \   000001A0   58000000           DC8      0x58, 0x00, 0x00, 0x00
   \   000001A4   ........           DC32     g_ScreenSever_Time_Off
   \   000001A8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   7052              
   7053              
   7054              
   7055          //Ustawienia jêzyka******************************************************************************************************************
   7056          
   7057                //*----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7058                void MasterSlave_Paint(void)
   7059                {  
   \                     MasterSlave_Paint:
   \   00000000   1FB5               PUSH     {R0-R4,LR}
   7060                    //char Y=3;
   7061                    int Y_tmp = 66;   //przesuniêcie w dó³
   7062          
   7063                    List_Paint("Mode",2,15,Y_tmp,7,0,"Master ", "Slave ",0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   164C               LDR      R4,??MasterSlave_Paint_0  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   2100               MOVS     R1,R4
   \   00000010   1C31               ADDS     R1,R1,#+28
   \   00000012   2000               MOVS     R0,R4
   \   00000014   1430               ADDS     R0,R0,#+20
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   0720               MOVS     R0,#+7
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   4223               MOVS     R3,#+66
   \   00000020   0F22               MOVS     R2,#+15
   \   00000022   0221               MOVS     R1,#+2
   \   00000024   2000               MOVS     R0,R4
   \   00000026   0C30               ADDS     R0,R0,#+12
   \   00000028   ........           BL       List_Paint
   \   0000002C   0AB0               ADD      SP,SP,#+40
   7064                
   7065                    
   7066                    char ekran_tab[10] =  {0,4,4,10,11,16,16,32,64,0};
   \   0000002E   6846               MOV      R0,SP
   \   00000030   0ECC               LDM      R4!,{R1-R3}
   \   00000032   0EC0               STM      R0!,{R1-R3}
   7067                 
   7068                  
   7069                    CopyToCanvasPoint((char *)ekran_tab,45,97-Y_tmp-(15*(SlaveMode)),8,10); 
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0A20               MOVS     R0,#+10
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   0823               MOVS     R3,#+8
   \   0000003C   1F20               MOVS     R0,#+31
   \   0000003E   0849               LDR      R1,??MasterSlave_Paint_0+0x4  ;; SlaveMode
   \   00000040   0978               LDRB     R1,[R1, #+0]
   \   00000042   0F22               MOVS     R2,#+15
   \   00000044   5143               MULS     R1,R2,R1
   \   00000046   421A               SUBS     R2,R0,R1
   \   00000048   1206               LSLS     R2,R2,#+24
   \   0000004A   120E               LSRS     R2,R2,#+24
   \   0000004C   2D21               MOVS     R1,#+45
   \   0000004E   02A8               ADD      R0,SP,#+8
   \   00000050   ........           BL       CopyToCanvasPoint
   \   00000054   02B0               ADD      SP,SP,#+8
   7070                    
   7071                }//________________________________________________________________________
   \   00000056   1FBC               POP      {R0-R4}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??MasterSlave_Paint_0:
   \   0000005C   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`
   \   00000060   ........           DC32     SlaveMode
   7072          
   7073          
   7074          
   7075                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7076                void MasterSlave_Event(void)
   7077                {
   \                     MasterSlave_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   7078                  int ans;
   7079           
   7080                  ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 7,66); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   584C               LDR      R4,??MasterSlave_Event_0  ;; X_up
   \   00000004   584D               LDR      R5,??MasterSlave_Event_0+0x4  ;; Y_up
   \   00000006   4221               MOVS     R1,#+66
   \   00000008   0720               MOVS     R0,#+7
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   0220               MOVS     R0,#+2
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   5648               LDR      R0,??MasterSlave_Event_0+0x8  ;; Y_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   435E               LDRSH    R3,[R0, R1]
   \   00000018   5548               LDR      R0,??MasterSlave_Event_0+0xC  ;; X_down
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   0020               MOVS     R0,#+0
   \   0000001E   295E               LDRSH    R1,[R5, R0]
   \   00000020   205E               LDRSH    R0,[R4, R0]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   7081            
   7082                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   00D1               BNE      .+4
   \   0000002C   8FE0               B        ??MasterSlave_Event_1
   7083                    {
   7084                      if ((ans>0) && (ans<3))
   \   0000002E   0128               CMP      R0,#+1
   \   00000030   00DA               BGE      .+4
   \   00000032   93E0               B        ??MasterSlave_Event_2
   \   00000034   0328               CMP      R0,#+3
   \   00000036   00DB               BLT      .+4
   \   00000038   90E0               B        ??MasterSlave_Event_2
   7085                      {
   7086                        SlaveMode=ans-1;
   \   0000003A   4E4C               LDR      R4,??MasterSlave_Event_0+0x10  ;; SlaveMode
   \   0000003C   401E               SUBS     R0,R0,#+1
   \   0000003E   2070               STRB     R0,[R4, #+0]
   7087                        
   7088                        //zapis do flash
   7089                        unsigned int Save = __get_interrupt_state();  
   \   00000040   ........           BL       __iar_get_interrupt_state
   \   00000044   0500               MOVS     R5,R0
   7090                        __disable_interrupt();
   \   00000046   ........           BL       __iar_disable_interrupt
   7091                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)),0, &SlaveMode,1);
   7092                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.SlaveMode)), (char*) (&(SlaveMode)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000004A   0122               MOVS     R2,#+1
   \   0000004C   2100               MOVS     R1,R4
   \   0000004E   4A48               LDR      R0,??MasterSlave_Event_0+0x14  ;; 0x13d7e8
   \   00000050   ........           BL       FlashWrite
   7093                        __set_interrupt_state(Save);
   \   00000054   2800               MOVS     R0,R5
   \   00000056   ........           BL       __iar_set_interrupt_state
   7094                        //koniec zapisu do flash
   7095                        
   7096                        if (!SlaveMode) //je¿eli master 
   \   0000005A   2078               LDRB     R0,[R4, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   4748               LDR      R0,??MasterSlave_Event_0+0x18  ;; RF_Status + 12
   \   00000060   10D1               BNE      ??MasterSlave_Event_3
   7097                        {
   7098                          RF_Status.MasterMode=1;
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   0170               STRB     R1,[R0, #+0]
   7099                          _RF_EnableRX(); 
                                 ^
Warning[Pe223]: function "_RF_EnableRX" declared implicitly
   \   00000066   ........           BL       _RF_EnableRX
   7100                         for (char i=0; i<NumberNeurons; i++) TransQuality.Mensur[i]=0; 
   \   0000006A   0020               MOVS     R0,#+0
   \   0000006C   0100               MOVS     R1,R0
   \   0000006E   444B               LDR      R3,??MasterSlave_Event_0+0x1C  ;; TransQuality
   \                     ??MasterSlave_Event_4:
   \   00000070   0A00               MOVS     R2,R1
   \   00000072   232A               CMP      R2,#+35
   \   00000074   08D2               BCS      ??MasterSlave_Event_5
   \   00000076   9200               LSLS     R2,R2,#+2
   \   00000078   9A18               ADDS     R2,R3,R2
   \   0000007A   D064               STR      R0,[R2, #+76]
   \   0000007C   491C               ADDS     R1,R1,#+1
   \   0000007E   0906               LSLS     R1,R1,#+24
   \   00000080   090E               LSRS     R1,R1,#+24
   \   00000082   F5E7               B        ??MasterSlave_Event_4
   7101                        }else{
   7102                          RF_Status.MasterMode=0; 
   \                     ??MasterSlave_Event_3:
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   0170               STRB     R1,[R0, #+0]
   7103                        }
   7104                           AT91PS_MEM pAT91C_IFLASH_MEM=AT91C_IFLASH_MEM;
   7105                          RF_Status.Ch=pAT91C_IFLASH_MEM->Config.RF_channel;
   \                     ??MasterSlave_Event_5:
   \   00000088   3E48               LDR      R0,??MasterSlave_Event_0+0x20  ;; 0x13d7e6
   \   0000008A   0078               LDRB     R0,[R0, #+0]
   \   0000008C   3E4C               LDR      R4,??MasterSlave_Event_0+0x24  ;; RF_Status
   \   0000008E   6073               STRB     R0,[R4, #+13]
   7106                          SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
                                 ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \   00000090   A026               MOVS     R6,#+160
   \   00000092   3602               LSLS     R6,R6,#+8        ;; #+40960
   \   00000094   0221               MOVS     R1,#+2
   \   00000096   0D00               MOVS     R5,R1
   \   00000098   ........           BL       __aeabi_ui2d
   \   0000009C   0200               MOVS     R2,R0
   \   0000009E   0B00               MOVS     R3,R1
   \   000000A0   3A48               LDR      R0,??MasterSlave_Event_0+0x28  ;; 0x33333333
   \   000000A2   3B49               LDR      R1,??MasterSlave_Event_0+0x2C  ;; 0x3fd33333
   \   000000A4   ........           BL       __aeabi_dmul
   \   000000A8   0200               MOVS     R2,R0
   \   000000AA   0B00               MOVS     R3,R1
   \   000000AC   3948               LDR      R0,??MasterSlave_Event_0+0x30  ;; 0x5c28f5c3
   \   000000AE   3A49               LDR      R1,??MasterSlave_Event_0+0x34  ;; 0x408ae28f
   \   000000B0   ........           BL       __aeabi_dadd
   \   000000B4   0200               MOVS     R2,R0
   \   000000B6   0B00               MOVS     R3,R1
   \   000000B8   0020               MOVS     R0,#+0
   \   000000BA   3849               LDR      R1,??MasterSlave_Event_0+0x38  ;; 0x40690000
   \   000000BC   ........           BL       __aeabi_dmul
   \   000000C0   0200               MOVS     R2,R0
   \   000000C2   0B00               MOVS     R3,R1
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   3649               LDR      R1,??MasterSlave_Event_0+0x3C  ;; 0xc104ff00
   \   000000C8   ........           BL       __aeabi_dadd
   \   000000CC   ........           BL       __aeabi_d2iz
   \   000000D0   0004               LSLS     R0,R0,#+16
   \   000000D2   0014               ASRS     R0,R0,#+16
   \   000000D4   3043               ORRS     R0,R0,R6
   \   000000D6   2900               MOVS     R1,R5
   \   000000D8   ........           BL       SPI_SendWord
   \   000000DC   24E0               B        ??MasterSlave_Event_6
   7107                          while (RF_CheckChannel())
   7108                          {
   7109                            if (RF_Status.Ch<RF_ChannelQuanti-1) {RF_Status.Ch++;} else {RF_Status.Ch=1;}
   \                     ??MasterSlave_Event_7:
   \   000000DE   0120               MOVS     R0,#+1
   \   000000E0   6073               STRB     R0,[R4, #+13]
   7110                            SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Status.Ch),Cs_RF); 
   \                     ??MasterSlave_Event_8:
   \   000000E2   607B               LDRB     R0,[R4, #+13]
   \   000000E4   ........           BL       __aeabi_ui2d
   \   000000E8   0200               MOVS     R2,R0
   \   000000EA   0B00               MOVS     R3,R1
   \   000000EC   2748               LDR      R0,??MasterSlave_Event_0+0x28  ;; 0x33333333
   \   000000EE   2849               LDR      R1,??MasterSlave_Event_0+0x2C  ;; 0x3fd33333
   \   000000F0   ........           BL       __aeabi_dmul
   \   000000F4   0200               MOVS     R2,R0
   \   000000F6   0B00               MOVS     R3,R1
   \   000000F8   2648               LDR      R0,??MasterSlave_Event_0+0x30  ;; 0x5c28f5c3
   \   000000FA   2749               LDR      R1,??MasterSlave_Event_0+0x34  ;; 0x408ae28f
   \   000000FC   ........           BL       __aeabi_dadd
   \   00000100   0200               MOVS     R2,R0
   \   00000102   0B00               MOVS     R3,R1
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   2549               LDR      R1,??MasterSlave_Event_0+0x38  ;; 0x40690000
   \   00000108   ........           BL       __aeabi_dmul
   \   0000010C   0200               MOVS     R2,R0
   \   0000010E   0B00               MOVS     R3,R1
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   2349               LDR      R1,??MasterSlave_Event_0+0x3C  ;; 0xc104ff00
   \   00000114   ........           BL       __aeabi_dadd
   \   00000118   ........           BL       __aeabi_d2iz
   \   0000011C   0004               LSLS     R0,R0,#+16
   \   0000011E   0014               ASRS     R0,R0,#+16
   \   00000120   3043               ORRS     R0,R0,R6
   \   00000122   2900               MOVS     R1,R5
   \   00000124   ........           BL       SPI_SendWord
   \                     ??MasterSlave_Event_6:
   \   00000128   ........           BL       RF_CheckChannel
   \   0000012C   0028               CMP      R0,#+0
   \   0000012E   05D0               BEQ      ??MasterSlave_Event_9
   \   00000130   607B               LDRB     R0,[R4, #+13]
   \   00000132   2728               CMP      R0,#+39
   \   00000134   D3D2               BCS      ??MasterSlave_Event_7
   \   00000136   401C               ADDS     R0,R0,#+1
   \   00000138   6073               STRB     R0,[R4, #+13]
   \   0000013A   D2E7               B        ??MasterSlave_Event_8
   7111                          } 
   7112                        
   7113                        MenuLevel=(MenuLevel/10);
   \                     ??MasterSlave_Event_9:
   \   0000013C   194C               LDR      R4,??MasterSlave_Event_0+0x40  ;; TextToChangeLength
   \   0000013E   A06C               LDR      R0,[R4, #+72]
   \   00000140   0A21               MOVS     R1,#+10
   \   00000142   ........           BL       __aeabi_idivmod
   \   00000146   A064               STR      R0,[R4, #+72]
   7114                        MenuPaint();
   \   00000148   ........           BL       MenuPaint
   \   0000014C   06E0               B        ??MasterSlave_Event_2
   7115                      }
   7116                    } 
   7117                  else
   7118                    {
   7119                      if ((X_up>0) &&(Y_up>0)) 
   \                     ??MasterSlave_Event_1:
   \   0000014E   205E               LDRSH    R0,[R4, R0]
   \   00000150   0128               CMP      R0,#+1
   \   00000152   03DB               BLT      ??MasterSlave_Event_2
   \   00000154   0020               MOVS     R0,#+0
   \   00000156   285E               LDRSH    R0,[R5, R0]
   \   00000158   0128               CMP      R0,#+1
   \   0000015A   EFDA               BGE      ??MasterSlave_Event_9
   7120                      {
   7121                        MenuLevel=(MenuLevel/10);
   7122                        MenuPaint();
   7123                      }
   7124                    }
   7125                }//_______________________________________________________________________
   \                     ??MasterSlave_Event_2:
   \   0000015C   70BC               POP      {R4-R6}
   \   0000015E   01BC               POP      {R0}
   \   00000160   0047               BX       R0               ;; return
   \   00000162   C046               Nop      
   \                     ??MasterSlave_Event_0:
   \   00000164   ........           DC32     X_up
   \   00000168   ........           DC32     Y_up
   \   0000016C   ........           DC32     Y_down
   \   00000170   ........           DC32     X_down
   \   00000174   ........           DC32     SlaveMode
   \   00000178   E8D71300           DC32     0x13d7e8
   \   0000017C   ........           DC32     RF_Status + 12
   \   00000180   ........           DC32     TransQuality
   \   00000184   E6D71300           DC32     0x13d7e6
   \   00000188   ........           DC32     RF_Status
   \   0000018C   33333333           DC32     0x33333333
   \   00000190   3333D33F           DC32     0x3fd33333
   \   00000194   C3F5285C           DC32     0x5c28f5c3
   \   00000198   8FE28A40           DC32     0x408ae28f
   \   0000019C   00006940           DC32     0x40690000
   \   000001A0   00FF04C1           DC32     0xc104ff00
   \   000001A4   ........           DC32     TextToChangeLength

   \                                 In section .bss, align 1
   \                     RF_Channel_nr_tmp:
   \   00000000                      DS8 1
   7126          
   7127              
   7128              
   7129              
   7130           
   7131          //Ustawienia kana³u transmisji WiFi  **************************************************************************************************************
   7132          
   7133              //*----------------------------------------------------------------------------
   7134              char RF_ChOkBlock=0;
   \                     RF_ChOkBlock:
   \   00000001                      DS8 1

   \                                 In section .bss, align 4
   \                     InsertOldPass1:
   \   00000000                      DS8 12
   \                     InsertNewPass1:
   \   0000000C                      DS8 12

   \                                 In section Debug.txt, align 4, keep-with-next
   7135              void RF_Channel_Paint(void)
   7136              {  
   \                     RF_Channel_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   7137                 List_Paint(Speech[g_leng].RfChannel,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000002   5D4C               LDR      R4,??RF_Channel_Paint_0  ;; 0xa14
   \   00000004   5D4D               LDR      R5,??RF_Channel_Paint_0+0x4  ;; g_leng
   \   00000006   5E4E               LDR      R6,??RF_Channel_Paint_0+0x8  ;; Speech
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   5CA0               ADR      R0,??RF_Channel_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0121               MOVS     R1,#+1
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   6C22               MOVS     R2,#+108
   \   00000020   5948               LDR      R0,??RF_Channel_Paint_0+0x10  ;; 0x636
   \   00000022   2F68               LDR      R7,[R5, #+0]
   \   00000024   6743               MULS     R7,R4,R7
   \   00000026   F719               ADDS     R7,R6,R7
   \   00000028   3818               ADDS     R0,R7,R0
   \   0000002A   ........           BL       List_Paint
   \   0000002E   0AB0               ADD      SP,SP,#+40
   7138                if (!SlaveMode)  //je¿eli tryb master
   \   00000030   5648               LDR      R0,??RF_Channel_Paint_0+0x14  ;; SlaveMode
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   0028               CMP      R0,#+0
   \   00000036   73D1               BNE      ??RF_Channel_Paint_1
   7139                {
   7140                 _RF_EnableRX();
                        ^
Warning[Pe223]: function "_RF_EnableRX" declared implicitly
   \   00000038   ........           BL       _RF_EnableRX
   7141                 g_Stop_Program=1;
   \   0000003C   5448               LDR      R0,??RF_Channel_Paint_0+0x18  ;; g_Stop_Program
   \   0000003E   0121               MOVS     R1,#+1
   \   00000040   0170               STRB     R1,[R0, #+0]
   7142                 
   7143                 //Speech[g_leng].RfChannel
   7144                 Label(Speech[g_leng].RfChannel,0,3,90,10,33,1,127,0);
   \   00000042   82B0               SUB      SP,SP,#+8
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   7F21               MOVS     R1,#+127
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   2121               MOVS     R1,#+33
   \   00000050   0A20               MOVS     R0,#+10
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   5A23               MOVS     R3,#+90
   \   00000056   0322               MOVS     R2,#+3
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   4B48               LDR      R0,??RF_Channel_Paint_0+0x10  ;; 0x636
   \   0000005C   2F68               LDR      R7,[R5, #+0]
   \   0000005E   6743               MULS     R7,R4,R7
   \   00000060   F719               ADDS     R7,R6,R7
   \   00000062   3818               ADDS     R0,R7,R0
   \   00000064   ........           BL       Label
   \   00000068   06B0               ADD      SP,SP,#+24
   \   0000006A   0222               MOVS     R2,#+2
   \   0000006C   01A9               ADD      R1,SP,#+4
   \   0000006E   4948               LDR      R0,??RF_Channel_Paint_0+0x1C  ;; RF_Channel_nr_tmp
   \   00000070   0078               LDRB     R0,[R0, #+0]
   7145            
   7146                 char tmp_char[3];
   7147                 CharToStr(RF_Channel_nr_tmp, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000072   ........           BL       CharToStr
   7148                 
   7149                 Label(tmp_char,1,30,77,2,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000076   82B0               SUB      SP,SP,#+8
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   0090               STR      R0,[SP, #+0]
   \   0000007C   7F21               MOVS     R1,#+127
   \   0000007E   0120               MOVS     R0,#+1
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   2121               MOVS     R1,#+33
   \   00000084   0220               MOVS     R0,#+2
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   4D23               MOVS     R3,#+77
   \   0000008A   1E22               MOVS     R2,#+30
   \   0000008C   0121               MOVS     R1,#+1
   \   0000008E   07A8               ADD      R0,SP,#+28
   \   00000090   ........           BL       Label
   \   00000094   06B0               ADD      SP,SP,#+24
   7150                    
   7151                 
   7152                 char LabelButt[2];
   7153                 LabelButt[1]=0;
   \   00000096   6F46               MOV      R7,SP
   \   00000098   0020               MOVS     R0,#+0
   \   0000009A   7870               STRB     R0,[R7, #+1]
   7154                 LabelButt[0]=30;
   \   0000009C   1E20               MOVS     R0,#+30
   \   0000009E   3870               STRB     R0,[R7, #+0]
   7155                 Button(LabelButt,33,48,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000A0   82B0               SUB      SP,SP,#+8
   \   000000A2   1920               MOVS     R0,#+25
   \   000000A4   0090               STR      R0,[SP, #+0]
   \   000000A6   1323               MOVS     R3,#+19
   \   000000A8   3022               MOVS     R2,#+48
   \   000000AA   2121               MOVS     R1,#+33
   \   000000AC   02A8               ADD      R0,SP,#+8
   \   000000AE   ........           BL       Button
   \   000000B2   02B0               ADD      SP,SP,#+8
   7156                 LabelButt[0]=31;
   \   000000B4   1F20               MOVS     R0,#+31
   \   000000B6   3870               STRB     R0,[R7, #+0]
   7157                 Button(LabelButt,12,48,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   1920               MOVS     R0,#+25
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   1323               MOVS     R3,#+19
   \   000000C0   3022               MOVS     R2,#+48
   \   000000C2   0C21               MOVS     R1,#+12
   \   000000C4   02A8               ADD      R0,SP,#+8
   \   000000C6   ........           BL       Button
   \   000000CA   02B0               ADD      SP,SP,#+8
   7158                 
   7159                 if ((RF_ChOkBlock) && (RF_Status.Ch!=RF_Channel_nr_tmp))
   \   000000CC   3248               LDR      R0,??RF_Channel_Paint_0+0x20  ;; RF_Channel_nr_tmp + 1
   \   000000CE   0078               LDRB     R0,[R0, #+0]
   \   000000D0   0028               CMP      R0,#+0
   \   000000D2   1AD0               BEQ      ??RF_Channel_Paint_2
   \   000000D4   3148               LDR      R0,??RF_Channel_Paint_0+0x24  ;; RF_Status + 13
   \   000000D6   0078               LDRB     R0,[R0, #+0]
   \   000000D8   2E49               LDR      R1,??RF_Channel_Paint_0+0x1C  ;; RF_Channel_nr_tmp
   \   000000DA   0978               LDRB     R1,[R1, #+0]
   \   000000DC   8842               CMP      R0,R1
   \   000000DE   14D0               BEQ      ??RF_Channel_Paint_2
   7160                 {
   7161                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   000000E0   82B0               SUB      SP,SP,#+8
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   0090               STR      R0,[SP, #+0]
   \   000000E6   7F21               MOVS     R1,#+127
   \   000000E8   0120               MOVS     R0,#+1
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   2121               MOVS     R1,#+33
   \   000000EE   0E20               MOVS     R0,#+14
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   1E23               MOVS     R3,#+30
   \   000000F4   0622               MOVS     R2,#+6
   \   000000F6   0021               MOVS     R1,#+0
   \   000000F8   2948               LDR      R0,??RF_Channel_Paint_0+0x28  ;; 0x645
   \   000000FA   2D68               LDR      R5,[R5, #+0]
   \   000000FC   6543               MULS     R5,R4,R5
   \   000000FE   7419               ADDS     R4,R6,R5
   \   00000100   2018               ADDS     R0,R4,R0
   \   00000102   ........           BL       Label
   \   00000106   06B0               ADD      SP,SP,#+24
   \   00000108   32E0               B        ??RF_Channel_Paint_3
   7162                 }else{
   7163                   Button("OK",12,12,40,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \                     ??RF_Channel_Paint_2:
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   1920               MOVS     R0,#+25
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   2823               MOVS     R3,#+40
   \   00000112   0C22               MOVS     R2,#+12
   \   00000114   1100               MOVS     R1,R2
   \   00000116   23A0               ADR      R0,??RF_Channel_Paint_0+0x2C  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   \   0000011E   27E0               B        ??RF_Channel_Paint_3
   7164                 }
   7165                }else{ //je¿eli tryb slave
   7166                   Label(Speech[g_leng].Niedostepne,2,2,70,14,59,1,127,0);
   \                     ??RF_Channel_Paint_1:
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0020               MOVS     R0,#+0
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   7F21               MOVS     R1,#+127
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   03B4               PUSH     {R0,R1}
   \   0000012C   3B21               MOVS     R1,#+59
   \   0000012E   0E20               MOVS     R0,#+14
   \   00000130   03B4               PUSH     {R0,R1}
   \   00000132   4623               MOVS     R3,#+70
   \   00000134   0222               MOVS     R2,#+2
   \   00000136   1100               MOVS     R1,R2
   \   00000138   1B48               LDR      R0,??RF_Channel_Paint_0+0x30  ;; 0x69f
   \   0000013A   2F68               LDR      R7,[R5, #+0]
   \   0000013C   6743               MULS     R7,R4,R7
   \   0000013E   F719               ADDS     R7,R6,R7
   \   00000140   3818               ADDS     R0,R7,R0
   \   00000142   ........           BL       Label
   \   00000146   06B0               ADD      SP,SP,#+24
   7167                   Label(Speech[g_leng].W_Trybie_Slave,2,2,60,14,56,1,127,0);
   \   00000148   82B0               SUB      SP,SP,#+8
   \   0000014A   0020               MOVS     R0,#+0
   \   0000014C   0090               STR      R0,[SP, #+0]
   \   0000014E   7F21               MOVS     R1,#+127
   \   00000150   0120               MOVS     R0,#+1
   \   00000152   03B4               PUSH     {R0,R1}
   \   00000154   3821               MOVS     R1,#+56
   \   00000156   0E20               MOVS     R0,#+14
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   3C23               MOVS     R3,#+60
   \   0000015C   0222               MOVS     R2,#+2
   \   0000015E   1100               MOVS     R1,R2
   \   00000160   1248               LDR      R0,??RF_Channel_Paint_0+0x34  ;; 0x6ae
   \   00000162   2D68               LDR      R5,[R5, #+0]
   \   00000164   6543               MULS     R5,R4,R5
   \   00000166   7419               ADDS     R4,R6,R5
   \   00000168   2018               ADDS     R0,R4,R0
   \   0000016A   ........           BL       Label
   \   0000016E   06B0               ADD      SP,SP,#+24
   7168                }
   7169                  //H_line(4,42,30,1); // (char X, int Y, char lenght, char typ) 
   7170              }//________________________________________________________________________
   \                     ??RF_Channel_Paint_3:
   \   00000170   FEBC               POP      {R1-R7}
   \   00000172   01BC               POP      {R0}
   \   00000174   0047               BX       R0               ;; return
   \   00000176   C046               Nop      
   \                     ??RF_Channel_Paint_0:
   \   00000178   140A0000           DC32     0xa14
   \   0000017C   ........           DC32     g_leng
   \   00000180   ........           DC32     Speech
   \   00000184   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000188   36060000           DC32     0x636
   \   0000018C   ........           DC32     SlaveMode
   \   00000190   ........           DC32     g_Stop_Program
   \   00000194   ........           DC32     RF_Channel_nr_tmp
   \   00000198   ........           DC32     RF_Channel_nr_tmp + 1
   \   0000019C   ........           DC32     RF_Status + 13
   \   000001A0   45060000           DC32     0x645
   \   000001A4   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   000001A8   9F060000           DC32     0x69f
   \   000001AC   AE060000           DC32     0x6ae
   7171          
   7172          

   \                                 In section Debug.txt, align 4, keep-with-next
   7173              void RF_Channel_Refresh(void)
   7174              {  
   \                     RF_Channel_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   7175                if (SlaveMode)  //je¿eli tryb master
   \   00000002   4748               LDR      R0,??RF_Channel_Refresh_0  ;; SlaveMode
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   00D1               BNE      .+4
   \   0000000A   86E0               B        ??RF_Channel_Refresh_1
   7176                {
   7177                
   7178                 List_Paint(Speech[g_leng].RfChannel,1,108,0,0,1," ", 0 ,0,0,0,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   0000000C   454C               LDR      R4,??RF_Channel_Refresh_0+0x4  ;; 0xa14
   \   0000000E   464D               LDR      R5,??RF_Channel_Refresh_0+0x8  ;; g_leng
   \   00000010   464E               LDR      R6,??RF_Channel_Refresh_0+0xC  ;; Speech
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   0800               MOVS     R0,R1
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   03B4               PUSH     {R0,R1}
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   44A0               ADR      R0,??RF_Channel_Refresh_0+0x10  ;; 0x20, 0x00, 0x00, 0x00
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0121               MOVS     R1,#+1
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0300               MOVS     R3,R0
   \   00000028   6C22               MOVS     R2,#+108
   \   0000002A   4248               LDR      R0,??RF_Channel_Refresh_0+0x14  ;; 0x636
   \   0000002C   2F68               LDR      R7,[R5, #+0]
   \   0000002E   6743               MULS     R7,R4,R7
   \   00000030   F719               ADDS     R7,R6,R7
   \   00000032   3818               ADDS     R0,R7,R0
   \   00000034   ........           BL       List_Paint
   \   00000038   0AB0               ADD      SP,SP,#+40
   7179                 
   7180                 g_Stop_Program=1;
   \   0000003A   3F48               LDR      R0,??RF_Channel_Refresh_0+0x18  ;; g_Stop_Program
   \   0000003C   0121               MOVS     R1,#+1
   \   0000003E   0170               STRB     R1,[R0, #+0]
   7181                 
   7182                 //Speech[g_leng].RfChannel
   7183                 Label(Speech[g_leng].RfChannel,0,3,90,10,33,1,127,0);
   \   00000040   82B0               SUB      SP,SP,#+8
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   7F21               MOVS     R1,#+127
   \   00000048   0120               MOVS     R0,#+1
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   2121               MOVS     R1,#+33
   \   0000004E   0A20               MOVS     R0,#+10
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   5A23               MOVS     R3,#+90
   \   00000054   0322               MOVS     R2,#+3
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   3648               LDR      R0,??RF_Channel_Refresh_0+0x14  ;; 0x636
   \   0000005A   2F68               LDR      R7,[R5, #+0]
   \   0000005C   6743               MULS     R7,R4,R7
   \   0000005E   F719               ADDS     R7,R6,R7
   \   00000060   3818               ADDS     R0,R7,R0
   \   00000062   ........           BL       Label
   \   00000066   06B0               ADD      SP,SP,#+24
   \   00000068   0222               MOVS     R2,#+2
   \   0000006A   01A9               ADD      R1,SP,#+4
   \   0000006C   3348               LDR      R0,??RF_Channel_Refresh_0+0x1C  ;; RF_Channel_nr_tmp
   \   0000006E   0078               LDRB     R0,[R0, #+0]
   7184            
   7185                 char tmp_char[3];
   7186                 CharToStr(RF_Channel_nr_tmp, tmp_char, 2); //(char Value, char *Vstring, char ill);
   \   00000070   ........           BL       CharToStr
   7187                 
   7188                 Label(tmp_char,1,30,77,2,33,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   7F21               MOVS     R1,#+127
   \   0000007C   0120               MOVS     R0,#+1
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   2121               MOVS     R1,#+33
   \   00000082   0220               MOVS     R0,#+2
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   4D23               MOVS     R3,#+77
   \   00000088   1E22               MOVS     R2,#+30
   \   0000008A   0121               MOVS     R1,#+1
   \   0000008C   07A8               ADD      R0,SP,#+28
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
   7189                    
   7190                 
   7191                 char LabelButt[2];
   7192                 LabelButt[1]=0;
   \   00000094   6F46               MOV      R7,SP
   \   00000096   0020               MOVS     R0,#+0
   \   00000098   7870               STRB     R0,[R7, #+1]
   7193                 LabelButt[0]=30;
   \   0000009A   1E20               MOVS     R0,#+30
   \   0000009C   3870               STRB     R0,[R7, #+0]
   7194                 Button(LabelButt,33,48,19,25); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   1920               MOVS     R0,#+25
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   1323               MOVS     R3,#+19
   \   000000A6   3022               MOVS     R2,#+48
   \   000000A8   2121               MOVS     R1,#+33
   \   000000AA   02A8               ADD      R0,SP,#+8
   \   000000AC   ........           BL       Button
   \   000000B0   02B0               ADD      SP,SP,#+8
   7195                 LabelButt[0]=31;
   \   000000B2   1F20               MOVS     R0,#+31
   \   000000B4   3870               STRB     R0,[R7, #+0]
   7196                 Button(LabelButt,12,48,19,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \   000000B6   82B0               SUB      SP,SP,#+8
   \   000000B8   1920               MOVS     R0,#+25
   \   000000BA   0090               STR      R0,[SP, #+0]
   \   000000BC   1323               MOVS     R3,#+19
   \   000000BE   3022               MOVS     R2,#+48
   \   000000C0   0C21               MOVS     R1,#+12
   \   000000C2   02A8               ADD      R0,SP,#+8
   \   000000C4   ........           BL       Button
   \   000000C8   02B0               ADD      SP,SP,#+8
   7197                 
   7198                 if ((RF_Status.ConfResive) && (RF_Status.Ch!=RF_Channel_nr_tmp))
   \   000000CA   1D48               LDR      R0,??RF_Channel_Refresh_0+0x20  ;; RF_Status
   \   000000CC   C17A               LDRB     R1,[R0, #+11]
   \   000000CE   0029               CMP      R1,#+0
   \   000000D0   19D0               BEQ      ??RF_Channel_Refresh_2
   \   000000D2   407B               LDRB     R0,[R0, #+13]
   \   000000D4   1949               LDR      R1,??RF_Channel_Refresh_0+0x1C  ;; RF_Channel_nr_tmp
   \   000000D6   0978               LDRB     R1,[R1, #+0]
   \   000000D8   8842               CMP      R0,R1
   \   000000DA   14D0               BEQ      ??RF_Channel_Refresh_2
   7199                 {
   7200                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0020               MOVS     R0,#+0
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   7F21               MOVS     R1,#+127
   \   000000E4   0120               MOVS     R0,#+1
   \   000000E6   03B4               PUSH     {R0,R1}
   \   000000E8   2121               MOVS     R1,#+33
   \   000000EA   0E20               MOVS     R0,#+14
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   1E23               MOVS     R3,#+30
   \   000000F0   0622               MOVS     R2,#+6
   \   000000F2   0021               MOVS     R1,#+0
   \   000000F4   1348               LDR      R0,??RF_Channel_Refresh_0+0x24  ;; 0x645
   \   000000F6   2D68               LDR      R5,[R5, #+0]
   \   000000F8   6543               MULS     R5,R4,R5
   \   000000FA   7419               ADDS     R4,R6,R5
   \   000000FC   2018               ADDS     R0,R4,R0
   \   000000FE   ........           BL       Label
   \   00000102   06B0               ADD      SP,SP,#+24
   \   00000104   09E0               B        ??RF_Channel_Refresh_1
   7201                 }else{
   7202                   Button("OK",12,12,40,25); //(etykieta char poz_X , char poz_Y ,char width, char height) 
   \                     ??RF_Channel_Refresh_2:
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   1920               MOVS     R0,#+25
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   2823               MOVS     R3,#+40
   \   0000010E   0C22               MOVS     R2,#+12
   \   00000110   1100               MOVS     R1,R2
   \   00000112   0DA0               ADR      R0,??RF_Channel_Refresh_0+0x28  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000114   ........           BL       Button
   \   00000118   02B0               ADD      SP,SP,#+8
   7203                 }
   7204          
   7205                } 
   7206              }//________________________________________________________________________
   \                     ??RF_Channel_Refresh_1:
   \   0000011A   FEBC               POP      {R1-R7}
   \   0000011C   01BC               POP      {R0}
   \   0000011E   0047               BX       R0               ;; return
   \                     ??RF_Channel_Refresh_0:
   \   00000120   ........           DC32     SlaveMode
   \   00000124   140A0000           DC32     0xa14
   \   00000128   ........           DC32     g_leng
   \   0000012C   ........           DC32     Speech
   \   00000130   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000134   36060000           DC32     0x636
   \   00000138   ........           DC32     g_Stop_Program
   \   0000013C   ........           DC32     RF_Channel_nr_tmp
   \   00000140   ........           DC32     RF_Status
   \   00000144   45060000           DC32     0x645
   \   00000148   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   7207              
   7208              
   7209              
   7210              //*-----------------------------------------------------------------------------
   7211          

   \                                 In section Debug.txt, align 4, keep-with-next
   7212              void RF_Channel_Event(void)
   7213              {
   \                     RF_Channel_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7214                int ans=List_Event(X_up, Y_up, X_down, Y_down, 1 , 0, 0,0); 
   7215                if (ans<0)  
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0120               MOVS     R0,#+1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   7348               LDR      R0,??RF_Channel_Event_0  ;; Y_down
   \   0000000E   435E               LDRSH    R3,[R0, R1]
   \   00000010   7348               LDR      R0,??RF_Channel_Event_0+0x4  ;; X_down
   \   00000012   425E               LDRSH    R2,[R0, R1]
   \   00000014   7348               LDR      R0,??RF_Channel_Event_0+0x8  ;; Y_up
   \   00000016   415E               LDRSH    R1,[R0, R1]
   \   00000018   7348               LDR      R0,??RF_Channel_Event_0+0xC  ;; X_up
   \   0000001A   0024               MOVS     R4,#+0
   \   0000001C   005F               LDRSH    R0,[R0, R4]
   \   0000001E   ........           BL       List_Event
   \   00000022   04B0               ADD      SP,SP,#+16
   \   00000024   0028               CMP      R0,#+0
   \   00000026   0BD5               BPL      ??RF_Channel_Event_1
   7216                 {
   7217                    g_Stop_Program=0;
   \   00000028   7048               LDR      R0,??RF_Channel_Event_0+0x10  ;; g_Stop_Program
   \   0000002A   2100               MOVS     R1,R4
   \   0000002C   0170               STRB     R1,[R0, #+0]
   7218                    MenuLevel=(MenuLevel/10);
   \   0000002E   704C               LDR      R4,??RF_Channel_Event_0+0x14  ;; TextToChangeLength
   \   00000030   A06C               LDR      R0,[R4, #+72]
   \   00000032   0A21               MOVS     R1,#+10
   \   00000034   ........           BL       __aeabi_idivmod
   \   00000038   A064               STR      R0,[R4, #+72]
   7219                    MenuPaint();
   \   0000003A   ........           BL       MenuPaint
   \   0000003E   CAE0               B        ??RF_Channel_Event_2
   7220                 }else{
   7221                
   7222          
   7223                 char LabelButt[2];
   7224                 LabelButt[1]=0;
   \                     ??RF_Channel_Event_1:
   \   00000040   6D46               MOV      R5,SP
   \   00000042   2600               MOVS     R6,R4
   \   00000044   3000               MOVS     R0,R6
   \   00000046   6870               STRB     R0,[R5, #+1]
   7225                 LabelButt[0]=30;
   \   00000048   1E20               MOVS     R0,#+30
   \   0000004A   2870               STRB     R0,[R5, #+0]
   7226          
   7227                 if (Button(LabelButt,33,48,19,25)==1) 
   \   0000004C   694C               LDR      R4,??RF_Channel_Event_0+0x18  ;; RF_Channel_nr_tmp
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   1920               MOVS     R0,#+25
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   1323               MOVS     R3,#+19
   \   00000056   3022               MOVS     R2,#+48
   \   00000058   2121               MOVS     R1,#+33
   \   0000005A   02A8               ADD      R0,SP,#+8
   \   0000005C   ........           BL       Button
   \   00000060   02B0               ADD      SP,SP,#+8
   \   00000062   0128               CMP      R0,#+1
   \   00000064   34D1               BNE      ??RF_Channel_Event_3
   7228                 {
   7229                    if (RF_Channel_nr_tmp<RF_ChannelQuanti-1) {RF_Channel_nr_tmp++;} else {RF_Channel_nr_tmp=0;}
   \   00000066   2078               LDRB     R0,[R4, #+0]
   \   00000068   2728               CMP      R0,#+39
   \   0000006A   02D2               BCS      ??RF_Channel_Event_4
   \   0000006C   401C               ADDS     R0,R0,#+1
   \   0000006E   2070               STRB     R0,[R4, #+0]
   \   00000070   01E0               B        ??RF_Channel_Event_5
   \                     ??RF_Channel_Event_4:
   \   00000072   3000               MOVS     R0,R6
   \   00000074   2070               STRB     R0,[R4, #+0]
   7230                    SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Channel_nr_tmp),Cs_RF);
                           ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??RF_Channel_Event_5:
   \   00000076   0221               MOVS     R1,#+2
   \   00000078   0F00               MOVS     R7,R1
   \   0000007A   2078               LDRB     R0,[R4, #+0]
   \   0000007C   ........           BL       __aeabi_ui2d
   \   00000080   0200               MOVS     R2,R0
   \   00000082   0B00               MOVS     R3,R1
   \   00000084   5C48               LDR      R0,??RF_Channel_Event_0+0x1C  ;; 0x33333333
   \   00000086   5D49               LDR      R1,??RF_Channel_Event_0+0x20  ;; 0x3fd33333
   \   00000088   ........           BL       __aeabi_dmul
   \   0000008C   0200               MOVS     R2,R0
   \   0000008E   0B00               MOVS     R3,R1
   \   00000090   5B48               LDR      R0,??RF_Channel_Event_0+0x24  ;; 0x5c28f5c3
   \   00000092   5C49               LDR      R1,??RF_Channel_Event_0+0x28  ;; 0x408ae28f
   \   00000094   ........           BL       __aeabi_dadd
   \   00000098   0200               MOVS     R2,R0
   \   0000009A   0B00               MOVS     R3,R1
   \   0000009C   3000               MOVS     R0,R6
   \   0000009E   5A49               LDR      R1,??RF_Channel_Event_0+0x2C  ;; 0x40690000
   \   000000A0   ........           BL       __aeabi_dmul
   \   000000A4   0200               MOVS     R2,R0
   \   000000A6   0B00               MOVS     R3,R1
   \   000000A8   3000               MOVS     R0,R6
   \   000000AA   5849               LDR      R1,??RF_Channel_Event_0+0x30  ;; 0xc104ff00
   \   000000AC   ........           BL       __aeabi_dadd
   \   000000B0   ........           BL       __aeabi_d2iz
   \   000000B4   0004               LSLS     R0,R0,#+16
   \   000000B6   0014               ASRS     R0,R0,#+16
   \   000000B8   A021               MOVS     R1,#+160
   \   000000BA   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   000000BC   0143               ORRS     R1,R1,R0
   \   000000BE   0800               MOVS     R0,R1
   \   000000C0   3900               MOVS     R1,R7
   \   000000C2   ........           BL       SPI_SendWord
   7231          
   7232                    RF_ChOkBlock=RF_CheckChannel();
   \   000000C6   ........           BL       RF_CheckChannel
   \   000000CA   6070               STRB     R0,[R4, #+1]
   7233                    MenuPaint(); 
   \   000000CC   ........           BL       MenuPaint
   7234                 }
   7235                 LabelButt[0]=31;
   \                     ??RF_Channel_Event_3:
   \   000000D0   1F20               MOVS     R0,#+31
   \   000000D2   2870               STRB     R0,[R5, #+0]
   7236          
   7237                 if (Button(LabelButt,12,48,19,25)==1)
   \   000000D4   82B0               SUB      SP,SP,#+8
   \   000000D6   1920               MOVS     R0,#+25
   \   000000D8   0090               STR      R0,[SP, #+0]
   \   000000DA   1323               MOVS     R3,#+19
   \   000000DC   3022               MOVS     R2,#+48
   \   000000DE   0C21               MOVS     R1,#+12
   \   000000E0   02A8               ADD      R0,SP,#+8
   \   000000E2   ........           BL       Button
   \   000000E6   02B0               ADD      SP,SP,#+8
   \   000000E8   0128               CMP      R0,#+1
   \   000000EA   34D1               BNE      ??RF_Channel_Event_6
   7238                 {
   7239                    if (RF_Channel_nr_tmp>0) {RF_Channel_nr_tmp--;} else {RF_Channel_nr_tmp=RF_ChannelQuanti-1;}
   \   000000EC   2078               LDRB     R0,[R4, #+0]
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   02D0               BEQ      ??RF_Channel_Event_7
   \   000000F2   401E               SUBS     R0,R0,#+1
   \   000000F4   2070               STRB     R0,[R4, #+0]
   \   000000F6   01E0               B        ??RF_Channel_Event_8
   \                     ??RF_Channel_Event_7:
   \   000000F8   2720               MOVS     R0,#+39
   \   000000FA   2070               STRB     R0,[R4, #+0]
   7240          
   7241                    SPI_SendWord(0xA000 | RF_SetFreqReg(RF_Channel_nr_tmp),Cs_RF);
                           ^
Warning[Pe223]: function "SPI_SendWord" declared implicitly
   \                     ??RF_Channel_Event_8:
   \   000000FC   0221               MOVS     R1,#+2
   \   000000FE   0D00               MOVS     R5,R1
   \   00000100   2078               LDRB     R0,[R4, #+0]
   \   00000102   ........           BL       __aeabi_ui2d
   \   00000106   0200               MOVS     R2,R0
   \   00000108   0B00               MOVS     R3,R1
   \   0000010A   3B48               LDR      R0,??RF_Channel_Event_0+0x1C  ;; 0x33333333
   \   0000010C   3B49               LDR      R1,??RF_Channel_Event_0+0x20  ;; 0x3fd33333
   \   0000010E   ........           BL       __aeabi_dmul
   \   00000112   0200               MOVS     R2,R0
   \   00000114   0B00               MOVS     R3,R1
   \   00000116   3A48               LDR      R0,??RF_Channel_Event_0+0x24  ;; 0x5c28f5c3
   \   00000118   3A49               LDR      R1,??RF_Channel_Event_0+0x28  ;; 0x408ae28f
   \   0000011A   ........           BL       __aeabi_dadd
   \   0000011E   0200               MOVS     R2,R0
   \   00000120   0B00               MOVS     R3,R1
   \   00000122   3000               MOVS     R0,R6
   \   00000124   3849               LDR      R1,??RF_Channel_Event_0+0x2C  ;; 0x40690000
   \   00000126   ........           BL       __aeabi_dmul
   \   0000012A   0200               MOVS     R2,R0
   \   0000012C   0B00               MOVS     R3,R1
   \   0000012E   3000               MOVS     R0,R6
   \   00000130   3649               LDR      R1,??RF_Channel_Event_0+0x30  ;; 0xc104ff00
   \   00000132   ........           BL       __aeabi_dadd
   \   00000136   ........           BL       __aeabi_d2iz
   \   0000013A   0004               LSLS     R0,R0,#+16
   \   0000013C   0014               ASRS     R0,R0,#+16
   \   0000013E   A021               MOVS     R1,#+160
   \   00000140   0902               LSLS     R1,R1,#+8        ;; #+40960
   \   00000142   0143               ORRS     R1,R1,R0
   \   00000144   0800               MOVS     R0,R1
   \   00000146   2900               MOVS     R1,R5
   \   00000148   ........           BL       SPI_SendWord
   7242                    
   7243           
   7244                  
   7245          
   7246          
   7247                 
   7248          
   7249                    RF_ChOkBlock=RF_CheckChannel();
   \   0000014C   ........           BL       RF_CheckChannel
   \   00000150   6070               STRB     R0,[R4, #+1]
   7250                    MenuPaint(); 
   \   00000152   ........           BL       MenuPaint
   7251                 }       
   7252                 
   7253                 
   7254                 if (RF_ChOkBlock)
   \                     ??RF_Channel_Event_6:
   \   00000156   6078               LDRB     R0,[R4, #+1]
   \   00000158   0028               CMP      R0,#+0
   \   0000015A   82B0               SUB      SP,SP,#+8
   \   0000015C   16D0               BEQ      ??RF_Channel_Event_9
   7255                 {
   7256                   Label(Speech[g_leng].KanalZajety,0,6,30,14,33,1,127,0);
   \   0000015E   3000               MOVS     R0,R6
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   7F21               MOVS     R1,#+127
   \   00000164   0120               MOVS     R0,#+1
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   2121               MOVS     R1,#+33
   \   0000016A   0E20               MOVS     R0,#+14
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   1E23               MOVS     R3,#+30
   \   00000170   0622               MOVS     R2,#+6
   \   00000172   3100               MOVS     R1,R6
   \   00000174   2648               LDR      R0,??RF_Channel_Event_0+0x34  ;; 0x645
   \   00000176   274C               LDR      R4,??RF_Channel_Event_0+0x38  ;; g_leng
   \   00000178   2468               LDR      R4,[R4, #+0]
   \   0000017A   274D               LDR      R5,??RF_Channel_Event_0+0x3C  ;; 0xa14
   \   0000017C   6C43               MULS     R4,R5,R4
   \   0000017E   274D               LDR      R5,??RF_Channel_Event_0+0x40  ;; Speech
   \   00000180   2C19               ADDS     R4,R5,R4
   \   00000182   2018               ADDS     R0,R4,R0
   \   00000184   ........           BL       Label
   \   00000188   06B0               ADD      SP,SP,#+24
   \   0000018A   24E0               B        ??RF_Channel_Event_2
   7257                 }else{
   7258                  if (Button("OK",12,12,40,25)==1)
   \                     ??RF_Channel_Event_9:
   \   0000018C   1920               MOVS     R0,#+25
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   2823               MOVS     R3,#+40
   \   00000192   0C22               MOVS     R2,#+12
   \   00000194   1100               MOVS     R1,R2
   \   00000196   22A0               ADR      R0,??RF_Channel_Event_0+0x44  ;; 0x4F, 0x4B, 0x00, 0x00
   \   00000198   ........           BL       Button
   \   0000019C   02B0               ADD      SP,SP,#+8
   \   0000019E   0128               CMP      R0,#+1
   \   000001A0   19D1               BNE      ??RF_Channel_Event_2
   7259                  {
   7260                   g_Stop_Program=0;
   \   000001A2   1248               LDR      R0,??RF_Channel_Event_0+0x10  ;; g_Stop_Program
   \   000001A4   0670               STRB     R6,[R0, #+0]
   7261                   RF_Status.Ch=RF_Channel_nr_tmp;
   \   000001A6   1F48               LDR      R0,??RF_Channel_Event_0+0x48  ;; RF_Status + 13
   \   000001A8   2178               LDRB     R1,[R4, #+0]
   \   000001AA   0170               STRB     R1,[R0, #+0]
   7262                   
   7263          
   7264                        //zapis do flash
   7265                        unsigned int Save = __get_interrupt_state();  
   \   000001AC   ........           BL       __iar_get_interrupt_state
   \   000001B0   0500               MOVS     R5,R0
   7266                        __disable_interrupt();
   \   000001B2   ........           BL       __iar_disable_interrupt
   7267                        //at91flashWrite((int*)(&(AT91C_IFLASH_MEM->Config.RF_channel)),0, &RF_Channel_nr_tmp,1);
   7268                        FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.RF_channel)), (char*) (&(RF_Channel_nr_tmp)), 1);
                               ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000001B6   0122               MOVS     R2,#+1
   \   000001B8   2100               MOVS     R1,R4
   \   000001BA   1B48               LDR      R0,??RF_Channel_Event_0+0x4C  ;; 0x13d7e6
   \   000001BC   ........           BL       FlashWrite
   7269                        __set_interrupt_state(Save);
   \   000001C0   2800               MOVS     R0,R5
   \   000001C2   ........           BL       __iar_set_interrupt_state
   7270                        //koniec zapisu do flash
   7271                   
   7272                   
   7273                   MenuLevel=(MenuLevel/10);
   \   000001C6   0A4C               LDR      R4,??RF_Channel_Event_0+0x14  ;; TextToChangeLength
   \   000001C8   A06C               LDR      R0,[R4, #+72]
   \   000001CA   0A21               MOVS     R1,#+10
   \   000001CC   ........           BL       __aeabi_idivmod
   \   000001D0   A064               STR      R0,[R4, #+72]
   7274                   MenuPaint();
   \   000001D2   ........           BL       MenuPaint
   7275                   
   7276                  }
   7277                 }
   7278                 
   7279                 
   7280                
   7281                 
   7282                 
   7283                 }
   7284              }//________________________________________________________________________
   \                     ??RF_Channel_Event_2:
   \   000001D6   F8BC               POP      {R3-R7}
   \   000001D8   01BC               POP      {R0}
   \   000001DA   0047               BX       R0               ;; return
   \                     ??RF_Channel_Event_0:
   \   000001DC   ........           DC32     Y_down
   \   000001E0   ........           DC32     X_down
   \   000001E4   ........           DC32     Y_up
   \   000001E8   ........           DC32     X_up
   \   000001EC   ........           DC32     g_Stop_Program
   \   000001F0   ........           DC32     TextToChangeLength
   \   000001F4   ........           DC32     RF_Channel_nr_tmp
   \   000001F8   33333333           DC32     0x33333333
   \   000001FC   3333D33F           DC32     0x3fd33333
   \   00000200   C3F5285C           DC32     0x5c28f5c3
   \   00000204   8FE28A40           DC32     0x408ae28f
   \   00000208   00006940           DC32     0x40690000
   \   0000020C   00FF04C1           DC32     0xc104ff00
   \   00000210   45060000           DC32     0x645
   \   00000214   ........           DC32     g_leng
   \   00000218   140A0000           DC32     0xa14
   \   0000021C   ........           DC32     Speech
   \   00000220   4F4B0000           DC8      0x4F, 0x4B, 0x00, 0x00
   \   00000224   ........           DC32     RF_Status + 13
   \   00000228   E6D71300           DC32     0x13d7e6
   7285              
   7286              
   7287              
   7288              
   7289              
   7290              
   7291              
   7292              
   7293              
   7294              
   7295              
   7296          
   7297          //Wybór poziomu dostêpu *************************************************************************************************************
   7298                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7299                void Sygnal_Paint(void)
   7300                {
   \                     Sygnal_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   7301                    #define _Y   10   //przesuniêcie w dó³
   7302                    List_Paint(Speech[g_leng].Sygnaly,4,15,_Y,0,3,Speech[g_leng].Obserwowane,Speech[g_leng].WeWy, Speech[g_leng].ZmAnalog, Speech[g_leng].ZmDwust,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   1248               LDR      R0,??Sygnal_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   1249               LDR      R1,??Sygnal_Paint_0+0x4  ;; 0xa14
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   1249               LDR      R1,??Sygnal_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   2100               MOVS     R1,R4
   \   00000018   1E31               ADDS     R1,R1,#+30
   \   0000001A   2000               MOVS     R0,R4
   \   0000001C   0F30               ADDS     R0,R0,#+15
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   FF20               MOVS     R0,#+255
   \   00000022   5A30               ADDS     R0,R0,#+90       ;; #+345
   \   00000024   2118               ADDS     R1,R4,R0
   \   00000026   B430               ADDS     R0,R0,#+180
   \   00000028   2018               ADDS     R0,R4,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   0321               MOVS     R1,#+3
   \   0000002E   0020               MOVS     R0,#+0
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0A23               MOVS     R3,#+10
   \   00000034   0F22               MOVS     R2,#+15
   \   00000036   0421               MOVS     R1,#+4
   \   00000038   FF20               MOVS     R0,#+255
   \   0000003A   4000               LSLS     R0,R0,#+1        ;; #+510
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       List_Paint
   \   00000042   0AB0               ADD      SP,SP,#+40
   7303                }//_______________________ Koniec funkcji MainSide_Paint __________________________    
   \   00000044   10BC               POP      {R4}
   \   00000046   01BC               POP      {R0}
   \   00000048   0047               BX       R0               ;; return
   \   0000004A   C046               Nop      
   \                     ??Sygnal_Paint_0:
   \   0000004C   ........           DC32     g_leng
   \   00000050   140A0000           DC32     0xa14
   \   00000054   ........           DC32     Speech
   7304              
   7305              
   7306                    //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7307                void Sygnal_Event(void)
   7308                {
   \                     Sygnal_Event:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   7309                  int Y_tmp = 10;   //przesuniêcie w dó³
   7310                  int ans;
   7311          
   7312                  ans=List_Event(X_up, Y_up, X_down, Y_down, 4 , 15,0,Y_tmp); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0A21               MOVS     R1,#+10
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0420               MOVS     R0,#+4
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??Sygnal_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??Sygnal_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??Sygnal_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??Sygnal_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0400               MOVS     R4,R0
   7313            
   7314                  if (ans)
   \   0000002A   15D0               BEQ      ??Sygnal_Event_1
   7315                    {
   7316                      if ((ans>0) && (ans<5))
   \   0000002C   012C               CMP      R4,#+1
   \   0000002E   09DB               BLT      ??Sygnal_Event_2
   \   00000030   052C               CMP      R4,#+5
   \   00000032   07DA               BGE      ??Sygnal_Event_2
   7317                      {
   7318                          MenuLevel=(MenuLevel*10+ans);
   \   00000034   0E4D               LDR      R5,??Sygnal_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A86C               LDR      R0,[R5, #+72]
   \   00000038   0A21               MOVS     R1,#+10
   \   0000003A   4843               MULS     R0,R1,R0
   \   0000003C   0019               ADDS     R0,R0,R4
   \   0000003E   A864               STR      R0,[R5, #+72]
   7319                          MenuPaint();
   \   00000040   ........           BL       MenuPaint
   7320                      }
   7321                      if (ans<0)
   \                     ??Sygnal_Event_2:
   \   00000044   002C               CMP      R4,#+0
   \   00000046   07D5               BPL      ??Sygnal_Event_1
   7322                      {
   7323                        MenuLevel=(MenuLevel/10);
   \   00000048   094D               LDR      R5,??Sygnal_Event_0+0x10  ;; TextToChangeLength
   \   0000004A   A86C               LDR      R0,[R5, #+72]
   \   0000004C   0A21               MOVS     R1,#+10
   \   0000004E   ........           BL       __aeabi_idivmod
   \   00000052   A864               STR      R0,[R5, #+72]
   7324                        MenuPaint();
   \   00000054   ........           BL       MenuPaint
   7325                      }
   7326                    }
   7327          
   7328                }//_______________________________________________________________________
   \                     ??Sygnal_Event_1:
   \   00000058   38BC               POP      {R3-R5}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??Sygnal_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
   7329          
   7330          
   7331          
   7332          
   7333              
   7334              
   7335            long long int WaitOnCheckNode=0;     
   7336            char OpisWezl=0;    

   \                                 In section Debug.txt, align 4, keep-with-next
   7337            void NeuronsList_Paint(void)
   7338            {  
   \                     NeuronsList_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   7339                 if (WaitOnCheckNode==0) WaitOnCheckNode=g_counter+1000+TimeUnitQual*32; 
   \   00000002   934C               LDR      R4,??NeuronsList_Paint_0  ;; TextToChangeLength
   \   00000004   206C               LDR      R0,[R4, #+64]
   \   00000006   616C               LDR      R1,[R4, #+68]
   \   00000008   0029               CMP      R1,#+0
   \   0000000A   09D1               BNE      ??NeuronsList_Paint_1
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   07D1               BNE      ??NeuronsList_Paint_1
   \   00000010   9048               LDR      R0,??NeuronsList_Paint_0+0x4  ;; g_counter
   \   00000012   03C8               LDM      R0!,{R0,R1}
   \   00000014   904A               LDR      R2,??NeuronsList_Paint_0+0x8  ;; 0x2968
   \   00000016   0023               MOVS     R3,#+0
   \   00000018   1218               ADDS     R2,R2,R0
   \   0000001A   4B41               ADCS     R3,R3,R1
   \   0000001C   2264               STR      R2,[R4, #+64]
   \   0000001E   6364               STR      R3,[R4, #+68]
   7340          
   7341                char txt[8];
   7342                 
   7343                
   7344                 List_Paint(Speech[g_leng].Wezly,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \                     ??NeuronsList_Paint_1:
   \   00000020   8E4D               LDR      R5,??NeuronsList_Paint_0+0xC  ;; 0xa14
   \   00000022   8F4E               LDR      R6,??NeuronsList_Paint_0+0x10  ;; g_leng
   \   00000024   8F4F               LDR      R7,??NeuronsList_Paint_0+0x14  ;; Speech
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   0800               MOVS     R0,R1
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   8DA0               ADR      R0,??NeuronsList_Paint_0+0x18  ;; 0x20, 0x00, 0x00, 0x00
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0321               MOVS     R1,#+3
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0300               MOVS     R3,R0
   \   0000003C   6C22               MOVS     R2,#+108
   \   0000003E   0121               MOVS     R1,#+1
   \   00000040   8C46               MOV      R12,R1
   \   00000042   8A49               LDR      R1,??NeuronsList_Paint_0+0x1C  ;; 0x627
   \   00000044   3068               LDR      R0,[R6, #+0]
   \   00000046   6843               MULS     R0,R5,R0
   \   00000048   3818               ADDS     R0,R7,R0
   \   0000004A   4018               ADDS     R0,R0,R1
   \   0000004C   6146               MOV      R1,R12
   \   0000004E   ........           BL       List_Paint
   \   00000052   0AB0               ADD      SP,SP,#+40
   7345               
   7346                
   7347                if (!SlaveMode)//je¿eli tryb Master
   \   00000054   8648               LDR      R0,??NeuronsList_Paint_0+0x20  ;; SlaveMode
   \   00000056   0078               LDRB     R0,[R0, #+0]
   \   00000058   0028               CMP      R0,#+0
   \   0000005A   00D0               BEQ      .+4
   \   0000005C   CDE0               B        ??NeuronsList_Paint_2
   7348                {
   7349          
   7350                 char LabelButt[2];
   7351                 LabelButt[1]=0;
   \   0000005E   6E46               MOV      R6,SP
   \   00000060   0025               MOVS     R5,#+0
   \   00000062   7070               STRB     R0,[R6, #+1]
   7352                 LabelButt[0]=30;
   \   00000064   1E20               MOVS     R0,#+30
   \   00000066   3070               STRB     R0,[R6, #+0]
   7353                 Button(LabelButt,24,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000068   82B0               SUB      SP,SP,#+8
   \   0000006A   1320               MOVS     R0,#+19
   \   0000006C   0090               STR      R0,[SP, #+0]
   \   0000006E   0300               MOVS     R3,R0
   \   00000070   0322               MOVS     R2,#+3
   \   00000072   1821               MOVS     R1,#+24
   \   00000074   02A8               ADD      R0,SP,#+8
   \   00000076   ........           BL       Button
   \   0000007A   02B0               ADD      SP,SP,#+8
   7354                 LabelButt[0]=31;
   \   0000007C   1F20               MOVS     R0,#+31
   \   0000007E   3070               STRB     R0,[R6, #+0]
   7355                 Button(LabelButt,3,3,19,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   1320               MOVS     R0,#+19
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   0300               MOVS     R3,R0
   \   00000088   0322               MOVS     R2,#+3
   \   0000008A   1100               MOVS     R1,R2
   \   0000008C   02A8               ADD      R0,SP,#+8
   \   0000008E   ........           BL       Button
   \   00000092   02B0               ADD      SP,SP,#+8
   7356                 
   7357                 if (OpisWezl) LabelButt[0]=36; else LabelButt[0]=35;
   \   00000094   A07F               LDRB     R0,[R4, #+30]
   \   00000096   0028               CMP      R0,#+0
   \   00000098   02D0               BEQ      ??NeuronsList_Paint_3
   \   0000009A   2420               MOVS     R0,#+36
   \   0000009C   3070               STRB     R0,[R6, #+0]
   \   0000009E   01E0               B        ??NeuronsList_Paint_4
   \                     ??NeuronsList_Paint_3:
   \   000000A0   2320               MOVS     R0,#+35
   \   000000A2   3070               STRB     R0,[R6, #+0]
   7358                 Button(LabelButt,46,3,14,19); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \                     ??NeuronsList_Paint_4:
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   1320               MOVS     R0,#+19
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   0E23               MOVS     R3,#+14
   \   000000AC   0322               MOVS     R2,#+3
   \   000000AE   2E21               MOVS     R1,#+46
   \   000000B0   02A8               ADD      R0,SP,#+8
   \   000000B2   ........           BL       Button
   \   000000B6   02B0               ADD      SP,SP,#+8
   7359                  
   7360                 H_line(1,25+6*12,62,3); 
   \   000000B8   0323               MOVS     R3,#+3
   \   000000BA   3E22               MOVS     R2,#+62
   \   000000BC   6121               MOVS     R1,#+97
   \   000000BE   0120               MOVS     R0,#+1
   \   000000C0   ........           BL       H_line
   7361                 for (char i=0; i<6; i++) 
   \   000000C4   16E0               B        ??NeuronsList_Paint_5
   7362                 {H_line(1,25+i*12,62,3); 
   7363                     CharToStr(NeuronsListLine+6-i, txt, 2); //(char Value, char *Vstring, char ill);
   7364                     Label(txt,0,2,27+i*12,2,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   7365                     
   7366                     if (gProg.NeuronsIdTab[(5-i)+NeuronsListLine]>0)
   7367                     {
   7368                         if (OpisWezl)
   7369                         {//opiski
   7370                            Label(gProg.NodeLabel[(5-i)+NeuronsListLine],0,14,27+i*12,NodeLabelLethers,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   7371          
   7372                         }else{
   7373                           #ifdef  DIRECT_Q_MESURE 
   7374                              sprintf(txt, "%d",  TransQuality.DirectkMensur[RF_TaskTab[RF_CurrentTask].Node-1]);
   7375                              Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   7376                           #else
   7377                            //numery nodów 
   7378                            sprintf(txt, "%d", gProg.NeuronsIdTab[(5-i)+NeuronsListLine]);
                                   ^
Warning[Pe223]: function "sprintf" declared implicitly
   \                     ??NeuronsList_Paint_6:
   \   000000C6   6BA1               ADR      R1,??NeuronsList_Paint_0+0x24  ;; 0x25, 0x64, 0x00, 0x00
   \   000000C8   01A8               ADD      R0,SP,#+4
   \   000000CA   ........           BL       sprintf
   7379                            Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000CE   82B0               SUB      SP,SP,#+8
   \   000000D0   0020               MOVS     R0,#+0
   \   000000D2   0090               STR      R0,[SP, #+0]
   \   000000D4   6921               MOVS     R1,#+105
   \   000000D6   1020               MOVS     R0,#+16
   \   000000D8   03B4               PUSH     {R0,R1}
   \   000000DA   1721               MOVS     R1,#+23
   \   000000DC   0820               MOVS     R0,#+8
   \   000000DE   03B4               PUSH     {R0,R1}
   \   000000E0   3B00               MOVS     R3,R7
   \   000000E2   1622               MOVS     R2,#+22
   \   000000E4   0021               MOVS     R1,#+0
   \   000000E6   07A8               ADD      R0,SP,#+28
   \   000000E8   ........           BL       Label
   \   000000EC   06B0               ADD      SP,SP,#+24
   7380                          #endif
   7381                         }
   \                     ??NeuronsList_Paint_7:
   \   000000EE   6D1C               ADDS     R5,R5,#+1
   \   000000F0   2D06               LSLS     R5,R5,#+24
   \   000000F2   2D0E               LSRS     R5,R5,#+24
   \                     ??NeuronsList_Paint_5:
   \   000000F4   2800               MOVS     R0,R5
   \   000000F6   0628               CMP      R0,#+6
   \   000000F8   46D2               BCS      ??NeuronsList_Paint_8
   \   000000FA   2E00               MOVS     R6,R5
   \   000000FC   0C27               MOVS     R7,#+12
   \   000000FE   7743               MULS     R7,R6,R7
   \   00000100   0323               MOVS     R3,#+3
   \   00000102   3E22               MOVS     R2,#+62
   \   00000104   3900               MOVS     R1,R7
   \   00000106   1931               ADDS     R1,R1,#+25
   \   00000108   0120               MOVS     R0,#+1
   \   0000010A   ........           BL       H_line
   \   0000010E   0222               MOVS     R2,#+2
   \   00000110   01A9               ADD      R1,SP,#+4
   \   00000112   A079               LDRB     R0,[R4, #+6]
   \   00000114   801D               ADDS     R0,R0,#+6
   \   00000116   2B00               MOVS     R3,R5
   \   00000118   C01A               SUBS     R0,R0,R3
   \   0000011A   0006               LSLS     R0,R0,#+24
   \   0000011C   000E               LSRS     R0,R0,#+24
   \   0000011E   ........           BL       CharToStr
   \   00000122   1B37               ADDS     R7,R7,#+27
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0020               MOVS     R0,#+0
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   6921               MOVS     R1,#+105
   \   0000012C   1020               MOVS     R0,#+16
   \   0000012E   03B4               PUSH     {R0,R1}
   \   00000130   1721               MOVS     R1,#+23
   \   00000132   0220               MOVS     R0,#+2
   \   00000134   03B4               PUSH     {R0,R1}
   \   00000136   3B00               MOVS     R3,R7
   \   00000138   0200               MOVS     R2,R0
   \   0000013A   0021               MOVS     R1,#+0
   \   0000013C   07A8               ADD      R0,SP,#+28
   \   0000013E   ........           BL       Label
   \   00000142   06B0               ADD      SP,SP,#+24
   \   00000144   A079               LDRB     R0,[R4, #+6]
   \   00000146   861B               SUBS     R6,R0,R6
   \   00000148   4B48               LDR      R0,??NeuronsList_Paint_0+0x28  ;; 0xc0ac
   \   0000014A   B100               LSLS     R1,R6,#+2
   \   0000014C   4B4A               LDR      R2,??NeuronsList_Paint_0+0x2C  ;; gProg
   \   0000014E   5118               ADDS     R1,R2,R1
   \   00000150   0A58               LDR      R2,[R1, R0]
   \   00000152   012A               CMP      R2,#+1
   \   00000154   CBDB               BLT      ??NeuronsList_Paint_7
   \   00000156   A07F               LDRB     R0,[R4, #+30]
   \   00000158   0028               CMP      R0,#+0
   \   0000015A   B4D0               BEQ      ??NeuronsList_Paint_6
   \   0000015C   82B0               SUB      SP,SP,#+8
   \   0000015E   0020               MOVS     R0,#+0
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   6921               MOVS     R1,#+105
   \   00000164   1020               MOVS     R0,#+16
   \   00000166   03B4               PUSH     {R0,R1}
   \   00000168   1721               MOVS     R1,#+23
   \   0000016A   0A20               MOVS     R0,#+10
   \   0000016C   03B4               PUSH     {R0,R1}
   \   0000016E   3B00               MOVS     R3,R7
   \   00000170   0E22               MOVS     R2,#+14
   \   00000172   0021               MOVS     R1,#+0
   \   00000174   4248               LDR      R0,??NeuronsList_Paint_0+0x30  ;; 0xc156
   \   00000176   0A27               MOVS     R7,#+10
   \   00000178   7E43               MULS     R6,R7,R6
   \   0000017A   404F               LDR      R7,??NeuronsList_Paint_0+0x2C  ;; gProg
   \   0000017C   BE19               ADDS     R6,R7,R6
   \   0000017E   3018               ADDS     R0,R6,R0
   \   00000180   ........           BL       Label
   \   00000184   06B0               ADD      SP,SP,#+24
   \   00000186   B2E7               B        ??NeuronsList_Paint_7
   7382                     }
   7383            
   7384               
   7385                 }
   7386                 if(OpisWezl)
   \                     ??NeuronsList_Paint_8:
   \   00000188   A07F               LDRB     R0,[R4, #+30]
   \   0000018A   0028               CMP      R0,#+0
   \   0000018C   06D0               BEQ      ??NeuronsList_Paint_9
   7387                       {
   7388                           V_line(12,25,73,1);
   \   0000018E   0123               MOVS     R3,#+1
   \   00000190   4922               MOVS     R2,#+73
   \   00000192   1921               MOVS     R1,#+25
   \   00000194   0C20               MOVS     R0,#+12
   \   00000196   ........           BL       V_line
   \   0000019A   0BE0               B        ??NeuronsList_Paint_10
   7389                     
   7390                       }else{
   7391                           V_line(20,25,73,1); 
   \                     ??NeuronsList_Paint_9:
   \   0000019C   0123               MOVS     R3,#+1
   \   0000019E   4922               MOVS     R2,#+73
   \   000001A0   1921               MOVS     R1,#+25
   \   000001A2   1420               MOVS     R0,#+20
   \   000001A4   ........           BL       V_line
   7392                           V_line(58,25,73,1); 
   \   000001A8   0123               MOVS     R3,#+1
   \   000001AA   4922               MOVS     R2,#+73
   \   000001AC   1921               MOVS     R1,#+25
   \   000001AE   3A20               MOVS     R0,#+58
   \   000001B0   ........           BL       V_line
   7393                       }
   7394                     
   7395                     
   7396                 Label("Node ",0,2,99,4,23,16,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \                     ??NeuronsList_Paint_10:
   \   000001B4   82B0               SUB      SP,SP,#+8
   \   000001B6   0020               MOVS     R0,#+0
   \   000001B8   0090               STR      R0,[SP, #+0]
   \   000001BA   8021               MOVS     R1,#+128
   \   000001BC   1020               MOVS     R0,#+16
   \   000001BE   03B4               PUSH     {R0,R1}
   \   000001C0   1721               MOVS     R1,#+23
   \   000001C2   0420               MOVS     R0,#+4
   \   000001C4   03B4               PUSH     {R0,R1}
   \   000001C6   6323               MOVS     R3,#+99
   \   000001C8   0222               MOVS     R2,#+2
   \   000001CA   0021               MOVS     R1,#+0
   \   000001CC   2D48               LDR      R0,??NeuronsList_Paint_0+0x34  ;; `?<Constant "Node ">`
   \   000001CE   ........           BL       Label
   \   000001D2   06B0               ADD      SP,SP,#+24
   7397                 if(OpisWezl==0) Label("Id ",0,37,99,2,23,16,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000001D4   A07F               LDRB     R0,[R4, #+30]
   \   000001D6   0028               CMP      R0,#+0
   \   000001D8   37D1               BNE      ??NeuronsList_Paint_11
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0090               STR      R0,[SP, #+0]
   \   000001DE   8021               MOVS     R1,#+128
   \   000001E0   1020               MOVS     R0,#+16
   \   000001E2   03B4               PUSH     {R0,R1}
   \   000001E4   1721               MOVS     R1,#+23
   \   000001E6   0220               MOVS     R0,#+2
   \   000001E8   03B4               PUSH     {R0,R1}
   \   000001EA   6323               MOVS     R3,#+99
   \   000001EC   2522               MOVS     R2,#+37
   \   000001EE   0021               MOVS     R1,#+0
   \   000001F0   25A0               ADR      R0,??NeuronsList_Paint_0+0x38  ;; "Id "
   \   000001F2   ........           BL       Label
   \   000001F6   06B0               ADD      SP,SP,#+24
   \   000001F8   27E0               B        ??NeuronsList_Paint_11
   7398          
   7399                     
   7400                }else{ //je¿eli tryb slave
   7401                   Label(Speech[g_leng].Niedostepne,2,2,70,14,59,1,127,0);
   \                     ??NeuronsList_Paint_2:
   \   000001FA   82B0               SUB      SP,SP,#+8
   \   000001FC   0020               MOVS     R0,#+0
   \   000001FE   0090               STR      R0,[SP, #+0]
   \   00000200   7F21               MOVS     R1,#+127
   \   00000202   0120               MOVS     R0,#+1
   \   00000204   03B4               PUSH     {R0,R1}
   \   00000206   3B21               MOVS     R1,#+59
   \   00000208   0E20               MOVS     R0,#+14
   \   0000020A   03B4               PUSH     {R0,R1}
   \   0000020C   4623               MOVS     R3,#+70
   \   0000020E   0222               MOVS     R2,#+2
   \   00000210   1100               MOVS     R1,R2
   \   00000212   1E48               LDR      R0,??NeuronsList_Paint_0+0x3C  ;; 0x69f
   \   00000214   3468               LDR      R4,[R6, #+0]
   \   00000216   6C43               MULS     R4,R5,R4
   \   00000218   3C19               ADDS     R4,R7,R4
   \   0000021A   2018               ADDS     R0,R4,R0
   \   0000021C   ........           BL       Label
   \   00000220   06B0               ADD      SP,SP,#+24
   7402                   Label(Speech[g_leng].W_Trybie_Slave,2,2,60,14,55,1,127,0);
   \   00000222   82B0               SUB      SP,SP,#+8
   \   00000224   0020               MOVS     R0,#+0
   \   00000226   0090               STR      R0,[SP, #+0]
   \   00000228   7F21               MOVS     R1,#+127
   \   0000022A   0120               MOVS     R0,#+1
   \   0000022C   03B4               PUSH     {R0,R1}
   \   0000022E   3721               MOVS     R1,#+55
   \   00000230   0E20               MOVS     R0,#+14
   \   00000232   03B4               PUSH     {R0,R1}
   \   00000234   3C23               MOVS     R3,#+60
   \   00000236   0222               MOVS     R2,#+2
   \   00000238   1100               MOVS     R1,R2
   \   0000023A   1548               LDR      R0,??NeuronsList_Paint_0+0x40  ;; 0x6ae
   \   0000023C   3468               LDR      R4,[R6, #+0]
   \   0000023E   6C43               MULS     R4,R5,R4
   \   00000240   3C19               ADDS     R4,R7,R4
   \   00000242   2018               ADDS     R0,R4,R0
   \   00000244   ........           BL       Label
   \   00000248   06B0               ADD      SP,SP,#+24
   7403                } 
   7404                 
   7405                 
   7406                }//________________________________________________________________________
   \                     ??NeuronsList_Paint_11:
   \   0000024A   FEBC               POP      {R1-R7}
   \   0000024C   01BC               POP      {R0}
   \   0000024E   0047               BX       R0               ;; return
   \                     ??NeuronsList_Paint_0:
   \   00000250   ........           DC32     TextToChangeLength
   \   00000254   ........           DC32     g_counter
   \   00000258   68290000           DC32     0x2968
   \   0000025C   140A0000           DC32     0xa14
   \   00000260   ........           DC32     g_leng
   \   00000264   ........           DC32     Speech
   \   00000268   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000026C   27060000           DC32     0x627
   \   00000270   ........           DC32     SlaveMode
   \   00000274   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   00000278   ACC00000           DC32     0xc0ac
   \   0000027C   ........           DC32     gProg
   \   00000280   56C10000           DC32     0xc156
   \   00000284   ........           DC32     `?<Constant "Node ">`
   \   00000288   49642000           DC8      "Id "
   \   0000028C   9F060000           DC32     0x69f
   \   00000290   AE060000           DC32     0x6ae

   \                                 In section .bss, align 4
   7407          int wpistmp=0;
   \                     wpistmp:
   \   00000000                      DS8 4
   7408          
   7409          
   7410                //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7411                void NeuronsList_Event(void)
   7412                {
   \                     NeuronsList_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7413          
   7414                      
   7415          
   7416                  //zdarzenie typu down "X"
   7417                  if ((X_down>46) && (X_down<63) && (Y_down>112) && (Y_down<127))    //"X"
   \   00000002   B248               LDR      R0,??NeuronsList_Event_0  ;; X_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   2F28               CMP      R0,#+47
   \   0000000A   2DDB               BLT      ??NeuronsList_Event_1
   \   0000000C   3F28               CMP      R0,#+63
   \   0000000E   2BDA               BGE      ??NeuronsList_Event_1
   \   00000010   AF48               LDR      R0,??NeuronsList_Event_0+0x4  ;; Y_down
   \   00000012   405E               LDRSH    R0,[R0, R1]
   \   00000014   7128               CMP      R0,#+113
   \   00000016   27DB               BLT      ??NeuronsList_Event_1
   \   00000018   7F28               CMP      R0,#+127
   \   0000001A   25DA               BGE      ??NeuronsList_Event_1
   7418                  {
   7419                    
   7420                    
   7421                    //MenuPaint();
   7422                    H_line(49,114,10,0);
   \   0000001C   0B00               MOVS     R3,R1
   \   0000001E   0A22               MOVS     R2,#+10
   \   00000020   7221               MOVS     R1,#+114
   \   00000022   3120               MOVS     R0,#+49
   \   00000024   ........           BL       H_line
   7423                    H_line(49,123,10,0); 
   \   00000028   0023               MOVS     R3,#+0
   \   0000002A   0A22               MOVS     R2,#+10
   \   0000002C   7B21               MOVS     R1,#+123
   \   0000002E   3120               MOVS     R0,#+49
   \   00000030   ........           BL       H_line
   7424                    V_line(49,114,10,0); 
   \   00000034   0023               MOVS     R3,#+0
   \   00000036   0A22               MOVS     R2,#+10
   \   00000038   7221               MOVS     R1,#+114
   \   0000003A   3120               MOVS     R0,#+49
   \   0000003C   ........           BL       V_line
   7425                    V_line(58,114,10,0); 
   \   00000040   0023               MOVS     R3,#+0
   \   00000042   0A22               MOVS     R2,#+10
   \   00000044   7221               MOVS     R1,#+114
   \   00000046   3A20               MOVS     R0,#+58
   \   00000048   ........           BL       V_line
   7426                    if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                 ^
Warning[Pe063]: shift count is too large
   \   0000004C   A148               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   0000004E   0078               LDRB     R0,[R0, #+0]
   \   00000050   0028               CMP      R0,#+0
   \   00000052   09D1               BNE      ??NeuronsList_Event_1
   \   00000054   A048               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   0160               STR      R1,[R0, #+0]
   \   0000005A   A04A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   0000005C   A048               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   0000005E   03C8               LDM      R0!,{R0,R1}
   \   00000060   0023               MOVS     R3,#+0
   \   00000062   0830               ADDS     R0,R0,#+8
   \   00000064   5941               ADCS     R1,R1,R3
   \   00000066   03C2               STM      R2!,{R0,R1}
   7427                    
   7428                  }
   7429            
   7430                  
   7431          
   7432          
   7433          
   7434              
   7435                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \                     ??NeuronsList_Event_1:
   \   00000068   9E48               LDR      R0,??NeuronsList_Event_0+0x18  ;; X_up
   \   0000006A   0021               MOVS     R1,#+0
   \   0000006C   405E               LDRSH    R0,[R0, R1]
   \   0000006E   2F28               CMP      R0,#+47
   \   00000070   3BDB               BLT      ??NeuronsList_Event_2
   \   00000072   3F28               CMP      R0,#+63
   \   00000074   39DA               BGE      ??NeuronsList_Event_2
   \   00000076   9C48               LDR      R0,??NeuronsList_Event_0+0x1C  ;; Y_up
   \   00000078   405E               LDRSH    R0,[R0, R1]
   \   0000007A   7128               CMP      R0,#+113
   \   0000007C   35DB               BLT      ??NeuronsList_Event_2
   \   0000007E   7F28               CMP      R0,#+127
   \   00000080   33DA               BGE      ??NeuronsList_Event_2
   7436                  {
   7437                    OpisWezl=0;
   \   00000082   9A4D               LDR      R5,??NeuronsList_Event_0+0x20  ;; TextToChangeLength
   \   00000084   0800               MOVS     R0,R1
   \   00000086   A877               STRB     R0,[R5, #+30]
   7438                    Rej_poz=0;
   \   00000088   E864               STR      R0,[R5, #+76]
   7439                    if (ProgramChange) 
   \   0000008A   9248               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   0000008C   297A               LDRB     R1,[R5, #+8]
   \   0000008E   0029               CMP      R1,#+0
   \   00000090   0078               LDRB     R0,[R0, #+0]
   \   00000092   10D0               BEQ      ??NeuronsList_Event_3
   7440                    {
   7441                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe063]: shift count is too large
   \   00000094   0028               CMP      R0,#+0
   \   00000096   09D1               BNE      ??NeuronsList_Event_4
   \   00000098   8F48               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   0000009A   0021               MOVS     R1,#+0
   \   0000009C   0160               STR      R1,[R0, #+0]
   \   0000009E   8F4A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   000000A0   8F48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000000A2   03C8               LDM      R0!,{R0,R1}
   \   000000A4   0023               MOVS     R3,#+0
   \   000000A6   0830               ADDS     R0,R0,#+8
   \   000000A8   5941               ADCS     R1,R1,R3
   \   000000AA   03C2               STM      R2!,{R0,R1}
   7442                      MenuLevel=(MenuLevel*10+0);
   \                     ??NeuronsList_Event_4:
   \   000000AC   A86C               LDR      R0,[R5, #+72]
   \   000000AE   0A21               MOVS     R1,#+10
   \   000000B0   4843               MULS     R0,R1,R0
   \   000000B2   A864               STR      R0,[R5, #+72]
   \   000000B4   10E0               B        ??NeuronsList_Event_5
   7443                       
   7444                      
   7445                    }else{
   7446                      if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                   ^
Warning[Pe063]: shift count is too large
   \                     ??NeuronsList_Event_3:
   \   000000B6   0028               CMP      R0,#+0
   \   000000B8   09D1               BNE      ??NeuronsList_Event_6
   \   000000BA   8748               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   000000BC   0021               MOVS     R1,#+0
   \   000000BE   0160               STR      R1,[R0, #+0]
   \   000000C0   864A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   000000C2   8748               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   000000C4   03C8               LDM      R0!,{R0,R1}
   \   000000C6   0023               MOVS     R3,#+0
   \   000000C8   0830               ADDS     R0,R0,#+8
   \   000000CA   5941               ADCS     R1,R1,R3
   \   000000CC   03C2               STM      R2!,{R0,R1}
   7447                      MenuLevel=(MenuLevel/10);
   \                     ??NeuronsList_Event_6:
   \   000000CE   A86C               LDR      R0,[R5, #+72]
   \   000000D0   0A21               MOVS     R1,#+10
   \   000000D2   ........           BL       __aeabi_idivmod
   \   000000D6   A864               STR      R0,[R5, #+72]
   7448                    }
   7449                    
   7450                    MenuPaint();
   \                     ??NeuronsList_Event_5:
   \   000000D8   ........           BL       MenuPaint
   7451                    WaitOnCheckNode=0;
   \   000000DC   4035               ADDS     R5,R5,#+64
   \   000000DE   0020               MOVS     R0,#+0
   \   000000E0   0100               MOVS     R1,R0
   \   000000E2   03C5               STM      R5!,{R0,R1}
   7452                  }
   7453                  else{
   7454            
   7455                           
   7456                if (!SlaveMode)//je¿eli tryb Master
   7457                {
   7458                      char LabelButt[2]; LabelButt[1]=0;
   7459                      LabelButt[0]=30;
   7460                      if ((Button(LabelButt,24,3,19,19))  && ((g_counter>Touch_EventTime+100) || (Touch_EventTime>g_counter)) && (NeuronsListLine>0))            
   7461                      {
   7462                        Touch_EventTime=g_counter;
   7463                        NeuronsListLine--; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   7464                        MenuPaint();
   7465                      } 
   7466                      
   7467                      LabelButt[0]=31;
   7468                      if ((Button(LabelButt,3,3,19,19)) && ((g_counter>Touch_EventTime+100) || (Touch_EventTime>g_counter)) && (NeuronsListLine<NumberNeurons-6))
   7469                      {
   7470                        Touch_EventTime=g_counter;
   7471                        NeuronsListLine++;    
   7472                        MenuPaint();
   7473                      }
   7474                      
   7475                      
   7476                      if (OpisWezl) LabelButt[0]=36; else LabelButt[0]=35;
   7477                      if (Button(LabelButt,46,3,14,19)==1){if (OpisWezl) OpisWezl=0; else OpisWezl=1;  MenuPaint();}
   7478                      
   7479                      
   7480                      for (char i=0; i<6; i++) 
   7481                      {
   7482                       if ((Y_down>25+i*12) && (Y_down<25+((i+1)*12)))                
   7483                        {
   7484                           MenuPaint();
   7485                           H_line(1,26+i*12,62,1); 
   7486                           H_line(1,24+(i+1)*12,62,1); 
   7487                        }
   7488                        if ((Y_up>25+i*12) && (Y_up<25+((i+1)*12)))                
   7489                        { 
   7490                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe063]: shift count is too large
   7491                          if (OpisWezl==0)
   7492                          {
   7493                              NeuronIdChange=&(gProg.NeuronsIdTab[(5-i)+NeuronsListLine]);
   7494                              
   7495                              //je¿eli jest ju¿ nadany ID
   7496                              if (gProg.NeuronsIdTab[(5-i)+NeuronsListLine]>0)
   7497                              {
   7498                                NeuronNrChange=(6-i)+NeuronsListLine;
   7499                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   7500                                TextToChangeLength=NodeLabelLethers;
   7501                                MenuLevel=(MenuLevel*10+3);
   7502                              }else{
   7503                                MenuLevel=(MenuLevel*10+1);
   7504                              }
   7505                          }else{
   7506                              if (gProg.NodeLabel[(5-i)+NeuronsListLine][0]!=0)
   7507                              {
   7508                                NeuronNrChange=(6-i)+NeuronsListLine;
   7509                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   7510                                TextToChangeLength=NodeLabelLethers;
   7511                                MenuLevel=(MenuLevel*10+3);
   7512                              }else{  
   7513                                TextToChange=gProg.NodeLabel[(5-i)+NeuronsListLine]; 
   7514                                TextToChangeLength=NodeLabelLethers;
   7515                                MenuLevel=(MenuLevel*10+2); 
   7516                                ProgramChange=1;
   7517                              }
   7518                              
   7519                          }
   7520                          MenuPaint();
   7521                        }
   7522                       
   7523                      }
   7524                }
   7525                  }
   7526          
   7527                }//________________________________________________________________________
   \                     ??NeuronsList_Event_7:
   \   000000E4   F8BC               POP      {R3-R7}
   \   000000E6   01BC               POP      {R0}
   \   000000E8   0047               BX       R0               ;; return
   \                     ??NeuronsList_Event_2:
   \   000000EA   8148               LDR      R0,??NeuronsList_Event_0+0x24  ;; SlaveMode
   \   000000EC   0078               LDRB     R0,[R0, #+0]
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   F8D1               BNE      ??NeuronsList_Event_7
   \   000000F2   6C46               MOV      R4,SP
   \   000000F4   6070               STRB     R0,[R4, #+1]
   \   000000F6   1E20               MOVS     R0,#+30
   \   000000F8   2070               STRB     R0,[R4, #+0]
   \   000000FA   7C4D               LDR      R5,??NeuronsList_Event_0+0x20  ;; TextToChangeLength
   \   000000FC   82B0               SUB      SP,SP,#+8
   \   000000FE   1320               MOVS     R0,#+19
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   0300               MOVS     R3,R0
   \   00000104   0322               MOVS     R2,#+3
   \   00000106   1821               MOVS     R1,#+24
   \   00000108   02A8               ADD      R0,SP,#+8
   \   0000010A   ........           BL       Button
   \   0000010E   02B0               ADD      SP,SP,#+8
   \   00000110   0028               CMP      R0,#+0
   \   00000112   1CD0               BEQ      ??NeuronsList_Event_8
   \   00000114   2800               MOVS     R0,R5
   \   00000116   3830               ADDS     R0,R0,#+56
   \   00000118   C0C8               LDM      R0!,{R6,R7}
   \   0000011A   7148               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   0000011C   03C8               LDM      R0!,{R0,R1}
   \   0000011E   6422               MOVS     R2,#+100
   \   00000120   0023               MOVS     R3,#+0
   \   00000122   9219               ADDS     R2,R2,R6
   \   00000124   7B41               ADCS     R3,R3,R7
   \   00000126   8B42               CMP      R3,R1
   \   00000128   07D3               BCC      ??NeuronsList_Event_9
   \   0000012A   01D8               BHI      ??NeuronsList_Event_10
   \   0000012C   8242               CMP      R2,R0
   \   0000012E   04D3               BCC      ??NeuronsList_Event_9
   \                     ??NeuronsList_Event_10:
   \   00000130   B942               CMP      R1,R7
   \   00000132   0CD8               BHI      ??NeuronsList_Event_8
   \   00000134   01D3               BCC      ??NeuronsList_Event_9
   \   00000136   B042               CMP      R0,R6
   \   00000138   09D2               BCS      ??NeuronsList_Event_8
   \                     ??NeuronsList_Event_9:
   \   0000013A   AA79               LDRB     R2,[R5, #+6]
   \   0000013C   002A               CMP      R2,#+0
   \   0000013E   06D0               BEQ      ??NeuronsList_Event_8
   \   00000140   2B00               MOVS     R3,R5
   \   00000142   3833               ADDS     R3,R3,#+56
   \   00000144   03C3               STM      R3!,{R0,R1}
   \   00000146   501E               SUBS     R0,R2,#+1
   \   00000148   A871               STRB     R0,[R5, #+6]
   \   0000014A   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_8:
   \   0000014E   1F20               MOVS     R0,#+31
   \   00000150   2070               STRB     R0,[R4, #+0]
   \   00000152   82B0               SUB      SP,SP,#+8
   \   00000154   1320               MOVS     R0,#+19
   \   00000156   0090               STR      R0,[SP, #+0]
   \   00000158   0300               MOVS     R3,R0
   \   0000015A   0322               MOVS     R2,#+3
   \   0000015C   1100               MOVS     R1,R2
   \   0000015E   02A8               ADD      R0,SP,#+8
   \   00000160   ........           BL       Button
   \   00000164   02B0               ADD      SP,SP,#+8
   \   00000166   0028               CMP      R0,#+0
   \   00000168   1CD0               BEQ      ??NeuronsList_Event_11
   \   0000016A   2800               MOVS     R0,R5
   \   0000016C   3830               ADDS     R0,R0,#+56
   \   0000016E   C0C8               LDM      R0!,{R6,R7}
   \   00000170   5B48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000172   03C8               LDM      R0!,{R0,R1}
   \   00000174   6422               MOVS     R2,#+100
   \   00000176   0023               MOVS     R3,#+0
   \   00000178   9219               ADDS     R2,R2,R6
   \   0000017A   7B41               ADCS     R3,R3,R7
   \   0000017C   8B42               CMP      R3,R1
   \   0000017E   07D3               BCC      ??NeuronsList_Event_12
   \   00000180   01D8               BHI      ??NeuronsList_Event_13
   \   00000182   8242               CMP      R2,R0
   \   00000184   04D3               BCC      ??NeuronsList_Event_12
   \                     ??NeuronsList_Event_13:
   \   00000186   B942               CMP      R1,R7
   \   00000188   0CD8               BHI      ??NeuronsList_Event_11
   \   0000018A   01D3               BCC      ??NeuronsList_Event_12
   \   0000018C   B042               CMP      R0,R6
   \   0000018E   09D2               BCS      ??NeuronsList_Event_11
   \                     ??NeuronsList_Event_12:
   \   00000190   AA79               LDRB     R2,[R5, #+6]
   \   00000192   1D2A               CMP      R2,#+29
   \   00000194   06D2               BCS      ??NeuronsList_Event_11
   \   00000196   2B00               MOVS     R3,R5
   \   00000198   3833               ADDS     R3,R3,#+56
   \   0000019A   03C3               STM      R3!,{R0,R1}
   \   0000019C   521C               ADDS     R2,R2,#+1
   \   0000019E   AA71               STRB     R2,[R5, #+6]
   \   000001A0   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_11:
   \   000001A4   A87F               LDRB     R0,[R5, #+30]
   \   000001A6   0028               CMP      R0,#+0
   \   000001A8   02D0               BEQ      ??NeuronsList_Event_14
   \   000001AA   2420               MOVS     R0,#+36
   \   000001AC   2070               STRB     R0,[R4, #+0]
   \   000001AE   01E0               B        ??NeuronsList_Event_15
   \                     ??NeuronsList_Event_14:
   \   000001B0   2320               MOVS     R0,#+35
   \   000001B2   2070               STRB     R0,[R4, #+0]
   \                     ??NeuronsList_Event_15:
   \   000001B4   82B0               SUB      SP,SP,#+8
   \   000001B6   1320               MOVS     R0,#+19
   \   000001B8   0090               STR      R0,[SP, #+0]
   \   000001BA   0E23               MOVS     R3,#+14
   \   000001BC   0322               MOVS     R2,#+3
   \   000001BE   2E21               MOVS     R1,#+46
   \   000001C0   02A8               ADD      R0,SP,#+8
   \   000001C2   ........           BL       Button
   \   000001C6   02B0               ADD      SP,SP,#+8
   \   000001C8   0128               CMP      R0,#+1
   \   000001CA   06D1               BNE      ??NeuronsList_Event_16
   \   000001CC   A87F               LDRB     R0,[R5, #+30]
   \   000001CE   411E               SUBS     R1,R0,#+1
   \   000001D0   8941               SBCS     R1,R1,R1
   \   000001D2   C90F               LSRS     R1,R1,#+31
   \   000001D4   A977               STRB     R1,[R5, #+30]
   \   000001D6   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_16:
   \   000001DA   0024               MOVS     R4,#+0
   \   000001DC   17E0               B        ??NeuronsList_Event_17
   \                     ??NeuronsList_Event_18:
   \   000001DE   0A23               MOVS     R3,#+10
   \   000001E0   4B43               MULS     R3,R1,R3
   \   000001E2   C318               ADDS     R3,R0,R3
   \   000001E4   434E               LDR      R6,??NeuronsList_Event_0+0x28  ;; 0xc156
   \   000001E6   9E5D               LDRB     R6,[R3, R6]
   \   000001E8   002E               CMP      R6,#+0
   \   000001EA   56D1               BNE      ??NeuronsList_Event_19
   \   000001EC   4148               LDR      R0,??NeuronsList_Event_0+0x28  ;; 0xc156
   \   000001EE   1818               ADDS     R0,R3,R0
   \   000001F0   2865               STR      R0,[R5, #+80]
   \   000001F2   0A20               MOVS     R0,#+10
   \   000001F4   2870               STRB     R0,[R5, #+0]
   \   000001F6   A86C               LDR      R0,[R5, #+72]
   \   000001F8   0A21               MOVS     R1,#+10
   \   000001FA   4843               MULS     R0,R1,R0
   \   000001FC   801C               ADDS     R0,R0,#+2
   \   000001FE   A864               STR      R0,[R5, #+72]
   \   00000200   0120               MOVS     R0,#+1
   \   00000202   2872               STRB     R0,[R5, #+8]
   \                     ??NeuronsList_Event_20:
   \   00000204   ........           BL       MenuPaint
   \                     ??NeuronsList_Event_21:
   \   00000208   641C               ADDS     R4,R4,#+1
   \   0000020A   2406               LSLS     R4,R4,#+24
   \   0000020C   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Event_17:
   \   0000020E   2000               MOVS     R0,R4
   \   00000210   0628               CMP      R0,#+6
   \   00000212   00D3               BCC      .+4
   \   00000214   66E7               B        ??NeuronsList_Event_7
   \   00000216   2700               MOVS     R7,R4
   \   00000218   0C20               MOVS     R0,#+12
   \   0000021A   4743               MULS     R7,R0,R7
   \   0000021C   3E00               MOVS     R6,R7
   \   0000021E   1936               ADDS     R6,R6,#+25
   \   00000220   2B48               LDR      R0,??NeuronsList_Event_0+0x4  ;; Y_down
   \   00000222   0021               MOVS     R1,#+0
   \   00000224   415E               LDRSH    R1,[R0, R1]
   \   00000226   8E42               CMP      R6,R1
   \   00000228   13DA               BGE      ??NeuronsList_Event_22
   \   0000022A   3800               MOVS     R0,R7
   \   0000022C   2530               ADDS     R0,R0,#+37
   \   0000022E   8142               CMP      R1,R0
   \   00000230   0FDA               BGE      ??NeuronsList_Event_22
   \   00000232   ........           BL       MenuPaint
   \   00000236   0123               MOVS     R3,#+1
   \   00000238   3E22               MOVS     R2,#+62
   \   0000023A   3900               MOVS     R1,R7
   \   0000023C   1A31               ADDS     R1,R1,#+26
   \   0000023E   1800               MOVS     R0,R3
   \   00000240   ........           BL       H_line
   \   00000244   0123               MOVS     R3,#+1
   \   00000246   3E22               MOVS     R2,#+62
   \   00000248   3900               MOVS     R1,R7
   \   0000024A   2431               ADDS     R1,R1,#+36
   \   0000024C   1800               MOVS     R0,R3
   \   0000024E   ........           BL       H_line
   \                     ??NeuronsList_Event_22:
   \   00000252   2548               LDR      R0,??NeuronsList_Event_0+0x1C  ;; Y_up
   \   00000254   0021               MOVS     R1,#+0
   \   00000256   405E               LDRSH    R0,[R0, R1]
   \   00000258   8642               CMP      R6,R0
   \   0000025A   D5DA               BGE      ??NeuronsList_Event_21
   \   0000025C   2537               ADDS     R7,R7,#+37
   \   0000025E   B842               CMP      R0,R7
   \   00000260   D2DA               BGE      ??NeuronsList_Event_21
   \   00000262   1C48               LDR      R0,??NeuronsList_Event_0+0x8  ;; 0x13d7e9
   \   00000264   0078               LDRB     R0,[R0, #+0]
   \   00000266   0028               CMP      R0,#+0
   \   00000268   08D1               BNE      ??NeuronsList_Event_23
   \   0000026A   1B48               LDR      R0,??NeuronsList_Event_0+0xC  ;; 0xfffff430
   \   0000026C   0160               STR      R1,[R0, #+0]
   \   0000026E   1B4A               LDR      R2,??NeuronsList_Event_0+0x10  ;; ButtonBipCounter
   \   00000270   1B48               LDR      R0,??NeuronsList_Event_0+0x14  ;; g_counter
   \   00000272   03C8               LDM      R0!,{R0,R1}
   \   00000274   0023               MOVS     R3,#+0
   \   00000276   0830               ADDS     R0,R0,#+8
   \   00000278   5941               ADCS     R1,R1,R3
   \   0000027A   03C2               STM      R2!,{R0,R1}
   \                     ??NeuronsList_Event_23:
   \   0000027C   AA79               LDRB     R2,[R5, #+6]
   \   0000027E   2000               MOVS     R0,R4
   \   00000280   111A               SUBS     R1,R2,R0
   \   00000282   1D48               LDR      R0,??NeuronsList_Event_0+0x2C  ;; gProg
   \   00000284   AB7F               LDRB     R3,[R5, #+30]
   \   00000286   002B               CMP      R3,#+0
   \   00000288   A9D1               BNE      ??NeuronsList_Event_18
   \   0000028A   1C4B               LDR      R3,??NeuronsList_Event_0+0x30  ;; 0xc0ac
   \   0000028C   8E00               LSLS     R6,R1,#+2
   \   0000028E   8619               ADDS     R6,R0,R6
   \   00000290   F318               ADDS     R3,R6,R3
   \   00000292   EB65               STR      R3,[R5, #+92]
   \   00000294   1B68               LDR      R3,[R3, #+0]
   \   00000296   012B               CMP      R3,#+1
   \   00000298   12DB               BLT      ??NeuronsList_Event_24
   \                     ??NeuronsList_Event_19:
   \   0000029A   0623               MOVS     R3,#+6
   \   0000029C   2600               MOVS     R6,R4
   \   0000029E   9B1B               SUBS     R3,R3,R6
   \   000002A0   9A18               ADDS     R2,R3,R2
   \   000002A2   EA70               STRB     R2,[R5, #+3]
   \   000002A4   134A               LDR      R2,??NeuronsList_Event_0+0x28  ;; 0xc156
   \   000002A6   0A23               MOVS     R3,#+10
   \   000002A8   5943               MULS     R1,R3,R1
   \   000002AA   4018               ADDS     R0,R0,R1
   \   000002AC   8018               ADDS     R0,R0,R2
   \   000002AE   2865               STR      R0,[R5, #+80]
   \   000002B0   1800               MOVS     R0,R3
   \   000002B2   2870               STRB     R0,[R5, #+0]
   \   000002B4   A86C               LDR      R0,[R5, #+72]
   \   000002B6   1900               MOVS     R1,R3
   \   000002B8   4843               MULS     R0,R1,R0
   \   000002BA   C01C               ADDS     R0,R0,#+3
   \   000002BC   A864               STR      R0,[R5, #+72]
   \   000002BE   A1E7               B        ??NeuronsList_Event_20
   \                     ??NeuronsList_Event_24:
   \   000002C0   A86C               LDR      R0,[R5, #+72]
   \   000002C2   0A21               MOVS     R1,#+10
   \   000002C4   4843               MULS     R0,R1,R0
   \   000002C6   401C               ADDS     R0,R0,#+1
   \   000002C8   A864               STR      R0,[R5, #+72]
   \   000002CA   9BE7               B        ??NeuronsList_Event_20
   \                     ??NeuronsList_Event_0:
   \   000002CC   ........           DC32     X_down
   \   000002D0   ........           DC32     Y_down
   \   000002D4   E9D71300           DC32     0x13d7e9
   \   000002D8   30F4FFFF           DC32     0xfffff430
   \   000002DC   ........           DC32     ButtonBipCounter
   \   000002E0   ........           DC32     g_counter
   \   000002E4   ........           DC32     X_up
   \   000002E8   ........           DC32     Y_up
   \   000002EC   ........           DC32     TextToChangeLength
   \   000002F0   ........           DC32     SlaveMode
   \   000002F4   56C10000           DC32     0xc156
   \   000002F8   ........           DC32     gProg
   \   000002FC   ACC00000           DC32     0xc0ac
   7528              
   7529          
   7530          

   \                                 In section Debug.txt, align 4, keep-with-next
   7531              void NeuronsList_Refresh(void)
   7532              {  
   \                     NeuronsList_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   B848               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   1428               CMP      R0,#+20
   \   00000008   03D2               BCS      ??NeuronsList_Refresh_1
   7533                
   7534                //for (char i=0; i<NumberNeurons; i++)  MainStage.SendStageChange[i]=20;
   7535                
   7536                
   7537                
   7538                static char Dzielnik20;
   7539                
   7540                //char CheckTrans=0;
   7541                //if (WaitOnCheckNode>g_counter) CheckTrans=1;
   7542                
   7543                
   7544                if (Dzielnik20<20) Dzielnik20++; else Dzielnik20=0;
   \   0000000A   B649               LDR      R1,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000000C   401C               ADDS     R0,R0,#+1
   \   0000000E   0870               STRB     R0,[R1, #+0]
   \   00000010   02E0               B        ??NeuronsList_Refresh_2
   \                     ??NeuronsList_Refresh_1:
   \   00000012   B448               LDR      R0,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   0170               STRB     R1,[R0, #+0]
   \                     ??NeuronsList_Refresh_2:
   \   00000018   B348               LDR      R0,??NeuronsList_Refresh_0+0x4  ;; SlaveMode
   \   0000001A   0078               LDRB     R0,[R0, #+0]
   \   0000001C   B349               LDR      R1,??NeuronsList_Refresh_0+0x8  ;; TextToChangeLength + 30
   \   0000001E   0978               LDRB     R1,[R1, #+0]
   \   00000020   0143               ORRS     R1,R1,R0
   \   00000022   00D0               BEQ      .+4
   \   00000024   5BE1               B        ??NeuronsList_Refresh_3
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   0190               STR      R0,[SP, #+4]
   \   0000002A   38E0               B        ??NeuronsList_Refresh_4
   7545                
   7546                if ((!SlaveMode) && (OpisWezl==0))//je¿eli tryb Master
   7547                {
   7548                  
   7549                  char ERRx1=0;  //iloæ b³êdów pojedyñczych
   7550                  char ERRx2=0;  //iloæ b³êdów podwójnych (dwukrotny brak komunikacji w czasie TimeUnitQual)
   7551                  char ERRx3=0;  //iloæ b³êdów podtrujnych i wiêkszych (przynajmniej trzykrotny brak komunikacji w czasie TimeUnitQual)
   7552                  char CurErr=0;
   7553                  char LIC=0;
   7554                  char Ypoz;
   7555                    for (char i=0; i<6; i++) 
   7556                    {
   7557                      ERRx1=0; ERRx2=0; ERRx3=0; CurErr=0;
   7558                      Ypoz=28+i*12;
   7559                     
   7560                      //ocena jakoci
   7561                      CleanCanvasArea(12,Ypoz-2,8,11,0);
   7562                      if (TransQuality.Mensur[(5-i)+NeuronsListLine])  //jezeli wykryta transmisja
   7563                      {
   7564                        if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Remote)
   7565                        {      
   7566                           
   7567                            if ((Dzielnik20<10) && (MainStage.StageI[(6-i)+NeuronsListLine].Port& 0x8000) && ((MainStage.StageI[(6-i)+NeuronsListLine].Port)!=0x8AAA))
   7568                            {
   7569                                CopyToCanvasPoint((char*)BateriaWyladowana, 12, Ypoz-1, 6,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   7570                            }
   7571                          else
   7572                            {
   7573                          
   7574                          
   7575                                char MI=TransQuality.MensurIndex;
   7576                                char PT=0;
   7577                                for (char b=0; b<5; b++)
   7578                                {
   7579                                  if ((TransQuality.Mensur[(5-i)+NeuronsListLine]) & (0x1 << MI)) PT++;
   7580                                  if (MI>0) MI--; else MI=31;   
   7581                                }
   7582                            
   7583                                  H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   7584                                  if (PT>1)H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   7585                                  if (PT>2)H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   7586                                  if (PT>3)H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)  
   7587                           }
   7588           
   7589                       
   7590                        }
   7591                        else if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Period)
   7592                        {
   7593                        }
   7594                        else{
   7595                              
   7596                          
   7597                                for (char b=0; b<32; b++)
   7598                                      {
   7599                                        if ((TransQuality.Mensur[(5-i)+NeuronsListLine]) & (0x1<<b) )  //jezeli poprawna transmisja w tej jednostce czasu
   7600                                        {  
   7601                                          CurErr=0;
   7602                                        }else{
   7603                                          CurErr++;
   7604                                          if (CurErr==1) {ERRx1++;}
   7605                                          if (CurErr==2) {ERRx2++; ERRx1--; }
   7606                                          if (CurErr==3) {ERRx3++; ERRx2--; CurErr=0;}
   7607                        
   7608                                        }
   7609                                        
   7610                                      }
   7611                              //je¿eli trwa sprawdzanie transmisji wywietl migaj¹c¹ klepsydre 
   7612                             /* if (CheckTrans)
   7613                              {
   7614                                if (Dzielnik20<12)
   7615                                {
   7616                                  CopyToCanvasPoint((char*)Klepsydra, 13, Ypoz-1, 5,8);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   7617                                }else{
   7618                                  CleanCanvasArea(13, Ypoz-1, 5, 8, 0);
   7619                                }
   7620                              }else{
   7621                                */
   7622                                
   7623                                //wskanik jakoci              
   7624                                H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   7625                                if ((ERRx1<=12)  && (ERRx2<=10)  && (ERRx3<=5)) H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)    
   7626                                if ((ERRx1<=10)  && (ERRx2<=6)  && (ERRx3<=1)) H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   7627                                if ((ERRx1<=4)   && (ERRx2<=1)  && (ERRx3==0)) H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ)    
   7628                             // }
   7629                        }       
   7630                                     
   7631                      }
   7632                      
   7633                      if (NeuronsList[(5-i)+NeuronsListLine].NeuronType==NodeRF_Period)
   7634                        {
   7635              
   7636                          if ((Dzielnik20<10) && (MainStage.StageI[(6-i)+NeuronsListLine].Port& 0x8000) && (((unsigned short)(MainStage.StageI[(6-i)+NeuronsListLine].Port))!=0x8AAA))
   7637                          {
   7638                              CopyToCanvasPoint((char*)BateriaWyladowana, 12, Ypoz-1, 6,9);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   7639                          }
   7640                        else
   7641                          {
   7642                          
   7643                              LIC=0;
   7644                              for (char k=0; k<5; k++)
   7645                              {
   7646                                if ((TransQuality.SlowMensur[(5-i)+NeuronsListLine]>>k)&0x1) LIC++;
   \                     ??NeuronsList_Refresh_5:
   \   0000002C   B04A               LDR      R2,??NeuronsList_Refresh_0+0xC  ;; TransQuality
   \   0000002E   1218               ADDS     R2,R2,R0
   \   00000030   127A               LDRB     R2,[R2, #+8]
   \   00000032   0A41               ASRS     R2,R2,R1
   \   00000034   D207               LSLS     R2,R2,#+31
   \   00000036   02D5               BPL      ??NeuronsList_Refresh_6
   \   00000038   641C               ADDS     R4,R4,#+1
   \   0000003A   2406               LSLS     R4,R4,#+24
   \   0000003C   240E               LSRS     R4,R4,#+24
   7647                              }
   \                     ??NeuronsList_Refresh_6:
   \   0000003E   491C               ADDS     R1,R1,#+1
   \   00000040   0906               LSLS     R1,R1,#+24
   \   00000042   090E               LSRS     R1,R1,#+24
   \                     ??NeuronsList_Refresh_7:
   \   00000044   0A00               MOVS     R2,R1
   \   00000046   052A               CMP      R2,#+5
   \   00000048   F0D3               BCC      ??NeuronsList_Refresh_5
   7648                              if (LIC>0) 
   \   0000004A   2000               MOVS     R0,R4
   \   0000004C   0FD0               BEQ      ??NeuronsList_Refresh_8
   7649                              {
   7650                                H_line(15,Ypoz,1,1); // (char X, int Y, char lenght, char typ) 
   \   0000004E   009F               LDR      R7,[SP, #+0]
   \   00000050   3F06               LSLS     R7,R7,#+24
   \   00000052   3F0E               LSRS     R7,R7,#+24
   \   00000054   0123               MOVS     R3,#+1
   \   00000056   1A00               MOVS     R2,R3
   \   00000058   3900               MOVS     R1,R7
   \   0000005A   0F20               MOVS     R0,#+15
   \   0000005C   ........           BL       H_line
   7651                                H_line(14,Ypoz+2,3,1); // (char X, int Y, char lenght, char typ)                      
   \   00000060   0123               MOVS     R3,#+1
   \   00000062   0322               MOVS     R2,#+3
   \   00000064   BF1C               ADDS     R7,R7,#+2
   \   00000066   3900               MOVS     R1,R7
   \   00000068   0E20               MOVS     R0,#+14
   \   0000006A   ........           BL       H_line
   7652                              }
   7653                              if (LIC>1)
   \                     ??NeuronsList_Refresh_8:
   \   0000006E   022C               CMP      R4,#+2
   \   00000070   10D3               BCC      ??NeuronsList_Refresh_9
   7654                              {
   7655                                H_line(13,Ypoz+4,5,1); // (char X, int Y, char lenght, char typ)  
   \   00000072   009F               LDR      R7,[SP, #+0]
   \   00000074   3F06               LSLS     R7,R7,#+24
   \   00000076   3F0E               LSRS     R7,R7,#+24
   \   00000078   0123               MOVS     R3,#+1
   \   0000007A   0522               MOVS     R2,#+5
   \   0000007C   3900               MOVS     R1,R7
   \   0000007E   091D               ADDS     R1,R1,#+4
   \   00000080   0D20               MOVS     R0,#+13
   \   00000082   ........           BL       H_line
   7656                                H_line(12,Ypoz+6,7,1); // (char X, int Y, char lenght, char typ) 
   \   00000086   0123               MOVS     R3,#+1
   \   00000088   0722               MOVS     R2,#+7
   \   0000008A   BF1D               ADDS     R7,R7,#+6
   \   0000008C   3900               MOVS     R1,R7
   \   0000008E   0C20               MOVS     R0,#+12
   \   00000090   ........           BL       H_line
   7657                              }
   \                     ??NeuronsList_Refresh_9:
   \   00000094   0198               LDR      R0,[SP, #+4]
   \   00000096   401C               ADDS     R0,R0,#+1
   \   00000098   0006               LSLS     R0,R0,#+24
   \   0000009A   000E               LSRS     R0,R0,#+24
   \   0000009C   0190               STR      R0,[SP, #+4]
   \                     ??NeuronsList_Refresh_4:
   \   0000009E   0198               LDR      R0,[SP, #+4]
   \   000000A0   0006               LSLS     R0,R0,#+24
   \   000000A2   000E               LSRS     R0,R0,#+24
   \   000000A4   0628               CMP      R0,#+6
   \   000000A6   00D3               BCC      .+4
   \   000000A8   19E1               B        ??NeuronsList_Refresh_3
   \   000000AA   0024               MOVS     R4,#+0
   \   000000AC   2600               MOVS     R6,R4
   \   000000AE   2500               MOVS     R5,R4
   \   000000B0   2700               MOVS     R7,R4
   \   000000B2   0198               LDR      R0,[SP, #+4]
   \   000000B4   0C21               MOVS     R1,#+12
   \   000000B6   4843               MULS     R0,R1,R0
   \   000000B8   1C30               ADDS     R0,R0,#+28
   \   000000BA   0006               LSLS     R0,R0,#+24
   \   000000BC   000E               LSRS     R0,R0,#+24
   \   000000BE   0090               STR      R0,[SP, #+0]
   \   000000C0   82B0               SUB      SP,SP,#+8
   \   000000C2   2000               MOVS     R0,R4
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   0B23               MOVS     R3,#+11
   \   000000C8   0822               MOVS     R2,#+8
   \   000000CA   0298               LDR      R0,[SP, #+8]
   \   000000CC   811E               SUBS     R1,R0,#+2
   \   000000CE   0906               LSLS     R1,R1,#+24
   \   000000D0   090E               LSRS     R1,R1,#+24
   \   000000D2   0C20               MOVS     R0,#+12
   \   000000D4   ........           BL       CleanCanvasArea
   \   000000D8   02B0               ADD      SP,SP,#+8
   \   000000DA   0198               LDR      R0,[SP, #+4]
   \   000000DC   0006               LSLS     R0,R0,#+24
   \   000000DE   000E               LSRS     R0,R0,#+24
   \   000000E0   0290               STR      R0,[SP, #+8]
   \   000000E2   8448               LDR      R0,??NeuronsList_Refresh_0+0x10  ;; TextToChangeLength + 6
   \   000000E4   0078               LDRB     R0,[R0, #+0]
   \   000000E6   0299               LDR      R1,[SP, #+8]
   \   000000E8   411A               SUBS     R1,R0,R1
   \   000000EA   8800               LSLS     R0,R1,#+2
   \   000000EC   804A               LDR      R2,??NeuronsList_Refresh_0+0xC  ;; TransQuality
   \   000000EE   1018               ADDS     R0,R2,R0
   \   000000F0   006E               LDR      R0,[R0, #+96]
   \   000000F2   0028               CMP      R0,#+0
   \   000000F4   00D1               BNE      .+4
   \   000000F6   C4E0               B        ??NeuronsList_Refresh_10
   \   000000F8   0C22               MOVS     R2,#+12
   \   000000FA   4A43               MULS     R2,R1,R2
   \   000000FC   7E4B               LDR      R3,??NeuronsList_Refresh_0+0x14  ;; NeuronsList
   \   000000FE   9A18               ADDS     R2,R3,R2
   \   00000100   3C32               ADDS     R2,R2,#+60
   \   00000102   1278               LDRB     R2,[R2, #+0]
   \   00000104   042A               CMP      R2,#+4
   \   00000106   5DD1               BNE      ??NeuronsList_Refresh_11
   \   00000108   764A               LDR      R2,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000010A   1278               LDRB     R2,[R2, #+0]
   \   0000010C   0A2A               CMP      R2,#+10
   \   0000010E   19D2               BCS      ??NeuronsList_Refresh_12
   \   00000110   7A4A               LDR      R2,??NeuronsList_Refresh_0+0x18  ;; MainStage
   \   00000112   8C23               MOVS     R3,#+140
   \   00000114   5B00               LSLS     R3,R3,#+1        ;; #+280
   \   00000116   1424               MOVS     R4,#+20
   \   00000118   6143               MULS     R1,R4,R1
   \   0000011A   5118               ADDS     R1,R2,R1
   \   0000011C   C95A               LDRH     R1,[R1, R3]
   \   0000011E   0A04               LSLS     R2,R1,#+16
   \   00000120   10D5               BPL      ??NeuronsList_Refresh_12
   \   00000122   774A               LDR      R2,??NeuronsList_Refresh_0+0x1C  ;; 0x8aaa
   \   00000124   9142               CMP      R1,R2
   \   00000126   0DD0               BEQ      ??NeuronsList_Refresh_12
   \   00000128   82B0               SUB      SP,SP,#+8
   \   0000012A   0920               MOVS     R0,#+9
   \   0000012C   0090               STR      R0,[SP, #+0]
   \   0000012E   0623               MOVS     R3,#+6
   \   00000130   0298               LDR      R0,[SP, #+8]
   \   00000132   421E               SUBS     R2,R0,#+1
   \   00000134   1206               LSLS     R2,R2,#+24
   \   00000136   120E               LSRS     R2,R2,#+24
   \   00000138   0C21               MOVS     R1,#+12
   \   0000013A   7248               LDR      R0,??NeuronsList_Refresh_0+0x20  ;; BateriaWyladowana
   \   0000013C   ........           BL       CopyToCanvasPoint
   \   00000140   02B0               ADD      SP,SP,#+8
   \   00000142   9EE0               B        ??NeuronsList_Refresh_10
   \                     ??NeuronsList_Refresh_12:
   \   00000144   6A49               LDR      R1,??NeuronsList_Refresh_0+0xC  ;; TransQuality
   \   00000146   0978               LDRB     R1,[R1, #+0]
   \   00000148   2C00               MOVS     R4,R5
   \   0000014A   2200               MOVS     R2,R4
   \   0000014C   03E0               B        ??NeuronsList_Refresh_13
   \                     ??NeuronsList_Refresh_14:
   \   0000014E   1F21               MOVS     R1,#+31
   \                     ??NeuronsList_Refresh_15:
   \   00000150   521C               ADDS     R2,R2,#+1
   \   00000152   1206               LSLS     R2,R2,#+24
   \   00000154   120E               LSRS     R2,R2,#+24
   \                     ??NeuronsList_Refresh_13:
   \   00000156   1300               MOVS     R3,R2
   \   00000158   052B               CMP      R3,#+5
   \   0000015A   0CD2               BCS      ??NeuronsList_Refresh_16
   \   0000015C   0123               MOVS     R3,#+1
   \   0000015E   8B40               LSLS     R3,R3,R1
   \   00000160   0340               ANDS     R3,R3,R0
   \   00000162   02D0               BEQ      ??NeuronsList_Refresh_17
   \   00000164   641C               ADDS     R4,R4,#+1
   \   00000166   2406               LSLS     R4,R4,#+24
   \   00000168   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Refresh_17:
   \   0000016A   0B00               MOVS     R3,R1
   \   0000016C   EFD0               BEQ      ??NeuronsList_Refresh_14
   \   0000016E   491E               SUBS     R1,R1,#+1
   \   00000170   0906               LSLS     R1,R1,#+24
   \   00000172   090E               LSRS     R1,R1,#+24
   \   00000174   ECE7               B        ??NeuronsList_Refresh_15
   \                     ??NeuronsList_Refresh_16:
   \   00000176   009F               LDR      R7,[SP, #+0]
   \   00000178   3F06               LSLS     R7,R7,#+24
   \   0000017A   3F0E               LSRS     R7,R7,#+24
   \   0000017C   0123               MOVS     R3,#+1
   \   0000017E   1A00               MOVS     R2,R3
   \   00000180   3900               MOVS     R1,R7
   \   00000182   0F20               MOVS     R0,#+15
   \   00000184   ........           BL       H_line
   \   00000188   2000               MOVS     R0,R4
   \   0000018A   0228               CMP      R0,#+2
   \   0000018C   06D3               BCC      ??NeuronsList_Refresh_18
   \   0000018E   0123               MOVS     R3,#+1
   \   00000190   0322               MOVS     R2,#+3
   \   00000192   3900               MOVS     R1,R7
   \   00000194   891C               ADDS     R1,R1,#+2
   \   00000196   0E20               MOVS     R0,#+14
   \   00000198   ........           BL       H_line
   \                     ??NeuronsList_Refresh_18:
   \   0000019C   2000               MOVS     R0,R4
   \   0000019E   0328               CMP      R0,#+3
   \   000001A0   06D3               BCC      ??NeuronsList_Refresh_19
   \   000001A2   0123               MOVS     R3,#+1
   \   000001A4   0522               MOVS     R2,#+5
   \   000001A6   3900               MOVS     R1,R7
   \   000001A8   091D               ADDS     R1,R1,#+4
   \   000001AA   0D20               MOVS     R0,#+13
   \   000001AC   ........           BL       H_line
   \                     ??NeuronsList_Refresh_19:
   \   000001B0   042C               CMP      R4,#+4
   \   000001B2   66D3               BCC      ??NeuronsList_Refresh_10
   \   000001B4   0123               MOVS     R3,#+1
   \   000001B6   0722               MOVS     R2,#+7
   \   000001B8   BF1D               ADDS     R7,R7,#+6
   \   000001BA   3900               MOVS     R1,R7
   \   000001BC   0C20               MOVS     R0,#+12
   \   000001BE   ........           BL       H_line
   \   000001C2   5EE0               B        ??NeuronsList_Refresh_10
   \                     ??NeuronsList_Refresh_11:
   \   000001C4   052A               CMP      R2,#+5
   \   000001C6   5CD0               BEQ      ??NeuronsList_Refresh_10
   \   000001C8   2100               MOVS     R1,R4
   \   000001CA   1BE0               B        ??NeuronsList_Refresh_20
   \                     ??NeuronsList_Refresh_21:
   \   000001CC   7F1C               ADDS     R7,R7,#+1
   \   000001CE   3F06               LSLS     R7,R7,#+24
   \   000001D0   3F0E               LSRS     R7,R7,#+24
   \   000001D2   012F               CMP      R7,#+1
   \   000001D4   02D1               BNE      ??NeuronsList_Refresh_22
   \   000001D6   641C               ADDS     R4,R4,#+1
   \   000001D8   2406               LSLS     R4,R4,#+24
   \   000001DA   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Refresh_22:
   \   000001DC   022F               CMP      R7,#+2
   \   000001DE   05D1               BNE      ??NeuronsList_Refresh_23
   \   000001E0   761C               ADDS     R6,R6,#+1
   \   000001E2   3606               LSLS     R6,R6,#+24
   \   000001E4   360E               LSRS     R6,R6,#+24
   \   000001E6   641E               SUBS     R4,R4,#+1
   \   000001E8   2406               LSLS     R4,R4,#+24
   \   000001EA   240E               LSRS     R4,R4,#+24
   \                     ??NeuronsList_Refresh_23:
   \   000001EC   032F               CMP      R7,#+3
   \   000001EE   06D1               BNE      ??NeuronsList_Refresh_24
   \   000001F0   6D1C               ADDS     R5,R5,#+1
   \   000001F2   2D06               LSLS     R5,R5,#+24
   \   000001F4   2D0E               LSRS     R5,R5,#+24
   \   000001F6   761E               SUBS     R6,R6,#+1
   \   000001F8   3606               LSLS     R6,R6,#+24
   \   000001FA   360E               LSRS     R6,R6,#+24
   \   000001FC   0027               MOVS     R7,#+0
   \                     ??NeuronsList_Refresh_24:
   \   000001FE   491C               ADDS     R1,R1,#+1
   \   00000200   0906               LSLS     R1,R1,#+24
   \   00000202   090E               LSRS     R1,R1,#+24
   \                     ??NeuronsList_Refresh_20:
   \   00000204   0A00               MOVS     R2,R1
   \   00000206   202A               CMP      R2,#+32
   \   00000208   05D2               BCS      ??NeuronsList_Refresh_25
   \   0000020A   0122               MOVS     R2,#+1
   \   0000020C   8A40               LSLS     R2,R2,R1
   \   0000020E   0240               ANDS     R2,R2,R0
   \   00000210   DCD0               BEQ      ??NeuronsList_Refresh_21
   \   00000212   0027               MOVS     R7,#+0
   \   00000214   F3E7               B        ??NeuronsList_Refresh_24
   \                     ??NeuronsList_Refresh_25:
   \   00000216   009F               LDR      R7,[SP, #+0]
   \   00000218   3F06               LSLS     R7,R7,#+24
   \   0000021A   3F0E               LSRS     R7,R7,#+24
   \   0000021C   0123               MOVS     R3,#+1
   \   0000021E   1A00               MOVS     R2,R3
   \   00000220   3900               MOVS     R1,R7
   \   00000222   0F20               MOVS     R0,#+15
   \   00000224   ........           BL       H_line
   \   00000228   2000               MOVS     R0,R4
   \   0000022A   0D28               CMP      R0,#+13
   \   0000022C   0CD2               BCS      ??NeuronsList_Refresh_26
   \   0000022E   3000               MOVS     R0,R6
   \   00000230   0B28               CMP      R0,#+11
   \   00000232   09D2               BCS      ??NeuronsList_Refresh_26
   \   00000234   2800               MOVS     R0,R5
   \   00000236   0628               CMP      R0,#+6
   \   00000238   06D2               BCS      ??NeuronsList_Refresh_26
   \   0000023A   0123               MOVS     R3,#+1
   \   0000023C   0322               MOVS     R2,#+3
   \   0000023E   3900               MOVS     R1,R7
   \   00000240   891C               ADDS     R1,R1,#+2
   \   00000242   0E20               MOVS     R0,#+14
   \   00000244   ........           BL       H_line
   \                     ??NeuronsList_Refresh_26:
   \   00000248   2000               MOVS     R0,R4
   \   0000024A   0B28               CMP      R0,#+11
   \   0000024C   0CD2               BCS      ??NeuronsList_Refresh_27
   \   0000024E   3000               MOVS     R0,R6
   \   00000250   0728               CMP      R0,#+7
   \   00000252   09D2               BCS      ??NeuronsList_Refresh_27
   \   00000254   2800               MOVS     R0,R5
   \   00000256   0228               CMP      R0,#+2
   \   00000258   06D2               BCS      ??NeuronsList_Refresh_27
   \   0000025A   0123               MOVS     R3,#+1
   \   0000025C   0522               MOVS     R2,#+5
   \   0000025E   3900               MOVS     R1,R7
   \   00000260   091D               ADDS     R1,R1,#+4
   \   00000262   0D20               MOVS     R0,#+13
   \   00000264   ........           BL       H_line
   \                     ??NeuronsList_Refresh_27:
   \   00000268   052C               CMP      R4,#+5
   \   0000026A   0AD2               BCS      ??NeuronsList_Refresh_10
   \   0000026C   022E               CMP      R6,#+2
   \   0000026E   08D2               BCS      ??NeuronsList_Refresh_10
   \   00000270   002D               CMP      R5,#+0
   \   00000272   06D1               BNE      ??NeuronsList_Refresh_10
   \   00000274   0123               MOVS     R3,#+1
   \   00000276   0722               MOVS     R2,#+7
   \   00000278   BF1D               ADDS     R7,R7,#+6
   \   0000027A   3900               MOVS     R1,R7
   \   0000027C   0C20               MOVS     R0,#+12
   \   0000027E   ........           BL       H_line
   \                     ??NeuronsList_Refresh_10:
   \   00000282   1C48               LDR      R0,??NeuronsList_Refresh_0+0x10  ;; TextToChangeLength + 6
   \   00000284   0078               LDRB     R0,[R0, #+0]
   \   00000286   0299               LDR      R1,[SP, #+8]
   \   00000288   401A               SUBS     R0,R0,R1
   \   0000028A   0C21               MOVS     R1,#+12
   \   0000028C   4143               MULS     R1,R0,R1
   \   0000028E   1A4A               LDR      R2,??NeuronsList_Refresh_0+0x14  ;; NeuronsList
   \   00000290   5118               ADDS     R1,R2,R1
   \   00000292   3C31               ADDS     R1,R1,#+60
   \   00000294   0978               LDRB     R1,[R1, #+0]
   \   00000296   0529               CMP      R1,#+5
   \   00000298   00D0               BEQ      .+4
   \   0000029A   FBE6               B        ??NeuronsList_Refresh_9
   \   0000029C   1149               LDR      R1,??NeuronsList_Refresh_0  ;; ??Dzielnik20
   \   0000029E   0978               LDRB     R1,[R1, #+0]
   \   000002A0   0A29               CMP      R1,#+10
   \   000002A2   19D2               BCS      ??NeuronsList_Refresh_28
   \   000002A4   154A               LDR      R2,??NeuronsList_Refresh_0+0x18  ;; MainStage
   \   000002A6   8C21               MOVS     R1,#+140
   \   000002A8   4900               LSLS     R1,R1,#+1        ;; #+280
   \   000002AA   1423               MOVS     R3,#+20
   \   000002AC   4343               MULS     R3,R0,R3
   \   000002AE   D218               ADDS     R2,R2,R3
   \   000002B0   515A               LDRH     R1,[R2, R1]
   \   000002B2   0A04               LSLS     R2,R1,#+16
   \   000002B4   10D5               BPL      ??NeuronsList_Refresh_28
   \   000002B6   124A               LDR      R2,??NeuronsList_Refresh_0+0x1C  ;; 0x8aaa
   \   000002B8   9142               CMP      R1,R2
   \   000002BA   0DD0               BEQ      ??NeuronsList_Refresh_28
   \   000002BC   82B0               SUB      SP,SP,#+8
   \   000002BE   0920               MOVS     R0,#+9
   \   000002C0   0090               STR      R0,[SP, #+0]
   \   000002C2   0623               MOVS     R3,#+6
   \   000002C4   0298               LDR      R0,[SP, #+8]
   \   000002C6   421E               SUBS     R2,R0,#+1
   \   000002C8   1206               LSLS     R2,R2,#+24
   \   000002CA   120E               LSRS     R2,R2,#+24
   \   000002CC   0C21               MOVS     R1,#+12
   \   000002CE   0D48               LDR      R0,??NeuronsList_Refresh_0+0x20  ;; BateriaWyladowana
   \   000002D0   ........           BL       CopyToCanvasPoint
   \   000002D4   02B0               ADD      SP,SP,#+8
   \   000002D6   DDE6               B        ??NeuronsList_Refresh_9
   \                     ??NeuronsList_Refresh_28:
   \   000002D8   0024               MOVS     R4,#+0
   \   000002DA   2100               MOVS     R1,R4
   \   000002DC   B2E6               B        ??NeuronsList_Refresh_7
   7658                            }
   7659                        
   7660                        }
   7661                      
   7662                        
   7663                        #ifdef  DIRECT_Q_MESURE 
   7664                        static char Div=0;
   7665                      
   7666                        if (Div<10)
   7667                        {
   7668                         Div++; 
   7669                        }else{
   7670                          Div=0;
   7671                        
   7672                              char txt[6];
   7673                              sprintf(txt, "%d",  TransQuality.DirectkMensur[(5-i)+NeuronsListLine]);
   7674                              Label(txt,0,22,27+i*12,8,23,16,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   7675                        }  
   7676                         #endif
   7677                      
   7678                        
   7679                    }
   7680                }
   7681                
   7682                
   7683              
   7684             }//________________________________________________________________________
   \                     ??NeuronsList_Refresh_3:
   \   000002DE   FEBC               POP      {R1-R7}
   \   000002E0   01BC               POP      {R0}
   \   000002E2   0047               BX       R0               ;; return
   \                     ??NeuronsList_Refresh_0:
   \   000002E4   ........           DC32     ??Dzielnik20
   \   000002E8   ........           DC32     SlaveMode
   \   000002EC   ........           DC32     TextToChangeLength + 30
   \   000002F0   ........           DC32     TransQuality
   \   000002F4   ........           DC32     TextToChangeLength + 6
   \   000002F8   ........           DC32     NeuronsList
   \   000002FC   ........           DC32     MainStage
   \   00000300   AA8A0000           DC32     0x8aaa
   \   00000304   ........           DC32     BateriaWyladowana

   \                                 In section .bss, align 1
   \                     ??Dzielnik20:
   \   00000000                      DS8 1
   7685          
   7686          
   7687          
   7688              
   7689                
   7690                

   \                                 In section Debug.txt, align 4, keep-with-next
   7691          void NeuronNrChange_Paint( int *ValToChange)
   7692                { 
   \                     NeuronNrChange_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   7693                  List_Paint(" ID ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   4DA0               ADR      R0,??NeuronNrChange_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   4A48               LDR      R0,??NeuronNrChange_Paint_0+0x4  ;; `?<Constant " ID ">`
   \   0000001E   ........           BL       List_Paint
   \   00000022   0AB0               ADD      SP,SP,#+40
   \   00000024   4948               LDR      R0,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0BD1               BNE      ??NeuronNrChange_Paint_1
   7694                  
   7695             
   7696                  if (VCTT_ill==0) for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   0000002C   0024               MOVS     R4,#+0
   \   0000002E   06E0               B        ??NeuronNrChange_Paint_2
   \                     ??NeuronNrChange_Paint_3:
   \   00000030   464A               LDR      R2,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000032   5118               ADDS     R1,R2,R1
   \   00000034   2200               MOVS     R2,R4
   \   00000036   0A71               STRB     R2,[R1, #+4]
   \   00000038   401C               ADDS     R0,R0,#+1
   \   0000003A   0006               LSLS     R0,R0,#+24
   \   0000003C   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Paint_2:
   \   0000003E   0100               MOVS     R1,R0
   \   00000040   0829               CMP      R1,#+8
   \   00000042   F5D3               BCC      ??NeuronNrChange_Paint_3
   7697                  
   7698                  H_line(12,106,39,1);
   \                     ??NeuronNrChange_Paint_1:
   \   00000044   0123               MOVS     R3,#+1
   \   00000046   2722               MOVS     R2,#+39
   \   00000048   6A21               MOVS     R1,#+106
   \   0000004A   0C20               MOVS     R0,#+12
   \   0000004C   ........           BL       H_line
   7699                  H_line(12,96,39,1);
   \   00000050   0123               MOVS     R3,#+1
   \   00000052   2722               MOVS     R2,#+39
   \   00000054   6021               MOVS     R1,#+96
   \   00000056   0C20               MOVS     R0,#+12
   \   00000058   ........           BL       H_line
   7700                  V_line(11,97,9,1); 
   \   0000005C   0123               MOVS     R3,#+1
   \   0000005E   0922               MOVS     R2,#+9
   \   00000060   6121               MOVS     R1,#+97
   \   00000062   0B20               MOVS     R0,#+11
   \   00000064   ........           BL       V_line
   7701                  V_line(50,97,9,1); 
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   0922               MOVS     R2,#+9
   \   0000006C   6121               MOVS     R1,#+97
   \   0000006E   3220               MOVS     R0,#+50
   \   00000070   ........           BL       V_line
   7702          
   7703          
   7704                  
   7705                  Label(ValueChangeTxtTmp,1,48,97,8,34,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   8021               MOVS     R1,#+128
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   2221               MOVS     R1,#+34
   \   00000080   0820               MOVS     R0,#+8
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   6123               MOVS     R3,#+97
   \   00000086   3022               MOVS     R2,#+48
   \   00000088   0121               MOVS     R1,#+1
   \   0000008A   3148               LDR      R0,??NeuronNrChange_Paint_0+0xC  ;; VCTT_ill + 4
   \   0000008C   ........           BL       Label
   \   00000090   06B0               ADD      SP,SP,#+24
   7706                                
   7707          
   7708                  
   7709                  char txt[2];
   7710                  txt[1]=0;
   \   00000092   0024               MOVS     R4,#+0
   \   00000094   6846               MOV      R0,SP
   \   00000096   2100               MOVS     R1,R4
   \   00000098   4170               STRB     R1,[R0, #+1]
   7711                  char ind=0;
   \   0000009A   2700               MOVS     R7,R4
   7712                  for (char j=0; j<3; j++)
   \   0000009C   2500               MOVS     R5,R4
   \   0000009E   25E0               B        ??NeuronNrChange_Paint_4
   7713                    for (char i=0; i<3; i++)
   7714                    {
   7715                      ind++;
   \                     ??NeuronNrChange_Paint_5:
   \   000000A0   7F1C               ADDS     R7,R7,#+1
   \   000000A2   3F06               LSLS     R7,R7,#+24
   \   000000A4   3F0E               LSRS     R7,R7,#+24
   7716                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   000000A6   0122               MOVS     R2,#+1
   \   000000A8   6946               MOV      R1,SP
   \   000000AA   3800               MOVS     R0,R7
   \   000000AC   ........           BL       CharToStr
   7717                      Button(txt,2+20*i,76-(19*j),18,17);
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   1120               MOVS     R0,#+17
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   1223               MOVS     R3,#+18
   \   000000B8   4C20               MOVS     R0,#+76
   \   000000BA   2900               MOVS     R1,R5
   \   000000BC   1322               MOVS     R2,#+19
   \   000000BE   5143               MULS     R1,R2,R1
   \   000000C0   421A               SUBS     R2,R0,R1
   \   000000C2   1206               LSLS     R2,R2,#+24
   \   000000C4   120E               LSRS     R2,R2,#+24
   \   000000C6   3100               MOVS     R1,R6
   \   000000C8   1420               MOVS     R0,#+20
   \   000000CA   4143               MULS     R1,R0,R1
   \   000000CC   891C               ADDS     R1,R1,#+2
   \   000000CE   0906               LSLS     R1,R1,#+24
   \   000000D0   090E               LSRS     R1,R1,#+24
   \   000000D2   02A8               ADD      R0,SP,#+8
   \   000000D4   ........           BL       Button
   \   000000D8   02B0               ADD      SP,SP,#+8
   7718                    }
   \   000000DA   761C               ADDS     R6,R6,#+1
   \   000000DC   3606               LSLS     R6,R6,#+24
   \   000000DE   360E               LSRS     R6,R6,#+24
   \                     ??NeuronNrChange_Paint_6:
   \   000000E0   3000               MOVS     R0,R6
   \   000000E2   0328               CMP      R0,#+3
   \   000000E4   DCD3               BCC      ??NeuronNrChange_Paint_5
   \   000000E6   6D1C               ADDS     R5,R5,#+1
   \   000000E8   2D06               LSLS     R5,R5,#+24
   \   000000EA   2D0E               LSRS     R5,R5,#+24
   \                     ??NeuronNrChange_Paint_4:
   \   000000EC   2800               MOVS     R0,R5
   \   000000EE   0328               CMP      R0,#+3
   \   000000F0   01D2               BCS      ??NeuronNrChange_Paint_7
   \   000000F2   2600               MOVS     R6,R4
   \   000000F4   F4E7               B        ??NeuronNrChange_Paint_6
   7719                  //Button(" ",2+20*0,76-(19*3),18,17);
   7720                  Button("0",2+20*1,76-(19*3),18,17);
   \                     ??NeuronNrChange_Paint_7:
   \   000000F6   82B0               SUB      SP,SP,#+8
   \   000000F8   1120               MOVS     R0,#+17
   \   000000FA   0090               STR      R0,[SP, #+0]
   \   000000FC   1223               MOVS     R3,#+18
   \   000000FE   1322               MOVS     R2,#+19
   \   00000100   1621               MOVS     R1,#+22
   \   00000102   14A0               ADR      R0,??NeuronNrChange_Paint_0+0x10  ;; 0x30, 0x00, 0x00, 0x00
   \   00000104   ........           BL       Button
   \   00000108   02B0               ADD      SP,SP,#+8
   7721                  //Button("-",2+20*2,76-(19*3),18,17);
   7722                  
   7723                  
   7724                  Button("C ",3,4,17,13);
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0D20               MOVS     R0,#+13
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   1123               MOVS     R3,#+17
   \   00000112   0422               MOVS     R2,#+4
   \   00000114   0321               MOVS     R1,#+3
   \   00000116   10A0               ADR      R0,??NeuronNrChange_Paint_0+0x14  ;; 0x43, 0x20, 0x00, 0x00
   \   00000118   ........           BL       Button
   \   0000011C   02B0               ADD      SP,SP,#+8
   7725                  if ((VCTT_ill==0) || (VCTT_ill>6)) Button("Ok ",22,4,38,13);
   \   0000011E   0B48               LDR      R0,??NeuronNrChange_Paint_0+0x8  ;; VCTT_ill
   \   00000120   0078               LDRB     R0,[R0, #+0]
   \   00000122   0028               CMP      R0,#+0
   \   00000124   01D0               BEQ      ??NeuronNrChange_Paint_8
   \   00000126   0728               CMP      R0,#+7
   \   00000128   09D3               BCC      ??NeuronNrChange_Paint_9
   \                     ??NeuronNrChange_Paint_8:
   \   0000012A   82B0               SUB      SP,SP,#+8
   \   0000012C   0D20               MOVS     R0,#+13
   \   0000012E   0090               STR      R0,[SP, #+0]
   \   00000130   2623               MOVS     R3,#+38
   \   00000132   0422               MOVS     R2,#+4
   \   00000134   1621               MOVS     R1,#+22
   \   00000136   09A0               ADR      R0,??NeuronNrChange_Paint_0+0x18  ;; "Ok "
   \   00000138   ........           BL       Button
   \   0000013C   02B0               ADD      SP,SP,#+8
   7726                }
   \                     ??NeuronNrChange_Paint_9:
   \   0000013E   F8BC               POP      {R3-R7}
   \   00000140   01BC               POP      {R0}
   \   00000142   0047               BX       R0               ;; return
   \                     ??NeuronNrChange_Paint_0:
   \   00000144   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000148   ........           DC32     `?<Constant " ID ">`
   \   0000014C   ........           DC32     VCTT_ill
   \   00000150   ........           DC32     VCTT_ill + 4
   \   00000154   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000158   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   0000015C   4F6B2000           DC8      "Ok "
   7727          
   7728          
   7729          

   \                                 In section Debug.txt, align 4, keep-with-next
   7730          void NeuronNrChange_Evant(int *ValToChange)
   7731                { 
   \                     NeuronNrChange_Evant:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   0020               MOVS     R0,#+0
   \   00000006   0190               STR      R0,[SP, #+4]
   7732                 int ValueTmp=0; 
   7733                 char ind=0;
   \   00000008   0600               MOVS     R6,R0
   7734                 char txt[2];
   7735                 char Refresh=0;
   \   0000000A   0500               MOVS     R5,R0
   7736           
   7737                 
   7738                 
   7739                 
   7740          
   7741                 txt[1]=0;
   \   0000000C   02A8               ADD      R0,SP,#+8
   \   0000000E   2900               MOVS     R1,R5
   \   00000010   4170               STRB     R1,[R0, #+1]
   7742                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000012   7748               LDR      R0,??NeuronNrChange_Evant_0  ;; X_up
   \   00000014   405E               LDRSH    R0,[R0, R1]
   \   00000016   2F28               CMP      R0,#+47
   \   00000018   2DDB               BLT      ??NeuronNrChange_Evant_1
   \   0000001A   3F28               CMP      R0,#+63
   \   0000001C   2BDA               BGE      ??NeuronNrChange_Evant_1
   \   0000001E   7548               LDR      R0,??NeuronNrChange_Evant_0+0x4  ;; Y_up
   \   00000020   405E               LDRSH    R0,[R0, R1]
   \   00000022   7128               CMP      R0,#+113
   \   00000024   27DB               BLT      ??NeuronNrChange_Evant_1
   \   00000026   7F28               CMP      R0,#+127
   \   00000028   25DA               BGE      ??NeuronNrChange_Evant_1
   7743                  {
   7744                    
   7745                       for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   0000002A   0800               MOVS     R0,R1
   \   0000002C   06E0               B        ??NeuronNrChange_Evant_2
   \                     ??NeuronNrChange_Evant_3:
   \   0000002E   724A               LDR      R2,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   00000030   5118               ADDS     R1,R2,R1
   \   00000032   2A00               MOVS     R2,R5
   \   00000034   0A71               STRB     R2,[R1, #+4]
   \   00000036   401C               ADDS     R0,R0,#+1
   \   00000038   0006               LSLS     R0,R0,#+24
   \   0000003A   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Evant_2:
   \   0000003C   0100               MOVS     R1,R0
   \   0000003E   0829               CMP      R1,#+8
   \   00000040   F5D3               BCC      ??NeuronNrChange_Evant_3
   7746                          ValueTmp=0;
   7747                          VCTT_ill=0;
   \   00000042   6D4C               LDR      R4,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   00000044   2800               MOVS     R0,R5
   \   00000046   2070               STRB     R0,[R4, #+0]
   7748                          VCTT_point_flag=0;
   \   00000048   6070               STRB     R0,[R4, #+1]
   7749                     
   7750                          if (!(AT91C_IFLASH_MEM->Config.SoundOff)) {AT91C_BASE_PIOA->PIO_SODR =SpeakerPin; ButtonBipCounter=g_counter+8;}
                                                                                                       ^
Warning[Pe063]: shift count is too large
   \   0000004A   6C48               LDR      R0,??NeuronNrChange_Evant_0+0xC  ;; 0x13d7e9
   \   0000004C   0078               LDRB     R0,[R0, #+0]
   \   0000004E   0028               CMP      R0,#+0
   \   00000050   09D1               BNE      ??NeuronNrChange_Evant_4
   \   00000052   6B48               LDR      R0,??NeuronNrChange_Evant_0+0x10  ;; 0xfffff430
   \   00000054   2900               MOVS     R1,R5
   \   00000056   0160               STR      R1,[R0, #+0]
   \   00000058   6A4A               LDR      R2,??NeuronNrChange_Evant_0+0x14  ;; ButtonBipCounter
   \   0000005A   6B48               LDR      R0,??NeuronNrChange_Evant_0+0x18  ;; g_counter
   \   0000005C   03C8               LDM      R0!,{R0,R1}
   \   0000005E   0023               MOVS     R3,#+0
   \   00000060   0830               ADDS     R0,R0,#+8
   \   00000062   5941               ADCS     R1,R1,R3
   \   00000064   03C2               STM      R2!,{R0,R1}
   7751                          
   7752                      MenuLevel=(MenuLevel/10);
   \                     ??NeuronNrChange_Evant_4:
   \   00000066   694D               LDR      R5,??NeuronNrChange_Evant_0+0x1C  ;; TextToChangeLength
   \   00000068   A86C               LDR      R0,[R5, #+72]
   \   0000006A   0A21               MOVS     R1,#+10
   \   0000006C   ........           BL       __aeabi_idivmod
   \   00000070   A864               STR      R0,[R5, #+72]
   7753                      Refresh=1;
   \   00000072   0125               MOVS     R5,#+1
   \   00000074   B4E0               B        ??NeuronNrChange_Evant_5
   7754                  } else {
   7755                    
   7756                           
   7757          
   7758                   
   7759                       
   7760                    for (char j=0; j<3; j++)
   \                     ??NeuronNrChange_Evant_1:
   \   00000076   0800               MOVS     R0,R1
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   36E0               B        ??NeuronNrChange_Evant_6
   7761                    {
   7762                    for (char i=0; i<3; i++)
   7763                    {
   7764                      ind++;
   \                     ??NeuronNrChange_Evant_7:
   \   0000007C   761C               ADDS     R6,R6,#+1
   \   0000007E   3606               LSLS     R6,R6,#+24
   \   00000080   360E               LSRS     R6,R6,#+24
   7765                      CharToStr(ind, txt, 1); //(char Value, char *Vstring, char ill);
   \   00000082   0122               MOVS     R2,#+1
   \   00000084   02A9               ADD      R1,SP,#+8
   \   00000086   3000               MOVS     R0,R6
   \   00000088   ........           BL       CharToStr
   7766                      if ((Button(txt,2+20*i,76-(19*j),18,17)==1) && (VCTT_ill<7)  ){ValueChangeTxtTmp[VCTT_ill++]=48+ind;   Refresh=1;}
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   1120               MOVS     R0,#+17
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   1223               MOVS     R3,#+18
   \   00000094   4C20               MOVS     R0,#+76
   \   00000096   0299               LDR      R1,[SP, #+8]
   \   00000098   0906               LSLS     R1,R1,#+24
   \   0000009A   090E               LSRS     R1,R1,#+24
   \   0000009C   1322               MOVS     R2,#+19
   \   0000009E   5143               MULS     R1,R2,R1
   \   000000A0   421A               SUBS     R2,R0,R1
   \   000000A2   1206               LSLS     R2,R2,#+24
   \   000000A4   120E               LSRS     R2,R2,#+24
   \   000000A6   3900               MOVS     R1,R7
   \   000000A8   1420               MOVS     R0,#+20
   \   000000AA   4143               MULS     R1,R0,R1
   \   000000AC   891C               ADDS     R1,R1,#+2
   \   000000AE   0906               LSLS     R1,R1,#+24
   \   000000B0   090E               LSRS     R1,R1,#+24
   \   000000B2   04A8               ADD      R0,SP,#+16
   \   000000B4   ........           BL       Button
   \   000000B8   02B0               ADD      SP,SP,#+8
   \   000000BA   0128               CMP      R0,#+1
   \   000000BC   0AD1               BNE      ??NeuronNrChange_Evant_8
   \   000000BE   4E4C               LDR      R4,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   000000C0   2078               LDRB     R0,[R4, #+0]
   \   000000C2   0728               CMP      R0,#+7
   \   000000C4   06D2               BCS      ??NeuronNrChange_Evant_8
   \   000000C6   2118               ADDS     R1,R4,R0
   \   000000C8   3200               MOVS     R2,R6
   \   000000CA   3032               ADDS     R2,R2,#+48
   \   000000CC   0A71               STRB     R2,[R1, #+4]
   \   000000CE   401C               ADDS     R0,R0,#+1
   \   000000D0   2070               STRB     R0,[R4, #+0]
   \   000000D2   0125               MOVS     R5,#+1
   7767                      
   7768                     }
   \                     ??NeuronNrChange_Evant_8:
   \   000000D4   7F1C               ADDS     R7,R7,#+1
   \   000000D6   3F06               LSLS     R7,R7,#+24
   \   000000D8   3F0E               LSRS     R7,R7,#+24
   \                     ??NeuronNrChange_Evant_9:
   \   000000DA   3800               MOVS     R0,R7
   \   000000DC   0328               CMP      R0,#+3
   \   000000DE   CDD3               BCC      ??NeuronNrChange_Evant_7
   \   000000E0   0098               LDR      R0,[SP, #+0]
   \   000000E2   401C               ADDS     R0,R0,#+1
   \   000000E4   0006               LSLS     R0,R0,#+24
   \   000000E6   000E               LSRS     R0,R0,#+24
   \   000000E8   0090               STR      R0,[SP, #+0]
   \                     ??NeuronNrChange_Evant_6:
   \   000000EA   0098               LDR      R0,[SP, #+0]
   \   000000EC   0006               LSLS     R0,R0,#+24
   \   000000EE   000E               LSRS     R0,R0,#+24
   \   000000F0   0328               CMP      R0,#+3
   \   000000F2   01D2               BCS      ??NeuronNrChange_Evant_10
   \   000000F4   0027               MOVS     R7,#+0
   \   000000F6   F0E7               B        ??NeuronNrChange_Evant_9
   7769                    }
   7770          
   7771                     if ((Button("0",2+20*1,76-(19*3),18,17)==1) && (VCTT_ill<7) ) {ValueChangeTxtTmp[VCTT_ill++]=48;    Refresh=1;}
   \                     ??NeuronNrChange_Evant_10:
   \   000000F8   3F4C               LDR      R4,??NeuronNrChange_Evant_0+0x8  ;; VCTT_ill
   \   000000FA   82B0               SUB      SP,SP,#+8
   \   000000FC   1120               MOVS     R0,#+17
   \   000000FE   0090               STR      R0,[SP, #+0]
   \   00000100   1223               MOVS     R3,#+18
   \   00000102   1322               MOVS     R2,#+19
   \   00000104   1621               MOVS     R1,#+22
   \   00000106   42A0               ADR      R0,??NeuronNrChange_Evant_0+0x20  ;; 0x30, 0x00, 0x00, 0x00
   \   00000108   ........           BL       Button
   \   0000010C   02B0               ADD      SP,SP,#+8
   \   0000010E   0128               CMP      R0,#+1
   \   00000110   08D1               BNE      ??NeuronNrChange_Evant_11
   \   00000112   2078               LDRB     R0,[R4, #+0]
   \   00000114   0728               CMP      R0,#+7
   \   00000116   05D2               BCS      ??NeuronNrChange_Evant_11
   \   00000118   2118               ADDS     R1,R4,R0
   \   0000011A   3022               MOVS     R2,#+48
   \   0000011C   0A71               STRB     R2,[R1, #+4]
   \   0000011E   401C               ADDS     R0,R0,#+1
   \   00000120   2070               STRB     R0,[R4, #+0]
   \   00000122   0125               MOVS     R5,#+1
   7772          
   7773                      
   7774                      
   7775                  
   7776                      
   7777                      if (Button("C ",3,4,17,13)==1)
   \                     ??NeuronNrChange_Evant_11:
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0D20               MOVS     R0,#+13
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   1123               MOVS     R3,#+17
   \   0000012C   0422               MOVS     R2,#+4
   \   0000012E   0321               MOVS     R1,#+3
   \   00000130   38A0               ADR      R0,??NeuronNrChange_Evant_0+0x24  ;; 0x43, 0x20, 0x00, 0x00
   \   00000132   ........           BL       Button
   \   00000136   02B0               ADD      SP,SP,#+8
   \   00000138   0128               CMP      R0,#+1
   \   0000013A   09D1               BNE      ??NeuronNrChange_Evant_12
   7778                      {
   7779                        if (VCTT_ill) VCTT_ill--;
   \   0000013C   2078               LDRB     R0,[R4, #+0]
   \   0000013E   0028               CMP      R0,#+0
   \   00000140   01D0               BEQ      ??NeuronNrChange_Evant_13
   \   00000142   401E               SUBS     R0,R0,#+1
   \   00000144   2070               STRB     R0,[R4, #+0]
   7780                        ValueChangeTxtTmp[VCTT_ill]=0;
   \                     ??NeuronNrChange_Evant_13:
   \   00000146   2078               LDRB     R0,[R4, #+0]
   \   00000148   2018               ADDS     R0,R4,R0
   \   0000014A   0021               MOVS     R1,#+0
   \   0000014C   0171               STRB     R1,[R0, #+4]
   7781          
   7782                        Refresh=1;
   \   0000014E   0125               MOVS     R5,#+1
   7783                      }
   7784                    
   7785                  
   7786                      int mnz=1;     
   \                     ??NeuronNrChange_Evant_12:
   \   00000150   0126               MOVS     R6,#+1
   \   00000152   3700               MOVS     R7,R6
   7787                      char prs=0;
   7788          
   7789                      //zapamiêtanie wartoci
   7790                      if ((VCTT_ill==0) || (VCTT_ill>6))
   \   00000154   2078               LDRB     R0,[R4, #+0]
   \   00000156   0028               CMP      R0,#+0
   \   00000158   01D0               BEQ      ??NeuronNrChange_Evant_14
   \   0000015A   0728               CMP      R0,#+7
   \   0000015C   40D3               BCC      ??NeuronNrChange_Evant_5
   7791                      if (Button("Ok ",22,4,38,13)==1)
   \                     ??NeuronNrChange_Evant_14:
   \   0000015E   82B0               SUB      SP,SP,#+8
   \   00000160   0D20               MOVS     R0,#+13
   \   00000162   0090               STR      R0,[SP, #+0]
   \   00000164   2623               MOVS     R3,#+38
   \   00000166   0422               MOVS     R2,#+4
   \   00000168   1621               MOVS     R1,#+22
   \   0000016A   2BA0               ADR      R0,??NeuronNrChange_Evant_0+0x28  ;; "Ok "
   \   0000016C   ........           BL       Button
   \   00000170   02B0               ADD      SP,SP,#+8
   \   00000172   0128               CMP      R0,#+1
   \   00000174   34D1               BNE      ??NeuronNrChange_Evant_5
   7792                      {
   7793                        
   7794          
   7795                          for (char i=0; i<VCTT_ill-prs; i++)
   \   00000176   0020               MOVS     R0,#+0
   \   00000178   0DE0               B        ??NeuronNrChange_Evant_15
   7796                          {
   7797                             ValueTmp+=(ValueChangeTxtTmp[VCTT_ill-i-1]-48)*mnz;
   \                     ??NeuronNrChange_Evant_16:
   \   0000017A   0199               LDR      R1,[SP, #+4]
   \   0000017C   0300               MOVS     R3,R0
   \   0000017E   D21A               SUBS     R2,R2,R3
   \   00000180   A218               ADDS     R2,R4,R2
   \   00000182   D278               LDRB     R2,[R2, #+3]
   \   00000184   303A               SUBS     R2,R2,#+48
   \   00000186   7A43               MULS     R2,R7,R2
   \   00000188   8918               ADDS     R1,R1,R2
   \   0000018A   0191               STR      R1,[SP, #+4]
   7798                             mnz*=10;
   \   0000018C   0A21               MOVS     R1,#+10
   \   0000018E   4F43               MULS     R7,R1,R7
   7799                          }
   \   00000190   401C               ADDS     R0,R0,#+1
   \   00000192   0006               LSLS     R0,R0,#+24
   \   00000194   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Evant_15:
   \   00000196   2278               LDRB     R2,[R4, #+0]
   \   00000198   0100               MOVS     R1,R0
   \   0000019A   9142               CMP      R1,R2
   \   0000019C   EDD3               BCC      ??NeuronNrChange_Evant_16
   7800                          
   7801                         
   7802                          ProgramChange=1;
   \   0000019E   1B4D               LDR      R5,??NeuronNrChange_Evant_0+0x1C  ;; TextToChangeLength
   \   000001A0   3000               MOVS     R0,R6
   \   000001A2   2872               STRB     R0,[R5, #+8]
   7803                          MenuLevel/=10; 
   \   000001A4   A86C               LDR      R0,[R5, #+72]
   \   000001A6   0A21               MOVS     R1,#+10
   \   000001A8   ........           BL       __aeabi_idivmod
   \   000001AC   A864               STR      R0,[R5, #+72]
   7804                           
   7805                          *ValToChange=ValueTmp;
   \   000001AE   0498               LDR      R0,[SP, #+16]
   \   000001B0   0199               LDR      R1,[SP, #+4]
   \   000001B2   0160               STR      R1,[R0, #+0]
   7806                          
   7807                          for (char i=0; i<8; i++) ValueChangeTxtTmp[i]=0;
   \   000001B4   0020               MOVS     R0,#+0
   \   000001B6   0200               MOVS     R2,R0
   \   000001B8   04E0               B        ??NeuronNrChange_Evant_17
   \                     ??NeuronNrChange_Evant_18:
   \   000001BA   6118               ADDS     R1,R4,R1
   \   000001BC   0A71               STRB     R2,[R1, #+4]
   \   000001BE   401C               ADDS     R0,R0,#+1
   \   000001C0   0006               LSLS     R0,R0,#+24
   \   000001C2   000E               LSRS     R0,R0,#+24
   \                     ??NeuronNrChange_Evant_17:
   \   000001C4   0100               MOVS     R1,R0
   \   000001C6   0829               CMP      R1,#+8
   \   000001C8   F7D3               BCC      ??NeuronNrChange_Evant_18
   7808                          ValueTmp=0;
   7809                          VCTT_ill=0;
   \   000001CA   1000               MOVS     R0,R2
   \   000001CC   2070               STRB     R0,[R4, #+0]
   7810                          VCTT_point_flag=0;
   \   000001CE   6070               STRB     R0,[R4, #+1]
   7811                          
   7812                        
   7813                        
   7814                        
   7815                        Refresh=1;
   \   000001D0   3500               MOVS     R5,R6
   7816                        RefreshNeuronsList(&gProg);
   \   000001D2   124C               LDR      R4,??NeuronNrChange_Evant_0+0x2C  ;; gProg
   \   000001D4   2000               MOVS     R0,R4
   \   000001D6   ........           BL       RefreshNeuronsList
   7817                        SetTask(&gProg);
   \   000001DA   2000               MOVS     R0,R4
   \   000001DC   ........           BL       SetTask
   7818                        
   7819                      }
   7820                 
   7821                    
   7822                  }
   7823                  
   7824                  
   7825                  if (Refresh==1) MenuPaint();
   \                     ??NeuronNrChange_Evant_5:
   \   000001E0   012D               CMP      R5,#+1
   \   000001E2   01D1               BNE      ??NeuronNrChange_Evant_19
   \   000001E4   ........           BL       MenuPaint
   7826                  
   7827          }
   \                     ??NeuronNrChange_Evant_19:
   \   000001E8   05B0               ADD      SP,SP,#+20
   \   000001EA   F0BC               POP      {R4-R7}
   \   000001EC   01BC               POP      {R0}
   \   000001EE   0047               BX       R0               ;; return
   \                     ??NeuronNrChange_Evant_0:
   \   000001F0   ........           DC32     X_up
   \   000001F4   ........           DC32     Y_up
   \   000001F8   ........           DC32     VCTT_ill
   \   000001FC   E9D71300           DC32     0x13d7e9
   \   00000200   30F4FFFF           DC32     0xfffff430
   \   00000204   ........           DC32     ButtonBipCounter
   \   00000208   ........           DC32     g_counter
   \   0000020C   ........           DC32     TextToChangeLength
   \   00000210   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000214   43200000           DC8      0x43, 0x20, 0x00, 0x00
   \   00000218   4F6B2000           DC8      "Ok "
   \   0000021C   ........           DC32     gProg
   7828          
   7829          
   7830          
   7831          
   7832          

   \                                 In section Debug.txt, align 4, keep-with-next
   7833          void Info_Paint(void)
   7834          {          
   \                     Info_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   7835                 char txt[8];
   7836                 char labsize;
   7837                 List_Paint("Info ",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000002   644C               LDR      R4,??Info_Paint_0  ;; `?<Constant "Info ">`
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   62A0               ADR      R0,??Info_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   7838          
   7839                 Label("Model: ",0,3,100,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000026   82B0               SUB      SP,SP,#+8
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   8021               MOVS     R1,#+128
   \   0000002E   03B4               PUSH     {R0,R1}
   \   00000030   3A21               MOVS     R1,#+58
   \   00000032   0F20               MOVS     R0,#+15
   \   00000034   03B4               PUSH     {R0,R1}
   \   00000036   6423               MOVS     R3,#+100
   \   00000038   0322               MOVS     R2,#+3
   \   0000003A   0021               MOVS     R1,#+0
   \   0000003C   2000               MOVS     R0,R4
   \   0000003E   3830               ADDS     R0,R0,#+56
   \   00000040   ........           BL       Label
   \   00000044   06B0               ADD      SP,SP,#+24
   7840                 Label((char*)&identyfikacja,0,10,89,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   8021               MOVS     R1,#+128
   \   0000004E   03B4               PUSH     {R0,R1}
   \   00000050   2821               MOVS     R1,#+40
   \   00000052   0F20               MOVS     R0,#+15
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   5923               MOVS     R3,#+89
   \   00000058   0A22               MOVS     R2,#+10
   \   0000005A   0021               MOVS     R1,#+0
   \   0000005C   4F48               LDR      R0,??Info_Paint_0+0x8  ;; identyfikacja
   \   0000005E   ........           BL       Label
   \   00000062   06B0               ADD      SP,SP,#+24
   7841                 H_line(1,85,62,2);      
   \   00000064   0223               MOVS     R3,#+2
   \   00000066   3E22               MOVS     R2,#+62
   \   00000068   5521               MOVS     R1,#+85
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   ........           BL       H_line
   7842                 Label("Node ID: ",0,3,75,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000070   82B0               SUB      SP,SP,#+8
   \   00000072   0020               MOVS     R0,#+0
   \   00000074   0090               STR      R0,[SP, #+0]
   \   00000076   8021               MOVS     R1,#+128
   \   00000078   03B4               PUSH     {R0,R1}
   \   0000007A   3A21               MOVS     R1,#+58
   \   0000007C   0F20               MOVS     R0,#+15
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   4B23               MOVS     R3,#+75
   \   00000082   0322               MOVS     R2,#+3
   \   00000084   0021               MOVS     R1,#+0
   \   00000086   2000               MOVS     R0,R4
   \   00000088   4030               ADDS     R0,R0,#+64
   \   0000008A   ........           BL       Label
   \   0000008E   06B0               ADD      SP,SP,#+24
   7843                 sprintf(txt, "%d",RF_ID_R);
                        ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   00000090   434A               LDR      R2,??Info_Paint_0+0xC  ;; 0x2085b9
   \   00000092   44A1               ADR      R1,??Info_Paint_0+0x10  ;; 0x25, 0x64, 0x00, 0x00
   \   00000094   6846               MOV      R0,SP
   \   00000096   ........           BL       sprintf
   7844                 Label(txt,0,10,64,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   8021               MOVS     R1,#+128
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   2821               MOVS     R1,#+40
   \   000000A6   0F20               MOVS     R0,#+15
   \   000000A8   03B4               PUSH     {R0,R1}
   \   000000AA   4023               MOVS     R3,#+64
   \   000000AC   0A22               MOVS     R2,#+10
   \   000000AE   0021               MOVS     R1,#+0
   \   000000B0   06A8               ADD      R0,SP,#+24
   \   000000B2   ........           BL       Label
   \   000000B6   06B0               ADD      SP,SP,#+24
   7845                 H_line(1,60,62,2);    
   \   000000B8   0223               MOVS     R3,#+2
   \   000000BA   3E22               MOVS     R2,#+62
   \   000000BC   3C21               MOVS     R1,#+60
   \   000000BE   0120               MOVS     R0,#+1
   \   000000C0   ........           BL       H_line
   7846                 Label("Sys. version: ",0,3,50,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   0020               MOVS     R0,#+0
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   8021               MOVS     R1,#+128
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   3A21               MOVS     R1,#+58
   \   000000D0   0F20               MOVS     R0,#+15
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   3223               MOVS     R3,#+50
   \   000000D6   0322               MOVS     R2,#+3
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   2000               MOVS     R0,R4
   \   000000DC   4C30               ADDS     R0,R0,#+76
   \   000000DE   ........           BL       Label
   \   000000E2   06B0               ADD      SP,SP,#+24
   7847                 Label((char*)&system,0,10,39,15,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   0020               MOVS     R0,#+0
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   8021               MOVS     R1,#+128
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   2821               MOVS     R1,#+40
   \   000000F0   0F20               MOVS     R0,#+15
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   2723               MOVS     R3,#+39
   \   000000F6   0A22               MOVS     R2,#+10
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   2B48               LDR      R0,??Info_Paint_0+0x14  ;; system
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   7848                 H_line(1,35,62,2);  
   \   00000102   0223               MOVS     R3,#+2
   \   00000104   3E22               MOVS     R2,#+62
   \   00000106   2321               MOVS     R1,#+35
   \   00000108   0120               MOVS     R0,#+1
   \   0000010A   ........           BL       H_line
   7849                 Label("Trans. period: ",0,3,25,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000010E   82B0               SUB      SP,SP,#+8
   \   00000110   0020               MOVS     R0,#+0
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   8021               MOVS     R1,#+128
   \   00000116   03B4               PUSH     {R0,R1}
   \   00000118   3A21               MOVS     R1,#+58
   \   0000011A   0F20               MOVS     R0,#+15
   \   0000011C   03B4               PUSH     {R0,R1}
   \   0000011E   1923               MOVS     R3,#+25
   \   00000120   0322               MOVS     R2,#+3
   \   00000122   0021               MOVS     R1,#+0
   \   00000124   5C34               ADDS     R4,R4,#+92
   \   00000126   2000               MOVS     R0,R4
   \   00000128   ........           BL       Label
   \   0000012C   06B0               ADD      SP,SP,#+24
   7850                 //labsize=sIntToStr(RF_Period*10,txt);
   7851                 labsize=sIntToStr((10000/(CyklPerSek)),txt);
   \   0000012E   6946               MOV      R1,SP
   \   00000130   0C00               MOVS     R4,R1
   \   00000132   1E48               LDR      R0,??Info_Paint_0+0x18  ;; 0x2710
   \   00000134   1E49               LDR      R1,??Info_Paint_0+0x1C  ;; CyklPerSek
   \   00000136   0968               LDR      R1,[R1, #+0]
   \   00000138   ........           BL       __aeabi_uidivmod
   \   0000013C   2100               MOVS     R1,R4
   \   0000013E   0004               LSLS     R0,R0,#+16
   \   00000140   0014               ASRS     R0,R0,#+16
   \   00000142   ........           BL       sIntToStr
   \   00000146   0200               MOVS     R2,R0
   7852                 txt[labsize++]='m'; txt[labsize++]='s';
   \   00000148   6846               MOV      R0,SP
   \   0000014A   1100               MOVS     R1,R2
   \   0000014C   6D23               MOVS     R3,#+109
   \   0000014E   4354               STRB     R3,[R0, R1]
   \   00000150   521C               ADDS     R2,R2,#+1
   \   00000152   1206               LSLS     R2,R2,#+24
   \   00000154   120E               LSRS     R2,R2,#+24
   \   00000156   1100               MOVS     R1,R2
   \   00000158   7323               MOVS     R3,#+115
   \   0000015A   4354               STRB     R3,[R0, R1]
   7853                 Label(txt,0,10,14,labsize,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000015C   82B0               SUB      SP,SP,#+8
   \   0000015E   0020               MOVS     R0,#+0
   \   00000160   0090               STR      R0,[SP, #+0]
   \   00000162   8021               MOVS     R1,#+128
   \   00000164   03B4               PUSH     {R0,R1}
   \   00000166   2821               MOVS     R1,#+40
   \   00000168   521C               ADDS     R2,R2,#+1
   \   0000016A   1000               MOVS     R0,R2
   \   0000016C   0006               LSLS     R0,R0,#+24
   \   0000016E   000E               LSRS     R0,R0,#+24
   \   00000170   03B4               PUSH     {R0,R1}
   \   00000172   0E23               MOVS     R3,#+14
   \   00000174   0A22               MOVS     R2,#+10
   \   00000176   0021               MOVS     R1,#+0
   \   00000178   06A8               ADD      R0,SP,#+24
   \   0000017A   ........           BL       Label
   \   0000017E   06B0               ADD      SP,SP,#+24
   7854                 H_line(1,10,62,2);  
   \   00000180   0223               MOVS     R3,#+2
   \   00000182   3E22               MOVS     R2,#+62
   \   00000184   0A21               MOVS     R1,#+10
   \   00000186   0120               MOVS     R0,#+1
   \   00000188   ........           BL       H_line
   7855                 
   7856            
   7857                 
   7858          }//________________________________________________________________________
   \   0000018C   1CBC               POP      {R2-R4}
   \   0000018E   01BC               POP      {R0}
   \   00000190   0047               BX       R0               ;; return
   \   00000192   C046               Nop      
   \                     ??Info_Paint_0:
   \   00000194   ........           DC32     `?<Constant "Info ">`
   \   00000198   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000019C   ........           DC32     identyfikacja
   \   000001A0   B9852000           DC32     0x2085b9
   \   000001A4   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000001A8   ........           DC32     system
   \   000001AC   10270000           DC32     0x2710
   \   000001B0   ........           DC32     CyklPerSek
   7859          
   7860              
   7861          
   7862          

   \                                 In section Debug.txt, align 4, keep-with-next
   7863          void Info_Refresh(void)
   7864          {          
   \                     Info_Refresh:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   7865            static int IRdiv; 
   7866            
   7867            if (IRdiv<20) {IRdiv++;} else {
   \   00000002   1A48               LDR      R0,??Info_Refresh_0  ;; ??IRdiv
   \   00000004   0168               LDR      R1,[R0, #+0]
   \   00000006   1429               CMP      R1,#+20
   \   00000008   02DA               BGE      ??Info_Refresh_1
   \   0000000A   491C               ADDS     R1,R1,#+1
   \   0000000C   0160               STR      R1,[R0, #+0]
   \   0000000E   2AE0               B        ??Info_Refresh_2
   7868                 IRdiv=0;
   \                     ??Info_Refresh_1:
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0160               STR      R1,[R0, #+0]
   7869                 char txt[8];
   7870                 char labsize;
   7871          
   7872                labsize=sIntToStr((10000/(CyklPerSek)),txt); 
   \   00000014   6946               MOV      R1,SP
   \   00000016   0C00               MOVS     R4,R1
   \   00000018   1548               LDR      R0,??Info_Refresh_0+0x4  ;; 0x2710
   \   0000001A   1649               LDR      R1,??Info_Refresh_0+0x8  ;; CyklPerSek
   \   0000001C   0968               LDR      R1,[R1, #+0]
   \   0000001E   ........           BL       __aeabi_uidivmod
   \   00000022   2100               MOVS     R1,R4
   \   00000024   0004               LSLS     R0,R0,#+16
   \   00000026   0014               ASRS     R0,R0,#+16
   \   00000028   ........           BL       sIntToStr
   \   0000002C   0200               MOVS     R2,R0
   7873                 
   7874                 txt[labsize++]='m'; txt[labsize++]='s';
   \   0000002E   6846               MOV      R0,SP
   \   00000030   1100               MOVS     R1,R2
   \   00000032   6D23               MOVS     R3,#+109
   \   00000034   4354               STRB     R3,[R0, R1]
   \   00000036   521C               ADDS     R2,R2,#+1
   \   00000038   1206               LSLS     R2,R2,#+24
   \   0000003A   120E               LSRS     R2,R2,#+24
   \   0000003C   1100               MOVS     R1,R2
   \   0000003E   7323               MOVS     R3,#+115
   \   00000040   4354               STRB     R3,[R0, R1]
   7875                 Label(txt,0,10,14,labsize,40,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000042   82B0               SUB      SP,SP,#+8
   \   00000044   0020               MOVS     R0,#+0
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   8021               MOVS     R1,#+128
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   2821               MOVS     R1,#+40
   \   0000004E   521C               ADDS     R2,R2,#+1
   \   00000050   1000               MOVS     R0,R2
   \   00000052   0006               LSLS     R0,R0,#+24
   \   00000054   000E               LSRS     R0,R0,#+24
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   0E23               MOVS     R3,#+14
   \   0000005A   0A22               MOVS     R2,#+10
   \   0000005C   0021               MOVS     R1,#+0
   \   0000005E   06A8               ADD      R0,SP,#+24
   \   00000060   ........           BL       Label
   \   00000064   06B0               ADD      SP,SP,#+24
   7876            }
   7877          }//________________________________________________________________________
   \                     ??Info_Refresh_2:
   \   00000066   1CBC               POP      {R2-R4}
   \   00000068   01BC               POP      {R0}
   \   0000006A   0047               BX       R0               ;; return
   \                     ??Info_Refresh_0:
   \   0000006C   ........           DC32     ??IRdiv
   \   00000070   10270000           DC32     0x2710
   \   00000074   ........           DC32     CyklPerSek

   \                                 In section .bss, align 4
   \                     ??IRdiv:
   \   00000000                      DS8 4
   7878          
   7879          
   7880          
   7881          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7882          void Info_Event(void)
   7883                {
   \                     Info_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   7884                  if ((X_up>46) && (X_up<63) && (Y_up>112) && (Y_up<127))                    //"X"
   \   00000002   0C48               LDR      R0,??Info_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   405E               LDRSH    R0,[R0, R1]
   \   00000008   2F28               CMP      R0,#+47
   \   0000000A   0FDB               BLT      ??Info_Event_1
   \   0000000C   3F28               CMP      R0,#+63
   \   0000000E   0DDA               BGE      ??Info_Event_1
   \   00000010   0948               LDR      R0,??Info_Event_0+0x4  ;; Y_up
   \   00000012   405E               LDRSH    R0,[R0, R1]
   \   00000014   7128               CMP      R0,#+113
   \   00000016   09DB               BLT      ??Info_Event_1
   \   00000018   7F28               CMP      R0,#+127
   \   0000001A   07DA               BGE      ??Info_Event_1
   7885                  {
   7886                    MenuLevel=(MenuLevel/10);
   \   0000001C   074C               LDR      R4,??Info_Event_0+0x8  ;; TextToChangeLength
   \   0000001E   A06C               LDR      R0,[R4, #+72]
   \   00000020   0A21               MOVS     R1,#+10
   \   00000022   ........           BL       __aeabi_idivmod
   \   00000026   A064               STR      R0,[R4, #+72]
   7887                    MenuPaint();
   \   00000028   ........           BL       MenuPaint
   7888                  }  
   7889          
   7890          }//________________________________________________________________________
   \                     ??Info_Event_1:
   \   0000002C   10BC               POP      {R4}
   \   0000002E   01BC               POP      {R0}
   \   00000030   0047               BX       R0               ;; return
   \   00000032   C046               Nop      
   \                     ??Info_Event_0:
   \   00000034   ........           DC32     X_up
   \   00000038   ........           DC32     Y_up
   \   0000003C   ........           DC32     TextToChangeLength
   7891              
   7892          
   7893          
   7894          
   7895          
   7896          

   \                                 In section Debug.txt, align 4, keep-with-next
   7897          void ThermostatAutoSet_Paint(_Screen* Screen)
   7898          {          
   \                     ThermostatAutoSet_Paint:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   7899                 List_Paint("Thermo",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   C1A0               ADR      R0,??ThermostatAutoSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   BE48               LDR      R0,??ThermostatAutoSet_Paint_0+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   7900          
   7901                 //Label("Model: ",0,3,100,15,58,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   7902                char txt[5]; txt[1]=0; 
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   6E46               MOV      R6,SP
   \   0000002A   2800               MOVS     R0,R5
   \   0000002C   7070               STRB     R0,[R6, #+1]
   \   0000002E   1F20               MOVS     R0,#+31
   \   00000030   3070               STRB     R0,[R6, #+0]
   7903                txt[0]=31;//dó³ 
   7904                Button(txt,2,89,18,18);
   \   00000032   82B0               SUB      SP,SP,#+8
   \   00000034   1220               MOVS     R0,#+18
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   0300               MOVS     R3,R0
   \   0000003A   5922               MOVS     R2,#+89
   \   0000003C   0221               MOVS     R1,#+2
   \   0000003E   02A8               ADD      R0,SP,#+8
   \   00000040   ........           BL       Button
   \   00000044   02B0               ADD      SP,SP,#+8
   7905                txt[1]=0; txt[0]=30;//góra 
   \   00000046   2800               MOVS     R0,R5
   \   00000048   7070               STRB     R0,[R6, #+1]
   \   0000004A   1E20               MOVS     R0,#+30
   \   0000004C   3070               STRB     R0,[R6, #+0]
   7906                Button(txt,43,89,18,18);
   \   0000004E   82B0               SUB      SP,SP,#+8
   \   00000050   1220               MOVS     R0,#+18
   \   00000052   0090               STR      R0,[SP, #+0]
   \   00000054   0300               MOVS     R3,R0
   \   00000056   5922               MOVS     R2,#+89
   \   00000058   2B21               MOVS     R1,#+43
   \   0000005A   02A8               ADD      R0,SP,#+8
   \   0000005C   ........           BL       Button
   \   00000060   02B0               ADD      SP,SP,#+8
   7907                Label("T1",2,20,98,2,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   2800               MOVS     R0,R5
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   8021               MOVS     R1,#+128
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   1521               MOVS     R1,#+21
   \   0000006E   0220               MOVS     R0,#+2
   \   00000070   03B4               PUSH     {R0,R1}
   \   00000072   6223               MOVS     R3,#+98
   \   00000074   1422               MOVS     R2,#+20
   \   00000076   0100               MOVS     R1,R0
   \   00000078   EAA0               ADR      R0,??ThermostatAutoSet_Paint_1  ;; 0x54, 0x31, 0x00, 0x00
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
   7908                
   7909                sIntToStr(Screen->Thermo.Temperature[0],txt); 
   \   00000080   2700               MOVS     R7,R4
   \   00000082   9237               ADDS     R7,R7,#+146
   \   00000084   6946               MOV      R1,SP
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   385E               LDRSH    R0,[R7, R0]
   \   0000008A   ........           BL       sIntToStr
   7910                Label(txt,2,20,89,4,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)        
   \   0000008E   82B0               SUB      SP,SP,#+8
   \   00000090   2800               MOVS     R0,R5
   \   00000092   0090               STR      R0,[SP, #+0]
   \   00000094   8021               MOVS     R1,#+128
   \   00000096   03B4               PUSH     {R0,R1}
   \   00000098   1521               MOVS     R1,#+21
   \   0000009A   0420               MOVS     R0,#+4
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   5923               MOVS     R3,#+89
   \   000000A0   1422               MOVS     R2,#+20
   \   000000A2   0221               MOVS     R1,#+2
   \   000000A4   06A8               ADD      R0,SP,#+24
   \   000000A6   ........           BL       Label
   \   000000AA   06B0               ADD      SP,SP,#+24
   7911                
   7912          
   7913                
   7914                
   7915                txt[1]=0; txt[0]=31;//dó³
   \   000000AC   2800               MOVS     R0,R5
   \   000000AE   7070               STRB     R0,[R6, #+1]
   \   000000B0   1F20               MOVS     R0,#+31
   \   000000B2   3070               STRB     R0,[R6, #+0]
   7916                Button(txt,2,69,18,18);
   \   000000B4   82B0               SUB      SP,SP,#+8
   \   000000B6   1220               MOVS     R0,#+18
   \   000000B8   0090               STR      R0,[SP, #+0]
   \   000000BA   0300               MOVS     R3,R0
   \   000000BC   4522               MOVS     R2,#+69
   \   000000BE   0221               MOVS     R1,#+2
   \   000000C0   02A8               ADD      R0,SP,#+8
   \   000000C2   ........           BL       Button
   \   000000C6   02B0               ADD      SP,SP,#+8
   7917                txt[1]=0; txt[0]=30;//góra 
   \   000000C8   2800               MOVS     R0,R5
   \   000000CA   7070               STRB     R0,[R6, #+1]
   \   000000CC   1E20               MOVS     R0,#+30
   \   000000CE   3070               STRB     R0,[R6, #+0]
   7918                Button(txt,43,69,18,18);
   \   000000D0   82B0               SUB      SP,SP,#+8
   \   000000D2   1220               MOVS     R0,#+18
   \   000000D4   0090               STR      R0,[SP, #+0]
   \   000000D6   0300               MOVS     R3,R0
   \   000000D8   4522               MOVS     R2,#+69
   \   000000DA   2B21               MOVS     R1,#+43
   \   000000DC   02A8               ADD      R0,SP,#+8
   \   000000DE   ........           BL       Button
   \   000000E2   02B0               ADD      SP,SP,#+8
   7919                Label("T2",2,20,78,2,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   2800               MOVS     R0,R5
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   8021               MOVS     R1,#+128
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   1521               MOVS     R1,#+21
   \   000000F0   0220               MOVS     R0,#+2
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   4E23               MOVS     R3,#+78
   \   000000F6   1422               MOVS     R2,#+20
   \   000000F8   0100               MOVS     R1,R0
   \   000000FA   CBA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x4  ;; 0x54, 0x32, 0x00, 0x00
   \   000000FC   ........           BL       Label
   \   00000100   06B0               ADD      SP,SP,#+24
   7920                sIntToStr(Screen->Thermo.Temperature[1],txt); 
   \   00000102   6946               MOV      R1,SP
   \   00000104   0220               MOVS     R0,#+2
   \   00000106   385E               LDRSH    R0,[R7, R0]
   \   00000108   ........           BL       sIntToStr
   7921                Label(txt,2,20,69,4,21,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000010C   82B0               SUB      SP,SP,#+8
   \   0000010E   2800               MOVS     R0,R5
   \   00000110   0090               STR      R0,[SP, #+0]
   \   00000112   8021               MOVS     R1,#+128
   \   00000114   03B4               PUSH     {R0,R1}
   \   00000116   1521               MOVS     R1,#+21
   \   00000118   0420               MOVS     R0,#+4
   \   0000011A   03B4               PUSH     {R0,R1}
   \   0000011C   4523               MOVS     R3,#+69
   \   0000011E   1422               MOVS     R2,#+20
   \   00000120   0221               MOVS     R1,#+2
   \   00000122   06A8               ADD      R0,SP,#+24
   \   00000124   ........           BL       Label
   \   00000128   06B0               ADD      SP,SP,#+24
   7922                 
   7923                
   7924                
   7925                
   7926                char Ychart=54;
   7927                
   7928                H_line(1,Ychart+12,62,1);  
   \   0000012A   0123               MOVS     R3,#+1
   \   0000012C   3E22               MOVS     R2,#+62
   \   0000012E   4221               MOVS     R1,#+66
   \   00000130   1800               MOVS     R0,R3
   \   00000132   ........           BL       H_line
   7929                H_line(1,Ychart+11,62,1);  
   \   00000136   0123               MOVS     R3,#+1
   \   00000138   3E22               MOVS     R2,#+62
   \   0000013A   4121               MOVS     R1,#+65
   \   0000013C   1800               MOVS     R0,R3
   \   0000013E   ........           BL       H_line
   7930             
   7931                
   7932          
   7933                
   7934                for (char i=0; i<7; i++)
   \   00000142   2E00               MOVS     R6,R5
   \   00000144   27E0               B        ??ThermostatAutoSet_Paint_2
   7935                {
   7936                  Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart+2,1,6,0,128,((Screen->Thermo.Week>>i) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatAutoSet_Paint_3:
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   9120               MOVS     R0,#+145
   \   0000014A   205C               LDRB     R0,[R4, R0]
   \   0000014C   3041               ASRS     R0,R0,R6
   \   0000014E   0121               MOVS     R1,#+1
   \   00000150   0140               ANDS     R1,R1,R0
   \   00000152   0091               STR      R1,[SP, #+0]
   \   00000154   8021               MOVS     R1,#+128
   \   00000156   2800               MOVS     R0,R5
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   0621               MOVS     R1,#+6
   \   0000015C   0120               MOVS     R0,#+1
   \   0000015E   03B4               PUSH     {R0,R1}
   \   00000160   3823               MOVS     R3,#+56
   \   00000162   F200               LSLS     R2,R6,#+3
   \   00000164   121D               ADDS     R2,R2,#+4
   \   00000166   1206               LSLS     R2,R2,#+24
   \   00000168   120E               LSRS     R2,R2,#+24
   \   0000016A   0221               MOVS     R1,#+2
   \   0000016C   02B5               PUSH     {R1,LR}
   \   0000016E   9446               MOV      R12,R2
   \   00000170   AE49               LDR      R1,??ThermostatAutoSet_Paint_1+0x8  ;; 0x6db
   \   00000172   3200               MOVS     R2,R6
   \   00000174   AE48               LDR      R0,??ThermostatAutoSet_Paint_1+0xC  ;; g_leng
   \   00000176   0068               LDR      R0,[R0, #+0]
   \   00000178   AE4F               LDR      R7,??ThermostatAutoSet_Paint_1+0x10  ;; 0xa14
   \   0000017A   7843               MULS     R0,R7,R0
   \   0000017C   AE4F               LDR      R7,??ThermostatAutoSet_Paint_1+0x14  ;; Speech
   \   0000017E   3818               ADDS     R0,R7,R0
   \   00000180   8018               ADDS     R0,R0,R2
   \   00000182   4018               ADDS     R0,R0,R1
   \   00000184   6246               MOV      R2,R12
   \   00000186   0099               LDR      R1,[SP, #0]
   \   00000188   02B0               ADD      SP,SP,#+8
   \   0000018A   ........           BL       Label
   \   0000018E   06B0               ADD      SP,SP,#+24
   7937                }
   \   00000190   761C               ADDS     R6,R6,#+1
   \   00000192   3606               LSLS     R6,R6,#+24
   \   00000194   360E               LSRS     R6,R6,#+24
   \                     ??ThermostatAutoSet_Paint_2:
   \   00000196   3000               MOVS     R0,R6
   \   00000198   0728               CMP      R0,#+7
   \   0000019A   D4D3               BCC      ??ThermostatAutoSet_Paint_3
   7938                
   7939                
   7940                for (char i=0; i<24; i++)
   \   0000019C   2E00               MOVS     R6,R5
   \   0000019E   13E0               B        ??ThermostatAutoSet_Paint_4
   7941                {
   7942                   V_line(8+(i*2),Ychart-7,4+((Screen->Thermo.Chart[0]>>i) & 0x1 )*2,1);  
   \                     ??ThermostatAutoSet_Paint_5:
   \   000001A0   0123               MOVS     R3,#+1
   \   000001A2   9820               MOVS     R0,#+152
   \   000001A4   2058               LDR      R0,[R4, R0]
   \   000001A6   F040               LSRS     R0,R0,R6
   \   000001A8   1900               MOVS     R1,R3
   \   000001AA   0140               ANDS     R1,R1,R0
   \   000001AC   4A00               LSLS     R2,R1,#+1
   \   000001AE   121D               ADDS     R2,R2,#+4
   \   000001B0   1206               LSLS     R2,R2,#+24
   \   000001B2   120E               LSRS     R2,R2,#+24
   \   000001B4   2F21               MOVS     R1,#+47
   \   000001B6   7000               LSLS     R0,R6,#+1
   \   000001B8   0830               ADDS     R0,R0,#+8
   \   000001BA   0006               LSLS     R0,R0,#+24
   \   000001BC   000E               LSRS     R0,R0,#+24
   \   000001BE   ........           BL       V_line
   7943                }
   \   000001C2   761C               ADDS     R6,R6,#+1
   \   000001C4   3606               LSLS     R6,R6,#+24
   \   000001C6   360E               LSRS     R6,R6,#+24
   \                     ??ThermostatAutoSet_Paint_4:
   \   000001C8   3000               MOVS     R0,R6
   \   000001CA   1828               CMP      R0,#+24
   \   000001CC   E8D3               BCC      ??ThermostatAutoSet_Paint_5
   \   000001CE   82B0               SUB      SP,SP,#+8
   \   000001D0   2800               MOVS     R0,R5
   \   000001D2   0090               STR      R0,[SP, #+0]
   \   000001D4   8021               MOVS     R1,#+128
   \   000001D6   03B4               PUSH     {R0,R1}
   \   000001D8   0521               MOVS     R1,#+5
   \   000001DA   0120               MOVS     R0,#+1
   \   000001DC   03B4               PUSH     {R0,R1}
   \   000001DE   2523               MOVS     R3,#+37
   \   000001E0   0622               MOVS     R2,#+6
   \   000001E2   2900               MOVS     R1,R5
   \   000001E4   95A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x18  ;; 0x30, 0x00, 0x00, 0x00
   7944                
   7945          
   7946                
   7947                Label("0",0,4+1*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000001E6   ........           BL       Label
   \   000001EA   06B0               ADD      SP,SP,#+24
   7948                V_line(6+1*2,Ychart-9,1,1); 
   \   000001EC   0123               MOVS     R3,#+1
   \   000001EE   1A00               MOVS     R2,R3
   \   000001F0   2D21               MOVS     R1,#+45
   \   000001F2   0820               MOVS     R0,#+8
   \   000001F4   ........           BL       V_line
   \   000001F8   82B0               SUB      SP,SP,#+8
   \   000001FA   2800               MOVS     R0,R5
   \   000001FC   0090               STR      R0,[SP, #+0]
   \   000001FE   8021               MOVS     R1,#+128
   \   00000200   03B4               PUSH     {R0,R1}
   \   00000202   0521               MOVS     R1,#+5
   \   00000204   0120               MOVS     R0,#+1
   \   00000206   03B4               PUSH     {R0,R1}
   \   00000208   2523               MOVS     R3,#+37
   \   0000020A   1222               MOVS     R2,#+18
   \   0000020C   2900               MOVS     R1,R5
   \   0000020E   8CA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x1C  ;; 0x36, 0x00, 0x00, 0x00
   7949                Label("6",0,6+6*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000210   ........           BL       Label
   \   00000214   06B0               ADD      SP,SP,#+24
   7950                V_line(6+6*2,Ychart-9,1,1); 
   \   00000216   0123               MOVS     R3,#+1
   \   00000218   1A00               MOVS     R2,R3
   \   0000021A   2D21               MOVS     R1,#+45
   \   0000021C   1220               MOVS     R0,#+18
   \   0000021E   ........           BL       V_line
   \   00000222   82B0               SUB      SP,SP,#+8
   \   00000224   2800               MOVS     R0,R5
   \   00000226   0090               STR      R0,[SP, #+0]
   \   00000228   8021               MOVS     R1,#+128
   \   0000022A   03B4               PUSH     {R0,R1}
   \   0000022C   0521               MOVS     R1,#+5
   \   0000022E   0220               MOVS     R0,#+2
   \   00000230   03B4               PUSH     {R0,R1}
   \   00000232   2523               MOVS     R3,#+37
   \   00000234   1C22               MOVS     R2,#+28
   \   00000236   2900               MOVS     R1,R5
   \   00000238   82A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x20  ;; 0x31, 0x32, 0x00, 0x00
   7951                Label("12",0,4+12*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000023A   ........           BL       Label
   \   0000023E   06B0               ADD      SP,SP,#+24
   7952                V_line(6+12*2,Ychart-9,1,1); 
   \   00000240   0123               MOVS     R3,#+1
   \   00000242   1A00               MOVS     R2,R3
   \   00000244   2D21               MOVS     R1,#+45
   \   00000246   1E20               MOVS     R0,#+30
   \   00000248   ........           BL       V_line
   \   0000024C   82B0               SUB      SP,SP,#+8
   \   0000024E   2800               MOVS     R0,R5
   \   00000250   0090               STR      R0,[SP, #+0]
   \   00000252   8021               MOVS     R1,#+128
   \   00000254   03B4               PUSH     {R0,R1}
   \   00000256   0521               MOVS     R1,#+5
   \   00000258   0220               MOVS     R0,#+2
   \   0000025A   03B4               PUSH     {R0,R1}
   \   0000025C   2523               MOVS     R3,#+37
   \   0000025E   2822               MOVS     R2,#+40
   \   00000260   2900               MOVS     R1,R5
   \   00000262   79A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x24  ;; 0x31, 0x38, 0x00, 0x00
   7953                Label("18",0,4+18*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000264   ........           BL       Label
   \   00000268   06B0               ADD      SP,SP,#+24
   7954                V_line(6+18*2,Ychart-9,1,1); 
   \   0000026A   0123               MOVS     R3,#+1
   \   0000026C   1A00               MOVS     R2,R3
   \   0000026E   2D21               MOVS     R1,#+45
   \   00000270   2A20               MOVS     R0,#+42
   \   00000272   ........           BL       V_line
   \   00000276   82B0               SUB      SP,SP,#+8
   \   00000278   2800               MOVS     R0,R5
   \   0000027A   0090               STR      R0,[SP, #+0]
   \   0000027C   8021               MOVS     R1,#+128
   \   0000027E   03B4               PUSH     {R0,R1}
   \   00000280   0521               MOVS     R1,#+5
   \   00000282   0220               MOVS     R0,#+2
   \   00000284   03B4               PUSH     {R0,R1}
   \   00000286   2523               MOVS     R3,#+37
   \   00000288   3222               MOVS     R2,#+50
   \   0000028A   2900               MOVS     R1,R5
   \   0000028C   6FA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x28  ;; 0x32, 0x33, 0x00, 0x00
   7955                Label("23",0,2+24*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000028E   ........           BL       Label
   \   00000292   06B0               ADD      SP,SP,#+24
   7956                V_line(6+24*2,Ychart-9,1,1);             
   \   00000294   0123               MOVS     R3,#+1
   \   00000296   1A00               MOVS     R2,R3
   \   00000298   2D21               MOVS     R1,#+45
   \   0000029A   3620               MOVS     R0,#+54
   \   0000029C   ........           BL       V_line
   7957                
   7958                
   7959                Ychart=21;
   7960                H_line(1,Ychart+12,62,1); 
   \   000002A0   0123               MOVS     R3,#+1
   \   000002A2   3E22               MOVS     R2,#+62
   \   000002A4   2121               MOVS     R1,#+33
   \   000002A6   1800               MOVS     R0,R3
   \   000002A8   ........           BL       H_line
   7961                 H_line(1,Ychart+11,62,1);  
   \   000002AC   0123               MOVS     R3,#+1
   \   000002AE   3E22               MOVS     R2,#+62
   \   000002B0   2021               MOVS     R1,#+32
   \   000002B2   1800               MOVS     R0,R3
   \   000002B4   ........           BL       H_line
   7962                
   7963                for (char i=0; i<7; i++)
   \   000002B8   2E00               MOVS     R6,R5
   \   000002BA   27E0               B        ??ThermostatAutoSet_Paint_6
   7964                {
   7965                  Label(&(Speech[g_leng].PWSCPSN[i]),2,4+i*8,Ychart+2,1,6,0,128,((~(Screen->Thermo.Week>>i)) &0x1));//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatAutoSet_Paint_7:
   \   000002BC   82B0               SUB      SP,SP,#+8
   \   000002BE   9120               MOVS     R0,#+145
   \   000002C0   205C               LDRB     R0,[R4, R0]
   \   000002C2   3041               ASRS     R0,R0,R6
   \   000002C4   0121               MOVS     R1,#+1
   \   000002C6   8143               BICS     R1,R1,R0
   \   000002C8   0091               STR      R1,[SP, #+0]
   \   000002CA   8021               MOVS     R1,#+128
   \   000002CC   2800               MOVS     R0,R5
   \   000002CE   03B4               PUSH     {R0,R1}
   \   000002D0   0621               MOVS     R1,#+6
   \   000002D2   0120               MOVS     R0,#+1
   \   000002D4   03B4               PUSH     {R0,R1}
   \   000002D6   1723               MOVS     R3,#+23
   \   000002D8   F200               LSLS     R2,R6,#+3
   \   000002DA   121D               ADDS     R2,R2,#+4
   \   000002DC   1206               LSLS     R2,R2,#+24
   \   000002DE   120E               LSRS     R2,R2,#+24
   \   000002E0   0221               MOVS     R1,#+2
   \   000002E2   02B5               PUSH     {R1,LR}
   \   000002E4   9446               MOV      R12,R2
   \   000002E6   5149               LDR      R1,??ThermostatAutoSet_Paint_1+0x8  ;; 0x6db
   \   000002E8   3200               MOVS     R2,R6
   \   000002EA   5148               LDR      R0,??ThermostatAutoSet_Paint_1+0xC  ;; g_leng
   \   000002EC   0068               LDR      R0,[R0, #+0]
   \   000002EE   514F               LDR      R7,??ThermostatAutoSet_Paint_1+0x10  ;; 0xa14
   \   000002F0   7843               MULS     R0,R7,R0
   \   000002F2   514F               LDR      R7,??ThermostatAutoSet_Paint_1+0x14  ;; Speech
   \   000002F4   3818               ADDS     R0,R7,R0
   \   000002F6   8018               ADDS     R0,R0,R2
   \   000002F8   4018               ADDS     R0,R0,R1
   \   000002FA   6246               MOV      R2,R12
   \   000002FC   0099               LDR      R1,[SP, #0]
   \   000002FE   02B0               ADD      SP,SP,#+8
   \   00000300   ........           BL       Label
   \   00000304   06B0               ADD      SP,SP,#+24
   7966                } 
   \   00000306   761C               ADDS     R6,R6,#+1
   \   00000308   3606               LSLS     R6,R6,#+24
   \   0000030A   360E               LSRS     R6,R6,#+24
   \                     ??ThermostatAutoSet_Paint_6:
   \   0000030C   3000               MOVS     R0,R6
   \   0000030E   0728               CMP      R0,#+7
   \   00000310   D4D3               BCC      ??ThermostatAutoSet_Paint_7
   7967                 
   7968                for (char i=0; i<24; i++)
   \   00000312   18E0               B        ??ThermostatAutoSet_Paint_8
   \                     ??ThermostatAutoSet_Paint_0:
   \   00000314   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000318   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   7969                {
   7970                   V_line(8+(i*2),Ychart-7,4+((Screen->Thermo.Chart[1]>>i) & 0x1 )*2,1);  
   \                     ??ThermostatAutoSet_Paint_9:
   \   0000031C   0123               MOVS     R3,#+1
   \   0000031E   2000               MOVS     R0,R4
   \   00000320   9830               ADDS     R0,R0,#+152
   \   00000322   4068               LDR      R0,[R0, #+4]
   \   00000324   E840               LSRS     R0,R0,R5
   \   00000326   1900               MOVS     R1,R3
   \   00000328   0140               ANDS     R1,R1,R0
   \   0000032A   4A00               LSLS     R2,R1,#+1
   \   0000032C   121D               ADDS     R2,R2,#+4
   \   0000032E   1206               LSLS     R2,R2,#+24
   \   00000330   120E               LSRS     R2,R2,#+24
   \   00000332   0E21               MOVS     R1,#+14
   \   00000334   6800               LSLS     R0,R5,#+1
   \   00000336   0830               ADDS     R0,R0,#+8
   \   00000338   0006               LSLS     R0,R0,#+24
   \   0000033A   000E               LSRS     R0,R0,#+24
   \   0000033C   ........           BL       V_line
   7971                }
   \   00000340   6D1C               ADDS     R5,R5,#+1
   \   00000342   2D06               LSLS     R5,R5,#+24
   \   00000344   2D0E               LSRS     R5,R5,#+24
   \                     ??ThermostatAutoSet_Paint_8:
   \   00000346   2800               MOVS     R0,R5
   \   00000348   1828               CMP      R0,#+24
   \   0000034A   E7D3               BCC      ??ThermostatAutoSet_Paint_9
   7972                
   7973                Label("0",0,4+1*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000034C   82B0               SUB      SP,SP,#+8
   \   0000034E   0020               MOVS     R0,#+0
   \   00000350   0090               STR      R0,[SP, #+0]
   \   00000352   8021               MOVS     R1,#+128
   \   00000354   03B4               PUSH     {R0,R1}
   \   00000356   0521               MOVS     R1,#+5
   \   00000358   0120               MOVS     R0,#+1
   \   0000035A   03B4               PUSH     {R0,R1}
   \   0000035C   0423               MOVS     R3,#+4
   \   0000035E   0622               MOVS     R2,#+6
   \   00000360   0021               MOVS     R1,#+0
   \   00000362   36A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x18  ;; 0x30, 0x00, 0x00, 0x00
   \   00000364   ........           BL       Label
   \   00000368   06B0               ADD      SP,SP,#+24
   7974                V_line(6+1*2,Ychart-9,1,1); 
   \   0000036A   0123               MOVS     R3,#+1
   \   0000036C   1A00               MOVS     R2,R3
   \   0000036E   0C21               MOVS     R1,#+12
   \   00000370   0820               MOVS     R0,#+8
   \   00000372   ........           BL       V_line
   7975                Label("6",0,6+6*2,Ychart-17,1,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000376   82B0               SUB      SP,SP,#+8
   \   00000378   0020               MOVS     R0,#+0
   \   0000037A   0090               STR      R0,[SP, #+0]
   \   0000037C   8021               MOVS     R1,#+128
   \   0000037E   03B4               PUSH     {R0,R1}
   \   00000380   0521               MOVS     R1,#+5
   \   00000382   0120               MOVS     R0,#+1
   \   00000384   03B4               PUSH     {R0,R1}
   \   00000386   0423               MOVS     R3,#+4
   \   00000388   1222               MOVS     R2,#+18
   \   0000038A   0021               MOVS     R1,#+0
   \   0000038C   2CA0               ADR      R0,??ThermostatAutoSet_Paint_1+0x1C  ;; 0x36, 0x00, 0x00, 0x00
   \   0000038E   ........           BL       Label
   \   00000392   06B0               ADD      SP,SP,#+24
   7976                V_line(6+6*2,Ychart-9,1,1); 
   \   00000394   0123               MOVS     R3,#+1
   \   00000396   1A00               MOVS     R2,R3
   \   00000398   0C21               MOVS     R1,#+12
   \   0000039A   1220               MOVS     R0,#+18
   \   0000039C   ........           BL       V_line
   7977                Label("12",0,4+12*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003A0   82B0               SUB      SP,SP,#+8
   \   000003A2   0020               MOVS     R0,#+0
   \   000003A4   0090               STR      R0,[SP, #+0]
   \   000003A6   8021               MOVS     R1,#+128
   \   000003A8   03B4               PUSH     {R0,R1}
   \   000003AA   0521               MOVS     R1,#+5
   \   000003AC   0220               MOVS     R0,#+2
   \   000003AE   03B4               PUSH     {R0,R1}
   \   000003B0   0423               MOVS     R3,#+4
   \   000003B2   1C22               MOVS     R2,#+28
   \   000003B4   0021               MOVS     R1,#+0
   \   000003B6   23A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x20  ;; 0x31, 0x32, 0x00, 0x00
   \   000003B8   ........           BL       Label
   \   000003BC   06B0               ADD      SP,SP,#+24
   7978                V_line(6+12*2,Ychart-9,1,1); 
   \   000003BE   0123               MOVS     R3,#+1
   \   000003C0   1A00               MOVS     R2,R3
   \   000003C2   0C21               MOVS     R1,#+12
   \   000003C4   1E20               MOVS     R0,#+30
   \   000003C6   ........           BL       V_line
   7979                Label("18",0,4+18*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003CA   82B0               SUB      SP,SP,#+8
   \   000003CC   0020               MOVS     R0,#+0
   \   000003CE   0090               STR      R0,[SP, #+0]
   \   000003D0   8021               MOVS     R1,#+128
   \   000003D2   03B4               PUSH     {R0,R1}
   \   000003D4   0521               MOVS     R1,#+5
   \   000003D6   0220               MOVS     R0,#+2
   \   000003D8   03B4               PUSH     {R0,R1}
   \   000003DA   0423               MOVS     R3,#+4
   \   000003DC   2822               MOVS     R2,#+40
   \   000003DE   0021               MOVS     R1,#+0
   \   000003E0   19A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x24  ;; 0x31, 0x38, 0x00, 0x00
   \   000003E2   ........           BL       Label
   \   000003E6   06B0               ADD      SP,SP,#+24
   7980                V_line(6+18*2,Ychart-9,1,1); 
   \   000003E8   0123               MOVS     R3,#+1
   \   000003EA   1A00               MOVS     R2,R3
   \   000003EC   0C21               MOVS     R1,#+12
   \   000003EE   2A20               MOVS     R0,#+42
   \   000003F0   ........           BL       V_line
   7981                Label("23",0,2+24*2,Ychart-17,2,5,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   000003F4   82B0               SUB      SP,SP,#+8
   \   000003F6   0020               MOVS     R0,#+0
   \   000003F8   0090               STR      R0,[SP, #+0]
   \   000003FA   8021               MOVS     R1,#+128
   \   000003FC   03B4               PUSH     {R0,R1}
   \   000003FE   0521               MOVS     R1,#+5
   \   00000400   0220               MOVS     R0,#+2
   \   00000402   03B4               PUSH     {R0,R1}
   \   00000404   0423               MOVS     R3,#+4
   \   00000406   3222               MOVS     R2,#+50
   \   00000408   0021               MOVS     R1,#+0
   \   0000040A   10A0               ADR      R0,??ThermostatAutoSet_Paint_1+0x28  ;; 0x32, 0x33, 0x00, 0x00
   \   0000040C   ........           BL       Label
   \   00000410   06B0               ADD      SP,SP,#+24
   7982                V_line(6+24*2,Ychart-9,1,1);             
   \   00000412   0123               MOVS     R3,#+1
   \   00000414   1A00               MOVS     R2,R3
   \   00000416   0C21               MOVS     R1,#+12
   \   00000418   3620               MOVS     R0,#+54
   \   0000041A   ........           BL       V_line
   7983                
   7984          }//________________________________________________________________________
   \   0000041E   FEBC               POP      {R1-R7}
   \   00000420   01BC               POP      {R0}
   \   00000422   0047               BX       R0               ;; return
   \                     ??ThermostatAutoSet_Paint_1:
   \   00000424   54310000           DC8      0x54, 0x31, 0x00, 0x00
   \   00000428   54320000           DC8      0x54, 0x32, 0x00, 0x00
   \   0000042C   DB060000           DC32     0x6db
   \   00000430   ........           DC32     g_leng
   \   00000434   140A0000           DC32     0xa14
   \   00000438   ........           DC32     Speech
   \   0000043C   30000000           DC8      0x30, 0x00, 0x00, 0x00
   \   00000440   36000000           DC8      0x36, 0x00, 0x00, 0x00
   \   00000444   31320000           DC8      0x31, 0x32, 0x00, 0x00
   \   00000448   31380000           DC8      0x31, 0x38, 0x00, 0x00
   \   0000044C   32330000           DC8      0x32, 0x33, 0x00, 0x00
   7985          
   7986              
   7987          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   7988          void ThermostatAutoSet_Event(_Screen* Screen)
   7989                {
   \                     ThermostatAutoSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   A24C               LDR      R4,??ThermostatAutoSet_Event_0  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   235E               LDRSH    R3,[R4, R0]
   \   00000012   A048               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   9F48               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   9F48               LDR      R0,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   0000001E   0025               MOVS     R5,#+0
   \   00000020   405F               LDRSH    R0,[R0, R5]
   7990             
   7991                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   2CD5               BPL      ??ThermostatAutoSet_Event_1
   7992                  {
   7993                     if (ProgramChange) 
   \   0000002C   9C4E               LDR      R6,??ThermostatAutoSet_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   307A               LDRB     R0,[R6, #+8]
   \   00000030   0028               CMP      R0,#+0
   \   00000032   20D0               BEQ      ??ThermostatAutoSet_Event_2
   7994                    {
   7995                        
   7996                        if (((gProg.Screen[CurrentSheet].Thermo.Chart[DateTime.DayOfWeek]>>DateTime.Hour) & 0x1)==1)
   \   00000034   3079               LDRB     R0,[R6, #+4]
   \   00000036   A021               MOVS     R1,#+160
   \   00000038   4843               MULS     R0,R1,R0
   \   0000003A   9A49               LDR      R1,??ThermostatAutoSet_Event_0+0x14  ;; gProg
   \   0000003C   0818               ADDS     R0,R1,R0
   \   0000003E   9A49               LDR      R1,??ThermostatAutoSet_Event_0+0x18  ;; DateTime
   \   00000040   9A4A               LDR      R2,??ThermostatAutoSet_Event_0+0x1C  ;; 0xbc30
   \   00000042   8B79               LDRB     R3,[R1, #+6]
   \   00000044   9B00               LSLS     R3,R3,#+2
   \   00000046   C318               ADDS     R3,R0,R3
   \   00000048   9A58               LDR      R2,[R3, R2]
   \   0000004A   C978               LDRB     R1,[R1, #+3]
   \   0000004C   CA40               LSRS     R2,R2,R1
   \   0000004E   D107               LSLS     R1,R2,#+31
   \   00000050   04D5               BPL      ??ThermostatAutoSet_Event_3
   7997                        {
   7998                          gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[0]; 
   \   00000052   9749               LDR      R1,??ThermostatAutoSet_Event_0+0x20  ;; 0xbc2a
   \   00000054   4018               ADDS     R0,R0,R1
   \   00000056   0188               LDRH     R1,[R0, #+0]
   \   00000058   8180               STRH     R1,[R0, #+4]
   \   0000005A   03E0               B        ??ThermostatAutoSet_Event_4
   7999                        }else{
   8000                          gProg.Screen[CurrentSheet].Thermo.SetTemperature=gProg.Screen[CurrentSheet].Thermo.Temperature[1]; 
   \                     ??ThermostatAutoSet_Event_3:
   \   0000005C   9449               LDR      R1,??ThermostatAutoSet_Event_0+0x20  ;; 0xbc2a
   \   0000005E   4018               ADDS     R0,R0,R1
   \   00000060   4188               LDRH     R1,[R0, #+2]
   \   00000062   8180               STRH     R1,[R0, #+4]
   8001                        }
   8002                        
   8003                        ThermostatsTimeChartExecute(); 
   \                     ??ThermostatAutoSet_Event_4:
   \   00000064   ........           BL       ThermostatsTimeChartExecute
   8004                        ThermostatsExecute();
   \   00000068   ........           BL       ThermostatsExecute
   8005                        
   8006                        MenuLevel=(MenuLevel*10+0); 
   \   0000006C   B06C               LDR      R0,[R6, #+72]
   \   0000006E   0A21               MOVS     R1,#+10
   \   00000070   4843               MULS     R0,R1,R0
   \   00000072   B064               STR      R0,[R6, #+72]
   \   00000074   04E0               B        ??ThermostatAutoSet_Event_5
   8007                    }else{
   8008                      MenuLevel=(MenuLevel/10);
   \                     ??ThermostatAutoSet_Event_2:
   \   00000076   B06C               LDR      R0,[R6, #+72]
   \   00000078   0A21               MOVS     R1,#+10
   \   0000007A   ........           BL       __aeabi_idivmod
   \   0000007E   B064               STR      R0,[R6, #+72]
   8009                    }
   8010                    MenuPaint();
   \                     ??ThermostatAutoSet_Event_5:
   \   00000080   ........           BL       MenuPaint
   \   00000084   01E1               B        ??ThermostatAutoSet_Event_6
   8011                  } else if ((Y_down<112) || (Y_up<112))
   \                     ??ThermostatAutoSet_Event_1:
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   205E               LDRSH    R0,[R4, R0]
   \   0000008A   7028               CMP      R0,#+112
   \   0000008C   05DB               BLT      ??ThermostatAutoSet_Event_7
   \   0000008E   8248               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   00000090   0021               MOVS     R1,#+0
   \   00000092   405E               LDRSH    R0,[R0, R1]
   \   00000094   7028               CMP      R0,#+112
   \   00000096   00DB               BLT      .+4
   \   00000098   F7E0               B        ??ThermostatAutoSet_Event_6
   8012                  {  
   8013                  
   8014                         char Refresh=0; 
   \                     ??ThermostatAutoSet_Event_7:
   \   0000009A   2F00               MOVS     R7,R5
   8015                        
   8016                        char txt[5]; txt[1]=0; 
   \   0000009C   6E46               MOV      R6,SP
   \   0000009E   2800               MOVS     R0,R5
   \   000000A0   7070               STRB     R0,[R6, #+1]
   \   000000A2   1F20               MOVS     R0,#+31
   \   000000A4   3070               STRB     R0,[R6, #+0]
   8017                        txt[0]=31;//dó³ 
   8018                        if ((Button(txt,2,89,18,18)==2) && (Screen->Thermo.Temperature[0]>0)) {Screen->Thermo.Temperature[0]--; Refresh=1; ProgramChange=1;}
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   1220               MOVS     R0,#+18
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   0300               MOVS     R3,R0
   \   000000AE   5922               MOVS     R2,#+89
   \   000000B0   0221               MOVS     R1,#+2
   \   000000B2   02A8               ADD      R0,SP,#+8
   \   000000B4   ........           BL       Button
   \   000000B8   02B0               ADD      SP,SP,#+8
   \   000000BA   0228               CMP      R0,#+2
   \   000000BC   0DD1               BNE      ??ThermostatAutoSet_Event_8
   \   000000BE   0298               LDR      R0,[SP, #+8]
   \   000000C0   9230               ADDS     R0,R0,#+146
   \   000000C2   0021               MOVS     R1,#+0
   \   000000C4   415E               LDRSH    R1,[R0, R1]
   \   000000C6   0129               CMP      R1,#+1
   \   000000C8   07DB               BLT      ??ThermostatAutoSet_Event_8
   \   000000CA   0021               MOVS     R1,#+0
   \   000000CC   415E               LDRSH    R1,[R0, R1]
   \   000000CE   491E               SUBS     R1,R1,#+1
   \   000000D0   0180               STRH     R1,[R0, #+0]
   \   000000D2   0120               MOVS     R0,#+1
   \   000000D4   0700               MOVS     R7,R0
   \   000000D6   7749               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   000000D8   0870               STRB     R0,[R1, #+0]
   8019                        txt[1]=0; txt[0]=30;//góra 
   \                     ??ThermostatAutoSet_Event_8:
   \   000000DA   2800               MOVS     R0,R5
   \   000000DC   7070               STRB     R0,[R6, #+1]
   \   000000DE   1E20               MOVS     R0,#+30
   \   000000E0   3070               STRB     R0,[R6, #+0]
   8020                        if ((Button(txt,43,89,18,18)==2) && (Screen->Thermo.Temperature[0]<500)) {Screen->Thermo.Temperature[0]++; Refresh=1; ProgramChange=1;}
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   1220               MOVS     R0,#+18
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   0300               MOVS     R3,R0
   \   000000EA   5922               MOVS     R2,#+89
   \   000000EC   2B21               MOVS     R1,#+43
   \   000000EE   02A8               ADD      R0,SP,#+8
   \   000000F0   ........           BL       Button
   \   000000F4   02B0               ADD      SP,SP,#+8
   \   000000F6   0228               CMP      R0,#+2
   \   000000F8   0FD1               BNE      ??ThermostatAutoSet_Event_9
   \   000000FA   0298               LDR      R0,[SP, #+8]
   \   000000FC   9230               ADDS     R0,R0,#+146
   \   000000FE   0021               MOVS     R1,#+0
   \   00000100   415E               LDRSH    R1,[R0, R1]
   \   00000102   FA22               MOVS     R2,#+250
   \   00000104   5200               LSLS     R2,R2,#+1        ;; #+500
   \   00000106   9142               CMP      R1,R2
   \   00000108   07DA               BGE      ??ThermostatAutoSet_Event_9
   \   0000010A   0021               MOVS     R1,#+0
   \   0000010C   415E               LDRSH    R1,[R0, R1]
   \   0000010E   491C               ADDS     R1,R1,#+1
   \   00000110   0180               STRH     R1,[R0, #+0]
   \   00000112   0120               MOVS     R0,#+1
   \   00000114   0700               MOVS     R7,R0
   \   00000116   6749               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   00000118   0870               STRB     R0,[R1, #+0]
   8021                        
   8022                        txt[1]=0; txt[0]=31;//dó³
   \                     ??ThermostatAutoSet_Event_9:
   \   0000011A   2800               MOVS     R0,R5
   \   0000011C   7070               STRB     R0,[R6, #+1]
   \   0000011E   1F20               MOVS     R0,#+31
   \   00000120   3070               STRB     R0,[R6, #+0]
   8023                        if ((Button(txt,2,69,18,18)==2) && (Screen->Thermo.Temperature[1]>0)) {Screen->Thermo.Temperature[1]--;Refresh=1; ProgramChange=1;}
   \   00000122   82B0               SUB      SP,SP,#+8
   \   00000124   1220               MOVS     R0,#+18
   \   00000126   0090               STR      R0,[SP, #+0]
   \   00000128   0300               MOVS     R3,R0
   \   0000012A   4522               MOVS     R2,#+69
   \   0000012C   0221               MOVS     R1,#+2
   \   0000012E   02A8               ADD      R0,SP,#+8
   \   00000130   ........           BL       Button
   \   00000134   02B0               ADD      SP,SP,#+8
   \   00000136   0228               CMP      R0,#+2
   \   00000138   0DD1               BNE      ??ThermostatAutoSet_Event_10
   \   0000013A   0298               LDR      R0,[SP, #+8]
   \   0000013C   9230               ADDS     R0,R0,#+146
   \   0000013E   0221               MOVS     R1,#+2
   \   00000140   415E               LDRSH    R1,[R0, R1]
   \   00000142   0129               CMP      R1,#+1
   \   00000144   07DB               BLT      ??ThermostatAutoSet_Event_10
   \   00000146   0221               MOVS     R1,#+2
   \   00000148   415E               LDRSH    R1,[R0, R1]
   \   0000014A   491E               SUBS     R1,R1,#+1
   \   0000014C   4180               STRH     R1,[R0, #+2]
   \   0000014E   0120               MOVS     R0,#+1
   \   00000150   0700               MOVS     R7,R0
   \   00000152   5849               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   00000154   0870               STRB     R0,[R1, #+0]
   8024                        txt[1]=0; txt[0]=30;//góra 
   \                     ??ThermostatAutoSet_Event_10:
   \   00000156   2800               MOVS     R0,R5
   \   00000158   7070               STRB     R0,[R6, #+1]
   \   0000015A   1E20               MOVS     R0,#+30
   \   0000015C   3070               STRB     R0,[R6, #+0]
   8025                        if ((Button(txt,43,69,18,18)==2) && (Screen->Thermo.Temperature[1]<5000)) {Screen->Thermo.Temperature[1]++;Refresh=1; ProgramChange=1;}
   \   0000015E   82B0               SUB      SP,SP,#+8
   \   00000160   1220               MOVS     R0,#+18
   \   00000162   0090               STR      R0,[SP, #+0]
   \   00000164   0300               MOVS     R3,R0
   \   00000166   4522               MOVS     R2,#+69
   \   00000168   2B21               MOVS     R1,#+43
   \   0000016A   02A8               ADD      R0,SP,#+8
   \   0000016C   ........           BL       Button
   \   00000170   02B0               ADD      SP,SP,#+8
   \   00000172   0228               CMP      R0,#+2
   \   00000174   0ED1               BNE      ??ThermostatAutoSet_Event_11
   \   00000176   0298               LDR      R0,[SP, #+8]
   \   00000178   9230               ADDS     R0,R0,#+146
   \   0000017A   0221               MOVS     R1,#+2
   \   0000017C   415E               LDRSH    R1,[R0, R1]
   \   0000017E   4E4A               LDR      R2,??ThermostatAutoSet_Event_0+0x28  ;; 0x1388
   \   00000180   9142               CMP      R1,R2
   \   00000182   07DA               BGE      ??ThermostatAutoSet_Event_11
   \   00000184   0221               MOVS     R1,#+2
   \   00000186   415E               LDRSH    R1,[R0, R1]
   \   00000188   491C               ADDS     R1,R1,#+1
   \   0000018A   4180               STRH     R1,[R0, #+2]
   \   0000018C   0120               MOVS     R0,#+1
   \   0000018E   0700               MOVS     R7,R0
   \   00000190   4849               LDR      R1,??ThermostatAutoSet_Event_0+0x24  ;; TextToChangeLength + 8
   \   00000192   0870               STRB     R0,[R1, #+0]
   8026          
   8027                        //je¿eli klikniêto obszar Chart 0
   8028                        if ((Y_up>34) && (Y_up<62) && (X_up>0))  {CurentChartModyfi=0; Refresh=1; MenuLevel=(MenuLevel*10+1);}
   \                     ??ThermostatAutoSet_Event_11:
   \   00000194   4048               LDR      R0,??ThermostatAutoSet_Event_0+0x8  ;; Y_up
   \   00000196   0021               MOVS     R1,#+0
   \   00000198   405E               LDRSH    R0,[R0, R1]
   \   0000019A   2328               CMP      R0,#+35
   \   0000019C   0EDB               BLT      ??ThermostatAutoSet_Event_12
   \   0000019E   3E28               CMP      R0,#+62
   \   000001A0   0CDA               BGE      ??ThermostatAutoSet_Event_12
   \   000001A2   3E49               LDR      R1,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   000001A4   0022               MOVS     R2,#+0
   \   000001A6   895E               LDRSH    R1,[R1, R2]
   \   000001A8   0129               CMP      R1,#+1
   \   000001AA   07DB               BLT      ??ThermostatAutoSet_Event_12
   \   000001AC   3C4E               LDR      R6,??ThermostatAutoSet_Event_0+0x10  ;; TextToChangeLength
   \   000001AE   B570               STRB     R5,[R6, #+2]
   \   000001B0   0127               MOVS     R7,#+1
   \   000001B2   B16C               LDR      R1,[R6, #+72]
   \   000001B4   0A22               MOVS     R2,#+10
   \   000001B6   5143               MULS     R1,R2,R1
   \   000001B8   491C               ADDS     R1,R1,#+1
   \   000001BA   B164               STR      R1,[R6, #+72]
   8029                        if ((Y_up>0) && (Y_up<30) && (X_up>0))  {CurentChartModyfi=1; Refresh=1; MenuLevel=(MenuLevel*10+1);}
   \                     ??ThermostatAutoSet_Event_12:
   \   000001BC   0128               CMP      R0,#+1
   \   000001BE   10DB               BLT      ??ThermostatAutoSet_Event_13
   \   000001C0   1E28               CMP      R0,#+30
   \   000001C2   0EDA               BGE      ??ThermostatAutoSet_Event_13
   \   000001C4   3548               LDR      R0,??ThermostatAutoSet_Event_0+0xC  ;; X_up
   \   000001C6   0021               MOVS     R1,#+0
   \   000001C8   405E               LDRSH    R0,[R0, R1]
   \   000001CA   0128               CMP      R0,#+1
   \   000001CC   09DB               BLT      ??ThermostatAutoSet_Event_13
   \   000001CE   344E               LDR      R6,??ThermostatAutoSet_Event_0+0x10  ;; TextToChangeLength
   \   000001D0   0120               MOVS     R0,#+1
   \   000001D2   0100               MOVS     R1,R0
   \   000001D4   B170               STRB     R1,[R6, #+2]
   \   000001D6   0700               MOVS     R7,R0
   \   000001D8   B06C               LDR      R0,[R6, #+72]
   \   000001DA   0A21               MOVS     R1,#+10
   \   000001DC   4843               MULS     R0,R1,R0
   \   000001DE   401C               ADDS     R0,R0,#+1
   \   000001E0   B064               STR      R0,[R6, #+72]
   8030                         
   8031                        if ((X_down>0) && (Y_down>0)) Refresh=1;
   \                     ??ThermostatAutoSet_Event_13:
   \   000001E2   2C48               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   000001E4   0021               MOVS     R1,#+0
   \   000001E6   405E               LDRSH    R0,[R0, R1]
   \   000001E8   0128               CMP      R0,#+1
   \   000001EA   04DB               BLT      ??ThermostatAutoSet_Event_14
   \   000001EC   0020               MOVS     R0,#+0
   \   000001EE   205E               LDRSH    R0,[R4, R0]
   \   000001F0   0128               CMP      R0,#+1
   \   000001F2   00DB               BLT      ??ThermostatAutoSet_Event_14
   \   000001F4   0127               MOVS     R7,#+1
   8032                        if (Refresh==1) MenuPaint();  
   \                     ??ThermostatAutoSet_Event_14:
   \   000001F6   012F               CMP      R7,#+1
   \   000001F8   01D1               BNE      ??ThermostatAutoSet_Event_15
   \   000001FA   ........           BL       MenuPaint
   8033                        if ((Y_down>34) && (Y_down<62) && (X_down>0))  {
   \                     ??ThermostatAutoSet_Event_15:
   \   000001FE   0020               MOVS     R0,#+0
   \   00000200   205E               LDRSH    R0,[R4, R0]
   \   00000202   2328               CMP      R0,#+35
   \   00000204   1EDB               BLT      ??ThermostatAutoSet_Event_16
   \   00000206   3E28               CMP      R0,#+62
   \   00000208   1CDA               BGE      ??ThermostatAutoSet_Event_16
   \   0000020A   2248               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   0000020C   0021               MOVS     R1,#+0
   \   0000020E   405E               LDRSH    R0,[R0, R1]
   \   00000210   0128               CMP      R0,#+1
   \   00000212   17DB               BLT      ??ThermostatAutoSet_Event_16
   8034                            V_line(1,32,33,1);
   \   00000214   0123               MOVS     R3,#+1
   \   00000216   2122               MOVS     R2,#+33
   \   00000218   2021               MOVS     R1,#+32
   \   0000021A   1800               MOVS     R0,R3
   \   0000021C   ........           BL       V_line
   8035                            V_line(61,32,33,1);
   \   00000220   0123               MOVS     R3,#+1
   \   00000222   2122               MOVS     R2,#+33
   \   00000224   2021               MOVS     R1,#+32
   \   00000226   3D20               MOVS     R0,#+61
   \   00000228   ........           BL       V_line
   8036                            H_line(1,64,62,1);
   \   0000022C   0123               MOVS     R3,#+1
   \   0000022E   3E22               MOVS     R2,#+62
   \   00000230   4021               MOVS     R1,#+64
   \   00000232   1800               MOVS     R0,R3
   \   00000234   ........           BL       H_line
   8037                            H_line(1,34,62,1);
   \   00000238   0123               MOVS     R3,#+1
   \   0000023A   3E22               MOVS     R2,#+62
   \   0000023C   2221               MOVS     R1,#+34
   \   0000023E   1800               MOVS     R0,R3
   \   00000240   ........           BL       H_line
   8038                         }
   8039                        if ((Y_down>0) && (Y_down<30) && (X_down>0))  {
   \                     ??ThermostatAutoSet_Event_16:
   \   00000244   0020               MOVS     R0,#+0
   \   00000246   205E               LDRSH    R0,[R4, R0]
   \   00000248   0128               CMP      R0,#+1
   \   0000024A   1EDB               BLT      ??ThermostatAutoSet_Event_6
   \   0000024C   1E28               CMP      R0,#+30
   \   0000024E   1CDA               BGE      ??ThermostatAutoSet_Event_6
   \   00000250   1048               LDR      R0,??ThermostatAutoSet_Event_0+0x4  ;; X_down
   \   00000252   0021               MOVS     R1,#+0
   \   00000254   405E               LDRSH    R0,[R0, R1]
   \   00000256   0128               CMP      R0,#+1
   \   00000258   17DB               BLT      ??ThermostatAutoSet_Event_6
   8040                            V_line(1,3,30,1);
   \   0000025A   0123               MOVS     R3,#+1
   \   0000025C   1E22               MOVS     R2,#+30
   \   0000025E   0321               MOVS     R1,#+3
   \   00000260   1800               MOVS     R0,R3
   \   00000262   ........           BL       V_line
   8041                            V_line(61,3,30,1);
   \   00000266   0123               MOVS     R3,#+1
   \   00000268   1E22               MOVS     R2,#+30
   \   0000026A   0321               MOVS     R1,#+3
   \   0000026C   3D20               MOVS     R0,#+61
   \   0000026E   ........           BL       V_line
   8042                            H_line(1,31,62,1);
   \   00000272   0123               MOVS     R3,#+1
   \   00000274   3E22               MOVS     R2,#+62
   \   00000276   1F21               MOVS     R1,#+31
   \   00000278   1800               MOVS     R0,R3
   \   0000027A   ........           BL       H_line
   8043                            H_line(1,2,62,1);
   \   0000027E   0123               MOVS     R3,#+1
   \   00000280   3E22               MOVS     R2,#+62
   \   00000282   0221               MOVS     R1,#+2
   \   00000284   1800               MOVS     R0,R3
   \   00000286   ........           BL       H_line
   8044                         }
   8045                        
   8046                  }
   8047          }//________________________________________________________________________
   \                     ??ThermostatAutoSet_Event_6:
   \   0000028A   FEBC               POP      {R1-R7}
   \   0000028C   01BC               POP      {R0}
   \   0000028E   0047               BX       R0               ;; return
   \                     ??ThermostatAutoSet_Event_0:
   \   00000290   ........           DC32     Y_down
   \   00000294   ........           DC32     X_down
   \   00000298   ........           DC32     Y_up
   \   0000029C   ........           DC32     X_up
   \   000002A0   ........           DC32     TextToChangeLength
   \   000002A4   ........           DC32     gProg
   \   000002A8   ........           DC32     DateTime
   \   000002AC   30BC0000           DC32     0xbc30
   \   000002B0   2ABC0000           DC32     0xbc2a
   \   000002B4   ........           DC32     TextToChangeLength + 8
   \   000002B8   88130000           DC32     0x1388
   8048              
   8049          
   8050          
   8051          
   8052          
   8053          
   8054          char ThermHourModyfi;

   \                                 In section Debug.txt, align 4, keep-with-next
   8055          void ThermostatChartSet_Paint(_Screen* Screen, char Chart)
   8056          {          
   \                     ThermostatChartSet_Paint:
   \   00000000   F3B5               PUSH     {R0,R1,R4-R7,LR}
   \   00000002   83B0               SUB      SP,SP,#+12
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   78A0               ADR      R0,??ThermostatChartSet_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   0321               MOVS     R1,#+3
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0300               MOVS     R3,R0
   \   0000001A   6C22               MOVS     R2,#+108
   \   0000001C   0121               MOVS     R1,#+1
   \   0000001E   7548               LDR      R0,??ThermostatChartSet_Paint_0+0x4  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   8057                 List_Paint("Thermo",1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000020   ........           BL       List_Paint
   \   00000024   0AB0               ADD      SP,SP,#+40
   \   00000026   0024               MOVS     R4,#+0
   8058          
   8059          
   8060                
   8061                char day=0;
   8062                char hlight=0;
   8063          
   8064                for (char row=0; row<3; row++)
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   0090               STR      R0,[SP, #+0]
   \   0000002C   04E0               B        ??ThermostatChartSet_Paint_1
   \                     ??ThermostatChartSet_Paint_2:
   \   0000002E   0098               LDR      R0,[SP, #+0]
   \   00000030   401C               ADDS     R0,R0,#+1
   \   00000032   0006               LSLS     R0,R0,#+24
   \   00000034   000E               LSRS     R0,R0,#+24
   \   00000036   0090               STR      R0,[SP, #+0]
   \                     ??ThermostatChartSet_Paint_1:
   \   00000038   0098               LDR      R0,[SP, #+0]
   \   0000003A   0006               LSLS     R0,R0,#+24
   \   0000003C   000E               LSRS     R0,R0,#+24
   \   0000003E   0328               CMP      R0,#+3
   \   00000040   75D2               BCS      ??ThermostatChartSet_Paint_3
   8065                for (char col=0; col<3; col++)
   \   00000042   0025               MOVS     R5,#+0
   \   00000044   29E0               B        ??ThermostatChartSet_Paint_4
   8066                { 
   8067                  if (++day<8)
   8068                  {
   8069                      H_line(4+col*18,105-row*14,19,1);
   8070                      H_line(4+col*18,105-(row+1)*14,19,1);
   8071                      V_line(4+col*18,105-(row+1)*14,14,1);
   8072                      V_line(4+(col+1)*18,105-(row+1)*14,14,1);
   8073                      
   8074                      if (Chart==1) hlight=(~(Screen->Thermo.Week>>(day-1)) &0x1); else hlight=(((Screen->Thermo.Week>>(day-1))) &0x1);
   \                     ??ThermostatChartSet_Paint_5:
   \   00000046   9130               ADDS     R0,R0,#+145
   \   00000048   0178               LDRB     R1,[R0, #+0]
   \   0000004A   2000               MOVS     R0,R4
   \   0000004C   401E               SUBS     R0,R0,#+1
   \   0000004E   0141               ASRS     R1,R1,R0
   \   00000050   0120               MOVS     R0,#+1
   \   00000052   0840               ANDS     R0,R0,R1
   8075                      Label((char*)DeyOfWeekStr[g_leng][day],2,6+col*18 ,105-(row+1)*14+3,2,14,0,128,hlight);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \                     ??ThermostatChartSet_Paint_6:
   \   00000054   82B0               SUB      SP,SP,#+8
   \   00000056   0090               STR      R0,[SP, #+0]
   \   00000058   8021               MOVS     R1,#+128
   \   0000005A   0020               MOVS     R0,#+0
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   0E21               MOVS     R1,#+14
   \   00000060   0220               MOVS     R0,#+2
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   6C20               MOVS     R0,#+108
   \   00000066   0799               LDR      R1,[SP, #+28]
   \   00000068   431A               SUBS     R3,R0,R1
   \   0000006A   B61D               ADDS     R6,R6,#+6
   \   0000006C   3200               MOVS     R2,R6
   \   0000006E   1206               LSLS     R2,R2,#+24
   \   00000070   120E               LSRS     R2,R2,#+24
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   B027               MOVS     R7,#+176
   \   00000076   7F00               LSLS     R7,R7,#+1        ;; #+352
   \   00000078   2000               MOVS     R0,R4
   \   0000007A   4600               LSLS     R6,R0,#+1
   \   0000007C   B446               MOV      R12,R6
   \   0000007E   5E48               LDR      R0,??ThermostatChartSet_Paint_0+0x8  ;; g_leng
   \   00000080   0068               LDR      R0,[R0, #+0]
   \   00000082   0601               LSLS     R6,R0,#+4
   \   00000084   5D48               LDR      R0,??ThermostatChartSet_Paint_0+0xC  ;; `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000086   8019               ADDS     R0,R0,R6
   \   00000088   6646               MOV      R6,R12
   \   0000008A   8019               ADDS     R0,R0,R6
   \   0000008C   C019               ADDS     R0,R0,R7
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
   \                     ??ThermostatChartSet_Paint_7:
   \   00000094   6D1C               ADDS     R5,R5,#+1
   \   00000096   2D06               LSLS     R5,R5,#+24
   \   00000098   2D0E               LSRS     R5,R5,#+24
   \                     ??ThermostatChartSet_Paint_4:
   \   0000009A   2800               MOVS     R0,R5
   \   0000009C   0328               CMP      R0,#+3
   \   0000009E   C6D2               BCS      ??ThermostatChartSet_Paint_2
   \   000000A0   641C               ADDS     R4,R4,#+1
   \   000000A2   2406               LSLS     R4,R4,#+24
   \   000000A4   240E               LSRS     R4,R4,#+24
   \   000000A6   2000               MOVS     R0,R4
   \   000000A8   0828               CMP      R0,#+8
   \   000000AA   F3D2               BCS      ??ThermostatChartSet_Paint_7
   \   000000AC   2E00               MOVS     R6,R5
   \   000000AE   1220               MOVS     R0,#+18
   \   000000B0   4643               MULS     R6,R0,R6
   \   000000B2   009F               LDR      R7,[SP, #+0]
   \   000000B4   3F06               LSLS     R7,R7,#+24
   \   000000B6   3F0E               LSRS     R7,R7,#+24
   \   000000B8   0123               MOVS     R3,#+1
   \   000000BA   1322               MOVS     R2,#+19
   \   000000BC   6920               MOVS     R0,#+105
   \   000000BE   0E21               MOVS     R1,#+14
   \   000000C0   7943               MULS     R1,R7,R1
   \   000000C2   411A               SUBS     R1,R0,R1
   \   000000C4   3000               MOVS     R0,R6
   \   000000C6   001D               ADDS     R0,R0,#+4
   \   000000C8   0006               LSLS     R0,R0,#+24
   \   000000CA   000E               LSRS     R0,R0,#+24
   \   000000CC   ........           BL       H_line
   \   000000D0   7F1C               ADDS     R7,R7,#+1
   \   000000D2   0E20               MOVS     R0,#+14
   \   000000D4   4743               MULS     R7,R0,R7
   \   000000D6   0197               STR      R7,[SP, #+4]
   \   000000D8   6920               MOVS     R0,#+105
   \   000000DA   3900               MOVS     R1,R7
   \   000000DC   471A               SUBS     R7,R0,R1
   \   000000DE   0123               MOVS     R3,#+1
   \   000000E0   1322               MOVS     R2,#+19
   \   000000E2   3900               MOVS     R1,R7
   \   000000E4   3000               MOVS     R0,R6
   \   000000E6   001D               ADDS     R0,R0,#+4
   \   000000E8   0006               LSLS     R0,R0,#+24
   \   000000EA   000E               LSRS     R0,R0,#+24
   \   000000EC   ........           BL       H_line
   \   000000F0   0123               MOVS     R3,#+1
   \   000000F2   0E22               MOVS     R2,#+14
   \   000000F4   3900               MOVS     R1,R7
   \   000000F6   3000               MOVS     R0,R6
   \   000000F8   001D               ADDS     R0,R0,#+4
   \   000000FA   0006               LSLS     R0,R0,#+24
   \   000000FC   000E               LSRS     R0,R0,#+24
   \   000000FE   ........           BL       V_line
   \   00000102   0123               MOVS     R3,#+1
   \   00000104   0E22               MOVS     R2,#+14
   \   00000106   3900               MOVS     R1,R7
   \   00000108   3000               MOVS     R0,R6
   \   0000010A   1630               ADDS     R0,R0,#+22
   \   0000010C   0006               LSLS     R0,R0,#+24
   \   0000010E   000E               LSRS     R0,R0,#+24
   \   00000110   ........           BL       V_line
   \   00000114   6846               MOV      R0,SP
   \   00000116   007C               LDRB     R0,[R0, #+16]
   \   00000118   0128               CMP      R0,#+1
   \   0000011A   0398               LDR      R0,[SP, #+12]
   \   0000011C   93D1               BNE      ??ThermostatChartSet_Paint_5
   \   0000011E   9130               ADDS     R0,R0,#+145
   \   00000120   0178               LDRB     R1,[R0, #+0]
   \   00000122   2000               MOVS     R0,R4
   \   00000124   401E               SUBS     R0,R0,#+1
   \   00000126   0141               ASRS     R1,R1,R0
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   8843               BICS     R0,R0,R1
   \   0000012C   92E7               B        ??ThermostatChartSet_Paint_6
   8076          
   8077                  }
   8078                }
   8079                
   8080               
   8081                 
   8082                 
   8083                
   8084                char Ychart=44;
   8085                
   8086                H_line(1,Ychart+14,62,1);  
   \                     ??ThermostatChartSet_Paint_3:
   \   0000012E   0123               MOVS     R3,#+1
   \   00000130   3E22               MOVS     R2,#+62
   \   00000132   3A21               MOVS     R1,#+58
   \   00000134   1800               MOVS     R0,R3
   \   00000136   ........           BL       H_line
   8087                H_line(1,Ychart+13,62,1);  
   \   0000013A   0123               MOVS     R3,#+1
   \   0000013C   3E22               MOVS     R2,#+62
   \   0000013E   3921               MOVS     R1,#+57
   \   00000140   1800               MOVS     R0,R3
   \   00000142   ........           BL       H_line
   8088            
   8089                
   8090                for (char i=0; i<24; i++)
   \   00000146   0024               MOVS     R4,#+0
   \   00000148   19E0               B        ??ThermostatChartSet_Paint_8
   8091                {
   8092                   V_line(8+(i*2),Ychart,5+((Screen->Thermo.Chart[Chart]>>i) & 0x1 )*3,1);  
   \                     ??ThermostatChartSet_Paint_9:
   \   0000014A   0123               MOVS     R3,#+1
   \   0000014C   6846               MOV      R0,SP
   \   0000014E   007C               LDRB     R0,[R0, #+16]
   \   00000150   8000               LSLS     R0,R0,#+2
   \   00000152   0399               LDR      R1,[SP, #+12]
   \   00000154   0818               ADDS     R0,R1,R0
   \   00000156   9830               ADDS     R0,R0,#+152
   \   00000158   0068               LDR      R0,[R0, #+0]
   \   0000015A   E040               LSRS     R0,R0,R4
   \   0000015C   1A00               MOVS     R2,R3
   \   0000015E   0240               ANDS     R2,R2,R0
   \   00000160   0320               MOVS     R0,#+3
   \   00000162   4243               MULS     R2,R0,R2
   \   00000164   521D               ADDS     R2,R2,#+5
   \   00000166   1206               LSLS     R2,R2,#+24
   \   00000168   120E               LSRS     R2,R2,#+24
   \   0000016A   2C21               MOVS     R1,#+44
   \   0000016C   6000               LSLS     R0,R4,#+1
   \   0000016E   0830               ADDS     R0,R0,#+8
   \   00000170   0006               LSLS     R0,R0,#+24
   \   00000172   000E               LSRS     R0,R0,#+24
   \   00000174   ........           BL       V_line
   8093                }
   \   00000178   641C               ADDS     R4,R4,#+1
   \   0000017A   2406               LSLS     R4,R4,#+24
   \   0000017C   240E               LSRS     R4,R4,#+24
   \                     ??ThermostatChartSet_Paint_8:
   \   0000017E   2000               MOVS     R0,R4
   \   00000180   1828               CMP      R0,#+24
   \   00000182   E2D3               BCC      ??ThermostatChartSet_Paint_9
   8094                
   8095                Button("<",4,Ychart-32,17,18); 
   \   00000184   82B0               SUB      SP,SP,#+8
   \   00000186   1220               MOVS     R0,#+18
   \   00000188   0090               STR      R0,[SP, #+0]
   \   0000018A   1123               MOVS     R3,#+17
   \   0000018C   0C22               MOVS     R2,#+12
   \   0000018E   0421               MOVS     R1,#+4
   \   00000190   1BA0               ADR      R0,??ThermostatChartSet_Paint_0+0x10  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000192   ........           BL       Button
   \   00000196   02B0               ADD      SP,SP,#+8
   8096                char txt[2]; txt[1]=0; 
   \   00000198   02A8               ADD      R0,SP,#+8
   \   0000019A   0021               MOVS     R1,#+0
   \   0000019C   4170               STRB     R1,[R0, #+1]
   8097                if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1) txt[0]=31; else txt[0]=30; 
   \   0000019E   6946               MOV      R1,SP
   \   000001A0   097C               LDRB     R1,[R1, #+16]
   \   000001A2   8900               LSLS     R1,R1,#+2
   \   000001A4   039A               LDR      R2,[SP, #+12]
   \   000001A6   5118               ADDS     R1,R2,R1
   \   000001A8   9831               ADDS     R1,R1,#+152
   \   000001AA   0968               LDR      R1,[R1, #+0]
   \   000001AC   154A               LDR      R2,??ThermostatChartSet_Paint_0+0x14  ;; ThermHourModyfi
   \   000001AE   1278               LDRB     R2,[R2, #+0]
   \   000001B0   D140               LSRS     R1,R1,R2
   \   000001B2   C907               LSLS     R1,R1,#+31
   \   000001B4   02D5               BPL      ??ThermostatChartSet_Paint_10
   \   000001B6   1F21               MOVS     R1,#+31
   \   000001B8   0170               STRB     R1,[R0, #+0]
   \   000001BA   01E0               B        ??ThermostatChartSet_Paint_11
   \                     ??ThermostatChartSet_Paint_10:
   \   000001BC   1E21               MOVS     R1,#+30
   \   000001BE   0170               STRB     R1,[R0, #+0]
   8098                Button(txt,23,Ychart-32,17,18); 
   \                     ??ThermostatChartSet_Paint_11:
   \   000001C0   82B0               SUB      SP,SP,#+8
   \   000001C2   1220               MOVS     R0,#+18
   \   000001C4   0090               STR      R0,[SP, #+0]
   \   000001C6   1123               MOVS     R3,#+17
   \   000001C8   0C22               MOVS     R2,#+12
   \   000001CA   1721               MOVS     R1,#+23
   \   000001CC   04A8               ADD      R0,SP,#+16
   \   000001CE   ........           BL       Button
   \   000001D2   02B0               ADD      SP,SP,#+8
   8099                Button(">",42,Ychart-32,17,18); 
   \   000001D4   82B0               SUB      SP,SP,#+8
   \   000001D6   1220               MOVS     R0,#+18
   \   000001D8   0090               STR      R0,[SP, #+0]
   \   000001DA   1123               MOVS     R3,#+17
   \   000001DC   0C22               MOVS     R2,#+12
   \   000001DE   2A21               MOVS     R1,#+42
   \   000001E0   09A0               ADR      R0,??ThermostatChartSet_Paint_0+0x18  ;; 0x3E, 0x00, 0x00, 0x00
   \   000001E2   ........           BL       Button
   \   000001E6   02B0               ADD      SP,SP,#+8
   8100                
   8101                
   8102                
   8103          }//________________________________________________________________________
   \   000001E8   05B0               ADD      SP,SP,#+20
   \   000001EA   F0BC               POP      {R4-R7}
   \   000001EC   01BC               POP      {R0}
   \   000001EE   0047               BX       R0               ;; return
   \                     ??ThermostatChartSet_Paint_0:
   \   000001F0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001F4   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2` + 132
   \   000001F8   ........           DC32     g_leng
   \   000001FC   ........           DC32     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2`
   \   00000200   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   00000204   ........           DC32     ThermHourModyfi
   \   00000208   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   8104          
   8105              
   8106          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8107          void ThermostatChartSet_Event(_Screen* Screen, char Chart)
   8108                {
   \                     ThermostatChartSet_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   0024               MOVS     R4,#+0
   \   00000008   6A4E               LDR      R6,??ThermostatChartSet_Event_0  ;; Y_down
   \   0000000A   2100               MOVS     R1,R4
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   335E               LDRSH    R3,[R6, R0]
   \   00000016   6848               LDR      R0,??ThermostatChartSet_Event_0+0x4  ;; X_down
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   425E               LDRSH    R2,[R0, R1]
   \   0000001C   6748               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   0000001E   415E               LDRSH    R1,[R0, R1]
   \   00000020   6748               LDR      R0,??ThermostatChartSet_Event_0+0xC  ;; X_up
   \   00000022   0027               MOVS     R7,#+0
   \   00000024   C05F               LDRSH    R0,[R0, R7]
   8109                  char Repaint=0;
   8110                  
   8111                  if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000026   ........           BL       List_Event
   \   0000002A   04B0               ADD      SP,SP,#+16
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   08D5               BPL      ??ThermostatChartSet_Event_1
   8112                  {
   8113                    MenuLevel=(MenuLevel/10);
   \   00000030   644C               LDR      R4,??ThermostatChartSet_Event_0+0x10  ;; TextToChangeLength
   \   00000032   A06C               LDR      R0,[R4, #+72]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   A064               STR      R0,[R4, #+72]
   8114                    MenuPaint();
   \   0000003C   ........           BL       MenuPaint
   \   00000040   B4E0               B        ??ThermostatChartSet_Event_2
   8115                  } else if ((Y_down<112)  || (Y_up<112))
   \                     ??ThermostatChartSet_Event_1:
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   305E               LDRSH    R0,[R6, R0]
   \   00000046   7028               CMP      R0,#+112
   \   00000048   05DB               BLT      ??ThermostatChartSet_Event_3
   \   0000004A   5C48               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   405E               LDRSH    R0,[R0, R1]
   \   00000050   7028               CMP      R0,#+112
   \   00000052   00DB               BLT      .+4
   \   00000054   AAE0               B        ??ThermostatChartSet_Event_2
   8116                  {  
   8117                     char Ychart=44;
   8118                    
   8119                     if (Button("<",4,Ychart-32,17,18)==1) if (ThermHourModyfi>0) {ThermHourModyfi--; Repaint=1; ProgramChange=1;}
   \                     ??ThermostatChartSet_Event_3:
   \   00000056   5C4E               LDR      R6,??ThermostatChartSet_Event_0+0x14  ;; ThermHourModyfi
   \   00000058   82B0               SUB      SP,SP,#+8
   \   0000005A   1220               MOVS     R0,#+18
   \   0000005C   0090               STR      R0,[SP, #+0]
   \   0000005E   1123               MOVS     R3,#+17
   \   00000060   0C22               MOVS     R2,#+12
   \   00000062   0421               MOVS     R1,#+4
   \   00000064   59A0               ADR      R0,??ThermostatChartSet_Event_0+0x18  ;; 0x3C, 0x00, 0x00, 0x00
   \   00000066   ........           BL       Button
   \   0000006A   02B0               ADD      SP,SP,#+8
   \   0000006C   0128               CMP      R0,#+1
   \   0000006E   08D1               BNE      ??ThermostatChartSet_Event_4
   \   00000070   3078               LDRB     R0,[R6, #+0]
   \   00000072   0028               CMP      R0,#+0
   \   00000074   05D0               BEQ      ??ThermostatChartSet_Event_4
   \   00000076   401E               SUBS     R0,R0,#+1
   \   00000078   3070               STRB     R0,[R6, #+0]
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   0400               MOVS     R4,R0
   \   0000007E   5449               LDR      R1,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   00000080   0870               STRB     R0,[R1, #+0]
   8120                     char txt[2]; txt[1]=0; 
   \                     ??ThermostatChartSet_Event_4:
   \   00000082   6846               MOV      R0,SP
   \   00000084   3900               MOVS     R1,R7
   \   00000086   4170               STRB     R1,[R0, #+1]
   8121                      if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1) txt[0]=31; else txt[0]=30; 
   \   00000088   A900               LSLS     R1,R5,#+2
   \   0000008A   029A               LDR      R2,[SP, #+8]
   \   0000008C   5518               ADDS     R5,R2,R1
   \   0000008E   9835               ADDS     R5,R5,#+152
   \   00000090   2968               LDR      R1,[R5, #+0]
   \   00000092   3278               LDRB     R2,[R6, #+0]
   \   00000094   D140               LSRS     R1,R1,R2
   \   00000096   C907               LSLS     R1,R1,#+31
   \   00000098   02D5               BPL      ??ThermostatChartSet_Event_5
   \   0000009A   1F21               MOVS     R1,#+31
   \   0000009C   0170               STRB     R1,[R0, #+0]
   \   0000009E   01E0               B        ??ThermostatChartSet_Event_6
   \                     ??ThermostatChartSet_Event_5:
   \   000000A0   1E21               MOVS     R1,#+30
   \   000000A2   0170               STRB     R1,[R0, #+0]
   8122                     if (Button(txt,23,Ychart-32,17,18)==1) 
   \                     ??ThermostatChartSet_Event_6:
   \   000000A4   82B0               SUB      SP,SP,#+8
   \   000000A6   1220               MOVS     R0,#+18
   \   000000A8   0090               STR      R0,[SP, #+0]
   \   000000AA   1123               MOVS     R3,#+17
   \   000000AC   0C22               MOVS     R2,#+12
   \   000000AE   1721               MOVS     R1,#+23
   \   000000B0   02A8               ADD      R0,SP,#+8
   \   000000B2   ........           BL       Button
   \   000000B6   02B0               ADD      SP,SP,#+8
   \   000000B8   0128               CMP      R0,#+1
   \   000000BA   13D1               BNE      ??ThermostatChartSet_Event_7
   8123                     {
   8124                        if ((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1)
   \   000000BC   3078               LDRB     R0,[R6, #+0]
   \   000000BE   2968               LDR      R1,[R5, #+0]
   \   000000C0   C140               LSRS     R1,R1,R0
   \   000000C2   C907               LSLS     R1,R1,#+31
   \   000000C4   2968               LDR      R1,[R5, #+0]
   \   000000C6   05D5               BPL      ??ThermostatChartSet_Event_8
   8125                        {
   8126                          Screen->Thermo.Chart[Chart] &= ~(1<<ThermHourModyfi);
   \   000000C8   0122               MOVS     R2,#+1
   \   000000CA   8240               LSLS     R2,R2,R0
   \   000000CC   9143               BICS     R1,R1,R2
   \   000000CE   2960               STR      R1,[R5, #+0]
   8127                          Repaint=1;
   \   000000D0   0124               MOVS     R4,#+1
   \   000000D2   04E0               B        ??ThermostatChartSet_Event_9
   8128                        }else{
   8129                          Screen->Thermo.Chart[Chart] |=  (1<<ThermHourModyfi);
   \                     ??ThermostatChartSet_Event_8:
   \   000000D4   0122               MOVS     R2,#+1
   \   000000D6   8240               LSLS     R2,R2,R0
   \   000000D8   0A43               ORRS     R2,R2,R1
   \   000000DA   2A60               STR      R2,[R5, #+0]
   8130                          Repaint=1;
   \   000000DC   0124               MOVS     R4,#+1
   8131                        }
   8132                        ProgramChange=1;
   \                     ??ThermostatChartSet_Event_9:
   \   000000DE   3C48               LDR      R0,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   000000E0   2100               MOVS     R1,R4
   \   000000E2   0170               STRB     R1,[R0, #+0]
   8133                     }
   8134                     if (Button(">",42,Ychart-32,17,18)==1) {if (ThermHourModyfi<23) ThermHourModyfi++; Repaint=1; ProgramChange=1;}
   \                     ??ThermostatChartSet_Event_7:
   \   000000E4   82B0               SUB      SP,SP,#+8
   \   000000E6   1220               MOVS     R0,#+18
   \   000000E8   0090               STR      R0,[SP, #+0]
   \   000000EA   1123               MOVS     R3,#+17
   \   000000EC   0C22               MOVS     R2,#+12
   \   000000EE   2A21               MOVS     R1,#+42
   \   000000F0   38A0               ADR      R0,??ThermostatChartSet_Event_0+0x20  ;; 0x3E, 0x00, 0x00, 0x00
   \   000000F2   ........           BL       Button
   \   000000F6   02B0               ADD      SP,SP,#+8
   \   000000F8   0128               CMP      R0,#+1
   \   000000FA   08D1               BNE      ??ThermostatChartSet_Event_10
   \   000000FC   3078               LDRB     R0,[R6, #+0]
   \   000000FE   1728               CMP      R0,#+23
   \   00000100   01D2               BCS      ??ThermostatChartSet_Event_11
   \   00000102   401C               ADDS     R0,R0,#+1
   \   00000104   3070               STRB     R0,[R6, #+0]
   \                     ??ThermostatChartSet_Event_11:
   \   00000106   0120               MOVS     R0,#+1
   \   00000108   0400               MOVS     R4,R0
   \   0000010A   3149               LDR      R1,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   0000010C   0870               STRB     R0,[R1, #+0]
   8135                
   8136                
   8137                      char day;
   8138                      day=0;
   \                     ??ThermostatChartSet_Event_10:
   \   0000010E   3B00               MOVS     R3,R7
   8139                      for (char row=0; row<3; row++)
   \   00000110   1900               MOVS     R1,R3
   \   00000112   02E0               B        ??ThermostatChartSet_Event_12
   \                     ??ThermostatChartSet_Event_13:
   \   00000114   491C               ADDS     R1,R1,#+1
   \   00000116   0906               LSLS     R1,R1,#+24
   \   00000118   090E               LSRS     R1,R1,#+24
   \                     ??ThermostatChartSet_Event_12:
   \   0000011A   0800               MOVS     R0,R1
   \   0000011C   0328               CMP      R0,#+3
   \   0000011E   41D2               BCS      ??ThermostatChartSet_Event_14
   8140                      for (char col=0; col<3; col++)
   \   00000120   0022               MOVS     R2,#+0
   \   00000122   0AE0               B        ??ThermostatChartSet_Event_15
   8141                      { 
   8142                        if (++day<8)
   8143                        {
   8144                            if ((X_up>4+col*18) && (X_up<4+(col+1)*18) && (Y_up<105-row*14) && (Y_up>105-(row+1)*14))
   8145                            {
   8146                              if ((Screen->Thermo.Week>>(day-1)) & 0x1)  //jezeli dzieñ aktywny to wy³acz je¿eli nie to w³¹cz
   8147                              {
   8148                                 Screen->Thermo.Week &= ~(1<<(day-1));
   8149                              }else{
   8150                                Screen->Thermo.Week |= (1<<(day-1));
   \                     ??ThermostatChartSet_Event_16:
   \   00000124   0126               MOVS     R6,#+1
   \   00000126   8640               LSLS     R6,R6,R0
   \   00000128   2E43               ORRS     R6,R6,R5
   \   0000012A   2670               STRB     R6,[R4, #+0]
   8151                              }
   8152                              Repaint=1;
   \                     ??ThermostatChartSet_Event_17:
   \   0000012C   0120               MOVS     R0,#+1
   \   0000012E   0400               MOVS     R4,R0
   8153                              ProgramChange=1;
   \   00000130   274D               LDR      R5,??ThermostatChartSet_Event_0+0x1C  ;; TextToChangeLength + 8
   \   00000132   2870               STRB     R0,[R5, #+0]
   \                     ??ThermostatChartSet_Event_18:
   \   00000134   521C               ADDS     R2,R2,#+1
   \   00000136   1206               LSLS     R2,R2,#+24
   \   00000138   120E               LSRS     R2,R2,#+24
   \                     ??ThermostatChartSet_Event_15:
   \   0000013A   1000               MOVS     R0,R2
   \   0000013C   0328               CMP      R0,#+3
   \   0000013E   E9D2               BCS      ??ThermostatChartSet_Event_13
   \   00000140   5B1C               ADDS     R3,R3,#+1
   \   00000142   1B06               LSLS     R3,R3,#+24
   \   00000144   1B0E               LSRS     R3,R3,#+24
   \   00000146   1800               MOVS     R0,R3
   \   00000148   0828               CMP      R0,#+8
   \   0000014A   F3D2               BCS      ??ThermostatChartSet_Event_18
   \   0000014C   1000               MOVS     R0,R2
   \   0000014E   1225               MOVS     R5,#+18
   \   00000150   6843               MULS     R0,R5,R0
   \   00000152   1B4D               LDR      R5,??ThermostatChartSet_Event_0+0xC  ;; X_up
   \   00000154   0026               MOVS     R6,#+0
   \   00000156   AD5F               LDRSH    R5,[R5, R6]
   \   00000158   0600               MOVS     R6,R0
   \   0000015A   361D               ADDS     R6,R6,#+4
   \   0000015C   AE42               CMP      R6,R5
   \   0000015E   E9DA               BGE      ??ThermostatChartSet_Event_18
   \   00000160   1630               ADDS     R0,R0,#+22
   \   00000162   8542               CMP      R5,R0
   \   00000164   E6DA               BGE      ??ThermostatChartSet_Event_18
   \   00000166   0D00               MOVS     R5,R1
   \   00000168   1448               LDR      R0,??ThermostatChartSet_Event_0+0x8  ;; Y_up
   \   0000016A   0026               MOVS     R6,#+0
   \   0000016C   865F               LDRSH    R6,[R0, R6]
   \   0000016E   6920               MOVS     R0,#+105
   \   00000170   0E27               MOVS     R7,#+14
   \   00000172   6F43               MULS     R7,R5,R7
   \   00000174   C01B               SUBS     R0,R0,R7
   \   00000176   8642               CMP      R6,R0
   \   00000178   DCDA               BGE      ??ThermostatChartSet_Event_18
   \   0000017A   6920               MOVS     R0,#+105
   \   0000017C   6D1C               ADDS     R5,R5,#+1
   \   0000017E   0E27               MOVS     R7,#+14
   \   00000180   7D43               MULS     R5,R7,R5
   \   00000182   401B               SUBS     R0,R0,R5
   \   00000184   B042               CMP      R0,R6
   \   00000186   D5DA               BGE      ??ThermostatChartSet_Event_18
   \   00000188   1800               MOVS     R0,R3
   \   0000018A   401E               SUBS     R0,R0,#+1
   \   0000018C   029C               LDR      R4,[SP, #+8]
   \   0000018E   9134               ADDS     R4,R4,#+145
   \   00000190   2578               LDRB     R5,[R4, #+0]
   \   00000192   0541               ASRS     R5,R5,R0
   \   00000194   ED07               LSLS     R5,R5,#+31
   \   00000196   2578               LDRB     R5,[R4, #+0]
   \   00000198   C4D5               BPL      ??ThermostatChartSet_Event_16
   \   0000019A   0126               MOVS     R6,#+1
   \   0000019C   8640               LSLS     R6,R6,R0
   \   0000019E   B543               BICS     R5,R5,R6
   \   000001A0   2570               STRB     R5,[R4, #+0]
   \   000001A2   C3E7               B        ??ThermostatChartSet_Event_17
   8154                            }
   8155          
   8156                        }
   8157                      }
   8158                     
   8159                     
   8160                     if (Repaint==1) MenuPaint();      
   \                     ??ThermostatChartSet_Event_14:
   \   000001A4   012C               CMP      R4,#+1
   \   000001A6   01D1               BNE      ??ThermostatChartSet_Event_2
   \   000001A8   ........           BL       MenuPaint
   8161                    
   8162                  }
   8163          }//________________________________________________________________________
   \                     ??ThermostatChartSet_Event_2:
   \   000001AC   FEBC               POP      {R1-R7}
   \   000001AE   01BC               POP      {R0}
   \   000001B0   0047               BX       R0               ;; return
   \   000001B2   C046               Nop      
   \                     ??ThermostatChartSet_Event_0:
   \   000001B4   ........           DC32     Y_down
   \   000001B8   ........           DC32     X_down
   \   000001BC   ........           DC32     Y_up
   \   000001C0   ........           DC32     X_up
   \   000001C4   ........           DC32     TextToChangeLength
   \   000001C8   ........           DC32     ThermHourModyfi
   \   000001CC   3C000000           DC8      0x3C, 0x00, 0x00, 0x00
   \   000001D0   ........           DC32     TextToChangeLength + 8
   \   000001D4   3E000000           DC8      0x3E, 0x00, 0x00, 0x00
   8164              
   8165                
   8166                

   \                                 In section Debug.txt, align 4, keep-with-next
   8167          void ThermostatChartSet_Refresh(_Screen* Screen, char Chart)
   8168          {          
   \                     ThermostatChartSet_Refresh:
   \   00000000   73B5               PUSH     {R0,R1,R4-R6,LR}
   8169             static char TCSR_Count;
   8170             char kolor=0;
   \   00000002   0024               MOVS     R4,#+0
   \   00000004   2300               MOVS     R3,R4
   8171             char Ychart=44;
   8172             if (TCSR_Count<3) TCSR_Count++; else TCSR_Count=0;
   \   00000006   1F4D               LDR      R5,??ThermostatChartSet_Refresh_0  ;; ThermHourModyfi
   \   00000008   6A78               LDRB     R2,[R5, #+1]
   \   0000000A   032A               CMP      R2,#+3
   \   0000000C   02D2               BCS      ??ThermostatChartSet_Refresh_1
   \   0000000E   521C               ADDS     R2,R2,#+1
   \   00000010   6A70               STRB     R2,[R5, #+1]
   \   00000012   00E0               B        ??ThermostatChartSet_Refresh_2
   \                     ??ThermostatChartSet_Refresh_1:
   \   00000014   6C70               STRB     R4,[R5, #+1]
   8173             if (TCSR_Count) kolor=1;
   \                     ??ThermostatChartSet_Refresh_2:
   \   00000016   6A78               LDRB     R2,[R5, #+1]
   \   00000018   002A               CMP      R2,#+0
   \   0000001A   00D0               BEQ      ??ThermostatChartSet_Refresh_3
   \   0000001C   0123               MOVS     R3,#+1
   8174             V_line(8+(ThermHourModyfi*2),Ychart,5+((Screen->Thermo.Chart[Chart]>>ThermHourModyfi) & 0x1 )*3,kolor);  
   \                     ??ThermostatChartSet_Refresh_3:
   \   0000001E   2E78               LDRB     R6,[R5, #+0]
   \   00000020   8900               LSLS     R1,R1,#+2
   \   00000022   4018               ADDS     R0,R0,R1
   \   00000024   9830               ADDS     R0,R0,#+152
   \   00000026   0068               LDR      R0,[R0, #+0]
   \   00000028   F040               LSRS     R0,R0,R6
   \   0000002A   0122               MOVS     R2,#+1
   \   0000002C   0240               ANDS     R2,R2,R0
   \   0000002E   0320               MOVS     R0,#+3
   \   00000030   4243               MULS     R2,R0,R2
   \   00000032   521D               ADDS     R2,R2,#+5
   \   00000034   1206               LSLS     R2,R2,#+24
   \   00000036   120E               LSRS     R2,R2,#+24
   \   00000038   2C21               MOVS     R1,#+44
   \   0000003A   7000               LSLS     R0,R6,#+1
   \   0000003C   0830               ADDS     R0,R0,#+8
   \   0000003E   0006               LSLS     R0,R0,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   ........           BL       V_line
   8175          
   8176             char txt[3]; txt[1]=0; txt[2]=0;
   \   00000046   6846               MOV      R0,SP
   \   00000048   4470               STRB     R4,[R0, #+1]
   \   0000004A   8470               STRB     R4,[R0, #+2]
   8177             CharToStr(ThermHourModyfi,txt,2);  //(char Value, char *Vstring, char ill) 
   \   0000004C   0222               MOVS     R2,#+2
   \   0000004E   6946               MOV      R1,SP
   \   00000050   2878               LDRB     R0,[R5, #+0]
   \   00000052   ........           BL       CharToStr
   8178             Label(txt,2,ThermHourModyfi*2+2,Ychart-10,2,12,0,128,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   00000056   82B0               SUB      SP,SP,#+8
   \   00000058   2000               MOVS     R0,R4
   \   0000005A   0090               STR      R0,[SP, #+0]
   \   0000005C   8021               MOVS     R1,#+128
   \   0000005E   03B4               PUSH     {R0,R1}
   \   00000060   0C21               MOVS     R1,#+12
   \   00000062   0220               MOVS     R0,#+2
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   2223               MOVS     R3,#+34
   \   00000068   2878               LDRB     R0,[R5, #+0]
   \   0000006A   4200               LSLS     R2,R0,#+1
   \   0000006C   921C               ADDS     R2,R2,#+2
   \   0000006E   1206               LSLS     R2,R2,#+24
   \   00000070   120E               LSRS     R2,R2,#+24
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   06A8               ADD      R0,SP,#+24
   \   00000076   ........           BL       Label
   \   0000007A   06B0               ADD      SP,SP,#+24
   8179          
   8180                
   8181                 
   8182                
   8183          }//________________________________________________________________________
   \   0000007C   7CBC               POP      {R2-R6}
   \   0000007E   01BC               POP      {R0}
   \   00000080   0047               BX       R0               ;; return
   \   00000082   C046               Nop      
   \                     ??ThermostatChartSet_Refresh_0:
   \   00000084   ........           DC32     ThermHourModyfi

   \                                 In section .bss, align 1
   \                     ThermHourModyfi:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   8184          
   8185          
   8186          
   8187          
   8188          
   8189          
   8190          
   8191          
   8192          //*-----------------------------------------------------------------------------
   8193          //* Nazwa funkcji :    Alarm_Paint
   8194          //* Funkcja strony g³ównej menu
   8195          //*-----------------------------------------------------------------------------
   8196          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   8197          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8198          void Alarm_Paint(char CurrentSheet)
   8199          {
   \                     Alarm_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8200            
   8201            
   8202          
   8203          
   8204              
   8205          
   8206                if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   \   00000002   4100               LSLS     R1,R0,#+1
   \   00000004   214A               LDR      R2,??Alarm_Paint_0  ;; AlarmScreenAction
   \   00000006   5118               ADDS     R1,R2,R1
   \   00000008   0A78               LDRB     R2,[R1, #+0]
   \   0000000A   002A               CMP      R2,#+0
   \   0000000C   3AD1               BNE      ??Alarm_Paint_1
   \   0000000E   4978               LDRB     R1,[R1, #+1]
   \   00000010   0029               CMP      R1,#+0
   \   00000012   37D1               BNE      ??Alarm_Paint_1
   8207                {
   8208                  if (CurrentSheet!=0)  List_Paint(Speech[g_leng].Termo_,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000014   0028               CMP      R0,#+0
   \   00000016   16D0               BEQ      ??Alarm_Paint_2
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   1BA0               ADR      R0,??Alarm_Paint_0+0x4  ;; 0x20, 0x00, 0x00, 0x00
   \   00000022   03B4               PUSH     {R0,R1}
   \   00000024   0321               MOVS     R1,#+3
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   0300               MOVS     R3,R0
   \   0000002C   6C22               MOVS     R2,#+108
   \   0000002E   0121               MOVS     R1,#+1
   \   00000030   1848               LDR      R0,??Alarm_Paint_0+0x8  ;; 0x735
   \   00000032   194C               LDR      R4,??Alarm_Paint_0+0xC  ;; g_leng
   \   00000034   2468               LDR      R4,[R4, #+0]
   \   00000036   194D               LDR      R5,??Alarm_Paint_0+0x10  ;; 0xa14
   \   00000038   6C43               MULS     R4,R5,R4
   \   0000003A   194D               LDR      R5,??Alarm_Paint_0+0x14  ;; Speech
   \   0000003C   2C19               ADDS     R4,R5,R4
   \   0000003E   2018               ADDS     R0,R4,R0
   \   00000040   ........           BL       List_Paint
   \   00000044   0AB0               ADD      SP,SP,#+40
   8209                  Button(Speech[g_leng].WlOchrone,2,40,59,50);
   \                     ??Alarm_Paint_2:
   \   00000046   154C               LDR      R4,??Alarm_Paint_0+0x10  ;; 0xa14
   \   00000048   134D               LDR      R5,??Alarm_Paint_0+0xC  ;; g_leng
   \   0000004A   154E               LDR      R6,??Alarm_Paint_0+0x14  ;; Speech
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   3220               MOVS     R0,#+50
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   3B23               MOVS     R3,#+59
   \   00000054   2822               MOVS     R2,#+40
   \   00000056   0221               MOVS     R1,#+2
   \   00000058   1248               LDR      R0,??Alarm_Paint_0+0x18  ;; 0x78f
   \   0000005A   2F68               LDR      R7,[R5, #+0]
   \   0000005C   6743               MULS     R7,R4,R7
   \   0000005E   F719               ADDS     R7,R6,R7
   \   00000060   3818               ADDS     R0,R7,R0
   \   00000062   ........           BL       Button
   \   00000066   02B0               ADD      SP,SP,#+8
   8210                  Button(Speech[g_leng].ZmienHaslo,2,4,59,13);
   \   00000068   82B0               SUB      SP,SP,#+8
   \   0000006A   0D20               MOVS     R0,#+13
   \   0000006C   0090               STR      R0,[SP, #+0]
   \   0000006E   3B23               MOVS     R3,#+59
   \   00000070   0422               MOVS     R2,#+4
   \   00000072   0221               MOVS     R1,#+2
   \   00000074   0C48               LDR      R0,??Alarm_Paint_0+0x1C  ;; 0x79e
   \   00000076   2D68               LDR      R5,[R5, #+0]
   \   00000078   6543               MULS     R5,R4,R5
   \   0000007A   7419               ADDS     R4,R6,R5
   \   0000007C   2018               ADDS     R0,R4,R0
   \   0000007E   ........           BL       Button
   \   00000082   02B0               ADD      SP,SP,#+8
   8211                }
   8212            
   8213                if ((AlarmScreenAction[CurrentSheet].Active==1) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   8214                {
   8215                   
   8216                }
   8217          }//_______________________ Koniec funkcji Alarm_Paint __________________________
   \                     ??Alarm_Paint_1:
   \   00000084   F8BC               POP      {R3-R7}
   \   00000086   01BC               POP      {R0}
   \   00000088   0047               BX       R0               ;; return
   \   0000008A   C046               Nop      
   \                     ??Alarm_Paint_0:
   \   0000008C   ........           DC32     AlarmScreenAction
   \   00000090   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000094   35070000           DC32     0x735
   \   00000098   ........           DC32     g_leng
   \   0000009C   140A0000           DC32     0xa14
   \   000000A0   ........           DC32     Speech
   \   000000A4   8F070000           DC32     0x78f
   \   000000A8   9E070000           DC32     0x79e
   8218            
   8219          
   8220          
   8221          
   8222          //*-----------------------------------------------------------------------------
   8223          //* Nazwa funkcji :    Alarm_Event
   8224          //* Funkcja strony g³ównej menu
   8225          //*-----------------------------------------------------------------------------
   8226          //*-----------------------------------------------------------------------------
   8227          
   8228          

   \                                 In section Debug.txt, align 4, keep-with-next
   8229          void Alarm_Event(char CurrentSheet)
   8230          {
   \                     Alarm_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0500               MOVS     R5,R0
   \   00000004   0024               MOVS     R4,#+0
   8231            char Repaint=0;
   8232          
   8233          
   8234            
   8235            
   8236           if ((CurrentSheet>0) && (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)==-1))
   \   00000006   002D               CMP      R5,#+0
   \   00000008   1DD0               BEQ      ??Alarm_Event_0
   \   0000000A   2100               MOVS     R1,R4
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0F21               MOVS     R1,#+15
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   2D48               LDR      R0,??Alarm_Event_1  ;; Y_down
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   435E               LDRSH    R3,[R0, R1]
   \   0000001A   2D48               LDR      R0,??Alarm_Event_1+0x4  ;; X_down
   \   0000001C   425E               LDRSH    R2,[R0, R1]
   \   0000001E   2D48               LDR      R0,??Alarm_Event_1+0x8  ;; Y_up
   \   00000020   415E               LDRSH    R1,[R0, R1]
   \   00000022   2D48               LDR      R0,??Alarm_Event_1+0xC  ;; X_up
   \   00000024   0026               MOVS     R6,#+0
   \   00000026   805F               LDRSH    R0,[R0, R6]
   \   00000028   ........           BL       List_Event
   \   0000002C   04B0               ADD      SP,SP,#+16
   \   0000002E   0021               MOVS     R1,#+0
   \   00000030   C943               MVNS     R1,R1            ;; #-1
   \   00000032   8842               CMP      R0,R1
   \   00000034   07D1               BNE      ??Alarm_Event_0
   8237              {
   8238                 if (SheetHistoryIndex>0)
   \   00000036   2948               LDR      R0,??Alarm_Event_1+0x10  ;; TextToChangeLength
   \   00000038   C179               LDRB     R1,[R0, #+7]
   \   0000003A   0029               CMP      R1,#+0
   \   0000003C   01D0               BEQ      ??Alarm_Event_2
   8239                    {
   8240                       CurrentSheet=SheetHistory[--SheetHistoryIndex];
   \   0000003E   491E               SUBS     R1,R1,#+1
   \   00000040   C171               STRB     R1,[R0, #+7]
   8241                    } 
   8242                   Repaint=1; 
   \                     ??Alarm_Event_2:
   \   00000042   0124               MOVS     R4,#+1
   \   00000044   3AE0               B        ??Alarm_Event_3
   8243              }else{
   8244          
   8245                if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive==0))
   \                     ??Alarm_Event_0:
   \   00000046   6800               LSLS     R0,R5,#+1
   \   00000048   2549               LDR      R1,??Alarm_Event_1+0x14  ;; AlarmScreenAction
   \   0000004A   0D18               ADDS     R5,R1,R0
   \   0000004C   2878               LDRB     R0,[R5, #+0]
   \   0000004E   0028               CMP      R0,#+0
   \   00000050   34D1               BNE      ??Alarm_Event_3
   \   00000052   6878               LDRB     R0,[R5, #+1]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   31D1               BNE      ??Alarm_Event_3
   \   00000058   224E               LDR      R6,??Alarm_Event_1+0x18  ;; g_leng
   \   0000005A   234F               LDR      R7,??Alarm_Event_1+0x1C  ;; Speech
   \   0000005C   82B0               SUB      SP,SP,#+8
   \   0000005E   3220               MOVS     R0,#+50
   \   00000060   0090               STR      R0,[SP, #+0]
   \   00000062   3B23               MOVS     R3,#+59
   \   00000064   2822               MOVS     R2,#+40
   \   00000066   0221               MOVS     R1,#+2
   \   00000068   02B5               PUSH     {R1,LR}
   \   0000006A   2049               LDR      R1,??Alarm_Event_1+0x20  ;; 0x78f
   \   0000006C   8C46               MOV      R12,R1
   \   0000006E   3168               LDR      R1,[R6, #+0]
   \   00000070   1F48               LDR      R0,??Alarm_Event_1+0x24  ;; 0xa14
   \   00000072   4143               MULS     R1,R0,R1
   \   00000074   7818               ADDS     R0,R7,R1
   \   00000076   6146               MOV      R1,R12
   \   00000078   4018               ADDS     R0,R0,R1
   \   0000007A   0099               LDR      R1,[SP, #0]
   \   0000007C   02B0               ADD      SP,SP,#+8
   8246                {
   8247                  if (Button(Speech[g_leng].WlOchrone,2,40,59,50)==1) {
   \   0000007E   ........           BL       Button
   \   00000082   02B0               ADD      SP,SP,#+8
   \   00000084   0128               CMP      R0,#+1
   \   00000086   04D1               BNE      ??Alarm_Event_4
   8248                   AlarmScreenAction[CurrentSheet].SecToActive=AlarmTimeToActive;
   \   00000088   3C20               MOVS     R0,#+60
   \   0000008A   6870               STRB     R0,[R5, #+1]
   8249                   AlarmScreenAction[CurrentSheet].Active=0;
   \   0000008C   2000               MOVS     R0,R4
   \   0000008E   2870               STRB     R0,[R5, #+0]
   8250                   Repaint=1;
   \   00000090   0124               MOVS     R4,#+1
   8251                  } 
   8252                   if (Button(Speech[g_leng].ZmienHaslo,2,4,59,13)==1)
   \                     ??Alarm_Event_4:
   \   00000092   82B0               SUB      SP,SP,#+8
   \   00000094   0D20               MOVS     R0,#+13
   \   00000096   0090               STR      R0,[SP, #+0]
   \   00000098   3B23               MOVS     R3,#+59
   \   0000009A   0422               MOVS     R2,#+4
   \   0000009C   0221               MOVS     R1,#+2
   \   0000009E   1548               LDR      R0,??Alarm_Event_1+0x28  ;; 0x79e
   \   000000A0   3568               LDR      R5,[R6, #+0]
   \   000000A2   134E               LDR      R6,??Alarm_Event_1+0x24  ;; 0xa14
   \   000000A4   7543               MULS     R5,R6,R5
   \   000000A6   7D19               ADDS     R5,R7,R5
   \   000000A8   2818               ADDS     R0,R5,R0
   \   000000AA   ........           BL       Button
   \   000000AE   02B0               ADD      SP,SP,#+8
   \   000000B0   0128               CMP      R0,#+1
   \   000000B2   03D1               BNE      ??Alarm_Event_3
   8253                   {
   8254                      MenuLevel=15;
   \   000000B4   1048               LDR      R0,??Alarm_Event_1+0x2C  ;; TextToChangeLength + 72
   \   000000B6   0F21               MOVS     R1,#+15
   \   000000B8   0160               STR      R1,[R0, #+0]
   8255                      Repaint=1;
   \   000000BA   0124               MOVS     R4,#+1
   8256                   }
   8257                  
   8258                }
   8259                
   8260                      
   8261              }
   8262           
   8263           
   8264           
   8265            if (Repaint==1) MenuPaint();
   \                     ??Alarm_Event_3:
   \   000000BC   012C               CMP      R4,#+1
   \   000000BE   01D1               BNE      ??Alarm_Event_5
   \   000000C0   ........           BL       MenuPaint
   8266          }//_______________________ Koniec funkcji Alarm_Event __________________________
   \                     ??Alarm_Event_5:
   \   000000C4   F8BC               POP      {R3-R7}
   \   000000C6   01BC               POP      {R0}
   \   000000C8   0047               BX       R0               ;; return
   \   000000CA   C046               Nop      
   \                     ??Alarm_Event_1:
   \   000000CC   ........           DC32     Y_down
   \   000000D0   ........           DC32     X_down
   \   000000D4   ........           DC32     Y_up
   \   000000D8   ........           DC32     X_up
   \   000000DC   ........           DC32     TextToChangeLength
   \   000000E0   ........           DC32     AlarmScreenAction
   \   000000E4   ........           DC32     g_leng
   \   000000E8   ........           DC32     Speech
   \   000000EC   8F070000           DC32     0x78f
   \   000000F0   140A0000           DC32     0xa14
   \   000000F4   9E070000           DC32     0x79e
   \   000000F8   ........           DC32     TextToChangeLength + 72
   8267            
   8268          
   8269          
   8270          
   8271          
   8272          
   8273          //*-----------------------------------------------------------------------------
   8274          //* Nazwa funkcji :    Alarm_Refresh
   8275          //* Funkcja strony g³ównej menu
   8276          //*-----------------------------------------------------------------------------
   8277          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8278          void Alarm_Refresh(char CurrentSheet)
   8279          {
   \                     Alarm_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   8280          
   8281            char dl;
   8282            char txt[5];
   8283            static int LastCount;
   8284          
   8285          
   8286            if ((AlarmScreenAction[CurrentSheet].Active==0) && (AlarmScreenAction[CurrentSheet].SecToActive>0) && (g_counter>LastCount+1000))
   \   00000002   4000               LSLS     R0,R0,#+1
   \   00000004   2B49               LDR      R1,??Alarm_Refresh_0  ;; AlarmScreenAction
   \   00000006   0C18               ADDS     R4,R1,R0
   \   00000008   2078               LDRB     R0,[R4, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   4FD1               BNE      ??Alarm_Refresh_1
   \   0000000E   6078               LDRB     R0,[R4, #+1]
   \   00000010   0028               CMP      R0,#+0
   \   00000012   4CD0               BEQ      ??Alarm_Refresh_1
   \   00000014   284E               LDR      R6,??Alarm_Refresh_0+0x4  ;; g_counter
   \   00000016   294D               LDR      R5,??Alarm_Refresh_0+0x8  ;; TextToChangeLength
   \   00000018   A86F               LDR      R0,[R5, #+120]
   \   0000001A   FA21               MOVS     R1,#+250
   \   0000001C   8900               LSLS     R1,R1,#+2        ;; #+1000
   \   0000001E   4018               ADDS     R0,R0,R1
   \   00000020   C117               ASRS     R1,R0,#+31
   \   00000022   0200               MOVS     R2,R0
   \   00000024   0B00               MOVS     R3,R1
   \   00000026   03CE               LDM      R6!,{R0,R1}
   \   00000028   083E               SUBS     R6,R6,#+8
   \   0000002A   8B42               CMP      R3,R1
   \   0000002C   3FD8               BHI      ??Alarm_Refresh_1
   \   0000002E   01D3               BCC      ??Alarm_Refresh_2
   \   00000030   8242               CMP      R2,R0
   \   00000032   3CD2               BCS      ??Alarm_Refresh_1
   8287                {
   8288                  CleanCanvas(); 
   \                     ??Alarm_Refresh_2:
   \   00000034   ........           BL       CleanCanvas
   8289                  AlarmScreenAction[CurrentSheet].SecToActive--;
   \   00000038   6078               LDRB     R0,[R4, #+1]
   \   0000003A   401E               SUBS     R0,R0,#+1
   \   0000003C   6070               STRB     R0,[R4, #+1]
   8290                  Label(Speech[g_leng].AktywacjaZa,2,1,80,15,59,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw)   
   \   0000003E   82B0               SUB      SP,SP,#+8
   \   00000040   0020               MOVS     R0,#+0
   \   00000042   0090               STR      R0,[SP, #+0]
   \   00000044   6921               MOVS     R1,#+105
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   3B21               MOVS     R1,#+59
   \   0000004A   0F20               MOVS     R0,#+15
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   5023               MOVS     R3,#+80
   \   00000050   0122               MOVS     R2,#+1
   \   00000052   0221               MOVS     R1,#+2
   \   00000054   8C46               MOV      R12,R1
   \   00000056   1A49               LDR      R1,??Alarm_Refresh_0+0xC  ;; 0x7bc
   \   00000058   1A48               LDR      R0,??Alarm_Refresh_0+0x10  ;; g_leng
   \   0000005A   0068               LDR      R0,[R0, #+0]
   \   0000005C   1A4F               LDR      R7,??Alarm_Refresh_0+0x14  ;; 0xa14
   \   0000005E   7843               MULS     R0,R7,R0
   \   00000060   1A4F               LDR      R7,??Alarm_Refresh_0+0x18  ;; Speech
   \   00000062   3818               ADDS     R0,R7,R0
   \   00000064   4018               ADDS     R0,R0,R1
   \   00000066   6146               MOV      R1,R12
   \   00000068   ........           BL       Label
   \   0000006C   06B0               ADD      SP,SP,#+24
   8291          
   8292                  
   8293                  LastCount=g_counter;
   \   0000006E   03CE               LDM      R6!,{R0,R1}
   \   00000070   A867               STR      R0,[R5, #+120]
   8294                  dl=CharToStr(AlarmScreenAction[CurrentSheet].SecToActive, txt,2);
   \   00000072   0222               MOVS     R2,#+2
   \   00000074   6946               MOV      R1,SP
   \   00000076   6078               LDRB     R0,[R4, #+1]
   \   00000078   ........           BL       CharToStr
   \   0000007C   0200               MOVS     R2,R0
   8295                  Label20(txt,2,0,45,dl,64,0,105,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
                         ^
Warning[Pe223]: function "Label20" declared implicitly
   \   0000007E   82B0               SUB      SP,SP,#+8
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   0090               STR      R0,[SP, #+0]
   \   00000084   6921               MOVS     R1,#+105
   \   00000086   03B4               PUSH     {R0,R1}
   \   00000088   4021               MOVS     R1,#+64
   \   0000008A   1000               MOVS     R0,R2
   \   0000008C   03B4               PUSH     {R0,R1}
   \   0000008E   2D23               MOVS     R3,#+45
   \   00000090   0022               MOVS     R2,#+0
   \   00000092   0221               MOVS     R1,#+2
   \   00000094   06A8               ADD      R0,SP,#+24
   \   00000096   ........           BL       Label20
   \   0000009A   06B0               ADD      SP,SP,#+24
   8296          
   8297                  if (AlarmScreenAction[CurrentSheet].SecToActive==0)
   \   0000009C   6078               LDRB     R0,[R4, #+1]
   \   0000009E   0028               CMP      R0,#+0
   \   000000A0   05D1               BNE      ??Alarm_Refresh_1
   8298                  {
   8299                    MenuLevel=14;
   \   000000A2   0E20               MOVS     R0,#+14
   \   000000A4   A864               STR      R0,[R5, #+72]
   8300                    AlarmScreenAction[CurrentSheet].Active=1;
   \   000000A6   0120               MOVS     R0,#+1
   \   000000A8   2070               STRB     R0,[R4, #+0]
   8301                    MenuPaint(); 
   \   000000AA   ........           BL       MenuPaint
   8302                  }
   8303                }
   8304          
   8305          }//_______________________ Koniec funkcji Alarm_Refresh __________________________
   \                     ??Alarm_Refresh_1:
   \   000000AE   FEBC               POP      {R1-R7}
   \   000000B0   01BC               POP      {R0}
   \   000000B2   0047               BX       R0               ;; return
   \                     ??Alarm_Refresh_0:
   \   000000B4   ........           DC32     AlarmScreenAction
   \   000000B8   ........           DC32     g_counter
   \   000000BC   ........           DC32     TextToChangeLength
   \   000000C0   BC070000           DC32     0x7bc
   \   000000C4   ........           DC32     g_leng
   \   000000C8   140A0000           DC32     0xa14
   \   000000CC   ........           DC32     Speech
   8306            
   8307          
   8308          
   8309          
   8310          
   8311          
   8312          
   8313          
   8314          //*-----------------------------------------------------------------------------
   8315          //* Nazwa funkcji :    Alarm_Paint
   8316          //* Funkcja strony g³ównej menu
   8317          //*-----------------------------------------------------------------------------
   8318          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   8319          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8320          void AlarmPass_Paint(char CurrentSheet)
   8321          {
   \                     AlarmPass_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   8322          
   8323                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   164C               LDR      R4,??AlarmPass_Paint_0  ;; 0xa14
   \   00000004   164D               LDR      R5,??AlarmPass_Paint_0+0x4  ;; g_leng
   \   00000006   174E               LDR      R6,??AlarmPass_Paint_0+0x8  ;; Speech
   \   00000008   17A2               ADR      R2,??AlarmPass_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000A   18A1               ADR      R1,??AlarmPass_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000C   FF20               MOVS     R0,#+255
   \   0000000E   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000010   2B68               LDR      R3,[R5, #+0]
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   F318               ADDS     R3,R6,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   8324                    Label(Speech[g_leng].Haslo,0,3,102,15,58,0,127,0);
   \   0000001C   82B0               SUB      SP,SP,#+8
   \   0000001E   0020               MOVS     R0,#+0
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   7F21               MOVS     R1,#+127
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   3A21               MOVS     R1,#+58
   \   00000028   0F20               MOVS     R0,#+15
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   6623               MOVS     R3,#+102
   \   0000002E   0322               MOVS     R2,#+3
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   FF20               MOVS     R0,#+255
   \   00000034   D230               ADDS     R0,R0,#+210      ;; #+465
   \   00000036   2D68               LDR      R5,[R5, #+0]
   \   00000038   6543               MULS     R5,R4,R5
   \   0000003A   7419               ADDS     R4,R6,R5
   \   0000003C   2018               ADDS     R0,R4,R0
   \   0000003E   ........           BL       Label
   \   00000042   06B0               ADD      SP,SP,#+24
   8325                    CleanCanvasArea(0,113,64,15,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \   00000044   82B0               SUB      SP,SP,#+8
   \   00000046   0020               MOVS     R0,#+0
   \   00000048   0090               STR      R0,[SP, #+0]
   \   0000004A   0F23               MOVS     R3,#+15
   \   0000004C   4022               MOVS     R2,#+64
   \   0000004E   7121               MOVS     R1,#+113
   \   00000050   ........           BL       CleanCanvasArea
   \   00000054   02B0               ADD      SP,SP,#+8
   8326                
   8327          }//_______________________ Koniec funkcji AlarmPass_Paint __________________________
   \   00000056   70BC               POP      {R4-R6}
   \   00000058   01BC               POP      {R0}
   \   0000005A   0047               BX       R0               ;; return
   \                     ??AlarmPass_Paint_0:
   \   0000005C   140A0000           DC32     0xa14
   \   00000060   ........           DC32     g_leng
   \   00000064   ........           DC32     Speech
   \   00000068   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   0000006C   43000000           DC8      0x43, 0x00, 0x00, 0x00
   8328            
   8329          
   8330          
   8331          
   8332          //*-----------------------------------------------------------------------------
   8333          //* Nazwa funkcji :    AlarmPass_Event
   8334          //*-----------------------------------------------------------------------------
   8335          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8336          void AlarmPass_Event(char CurrentSheet)
   8337          {
   \                     AlarmPass_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8338            char Repaint=0;
   8339          
   8340          
   8341             int ans;
   8342                  char roz=0;
   8343                    
   8344                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   6248               LDR      R0,??AlarmPass_Event_0  ;; Y_down
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   435E               LDRSH    R3,[R0, R1]
   \   00000008   6148               LDR      R0,??AlarmPass_Event_0+0x4  ;; X_down
   \   0000000A   425E               LDRSH    R2,[R0, R1]
   \   0000000C   6148               LDR      R0,??AlarmPass_Event_0+0x8  ;; Y_up
   \   0000000E   415E               LDRSH    R1,[R0, R1]
   \   00000010   6148               LDR      R0,??AlarmPass_Event_0+0xC  ;; X_up
   \   00000012   0024               MOVS     R4,#+0
   \   00000014   005F               LDRSH    R0,[R0, R4]
   \   00000016   ........           BL       Number_Event
   \   0000001A   0400               MOVS     R4,R0
   8345            
   8346                  if (ans>0)          {
   \   0000001C   012C               CMP      R4,#+1
   \   0000001E   00DA               BGE      .+4
   \   00000020   AFE0               B        ??AlarmPass_Event_1
   8347                      
   8348                      if (InsertPass1[4]<=3) 
   \   00000022   5E4D               LDR      R5,??AlarmPass_Event_0+0x10  ;; InsertPass1
   \   00000024   2879               LDRB     R0,[R5, #+4]
   \   00000026   0428               CMP      R0,#+4
   \   00000028   10D2               BCS      ??AlarmPass_Event_2
   8349                      { 
   8350                          if ((ans<10) || (ans==11)) 
   \   0000002A   0A2C               CMP      R4,#+10
   \   0000002C   01DB               BLT      ??AlarmPass_Event_3
   \   0000002E   0B2C               CMP      R4,#+11
   \   00000030   0CD1               BNE      ??AlarmPass_Event_2
   8351                          {
   8352                            if (ans<10) InsertPass1[InsertPass1[4]]=ans+48;
   \                     ??AlarmPass_Event_3:
   \   00000032   0A2C               CMP      R4,#+10
   \   00000034   02DA               BGE      ??AlarmPass_Event_4
   \   00000036   2100               MOVS     R1,R4
   \   00000038   3031               ADDS     R1,R1,#+48
   \   0000003A   2954               STRB     R1,[R5, R0]
   8353                            if (ans==11) InsertPass1[InsertPass1[4]]=ans+37;
   \                     ??AlarmPass_Event_4:
   \   0000003C   0B2C               CMP      R4,#+11
   \   0000003E   02D1               BNE      ??AlarmPass_Event_5
   \   00000040   2879               LDRB     R0,[R5, #+4]
   \   00000042   3021               MOVS     R1,#+48
   \   00000044   2954               STRB     R1,[R5, R0]
   8354                            InsertPass1[4]++;
   \                     ??AlarmPass_Event_5:
   \   00000046   2879               LDRB     R0,[R5, #+4]
   \   00000048   401C               ADDS     R0,R0,#+1
   \   0000004A   2871               STRB     R0,[R5, #+4]
   8355                          }
   8356                          
   8357                      }
   8358                      if ((ans==10) && (InsertPass1[4]>0) ) {InsertPass1[4]--; InsertPass1[InsertPass1[4]]=0;}
   \                     ??AlarmPass_Event_2:
   \   0000004C   0A2C               CMP      R4,#+10
   \   0000004E   08D1               BNE      ??AlarmPass_Event_6
   \   00000050   2879               LDRB     R0,[R5, #+4]
   \   00000052   0028               CMP      R0,#+0
   \   00000054   05D0               BEQ      ??AlarmPass_Event_6
   \   00000056   401E               SUBS     R0,R0,#+1
   \   00000058   2871               STRB     R0,[R5, #+4]
   \   0000005A   0006               LSLS     R0,R0,#+24
   \   0000005C   000E               LSRS     R0,R0,#+24
   \   0000005E   0021               MOVS     R1,#+0
   \   00000060   2954               STRB     R1,[R5, R0]
   8359                      
   8360                      
   8361                     char InsertPassVar=0;
   \                     ??AlarmPass_Event_6:
   \   00000062   0026               MOVS     R6,#+0
   \   00000064   3000               MOVS     R0,R6
   8362                     for (char i=0; i<=3; i++)  pass_tmp[i]=0;
   \   00000066   3100               MOVS     R1,R6
   \   00000068   3300               MOVS     R3,R6
   \   0000006A   04E0               B        ??AlarmPass_Event_7
   \                     ??AlarmPass_Event_8:
   \   0000006C   AA18               ADDS     R2,R5,R2
   \   0000006E   1373               STRB     R3,[R2, #+12]
   \   00000070   491C               ADDS     R1,R1,#+1
   \   00000072   0906               LSLS     R1,R1,#+24
   \   00000074   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPass_Event_7:
   \   00000076   0A00               MOVS     R2,R1
   \   00000078   042A               CMP      R2,#+4
   \   0000007A   F7D3               BCC      ??AlarmPass_Event_8
   8363                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<4))
   \                     ??AlarmPass_Event_9:
   \   0000007C   0100               MOVS     R1,R0
   \   0000007E   6A5C               LDRB     R2,[R5, R1]
   \   00000080   002A               CMP      R2,#+0
   \   00000082   09D0               BEQ      ??AlarmPass_Event_10
   \   00000084   0200               MOVS     R2,R0
   \   00000086   042A               CMP      R2,#+4
   \   00000088   06D2               BCS      ??AlarmPass_Event_10
   8364                     {
   8365                       pass_tmp[InsertPassVar]=42; //42="*"
   \   0000008A   6918               ADDS     R1,R5,R1
   \   0000008C   2A22               MOVS     R2,#+42
   \   0000008E   0A73               STRB     R2,[R1, #+12]
   8366                       InsertPassVar++;
   \   00000090   401C               ADDS     R0,R0,#+1
   \   00000092   0006               LSLS     R0,R0,#+24
   \   00000094   000E               LSRS     R0,R0,#+24
   \   00000096   F1E7               B        ??AlarmPass_Event_9
   8367                     }
   8368          
   8369                      
   8370                      //Sprawdzenie has³a
   8371                      if (ans==12)
   \                     ??AlarmPass_Event_10:
   \   00000098   0C2C               CMP      R4,#+12
   \   0000009A   5AD1               BNE      ??AlarmPass_Event_11
   8372                      {
   8373                        roz=0;
   \   0000009C   3000               MOVS     R0,R6
   8374                        for (int i=0; i<=3; i++)
   \   0000009E   3100               MOVS     R1,R6
   \   000000A0   23E0               B        ??AlarmPass_Event_12
   \                     ??AlarmPass_Event_13:
   \   000000A2   6A46               MOV      R2,SP
   \   000000A4   1278               LDRB     R2,[R2, #+0]
   \   000000A6   9200               LSLS     R2,R2,#+2
   \   000000A8   3D4B               LDR      R3,??AlarmPass_Event_0+0x14  ;; 0x13d7ee
   \   000000AA   9A18               ADDS     R2,R3,R2
   \   000000AC   6B5C               LDRB     R3,[R5, R1]
   \   000000AE   575C               LDRB     R7,[R2, R1]
   \   000000B0   BB42               CMP      R3,R7
   \   000000B2   00D0               BEQ      ??AlarmPass_Event_14
   8375                        {
   8376                            if ((InsertPass1[i]!=AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][i])) roz=1;
   \   000000B4   0120               MOVS     R0,#+1
   8377                            if  ((AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][0]==0) && 
   8378                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][1]==0) &&
   8379                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][2]==0) &&
   8380                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][3]==0) &&
   8381                                (InsertPass1[0]=='0') && 
   8382                                  (InsertPass1[1]=='0') && 
   8383                                    (InsertPass1[2]=='0') && 
   8384                                      (InsertPass1[3]=='0'))
   \                     ??AlarmPass_Event_14:
   \   000000B6   1378               LDRB     R3,[R2, #+0]
   \   000000B8   002B               CMP      R3,#+0
   \   000000BA   15D1               BNE      ??AlarmPass_Event_15
   \   000000BC   5378               LDRB     R3,[R2, #+1]
   \   000000BE   002B               CMP      R3,#+0
   \   000000C0   12D1               BNE      ??AlarmPass_Event_15
   \   000000C2   9378               LDRB     R3,[R2, #+2]
   \   000000C4   002B               CMP      R3,#+0
   \   000000C6   0FD1               BNE      ??AlarmPass_Event_15
   \   000000C8   D278               LDRB     R2,[R2, #+3]
   \   000000CA   002A               CMP      R2,#+0
   \   000000CC   0CD1               BNE      ??AlarmPass_Event_15
   \   000000CE   2A78               LDRB     R2,[R5, #+0]
   \   000000D0   302A               CMP      R2,#+48
   \   000000D2   09D1               BNE      ??AlarmPass_Event_15
   \   000000D4   6A78               LDRB     R2,[R5, #+1]
   \   000000D6   302A               CMP      R2,#+48
   \   000000D8   06D1               BNE      ??AlarmPass_Event_15
   \   000000DA   AA78               LDRB     R2,[R5, #+2]
   \   000000DC   302A               CMP      R2,#+48
   \   000000DE   03D1               BNE      ??AlarmPass_Event_15
   \   000000E0   EA78               LDRB     R2,[R5, #+3]
   \   000000E2   302A               CMP      R2,#+48
   \   000000E4   00D1               BNE      ??AlarmPass_Event_15
   8385                                {
   8386                                  roz=0;
   \   000000E6   3000               MOVS     R0,R6
   8387                                }
   8388                        }
   \                     ??AlarmPass_Event_15:
   \   000000E8   491C               ADDS     R1,R1,#+1
   \                     ??AlarmPass_Event_12:
   \   000000EA   0429               CMP      R1,#+4
   \   000000EC   D9DB               BLT      ??AlarmPass_Event_13
   8389                        
   8390                        if (roz==0)                                 //je¿eli poprawne haslo
   \   000000EE   0028               CMP      R0,#+0
   \   000000F0   1DD1               BNE      ??AlarmPass_Event_16
   8391                        {
   8392                           for (int i=0; i<=3; i++) InsertPass1[i]=0;
   \   000000F2   3100               MOVS     R1,R6
   \   000000F4   01E0               B        ??AlarmPass_Event_17
   \                     ??AlarmPass_Event_18:
   \   000000F6   2954               STRB     R1,[R5, R0]
   \   000000F8   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Event_17:
   \   000000FA   0428               CMP      R0,#+4
   \   000000FC   FBDB               BLT      ??AlarmPass_Event_18
   8393                           InsertPass1[4]=0;
   \   000000FE   3000               MOVS     R0,R6
   \   00000100   2871               STRB     R0,[R5, #+4]
   8394                           MESSAGE(Speech[g_leng].OchronaWyl); 
   \   00000102   2848               LDR      R0,??AlarmPass_Event_0+0x18  ;; 0x7e9
   \   00000104   2849               LDR      R1,??AlarmPass_Event_0+0x1C  ;; g_leng
   \   00000106   0968               LDR      R1,[R1, #+0]
   \   00000108   284A               LDR      R2,??AlarmPass_Event_0+0x20  ;; 0xa14
   \   0000010A   5143               MULS     R1,R2,R1
   \   0000010C   284A               LDR      R2,??AlarmPass_Event_0+0x24  ;; Speech
   \   0000010E   5118               ADDS     R1,R2,R1
   \   00000110   0818               ADDS     R0,R1,R0
   \   00000112   ........           BL       MESSAGE
   8395                           AlarmScreenAction[CurrentSheet].Active=0;
   \   00000116   6846               MOV      R0,SP
   \   00000118   0078               LDRB     R0,[R0, #+0]
   \   0000011A   4000               LSLS     R0,R0,#+1
   \   0000011C   2549               LDR      R1,??AlarmPass_Event_0+0x28  ;; AlarmScreenAction
   \   0000011E   3200               MOVS     R2,R6
   \   00000120   0A54               STRB     R2,[R1, R0]
   8396                           AlarmOn=0; 
   \   00000122   2548               LDR      R0,??AlarmPass_Event_0+0x2C  ;; AlarmOn
   \   00000124   0670               STRB     R6,[R0, #+0]
   8397                           MenuLevel=1;
   \   00000126   2548               LDR      R0,??AlarmPass_Event_0+0x30  ;; TextToChangeLength + 72
   \   00000128   0121               MOVS     R1,#+1
   \   0000012A   0160               STR      R1,[R0, #+0]
   \   0000012C   11E0               B        ??AlarmPass_Event_11
   8398                        } 
   8399                        else
   8400                        {
   8401                           //informacja o b³ednym hale
   8402                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??AlarmPass_Event_16:
   \   0000012E   3000               MOVS     R0,R6
   \   00000130   3100               MOVS     R1,R6
   \   00000132   01E0               B        ??AlarmPass_Event_19
   \                     ??AlarmPass_Event_20:
   \   00000134   2954               STRB     R1,[R5, R0]
   \   00000136   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPass_Event_19:
   \   00000138   0828               CMP      R0,#+8
   \   0000013A   FBDB               BLT      ??AlarmPass_Event_20
   8403                           InsertPass1[4]=0;
   \   0000013C   2E71               STRB     R6,[R5, #+4]
   8404                           MESSAGE(Speech[g_leng].BledneHaslo); 
   \   0000013E   2048               LDR      R0,??AlarmPass_Event_0+0x34  ;; 0x7da
   \   00000140   1949               LDR      R1,??AlarmPass_Event_0+0x1C  ;; g_leng
   \   00000142   0968               LDR      R1,[R1, #+0]
   \   00000144   194A               LDR      R2,??AlarmPass_Event_0+0x20  ;; 0xa14
   \   00000146   5143               MULS     R1,R2,R1
   \   00000148   194A               LDR      R2,??AlarmPass_Event_0+0x24  ;; Speech
   \   0000014A   5118               ADDS     R1,R2,R1
   \   0000014C   0818               ADDS     R0,R1,R0
   \   0000014E   ........           BL       MESSAGE
   8405                        }
   8406          
   8407                      }
   8408                     
   8409                      if ((ans>=1) && (ans<=11)) 
   \                     ??AlarmPass_Event_11:
   \   00000152   012C               CMP      R4,#+1
   \   00000154   17DB               BLT      ??AlarmPass_Event_21
   \   00000156   0C2C               CMP      R4,#+12
   \   00000158   15DA               BGE      ??AlarmPass_Event_21
   8410                      {
   8411                        MenuPaint();
   \                     ??AlarmPass_Event_22:
   \   0000015A   ........           BL       MenuPaint
   8412                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000015E   0F4D               LDR      R5,??AlarmPass_Event_0+0x10  ;; InsertPass1
   \   00000160   82B0               SUB      SP,SP,#+8
   \   00000162   0020               MOVS     R0,#+0
   \   00000164   0090               STR      R0,[SP, #+0]
   \   00000166   7F21               MOVS     R1,#+127
   \   00000168   03B4               PUSH     {R0,R1}
   \   0000016A   3721               MOVS     R1,#+55
   \   0000016C   2879               LDRB     R0,[R5, #+4]
   \   0000016E   03B4               PUSH     {R0,R1}
   \   00000170   5A23               MOVS     R3,#+90
   \   00000172   0422               MOVS     R2,#+4
   \   00000174   0221               MOVS     R1,#+2
   \   00000176   0C35               ADDS     R5,R5,#+12
   \   00000178   2800               MOVS     R0,R5
   \   0000017A   ........           BL       Label
   \   0000017E   06B0               ADD      SP,SP,#+24
   \   00000180   01E0               B        ??AlarmPass_Event_21
   8413                      }
   8414                      
   8415                    }  
   8416                    else if (ans==0) 
   \                     ??AlarmPass_Event_1:
   \   00000182   002C               CMP      R4,#+0
   \   00000184   E9D0               BEQ      ??AlarmPass_Event_22
   8417                      {
   8418                        MenuPaint();
   8419                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   8420                      } 
   8421             
   8422           
   8423            if (Repaint==1) MenuPaint();
   8424          }//_______________________ Koniec funkcji AlarmPass_Event __________________________
   \                     ??AlarmPass_Event_21:
   \   00000186   F8BC               POP      {R3-R7}
   \   00000188   01BC               POP      {R0}
   \   0000018A   0047               BX       R0               ;; return
   \                     ??AlarmPass_Event_0:
   \   0000018C   ........           DC32     Y_down
   \   00000190   ........           DC32     X_down
   \   00000194   ........           DC32     Y_up
   \   00000198   ........           DC32     X_up
   \   0000019C   ........           DC32     InsertPass1
   \   000001A0   EED71300           DC32     0x13d7ee
   \   000001A4   E9070000           DC32     0x7e9
   \   000001A8   ........           DC32     g_leng
   \   000001AC   140A0000           DC32     0xa14
   \   000001B0   ........           DC32     Speech
   \   000001B4   ........           DC32     AlarmScreenAction
   \   000001B8   ........           DC32     AlarmOn
   \   000001BC   ........           DC32     TextToChangeLength + 72
   \   000001C0   DA070000           DC32     0x7da
   8425            
   8426          
   8427          
   8428          
   8429          
   8430          
   8431          

   \                                 In section Debug.txt, align 4, keep-with-next
   8432          void AlarmPass_Refresh(void)
   8433          {
   \                     AlarmPass_Refresh:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   8EB0               SUB      SP,SP,#+56
   8434           
   8435                   //wskanik ¿ycia
   8436                    if (CurrentSheet==0) 
   \   00000004   3C48               LDR      R0,??AlarmPass_Refresh_0  ;; TextToChangeLength + 4
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   70D1               BNE      ??AlarmPass_Refresh_1
   8437                    {
   8438                    
   8439                      if ((MainSide_puls==0) || (MainSide_puls>3))
   \   0000000C   3B4C               LDR      R4,??AlarmPass_Refresh_0+0x4  ;; MainSide_puls
   \   0000000E   2578               LDRB     R5,[R4, #+0]
   \   00000010   002D               CMP      R5,#+0
   \   00000012   01D0               BEQ      ??AlarmPass_Refresh_2
   \   00000014   042D               CMP      R5,#+4
   \   00000016   39D3               BCC      ??AlarmPass_Refresh_3
   8440                      { 
   8441                        
   8442                        char ekran1[2][13] = {
   8443                                   {0,0,224,24,232,244,244,244,232,24,224,0,0},
   8444                                    {0,0,0,3,2,5,5,5,2,3,0,0,0}
   8445                                    };
   \                     ??AlarmPass_Refresh_2:
   \   00000018   394E               LDR      R6,??AlarmPass_Refresh_0+0x8  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`
   \   0000001A   6846               MOV      R0,SP
   \   0000001C   3100               MOVS     R1,R6
   \   0000001E   1C22               MOVS     R2,#+28
   \   00000020   ........           BL       __aeabi_memcpy4
   8446                  
   8447                        char ekranSlave[2][13] = {
   8448                                    {0,0,224,248,152,124,180,220,56,248,224,0,0},
   8449                                    {0,0,0,3,3,7,5,7,3,3,0,0,0},
   8450                                    };
   \   00000024   07A8               ADD      R0,SP,#+28
   \   00000026   1C36               ADDS     R6,R6,#+28
   \   00000028   3100               MOVS     R1,R6
   \   0000002A   1C22               MOVS     R2,#+28
   \   0000002C   ........           BL       __aeabi_memcpy4
   8451                        
   8452                        if ((SlaveMode) )//je¿eli tryb slave
   \   00000030   3448               LDR      R0,??AlarmPass_Refresh_0+0xC  ;; SlaveMode
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   0028               CMP      R0,#+0
   \   00000036   14D0               BEQ      ??AlarmPass_Refresh_4
   8453                        {
   8454                              for (char i=0; i<=12; i++)
   \   00000038   0021               MOVS     R1,#+0
   \                     ??AlarmPass_Refresh_5:
   \   0000003A   0800               MOVS     R0,R1
   \   0000003C   0D28               CMP      R0,#+13
   \   0000003E   25D2               BCS      ??AlarmPass_Refresh_3
   8455                              {
   8456                           
   8457                              LCD_Canvas[0][i+115]=ekranSlave[0][i];
   \   00000040   0A00               MOVS     R2,R1
   \   00000042   3148               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; LCD_Canvas
   \   00000044   8318               ADDS     R3,R0,R2
   \   00000046   7333               ADDS     R3,R3,#+115
   \   00000048   07AE               ADD      R6,SP,#+28
   \   0000004A   B65C               LDRB     R6,[R6, R2]
   \   0000004C   1E70               STRB     R6,[R3, #+0]
   8458                              LCD_Canvas[1][i+115]=ekranSlave[1][i];
   \   0000004E   8018               ADDS     R0,R0,R2
   \   00000050   F330               ADDS     R0,R0,#+243
   \   00000052   07AB               ADD      R3,SP,#+28
   \   00000054   9A18               ADDS     R2,R3,R2
   \   00000056   527B               LDRB     R2,[R2, #+13]
   \   00000058   0270               STRB     R2,[R0, #+0]
   8459                              }
   \   0000005A   491C               ADDS     R1,R1,#+1
   \   0000005C   0906               LSLS     R1,R1,#+24
   \   0000005E   090E               LSRS     R1,R1,#+24
   \   00000060   EBE7               B        ??AlarmPass_Refresh_5
   8460                        }else{
   8461                          
   8462                            for (char i=0; i<=12; i++)
   \                     ??AlarmPass_Refresh_4:
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   0FE0               B        ??AlarmPass_Refresh_6
   8463                            {
   8464                           
   8465                              LCD_Canvas[0][i+115]=ekran1[0][i];
   \                     ??AlarmPass_Refresh_7:
   \   00000066   0A00               MOVS     R2,R1
   \   00000068   2748               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; LCD_Canvas
   \   0000006A   8318               ADDS     R3,R0,R2
   \   0000006C   7333               ADDS     R3,R3,#+115
   \   0000006E   6E46               MOV      R6,SP
   \   00000070   B65C               LDRB     R6,[R6, R2]
   \   00000072   1E70               STRB     R6,[R3, #+0]
   8466                              LCD_Canvas[1][i+115]=ekran1[1][i];
   \   00000074   8018               ADDS     R0,R0,R2
   \   00000076   F330               ADDS     R0,R0,#+243
   \   00000078   6B46               MOV      R3,SP
   \   0000007A   9A18               ADDS     R2,R3,R2
   \   0000007C   527B               LDRB     R2,[R2, #+13]
   \   0000007E   0270               STRB     R2,[R0, #+0]
   8467                            }
   \   00000080   491C               ADDS     R1,R1,#+1
   \   00000082   0906               LSLS     R1,R1,#+24
   \   00000084   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPass_Refresh_6:
   \   00000086   0800               MOVS     R0,R1
   \   00000088   0D28               CMP      R0,#+13
   \   0000008A   ECD3               BCC      ??AlarmPass_Refresh_7
   8468                          }
   8469                       //if ((!g_SlaveConnect) && (SlaveMode)) H_line(2,121,7,0);
   8470                      }
   8471                      if ((MainSide_puls==1) )
   \                     ??AlarmPass_Refresh_3:
   \   0000008C   012D               CMP      R5,#+1
   \   0000008E   21D1               BNE      ??AlarmPass_Refresh_8
   8472                      {
   8473                        
   8474                        if ((g_SlaveConnect) || (!SlaveMode))
   \   00000090   1E48               LDR      R0,??AlarmPass_Refresh_0+0x14  ;; g_SlaveConnect
   \   00000092   0078               LDRB     R0,[R0, #+0]
   \   00000094   0028               CMP      R0,#+0
   \   00000096   03D1               BNE      ??AlarmPass_Refresh_9
   \   00000098   1A48               LDR      R0,??AlarmPass_Refresh_0+0xC  ;; SlaveMode
   \   0000009A   0078               LDRB     R0,[R0, #+0]
   \   0000009C   0028               CMP      R0,#+0
   \   0000009E   19D1               BNE      ??AlarmPass_Refresh_8
   8475                        {
   8476                          char ekran2[2][13] = {
   8477                                    {240,28,230,250,251,253,253,253,251,250,230,28,240},
   8478                                    {1,7,12,11,27,23,23,23,27,11,12,7,1},
   8479                                    };
   \                     ??AlarmPass_Refresh_9:
   \   000000A0   6846               MOV      R0,SP
   \   000000A2   1B49               LDR      R1,??AlarmPass_Refresh_0+0x18  ;; `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2` + 56
   \   000000A4   1C22               MOVS     R2,#+28
   \   000000A6   ........           BL       __aeabi_memcpy4
   8480                        
   8481                          for (char i=0; i<=12; i++)
   \   000000AA   0021               MOVS     R1,#+0
   \   000000AC   0FE0               B        ??AlarmPass_Refresh_10
   8482                          {
   8483                           
   8484                            LCD_Canvas[0][i+115]=ekran2[0][i];
   \                     ??AlarmPass_Refresh_11:
   \   000000AE   0A00               MOVS     R2,R1
   \   000000B0   1548               LDR      R0,??AlarmPass_Refresh_0+0x10  ;; LCD_Canvas
   \   000000B2   8318               ADDS     R3,R0,R2
   \   000000B4   7333               ADDS     R3,R3,#+115
   \   000000B6   6E46               MOV      R6,SP
   \   000000B8   B65C               LDRB     R6,[R6, R2]
   \   000000BA   1E70               STRB     R6,[R3, #+0]
   8485                            LCD_Canvas[1][i+115]=ekran2[1][i];
   \   000000BC   8018               ADDS     R0,R0,R2
   \   000000BE   F330               ADDS     R0,R0,#+243
   \   000000C0   6B46               MOV      R3,SP
   \   000000C2   9A18               ADDS     R2,R3,R2
   \   000000C4   527B               LDRB     R2,[R2, #+13]
   \   000000C6   0270               STRB     R2,[R0, #+0]
   8486                          }
   \   000000C8   491C               ADDS     R1,R1,#+1
   \   000000CA   0906               LSLS     R1,R1,#+24
   \   000000CC   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPass_Refresh_10:
   \   000000CE   0800               MOVS     R0,R1
   \   000000D0   0D28               CMP      R0,#+13
   \   000000D2   ECD3               BCC      ??AlarmPass_Refresh_11
   8487                        }
   8488                  
   8489                      }
   8490                       
   8491                  
   8492                    if (g_Stop_Program==0)
   \                     ??AlarmPass_Refresh_8:
   \   000000D4   0F48               LDR      R0,??AlarmPass_Refresh_0+0x1C  ;; g_Stop_Program
   \   000000D6   0078               LDRB     R0,[R0, #+0]
   \   000000D8   0028               CMP      R0,#+0
   \   000000DA   06D1               BNE      ??AlarmPass_Refresh_12
   8493                    {  
   8494                     if (MainSide_puls>7) {MainSide_puls=0;} else {MainSide_puls++;}    
   \   000000DC   082D               CMP      R5,#+8
   \   000000DE   01D3               BCC      ??AlarmPass_Refresh_13
   \   000000E0   2070               STRB     R0,[R4, #+0]
   \   000000E2   04E0               B        ??AlarmPass_Refresh_1
   \                     ??AlarmPass_Refresh_13:
   \   000000E4   6D1C               ADDS     R5,R5,#+1
   \   000000E6   2570               STRB     R5,[R4, #+0]
   \   000000E8   01E0               B        ??AlarmPass_Refresh_1
   8495                    }else{
   8496                      MainSide_puls=7; 
   \                     ??AlarmPass_Refresh_12:
   \   000000EA   0720               MOVS     R0,#+7
   \   000000EC   2070               STRB     R0,[R4, #+0]
   8497                    }
   8498                     
   8499                    }
   8500          
   8501          }//_______________________ Koniec funkcji AlarmPass_Refresh __________________________
   \                     ??AlarmPass_Refresh_1:
   \   000000EE   0EB0               ADD      SP,SP,#+56
   \   000000F0   70BC               POP      {R4-R6}
   \   000000F2   01BC               POP      {R0}
   \   000000F4   0047               BX       R0               ;; return
   \   000000F6   C046               Nop      
   \                     ??AlarmPass_Refresh_0:
   \   000000F8   ........           DC32     TextToChangeLength + 4
   \   000000FC   ........           DC32     MainSide_puls
   \   00000100   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`
   \   00000104   ........           DC32     SlaveMode
   \   00000108   ........           DC32     LCD_Canvas
   \   0000010C   ........           DC32     g_SlaveConnect
   \   00000110   ........           DC32     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2` + 56
   \   00000114   ........           DC32     g_Stop_Program
   8502          
   8503          
   8504          
   8505          
   8506          extern char APC;
   8507          //*-----------------------------------------------------------------------------
   8508          //* Nazwa funkcji :    Alarm_Paint
   8509          //* Funkcja strony g³ównej menu
   8510          //*-----------------------------------------------------------------------------
   8511          //* Efekt widoczny po odwierzeniu LCD (RepaintLCD)
   8512          //*-----------------------------------------------------------------------------
   8513          

   \                                 In section Debug.txt, align 4, keep-with-next
   8514          void AlarmPassChange_Paint(char CurrentSheet)
   8515          {
   \                     AlarmPassChange_Paint:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   8516          
   8517                    Number_Paint(Speech[g_leng].Wpisz,"C","E");
   \   00000002   224C               LDR      R4,??AlarmPassChange_Paint_0  ;; 0xa14
   \   00000004   224D               LDR      R5,??AlarmPassChange_Paint_0+0x4  ;; g_leng
   \   00000006   234E               LDR      R6,??AlarmPassChange_Paint_0+0x8  ;; Speech
   \   00000008   23A2               ADR      R2,??AlarmPassChange_Paint_0+0xC  ;; 0x45, 0x00, 0x00, 0x00
   \   0000000A   24A1               ADR      R1,??AlarmPassChange_Paint_0+0x10  ;; 0x43, 0x00, 0x00, 0x00
   \   0000000C   FF20               MOVS     R0,#+255
   \   0000000E   9630               ADDS     R0,R0,#+150      ;; #+405
   \   00000010   2B68               LDR      R3,[R5, #+0]
   \   00000012   6343               MULS     R3,R4,R3
   \   00000014   F318               ADDS     R3,R6,R3
   \   00000016   1818               ADDS     R0,R3,R0
   \   00000018   ........           BL       Number_Paint
   8518                    if (APC==0)
   \   0000001C   2048               LDR      R0,??AlarmPassChange_Paint_0+0x14  ;; APC
   \   0000001E   0078               LDRB     R0,[R0, #+0]
   \   00000020   0028               CMP      R0,#+0
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   13D1               BNE      ??AlarmPassChange_Paint_1
   8519                    {
   8520                      Label(Speech[g_leng].ObecneHaslo,0,3,102,15,58,0,127,0);
   \   00000026   0020               MOVS     R0,#+0
   \   00000028   0090               STR      R0,[SP, #+0]
   \   0000002A   7F21               MOVS     R1,#+127
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   3A21               MOVS     R1,#+58
   \   00000030   0F20               MOVS     R0,#+15
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   6623               MOVS     R3,#+102
   \   00000036   0322               MOVS     R2,#+3
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   FF20               MOVS     R0,#+255
   \   0000003C   7830               ADDS     R0,R0,#+120      ;; #+375
   \   0000003E   2D68               LDR      R5,[R5, #+0]
   \   00000040   6543               MULS     R5,R4,R5
   \   00000042   7419               ADDS     R4,R6,R5
   \   00000044   2018               ADDS     R0,R4,R0
   \   00000046   ........           BL       Label
   \   0000004A   06B0               ADD      SP,SP,#+24
   \   0000004C   12E0               B        ??AlarmPassChange_Paint_2
   8521                    }else{
   8522                      Label(Speech[g_leng].NoweHaslo,0,3,102,15,58,0,127,0);
   \                     ??AlarmPassChange_Paint_1:
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   7F21               MOVS     R1,#+127
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   3A21               MOVS     R1,#+58
   \   00000058   0F20               MOVS     R0,#+15
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   6623               MOVS     R3,#+102
   \   0000005E   0322               MOVS     R2,#+3
   \   00000060   0021               MOVS     R1,#+0
   \   00000062   C320               MOVS     R0,#+195
   \   00000064   4000               LSLS     R0,R0,#+1        ;; #+390
   \   00000066   2D68               LDR      R5,[R5, #+0]
   \   00000068   6543               MULS     R5,R4,R5
   \   0000006A   7419               ADDS     R4,R6,R5
   \   0000006C   2018               ADDS     R0,R4,R0
   \   0000006E   ........           BL       Label
   \   00000072   06B0               ADD      SP,SP,#+24
   8523                    }
   8524                    CleanCanvasArea(0,113,64,15,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??AlarmPassChange_Paint_2:
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   0F23               MOVS     R3,#+15
   \   0000007C   4022               MOVS     R2,#+64
   \   0000007E   7121               MOVS     R1,#+113
   \   00000080   ........           BL       CleanCanvasArea
   \   00000084   02B0               ADD      SP,SP,#+8
   8525                
   8526          }//_______________________ Koniec funkcji AlarmPass_Paint __________________________
   \   00000086   70BC               POP      {R4-R6}
   \   00000088   01BC               POP      {R0}
   \   0000008A   0047               BX       R0               ;; return
   \                     ??AlarmPassChange_Paint_0:
   \   0000008C   140A0000           DC32     0xa14
   \   00000090   ........           DC32     g_leng
   \   00000094   ........           DC32     Speech
   \   00000098   45000000           DC8      0x45, 0x00, 0x00, 0x00
   \   0000009C   43000000           DC8      0x43, 0x00, 0x00, 0x00
   \   000000A0   ........           DC32     APC
   8527            
   8528          
   8529          
   8530          
   8531          //*-----------------------------------------------------------------------------
   8532          //* Nazwa funkcji :    AlarmPass_Event
   8533          //*-----------------------------------------------------------------------------
   8534          //*-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8535          void AlarmPassChange_Event(char CurrentSheet)
   8536          {
   \                     AlarmPassChange_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   8537            short int Repaint=0;
   \   00000004   0024               MOVS     R4,#+0
   \   00000006   6846               MOV      R0,SP
   \   00000008   2100               MOVS     R1,R4
   \   0000000A   0180               STRH     R1,[R0, #+0]
   8538          
   8539          
   8540          
   8541            short int ans;
   8542                  short int roz=0;
   8543                    
   8544                  ans=Number_Event(X_up, Y_up, X_down, Y_down); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000000C   6C48               LDR      R0,??AlarmPassChange_Event_0  ;; Y_down
   \   0000000E   435E               LDRSH    R3,[R0, R1]
   \   00000010   6C48               LDR      R0,??AlarmPassChange_Event_0+0x4  ;; X_down
   \   00000012   425E               LDRSH    R2,[R0, R1]
   \   00000014   6C48               LDR      R0,??AlarmPassChange_Event_0+0x8  ;; Y_up
   \   00000016   415E               LDRSH    R1,[R0, R1]
   \   00000018   6C48               LDR      R0,??AlarmPassChange_Event_0+0xC  ;; X_up
   \   0000001A   0025               MOVS     R5,#+0
   \   0000001C   405F               LDRSH    R0,[R0, R5]
   \   0000001E   ........           BL       Number_Event
   \   00000022   0500               MOVS     R5,R0
   \   00000024   2D04               LSLS     R5,R5,#+16
   \   00000026   2D14               ASRS     R5,R5,#+16
   8545            
   8546                  if (ans>0)          {
   \   00000028   012D               CMP      R5,#+1
   \   0000002A   00DA               BGE      .+4
   \   0000002C   BBE0               B        ??AlarmPassChange_Event_1
   8547                      
   8548                      if (InsertPass1[4]<=3) 
   \   0000002E   684F               LDR      R7,??AlarmPassChange_Event_0+0x10  ;; InsertPass1
   \   00000030   3879               LDRB     R0,[R7, #+4]
   \   00000032   0428               CMP      R0,#+4
   \   00000034   10D2               BCS      ??AlarmPassChange_Event_2
   8549                      { 
   8550                          if ((ans<10) || (ans==11)) 
   \   00000036   0A2D               CMP      R5,#+10
   \   00000038   01DB               BLT      ??AlarmPassChange_Event_3
   \   0000003A   0B2D               CMP      R5,#+11
   \   0000003C   0CD1               BNE      ??AlarmPassChange_Event_2
   8551                          {
   8552                            if (ans<10) InsertPass1[InsertPass1[4]]=ans+48;
   \                     ??AlarmPassChange_Event_3:
   \   0000003E   0A2D               CMP      R5,#+10
   \   00000040   02DA               BGE      ??AlarmPassChange_Event_4
   \   00000042   2900               MOVS     R1,R5
   \   00000044   3031               ADDS     R1,R1,#+48
   \   00000046   3954               STRB     R1,[R7, R0]
   8553                            if (ans==11) InsertPass1[InsertPass1[4]]=ans+37;
   \                     ??AlarmPassChange_Event_4:
   \   00000048   0B2D               CMP      R5,#+11
   \   0000004A   02D1               BNE      ??AlarmPassChange_Event_5
   \   0000004C   3879               LDRB     R0,[R7, #+4]
   \   0000004E   3021               MOVS     R1,#+48
   \   00000050   3954               STRB     R1,[R7, R0]
   8554                            InsertPass1[4]++;
   \                     ??AlarmPassChange_Event_5:
   \   00000052   3879               LDRB     R0,[R7, #+4]
   \   00000054   401C               ADDS     R0,R0,#+1
   \   00000056   3871               STRB     R0,[R7, #+4]
   8555                          }
   8556                          
   8557                      }
   8558                      if ((ans==10) && (InsertPass1[4]>0) ) {InsertPass1[4]--; InsertPass1[InsertPass1[4]]=0;}
   \                     ??AlarmPassChange_Event_2:
   \   00000058   0A2D               CMP      R5,#+10
   \   0000005A   08D1               BNE      ??AlarmPassChange_Event_6
   \   0000005C   3879               LDRB     R0,[R7, #+4]
   \   0000005E   0028               CMP      R0,#+0
   \   00000060   05D0               BEQ      ??AlarmPassChange_Event_6
   \   00000062   401E               SUBS     R0,R0,#+1
   \   00000064   3871               STRB     R0,[R7, #+4]
   \   00000066   0006               LSLS     R0,R0,#+24
   \   00000068   000E               LSRS     R0,R0,#+24
   \   0000006A   2100               MOVS     R1,R4
   \   0000006C   3954               STRB     R1,[R7, R0]
   8559                      
   8560                      
   8561                     short int InsertPassVar=0;
   \                     ??AlarmPassChange_Event_6:
   \   0000006E   2000               MOVS     R0,R4
   8562                     for (char i=0; i<=3; i++)  pass_tmp[i]=0;
   \   00000070   2100               MOVS     R1,R4
   \   00000072   2300               MOVS     R3,R4
   \   00000074   04E0               B        ??AlarmPassChange_Event_7
   \                     ??AlarmPassChange_Event_8:
   \   00000076   BA18               ADDS     R2,R7,R2
   \   00000078   1373               STRB     R3,[R2, #+12]
   \   0000007A   491C               ADDS     R1,R1,#+1
   \   0000007C   0906               LSLS     R1,R1,#+24
   \   0000007E   090E               LSRS     R1,R1,#+24
   \                     ??AlarmPassChange_Event_7:
   \   00000080   0A00               MOVS     R2,R1
   \   00000082   042A               CMP      R2,#+4
   \   00000084   F7D3               BCC      ??AlarmPassChange_Event_8
   8563                     while ((InsertPass1[InsertPassVar]) &&  (InsertPassVar<4))
   \                     ??AlarmPassChange_Event_9:
   \   00000086   395C               LDRB     R1,[R7, R0]
   \   00000088   0029               CMP      R1,#+0
   \   0000008A   08D0               BEQ      ??AlarmPassChange_Event_10
   \   0000008C   0428               CMP      R0,#+4
   \   0000008E   06DA               BGE      ??AlarmPassChange_Event_10
   8564                     {
   8565                       pass_tmp[InsertPassVar]=42; //42="*"
   \   00000090   3918               ADDS     R1,R7,R0
   \   00000092   2A22               MOVS     R2,#+42
   \   00000094   0A73               STRB     R2,[R1, #+12]
   8566                       InsertPassVar++;
   \   00000096   401C               ADDS     R0,R0,#+1
   \   00000098   0004               LSLS     R0,R0,#+16
   \   0000009A   0014               ASRS     R0,R0,#+16
   \   0000009C   F3E7               B        ??AlarmPassChange_Event_9
   8567                     }
   8568          
   8569                    
   8570                      //Sprawdzenie has³a
   8571                      if (ans==12)
   \                     ??AlarmPassChange_Event_10:
   \   0000009E   0C2D               CMP      R5,#+12
   \   000000A0   69D1               BNE      ??AlarmPassChange_Event_11
   8572                      {
   8573                        
   8574                        roz=0;
   \   000000A2   2000               MOVS     R0,R4
   8575                        for (int i=0; i<=3; i++)
   \   000000A4   2100               MOVS     R1,R4
   \   000000A6   27E0               B        ??AlarmPassChange_Event_12
   8576                        {
   8577                          if (APC==0)
   \                     ??AlarmPassChange_Event_13:
   \   000000A8   4A4A               LDR      R2,??AlarmPassChange_Event_0+0x14  ;; APC
   \   000000AA   1278               LDRB     R2,[R2, #+0]
   \   000000AC   002A               CMP      R2,#+0
   \   000000AE   22D1               BNE      ??AlarmPassChange_Event_14
   8578                          {
   8579                            if ((InsertPass1[i]!=AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][i])) roz=1;
   \   000000B0   6A46               MOV      R2,SP
   \   000000B2   127A               LDRB     R2,[R2, #+8]
   \   000000B4   9200               LSLS     R2,R2,#+2
   \   000000B6   484B               LDR      R3,??AlarmPassChange_Event_0+0x18  ;; 0x13d7ee
   \   000000B8   9A18               ADDS     R2,R3,R2
   \   000000BA   7B5C               LDRB     R3,[R7, R1]
   \   000000BC   565C               LDRB     R6,[R2, R1]
   \   000000BE   B342               CMP      R3,R6
   \   000000C0   00D0               BEQ      ??AlarmPassChange_Event_15
   \   000000C2   0120               MOVS     R0,#+1
   8580                            if  ((AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][0]==0) && 
   8581                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][1]==0) &&
   8582                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][2]==0) &&
   8583                                (AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet][3]==0) &&
   8584                                (InsertPass1[0]=='0') && 
   8585                                  (InsertPass1[1]=='0') && 
   8586                                    (InsertPass1[2]=='0') && 
   8587                                      (InsertPass1[3]=='0'))
   \                     ??AlarmPassChange_Event_15:
   \   000000C4   1378               LDRB     R3,[R2, #+0]
   \   000000C6   002B               CMP      R3,#+0
   \   000000C8   15D1               BNE      ??AlarmPassChange_Event_14
   \   000000CA   5378               LDRB     R3,[R2, #+1]
   \   000000CC   002B               CMP      R3,#+0
   \   000000CE   12D1               BNE      ??AlarmPassChange_Event_14
   \   000000D0   9378               LDRB     R3,[R2, #+2]
   \   000000D2   002B               CMP      R3,#+0
   \   000000D4   0FD1               BNE      ??AlarmPassChange_Event_14
   \   000000D6   D278               LDRB     R2,[R2, #+3]
   \   000000D8   002A               CMP      R2,#+0
   \   000000DA   0CD1               BNE      ??AlarmPassChange_Event_14
   \   000000DC   3A78               LDRB     R2,[R7, #+0]
   \   000000DE   302A               CMP      R2,#+48
   \   000000E0   09D1               BNE      ??AlarmPassChange_Event_14
   \   000000E2   7A78               LDRB     R2,[R7, #+1]
   \   000000E4   302A               CMP      R2,#+48
   \   000000E6   06D1               BNE      ??AlarmPassChange_Event_14
   \   000000E8   BA78               LDRB     R2,[R7, #+2]
   \   000000EA   302A               CMP      R2,#+48
   \   000000EC   03D1               BNE      ??AlarmPassChange_Event_14
   \   000000EE   FA78               LDRB     R2,[R7, #+3]
   \   000000F0   302A               CMP      R2,#+48
   \   000000F2   00D1               BNE      ??AlarmPassChange_Event_14
   8588                                {
   8589                                  roz=0;
   \   000000F4   2000               MOVS     R0,R4
   8590                                }
   8591                           
   8592                            
   8593                          }
   8594                        }
   \                     ??AlarmPassChange_Event_14:
   \   000000F6   491C               ADDS     R1,R1,#+1
   \                     ??AlarmPassChange_Event_12:
   \   000000F8   0429               CMP      R1,#+4
   \   000000FA   D5DB               BLT      ??AlarmPassChange_Event_13
   8595                        
   8596                        
   8597                        if (roz==0)                                 //je¿eli poprawne haslo
   \   000000FC   0028               CMP      R0,#+0
   \   000000FE   28D1               BNE      ??AlarmPassChange_Event_16
   8598                        {
   8599                           
   8600                           
   8601          
   8602                           if (APC==1)
   \   00000100   3448               LDR      R0,??AlarmPassChange_Event_0+0x14  ;; APC
   \   00000102   0178               LDRB     R1,[R0, #+0]
   \   00000104   0129               CMP      R1,#+1
   \   00000106   16D1               BNE      ??AlarmPassChange_Event_17
   8603                           {
   8604                              APC=0;
   \   00000108   2100               MOVS     R1,R4
   \   0000010A   0170               STRB     R1,[R0, #+0]
   8605                              MenuLevel=1;
   \   0000010C   3348               LDR      R0,??AlarmPassChange_Event_0+0x1C  ;; TextToChangeLength + 72
   \   0000010E   0121               MOVS     R1,#+1
   \   00000110   0160               STR      R1,[R0, #+0]
   8606                              
   8607                              unsigned int Save = __get_interrupt_state();  
   \   00000112   ........           BL       __iar_get_interrupt_state
   \   00000116   0600               MOVS     R6,R0
   8608                              __disable_interrupt();
   \   00000118   ........           BL       __iar_disable_interrupt
   8609                                      FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.AlarmPass[CurrentSheet])), InsertPass1, 4);
                                             ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000011C   0422               MOVS     R2,#+4
   \   0000011E   3900               MOVS     R1,R7
   \   00000120   6846               MOV      R0,SP
   \   00000122   007A               LDRB     R0,[R0, #+8]
   \   00000124   8000               LSLS     R0,R0,#+2
   \   00000126   2C4B               LDR      R3,??AlarmPassChange_Event_0+0x18  ;; 0x13d7ee
   \   00000128   1818               ADDS     R0,R3,R0
   \   0000012A   ........           BL       FlashWrite
   8610                              __set_interrupt_state(Save);
   \   0000012E   3000               MOVS     R0,R6
   \   00000130   ........           BL       __iar_set_interrupt_state
   \   00000134   01E0               B        ??AlarmPassChange_Event_18
   8611                              
   8612                           }else{
   8613                            APC=1; 
   \                     ??AlarmPassChange_Event_17:
   \   00000136   0121               MOVS     R1,#+1
   \   00000138   0170               STRB     R1,[R0, #+0]
   8614                           }
   8615                           for (int i=0; i<=3; i++) InsertPass1[i]=0;
   \                     ??AlarmPassChange_Event_18:
   \   0000013A   2000               MOVS     R0,R4
   \   0000013C   2100               MOVS     R1,R4
   \   0000013E   01E0               B        ??AlarmPassChange_Event_19
   \                     ??AlarmPassChange_Event_20:
   \   00000140   3954               STRB     R1,[R7, R0]
   \   00000142   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPassChange_Event_19:
   \   00000144   0428               CMP      R0,#+4
   \   00000146   FBDB               BLT      ??AlarmPassChange_Event_20
   8616                           InsertPass1[4]=0;
   \   00000148   3C71               STRB     R4,[R7, #+4]
   8617                           Repaint=1;
   \   0000014A   6846               MOV      R0,SP
   \   0000014C   0121               MOVS     R1,#+1
   \   0000014E   0180               STRH     R1,[R0, #+0]
   \   00000150   11E0               B        ??AlarmPassChange_Event_11
   8618                        } 
   8619                        else
   8620                        {
   8621                           //informacja o b³ednym hale
   8622                          for (int i=0; i<=7; i++) InsertPass1[i]=0;
   \                     ??AlarmPassChange_Event_16:
   \   00000152   2000               MOVS     R0,R4
   \   00000154   2100               MOVS     R1,R4
   \   00000156   01E0               B        ??AlarmPassChange_Event_21
   \                     ??AlarmPassChange_Event_22:
   \   00000158   3954               STRB     R1,[R7, R0]
   \   0000015A   401C               ADDS     R0,R0,#+1
   \                     ??AlarmPassChange_Event_21:
   \   0000015C   0828               CMP      R0,#+8
   \   0000015E   FBDB               BLT      ??AlarmPassChange_Event_22
   8623                           InsertPass1[4]=0;
   \   00000160   3C71               STRB     R4,[R7, #+4]
   8624                           MESSAGE(Speech[g_leng].BledneHaslo); 
   \   00000162   1F48               LDR      R0,??AlarmPassChange_Event_0+0x20  ;; 0x7da
   \   00000164   1F49               LDR      R1,??AlarmPassChange_Event_0+0x24  ;; g_leng
   \   00000166   0968               LDR      R1,[R1, #+0]
   \   00000168   1F4A               LDR      R2,??AlarmPassChange_Event_0+0x28  ;; 0xa14
   \   0000016A   5143               MULS     R1,R2,R1
   \   0000016C   1F4A               LDR      R2,??AlarmPassChange_Event_0+0x2C  ;; Speech
   \   0000016E   5118               ADDS     R1,R2,R1
   \   00000170   0818               ADDS     R0,R1,R0
   \   00000172   ........           BL       MESSAGE
   8625                        }
   8626                        
   8627          
   8628                      }
   8629                     
   8630                      if ((ans>=1) && (ans<=11)) 
   \                     ??AlarmPassChange_Event_11:
   \   00000176   012D               CMP      R5,#+1
   \   00000178   17DB               BLT      ??AlarmPassChange_Event_23
   \   0000017A   0C2D               CMP      R5,#+12
   \   0000017C   15DA               BGE      ??AlarmPassChange_Event_23
   8631                      {
   8632                        MenuPaint();
   \                     ??AlarmPassChange_Event_24:
   \   0000017E   ........           BL       MenuPaint
   8633                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000182   134F               LDR      R7,??AlarmPassChange_Event_0+0x10  ;; InsertPass1
   \   00000184   82B0               SUB      SP,SP,#+8
   \   00000186   2000               MOVS     R0,R4
   \   00000188   0090               STR      R0,[SP, #+0]
   \   0000018A   7F21               MOVS     R1,#+127
   \   0000018C   03B4               PUSH     {R0,R1}
   \   0000018E   3721               MOVS     R1,#+55
   \   00000190   3879               LDRB     R0,[R7, #+4]
   \   00000192   03B4               PUSH     {R0,R1}
   \   00000194   5A23               MOVS     R3,#+90
   \   00000196   0422               MOVS     R2,#+4
   \   00000198   0221               MOVS     R1,#+2
   \   0000019A   0C37               ADDS     R7,R7,#+12
   \   0000019C   3800               MOVS     R0,R7
   \   0000019E   ........           BL       Label
   \   000001A2   06B0               ADD      SP,SP,#+24
   \   000001A4   01E0               B        ??AlarmPassChange_Event_23
   8634                      }
   8635                      
   8636                    }  
   8637                    else if (ans==0) 
   \                     ??AlarmPassChange_Event_1:
   \   000001A6   002D               CMP      R5,#+0
   \   000001A8   E9D0               BEQ      ??AlarmPassChange_Event_24
   8638                      {
   8639                        MenuPaint();
   8640                        Label(pass_tmp,2,4,90,InsertPass1[4],55,0,127,0);//(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   8641                     } 
   8642           
   8643          
   8644           
   8645          
   8646          
   8647           
   8648            if (Repaint==1) MenuPaint();
   \                     ??AlarmPassChange_Event_23:
   \   000001AA   6946               MOV      R1,SP
   \   000001AC   2000               MOVS     R0,R4
   \   000001AE   085E               LDRSH    R0,[R1, R0]
   \   000001B0   0128               CMP      R0,#+1
   \   000001B2   01D1               BNE      ??AlarmPassChange_Event_25
   \   000001B4   ........           BL       MenuPaint
   8649          }//_______________________ Koniec funkcji AlarmPass_Event __________________________
   \                     ??AlarmPassChange_Event_25:
   \   000001B8   FEBC               POP      {R1-R7}
   \   000001BA   01BC               POP      {R0}
   \   000001BC   0047               BX       R0               ;; return
   \   000001BE   C046               Nop      
   \                     ??AlarmPassChange_Event_0:
   \   000001C0   ........           DC32     Y_down
   \   000001C4   ........           DC32     X_down
   \   000001C8   ........           DC32     Y_up
   \   000001CC   ........           DC32     X_up
   \   000001D0   ........           DC32     InsertPass1
   \   000001D4   ........           DC32     APC
   \   000001D8   EED71300           DC32     0x13d7ee
   \   000001DC   ........           DC32     TextToChangeLength + 72
   \   000001E0   DA070000           DC32     0x7da
   \   000001E4   ........           DC32     g_leng
   \   000001E8   140A0000           DC32     0xa14
   \   000001EC   ........           DC32     Speech
   8650            
   8651          
   8652          
   8653          
   8654          
   8655                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8656                void Node_Paint(char CurrentNode)
   8657                {
   \                     Node_Paint:
   \   00000000   07B5               PUSH     {R0-R2,LR}
   8658                  char txt[8];
   8659                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000002   6946               MOV      R1,SP
   \   00000004   4E22               MOVS     R2,#+78
   \   00000006   0A70               STRB     R2,[R1, #+0]
   \   00000008   6F22               MOVS     R2,#+111
   \   0000000A   4A70               STRB     R2,[R1, #+1]
   \   0000000C   6422               MOVS     R2,#+100
   \   0000000E   8A70               STRB     R2,[R1, #+2]
   \   00000010   6522               MOVS     R2,#+101
   \   00000012   CA70               STRB     R2,[R1, #+3]
   \   00000014   2022               MOVS     R2,#+32
   \   00000016   0A71               STRB     R2,[R1, #+4]
   8660                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   00000018   0222               MOVS     R2,#+2
   \   0000001A   491D               ADDS     R1,R1,#+5
   \   0000001C   ........           BL       CharToStr
   8661                  
   8662                  List_Paint(txt,5,15,0,0,3, Speech[g_leng].ZmID, Speech[g_leng].UsunID, Speech[g_leng].ZmOpis, Speech[g_leng].TestTrans, Speech[g_leng].StanWeWy ,0,0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])
   \   00000020   1148               LDR      R0,??Node_Paint_0  ;; g_leng
   \   00000022   0068               LDR      R0,[R0, #+0]
   \   00000024   1149               LDR      R1,??Node_Paint_0+0x4  ;; 0xa14
   \   00000026   4843               MULS     R0,R1,R0
   \   00000028   1149               LDR      R1,??Node_Paint_0+0x8  ;; Speech
   \   0000002A   0A18               ADDS     R2,R1,R0
   \   0000002C   0021               MOVS     R1,#+0
   \   0000002E   0800               MOVS     R0,R1
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   8720               MOVS     R0,#+135
   \   00000034   0001               LSLS     R0,R0,#+4        ;; #+2160
   \   00000036   1018               ADDS     R0,R2,R0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0E48               LDR      R0,??Node_Paint_0+0xC  ;; 0x87f
   \   0000003C   1118               ADDS     R1,R2,R0
   \   0000003E   1E38               SUBS     R0,R0,#+30
   \   00000040   1018               ADDS     R0,R2,R0
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   0C48               LDR      R0,??Node_Paint_0+0x10  ;; 0x852
   \   00000046   1118               ADDS     R1,R2,R0
   \   00000048   0F38               SUBS     R0,R0,#+15
   \   0000004A   1018               ADDS     R0,R2,R0
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   0321               MOVS     R1,#+3
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   0300               MOVS     R3,R0
   \   00000056   0F22               MOVS     R2,#+15
   \   00000058   0521               MOVS     R1,#+5
   \   0000005A   0AA8               ADD      R0,SP,#+40
   \   0000005C   ........           BL       List_Paint
   \   00000060   0AB0               ADD      SP,SP,#+40
   8663                                              
   8664                  
   8665                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000062   0EBC               POP      {R1-R3}
   \   00000064   01BC               POP      {R0}
   \   00000066   0047               BX       R0               ;; return
   \                     ??Node_Paint_0:
   \   00000068   ........           DC32     g_leng
   \   0000006C   140A0000           DC32     0xa14
   \   00000070   ........           DC32     Speech
   \   00000074   7F080000           DC32     0x87f
   \   00000078   52080000           DC32     0x852
   8666          
   8667          
   8668          
   8669                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8670                void Node_Event(char CurrentNode)
   8671                {
   \                     Node_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   8672                  int ans;
   8673                 
   8674                  ans=List_Event(X_up, Y_up, X_down, Y_down, 5 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   0800               MOVS     R0,R1
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   0F21               MOVS     R1,#+15
   \   0000000C   0520               MOVS     R0,#+5
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   3048               LDR      R0,??Node_Event_0  ;; Y_down
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   435E               LDRSH    R3,[R0, R1]
   \   00000016   3048               LDR      R0,??Node_Event_0+0x4  ;; X_down
   \   00000018   425E               LDRSH    R2,[R0, R1]
   \   0000001A   3048               LDR      R0,??Node_Event_0+0x8  ;; Y_up
   \   0000001C   415E               LDRSH    R1,[R0, R1]
   \   0000001E   3048               LDR      R0,??Node_Event_0+0xC  ;; X_up
   \   00000020   0025               MOVS     R5,#+0
   \   00000022   405F               LDRSH    R0,[R0, R5]
   \   00000024   ........           BL       List_Event
   \   00000028   04B0               ADD      SP,SP,#+16
   \   0000002A   0500               MOVS     R5,R0
   8675            
   8676                  if (ans)
   \   0000002C   4ED0               BEQ      ??Node_Event_1
   8677                    {
   8678                    if ((ans>0) && (ans<=5)) 
   \   0000002E   012D               CMP      R5,#+1
   \   00000030   3EDB               BLT      ??Node_Event_2
   \   00000032   062D               CMP      R5,#+6
   \   00000034   3CDA               BGE      ??Node_Event_2
   8679                    {
   8680                      RF_NodeTest.Sent=0;
   \   00000036   2B48               LDR      R0,??Node_Event_0+0x10  ;; RF_NodeTest
   \   00000038   0026               MOVS     R6,#+0
   \   0000003A   4660               STR      R6,[R0, #+4]
   8681                      RF_NodeTest.Recived=0;
   \   0000003C   8660               STR      R6,[R0, #+8]
   8682                      if (ans==2) //je¿eli usun ID
   \   0000003E   022D               CMP      R5,#+2
   \   00000040   26D1               BNE      ??Node_Event_3
   \   00000042   A000               LSLS     R0,R4,#+2
   \   00000044   0090               STR      R0,[SP, #+0]
   \   00000046   2848               LDR      R0,??Node_Event_0+0x14  ;; 0xc094
   \   00000048   0099               LDR      R1,[SP, #+0]
   \   0000004A   284A               LDR      R2,??Node_Event_0+0x18  ;; gProg
   \   0000004C   5118               ADDS     R1,R2,R1
   \   0000004E   0E50               STR      R6,[R1, R0]
   8683                      {
   8684                        gProg.NeuronsIdTab[CurrentNode-1]=0;
   8685                        NeuronsList[CurrentNode-1].NeuronID=0;
   \   00000050   0C20               MOVS     R0,#+12
   \   00000052   6043               MULS     R0,R4,R0
   \   00000054   2649               LDR      R1,??Node_Event_0+0x1C  ;; NeuronsList
   \   00000056   0818               ADDS     R0,R1,R0
   \   00000058   0C38               SUBS     R0,R0,#+12
   \   0000005A   4660               STR      R6,[R0, #+4]
   8686                        NeuronsList[CurrentNode-1].NeuronType=NoneNodeType;
   \   0000005C   3100               MOVS     R1,R6
   \   0000005E   0170               STRB     R1,[R0, #+0]
   8687                        ProgramChange=1;
   \   00000060   244F               LDR      R7,??Node_Event_0+0x20  ;; TextToChangeLength
   \   00000062   0120               MOVS     R0,#+1
   \   00000064   3872               STRB     R0,[R7, #+8]
   8688                        RefreshNeuronsList(&gProg);
   \   00000066   2148               LDR      R0,??Node_Event_0+0x18  ;; gProg
   \   00000068   ........           BL       RefreshNeuronsList
   8689                        SetTask(&gProg);
   \   0000006C   1F48               LDR      R0,??Node_Event_0+0x18  ;; gProg
   \   0000006E   ........           BL       SetTask
   8690                        TransQuality.SlowMensur[CurrentNode-1]=0;
   \   00000072   2148               LDR      R0,??Node_Event_0+0x24  ;; TransQuality
   \   00000074   0119               ADDS     R1,R0,R4
   \   00000076   3200               MOVS     R2,R6
   \   00000078   8A70               STRB     R2,[R1, #+2]
   8691                        TransQuality.QuickMensur[CurrentNode-1]=0;
   \   0000007A   2531               ADDS     R1,R1,#+37
   \   0000007C   0A70               STRB     R2,[R1, #+0]
   8692                        TransQuality.Mensur[CurrentNode-1]=0;
   \   0000007E   0099               LDR      R1,[SP, #+0]
   \   00000080   4018               ADDS     R0,R0,R1
   \   00000082   8664               STR      R6,[R0, #+72]
   8693                        MenuLevel=(MenuLevel/10);
   \   00000084   B86C               LDR      R0,[R7, #+72]
   \   00000086   0A21               MOVS     R1,#+10
   \   00000088   ........           BL       __aeabi_idivmod
   \   0000008C   B864               STR      R0,[R7, #+72]
   \   0000008E   0FE0               B        ??Node_Event_2
   8694                      }
   8695                      else if (ans==3) //je¿eli zmien opis
   \                     ??Node_Event_3:
   \   00000090   032D               CMP      R5,#+3
   \   00000092   184F               LDR      R7,??Node_Event_0+0x20  ;; TextToChangeLength
   \   00000094   B86C               LDR      R0,[R7, #+72]
   \   00000096   07D1               BNE      ??Node_Event_4
   8696                      {
   8697                        MenuLevel=(MenuLevel/10)*10+2;
   \   00000098   0A21               MOVS     R1,#+10
   \   0000009A   ........           BL       __aeabi_idivmod
   \   0000009E   0A21               MOVS     R1,#+10
   \   000000A0   4843               MULS     R0,R1,R0
   \   000000A2   801C               ADDS     R0,R0,#+2
   \   000000A4   B864               STR      R0,[R7, #+72]
   \   000000A6   03E0               B        ??Node_Event_2
   8698                      }
   8699                      else{
   8700                        MenuLevel=(MenuLevel*10+ans);
   \                     ??Node_Event_4:
   \   000000A8   0A21               MOVS     R1,#+10
   \   000000AA   4843               MULS     R0,R1,R0
   \   000000AC   4019               ADDS     R0,R0,R5
   \   000000AE   B864               STR      R0,[R7, #+72]
   8701                      }
   8702                    }
   8703                     if (ans<0) {
   \                     ??Node_Event_2:
   \   000000B0   002D               CMP      R5,#+0
   \   000000B2   09D5               BPL      ??Node_Event_5
   8704                      MenuLevel=(MenuLevel/10);
   \   000000B4   0F4F               LDR      R7,??Node_Event_0+0x20  ;; TextToChangeLength
   \   000000B6   B86C               LDR      R0,[R7, #+72]
   \   000000B8   0A21               MOVS     R1,#+10
   \   000000BA   ........           BL       __aeabi_idivmod
   \   000000BE   B864               STR      R0,[R7, #+72]
   8705                      NeuronNrChange=0;
   \   000000C0   0026               MOVS     R6,#+0
   \   000000C2   3000               MOVS     R0,R6
   \   000000C4   F870               STRB     R0,[R7, #+3]
   8706                      NeuronIdChange=0;
   \   000000C6   FE65               STR      R6,[R7, #+92]
   8707                    }
   8708                    MenuPaint();
   \                     ??Node_Event_5:
   \   000000C8   ........           BL       MenuPaint
   8709                    } 
   8710                }//_______________________________________________________________________
   \                     ??Node_Event_1:
   \   000000CC   F8BC               POP      {R3-R7}
   \   000000CE   01BC               POP      {R0}
   \   000000D0   0047               BX       R0               ;; return
   \   000000D2   C046               Nop      
   \                     ??Node_Event_0:
   \   000000D4   ........           DC32     Y_down
   \   000000D8   ........           DC32     X_down
   \   000000DC   ........           DC32     Y_up
   \   000000E0   ........           DC32     X_up
   \   000000E4   ........           DC32     RF_NodeTest
   \   000000E8   94C00000           DC32     0xc094
   \   000000EC   ........           DC32     gProg
   \   000000F0   ........           DC32     NeuronsList
   \   000000F4   ........           DC32     TextToChangeLength
   \   000000F8   ........           DC32     TransQuality
   8711          
   8712                 
   8713          
   8714          
   8715          
   8716                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8717                void NodeTestTrans_Paint(char CurrentNode)
   8718                {  
   \                     NodeTestTrans_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   8719                     List_Paint(Speech[g_leng].TestTrans,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000004   564C               LDR      R4,??NodeTestTrans_Paint_0  ;; 0xa14
   \   00000006   574D               LDR      R5,??NodeTestTrans_Paint_0+0x4  ;; g_leng
   \   00000008   574E               LDR      R6,??NodeTestTrans_Paint_0+0x8  ;; Speech
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   55A0               ADR      R0,??NodeTestTrans_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0321               MOVS     R1,#+3
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0300               MOVS     R3,R0
   \   00000020   6C22               MOVS     R2,#+108
   \   00000022   0121               MOVS     R1,#+1
   \   00000024   5248               LDR      R0,??NodeTestTrans_Paint_0+0x10  ;; 0x87f
   \   00000026   2F68               LDR      R7,[R5, #+0]
   \   00000028   6743               MULS     R7,R4,R7
   \   0000002A   F719               ADDS     R7,R6,R7
   \   0000002C   3818               ADDS     R0,R7,R0
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   8720                     RF_NodeTest.NodeNr=CurrentNode;
   \   00000034   4F4F               LDR      R7,??NodeTestTrans_Paint_0+0x14  ;; RF_NodeTest
   \   00000036   6846               MOV      R0,SP
   \   00000038   007C               LDRB     R0,[R0, #+16]
   \   0000003A   3870               STRB     R0,[R7, #+0]
   8721                     
   8722                      char txt[10];
   8723                     
   8724                    //H_line(0,110,63,1); // (char X, int Y, char lenght, char typ)
   8725                     Label(Speech[g_leng].Dane_wyslane,0,2,100,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000003C   82B0               SUB      SP,SP,#+8
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   0090               STR      R0,[SP, #+0]
   \   00000042   7F21               MOVS     R1,#+127
   \   00000044   0120               MOVS     R0,#+1
   \   00000046   03B4               PUSH     {R0,R1}
   \   00000048   0821               MOVS     R1,#+8
   \   0000004A   0F20               MOVS     R0,#+15
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   6423               MOVS     R3,#+100
   \   00000050   0222               MOVS     R2,#+2
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   8C46               MOV      R12,R1
   \   00000056   4849               LDR      R1,??NodeTestTrans_Paint_0+0x18  ;; 0x88e
   \   00000058   2868               LDR      R0,[R5, #+0]
   \   0000005A   6043               MULS     R0,R4,R0
   \   0000005C   3018               ADDS     R0,R6,R0
   \   0000005E   4018               ADDS     R0,R0,R1
   \   00000060   6146               MOV      R1,R12
   \   00000062   ........           BL       Label
   \   00000066   06B0               ADD      SP,SP,#+24
   8726                     H_line(0,80,63,1); // (char X, int Y, char lenght, char typ)
   \   00000068   0123               MOVS     R3,#+1
   \   0000006A   3F22               MOVS     R2,#+63
   \   0000006C   5021               MOVS     R1,#+80
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   ........           BL       H_line
   8727                     Label(Speech[g_leng].Dane_odebrane,0,2,70,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0020               MOVS     R0,#+0
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   7F21               MOVS     R1,#+127
   \   0000007C   0120               MOVS     R0,#+1
   \   0000007E   03B4               PUSH     {R0,R1}
   \   00000080   0821               MOVS     R1,#+8
   \   00000082   0F20               MOVS     R0,#+15
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   4623               MOVS     R3,#+70
   \   00000088   0222               MOVS     R2,#+2
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   8C46               MOV      R12,R1
   \   0000008E   3B49               LDR      R1,??NodeTestTrans_Paint_0+0x1C  ;; 0x89d
   \   00000090   2868               LDR      R0,[R5, #+0]
   \   00000092   6043               MULS     R0,R4,R0
   \   00000094   3018               ADDS     R0,R6,R0
   \   00000096   4018               ADDS     R0,R0,R1
   \   00000098   6146               MOV      R1,R12
   \   0000009A   ........           BL       Label
   \   0000009E   06B0               ADD      SP,SP,#+24
   8728                     H_line(0,50,63,1); // (char X, int Y, char lenght, char typ)
   \   000000A0   0123               MOVS     R3,#+1
   \   000000A2   3F22               MOVS     R2,#+63
   \   000000A4   3221               MOVS     R1,#+50
   \   000000A6   0020               MOVS     R0,#+0
   \   000000A8   ........           BL       H_line
   8729                     Label(Speech[g_leng].Dane_utracone,0,2,40,15,8,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000AC   82B0               SUB      SP,SP,#+8
   \   000000AE   0020               MOVS     R0,#+0
   \   000000B0   0090               STR      R0,[SP, #+0]
   \   000000B2   7F21               MOVS     R1,#+127
   \   000000B4   0120               MOVS     R0,#+1
   \   000000B6   03B4               PUSH     {R0,R1}
   \   000000B8   0821               MOVS     R1,#+8
   \   000000BA   0F20               MOVS     R0,#+15
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   2823               MOVS     R3,#+40
   \   000000C0   0222               MOVS     R2,#+2
   \   000000C2   0021               MOVS     R1,#+0
   \   000000C4   2E48               LDR      R0,??NodeTestTrans_Paint_0+0x20  ;; 0x8ac
   \   000000C6   2D68               LDR      R5,[R5, #+0]
   \   000000C8   6543               MULS     R5,R4,R5
   \   000000CA   7419               ADDS     R4,R6,R5
   \   000000CC   2018               ADDS     R0,R4,R0
   \   000000CE   ........           BL       Label
   \   000000D2   06B0               ADD      SP,SP,#+24
   8730          
   8731                     
   8732                     sprintf(txt, "%d", RF_NodeTest.Sent);
                            ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   000000D4   2BA4               ADR      R4,??NodeTestTrans_Paint_0+0x24  ;; 0x25, 0x64, 0x00, 0x00
   \   000000D6   7A68               LDR      R2,[R7, #+4]
   \   000000D8   2100               MOVS     R1,R4
   \   000000DA   6846               MOV      R0,SP
   \   000000DC   ........           BL       sprintf
   8733                     Label(txt,1,55,90,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   000000E0   82B0               SUB      SP,SP,#+8
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   0090               STR      R0,[SP, #+0]
   \   000000E6   7F21               MOVS     R1,#+127
   \   000000E8   0120               MOVS     R0,#+1
   \   000000EA   03B4               PUSH     {R0,R1}
   \   000000EC   2821               MOVS     R1,#+40
   \   000000EE   0A20               MOVS     R0,#+10
   \   000000F0   03B4               PUSH     {R0,R1}
   \   000000F2   5A23               MOVS     R3,#+90
   \   000000F4   3722               MOVS     R2,#+55
   \   000000F6   0121               MOVS     R1,#+1
   \   000000F8   06A8               ADD      R0,SP,#+24
   \   000000FA   ........           BL       Label
   \   000000FE   06B0               ADD      SP,SP,#+24
   8734                            
   8735                     sprintf(txt, "%d", RF_NodeTest.Recived);
   \   00000100   BA68               LDR      R2,[R7, #+8]
   \   00000102   2100               MOVS     R1,R4
   \   00000104   6846               MOV      R0,SP
   \   00000106   ........           BL       sprintf
   8736                     Label(txt,1,55,60,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0020               MOVS     R0,#+0
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   7F21               MOVS     R1,#+127
   \   00000112   0120               MOVS     R0,#+1
   \   00000114   03B4               PUSH     {R0,R1}
   \   00000116   2821               MOVS     R1,#+40
   \   00000118   0A20               MOVS     R0,#+10
   \   0000011A   03B4               PUSH     {R0,R1}
   \   0000011C   3C23               MOVS     R3,#+60
   \   0000011E   3722               MOVS     R2,#+55
   \   00000120   0121               MOVS     R1,#+1
   \   00000122   06A8               ADD      R0,SP,#+24
   \   00000124   ........           BL       Label
   \   00000128   06B0               ADD      SP,SP,#+24
   8737                            
   8738                     sprintf(txt, "%d", RF_NodeTest.Sent-RF_NodeTest.Recived);
   \   0000012A   7868               LDR      R0,[R7, #+4]
   \   0000012C   B968               LDR      R1,[R7, #+8]
   \   0000012E   421A               SUBS     R2,R0,R1
   \   00000130   2100               MOVS     R1,R4
   \   00000132   6846               MOV      R0,SP
   \   00000134   ........           BL       sprintf
   8739                     Label(txt,1,55,30,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000138   82B0               SUB      SP,SP,#+8
   \   0000013A   0020               MOVS     R0,#+0
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   7F21               MOVS     R1,#+127
   \   00000140   0120               MOVS     R0,#+1
   \   00000142   03B4               PUSH     {R0,R1}
   \   00000144   2821               MOVS     R1,#+40
   \   00000146   0A20               MOVS     R0,#+10
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   1E23               MOVS     R3,#+30
   \   0000014C   3722               MOVS     R2,#+55
   \   0000014E   0121               MOVS     R1,#+1
   \   00000150   06A8               ADD      R0,SP,#+24
   \   00000152   ........           BL       Label
   \   00000156   06B0               ADD      SP,SP,#+24
   8740                    
   8741                     
   8742                }//_______________________________________________________________________ 
   \   00000158   05B0               ADD      SP,SP,#+20
   \   0000015A   F0BC               POP      {R4-R7}
   \   0000015C   01BC               POP      {R0}
   \   0000015E   0047               BX       R0               ;; return
   \                     ??NodeTestTrans_Paint_0:
   \   00000160   140A0000           DC32     0xa14
   \   00000164   ........           DC32     g_leng
   \   00000168   ........           DC32     Speech
   \   0000016C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000170   7F080000           DC32     0x87f
   \   00000174   ........           DC32     RF_NodeTest
   \   00000178   8E080000           DC32     0x88e
   \   0000017C   9D080000           DC32     0x89d
   \   00000180   AC080000           DC32     0x8ac
   \   00000184   25640000           DC8      0x25, 0x64, 0x00, 0x00
   8743          
   8744                                  
   8745          
   8746                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8747                void NodeTestTrans_Event(char CurrentNode)
   8748                {
   \                     NodeTestTrans_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8749                  int ans;
   8750                 
   8751                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   1148               LDR      R0,??NodeTestTrans_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   1148               LDR      R0,??NodeTestTrans_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   1148               LDR      R0,??NodeTestTrans_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   1148               LDR      R0,??NodeTestTrans_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   8752            
   8753                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   11D0               BEQ      ??NodeTestTrans_Event_1
   8754                    {
   8755                    if (ans<0) {
   \   0000002A   0ED5               BPL      ??NodeTestTrans_Event_2
   8756                      MenuLevel=(MenuLevel/100);
   \   0000002C   0D4C               LDR      R4,??NodeTestTrans_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   A06C               LDR      R0,[R4, #+72]
   \   00000030   6421               MOVS     R1,#+100
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   A064               STR      R0,[R4, #+72]
   8757                     NeuronNrChange=0;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0100               MOVS     R1,R0
   \   0000003C   E170               STRB     R1,[R4, #+3]
   8758                     NeuronIdChange=0;
   \   0000003E   E065               STR      R0,[R4, #+92]
   8759                     RF_NodeTest.NodeNr=0;
   \   00000040   0949               LDR      R1,??NodeTestTrans_Event_0+0x14  ;; RF_NodeTest
   \   00000042   0200               MOVS     R2,R0
   \   00000044   0A70               STRB     R2,[R1, #+0]
   8760                     RF_NodeTest.Sent=0;
   \   00000046   4860               STR      R0,[R1, #+4]
   8761                     RF_NodeTest.Recived=0;
   \   00000048   8860               STR      R0,[R1, #+8]
   8762                    }
   8763                    MenuPaint();                ;
   \                     ??NodeTestTrans_Event_2:
   \   0000004A   ........           BL       MenuPaint
   8764                    } 
   8765                }//_______________________________________________________________________
   \                     ??NodeTestTrans_Event_1:
   \   0000004E   10BC               POP      {R4}
   \   00000050   01BC               POP      {R0}
   \   00000052   0047               BX       R0               ;; return
   \                     ??NodeTestTrans_Event_0:
   \   00000054   ........           DC32     Y_down
   \   00000058   ........           DC32     X_down
   \   0000005C   ........           DC32     Y_up
   \   00000060   ........           DC32     X_up
   \   00000064   ........           DC32     TextToChangeLength
   \   00000068   ........           DC32     RF_NodeTest
   8766          
   8767          
   8768          
   8769          
   8770          
   8771                //*------------------------------------------------³-----------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8772                void NodeTestTrans_Refresh(char CurrentNode)
   8773                {  
   \                     NodeTestTrans_Refresh:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   8774                     char txt[10];
   8775                     char il;
   8776                     static char Dziel8;
   8777                     if (Dziel8<8) {Dziel8++;}else
   \   00000002   2748               LDR      R0,??NodeTestTrans_Refresh_0  ;; ??Dziel8
   \   00000004   0178               LDRB     R1,[R0, #+0]
   \   00000006   0829               CMP      R1,#+8
   \   00000008   02D2               BCS      ??NodeTestTrans_Refresh_1
   \   0000000A   491C               ADDS     R1,R1,#+1
   \   0000000C   0170               STRB     R1,[R0, #+0]
   \   0000000E   44E0               B        ??NodeTestTrans_Refresh_2
   8778                     {
   8779                       Dziel8=0;
   \                     ??NodeTestTrans_Refresh_1:
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0170               STRB     R1,[R0, #+0]
   8780                            sprintf(txt, "%d", RF_NodeTest.Sent);
                                   ^
Warning[Pe223]: function "sprintf" declared implicitly

             char il;
                  ^
"D:\Zeuron\Projekty\S300\S300-program v0.6 - 18.05.2012\Framework\ScreenMENU2.c",8775  Warning[Pe177]: 
          variable "il" was declared but never referenced
   \   00000014   23A4               ADR      R4,??NodeTestTrans_Refresh_0+0x4  ;; 0x25, 0x64, 0x00, 0x00
   \   00000016   244D               LDR      R5,??NodeTestTrans_Refresh_0+0x8  ;; RF_NodeTest
   \   00000018   6A68               LDR      R2,[R5, #+4]
   \   0000001A   2100               MOVS     R1,R4
   \   0000001C   6846               MOV      R0,SP
   \   0000001E   ........           BL       sprintf
   8781                            Label(txt,1,55,90,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   00000022   82B0               SUB      SP,SP,#+8
   \   00000024   0020               MOVS     R0,#+0
   \   00000026   0090               STR      R0,[SP, #+0]
   \   00000028   7F21               MOVS     R1,#+127
   \   0000002A   0120               MOVS     R0,#+1
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   2821               MOVS     R1,#+40
   \   00000030   0A20               MOVS     R0,#+10
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   5A23               MOVS     R3,#+90
   \   00000036   3722               MOVS     R2,#+55
   \   00000038   0121               MOVS     R1,#+1
   \   0000003A   06A8               ADD      R0,SP,#+24
   \   0000003C   ........           BL       Label
   \   00000040   06B0               ADD      SP,SP,#+24
   8782                            
   8783                            sprintf(txt, "%d", RF_NodeTest.Recived);
   \   00000042   AA68               LDR      R2,[R5, #+8]
   \   00000044   2100               MOVS     R1,R4
   \   00000046   6846               MOV      R0,SP
   \   00000048   ........           BL       sprintf
   8784                            Label(txt,1,55,60,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000004C   82B0               SUB      SP,SP,#+8
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   0090               STR      R0,[SP, #+0]
   \   00000052   7F21               MOVS     R1,#+127
   \   00000054   0120               MOVS     R0,#+1
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   2821               MOVS     R1,#+40
   \   0000005A   0A20               MOVS     R0,#+10
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   3C23               MOVS     R3,#+60
   \   00000060   3722               MOVS     R2,#+55
   \   00000062   0121               MOVS     R1,#+1
   \   00000064   06A8               ADD      R0,SP,#+24
   \   00000066   ........           BL       Label
   \   0000006A   06B0               ADD      SP,SP,#+24
   8785                            
   8786                            sprintf(txt, "%d", RF_NodeTest.Sent-RF_NodeTest.Recived);
   \   0000006C   6868               LDR      R0,[R5, #+4]
   \   0000006E   A968               LDR      R1,[R5, #+8]
   \   00000070   421A               SUBS     R2,R0,R1
   \   00000072   2100               MOVS     R1,R4
   \   00000074   6846               MOV      R0,SP
   \   00000076   ........           BL       sprintf
   8787                            Label(txt,1,55,30,10,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   0020               MOVS     R0,#+0
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   7F21               MOVS     R1,#+127
   \   00000082   0120               MOVS     R0,#+1
   \   00000084   03B4               PUSH     {R0,R1}
   \   00000086   2821               MOVS     R1,#+40
   \   00000088   0A20               MOVS     R0,#+10
   \   0000008A   03B4               PUSH     {R0,R1}
   \   0000008C   1E23               MOVS     R3,#+30
   \   0000008E   3722               MOVS     R2,#+55
   \   00000090   0121               MOVS     R1,#+1
   \   00000092   06A8               ADD      R0,SP,#+24
   \   00000094   ........           BL       Label
   \   00000098   06B0               ADD      SP,SP,#+24
   8788                     }
   8789                }//_______________________________________________________________________ 
   \                     ??NodeTestTrans_Refresh_2:
   \   0000009A   3EBC               POP      {R1-R5}
   \   0000009C   01BC               POP      {R0}
   \   0000009E   0047               BX       R0               ;; return
   \                     ??NodeTestTrans_Refresh_0:
   \   000000A0   ........           DC32     ??Dziel8
   \   000000A4   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000000A8   ........           DC32     RF_NodeTest

   \                                 In section .bss, align 1
   \                     ??Dziel8:
   \   00000000                      DS8 1
   8790          
   8791          
   8792          
   8793          
   8794          
   8795                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8796                void NodeStanIO_Paint(char CurrentNode)
   8797                {  
   \                     NodeStanIO_Paint:
   \   00000000   13B5               PUSH     {R0,R1,R4,LR}
   \   00000002   0400               MOVS     R4,R0
   8798                      char txt[8];
   8799                  txt[0]='N'; txt[1]='o';txt[2]='d';txt[3]='e';txt[4]=' ';
   \   00000004   6946               MOV      R1,SP
   \   00000006   4E20               MOVS     R0,#+78
   \   00000008   0870               STRB     R0,[R1, #+0]
   \   0000000A   6F20               MOVS     R0,#+111
   \   0000000C   4870               STRB     R0,[R1, #+1]
   \   0000000E   6420               MOVS     R0,#+100
   \   00000010   8870               STRB     R0,[R1, #+2]
   \   00000012   6520               MOVS     R0,#+101
   \   00000014   C870               STRB     R0,[R1, #+3]
   \   00000016   2020               MOVS     R0,#+32
   \   00000018   0871               STRB     R0,[R1, #+4]
   8800                  char ind=CharToStr(CurrentNode, txt+5, 2);
   \   0000001A   0222               MOVS     R2,#+2
   \   0000001C   491D               ADDS     R1,R1,#+5
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       CharToStr
   8801                  
   8802                     List_Paint(txt,1,108,0,0,3," ",0,0,0,0,0,0,0 ); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])      
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   0800               MOVS     R0,R1
   \   00000028   03B4               PUSH     {R0,R1}
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   03B4               PUSH     {R0,R1}
   \   0000002E   22A0               ADR      R0,??NodeStanIO_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   00000030   03B4               PUSH     {R0,R1}
   \   00000032   0321               MOVS     R1,#+3
   \   00000034   0020               MOVS     R0,#+0
   \   00000036   03B4               PUSH     {R0,R1}
   \   00000038   0300               MOVS     R3,R0
   \   0000003A   6C22               MOVS     R2,#+108
   \   0000003C   0121               MOVS     R1,#+1
   \   0000003E   0AA8               ADD      R0,SP,#+40
   \   00000040   ........           BL       List_Paint
   \   00000044   0AB0               ADD      SP,SP,#+40
   8803          
   8804                     CleanCanvasArea(14,6,2,95,1);
   \   00000046   82B0               SUB      SP,SP,#+8
   \   00000048   0120               MOVS     R0,#+1
   \   0000004A   0090               STR      R0,[SP, #+0]
   \   0000004C   5F23               MOVS     R3,#+95
   \   0000004E   0222               MOVS     R2,#+2
   \   00000050   0621               MOVS     R1,#+6
   \   00000052   0E20               MOVS     R0,#+14
   \   00000054   ........           BL       CleanCanvasArea
   \   00000058   02B0               ADD      SP,SP,#+8
   8805                     CleanCanvasArea(14+32,6,2,95,1);
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0120               MOVS     R0,#+1
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   5F23               MOVS     R3,#+95
   \   00000062   0222               MOVS     R2,#+2
   \   00000064   0621               MOVS     R1,#+6
   \   00000066   2E20               MOVS     R0,#+46
   \   00000068   ........           BL       CleanCanvasArea
   \   0000006C   02B0               ADD      SP,SP,#+8
   8806          
   8807                     Label("DI",2,2,99,2,25,1,127,1);
   \   0000006E   82B0               SUB      SP,SP,#+8
   \   00000070   0120               MOVS     R0,#+1
   \   00000072   0090               STR      R0,[SP, #+0]
   \   00000074   7F21               MOVS     R1,#+127
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   1921               MOVS     R1,#+25
   \   0000007A   0220               MOVS     R0,#+2
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   6323               MOVS     R3,#+99
   \   00000080   0200               MOVS     R2,R0
   \   00000082   0100               MOVS     R1,R0
   \   00000084   0DA0               ADR      R0,??NodeStanIO_Paint_0+0x4  ;; 0x44, 0x49, 0x00, 0x00
   \   00000086   ........           BL       Label
   \   0000008A   06B0               ADD      SP,SP,#+24
   8808                     Label("DO",2,34,99,2,25,1,127,1); 
   \   0000008C   82B0               SUB      SP,SP,#+8
   \   0000008E   0120               MOVS     R0,#+1
   \   00000090   0090               STR      R0,[SP, #+0]
   \   00000092   7F21               MOVS     R1,#+127
   \   00000094   03B4               PUSH     {R0,R1}
   \   00000096   1921               MOVS     R1,#+25
   \   00000098   0220               MOVS     R0,#+2
   \   0000009A   03B4               PUSH     {R0,R1}
   \   0000009C   6323               MOVS     R3,#+99
   \   0000009E   2222               MOVS     R2,#+34
   \   000000A0   0100               MOVS     R1,R0
   \   000000A2   07A0               ADR      R0,??NodeStanIO_Paint_0+0x8  ;; 0x44, 0x4F, 0x00, 0x00
   \   000000A4   ........           BL       Label
   \   000000A8   06B0               ADD      SP,SP,#+24
   8809                     
   8810                     NodeStanIO_Refresh(CurrentNode);
   \   000000AA   2000               MOVS     R0,R4
   \   000000AC   ........           BL       NodeStanIO_Refresh
   8811                }//_______________________________________________________________________ 
   \   000000B0   1CBC               POP      {R2-R4}
   \   000000B2   01BC               POP      {R0}
   \   000000B4   0047               BX       R0               ;; return
   \   000000B6   C046               Nop      
   \                     ??NodeStanIO_Paint_0:
   \   000000B8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000BC   44490000           DC8      0x44, 0x49, 0x00, 0x00
   \   000000C0   444F0000           DC8      0x44, 0x4F, 0x00, 0x00
   8812          
   8813          
   8814          
   8815          
   8816                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8817                void NodeStanIO_Event(char CurrentNode)
   8818                {
   \                     NodeStanIO_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8819                  int ans;
   8820                 
   8821                  ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F48               LDR      R0,??NodeStanIO_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   0F48               LDR      R0,??NodeStanIO_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   0F48               LDR      R0,??NodeStanIO_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   0F48               LDR      R0,??NodeStanIO_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   8822            
   8823                  if (ans)
   \   00000026   0028               CMP      R0,#+0
   \   00000028   0CD0               BEQ      ??NodeStanIO_Event_1
   8824                    {
   8825                    if (ans<0) {
   \   0000002A   09D5               BPL      ??NodeStanIO_Event_2
   8826                      MenuLevel=(MenuLevel/100);
   \   0000002C   0B4C               LDR      R4,??NodeStanIO_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   A06C               LDR      R0,[R4, #+72]
   \   00000030   6421               MOVS     R1,#+100
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   A064               STR      R0,[R4, #+72]
   8827                     NeuronNrChange=0;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   0100               MOVS     R1,R0
   \   0000003C   E170               STRB     R1,[R4, #+3]
   8828                     NeuronIdChange=0;
   \   0000003E   E065               STR      R0,[R4, #+92]
   8829                    }
   8830                    MenuPaint();
   \                     ??NodeStanIO_Event_2:
   \   00000040   ........           BL       MenuPaint
   8831                    } 
   8832                }//_______________________________________________________________________
   \                     ??NodeStanIO_Event_1:
   \   00000044   10BC               POP      {R4}
   \   00000046   01BC               POP      {R0}
   \   00000048   0047               BX       R0               ;; return
   \   0000004A   C046               Nop      
   \                     ??NodeStanIO_Event_0:
   \   0000004C   ........           DC32     Y_down
   \   00000050   ........           DC32     X_down
   \   00000054   ........           DC32     Y_up
   \   00000058   ........           DC32     X_up
   \   0000005C   ........           DC32     TextToChangeLength
   8833          
   8834          
   8835          
   8836          
   8837          
   8838                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8839                void NodeStanIO_Refresh(char CurrentNode)
   8840                {  
   \                     NodeStanIO_Refresh:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   84B0               SUB      SP,SP,#+16
   \   00000004   8848               LDR      R0,??NodeStanIO_Refresh_0  ;; ??Dziel5
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0170               STRB     R1,[R0, #+0]
   8841                     char Txt[6];
   8842                  
   8843                     static char Dziel5;
   8844                     Dziel5=6;
   8845                     if (Dziel5<5) {Dziel5++;}else
   8846                     {
   8847                       Dziel5=0;
   8848          
   8849                            char NP=0;
   \   0000000A   0C00               MOVS     R4,R1
   8850                            for (char j=0; j<2; j++) 
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   0090               STR      R0,[SP, #+0]
   \   00000010   04E0               B        ??NodeStanIO_Refresh_1
   \                     ??NodeStanIO_Refresh_2:
   \   00000012   0098               LDR      R0,[SP, #+0]
   \   00000014   401C               ADDS     R0,R0,#+1
   \   00000016   0006               LSLS     R0,R0,#+24
   \   00000018   000E               LSRS     R0,R0,#+24
   \   0000001A   0090               STR      R0,[SP, #+0]
   \                     ??NodeStanIO_Refresh_1:
   \   0000001C   0098               LDR      R0,[SP, #+0]
   \   0000001E   0006               LSLS     R0,R0,#+24
   \   00000020   000E               LSRS     R0,R0,#+24
   \   00000022   0228               CMP      R0,#+2
   \   00000024   76D2               BCS      ??NodeStanIO_Refresh_3
   8851                            for (char i=0; i<8; i++)
   \   00000026   0025               MOVS     R5,#+0
   \   00000028   35E0               B        ??NodeStanIO_Refresh_4
   8852                            {
   8853                              if  ((MainStage.StageI[CurrentNode].Port>>NP)&0x1)
   8854                              {
   8855                                CopyToCanvasPoint((char*)&Frame[0][0],2+15*j,87-i*12,11,11);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght)
   8856                                CharToStr (NP, Txt, 2);
   8857                                Label(Txt,2,3+15*j,88-i*12,2,8,1,127,1);  
   8858                              } else{
   8859                                CopyToCanvasPoint((char*)&Frame[0][0],2+15*j,87-i*12,11,11); 
   \                     ??NodeStanIO_Refresh_5:
   \   0000002A   3606               LSLS     R6,R6,#+24
   \   0000002C   360E               LSRS     R6,R6,#+24
   \   0000002E   0F20               MOVS     R0,#+15
   \   00000030   4643               MULS     R6,R0,R6
   \   00000032   2F00               MOVS     R7,R5
   \   00000034   0C20               MOVS     R0,#+12
   \   00000036   4743               MULS     R7,R0,R7
   \   00000038   82B0               SUB      SP,SP,#+8
   \   0000003A   0B20               MOVS     R0,#+11
   \   0000003C   0090               STR      R0,[SP, #+0]
   \   0000003E   0300               MOVS     R3,R0
   \   00000040   5720               MOVS     R0,#+87
   \   00000042   C21B               SUBS     R2,R0,R7
   \   00000044   1206               LSLS     R2,R2,#+24
   \   00000046   120E               LSRS     R2,R2,#+24
   \   00000048   3100               MOVS     R1,R6
   \   0000004A   891C               ADDS     R1,R1,#+2
   \   0000004C   0906               LSLS     R1,R1,#+24
   \   0000004E   090E               LSRS     R1,R1,#+24
   \   00000050   7648               LDR      R0,??NodeStanIO_Refresh_0+0x4  ;; Frame
   \   00000052   ........           BL       CopyToCanvasPoint
   \   00000056   02B0               ADD      SP,SP,#+8
   8860                                CharToStr (NP, Txt, 2);
   \   00000058   0222               MOVS     R2,#+2
   \   0000005A   01A9               ADD      R1,SP,#+4
   \   0000005C   2000               MOVS     R0,R4
   \   0000005E   ........           BL       CharToStr
   8861                                Label(Txt,2,3+15*j,88-i*12,2,8,1,127,0);  
   \   00000062   82B0               SUB      SP,SP,#+8
   \   00000064   0020               MOVS     R0,#+0
   \   00000066   0090               STR      R0,[SP, #+0]
   \   00000068   7F21               MOVS     R1,#+127
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   03B4               PUSH     {R0,R1}
   \   0000006E   0821               MOVS     R1,#+8
   \   00000070   0220               MOVS     R0,#+2
   \   00000072   03B4               PUSH     {R0,R1}
   \   00000074   5820               MOVS     R0,#+88
   \   00000076   C31B               SUBS     R3,R0,R7
   \   00000078   F61C               ADDS     R6,R6,#+3
   \   0000007A   3200               MOVS     R2,R6
   \   0000007C   1206               LSLS     R2,R2,#+24
   \   0000007E   120E               LSRS     R2,R2,#+24
   \   00000080   0221               MOVS     R1,#+2
   \   00000082   07A8               ADD      R0,SP,#+28
   \   00000084   ........           BL       Label
   \   00000088   06B0               ADD      SP,SP,#+24
   8862                              }
   8863                              NP++;
   \                     ??NodeStanIO_Refresh_6:
   \   0000008A   641C               ADDS     R4,R4,#+1
   \   0000008C   2406               LSLS     R4,R4,#+24
   \   0000008E   240E               LSRS     R4,R4,#+24
   \   00000090   6D1C               ADDS     R5,R5,#+1
   \   00000092   2D06               LSLS     R5,R5,#+24
   \   00000094   2D0E               LSRS     R5,R5,#+24
   \                     ??NodeStanIO_Refresh_4:
   \   00000096   2800               MOVS     R0,R5
   \   00000098   0828               CMP      R0,#+8
   \   0000009A   BAD2               BCS      ??NodeStanIO_Refresh_2
   \   0000009C   6846               MOV      R0,SP
   \   0000009E   007C               LDRB     R0,[R0, #+16]
   \   000000A0   1421               MOVS     R1,#+20
   \   000000A2   4843               MULS     R0,R1,R0
   \   000000A4   6249               LDR      R1,??NodeStanIO_Refresh_0+0x8  ;; MainStage
   \   000000A6   0818               ADDS     R0,R1,R0
   \   000000A8   A030               ADDS     R0,R0,#+160
   \   000000AA   0088               LDRH     R0,[R0, #+0]
   \   000000AC   2041               ASRS     R0,R0,R4
   \   000000AE   C007               LSLS     R0,R0,#+31
   \   000000B0   009E               LDR      R6,[SP, #+0]
   \   000000B2   BAD5               BPL      ??NodeStanIO_Refresh_5
   \   000000B4   3606               LSLS     R6,R6,#+24
   \   000000B6   360E               LSRS     R6,R6,#+24
   \   000000B8   0F20               MOVS     R0,#+15
   \   000000BA   4643               MULS     R6,R0,R6
   \   000000BC   2F00               MOVS     R7,R5
   \   000000BE   0C20               MOVS     R0,#+12
   \   000000C0   4743               MULS     R7,R0,R7
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0B20               MOVS     R0,#+11
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   0300               MOVS     R3,R0
   \   000000CA   5720               MOVS     R0,#+87
   \   000000CC   C21B               SUBS     R2,R0,R7
   \   000000CE   1206               LSLS     R2,R2,#+24
   \   000000D0   120E               LSRS     R2,R2,#+24
   \   000000D2   3100               MOVS     R1,R6
   \   000000D4   891C               ADDS     R1,R1,#+2
   \   000000D6   0906               LSLS     R1,R1,#+24
   \   000000D8   090E               LSRS     R1,R1,#+24
   \   000000DA   5448               LDR      R0,??NodeStanIO_Refresh_0+0x4  ;; Frame
   \   000000DC   ........           BL       CopyToCanvasPoint
   \   000000E0   02B0               ADD      SP,SP,#+8
   \   000000E2   0222               MOVS     R2,#+2
   \   000000E4   01A9               ADD      R1,SP,#+4
   \   000000E6   2000               MOVS     R0,R4
   \   000000E8   ........           BL       CharToStr
   \   000000EC   82B0               SUB      SP,SP,#+8
   \   000000EE   0120               MOVS     R0,#+1
   \   000000F0   0090               STR      R0,[SP, #+0]
   \   000000F2   7F21               MOVS     R1,#+127
   \   000000F4   03B4               PUSH     {R0,R1}
   \   000000F6   0821               MOVS     R1,#+8
   \   000000F8   0220               MOVS     R0,#+2
   \   000000FA   03B4               PUSH     {R0,R1}
   \   000000FC   5820               MOVS     R0,#+88
   \   000000FE   C31B               SUBS     R3,R0,R7
   \   00000100   F61C               ADDS     R6,R6,#+3
   \   00000102   3200               MOVS     R2,R6
   \   00000104   1206               LSLS     R2,R2,#+24
   \   00000106   120E               LSRS     R2,R2,#+24
   \   00000108   0221               MOVS     R1,#+2
   \   0000010A   07A8               ADD      R0,SP,#+28
   \   0000010C   ........           BL       Label
   \   00000110   06B0               ADD      SP,SP,#+24
   \   00000112   BAE7               B        ??NodeStanIO_Refresh_6
   8864                            }
   8865                            
   8866                            NP=0;
   \                     ??NodeStanIO_Refresh_3:
   \   00000114   0024               MOVS     R4,#+0
   8867                            for (char j=0; j<2; j++) 
   \   00000116   2000               MOVS     R0,R4
   \   00000118   0090               STR      R0,[SP, #+0]
   \   0000011A   04E0               B        ??NodeStanIO_Refresh_7
   \                     ??NodeStanIO_Refresh_8:
   \   0000011C   0098               LDR      R0,[SP, #+0]
   \   0000011E   401C               ADDS     R0,R0,#+1
   \   00000120   0006               LSLS     R0,R0,#+24
   \   00000122   000E               LSRS     R0,R0,#+24
   \   00000124   0090               STR      R0,[SP, #+0]
   \                     ??NodeStanIO_Refresh_7:
   \   00000126   0098               LDR      R0,[SP, #+0]
   \   00000128   0006               LSLS     R0,R0,#+24
   \   0000012A   000E               LSRS     R0,R0,#+24
   \   0000012C   0228               CMP      R0,#+2
   \   0000012E   77D2               BCS      ??NodeStanIO_Refresh_9
   8868                            for (char i=0; i<8; i++)
   \   00000130   0025               MOVS     R5,#+0
   \   00000132   35E0               B        ??NodeStanIO_Refresh_10
   8869                            {  
   8870                              if  ((MainStage.StageQ[CurrentNode].Port>>NP)&0x1)
   8871                              {
   8872                                CopyToCanvasPoint((char*)&Frame[0][0],34+15*j,87-i*12,11,11);  //(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght)
   8873                                CharToStr (NP, Txt, 2);
   8874                                Label(Txt,2,34+1+15*j,88-i*12,2,8,1,127,1);  
   8875                              } else{
   8876                                CopyToCanvasPoint((char*)&Frame[0][0],34+15*j,87-i*12,11,11); 
   \                     ??NodeStanIO_Refresh_11:
   \   00000134   3606               LSLS     R6,R6,#+24
   \   00000136   360E               LSRS     R6,R6,#+24
   \   00000138   0F20               MOVS     R0,#+15
   \   0000013A   4643               MULS     R6,R0,R6
   \   0000013C   2F00               MOVS     R7,R5
   \   0000013E   0C20               MOVS     R0,#+12
   \   00000140   4743               MULS     R7,R0,R7
   \   00000142   82B0               SUB      SP,SP,#+8
   \   00000144   0B20               MOVS     R0,#+11
   \   00000146   0090               STR      R0,[SP, #+0]
   \   00000148   0300               MOVS     R3,R0
   \   0000014A   5720               MOVS     R0,#+87
   \   0000014C   C21B               SUBS     R2,R0,R7
   \   0000014E   1206               LSLS     R2,R2,#+24
   \   00000150   120E               LSRS     R2,R2,#+24
   \   00000152   3100               MOVS     R1,R6
   \   00000154   2231               ADDS     R1,R1,#+34
   \   00000156   0906               LSLS     R1,R1,#+24
   \   00000158   090E               LSRS     R1,R1,#+24
   \   0000015A   3448               LDR      R0,??NodeStanIO_Refresh_0+0x4  ;; Frame
   \   0000015C   ........           BL       CopyToCanvasPoint
   \   00000160   02B0               ADD      SP,SP,#+8
   8877                                CharToStr (NP, Txt, 2);
   \   00000162   0222               MOVS     R2,#+2
   \   00000164   01A9               ADD      R1,SP,#+4
   \   00000166   2000               MOVS     R0,R4
   \   00000168   ........           BL       CharToStr
   8878                                Label(Txt,2,34+1+15*j,88-i*12,2,8,1,127,0);  
   \   0000016C   82B0               SUB      SP,SP,#+8
   \   0000016E   0020               MOVS     R0,#+0
   \   00000170   0090               STR      R0,[SP, #+0]
   \   00000172   7F21               MOVS     R1,#+127
   \   00000174   0120               MOVS     R0,#+1
   \   00000176   03B4               PUSH     {R0,R1}
   \   00000178   0821               MOVS     R1,#+8
   \   0000017A   0220               MOVS     R0,#+2
   \   0000017C   03B4               PUSH     {R0,R1}
   \   0000017E   5820               MOVS     R0,#+88
   \   00000180   C31B               SUBS     R3,R0,R7
   \   00000182   2336               ADDS     R6,R6,#+35
   \   00000184   3200               MOVS     R2,R6
   \   00000186   1206               LSLS     R2,R2,#+24
   \   00000188   120E               LSRS     R2,R2,#+24
   \   0000018A   0221               MOVS     R1,#+2
   \   0000018C   07A8               ADD      R0,SP,#+28
   \   0000018E   ........           BL       Label
   \   00000192   06B0               ADD      SP,SP,#+24
   8879                              }
   8880                             NP++;
   \                     ??NodeStanIO_Refresh_12:
   \   00000194   641C               ADDS     R4,R4,#+1
   \   00000196   2406               LSLS     R4,R4,#+24
   \   00000198   240E               LSRS     R4,R4,#+24
   \   0000019A   6D1C               ADDS     R5,R5,#+1
   \   0000019C   2D06               LSLS     R5,R5,#+24
   \   0000019E   2D0E               LSRS     R5,R5,#+24
   \                     ??NodeStanIO_Refresh_10:
   \   000001A0   2800               MOVS     R0,R5
   \   000001A2   0828               CMP      R0,#+8
   \   000001A4   BAD2               BCS      ??NodeStanIO_Refresh_8
   \   000001A6   D720               MOVS     R0,#+215
   \   000001A8   8000               LSLS     R0,R0,#+2        ;; #+860
   \   000001AA   6946               MOV      R1,SP
   \   000001AC   097C               LDRB     R1,[R1, #+16]
   \   000001AE   1422               MOVS     R2,#+20
   \   000001B0   5143               MULS     R1,R2,R1
   \   000001B2   1F4A               LDR      R2,??NodeStanIO_Refresh_0+0x8  ;; MainStage
   \   000001B4   5118               ADDS     R1,R2,R1
   \   000001B6   085A               LDRH     R0,[R1, R0]
   \   000001B8   2041               ASRS     R0,R0,R4
   \   000001BA   C007               LSLS     R0,R0,#+31
   \   000001BC   009E               LDR      R6,[SP, #+0]
   \   000001BE   B9D5               BPL      ??NodeStanIO_Refresh_11
   \   000001C0   3606               LSLS     R6,R6,#+24
   \   000001C2   360E               LSRS     R6,R6,#+24
   \   000001C4   0F20               MOVS     R0,#+15
   \   000001C6   4643               MULS     R6,R0,R6
   \   000001C8   2F00               MOVS     R7,R5
   \   000001CA   0C20               MOVS     R0,#+12
   \   000001CC   4743               MULS     R7,R0,R7
   \   000001CE   82B0               SUB      SP,SP,#+8
   \   000001D0   0B20               MOVS     R0,#+11
   \   000001D2   0090               STR      R0,[SP, #+0]
   \   000001D4   0300               MOVS     R3,R0
   \   000001D6   5720               MOVS     R0,#+87
   \   000001D8   C21B               SUBS     R2,R0,R7
   \   000001DA   1206               LSLS     R2,R2,#+24
   \   000001DC   120E               LSRS     R2,R2,#+24
   \   000001DE   3100               MOVS     R1,R6
   \   000001E0   2231               ADDS     R1,R1,#+34
   \   000001E2   0906               LSLS     R1,R1,#+24
   \   000001E4   090E               LSRS     R1,R1,#+24
   \   000001E6   1148               LDR      R0,??NodeStanIO_Refresh_0+0x4  ;; Frame
   \   000001E8   ........           BL       CopyToCanvasPoint
   \   000001EC   02B0               ADD      SP,SP,#+8
   \   000001EE   0222               MOVS     R2,#+2
   \   000001F0   01A9               ADD      R1,SP,#+4
   \   000001F2   2000               MOVS     R0,R4
   \   000001F4   ........           BL       CharToStr
   \   000001F8   82B0               SUB      SP,SP,#+8
   \   000001FA   0120               MOVS     R0,#+1
   \   000001FC   0090               STR      R0,[SP, #+0]
   \   000001FE   7F21               MOVS     R1,#+127
   \   00000200   03B4               PUSH     {R0,R1}
   \   00000202   0821               MOVS     R1,#+8
   \   00000204   0220               MOVS     R0,#+2
   \   00000206   03B4               PUSH     {R0,R1}
   \   00000208   5820               MOVS     R0,#+88
   \   0000020A   C31B               SUBS     R3,R0,R7
   \   0000020C   2336               ADDS     R6,R6,#+35
   \   0000020E   3200               MOVS     R2,R6
   \   00000210   1206               LSLS     R2,R2,#+24
   \   00000212   120E               LSRS     R2,R2,#+24
   \   00000214   0221               MOVS     R1,#+2
   \   00000216   07A8               ADD      R0,SP,#+28
   \   00000218   ........           BL       Label
   \   0000021C   06B0               ADD      SP,SP,#+24
   \   0000021E   B9E7               B        ??NodeStanIO_Refresh_12
   8881                            }
   8882                  
   8883                     }
   8884                }//_______________________________________________________________________ 
   \                     ??NodeStanIO_Refresh_9:
   \   00000220   05B0               ADD      SP,SP,#+20
   \   00000222   F0BC               POP      {R4-R7}
   \   00000224   01BC               POP      {R0}
   \   00000226   0047               BX       R0               ;; return
   \                     ??NodeStanIO_Refresh_0:
   \   00000228   ........           DC32     ??Dziel5
   \   0000022C   ........           DC32     Frame
   \   00000230   ........           DC32     MainStage

   \                                 In section .bss, align 1
   \                     ??Dziel5:
   \   00000000                      DS8 1
   8885                                                                             
   8886          
   8887          
   8888                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8889                void Net_Paint(void)
   8890                {
   \                     Net_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   8891                   if (NET.WiFi.On)
   \   00000002   2648               LDR      R0,??Net_Paint_0  ;; NET + 72
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   20D0               BEQ      ??Net_Paint_1
   8892                   {
   8893                      List_Paint(Speech[g_leng].Siec,5,15,0,0,3, Speech[g_leng].UstawWiFi,"Host" , Speech[g_leng].Okresowosc, Speech[g_leng].Status, Speech[g_leng].Wyl_WiFi, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000000A   254C               LDR      R4,??Net_Paint_0+0x4  ;; 0xa14
   \   0000000C   254D               LDR      R5,??Net_Paint_0+0x8  ;; g_leng
   \   0000000E   264E               LDR      R6,??Net_Paint_0+0xC  ;; Speech
   \   00000010   2868               LDR      R0,[R5, #+0]
   \   00000012   6043               MULS     R0,R4,R0
   \   00000014   3418               ADDS     R4,R6,R0
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0800               MOVS     R0,R1
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   2348               LDR      R0,??Net_Paint_0+0x10  ;; 0x98d
   \   0000001E   2018               ADDS     R0,R4,R0
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   2348               LDR      R0,??Net_Paint_0+0x14  ;; 0xa05
   \   00000024   2118               ADDS     R1,R4,R0
   \   00000026   9638               SUBS     R0,R0,#+150
   \   00000028   2018               ADDS     R0,R4,R0
   \   0000002A   03B4               PUSH     {R0,R1}
   \   0000002C   2149               LDR      R1,??Net_Paint_0+0x18  ;; `?<Constant "Host">`
   \   0000002E   2248               LDR      R0,??Net_Paint_0+0x1C  ;; 0x8ca
   \   00000030   2018               ADDS     R0,R4,R0
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   0321               MOVS     R1,#+3
   \   00000036   0020               MOVS     R0,#+0
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   0300               MOVS     R3,R0
   \   0000003C   0F22               MOVS     R2,#+15
   \   0000003E   0521               MOVS     R1,#+5
   \   00000040   1E48               LDR      R0,??Net_Paint_0+0x20  ;; 0x8bb
   \   00000042   2018               ADDS     R0,R4,R0
   \   00000044   ........           BL       List_Paint
   \   00000048   0AB0               ADD      SP,SP,#+40
   \   0000004A   24E0               B        ??Net_Paint_2
   8894                   }else{
   8895                      List_Paint(Speech[g_leng].Siec,1,60,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \                     ??Net_Paint_1:
   \   0000004C   144C               LDR      R4,??Net_Paint_0+0x4  ;; 0xa14
   \   0000004E   154D               LDR      R5,??Net_Paint_0+0x8  ;; g_leng
   \   00000050   154E               LDR      R6,??Net_Paint_0+0xC  ;; Speech
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   03B4               PUSH     {R0,R1}
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   03B4               PUSH     {R0,R1}
   \   0000005A   19A0               ADR      R0,??Net_Paint_0+0x24  ;; 0x20, 0x00, 0x00, 0x00
   \   0000005C   03B4               PUSH     {R0,R1}
   \   0000005E   0321               MOVS     R1,#+3
   \   00000060   0020               MOVS     R0,#+0
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   0300               MOVS     R3,R0
   \   00000066   3C22               MOVS     R2,#+60
   \   00000068   0121               MOVS     R1,#+1
   \   0000006A   1448               LDR      R0,??Net_Paint_0+0x20  ;; 0x8bb
   \   0000006C   2F68               LDR      R7,[R5, #+0]
   \   0000006E   6743               MULS     R7,R4,R7
   \   00000070   F719               ADDS     R7,R6,R7
   \   00000072   3818               ADDS     R0,R7,R0
   \   00000074   ........           BL       List_Paint
   \   00000078   0AB0               ADD      SP,SP,#+40
   8896                      Button(Speech[g_leng].Wl_WiFi,7,75,50,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000007A   82B0               SUB      SP,SP,#+8
   \   0000007C   0D20               MOVS     R0,#+13
   \   0000007E   0090               STR      R0,[SP, #+0]
   \   00000080   3223               MOVS     R3,#+50
   \   00000082   4B22               MOVS     R2,#+75
   \   00000084   0721               MOVS     R1,#+7
   \   00000086   0F48               LDR      R0,??Net_Paint_0+0x28  ;; 0x97e
   \   00000088   2D68               LDR      R5,[R5, #+0]
   \   0000008A   6543               MULS     R5,R4,R5
   \   0000008C   7419               ADDS     R4,R6,R5
   \   0000008E   2018               ADDS     R0,R4,R0
   \   00000090   ........           BL       Button
   \   00000094   02B0               ADD      SP,SP,#+8
   8897                   }
   8898                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??Net_Paint_2:
   \   00000096   F8BC               POP      {R3-R7}
   \   00000098   01BC               POP      {R0}
   \   0000009A   0047               BX       R0               ;; return
   \                     ??Net_Paint_0:
   \   0000009C   ........           DC32     NET + 72
   \   000000A0   140A0000           DC32     0xa14
   \   000000A4   ........           DC32     g_leng
   \   000000A8   ........           DC32     Speech
   \   000000AC   8D090000           DC32     0x98d
   \   000000B0   050A0000           DC32     0xa05
   \   000000B4   ........           DC32     `?<Constant "Host">`
   \   000000B8   CA080000           DC32     0x8ca
   \   000000BC   BB080000           DC32     0x8bb
   \   000000C0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000C4   7E090000           DC32     0x97e
   8899          
   8900          
   8901                  
   8902                 
   8903                 
   8904                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8905                void Net_Event(void)
   8906                {
   \                     Net_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   8907                  if (NET.WiFi.On)
   \   00000002   4748               LDR      R0,??Net_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   455E               LDRSH    R5,[R0, R1]
   \   00000008   4648               LDR      R0,??Net_Event_0+0x4  ;; Y_up
   \   0000000A   465E               LDRSH    R6,[R0, R1]
   \   0000000C   4648               LDR      R0,??Net_Event_0+0x8  ;; X_down
   \   0000000E   425E               LDRSH    R2,[R0, R1]
   \   00000010   4648               LDR      R0,??Net_Event_0+0xC  ;; Y_down
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   464C               LDR      R4,??Net_Event_0+0x10  ;; NET
   \   00000016   4820               MOVS     R0,#+72
   \   00000018   205C               LDRB     R0,[R4, R0]
   \   0000001A   0028               CMP      R0,#+0
   \   0000001C   37D0               BEQ      ??Net_Event_1
   8908                   {
   8909                        int ans=List_Event(X_up, Y_up, X_down, Y_down, 5 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000001E   0800               MOVS     R0,R1
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0F21               MOVS     R1,#+15
   \   00000024   0520               MOVS     R0,#+5
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3100               MOVS     R1,R6
   \   0000002A   2800               MOVS     R0,R5
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   \   00000032   0500               MOVS     R5,R0
   8910                  
   8911                        if (ans)
   \   00000034   70D0               BEQ      ??Net_Event_2
   8912                          {
   8913                          if ((ans>0) && (ans<=4)) MenuLevel=(MenuLevel*10+ans);
   \   00000036   012D               CMP      R5,#+1
   \   00000038   07DB               BLT      ??Net_Event_3
   \   0000003A   052D               CMP      R5,#+5
   \   0000003C   05DA               BGE      ??Net_Event_3
   \   0000003E   3D4E               LDR      R6,??Net_Event_0+0x14  ;; TextToChangeLength
   \   00000040   B06C               LDR      R0,[R6, #+72]
   \   00000042   0A21               MOVS     R1,#+10
   \   00000044   4843               MULS     R0,R1,R0
   \   00000046   4019               ADDS     R0,R0,R5
   \   00000048   B064               STR      R0,[R6, #+72]
   8914                          if (ans==5)   //wy³¹cz WiFi
   \                     ??Net_Event_3:
   \   0000004A   052D               CMP      R5,#+5
   \   0000004C   12D1               BNE      ??Net_Event_4
   8915                          {
   8916                              NET.WiFi.On=0; 
   \   0000004E   4820               MOVS     R0,#+72
   \   00000050   0021               MOVS     R1,#+0
   \   00000052   2154               STRB     R1,[R4, R0]
   8917                             //zapis do flash
   8918                              unsigned int Save = __get_interrupt_state();  
   \   00000054   ........           BL       __iar_get_interrupt_state
   \   00000058   0600               MOVS     R6,R0
   8919                              __disable_interrupt();
   \   0000005A   ........           BL       __iar_disable_interrupt
   8920                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.On)), (char*) (&(NET.WiFi.On)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000005E   0122               MOVS     R2,#+1
   \   00000060   4834               ADDS     R4,R4,#+72
   \   00000062   2100               MOVS     R1,R4
   \   00000064   3448               LDR      R0,??Net_Event_0+0x18  ;; 0x13d8b8
   \   00000066   ........           BL       FlashWrite
   8921                              __set_interrupt_state(Save);
   \   0000006A   3000               MOVS     R0,R6
   \   0000006C   ........           BL       __iar_set_interrupt_state
   8922                              __enable_interrupt();
   \   00000070   ........           BL       __iar_enable_interrupt
   8923                              //koniec zapisu do flash
   8924                            
   8925                          }
   8926                          if (ans<0) {
   \                     ??Net_Event_4:
   \   00000074   002D               CMP      R5,#+0
   \   00000076   07D5               BPL      ??Net_Event_5
   8927                            MenuLevel=(MenuLevel/10);
   \   00000078   2E4E               LDR      R6,??Net_Event_0+0x14  ;; TextToChangeLength
   \   0000007A   B06C               LDR      R0,[R6, #+72]
   \   0000007C   0A21               MOVS     R1,#+10
   \   0000007E   ........           BL       __aeabi_idivmod
   \   00000082   B064               STR      R0,[R6, #+72]
   8928                            CurModifSheet=0; 
   \   00000084   0020               MOVS     R0,#+0
   \   00000086   7071               STRB     R0,[R6, #+5]
   8929                          }
   8930                          MenuPaint();
   \                     ??Net_Event_5:
   \   00000088   ........           BL       MenuPaint
   \   0000008C   44E0               B        ??Net_Event_2
   8931                          } 
   8932                   }else{
   8933                       int ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   8934                        if (ans<0) {
   \                     ??Net_Event_1:
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   0F21               MOVS     R1,#+15
   \   00000092   03B4               PUSH     {R0,R1}
   \   00000094   3100               MOVS     R1,R6
   \   00000096   2800               MOVS     R0,R5
   \   00000098   ........           BL       List_Event
   \   0000009C   04B0               ADD      SP,SP,#+16
   \   0000009E   0028               CMP      R0,#+0
   \   000000A0   07D5               BPL      ??Net_Event_6
   8935                              MenuLevel=(MenuLevel/10);
   \   000000A2   244E               LDR      R6,??Net_Event_0+0x14  ;; TextToChangeLength
   \   000000A4   B06C               LDR      R0,[R6, #+72]
   \   000000A6   0A21               MOVS     R1,#+10
   \   000000A8   ........           BL       __aeabi_idivmod
   \   000000AC   B064               STR      R0,[R6, #+72]
   8936                              CurModifSheet=0; 
   \   000000AE   0020               MOVS     R0,#+0
   \   000000B0   7071               STRB     R0,[R6, #+5]
   8937                            }
   8938                       
   8939                     
   8940                       if (Button(Speech[g_leng].Wl_WiFi,7,75,50,13)==1)
   \                     ??Net_Event_6:
   \   000000B2   82B0               SUB      SP,SP,#+8
   \   000000B4   0D20               MOVS     R0,#+13
   \   000000B6   0090               STR      R0,[SP, #+0]
   \   000000B8   3223               MOVS     R3,#+50
   \   000000BA   4B22               MOVS     R2,#+75
   \   000000BC   0721               MOVS     R1,#+7
   \   000000BE   1F48               LDR      R0,??Net_Event_0+0x1C  ;; 0x97e
   \   000000C0   1F4D               LDR      R5,??Net_Event_0+0x20  ;; g_leng
   \   000000C2   2D68               LDR      R5,[R5, #+0]
   \   000000C4   1F4E               LDR      R6,??Net_Event_0+0x24  ;; 0xa14
   \   000000C6   7543               MULS     R5,R6,R5
   \   000000C8   1F4E               LDR      R6,??Net_Event_0+0x28  ;; Speech
   \   000000CA   7519               ADDS     R5,R6,R5
   \   000000CC   2818               ADDS     R0,R5,R0
   \   000000CE   ........           BL       Button
   \   000000D2   02B0               ADD      SP,SP,#+8
   \   000000D4   0128               CMP      R0,#+1
   \   000000D6   1FD1               BNE      ??Net_Event_2
   8941                       {
   8942                             NET.Status.FreezTime=0;
   8943                             NET.Status.HostLink=DISCONNECTED;
   \   000000D8   0020               MOVS     R0,#+0
   \   000000DA   0100               MOVS     R1,R0
   8944                             NET.Status.AccesPointAssociate=DISCONNECTED;
   \   000000DC   2080               STRH     R0,[R4, #+0]
   8945                             NET.Status.Timeout=0;
   \   000000DE   2200               MOVS     R2,R4
   \   000000E0   3832               ADDS     R2,R2,#+56
   \   000000E2   03C2               STM      R2!,{R0,R1}
   8946                             NET.Status.HttpNextQueryTime=0;
   \   000000E4   2200               MOVS     R2,R4
   \   000000E6   3032               ADDS     R2,R2,#+48
   \   000000E8   03C2               STM      R2!,{R0,R1}
   8947                             NET.Status.FreezTime=0;
   \   000000EA   2064               STR      R0,[R4, #+64]
   \   000000EC   6164               STR      R1,[R4, #+68]
   8948                         
   8949                             NET.WiFi.On=1; 
   \   000000EE   4820               MOVS     R0,#+72
   \   000000F0   0121               MOVS     R1,#+1
   \   000000F2   2154               STRB     R1,[R4, R0]
   8950                             //zapis do flash
   8951                              unsigned int Save = __get_interrupt_state();  
   \   000000F4   ........           BL       __iar_get_interrupt_state
   \   000000F8   0500               MOVS     R5,R0
   8952                              __disable_interrupt();
   \   000000FA   ........           BL       __iar_disable_interrupt
   8953                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.On)), (char*) (&(NET.WiFi.On)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000FE   0A00               MOVS     R2,R1
   \   00000100   4834               ADDS     R4,R4,#+72
   \   00000102   2100               MOVS     R1,R4
   \   00000104   0C48               LDR      R0,??Net_Event_0+0x18  ;; 0x13d8b8
   \   00000106   ........           BL       FlashWrite
   8954                              __set_interrupt_state(Save);
   \   0000010A   2800               MOVS     R0,R5
   \   0000010C   ........           BL       __iar_set_interrupt_state
   8955                              __enable_interrupt();
   \   00000110   ........           BL       __iar_enable_interrupt
   8956                              //koniec zapisu do flash
   8957                              
   8958                              
   8959                         MenuPaint();
   \   00000114   ........           BL       MenuPaint
   8960                       }
   8961                    
   8962                   }
   8963                     
   8964                }//_______________________________________________________________________
   \                     ??Net_Event_2:
   \   00000118   70BC               POP      {R4-R6}
   \   0000011A   01BC               POP      {R0}
   \   0000011C   0047               BX       R0               ;; return
   \   0000011E   C046               Nop      
   \                     ??Net_Event_0:
   \   00000120   ........           DC32     X_up
   \   00000124   ........           DC32     Y_up
   \   00000128   ........           DC32     X_down
   \   0000012C   ........           DC32     Y_down
   \   00000130   ........           DC32     NET
   \   00000134   ........           DC32     TextToChangeLength
   \   00000138   B8D81300           DC32     0x13d8b8
   \   0000013C   7E090000           DC32     0x97e
   \   00000140   ........           DC32     g_leng
   \   00000144   140A0000           DC32     0xa14
   \   00000148   ........           DC32     Speech
   8965          
   8966          
   8967          
   8968          
   8969          
   8970                //*------------------------      -----------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8971                void UstawSiec_Paint(void)
   8972                {
   \                     UstawSiec_Paint:
   \   00000000   10B5               PUSH     {R4,LR}
   8973                    List_Paint(Speech[g_leng].Siec,2,15,0,0,3,Speech[g_leng].Punkt_dostepu,"TCP/IP" , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0E48               LDR      R0,??UstawSiec_Paint_0  ;; g_leng
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0E49               LDR      R1,??UstawSiec_Paint_0+0x4  ;; 0xa14
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   0E49               LDR      R1,??UstawSiec_Paint_0+0x8  ;; Speech
   \   0000000C   0C18               ADDS     R4,R1,R0
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   0800               MOVS     R0,R1
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0B49               LDR      R1,??UstawSiec_Paint_0+0xC  ;; `?<Constant "TCP/IP">`
   \   0000001A   0C48               LDR      R0,??UstawSiec_Paint_0+0x10  ;; 0x8d9
   \   0000001C   2018               ADDS     R0,R4,R0
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0321               MOVS     R1,#+3
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0300               MOVS     R3,R0
   \   00000028   0F22               MOVS     R2,#+15
   \   0000002A   0221               MOVS     R1,#+2
   \   0000002C   0848               LDR      R0,??UstawSiec_Paint_0+0x14  ;; 0x8bb
   \   0000002E   2018               ADDS     R0,R4,R0
   \   00000030   ........           BL       List_Paint
   \   00000034   0AB0               ADD      SP,SP,#+40
   8974                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000036   10BC               POP      {R4}
   \   00000038   01BC               POP      {R0}
   \   0000003A   0047               BX       R0               ;; return
   \                     ??UstawSiec_Paint_0:
   \   0000003C   ........           DC32     g_leng
   \   00000040   140A0000           DC32     0xa14
   \   00000044   ........           DC32     Speech
   \   00000048   ........           DC32     `?<Constant "TCP/IP">`
   \   0000004C   D9080000           DC32     0x8d9
   \   00000050   BB080000           DC32     0x8bb
   8975          
   8976          
   8977          
   8978                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   8979                void UstawSiec_Event(void)
   8980                {
   \                     UstawSiec_Event:
   \   00000000   10B5               PUSH     {R4,LR}
   8981                  int ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   0220               MOVS     R0,#+2
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   1448               LDR      R0,??UstawSiec_Event_0  ;; Y_down
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   1348               LDR      R0,??UstawSiec_Event_0+0x4  ;; X_down
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   1348               LDR      R0,??UstawSiec_Event_0+0x8  ;; Y_up
   \   0000001A   415E               LDRSH    R1,[R0, R1]
   \   0000001C   1348               LDR      R0,??UstawSiec_Event_0+0xC  ;; X_up
   \   0000001E   0024               MOVS     R4,#+0
   \   00000020   005F               LDRSH    R0,[R0, R4]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   8982            
   8983                  if (ans)
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   15D0               BEQ      ??UstawSiec_Event_1
   8984                    {
   8985                    if ((ans>0) && (ans<=2)) MenuLevel=(MenuLevel*10+ans);
   \   0000002C   0128               CMP      R0,#+1
   \   0000002E   07DB               BLT      ??UstawSiec_Event_2
   \   00000030   0328               CMP      R0,#+3
   \   00000032   05DA               BGE      ??UstawSiec_Event_2
   \   00000034   0E4C               LDR      R4,??UstawSiec_Event_0+0x10  ;; TextToChangeLength
   \   00000036   A16C               LDR      R1,[R4, #+72]
   \   00000038   0A22               MOVS     R2,#+10
   \   0000003A   5143               MULS     R1,R2,R1
   \   0000003C   0918               ADDS     R1,R1,R0
   \   0000003E   A164               STR      R1,[R4, #+72]
   8986                    if (ans<0) {
   \                     ??UstawSiec_Event_2:
   \   00000040   0028               CMP      R0,#+0
   \   00000042   07D5               BPL      ??UstawSiec_Event_3
   8987                      MenuLevel=(MenuLevel/10);
   \   00000044   0A4C               LDR      R4,??UstawSiec_Event_0+0x10  ;; TextToChangeLength
   \   00000046   A06C               LDR      R0,[R4, #+72]
   \   00000048   0A21               MOVS     R1,#+10
   \   0000004A   ........           BL       __aeabi_idivmod
   \   0000004E   A064               STR      R0,[R4, #+72]
   8988                     CurModifSheet=0; 
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   6071               STRB     R0,[R4, #+5]
   8989                    }
   8990                    MenuPaint();
   \                     ??UstawSiec_Event_3:
   \   00000054   ........           BL       MenuPaint
   8991                    } 
   8992                }//_______________________________________________________________________
   \                     ??UstawSiec_Event_1:
   \   00000058   10BC               POP      {R4}
   \   0000005A   01BC               POP      {R0}
   \   0000005C   0047               BX       R0               ;; return
   \   0000005E   C046               Nop      
   \                     ??UstawSiec_Event_0:
   \   00000060   ........           DC32     Y_down
   \   00000064   ........           DC32     X_down
   \   00000068   ........           DC32     Y_up
   \   0000006C   ........           DC32     X_up
   \   00000070   ........           DC32     TextToChangeLength
   8993          
   8994                                     
   8995          //#include "WizFi.h"                            
   8996          // extern _Net NET;                         
   8997          
   8998                //*------------------------      -----------------------------------------------
   8999                 

   \                                 In section Debug.txt, align 4, keep-with-next
   9000                void Punkt_dostepuWiFi_Paint(void)
   9001                {
   \                     Punkt_dostepuWiFi_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9002              
   9003                    List_Paint(Speech[g_leng].Punkt_dostepu,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   4C4C               LDR      R4,??Punkt_dostepuWiFi_Paint_0  ;; 0xa14
   \   00000004   4C4D               LDR      R5,??Punkt_dostepuWiFi_Paint_0+0x4  ;; g_leng
   \   00000006   4D4E               LDR      R6,??Punkt_dostepuWiFi_Paint_0+0x8  ;; Speech
   \   00000008   0021               MOVS     R1,#+0
   \   0000000A   0800               MOVS     R0,R1
   \   0000000C   03B4               PUSH     {R0,R1}
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   4BA0               ADR      R0,??Punkt_dostepuWiFi_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0321               MOVS     R1,#+3
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   0300               MOVS     R3,R0
   \   0000001E   6C22               MOVS     R2,#+108
   \   00000020   0121               MOVS     R1,#+1
   \   00000022   4848               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x10  ;; 0x8d9
   \   00000024   2F68               LDR      R7,[R5, #+0]
   \   00000026   6743               MULS     R7,R4,R7
   \   00000028   F719               ADDS     R7,R6,R7
   \   0000002A   3818               ADDS     R0,R7,R0
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   9004          
   9005                    Label(Speech[g_leng].Nazwa,0,1,97,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000032   82B0               SUB      SP,SP,#+8
   \   00000034   0120               MOVS     R0,#+1
   \   00000036   0090               STR      R0,[SP, #+0]
   \   00000038   7F21               MOVS     R1,#+127
   \   0000003A   03B4               PUSH     {R0,R1}
   \   0000003C   3E21               MOVS     R1,#+62
   \   0000003E   0F20               MOVS     R0,#+15
   \   00000040   03B4               PUSH     {R0,R1}
   \   00000042   6123               MOVS     R3,#+97
   \   00000044   0122               MOVS     R2,#+1
   \   00000046   0021               MOVS     R1,#+0
   \   00000048   3F48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x14  ;; 0x8e8
   \   0000004A   2F68               LDR      R7,[R5, #+0]
   \   0000004C   6743               MULS     R7,R4,R7
   \   0000004E   F719               ADDS     R7,R6,R7
   \   00000050   3818               ADDS     R0,R7,R0
   \   00000052   ........           BL       Label
   \   00000056   06B0               ADD      SP,SP,#+24
   9006                    Label(NET.WiFi.SSID,0,2,86,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000058   3C4F               LDR      R7,??Punkt_dostepuWiFi_Paint_0+0x18  ;; NET
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7F21               MOVS     R1,#+127
   \   00000062   0120               MOVS     R0,#+1
   \   00000064   03B4               PUSH     {R0,R1}
   \   00000066   3B21               MOVS     R1,#+59
   \   00000068   0F20               MOVS     R0,#+15
   \   0000006A   03B4               PUSH     {R0,R1}
   \   0000006C   5623               MOVS     R3,#+86
   \   0000006E   0222               MOVS     R2,#+2
   \   00000070   0021               MOVS     R1,#+0
   \   00000072   3800               MOVS     R0,R7
   \   00000074   A630               ADDS     R0,R0,#+166
   \   00000076   ........           BL       Label
   \   0000007A   06B0               ADD      SP,SP,#+24
   9007                    Button(Speech[g_leng].Zmien,15,68,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000007C   82B0               SUB      SP,SP,#+8
   \   0000007E   0D20               MOVS     R0,#+13
   \   00000080   0090               STR      R0,[SP, #+0]
   \   00000082   2223               MOVS     R3,#+34
   \   00000084   4422               MOVS     R2,#+68
   \   00000086   0F21               MOVS     R1,#+15
   \   00000088   8C46               MOV      R12,R1
   \   0000008A   3149               LDR      R1,??Punkt_dostepuWiFi_Paint_0+0x1C  ;; 0x906
   \   0000008C   2868               LDR      R0,[R5, #+0]
   \   0000008E   6043               MULS     R0,R4,R0
   \   00000090   3018               ADDS     R0,R6,R0
   \   00000092   4018               ADDS     R0,R0,R1
   \   00000094   6146               MOV      R1,R12
   \   00000096   ........           BL       Button
   \   0000009A   02B0               ADD      SP,SP,#+8
   9008                    
   9009                    Label(Speech[g_leng].Klucz_seciowy,0,1,55,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000009C   82B0               SUB      SP,SP,#+8
   \   0000009E   0120               MOVS     R0,#+1
   \   000000A0   0090               STR      R0,[SP, #+0]
   \   000000A2   7F21               MOVS     R1,#+127
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   3E21               MOVS     R1,#+62
   \   000000A8   0F20               MOVS     R0,#+15
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   3723               MOVS     R3,#+55
   \   000000AE   0122               MOVS     R2,#+1
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   8C46               MOV      R12,R1
   \   000000B4   2749               LDR      R1,??Punkt_dostepuWiFi_Paint_0+0x20  ;; 0x915
   \   000000B6   2868               LDR      R0,[R5, #+0]
   \   000000B8   6043               MULS     R0,R4,R0
   \   000000BA   3018               ADDS     R0,R6,R0
   \   000000BC   4018               ADDS     R0,R0,R1
   \   000000BE   6146               MOV      R1,R12
   \   000000C0   ........           BL       Label
   \   000000C4   06B0               ADD      SP,SP,#+24
   9010                    Label(NET.WiFi.Key,0,2,44,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000C6   82B0               SUB      SP,SP,#+8
   \   000000C8   0020               MOVS     R0,#+0
   \   000000CA   0090               STR      R0,[SP, #+0]
   \   000000CC   7F21               MOVS     R1,#+127
   \   000000CE   0120               MOVS     R0,#+1
   \   000000D0   03B4               PUSH     {R0,R1}
   \   000000D2   3B21               MOVS     R1,#+59
   \   000000D4   0F20               MOVS     R0,#+15
   \   000000D6   03B4               PUSH     {R0,R1}
   \   000000D8   2C23               MOVS     R3,#+44
   \   000000DA   0222               MOVS     R2,#+2
   \   000000DC   0021               MOVS     R1,#+0
   \   000000DE   9737               ADDS     R7,R7,#+151
   \   000000E0   3800               MOVS     R0,R7
   \   000000E2   ........           BL       Label
   \   000000E6   06B0               ADD      SP,SP,#+24
   9011                    Button(Speech[g_leng].Zmien,15,25,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000E8   82B0               SUB      SP,SP,#+8
   \   000000EA   0D20               MOVS     R0,#+13
   \   000000EC   0090               STR      R0,[SP, #+0]
   \   000000EE   2223               MOVS     R3,#+34
   \   000000F0   1922               MOVS     R2,#+25
   \   000000F2   0F21               MOVS     R1,#+15
   \   000000F4   1648               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x1C  ;; 0x906
   \   000000F6   2F68               LDR      R7,[R5, #+0]
   \   000000F8   6743               MULS     R7,R4,R7
   \   000000FA   F719               ADDS     R7,R6,R7
   \   000000FC   3818               ADDS     R0,R7,R0
   \   000000FE   ........           BL       Button
   \   00000102   02B0               ADD      SP,SP,#+8
   9012                    
   9013                    H_line(0,20,63,1); // (char X, int Y, char lenght, char typ)
   \   00000104   0123               MOVS     R3,#+1
   \   00000106   3F22               MOVS     R2,#+63
   \   00000108   1421               MOVS     R1,#+20
   \   0000010A   0020               MOVS     R0,#+0
   \   0000010C   ........           BL       H_line
   9014                    Button(Speech[g_leng].Polacz,4,3,56,16); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000110   82B0               SUB      SP,SP,#+8
   \   00000112   1020               MOVS     R0,#+16
   \   00000114   0090               STR      R0,[SP, #+0]
   \   00000116   3823               MOVS     R3,#+56
   \   00000118   0322               MOVS     R2,#+3
   \   0000011A   0421               MOVS     R1,#+4
   \   0000011C   0E48               LDR      R0,??Punkt_dostepuWiFi_Paint_0+0x24  ;; 0x8f7
   \   0000011E   2D68               LDR      R5,[R5, #+0]
   \   00000120   6543               MULS     R5,R4,R5
   \   00000122   7419               ADDS     R4,R6,R5
   \   00000124   2018               ADDS     R0,R4,R0
   \   00000126   ........           BL       Button
   \   0000012A   02B0               ADD      SP,SP,#+8
   9015                
   9016                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   0000012C   F8BC               POP      {R3-R7}
   \   0000012E   01BC               POP      {R0}
   \   00000130   0047               BX       R0               ;; return
   \   00000132   C046               Nop      
   \                     ??Punkt_dostepuWiFi_Paint_0:
   \   00000134   140A0000           DC32     0xa14
   \   00000138   ........           DC32     g_leng
   \   0000013C   ........           DC32     Speech
   \   00000140   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000144   D9080000           DC32     0x8d9
   \   00000148   E8080000           DC32     0x8e8
   \   0000014C   ........           DC32     NET
   \   00000150   06090000           DC32     0x906
   \   00000154   15090000           DC32     0x915
   \   00000158   F7080000           DC32     0x8f7
   9017                
   9018          
   9019          
   9020          
   9021                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9022                void Punkt_dostepuWiFi_Event(void)
   9023                {
   \                     Punkt_dostepuWiFi_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9024                
   9025                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   3E4C               LDR      R4,??Punkt_dostepuWiFi_Event_0  ;; Y_up
   \   00000004   3E4D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   3C48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x8  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   215E               LDRSH    R1,[R4, R0]
   \   0000001C   3A48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   06D5               BPL      ??Punkt_dostepuWiFi_Event_1
   9026                  {
   9027                    MenuLevel=(MenuLevel/10);
   \   0000002C   374C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   0000002E   A06C               LDR      R0,[R4, #+72]
   \   00000030   0A21               MOVS     R1,#+10
   \   00000032   ........           BL       __aeabi_idivmod
   \   00000036   A064               STR      R0,[R4, #+72]
   \   00000038   5AE0               B        ??Punkt_dostepuWiFi_Event_2
   9028                    
   9029                  } 
   9030                   else if ((Y_down<112) || (Y_up<112))
   \                     ??Punkt_dostepuWiFi_Event_1:
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   285E               LDRSH    R0,[R5, R0]
   \   0000003E   7028               CMP      R0,#+112
   \   00000040   03DB               BLT      ??Punkt_dostepuWiFi_Event_3
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   205E               LDRSH    R0,[R4, R0]
   \   00000046   7028               CMP      R0,#+112
   \   00000048   52DA               BGE      ??Punkt_dostepuWiFi_Event_2
   9031                  {
   9032                      
   9033                      if (Button(Speech[g_leng].Zmien,15,68,34,13)==1)
   \                     ??Punkt_dostepuWiFi_Event_3:
   \   0000004A   314C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x14  ;; 0xa14
   \   0000004C   314D               LDR      R5,??Punkt_dostepuWiFi_Event_0+0x18  ;; g_leng
   \   0000004E   324E               LDR      R6,??Punkt_dostepuWiFi_Event_0+0x1C  ;; Speech
   \   00000050   82B0               SUB      SP,SP,#+8
   \   00000052   0D20               MOVS     R0,#+13
   \   00000054   0090               STR      R0,[SP, #+0]
   \   00000056   2223               MOVS     R3,#+34
   \   00000058   4422               MOVS     R2,#+68
   \   0000005A   0F21               MOVS     R1,#+15
   \   0000005C   2F48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x20  ;; 0x906
   \   0000005E   2F68               LDR      R7,[R5, #+0]
   \   00000060   6743               MULS     R7,R4,R7
   \   00000062   F719               ADDS     R7,R6,R7
   \   00000064   3818               ADDS     R0,R7,R0
   \   00000066   ........           BL       Button
   \   0000006A   02B0               ADD      SP,SP,#+8
   \   0000006C   0128               CMP      R0,#+1
   \   0000006E   0CD1               BNE      ??Punkt_dostepuWiFi_Event_4
   9034                      {
   9035                        TextToChange=NET.WiFi.SSID;
   \   00000070   264C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   00000072   2B48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x24  ;; NET + 166
   \   00000074   2065               STR      R0,[R4, #+80]
   9036                        TextToChangeLength=15;
   \   00000076   0F20               MOVS     R0,#+15
   \   00000078   2070               STRB     R0,[R4, #+0]
   9037                        TextToChangeMaxPixSize=62;
   \   0000007A   3E20               MOVS     R0,#+62
   \   0000007C   6070               STRB     R0,[R4, #+1]
   9038                        MenuLevel=(MenuLevel*10+1);
   \   0000007E   A06C               LDR      R0,[R4, #+72]
   \   00000080   0A21               MOVS     R1,#+10
   \   00000082   4843               MULS     R0,R1,R0
   \   00000084   401C               ADDS     R0,R0,#+1
   \   00000086   A064               STR      R0,[R4, #+72]
   \   00000088   32E0               B        ??Punkt_dostepuWiFi_Event_2
   9039                      }else if (Button(Speech[g_leng].Zmien,15,25,34,13)==1)
   \                     ??Punkt_dostepuWiFi_Event_4:
   \   0000008A   82B0               SUB      SP,SP,#+8
   \   0000008C   0D20               MOVS     R0,#+13
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   2223               MOVS     R3,#+34
   \   00000092   1922               MOVS     R2,#+25
   \   00000094   0F21               MOVS     R1,#+15
   \   00000096   2148               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x20  ;; 0x906
   \   00000098   2F68               LDR      R7,[R5, #+0]
   \   0000009A   6743               MULS     R7,R4,R7
   \   0000009C   F719               ADDS     R7,R6,R7
   \   0000009E   3818               ADDS     R0,R7,R0
   \   000000A0   ........           BL       Button
   \   000000A4   02B0               ADD      SP,SP,#+8
   \   000000A6   0128               CMP      R0,#+1
   \   000000A8   0CD1               BNE      ??Punkt_dostepuWiFi_Event_5
   9040                      {
   9041                        TextToChange=NET.WiFi.Key;
   \   000000AA   184C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   000000AC   1D48               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x28  ;; NET + 151
   \   000000AE   2065               STR      R0,[R4, #+80]
   9042                        TextToChangeLength=15;
   \   000000B0   0F20               MOVS     R0,#+15
   \   000000B2   2070               STRB     R0,[R4, #+0]
   9043                        TextToChangeMaxPixSize=62;
   \   000000B4   3E20               MOVS     R0,#+62
   \   000000B6   6070               STRB     R0,[R4, #+1]
   9044                        MenuLevel=(MenuLevel*10+1);
   \   000000B8   A06C               LDR      R0,[R4, #+72]
   \   000000BA   0A21               MOVS     R1,#+10
   \   000000BC   4843               MULS     R0,R1,R0
   \   000000BE   401C               ADDS     R0,R0,#+1
   \   000000C0   A064               STR      R0,[R4, #+72]
   \   000000C2   15E0               B        ??Punkt_dostepuWiFi_Event_2
   9045                      }else if (Button(Speech[g_leng].Polacz,4,3,56,16)==1)
   \                     ??Punkt_dostepuWiFi_Event_5:
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   1020               MOVS     R0,#+16
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   3823               MOVS     R3,#+56
   \   000000CC   0322               MOVS     R2,#+3
   \   000000CE   0421               MOVS     R1,#+4
   \   000000D0   1548               LDR      R0,??Punkt_dostepuWiFi_Event_0+0x2C  ;; 0x8f7
   \   000000D2   2D68               LDR      R5,[R5, #+0]
   \   000000D4   6543               MULS     R5,R4,R5
   \   000000D6   7419               ADDS     R4,R6,R5
   \   000000D8   2018               ADDS     R0,R4,R0
   \   000000DA   ........           BL       Button
   \   000000DE   02B0               ADD      SP,SP,#+8
   \   000000E0   0128               CMP      R0,#+1
   \   000000E2   05D1               BNE      ??Punkt_dostepuWiFi_Event_2
   9046                      {
   9047                         MenuLevel=(MenuLevel*10+2);
   \   000000E4   094C               LDR      R4,??Punkt_dostepuWiFi_Event_0+0x10  ;; TextToChangeLength
   \   000000E6   A06C               LDR      R0,[R4, #+72]
   \   000000E8   0A21               MOVS     R1,#+10
   \   000000EA   4843               MULS     R0,R1,R0
   \   000000EC   801C               ADDS     R0,R0,#+2
   \   000000EE   A064               STR      R0,[R4, #+72]
   9048                      }
   9049                      
   9050                      
   9051                      
   9052                    
   9053                  }
   9054                   MenuPaint();
   \                     ??Punkt_dostepuWiFi_Event_2:
   \   000000F0   ........           BL       MenuPaint
   9055                    
   9056                 
   9057                }//_______________________________________________________________________
   \   000000F4   F8BC               POP      {R3-R7}
   \   000000F6   01BC               POP      {R0}
   \   000000F8   0047               BX       R0               ;; return
   \   000000FA   C046               Nop      
   \                     ??Punkt_dostepuWiFi_Event_0:
   \   000000FC   ........           DC32     Y_up
   \   00000100   ........           DC32     Y_down
   \   00000104   ........           DC32     X_down
   \   00000108   ........           DC32     X_up
   \   0000010C   ........           DC32     TextToChangeLength
   \   00000110   140A0000           DC32     0xa14
   \   00000114   ........           DC32     g_leng
   \   00000118   ........           DC32     Speech
   \   0000011C   06090000           DC32     0x906
   \   00000120   ........           DC32     NET + 166
   \   00000124   ........           DC32     NET + 151
   \   00000128   F7080000           DC32     0x8f7
   9058          
   9059          
   9060                
   9061           
   9062                 

   \                                 In section Debug.txt, align 4, keep-with-next
   9063                void WiFiConecting_Paint(void)
   9064                {
   \                     WiFiConecting_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   9065                  
   9066                    //SetWiFiSuspend();
   9067                    List_Paint(Speech[g_leng].Punkt_dostepu,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0BA0               ADR      R0,??WiFiConecting_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   0848               LDR      R0,??WiFiConecting_Paint_0+0x4  ;; 0x8d9
   \   0000001E   094C               LDR      R4,??WiFiConecting_Paint_0+0x8  ;; g_leng
   \   00000020   2468               LDR      R4,[R4, #+0]
   \   00000022   094D               LDR      R5,??WiFiConecting_Paint_0+0xC  ;; 0xa14
   \   00000024   6C43               MULS     R4,R5,R4
   \   00000026   094D               LDR      R5,??WiFiConecting_Paint_0+0x10  ;; Speech
   \   00000028   2C19               ADDS     R4,R5,R4
   \   0000002A   2018               ADDS     R0,R4,R0
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   9068                    Wait_Paint();
   \   00000032   ........           BL       Wait_Paint
   9069                  
   9070                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   00000036   38BC               POP      {R3-R5}
   \   00000038   01BC               POP      {R0}
   \   0000003A   0047               BX       R0               ;; return
   \                     ??WiFiConecting_Paint_0:
   \   0000003C   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000040   D9080000           DC32     0x8d9
   \   00000044   ........           DC32     g_leng
   \   00000048   140A0000           DC32     0xa14
   \   0000004C   ........           DC32     Speech
   9071          
   9072                
   9073                typedef enum {
   9074                WizFi_AT_NC=0,
   9075                WizFi_AT_CONFIG,            //konfiguracja
   9076                WizFi_AT_CONFIG_ERROR,      //b³ad konfiguracji
   9077                WizFi_AT_CONNECTING,           //³¹czenie z hotspotem
   9078                WizFi_AT_CONNECT_ERROR,     //b³¹d po³¹czenia z hotspotem
   9079                WizFi_AT_CONNECTED,         //po³¹czono z hotspotem
   9080              }_WiFiStat;
   9081                

   \                                 In section Debug.txt, align 4, keep-with-next
   9082                void WiFiConecting_Refresh(void)
   9083                {
   \                     WiFiConecting_Refresh:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   9084           
   9085                     static char licz;
   9086                     static char end=0;
   9087                     char cyfra=licz%10;
   \   00000002   6A4C               LDR      R4,??WiFiConecting_Refresh_0  ;; ??licz
   \   00000004   2578               LDRB     R5,[R4, #+0]
   \   00000006   2800               MOVS     R0,R5
   \   00000008   0A21               MOVS     R1,#+10
   \   0000000A   ........           BL       __aeabi_idivmod
   \   0000000E   0E00               MOVS     R6,R1
   \   00000010   3606               LSLS     R6,R6,#+24
   \   00000012   360E               LSRS     R6,R6,#+24
   9088                     
   9089                     if (licz==0)
   \   00000014   002D               CMP      R5,#+0
   \   00000016   0DD1               BNE      ??WiFiConecting_Refresh_1
   9090                     {
   9091                       NET.Status.FreezTime=g_counter+FREEZ_TIME;
   9092                       NET.Status.HostLink=DISCONNECTED;
   \   00000018   654D               LDR      R5,??WiFiConecting_Refresh_0+0x4  ;; NET
   \   0000001A   0026               MOVS     R6,#+0
   9093                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   0000001C   2E80               STRH     R6,[R5, #+0]
   9094                       NET.Status.Timeout=0;
   \   0000001E   3000               MOVS     R0,R6
   \   00000020   0100               MOVS     R1,R0
   \   00000022   2A00               MOVS     R2,R5
   \   00000024   3832               ADDS     R2,R2,#+56
   \   00000026   03C2               STM      R2!,{R0,R1}
   9095                       NET.Status.HttpNextQueryTime=0;
   \   00000028   2A00               MOVS     R2,R5
   \   0000002A   3032               ADDS     R2,R2,#+48
   \   0000002C   03C2               STM      R2!,{R0,R1}
   9096                       NET.Status.FreezTime=0;
   \   0000002E   4035               ADDS     R5,R5,#+64
   \   00000030   03C5               STM      R5!,{R0,R1}
   \   00000032   90E0               B        ??WiFiConecting_Refresh_2
   9097                     }
   9098                     else if (end==0)
   \                     ??WiFiConecting_Refresh_1:
   \   00000034   6078               LDRB     R0,[R4, #+1]
   \   00000036   0028               CMP      R0,#+0
   \   00000038   00D0               BEQ      .+4
   \   0000003A   8CE0               B        ??WiFiConecting_Refresh_2
   9099                     {  
   9100                         if (NET.Status.AccesPointAssociate==DISCONNECTED)
   \   0000003C   5C4D               LDR      R5,??WiFiConecting_Refresh_0+0x4  ;; NET
   \   0000003E   2878               LDRB     R0,[R5, #+0]
   \   00000040   0028               CMP      R0,#+0
   \   00000042   0FD1               BNE      ??WiFiConecting_Refresh_3
   9101                         {
   9102                           Label("Not connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000044   82B0               SUB      SP,SP,#+8
   \   00000046   0090               STR      R0,[SP, #+0]
   \   00000048   7F21               MOVS     R1,#+127
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   3B21               MOVS     R1,#+59
   \   00000050   0F20               MOVS     R0,#+15
   \   00000052   03B4               PUSH     {R0,R1}
   \   00000054   0300               MOVS     R3,R0
   \   00000056   0222               MOVS     R2,#+2
   \   00000058   1100               MOVS     R1,R2
   \   0000005A   5648               LDR      R0,??WiFiConecting_Refresh_0+0x8  ;; `?<Constant "Not connected">`
   \   0000005C   ........           BL       Label
   \   00000060   06B0               ADD      SP,SP,#+24
   \   00000062   78E0               B        ??WiFiConecting_Refresh_2
   9103                         }  
   9104                         else if (NET.Status.AccesPointAssociate==CONNECTING)
   \                     ??WiFiConecting_Refresh_3:
   \   00000064   0228               CMP      R0,#+2
   \   00000066   4AD1               BNE      ??WiFiConecting_Refresh_4
   9105                         {
   9106                           if (cyfra==0) Label("Connecting",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000068   3000               MOVS     R0,R6
   \   0000006A   0FD1               BNE      ??WiFiConecting_Refresh_5
   \   0000006C   82B0               SUB      SP,SP,#+8
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   0090               STR      R0,[SP, #+0]
   \   00000072   7F21               MOVS     R1,#+127
   \   00000074   0120               MOVS     R0,#+1
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   3B21               MOVS     R1,#+59
   \   0000007A   0F20               MOVS     R0,#+15
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0300               MOVS     R3,R0
   \   00000080   0422               MOVS     R2,#+4
   \   00000082   0021               MOVS     R1,#+0
   \   00000084   4C48               LDR      R0,??WiFiConecting_Refresh_0+0xC  ;; `?<Constant "Not connected">` + 16
   \   00000086   ........           BL       Label
   \   0000008A   06B0               ADD      SP,SP,#+24
   9107                           if (cyfra==3) Label("Connecting .",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_5:
   \   0000008C   3000               MOVS     R0,R6
   \   0000008E   0328               CMP      R0,#+3
   \   00000090   0FD1               BNE      ??WiFiConecting_Refresh_6
   \   00000092   82B0               SUB      SP,SP,#+8
   \   00000094   0020               MOVS     R0,#+0
   \   00000096   0090               STR      R0,[SP, #+0]
   \   00000098   7F21               MOVS     R1,#+127
   \   0000009A   0120               MOVS     R0,#+1
   \   0000009C   03B4               PUSH     {R0,R1}
   \   0000009E   3B21               MOVS     R1,#+59
   \   000000A0   0F20               MOVS     R0,#+15
   \   000000A2   03B4               PUSH     {R0,R1}
   \   000000A4   0300               MOVS     R3,R0
   \   000000A6   0422               MOVS     R2,#+4
   \   000000A8   0021               MOVS     R1,#+0
   \   000000AA   4448               LDR      R0,??WiFiConecting_Refresh_0+0x10  ;; `?<Constant "Not connected">` + 28
   \   000000AC   ........           BL       Label
   \   000000B0   06B0               ADD      SP,SP,#+24
   9108                           if (cyfra==5) Label("Connecting ..",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_6:
   \   000000B2   3000               MOVS     R0,R6
   \   000000B4   0528               CMP      R0,#+5
   \   000000B6   0FD1               BNE      ??WiFiConecting_Refresh_7
   \   000000B8   82B0               SUB      SP,SP,#+8
   \   000000BA   0020               MOVS     R0,#+0
   \   000000BC   0090               STR      R0,[SP, #+0]
   \   000000BE   7F21               MOVS     R1,#+127
   \   000000C0   0120               MOVS     R0,#+1
   \   000000C2   03B4               PUSH     {R0,R1}
   \   000000C4   3B21               MOVS     R1,#+59
   \   000000C6   0F20               MOVS     R0,#+15
   \   000000C8   03B4               PUSH     {R0,R1}
   \   000000CA   0300               MOVS     R3,R0
   \   000000CC   0422               MOVS     R2,#+4
   \   000000CE   0021               MOVS     R1,#+0
   \   000000D0   3B48               LDR      R0,??WiFiConecting_Refresh_0+0x14  ;; `?<Constant "Not connected">` + 44
   \   000000D2   ........           BL       Label
   \   000000D6   06B0               ADD      SP,SP,#+24
   9109                           if (cyfra==7) Label("Connecting ...",0,4,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \                     ??WiFiConecting_Refresh_7:
   \   000000D8   072E               CMP      R6,#+7
   \   000000DA   3CD1               BNE      ??WiFiConecting_Refresh_2
   \   000000DC   82B0               SUB      SP,SP,#+8
   \   000000DE   0020               MOVS     R0,#+0
   \   000000E0   0090               STR      R0,[SP, #+0]
   \   000000E2   7F21               MOVS     R1,#+127
   \   000000E4   0120               MOVS     R0,#+1
   \   000000E6   03B4               PUSH     {R0,R1}
   \   000000E8   3B21               MOVS     R1,#+59
   \   000000EA   0F20               MOVS     R0,#+15
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   0300               MOVS     R3,R0
   \   000000F0   0422               MOVS     R2,#+4
   \   000000F2   0021               MOVS     R1,#+0
   \   000000F4   3348               LDR      R0,??WiFiConecting_Refresh_0+0x18  ;; `?<Constant "Not connected">` + 60
   \   000000F6   ........           BL       Label
   \   000000FA   06B0               ADD      SP,SP,#+24
   \   000000FC   2BE0               B        ??WiFiConecting_Refresh_2
   9110                         }else if (NET.Status.AccesPointAssociate==CONNECTED)
   \                     ??WiFiConecting_Refresh_4:
   \   000000FE   0328               CMP      R0,#+3
   \   00000100   29D1               BNE      ??WiFiConecting_Refresh_2
   9111                         {
   9112                           end=1;
   \   00000102   0120               MOVS     R0,#+1
   \   00000104   6070               STRB     R0,[R4, #+1]
   9113                           licz=180;
   \   00000106   B420               MOVS     R0,#+180
   \   00000108   2070               STRB     R0,[R4, #+0]
   9114                           Label("Connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)            
   \   0000010A   82B0               SUB      SP,SP,#+8
   \   0000010C   0020               MOVS     R0,#+0
   \   0000010E   0090               STR      R0,[SP, #+0]
   \   00000110   7F21               MOVS     R1,#+127
   \   00000112   0120               MOVS     R0,#+1
   \   00000114   03B4               PUSH     {R0,R1}
   \   00000116   3B21               MOVS     R1,#+59
   \   00000118   0F20               MOVS     R0,#+15
   \   0000011A   03B4               PUSH     {R0,R1}
   \   0000011C   0300               MOVS     R3,R0
   \   0000011E   0222               MOVS     R2,#+2
   \   00000120   1100               MOVS     R1,R2
   \   00000122   2948               LDR      R0,??WiFiConecting_Refresh_0+0x1C  ;; `?<Constant "Not connected">` + 76
   \   00000124   ........           BL       Label
   \   00000128   06B0               ADD      SP,SP,#+24
   9115                         
   9116                           
   9117                             //zapis do flash
   9118                            unsigned int Save = __get_interrupt_state();  
   \   0000012A   ........           BL       __iar_get_interrupt_state
   \   0000012E   0600               MOVS     R6,R0
   9119                            __disable_interrupt();
   \   00000130   ........           BL       __iar_disable_interrupt
   9120                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.SSID)), (char*) (&(NET.WiFi.SSID)), sizeof(NET.WiFi.SSID));
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000134   0F22               MOVS     R2,#+15
   \   00000136   2900               MOVS     R1,R5
   \   00000138   A631               ADDS     R1,R1,#+166
   \   0000013A   2448               LDR      R0,??WiFiConecting_Refresh_0+0x20  ;; 0x13d916
   \   0000013C   ........           BL       FlashWrite
   9121                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Key)), (char*) (&(NET.WiFi.Key)), sizeof(NET.WiFi.Key));
   \   00000140   0F22               MOVS     R2,#+15
   \   00000142   9735               ADDS     R5,R5,#+151
   \   00000144   2900               MOVS     R1,R5
   \   00000146   2248               LDR      R0,??WiFiConecting_Refresh_0+0x24  ;; 0x13d907
   \   00000148   ........           BL       FlashWrite
   9122                            __set_interrupt_state(Save);
   \   0000014C   3000               MOVS     R0,R6
   \   0000014E   ........           BL       __iar_set_interrupt_state
   9123                            __enable_interrupt();
   \   00000152   ........           BL       __iar_enable_interrupt
   9124                            //koniec zapisu do flash
   9125                         
   9126                         }
   9127                       
   9128                     }
   9129                     
   9130                     if (licz==179) 
   \                     ??WiFiConecting_Refresh_2:
   \   00000156   2078               LDRB     R0,[R4, #+0]
   \   00000158   B328               CMP      R0,#+179
   \   0000015A   13D1               BNE      ??WiFiConecting_Refresh_8
   9131                     {
   9132                       end=1;
   \   0000015C   0120               MOVS     R0,#+1
   \   0000015E   6070               STRB     R0,[R4, #+1]
   9133                       licz=180;
   \   00000160   B420               MOVS     R0,#+180
   \   00000162   2070               STRB     R0,[R4, #+0]
   9134                       Label("Not connected",2,2,15,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000164   82B0               SUB      SP,SP,#+8
   \   00000166   0020               MOVS     R0,#+0
   \   00000168   0090               STR      R0,[SP, #+0]
   \   0000016A   7F21               MOVS     R1,#+127
   \   0000016C   0120               MOVS     R0,#+1
   \   0000016E   03B4               PUSH     {R0,R1}
   \   00000170   3B21               MOVS     R1,#+59
   \   00000172   0F20               MOVS     R0,#+15
   \   00000174   03B4               PUSH     {R0,R1}
   \   00000176   0300               MOVS     R3,R0
   \   00000178   0222               MOVS     R2,#+2
   \   0000017A   1100               MOVS     R1,R2
   \   0000017C   0D48               LDR      R0,??WiFiConecting_Refresh_0+0x8  ;; `?<Constant "Not connected">`
   \   0000017E   ........           BL       Label
   \   00000182   06B0               ADD      SP,SP,#+24
   9135                     }
   9136                     
   9137                     
   9138                     if (licz<210)
   \                     ??WiFiConecting_Refresh_8:
   \   00000184   2078               LDRB     R0,[R4, #+0]
   \   00000186   D228               CMP      R0,#+210
   \   00000188   02D2               BCS      ??WiFiConecting_Refresh_9
   9139                     {
   9140                        licz++; 
   \   0000018A   401C               ADDS     R0,R0,#+1
   \   0000018C   2070               STRB     R0,[R4, #+0]
   \   0000018E   0AE0               B        ??WiFiConecting_Refresh_10
   9141                     }else{
   9142                        licz=0;
   9143                        end=0;
   \                     ??WiFiConecting_Refresh_9:
   \   00000190   0026               MOVS     R6,#+0
   \   00000192   6670               STRB     R6,[R4, #+1]
   9144                        MenuLevel=(MenuLevel/10);
   \   00000194   0F4D               LDR      R5,??WiFiConecting_Refresh_0+0x28  ;; TextToChangeLength
   \   00000196   A86C               LDR      R0,[R5, #+72]
   \   00000198   0A21               MOVS     R1,#+10
   \   0000019A   ........           BL       __aeabi_idivmod
   \   0000019E   A864               STR      R0,[R5, #+72]
   9145                        licz=0;
   \   000001A0   2670               STRB     R6,[R4, #+0]
   9146                        MenuPaint();
   \   000001A2   ........           BL       MenuPaint
   9147                     }
   9148                     
   9149                     
   9150                    
   9151                
   9152                }
   \                     ??WiFiConecting_Refresh_10:
   \   000001A6   70BC               POP      {R4-R6}
   \   000001A8   01BC               POP      {R0}
   \   000001AA   0047               BX       R0               ;; return
   \                     ??WiFiConecting_Refresh_0:
   \   000001AC   ........           DC32     ??licz
   \   000001B0   ........           DC32     NET
   \   000001B4   ........           DC32     `?<Constant "Not connected">`
   \   000001B8   ........           DC32     `?<Constant "Not connected">` + 16
   \   000001BC   ........           DC32     `?<Constant "Not connected">` + 28
   \   000001C0   ........           DC32     `?<Constant "Not connected">` + 44
   \   000001C4   ........           DC32     `?<Constant "Not connected">` + 60
   \   000001C8   ........           DC32     `?<Constant "Not connected">` + 76
   \   000001CC   16D91300           DC32     0x13d916
   \   000001D0   07D91300           DC32     0x13d907
   \   000001D4   ........           DC32     TextToChangeLength

   \                                 In section .bss, align 1
   \                     ??licz:
   \   00000000                      DS8 1
   \   00000001                      DS8 1

   \                                 In section .data, align 8
   \                     TextToChangeLength:
   \   00000000   00                 DC8 0
   \                     TextToChangeMaxPixSize:
   \   00000001   00                 DC8 0
   \                     CurentChartModyfi:
   \   00000002   00                 DC8 0
   \                     NeuronNrChange:
   \   00000003   00                 DC8 0
   \                     CurrentSheet:
   \   00000004   00                 DC8 0
   \                     CurModifSheet:
   \   00000005   00                 DC8 0
   \                     NeuronsListLine:
   \   00000006   00                 DC8 0
   \                     SheetHistoryIndex:
   \   00000007   00                 DC8 0
   \                     ProgramChange:
   \   00000008   00                 DC8 0
   \                     TmpFlg:
   \   00000009   00                 DC8 0
   \                     DispWait:
   \   0000000A   00                 DC8 0
   \   0000000B   00                 DC8 0
   \   0000000C   00                 DC8 0
   \                     TimetableSet_Hour:
   \   0000000D   00                 DC8 0
   \                     TimetableSet_Minute:
   \   0000000E   00                 DC8 0
   \                     TimetableSet_Week:
   \   0000000F   00                 DC8 0
   \                     LaderLine:
   \   00000010   00                 DC8 0
   \                     LaderCol:
   \   00000011   00                 DC8 0
   \                     ChoseRow:
   \   00000012   00                 DC8 0
   \                     ChoseCol:
   \   00000013   00                 DC8 0
   \                     ProcGlobType_down:
   \   00000014   00                 DC8 0
   \                     OpenScreenSet:
   \   00000015   00                 DC8 0
   \                     MenuPaintExecute:
   \   00000016   00                 DC8 0
   \                     ZoneButtonClick:
   \   00000017   00                 DC8 0
   \                     ZoneGrapfNrClick:
   \   00000018   00                 DC8 0
   \                     ZoneValueNrClick:
   \   00000019   00                 DC8 0
   \                     ZoneLabelClick:
   \   0000001A   00                 DC8 0
   \                     TextChangeCharNr:
   \   0000001B   00                 DC8 0
   \                     TextChangePoz:
   \   0000001C   00                 DC8 0
   \                     AlfaType:
   \   0000001D   00                 DC8 0
   \                     OpisWezl:
   \   0000001E   00                 DC8 0
   9153          
   9154              
   9155                
   9156                
   9157                char WiFiReConnect=0;
   \                     WiFiReConnect:
   \   0000001F   00                 DC8 0
   \                     SheetHistory:
   \   00000020   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   00000034   0000               DC8 0, 0
   \   00000036   0000               DC8 0, 0
   \                     Touch_EventTime:
   \   00000038   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     WaitOnCheckNode:
   \   00000040   000000000000       DC32 0, 0
   \              0000        
   \                     MenuLevel:
   \   00000048   00000000           DC32 0
   \                     Rej_poz:
   \   0000004C   00000000           DC32 0
   \                     TextToChange:
   \   00000050   00000000           DC32 0H
   \                     ButtonToChange:
   \   00000054   00000000           DC32 0H
   \                     ValueChange:
   \   00000058   00000000           DC32 0H
   \                     NeuronIdChange:
   \   0000005C   00000000           DC32 0H
   \                     AnalogToChange:
   \   00000060   00000000           DC8 0, 0, 0, 0
   \   00000064   00000000           DC8 0, 0, 0, 0
   \   00000068   00000000           DC8 0, 0, 0, 0
   \                     TaskToChange:
   \   0000006C   00000000           DC8 0, 0, 0, 0
   \                     row_tmp:
   \   00000070   00000000           DC8 0, 0, 0, 0
   \                     TxtSpaceAvable:
   \   00000074   00000000           DC32 0
   \   00000078   00000000           DC8 0, 0, 0, 0
   \   char __data BateriaWyladowanaDuza[3][8]
   \                     BateriaWyladowanaDuza:
   \   0000007C   FC0407050507       DC8 252, 4, 7, 5, 5, 7, 4, 252, 255, 1, 226, 196, 136, 16, 32, 255, 7
   \              04FCFF01E2C4
   \              881020FF07  
   \   0000008D   040505050504       DC8 4, 5, 5, 5, 5, 4, 7
   \              07          
   \                     ekran_komunikacja:
   \   00000094   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 34, 2, 2, 2, 34, 28, 0, 0, 0, 0
   \              000000001C22
   \              020202221C00
   \              000000      
   \   000000A9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000C0   0000F808E8E8       DC8 0, 0, 248, 8, 232, 232, 232, 104, 104, 104, 104, 104, 104, 104, 104
   \              E86868686868
   \              686868      
   \   000000CF   68686868E8E8       DC8 104, 104, 104, 104, 232, 232, 232, 8, 248, 0, 0, 0, 0, 0, 0, 0, 0
   \              E808F8000000
   \              0000000000  
   \   000000E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000000F7   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 224, 248, 24, 6, 6, 6, 3, 3, 3, 3, 6, 6, 12
   \              0000E0F81806
   \              060603030303
   \              06060C      
   \   0000010C   3CF0C0000000       DC8 60, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 33
   \              000000000000
   \              000000000000
   \              1E21        
   \   00000120   212121211E00       DC8 33, 33, 33, 33, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   00000135   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 255, 255, 255, 192
   \              000000000000
   \              00FF00FFFFFF
   \              C0          
   \   00000148   C0C0C0C0C0C0       DC8 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 255, 255
   \              C0C0C0C0C0FF
   \              FF          
   \   00000155   FF00FF000000       DC8 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              000000      
   \   0000016A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
   \              000000000000
   \              000000000000
   \              000000C0    
   \   00000180   E03018000000       DC8 224, 48, 24, 0, 0, 0, 255, 255, 0, 0, 24, 24, 96, 224, 128, 0, 0, 0
   \              FFFF00001818
   \              60E080000000
   \   00000192   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 153, 153, 149, 147, 147
   \              000000000000
   \              919999959393
   \   000001A4   910000000000       DC8 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000001BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 2, 10, 18, 34, 66, 66, 130, 130, 2
   \              000003020202
   \              0A1222424282
   \              8202        
   \   000001CE   020202020202       DC8 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              020202030000
   \              000000000000
   \              0000000000  
   \   000001E5   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001FC   000000C3E170       DC8 0, 0, 0, 195, 225, 112, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48
   \              303030303030
   \              3030303030  
   \   0000020D   330300000000       DC8 51, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 76, 76
   \              000000000000
   \              0000000000C8
   \              4C4C        
   \   00000221   CA4949C80000       DC8 202, 73, 73, 200, 0, 0, 0, 4, 4, 4, 60, 68, 68, 60, 0, 0, 0, 0, 0
   \              000404043C44
   \              443C00000000
   \              00          
   \   00000234   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128
   \              000000000000
   \              000000000000
   \              000080      
   \   00000249   800000000101       DC8 128, 0, 0, 0, 1, 1, 1, 130, 194, 164, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0182C2A41800
   \              000000000000
   \              0000        
   \   0000025D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000274   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 14, 28, 24, 24, 24, 24, 24, 24
   \              000000000007
   \              0E1C18181818
   \              1818        
   \   00000288   181818181898       DC8 24, 24, 24, 24, 24, 152, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              800000000000
   \              000000000000
   \              0000        
   \   0000029C   0000C7202027       DC8 0, 0, 199, 32, 32, 39, 32, 32, 199, 0, 0, 0, 28, 34, 2, 2, 2, 34
   \              2020C7000000
   \              1C2202020222
   \   000002AE   1C0000000000       DC8 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   000002C4   000000FFFFFF       DC8 0, 0, 0, 255, 255, 255, 1, 2, 84, 168, 80, 33, 206, 14, 206, 67, 64
   \              010254A85021
   \              CE0ECE4340  
   \   000002D5   404040404040       DC8 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 192, 0
   \              404040404040
   \              404040C000  
   \   000002E6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000002FD   000060303018       DC8 0, 0, 96, 48, 48, 24, 24, 12, 12, 28, 28, 96, 96, 96, 96, 48, 63
   \              180C0C1C1C60
   \              606060303F  
   \   0000030E   0F0000000000       DC8 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 65, 66, 64, 64, 64
   \              000000000000
   \              000000004142
   \              404040      
   \   00000323   42F100000000       DC8 66, 241, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000339   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 62, 124
   \              000000000000
   \              0000FFFFFF3E
   \              7C          
   \   0000034C   55AA5500FF7E       DC8 85, 170, 85, 0, 255, 126, 255, 0, 255, 255, 255, 255, 255, 255, 255
   \              FF00FFFFFFFF
   \              FFFFFF      
   \   0000035B   FFFFFFFFFFFF       DC8 255, 255, 255, 255, 255, 255, 255, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0
   \              FFFF00FF0000
   \              0000000000  
   \   0000036C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 220
   \              000000000000
   \              000000000000
   \              00F8DC      
   \   00000381   8E0606060606       DC8 142, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 140, 252, 112, 0, 0, 0, 0, 0, 0
   \              06060606068C
   \              FC7000000000
   \              0000        
   \   00000395   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 8, 8, 248, 8, 8, 249, 0, 0, 0, 0, 0
   \              000000F80808
   \              F80808F90000
   \              000000      
   \   000003AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000003C1   000000000000       DC8 0, 0, 0, 0, 0, 0, 63, 127, 255, 192, 128, 81, 162, 85, 0, 255, 248
   \              3F7FFFC08051
   \              A25500FFF8  
   \   000003D2   FF00FFFFFFFF       DC8 255, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
   \              FFFFFFFFFFFF
   \              FFFF        
   \   000003E0   FFFFFF00FF00       DC8 255, 255, 255, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   \   000003F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 49, 51, 51, 51, 51, 51, 51, 51
   \              000000000030
   \              313333333333
   \              3333        
   \   00000408   333333333161       DC8 51, 51, 51, 51, 49, 97, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              C00000000000
   \              000000000000
   \              0000        
   \   0000041C   00001C244444       DC8 0, 0, 28, 36, 68, 68, 68, 36, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              44241C000000
   \              000000000000
   \              0000        
   \   00000430   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000447   000000010307       DC8 0, 0, 0, 1, 3, 7, 14, 29, 24, 31, 1, 31, 16, 23, 23, 23, 23, 23, 23
   \              0E1D181F011F
   \              101717171717
   \              17          
   \   0000045A   171717171717       DC8 23, 23, 23, 23, 23, 23, 23, 23, 23, 16, 31, 0, 0, 0, 0, 0, 0, 0, 0
   \              171717101F00
   \              000000000000
   \              00          
   \   0000046D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 108, 198
   \              000000000000
   \              000000000000
   \              386CC6      
   \   00000482   C6C6C6C6C6C6       DC8 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 195, 1, 0, 0
   \              C6C6C6C6C6C3
   \              010000      
   \   00000491   000000             DC8 0, 0, 0

   \                                 In section .data, align 4
   \                     ScrollMenu_poz:
   \   00000000   FFFFFFFF           DC32 -1

   \                                 In section .data, align 4
   \                     ScrollMenu_Paint_exist:
   \   00000000   FFFFFFFF           DC32 -1

   \                                 In section .data, align 1
   \                     SetupTimeCarPoz:
   \   00000000   01                 DC8 1
   \                     SleepModTime:
   \   00000001   00                 DC8 0

   \                                 In section .data, align 1
   \                     SetTimeCell:
   \   00000000   01                 DC8 1
   9158                

   \                                 In section Debug.txt, align 4, keep-with-next
   9159                void  Host_WiFi_Paint(void)
   9160                {
   \                     Host_WiFi_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   86A0               ADR      R0,??Host_WiFi_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   6C22               MOVS     R2,#+108
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   8348               LDR      R0,??Host_WiFi_Paint_0+0x4  ;; `?<Constant "Host">`
   9161                    
   9162                    List_Paint("Host",1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000001E   ........           BL       List_Paint
   \   00000022   0AB0               ADD      SP,SP,#+40
   9163          
   9164                    char pY=72;    //pozycja dolna
   9165                    Label(Speech[g_leng].Domena,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000024   824C               LDR      R4,??Host_WiFi_Paint_0+0x8  ;; 0xa14
   \   00000026   834D               LDR      R5,??Host_WiFi_Paint_0+0xC  ;; g_leng
   \   00000028   834E               LDR      R6,??Host_WiFi_Paint_0+0x10  ;; Speech
   \   0000002A   82B0               SUB      SP,SP,#+8
   \   0000002C   0120               MOVS     R0,#+1
   \   0000002E   0090               STR      R0,[SP, #+0]
   \   00000030   7F21               MOVS     R1,#+127
   \   00000032   03B4               PUSH     {R0,R1}
   \   00000034   3E21               MOVS     R1,#+62
   \   00000036   0F20               MOVS     R0,#+15
   \   00000038   03B4               PUSH     {R0,R1}
   \   0000003A   6123               MOVS     R3,#+97
   \   0000003C   0122               MOVS     R2,#+1
   \   0000003E   0021               MOVS     R1,#+0
   \   00000040   7E48               LDR      R0,??Host_WiFi_Paint_0+0x14  ;; 0x924
   \   00000042   2F68               LDR      R7,[R5, #+0]
   \   00000044   6743               MULS     R7,R4,R7
   \   00000046   F719               ADDS     R7,R6,R7
   \   00000048   3818               ADDS     R0,R7,R0
   \   0000004A   ........           BL       Label
   \   0000004E   06B0               ADD      SP,SP,#+24
   9166                    Label(".................................",0,2,pY+14,25,59,1,127,0);
   \   00000050   82B0               SUB      SP,SP,#+8
   \   00000052   0020               MOVS     R0,#+0
   \   00000054   0090               STR      R0,[SP, #+0]
   \   00000056   7F21               MOVS     R1,#+127
   \   00000058   0120               MOVS     R0,#+1
   \   0000005A   03B4               PUSH     {R0,R1}
   \   0000005C   3B21               MOVS     R1,#+59
   \   0000005E   1920               MOVS     R0,#+25
   \   00000060   03B4               PUSH     {R0,R1}
   \   00000062   5623               MOVS     R3,#+86
   \   00000064   0222               MOVS     R2,#+2
   \   00000066   0021               MOVS     R1,#+0
   \   00000068   7548               LDR      R0,??Host_WiFi_Paint_0+0x18  ;; `?<Constant "Host">` + 8
   \   0000006A   ........           BL       Label
   \   0000006E   06B0               ADD      SP,SP,#+24
   9167                    Label(NET.WiFi.Domena,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   00000070   744F               LDR      R7,??Host_WiFi_Paint_0+0x1C  ;; NET
   \   00000072   82B0               SUB      SP,SP,#+8
   \   00000074   0020               MOVS     R0,#+0
   \   00000076   0090               STR      R0,[SP, #+0]
   \   00000078   7F21               MOVS     R1,#+127
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   3B21               MOVS     R1,#+59
   \   00000080   0F20               MOVS     R0,#+15
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   5823               MOVS     R3,#+88
   \   00000086   0222               MOVS     R2,#+2
   \   00000088   0021               MOVS     R1,#+0
   \   0000008A   3800               MOVS     R0,R7
   \   0000008C   B530               ADDS     R0,R0,#+181
   \   0000008E   ........           BL       Label
   \   00000092   06B0               ADD      SP,SP,#+24
   9168                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000094   82B0               SUB      SP,SP,#+8
   \   00000096   0D20               MOVS     R0,#+13
   \   00000098   0090               STR      R0,[SP, #+0]
   \   0000009A   2223               MOVS     R3,#+34
   \   0000009C   4922               MOVS     R2,#+73
   \   0000009E   0F21               MOVS     R1,#+15
   \   000000A0   8C46               MOV      R12,R1
   \   000000A2   6949               LDR      R1,??Host_WiFi_Paint_0+0x20  ;; 0x906
   \   000000A4   2868               LDR      R0,[R5, #+0]
   \   000000A6   6043               MULS     R0,R4,R0
   \   000000A8   3018               ADDS     R0,R6,R0
   \   000000AA   4018               ADDS     R0,R0,R1
   \   000000AC   6146               MOV      R1,R12
   \   000000AE   ........           BL       Button
   \   000000B2   02B0               ADD      SP,SP,#+8
   9169                    
   9170                    pY=37;    
   9171                    Label(Speech[g_leng].Subdomena,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000000B4   82B0               SUB      SP,SP,#+8
   \   000000B6   0120               MOVS     R0,#+1
   \   000000B8   0090               STR      R0,[SP, #+0]
   \   000000BA   7F21               MOVS     R1,#+127
   \   000000BC   03B4               PUSH     {R0,R1}
   \   000000BE   3E21               MOVS     R1,#+62
   \   000000C0   0F20               MOVS     R0,#+15
   \   000000C2   03B4               PUSH     {R0,R1}
   \   000000C4   0B00               MOVS     R3,R1
   \   000000C6   0122               MOVS     R2,#+1
   \   000000C8   0021               MOVS     R1,#+0
   \   000000CA   8C46               MOV      R12,R1
   \   000000CC   5F49               LDR      R1,??Host_WiFi_Paint_0+0x24  ;; 0x933
   \   000000CE   2868               LDR      R0,[R5, #+0]
   \   000000D0   6043               MULS     R0,R4,R0
   \   000000D2   3018               ADDS     R0,R6,R0
   \   000000D4   4018               ADDS     R0,R0,R1
   \   000000D6   6146               MOV      R1,R12
   \   000000D8   ........           BL       Label
   \   000000DC   06B0               ADD      SP,SP,#+24
   9172                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   000000DE   82B0               SUB      SP,SP,#+8
   \   000000E0   0020               MOVS     R0,#+0
   \   000000E2   0090               STR      R0,[SP, #+0]
   \   000000E4   7F21               MOVS     R1,#+127
   \   000000E6   0120               MOVS     R0,#+1
   \   000000E8   03B4               PUSH     {R0,R1}
   \   000000EA   3B21               MOVS     R1,#+59
   \   000000EC   1920               MOVS     R0,#+25
   \   000000EE   03B4               PUSH     {R0,R1}
   \   000000F0   3323               MOVS     R3,#+51
   \   000000F2   0222               MOVS     R2,#+2
   \   000000F4   0021               MOVS     R1,#+0
   \   000000F6   5648               LDR      R0,??Host_WiFi_Paint_0+0x28  ;; `?<Constant "Host">` + 44
   \   000000F8   ........           BL       Label
   \   000000FC   06B0               ADD      SP,SP,#+24
   9173                    Label(NET.WiFi.Subdomena,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000000FE   82B0               SUB      SP,SP,#+8
   \   00000100   0020               MOVS     R0,#+0
   \   00000102   0090               STR      R0,[SP, #+0]
   \   00000104   7F21               MOVS     R1,#+127
   \   00000106   0120               MOVS     R0,#+1
   \   00000108   03B4               PUSH     {R0,R1}
   \   0000010A   3B21               MOVS     R1,#+59
   \   0000010C   0F20               MOVS     R0,#+15
   \   0000010E   03B4               PUSH     {R0,R1}
   \   00000110   3523               MOVS     R3,#+53
   \   00000112   0222               MOVS     R2,#+2
   \   00000114   0021               MOVS     R1,#+0
   \   00000116   3800               MOVS     R0,R7
   \   00000118   C430               ADDS     R0,R0,#+196
   \   0000011A   ........           BL       Label
   \   0000011E   06B0               ADD      SP,SP,#+24
   9174                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000120   82B0               SUB      SP,SP,#+8
   \   00000122   0D20               MOVS     R0,#+13
   \   00000124   0090               STR      R0,[SP, #+0]
   \   00000126   2223               MOVS     R3,#+34
   \   00000128   2622               MOVS     R2,#+38
   \   0000012A   0F21               MOVS     R1,#+15
   \   0000012C   8C46               MOV      R12,R1
   \   0000012E   4649               LDR      R1,??Host_WiFi_Paint_0+0x20  ;; 0x906
   \   00000130   2868               LDR      R0,[R5, #+0]
   \   00000132   6043               MULS     R0,R4,R0
   \   00000134   3018               ADDS     R0,R6,R0
   \   00000136   4018               ADDS     R0,R0,R1
   \   00000138   6146               MOV      R1,R12
   \   0000013A   ........           BL       Button
   \   0000013E   02B0               ADD      SP,SP,#+8
   9175                    
   9176                    pY=2;    
   9177                    Label(Speech[g_leng].Scezka,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000140   82B0               SUB      SP,SP,#+8
   \   00000142   0120               MOVS     R0,#+1
   \   00000144   0090               STR      R0,[SP, #+0]
   \   00000146   7F21               MOVS     R1,#+127
   \   00000148   03B4               PUSH     {R0,R1}
   \   0000014A   3E21               MOVS     R1,#+62
   \   0000014C   0F20               MOVS     R0,#+15
   \   0000014E   03B4               PUSH     {R0,R1}
   \   00000150   1B23               MOVS     R3,#+27
   \   00000152   0122               MOVS     R2,#+1
   \   00000154   0021               MOVS     R1,#+0
   \   00000156   8C46               MOV      R12,R1
   \   00000158   3E49               LDR      R1,??Host_WiFi_Paint_0+0x2C  ;; 0x942
   \   0000015A   2868               LDR      R0,[R5, #+0]
   \   0000015C   6043               MULS     R0,R4,R0
   \   0000015E   3018               ADDS     R0,R6,R0
   \   00000160   4018               ADDS     R0,R0,R1
   \   00000162   6146               MOV      R1,R12
   \   00000164   ........           BL       Label
   \   00000168   06B0               ADD      SP,SP,#+24
   9178                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   0000016A   82B0               SUB      SP,SP,#+8
   \   0000016C   0020               MOVS     R0,#+0
   \   0000016E   0090               STR      R0,[SP, #+0]
   \   00000170   7F21               MOVS     R1,#+127
   \   00000172   0120               MOVS     R0,#+1
   \   00000174   03B4               PUSH     {R0,R1}
   \   00000176   3B21               MOVS     R1,#+59
   \   00000178   1920               MOVS     R0,#+25
   \   0000017A   03B4               PUSH     {R0,R1}
   \   0000017C   1023               MOVS     R3,#+16
   \   0000017E   0222               MOVS     R2,#+2
   \   00000180   0021               MOVS     R1,#+0
   \   00000182   3348               LDR      R0,??Host_WiFi_Paint_0+0x28  ;; `?<Constant "Host">` + 44
   \   00000184   ........           BL       Label
   \   00000188   06B0               ADD      SP,SP,#+24
   9179                    Label(NET.WiFi.Path,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   0000018A   82B0               SUB      SP,SP,#+8
   \   0000018C   0020               MOVS     R0,#+0
   \   0000018E   0090               STR      R0,[SP, #+0]
   \   00000190   7F21               MOVS     R1,#+127
   \   00000192   0120               MOVS     R0,#+1
   \   00000194   03B4               PUSH     {R0,R1}
   \   00000196   3B21               MOVS     R1,#+59
   \   00000198   0F20               MOVS     R0,#+15
   \   0000019A   03B4               PUSH     {R0,R1}
   \   0000019C   1223               MOVS     R3,#+18
   \   0000019E   0222               MOVS     R2,#+2
   \   000001A0   0021               MOVS     R1,#+0
   \   000001A2   3800               MOVS     R0,R7
   \   000001A4   D330               ADDS     R0,R0,#+211
   \   000001A6   ........           BL       Label
   \   000001AA   06B0               ADD      SP,SP,#+24
   9180                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000001AC   82B0               SUB      SP,SP,#+8
   \   000001AE   0D20               MOVS     R0,#+13
   \   000001B0   0090               STR      R0,[SP, #+0]
   \   000001B2   2223               MOVS     R3,#+34
   \   000001B4   0322               MOVS     R2,#+3
   \   000001B6   0F21               MOVS     R1,#+15
   \   000001B8   2348               LDR      R0,??Host_WiFi_Paint_0+0x20  ;; 0x906
   \   000001BA   2D68               LDR      R5,[R5, #+0]
   \   000001BC   6543               MULS     R5,R4,R5
   \   000001BE   7419               ADDS     R4,R6,R5
   \   000001C0   2018               ADDS     R0,R4,R0
   \   000001C2   ........           BL       Button
   \   000001C6   02B0               ADD      SP,SP,#+8
   9181                    
   9182                    Button("?",36,112,11,13);
   \   000001C8   82B0               SUB      SP,SP,#+8
   \   000001CA   0D20               MOVS     R0,#+13
   \   000001CC   0090               STR      R0,[SP, #+0]
   \   000001CE   0B23               MOVS     R3,#+11
   \   000001D0   7022               MOVS     R2,#+112
   \   000001D2   2421               MOVS     R1,#+36
   \   000001D4   20A0               ADR      R0,??Host_WiFi_Paint_0+0x30  ;; 0x3F, 0x00, 0x00, 0x00
   \   000001D6   ........           BL       Button
   \   000001DA   02B0               ADD      SP,SP,#+8
   9183                    
   9184                    
   9185                    if (WiFiReConnect)
   \   000001DC   1F4A               LDR      R2,??Host_WiFi_Paint_0+0x34  ;; TextToChangeLength
   \   000001DE   D07F               LDRB     R0,[R2, #+31]
   \   000001E0   0028               CMP      R0,#+0
   \   000001E2   1DD0               BEQ      ??Host_WiFi_Paint_1
   9186                    {
   9187                      NET.Status.FreezTime=g_counter+FREEZ_TIME;
   \   000001E4   1E48               LDR      R0,??Host_WiFi_Paint_0+0x38  ;; g_counter
   \   000001E6   03C8               LDM      R0!,{R0,R1}
   \   000001E8   0023               MOVS     R3,#+0
   \   000001EA   3230               ADDS     R0,R0,#+50
   \   000001EC   5941               ADCS     R1,R1,R3
   \   000001EE   3864               STR      R0,[R7, #+64]
   \   000001F0   7964               STR      R1,[R7, #+68]
   9188                       NET.Status.HostLink=DISCONNECTED;
   \   000001F2   1800               MOVS     R0,R3
   9189                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   000001F4   3880               STRH     R0,[R7, #+0]
   9190                       for (char i=0; i<15; i++)NET.Status.DomenaIP[i]=0;
   \   000001F6   1C00               MOVS     R4,R3
   \   000001F8   04E0               B        ??Host_WiFi_Paint_2
   \                     ??Host_WiFi_Paint_3:
   \   000001FA   7918               ADDS     R1,R7,R1
   \   000001FC   4C71               STRB     R4,[R1, #+5]
   \   000001FE   401C               ADDS     R0,R0,#+1
   \   00000200   0006               LSLS     R0,R0,#+24
   \   00000202   000E               LSRS     R0,R0,#+24
   \                     ??Host_WiFi_Paint_2:
   \   00000204   0100               MOVS     R1,R0
   \   00000206   0F29               CMP      R1,#+15
   \   00000208   F7D3               BCC      ??Host_WiFi_Paint_3
   9191                       NET.Status.Timeout=0;
   \   0000020A   1800               MOVS     R0,R3
   \   0000020C   0100               MOVS     R1,R0
   \   0000020E   3C00               MOVS     R4,R7
   \   00000210   3834               ADDS     R4,R4,#+56
   \   00000212   03C4               STM      R4!,{R0,R1}
   9192                       NET.Status.HttpNextQueryTime=0;
   \   00000214   3C00               MOVS     R4,R7
   \   00000216   3034               ADDS     R4,R4,#+48
   \   00000218   03C4               STM      R4!,{R0,R1}
   9193                       NET.Status.FreezTime=0;    
   \   0000021A   4037               ADDS     R7,R7,#+64
   \   0000021C   03C7               STM      R7!,{R0,R1}
   9194                      
   9195                      WiFiReConnect=0;
   \   0000021E   D377               STRB     R3,[R2, #+31]
   9196                    }
   9197                    
   9198                    
   9199                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??Host_WiFi_Paint_1:
   \   00000220   F8BC               POP      {R3-R7}
   \   00000222   01BC               POP      {R0}
   \   00000224   0047               BX       R0               ;; return
   \   00000226   C046               Nop      
   \                     ??Host_WiFi_Paint_0:
   \   00000228   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   0000022C   ........           DC32     `?<Constant "Host">`
   \   00000230   140A0000           DC32     0xa14
   \   00000234   ........           DC32     g_leng
   \   00000238   ........           DC32     Speech
   \   0000023C   24090000           DC32     0x924
   \   00000240   ........           DC32     `?<Constant "Host">` + 8
   \   00000244   ........           DC32     NET
   \   00000248   06090000           DC32     0x906
   \   0000024C   33090000           DC32     0x933
   \   00000250   ........           DC32     `?<Constant "Host">` + 44
   \   00000254   42090000           DC32     0x942
   \   00000258   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   0000025C   ........           DC32     TextToChangeLength
   \   00000260   ........           DC32     g_counter
   9200          
   9201          
   9202             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9203                void  Host_WiFi_Event(void)
   9204                {
   \                     Host_WiFi_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9205                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   594C               LDR      R4,??Host_WiFi_Event_0  ;; Y_up
   \   00000004   594D               LDR      R5,??Host_WiFi_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   5748               LDR      R0,??Host_WiFi_Event_0+0x8  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   215E               LDRSH    R1,[R4, R0]
   \   0000001C   5548               LDR      R0,??Host_WiFi_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   21D5               BPL      ??Host_WiFi_Event_1
   9206                  {
   9207                    //zapis do flash
   9208                            unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0400               MOVS     R4,R0
   9209                            __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
   9210                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Domena)), (char*) (&(NET.WiFi.Domena)),15);
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   504D               LDR      R5,??Host_WiFi_Event_0+0x10  ;; NET
   \   00000038   0F22               MOVS     R2,#+15
   \   0000003A   2900               MOVS     R1,R5
   \   0000003C   B531               ADDS     R1,R1,#+181
   \   0000003E   4F48               LDR      R0,??Host_WiFi_Event_0+0x14  ;; 0x13d925
   \   00000040   ........           BL       FlashWrite
   9211                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Subdomena)), (char*) (&(NET.WiFi.Subdomena)), 15);
   \   00000044   0F22               MOVS     R2,#+15
   \   00000046   2900               MOVS     R1,R5
   \   00000048   C431               ADDS     R1,R1,#+196
   \   0000004A   4D48               LDR      R0,??Host_WiFi_Event_0+0x18  ;; 0x13d934
   \   0000004C   ........           BL       FlashWrite
   9212                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Path)), (char*) (&(NET.WiFi.Path)), 15);
   \   00000050   0F22               MOVS     R2,#+15
   \   00000052   D335               ADDS     R5,R5,#+211
   \   00000054   2900               MOVS     R1,R5
   \   00000056   4B48               LDR      R0,??Host_WiFi_Event_0+0x1C  ;; 0x13d943
   \   00000058   ........           BL       FlashWrite
   9213                            __set_interrupt_state(Save);
   \   0000005C   2000               MOVS     R0,R4
   \   0000005E   ........           BL       __iar_set_interrupt_state
   9214                     //koniec zapisu do flash
   9215                    
   9216                       
   9217                           
   9218                            
   9219                    MenuLevel=(MenuLevel/10);
   \   00000062   494F               LDR      R7,??Host_WiFi_Event_0+0x20  ;; TextToChangeLength
   \   00000064   B86C               LDR      R0,[R7, #+72]
   \   00000066   0A21               MOVS     R1,#+10
   \   00000068   ........           BL       __aeabi_idivmod
   \   0000006C   B864               STR      R0,[R7, #+72]
   \   0000006E   76E0               B        ??Host_WiFi_Event_2
   9220                    
   9221                     
   9222                    
   9223                  } 
   9224                   else if ((Y_down<112) || (Y_up<112))
   \                     ??Host_WiFi_Event_1:
   \   00000070   0020               MOVS     R0,#+0
   \   00000072   285E               LDRSH    R0,[R5, R0]
   \   00000074   7028               CMP      R0,#+112
   \   00000076   03DB               BLT      ??Host_WiFi_Event_3
   \   00000078   0020               MOVS     R0,#+0
   \   0000007A   205E               LDRSH    R0,[R4, R0]
   \   0000007C   7028               CMP      R0,#+112
   \   0000007E   6EDA               BGE      ??Host_WiFi_Event_2
   9225                  {
   9226                      char pY=72; 
   9227                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??Host_WiFi_Event_3:
   \   00000080   424C               LDR      R4,??Host_WiFi_Event_0+0x24  ;; 0xa14
   \   00000082   434D               LDR      R5,??Host_WiFi_Event_0+0x28  ;; g_leng
   \   00000084   434E               LDR      R6,??Host_WiFi_Event_0+0x2C  ;; Speech
   \   00000086   82B0               SUB      SP,SP,#+8
   \   00000088   0D20               MOVS     R0,#+13
   \   0000008A   0090               STR      R0,[SP, #+0]
   \   0000008C   2223               MOVS     R3,#+34
   \   0000008E   4922               MOVS     R2,#+73
   \   00000090   0F21               MOVS     R1,#+15
   \   00000092   4148               LDR      R0,??Host_WiFi_Event_0+0x30  ;; 0x906
   \   00000094   2F68               LDR      R7,[R5, #+0]
   \   00000096   6743               MULS     R7,R4,R7
   \   00000098   F719               ADDS     R7,R6,R7
   \   0000009A   3818               ADDS     R0,R7,R0
   \   0000009C   ........           BL       Button
   \   000000A0   02B0               ADD      SP,SP,#+8
   \   000000A2   0128               CMP      R0,#+1
   \   000000A4   0DD1               BNE      ??Host_WiFi_Event_4
   9228                      {
   9229                        TextToChange=NET.WiFi.Domena;
   \   000000A6   384F               LDR      R7,??Host_WiFi_Event_0+0x20  ;; TextToChangeLength
   \   000000A8   3C48               LDR      R0,??Host_WiFi_Event_0+0x34  ;; NET + 181
   \   000000AA   3865               STR      R0,[R7, #+80]
   9230                        TextToChangeLength=15;
   \   000000AC   0F20               MOVS     R0,#+15
   \   000000AE   3870               STRB     R0,[R7, #+0]
   9231                        TextToChangeMaxPixSize=100;
   \   000000B0   6420               MOVS     R0,#+100
   \   000000B2   7870               STRB     R0,[R7, #+1]
   9232                        MenuLevel=(MenuLevel*10+1);
   \   000000B4   B86C               LDR      R0,[R7, #+72]
   \   000000B6   0A21               MOVS     R1,#+10
   \   000000B8   4843               MULS     R0,R1,R0
   \   000000BA   401C               ADDS     R0,R0,#+1
   \   000000BC   B864               STR      R0,[R7, #+72]
   9233                        WiFiReConnect=1;
   \   000000BE   0120               MOVS     R0,#+1
   \   000000C0   F877               STRB     R0,[R7, #+31]
   9234                      }
   9235                      pY=37; 
   9236                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??Host_WiFi_Event_4:
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0D20               MOVS     R0,#+13
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   2223               MOVS     R3,#+34
   \   000000CA   2622               MOVS     R2,#+38
   \   000000CC   0F21               MOVS     R1,#+15
   \   000000CE   3248               LDR      R0,??Host_WiFi_Event_0+0x30  ;; 0x906
   \   000000D0   2F68               LDR      R7,[R5, #+0]
   \   000000D2   6743               MULS     R7,R4,R7
   \   000000D4   F719               ADDS     R7,R6,R7
   \   000000D6   3818               ADDS     R0,R7,R0
   \   000000D8   ........           BL       Button
   \   000000DC   02B0               ADD      SP,SP,#+8
   \   000000DE   0128               CMP      R0,#+1
   \   000000E0   0DD1               BNE      ??Host_WiFi_Event_5
   9237                      {
   9238                        TextToChange=NET.WiFi.Subdomena;
   \   000000E2   294F               LDR      R7,??Host_WiFi_Event_0+0x20  ;; TextToChangeLength
   \   000000E4   2E48               LDR      R0,??Host_WiFi_Event_0+0x38  ;; NET + 196
   \   000000E6   3865               STR      R0,[R7, #+80]
   9239                        TextToChangeLength=15;
   \   000000E8   0F20               MOVS     R0,#+15
   \   000000EA   3870               STRB     R0,[R7, #+0]
   9240                        TextToChangeMaxPixSize=100;
   \   000000EC   6420               MOVS     R0,#+100
   \   000000EE   7870               STRB     R0,[R7, #+1]
   9241                        MenuLevel=(MenuLevel*10+1);
   \   000000F0   B86C               LDR      R0,[R7, #+72]
   \   000000F2   0A21               MOVS     R1,#+10
   \   000000F4   4843               MULS     R0,R1,R0
   \   000000F6   401C               ADDS     R0,R0,#+1
   \   000000F8   B864               STR      R0,[R7, #+72]
   9242                        WiFiReConnect=1;
   \   000000FA   0120               MOVS     R0,#+1
   \   000000FC   F877               STRB     R0,[R7, #+31]
   9243                      }
   9244                      pY=2; 
   9245                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??Host_WiFi_Event_5:
   \   000000FE   82B0               SUB      SP,SP,#+8
   \   00000100   0D20               MOVS     R0,#+13
   \   00000102   0090               STR      R0,[SP, #+0]
   \   00000104   2223               MOVS     R3,#+34
   \   00000106   0322               MOVS     R2,#+3
   \   00000108   0F21               MOVS     R1,#+15
   \   0000010A   2348               LDR      R0,??Host_WiFi_Event_0+0x30  ;; 0x906
   \   0000010C   2F68               LDR      R7,[R5, #+0]
   \   0000010E   6743               MULS     R7,R4,R7
   \   00000110   F419               ADDS     R4,R6,R7
   \   00000112   2018               ADDS     R0,R4,R0
   \   00000114   ........           BL       Button
   \   00000118   02B0               ADD      SP,SP,#+8
   \   0000011A   0128               CMP      R0,#+1
   \   0000011C   0DD1               BNE      ??Host_WiFi_Event_6
   9246                      {
   9247                        TextToChange=NET.WiFi.Path;
   \   0000011E   1A4F               LDR      R7,??Host_WiFi_Event_0+0x20  ;; TextToChangeLength
   \   00000120   2048               LDR      R0,??Host_WiFi_Event_0+0x3C  ;; NET + 211
   \   00000122   3865               STR      R0,[R7, #+80]
   9248                        TextToChangeLength=15;
   \   00000124   0F20               MOVS     R0,#+15
   \   00000126   3870               STRB     R0,[R7, #+0]
   9249                        TextToChangeMaxPixSize=100;
   \   00000128   6420               MOVS     R0,#+100
   \   0000012A   7870               STRB     R0,[R7, #+1]
   9250                        MenuLevel=(MenuLevel*10+1);
   \   0000012C   B86C               LDR      R0,[R7, #+72]
   \   0000012E   0A21               MOVS     R1,#+10
   \   00000130   4843               MULS     R0,R1,R0
   \   00000132   401C               ADDS     R0,R0,#+1
   \   00000134   B864               STR      R0,[R7, #+72]
   9251                        WiFiReConnect=1;
   \   00000136   0120               MOVS     R0,#+1
   \   00000138   F877               STRB     R0,[R7, #+31]
   9252                        
   9253                      }
   9254                      
   9255                      
   9256                      
   9257                      
   9258                      if (Button("?",36,112,11,13)==1) 
   \                     ??Host_WiFi_Event_6:
   \   0000013A   82B0               SUB      SP,SP,#+8
   \   0000013C   0D20               MOVS     R0,#+13
   \   0000013E   0090               STR      R0,[SP, #+0]
   \   00000140   0B23               MOVS     R3,#+11
   \   00000142   7022               MOVS     R2,#+112
   \   00000144   2421               MOVS     R1,#+36
   \   00000146   18A0               ADR      R0,??Host_WiFi_Event_0+0x40  ;; 0x3F, 0x00, 0x00, 0x00
   \   00000148   ........           BL       Button
   \   0000014C   02B0               ADD      SP,SP,#+8
   \   0000014E   0128               CMP      R0,#+1
   \   00000150   05D1               BNE      ??Host_WiFi_Event_2
   9259                       {
   9260                         if (g_leng==0)
   \   00000152   2868               LDR      R0,[R5, #+0]
   \   00000154   0028               CMP      R0,#+0
   \   00000156   02D1               BNE      ??Host_WiFi_Event_2
   9261                         {
   9262                           MESSAGE(Komentarz1_PL); 
   \   00000158   1448               LDR      R0,??Host_WiFi_Event_0+0x44  ;; `?<Constant "Przyklad:\\n   a.bbb.pl...">`
   \   0000015A   ........           BL       MESSAGE
   9263                         }else{
   9264                          // MESSAGE(Komentarz1_En); 
   9265                         }
   9266                       }
   9267                      
   9268                    
   9269                  }
   9270                   MenuPaint();
   \                     ??Host_WiFi_Event_2:
   \   0000015E   ........           BL       MenuPaint
   9271                    
   9272                
   9273                }//_______________________________________________________________________
   \   00000162   F8BC               POP      {R3-R7}
   \   00000164   01BC               POP      {R0}
   \   00000166   0047               BX       R0               ;; return
   \                     ??Host_WiFi_Event_0:
   \   00000168   ........           DC32     Y_up
   \   0000016C   ........           DC32     Y_down
   \   00000170   ........           DC32     X_down
   \   00000174   ........           DC32     X_up
   \   00000178   ........           DC32     NET
   \   0000017C   25D91300           DC32     0x13d925
   \   00000180   34D91300           DC32     0x13d934
   \   00000184   43D91300           DC32     0x13d943
   \   00000188   ........           DC32     TextToChangeLength
   \   0000018C   140A0000           DC32     0xa14
   \   00000190   ........           DC32     g_leng
   \   00000194   ........           DC32     Speech
   \   00000198   06090000           DC32     0x906
   \   0000019C   ........           DC32     NET + 181
   \   000001A0   ........           DC32     NET + 196
   \   000001A4   ........           DC32     NET + 211
   \   000001A8   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   000001AC   ........           DC32     `?<Constant "Przyklad:\\n   a.bbb.pl...">`
   9274              
   9275               
   9276                
   9277                
   9278           
   9279                                                   
   9280          
   9281                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9282                void NetPeriodicity_Paint(void)
   9283                {
   \                     NetPeriodicity_Paint:
   \   00000000   37B5               PUSH     {R0-R2,R4,R5,LR}
   9284            
   9285                      List_Paint(Speech[g_leng].Okresowosc,1,65,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   03B4               PUSH     {R0,R1}
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   34A0               ADR      R0,??NetPeriodicity_Paint_0  ;; 0x20, 0x00, 0x00, 0x00
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0020               MOVS     R0,#+0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   0300               MOVS     R3,R0
   \   00000018   4122               MOVS     R2,#+65
   \   0000001A   0121               MOVS     R1,#+1
   \   0000001C   3148               LDR      R0,??NetPeriodicity_Paint_0+0x4  ;; 0x96f
   \   0000001E   324C               LDR      R4,??NetPeriodicity_Paint_0+0x8  ;; g_leng
   \   00000020   2468               LDR      R4,[R4, #+0]
   \   00000022   324D               LDR      R5,??NetPeriodicity_Paint_0+0xC  ;; 0xa14
   \   00000024   6C43               MULS     R4,R5,R4
   \   00000026   324D               LDR      R5,??NetPeriodicity_Paint_0+0x10  ;; Speech
   \   00000028   2C19               ADDS     R4,R5,R4
   \   0000002A   2018               ADDS     R0,R4,R0
   \   0000002C   ........           BL       List_Paint
   \   00000030   0AB0               ADD      SP,SP,#+40
   9286                      
   9287                      char txt[9];
   9288                      char liter=sprintf(txt, "%d", NET.WiFi.HttpQueryPeriod*100);
                                        ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   00000032   E620               MOVS     R0,#+230
   \   00000034   2F49               LDR      R1,??NetPeriodicity_Paint_0+0x14  ;; NET
   \   00000036   0A5E               LDRSH    R2,[R1, R0]
   \   00000038   6420               MOVS     R0,#+100
   \   0000003A   4243               MULS     R2,R0,R2
   \   0000003C   2EA1               ADR      R1,??NetPeriodicity_Paint_0+0x18  ;; 0x25, 0x64, 0x00, 0x00
   \   0000003E   6846               MOV      R0,SP
   \   00000040   ........           BL       sprintf
   \   00000044   0200               MOVS     R2,R0
   \   00000046   1206               LSLS     R2,R2,#+24
   \   00000048   120E               LSRS     R2,R2,#+24
   9289                      txt[liter++]=' ';
   \   0000004A   6C46               MOV      R4,SP
   \   0000004C   1000               MOVS     R0,R2
   \   0000004E   2021               MOVS     R1,#+32
   \   00000050   2154               STRB     R1,[R4, R0]
   \   00000052   521C               ADDS     R2,R2,#+1
   \   00000054   1206               LSLS     R2,R2,#+24
   \   00000056   120E               LSRS     R2,R2,#+24
   9290                      txt[liter++]='m';
   \   00000058   1000               MOVS     R0,R2
   \   0000005A   6D21               MOVS     R1,#+109
   \   0000005C   2154               STRB     R1,[R4, R0]
   \   0000005E   521C               ADDS     R2,R2,#+1
   \   00000060   1206               LSLS     R2,R2,#+24
   \   00000062   120E               LSRS     R2,R2,#+24
   9291                      txt[liter++]='s';
   \   00000064   1000               MOVS     R0,R2
   \   00000066   7321               MOVS     R1,#+115
   \   00000068   2154               STRB     R1,[R4, R0]
   9292                      Label(txt,0,13,92,liter,40,1,127,0);   //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, negatyw) 
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   0020               MOVS     R0,#+0
   \   0000006E   0090               STR      R0,[SP, #+0]
   \   00000070   7F21               MOVS     R1,#+127
   \   00000072   0120               MOVS     R0,#+1
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   2821               MOVS     R1,#+40
   \   00000078   521C               ADDS     R2,R2,#+1
   \   0000007A   1000               MOVS     R0,R2
   \   0000007C   0006               LSLS     R0,R0,#+24
   \   0000007E   000E               LSRS     R0,R0,#+24
   \   00000080   03B4               PUSH     {R0,R1}
   \   00000082   5C23               MOVS     R3,#+92
   \   00000084   0D22               MOVS     R2,#+13
   \   00000086   0021               MOVS     R1,#+0
   \   00000088   06A8               ADD      R0,SP,#+24
   \   0000008A   ........           BL       Label
   \   0000008E   06B0               ADD      SP,SP,#+24
   9293                          
   9294                      
   9295                      txt[1]=0;
   \   00000090   0020               MOVS     R0,#+0
   \   00000092   6070               STRB     R0,[R4, #+1]
   9296                      txt[0]=31;
   \   00000094   1F20               MOVS     R0,#+31
   \   00000096   2070               STRB     R0,[R4, #+0]
   9297                      Button(txt,12,68,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   1220               MOVS     R0,#+18
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   1423               MOVS     R3,#+20
   \   000000A0   4422               MOVS     R2,#+68
   \   000000A2   0C21               MOVS     R1,#+12
   \   000000A4   02A8               ADD      R0,SP,#+8
   \   000000A6   ........           BL       Button
   \   000000AA   02B0               ADD      SP,SP,#+8
   9298                      txt[0]=30;
   \   000000AC   1E20               MOVS     R0,#+30
   \   000000AE   2070               STRB     R0,[R4, #+0]
   9299                      Button(txt,32,68,20,18); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   000000B0   82B0               SUB      SP,SP,#+8
   \   000000B2   1220               MOVS     R0,#+18
   \   000000B4   0090               STR      R0,[SP, #+0]
   \   000000B6   1423               MOVS     R3,#+20
   \   000000B8   4422               MOVS     R2,#+68
   \   000000BA   2021               MOVS     R1,#+32
   \   000000BC   02A8               ADD      R0,SP,#+8
   \   000000BE   ........           BL       Button
   \   000000C2   02B0               ADD      SP,SP,#+8
   9300                      
   9301                      Button("?",50,90,11,13);
   \   000000C4   82B0               SUB      SP,SP,#+8
   \   000000C6   0D20               MOVS     R0,#+13
   \   000000C8   0090               STR      R0,[SP, #+0]
   \   000000CA   0B23               MOVS     R3,#+11
   \   000000CC   5A22               MOVS     R2,#+90
   \   000000CE   3221               MOVS     R1,#+50
   \   000000D0   0AA0               ADR      R0,??NetPeriodicity_Paint_0+0x1C  ;; 0x3F, 0x00, 0x00, 0x00
   \   000000D2   ........           BL       Button
   \   000000D6   02B0               ADD      SP,SP,#+8
   9302                      
   9303                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \   000000D8   3EBC               POP      {R1-R5}
   \   000000DA   01BC               POP      {R0}
   \   000000DC   0047               BX       R0               ;; return
   \   000000DE   C046               Nop      
   \                     ??NetPeriodicity_Paint_0:
   \   000000E0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000E4   6F090000           DC32     0x96f
   \   000000E8   ........           DC32     g_leng
   \   000000EC   140A0000           DC32     0xa14
   \   000000F0   ........           DC32     Speech
   \   000000F4   ........           DC32     NET
   \   000000F8   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000000FC   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   9304           
   9305                
   9306                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9307                void NetPeriodicity_Event(void)
   9308                {
   \                     NetPeriodicity_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9309                  
   9310                       int ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0800               MOVS     R0,R1
   \   00000006   03B4               PUSH     {R0,R1}
   \   00000008   0F21               MOVS     R1,#+15
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   3E48               LDR      R0,??NetPeriodicity_Event_0  ;; Y_down
   \   0000000E   0021               MOVS     R1,#+0
   \   00000010   435E               LDRSH    R3,[R0, R1]
   \   00000012   3E48               LDR      R0,??NetPeriodicity_Event_0+0x4  ;; X_down
   \   00000014   425E               LDRSH    R2,[R0, R1]
   \   00000016   3E48               LDR      R0,??NetPeriodicity_Event_0+0x8  ;; Y_up
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   3E48               LDR      R0,??NetPeriodicity_Event_0+0xC  ;; X_up
   \   0000001C   0024               MOVS     R4,#+0
   \   0000001E   005F               LDRSH    R0,[R0, R4]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   \   00000026   0400               MOVS     R4,R0
   9311                        
   9312                      char bt=0; 
   \   00000028   0025               MOVS     R5,#+0
   \   0000002A   2E00               MOVS     R6,R5
   9313                      
   9314                      char LabelButt[2];  
   9315                      LabelButt[1]=0;
   \   0000002C   6F46               MOV      R7,SP
   \   0000002E   2800               MOVS     R0,R5
   \   00000030   7870               STRB     R0,[R7, #+1]
   9316                      LabelButt[0]=31;
   \   00000032   1F20               MOVS     R0,#+31
   \   00000034   3870               STRB     R0,[R7, #+0]
   9317                      if (Button(LabelButt,12,68,20,18)==1) bt=1; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000036   82B0               SUB      SP,SP,#+8
   \   00000038   1220               MOVS     R0,#+18
   \   0000003A   0090               STR      R0,[SP, #+0]
   \   0000003C   1423               MOVS     R3,#+20
   \   0000003E   4422               MOVS     R2,#+68
   \   00000040   0C21               MOVS     R1,#+12
   \   00000042   02A8               ADD      R0,SP,#+8
   \   00000044   ........           BL       Button
   \   00000048   02B0               ADD      SP,SP,#+8
   \   0000004A   0128               CMP      R0,#+1
   \   0000004C   00D1               BNE      ??NetPeriodicity_Event_1
   \   0000004E   0126               MOVS     R6,#+1
   9318                      LabelButt[0]=30;
   \                     ??NetPeriodicity_Event_1:
   \   00000050   1E20               MOVS     R0,#+30
   \   00000052   3870               STRB     R0,[R7, #+0]
   9319                      if (Button(LabelButt,32,68,20,18)==1) bt=2; //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000054   82B0               SUB      SP,SP,#+8
   \   00000056   1220               MOVS     R0,#+18
   \   00000058   0090               STR      R0,[SP, #+0]
   \   0000005A   1423               MOVS     R3,#+20
   \   0000005C   4422               MOVS     R2,#+68
   \   0000005E   2021               MOVS     R1,#+32
   \   00000060   02A8               ADD      R0,SP,#+8
   \   00000062   ........           BL       Button
   \   00000066   02B0               ADD      SP,SP,#+8
   \   00000068   0128               CMP      R0,#+1
   \   0000006A   00D1               BNE      ??NetPeriodicity_Event_2
   \   0000006C   0226               MOVS     R6,#+2
   9320                        
   9321                        
   9322                      if ((bt==1) && (NET.WiFi.HttpQueryPeriod>3)) NET.WiFi.HttpQueryPeriod--;
   \                     ??NetPeriodicity_Event_2:
   \   0000006E   3000               MOVS     R0,R6
   \   00000070   0128               CMP      R0,#+1
   \   00000072   06D1               BNE      ??NetPeriodicity_Event_3
   \   00000074   2848               LDR      R0,??NetPeriodicity_Event_0+0x10  ;; NET + 230
   \   00000076   0021               MOVS     R1,#+0
   \   00000078   415E               LDRSH    R1,[R0, R1]
   \   0000007A   0429               CMP      R1,#+4
   \   0000007C   01DB               BLT      ??NetPeriodicity_Event_3
   \   0000007E   491E               SUBS     R1,R1,#+1
   \   00000080   0180               STRH     R1,[R0, #+0]
   9323                      if ((bt==2) && (NET.WiFi.HttpQueryPeriod<51)) NET.WiFi.HttpQueryPeriod++;
   \                     ??NetPeriodicity_Event_3:
   \   00000082   3000               MOVS     R0,R6
   \   00000084   0228               CMP      R0,#+2
   \   00000086   06D1               BNE      ??NetPeriodicity_Event_4
   \   00000088   2348               LDR      R0,??NetPeriodicity_Event_0+0x10  ;; NET + 230
   \   0000008A   0021               MOVS     R1,#+0
   \   0000008C   415E               LDRSH    R1,[R0, R1]
   \   0000008E   3329               CMP      R1,#+51
   \   00000090   01DA               BGE      ??NetPeriodicity_Event_4
   \   00000092   491C               ADDS     R1,R1,#+1
   \   00000094   0180               STRH     R1,[R0, #+0]
   9324                      
   9325                       if (bt>0)
   \                     ??NetPeriodicity_Event_4:
   \   00000096   002E               CMP      R6,#+0
   \   00000098   01D0               BEQ      ??NetPeriodicity_Event_5
   9326                       {
   9327                           
   9328                         MenuPaint();
   \   0000009A   ........           BL       MenuPaint
   9329                       }
   9330                       
   9331                       if (Button("?",50,90,11,13)==1) 
   \                     ??NetPeriodicity_Event_5:
   \   0000009E   82B0               SUB      SP,SP,#+8
   \   000000A0   0D20               MOVS     R0,#+13
   \   000000A2   0090               STR      R0,[SP, #+0]
   \   000000A4   0B23               MOVS     R3,#+11
   \   000000A6   5A22               MOVS     R2,#+90
   \   000000A8   3221               MOVS     R1,#+50
   \   000000AA   1CA0               ADR      R0,??NetPeriodicity_Event_0+0x14  ;; 0x3F, 0x00, 0x00, 0x00
   \   000000AC   ........           BL       Button
   \   000000B0   02B0               ADD      SP,SP,#+8
   \   000000B2   0128               CMP      R0,#+1
   \   000000B4   0AD1               BNE      ??NetPeriodicity_Event_6
   9332                       {
   9333                         if (g_leng==0)
   \   000000B6   1A48               LDR      R0,??NetPeriodicity_Event_0+0x18  ;; g_leng
   \   000000B8   0068               LDR      R0,[R0, #+0]
   \   000000BA   0028               CMP      R0,#+0
   \   000000BC   03D1               BNE      ??NetPeriodicity_Event_7
   9334                         {
   9335                           MESSAGE(Komentarz0_PL); 
   \   000000BE   1948               LDR      R0,??NetPeriodicity_Event_0+0x1C  ;; `?<Constant "Ustaw okresowosc pola...">`
   \   000000C0   ........           BL       MESSAGE
   \   000000C4   02E0               B        ??NetPeriodicity_Event_6
   9336                         }else{
   9337                           MESSAGE(Komentarz0_En); 
   \                     ??NetPeriodicity_Event_7:
   \   000000C6   1848               LDR      R0,??NetPeriodicity_Event_0+0x20  ;; `?<Constant "Ustaw okresowosc pola...">` + 40
   \   000000C8   ........           BL       MESSAGE
   9338                         }
   9339                       }
   9340                       
   9341                      if (ans<0) {
   \                     ??NetPeriodicity_Event_6:
   \   000000CC   002C               CMP      R4,#+0
   \   000000CE   17D5               BPL      ??NetPeriodicity_Event_8
   9342                              //zapis do flash
   9343                              unsigned int Save = __get_interrupt_state();                            
   \   000000D0   ........           BL       __iar_get_interrupt_state
   \   000000D4   0400               MOVS     R4,R0
   9344                              __disable_interrupt();
   \   000000D6   ........           BL       __iar_disable_interrupt
   9345                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.HttpQueryPeriod)), (char*) (&(NET.WiFi.HttpQueryPeriod)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   000000DA   0122               MOVS     R2,#+1
   \   000000DC   0E49               LDR      R1,??NetPeriodicity_Event_0+0x10  ;; NET + 230
   \   000000DE   1348               LDR      R0,??NetPeriodicity_Event_0+0x24  ;; 0x13d956
   \   000000E0   ........           BL       FlashWrite
   9346                              __set_interrupt_state(Save);
   \   000000E4   2000               MOVS     R0,R4
   \   000000E6   ........           BL       __iar_set_interrupt_state
   9347                              __enable_interrupt();
   \   000000EA   ........           BL       __iar_enable_interrupt
   9348                              //koniec zapisu do flash
   9349                              
   9350                              MenuLevel=(MenuLevel/10);
   \   000000EE   104C               LDR      R4,??NetPeriodicity_Event_0+0x28  ;; TextToChangeLength
   \   000000F0   A06C               LDR      R0,[R4, #+72]
   \   000000F2   0A21               MOVS     R1,#+10
   \   000000F4   ........           BL       __aeabi_idivmod
   \   000000F8   A064               STR      R0,[R4, #+72]
   9351                              CurModifSheet=0; 
   \   000000FA   6571               STRB     R5,[R4, #+5]
   9352                              MenuPaint();
   \   000000FC   ........           BL       MenuPaint
   9353                            }
   9354                     
   9355                }//_______________________________________________________________________
   \                     ??NetPeriodicity_Event_8:
   \   00000100   F8BC               POP      {R3-R7}
   \   00000102   01BC               POP      {R0}
   \   00000104   0047               BX       R0               ;; return
   \   00000106   C046               Nop      
   \                     ??NetPeriodicity_Event_0:
   \   00000108   ........           DC32     Y_down
   \   0000010C   ........           DC32     X_down
   \   00000110   ........           DC32     Y_up
   \   00000114   ........           DC32     X_up
   \   00000118   ........           DC32     NET + 230
   \   0000011C   3F000000           DC8      0x3F, 0x00, 0x00, 0x00
   \   00000120   ........           DC32     g_leng
   \   00000124   ........           DC32     `?<Constant "Ustaw okresowosc pola...">`
   \   00000128   ........           DC32     `?<Constant "Ustaw okresowosc pola...">` + 40
   \   0000012C   56D91300           DC32     0x13d956
   \   00000130   ........           DC32     TextToChangeLength
   9356                
   9357                
   9358                
   9359              //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9360                void IpTCP_Paint(void)
   9361                {
   \                     IpTCP_Paint:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   9362                   if (NET.WiFi.IpNotAuto==1)
   \   00000002   2348               LDR      R0,??IpTCP_Paint_0  ;; NET + 73
   \   00000004   0078               LDRB     R0,[R0, #+0]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   1CD1               BNE      ??IpTCP_Paint_1
   9363                   {
   9364                      List_Paint(Speech[g_leng].Siec,2,15,0,0,3, "Auto IP -on", "IP config" , 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000000A   224A               LDR      R2,??IpTCP_Paint_0+0x4  ;; `?<Constant "Auto IP -on">`
   \   0000000C   82B0               SUB      SP,SP,#+8
   \   0000000E   0020               MOVS     R0,#+0
   \   00000010   0090               STR      R0,[SP, #+0]
   \   00000012   0100               MOVS     R1,R0
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   1100               MOVS     R1,R2
   \   0000001A   0C31               ADDS     R1,R1,#+12
   \   0000001C   1000               MOVS     R0,R2
   \   0000001E   03B4               PUSH     {R0,R1}
   \   00000020   0321               MOVS     R1,#+3
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   03B4               PUSH     {R0,R1}
   \   00000026   0300               MOVS     R3,R0
   \   00000028   0F22               MOVS     R2,#+15
   \   0000002A   0221               MOVS     R1,#+2
   \   0000002C   1A48               LDR      R0,??IpTCP_Paint_0+0x8  ;; 0x8bb
   \   0000002E   1B4C               LDR      R4,??IpTCP_Paint_0+0xC  ;; g_leng
   \   00000030   2468               LDR      R4,[R4, #+0]
   \   00000032   1B4D               LDR      R5,??IpTCP_Paint_0+0x10  ;; 0xa14
   \   00000034   6C43               MULS     R4,R5,R4
   \   00000036   1B4D               LDR      R5,??IpTCP_Paint_0+0x14  ;; Speech
   \   00000038   2C19               ADDS     R4,R5,R4
   \   0000003A   2018               ADDS     R0,R4,R0
   \   0000003C   ........           BL       List_Paint
   \   00000040   0AB0               ADD      SP,SP,#+40
   \   00000042   21E0               B        ??IpTCP_Paint_2
   9365                   }else{
   9366                      List_Paint(Speech[g_leng].Siec,1,60,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \                     ??IpTCP_Paint_1:
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   0800               MOVS     R0,R1
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   03B4               PUSH     {R0,R1}
   \   0000004C   03B4               PUSH     {R0,R1}
   \   0000004E   16A0               ADR      R0,??IpTCP_Paint_0+0x18  ;; 0x20, 0x00, 0x00, 0x00
   \   00000050   03B4               PUSH     {R0,R1}
   \   00000052   0321               MOVS     R1,#+3
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   03B4               PUSH     {R0,R1}
   \   00000058   0300               MOVS     R3,R0
   \   0000005A   3C22               MOVS     R2,#+60
   \   0000005C   0121               MOVS     R1,#+1
   \   0000005E   0E48               LDR      R0,??IpTCP_Paint_0+0x8  ;; 0x8bb
   \   00000060   0E4C               LDR      R4,??IpTCP_Paint_0+0xC  ;; g_leng
   \   00000062   2468               LDR      R4,[R4, #+0]
   \   00000064   0E4D               LDR      R5,??IpTCP_Paint_0+0x10  ;; 0xa14
   \   00000066   6C43               MULS     R4,R5,R4
   \   00000068   0E4D               LDR      R5,??IpTCP_Paint_0+0x14  ;; Speech
   \   0000006A   2C19               ADDS     R4,R5,R4
   \   0000006C   2018               ADDS     R0,R4,R0
   \   0000006E   ........           BL       List_Paint
   \   00000072   0AB0               ADD      SP,SP,#+40
   9367                      Button("Auto IP -off",2,75,60,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000074   82B0               SUB      SP,SP,#+8
   \   00000076   0D20               MOVS     R0,#+13
   \   00000078   0090               STR      R0,[SP, #+0]
   \   0000007A   3C23               MOVS     R3,#+60
   \   0000007C   4B22               MOVS     R2,#+75
   \   0000007E   0221               MOVS     R1,#+2
   \   00000080   0A48               LDR      R0,??IpTCP_Paint_0+0x1C  ;; `?<Constant "Auto IP -on">` + 24
   \   00000082   ........           BL       Button
   \   00000086   02B0               ADD      SP,SP,#+8
   9368                   }
   9369                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??IpTCP_Paint_2:
   \   00000088   38BC               POP      {R3-R5}
   \   0000008A   01BC               POP      {R0}
   \   0000008C   0047               BX       R0               ;; return
   \   0000008E   C046               Nop      
   \                     ??IpTCP_Paint_0:
   \   00000090   ........           DC32     NET + 73
   \   00000094   ........           DC32     `?<Constant "Auto IP -on">`
   \   00000098   BB080000           DC32     0x8bb
   \   0000009C   ........           DC32     g_leng
   \   000000A0   140A0000           DC32     0xa14
   \   000000A4   ........           DC32     Speech
   \   000000A8   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000000AC   ........           DC32     `?<Constant "Auto IP -on">` + 24
   9370          
   9371          
   9372                  
   9373                 
   9374                 
   9375                //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9376                void IpTCP_Event(void)
   9377                {
   \                     IpTCP_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9378                  if (NET.WiFi.IpNotAuto==1)
   \   00000002   4948               LDR      R0,??IpTCP_Event_0  ;; X_up
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   455E               LDRSH    R5,[R0, R1]
   \   00000008   4848               LDR      R0,??IpTCP_Event_0+0x4  ;; Y_up
   \   0000000A   465E               LDRSH    R6,[R0, R1]
   \   0000000C   4848               LDR      R0,??IpTCP_Event_0+0x8  ;; X_down
   \   0000000E   425E               LDRSH    R2,[R0, R1]
   \   00000010   4848               LDR      R0,??IpTCP_Event_0+0xC  ;; Y_down
   \   00000012   435E               LDRSH    R3,[R0, R1]
   \   00000014   484C               LDR      R4,??IpTCP_Event_0+0x10  ;; NET
   \   00000016   4920               MOVS     R0,#+73
   \   00000018   205C               LDRB     R0,[R4, R0]
   \   0000001A   0128               CMP      R0,#+1
   \   0000001C   41D1               BNE      ??IpTCP_Event_1
   9379                   {
   9380                        int ans=List_Event(X_up, Y_up, X_down, Y_down, 2 , 15, 0,0); //(char X_up, char Y_up, char X_down, char Y_down, char Rows, char RowWith, char FormStyle, char Y)
   \   0000001E   0800               MOVS     R0,R1
   \   00000020   03B4               PUSH     {R0,R1}
   \   00000022   0F21               MOVS     R1,#+15
   \   00000024   0220               MOVS     R0,#+2
   \   00000026   03B4               PUSH     {R0,R1}
   \   00000028   3100               MOVS     R1,R6
   \   0000002A   2800               MOVS     R0,R5
   \   0000002C   ........           BL       List_Event
   \   00000030   04B0               ADD      SP,SP,#+16
   \   00000032   0500               MOVS     R5,R0
   9381                  
   9382                        if (ans)
   \   00000034   75D0               BEQ      ??IpTCP_Event_2
   9383                          {
   9384                          if (ans==2) MenuLevel=(MenuLevel*10+ans);
   \   00000036   022D               CMP      R5,#+2
   \   00000038   05D1               BNE      ??IpTCP_Event_3
   \   0000003A   404E               LDR      R6,??IpTCP_Event_0+0x14  ;; TextToChangeLength
   \   0000003C   B06C               LDR      R0,[R6, #+72]
   \   0000003E   0A21               MOVS     R1,#+10
   \   00000040   4843               MULS     R0,R1,R0
   \   00000042   801C               ADDS     R0,R0,#+2
   \   00000044   B064               STR      R0,[R6, #+72]
   9385                          if (ans==1)   //w³¹cz auto
   \                     ??IpTCP_Event_3:
   \   00000046   012D               CMP      R5,#+1
   \   00000048   1ED1               BNE      ??IpTCP_Event_4
   9386                          {
   9387                              NET.WiFi.IpNotAuto=0; 
   \   0000004A   0026               MOVS     R6,#+0
   \   0000004C   4920               MOVS     R0,#+73
   \   0000004E   3100               MOVS     R1,R6
   \   00000050   2154               STRB     R1,[R4, R0]
   9388          
   9389                              
   9390                             //zapis do flash
   9391                              unsigned int Save = __get_interrupt_state();  
   \   00000052   ........           BL       __iar_get_interrupt_state
   \   00000056   0700               MOVS     R7,R0
   9392                              __disable_interrupt();
   \   00000058   ........           BL       __iar_disable_interrupt
   9393                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.IpNotAuto)), (char*) (&(NET.WiFi.IpNotAuto)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   0000005C   0122               MOVS     R2,#+1
   \   0000005E   2100               MOVS     R1,R4
   \   00000060   4931               ADDS     R1,R1,#+73
   \   00000062   3748               LDR      R0,??IpTCP_Event_0+0x18  ;; 0x13d8b9
   \   00000064   ........           BL       FlashWrite
   9394                              __set_interrupt_state(Save);
   \   00000068   3800               MOVS     R0,R7
   \   0000006A   ........           BL       __iar_set_interrupt_state
   9395                              __enable_interrupt();
   \   0000006E   ........           BL       __iar_enable_interrupt
   9396                              //koniec zapisu do flash
   9397                              
   9398                               NET.Status.FreezTime=0;
   9399                             NET.Status.HostLink=DISCONNECTED;
   \   00000072   3000               MOVS     R0,R6
   9400                             NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000074   2680               STRH     R6,[R4, #+0]
   9401                             NET.Status.Timeout=0;
   \   00000076   0100               MOVS     R1,R0
   \   00000078   2200               MOVS     R2,R4
   \   0000007A   3832               ADDS     R2,R2,#+56
   \   0000007C   03C2               STM      R2!,{R0,R1}
   9402                             NET.Status.HttpNextQueryTime=0;
   \   0000007E   2200               MOVS     R2,R4
   \   00000080   3032               ADDS     R2,R2,#+48
   \   00000082   03C2               STM      R2!,{R0,R1}
   9403                             NET.Status.FreezTime=0;
   \   00000084   4034               ADDS     R4,R4,#+64
   \   00000086   03C4               STM      R4!,{R0,R1}
   9404                            
   9405                          }
   9406                          if (ans<0) {
   \                     ??IpTCP_Event_4:
   \   00000088   002D               CMP      R5,#+0
   \   0000008A   07D5               BPL      ??IpTCP_Event_5
   9407                            MenuLevel=(MenuLevel/10);
   \   0000008C   2B4E               LDR      R6,??IpTCP_Event_0+0x14  ;; TextToChangeLength
   \   0000008E   B06C               LDR      R0,[R6, #+72]
   \   00000090   0A21               MOVS     R1,#+10
   \   00000092   ........           BL       __aeabi_idivmod
   \   00000096   B064               STR      R0,[R6, #+72]
   9408                            CurModifSheet=0; 
   \   00000098   0020               MOVS     R0,#+0
   \   0000009A   7071               STRB     R0,[R6, #+5]
   9409                          }
   9410                          MenuPaint();
   \                     ??IpTCP_Event_5:
   \   0000009C   ........           BL       MenuPaint
   \   000000A0   3FE0               B        ??IpTCP_Event_2
   9411                          } 
   9412                   }else{
   9413                       int ans=List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0);
   9414                        if (ans<0) {
   \                     ??IpTCP_Event_1:
   \   000000A2   0800               MOVS     R0,R1
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   0F21               MOVS     R1,#+15
   \   000000A8   03B4               PUSH     {R0,R1}
   \   000000AA   3100               MOVS     R1,R6
   \   000000AC   2800               MOVS     R0,R5
   \   000000AE   ........           BL       List_Event
   \   000000B2   04B0               ADD      SP,SP,#+16
   \   000000B4   0028               CMP      R0,#+0
   \   000000B6   07D5               BPL      ??IpTCP_Event_6
   9415                              MenuLevel=(MenuLevel/10);
   \   000000B8   204E               LDR      R6,??IpTCP_Event_0+0x14  ;; TextToChangeLength
   \   000000BA   B06C               LDR      R0,[R6, #+72]
   \   000000BC   0A21               MOVS     R1,#+10
   \   000000BE   ........           BL       __aeabi_idivmod
   \   000000C2   B064               STR      R0,[R6, #+72]
   9416                              CurModifSheet=0; 
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   7071               STRB     R0,[R6, #+5]
   9417                            }
   9418                       
   9419                     
   9420                       if (Button("Auto IP -off",2,75,60,13)==1)
   \                     ??IpTCP_Event_6:
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   0D20               MOVS     R0,#+13
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   3C23               MOVS     R3,#+60
   \   000000D0   4B22               MOVS     R2,#+75
   \   000000D2   0221               MOVS     R1,#+2
   \   000000D4   1B48               LDR      R0,??IpTCP_Event_0+0x1C  ;; `?<Constant "Auto IP -on">` + 24
   \   000000D6   ........           BL       Button
   \   000000DA   02B0               ADD      SP,SP,#+8
   \   000000DC   0128               CMP      R0,#+1
   \   000000DE   20D1               BNE      ??IpTCP_Event_2
   9421                       {
   9422                             NET.Status.FreezTime=0;
   9423                             NET.Status.HostLink=DISCONNECTED;
   \   000000E0   0026               MOVS     R6,#+0
   \   000000E2   3000               MOVS     R0,R6
   9424                             NET.Status.AccesPointAssociate=DISCONNECTED;
   \   000000E4   2680               STRH     R6,[R4, #+0]
   9425                             NET.Status.Timeout=0;
   \   000000E6   0100               MOVS     R1,R0
   \   000000E8   2200               MOVS     R2,R4
   \   000000EA   3832               ADDS     R2,R2,#+56
   \   000000EC   03C2               STM      R2!,{R0,R1}
   9426                             NET.Status.HttpNextQueryTime=0;
   \   000000EE   2200               MOVS     R2,R4
   \   000000F0   3032               ADDS     R2,R2,#+48
   \   000000F2   03C2               STM      R2!,{R0,R1}
   9427                             NET.Status.FreezTime=0;
   \   000000F4   2064               STR      R0,[R4, #+64]
   \   000000F6   6164               STR      R1,[R4, #+68]
   9428                         
   9429                             NET.WiFi.IpNotAuto=1;    //wy³¹cz auto
   \   000000F8   4920               MOVS     R0,#+73
   \   000000FA   0121               MOVS     R1,#+1
   \   000000FC   2154               STRB     R1,[R4, R0]
   9430                             //zapis do flash
   9431                              unsigned int Save = __get_interrupt_state();  
   \   000000FE   ........           BL       __iar_get_interrupt_state
   \   00000102   0500               MOVS     R5,R0
   9432                              __disable_interrupt();
   \   00000104   ........           BL       __iar_disable_interrupt
   9433                                FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.IpNotAuto)), (char*) (&(NET.WiFi.IpNotAuto)), 1);
                                       ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000108   0A00               MOVS     R2,R1
   \   0000010A   4934               ADDS     R4,R4,#+73
   \   0000010C   2100               MOVS     R1,R4
   \   0000010E   0C48               LDR      R0,??IpTCP_Event_0+0x18  ;; 0x13d8b9
   \   00000110   ........           BL       FlashWrite
   9434                              __set_interrupt_state(Save);
   \   00000114   2800               MOVS     R0,R5
   \   00000116   ........           BL       __iar_set_interrupt_state
   9435                              __enable_interrupt();
   \   0000011A   ........           BL       __iar_enable_interrupt
   9436                              //koniec zapisu do flash
   9437                              
   9438                              
   9439                         MenuPaint();
   \   0000011E   ........           BL       MenuPaint
   9440                       }
   9441                    
   9442                   }
   9443                     
   9444                }//_______________________________________________________________________
   \                     ??IpTCP_Event_2:
   \   00000122   F8BC               POP      {R3-R7}
   \   00000124   01BC               POP      {R0}
   \   00000126   0047               BX       R0               ;; return
   \                     ??IpTCP_Event_0:
   \   00000128   ........           DC32     X_up
   \   0000012C   ........           DC32     Y_up
   \   00000130   ........           DC32     X_down
   \   00000134   ........           DC32     Y_down
   \   00000138   ........           DC32     NET
   \   0000013C   ........           DC32     TextToChangeLength
   \   00000140   B9D81300           DC32     0x13d8b9
   \   00000144   ........           DC32     `?<Constant "Auto IP -on">` + 24
   9445                
   9446                
   9447            
   9448                
   9449          //sprawdza poprawnoæ zapisu IP
   9450          //funkcja czyci wpis je¿eli nie poprawny ze standardem IP       
   9451          //0   -brak wpisu
   9452          //1   -wpis prawid³owy   
   9453          //-1   -wpis niepoprawny       

   \                                 In section Debug.txt, align 4, keep-with-next
   9454          signed char CheckIP(char *Text)
   9455          {
   \                     CheckIP:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
   \   00000002   0100               MOVS     R1,R0
   9456            signed char IpOk=1;
   \   00000004   0120               MOVS     R0,#+1
   9457            
   9458            char znak=0;
   \   00000006   0022               MOVS     R2,#+0
   \   00000008   1300               MOVS     R3,R2
   9459            
   9460            if (Text[0]==0) IpOk=0; 
   \   0000000A   0C78               LDRB     R4,[R1, #+0]
   \   0000000C   002C               CMP      R4,#+0
   \   0000000E   0DD1               BNE      ??CheckIP_0
   \   00000010   1000               MOVS     R0,R2
   \   00000012   0BE0               B        ??CheckIP_0
   9461            while ((znak<12) && (Text[znak]>0))  
   9462            {
   9463               if (((Text[znak]>='0')&&(Text[znak]<='9')) || (Text[znak]=='.'))  
   \                     ??CheckIP_1:
   \   00000014   302D               CMP      R5,#+48
   \   00000016   01D3               BCC      ??CheckIP_2
   \   00000018   3A2D               CMP      R5,#+58
   \   0000001A   04D3               BCC      ??CheckIP_3
   \                     ??CheckIP_2:
   \   0000001C   2C00               MOVS     R4,R5
   \   0000001E   2E2C               CMP      R4,#+46
   \   00000020   01D0               BEQ      ??CheckIP_3
   9464               {
   9465               }else{
   9466                 IpOk=-1;
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   C043               MVNS     R0,R0            ;; #-1
   9467               }
   9468               znak++; 
   \                     ??CheckIP_3:
   \   00000026   5B1C               ADDS     R3,R3,#+1
   \   00000028   1B06               LSLS     R3,R3,#+24
   \   0000002A   1B0E               LSRS     R3,R3,#+24
   9469            }
   \                     ??CheckIP_0:
   \   0000002C   1C00               MOVS     R4,R3
   \   0000002E   0C2C               CMP      R4,#+12
   \   00000030   03D2               BCS      ??CheckIP_4
   \   00000032   0C19               ADDS     R4,R1,R4
   \   00000034   2578               LDRB     R5,[R4, #+0]
   \   00000036   002D               CMP      R5,#+0
   \   00000038   ECD1               BNE      ??CheckIP_1
   9470            znak=0;
   \                     ??CheckIP_4:
   \   0000003A   1300               MOVS     R3,R2
   9471            if (IpOk<0) while(znak<14) Text[znak++]=0;
   \   0000003C   0028               CMP      R0,#+0
   \   0000003E   08D5               BPL      ??CheckIP_5
   \   00000040   1500               MOVS     R5,R2
   \   00000042   03E0               B        ??CheckIP_6
   \                     ??CheckIP_7:
   \   00000044   0D55               STRB     R5,[R1, R4]
   \   00000046   5B1C               ADDS     R3,R3,#+1
   \   00000048   1B06               LSLS     R3,R3,#+24
   \   0000004A   1B0E               LSRS     R3,R3,#+24
   \                     ??CheckIP_6:
   \   0000004C   1C00               MOVS     R4,R3
   \   0000004E   0E2C               CMP      R4,#+14
   \   00000050   F8D3               BCC      ??CheckIP_7
   9472            return IpOk;
   \                     ??CheckIP_5:
   \   00000052   38BC               POP      {R3-R5}
   \   00000054   02BC               POP      {R1}
   \   00000056   0847               BX       R1               ;; return
   9473          }
   9474                
   9475                
   9476                
   9477                
   9478                

   \                                 In section Debug.txt, align 4, keep-with-next
   9479          void  IpConfig_Paint(void)
   9480                {
   \                     IpConfig_Paint:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9481                    
   9482                     if (CheckIP(NET.WiFi.IP)<0)
   \   00000002   8F4C               LDR      R4,??IpConfig_Paint_0  ;; NET
   \   00000004   2000               MOVS     R0,R4
   \   00000006   4C30               ADDS     R0,R0,#+76
   \   00000008   ........           BL       CheckIP
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   0BD5               BPL      ??IpConfig_Paint_1
   9483                    {
   9484                        if (g_leng==0) MESSAGE(Komentarz2_PL); else  MESSAGE(Komentarz2_En);
   \   00000010   8C48               LDR      R0,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000012   0068               LDR      R0,[R0, #+0]
   \   00000014   0028               CMP      R0,#+0
   \   00000016   03D1               BNE      ??IpConfig_Paint_2
   \   00000018   8B48               LDR      R0,??IpConfig_Paint_0+0x8  ;; `?<Constant "Host">` + 80
   \   0000001A   ........           BL       MESSAGE
   \   0000001E   0BE1               B        ??IpConfig_Paint_3
   \                     ??IpConfig_Paint_2:
   \   00000020   8A48               LDR      R0,??IpConfig_Paint_0+0xC  ;; `?<Constant "Host">` + 96
   \   00000022   ........           BL       MESSAGE
   \   00000026   07E1               B        ??IpConfig_Paint_3
   9485                    }else if (CheckIP(NET.WiFi.Mask)<0)
   \                     ??IpConfig_Paint_1:
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   5B30               ADDS     R0,R0,#+91
   \   0000002C   ........           BL       CheckIP
   \   00000030   0028               CMP      R0,#+0
   \   00000032   0BD5               BPL      ??IpConfig_Paint_4
   9486                    {
   9487                        if (g_leng==0) MESSAGE(Komentarz3_PL); else  MESSAGE(Komentarz3_En);
   \   00000034   8348               LDR      R0,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   0028               CMP      R0,#+0
   \   0000003A   03D1               BNE      ??IpConfig_Paint_5
   \   0000003C   8448               LDR      R0,??IpConfig_Paint_0+0x10  ;; `?<Constant "Host">` + 112
   \   0000003E   ........           BL       MESSAGE
   \   00000042   F9E0               B        ??IpConfig_Paint_3
   \                     ??IpConfig_Paint_5:
   \   00000044   8348               LDR      R0,??IpConfig_Paint_0+0x14  ;; `?<Constant "Host">` + 132
   \   00000046   ........           BL       MESSAGE
   \   0000004A   F5E0               B        ??IpConfig_Paint_3
   9488                    }else if (CheckIP(NET.WiFi.Gate)<0)
   \                     ??IpConfig_Paint_4:
   \   0000004C   2000               MOVS     R0,R4
   \   0000004E   6A30               ADDS     R0,R0,#+106
   \   00000050   ........           BL       CheckIP
   \   00000054   0028               CMP      R0,#+0
   \   00000056   0BD5               BPL      ??IpConfig_Paint_6
   9489                    {
   9490                        if (g_leng==0) MESSAGE(Komentarz4_PL); else  MESSAGE(Komentarz4_En);
   \   00000058   7A48               LDR      R0,??IpConfig_Paint_0+0x4  ;; g_leng
   \   0000005A   0068               LDR      R0,[R0, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   03D1               BNE      ??IpConfig_Paint_7
   \   00000060   7D48               LDR      R0,??IpConfig_Paint_0+0x18  ;; `?<Constant "Host">` + 152
   \   00000062   ........           BL       MESSAGE
   \   00000066   E7E0               B        ??IpConfig_Paint_3
   \                     ??IpConfig_Paint_7:
   \   00000068   7C48               LDR      R0,??IpConfig_Paint_0+0x1C  ;; `?<Constant "Host">` + 172
   \   0000006A   ........           BL       MESSAGE
   \   0000006E   E3E0               B        ??IpConfig_Paint_3
   9491                    }else{           
   \                     ??IpConfig_Paint_6:
   \   00000070   0021               MOVS     R1,#+0
   \   00000072   0800               MOVS     R0,R1
   \   00000074   03B4               PUSH     {R0,R1}
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   03B4               PUSH     {R0,R1}
   \   0000007A   79A0               ADR      R0,??IpConfig_Paint_0+0x20  ;; 0x20, 0x00, 0x00, 0x00
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   0321               MOVS     R1,#+3
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   03B4               PUSH     {R0,R1}
   \   00000084   0300               MOVS     R3,R0
   \   00000086   6C22               MOVS     R2,#+108
   \   00000088   0121               MOVS     R1,#+1
   \   0000008A   7648               LDR      R0,??IpConfig_Paint_0+0x24  ;; `?<Constant "Host">` + 196
   9492          
   9493          
   9494                  
   9495                    List_Paint("IP/TCP",1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   0000008C   ........           BL       List_Paint
   \   00000090   0AB0               ADD      SP,SP,#+40
   9496          
   9497                    char pY=72;    //pozycja dolna
   9498                    Label(Speech[g_leng].Adres_IP,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000092   754D               LDR      R5,??IpConfig_Paint_0+0x28  ;; 0xa14
   \   00000094   6B4E               LDR      R6,??IpConfig_Paint_0+0x4  ;; g_leng
   \   00000096   754F               LDR      R7,??IpConfig_Paint_0+0x2C  ;; Speech
   \   00000098   82B0               SUB      SP,SP,#+8
   \   0000009A   0120               MOVS     R0,#+1
   \   0000009C   0090               STR      R0,[SP, #+0]
   \   0000009E   7F21               MOVS     R1,#+127
   \   000000A0   03B4               PUSH     {R0,R1}
   \   000000A2   3E21               MOVS     R1,#+62
   \   000000A4   0F20               MOVS     R0,#+15
   \   000000A6   03B4               PUSH     {R0,R1}
   \   000000A8   6123               MOVS     R3,#+97
   \   000000AA   0122               MOVS     R2,#+1
   \   000000AC   0021               MOVS     R1,#+0
   \   000000AE   8C46               MOV      R12,R1
   \   000000B0   6F49               LDR      R1,??IpConfig_Paint_0+0x30  ;; 0x99c
   \   000000B2   3068               LDR      R0,[R6, #+0]
   \   000000B4   6843               MULS     R0,R5,R0
   \   000000B6   3818               ADDS     R0,R7,R0
   \   000000B8   4018               ADDS     R0,R0,R1
   \   000000BA   6146               MOV      R1,R12
   \   000000BC   ........           BL       Label
   \   000000C0   06B0               ADD      SP,SP,#+24
   9499                    Label(".................................",0,2,pY+14,25,59,1,127,0);
   \   000000C2   82B0               SUB      SP,SP,#+8
   \   000000C4   0020               MOVS     R0,#+0
   \   000000C6   0090               STR      R0,[SP, #+0]
   \   000000C8   7F21               MOVS     R1,#+127
   \   000000CA   0120               MOVS     R0,#+1
   \   000000CC   03B4               PUSH     {R0,R1}
   \   000000CE   3B21               MOVS     R1,#+59
   \   000000D0   1920               MOVS     R0,#+25
   \   000000D2   03B4               PUSH     {R0,R1}
   \   000000D4   5623               MOVS     R3,#+86
   \   000000D6   0222               MOVS     R2,#+2
   \   000000D8   0021               MOVS     R1,#+0
   \   000000DA   6648               LDR      R0,??IpConfig_Paint_0+0x34  ;; `?<Constant "Host">` + 8
   \   000000DC   ........           BL       Label
   \   000000E0   06B0               ADD      SP,SP,#+24
   9500                    
   9501                    Label(NET.WiFi.IP,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000000E2   82B0               SUB      SP,SP,#+8
   \   000000E4   0020               MOVS     R0,#+0
   \   000000E6   0090               STR      R0,[SP, #+0]
   \   000000E8   7F21               MOVS     R1,#+127
   \   000000EA   0120               MOVS     R0,#+1
   \   000000EC   03B4               PUSH     {R0,R1}
   \   000000EE   3B21               MOVS     R1,#+59
   \   000000F0   0F20               MOVS     R0,#+15
   \   000000F2   03B4               PUSH     {R0,R1}
   \   000000F4   5823               MOVS     R3,#+88
   \   000000F6   0222               MOVS     R2,#+2
   \   000000F8   0021               MOVS     R1,#+0
   \   000000FA   2000               MOVS     R0,R4
   \   000000FC   4C30               ADDS     R0,R0,#+76
   \   000000FE   ........           BL       Label
   \   00000102   06B0               ADD      SP,SP,#+24
   9502                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000104   82B0               SUB      SP,SP,#+8
   \   00000106   0D20               MOVS     R0,#+13
   \   00000108   0090               STR      R0,[SP, #+0]
   \   0000010A   2223               MOVS     R3,#+34
   \   0000010C   4922               MOVS     R2,#+73
   \   0000010E   0F21               MOVS     R1,#+15
   \   00000110   8C46               MOV      R12,R1
   \   00000112   5949               LDR      R1,??IpConfig_Paint_0+0x38  ;; 0x906
   \   00000114   3068               LDR      R0,[R6, #+0]
   \   00000116   6843               MULS     R0,R5,R0
   \   00000118   3818               ADDS     R0,R7,R0
   \   0000011A   4018               ADDS     R0,R0,R1
   \   0000011C   6146               MOV      R1,R12
   \   0000011E   ........           BL       Button
   \   00000122   02B0               ADD      SP,SP,#+8
   9503                    
   9504                    pY=37;    
   9505                    Label(Speech[g_leng].Maska,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000124   82B0               SUB      SP,SP,#+8
   \   00000126   0120               MOVS     R0,#+1
   \   00000128   0090               STR      R0,[SP, #+0]
   \   0000012A   7F21               MOVS     R1,#+127
   \   0000012C   03B4               PUSH     {R0,R1}
   \   0000012E   3E21               MOVS     R1,#+62
   \   00000130   0F20               MOVS     R0,#+15
   \   00000132   03B4               PUSH     {R0,R1}
   \   00000134   0B00               MOVS     R3,R1
   \   00000136   0122               MOVS     R2,#+1
   \   00000138   0021               MOVS     R1,#+0
   \   0000013A   8C46               MOV      R12,R1
   \   0000013C   4F49               LDR      R1,??IpConfig_Paint_0+0x3C  ;; 0x9ab
   \   0000013E   3068               LDR      R0,[R6, #+0]
   \   00000140   6843               MULS     R0,R5,R0
   \   00000142   3818               ADDS     R0,R7,R0
   \   00000144   4018               ADDS     R0,R0,R1
   \   00000146   6146               MOV      R1,R12
   \   00000148   ........           BL       Label
   \   0000014C   06B0               ADD      SP,SP,#+24
   9506                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   0000014E   82B0               SUB      SP,SP,#+8
   \   00000150   0020               MOVS     R0,#+0
   \   00000152   0090               STR      R0,[SP, #+0]
   \   00000154   7F21               MOVS     R1,#+127
   \   00000156   0120               MOVS     R0,#+1
   \   00000158   03B4               PUSH     {R0,R1}
   \   0000015A   3B21               MOVS     R1,#+59
   \   0000015C   1920               MOVS     R0,#+25
   \   0000015E   03B4               PUSH     {R0,R1}
   \   00000160   3323               MOVS     R3,#+51
   \   00000162   0222               MOVS     R2,#+2
   \   00000164   0021               MOVS     R1,#+0
   \   00000166   4648               LDR      R0,??IpConfig_Paint_0+0x40  ;; `?<Constant "Host">` + 44
   \   00000168   ........           BL       Label
   \   0000016C   06B0               ADD      SP,SP,#+24
   9507                    Label(NET.WiFi.Mask,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   0000016E   82B0               SUB      SP,SP,#+8
   \   00000170   0020               MOVS     R0,#+0
   \   00000172   0090               STR      R0,[SP, #+0]
   \   00000174   7F21               MOVS     R1,#+127
   \   00000176   0120               MOVS     R0,#+1
   \   00000178   03B4               PUSH     {R0,R1}
   \   0000017A   3B21               MOVS     R1,#+59
   \   0000017C   0F20               MOVS     R0,#+15
   \   0000017E   03B4               PUSH     {R0,R1}
   \   00000180   3523               MOVS     R3,#+53
   \   00000182   0222               MOVS     R2,#+2
   \   00000184   0021               MOVS     R1,#+0
   \   00000186   2000               MOVS     R0,R4
   \   00000188   5B30               ADDS     R0,R0,#+91
   \   0000018A   ........           BL       Label
   \   0000018E   06B0               ADD      SP,SP,#+24
   9508                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   00000190   82B0               SUB      SP,SP,#+8
   \   00000192   0D20               MOVS     R0,#+13
   \   00000194   0090               STR      R0,[SP, #+0]
   \   00000196   2223               MOVS     R3,#+34
   \   00000198   2622               MOVS     R2,#+38
   \   0000019A   0F21               MOVS     R1,#+15
   \   0000019C   8C46               MOV      R12,R1
   \   0000019E   3649               LDR      R1,??IpConfig_Paint_0+0x38  ;; 0x906
   \   000001A0   3068               LDR      R0,[R6, #+0]
   \   000001A2   6843               MULS     R0,R5,R0
   \   000001A4   3818               ADDS     R0,R7,R0
   \   000001A6   4018               ADDS     R0,R0,R1
   \   000001A8   6146               MOV      R1,R12
   \   000001AA   ........           BL       Button
   \   000001AE   02B0               ADD      SP,SP,#+8
   9509                    
   9510                    pY=2;    
   9511                    Label(Speech[g_leng].Brama,0,1,pY+25,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001B0   82B0               SUB      SP,SP,#+8
   \   000001B2   0120               MOVS     R0,#+1
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   7F21               MOVS     R1,#+127
   \   000001B8   03B4               PUSH     {R0,R1}
   \   000001BA   3E21               MOVS     R1,#+62
   \   000001BC   0F20               MOVS     R0,#+15
   \   000001BE   03B4               PUSH     {R0,R1}
   \   000001C0   1B23               MOVS     R3,#+27
   \   000001C2   0122               MOVS     R2,#+1
   \   000001C4   0021               MOVS     R1,#+0
   \   000001C6   8C46               MOV      R12,R1
   \   000001C8   2E49               LDR      R1,??IpConfig_Paint_0+0x44  ;; 0x9ba
   \   000001CA   3068               LDR      R0,[R6, #+0]
   \   000001CC   6843               MULS     R0,R5,R0
   \   000001CE   3818               ADDS     R0,R7,R0
   \   000001D0   4018               ADDS     R0,R0,R1
   \   000001D2   6146               MOV      R1,R12
   \   000001D4   ........           BL       Label
   \   000001D8   06B0               ADD      SP,SP,#+24
   9512                    Label("..................................",0,2,pY+14,25,59,1,127,0);
   \   000001DA   82B0               SUB      SP,SP,#+8
   \   000001DC   0020               MOVS     R0,#+0
   \   000001DE   0090               STR      R0,[SP, #+0]
   \   000001E0   7F21               MOVS     R1,#+127
   \   000001E2   0120               MOVS     R0,#+1
   \   000001E4   03B4               PUSH     {R0,R1}
   \   000001E6   3B21               MOVS     R1,#+59
   \   000001E8   1920               MOVS     R0,#+25
   \   000001EA   03B4               PUSH     {R0,R1}
   \   000001EC   1023               MOVS     R3,#+16
   \   000001EE   0222               MOVS     R2,#+2
   \   000001F0   0021               MOVS     R1,#+0
   \   000001F2   2348               LDR      R0,??IpConfig_Paint_0+0x40  ;; `?<Constant "Host">` + 44
   \   000001F4   ........           BL       Label
   \   000001F8   06B0               ADD      SP,SP,#+24
   9513                    Label(NET.WiFi.Gate,0,2,pY+16,15,59,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw)           
   \   000001FA   82B0               SUB      SP,SP,#+8
   \   000001FC   0020               MOVS     R0,#+0
   \   000001FE   0090               STR      R0,[SP, #+0]
   \   00000200   7F21               MOVS     R1,#+127
   \   00000202   0120               MOVS     R0,#+1
   \   00000204   03B4               PUSH     {R0,R1}
   \   00000206   3B21               MOVS     R1,#+59
   \   00000208   0F20               MOVS     R0,#+15
   \   0000020A   03B4               PUSH     {R0,R1}
   \   0000020C   1223               MOVS     R3,#+18
   \   0000020E   0222               MOVS     R2,#+2
   \   00000210   0021               MOVS     R1,#+0
   \   00000212   6A34               ADDS     R4,R4,#+106
   \   00000214   2000               MOVS     R0,R4
   \   00000216   ........           BL       Label
   \   0000021A   06B0               ADD      SP,SP,#+24
   9514                    Button(Speech[g_leng].Zmien,15,pY+1,34,13); //(etykieta ,char poz_X , char poz_Y ,char width, char height)
   \   0000021C   82B0               SUB      SP,SP,#+8
   \   0000021E   0D20               MOVS     R0,#+13
   \   00000220   0090               STR      R0,[SP, #+0]
   \   00000222   2223               MOVS     R3,#+34
   \   00000224   0322               MOVS     R2,#+3
   \   00000226   0F21               MOVS     R1,#+15
   \   00000228   1348               LDR      R0,??IpConfig_Paint_0+0x38  ;; 0x906
   \   0000022A   3468               LDR      R4,[R6, #+0]
   \   0000022C   6C43               MULS     R4,R5,R4
   \   0000022E   3C19               ADDS     R4,R7,R4
   \   00000230   2018               ADDS     R0,R4,R0
   \   00000232   ........           BL       Button
   \   00000236   02B0               ADD      SP,SP,#+8
   9515          
   9516                    
   9517                    }
   9518                    
   9519                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??IpConfig_Paint_3:
   \   00000238   F8BC               POP      {R3-R7}
   \   0000023A   01BC               POP      {R0}
   \   0000023C   0047               BX       R0               ;; return
   \   0000023E   C046               Nop      
   \                     ??IpConfig_Paint_0:
   \   00000240   ........           DC32     NET
   \   00000244   ........           DC32     g_leng
   \   00000248   ........           DC32     `?<Constant "Host">` + 80
   \   0000024C   ........           DC32     `?<Constant "Host">` + 96
   \   00000250   ........           DC32     `?<Constant "Host">` + 112
   \   00000254   ........           DC32     `?<Constant "Host">` + 132
   \   00000258   ........           DC32     `?<Constant "Host">` + 152
   \   0000025C   ........           DC32     `?<Constant "Host">` + 172
   \   00000260   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   00000264   ........           DC32     `?<Constant "Host">` + 196
   \   00000268   140A0000           DC32     0xa14
   \   0000026C   ........           DC32     Speech
   \   00000270   9C090000           DC32     0x99c
   \   00000274   ........           DC32     `?<Constant "Host">` + 8
   \   00000278   06090000           DC32     0x906
   \   0000027C   AB090000           DC32     0x9ab
   \   00000280   ........           DC32     `?<Constant "Host">` + 44
   \   00000284   BA090000           DC32     0x9ba
   9520          
   9521          
   9522             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9523                void  IpConfig_Event(void)
   9524                {
   \                     IpConfig_Event:
   \   00000000   F1B5               PUSH     {R0,R4-R7,LR}
   9525                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   714C               LDR      R4,??IpConfig_Event_0  ;; Y_up
   \   00000004   714D               LDR      R5,??IpConfig_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   2B5E               LDRSH    R3,[R5, R0]
   \   00000012   6F48               LDR      R0,??IpConfig_Event_0+0x8  ;; X_down
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   425E               LDRSH    R2,[R0, R1]
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   215E               LDRSH    R1,[R4, R0]
   \   0000001C   6D48               LDR      R0,??IpConfig_Event_0+0xC  ;; X_up
   \   0000001E   0026               MOVS     R6,#+0
   \   00000020   805F               LDRSH    R0,[R0, R6]
   \   00000022   ........           BL       List_Event
   \   00000026   04B0               ADD      SP,SP,#+16
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   33D5               BPL      ??IpConfig_Event_1
   9526                  {
   9527                    //zapis do flash
   9528                            unsigned int Save = __get_interrupt_state();  
   \   0000002C   ........           BL       __iar_get_interrupt_state
   \   00000030   0500               MOVS     R5,R0
   9529                            __disable_interrupt();
   \   00000032   ........           BL       __iar_disable_interrupt
   9530                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.IP)), (char*) (&(NET.WiFi.IP)),15);
                                     ^
Warning[Pe223]: function "FlashWrite" declared implicitly
   \   00000036   684C               LDR      R4,??IpConfig_Event_0+0x10  ;; NET
   \   00000038   0F22               MOVS     R2,#+15
   \   0000003A   2100               MOVS     R1,R4
   \   0000003C   4C31               ADDS     R1,R1,#+76
   \   0000003E   6748               LDR      R0,??IpConfig_Event_0+0x14  ;; 0x13d8bc
   \   00000040   ........           BL       FlashWrite
   9531                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Mask)), (char*) (&(NET.WiFi.Mask)), 15);
   \   00000044   0F22               MOVS     R2,#+15
   \   00000046   2100               MOVS     R1,R4
   \   00000048   5B31               ADDS     R1,R1,#+91
   \   0000004A   6548               LDR      R0,??IpConfig_Event_0+0x18  ;; 0x13d8cb
   \   0000004C   ........           BL       FlashWrite
   9532                              FlashWrite((char*)(&(AT91C_IFLASH_MEM->Config.WiFi.Gate)), (char*) (&(NET.WiFi.Gate)), 15);
   \   00000050   0F22               MOVS     R2,#+15
   \   00000052   2100               MOVS     R1,R4
   \   00000054   6A31               ADDS     R1,R1,#+106
   \   00000056   6348               LDR      R0,??IpConfig_Event_0+0x1C  ;; 0x13d8da
   \   00000058   ........           BL       FlashWrite
   9533                            __set_interrupt_state(Save);
   \   0000005C   2800               MOVS     R0,R5
   \   0000005E   ........           BL       __iar_set_interrupt_state
   9534                     //koniec zapisu do flash
   9535                    
   9536                     NET.Status.FreezTime=g_counter+FREEZ_TIME;
   \   00000062   6148               LDR      R0,??IpConfig_Event_0+0x20  ;; g_counter
   \   00000064   03C8               LDM      R0!,{R0,R1}
   \   00000066   0022               MOVS     R2,#+0
   \   00000068   3230               ADDS     R0,R0,#+50
   \   0000006A   5141               ADCS     R1,R1,R2
   \   0000006C   2064               STR      R0,[R4, #+64]
   \   0000006E   6164               STR      R1,[R4, #+68]
   9537                       NET.Status.HostLink=DISCONNECTED;
   \   00000070   1000               MOVS     R0,R2
   \   00000072   0100               MOVS     R1,R0
   9538                       NET.Status.AccesPointAssociate=DISCONNECTED;
   \   00000074   2080               STRH     R0,[R4, #+0]
   9539                       NET.Status.Timeout=0;
   \   00000076   2200               MOVS     R2,R4
   \   00000078   3832               ADDS     R2,R2,#+56
   \   0000007A   03C2               STM      R2!,{R0,R1}
   9540                       NET.Status.HttpNextQueryTime=0;
   \   0000007C   2200               MOVS     R2,R4
   \   0000007E   3032               ADDS     R2,R2,#+48
   \   00000080   03C2               STM      R2!,{R0,R1}
   9541                       NET.Status.FreezTime=0;        
   \   00000082   4034               ADDS     R4,R4,#+64
   \   00000084   03C4               STM      R4!,{R0,R1}
   9542                            
   9543                    MenuLevel=(MenuLevel/10);
   \   00000086   594F               LDR      R7,??IpConfig_Event_0+0x24  ;; TextToChangeLength
   \   00000088   B86C               LDR      R0,[R7, #+72]
   \   0000008A   0A21               MOVS     R1,#+10
   \   0000008C   ........           BL       __aeabi_idivmod
   \   00000090   B864               STR      R0,[R7, #+72]
   \   00000092   94E0               B        ??IpConfig_Event_2
   9544                    
   9545                     
   9546                    
   9547                  } 
   9548                   else if ((Y_down<112) || (Y_up<112))
   \                     ??IpConfig_Event_1:
   \   00000094   0020               MOVS     R0,#+0
   \   00000096   285E               LDRSH    R0,[R5, R0]
   \   00000098   7028               CMP      R0,#+112
   \   0000009A   04DB               BLT      ??IpConfig_Event_3
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   205E               LDRSH    R0,[R4, R0]
   \   000000A0   7028               CMP      R0,#+112
   \   000000A2   00DB               BLT      .+4
   \   000000A4   8BE0               B        ??IpConfig_Event_2
   \                     ??IpConfig_Event_3:
   \   000000A6   524D               LDR      R5,??IpConfig_Event_0+0x28  ;; g_leng
   \   000000A8   524E               LDR      R6,??IpConfig_Event_0+0x2C  ;; Speech
   \   000000AA   82B0               SUB      SP,SP,#+8
   \   000000AC   0D20               MOVS     R0,#+13
   \   000000AE   0090               STR      R0,[SP, #+0]
   \   000000B0   2223               MOVS     R3,#+34
   \   000000B2   4922               MOVS     R2,#+73
   \   000000B4   0F21               MOVS     R1,#+15
   \   000000B6   5048               LDR      R0,??IpConfig_Event_0+0x30  ;; 0x906
   \   000000B8   2C68               LDR      R4,[R5, #+0]
   \   000000BA   504F               LDR      R7,??IpConfig_Event_0+0x34  ;; 0xa14
   \   000000BC   7C43               MULS     R4,R7,R4
   \   000000BE   3419               ADDS     R4,R6,R4
   \   000000C0   2018               ADDS     R0,R4,R0
   9549                  {
   9550                      char pY=72; 
   9551                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \   000000C2   ........           BL       Button
   \   000000C6   02B0               ADD      SP,SP,#+8
   \   000000C8   0128               CMP      R0,#+1
   \   000000CA   1CD1               BNE      ??IpConfig_Event_4
   9552                      {
   9553                        TextToChange=NET.WiFi.IP;
   \   000000CC   474F               LDR      R7,??IpConfig_Event_0+0x24  ;; TextToChangeLength
   \   000000CE   424C               LDR      R4,??IpConfig_Event_0+0x10  ;; NET
   \   000000D0   2000               MOVS     R0,R4
   \   000000D2   4C30               ADDS     R0,R0,#+76
   \   000000D4   3865               STR      R0,[R7, #+80]
   9554                        TextToChangeLength=15;
   \   000000D6   0F20               MOVS     R0,#+15
   \   000000D8   3870               STRB     R0,[R7, #+0]
   9555                        TextToChangeMaxPixSize=100;
   \   000000DA   6420               MOVS     R0,#+100
   \   000000DC   7870               STRB     R0,[R7, #+1]
   9556                        AlfaType=2;
   \   000000DE   0220               MOVS     R0,#+2
   \   000000E0   7877               STRB     R0,[R7, #+29]
   9557                        char znak=0;
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   0100               MOVS     R1,R0
   \   000000E6   0300               MOVS     R3,R0
   \   000000E8   05E0               B        ??IpConfig_Event_5
   9558                        while(znak<14) NET.WiFi.IP[znak++]=0;
   \                     ??IpConfig_Event_6:
   \   000000EA   A218               ADDS     R2,R4,R2
   \   000000EC   4C32               ADDS     R2,R2,#+76
   \   000000EE   1370               STRB     R3,[R2, #+0]
   \   000000F0   491C               ADDS     R1,R1,#+1
   \   000000F2   0906               LSLS     R1,R1,#+24
   \   000000F4   090E               LSRS     R1,R1,#+24
   \                     ??IpConfig_Event_5:
   \   000000F6   0A00               MOVS     R2,R1
   \   000000F8   0E2A               CMP      R2,#+14
   \   000000FA   F6D3               BCC      ??IpConfig_Event_6
   9559                        MenuLevel=(MenuLevel*10+1);
   \   000000FC   B86C               LDR      R0,[R7, #+72]
   \   000000FE   0A21               MOVS     R1,#+10
   \   00000100   4843               MULS     R0,R1,R0
   \   00000102   401C               ADDS     R0,R0,#+1
   \   00000104   B864               STR      R0,[R7, #+72]
   9560                        
   9561                       
   9562                      }
   9563                      pY=37; 
   9564                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??IpConfig_Event_4:
   \   00000106   82B0               SUB      SP,SP,#+8
   \   00000108   0D20               MOVS     R0,#+13
   \   0000010A   0090               STR      R0,[SP, #+0]
   \   0000010C   2223               MOVS     R3,#+34
   \   0000010E   2622               MOVS     R2,#+38
   \   00000110   0F21               MOVS     R1,#+15
   \   00000112   3948               LDR      R0,??IpConfig_Event_0+0x30  ;; 0x906
   \   00000114   2C68               LDR      R4,[R5, #+0]
   \   00000116   394F               LDR      R7,??IpConfig_Event_0+0x34  ;; 0xa14
   \   00000118   7C43               MULS     R4,R7,R4
   \   0000011A   3419               ADDS     R4,R6,R4
   \   0000011C   2018               ADDS     R0,R4,R0
   \   0000011E   ........           BL       Button
   \   00000122   02B0               ADD      SP,SP,#+8
   \   00000124   0128               CMP      R0,#+1
   \   00000126   1CD1               BNE      ??IpConfig_Event_7
   9565                      {
   9566                        TextToChange=NET.WiFi.Mask;
   \   00000128   304F               LDR      R7,??IpConfig_Event_0+0x24  ;; TextToChangeLength
   \   0000012A   2B4C               LDR      R4,??IpConfig_Event_0+0x10  ;; NET
   \   0000012C   2000               MOVS     R0,R4
   \   0000012E   5B30               ADDS     R0,R0,#+91
   \   00000130   3865               STR      R0,[R7, #+80]
   9567                        TextToChangeLength=15;        
   \   00000132   0F20               MOVS     R0,#+15
   \   00000134   3870               STRB     R0,[R7, #+0]
   9568                        TextToChangeMaxPixSize=100;
   \   00000136   6420               MOVS     R0,#+100
   \   00000138   7870               STRB     R0,[R7, #+1]
   9569                        AlfaType=2;
   \   0000013A   0220               MOVS     R0,#+2
   \   0000013C   7877               STRB     R0,[R7, #+29]
   9570                        char znak=0;
   \   0000013E   0020               MOVS     R0,#+0
   \   00000140   0100               MOVS     R1,R0
   \   00000142   0300               MOVS     R3,R0
   \   00000144   05E0               B        ??IpConfig_Event_8
   9571                        while(znak<14) NET.WiFi.Mask[znak++]=0;
   \                     ??IpConfig_Event_9:
   \   00000146   A218               ADDS     R2,R4,R2
   \   00000148   5B32               ADDS     R2,R2,#+91
   \   0000014A   1370               STRB     R3,[R2, #+0]
   \   0000014C   491C               ADDS     R1,R1,#+1
   \   0000014E   0906               LSLS     R1,R1,#+24
   \   00000150   090E               LSRS     R1,R1,#+24
   \                     ??IpConfig_Event_8:
   \   00000152   0A00               MOVS     R2,R1
   \   00000154   0E2A               CMP      R2,#+14
   \   00000156   F6D3               BCC      ??IpConfig_Event_9
   9572                        MenuLevel=(MenuLevel*10+1);
   \   00000158   B86C               LDR      R0,[R7, #+72]
   \   0000015A   0A21               MOVS     R1,#+10
   \   0000015C   4843               MULS     R0,R1,R0
   \   0000015E   401C               ADDS     R0,R0,#+1
   \   00000160   B864               STR      R0,[R7, #+72]
   9573                        
   9574                      }
   9575                      pY=2; 
   9576                      if (Button(Speech[g_leng].Zmien,15,pY+1,34,13)==1)
   \                     ??IpConfig_Event_7:
   \   00000162   82B0               SUB      SP,SP,#+8
   \   00000164   0D20               MOVS     R0,#+13
   \   00000166   0090               STR      R0,[SP, #+0]
   \   00000168   2223               MOVS     R3,#+34
   \   0000016A   0322               MOVS     R2,#+3
   \   0000016C   0F21               MOVS     R1,#+15
   \   0000016E   2248               LDR      R0,??IpConfig_Event_0+0x30  ;; 0x906
   \   00000170   2C68               LDR      R4,[R5, #+0]
   \   00000172   224D               LDR      R5,??IpConfig_Event_0+0x34  ;; 0xa14
   \   00000174   6C43               MULS     R4,R5,R4
   \   00000176   3419               ADDS     R4,R6,R4
   \   00000178   2018               ADDS     R0,R4,R0
   \   0000017A   ........           BL       Button
   \   0000017E   02B0               ADD      SP,SP,#+8
   \   00000180   0128               CMP      R0,#+1
   \   00000182   1CD1               BNE      ??IpConfig_Event_2
   9577                      {
   9578                        TextToChange=NET.WiFi.Gate;
   \   00000184   194F               LDR      R7,??IpConfig_Event_0+0x24  ;; TextToChangeLength
   \   00000186   144C               LDR      R4,??IpConfig_Event_0+0x10  ;; NET
   \   00000188   2000               MOVS     R0,R4
   \   0000018A   6A30               ADDS     R0,R0,#+106
   \   0000018C   3865               STR      R0,[R7, #+80]
   9579                        TextToChangeLength=15;
   \   0000018E   0F20               MOVS     R0,#+15
   \   00000190   3870               STRB     R0,[R7, #+0]
   9580                        TextToChangeMaxPixSize=100;
   \   00000192   6420               MOVS     R0,#+100
   \   00000194   7870               STRB     R0,[R7, #+1]
   9581                        AlfaType=2;
   \   00000196   0220               MOVS     R0,#+2
   \   00000198   7877               STRB     R0,[R7, #+29]
   9582                        char znak=0;
   \   0000019A   0020               MOVS     R0,#+0
   \   0000019C   0100               MOVS     R1,R0
   \   0000019E   0300               MOVS     R3,R0
   \   000001A0   05E0               B        ??IpConfig_Event_10
   9583                        while(znak<14) NET.WiFi.Gate[znak++]=0;
   \                     ??IpConfig_Event_11:
   \   000001A2   A218               ADDS     R2,R4,R2
   \   000001A4   6A32               ADDS     R2,R2,#+106
   \   000001A6   1370               STRB     R3,[R2, #+0]
   \   000001A8   491C               ADDS     R1,R1,#+1
   \   000001AA   0906               LSLS     R1,R1,#+24
   \   000001AC   090E               LSRS     R1,R1,#+24
   \                     ??IpConfig_Event_10:
   \   000001AE   0A00               MOVS     R2,R1
   \   000001B0   0E2A               CMP      R2,#+14
   \   000001B2   F6D3               BCC      ??IpConfig_Event_11
   9584                        MenuLevel=(MenuLevel*10+1);
   \   000001B4   B86C               LDR      R0,[R7, #+72]
   \   000001B6   0A21               MOVS     R1,#+10
   \   000001B8   4843               MULS     R0,R1,R0
   \   000001BA   401C               ADDS     R0,R0,#+1
   \   000001BC   B864               STR      R0,[R7, #+72]
   9585                        
   9586                      }
   9587                      
   9588                      
   9589                      
   9590          
   9591                    
   9592                  }
   9593                   MenuPaint();
   \                     ??IpConfig_Event_2:
   \   000001BE   ........           BL       MenuPaint
   9594                    
   9595                
   9596                }//_______________________________________________________________________
   \   000001C2   F8BC               POP      {R3-R7}
   \   000001C4   01BC               POP      {R0}
   \   000001C6   0047               BX       R0               ;; return
   \                     ??IpConfig_Event_0:
   \   000001C8   ........           DC32     Y_up
   \   000001CC   ........           DC32     Y_down
   \   000001D0   ........           DC32     X_down
   \   000001D4   ........           DC32     X_up
   \   000001D8   ........           DC32     NET
   \   000001DC   BCD81300           DC32     0x13d8bc
   \   000001E0   CBD81300           DC32     0x13d8cb
   \   000001E4   DAD81300           DC32     0x13d8da
   \   000001E8   ........           DC32     g_counter
   \   000001EC   ........           DC32     TextToChangeLength
   \   000001F0   ........           DC32     g_leng
   \   000001F4   ........           DC32     Speech
   \   000001F8   06090000           DC32     0x906
   \   000001FC   140A0000           DC32     0xa14
   9597              
   9598               
   9599          
   9600                

   \                                 In section .bss, align 1
   9601                char TransferInfo=0;
   \                     TransferInfo:
   \   00000000                      DS8 1

   \                                 In section Debug.txt, align 4, keep-with-next
   9602                void  NetInfo_Paint(void)
   9603                {
   \                     NetInfo_Paint:
   \   00000000   F0B5               PUSH     {R4-R7,LR}
   \   00000002   85B0               SUB      SP,SP,#+20
   9604                    char txt[14];
   9605                    
   9606                    List_Paint(Speech[g_leng].Status,1,108,0,0,3," ",0 , 0, 0, 0, 0, 0,0); //(char name[7], char Rows, char RowWith, char Y, char FormStyle, char algin, char p1[12], char p2[12] , char p3[12] , char p4[12] , char p5[12] , char p6[12] , char p7[12] , char p8[12])                                                                                                                                     
   \   00000004   6B4E               LDR      R6,??NetInfo_Paint_0  ;; 0xa14
   \   00000006   6C4D               LDR      R5,??NetInfo_Paint_0+0x4  ;; g_leng
   \   00000008   6C4C               LDR      R4,??NetInfo_Paint_0+0x8  ;; Speech
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0800               MOVS     R0,R1
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   03B4               PUSH     {R0,R1}
   \   00000012   03B4               PUSH     {R0,R1}
   \   00000014   6AA0               ADR      R0,??NetInfo_Paint_0+0xC  ;; 0x20, 0x00, 0x00, 0x00
   \   00000016   03B4               PUSH     {R0,R1}
   \   00000018   0321               MOVS     R1,#+3
   \   0000001A   0020               MOVS     R0,#+0
   \   0000001C   03B4               PUSH     {R0,R1}
   \   0000001E   0300               MOVS     R3,R0
   \   00000020   6C22               MOVS     R2,#+108
   \   00000022   0121               MOVS     R1,#+1
   \   00000024   6748               LDR      R0,??NetInfo_Paint_0+0x10  ;; 0xa05
   \   00000026   2F68               LDR      R7,[R5, #+0]
   \   00000028   7743               MULS     R7,R6,R7
   \   0000002A   E719               ADDS     R7,R4,R7
   \   0000002C   3818               ADDS     R0,R7,R0
   \   0000002E   ........           BL       List_Paint
   \   00000032   0AB0               ADD      SP,SP,#+40
   9607          
   9608                    char pY=100;    //pozycja dolna
   9609                    Label(Speech[g_leng].Punkt_dostepu,0,1,pY,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000034   82B0               SUB      SP,SP,#+8
   \   00000036   0120               MOVS     R0,#+1
   \   00000038   0090               STR      R0,[SP, #+0]
   \   0000003A   7F21               MOVS     R1,#+127
   \   0000003C   03B4               PUSH     {R0,R1}
   \   0000003E   3E21               MOVS     R1,#+62
   \   00000040   0F20               MOVS     R0,#+15
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   6423               MOVS     R3,#+100
   \   00000046   0122               MOVS     R2,#+1
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   5F48               LDR      R0,??NetInfo_Paint_0+0x14  ;; 0x8d9
   \   0000004C   2F68               LDR      R7,[R5, #+0]
   \   0000004E   7743               MULS     R7,R6,R7
   \   00000050   E719               ADDS     R7,R4,R7
   \   00000052   3818               ADDS     R0,R7,R0
   \   00000054   ........           BL       Label
   \   00000058   06B0               ADD      SP,SP,#+24
   9610          
   9611                    Label(Speech[g_leng].Serwer,0,1,pY-20,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000005A   82B0               SUB      SP,SP,#+8
   \   0000005C   0120               MOVS     R0,#+1
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   7F21               MOVS     R1,#+127
   \   00000062   03B4               PUSH     {R0,R1}
   \   00000064   3E21               MOVS     R1,#+62
   \   00000066   0F20               MOVS     R0,#+15
   \   00000068   03B4               PUSH     {R0,R1}
   \   0000006A   5023               MOVS     R3,#+80
   \   0000006C   0122               MOVS     R2,#+1
   \   0000006E   0021               MOVS     R1,#+0
   \   00000070   5648               LDR      R0,??NetInfo_Paint_0+0x18  ;; 0x9c9
   \   00000072   2F68               LDR      R7,[R5, #+0]
   \   00000074   7743               MULS     R7,R6,R7
   \   00000076   E719               ADDS     R7,R4,R7
   \   00000078   3818               ADDS     R0,R7,R0
   \   0000007A   ........           BL       Label
   \   0000007E   06B0               ADD      SP,SP,#+24
   9612          
   9613                    Label(Speech[g_leng].Transfer,0,1,pY-45,15,62,1,127,1);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000080   82B0               SUB      SP,SP,#+8
   \   00000082   0120               MOVS     R0,#+1
   \   00000084   0090               STR      R0,[SP, #+0]
   \   00000086   7F21               MOVS     R1,#+127
   \   00000088   03B4               PUSH     {R0,R1}
   \   0000008A   3E21               MOVS     R1,#+62
   \   0000008C   0F20               MOVS     R0,#+15
   \   0000008E   03B4               PUSH     {R0,R1}
   \   00000090   3723               MOVS     R3,#+55
   \   00000092   0122               MOVS     R2,#+1
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   4E48               LDR      R0,??NetInfo_Paint_0+0x1C  ;; 0x9f6
   \   00000098   2F68               LDR      R7,[R5, #+0]
   \   0000009A   7743               MULS     R7,R6,R7
   \   0000009C   E719               ADDS     R7,R4,R7
   \   0000009E   3818               ADDS     R0,R7,R0
   \   000000A0   ........           BL       Label
   \   000000A4   06B0               ADD      SP,SP,#+24
   9614          
   9615                    
   9616                    CopyToCanvasPoint((char*)Siec, 4, pY-72, 56,24);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \   000000A6   82B0               SUB      SP,SP,#+8
   \   000000A8   1820               MOVS     R0,#+24
   \   000000AA   0090               STR      R0,[SP, #+0]
   \   000000AC   3823               MOVS     R3,#+56
   \   000000AE   1C22               MOVS     R2,#+28
   \   000000B0   0421               MOVS     R1,#+4
   \   000000B2   4848               LDR      R0,??NetInfo_Paint_0+0x20  ;; Siec
   \   000000B4   ........           BL       CopyToCanvasPoint
   \   000000B8   02B0               ADD      SP,SP,#+8
   9617                
   9618                    
   9619                    float fHQP;
   9620                    float TRANS;
   9621                    char dl;
   9622                    fHQP= NET.WiFi.HttpQueryPeriod;
   9623                    fHQP/=10; 
   9624                    TRANS= NET.Status.SendBytes+NET.Status.ResBytes;
   9625                    TRANS/=fHQP;     //transfer na sekundê w B
   9626                    TRANS*=2628; //transfer na rok w kB
   9627                    TRANS/=1000000; //transfer na rok w GB
   9628                    
   9629                    dl=FloToStr(TRANS*1.2, txt, 5);
   \   000000BA   474F               LDR      R7,??NetInfo_Paint_0+0x24  ;; NET
   \   000000BC   3800               MOVS     R0,R7
   \   000000BE   1630               ADDS     R0,R0,#+22
   \   000000C0   0522               MOVS     R2,#+5
   \   000000C2   6946               MOV      R1,SP
   \   000000C4   02B5               PUSH     {R1,LR}
   \   000000C6   0192               STR      R2,[SP, #+4]
   \   000000C8   0021               MOVS     R1,#+0
   \   000000CA   415E               LDRSH    R1,[R0, R1]
   \   000000CC   0222               MOVS     R2,#+2
   \   000000CE   805E               LDRSH    R0,[R0, R2]
   \   000000D0   0818               ADDS     R0,R1,R0
   \   000000D2   ........           BL       __aeabi_i2f
   \   000000D6   01B5               PUSH     {R0,LR}
   \   000000D8   E620               MOVS     R0,#+230
   \   000000DA   385E               LDRSH    R0,[R7, R0]
   \   000000DC   ........           BL       __aeabi_i2f
   \   000000E0   3E49               LDR      R1,??NetInfo_Paint_0+0x28  ;; 0x41200000
   \   000000E2   ........           BL       __aeabi_fdiv
   \   000000E6   0100               MOVS     R1,R0
   \   000000E8   0098               LDR      R0,[SP, #0]
   \   000000EA   02B0               ADD      SP,SP,#+8
   \   000000EC   ........           BL       __aeabi_fdiv
   \   000000F0   3B49               LDR      R1,??NetInfo_Paint_0+0x2C  ;; 0x45244000
   \   000000F2   ........           BL       __aeabi_fmul
   \   000000F6   3B49               LDR      R1,??NetInfo_Paint_0+0x30  ;; 0x49742400
   \   000000F8   ........           BL       __aeabi_fdiv
   \   000000FC   ........           BL       __aeabi_f2d
   \   00000100   0200               MOVS     R2,R0
   \   00000102   0B00               MOVS     R3,R1
   \   00000104   3848               LDR      R0,??NetInfo_Paint_0+0x34  ;; 0x33333333
   \   00000106   3949               LDR      R1,??NetInfo_Paint_0+0x38  ;; 0x3ff33333
   \   00000108   ........           BL       __aeabi_dmul
   \   0000010C   ........           BL       __aeabi_d2f
   \   00000110   019A               LDR      R2,[SP, #+4]
   \   00000112   0099               LDR      R1,[SP, #0]
   \   00000114   02B0               ADD      SP,SP,#+8
   \   00000116   ........           BL       FloToStr
   9630                    txt[dl++]='G';txt[dl++]='B';txt[dl++]='/';txt[dl++]=Speech[g_leng].Miesiac[0];txt[dl++]=Speech[g_leng].Miesiac[1];txt[dl++]=Speech[g_leng].Miesiac[2];txt[dl++]=Speech[g_leng].Miesiac[3]; txt[dl++]='.';   txt[dl]=0;
   \   0000011A   6946               MOV      R1,SP
   \   0000011C   0200               MOVS     R2,R0
   \   0000011E   4723               MOVS     R3,#+71
   \   00000120   8B54               STRB     R3,[R1, R2]
   \   00000122   401C               ADDS     R0,R0,#+1
   \   00000124   0006               LSLS     R0,R0,#+24
   \   00000126   000E               LSRS     R0,R0,#+24
   \   00000128   0200               MOVS     R2,R0
   \   0000012A   4223               MOVS     R3,#+66
   \   0000012C   8B54               STRB     R3,[R1, R2]
   \   0000012E   401C               ADDS     R0,R0,#+1
   \   00000130   0006               LSLS     R0,R0,#+24
   \   00000132   000E               LSRS     R0,R0,#+24
   \   00000134   0200               MOVS     R2,R0
   \   00000136   2F23               MOVS     R3,#+47
   \   00000138   8B54               STRB     R3,[R1, R2]
   \   0000013A   401C               ADDS     R0,R0,#+1
   \   0000013C   0006               LSLS     R0,R0,#+24
   \   0000013E   000E               LSRS     R0,R0,#+24
   \   00000140   2B4A               LDR      R2,??NetInfo_Paint_0+0x3C  ;; 0x582
   \   00000142   2B68               LDR      R3,[R5, #+0]
   \   00000144   7343               MULS     R3,R6,R3
   \   00000146   E318               ADDS     R3,R4,R3
   \   00000148   9A18               ADDS     R2,R3,R2
   \   0000014A   0300               MOVS     R3,R0
   \   0000014C   1478               LDRB     R4,[R2, #+0]
   \   0000014E   CC54               STRB     R4,[R1, R3]
   \   00000150   401C               ADDS     R0,R0,#+1
   \   00000152   0006               LSLS     R0,R0,#+24
   \   00000154   000E               LSRS     R0,R0,#+24
   \   00000156   0300               MOVS     R3,R0
   \   00000158   5478               LDRB     R4,[R2, #+1]
   \   0000015A   CC54               STRB     R4,[R1, R3]
   \   0000015C   401C               ADDS     R0,R0,#+1
   \   0000015E   0006               LSLS     R0,R0,#+24
   \   00000160   000E               LSRS     R0,R0,#+24
   \   00000162   0300               MOVS     R3,R0
   \   00000164   9478               LDRB     R4,[R2, #+2]
   \   00000166   CC54               STRB     R4,[R1, R3]
   \   00000168   401C               ADDS     R0,R0,#+1
   \   0000016A   0006               LSLS     R0,R0,#+24
   \   0000016C   000E               LSRS     R0,R0,#+24
   \   0000016E   0300               MOVS     R3,R0
   \   00000170   D278               LDRB     R2,[R2, #+3]
   \   00000172   CA54               STRB     R2,[R1, R3]
   \   00000174   401C               ADDS     R0,R0,#+1
   \   00000176   0006               LSLS     R0,R0,#+24
   \   00000178   000E               LSRS     R0,R0,#+24
   \   0000017A   0200               MOVS     R2,R0
   \   0000017C   2E23               MOVS     R3,#+46
   \   0000017E   8B54               STRB     R3,[R1, R2]
   \   00000180   401C               ADDS     R0,R0,#+1
   \   00000182   0006               LSLS     R0,R0,#+24
   \   00000184   000E               LSRS     R0,R0,#+24
   \   00000186   0200               MOVS     R2,R0
   \   00000188   0023               MOVS     R3,#+0
   \   0000018A   0B54               STRB     R3,[R1, R0]
   9631                    Label(txt,0,4, pY-88,dl,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   0000018C   82B0               SUB      SP,SP,#+8
   \   0000018E   1800               MOVS     R0,R3
   \   00000190   0090               STR      R0,[SP, #+0]
   \   00000192   7F21               MOVS     R1,#+127
   \   00000194   0120               MOVS     R0,#+1
   \   00000196   03B4               PUSH     {R0,R1}
   \   00000198   0F21               MOVS     R1,#+15
   \   0000019A   1000               MOVS     R0,R2
   \   0000019C   03B4               PUSH     {R0,R1}
   \   0000019E   0C23               MOVS     R3,#+12
   \   000001A0   0422               MOVS     R2,#+4
   \   000001A2   0021               MOVS     R1,#+0
   \   000001A4   06A8               ADD      R0,SP,#+24
   \   000001A6   ........           BL       Label
   \   000001AA   06B0               ADD      SP,SP,#+24
   9632                 
   9633                    
   9634                }//_______________________ Koniec funkcji  __________________________
   \   000001AC   05B0               ADD      SP,SP,#+20
   \   000001AE   F0BC               POP      {R4-R7}
   \   000001B0   01BC               POP      {R0}
   \   000001B2   0047               BX       R0               ;; return
   \                     ??NetInfo_Paint_0:
   \   000001B4   140A0000           DC32     0xa14
   \   000001B8   ........           DC32     g_leng
   \   000001BC   ........           DC32     Speech
   \   000001C0   20000000           DC8      0x20, 0x00, 0x00, 0x00
   \   000001C4   050A0000           DC32     0xa05
   \   000001C8   D9080000           DC32     0x8d9
   \   000001CC   C9090000           DC32     0x9c9
   \   000001D0   F6090000           DC32     0x9f6
   \   000001D4   ........           DC32     Siec
   \   000001D8   ........           DC32     NET
   \   000001DC   00002041           DC32     0x41200000
   \   000001E0   00402445           DC32     0x45244000
   \   000001E4   00247449           DC32     0x49742400
   \   000001E8   33333333           DC32     0x33333333
   \   000001EC   3333F33F           DC32     0x3ff33333
   \   000001F0   82050000           DC32     0x582
   9635              
   9636                
   9637             //*-----------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
   9638                void  NetInfo_Event(void)
   9639                {
   \                     NetInfo_Event:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   9640                   if (List_Event(X_up, Y_up, X_down, Y_down, 0 , 15, 0,0)<0)
   \   00000002   194D               LDR      R5,??NetInfo_Event_0  ;; X_down
   \   00000004   194C               LDR      R4,??NetInfo_Event_0+0x4  ;; Y_down
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   0800               MOVS     R0,R1
   \   0000000A   03B4               PUSH     {R0,R1}
   \   0000000C   0F21               MOVS     R1,#+15
   \   0000000E   03B4               PUSH     {R0,R1}
   \   00000010   235E               LDRSH    R3,[R4, R0]
   \   00000012   2A5E               LDRSH    R2,[R5, R0]
   \   00000014   1648               LDR      R0,??NetInfo_Event_0+0x8  ;; Y_up
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   415E               LDRSH    R1,[R0, R1]
   \   0000001A   1648               LDR      R0,??NetInfo_Event_0+0xC  ;; X_up
   \   0000001C   0026               MOVS     R6,#+0
   \   0000001E   805F               LDRSH    R0,[R0, R6]
   \   00000020   ........           BL       List_Event
   \   00000024   04B0               ADD      SP,SP,#+16
   \   00000026   0028               CMP      R0,#+0
   \   00000028   0BD5               BPL      ??NetInfo_Event_1
   9641                  {     
   9642                    TransferInfo=0;         
   \   0000002A   1348               LDR      R0,??NetInfo_Event_0+0x10  ;; TransferInfo
   \   0000002C   3100               MOVS     R1,R6
   \   0000002E   0170               STRB     R1,[R0, #+0]
   9643                    MenuLevel=(MenuLevel/10);
   \   00000030   124C               LDR      R4,??NetInfo_Event_0+0x14  ;; TextToChangeLength
   \   00000032   A06C               LDR      R0,[R4, #+72]
   \   00000034   0A21               MOVS     R1,#+10
   \   00000036   ........           BL       __aeabi_idivmod
   \   0000003A   A064               STR      R0,[R4, #+72]
   9644                    MenuPaint();
   \   0000003C   ........           BL       MenuPaint
   \   00000040   0EE0               B        ??NetInfo_Event_2
   9645                  }else{
   9646                      if ((X_down>1) && (X_down<63) && (Y_down>10) && (Y_down<60))
   \                     ??NetInfo_Event_1:
   \   00000042   0020               MOVS     R0,#+0
   \   00000044   285E               LDRSH    R0,[R5, R0]
   \   00000046   0228               CMP      R0,#+2
   \   00000048   0ADB               BLT      ??NetInfo_Event_2
   \   0000004A   3F28               CMP      R0,#+63
   \   0000004C   08DA               BGE      ??NetInfo_Event_2
   \   0000004E   0020               MOVS     R0,#+0
   \   00000050   205E               LDRSH    R0,[R4, R0]
   \   00000052   0B28               CMP      R0,#+11
   \   00000054   04DB               BLT      ??NetInfo_Event_2
   \   00000056   3C28               CMP      R0,#+60
   \   00000058   02DA               BGE      ??NetInfo_Event_2
   9647                      {
   9648                         TransferInfo=1;
   \   0000005A   0748               LDR      R0,??NetInfo_Event_0+0x10  ;; TransferInfo
   \   0000005C   0121               MOVS     R1,#+1
   \   0000005E   0170               STRB     R1,[R0, #+0]
   9649                      }
   9650                    
   9651                  }
   9652              
   9653                   
   9654                    
   9655                
   9656                }//_______________________________________________________________________
   \                     ??NetInfo_Event_2:
   \   00000060   70BC               POP      {R4-R6}
   \   00000062   01BC               POP      {R0}
   \   00000064   0047               BX       R0               ;; return
   \   00000066   C046               Nop      
   \                     ??NetInfo_Event_0:
   \   00000068   ........           DC32     X_down
   \   0000006C   ........           DC32     Y_down
   \   00000070   ........           DC32     Y_up
   \   00000074   ........           DC32     X_up
   \   00000078   ........           DC32     TransferInfo
   \   0000007C   ........           DC32     TextToChangeLength
   9657          
   9658                

   \                                 In section Debug.txt, align 4, keep-with-next
   9659                void  NetInfo_Refresh(void)
   9660                {
   \                     NetInfo_Refresh:
   \   00000000   F7B5               PUSH     {R0-R2,R4-R7,LR}
   9661                  //static char Dziel;
   9662                    char txt[6];
   9663                  //if (Dziel<5)
   9664                  //{
   9665                  
   9666                    char pY=100;    //pozycja dolna
   9667                    
   9668                    if (NET.Status.AccesPointAssociate==CONNECTED)
   \   00000002   724C               LDR      R4,??NetInfo_Refresh_0  ;; NET
   \   00000004   2078               LDRB     R0,[R4, #+0]
   \   00000006   0328               CMP      R0,#+3
   \   00000008   82B0               SUB      SP,SP,#+8
   \   0000000A   16D1               BNE      ??NetInfo_Refresh_1
   9669                    {
   9670                      Label(Speech[g_leng].Polaczony,0,6,pY-10,15,53,1,127,0); 
   \   0000000C   0020               MOVS     R0,#+0
   \   0000000E   0090               STR      R0,[SP, #+0]
   \   00000010   7F21               MOVS     R1,#+127
   \   00000012   0120               MOVS     R0,#+1
   \   00000014   03B4               PUSH     {R0,R1}
   \   00000016   3521               MOVS     R1,#+53
   \   00000018   0F20               MOVS     R0,#+15
   \   0000001A   03B4               PUSH     {R0,R1}
   \   0000001C   5A23               MOVS     R3,#+90
   \   0000001E   0622               MOVS     R2,#+6
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   6B48               LDR      R0,??NetInfo_Refresh_0+0x4  ;; 0x9d8
   \   00000024   6B4D               LDR      R5,??NetInfo_Refresh_0+0x8  ;; g_leng
   \   00000026   2D68               LDR      R5,[R5, #+0]
   \   00000028   6B4E               LDR      R6,??NetInfo_Refresh_0+0xC  ;; 0xa14
   \   0000002A   7543               MULS     R5,R6,R5
   \   0000002C   6B4E               LDR      R6,??NetInfo_Refresh_0+0x10  ;; Speech
   \   0000002E   7519               ADDS     R5,R6,R5
   \   00000030   2818               ADDS     R0,R5,R0
   \   00000032   ........           BL       Label
   \   00000036   06B0               ADD      SP,SP,#+24
   \   00000038   15E0               B        ??NetInfo_Refresh_2
   9671                    }else{
   9672                      Label(Speech[g_leng].Niepolaczony,0,6,pY-10,15,53,1,127,0); 
   \                     ??NetInfo_Refresh_1:
   \   0000003A   0020               MOVS     R0,#+0
   \   0000003C   0090               STR      R0,[SP, #+0]
   \   0000003E   7F21               MOVS     R1,#+127
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   03B4               PUSH     {R0,R1}
   \   00000044   3521               MOVS     R1,#+53
   \   00000046   0F20               MOVS     R0,#+15
   \   00000048   03B4               PUSH     {R0,R1}
   \   0000004A   5A23               MOVS     R3,#+90
   \   0000004C   0622               MOVS     R2,#+6
   \   0000004E   0021               MOVS     R1,#+0
   \   00000050   6348               LDR      R0,??NetInfo_Refresh_0+0x14  ;; 0x9e7
   \   00000052   604D               LDR      R5,??NetInfo_Refresh_0+0x8  ;; g_leng
   \   00000054   2D68               LDR      R5,[R5, #+0]
   \   00000056   604E               LDR      R6,??NetInfo_Refresh_0+0xC  ;; 0xa14
   \   00000058   7543               MULS     R5,R6,R5
   \   0000005A   604E               LDR      R6,??NetInfo_Refresh_0+0x10  ;; Speech
   \   0000005C   7519               ADDS     R5,R6,R5
   \   0000005E   2818               ADDS     R0,R5,R0
   \   00000060   ........           BL       Label
   \   00000064   06B0               ADD      SP,SP,#+24
   9673                    }
   9674                    
   9675                    if (NET.Status.HostLink==CONNECTED)
   \                     ??NetInfo_Refresh_2:
   \   00000066   6078               LDRB     R0,[R4, #+1]
   \   00000068   0328               CMP      R0,#+3
   \   0000006A   82B0               SUB      SP,SP,#+8
   \   0000006C   16D1               BNE      ??NetInfo_Refresh_3
   9676                    {   
   9677                      Label(Speech[g_leng].Polaczony,0,6,pY-30,15,53,1,127,0); 
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   0090               STR      R0,[SP, #+0]
   \   00000072   7F21               MOVS     R1,#+127
   \   00000074   0120               MOVS     R0,#+1
   \   00000076   03B4               PUSH     {R0,R1}
   \   00000078   3521               MOVS     R1,#+53
   \   0000007A   0F20               MOVS     R0,#+15
   \   0000007C   03B4               PUSH     {R0,R1}
   \   0000007E   4623               MOVS     R3,#+70
   \   00000080   0622               MOVS     R2,#+6
   \   00000082   0021               MOVS     R1,#+0
   \   00000084   5248               LDR      R0,??NetInfo_Refresh_0+0x4  ;; 0x9d8
   \   00000086   534D               LDR      R5,??NetInfo_Refresh_0+0x8  ;; g_leng
   \   00000088   2D68               LDR      R5,[R5, #+0]
   \   0000008A   534E               LDR      R6,??NetInfo_Refresh_0+0xC  ;; 0xa14
   \   0000008C   7543               MULS     R5,R6,R5
   \   0000008E   534E               LDR      R6,??NetInfo_Refresh_0+0x10  ;; Speech
   \   00000090   7519               ADDS     R5,R6,R5
   \   00000092   2818               ADDS     R0,R5,R0
   \   00000094   ........           BL       Label
   \   00000098   06B0               ADD      SP,SP,#+24
   \   0000009A   15E0               B        ??NetInfo_Refresh_4
   9678                    }else{
   9679                      Label(Speech[g_leng].Niepolaczony,0,6,pY-30,15,53,1,127,0); 
   \                     ??NetInfo_Refresh_3:
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   7F21               MOVS     R1,#+127
   \   000000A2   0120               MOVS     R0,#+1
   \   000000A4   03B4               PUSH     {R0,R1}
   \   000000A6   3521               MOVS     R1,#+53
   \   000000A8   0F20               MOVS     R0,#+15
   \   000000AA   03B4               PUSH     {R0,R1}
   \   000000AC   4623               MOVS     R3,#+70
   \   000000AE   0622               MOVS     R2,#+6
   \   000000B0   0021               MOVS     R1,#+0
   \   000000B2   4B48               LDR      R0,??NetInfo_Refresh_0+0x14  ;; 0x9e7
   \   000000B4   474D               LDR      R5,??NetInfo_Refresh_0+0x8  ;; g_leng
   \   000000B6   2D68               LDR      R5,[R5, #+0]
   \   000000B8   474E               LDR      R6,??NetInfo_Refresh_0+0xC  ;; 0xa14
   \   000000BA   7543               MULS     R5,R6,R5
   \   000000BC   474E               LDR      R6,??NetInfo_Refresh_0+0x10  ;; Speech
   \   000000BE   7519               ADDS     R5,R6,R5
   \   000000C0   2818               ADDS     R0,R5,R0
   \   000000C2   ........           BL       Label
   \   000000C6   06B0               ADD      SP,SP,#+24
   9680                    }
   9681                    
   9682                    CleanCanvasArea(20, pY-74,15,27,0);//(char X, char Y, char X_Lenght, char Y_Lenght, char Colour)
   \                     ??NetInfo_Refresh_4:
   \   000000C8   82B0               SUB      SP,SP,#+8
   \   000000CA   0020               MOVS     R0,#+0
   \   000000CC   0090               STR      R0,[SP, #+0]
   \   000000CE   1B23               MOVS     R3,#+27
   \   000000D0   0F22               MOVS     R2,#+15
   \   000000D2   1A21               MOVS     R1,#+26
   \   000000D4   1420               MOVS     R0,#+20
   \   000000D6   ........           BL       CleanCanvasArea
   \   000000DA   02B0               ADD      SP,SP,#+8
   9683                    
   9684                    
   9685                            
   9686                    if ((NET.Status.SendPacketTime+250>g_counter) || ((NET.Status.ResPacketTime<NET.Status.SendPacketTime) && (NET.Status.SendPacketTime+12000>g_counter))) 
   \   000000DC   2000               MOVS     R0,R4
   \   000000DE   2030               ADDS     R0,R0,#+32
   \   000000E0   03C8               LDM      R0!,{R0,R1}
   \   000000E2   404D               LDR      R5,??NetInfo_Refresh_0+0x18  ;; g_counter
   \   000000E4   C0CD               LDM      R5!,{R6,R7}
   \   000000E6   083D               SUBS     R5,R5,#+8
   \   000000E8   FA22               MOVS     R2,#+250
   \   000000EA   0023               MOVS     R3,#+0
   \   000000EC   1218               ADDS     R2,R2,R0
   \   000000EE   4B41               ADCS     R3,R3,R1
   \   000000F0   9F42               CMP      R7,R3
   \   000000F2   13D3               BCC      ??NetInfo_Refresh_5
   \   000000F4   01D8               BHI      ??NetInfo_Refresh_6
   \   000000F6   9642               CMP      R6,R2
   \   000000F8   10D3               BCC      ??NetInfo_Refresh_5
   \                     ??NetInfo_Refresh_6:
   \   000000FA   2200               MOVS     R2,R4
   \   000000FC   2832               ADDS     R2,R2,#+40
   \   000000FE   0CCA               LDM      R2!,{R2,R3}
   \   00000100   8B42               CMP      R3,R1
   \   00000102   30D8               BHI      ??NetInfo_Refresh_7
   \   00000104   01D3               BCC      ??NetInfo_Refresh_8
   \   00000106   8242               CMP      R2,R0
   \   00000108   2DD2               BCS      ??NetInfo_Refresh_7
   \                     ??NetInfo_Refresh_8:
   \   0000010A   374A               LDR      R2,??NetInfo_Refresh_0+0x1C  ;; 0x2ee0
   \   0000010C   0023               MOVS     R3,#+0
   \   0000010E   1218               ADDS     R2,R2,R0
   \   00000110   4B41               ADCS     R3,R3,R1
   \   00000112   9F42               CMP      R7,R3
   \   00000114   27D8               BHI      ??NetInfo_Refresh_7
   \   00000116   01D3               BCC      ??NetInfo_Refresh_5
   \   00000118   9642               CMP      R6,R2
   \   0000011A   24D2               BCS      ??NetInfo_Refresh_7
   9687                    {
   9688                      CopyToCanvasPoint((char*)StrzalkaPrawo,21, pY-60, 11,5);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??NetInfo_Refresh_5:
   \   0000011C   82B0               SUB      SP,SP,#+8
   \   0000011E   0520               MOVS     R0,#+5
   \   00000120   0090               STR      R0,[SP, #+0]
   \   00000122   0B23               MOVS     R3,#+11
   \   00000124   2822               MOVS     R2,#+40
   \   00000126   1521               MOVS     R1,#+21
   \   00000128   3048               LDR      R0,??NetInfo_Refresh_0+0x20  ;; StrzalkaPrawo
   \   0000012A   ........           BL       CopyToCanvasPoint
   \   0000012E   02B0               ADD      SP,SP,#+8
   9689                      if (TransferInfo)
   \   00000130   2F48               LDR      R0,??NetInfo_Refresh_0+0x24  ;; TransferInfo
   \   00000132   0078               LDRB     R0,[R0, #+0]
   \   00000134   0028               CMP      R0,#+0
   \   00000136   16D0               BEQ      ??NetInfo_Refresh_7
   9690                      {
   9691                        sprintf(txt, "%d",  NET.Status.SendBytes, 'B');
                               ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   00000138   4223               MOVS     R3,#+66
   \   0000013A   1620               MOVS     R0,#+22
   \   0000013C   225E               LDRSH    R2,[R4, R0]
   \   0000013E   2DA1               ADR      R1,??NetInfo_Refresh_0+0x28  ;; 0x25, 0x64, 0x00, 0x00
   \   00000140   6846               MOV      R0,SP
   \   00000142   ........           BL       sprintf
   9692                        Label(txt,0,20, pY-56,15,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   00000146   82B0               SUB      SP,SP,#+8
   \   00000148   0020               MOVS     R0,#+0
   \   0000014A   0090               STR      R0,[SP, #+0]
   \   0000014C   7F21               MOVS     R1,#+127
   \   0000014E   0120               MOVS     R0,#+1
   \   00000150   03B4               PUSH     {R0,R1}
   \   00000152   0F21               MOVS     R1,#+15
   \   00000154   0800               MOVS     R0,R1
   \   00000156   03B4               PUSH     {R0,R1}
   \   00000158   2C23               MOVS     R3,#+44
   \   0000015A   1422               MOVS     R2,#+20
   \   0000015C   0021               MOVS     R1,#+0
   \   0000015E   06A8               ADD      R0,SP,#+24
   \   00000160   ........           BL       Label
   \   00000164   06B0               ADD      SP,SP,#+24
   9693                      }
   9694                    }
   9695                    if (NET.Status.ResPacketTime+250>g_counter) 
   \                     ??NetInfo_Refresh_7:
   \   00000166   03CD               LDM      R5!,{R0,R1}
   \   00000168   2200               MOVS     R2,R4
   \   0000016A   2832               ADDS     R2,R2,#+40
   \   0000016C   0CCA               LDM      R2!,{R2,R3}
   \   0000016E   0025               MOVS     R5,#+0
   \   00000170   FA32               ADDS     R2,R2,#+250
   \   00000172   6B41               ADCS     R3,R3,R5
   \   00000174   9942               CMP      R1,R3
   \   00000176   26D8               BHI      ??NetInfo_Refresh_9
   \   00000178   01D3               BCC      ??NetInfo_Refresh_10
   \   0000017A   9042               CMP      R0,R2
   \   0000017C   23D2               BCS      ??NetInfo_Refresh_9
   9696                    {
   9697                      CopyToCanvasPoint((char*)StrzalkaLewo, 21, pY-65, 11,5);  //void CopyToCanvasPoint(char *Tabela, char X, char Y, char X_Lenght, char Y_Lenght);           
   \                     ??NetInfo_Refresh_10:
   \   0000017E   82B0               SUB      SP,SP,#+8
   \   00000180   0520               MOVS     R0,#+5
   \   00000182   0090               STR      R0,[SP, #+0]
   \   00000184   0B23               MOVS     R3,#+11
   \   00000186   2322               MOVS     R2,#+35
   \   00000188   1521               MOVS     R1,#+21
   \   0000018A   1B48               LDR      R0,??NetInfo_Refresh_0+0x2C  ;; StrzalkaPrawo + 12
   \   0000018C   ........           BL       CopyToCanvasPoint
   \   00000190   02B0               ADD      SP,SP,#+8
   9698                      if (TransferInfo)
   \   00000192   1748               LDR      R0,??NetInfo_Refresh_0+0x24  ;; TransferInfo
   \   00000194   0078               LDRB     R0,[R0, #+0]
   \   00000196   0028               CMP      R0,#+0
   \   00000198   15D0               BEQ      ??NetInfo_Refresh_9
   9699                      {
   9700                      sprintf(txt, "%d",  NET.Status.ResBytes);
                             ^
Warning[Pe223]: function "sprintf" declared implicitly
   \   0000019A   1820               MOVS     R0,#+24
   \   0000019C   225E               LDRSH    R2,[R4, R0]
   \   0000019E   15A1               ADR      R1,??NetInfo_Refresh_0+0x28  ;; 0x25, 0x64, 0x00, 0x00
   \   000001A0   6846               MOV      R0,SP
   \   000001A2   ........           BL       sprintf
   9701                      Label(txt,0,20, pY-74,15,15,1,127,0);  //(char *Vstring, char alig, char X, int Y, char maxChar, char clean, char minY, char maxY, char negatyw) 
   \   000001A6   82B0               SUB      SP,SP,#+8
   \   000001A8   2800               MOVS     R0,R5
   \   000001AA   0090               STR      R0,[SP, #+0]
   \   000001AC   7F21               MOVS     R1,#+127
   \   000001AE   0120               MOVS     R0,#+1
   \   000001B0   03B4               PUSH     {R0,R1}
   \   000001B2   0F21               MOVS     R1,#+15
   \   000001B4   0800               MOVS     R0,R1
   \   000001B6   03B4               PUSH     {R0,R1}
   \   000001B8   1A23               MOVS     R3,#+26
   \   000001BA   1422               MOVS     R2,#+20
   \   000001BC   2900               MOVS     R1,R5
   \   000001BE   06A8               ADD      R0,SP,#+24
   \   000001C0   ........           BL       Label
   \   000001C4   06B0               ADD      SP,SP,#+24
   9702                      }
   9703                    }
   9704                    
   9705                    
   9706                    
   9707                }//_______________________ Koniec funkcji MainSide_Paint __________________________
   \                     ??NetInfo_Refresh_9:
   \   000001C6   FEBC               POP      {R1-R7}
   \   000001C8   01BC               POP      {R0}
   \   000001CA   0047               BX       R0               ;; return
   \                     ??NetInfo_Refresh_0:
   \   000001CC   ........           DC32     NET
   \   000001D0   D8090000           DC32     0x9d8
   \   000001D4   ........           DC32     g_leng
   \   000001D8   140A0000           DC32     0xa14
   \   000001DC   ........           DC32     Speech
   \   000001E0   E7090000           DC32     0x9e7
   \   000001E4   ........           DC32     g_counter
   \   000001E8   E02E0000           DC32     0x2ee0
   \   000001EC   ........           DC32     StrzalkaPrawo
   \   000001F0   ........           DC32     TransferInfo
   \   000001F4   25640000           DC8      0x25, 0x64, 0x00, 0x00
   \   000001F8   ........           DC32     StrzalkaPrawo + 12

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   3E840100           DC32     0x1843e

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   15080000           DC32     0x815

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   E60A0000           DC32     0xae6

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   DF510F00           DC32     0xf51df

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   B4C30000           DC32     0xc3b4

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   71070000           DC32     0x771

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     `?<Constant "Info ">`

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   672B0000           DC32     0x2b67

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     g_leng

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   140A0000           DC32     0xa14

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     Speech

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     `?<Constant "Info ">` + 28

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   98BB0000           DC32     0xbb98

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   ........           DC32     gProg

   \                                 In section .rodata, align 4
   \   00000000   00                 DC8 ""
   \   00000001   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Info ">`:
   \   00000000   496E666F2000       DC8 "Info "
   \   00000006   0000               DC8 0, 0
   \   00000008   4D61783D00         DC8 "Max="
   \   0000000D   000000             DC8 0, 0, 0
   \   00000010   2B2F2D203330       DC8 "+/- 3000 "
   \              30302000    
   \   0000001A   0000               DC8 0, 0
   \   0000001C   526573746172       DC8 "Restart"
   \              7400        
   \   00000024   4D454E5500         DC8 "MENU"
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   50726F677261       DC8 "Program "
   \              6D2000      
   \   00000035   000000             DC8 0, 0, 0
   \   00000038   4D6F64656C3A       DC8 "Model: "
   \              2000        
   \   00000040   4E6F64652049       DC8 "Node ID: "
   \              443A2000    
   \   0000004A   0000               DC8 0, 0
   \   0000004C   5379732E2076       DC8 "Sys. version: "
   \              657273696F6E
   \              3A2000      
   \   0000005B   00                 DC8 0
   \   0000005C   5472616E732E       DC8 "Trans. period: "
   \              20706572696F
   \              643A2000    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Checking Wi-Fi">`:
   \   00000000   436865636B69       DC8 "Checking Wi-Fi"
   \              6E672057692D
   \              466900      
   \   0000000F   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2000               DC8 " "
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant " INFO ">`:
   \   00000000   20494E464F20       DC8 " INFO "
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244`:
   \   00000000   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   00000011   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   0000001C   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   0000002B   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \   00000000   4F6E00             DC8 "On"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   4F666600           DC8 "Off"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   0000000C   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   0000001D   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000028   0000E0F8987C       DC8 0, 0, 224, 248, 152, 124, 180, 220, 56, 248, 224, 0, 0, 0, 0, 0, 3
   \              B4DC38F8E000
   \              0000000003  
   \   00000039   030705070303       DC8 3, 7, 5, 7, 3, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000044   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   00000053   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \                     `?<Constant {{128, 192, 192, 128, 128, 224, 128`:
   \   00000000   80C0C08080E0       DC8 128, 192, 192, 128, 128, 224, 128, 224, 128, 224, 128, 128, 128
   \              80E080E08080
   \              80          
   \   0000000D   808080800003       DC8 128, 128, 128, 128, 0, 3, 7, 7, 3, 3, 3, 3, 3, 2, 2, 2, 14, 2, 14
   \              070703030303
   \              030202020E02
   \              0E          
   \   00000020   020E02010000       DC8 2, 14, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000036   0000               DC8 0, 0
   \   00000038   4175746F00         DC8 "Auto"
   \   0000003D   000000             DC8 0, 0, 0
   \   00000040   4175746F206F       DC8 "Auto off"
   \              666600      
   \   00000049   000000             DC8 0, 0, 0
   \   0000004C   4175746F206F       DC8 "Auto on"
   \              6E00        

   \                                 In section .rodata, align 4
   \                     `?<Constant {130, 0}>`:
   \   00000000   82000000           DC8 130, 0, 0, 0
   \   00000004   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \   00000000   2D00               DC8 "-"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2B00               DC8 "+"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {130, 0}>_1`:
   \   00000000   82000000           DC8 130, 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3A00               DC8 ":"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 240, 252, 127, 143, 243, 251, `:
   \   00000000   00F0FC7F8FF3       DC8 0, 240, 252, 127, 143, 243, 251, 251, 251, 227, 131, 3, 7, 15, 14
   \              FBFBFBE38303
   \              070F0E      
   \   0000000F   1E3C78F0E0C0       DC8 30, 60, 120, 240, 224, 192, 128, 0, 0, 0, 128, 192, 224, 240, 112
   \              8000000080C0
   \              E0F070      
   \   0000001E   389CCEEF7703       DC8 56, 156, 206, 239, 119, 3, 3, 3, 227, 255, 255, 31, 7, 31, 254, 252
   \              0303E3FFFF1F
   \              071FFEFC    
   \   0000002E   FCFFFF00FFFF       DC8 252, 255, 255, 0, 255, 255, 255, 255, 255, 255, 255, 254, 248, 48
   \              FFFFFFFFFFFE
   \              F830        
   \   0000003C   300000000001       DC8 48, 0, 0, 0, 0, 1, 3, 39, 183, 182, 183, 183, 123, 253, 254, 254
   \              0327B7B6B7B7
   \              7BFDFEFE    
   \   0000004C   FFFFFF010000       DC8 255, 255, 255, 1, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 255, 255, 1, 63
   \              0000FFFF0000
   \              0000FFFF013F
   \   0000005E   FFF8C73F7F7F       DC8 255, 248, 199, 63, 127, 127, 127, 31, 7, 1, 128, 128, 192, 224, 240
   \              7F1F07018080
   \              C0E0F0      
   \   0000006D   783C1E0F0703       DC8 120, 60, 30, 15, 7, 3, 3, 3, 7, 15, 30, 61, 123, 247, 239, 223, 158
   \              0303070F1E3D
   \              7BF7EFDF9E  
   \   0000007E   B00000001FFF       DC8 176, 0, 0, 0, 31, 255, 252, 192, 128, 224, 255, 255, 0, 0, 1, 3, 3
   \              FCC080E0FFFF
   \              0000010303  
   \   0000008F   070707070707       DC8 7, 7, 7, 7, 7, 7, 3, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              030303010100
   \              000000000000
   \              0000000000  
   \   000000A6   000000000103       DC8 0, 0, 0, 0, 1, 3, 3, 3, 3, 7, 7, 7, 7, 7, 7, 3, 1, 0
   \              030303070707
   \              070707030100

   \                                 In section .rodata, align 4
   \   00000000   5800               DC8 "X"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \   00000000   4300               DC8 "C"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   4500               DC8 "E"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "060480">`:
   \   00000000   303630343830       DC8 "060480"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   7300               DC8 "s"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3E2000             DC8 "> "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3C2000             DC8 "< "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   2E00               DC8 "."
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3000               DC8 "0"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   4F6B2000           DC8 "Ok "

   \                                 In section .rodata, align 4
   \   00000000   432000             DC8 "C "
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3F00               DC8 "?"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Alarm">`:
   \   00000000   416C61726D00       DC8 "Alarm"
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4E722E3A0000       DC8 78, 114, 46, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \   00000000   56617200           DC8 "Var"

   \                                 In section .rodata, align 4
   \   00000000   2D316800           DC8 "-1h"

   \                                 In section .rodata, align 4
   \   00000000   4F6E2000           DC8 "On "

   \                                 In section .rodata, align 4
   \                     `?<Constant {129, 0}>_1`:
   \   00000000   81000000           DC8 129, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant {78, 114, 58, 0, 0}>`:
   \   00000000   4E723A000000       DC8 78, 114, 58, 0, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4
   \   00000000   3C00               DC8 "<"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   3E00               DC8 ">"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   2E2E2E00           DC8 "..."

   \                                 In section .rodata, align 4
   \   00000000   3C3E00             DC8 "<>"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Program stop ">`:
   \   00000000   50726F677261       DC8 "Program stop "
   \              6D2073746F70
   \              2000        
   \   0000000E   0000               DC8 0, 0
   \   00000010   50726F677261       DC8 "Program start "
   \              6D2073746172
   \              742000      
   \   0000001F   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4D6173746572       DC8 "Master/Slave "
   \              2F536C617665
   \              2000        
   \   0000001A   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4A657A796B00       DC8 "Jezyk"
   \   00000012   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000

   \                                 In section .rodata, align 4
   \                     `?<Constant "060480">_1`:
   \   00000000   303630343830       DC8 "060480"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "------------">`:
   \   00000000   2D2D2D2D2D2D       DC8 "------------"
   \              2D2D2D2D2D2D
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 31, 59, 90, 120, 151, 181, 212,`:
   \   00000000   000000001F00       DC32 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334
   \              00003B000000
   \              5A0000007800
   \              000097000000
   \              B5000000D400
   \              0000F3000000
   \              110100003001
   \              00004E010000

   \                                 In section .rodata, align 4
   \                     `?<Constant {30}>`:
   \   00000000   1E000000           DC8 30, 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "On/off">`:
   \   00000000   4F6E2F6F6666       DC8 "On/off"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3A303000           DC8 ":00"

   \                                 In section .rodata, align 4
   \                     `?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8`:
   \   00000000   0004040A0B10       DC8 0, 4, 4, 10, 11, 16, 16, 32, 64, 0, 0, 0
   \              102040000000
   \   0000000C   4D6F646500         DC8 "Mode"
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   4D6173746572       DC8 "Master "
   \              2000        
   \   0000001C   536C61766520       DC8 "Slave "
   \              00          
   \   00000023   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   4F4B00             DC8 "OK"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   256400             DC8 "%d"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Node ">`:
   \   00000000   4E6F64652000       DC8 "Node "
   \   00000006   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   49642000           DC8 "Id "

   \                                 In section .rodata, align 4
   \                     `?<Constant " ID ">`:
   \   00000000   2049442000         DC8 " ID "
   \   00000005   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \   00000000   543100             DC8 "T1"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   543200             DC8 "T2"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   3600               DC8 "6"
   \   00000002   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   313200             DC8 "12"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   313800             DC8 "18"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   323300             DC8 "23"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2`:
   \   00000000   0000E018E8F4       DC8 0, 0, 224, 24, 232, 244, 244, 244, 232, 24, 224, 0, 0, 0, 0, 0, 3
   \              F4F4E818E000
   \              0000000003  
   \   00000011   020505050203       DC8 2, 5, 5, 5, 2, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   0000001C   0000E0F8987C       DC8 0, 0, 224, 248, 152, 124, 180, 220, 56, 248, 224, 0, 0, 0, 0, 0, 3
   \              B4DC38F8E000
   \              0000000003  
   \   0000002D   030705070303       DC8 3, 7, 5, 7, 3, 3, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000038   F01CE6FAFBFD       DC8 240, 28, 230, 250, 251, 253, 253, 253, 251, 250, 230, 28, 240, 1, 7
   \              FDFDFBFAE61C
   \              F00107      
   \   00000047   0C0B1B171717       DC8 12, 11, 27, 23, 23, 23, 27, 11, 12, 7, 1, 0, 0
   \              1B0B0C070100
   \              00          

   \                                 In section .rodata, align 4
   \   00000000   444900             DC8 "DI"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \   00000000   444F00             DC8 "DO"
   \   00000003   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Host">`:
   \   00000000   486F737400         DC8 "Host"
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   2E2E2E2E2E2E       DC8 "................................."
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E00    
   \   0000002A   0000               DC8 0, 0
   \   0000002C   2E2E2E2E2E2E       DC8 ".................................."
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E2E2E
   \              2E2E2E2E00  
   \   0000004F   00                 DC8 0
   \   00000050   5A6C79206164       DC8 "Zly adres IP"
   \              726573204950
   \              00          
   \   0000005D   000000             DC8 0, 0, 0
   \   00000060   57726F6E6720       DC8 "Wrong IP adress"
   \              495020616472
   \              65737300    
   \   00000070   5A6C79206164       DC8 "Zly adres maski "
   \              726573206D61
   \              736B692000  
   \   00000081   000000             DC8 0, 0, 0
   \   00000084   57726F6E6720       DC8 "Wrong mask adress"
   \              6D61736B2061
   \              647265737300
   \   00000096   0000               DC8 0, 0
   \   00000098   5A6C79206164       DC8 "Zly adres bramy "
   \              726573206272
   \              616D792000  
   \   000000A9   000000             DC8 0, 0, 0
   \   000000AC   57726F6E6720       DC8 "Wrong gateway adress"
   \              676174657761
   \              792061647265
   \              737300      
   \   000000C1   000000             DC8 0, 0, 0
   \   000000C4   49502F544350       DC8 "IP/TCP"
   \              00          
   \   000000CB   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "TCP/IP">`:
   \   00000000   5443502F4950       DC8 "TCP/IP"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Not connected">`:
   \   00000000   4E6F7420636F       DC8 "Not connected"
   \              6E6E65637465
   \              6400        
   \   0000000E   0000               DC8 0, 0
   \   00000010   436F6E6E6563       DC8 "Connecting"
   \              74696E6700  
   \   0000001B   00                 DC8 0
   \   0000001C   436F6E6E6563       DC8 "Connecting ."
   \              74696E67202E
   \              00          
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   436F6E6E6563       DC8 "Connecting .."
   \              74696E67202E
   \              2E00        
   \   0000003A   0000               DC8 0, 0
   \   0000003C   436F6E6E6563       DC8 "Connecting ..."
   \              74696E67202E
   \              2E2E00      
   \   0000004B   00                 DC8 0
   \   0000004C   436F6E6E6563       DC8 "Connected"
   \              74656400    
   \   00000056   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Przyklad:\\n   a.bbb.pl...">`:
   \   00000000   50727A796B6C       DC8 50H, 72H, 7AH, 79H, 6BH, 6CH, 61H, 64H
   \              6164        
   \   00000008   3A0A20202061       DC8 3AH, 0AH, 20H, 20H, 20H, 61H, 2EH, 62H
   \              2E62        
   \   00000010   62622E706C2F       DC8 62H, 62H, 2EH, 70H, 6CH, 2FH, 63H, 63H
   \              6363        
   \   00000018   0A0A20446F6D       DC8 0AH, 0AH, 20H, 44H, 6FH, 6DH, 65H, 6EH
   \              656E        
   \   00000020   613A20626262       DC8 61H, 3AH, 20H, 62H, 62H, 62H, 2EH, 70H
   \              2E70        
   \   00000028   6C0A53756264       DC8 6CH, 0AH, 53H, 75H, 62H, 64H, 6FH, 6DH
   \              6F6D        
   \   00000030   656E613A2061       DC8 65H, 6EH, 61H, 3AH, 20H, 61H, 0AH, 20H
   \              0A20        
   \   00000038   536369657A6B       DC8 53H, 63H, 69H, 65H, 7AH, 6BH, 61H, 3AH
   \              613A        
   \   00000040   202F636300         DC8 20H, 2FH, 63H, 63H, 0
   \   00000045   000000             DC8 0, 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Ustaw okresowosc pola...">`:
   \   00000000   557374617720       DC8 "Ustaw okresowosc polaczen z serwerem"
   \              6F6B7265736F
   \              776F73632070
   \              6F6C61637A65
   \              6E207A207365
   \              72776572656D
   \              00          
   \   00000025   000000             DC8 0, 0, 0
   \   00000028   536574207468       DC8 "Set the periodicity of server connections"
   \              652070657269
   \              6F6469636974
   \              79206F662073
   \              657276657220
   \              636F6E6E6563
   \              74696F6E7300
   \   00000052   0000               DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Auto IP -on">`:
   \   00000000   4175746F2049       DC8 "Auto IP -on"
   \              50202D6F6E00
   \   0000000C   495020636F6E       DC8 "IP config"
   \              66696700    
   \   00000016   0000               DC8 0, 0
   \   00000018   4175746F2049       DC8 "Auto IP -off"
   \              50202D6F6666
   \              00          
   \   00000025   000000             DC8 0, 0, 0
   9708          
   9709                
   9710                
   9711                
                       ^
Warning[Pe001]: last line of file ends without a newline

   Maximum stack usage in bytes:

     Function                   .cstack
     --------                   -------
     AddRow                         24
     AdvanceSet_Event               24
     AdvanceSet_Paint               48
     AlarmPassChange_Event          56
     AlarmPassChange_Paint          40
     AlarmPass_Event                48
     AlarmPass_Paint                40
     AlarmPass_Refresh              72
     Alarm_Event                    40
     Alarm_Paint                    64
     Alarm_Refresh                  56
     AnalogGraph_Event              40
     AnalogGraph_Paint              88
     Animation_Event                 8
     BigTemperLabel_Event           40
     BigTemperLabel_Paint           72
     ButtonAction_Event             40
     ButtonAction_Paint             72
     ButtonOptions_Event            32
     ButtonOptions_Paint            64
     CheckChannel                   32
     CheckIP                        16
     CleanAll_Event                 24
     CleanReg_Event                 16
     ExecuteSpecialThermVar          8
     Host_WiFi_Event                40
     Host_WiFi_Paint                64
     Info_Event                      8
     Info_Paint                     56
     Info_Refresh                   40
     IpConfig_Event                 40
     IpConfig_Paint                 64
     IpTCP_Event                    40
     IpTCP_Paint                    56
     LaderChange_Event              32
     LaderChange_Paint              48
     Lader_Event                    40
     Lader_Paint                    72
     MESSAGE                       168
     MESSAGE_Refresh                40
     MainSide_Event                 56
     MainSide_Paint                 88
     MainSide_Refresh              144
     MasterSlave_Event              32
     MasterSlave_Paint              64
     MenuAccessPass_Event           56
     MenuAccessPass_Paint           48
     MenuAccess_Event               32
     MenuAccess_Paint               64
     MenuPaint                       8
     MenuRefresh                    16
     MenuSide_Event                 24
     MenuSide_Paint                 48
     NetInfo_Event                  32
     NetInfo_Paint                  80
     NetInfo_Refresh                56
     NetPeriodicity_Event           40
     NetPeriodicity_Paint           64
     Net_Event                      32
     Net_Paint                      64
     NeuronNrChange_Evant           48
     NeuronNrChange_Paint           64
     NeuronsList_Event              32
     NeuronsList_Paint              72
     NeuronsList_Refresh            40
     NodeStanIO_Event               24
     NodeStanIO_Paint               56
     NodeStanIO_Refresh             64
     NodeTestTrans_Event            24
     NodeTestTrans_Paint            80
     NodeTestTrans_Refresh          48
     Node_Event                     40
     Node_Paint                     56
     Options_Event                  32
     Options_Paint                  48
     PaintProc                      56
     Procedure_Event                40
     Procedure_Paint                96
     Punkt_dostepuWiFi_Event        40
     Punkt_dostepuWiFi_Paint        64
     RF_Channel_Event               48
     RF_Channel_Paint               72
     RF_Channel_Refresh             72
     RemRow                         16
     RemRow_Event                   16
     RemRow_Paint                    8
     Restart_Event                   8
     SaveChanges_Evant              16
     ScreenAlarmSet_Event           48
     ScreenAlarmSet_Paint           72
     ScreenDesign1_Event            48
     ScreenDesign1_Paint            48
     ScreenEvent                     8
     ScreenGraph                    64
     ScreenSet_Event                40
     ScreenSet_Paint                96
     ScreenSever_Event              40
     ScreenSever_Paint              72
     ScreenTimetableSet_Event       40
     ScreenTimetableSet_Paint       80
     SetTouchScreen_Event           40
     SetTouchScreen_Paint           48
     SetupLang_Event                32
     SetupLang_Paint                64
     SetupNewPass_Event             48
     SetupNewPass_Paint             40
     SetupOldPass_Event             56
     SetupOldPass_Paint             40
     SetupPass_Event                32
     SetupPass_Paint                64
     SetupTime_Event                56
     SetupTime_Paint                72
     SetupTime_Refresh              48
     Setup_Event                    32
     Setup_Paint                    64
     StartAnimation_Event            8
     StartAnimation_Paint           32
     Sygnal_Event                   32
     Sygnal_Paint                   48
     Termostat_Event                64
     Termostat_Paint               128
     Termostat_Refresh              56
     TextChange_Evant               80
     TextChange_Paint               72
     TextChange_Refresh             24
     ThermostatAutoSet_Event        48
     ThermostatAutoSet_Paint        72
     ThermostatChartSet_Event       48
     ThermostatChartSet_Paint       80
     ThermostatChartSet_Refresh     48
     ThermostatSet_Event            48
     ThermostatSet_Paint            72
     TimetableSet_Event             40
     TimetableSet_Paint             80
     Timetable_Event                64
     Timetable_Paint                96
     UstawSiec_Event                24
     UstawSiec_Paint                48
     ValueChange_Evant              48
     ValueChange_Paint              64
     Wait_Paint                    200
     WiFiConecting_Paint            56
     WiFiConecting_Refresh          40
     WybProc                        24
     ZoneButon                      48
     ZoneGraph                      56
     ZoneGraph_Event                40
     ZoneGraph_Paint                80
     dzienTygodnia                  64
     przestepny                      8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     ?<Constant {0, 0, 0, 0, 0, 0, 0}>
                                     848
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_2
                                     384
     ProcTMRS_graf                    28
     ProcConstAnal_graf               56
     BateriaWyladowana                12
     Frame                            24
     MainSide_puls                     1
     wartosc_tmp                       4
     text_label_tmp                   12
     Label_move                        1
     Suw_poz_IO                        4
     Suw_poz_analog                    4
     Suw_poz_dwustan                   4
     Suw_poz_monit                     4
     CyklMonit                         1
     Monitoring_array                240
     Monit_Size_scroll                 4
     MenuPaint                      1096
     ScreenEvent                    1084
     MenuRefresh                     452
     InitPointer                       3
     StartAnimation_Paint            356
     StartAnimation_Event             60
     CheckChannel                    152
     MainSide_Paint                  720
     MESSAGE                         508
     MESSAGE_Refresh                 156
     MainSide_Event                  648
     MainSide_Refresh               1404
     Termostat_Paint                 548
     ExecuteSpecialThermVar           56
     Termostat_Event                 848
     Termostat_Refresh               500
     Timetable_Paint                 612
     Timetable_Event                 860
     TimetableSet_Paint              596
     TimetableSet_Event              556
     Wait_Paint                       56
     Animation_Event                  56
     AdvanceSet_Paint                 88
     AdvanceSet_Event                124
     CleanAll_Event                  212
     MenuSide_Paint                  112
     MenuSide_Event                  116
     MenuAccess_Paint                136
     MenuAccess_Event                236
     MenuAccessPass_Paint            148
     MenuAccessPass_Event            600
     PaintProc                      3804
     Lader_Paint                     516
     Lader_Event                     752
     WybProc                         100
     Procedure_Paint                3244
     Procedure_Event                2980
     ValueChange_Paint               412
     ValueChange_Evant               820
     LaderChange_Paint                80
     LaderChange_Event               160
     AddRow                          176
     RemRow                          148
     RemRow_Paint                    128
     RemRow_Event                    104
     SaveChanges_Evant               164
     ScreenSet_Paint                 548
     ScreenSet_Event                 380
     ThermostatSet_Paint             840
     ThermostatSet_Event             640
     ScreenTimetableSet_Paint        744
     ScreenTimetableSet_Event        588
     ScreenAlarmSet_Paint            656
     ScreenAlarmSet_Event            584
     ZoneButon                       218
     ZoneGraph                       544
     ScreenGraph                     792
     ScreenDesign1_Paint             592
     ScreenDesign1_Event             660
     ButtonOptions_Paint             136
     ButtonOptions_Event             156
     ButtonAction_Paint              324
     ButtonAction_Event              360
     BigTemperLabel_Paint            336
     BigTemperLabel_Event            372
     ZoneGraph_Paint                1536
     ZoneGraph_Event                1068
     ?<Constant {0, 0}>              588
     ?<Constant {129, 0}>           2092
     abc                               4
     DeyOfWeekLongStr                192
     ?<Constant "Firmware: ">        140
     TouchTestSor                      8
     Klepsydra                         8
     Siec                            168
     StrzalkaPrawo                    24
     TextChange_Paint                488
     TextChange_Refresh              148
     TextChange_Evant               1216
     AnalogGraph_Paint              1008
     AnalogGraph_Event               656
     Options_Paint                   152
     Options_Event                   140
     Setup_Paint                     248
     Setup_Event                     220
     SetupLang_Paint                 120
     SetupLang_Event                 136
     SetupPass_Paint                 172
     SetupPass_Event                 272
     SetupOldPass_Paint              136
     SetupOldPass_Event              444
     SetupNewPass_Paint              140
     SetupNewPass_Event              436
     SetTouchScreen_Paint            440
     StartAdvance                     36
     InsertPass1                      24
     VCTT_ill                         12
     ptxt                              4
     count                             2
     LastText_EventTime                8
     SetTouchScreen_Event            504
     Restart_Event                   100
     CleanReg_Event                  104
     SetupTime_Paint                 740
     SetupTime_Refresh               356
     przestepny                       58
     dzienTygodnia                   132
     SetupTime_Event                 920
     ScreenSever_Paint               548
     ScreenSever_Event               428
     MasterSlave_Paint               100
     MasterSlave_Event               424
     RF_Channel_nr_tmp                 2
     InsertOldPass1                   24
     RF_Channel_Paint                432
     RF_Channel_Refresh              332
     RF_Channel_Event                556
     Sygnal_Paint                     88
     Sygnal_Event                    116
     NeuronsList_Paint               660
     wpistmp                           4
     NeuronsList_Event               768
     NeuronsList_Refresh             776
     Dzielnik20                        1
     NeuronNrChange_Paint            352
     NeuronNrChange_Evant            544
     Info_Paint                      436
     Info_Refresh                    120
     IRdiv                             4
     Info_Event                       64
     ThermostatAutoSet_Paint        1104
     ThermostatAutoSet_Event         700
     ThermostatChartSet_Paint        524
     ThermostatChartSet_Event        472
     ThermostatChartSet_Refresh      136
     ThermHourModyfi                   2
     Alarm_Paint                     172
     Alarm_Event                     252
     Alarm_Refresh                   208
     AlarmPass_Paint                 112
     AlarmPass_Event                 452
     AlarmPass_Refresh               280
     AlarmPassChange_Paint           164
     AlarmPassChange_Event           496
     Node_Paint                      124
     Node_Event                      252
     NodeTestTrans_Paint             392
     NodeTestTrans_Event             108
     NodeTestTrans_Refresh           172
     Dziel8                            1
     NodeStanIO_Paint                196
     NodeStanIO_Event                 96
     NodeStanIO_Refresh              564
     Dziel5                            1
     Net_Paint                       200
     Net_Event                       332
     UstawSiec_Paint                  84
     UstawSiec_Event                 116
     Punkt_dostepuWiFi_Paint         348
     Punkt_dostepuWiFi_Event         300
     WiFiConecting_Paint              80
     WiFiConecting_Refresh           472
     licz                              2
     TextToChangeLength             1172
     ScrollMenu_poz                    4
     ScrollMenu_Paint_exist            4
     SetupTimeCarPoz                   2
     SetTimeCell                       1
     Host_WiFi_Paint                 612
     Host_WiFi_Event                 432
     NetPeriodicity_Paint            256
     NetPeriodicity_Event            308
     IpTCP_Paint                     176
     IpTCP_Event                     328
     CheckIP                          88
     IpConfig_Paint                  648
     IpConfig_Event                  512
     TransferInfo                      1
     NetInfo_Paint                   500
     NetInfo_Event                   128
     NetInfo_Refresh                 508
     ??DataTable0                      4
     ??DataTable1                      4
     ??DataTable2                      4
     ??DataTable3                      4
     ??DataTable4                      4
     ??DataTable10                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ??DataTable29                     4
     ??DataTable30                     4
     ??DataTable31                     4
     ??DataTable32                     4
     ??DataTable35                     4
     ??DataTable36                     4
     ?<Constant "">                    4
     ?<Constant "Info ">             108
     ?<Constant "Checking Wi-Fi">     16
     ?<Constant " ">                   4
     ?<Constant " INFO ">              8
     ?<Constant {{0, 0, 224, 24, 232, 244, 244, 244
                                      56
     ?<Constant "On">                  4
     ?<Constant "Off">                 4
     ?<Constant {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}>
                                      96
     ?<Constant {{128, 192, 192, 128, 128, 224, 128
                                      84
     ?<Constant {130, 0}>             16
     ?<Constant "-">                   4
     ?<Constant "+">                   4
     ?<Constant {130, 0}>_1            4
     ?<Constant ":">                   4
     ?<Constant {{0, 240, 252, 127, 143, 243, 251,
                                     184
     ?<Constant "X">                   4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_1
                                      12
     ?<Constant "C">                   4
     ?<Constant "E">                   4
     ?<Constant "060480">              8
     ?<Constant "s">                   4
     ?<Constant "> ">                  4
     ?<Constant "< ">                  4
     ?<Constant ".">                   4
     ?<Constant "0">                   4
     ?<Constant "Ok ">                 4
     ?<Constant "C ">                  4
     ?<Constant "?">                   4
     ?<Constant "Alarm">               8
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_3
                                      20
     ?<Constant "Var">                 4
     ?<Constant "-1h">                 4
     ?<Constant "On ">                 4
     ?<Constant {129, 0}>_1            4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_4
                                      12
     ?<Constant {78, 114, 58, 0, 0}>
                                       8
     ?<Constant "<">                   4
     ?<Constant ">">                   4
     ?<Constant "...">                 4
     ?<Constant "<>">                  4
     ?<Constant "Program stop ">      32
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_5
                                      28
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_6
                                      20
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_7
                                      12
     ?<Constant "060480">_1            8
     ?<Constant "------------">       16
     ?<Constant {0, 31, 59, 90, 120, 151, 181, 212,
                                      48
     ?<Constant {30}>                  4
     ?<Constant "On/off">              8
     ?<Constant ":00">                 4
     ?<Constant {0, 4, 4, 10, 11, 16, 16, 32, 64, 0_8
                                      36
     ?<Constant "OK">                  4
     ?<Constant "%d">                  4
     ?<Constant "Node ">               8
     ?<Constant "Id ">                 4
     ?<Constant " ID ">                8
     ?<Constant "T1">                  4
     ?<Constant "T2">                  4
     ?<Constant "6">                   4
     ?<Constant "12">                  4
     ?<Constant "18">                  4
     ?<Constant "23">                  4
     ?<Constant {{0, 0, 224, 24, 232, 244, 244, 244_2
                                      84
     ?<Constant "DI">                  4
     ?<Constant "DO">                  4
     ?<Constant "Host">              204
     ?<Constant "TCP/IP">              8
     ?<Constant "Not connected">      88
     ?<Constant "Przyklad:\n   a.bbb.pl...">
                                      72
     ?<Constant "Ustaw okresowosc pola...">
                                      84
     ?<Constant "Auto IP -on">        40
      Others                          64

 
    410 bytes in section .bss
  1 183 bytes in section .data
  6 176 bytes in section .rodata
 68 512 bytes in section Debug.txt
 
 68 448 bytes of CODE  memory (+ 64 bytes shared)
  6 176 bytes of CONST memory
  1 593 bytes of DATA  memory

Errors: none
Warnings: 91
