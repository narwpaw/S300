###############################################################################
#                                                                             #
# IAR ARM ANSI C/C++ Compiler V5.10.5.372/W32           11/Sep/2013  19:44:49 #
# Copyright 1999-2007 IAR Systems. All rights reserved.                       #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\Framework\spi_main.c                          #
#    Command line =  "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\Framework\spi_main.c" -D AT91SAM7S256 -D      #
#                    AT91SAM7SEK -D iH -D _LCD_NEGATIV_OLD_ -D __ALARM -D     #
#                    __WIFI_MODULE -D _DEBUG_ -D S300iOld -D _ADMINISTRATOR_  #
#                    -lC "D:\Zeuron\Projekty\S300\S300-program v1.4 -         #
#                    12.06.2013\S300X (Old)\List\" --diag_suppress Pa082 -o   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\S300X (Old)\Obj\" --no_cse --no_unroll        #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian little --cpu ARM7TDMI   #
#                    -e --fpu None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 5.0\ARM\INC\DLib_Config_Norma #
#                    l.h" -I "D:\Zeuron\Projekty\S300\S300-program v1.4 -     #
#                    12.06.2013\lib\AT91SAM7S256\" -I                         #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\lib\AT91SAM7S64\" -I                          #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\" -I "D:\Zeuron\Projekty\S300\S300-program    #
#                    v1.4 - 12.06.2013\cdc\" -I "D:\Zeuron\Projekty\S300\S300 #
#                    -program v1.4 - 12.06.2013\core\" -I                     #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\startup\" -I "D:\Zeuron\Projekty\S300\S300-pr #
#                    ogram v1.4 - 12.06.2013\Framework\" -I                   #
#                    "D:\Zeuron\Projekty\S300\S300-program v1.4 -             #
#                    12.06.2013\Framework\Configuration\" -I "C:\Program      #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    5.0\ARM\INC\" --section .text=Debug.txt --interwork      #
#                    --cpu_mode thumb -Ol                                     #
#    List file    =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\S300X (Old)\List\spi_main.lst                 #
#    Object file  =  D:\Zeuron\Projekty\S300\S300-program v1.4 -              #
#                    12.06.2013\S300X (Old)\Obj\spi_main.o                    #
#                                                                             #
#                                                                             #
###############################################################################

D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\spi_main.c
      1          //****************************************************************************//
      2          //*--------------------------------------------------------------------------*//
      3          //*                 IASE Microcontroller Software Support                    *//                       
      4          //*--------------------------------------------------------------------------*//
      5          //*--------------------------------------------------------------------------*//
      6          //*  Nazwa pliku                  : spi_main.c                               *//
      7          //*  Opis                         : obs³oga transmisji SPI                   *//
      8          //*  Autor                        : Pawe³ Narwojsz                           *//
      9          //*  Data utrzorzenia             : 14.01.2009                               *//
     10          //*  Data ostatniej modyfikacji   : --.--.----                               *//
     11          //*--------------------------------------------------------------------------*//
     12          //*                                                                          *//
     13          //*--------------------------------------------------------------------------*//
     14          //* Rejestr zmian  (data - opis):                                            *//
     15          //*                                                                          *//
     16          //*                               Brak zmian                                 *//
     17          //*                                                                          *//
     18          //*__________________________________________________________________________*// 
     19          //****************************************************************************//
     20          //****************************************************************************//
     21          
     22          
     23          
     24          //Konfiguracja -----------------------------------------------------------------
     25            
     26          //___________________________Koniec konfiguracji________________________________
     27          
     28          
     29          
     30          // Pliki do³¹czane -------------------------------------------------------------
     31              #include "core/common.h"
     32              #include "core/device.h" 

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_AIC_ConfigureIt(AT91PS_AIC, unsigned int, unsigned int, unsigned int, void (*)())
   \                     AT91F_AIC_ConfigureIt:
   \   00000000   F0B4               PUSH     {R4-R7}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   049D               LDR      R5,[SP, #+16]
   \   00000006   0420               MOVS     R0,#+4
   \   00000008   4843               MULS     R0,R1,R0
   \   0000000A   2018               ADDS     R0,R4,R0
   \   0000000C   8030               ADDS     R0,R0,#+128
   \   0000000E   0068               LDR      R0,[R0, #+0]
   \   00000010   0126               MOVS     R6,#+1
   \   00000012   8E40               LSLS     R6,R6,R1
   \   00000014   9227               MOVS     R7,#+146
   \   00000016   7F00               LSLS     R7,R7,#+1        ;; #+292
   \   00000018   E651               STR      R6,[R4, R7]
   \   0000001A   0427               MOVS     R7,#+4
   \   0000001C   4F43               MULS     R7,R1,R7
   \   0000001E   E719               ADDS     R7,R4,R7
   \   00000020   8037               ADDS     R7,R7,#+128
   \   00000022   3D60               STR      R5,[R7, #+0]
   \   00000024   0425               MOVS     R5,#+4
   \   00000026   6943               MULS     R1,R5,R1
   \   00000028   1A43               ORRS     R2,R2,R3
   \   0000002A   6250               STR      R2,[R4, R1]
   \   0000002C   9421               MOVS     R1,#+148
   \   0000002E   4900               LSLS     R1,R1,#+1        ;; #+296
   \   00000030   6650               STR      R6,[R4, R1]
   \   00000032   F0BC               POP      {R4-R7}
   \   00000034   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_AIC_EnableIt(AT91PS_AIC, unsigned int)
   \                     AT91F_AIC_EnableIt:
   \   00000000   9022               MOVS     R2,#+144
   \   00000002   5200               LSLS     R2,R2,#+1        ;; #+288
   \   00000004   0123               MOVS     R3,#+1
   \   00000006   8B40               LSLS     R3,R3,R1
   \   00000008   8350               STR      R3,[R0, R2]
   \   0000000A   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetNextRx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetNextRx:
   \   00000000   0161               STR      R1,[R0, #+16]
   \   00000002   4261               STR      R2,[R0, #+20]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetNextTx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetNextTx:
   \   00000000   8161               STR      R1,[R0, #+24]
   \   00000002   C261               STR      R2,[R0, #+28]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetRx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetRx:
   \   00000000   0160               STR      R1,[R0, #+0]
   \   00000002   4260               STR      R2,[R0, #+4]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_SetTx(AT91PS_PDC, char *, unsigned int)
   \                     AT91F_PDC_SetTx:
   \   00000000   8160               STR      R1,[R0, #+8]
   \   00000002   C260               STR      R2,[R0, #+12]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_EnableTx(AT91PS_PDC)
   \                     AT91F_PDC_EnableTx:
   \   00000000   8021               MOVS     R1,#+128
   \   00000002   4900               LSLS     R1,R1,#+1        ;; #+256
   \   00000004   0162               STR      R1,[R0, #+32]
   \   00000006   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_EnableRx(AT91PS_PDC)
   \                     AT91F_PDC_EnableRx:
   \   00000000   0121               MOVS     R1,#+1
   \   00000002   0162               STR      R1,[R0, #+32]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_DisableTx(AT91PS_PDC)
   \                     AT91F_PDC_DisableTx:
   \   00000000   8021               MOVS     R1,#+128
   \   00000002   8900               LSLS     R1,R1,#+2        ;; #+512
   \   00000004   0162               STR      R1,[R0, #+32]
   \   00000006   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_DisableRx(AT91PS_PDC)
   \                     AT91F_PDC_DisableRx:
   \   00000000   0221               MOVS     R1,#+2
   \   00000002   0162               STR      R1,[R0, #+32]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork int AT91F_PDC_IsTxEmpty(AT91PS_PDC)
   \                     AT91F_PDC_IsTxEmpty:
   \   00000000   C068               LDR      R0,[R0, #+12]
   \   00000002   401E               SUBS     R0,R0,#+1
   \   00000004   8041               SBCS     R0,R0,R0
   \   00000006   C00F               LSRS     R0,R0,#+31
   \   00000008   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000A   000E               LSRS     R0,R0,#+24
   \   0000000C   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork int AT91F_PDC_IsNextTxEmpty(AT91PS_PDC)
   \                     AT91F_PDC_IsNextTxEmpty:
   \   00000000   C069               LDR      R0,[R0, #+28]
   \   00000002   401E               SUBS     R0,R0,#+1
   \   00000004   8041               SBCS     R0,R0,R0
   \   00000006   C00F               LSRS     R0,R0,#+31
   \   00000008   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000A   000E               LSRS     R0,R0,#+24
   \   0000000C   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork int AT91F_PDC_IsRxEmpty(AT91PS_PDC)
   \                     AT91F_PDC_IsRxEmpty:
   \   00000000   4068               LDR      R0,[R0, #+4]
   \   00000002   401E               SUBS     R0,R0,#+1
   \   00000004   8041               SBCS     R0,R0,R0
   \   00000006   C00F               LSRS     R0,R0,#+31
   \   00000008   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000A   000E               LSRS     R0,R0,#+24
   \   0000000C   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork int AT91F_PDC_IsNextRxEmpty(AT91PS_PDC)
   \                     AT91F_PDC_IsNextRxEmpty:
   \   00000000   4069               LDR      R0,[R0, #+20]
   \   00000002   401E               SUBS     R0,R0,#+1
   \   00000004   8041               SBCS     R0,R0,R0
   \   00000006   C00F               LSRS     R0,R0,#+31
   \   00000008   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000000A   000E               LSRS     R0,R0,#+24
   \   0000000C   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PDC_Open(AT91PS_PDC)
   \                     AT91F_PDC_Open:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   2000               MOVS     R0,R4
   \   00000006   ........           BL       AT91F_PDC_DisableRx
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   ........           BL       AT91F_PDC_DisableTx
   \   00000010   0022               MOVS     R2,#+0
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   2000               MOVS     R0,R4
   \   00000016   ........           BL       AT91F_PDC_SetNextTx
   \   0000001A   0022               MOVS     R2,#+0
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       AT91F_PDC_SetNextRx
   \   00000024   0022               MOVS     R2,#+0
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   2000               MOVS     R0,R4
   \   0000002A   ........           BL       AT91F_PDC_SetTx
   \   0000002E   0022               MOVS     R2,#+0
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   2000               MOVS     R0,R4
   \   00000034   ........           BL       AT91F_PDC_SetRx
   \   00000038   2000               MOVS     R0,R4
   \   0000003A   ........           BL       AT91F_PDC_EnableRx
   \   0000003E   2000               MOVS     R0,R4
   \   00000040   ........           BL       AT91F_PDC_EnableTx
   \   00000044   10BC               POP      {R4}
   \   00000046   01BC               POP      {R0}
   \   00000048   0047               BX       R0               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_PDC_SendFrame(AT91PS_PDC, char *, unsigned int, char *, unsigned int)
   \                     AT91F_PDC_SendFrame:
   \   00000000   F8B5               PUSH     {R3-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   1600               MOVS     R6,R2
   \   00000008   069F               LDR      R7,[SP, #+24]
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   ........           BL       AT91F_PDC_IsTxEmpty
   \   00000010   0028               CMP      R0,#+0
   \   00000012   0BD0               BEQ      ??AT91F_PDC_SendFrame_0
   \   00000014   3200               MOVS     R2,R6
   \   00000016   2900               MOVS     R1,R5
   \   00000018   2000               MOVS     R0,R4
   \   0000001A   ........           BL       AT91F_PDC_SetTx
   \   0000001E   3A00               MOVS     R2,R7
   \   00000020   0099               LDR      R1,[SP, #+0]
   \   00000022   2000               MOVS     R0,R4
   \   00000024   ........           BL       AT91F_PDC_SetNextTx
   \   00000028   0220               MOVS     R0,#+2
   \   0000002A   0CE0               B        ??AT91F_PDC_SendFrame_1
   \                     ??AT91F_PDC_SendFrame_0:
   \   0000002C   2000               MOVS     R0,R4
   \   0000002E   ........           BL       AT91F_PDC_IsNextTxEmpty
   \   00000032   0028               CMP      R0,#+0
   \   00000034   06D0               BEQ      ??AT91F_PDC_SendFrame_2
   \   00000036   3200               MOVS     R2,R6
   \   00000038   2900               MOVS     R1,R5
   \   0000003A   2000               MOVS     R0,R4
   \   0000003C   ........           BL       AT91F_PDC_SetNextTx
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   00E0               B        ??AT91F_PDC_SendFrame_1
   \                     ??AT91F_PDC_SendFrame_2:
   \   00000044   0020               MOVS     R0,#+0
   \                     ??AT91F_PDC_SendFrame_1:
   \   00000046   01B0               ADD      SP,SP,#+4
   \   00000048   F0BC               POP      {R4-R7}
   \   0000004A   02BC               POP      {R1}
   \   0000004C   0847               BX       R1               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_PDC_ReceiveFrame(AT91PS_PDC, char *, unsigned int, char *, unsigned int)
   \                     AT91F_PDC_ReceiveFrame:
   \   00000000   F8B5               PUSH     {R3-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   1600               MOVS     R6,R2
   \   00000008   069F               LDR      R7,[SP, #+24]
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   ........           BL       AT91F_PDC_IsRxEmpty
   \   00000010   0028               CMP      R0,#+0
   \   00000012   0BD0               BEQ      ??AT91F_PDC_ReceiveFrame_0
   \   00000014   3200               MOVS     R2,R6
   \   00000016   2900               MOVS     R1,R5
   \   00000018   2000               MOVS     R0,R4
   \   0000001A   ........           BL       AT91F_PDC_SetRx
   \   0000001E   3A00               MOVS     R2,R7
   \   00000020   0099               LDR      R1,[SP, #+0]
   \   00000022   2000               MOVS     R0,R4
   \   00000024   ........           BL       AT91F_PDC_SetNextRx
   \   00000028   0220               MOVS     R0,#+2
   \   0000002A   0CE0               B        ??AT91F_PDC_ReceiveFrame_1
   \                     ??AT91F_PDC_ReceiveFrame_0:
   \   0000002C   2000               MOVS     R0,R4
   \   0000002E   ........           BL       AT91F_PDC_IsNextRxEmpty
   \   00000032   0028               CMP      R0,#+0
   \   00000034   06D0               BEQ      ??AT91F_PDC_ReceiveFrame_2
   \   00000036   3200               MOVS     R2,R6
   \   00000038   2900               MOVS     R1,R5
   \   0000003A   2000               MOVS     R0,R4
   \   0000003C   ........           BL       AT91F_PDC_SetNextRx
   \   00000040   0120               MOVS     R0,#+1
   \   00000042   00E0               B        ??AT91F_PDC_ReceiveFrame_1
   \                     ??AT91F_PDC_ReceiveFrame_2:
   \   00000044   0020               MOVS     R0,#+0
   \                     ??AT91F_PDC_ReceiveFrame_1:
   \   00000046   01B0               ADD      SP,SP,#+4
   \   00000048   F0BC               POP      {R4-R7}
   \   0000004A   02BC               POP      {R1}
   \   0000004C   0847               BX       R1               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PIO_CfgPeriph(AT91PS_PIO, unsigned int, unsigned int)
   \                     AT91F_PIO_CfgPeriph:
   \   00000000   0167               STR      R1,[R0, #+112]
   \   00000002   4267               STR      R2,[R0, #+116]
   \   00000004   0A43               ORRS     R2,R2,R1
   \   00000006   4260               STR      R2,[R0, #+4]
   \   00000008   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_PMC_EnablePeriphClock(AT91PS_PMC, unsigned int)
   \                     AT91F_PMC_EnablePeriphClock:
   \   00000000   0161               STR      R1,[R0, #+16]
   \   00000002   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_SPI_CfgCs(AT91PS_SPI, int, int)
   \                     AT91F_SPI_CfgCs:
   \   00000000   0423               MOVS     R3,#+4
   \   00000002   5943               MULS     R1,R3,R1
   \   00000004   4018               ADDS     R0,R0,R1
   \   00000006   0263               STR      R2,[R0, #+48]
   \   00000008   7047               BX       LR               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_SPI_ReceiveFrame(AT91PS_SPI, char *, unsigned int, char *, unsigned int)
   \                     AT91F_SPI_ReceiveFrame:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   029C               LDR      R4,[SP, #+8]
   \   00000004   82B0               SUB      SP,SP,#+8
   \   00000006   0094               STR      R4,[SP, #+0]
   \   00000008   8024               MOVS     R4,#+128
   \   0000000A   6400               LSLS     R4,R4,#+1        ;; #+256
   \   0000000C   0019               ADDS     R0,R0,R4
   \   0000000E   ........           BL       AT91F_PDC_ReceiveFrame
   \   00000012   02B0               ADD      SP,SP,#+8
   \   00000014   10BC               POP      {R4}
   \   00000016   02BC               POP      {R1}
   \   00000018   0847               BX       R1               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork unsigned int AT91F_SPI_SendFrame(AT91PS_SPI, char *, unsigned int, char *, unsigned int)
   \                     AT91F_SPI_SendFrame:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   029C               LDR      R4,[SP, #+8]
   \   00000004   82B0               SUB      SP,SP,#+8
   \   00000006   0094               STR      R4,[SP, #+0]
   \   00000008   8024               MOVS     R4,#+128
   \   0000000A   6400               LSLS     R4,R4,#+1        ;; #+256
   \   0000000C   0019               ADDS     R0,R0,R4
   \   0000000E   ........           BL       AT91F_PDC_SendFrame
   \   00000012   02B0               ADD      SP,SP,#+8
   \   00000014   10BC               POP      {R4}
   \   00000016   02BC               POP      {R1}
   \   00000018   0847               BX       R1               ;; return

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_SPI_CfgPMC(void)
   \                     AT91F_SPI_CfgPMC:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   2021               MOVS     R1,#+32
   \   00000004   0248               LDR      R0,??AT91F_SPI_CfgPMC_0  ;; 0xfffffc00
   \   00000006   ........           BL       AT91F_PMC_EnablePeriphClock
   \   0000000A   01B0               ADD      SP,SP,#+4
   \   0000000C   01BC               POP      {R0}
   \   0000000E   0047               BX       R0               ;; return
   \                     ??AT91F_SPI_CfgPMC_0:
   \   00000010   00FCFFFF           DC32     0xfffffc00

   \                                 In section Debug.txt, align 4
   \   __??Code16?? __code __interwork void AT91F_SPI_CfgPIO(void)
   \                     AT91F_SPI_CfgPIO:
   \   00000000   01B5               PUSH     {R0,LR}
   \   00000002   8022               MOVS     R2,#+128
   \   00000004   9200               LSLS     R2,R2,#+2        ;; #+512
   \   00000006   F021               MOVS     R1,#+240
   \   00000008   C901               LSLS     R1,R1,#+7        ;; #+30720
   \   0000000A   0348               LDR      R0,??AT91F_SPI_CfgPIO_0  ;; 0xfffff400
   \   0000000C   ........           BL       AT91F_PIO_CfgPeriph
   \   00000010   01B0               ADD      SP,SP,#+4
   \   00000012   01BC               POP      {R0}
   \   00000014   0047               BX       R0               ;; return
   \   00000016   C046               Nop      
   \                     ??AT91F_SPI_CfgPIO_0:
   \   00000018   00F4FFFF           DC32     0xfffff400
     33              #include "spi_main.h"
     34              #include <intrinsics.h>
     35              //#include  "Clock.h"
     36          #include "core/trace.h"
     37             // #include  "RF.h"
     38          #include "core/board.h"
     39          #include "InterruptPriority.h"

                                          
                                          ^
"D:\Zeuron\Projekty\S300\S300-program v1.4 - 12.06.2013\Framework\Configuration\InterruptPriority.h",59  Warning[Pe001]: 
          last line of file ends without a newline
     40          //-----------------------Koniec plików do³¹czanych -----------------------------
     41          
     42          
     43          
     44          //Definicje --------------------------------------------------------------------

   \                                 In section .data, align 4
     45              AT91PS_SPI     pSPI = AT91C_BASE_SPI;
   \                     pSPI:
   \   00000000   0000FEFF           DC32 0FFFE0000H
     46          //___________________________Koniec definicji___________________________________
     47          
     48          
     49          
     50          
     51          
     52          //Sta³e ------------------------------------------------------------------------
     53          
     54          //____________________________Koniec sta³ych ___________________________________
     55          
     56          
     57          
     58          
     59          
     60          //Zmienne globalne -------------------------------------------------------------
     61          
     62          //___________________________Koniec zmiennych globalnych________________________
     63          
     64          
     65          
     66          
     67          
     68          //Zmienne lokalne -------------------------------------------------------------

   \                                 In section .bss, align 1
     69              unsigned char volatile      spi_Rdrf_Flag     = 0;
   \                     spi_Rdrf_Flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     70              unsigned char volatile	spi_Tdre_Flag     = 0;
   \                     spi_Tdre_Flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     71              unsigned char volatile	spi_Modf_Flag     = 0;
   \                     spi_Modf_Flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     72              unsigned char volatile	spi_Ovred_Flag    = 0;
   \                     spi_Ovred_Flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     73              unsigned char volatile	spi_Nssr_Flag     = 0;
   \                     spi_Nssr_Flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     74              unsigned long volatile	spi_Txempty_Flag  = 0;
   \                     spi_Txempty_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     75              unsigned char volatile	spi_Spiens_Flag   = 0;
   \                     spi_Spiens_Flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     76              unsigned long volatile 	spi_Endrx_Flag    = 0;
   \                     spi_Endrx_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     77              unsigned long volatile 	spi_Endtx_Flag    = 0;
   \                     spi_Endtx_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     78              unsigned long volatile      spi_Rxbuff_Flag   = 0;
   \                     spi_Rxbuff_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     79              unsigned long volatile      spi_Txbuff_Flag   = 0;
   \                     spi_Txbuff_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     80              unsigned long volatile	spi_Status        = 0;
   \                     spi_Status:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     81              AT91_SPI_Buff               SPI_Buff;
   \                     SPI_Buff:
   \   00000000                      DS8 224

   \                                 In section .data, align 4
     82              AT91_SPI_Buff               *pSPI_Buff        = &SPI_Buff;
   \                     pSPI_Buff:
   \   00000000   ........           DC32 SPI_Buff
     83          //___________________________Koniec zmiennych lplkalnych________________________
     84          
     85          
     86          
     87          //Zmienne zewnêtrzne -------------------------------------------------------------
     88              extern    char Clock_Set_Command[6];
     89          
     90          //___________________________Koniec zmiennych zewnêtrznych________________________
     91          
     92            
     93          
     94          //-----------------------------------------------------------------------------
     95          //! Nazwa funkcji :    AT91F_SPI_Interrupt_handler
     96          //! Funkcja realizacji przerwania SPI
     97          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
     98          void AT91F_SPI_Interrupt_handler (void)
     99          {
   \                     AT91F_SPI_Interrupt_handler:
   \   00000000   10B5               PUSH     {R4,LR}
    100          
    101            	spi_Status = pSPI -> SPI_SR;
   \   00000002   1B48               LDR      R0,??AT91F_SPI_Interrupt_handler_0  ;; spi_Status
   \   00000004   1B49               LDR      R1,??AT91F_SPI_Interrupt_handler_0+0x4  ;; pSPI
   \   00000006   0968               LDR      R1,[R1, #+0]
   \   00000008   0969               LDR      R1,[R1, #+16]
   \   0000000A   0160               STR      R1,[R0, #+0]
    102          
    103          
    104          	// The Receive Counter Register has reached 0 since the last write in SPI_RCR or SPI_RNCR.
    105          	if (spi_Status & AT91C_SPI_ENDRX)	
   \   0000000C   1848               LDR      R0,??AT91F_SPI_Interrupt_handler_0  ;; spi_Status
   \   0000000E   0068               LDR      R0,[R0, #+0]
   \   00000010   C006               LSLS     R0,R0,#+27
   \   00000012   22D5               BPL      ??AT91F_SPI_Interrupt_handler_1
    106          	{
    107                           spi_Endrx_Flag  = 1;
   \   00000014   ....               LDR      R0,??DataTable29  ;; spi_Endrx_Flag
   \   00000016   0121               MOVS     R1,#+1
   \   00000018   0160               STR      R1,[R0, #+0]
    108          		pSPI -> SPI_IDR = AT91C_SPI_ENDRX; // Interrupt is disabled to avoid inopportune interrupt 
   \   0000001A   1648               LDR      R0,??AT91F_SPI_Interrupt_handler_0+0x4  ;; pSPI
   \   0000001C   0068               LDR      R0,[R0, #+0]
   \   0000001E   1021               MOVS     R1,#+16
   \   00000020   8161               STR      R1,[R0, #+24]
    109                    
    110                            unsigned int Save = __get_interrupt_state();   
   \   00000022   ........           BL       __iar_get_interrupt_state
   \   00000026   0400               MOVS     R4,R0
    111                            __disable_interrupt(); 
   \   00000028   ........           BL       __iar_disable_interrupt
    112                              SPI_Response_Interpretation((pSPI_Buff->Buffer_TxCount));
   \   0000002C   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   0000002E   0068               LDR      R0,[R0, #+0]
   \   00000030   DD30               ADDS     R0,R0,#+221
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   ........           BL       SPI_Response_Interpretation
    113                            __set_interrupt_state(Save);
   \   00000038   2000               MOVS     R0,R4
   \   0000003A   ........           BL       __iar_set_interrupt_state
    114                            __enable_interrupt();   
   \   0000003E   ........           BL       __iar_enable_interrupt
    115                           
    116                            if (SPI_Buff.WordToSendCount>0) 
   \   00000042   ....               LDR      R0,??DataTable18  ;; SPI_Buff + 220
   \   00000044   0078               LDRB     R0,[R0, #+0]
   \   00000046   0128               CMP      R0,#+1
   \   00000048   02D3               BCC      ??AT91F_SPI_Interrupt_handler_2
    117                            {
    118                              SPI_Send_Executive();
   \   0000004A   ........           BL       SPI_Send_Executive
   \   0000004E   04E0               B        ??AT91F_SPI_Interrupt_handler_1
    119                            }
    120                            else
    121                            {
    122                              pSPI_Buff->Buffer_TxCount=0;
   \                     ??AT91F_SPI_Interrupt_handler_2:
   \   00000050   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   00000052   0068               LDR      R0,[R0, #+0]
   \   00000054   DD30               ADDS     R0,R0,#+221
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   0170               STRB     R1,[R0, #+0]
    123                            }
    124                             
    125                           
    126                          
    127                  }
    128                  
    129                    
    130                  // Both SPI_RCR and SPI_RNCR have a value of 0.
    131          	if (spi_Status & AT91C_SPI_RXBUFF)	
   \                     ??AT91F_SPI_Interrupt_handler_1:
   \   0000005A   0548               LDR      R0,??AT91F_SPI_Interrupt_handler_0  ;; spi_Status
   \   0000005C   0068               LDR      R0,[R0, #+0]
   \   0000005E   4006               LSLS     R0,R0,#+25
   \   00000060   02D5               BPL      ??AT91F_SPI_Interrupt_handler_3
    132          	{
    133          		spi_Rxbuff_Flag  = 1;
   \   00000062   ....               LDR      R0,??DataTable30  ;; spi_Rxbuff_Flag
   \   00000064   0121               MOVS     R1,#+1
   \   00000066   0160               STR      R1,[R0, #+0]
    134          		//pSPI -> SPI_IDR = AT91C_SPI_RXBUFF; // Interrupt is disabled to avoid inopportune interrupt  
    135                          
    136                  }	        
    137                         
    138                  
    139                  /*
    140          
    141                  // The Transmit Counter Register has reached 0 since the last write in SPI_TCR or SPI_TNCR.
    142          	if (spi_Status & AT91C_SPI_ENDTX)	
    143          	{
    144          		spi_Endtx_Flag  = 1;
    145          		//pSPI -> SPI_IDR = AT91C_SPI_ENDTX; // Interrupt is disabled to avoid inopportune interrupt 
    146                  }	
    147                  
    148                  
    149           
    150                  
    151             
    152          	// A data has been recieved and transmitted to the RBR.
    153          	if (spi_Status & AT91C_SPI_RDRF)	
    154          	{ 
    155          		spi_Rdrf_Flag = 1;
    156          		pSPI -> SPI_IDR = AT91C_SPI_RDRF; // Interrupt is disabled to avoid inopportune interrupt 
    157                          
    158          
    159          	}
    160          
    161          	// The last data written in the TDR has been transmitted to the serializer
    162          	if (spi_Status & AT91C_SPI_TDRE)	
    163          	{
    164          		spi_Tdre_Flag  = 1;
    165          		pSPI -> SPI_IDR = AT91C_SPI_TDRE; // Interrupt is disabled to avoid inopportune interrupt  
    166          	}
    167          
    168          	// A mode fault has occured (NCS0 was tied low).
    169          	if (spi_Status & AT91C_SPI_MODF)	
    170          	{
    171          		spi_Modf_Flag  = 1;
    172          		pSPI -> SPI_IDR = AT91C_SPI_MODF; // Interrupt is disabled to avoid inopportune interrupt      
    173          	}
    174          
    175          	// An overrun error has occured.
    176          	if (spi_Status & AT91C_SPI_OVRES)	
    177          	{
    178          		spi_Ovred_Flag  = 1;
    179          		pSPI -> SPI_IDR = AT91C_SPI_OVRES; // Interrupt is disabled to avoid inopportune interrupt 
    180          	}
    181          	
    182          
    183          
    184          	// Both SPI_TCR and SPI_TNCR have a value of 0.
    185          	if (spi_Status & AT91C_SPI_TXBUFE)	
    186          	{
    187          		spi_Txbuff_Flag  = 1;
    188          		pSPI -> SPI_IDR = AT91C_SPI_TXBUFE; // Interrupt is disabled to avoid inopportune interrupt         
    189          	}
    190          
    191          	// NSS has risen
    192          	if (spi_Status & AT91C_SPI_NSSR)	
    193          	{
    194          		spi_Nssr_Flag  = 1;
    195          		pSPI -> SPI_IDR = AT91C_SPI_NSSR; // Interrupt is disabled to avoid inopportune interrupt
    196                  }
    197          
    198                      
    199          	// TDR and shift registers are empty
    200          	if (spi_Status & AT91C_SPI_TXEMPTY)	
    201          	{
    202          		spi_Txempty_Flag  = 1;
    203          		pSPI -> SPI_IDR = AT91C_SPI_TXEMPTY; // Interrupt is disabled to avoid inopportune interrupt   
    204          	}
    205                  
    206                  */
    207          
    208          }//_____________________________________________________________________________
   \                     ??AT91F_SPI_Interrupt_handler_3:
   \   00000068   10BC               POP      {R4}
   \   0000006A   01BC               POP      {R0}
   \   0000006C   0047               BX       R0               ;; return
   \   0000006E   C046               Nop      
   \                     ??AT91F_SPI_Interrupt_handler_0:
   \   00000070   ........           DC32     spi_Status
   \   00000074   ........           DC32     pSPI
    209          
    210          
    211          
    212          
    213          
    214          //-----------------------------------------------------------------------------
    215          //! Nazwa funkcji :    SpiMaster_Init
    216          //! Funkcja inicjalizacji komunikacji SPI w trybie master
    217          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    218          void SpiMaster_Init (void)
    219          {
   \                     SpiMaster_Init:
   \   00000000   70B5               PUSH     {R4-R6,LR}
    220          	unsigned char error;
                 	              ^
Warning[Pe550]: variable "error" was set but never used
    221          	AT91PS_SPI     pSPI = AT91C_BASE_SPI;
   \   00000002   ....               LDR      R4,??DataTable51  ;; 0xfffe0000
    222          	
    223          	error = 0;
   \   00000004   0025               MOVS     R5,#+0
    224          
    225          	AT91F_SPI_Open ();	
   \   00000006   ........           BL       AT91F_SPI_Open
    226          
    227                  pSPI -> SPI_IER =  	(AT91C_SPI_RDRF + AT91C_SPI_TDRE + AT91C_SPI_MODF + AT91C_SPI_OVRES+ 
    228          					 AT91C_SPI_NSSR + AT91C_SPI_TXEMPTY + AT91C_SPI_SPIENS +AT91C_SPI_TXBUFE);
   \   0000000A   ....               LDR      R0,??DataTable6  ;; 0x1038f
   \   0000000C   6061               STR      R0,[R4, #+20]
    229          
    230                   __enable_interrupt();
   \   0000000E   ........           BL       __iar_enable_interrupt
    231                   
    232                   
    233                   
    234                   
    235                            //SPI CONTROL REGISTER
    236              //=========================================================================================
    237              //| -------- | -------- | -------- | -------- | -------- | -------- | -------- | LASTXFER |
    238              //=========================================================================================
    239              
    240              //=========================================================================================
    241              //| -------- | -------- | -------- | -------- | -------- | -------- | -------- | -------- |
    242              //========================================================================================= 
    243              
    244              //=========================================================================================
    245              //| -------- | -------- | -------- | -------- | -------- | -------- | -------- | -------- |
    246              //=========================================================================================
    247              
    248              //=========================================================================================
    249              //|  SWRST   | -------- | -------- | -------- | -------- | -------- |  SPIDIS  |   SPEN   |
    250              //=========================================================================================
    251              //pSPI->SPI_CR = (AT91C_SPI_SPIEN | AT91C_SPI_SWRST);	
    252              pSPI->SPI_CR = AT91C_SPI_SPIEN;
   \   00000012   0120               MOVS     R0,#+1
   \   00000014   2060               STR      R0,[R4, #+0]
    253              
    254          
    255          
    256              
    257                  //SPI MODE REGISTER
    258              //=========================================================================================
    259              //|                                         DLYBCS                                        |
    260              //=========================================================================================
    261              
    262              //=========================================================================================
    263              //| -------- | -------- | -------- | -------- |                    PCS                    |
    264              //========================================================================================= 
    265              
    266              //=========================================================================================
    267              //| -------- | -------- | -------- | -------- | -------- | -------- | -------- | -------- |
    268              //=========================================================================================
    269              
    270              //=========================================================================================
    271              //|   LLB    | -------- | -------- |  MODFDIS | -------- |  PCSDEC  |    PS    |   MSTR   |
    272              //=========================================================================================
    273              //pSPI->SPI_MR = (AT91C_SPI_MSTR | AT91C_SPI_MODFDIS | AT91C_SPI_PCSDEC |AT91C_SPI_PS_VARIABLE | ((0x0)<<16));
    274          pSPI->SPI_MR = (AT91C_SPI_MSTR | AT91C_SPI_MODFDIS  |AT91C_SPI_PS_VARIABLE | ((0x0)<<16));
   \   00000016   1320               MOVS     R0,#+19
   \   00000018   6060               STR      R0,[R4, #+4]
    275          
    276          
    277          
    278          
    279              
    280              //SPI CHIP SELECT REGISTER 
    281              //=========================================================================================
    282              //|                                         DLYBCT                                        |
    283              //=========================================================================================
    284              
    285              //=========================================================================================
    286              //|                                          DLYBS                                        |
    287              //========================================================================================= 
    288              
    289              //=========================================================================================
    290              //|                                          SCBR                                         |
    291              //=========================================================================================
    292              
    293              //=========================================================================================
    294              //|                 BITS                      |   CSAAT  | -------- |   NCPHA  |   CPOL   |
    295              //=========================================================================================
    296             
    297              
    298              char CS_BAUD = MCK / SPIBAUD_CSR0; 
   \   0000001A   5020               MOVS     R0,#+80
    299              AT91F_SPI_CfgCs (AT91C_BASE_SPI, 0, AT91C_SPI_CPOL |  AT91C_SPI_BITS_16 | (AT91C_SPI_SCBR & (CS_BAUD << 8)) ); /*ustawienia dla RTC  :*/
   \   0000001C   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000001E   000E               LSRS     R0,R0,#+24
   \   00000020   0002               LSLS     R0,R0,#+8
   \   00000022   8122               MOVS     R2,#+129
   \   00000024   0243               ORRS     R2,R2,R0
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   ....               LDR      R0,??DataTable51  ;; 0xfffe0000
   \   0000002A   ........           BL       AT91F_SPI_CfgCs
    300              CS_BAUD = MCK / SPIBAUD_CSR1; 
   \   0000002E   1820               MOVS     R0,#+24
    301              AT91F_SPI_CfgCs (AT91C_BASE_SPI, 1, AT91C_SPI_NCPHA |  AT91C_SPI_BITS_16 | AT91C_SPI_DLYBCT |(AT91C_SPI_SCBR & (CS_BAUD << 8)) ); /*ustawienia dla RF  :*/
   \   00000030   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000032   000E               LSRS     R0,R0,#+24
   \   00000034   0002               LSLS     R0,R0,#+8
   \   00000036   234A               LDR      R2,??SpiMaster_Init_0  ;; 0x1000082
   \   00000038   0243               ORRS     R2,R2,R0
   \   0000003A   0121               MOVS     R1,#+1
   \   0000003C   ....               LDR      R0,??DataTable51  ;; 0xfffe0000
   \   0000003E   ........           BL       AT91F_SPI_CfgCs
    302              CS_BAUD = MCK / SPIBAUD_CSR2; 
   \   00000042   1020               MOVS     R0,#+16
    303              AT91F_SPI_CfgCs (AT91C_BASE_SPI, 2, AT91C_SPI_NCPHA |  AT91C_SPI_BITS_16 | AT91C_SPI_DLYBCT |(AT91C_SPI_SCBR & (CS_BAUD << 8)) ); 
   \   00000044   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000046   000E               LSRS     R0,R0,#+24
   \   00000048   0002               LSLS     R0,R0,#+8
   \   0000004A   1E4A               LDR      R2,??SpiMaster_Init_0  ;; 0x1000082
   \   0000004C   0243               ORRS     R2,R2,R0
   \   0000004E   0221               MOVS     R1,#+2
   \   00000050   ....               LDR      R0,??DataTable51  ;; 0xfffe0000
   \   00000052   ........           BL       AT91F_SPI_CfgCs
    304              CS_BAUD = MCK / SPIBAUD_CSR3; 
   \   00000056   0C20               MOVS     R0,#+12
    305                AT91F_SPI_CfgCs (AT91C_BASE_SPI, 3, AT91C_SPI_CPOL |  AT91C_SPI_BITS_16 | (AT91C_SPI_SCBR & (CS_BAUD << 8)) );
   \   00000058   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000005A   000E               LSRS     R0,R0,#+24
   \   0000005C   0002               LSLS     R0,R0,#+8
   \   0000005E   8122               MOVS     R2,#+129
   \   00000060   0243               ORRS     R2,R2,R0
   \   00000062   0321               MOVS     R1,#+3
   \   00000064   ....               LDR      R0,??DataTable51  ;; 0xfffe0000
   \   00000066   ........           BL       AT91F_SPI_CfgCs
    306                          
    307          
    308              
    309          
    310          
    311                    // konfiguracja PDC
    312                  AT91F_PDC_Open(AT91C_BASE_PDC_SPI);  //wyczyszczenie PDC
   \   0000006A   1748               LDR      R0,??SpiMaster_Init_0+0x4  ;; 0xfffe0100
   \   0000006C   ........           BL       AT91F_PDC_Open
    313          
    314                  AT91F_PDC_DisableTx (AT91C_BASE_PDC_SPI); 
   \   00000070   1548               LDR      R0,??SpiMaster_Init_0+0x4  ;; 0xfffe0100
   \   00000072   ........           BL       AT91F_PDC_DisableTx
    315                  AT91F_PDC_DisableRx (AT91C_BASE_PDC_SPI); 
   \   00000076   1448               LDR      R0,??SpiMaster_Init_0+0x4  ;; 0xfffe0100
   \   00000078   ........           BL       AT91F_PDC_DisableRx
    316               
    317          
    318                  unsigned long xxR= AT91F_SPI_ReceiveFrame (AT91C_BASE_SPI, pSPI_Buff->Buffer_Rx1, 0,pSPI_Buff->Buffer_Rx2,0); //Ustawia bufor odbiorczy bufor dodatkowy
   \   0000007C   82B0               SUB      SP,SP,#+8
   \   0000007E   0020               MOVS     R0,#+0
   \   00000080   0090               STR      R0,[SP, #+0]
   \   00000082   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   00000084   0368               LDR      R3,[R0, #+0]
   \   00000086   6833               ADDS     R3,R3,#+104
   \   00000088   0022               MOVS     R2,#+0
   \   0000008A   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   0000008C   0168               LDR      R1,[R0, #+0]
   \   0000008E   ....               LDR      R0,??DataTable51  ;; 0xfffe0000
   \   00000090   ........           BL       AT91F_SPI_ReceiveFrame
   \   00000094   02B0               ADD      SP,SP,#+8
   \   00000096   0600               MOVS     R6,R0
    319                
    320           
    321                  AT91F_PDC_EnableTx (AT91C_BASE_PDC_SPI); 
   \   00000098   0B48               LDR      R0,??SpiMaster_Init_0+0x4  ;; 0xfffe0100
   \   0000009A   ........           BL       AT91F_PDC_EnableTx
    322                  AT91F_PDC_EnableRx (AT91C_BASE_PDC_SPI); 
   \   0000009E   0A48               LDR      R0,??SpiMaster_Init_0+0x4  ;; 0xfffe0100
   \   000000A0   ........           BL       AT91F_PDC_EnableRx
    323              
    324                  
    325                  pSPI -> SPI_IDR = 0xFFFFFFFF;  
   \   000000A4   0020               MOVS     R0,#+0
   \   000000A6   C043               MVNS     R0,R0            ;; #-1
   \   000000A8   A061               STR      R0,[R4, #+24]
    326                  
    327                  
    328                  pSPI_Buff->BuffToSend = pSPI_Buff->Buffer_Tx1;   
   \   000000AA   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   000000AC   0068               LDR      R0,[R0, #+0]
   \   000000AE   D830               ADDS     R0,R0,#+216
   \   000000B0   ....               LDR      R1,??DataTable50  ;; pSPI_Buff
   \   000000B2   0968               LDR      R1,[R1, #+0]
   \   000000B4   3431               ADDS     R1,R1,#+52
   \   000000B6   0160               STR      R1,[R0, #+0]
    329          
    330           
    331                  AT91C_BASE_SPI -> SPI_IER = AT91C_SPI_ENDRX | AT91C_SPI_RXBUFF;
   \   000000B8   ....               LDR      R0,??DataTable28  ;; 0xfffe0014
   \   000000BA   5021               MOVS     R1,#+80
   \   000000BC   0160               STR      R1,[R0, #+0]
    332                  
    333          }//_____________________________________________________________________________
   \   000000BE   70BC               POP      {R4-R6}
   \   000000C0   01BC               POP      {R0}
   \   000000C2   0047               BX       R0               ;; return
   \                     ??SpiMaster_Init_0:
   \   000000C4   82000001           DC32     0x1000082
   \   000000C8   0001FEFF           DC32     0xfffe0100
    334          
    335          
    336          
    337          
    338          
    339          //-----------------------------------------------------------------------------
    340          //!  Nazwa funkcji :    SPI_Send_Buff
    341          //!  Funkcja dodaje zadanie wys³ania poprzez SPI bufora danych do kolejki
    342          //-----------------------------------------------------------------------------
    343          //! 
    344          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    345          void SPI_SendB_Buff (char *Data_To_Send, unsigned int QuantityByte, char CS)
    346          {
   \                     SPI_SendB_Buff:
   \   00000000   70B5               PUSH     {R4-R6,LR}
    347              
    348             // if ((QuantityByte==0) || (!CS)) return;
    349              if ((QuantityByte==0)) return;
   \   00000002   0029               CMP      R1,#+0
   \   00000004   61D0               BEQ      ??SPI_SendB_Buff_0
    350              
    351              short int QuantityWord   = QuantityByte/2;
   \   00000006   4908               LSRS     R1,R1,#+1
    352              short int RegToSendCount = SPI_Buff.WordToSendCount;
                               ^
Warning[Pe177]: variable "RegToSendCount" was declared but never referenced
   \   00000008   ....               LDR      R3,??DataTable18  ;; SPI_Buff + 220
   \   0000000A   1B78               LDRB     R3,[R3, #+0]
    353              //short int QuantityREG    = QuantityWord/2;
    354                
    355              if (QuantityWord>SPI_BUFFER_REG_SIZE) return;
   \   0000000C   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   0000000E   0914               ASRS     R1,R1,#+16
   \   00000010   0D29               CMP      R1,#+13
   \   00000012   5ADA               BGE      ??SPI_SendB_Buff_0
    356              
    357          
    358              
    359              while(QuantityWord+ (SPI_Buff.WordToSendCount)>SPI_BUFFER_REG_SIZE);
   \                     ??SPI_SendB_Buff_1:
   \   00000014   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   00000016   0914               ASRS     R1,R1,#+16
   \   00000018   ....               LDR      R3,??DataTable18  ;; SPI_Buff + 220
   \   0000001A   1B78               LDRB     R3,[R3, #+0]
   \   0000001C   CB18               ADDS     R3,R1,R3
   \   0000001E   0D2B               CMP      R3,#+13
   \   00000020   F8DA               BGE      ??SPI_SendB_Buff_1
    360              
    361           
    362              for (short int i=0; i<QuantityWord; i++)
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   3AE0               B        ??SPI_SendB_Buff_2
    363              {
    364          
    365                pSPI_Buff->BuffToSend[((pSPI_Buff->WordToSendCount+i)*4)+1]=Data_To_Send[i*2];
   \                     ??SPI_SendB_Buff_3:
   \   00000026   ....               LDR      R4,??DataTable50  ;; pSPI_Buff
   \   00000028   2468               LDR      R4,[R4, #+0]
   \   0000002A   DC34               ADDS     R4,R4,#+220
   \   0000002C   2478               LDRB     R4,[R4, #+0]
   \   0000002E   1B04               LSLS     R3,R3,#+16       ;; SignExtS R3,R3,#+16,#+16
   \   00000030   1B14               ASRS     R3,R3,#+16
   \   00000032   E418               ADDS     R4,R4,R3
   \   00000034   0425               MOVS     R5,#+4
   \   00000036   6C43               MULS     R4,R5,R4
   \   00000038   ....               LDR      R5,??DataTable50  ;; pSPI_Buff
   \   0000003A   2D68               LDR      R5,[R5, #+0]
   \   0000003C   D835               ADDS     R5,R5,#+216
   \   0000003E   2D68               LDR      R5,[R5, #+0]
   \   00000040   2C19               ADDS     R4,R5,R4
   \   00000042   1B04               LSLS     R3,R3,#+16       ;; SignExtS R3,R3,#+16,#+16
   \   00000044   1B14               ASRS     R3,R3,#+16
   \   00000046   0225               MOVS     R5,#+2
   \   00000048   5D43               MULS     R5,R3,R5
   \   0000004A   455D               LDRB     R5,[R0, R5]
   \   0000004C   6570               STRB     R5,[R4, #+1]
    366                pSPI_Buff->BuffToSend[((pSPI_Buff->WordToSendCount+i)*4)]=Data_To_Send[(i*2)+1];
   \   0000004E   ....               LDR      R4,??DataTable50  ;; pSPI_Buff
   \   00000050   2468               LDR      R4,[R4, #+0]
   \   00000052   DC34               ADDS     R4,R4,#+220
   \   00000054   2478               LDRB     R4,[R4, #+0]
   \   00000056   1B04               LSLS     R3,R3,#+16       ;; SignExtS R3,R3,#+16,#+16
   \   00000058   1B14               ASRS     R3,R3,#+16
   \   0000005A   E418               ADDS     R4,R4,R3
   \   0000005C   0425               MOVS     R5,#+4
   \   0000005E   6C43               MULS     R4,R5,R4
   \   00000060   ....               LDR      R5,??DataTable50  ;; pSPI_Buff
   \   00000062   2D68               LDR      R5,[R5, #+0]
   \   00000064   D835               ADDS     R5,R5,#+216
   \   00000066   2D68               LDR      R5,[R5, #+0]
   \   00000068   1B04               LSLS     R3,R3,#+16       ;; SignExtS R3,R3,#+16,#+16
   \   0000006A   1B14               ASRS     R3,R3,#+16
   \   0000006C   0226               MOVS     R6,#+2
   \   0000006E   5E43               MULS     R6,R3,R6
   \   00000070   8619               ADDS     R6,R0,R6
   \   00000072   7678               LDRB     R6,[R6, #+1]
   \   00000074   2E55               STRB     R6,[R5, R4]
    367                
    368                pSPI_Buff->BuffToSend[((pSPI_Buff->WordToSendCount+i)*4)+2]=(~CS);
   \   00000076   ....               LDR      R4,??DataTable50  ;; pSPI_Buff
   \   00000078   2468               LDR      R4,[R4, #+0]
   \   0000007A   DC34               ADDS     R4,R4,#+220
   \   0000007C   2478               LDRB     R4,[R4, #+0]
   \   0000007E   1B04               LSLS     R3,R3,#+16       ;; SignExtS R3,R3,#+16,#+16
   \   00000080   1B14               ASRS     R3,R3,#+16
   \   00000082   E418               ADDS     R4,R4,R3
   \   00000084   0425               MOVS     R5,#+4
   \   00000086   6C43               MULS     R4,R5,R4
   \   00000088   ....               LDR      R5,??DataTable50  ;; pSPI_Buff
   \   0000008A   2D68               LDR      R5,[R5, #+0]
   \   0000008C   D835               ADDS     R5,R5,#+216
   \   0000008E   2D68               LDR      R5,[R5, #+0]
   \   00000090   2C19               ADDS     R4,R5,R4
   \   00000092   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   00000094   120E               LSRS     R2,R2,#+24
   \   00000096   D543               MVNS     R5,R2
   \   00000098   A570               STRB     R5,[R4, #+2]
    369                //pSPI_Buff->WordToSendCount=pSPI_Buff->WordToSendCount+i+1;  
    370              }
   \   0000009A   5B1C               ADDS     R3,R3,#+1
   \                     ??SPI_SendB_Buff_2:
   \   0000009C   1B04               LSLS     R3,R3,#+16       ;; SignExtS R3,R3,#+16,#+16
   \   0000009E   1B14               ASRS     R3,R3,#+16
   \   000000A0   0904               LSLS     R1,R1,#+16       ;; SignExtS R1,R1,#+16,#+16
   \   000000A2   0914               ASRS     R1,R1,#+16
   \   000000A4   8B42               CMP      R3,R1
   \   000000A6   BEDB               BLT      ??SPI_SendB_Buff_3
    371              pSPI_Buff->WordToSendCount=pSPI_Buff->WordToSendCount+QuantityWord;
   \   000000A8   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   000000AA   0068               LDR      R0,[R0, #+0]
   \   000000AC   DC30               ADDS     R0,R0,#+220
   \   000000AE   ....               LDR      R2,??DataTable50  ;; pSPI_Buff
   \   000000B0   1268               LDR      R2,[R2, #+0]
   \   000000B2   DC32               ADDS     R2,R2,#+220
   \   000000B4   1278               LDRB     R2,[R2, #+0]
   \   000000B6   5118               ADDS     R1,R2,R1
   \   000000B8   0170               STRB     R1,[R0, #+0]
    372              
    373          
    374              
    375              if (pSPI_Buff->Buffer_TxCount==0)
   \   000000BA   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   000000BC   0068               LDR      R0,[R0, #+0]
   \   000000BE   DD30               ADDS     R0,R0,#+221
   \   000000C0   0078               LDRB     R0,[R0, #+0]
   \   000000C2   0028               CMP      R0,#+0
   \   000000C4   01D1               BNE      ??SPI_SendB_Buff_0
    376              {
    377              SPI_Send_Executive();
   \   000000C6   ........           BL       SPI_Send_Executive
   \                     ??SPI_SendB_Buff_0:
   \   000000CA   70BC               POP      {R4-R6}
   \   000000CC   01BC               POP      {R0}
   \   000000CE   0047               BX       R0               ;; return
    378              }
    379          }//_____________________________________________________________________________
    380          
    381          
    382          
    383          
    384          //-----------------------------------------------------------------------------
    385          //!  Nazwa funkcji :    SPI_Send_Executive pSPI_Buff->Buffer_Rx
    386          //!  Funkcja wysy³a dane z bufora oczekuj¹cego a nastepnie zamienia bufory oczekuj¹cy z realizowanym
    387          //-----------------------------------------------------------------------------
    388          //! 
    389          //-----------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    390          void SPI_Send_Executive ()
    391          {
   \                     SPI_Send_Executive:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    392                char QuantityWord;
    393            
    394                AT91C_BASE_SPI -> SPI_IER = AT91C_SPI_ENDRX;
   \   00000002   ....               LDR      R0,??DataTable28  ;; 0xfffe0014
   \   00000004   1021               MOVS     R1,#+16
   \   00000006   0160               STR      R1,[R0, #+0]
    395          
    396                  spi_Endrx_Flag=0;
   \   00000008   ....               LDR      R0,??DataTable29  ;; spi_Endrx_Flag
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0160               STR      R1,[R0, #+0]
    397                  spi_Endtx_Flag=0;  
   \   0000000E   3448               LDR      R0,??SPI_Send_Executive_0  ;; spi_Endtx_Flag
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   0160               STR      R1,[R0, #+0]
    398                  spi_Rxbuff_Flag=0;  
   \   00000014   ....               LDR      R0,??DataTable30  ;; spi_Rxbuff_Flag
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0160               STR      R1,[R0, #+0]
    399                
    400                             
    401                  
    402                //ustawienie buforów nadawczych i odbiorczych naprzemiennie Buffer_Rx1->Buffer_Rx2, Buffer_Rx2->Buffer_Rx1, Buffer_Tx1->Buffer_Tx2
    403                if (pSPI_Buff->pBuffer_Tx == pSPI_Buff->Buffer_Tx1)
   \   0000001A   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   0000001C   0068               LDR      R0,[R0, #+0]
   \   0000001E   D430               ADDS     R0,R0,#+212
   \   00000020   0068               LDR      R0,[R0, #+0]
   \   00000022   ....               LDR      R1,??DataTable50  ;; pSPI_Buff
   \   00000024   0968               LDR      R1,[R1, #+0]
   \   00000026   3431               ADDS     R1,R1,#+52
   \   00000028   8842               CMP      R0,R1
   \   0000002A   15D1               BNE      ??SPI_Send_Executive_1
    404                {
    405                   pSPI_Buff->pBuffer_Tx = pSPI_Buff->Buffer_Tx2;
   \   0000002C   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   0000002E   0068               LDR      R0,[R0, #+0]
   \   00000030   D430               ADDS     R0,R0,#+212
   \   00000032   ....               LDR      R1,??DataTable50  ;; pSPI_Buff
   \   00000034   0968               LDR      R1,[R1, #+0]
   \   00000036   9C31               ADDS     R1,R1,#+156
   \   00000038   0160               STR      R1,[R0, #+0]
    406                   pSPI_Buff->pBuffer_Rx = pSPI_Buff->Buffer_Rx2;
   \   0000003A   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   0000003C   0068               LDR      R0,[R0, #+0]
   \   0000003E   D030               ADDS     R0,R0,#+208
   \   00000040   ....               LDR      R1,??DataTable50  ;; pSPI_Buff
   \   00000042   0968               LDR      R1,[R1, #+0]
   \   00000044   6831               ADDS     R1,R1,#+104
   \   00000046   0160               STR      R1,[R0, #+0]
    407                   pSPI_Buff->BuffToSend = pSPI_Buff->Buffer_Tx1; 
   \   00000048   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   0000004A   0068               LDR      R0,[R0, #+0]
   \   0000004C   D830               ADDS     R0,R0,#+216
   \   0000004E   ....               LDR      R1,??DataTable50  ;; pSPI_Buff
   \   00000050   0968               LDR      R1,[R1, #+0]
   \   00000052   3431               ADDS     R1,R1,#+52
   \   00000054   0160               STR      R1,[R0, #+0]
   \   00000056   13E0               B        ??SPI_Send_Executive_2
    408                }
    409                else 
    410                {
    411                   pSPI_Buff->pBuffer_Tx  = pSPI_Buff->Buffer_Tx1; 
   \                     ??SPI_Send_Executive_1:
   \   00000058   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   0000005A   0068               LDR      R0,[R0, #+0]
   \   0000005C   D430               ADDS     R0,R0,#+212
   \   0000005E   ....               LDR      R1,??DataTable50  ;; pSPI_Buff
   \   00000060   0968               LDR      R1,[R1, #+0]
   \   00000062   3431               ADDS     R1,R1,#+52
   \   00000064   0160               STR      R1,[R0, #+0]
    412                   pSPI_Buff->pBuffer_Rx  = pSPI_Buff->Buffer_Rx1;
   \   00000066   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   00000068   0068               LDR      R0,[R0, #+0]
   \   0000006A   D030               ADDS     R0,R0,#+208
   \   0000006C   ....               LDR      R1,??DataTable50  ;; pSPI_Buff
   \   0000006E   0968               LDR      R1,[R1, #+0]
   \   00000070   0160               STR      R1,[R0, #+0]
    413                   pSPI_Buff->BuffToSend = pSPI_Buff->Buffer_Tx2; 
   \   00000072   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   00000074   0068               LDR      R0,[R0, #+0]
   \   00000076   D830               ADDS     R0,R0,#+216
   \   00000078   ....               LDR      R1,??DataTable50  ;; pSPI_Buff
   \   0000007A   0968               LDR      R1,[R1, #+0]
   \   0000007C   9C31               ADDS     R1,R1,#+156
   \   0000007E   0160               STR      R1,[R0, #+0]
    414                }
    415               
    416                QuantityWord=pSPI_Buff->WordToSendCount;
   \                     ??SPI_Send_Executive_2:
   \   00000080   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   00000082   0068               LDR      R0,[R0, #+0]
   \   00000084   DC30               ADDS     R0,R0,#+220
   \   00000086   0478               LDRB     R4,[R0, #+0]
    417                pSPI_Buff->WordToSendCount=0;
   \   00000088   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   0000008A   0068               LDR      R0,[R0, #+0]
   \   0000008C   DC30               ADDS     R0,R0,#+220
   \   0000008E   0021               MOVS     R1,#+0
   \   00000090   0170               STRB     R1,[R0, #+0]
    418                pSPI_Buff->Buffer_TxCount=QuantityWord;
   \   00000092   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   00000094   0068               LDR      R0,[R0, #+0]
   \   00000096   DD30               ADDS     R0,R0,#+221
   \   00000098   0470               STRB     R4,[R0, #+0]
    419                unsigned long xxR= AT91F_SPI_ReceiveFrame (AT91C_BASE_SPI,pSPI_Buff->pBuffer_Rx, QuantityWord,0,0); 
   \   0000009A   82B0               SUB      SP,SP,#+8
   \   0000009C   0020               MOVS     R0,#+0
   \   0000009E   0090               STR      R0,[SP, #+0]
   \   000000A0   0023               MOVS     R3,#+0
   \   000000A2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000A4   240E               LSRS     R4,R4,#+24
   \   000000A6   2200               MOVS     R2,R4
   \   000000A8   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   000000AA   0068               LDR      R0,[R0, #+0]
   \   000000AC   D030               ADDS     R0,R0,#+208
   \   000000AE   0168               LDR      R1,[R0, #+0]
   \   000000B0   ....               LDR      R0,??DataTable51  ;; 0xfffe0000
   \   000000B2   ........           BL       AT91F_SPI_ReceiveFrame
   \   000000B6   02B0               ADD      SP,SP,#+8
   \   000000B8   0500               MOVS     R5,R0
    420                unsigned long xxT = AT91F_SPI_SendFrame (AT91C_BASE_SPI,pSPI_Buff->pBuffer_Tx,QuantityWord,0,0 );
   \   000000BA   82B0               SUB      SP,SP,#+8
   \   000000BC   0020               MOVS     R0,#+0
   \   000000BE   0090               STR      R0,[SP, #+0]
   \   000000C0   0023               MOVS     R3,#+0
   \   000000C2   2406               LSLS     R4,R4,#+24       ;; ZeroExtS R4,R4,#+24,#+24
   \   000000C4   240E               LSRS     R4,R4,#+24
   \   000000C6   2200               MOVS     R2,R4
   \   000000C8   ....               LDR      R0,??DataTable50  ;; pSPI_Buff
   \   000000CA   0068               LDR      R0,[R0, #+0]
   \   000000CC   D430               ADDS     R0,R0,#+212
   \   000000CE   0168               LDR      R1,[R0, #+0]
   \   000000D0   ....               LDR      R0,??DataTable51  ;; 0xfffe0000
   \   000000D2   ........           BL       AT91F_SPI_SendFrame
   \   000000D6   02B0               ADD      SP,SP,#+8
    421                
    422          }//_____________________________________________________________________________
   \   000000D8   01B0               ADD      SP,SP,#+4
   \   000000DA   30BC               POP      {R4,R5}
   \   000000DC   01BC               POP      {R0}
   \   000000DE   0047               BX       R0               ;; return
   \                     ??SPI_Send_Executive_0:
   \   000000E0   ........           DC32     spi_Endtx_Flag
    423          
    424          
    425          
    426          
    427          

   \                                 In section Debug.txt, align 4, keep-with-next
    428          void SPI_SendWord(short int Val, char CS)
    429          {
   \                     SPI_SendWord:
   \   00000000   01B5               PUSH     {R0,LR}
    430            char tabSPI[3];
    431            tabSPI[0]=(char)((Val>>8) & 0xFF);
   \   00000002   6A46               MOV      R2,SP
   \   00000004   0300               MOVS     R3,R0
   \   00000006   1B04               LSLS     R3,R3,#+16       ;; SignExtS R3,R3,#+16,#+16
   \   00000008   1B14               ASRS     R3,R3,#+16
   \   0000000A   1B12               ASRS     R3,R3,#+8
   \   0000000C   1370               STRB     R3,[R2, #+0]
    432            tabSPI[1]=(char)(Val & 0xFF);
   \   0000000E   6A46               MOV      R2,SP
   \   00000010   5070               STRB     R0,[R2, #+1]
    433            tabSPI[2]=0;
   \   00000012   6846               MOV      R0,SP
   \   00000014   0022               MOVS     R2,#+0
   \   00000016   8270               STRB     R2,[R0, #+2]
    434            
    435            SPI_SendB_Buff(tabSPI,2,CS);
   \   00000018   0A00               MOVS     R2,R1
   \   0000001A   1206               LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
   \   0000001C   120E               LSRS     R2,R2,#+24
   \   0000001E   0221               MOVS     R1,#+2
   \   00000020   6846               MOV      R0,SP
   \   00000022   ........           BL       SPI_SendB_Buff
    436          }
   \   00000026   01B0               ADD      SP,SP,#+4
   \   00000028   01BC               POP      {R0}
   \   0000002A   0047               BX       R0               ;; return
    437          
    438          
    439          
    440              
    441          
    442          //-----------------------------------------------------------------------------
    443          //! Nazwa funkcji :    SPI_Response_Interpretation
    444          //! Funkcja interpretacji danych otrzymanych z lini SPI 
    445          //! paramentr funkcji to iloæ odebranych danych
    446          //-----------------------------------------------------------------------------
    447          
    448          

   \                                 In section .bss, align 4
    449          char *zm_tmp1;
   \                     zm_tmp1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    450          char *zm_tmp2;
   \                     zm_tmp2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    451          char zm_tmp3;
   \                     zm_tmp3:
   \   00000000                      DS8 1
    452          
    453          

   \                                 In section .data, align 1
    454          char Real_Cs_RF=0xFF-Cs_RF;
   \                     Real_Cs_RF:
   \   00000000   FD                 DC8 253
    455          

   \                                 In section Debug.txt, align 4, keep-with-next
    456          void SPI_Response_Interpretation(char TxCount)
    457          { 
   \                     SPI_Response_Interpretation:
   \   00000000   31B5               PUSH     {R0,R4,R5,LR}
    458             char *TMP_pBuffer_Tx = pSPI_Buff->pBuffer_Tx;
   \   00000002   1248               LDR      R0,??SPI_Response_Interpretation_0  ;; pSPI_Buff
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   D430               ADDS     R0,R0,#+212
   \   00000008   0468               LDR      R4,[R0, #+0]
    459             char *TMP_pBuffer_Rx = pSPI_Buff->pBuffer_Rx;
   \   0000000A   1048               LDR      R0,??SPI_Response_Interpretation_0  ;; pSPI_Buff
   \   0000000C   0068               LDR      R0,[R0, #+0]
   \   0000000E   D030               ADDS     R0,R0,#+208
   \   00000010   0568               LDR      R5,[R0, #+0]
    460             char move;  
    461             
    462          
    463             
    464             if (TMP_pBuffer_Tx[2]==Real_Cs_RF)
   \   00000012   A078               LDRB     R0,[R4, #+2]
   \   00000014   0E49               LDR      R1,??SPI_Response_Interpretation_0+0x4  ;; Real_Cs_RF
   \   00000016   0978               LDRB     R1,[R1, #+0]
   \   00000018   8842               CMP      R0,R1
   \   0000001A   05D1               BNE      ??SPI_Response_Interpretation_1
    465             {
    466               SPI_RFM12_Execute(TMP_pBuffer_Tx, TMP_pBuffer_Rx);  
   \   0000001C   2900               MOVS     R1,R5
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       SPI_RFM12_Execute
    467               TMP_pBuffer_Tx+=4;
   \   00000024   241D               ADDS     R4,R4,#+4
    468               TMP_pBuffer_Rx+=4;
   \   00000026   2D1D               ADDS     R5,R5,#+4
    469             }
    470          
    471             if (TMP_pBuffer_Tx[2]==0xFF-Cs_Clock)
   \                     ??SPI_Response_Interpretation_1:
   \   00000028   A078               LDRB     R0,[R4, #+2]
   \   0000002A   FE28               CMP      R0,#+254
   \   0000002C   0AD1               BNE      ??SPI_Response_Interpretation_2
    472             {
    473               move=SPI_Clock_Execute(TMP_pBuffer_Tx+1, TMP_pBuffer_Rx);  
                           ^
Warning[Pe223]: function "SPI_Clock_Execute" declared implicitly
   \   0000002E   2900               MOVS     R1,R5
   \   00000030   2000               MOVS     R0,R4
   \   00000032   401C               ADDS     R0,R0,#+1
   \   00000034   ........           BL       SPI_Clock_Execute
    474               TMP_pBuffer_Tx+=move;
   \   00000038   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   0000003A   000E               LSRS     R0,R0,#+24
   \   0000003C   2418               ADDS     R4,R4,R0
    475               TMP_pBuffer_Rx+=move;
   \   0000003E   0006               LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
   \   00000040   000E               LSRS     R0,R0,#+24
   \   00000042   2D18               ADDS     R5,R5,R0
    476             }
    477            
    478             /*
    479               char wsk=0;
    480          
    481              zm_tmp1=&TxCount;
    482              zm_tmp2=&wsk;
    483              
    484              TxCount *=4;
    485          
    486              wsk=0;
    487             
    488              while (TxCount>wsk)  //dopuki wszystkie odebrane dane nie zosta³y zinterpretowane
    489              {
    490                
    491                switch (0xF-((pSPI_Buff->pBuffer_Tx[wsk+2])&0xF))
    492                {
    493                  
    494          /*
                 ^
Warning[Pe009]: nested comment is not allowed
    495                  case Cs_Clock:  
    496                     wsk += SPI_Clock_Execute(pSPI_Buff->pBuffer_Tx+wsk+1, pSPI_Buff->pBuffer_Rx+wsk); 
    497                     //wsk *=2; 
    498                      wsk=TxCount;
    499                  break;
    500          
    501                  case Cs_RF:  
    502                    wsk=0;
    503                     SPI_RFM12_Execute(pSPI_Buff->pBuffer_Tx+wsk, pSPI_Buff->pBuffer_Rx+wsk);       
    504                     wsk +=4;
    505                     if (0xF-((pSPI_Buff->pBuffer_Tx[wsk+2])&0xF)==Cs_RF) wsk +=4;
    506                     if (0xF-((pSPI_Buff->pBuffer_Tx[wsk+2])&0xF)==Cs_RF) wsk +=4;
    507                     if (0xF-((pSPI_Buff->pBuffer_Tx[wsk+2])&0xF)==Cs_RF) wsk +=4;
    508          
    509                  break;
    510                  
    511                  default:
    512                    wsk=TxCount;
    513                    wsk=0;
    514                     SPI_RFM12_Execute(pSPI_Buff->pBuffer_Tx+wsk, pSPI_Buff->pBuffer_Rx+wsk); 
    515                     
    516                  break;  
    517             
    518                }
    519           
    520                //zm_tmp3=(0xF-((pSPI_Buff->pBuffer_Tx[wsk+2])&0xF));
    521                wsk=TxCount;
    522              }
    523            
    524          wsk =0;
    525               SPI_RFM12_Execute(pSPI_Buff->pBuffer_Tx+wsk, pSPI_Buff->pBuffer_Rx+wsk);  
    526          
    527          */
    528            
    529            
    530            
    531          }//_____________________________________________________________________________
   \                     ??SPI_Response_Interpretation_2:
   \   00000044   01B0               ADD      SP,SP,#+4
   \   00000046   30BC               POP      {R4,R5}
   \   00000048   01BC               POP      {R0}
   \   0000004A   0047               BX       R0               ;; return
   \                     ??SPI_Response_Interpretation_0:
   \   0000004C   ........           DC32     pSPI_Buff
   \   00000050   ........           DC32     Real_Cs_RF
    532          
    533          
    534          
    535          
    536          
    537          
    538          
    539          
    540          
    541          
    542          
    543          
    544          
    545          
    546          //FUNKCJE BIBLIOTECZNE *********************************************************
    547          
    548          
    549          //*--------------------------------------------------------------------------------------
    550          //* Function Name       	: AT91F_SPI_SWReset
    551          //* Object              	: SPI Software reset and check reg after reset
    552          //* Input Parameters    : none.
    553          //* Output Parameters  : none.
    554          //*--------------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    555          void AT91F_SPI_SWReset (const AT91PS_SPI pSpi)
    556          {
    557          	pSpi -> SPI_CR  = AT91C_SPI_SWRST; // SW reset
   \                     AT91F_SPI_SWReset:
   \   00000000   8021               MOVS     R1,#+128
   \   00000002   0160               STR      R1,[R0, #+0]
    558          }
   \   00000004   7047               BX       LR               ;; return
    559          
    560          
    561          
    562          //*--------------------------------------------------------------------------------------
    563          //* Function Name       	: AT91F_SPI_En_Dis
    564          //* Object              	: SPI Enable  Disable
    565          //* Input Parameters    : Enable.
    566          //* Output Parameters  : error.
    567          //*--------------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    568          void AT91F_SPI_En_Dis (const AT91PS_SPI pSpi, unsigned char Enable)
    569          {
   \                     AT91F_SPI_En_Dis:
   \   00000000   01B5               PUSH     {R0,LR}
    570          	volatile unsigned int error;
    571          
    572          	error = 0;
   \   00000002   0022               MOVS     R2,#+0
   \   00000004   0092               STR      R2,[SP, #+0]
    573          
    574          	switch (Enable)
   \   00000006   0906               LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
   \   00000008   090E               LSRS     R1,R1,#+24
   \   0000000A   0029               CMP      R1,#+0
   \   0000000C   04D0               BEQ      ??AT91F_SPI_En_Dis_0
   \   0000000E   0129               CMP      R1,#+1
   \   00000010   08D0               BEQ      ??AT91F_SPI_En_Dis_1
   \   00000012   0229               CMP      R1,#+2
   \   00000014   0CD0               BEQ      ??AT91F_SPI_En_Dis_2
   \   00000016   10E0               B        ??AT91F_SPI_En_Dis_3
    575          	{ 
    576          		case ENABLE_SPI:
    577          		pSpi -> SPI_CR  = AT91C_SPI_SPIEN; // SPI is enable
   \                     ??AT91F_SPI_En_Dis_0:
   \   00000018   0121               MOVS     R1,#+1
   \   0000001A   0160               STR      R1,[R0, #+0]
    578          		Delay (0xFF);
                 		^
Warning[Pe223]: function "Delay" declared implicitly
   \   0000001C   FF20               MOVS     R0,#+255
   \   0000001E   ........           BL       Delay
   \   00000022   0AE0               B        ??AT91F_SPI_En_Dis_3
    579          		break;
    580          
    581          		case DISABLE_SPI:
    582          		pSpi -> SPI_CR  = AT91C_SPI_SPIDIS; // SPI is Disable
   \                     ??AT91F_SPI_En_Dis_1:
   \   00000024   0221               MOVS     R1,#+2
   \   00000026   0160               STR      R1,[R0, #+0]
    583          		Delay (0xFF);
   \   00000028   FF20               MOVS     R0,#+255
   \   0000002A   ........           BL       Delay
   \   0000002E   04E0               B        ??AT91F_SPI_En_Dis_3
    584          		break;
    585          
    586          		case ENABLE_DISABLE_SPI:
    587          		pSpi -> SPI_CR  = (AT91C_SPI_SPIDIS | AT91C_SPI_SPIEN); // Enable and disable are set @ the same time => SPI shoulb be disable
   \                     ??AT91F_SPI_En_Dis_2:
   \   00000030   0321               MOVS     R1,#+3
   \   00000032   0160               STR      R1,[R0, #+0]
    588          		Delay (0xFF);
   \   00000034   FF20               MOVS     R0,#+255
   \   00000036   ........           BL       Delay
    589          		break;
    590          	}
    591          }
   \                     ??AT91F_SPI_En_Dis_3:
   \   0000003A   01B0               ADD      SP,SP,#+4
   \   0000003C   01BC               POP      {R0}
   \   0000003E   0047               BX       R0               ;; return
    592          
    593          
    594          //*--------------------------------------------------------------------------------------
    595          //* Function Name       : AT91F_Set_SPI_CSR
    596          //* Object              : Allows programming SPI_CSR registers
    597          //* Input Parameters    : Csr_Value.
    598          //* Input Parameters    : Csr_Number.
    599          //* Output Parameters   : none.
    600          //*--------------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    601          void AT91F_Set_SPI_CSR (const AT91PS_SPI pSpi, unsigned long Csr_Value, unsigned long Csr_Number)
    602          {
   \                     AT91F_Set_SPI_CSR:
   \   00000000   01B5               PUSH     {R0,LR}
    603          	switch (Csr_Number)
   \   00000002   002A               CMP      R2,#+0
   \   00000004   06D0               BEQ      ??AT91F_Set_SPI_CSR_0
   \   00000006   012A               CMP      R2,#+1
   \   00000008   06D0               BEQ      ??AT91F_Set_SPI_CSR_1
   \   0000000A   022A               CMP      R2,#+2
   \   0000000C   06D0               BEQ      ??AT91F_Set_SPI_CSR_2
   \   0000000E   032A               CMP      R2,#+3
   \   00000010   06D0               BEQ      ??AT91F_Set_SPI_CSR_3
   \   00000012   06E0               B        ??AT91F_Set_SPI_CSR_4
    604          	{
    605          		case CSR0:
    606          		pSpi -> SPI_CSR[CSR0]  = Csr_Value; // CSR0 <- Csr_Value
   \                     ??AT91F_Set_SPI_CSR_0:
   \   00000014   0163               STR      R1,[R0, #+48]
   \   00000016   04E0               B        ??AT91F_Set_SPI_CSR_4
    607          		break;
    608          
    609          		case CSR1:
    610          		pSpi -> SPI_CSR[CSR1]  = Csr_Value; // CSR1 <- Csr_Value
   \                     ??AT91F_Set_SPI_CSR_1:
   \   00000018   4163               STR      R1,[R0, #+52]
   \   0000001A   02E0               B        ??AT91F_Set_SPI_CSR_4
    611          		break;
    612          		
    613          		case CSR2:
    614          		pSpi -> SPI_CSR[CSR2]  = Csr_Value; // CSR2 <- Csr_Value
   \                     ??AT91F_Set_SPI_CSR_2:
   \   0000001C   8163               STR      R1,[R0, #+56]
   \   0000001E   00E0               B        ??AT91F_Set_SPI_CSR_4
    615          		break;
    616          
    617          		case CSR3:
    618          		pSpi -> SPI_CSR[CSR3]  = Csr_Value; // CSR3 <- Csr_Value
   \                     ??AT91F_Set_SPI_CSR_3:
   \   00000020   C163               STR      R1,[R0, #+60]
    619          		break;
    620          
    621          		default:
    622          		break; 
    623          	}
    624          }
   \                     ??AT91F_Set_SPI_CSR_4:
   \   00000022   01B0               ADD      SP,SP,#+4
   \   00000024   01BC               POP      {R0}
   \   00000026   0047               BX       R0               ;; return
    625          
    626          
    627          //*--------------------------------------------------------------------------------------
    628          //* Function Name       	: AT91F_SPI_Read_Data
    629          //* Object              	: Read SPI_RDR
    630          //* Input Parameters    : none.
    631          //* Output Parameters  : Data_Recieved.
    632          //*--------------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    633          unsigned long AT91F_SPI_Read_Data (const AT91PS_SPI pSpi)
    634          {
   \                     AT91F_SPI_Read_Data:
   \   00000000   0100               MOVS     R1,R0
    635          	unsigned long Data_Recieved;
    636          
    637                  AT91C_BASE_PIOA->PIO_SODR = AT91C_PIO_PA3 ;AT91C_BASE_PIOA->PIO_CODR = AT91C_PIO_PA3; 
   \   00000002   0948               LDR      R0,??AT91F_SPI_Read_Data_0  ;; 0xfffff430
   \   00000004   0822               MOVS     R2,#+8
   \   00000006   0260               STR      R2,[R0, #+0]
   \   00000008   0848               LDR      R0,??AT91F_SPI_Read_Data_0+0x4  ;; 0xfffff434
   \   0000000A   0822               MOVS     R2,#+8
   \   0000000C   0260               STR      R2,[R0, #+0]
    638          	/*spi_Rdrf_Flag = 0;
    639          	pSpi -> SPI_IER = AT91C_SPI_RDRF; // Disabled in the interrupt handler
    640          
    641          	while (spi_Rdrf_Flag == 0);
    642                  */
    643          	Data_Recieved = (pSpi -> SPI_RDR & 0x000FFFFF); // Read RDR and mask non used bits
   \   0000000E   8868               LDR      R0,[R1, #+8]
   \   00000010   0003               LSLS     R0,R0,#+12       ;; ZeroExtS R0,R0,#+12,#+12
   \   00000012   000B               LSRS     R0,R0,#+12
    644          
    645          	pSpi -> SPI_IER = AT91C_SPI_RDRF; // RDF re enabled (see handler)
   \   00000014   0122               MOVS     R2,#+1
   \   00000016   4A61               STR      R2,[R1, #+20]
    646          
    647                  AT91C_BASE_PIOA->PIO_SODR = AT91C_PIO_PA3 ;AT91C_BASE_PIOA->PIO_CODR = AT91C_PIO_PA3; 
   \   00000018   0349               LDR      R1,??AT91F_SPI_Read_Data_0  ;; 0xfffff430
   \   0000001A   0822               MOVS     R2,#+8
   \   0000001C   0A60               STR      R2,[R1, #+0]
   \   0000001E   0349               LDR      R1,??AT91F_SPI_Read_Data_0+0x4  ;; 0xfffff434
   \   00000020   0822               MOVS     R2,#+8
   \   00000022   0A60               STR      R2,[R1, #+0]
    648          	return Data_Recieved; // Return RDR (Read Data + PCS)
   \   00000024   7047               BX       LR               ;; return
   \   00000026   C046               Nop      
   \                     ??AT91F_SPI_Read_Data_0:
   \   00000028   30F4FFFF           DC32     0xfffff430
   \   0000002C   34F4FFFF           DC32     0xfffff434
    649          }
    650          
    651          
    652          //*--------------------------------------------------------------------------------------
    653          //* Function Name       : AT91F_SPI_Send_Data
    654          //* Object              : Send a data
    655          //* Input Parameters    : Data_To_Send.
    656          //* Output Parameters   : none.
    657          //*--------------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    658          void AT91F_SPI_Send_Data (const AT91PS_SPI pSpi, unsigned long Data_To_Send)
    659          {
    660          	// IMPORTANT: Data_To_Send = TD (in fixed mode)
    661          	// IMPORTANT: Data_To_Send = TD + PCS + LASTXFER (in variable mode)
    662          	spi_Tdre_Flag = 0;
   \                     AT91F_SPI_Send_Data:
   \   00000000   034A               LDR      R2,??AT91F_SPI_Send_Data_0  ;; spi_Tdre_Flag
   \   00000002   0023               MOVS     R3,#+0
   \   00000004   1370               STRB     R3,[R2, #+0]
    663          
    664          	Data_To_Send &= 0x010FFFFF; // mask non used bits
   \   00000006   0A00               MOVS     R2,R1
   \   00000008   0249               LDR      R1,??AT91F_SPI_Send_Data_0+0x4  ;; 0x10fffff
   \   0000000A   1140               ANDS     R1,R1,R2
    665          	pSpi -> SPI_TDR = Data_To_Send;
   \   0000000C   C160               STR      R1,[R0, #+12]
    666          }
   \   0000000E   7047               BX       LR               ;; return
   \                     ??AT91F_SPI_Send_Data_0:
   \   00000010   ........           DC32     spi_Tdre_Flag
   \   00000014   FFFF0F01           DC32     0x10fffff
    667          
    668          
    669          //*--------------------------------------------------------------------------------------
    670          //* Function Name       	: AT91F_SPI_Open
    671          //* Object              	: Open the SPI0
    672          //* Input Parameters    : none.
    673          //* Output Parameters  : error.
    674          //*--------------------------------------------------------------------------------------

   \                                 In section Debug.txt, align 4, keep-with-next
    675          void  AT91F_SPI_Open (void)
    676          {
   \                     AT91F_SPI_Open:
   \   00000000   10B5               PUSH     {R4,LR}
    677          // MISO, MOSI, CLK, NPCS[3:0] are configured
    678          // SPI (IP) clock is activated
    679          // Interrupt Handler is configured
    680          // SPI is resetted
    681          
    682          	AT91PS_SPI     pSPI = AT91C_BASE_SPI;
   \   00000002   124C               LDR      R4,??AT91F_SPI_Open_0  ;; 0xfffe0000
    683          
    684          	//  Cfp SPI PIO, PMC, ...
    685          		// Configure SPI PIOs
    686            		AT91F_SPI_CfgPIO ();
   \   00000004   ........           BL       AT91F_SPI_CfgPIO
    687          
    688          	  	// Configure PMC by enabling SPI clock
    689            		AT91F_SPI_CfgPMC ();
   \   00000008   ........           BL       AT91F_SPI_CfgPMC
    690          
    691          		// Configure SPI interrupt
    692          		AT91F_AIC_ConfigureIt ( AT91C_BASE_AIC, AT91C_ID_SPI, SPI_PRIOR, AT91C_AIC_SRCTYPE_INT_POSITIVE_EDGE, AT91F_SPI_Interrupt_handler);
   \   0000000C   82B0               SUB      SP,SP,#+8
   \   0000000E   1048               LDR      R0,??AT91F_SPI_Open_0+0x4  ;; AT91F_SPI_Interrupt_handler
   \   00000010   0090               STR      R0,[SP, #+0]
   \   00000012   2023               MOVS     R3,#+32
   \   00000014   0622               MOVS     R2,#+6
   \   00000016   0521               MOVS     R1,#+5
   \   00000018   0E48               LDR      R0,??AT91F_SPI_Open_0+0x8  ;; 0xfffff000
   \   0000001A   ........           BL       AT91F_AIC_ConfigureIt
   \   0000001E   02B0               ADD      SP,SP,#+8
    693          	  	AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_SPI);	
   \   00000020   0521               MOVS     R1,#+5
   \   00000022   0C48               LDR      R0,??AT91F_SPI_Open_0+0x8  ;; 0xfffff000
   \   00000024   ........           BL       AT91F_AIC_EnableIt
    694          
    695          		// Reset the SPI (note it is possible to reset the SPI even if SPI is disabled)
    696          		AT91F_SPI_SWReset (AT91C_BASE_SPI);
   \   00000028   0848               LDR      R0,??AT91F_SPI_Open_0  ;; 0xfffe0000
   \   0000002A   ........           BL       AT91F_SPI_SWReset
    697          
    698          		spi_Txempty_Flag = 0;
   \   0000002E   0A48               LDR      R0,??AT91F_SPI_Open_0+0xC  ;; spi_Txempty_Flag
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   0160               STR      R1,[R0, #+0]
    699          
    700          		pSPI -> SPI_IER =  	(AT91C_SPI_RDRF + AT91C_SPI_TDRE + AT91C_SPI_MODF + AT91C_SPI_OVRES+ 
    701          							 AT91C_SPI_NSSR + AT91C_SPI_TXEMPTY + AT91C_SPI_SPIENS + AT91C_SPI_TXBUFE);
   \   00000034   0948               LDR      R0,??AT91F_SPI_Open_0+0x10  ;; 0x1038f
   \   00000036   6061               STR      R0,[R4, #+20]
    702          
    703          		 AT91F_SPI_En_Dis (AT91C_BASE_SPI, ENABLE_SPI);
   \   00000038   0021               MOVS     R1,#+0
   \   0000003A   0448               LDR      R0,??AT91F_SPI_Open_0  ;; 0xfffe0000
   \   0000003C   ........           BL       AT91F_SPI_En_Dis
    704          
    705          		spi_Txempty_Flag = 0;
   \   00000040   0548               LDR      R0,??AT91F_SPI_Open_0+0xC  ;; spi_Txempty_Flag
   \   00000042   0021               MOVS     R1,#+0
   \   00000044   0160               STR      R1,[R0, #+0]
    706          }
   \   00000046   10BC               POP      {R4}
   \   00000048   01BC               POP      {R0}
   \   0000004A   0047               BX       R0               ;; return
   \                     ??AT91F_SPI_Open_0:
   \   0000004C   0000FEFF           DC32     0xfffe0000
   \   00000050   ........           DC32     AT91F_SPI_Interrupt_handler
   \   00000054   00F0FFFF           DC32     0xfffff000
   \   00000058   ........           DC32     spi_Txempty_Flag
   \   0000005C   8F030100           DC32     0x1038f

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   8F030100           DC32     0x1038f

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     SPI_Buff + 220

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   1400FEFF           DC32     0xfffe0014

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     spi_Endrx_Flag

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   ........           DC32     spi_Rxbuff_Flag

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable50:
   \   00000000   ........           DC32     pSPI_Buff

   \                                 In section Debug.txt, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   0000FEFF           DC32     0xfffe0000
    707          
    708          
    709          
    710          
    711          
    712          

   Maximum stack usage in bytes:

     Function                    .cstack
     --------                    -------
     AT91F_AIC_ConfigureIt           16
     AT91F_AIC_EnableIt               0
     AT91F_PDC_DisableRx              0
     AT91F_PDC_DisableTx              0
     AT91F_PDC_EnableRx               0
     AT91F_PDC_EnableTx               0
     AT91F_PDC_IsNextRxEmpty          0
     AT91F_PDC_IsNextTxEmpty          0
     AT91F_PDC_IsRxEmpty              0
     AT91F_PDC_IsTxEmpty              0
     AT91F_PDC_Open                   8
     AT91F_PDC_ReceiveFrame          24
     AT91F_PDC_SendFrame             24
     AT91F_PDC_SetNextRx              0
     AT91F_PDC_SetNextTx              0
     AT91F_PDC_SetRx                  0
     AT91F_PDC_SetTx                  0
     AT91F_PIO_CfgPeriph              0
     AT91F_PMC_EnablePeriphClock      0
     AT91F_SPI_CfgCs                  0
     AT91F_SPI_CfgPIO                 8
     AT91F_SPI_CfgPMC                 8
     AT91F_SPI_En_Dis                 8
     AT91F_SPI_Interrupt_handler      8
     AT91F_SPI_Open                  16
     AT91F_SPI_Read_Data              0
     AT91F_SPI_ReceiveFrame          16
     AT91F_SPI_SWReset                0
     AT91F_SPI_SendFrame             16
     AT91F_SPI_Send_Data              0
     AT91F_Set_SPI_CSR                8
     SPI_Response_Interpretation     16
     SPI_SendB_Buff                  16
     SPI_SendWord                     8
     SPI_Send_Executive              24
     SpiMaster_Init                  24


   Section sizes:

     Function/Label              Bytes
     --------------              -----
     AT91F_AIC_ConfigureIt         54
     AT91F_AIC_EnableIt            12
     AT91F_PDC_SetNextRx            6
     AT91F_PDC_SetNextTx            6
     AT91F_PDC_SetRx                6
     AT91F_PDC_SetTx                6
     AT91F_PDC_EnableTx             8
     AT91F_PDC_EnableRx             6
     AT91F_PDC_DisableTx            8
     AT91F_PDC_DisableRx            6
     AT91F_PDC_IsTxEmpty           14
     AT91F_PDC_IsNextTxEmpty       14
     AT91F_PDC_IsRxEmpty           14
     AT91F_PDC_IsNextRxEmpty       14
     AT91F_PDC_Open                74
     AT91F_PDC_SendFrame           78
     AT91F_PDC_ReceiveFrame        78
     AT91F_PIO_CfgPeriph           10
     AT91F_PMC_EnablePeriphClock    4
     AT91F_SPI_CfgCs               10
     AT91F_SPI_ReceiveFrame        26
     AT91F_SPI_SendFrame           26
     AT91F_SPI_CfgPMC              20
     AT91F_SPI_CfgPIO              28
     pSPI                           4
     spi_Rdrf_Flag                  1
     spi_Tdre_Flag                  1
     spi_Modf_Flag                  1
     spi_Ovred_Flag                 1
     spi_Nssr_Flag                  1
     spi_Txempty_Flag               4
     spi_Spiens_Flag                1
     spi_Endrx_Flag                 4
     spi_Endtx_Flag                 4
     spi_Rxbuff_Flag                4
     spi_Txbuff_Flag                4
     spi_Status                     4
     SPI_Buff                     224
     pSPI_Buff                      4
     AT91F_SPI_Interrupt_handler  120
     SpiMaster_Init               204
     SPI_SendB_Buff               208
     SPI_Send_Executive           228
     SPI_SendWord                  44
     zm_tmp1                        4
     zm_tmp2                        4
     zm_tmp3                        1
     Real_Cs_RF                     1
     SPI_Response_Interpretation   84
     AT91F_SPI_SWReset              6
     AT91F_SPI_En_Dis              64
     AT91F_Set_SPI_CSR             40
     AT91F_SPI_Read_Data           48
     AT91F_SPI_Send_Data           24
     AT91F_SPI_Open                96
     ??DataTable6                   4
     ??DataTable18                  4
     ??DataTable28                  4
     ??DataTable29                  4
     ??DataTable30                  4
     ??DataTable50                  4
     ??DataTable51                  4
      Others                       64

 
   263 bytes in section .bss
     9 bytes in section .data
 1 786 bytes in section Debug.txt
 
 1 194 bytes of CODE memory (+ 592 bytes shared)
   272 bytes of DATA memory

Errors: none
Warnings: 6
